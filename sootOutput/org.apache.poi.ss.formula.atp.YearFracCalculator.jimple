final class org.apache.poi.ss.formula.atp.YearFracCalculator extends java.lang.Object
{
    private static final java.util.TimeZone UTC_TIME_ZONE;
    private static final int MS_PER_HOUR;
    private static final int MS_PER_DAY;
    private static final int DAYS_PER_NORMAL_YEAR;
    private static final int DAYS_PER_LEAP_YEAR;
    private static final int LONG_MONTH_LEN;
    private static final int SHORT_MONTH_LEN;
    private static final int SHORT_FEB_LEN;
    private static final int LONG_FEB_LEN;

    private void <init>()
    {
        org.apache.poi.ss.formula.atp.YearFracCalculator r0;

        r0 := @this: org.apache.poi.ss.formula.atp.YearFracCalculator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static double calculate(double, double, int) throws org.apache.poi.ss.formula.eval.EvaluationException
    {
        java.lang.IllegalStateException $r2;
        org.apache.poi.ss.formula.eval.ErrorEval $r1;
        int i0, i1, i2, i3;
        org.apache.poi.ss.formula.eval.EvaluationException $r0;
        double d0, $d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;

        d0 := @parameter0: double;

        d2 := @parameter1: double;

        i0 := @parameter2: int;

        if i0 < 0 goto label01;

        if i0 < 5 goto label02;

     label01:
        $r0 = new org.apache.poi.ss.formula.eval.EvaluationException;

        $r1 = <org.apache.poi.ss.formula.eval.ErrorEval: org.apache.poi.ss.formula.eval.ErrorEval NUM_ERROR>;

        specialinvoke $r0.<org.apache.poi.ss.formula.eval.EvaluationException: void <init>(org.apache.poi.ss.formula.eval.ErrorEval)>($r1);

        throw $r0;

     label02:
        $d1 = staticinvoke <java.lang.Math: double floor(double)>(d0);

        i2 = (int) $d1;

        $d3 = staticinvoke <java.lang.Math: double floor(double)>(d2);

        i3 = (int) $d3;

        if i2 != i3 goto label03;

        return 0.0;

     label03:
        if i2 <= i3 goto label04;

        i1 = i2;

        i2 = i3;

        i3 = i1;

     label04:
        tableswitch(i0)
        {
            case 0: goto label05;
            case 1: goto label06;
            case 2: goto label07;
            case 3: goto label08;
            case 4: goto label09;
            default: goto label10;
        };

     label05:
        $d10 = staticinvoke <org.apache.poi.ss.formula.atp.YearFracCalculator: double basis0(int,int)>(i2, i3);

        return $d10;

     label06:
        $d9 = staticinvoke <org.apache.poi.ss.formula.atp.YearFracCalculator: double basis1(int,int)>(i2, i3);

        return $d9;

     label07:
        $d8 = staticinvoke <org.apache.poi.ss.formula.atp.YearFracCalculator: double basis2(int,int)>(i2, i3);

        return $d8;

     label08:
        $d6 = (double) i2;

        $d5 = (double) i3;

        $d7 = staticinvoke <org.apache.poi.ss.formula.atp.YearFracCalculator: double basis3(double,double)>($d6, $d5);

        return $d7;

     label09:
        $d4 = staticinvoke <org.apache.poi.ss.formula.atp.YearFracCalculator: double basis4(int,int)>(i2, i3);

        return $d4;

     label10:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("cannot happen");

        throw $r2;
    }

    public static double basis0(int, int)
    {
        int i0, i1, $i2, $i3, i4, i5;
        org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate $r0, $r1;
        boolean $z0, $z1;
        double $d0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = staticinvoke <org.apache.poi.ss.formula.atp.YearFracCalculator: org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate createDate(int)>(i0);

        $r1 = staticinvoke <org.apache.poi.ss.formula.atp.YearFracCalculator: org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate createDate(int)>(i1);

        i4 = $r0.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: int day>;

        i5 = $r1.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: int day>;

        if i4 != 31 goto label1;

        if i5 != 31 goto label1;

        i4 = 30;

        i5 = 30;

        goto label4;

     label1:
        if i4 != 31 goto label2;

        i4 = 30;

        goto label4;

     label2:
        if i4 != 30 goto label3;

        if i5 != 31 goto label3;

        i5 = 30;

        goto label4;

     label3:
        $i2 = $r0.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: int month>;

        if $i2 != 2 goto label4;

        $z0 = staticinvoke <org.apache.poi.ss.formula.atp.YearFracCalculator: boolean isLastDayOfMonth(org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate)>($r0);

        if $z0 == 0 goto label4;

        i4 = 30;

        $i3 = $r1.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: int month>;

        if $i3 != 2 goto label4;

        $z1 = staticinvoke <org.apache.poi.ss.formula.atp.YearFracCalculator: boolean isLastDayOfMonth(org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate)>($r1);

        if $z1 == 0 goto label4;

        i5 = 30;

     label4:
        $d0 = staticinvoke <org.apache.poi.ss.formula.atp.YearFracCalculator: double calculateAdjusted(org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate,org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate,int,int)>($r0, $r1, i4, i5);

        return $d0;
    }

    public static double basis1(int, int)
    {
        long $l4, $l5;
        int i0, i1, $i2, $i3, $i6;
        org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate $r0, $r1;
        boolean $z0, $z1;
        double d0, $d1, $d2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = staticinvoke <org.apache.poi.ss.formula.atp.YearFracCalculator: org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate createDate(int)>(i0);

        $r1 = staticinvoke <org.apache.poi.ss.formula.atp.YearFracCalculator: org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate createDate(int)>(i1);

        $z0 = staticinvoke <org.apache.poi.ss.formula.atp.YearFracCalculator: boolean isGreaterThanOneYear(org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate,org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate)>($r0, $r1);

        if $z0 == 0 goto label1;

        $i3 = $r0.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: int year>;

        $i2 = $r1.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: int year>;

        d0 = staticinvoke <org.apache.poi.ss.formula.atp.YearFracCalculator: double averageYearLength(int,int)>($i3, $i2);

        goto label3;

     label1:
        $z1 = staticinvoke <org.apache.poi.ss.formula.atp.YearFracCalculator: boolean shouldCountFeb29(org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate,org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate)>($r0, $r1);

        if $z1 == 0 goto label2;

        d0 = 366.0;

        goto label3;

     label2:
        d0 = 365.0;

     label3:
        $l4 = $r0.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: long tsMilliseconds>;

        $l5 = $r1.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: long tsMilliseconds>;

        $i6 = staticinvoke <org.apache.poi.ss.formula.atp.YearFracCalculator: int dateDiff(long,long)>($l4, $l5);

        $d1 = (double) $i6;

        $d2 = $d1 / d0;

        return $d2;
    }

    public static double basis2(int, int)
    {
        int i0, i1, $i2;
        double $d0, $d1;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        $i2 = i0 - i1;

        $d0 = (double) $i2;

        $d1 = $d0 / 360.0;

        return $d1;
    }

    public static double basis3(double, double)
    {
        double d0, d1, $d2, $d3;

        d1 := @parameter0: double;

        d0 := @parameter1: double;

        $d2 = d0 - d1;

        $d3 = $d2 / 365.0;

        return $d3;
    }

    public static double basis4(int, int)
    {
        int i0, i1, i2, i3;
        org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate $r0, $r1;
        double $d0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = staticinvoke <org.apache.poi.ss.formula.atp.YearFracCalculator: org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate createDate(int)>(i0);

        $r1 = staticinvoke <org.apache.poi.ss.formula.atp.YearFracCalculator: org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate createDate(int)>(i1);

        i2 = $r0.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: int day>;

        i3 = $r1.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: int day>;

        if i2 != 31 goto label1;

        i2 = 30;

     label1:
        if i3 != 31 goto label2;

        i3 = 30;

     label2:
        $d0 = staticinvoke <org.apache.poi.ss.formula.atp.YearFracCalculator: double calculateAdjusted(org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate,org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate,int,int)>($r0, $r1, i2, i3);

        return $d0;
    }

    private static double calculateAdjusted(org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate, org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate, int, int)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, $i10, $i11, $i12, $i13;
        org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate r0, r1;
        double d0, $d1;

        r1 := @parameter0: org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate;

        r0 := @parameter1: org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate;

        i9 := @parameter2: int;

        i8 := @parameter3: int;

        $i1 = r0.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: int year>;

        $i0 = r1.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: int year>;

        $i2 = $i1 - $i0;

        $i7 = $i2 * 360;

        $i4 = r0.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: int month>;

        $i3 = r1.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: int month>;

        $i5 = $i4 - $i3;

        $i6 = $i5 * 30;

        $i12 = $i7 + $i6;

        $i10 = i8 - i9;

        $i11 = $i10 * 1;

        $i13 = $i12 + $i11;

        d0 = (double) $i13;

        $d1 = d0 / 360.0;

        return $d1;
    }

    private static boolean isLastDayOfMonth(org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate)
    {
        int $i0, $i1, $i2;
        org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate r0;
        boolean $z0;

        r0 := @parameter0: org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate;

        $i0 = r0.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: int day>;

        if $i0 >= 28 goto label1;

        return 0;

     label1:
        $i1 = r0.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: int day>;

        $i2 = staticinvoke <org.apache.poi.ss.formula.atp.YearFracCalculator: int getLastDayOfMonth(org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate)>(r0);

        if $i1 != $i2 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private static int getLastDayOfMonth(org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate)
    {
        int $i0, $i1;
        org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate r0;
        boolean $z0;

        r0 := @parameter0: org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate;

        $i0 = r0.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: int month>;

        tableswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label3;
            case 3: goto label1;
            case 4: goto label2;
            case 5: goto label1;
            case 6: goto label2;
            case 7: goto label1;
            case 8: goto label1;
            case 9: goto label2;
            case 10: goto label1;
            case 11: goto label2;
            case 12: goto label1;
            default: goto label3;
        };

     label1:
        return 31;

     label2:
        return 30;

     label3:
        $i1 = r0.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: int year>;

        $z0 = staticinvoke <org.apache.poi.ss.formula.atp.YearFracCalculator: boolean isLeapYear(int)>($i1);

        if $z0 == 0 goto label4;

        return 29;

     label4:
        return 28;
    }

    private static boolean shouldCountFeb29(org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate, org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate r0, r1;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate;

        r1 := @parameter1: org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate;

        $i0 = r0.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: int year>;

        $z0 = staticinvoke <org.apache.poi.ss.formula.atp.YearFracCalculator: boolean isLeapYear(int)>($i0);

        if $z0 == 0 goto label01;

        $i6 = r0.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: int year>;

        $i5 = r1.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: int year>;

        if $i6 != $i5 goto label01;

        return 1;

     label01:
        $i1 = r1.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: int year>;

        $z1 = staticinvoke <org.apache.poi.ss.formula.atp.YearFracCalculator: boolean isLeapYear(int)>($i1);

        if $z0 != 0 goto label02;

        if $z1 != 0 goto label02;

        return 0;

     label02:
        if $z0 == 0 goto label05;

        $i4 = r0.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: int month>;

        lookupswitch($i4)
        {
            case 1: goto label03;
            case 2: goto label03;
            default: goto label04;
        };

     label03:
        return 1;

     label04:
        return 0;

     label05:
        if $z1 == 0 goto label12;

        $i2 = r1.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: int month>;

        lookupswitch($i2)
        {
            case 1: goto label06;
            case 2: goto label07;
            default: goto label08;
        };

     label06:
        return 0;

     label07:
        goto label09;

     label08:
        return 1;

     label09:
        $i3 = r1.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: int day>;

        if $i3 != 29 goto label10;

        $z2 = 1;

        goto label11;

     label10:
        $z2 = 0;

     label11:
        return $z2;

     label12:
        return 0;
    }

    private static int dateDiff(long, long)
    {
        long l0, l1, l2, $l3, $l4;
        int i5, $i6;
        java.lang.String $r6;
        double $d0, $d1, $d2;
        java.lang.RuntimeException $r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5;

        l1 := @parameter0: long;

        l0 := @parameter1: long;

        l2 = l0 - l1;

        $l3 = l2 % 86400000L;

        $l4 = $l3 / 3600000L;

        i5 = (int) $l4;

        lookupswitch(i5)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 23: goto label2;
            default: goto label2;
        };

     label1:
        goto label3;

     label2:
        $r0 = new java.lang.RuntimeException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected date diff between ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r0;

     label3:
        $d0 = (double) l2;

        $d1 = $d0 / 8.64E7;

        $d2 = 0.5 + $d1;

        $i6 = (int) $d2;

        return $i6;
    }

    private static double averageYearLength(int, int)
    {
        int i0, i1, $i2, $i3, i4, i5;
        double $d0, $d1, d2;
        boolean $z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i4 = 0;

        i5 = i0;

     label1:
        if i5 > i1 goto label3;

        i4 = i4 + 365;

        $z0 = staticinvoke <org.apache.poi.ss.formula.atp.YearFracCalculator: boolean isLeapYear(int)>(i5);

        if $z0 == 0 goto label2;

        i4 = i4 + 1;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        $i2 = i1 - i0;

        $i3 = $i2 + 1;

        d2 = (double) $i3;

        $d0 = (double) i4;

        $d1 = $d0 / d2;

        return $d1;
    }

    private static boolean isLeapYear(int)
    {
        int i0, $i1, $i2, $i3;

        i0 := @parameter0: int;

        $i1 = i0 % 4;

        if $i1 == 0 goto label1;

        return 0;

     label1:
        $i2 = i0 % 400;

        if $i2 != 0 goto label2;

        return 1;

     label2:
        $i3 = i0 % 100;

        if $i3 != 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    private static boolean isGreaterThanOneYear(org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate, org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate r0, r1;
        boolean $z0;

        r0 := @parameter0: org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate;

        r1 := @parameter1: org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate;

        $i1 = r0.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: int year>;

        $i0 = r1.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: int year>;

        if $i1 != $i0 goto label1;

        return 0;

     label1:
        $i2 = r0.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: int year>;

        $i4 = $i2 + 1;

        $i3 = r1.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: int year>;

        if $i4 == $i3 goto label2;

        return 1;

     label2:
        $i6 = r0.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: int month>;

        $i5 = r1.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: int month>;

        if $i6 <= $i5 goto label3;

        return 0;

     label3:
        $i8 = r0.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: int month>;

        $i7 = r1.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: int month>;

        if $i8 >= $i7 goto label4;

        return 1;

     label4:
        $i10 = r0.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: int day>;

        $i9 = r1.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: int day>;

        if $i10 >= $i9 goto label5;

        $z0 = 1;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        return $z0;
    }

    private static org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate createDate(int)
    {
        java.util.GregorianCalendar $r0;
        java.util.TimeZone $r1;
        int i0;
        org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate $r2;

        i0 := @parameter0: int;

        $r0 = new java.util.GregorianCalendar;

        $r1 = <org.apache.poi.ss.formula.atp.YearFracCalculator: java.util.TimeZone UTC_TIME_ZONE>;

        specialinvoke $r0.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>($r1);

        staticinvoke <org.apache.poi.ss.usermodel.DateUtil: void setCalendar(java.util.Calendar,int,int,boolean,boolean)>($r0, i0, 0, 0, 0);

        $r2 = new org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate;

        specialinvoke $r2.<org.apache.poi.ss.formula.atp.YearFracCalculator$SimpleDate: void <init>(java.util.Calendar)>($r0);

        return $r2;
    }

    static void <clinit>()
    {
        java.util.TimeZone $r0;

        <org.apache.poi.ss.formula.atp.YearFracCalculator: int LONG_FEB_LEN> = 29;

        <org.apache.poi.ss.formula.atp.YearFracCalculator: int SHORT_FEB_LEN> = 28;

        <org.apache.poi.ss.formula.atp.YearFracCalculator: int SHORT_MONTH_LEN> = 30;

        <org.apache.poi.ss.formula.atp.YearFracCalculator: int LONG_MONTH_LEN> = 31;

        <org.apache.poi.ss.formula.atp.YearFracCalculator: int DAYS_PER_LEAP_YEAR> = 366;

        <org.apache.poi.ss.formula.atp.YearFracCalculator: int DAYS_PER_NORMAL_YEAR> = 365;

        <org.apache.poi.ss.formula.atp.YearFracCalculator: int MS_PER_DAY> = 86400000;

        <org.apache.poi.ss.formula.atp.YearFracCalculator: int MS_PER_HOUR> = 3600000;

        $r0 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        <org.apache.poi.ss.formula.atp.YearFracCalculator: java.util.TimeZone UTC_TIME_ZONE> = $r0;

        return;
    }
}
