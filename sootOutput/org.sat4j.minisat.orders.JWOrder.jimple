public class org.sat4j.minisat.orders.JWOrder extends org.sat4j.minisat.orders.VarOrder
{
    private static final long serialVersionUID;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        org.sat4j.minisat.orders.JWOrder r0;

        r0 := @this: org.sat4j.minisat.orders.JWOrder;

        specialinvoke r0.<org.sat4j.minisat.orders.VarOrder: void <init>()>();

        return;
    }

    private int computeWeight(int)
    {
        org.sat4j.minisat.orders.JWOrder r0;
        byte $b23, $b29;
        org.sat4j.specs.IVec $r11, $r14;
        boolean $z0;
        long $l9, $l10, $l11, $l12, $l13, $l14, $l16, $l17, $l18, $l19, $l20, $l21, $l22, l30;
        java.lang.AssertionError $r16;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i15, $i24, $i25, $i26, $i27, $i28, $i31;
        org.sat4j.minisat.core.ILits $r1, $r3, $r5, $r7, $r9, $r12;
        org.sat4j.minisat.core.ILits23 $r2, $r4, $r6, $r8, $r10, $r13;

        r0 := @this: org.sat4j.minisat.orders.JWOrder;

        i0 := @parameter0: int;

        $i1 = staticinvoke <org.sat4j.core.LiteralsUtils: int posLit(int)>(i0);

        $r1 = r0.<org.sat4j.minisat.orders.JWOrder: org.sat4j.minisat.core.ILits lits>;

        $r2 = (org.sat4j.minisat.core.ILits23) $r1;

        $i2 = interfaceinvoke $r2.<org.sat4j.minisat.core.ILits23: int nBinaryClauses(int)>($i1);

        $r3 = r0.<org.sat4j.minisat.orders.JWOrder: org.sat4j.minisat.core.ILits lits>;

        $r4 = (org.sat4j.minisat.core.ILits23) $r3;

        $i3 = staticinvoke <org.sat4j.core.LiteralsUtils: int 'neg'(int)>($i1);

        $i4 = interfaceinvoke $r4.<org.sat4j.minisat.core.ILits23: int nBinaryClauses(int)>($i3);

        $r5 = r0.<org.sat4j.minisat.orders.JWOrder: org.sat4j.minisat.core.ILits lits>;

        $r6 = (org.sat4j.minisat.core.ILits23) $r5;

        $i5 = interfaceinvoke $r6.<org.sat4j.minisat.core.ILits23: int nTernaryClauses(int)>($i1);

        $r7 = r0.<org.sat4j.minisat.orders.JWOrder: org.sat4j.minisat.core.ILits lits>;

        $r8 = (org.sat4j.minisat.core.ILits23) $r7;

        $i6 = staticinvoke <org.sat4j.core.LiteralsUtils: int 'neg'(int)>($i1);

        $i7 = interfaceinvoke $r8.<org.sat4j.minisat.core.ILits23: int nTernaryClauses(int)>($i6);

        $i8 = $i2 * $i4;

        $l9 = (long) $i8;

        $l11 = $l9 * 100L;

        $l10 = (long) $i2;

        $l13 = $l11 + $l10;

        $l12 = (long) $i4;

        $l14 = $l13 + $l12;

        $l18 = $l14 * 5L;

        $i15 = $i5 * $i7;

        $l16 = (long) $i15;

        $l17 = $l16 * 10L;

        $l20 = $l18 + $l17;

        $l19 = (long) $i5;

        $l22 = $l20 + $l19;

        $l21 = (long) $i7;

        l30 = $l22 + $l21;

        $z0 = <org.sat4j.minisat.orders.JWOrder: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $b29 = l30 cmp 2147483647L;

        $i31 = (int) $b29;

        if $i31 <= 0 goto label1;

        $r16 = new java.lang.AssertionError;

        specialinvoke $r16.<java.lang.AssertionError: void <init>()>();

        throw $r16;

     label1:
        $b23 = l30 cmp 0L;

        if $b23 != 0 goto label2;

        $r9 = r0.<org.sat4j.minisat.orders.JWOrder: org.sat4j.minisat.core.ILits lits>;

        $r10 = (org.sat4j.minisat.core.ILits23) $r9;

        $r11 = interfaceinvoke $r10.<org.sat4j.minisat.core.ILits23: org.sat4j.specs.IVec attaches(int)>($i1);

        $i25 = interfaceinvoke $r11.<org.sat4j.specs.IVec: int size()>();

        $r12 = r0.<org.sat4j.minisat.orders.JWOrder: org.sat4j.minisat.core.ILits lits>;

        $r13 = (org.sat4j.minisat.core.ILits23) $r12;

        $i26 = staticinvoke <org.sat4j.core.LiteralsUtils: int 'neg'(int)>($i1);

        $r14 = interfaceinvoke $r13.<org.sat4j.minisat.core.ILits23: org.sat4j.specs.IVec attaches(int)>($i26);

        $i27 = interfaceinvoke $r14.<org.sat4j.specs.IVec: int size()>();

        $i28 = $i25 + $i27;

        l30 = (long) $i28;

     label2:
        $i24 = (int) l30;

        return $i24;
    }

    public void init()
    {
        double[] $r7;
        org.sat4j.minisat.orders.JWOrder r0;
        java.util.ArrayList $r1;
        org.sat4j.minisat.orders.ValuedLit $r8, r11;
        int[] $r2, $r3, $r5, $r6, $r9, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14;
        double $d0;
        java.lang.Object $r4;

        r0 := @this: org.sat4j.minisat.orders.JWOrder;

        specialinvoke r0.<org.sat4j.minisat.orders.VarOrder: void init()>();

        $r1 = new java.util.ArrayList;

        $r2 = r0.<org.sat4j.minisat.orders.JWOrder: int[] order>;

        $i0 = lengthof $r2;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0);

        i13 = 1;

     label1:
        $r3 = r0.<org.sat4j.minisat.orders.JWOrder: int[] order>;

        $i1 = lengthof $r3;

        if i13 >= $i1 goto label2;

        $r8 = new org.sat4j.minisat.orders.ValuedLit;

        $r9 = r0.<org.sat4j.minisat.orders.JWOrder: int[] order>;

        $i11 = $r9[i13];

        $r10 = r0.<org.sat4j.minisat.orders.JWOrder: int[] order>;

        $i9 = $r10[i13];

        $i10 = $i9 >> 1;

        $i12 = specialinvoke r0.<org.sat4j.minisat.orders.JWOrder: int computeWeight(int)>($i10);

        specialinvoke $r8.<org.sat4j.minisat.orders.ValuedLit: void <init>(int,int)>($i11, $i12);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r8);

        i13 = i13 + 1;

        goto label1;

     label2:
        staticinvoke <java.util.Collections: void sort(java.util.List)>($r1);

        i14 = 0;

     label3:
        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i14 >= $i2 goto label4;

        $r4 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i14);

        r11 = (org.sat4j.minisat.orders.ValuedLit) $r4;

        $r5 = r0.<org.sat4j.minisat.orders.JWOrder: int[] order>;

        $i4 = i14 + 1;

        $i3 = r11.<org.sat4j.minisat.orders.ValuedLit: int id>;

        $r5[$i4] = $i3;

        $i5 = r11.<org.sat4j.minisat.orders.ValuedLit: int id>;

        $i6 = staticinvoke <org.sat4j.core.LiteralsUtils: int var(int)>($i5);

        $r6 = r0.<org.sat4j.minisat.orders.JWOrder: int[] varpos>;

        $i7 = i14 + 1;

        $r6[$i6] = $i7;

        $r7 = r0.<org.sat4j.minisat.orders.JWOrder: double[] activity>;

        $i8 = r11.<org.sat4j.minisat.orders.ValuedLit: int count>;

        $d0 = (double) $i8;

        $r7[$i6] = $d0;

        i14 = i14 + 1;

        goto label3;

     label4:
        r0.<org.sat4j.minisat.orders.JWOrder: int lastVar> = 1;

        return;
    }

    protected void updateActivity(int)
    {
        int i0, $i1;
        double[] $r1;
        org.sat4j.minisat.orders.JWOrder r0;
        double $d0;

        r0 := @this: org.sat4j.minisat.orders.JWOrder;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.minisat.orders.JWOrder: double[] activity>;

        $i1 = specialinvoke r0.<org.sat4j.minisat.orders.JWOrder: int computeWeight(int)>(i0);

        $d0 = (double) $i1;

        $r1[i0] = $d0;

        return;
    }

    public java.lang.String toString()
    {
        org.sat4j.minisat.orders.JWOrder r0;

        r0 := @this: org.sat4j.minisat.orders.JWOrder;

        return "Jeroslow-Wang static like heuristics updated when new clauses are learnt";
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.sat4j.minisat.orders.JWOrder: long serialVersionUID> = 1L;

        $r0 = class "Lorg/sat4j/minisat/orders/JWOrder;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.sat4j.minisat.orders.JWOrder: boolean $assertionsDisabled> = $z1;

        return;
    }
}
