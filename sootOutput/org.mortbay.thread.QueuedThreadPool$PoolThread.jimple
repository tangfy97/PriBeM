public class org.mortbay.thread.QueuedThreadPool$PoolThread extends java.lang.Thread
{
    java.lang.Runnable _job;
    private final org.mortbay.thread.QueuedThreadPool this$0;

    void <init>(org.mortbay.thread.QueuedThreadPool)
    {
        org.mortbay.thread.QueuedThreadPool r1;
        org.mortbay.thread.QueuedThreadPool$PoolThread r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.mortbay.thread.QueuedThreadPool$PoolThread;

        r1 := @parameter0: org.mortbay.thread.QueuedThreadPool;

        r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0> = r1;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: java.lang.Runnable _job> = null;

        $z0 = staticinvoke <org.mortbay.thread.QueuedThreadPool: boolean access$100(org.mortbay.thread.QueuedThreadPool)>(r1);

        virtualinvoke r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: void setDaemon(boolean)>($z0);

        $i0 = staticinvoke <org.mortbay.thread.QueuedThreadPool: int access$200(org.mortbay.thread.QueuedThreadPool)>(r1);

        virtualinvoke r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: void setPriority(int)>($i0);

        return;
    }

    public void run()
    {
        org.mortbay.thread.QueuedThreadPool$PoolThread r0;
        byte $b11;
        java.util.Set $r8, $r14, $r33, $r69, $r79;
        java.lang.Throwable $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r81, $r82;
        org.mortbay.thread.QueuedThreadPool $r1, $r3, $r5, $r7, $r9, $r10, $r12, $r13, $r15, $r17, $r18, $r20, $r21, $r22, $r23, $r24, $r26, $r28, $r30, $r32, $r34, $r35, $r37, $r38, $r39, $r41, $r42, $r44, $r45, $r46, $r48, $r62, $r64, $r66, $r68, $r70, $r72, $r74, $r76, $r78, $r80, $r84;
        long $l4, $l6, $l7, $l8, $l10;
        java.lang.Runnable $r16, r83, r85, r86, r87, r88;
        java.lang.Runnable[] $r40, $r43, $r47;
        boolean z0, $z1;
        java.util.List $r4, $r19, $r25, $r29, $r36, $r65, $r75;
        int $i0, $i1, $i2, $i3, $i5, $i9, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        java.lang.InterruptedException $r71;
        java.lang.Object $r2, $r6, $r11, $r27, $r31, $r63, $r67, $r73, $r77;

        r0 := @this: org.mortbay.thread.QueuedThreadPool$PoolThread;

        z0 = 0;

        r83 = null;

     label01:
        $r84 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        $z1 = virtualinvoke $r84.<org.mortbay.thread.QueuedThreadPool: boolean isRunning()>();

        if $z1 == 0 goto label22;

        if r83 == null goto label02;

        z0 = 0;

        interfaceinvoke r83.<java.lang.Runnable: void run()>();

     label02:
        $r10 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        $r11 = staticinvoke <org.mortbay.thread.QueuedThreadPool: java.lang.Object access$300(org.mortbay.thread.QueuedThreadPool)>($r10);

        entermonitor $r11;

     label03:
        $r12 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        $i0 = staticinvoke <org.mortbay.thread.QueuedThreadPool: int access$400(org.mortbay.thread.QueuedThreadPool)>($r12);

        if $i0 <= 0 goto label06;

        $r38 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        staticinvoke <org.mortbay.thread.QueuedThreadPool: int access$410(org.mortbay.thread.QueuedThreadPool)>($r38);

        $r39 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        $r40 = staticinvoke <org.mortbay.thread.QueuedThreadPool: java.lang.Runnable[] access$500(org.mortbay.thread.QueuedThreadPool)>($r39);

        $r41 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        $i14 = staticinvoke <org.mortbay.thread.QueuedThreadPool: int access$600(org.mortbay.thread.QueuedThreadPool)>($r41);

        r83 = $r40[$i14];

        $r42 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        $r43 = staticinvoke <org.mortbay.thread.QueuedThreadPool: java.lang.Runnable[] access$500(org.mortbay.thread.QueuedThreadPool)>($r42);

        $r44 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        $i15 = staticinvoke <org.mortbay.thread.QueuedThreadPool: int access$608(org.mortbay.thread.QueuedThreadPool)>($r44);

        $r43[$i15] = null;

        $r45 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        $i16 = staticinvoke <org.mortbay.thread.QueuedThreadPool: int access$600(org.mortbay.thread.QueuedThreadPool)>($r45);

        $r46 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        $r47 = staticinvoke <org.mortbay.thread.QueuedThreadPool: java.lang.Runnable[] access$500(org.mortbay.thread.QueuedThreadPool)>($r46);

        $i17 = lengthof $r47;

        if $i16 != $i17 goto label04;

        $r48 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        staticinvoke <org.mortbay.thread.QueuedThreadPool: int access$602(org.mortbay.thread.QueuedThreadPool,int)>($r48, 0);

     label04:
        exitmonitor $r11;

     label05:
        goto label01;

     label06:
        $r13 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        $r14 = staticinvoke <org.mortbay.thread.QueuedThreadPool: java.util.Set access$700(org.mortbay.thread.QueuedThreadPool)>($r13);

        $i1 = interfaceinvoke $r14.<java.util.Set: int size()>();

        $r15 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        $i2 = staticinvoke <org.mortbay.thread.QueuedThreadPool: int access$800(org.mortbay.thread.QueuedThreadPool)>($r15);

        if $i1 <= $i2 goto label10;

        $r20 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        $i5 = staticinvoke <org.mortbay.thread.QueuedThreadPool: int access$900(org.mortbay.thread.QueuedThreadPool)>($r20);

        if $i1 > $i5 goto label07;

        $r35 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        $r36 = staticinvoke <org.mortbay.thread.QueuedThreadPool: java.util.List access$1000(org.mortbay.thread.QueuedThreadPool)>($r35);

        $i12 = interfaceinvoke $r36.<java.util.List: int size()>();

        $r37 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        $i13 = staticinvoke <org.mortbay.thread.QueuedThreadPool: int access$1100(org.mortbay.thread.QueuedThreadPool)>($r37);

        if $i12 <= $i13 goto label10;

     label07:
        $l6 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r21 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        $l7 = staticinvoke <org.mortbay.thread.QueuedThreadPool: long access$1200(org.mortbay.thread.QueuedThreadPool)>($r21);

        $l8 = $l6 - $l7;

        $r22 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        $i9 = virtualinvoke $r22.<org.mortbay.thread.QueuedThreadPool: int getMaxIdleTimeMs()>();

        $l10 = (long) $i9;

        $b11 = $l8 cmp $l10;

        $i18 = (int) $b11;

        if $i18 <= 0 goto label10;

        $r23 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        staticinvoke <org.mortbay.thread.QueuedThreadPool: long access$1202(org.mortbay.thread.QueuedThreadPool,long)>($r23, $l6);

        $r24 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        $r25 = staticinvoke <org.mortbay.thread.QueuedThreadPool: java.util.List access$1000(org.mortbay.thread.QueuedThreadPool)>($r24);

        interfaceinvoke $r25.<java.util.List: boolean remove(java.lang.Object)>(r0);

        exitmonitor $r11;

     label08:
        goto label29;

     label09:
        return;

     label10:
        if z0 != 0 goto label11;

        $r18 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        $r19 = staticinvoke <org.mortbay.thread.QueuedThreadPool: java.util.List access$1000(org.mortbay.thread.QueuedThreadPool)>($r18);

        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>(r0);

        z0 = 1;

     label11:
        exitmonitor $r11;

     label12:
        goto label15;

     label13:
        $r82 := @caughtexception;

        exitmonitor $r11;

     label14:
        throw $r82;

     label15:
        entermonitor r0;

     label16:
        $r16 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: java.lang.Runnable _job>;

        if $r16 != null goto label17;

        $r17 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        $i3 = virtualinvoke $r17.<org.mortbay.thread.QueuedThreadPool: int getMaxIdleTimeMs()>();

        $l4 = (long) $i3;

        virtualinvoke r0.<java.lang.Object: void wait(long)>($l4);

     label17:
        r83 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: java.lang.Runnable _job>;

        r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: java.lang.Runnable _job> = null;

        exitmonitor r0;

     label18:
        goto label21;

     label19:
        $r81 := @caughtexception;

        exitmonitor r0;

     label20:
        throw $r81;

     label21:
        goto label01;

     label22:
        goto label46;

     label23:
        goto label28;

     label24:
        $r71 := @caughtexception;

        staticinvoke <org.mortbay.log.Log: void ignore(java.lang.Throwable)>($r71);

        goto label63;

     label25:
        goto label28;

     label26:
        $r61 := @caughtexception;

        goto label80;

     label27:
        throw $r61;

     label28:
        return;

     label29:
        $r26 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        $r27 = staticinvoke <org.mortbay.thread.QueuedThreadPool: java.lang.Object access$300(org.mortbay.thread.QueuedThreadPool)>($r26);

        entermonitor $r27;

     label30:
        $r28 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        $r29 = staticinvoke <org.mortbay.thread.QueuedThreadPool: java.util.List access$1000(org.mortbay.thread.QueuedThreadPool)>($r28);

        interfaceinvoke $r29.<java.util.List: boolean remove(java.lang.Object)>(r0);

        exitmonitor $r27;

     label31:
        goto label34;

     label32:
        $r60 := @caughtexception;

        exitmonitor $r27;

     label33:
        throw $r60;

     label34:
        $r30 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        $r31 = staticinvoke <org.mortbay.thread.QueuedThreadPool: java.lang.Object access$1300(org.mortbay.thread.QueuedThreadPool)>($r30);

        entermonitor $r31;

     label35:
        $r32 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        $r33 = staticinvoke <org.mortbay.thread.QueuedThreadPool: java.util.Set access$700(org.mortbay.thread.QueuedThreadPool)>($r32);

        interfaceinvoke $r33.<java.util.Set: boolean remove(java.lang.Object)>(r0);

        exitmonitor $r31;

     label36:
        goto label39;

     label37:
        $r59 := @caughtexception;

        exitmonitor $r31;

     label38:
        throw $r59;

     label39:
        entermonitor r0;

     label40:
        r85 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: java.lang.Runnable _job>;

        exitmonitor r0;

     label41:
        goto label44;

     label42:
        $r58 := @caughtexception;

        exitmonitor r0;

     label43:
        throw $r58;

     label44:
        if r85 == null goto label45;

        $r34 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        virtualinvoke $r34.<org.mortbay.thread.QueuedThreadPool: boolean dispatch(java.lang.Runnable)>(r85);

     label45:
        goto label09;

     label46:
        $r1 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        $r2 = staticinvoke <org.mortbay.thread.QueuedThreadPool: java.lang.Object access$300(org.mortbay.thread.QueuedThreadPool)>($r1);

        entermonitor $r2;

     label47:
        $r3 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        $r4 = staticinvoke <org.mortbay.thread.QueuedThreadPool: java.util.List access$1000(org.mortbay.thread.QueuedThreadPool)>($r3);

        interfaceinvoke $r4.<java.util.List: boolean remove(java.lang.Object)>(r0);

        exitmonitor $r2;

     label48:
        goto label51;

     label49:
        $r57 := @caughtexception;

        exitmonitor $r2;

     label50:
        throw $r57;

     label51:
        $r5 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        $r6 = staticinvoke <org.mortbay.thread.QueuedThreadPool: java.lang.Object access$1300(org.mortbay.thread.QueuedThreadPool)>($r5);

        entermonitor $r6;

     label52:
        $r7 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        $r8 = staticinvoke <org.mortbay.thread.QueuedThreadPool: java.util.Set access$700(org.mortbay.thread.QueuedThreadPool)>($r7);

        interfaceinvoke $r8.<java.util.Set: boolean remove(java.lang.Object)>(r0);

        exitmonitor $r6;

     label53:
        goto label56;

     label54:
        $r56 := @caughtexception;

        exitmonitor $r6;

     label55:
        throw $r56;

     label56:
        entermonitor r0;

     label57:
        r86 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: java.lang.Runnable _job>;

        exitmonitor r0;

     label58:
        goto label61;

     label59:
        $r55 := @caughtexception;

        exitmonitor r0;

     label60:
        throw $r55;

     label61:
        if r86 == null goto label62;

        $r9 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        virtualinvoke $r9.<org.mortbay.thread.QueuedThreadPool: boolean dispatch(java.lang.Runnable)>(r86);

     label62:
        goto label23;

     label63:
        $r72 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        $r73 = staticinvoke <org.mortbay.thread.QueuedThreadPool: java.lang.Object access$300(org.mortbay.thread.QueuedThreadPool)>($r72);

        entermonitor $r73;

     label64:
        $r74 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        $r75 = staticinvoke <org.mortbay.thread.QueuedThreadPool: java.util.List access$1000(org.mortbay.thread.QueuedThreadPool)>($r74);

        interfaceinvoke $r75.<java.util.List: boolean remove(java.lang.Object)>(r0);

        exitmonitor $r73;

     label65:
        goto label68;

     label66:
        $r54 := @caughtexception;

        exitmonitor $r73;

     label67:
        throw $r54;

     label68:
        $r76 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        $r77 = staticinvoke <org.mortbay.thread.QueuedThreadPool: java.lang.Object access$1300(org.mortbay.thread.QueuedThreadPool)>($r76);

        entermonitor $r77;

     label69:
        $r78 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        $r79 = staticinvoke <org.mortbay.thread.QueuedThreadPool: java.util.Set access$700(org.mortbay.thread.QueuedThreadPool)>($r78);

        interfaceinvoke $r79.<java.util.Set: boolean remove(java.lang.Object)>(r0);

        exitmonitor $r77;

     label70:
        goto label73;

     label71:
        $r53 := @caughtexception;

        exitmonitor $r77;

     label72:
        throw $r53;

     label73:
        entermonitor r0;

     label74:
        r87 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: java.lang.Runnable _job>;

        exitmonitor r0;

     label75:
        goto label78;

     label76:
        $r52 := @caughtexception;

        exitmonitor r0;

     label77:
        throw $r52;

     label78:
        if r87 == null goto label79;

        $r80 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        virtualinvoke $r80.<org.mortbay.thread.QueuedThreadPool: boolean dispatch(java.lang.Runnable)>(r87);

     label79:
        goto label25;

     label80:
        $r62 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        $r63 = staticinvoke <org.mortbay.thread.QueuedThreadPool: java.lang.Object access$300(org.mortbay.thread.QueuedThreadPool)>($r62);

        entermonitor $r63;

     label81:
        $r64 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        $r65 = staticinvoke <org.mortbay.thread.QueuedThreadPool: java.util.List access$1000(org.mortbay.thread.QueuedThreadPool)>($r64);

        interfaceinvoke $r65.<java.util.List: boolean remove(java.lang.Object)>(r0);

        exitmonitor $r63;

     label82:
        goto label85;

     label83:
        $r51 := @caughtexception;

        exitmonitor $r63;

     label84:
        throw $r51;

     label85:
        $r66 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        $r67 = staticinvoke <org.mortbay.thread.QueuedThreadPool: java.lang.Object access$1300(org.mortbay.thread.QueuedThreadPool)>($r66);

        entermonitor $r67;

     label86:
        $r68 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        $r69 = staticinvoke <org.mortbay.thread.QueuedThreadPool: java.util.Set access$700(org.mortbay.thread.QueuedThreadPool)>($r68);

        interfaceinvoke $r69.<java.util.Set: boolean remove(java.lang.Object)>(r0);

        exitmonitor $r67;

     label87:
        goto label90;

     label88:
        $r50 := @caughtexception;

        exitmonitor $r67;

     label89:
        throw $r50;

     label90:
        entermonitor r0;

     label91:
        r88 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: java.lang.Runnable _job>;

        exitmonitor r0;

     label92:
        goto label95;

     label93:
        $r49 := @caughtexception;

        exitmonitor r0;

     label94:
        throw $r49;

     label95:
        if r88 == null goto label96;

        $r70 = r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: org.mortbay.thread.QueuedThreadPool this$0>;

        virtualinvoke $r70.<org.mortbay.thread.QueuedThreadPool: boolean dispatch(java.lang.Runnable)>(r88);

     label96:
        goto label27;

        catch java.lang.Throwable from label03 to label05 with label13;
        catch java.lang.Throwable from label06 to label08 with label13;
        catch java.lang.Throwable from label10 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
        catch java.lang.Throwable from label16 to label18 with label19;
        catch java.lang.Throwable from label19 to label20 with label19;
        catch java.lang.InterruptedException from label01 to label09 with label24;
        catch java.lang.InterruptedException from label10 to label22 with label24;
        catch java.lang.Throwable from label01 to label09 with label26;
        catch java.lang.Throwable from label10 to label23 with label26;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch java.lang.Throwable from label26 to label27 with label26;
        catch java.lang.Throwable from label30 to label31 with label32;
        catch java.lang.Throwable from label32 to label33 with label32;
        catch java.lang.Throwable from label35 to label36 with label37;
        catch java.lang.Throwable from label37 to label38 with label37;
        catch java.lang.Throwable from label40 to label41 with label42;
        catch java.lang.Throwable from label42 to label43 with label42;
        catch java.lang.Throwable from label47 to label48 with label49;
        catch java.lang.Throwable from label49 to label50 with label49;
        catch java.lang.Throwable from label52 to label53 with label54;
        catch java.lang.Throwable from label54 to label55 with label54;
        catch java.lang.Throwable from label57 to label58 with label59;
        catch java.lang.Throwable from label59 to label60 with label59;
        catch java.lang.Throwable from label64 to label65 with label66;
        catch java.lang.Throwable from label66 to label67 with label66;
        catch java.lang.Throwable from label69 to label70 with label71;
        catch java.lang.Throwable from label71 to label72 with label71;
        catch java.lang.Throwable from label74 to label75 with label76;
        catch java.lang.Throwable from label76 to label77 with label76;
        catch java.lang.Throwable from label81 to label82 with label83;
        catch java.lang.Throwable from label83 to label84 with label83;
        catch java.lang.Throwable from label86 to label87 with label88;
        catch java.lang.Throwable from label88 to label89 with label88;
        catch java.lang.Throwable from label91 to label92 with label93;
        catch java.lang.Throwable from label93 to label94 with label93;
    }

    void dispatch(java.lang.Runnable)
    {
        org.mortbay.thread.QueuedThreadPool$PoolThread r0;
        java.lang.Throwable $r2;
        java.lang.Runnable r1;

        r0 := @this: org.mortbay.thread.QueuedThreadPool$PoolThread;

        r1 := @parameter0: java.lang.Runnable;

        entermonitor r0;

     label1:
        r0.<org.mortbay.thread.QueuedThreadPool$PoolThread: java.lang.Runnable _job> = r1;

        virtualinvoke r0.<java.lang.Object: void notify()>();

        exitmonitor r0;

     label2:
        goto label5;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
