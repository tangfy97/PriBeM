public class org.apache.lucene.analysis.compound.hyphenation.Hyphen extends java.lang.Object
{
    public java.lang.String preBreak;
    public java.lang.String noBreak;
    public java.lang.String postBreak;

    void <init>(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.lucene.analysis.compound.hyphenation.Hyphen r0;
        java.lang.String r1, r2, r3;

        r0 := @this: org.apache.lucene.analysis.compound.hyphenation.Hyphen;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.analysis.compound.hyphenation.Hyphen: java.lang.String preBreak> = r1;

        r0.<org.apache.lucene.analysis.compound.hyphenation.Hyphen: java.lang.String noBreak> = r2;

        r0.<org.apache.lucene.analysis.compound.hyphenation.Hyphen: java.lang.String postBreak> = r3;

        return;
    }

    void <init>(java.lang.String)
    {
        org.apache.lucene.analysis.compound.hyphenation.Hyphen r0;
        java.lang.String r1;

        r0 := @this: org.apache.lucene.analysis.compound.hyphenation.Hyphen;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.analysis.compound.hyphenation.Hyphen: java.lang.String preBreak> = r1;

        r0.<org.apache.lucene.analysis.compound.hyphenation.Hyphen: java.lang.String noBreak> = null;

        r0.<org.apache.lucene.analysis.compound.hyphenation.Hyphen: java.lang.String postBreak> = null;

        return;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.analysis.compound.hyphenation.Hyphen r0;
        java.lang.StringBuilder $r5;
        java.lang.String $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.compound.hyphenation.Hyphen;

        $r1 = r0.<org.apache.lucene.analysis.compound.hyphenation.Hyphen: java.lang.String noBreak>;

        if $r1 != null goto label1;

        $r2 = r0.<org.apache.lucene.analysis.compound.hyphenation.Hyphen: java.lang.String postBreak>;

        if $r2 != null goto label1;

        $r3 = r0.<org.apache.lucene.analysis.compound.hyphenation.Hyphen: java.lang.String preBreak>;

        if $r3 == null goto label1;

        $r4 = r0.<org.apache.lucene.analysis.compound.hyphenation.Hyphen: java.lang.String preBreak>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("-");

        if $z0 == 0 goto label1;

        return "-";

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("{");

        $r6 = r0.<org.apache.lucene.analysis.compound.hyphenation.Hyphen: java.lang.String preBreak>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}{");

        $r7 = r0.<org.apache.lucene.analysis.compound.hyphenation.Hyphen: java.lang.String postBreak>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}{");

        $r8 = r0.<org.apache.lucene.analysis.compound.hyphenation.Hyphen: java.lang.String noBreak>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }
}
