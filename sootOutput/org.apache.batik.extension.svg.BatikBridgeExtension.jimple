public class org.apache.batik.extension.svg.BatikBridgeExtension extends java.lang.Object implements org.apache.batik.bridge.BridgeExtension
{

    public void <init>()
    {
        org.apache.batik.extension.svg.BatikBridgeExtension r0;

        r0 := @this: org.apache.batik.extension.svg.BatikBridgeExtension;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public float getPriority()
    {
        org.apache.batik.extension.svg.BatikBridgeExtension r0;

        r0 := @this: org.apache.batik.extension.svg.BatikBridgeExtension;

        return 1.0F;
    }

    public java.util.Iterator getImplementedExtensions()
    {
        java.util.List $r1, $r2;
        java.util.Iterator $r3;
        java.lang.String[] $r0;
        org.apache.batik.extension.svg.BatikBridgeExtension r4;

        r4 := @this: org.apache.batik.extension.svg.BatikBridgeExtension;

        $r0 = newarray (java.lang.String)[5];

        $r0[0] = "http://xml.apache.org/batik/ext/poly/1.0";

        $r0[1] = "http://xml.apache.org/batik/ext/star/1.0";

        $r0[2] = "http://xml.apache.org/batik/ext/histogramNormalization/1.0";

        $r0[3] = "http://xml.apache.org/batik/ext/colorSwitch/1.0";

        $r0[4] = "http://xml.apache.org/batik/ext/flowText/1.0";

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        return $r3;
    }

    public java.lang.String getAuthor()
    {
        org.apache.batik.extension.svg.BatikBridgeExtension r0;

        r0 := @this: org.apache.batik.extension.svg.BatikBridgeExtension;

        return "Thomas DeWeese";
    }

    public java.lang.String getContactAddress()
    {
        org.apache.batik.extension.svg.BatikBridgeExtension r0;

        r0 := @this: org.apache.batik.extension.svg.BatikBridgeExtension;

        return "deweese@apache.org";
    }

    public java.lang.String getURL()
    {
        org.apache.batik.extension.svg.BatikBridgeExtension r0;

        r0 := @this: org.apache.batik.extension.svg.BatikBridgeExtension;

        return "http://xml.apache.org/batik";
    }

    public java.lang.String getDescription()
    {
        org.apache.batik.extension.svg.BatikBridgeExtension r0;

        r0 := @this: org.apache.batik.extension.svg.BatikBridgeExtension;

        return "Example extension to standard SVG shape tags";
    }

    public void registerTags(org.apache.batik.bridge.BridgeContext)
    {
        org.apache.batik.extension.svg.BatikFlowTextElementBridge $r4;
        org.apache.batik.extension.svg.BatikRegularPolygonElementBridge $r1;
        org.apache.batik.extension.svg.BatikStarElementBridge $r2;
        org.apache.batik.extension.svg.ColorSwitchBridge $r5;
        org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge $r3;
        org.apache.batik.bridge.BridgeContext r0;
        org.apache.batik.extension.svg.BatikBridgeExtension r6;

        r6 := @this: org.apache.batik.extension.svg.BatikBridgeExtension;

        r0 := @parameter0: org.apache.batik.bridge.BridgeContext;

        $r1 = new org.apache.batik.extension.svg.BatikRegularPolygonElementBridge;

        specialinvoke $r1.<org.apache.batik.extension.svg.BatikRegularPolygonElementBridge: void <init>()>();

        virtualinvoke r0.<org.apache.batik.bridge.BridgeContext: void putBridge(org.apache.batik.bridge.Bridge)>($r1);

        $r2 = new org.apache.batik.extension.svg.BatikStarElementBridge;

        specialinvoke $r2.<org.apache.batik.extension.svg.BatikStarElementBridge: void <init>()>();

        virtualinvoke r0.<org.apache.batik.bridge.BridgeContext: void putBridge(org.apache.batik.bridge.Bridge)>($r2);

        $r3 = new org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge;

        specialinvoke $r3.<org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge: void <init>()>();

        virtualinvoke r0.<org.apache.batik.bridge.BridgeContext: void putBridge(org.apache.batik.bridge.Bridge)>($r3);

        $r4 = new org.apache.batik.extension.svg.BatikFlowTextElementBridge;

        specialinvoke $r4.<org.apache.batik.extension.svg.BatikFlowTextElementBridge: void <init>()>();

        virtualinvoke r0.<org.apache.batik.bridge.BridgeContext: void putBridge(org.apache.batik.bridge.Bridge)>($r4);

        $r5 = new org.apache.batik.extension.svg.ColorSwitchBridge;

        specialinvoke $r5.<org.apache.batik.extension.svg.ColorSwitchBridge: void <init>()>();

        virtualinvoke r0.<org.apache.batik.bridge.BridgeContext: void putBridge(org.apache.batik.bridge.Bridge)>($r5);

        return;
    }

    public boolean isDynamicElement(org.w3c.dom.Element)
    {
        org.w3c.dom.Element r1;
        org.apache.batik.extension.svg.BatikBridgeExtension r0;

        r0 := @this: org.apache.batik.extension.svg.BatikBridgeExtension;

        r1 := @parameter0: org.w3c.dom.Element;

        return 0;
    }
}
