public class org.xmlpull.v1.builder.xpath.jaxen.function.CountFunction extends java.lang.Object implements org.xmlpull.v1.builder.xpath.jaxen.Function
{

    public void <init>()
    {
        org.xmlpull.v1.builder.xpath.jaxen.function.CountFunction r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.function.CountFunction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object call(org.xmlpull.v1.builder.xpath.jaxen.Context, java.util.List) throws org.xmlpull.v1.builder.xpath.jaxen.FunctionCallException
    {
        java.util.List r0;
        org.xmlpull.v1.builder.xpath.jaxen.FunctionCallException $r1;
        org.xmlpull.v1.builder.xpath.jaxen.function.CountFunction r4;
        int $i0;
        java.lang.Object $r2;
        org.xmlpull.v1.builder.xpath.jaxen.Context r5;
        java.lang.Number $r3;

        r4 := @this: org.xmlpull.v1.builder.xpath.jaxen.function.CountFunction;

        r5 := @parameter0: org.xmlpull.v1.builder.xpath.jaxen.Context;

        r0 := @parameter1: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 != 1 goto label1;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.function.CountFunction: java.lang.Number evaluate(java.lang.Object)>($r2);

        return $r3;

     label1:
        $r1 = new org.xmlpull.v1.builder.xpath.jaxen.FunctionCallException;

        specialinvoke $r1.<org.xmlpull.v1.builder.xpath.jaxen.FunctionCallException: void <init>(java.lang.String)>("count() requires one argument.");

        throw $r1;
    }

    public static java.lang.Number evaluate(java.lang.Object)
    {
        java.lang.Double $r1, $r2, $r4;
        java.util.List $r3;
        int $i0;
        java.lang.Object r0;
        boolean $z0;
        double $d0;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $r4 = new java.lang.Double;

        specialinvoke $r4.<java.lang.Double: void <init>(double)>(0.0);

        return $r4;

     label1:
        $z0 = r0 instanceof java.util.List;

        if $z0 == 0 goto label2;

        $r2 = new java.lang.Double;

        $r3 = (java.util.List) r0;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $d0 = (double) $i0;

        specialinvoke $r2.<java.lang.Double: void <init>(double)>($d0);

        return $r2;

     label2:
        $r1 = new java.lang.Double;

        specialinvoke $r1.<java.lang.Double: void <init>(double)>(1.0);

        return $r1;
    }
}
