public class org.apache.commons.httpclient.cookie.CookieSpecBase extends java.lang.Object implements org.apache.commons.httpclient.cookie.CookieSpec
{
    protected static final org.apache.commons.logging.Log LOG;
    private java.util.Collection datepatterns;
    static java.lang.Class class$org$apache$commons$httpclient$cookie$CookieSpec;

    public void <init>()
    {
        org.apache.commons.httpclient.cookie.CookieSpecBase r0;

        r0 := @this: org.apache.commons.httpclient.cookie.CookieSpecBase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.cookie.CookieSpecBase: java.util.Collection datepatterns> = null;

        return;
    }

    public org.apache.commons.httpclient.Cookie[] parse(java.lang.String, int, java.lang.String, boolean, java.lang.String) throws org.apache.commons.httpclient.cookie.MalformedCookieException
    {
        org.apache.commons.httpclient.HeaderElement r6, $r44;
        org.apache.commons.httpclient.HeaderElement[] $r13, r37;
        boolean $z0, $z1, z2, z3;
        org.apache.commons.httpclient.Cookie[] $r16;
        org.apache.commons.httpclient.util.DateParseException $r32;
        org.apache.commons.httpclient.cookie.MalformedCookieException $r46;
        java.util.Collection $r19;
        org.apache.commons.httpclient.NameValuePair[] $r10;
        org.apache.commons.httpclient.cookie.CookieSpecBase r11;
        java.lang.StringBuffer $r24, $r25, $r40;
        org.apache.commons.httpclient.NameValuePair $r12;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, i8, i9, i10, $i11, i12, $i14, $i16;
        java.lang.String $r1, r2, $r3, $r4, $r8, $r9, $r17, $r18, $r26, $r31, r33, r34, r35, $r36;
        java.lang.IllegalArgumentException $r29, $r38, $r39, $r41, $r42, $r43;
        org.apache.commons.httpclient.Cookie $r45;
        char[] $r5, $r15;
        org.apache.commons.logging.Log $r0;

        r11 := @this: org.apache.commons.httpclient.cookie.CookieSpecBase;

        r33 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r34 := @parameter2: java.lang.String;

        z2 := @parameter3: boolean;

        r2 := @parameter4: java.lang.String;

        $r0 = <org.apache.commons.httpclient.cookie.CookieSpecBase: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter CookieSpecBase.parse(String, port, path, boolean, Header)");

        if r33 != null goto label01;

        $r38 = new java.lang.IllegalArgumentException;

        specialinvoke $r38.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Host of origin may not be null");

        throw $r38;

     label01:
        $r1 = virtualinvoke r33.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label02;

        $r39 = new java.lang.IllegalArgumentException;

        specialinvoke $r39.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Host of origin may not be blank");

        throw $r39;

     label02:
        if i0 >= 0 goto label03;

        $r41 = new java.lang.IllegalArgumentException;

        $r40 = new java.lang.StringBuffer;

        specialinvoke $r40.<java.lang.StringBuffer: void <init>()>();

        $r24 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid port: ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r41.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r26);

        throw $r41;

     label03:
        if r34 != null goto label04;

        $r42 = new java.lang.IllegalArgumentException;

        specialinvoke $r42.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Path of origin may not be null.");

        throw $r42;

     label04:
        if r2 != null goto label05;

        $r43 = new java.lang.IllegalArgumentException;

        specialinvoke $r43.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Header may not be null.");

        throw $r43;

     label05:
        $r3 = virtualinvoke r34.<java.lang.String: java.lang.String trim()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 == 0 goto label06;

        r34 = "/";

     label06:
        $r4 = virtualinvoke r33.<java.lang.String: java.lang.String toLowerCase()>();

        r35 = r34;

        $i1 = virtualinvoke r34.<java.lang.String: int lastIndexOf(java.lang.String)>("/");

        i6 = $i1;

        if $i1 < 0 goto label08;

        if $i1 != 0 goto label07;

        i6 = 1;

     label07:
        r35 = virtualinvoke r35.<java.lang.String: java.lang.String substring(int,int)>(0, i6);

     label08:
        z3 = 0;

        $r36 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();

        $i7 = virtualinvoke $r36.<java.lang.String: int indexOf(java.lang.String)>("expires=");

        $i14 = (int) -1;

        if $i7 == $i14 goto label12;

        $r17 = "expires=";

        $i4 = virtualinvoke $r17.<java.lang.String: int length()>();

        i8 = $i7 + $i4;

        $i5 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String,int)>(";", i8);

        i9 = $i5;

        $i16 = (int) -1;

        if $i5 != $i16 goto label09;

        i9 = virtualinvoke r2.<java.lang.String: int length()>();

     label09:
        $r18 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(i8, i9);

        $r19 = r11.<org.apache.commons.httpclient.cookie.CookieSpecBase: java.util.Collection datepatterns>;

        staticinvoke <org.apache.commons.httpclient.util.DateUtil: java.util.Date parseDate(java.lang.String,java.util.Collection)>($r18, $r19);

        z3 = 1;

     label10:
        goto label12;

     label11:
        $r32 := @caughtexception;

     label12:
        if z3 == 0 goto label13;

        $r13 = newarray (org.apache.commons.httpclient.HeaderElement)[1];

        $r44 = new org.apache.commons.httpclient.HeaderElement;

        $r15 = virtualinvoke r2.<java.lang.String: char[] toCharArray()>();

        specialinvoke $r44.<org.apache.commons.httpclient.HeaderElement: void <init>(char[])>($r15);

        $r13[0] = $r44;

        r37 = $r13;

        goto label14;

     label13:
        $r5 = virtualinvoke r2.<java.lang.String: char[] toCharArray()>();

        r37 = staticinvoke <org.apache.commons.httpclient.HeaderElement: org.apache.commons.httpclient.HeaderElement[] parseElements(char[])>($r5);

     label14:
        $i2 = lengthof r37;

        $r16 = newarray (org.apache.commons.httpclient.Cookie)[$i2];

        i10 = 0;

     label15:
        $i11 = lengthof r37;

        if i10 >= $i11 goto label22;

        r6 = r37[i10];

     label16:
        $r45 = new org.apache.commons.httpclient.Cookie;

        $r8 = virtualinvoke r6.<org.apache.commons.httpclient.HeaderElement: java.lang.String getName()>();

        $r9 = virtualinvoke r6.<org.apache.commons.httpclient.HeaderElement: java.lang.String getValue()>();

        specialinvoke $r45.<org.apache.commons.httpclient.Cookie: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Date,boolean)>($r4, $r8, $r9, r35, null, 0);

     label17:
        goto label19;

     label18:
        $r29 := @caughtexception;

        $r46 = new org.apache.commons.httpclient.cookie.MalformedCookieException;

        $r31 = virtualinvoke $r29.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        specialinvoke $r46.<org.apache.commons.httpclient.cookie.MalformedCookieException: void <init>(java.lang.String)>($r31);

        throw $r46;

     label19:
        $r10 = virtualinvoke r6.<org.apache.commons.httpclient.HeaderElement: org.apache.commons.httpclient.NameValuePair[] getParameters()>();

        if $r10 == null goto label21;

        i12 = 0;

     label20:
        $i3 = lengthof $r10;

        if i12 >= $i3 goto label21;

        $r12 = $r10[i12];

        virtualinvoke r11.<org.apache.commons.httpclient.cookie.CookieSpecBase: void parseAttribute(org.apache.commons.httpclient.NameValuePair,org.apache.commons.httpclient.Cookie)>($r12, $r45);

        i12 = i12 + 1;

        goto label20;

     label21:
        $r16[i10] = $r45;

        i10 = i10 + 1;

        goto label15;

     label22:
        return $r16;

        catch org.apache.commons.httpclient.util.DateParseException from label09 to label10 with label11;
        catch java.lang.IllegalArgumentException from label16 to label17 with label18;
    }

    public org.apache.commons.httpclient.Cookie[] parse(java.lang.String, int, java.lang.String, boolean, org.apache.commons.httpclient.Header) throws org.apache.commons.httpclient.cookie.MalformedCookieException
    {
        org.apache.commons.httpclient.cookie.CookieSpecBase r2;
        java.lang.IllegalArgumentException $r7;
        org.apache.commons.httpclient.Header r1;
        int i0;
        org.apache.commons.logging.Log $r0;
        java.lang.String r3, r4, $r5;
        boolean z0;
        org.apache.commons.httpclient.Cookie[] $r6;

        r2 := @this: org.apache.commons.httpclient.cookie.CookieSpecBase;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r4 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        r1 := @parameter4: org.apache.commons.httpclient.Header;

        $r0 = <org.apache.commons.httpclient.cookie.CookieSpecBase: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter CookieSpecBase.parse(String, port, path, boolean, String)");

        if r1 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Header may not be null.");

        throw $r7;

     label1:
        $r5 = virtualinvoke r1.<org.apache.commons.httpclient.Header: java.lang.String getValue()>();

        $r6 = virtualinvoke r2.<org.apache.commons.httpclient.cookie.CookieSpecBase: org.apache.commons.httpclient.Cookie[] parse(java.lang.String,int,java.lang.String,boolean,java.lang.String)>(r3, i0, r4, z0, $r5);

        return $r6;
    }

    public void parseAttribute(org.apache.commons.httpclient.NameValuePair, org.apache.commons.httpclient.Cookie) throws org.apache.commons.httpclient.cookie.MalformedCookieException
    {
        java.util.Date $r14, $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.apache.commons.httpclient.util.DateParseException $r24;
        org.apache.commons.httpclient.cookie.MalformedCookieException $r15, $r17, $r19, $r20, $r26, $r32;
        java.util.Collection $r13;
        long $l1, $l2, $l3, $l4;
        org.apache.commons.httpclient.cookie.CookieSpecBase r12;
        java.lang.StringBuffer $r6, $r8, $r10, $r27, $r28, $r29, $r33, $r34, $r36;
        org.apache.commons.httpclient.NameValuePair r0;
        int $i0;
        java.lang.String $r2, $r3, $r4, $r9, $r11, $r18, $r21, $r30, $r35, $r37, r38;
        java.lang.NumberFormatException $r31;
        java.lang.IllegalArgumentException $r22, $r23;
        org.apache.commons.httpclient.Cookie r1;
        org.apache.commons.logging.Log $r5, $r7, $r25;

        r12 := @this: org.apache.commons.httpclient.cookie.CookieSpecBase;

        r0 := @parameter0: org.apache.commons.httpclient.NameValuePair;

        r1 := @parameter1: org.apache.commons.httpclient.Cookie;

        if r0 != null goto label01;

        $r23 = new java.lang.IllegalArgumentException;

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Attribute may not be null.");

        throw $r23;

     label01:
        if r1 != null goto label02;

        $r22 = new java.lang.IllegalArgumentException;

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null.");

        throw $r22;

     label02:
        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.NameValuePair: java.lang.String getName()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

        $r4 = virtualinvoke r0.<org.apache.commons.httpclient.NameValuePair: java.lang.String getValue()>();

        r38 = $r4;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("path");

        if $z0 == 0 goto label05;

        if $r4 == null goto label03;

        $r21 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        $z8 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z8 == 0 goto label04;

     label03:
        r38 = "/";

     label04:
        virtualinvoke r1.<org.apache.commons.httpclient.Cookie: void setPath(java.lang.String)>(r38);

        virtualinvoke r1.<org.apache.commons.httpclient.Cookie: void setPathAttributeSpecified(boolean)>(1);

        goto label20;

     label05:
        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("domain");

        if $z1 == 0 goto label08;

        if $r4 != null goto label06;

        $r20 = new org.apache.commons.httpclient.cookie.MalformedCookieException;

        specialinvoke $r20.<org.apache.commons.httpclient.cookie.MalformedCookieException: void <init>(java.lang.String)>("Missing value for domain attribute");

        throw $r20;

     label06:
        $r18 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        $z7 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z7 == 0 goto label07;

        $r19 = new org.apache.commons.httpclient.cookie.MalformedCookieException;

        specialinvoke $r19.<org.apache.commons.httpclient.cookie.MalformedCookieException: void <init>(java.lang.String)>("Blank value for domain attribute");

        throw $r19;

     label07:
        virtualinvoke r1.<org.apache.commons.httpclient.Cookie: void setDomain(java.lang.String)>($r4);

        virtualinvoke r1.<org.apache.commons.httpclient.Cookie: void setDomainAttributeSpecified(boolean)>(1);

        goto label20;

     label08:
        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("max-age");

        if $z2 == 0 goto label13;

        if $r4 != null goto label09;

        $r17 = new org.apache.commons.httpclient.cookie.MalformedCookieException;

        specialinvoke $r17.<org.apache.commons.httpclient.cookie.MalformedCookieException: void <init>(java.lang.String)>("Missing value for max-age attribute");

        throw $r17;

     label09:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

     label10:
        goto label12;

     label11:
        $r31 := @caughtexception;

        $r32 = new org.apache.commons.httpclient.cookie.MalformedCookieException;

        $r33 = new java.lang.StringBuffer;

        specialinvoke $r33.<java.lang.StringBuffer: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid max-age attribute: ");

        $r35 = virtualinvoke $r31.<java.lang.NumberFormatException: java.lang.String getMessage()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r32.<org.apache.commons.httpclient.cookie.MalformedCookieException: void <init>(java.lang.String)>($r37);

        throw $r32;

     label12:
        $r16 = new java.util.Date;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = (long) $i0;

        $l3 = $l2 * 1000L;

        $l4 = $l1 + $l3;

        specialinvoke $r16.<java.util.Date: void <init>(long)>($l4);

        virtualinvoke r1.<org.apache.commons.httpclient.Cookie: void setExpiryDate(java.util.Date)>($r16);

        goto label20;

     label13:
        $z3 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("secure");

        if $z3 == 0 goto label14;

        virtualinvoke r1.<org.apache.commons.httpclient.Cookie: void setSecure(boolean)>(1);

        goto label20;

     label14:
        $z4 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("comment");

        if $z4 == 0 goto label15;

        virtualinvoke r1.<org.apache.commons.httpclient.Cookie: void setComment(java.lang.String)>($r4);

        goto label20;

     label15:
        $z5 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("expires");

        if $z5 == 0 goto label19;

        if $r4 != null goto label16;

        $r15 = new org.apache.commons.httpclient.cookie.MalformedCookieException;

        specialinvoke $r15.<org.apache.commons.httpclient.cookie.MalformedCookieException: void <init>(java.lang.String)>("Missing value for expires attribute");

        throw $r15;

     label16:
        $r13 = r12.<org.apache.commons.httpclient.cookie.CookieSpecBase: java.util.Collection datepatterns>;

        $r14 = staticinvoke <org.apache.commons.httpclient.util.DateUtil: java.util.Date parseDate(java.lang.String,java.util.Collection)>($r4, $r13);

        virtualinvoke r1.<org.apache.commons.httpclient.Cookie: void setExpiryDate(java.util.Date)>($r14);

     label17:
        goto label20;

     label18:
        $r24 := @caughtexception;

        $r25 = <org.apache.commons.httpclient.cookie.CookieSpecBase: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r25.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("Error parsing cookie date", $r24);

        $r26 = new org.apache.commons.httpclient.cookie.MalformedCookieException;

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unable to parse expiration date parameter: ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r26.<org.apache.commons.httpclient.cookie.MalformedCookieException: void <init>(java.lang.String)>($r30);

        throw $r26;

     label19:
        $r5 = <org.apache.commons.httpclient.cookie.CookieSpecBase: org.apache.commons.logging.Log LOG>;

        $z6 = interfaceinvoke $r5.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z6 == 0 goto label20;

        $r7 = <org.apache.commons.httpclient.cookie.CookieSpecBase: org.apache.commons.logging.Log LOG>;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unrecognized cookie attribute: ");

        $r9 = virtualinvoke r0.<org.apache.commons.httpclient.NameValuePair: java.lang.String toString()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r7.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r11);

     label20:
        return;

        catch java.lang.NumberFormatException from label09 to label10 with label11;
        catch org.apache.commons.httpclient.util.DateParseException from label16 to label17 with label18;
    }

    public java.util.Collection getValidDateFormats()
    {
        org.apache.commons.httpclient.cookie.CookieSpecBase r0;
        java.util.Collection $r1;

        r0 := @this: org.apache.commons.httpclient.cookie.CookieSpecBase;

        $r1 = r0.<org.apache.commons.httpclient.cookie.CookieSpecBase: java.util.Collection datepatterns>;

        return $r1;
    }

    public void setValidDateFormats(java.util.Collection)
    {
        org.apache.commons.httpclient.cookie.CookieSpecBase r0;
        java.util.Collection r1;

        r0 := @this: org.apache.commons.httpclient.cookie.CookieSpecBase;

        r1 := @parameter0: java.util.Collection;

        r0.<org.apache.commons.httpclient.cookie.CookieSpecBase: java.util.Collection datepatterns> = r1;

        return;
    }

    public void validate(java.lang.String, int, java.lang.String, boolean, org.apache.commons.httpclient.Cookie) throws org.apache.commons.httpclient.cookie.MalformedCookieException
    {
        java.lang.StringBuffer $r7, $r8, $r10, $r11, $r12, $r13, $r16, $r17, $r19, $r20, $r21, $r22, $r27, $r28, $r30, $r31, $r32, $r33, $r36, $r37, $r39, $r43, $r44, $r45;
        java.lang.String $r1, $r2, $r3, $r5, $r9, $r14, $r18, $r23, $r24, $r25, $r29, $r34, $r38, $r40, $r46, r50, r51, r52, $r53;
        org.apache.commons.httpclient.Cookie r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, $z7;
        org.apache.commons.httpclient.cookie.MalformedCookieException $r6, $r15, $r26, $r35;
        org.apache.commons.httpclient.cookie.CookieSpecBase r49;
        int i0, $i1, $i2, $i3;
        java.lang.IllegalArgumentException $r41, $r42, $r47, $r48;
        org.apache.commons.logging.Log $r0;

        r49 := @this: org.apache.commons.httpclient.cookie.CookieSpecBase;

        r50 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r51 := @parameter2: java.lang.String;

        z6 := @parameter3: boolean;

        r4 := @parameter4: org.apache.commons.httpclient.Cookie;

        $r0 = <org.apache.commons.httpclient.cookie.CookieSpecBase: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter CookieSpecBase.validate(String, port, path, boolean, Cookie)");

        if r50 != null goto label01;

        $r48 = new java.lang.IllegalArgumentException;

        specialinvoke $r48.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Host of origin may not be null");

        throw $r48;

     label01:
        $r1 = virtualinvoke r50.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label02;

        $r47 = new java.lang.IllegalArgumentException;

        specialinvoke $r47.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Host of origin may not be blank");

        throw $r47;

     label02:
        if i0 >= 0 goto label03;

        $r42 = new java.lang.IllegalArgumentException;

        $r43 = new java.lang.StringBuffer;

        specialinvoke $r43.<java.lang.StringBuffer: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid port: ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r42.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r46);

        throw $r42;

     label03:
        if r51 != null goto label04;

        $r41 = new java.lang.IllegalArgumentException;

        specialinvoke $r41.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Path of origin may not be null.");

        throw $r41;

     label04:
        $r2 = virtualinvoke r51.<java.lang.String: java.lang.String trim()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 == 0 goto label05;

        r51 = "/";

     label05:
        $r3 = virtualinvoke r50.<java.lang.String: java.lang.String toLowerCase()>();

        $i1 = virtualinvoke r4.<org.apache.commons.httpclient.Cookie: int getVersion()>();

        if $i1 >= 0 goto label06;

        $r35 = new org.apache.commons.httpclient.cookie.MalformedCookieException;

        $r36 = new java.lang.StringBuffer;

        specialinvoke $r36.<java.lang.StringBuffer: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal version number ");

        $r38 = virtualinvoke r4.<org.apache.commons.httpclient.Cookie: java.lang.String getValue()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r35.<org.apache.commons.httpclient.cookie.MalformedCookieException: void <init>(java.lang.String)>($r40);

        throw $r35;

     label06:
        $i2 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>(".");

        if $i2 < 0 goto label09;

        $r24 = virtualinvoke r4.<org.apache.commons.httpclient.Cookie: java.lang.String getDomain()>();

        $z3 = virtualinvoke $r3.<java.lang.String: boolean endsWith(java.lang.String)>($r24);

        if $z3 != 0 goto label10;

        $r25 = virtualinvoke r4.<org.apache.commons.httpclient.Cookie: java.lang.String getDomain()>();

        r52 = $r25;

        $z4 = virtualinvoke $r25.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z4 == 0 goto label07;

        $i3 = virtualinvoke $r25.<java.lang.String: int length()>();

        r52 = virtualinvoke $r25.<java.lang.String: java.lang.String substring(int,int)>(1, $i3);

     label07:
        $z5 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r52);

        if $z5 != 0 goto label08;

        $r26 = new org.apache.commons.httpclient.cookie.MalformedCookieException;

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal domain attribute \"");

        $r29 = virtualinvoke r4.<org.apache.commons.httpclient.Cookie: java.lang.String getDomain()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\". Domain of origin: \"");

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r26.<org.apache.commons.httpclient.cookie.MalformedCookieException: void <init>(java.lang.String)>($r34);

        throw $r26;

     label08:
        goto label10;

     label09:
        $r5 = virtualinvoke r4.<org.apache.commons.httpclient.Cookie: java.lang.String getDomain()>();

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z2 != 0 goto label10;

        $r15 = new org.apache.commons.httpclient.cookie.MalformedCookieException;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal domain attribute \"");

        $r18 = virtualinvoke r4.<org.apache.commons.httpclient.Cookie: java.lang.String getDomain()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\". Domain of origin: \"");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r15.<org.apache.commons.httpclient.cookie.MalformedCookieException: void <init>(java.lang.String)>($r23);

        throw $r15;

     label10:
        $r53 = virtualinvoke r4.<org.apache.commons.httpclient.Cookie: java.lang.String getPath()>();

        $z7 = virtualinvoke r51.<java.lang.String: boolean startsWith(java.lang.String)>($r53);

        if $z7 != 0 goto label11;

        $r6 = new org.apache.commons.httpclient.cookie.MalformedCookieException;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal path attribute \"");

        $r9 = virtualinvoke r4.<org.apache.commons.httpclient.Cookie: java.lang.String getPath()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\". Path of origin: \"");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r51);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r6.<org.apache.commons.httpclient.cookie.MalformedCookieException: void <init>(java.lang.String)>($r14);

        throw $r6;

     label11:
        return;
    }

    public boolean match(java.lang.String, int, java.lang.String, boolean, org.apache.commons.httpclient.Cookie)
    {
        java.util.Date $r7, $r11, $r12;
        boolean $z0, $z1, $z2, $z3, $z4, z5, $z6, $z7;
        org.apache.commons.httpclient.cookie.CookieSpecBase r8;
        java.lang.StringBuffer $r18, $r19, $r20;
        int i0;
        java.lang.String $r1, $r3, $r4, $r5, $r6, $r9, $r10, $r21, r24, r25;
        java.lang.IllegalArgumentException $r15, $r16, $r17, $r22, $r23;
        org.apache.commons.httpclient.Cookie r2;
        org.apache.commons.logging.Log $r0, $r13, $r14;

        r8 := @this: org.apache.commons.httpclient.cookie.CookieSpecBase;

        r24 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r25 := @parameter2: java.lang.String;

        z5 := @parameter3: boolean;

        r2 := @parameter4: org.apache.commons.httpclient.Cookie;

        $r0 = <org.apache.commons.httpclient.cookie.CookieSpecBase: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter CookieSpecBase.match(String, int, String, boolean, Cookie");

        if r24 != null goto label01;

        $r23 = new java.lang.IllegalArgumentException;

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Host of origin may not be null");

        throw $r23;

     label01:
        $r1 = virtualinvoke r24.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label02;

        $r22 = new java.lang.IllegalArgumentException;

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Host of origin may not be blank");

        throw $r22;

     label02:
        if i0 >= 0 goto label03;

        $r17 = new java.lang.IllegalArgumentException;

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid port: ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw $r17;

     label03:
        if r25 != null goto label04;

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Path of origin may not be null.");

        throw $r16;

     label04:
        if r2 != null goto label05;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r15;

     label05:
        $r3 = virtualinvoke r25.<java.lang.String: java.lang.String trim()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 == 0 goto label06;

        r25 = "/";

     label06:
        $r4 = virtualinvoke r24.<java.lang.String: java.lang.String toLowerCase()>();

        $r5 = virtualinvoke r2.<org.apache.commons.httpclient.Cookie: java.lang.String getDomain()>();

        if $r5 != null goto label07;

        $r14 = <org.apache.commons.httpclient.cookie.CookieSpecBase: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r14.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Invalid cookie state: domain not specified");

        return 0;

     label07:
        $r6 = virtualinvoke r2.<org.apache.commons.httpclient.Cookie: java.lang.String getPath()>();

        if $r6 != null goto label08;

        $r13 = <org.apache.commons.httpclient.cookie.CookieSpecBase: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r13.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Invalid cookie state: path not specified");

        return 0;

     label08:
        $r7 = virtualinvoke r2.<org.apache.commons.httpclient.Cookie: java.util.Date getExpiryDate()>();

        if $r7 == null goto label09;

        $r11 = virtualinvoke r2.<org.apache.commons.httpclient.Cookie: java.util.Date getExpiryDate()>();

        $r12 = new java.util.Date;

        specialinvoke $r12.<java.util.Date: void <init>()>();

        $z6 = virtualinvoke $r11.<java.util.Date: boolean after(java.util.Date)>($r12);

        if $z6 == 0 goto label11;

     label09:
        $r9 = virtualinvoke r2.<org.apache.commons.httpclient.Cookie: java.lang.String getDomain()>();

        $z2 = virtualinvoke r8.<org.apache.commons.httpclient.cookie.CookieSpecBase: boolean domainMatch(java.lang.String,java.lang.String)>($r4, $r9);

        if $z2 == 0 goto label11;

        $r10 = virtualinvoke r2.<org.apache.commons.httpclient.Cookie: java.lang.String getPath()>();

        $z3 = virtualinvoke r8.<org.apache.commons.httpclient.cookie.CookieSpecBase: boolean pathMatch(java.lang.String,java.lang.String)>(r25, $r10);

        if $z3 == 0 goto label11;

        $z4 = virtualinvoke r2.<org.apache.commons.httpclient.Cookie: boolean getSecure()>();

        if $z4 == 0 goto label10;

        if z5 == 0 goto label11;

     label10:
        $z7 = 1;

        goto label12;

     label11:
        $z7 = 0;

     label12:
        return $z7;
    }

    public boolean domainMatch(java.lang.String, java.lang.String)
    {
        org.apache.commons.httpclient.cookie.CookieSpecBase r5;
        java.lang.StringBuffer $r2, $r3, $r4;
        java.lang.String r0, $r1, r6;
        boolean $z0, $z1, $z2, $z3, $z4;

        r5 := @this: org.apache.commons.httpclient.cookie.CookieSpecBase;

        r0 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z1 != 0 goto label2;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        $z2 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(r6);

        if $z2 != 0 goto label3;

        $r1 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int)>(1);

        $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z3 == 0 goto label4;

     label3:
        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        return $z4;
    }

    public boolean pathMatch(java.lang.String, java.lang.String)
    {
        char $c3, $c4;
        org.apache.commons.httpclient.cookie.CookieSpecBase r2;
        int $i0, $i1, $i2, $i5, $i6;
        java.lang.String r0, r1;
        boolean $z0, $z1, z2, $z3;

        r2 := @this: org.apache.commons.httpclient.cookie.CookieSpecBase;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1);

        z2 = $z0;

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 == $i1 goto label3;

        $z1 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z1 != 0 goto label3;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i2);

        $c4 = <org.apache.commons.httpclient.cookie.CookieSpec: char PATH_DELIM_CHAR>;

        $i5 = (int) $c3;

        $i6 = (int) $c4;

        if $i5 != $i6 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z2 = $z3;

     label3:
        return z2;
    }

    public org.apache.commons.httpclient.Cookie[] match(java.lang.String, int, java.lang.String, boolean, org.apache.commons.httpclient.Cookie[])
    {
        java.lang.Object[] $r4;
        org.apache.commons.httpclient.cookie.CookieSpecBase r7;
        int $i0, $i1, i2, i3;
        java.lang.String r8, r9;
        java.util.LinkedList $r2;
        org.apache.commons.httpclient.Cookie[] r1, $r3, $r5, $r6;
        boolean z0, $z1;
        org.apache.commons.httpclient.Cookie $r10, $r11;
        org.apache.commons.logging.Log $r0;

        r7 := @this: org.apache.commons.httpclient.cookie.CookieSpecBase;

        r8 := @parameter0: java.lang.String;

        i2 := @parameter1: int;

        r9 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        r1 := @parameter4: org.apache.commons.httpclient.Cookie[];

        $r0 = <org.apache.commons.httpclient.cookie.CookieSpecBase: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter CookieSpecBase.match(String, int, String, boolean, Cookie[])");

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        i3 = 0;

     label2:
        $i0 = lengthof r1;

        if i3 >= $i0 goto label4;

        $r10 = r1[i3];

        $z1 = virtualinvoke r7.<org.apache.commons.httpclient.cookie.CookieSpecBase: boolean match(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie)>(r8, i2, r9, z0, $r10);

        if $z1 == 0 goto label3;

        $r11 = r1[i3];

        staticinvoke <org.apache.commons.httpclient.cookie.CookieSpecBase: void addInPathOrder(java.util.List,org.apache.commons.httpclient.Cookie)>($r2, $r11);

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r3 = newarray (org.apache.commons.httpclient.Cookie)[$i1];

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (org.apache.commons.httpclient.Cookie[]) $r4;

        $r6 = (org.apache.commons.httpclient.Cookie[]) $r5;

        return $r6;
    }

    private static void addInPathOrder(java.util.List, org.apache.commons.httpclient.Cookie)
    {
        java.util.List r0;
        int $i0, $i1, i2;
        java.lang.Object $r2;
        org.apache.commons.httpclient.Cookie r1, r3;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: org.apache.commons.httpclient.Cookie;

        i2 = 0;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if i2 >= $i0 goto label3;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);

        r3 = (org.apache.commons.httpclient.Cookie) $r2;

        $i1 = virtualinvoke r1.<org.apache.commons.httpclient.Cookie: int compare(java.lang.Object,java.lang.Object)>(r1, r3);

        if $i1 <= 0 goto label2;

        goto label3;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        interfaceinvoke r0.<java.util.List: void add(int,java.lang.Object)>(i2, r1);

        return;
    }

    public java.lang.String formatCookie(org.apache.commons.httpclient.Cookie)
    {
        org.apache.commons.httpclient.cookie.CookieSpecBase r7;
        java.lang.IllegalArgumentException $r6;
        org.apache.commons.httpclient.Cookie r1;
        java.lang.StringBuffer $r2;
        org.apache.commons.logging.Log $r0;
        java.lang.String $r3, $r4, $r5;

        r7 := @this: org.apache.commons.httpclient.cookie.CookieSpecBase;

        r1 := @parameter0: org.apache.commons.httpclient.Cookie;

        $r0 = <org.apache.commons.httpclient.cookie.CookieSpecBase: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter CookieSpecBase.formatCookie(Cookie)");

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r6;

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke r1.<org.apache.commons.httpclient.Cookie: java.lang.String getName()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=");

        $r4 = virtualinvoke r1.<org.apache.commons.httpclient.Cookie: java.lang.String getValue()>();

        if $r4 == null goto label2;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label2:
        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    public java.lang.String formatCookies(org.apache.commons.httpclient.Cookie[]) throws java.lang.IllegalArgumentException
    {
        org.apache.commons.httpclient.cookie.CookieSpecBase r4;
        java.lang.IllegalArgumentException $r7, $r8;
        org.apache.commons.httpclient.Cookie $r5;
        java.lang.StringBuffer $r2;
        int $i0, $i1, i2;
        org.apache.commons.logging.Log $r0;
        java.lang.String $r3, $r6;
        org.apache.commons.httpclient.Cookie[] r1;

        r4 := @this: org.apache.commons.httpclient.cookie.CookieSpecBase;

        r1 := @parameter0: org.apache.commons.httpclient.Cookie[];

        $r0 = <org.apache.commons.httpclient.cookie.CookieSpecBase: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter CookieSpecBase.formatCookies(Cookie[])");

        if r1 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie array may not be null");

        throw $r8;

     label1:
        $i0 = lengthof r1;

        if $i0 != 0 goto label2;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie array may not be empty");

        throw $r7;

     label2:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        i2 = 0;

     label3:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label5;

        if i2 <= 0 goto label4;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; ");

     label4:
        $r5 = r1[i2];

        $r6 = virtualinvoke r4.<org.apache.commons.httpclient.cookie.CookieSpecBase: java.lang.String formatCookie(org.apache.commons.httpclient.Cookie)>($r5);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        i2 = i2 + 1;

        goto label3;

     label5:
        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public org.apache.commons.httpclient.Header formatCookieHeader(org.apache.commons.httpclient.Cookie[])
    {
        org.apache.commons.logging.Log $r0;
        org.apache.commons.httpclient.cookie.CookieSpecBase r2;
        java.lang.String $r4;
        org.apache.commons.httpclient.Header $r1;
        org.apache.commons.httpclient.Cookie[] r3;

        r2 := @this: org.apache.commons.httpclient.cookie.CookieSpecBase;

        r3 := @parameter0: org.apache.commons.httpclient.Cookie[];

        $r0 = <org.apache.commons.httpclient.cookie.CookieSpecBase: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter CookieSpecBase.formatCookieHeader(Cookie[])");

        $r1 = new org.apache.commons.httpclient.Header;

        $r4 = virtualinvoke r2.<org.apache.commons.httpclient.cookie.CookieSpecBase: java.lang.String formatCookies(org.apache.commons.httpclient.Cookie[])>(r3);

        specialinvoke $r1.<org.apache.commons.httpclient.Header: void <init>(java.lang.String,java.lang.String)>("Cookie", $r4);

        return $r1;
    }

    public org.apache.commons.httpclient.Header formatCookieHeader(org.apache.commons.httpclient.Cookie)
    {
        org.apache.commons.logging.Log $r0;
        org.apache.commons.httpclient.cookie.CookieSpecBase r2;
        java.lang.String $r4;
        org.apache.commons.httpclient.Header $r1;
        org.apache.commons.httpclient.Cookie r3;

        r2 := @this: org.apache.commons.httpclient.cookie.CookieSpecBase;

        r3 := @parameter0: org.apache.commons.httpclient.Cookie;

        $r0 = <org.apache.commons.httpclient.cookie.CookieSpecBase: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter CookieSpecBase.formatCookieHeader(Cookie)");

        $r1 = new org.apache.commons.httpclient.Header;

        $r4 = virtualinvoke r2.<org.apache.commons.httpclient.cookie.CookieSpecBase: java.lang.String formatCookie(org.apache.commons.httpclient.Cookie)>(r3);

        specialinvoke $r1.<org.apache.commons.httpclient.Header: void <init>(java.lang.String,java.lang.String)>("Cookie", $r4);

        return $r1;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r2;
        org.apache.commons.logging.Log $r1;

        $r0 = <org.apache.commons.httpclient.cookie.CookieSpecBase: java.lang.Class class$org$apache$commons$httpclient$cookie$CookieSpec>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <org.apache.commons.httpclient.cookie.CookieSpecBase: java.lang.Class class$(java.lang.String)>("org.apache.commons.httpclient.cookie.CookieSpec");

        <org.apache.commons.httpclient.cookie.CookieSpecBase: java.lang.Class class$org$apache$commons$httpclient$cookie$CookieSpec> = $r2;

        goto label2;

     label1:
        $r2 = <org.apache.commons.httpclient.cookie.CookieSpecBase: java.lang.Class class$org$apache$commons$httpclient$cookie$CookieSpec>;

     label2:
        $r1 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r2);

        <org.apache.commons.httpclient.cookie.CookieSpecBase: org.apache.commons.logging.Log LOG> = $r1;

        return;
    }
}
