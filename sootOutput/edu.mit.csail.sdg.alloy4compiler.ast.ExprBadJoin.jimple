public final class edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin extends edu.mit.csail.sdg.alloy4compiler.ast.Expr
{
    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr left;
    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr right;
    private edu.mit.csail.sdg.alloy4.Pos span;

    public edu.mit.csail.sdg.alloy4.Pos span()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r4, $r7;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin r0;
        edu.mit.csail.sdg.alloy4.Pos $r1, $r2, $r3, $r5, $r6, $r8, $r9, r10;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin;

        r10 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin: edu.mit.csail.sdg.alloy4.Pos span>;

        if r10 != null goto label1;

        $r2 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin: edu.mit.csail.sdg.alloy4.Pos pos>;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin: edu.mit.csail.sdg.alloy4.Pos closingBracket>;

        $r3 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r1);

        $r4 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r5 = virtualinvoke $r4.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r6 = virtualinvoke $r3.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r5);

        $r7 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r8 = virtualinvoke $r7.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r9 = virtualinvoke $r6.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r8);

        r10 = $r9;

        r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin: edu.mit.csail.sdg.alloy4.Pos span> = $r9;

     label1:
        return r10;
    }

    public void toString(java.lang.StringBuilder, int)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r2, $r3, $r4, $r5;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin r1;
        int i0, $i1, $i2, i3, $i5, $i7;
        java.lang.StringBuilder r0;

        r1 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin;

        r0 := @parameter0: java.lang.StringBuilder;

        i0 := @parameter1: int;

        if i0 >= 0 goto label1;

        $r4 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $i5 = (int) -1;

        virtualinvoke $r4.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: void toString(java.lang.StringBuilder,int)>(r0, $i5);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r5 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $i7 = (int) -1;

        virtualinvoke $r5.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: void toString(java.lang.StringBuilder,int)>(r0, $i7);

        goto label4;

     label1:
        i3 = 0;

     label2:
        if i3 >= i0 goto label3;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        i3 = i3 + 1;

        goto label2;

     label3:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ExprBadJoin:\n");

        $r2 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $i1 = i0 + 2;

        virtualinvoke $r2.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: void toString(java.lang.StringBuilder,int)>(r0, $i1);

        $r3 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $i2 = i0 + 2;

        virtualinvoke $r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: void toString(java.lang.StringBuilder,int)>(r0, $i2);

     label4:
        return;
    }

    private void <init>(edu.mit.csail.sdg.alloy4.Pos, edu.mit.csail.sdg.alloy4.Pos, edu.mit.csail.sdg.alloy4compiler.ast.Expr, edu.mit.csail.sdg.alloy4compiler.ast.Expr, edu.mit.csail.sdg.alloy4.JoinableList)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r5;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r3, r6;
        edu.mit.csail.sdg.alloy4.JoinableList r4;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin r0;
        edu.mit.csail.sdg.alloy4.Pos r1, r2;
        boolean $z0, $z1, $z2;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4.Pos;

        r2 := @parameter1: edu.mit.csail.sdg.alloy4.Pos;

        r3 := @parameter2: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r6 := @parameter3: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r4 := @parameter4: edu.mit.csail.sdg.alloy4.JoinableList;

        $z0 = r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean ambiguous>;

        if $z0 != 0 goto label1;

        $z1 = r6.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean ambiguous>;

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        $r5 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

        specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: void <init>(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,boolean,edu.mit.csail.sdg.alloy4compiler.ast.Type,int,long,edu.mit.csail.sdg.alloy4.JoinableList)>(r1, r2, $z2, $r5, 0, 0L, r4);

        r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin: edu.mit.csail.sdg.alloy4.Pos span> = null;

        r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin: edu.mit.csail.sdg.alloy4compiler.ast.Expr left> = r3;

        r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin: edu.mit.csail.sdg.alloy4compiler.ast.Expr right> = r6;

        return;
    }

    public static edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos, edu.mit.csail.sdg.alloy4.Pos, edu.mit.csail.sdg.alloy4compiler.ast.Expr, edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r10, $r13;
        edu.mit.csail.sdg.alloy4.ErrorType $r19;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, r1;
        edu.mit.csail.sdg.alloy4.JoinableList $r2, $r3, $r4, r17;
        int $i1, $i3;
        java.lang.String $r16;
        boolean $z0;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin $r20;
        edu.mit.csail.sdg.alloy4.Pos r6, r7;
        java.lang.StringBuilder $r9, $r11, $r12, $r14, $r18;

        r6 := @parameter0: edu.mit.csail.sdg.alloy4.Pos;

        r7 := @parameter1: edu.mit.csail.sdg.alloy4.Pos;

        r0 := @parameter2: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r1 := @parameter3: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r3 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.JoinableList errors>;

        $r2 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.JoinableList errors>;

        $r4 = virtualinvoke $r3.<edu.mit.csail.sdg.alloy4.JoinableList: edu.mit.csail.sdg.alloy4.JoinableList make(edu.mit.csail.sdg.alloy4.JoinableList)>($r2);

        r17 = $r4;

        $z0 = virtualinvoke $r4.<edu.mit.csail.sdg.alloy4.JoinableList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>("This cannot be a legal relational join where\nleft hand side is ");

        $i1 = (int) -1;

        virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: void toString(java.lang.StringBuilder,int)>($r18, $i1);

        $r9 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (type = ");

        $r10 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")\nright hand side is ");

        $i3 = (int) -1;

        virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: void toString(java.lang.StringBuilder,int)>($r18, $i3);

        $r12 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (type = ");

        $r13 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")\n");

        $r19 = new edu.mit.csail.sdg.alloy4.ErrorType;

        $r16 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<edu.mit.csail.sdg.alloy4.ErrorType: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>(r6, $r16);

        r17 = virtualinvoke $r4.<edu.mit.csail.sdg.alloy4.JoinableList: edu.mit.csail.sdg.alloy4.JoinableList make(java.lang.Object)>($r19);

     label1:
        $r20 = new edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin;

        specialinvoke $r20.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin: void <init>(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4.JoinableList)>(r6, r7, r0, r1, r17);

        return $r20;
    }

    public int getDepth()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin r0;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r1, $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $i0 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: int getDepth()>();

        $r2 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $i1 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: int getDepth()>();

        if $i0 < $i1 goto label1;

        $i3 = 1 + $i0;

        return $i3;

     label1:
        $i2 = 1 + $i1;

        return $i2;
    }

    public edu.mit.csail.sdg.alloy4compiler.ast.Expr resolve(edu.mit.csail.sdg.alloy4compiler.ast.Type, java.util.Collection)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Type r1;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin r0;
        java.util.Collection r2;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Type;

        r2 := @parameter1: java.util.Collection;

        return r0;
    }

    final java.lang.Object accept(edu.mit.csail.sdg.alloy4compiler.ast.VisitReturn) throws edu.mit.csail.sdg.alloy4.Err
    {
        java.lang.Object $r2;
        edu.mit.csail.sdg.alloy4compiler.ast.VisitReturn r0;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin r1;

        r1 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.VisitReturn;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.VisitReturn: java.lang.Object visit(edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin)>(r1);

        return $r2;
    }

    public java.lang.String getDescription()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin r0;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin;

        return "<b>error</b> (parser or typechecker failed)";
    }

    public java.util.List getSubnodes()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin r1;
        java.util.ArrayList $r0;

        r1 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprBadJoin;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>(0);

        return $r0;
    }
}
