class org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor extends java.lang.Object implements org.waveprotocol.wave.model.document.operation.DocOpCursor
{
    static final boolean $assertionsDisabled;
    final org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0;

    private void <init>(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl)
    {
        org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl r1;
        org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor r0;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor;

        r1 := @parameter0: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl;

        r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void updateAttributes(org.waveprotocol.wave.model.document.operation.AttributesUpdate)
    {
        org.waveprotocol.wave.model.document.indexed.RawAnnotationSet $r2;
        org.waveprotocol.wave.model.util.OffsetList$Container $r6, $r13, $r14;
        int $i0, i1;
        java.lang.String $r19, $r20;
        org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor r0;
        org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl $r1, $r3, $r5, $r10, $r11, $r12, $r15, $r16, $r17, $r21, $r23;
        org.waveprotocol.wave.model.document.raw.RawDocument $r4, $r22, $r24;
        java.lang.Object $r7, $r8, $r18;
        org.waveprotocol.wave.model.document.operation.AttributesUpdate r9;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor;

        r9 := @parameter0: org.waveprotocol.wave.model.document.operation.AttributesUpdate;

        $r1 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: org.waveprotocol.wave.model.document.indexed.RawAnnotationSet access$900(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl)>($r1);

        interfaceinvoke $r2.<org.waveprotocol.wave.model.document.indexed.RawAnnotationSet: void skip(int)>(1);

        $r3 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        $r4 = staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: org.waveprotocol.wave.model.document.raw.RawDocument access$100(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl)>($r3);

        $r5 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        $r6 = staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: org.waveprotocol.wave.model.util.OffsetList$Container access$300(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl)>($r5);

        $r7 = interfaceinvoke $r6.<org.waveprotocol.wave.model.util.OffsetList$Container: java.lang.Object getValue()>();

        $r8 = interfaceinvoke $r4.<org.waveprotocol.wave.model.document.raw.RawDocument: java.lang.Object asElement(java.lang.Object)>($r7);

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r9.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: int changeSize()>();

        if i1 >= $i0 goto label4;

        $r19 = interfaceinvoke r9.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: java.lang.String getChangeKey(int)>(i1);

        $r20 = interfaceinvoke r9.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: java.lang.String getNewValue(int)>(i1);

        if $r20 == null goto label2;

        $r23 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        $r24 = staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: org.waveprotocol.wave.model.document.raw.RawDocument access$100(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl)>($r23);

        interfaceinvoke $r24.<org.waveprotocol.wave.model.document.raw.RawDocument: void setAttribute(java.lang.Object,java.lang.String,java.lang.String)>($r8, $r19, $r20);

        goto label3;

     label2:
        $r21 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        $r22 = staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: org.waveprotocol.wave.model.document.raw.RawDocument access$100(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl)>($r21);

        interfaceinvoke $r22.<org.waveprotocol.wave.model.document.raw.RawDocument: void removeAttribute(java.lang.Object,java.lang.String)>($r8, $r19);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        $r10 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: int access$1004(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl)>($r10);

        $r12 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        $r11 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        $r13 = staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: org.waveprotocol.wave.model.util.OffsetList$Container access$300(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl)>($r11);

        $r14 = interfaceinvoke $r13.<org.waveprotocol.wave.model.util.OffsetList$Container: org.waveprotocol.wave.model.util.OffsetList$Container getNextContainer()>();

        staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: org.waveprotocol.wave.model.util.OffsetList$Container access$302(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl,org.waveprotocol.wave.model.util.OffsetList$Container)>($r12, $r14);

        $r15 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: java.lang.Object access$502(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl,java.lang.Object)>($r15, $r8);

        $r17 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        $r16 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        $r18 = staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: java.lang.Object access$500(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl)>($r16);

        virtualinvoke $r17.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: void onModifyAttributes(java.lang.Object,org.waveprotocol.wave.model.document.operation.AttributesUpdate)>($r18, r9);

        return;
    }

    public void deleteCharacters(java.lang.String)
    {
        org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl $r1, $r4, $r5, $r6;
        java.lang.AssertionError $r7;
        org.waveprotocol.wave.model.document.indexed.RawAnnotationSet $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.String r3;
        org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor;

        r3 := @parameter0: java.lang.String;

        $z0 = <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i3 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i3 > 0 goto label1;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label1:
        $r1 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: org.waveprotocol.wave.model.document.indexed.RawAnnotationSet access$900(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl)>($r1);

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        interfaceinvoke $r2.<org.waveprotocol.wave.model.document.indexed.RawAnnotationSet: void delete(int)>($i0);

        $r4 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        $i1 = virtualinvoke r3.<java.lang.String: int length()>();

        staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: java.lang.String access$1100(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl,int)>($r4, $i1);

        $r6 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        $r5 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        $i2 = staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: int access$1000(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl)>($r5);

        virtualinvoke $r6.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: void onDeleteCharacters(int,java.lang.String)>($i2, r3);

        return;
    }

    public void replaceAttributes(org.waveprotocol.wave.model.document.operation.Attributes, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.indexed.RawAnnotationSet $r2;
        boolean $z0, $z1, $z2;
        org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl $r1, $r3, $r5, $r15, $r16, $r17, $r20, $r21, $r22, $r26, $r36;
        java.util.Set $r10, $r13;
        org.waveprotocol.wave.model.document.operation.Attributes r9, r12;
        org.waveprotocol.wave.model.document.raw.RawDocument $r4, $r27, $r37;
        org.waveprotocol.wave.model.util.OffsetList$Container $r6, $r18, $r19;
        java.lang.String $r29, $r31, r35;
        org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor r0;
        java.util.Map$Entry r38, r39;
        java.util.Iterator $r11, $r14;
        org.waveprotocol.wave.model.operation.OpCursorException $r32;
        java.lang.Object $r7, $r8, $r23, $r24, $r25, $r28, $r30, $r33, $r34;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor;

        r9 := @parameter0: org.waveprotocol.wave.model.document.operation.Attributes;

        r12 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        $r1 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: org.waveprotocol.wave.model.document.indexed.RawAnnotationSet access$900(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl)>($r1);

        interfaceinvoke $r2.<org.waveprotocol.wave.model.document.indexed.RawAnnotationSet: void skip(int)>(1);

        $r3 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        $r4 = staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: org.waveprotocol.wave.model.document.raw.RawDocument access$100(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl)>($r3);

        $r5 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        $r6 = staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: org.waveprotocol.wave.model.util.OffsetList$Container access$300(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl)>($r5);

        $r7 = interfaceinvoke $r6.<org.waveprotocol.wave.model.util.OffsetList$Container: java.lang.Object getValue()>();

        $r8 = interfaceinvoke $r4.<org.waveprotocol.wave.model.document.raw.RawDocument: java.lang.Object asElement(java.lang.Object)>($r7);

        $r10 = interfaceinvoke r9.<org.waveprotocol.wave.model.document.operation.Attributes: java.util.Set entrySet()>();

        $r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r33 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r38 = (java.util.Map$Entry) $r33;

        $r34 = interfaceinvoke r38.<java.util.Map$Entry: java.lang.Object getKey()>();

        r35 = (java.lang.String) $r34;

        $z2 = interfaceinvoke r12.<org.waveprotocol.wave.model.document.operation.Attributes: boolean containsKey(java.lang.Object)>(r35);

        if $z2 != 0 goto label2;

        $r36 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        $r37 = staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: org.waveprotocol.wave.model.document.raw.RawDocument access$100(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl)>($r36);

        interfaceinvoke $r37.<org.waveprotocol.wave.model.document.raw.RawDocument: void removeAttribute(java.lang.Object,java.lang.String)>($r8, r35);

     label2:
        goto label1;

     label3:
        $r13 = interfaceinvoke r12.<org.waveprotocol.wave.model.document.operation.Attributes: java.util.Set entrySet()>();

        $r14 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r24 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r39 = (java.util.Map$Entry) $r24;

        $r25 = interfaceinvoke r39.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r25 != null goto label5;

        $r32 = new org.waveprotocol.wave.model.operation.OpCursorException;

        specialinvoke $r32.<org.waveprotocol.wave.model.operation.OpCursorException: void <init>(java.lang.String)>("Null attribute value in setAttributes");

        throw $r32;

     label5:
        $r26 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        $r27 = staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: org.waveprotocol.wave.model.document.raw.RawDocument access$100(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl)>($r26);

        $r28 = interfaceinvoke r39.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r29 = (java.lang.String) $r28;

        $r30 = interfaceinvoke r39.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r31 = (java.lang.String) $r30;

        interfaceinvoke $r27.<org.waveprotocol.wave.model.document.raw.RawDocument: void setAttribute(java.lang.Object,java.lang.String,java.lang.String)>($r8, $r29, $r31);

        goto label4;

     label6:
        $r15 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: int access$1004(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl)>($r15);

        $r17 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        $r16 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        $r18 = staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: org.waveprotocol.wave.model.util.OffsetList$Container access$300(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl)>($r16);

        $r19 = interfaceinvoke $r18.<org.waveprotocol.wave.model.util.OffsetList$Container: org.waveprotocol.wave.model.util.OffsetList$Container getNextContainer()>();

        staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: org.waveprotocol.wave.model.util.OffsetList$Container access$302(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl,org.waveprotocol.wave.model.util.OffsetList$Container)>($r17, $r19);

        $r20 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: java.lang.Object access$502(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl,java.lang.Object)>($r20, $r8);

        $r22 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        $r21 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        $r23 = staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: java.lang.Object access$500(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl)>($r21);

        virtualinvoke $r22.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: void onModifyAttributes(java.lang.Object,org.waveprotocol.wave.model.document.operation.Attributes,org.waveprotocol.wave.model.document.operation.Attributes)>($r23, r9, r12);

        return;
    }

    public void retain(int)
    {
        org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl $r1, $r2, $r4, $r5;
        java.lang.AssertionError $r6;
        org.waveprotocol.wave.model.document.indexed.RawAnnotationSet $r3;
        int i0;
        org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor;

        i0 := @parameter0: int;

        $z0 = <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if i0 > 0 goto label1;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label1:
        $r1 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: void access$1200(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl,int)>($r1, i0);

        $r2 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        $r3 = staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: org.waveprotocol.wave.model.document.indexed.RawAnnotationSet access$900(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl)>($r2);

        interfaceinvoke $r3.<org.waveprotocol.wave.model.document.indexed.RawAnnotationSet: void skip(int)>(i0);

        $r4 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: int access$1012(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl,int)>($r4, i0);

        $r5 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: void access$1300(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl)>($r5);

        return;
    }

    public void annotationBoundary(org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap)
    {
        org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl $r2, $r5;
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap r0;
        int $i0, $i1, i2, i3;
        java.lang.String $r3, $r4, $r6;
        org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor r1;

        r1 := @this: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap;

        i2 = 0;

     label1:
        $i0 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: int endSize()>();

        if i2 >= $i0 goto label2;

        $r5 = r1.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        $r6 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: java.lang.String getEndKey(int)>(i2);

        staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: void access$1400(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl,java.lang.String)>($r5, $r6);

        i2 = i2 + 1;

        goto label1;

     label2:
        i3 = 0;

     label3:
        $i1 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: int changeSize()>();

        if i3 >= $i1 goto label4;

        $r2 = r1.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        $r3 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: java.lang.String getChangeKey(int)>(i3);

        $r4 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: java.lang.String getNewValue(int)>(i3);

        staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: void access$1500(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl,java.lang.String,java.lang.String)>($r2, $r3, $r4);

        i3 = i3 + 1;

        goto label3;

     label4:
        return;
    }

    public void characters(java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl $r2;
        org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor r0;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: void access$1600(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl,java.lang.String)>($r2, r1);

        return;
    }

    public void elementEnd()
    {
        org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl $r1;
        org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor r0;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor;

        $r1 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: void access$1700(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl)>($r1);

        return;
    }

    public void elementStart(java.lang.String, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl $r3;
        java.lang.String r1;
        org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor r0;
        org.waveprotocol.wave.model.document.operation.Attributes r2;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        $r3 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: void access$1800(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl,java.lang.String,org.waveprotocol.wave.model.document.operation.Attributes)>($r3, r1, r2);

        return;
    }

    public void deleteElementStart(java.lang.String, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.indexed.RawAnnotationSet $r9;
        org.waveprotocol.wave.model.util.OffsetList$Container $r4;
        int $i0, $i1;
        java.lang.String r19;
        org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor r0;
        org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl $r1, $r3, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r16;
        org.waveprotocol.wave.model.operation.OpCursorException $r18;
        org.waveprotocol.wave.model.document.operation.Attributes r20;
        org.waveprotocol.wave.model.document.raw.RawDocument $r2, $r15;
        java.lang.Object $r5, $r6, $r17;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor;

        r19 := @parameter0: java.lang.String;

        r20 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        $r1 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: org.waveprotocol.wave.model.document.raw.RawDocument access$100(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl)>($r1);

        $r3 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        $r4 = staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: org.waveprotocol.wave.model.util.OffsetList$Container access$300(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl)>($r3);

        $r5 = interfaceinvoke $r4.<org.waveprotocol.wave.model.util.OffsetList$Container: java.lang.Object getValue()>();

        $r6 = interfaceinvoke $r2.<org.waveprotocol.wave.model.document.raw.RawDocument: java.lang.Object asElement(java.lang.Object)>($r5);

        if $r6 != null goto label1;

        $r18 = new org.waveprotocol.wave.model.operation.OpCursorException;

        specialinvoke $r18.<org.waveprotocol.wave.model.operation.OpCursorException: void <init>(java.lang.String)>("No element to delete at the current location.");

        throw $r18;

     label1:
        $r7 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        $i0 = staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: int access$1900(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl)>($r7);

        if $i0 != 0 goto label2;

        $r14 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        $r15 = staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: org.waveprotocol.wave.model.document.raw.RawDocument access$100(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl)>($r14);

        $r16 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        $r17 = staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: java.lang.Object access$500(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl)>($r16);

        interfaceinvoke $r15.<org.waveprotocol.wave.model.document.raw.RawDocument: void removeChild(java.lang.Object,java.lang.Object)>($r17, $r6);

     label2:
        $r8 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        $r9 = staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: org.waveprotocol.wave.model.document.indexed.RawAnnotationSet access$900(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl)>($r8);

        interfaceinvoke $r9.<org.waveprotocol.wave.model.document.indexed.RawAnnotationSet: void delete(int)>(1);

        $r10 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: void access$2000(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl)>($r10);

        $r11 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: int access$1904(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl)>($r11);

        $r13 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        $r12 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        $i1 = staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: int access$1000(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl)>($r12);

        virtualinvoke $r13.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: void onDeleteElementStart(int,java.lang.Object)>($i1, $r6);

        return;
    }

    public void deleteElementEnd()
    {
        org.waveprotocol.wave.model.document.indexed.RawAnnotationSet $r3;
        org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl $r1, $r2, $r4, $r5;
        org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor r0;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor;

        $r1 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        virtualinvoke $r1.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: void onDeleteElementEnd()>();

        $r2 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        $r3 = staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: org.waveprotocol.wave.model.document.indexed.RawAnnotationSet access$900(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl)>($r2);

        interfaceinvoke $r3.<org.waveprotocol.wave.model.document.indexed.RawAnnotationSet: void delete(int)>(1);

        $r4 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: void access$2000(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl)>($r4);

        $r5 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl this$0>;

        staticinvoke <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl: int access$1906(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl)>($r5);

        return;
    }

    void <init>(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl, org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$1)
    {
        org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$1 r2;
        org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl r1;
        org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor r0;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor;

        r1 := @parameter0: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl;

        r2 := @parameter1: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$1;

        specialinvoke r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: void <init>(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl)>(r1);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/waveprotocol/wave/model/document/indexed/IndexedDocumentImpl;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$InvertibleCursor: boolean $assertionsDisabled> = $z1;

        return;
    }
}
