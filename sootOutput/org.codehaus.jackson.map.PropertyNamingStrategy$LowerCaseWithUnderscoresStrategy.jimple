public class org.codehaus.jackson.map.PropertyNamingStrategy$LowerCaseWithUnderscoresStrategy extends org.codehaus.jackson.map.PropertyNamingStrategy$PropertyNamingStrategyBase
{

    public void <init>()
    {
        org.codehaus.jackson.map.PropertyNamingStrategy$LowerCaseWithUnderscoresStrategy r0;

        r0 := @this: org.codehaus.jackson.map.PropertyNamingStrategy$LowerCaseWithUnderscoresStrategy;

        specialinvoke r0.<org.codehaus.jackson.map.PropertyNamingStrategy$PropertyNamingStrategyBase: void <init>()>();

        return;
    }

    public java.lang.String translate(java.lang.String)
    {
        int $i0, $i1, $i3, i5, i6, $i8, $i9;
        java.lang.String r0, $r3;
        boolean $z0, z1;
        char $c2, $c4, c7;
        java.lang.StringBuilder $r4;
        org.codehaus.jackson.map.PropertyNamingStrategy$LowerCaseWithUnderscoresStrategy r2;

        r2 := @this: org.codehaus.jackson.map.PropertyNamingStrategy$LowerCaseWithUnderscoresStrategy;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label01;

        return r0;

     label01:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r4 = new java.lang.StringBuilder;

        $i1 = $i0 * 2;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i1);

        i5 = 0;

        z1 = 0;

        i6 = 0;

     label02:
        if i6 >= $i0 goto label08;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

        c7 = $c2;

        if i6 > 0 goto label03;

        $i8 = (int) $c2;

        if $i8 == 95 goto label07;

     label03:
        $z0 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>($c2);

        if $z0 == 0 goto label05;

        if z1 != 0 goto label04;

        if i5 <= 0 goto label04;

        $i3 = i5 - 1;

        $c4 = virtualinvoke $r4.<java.lang.StringBuilder: char charAt(int)>($i3);

        $i9 = (int) $c4;

        if $i9 == 95 goto label04;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(95);

        i5 = i5 + 1;

     label04:
        c7 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c2);

        z1 = 1;

        goto label06;

     label05:
        z1 = 0;

     label06:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c7);

        i5 = i5 + 1;

     label07:
        i6 = i6 + 1;

        goto label02;

     label08:
        if i5 <= 0 goto label09;

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label10;

     label09:
        $r3 = r0;

     label10:
        return $r3;
    }
}
