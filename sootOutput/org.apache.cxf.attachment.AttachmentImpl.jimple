public class org.apache.cxf.attachment.AttachmentImpl extends java.lang.Object implements org.apache.cxf.message.Attachment
{
    private javax.activation.DataHandler dataHandler;
    private java.lang.String id;
    private java.util.Map headers;
    private boolean xop;

    public void <init>(java.lang.String)
    {
        org.apache.cxf.attachment.AttachmentImpl r0;
        java.util.HashMap $r1;
        java.lang.String r2;

        r0 := @this: org.apache.cxf.attachment.AttachmentImpl;

        r2 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.cxf.attachment.AttachmentImpl: java.util.Map headers> = $r1;

        r0.<org.apache.cxf.attachment.AttachmentImpl: java.lang.String id> = r2;

        return;
    }

    public void <init>(java.lang.String, javax.activation.DataHandler)
    {
        javax.activation.CommandMap $r5;
        org.apache.cxf.attachment.AttachmentImpl r0;
        java.util.HashMap $r1;
        java.lang.String r2;
        javax.activation.DataHandler r3, $r4;

        r0 := @this: org.apache.cxf.attachment.AttachmentImpl;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: javax.activation.DataHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.cxf.attachment.AttachmentImpl: java.util.Map headers> = $r1;

        r0.<org.apache.cxf.attachment.AttachmentImpl: java.lang.String id> = r2;

        r0.<org.apache.cxf.attachment.AttachmentImpl: javax.activation.DataHandler dataHandler> = r3;

        $r4 = r0.<org.apache.cxf.attachment.AttachmentImpl: javax.activation.DataHandler dataHandler>;

        $r5 = staticinvoke <org.apache.cxf.attachment.AttachmentUtil: javax.activation.CommandMap getCommandMap()>();

        virtualinvoke $r4.<javax.activation.DataHandler: void setCommandMap(javax.activation.CommandMap)>($r5);

        return;
    }

    public java.lang.String getId()
    {
        org.apache.cxf.attachment.AttachmentImpl r0;
        java.lang.String $r1;

        r0 := @this: org.apache.cxf.attachment.AttachmentImpl;

        $r1 = r0.<org.apache.cxf.attachment.AttachmentImpl: java.lang.String id>;

        return $r1;
    }

    public javax.activation.DataHandler getDataHandler()
    {
        org.apache.cxf.attachment.AttachmentImpl r0;
        javax.activation.DataHandler $r1;

        r0 := @this: org.apache.cxf.attachment.AttachmentImpl;

        $r1 = r0.<org.apache.cxf.attachment.AttachmentImpl: javax.activation.DataHandler dataHandler>;

        return $r1;
    }

    public void setDataHandler(javax.activation.DataHandler)
    {
        javax.activation.CommandMap $r3;
        org.apache.cxf.attachment.AttachmentImpl r0;
        javax.activation.DataHandler r1, $r2;

        r0 := @this: org.apache.cxf.attachment.AttachmentImpl;

        r1 := @parameter0: javax.activation.DataHandler;

        r0.<org.apache.cxf.attachment.AttachmentImpl: javax.activation.DataHandler dataHandler> = r1;

        $r2 = r0.<org.apache.cxf.attachment.AttachmentImpl: javax.activation.DataHandler dataHandler>;

        $r3 = staticinvoke <org.apache.cxf.attachment.AttachmentUtil: javax.activation.CommandMap getCommandMap()>();

        virtualinvoke $r2.<javax.activation.DataHandler: void setCommandMap(javax.activation.CommandMap)>($r3);

        return;
    }

    public void setHeader(java.lang.String, java.lang.String)
    {
        java.util.Map $r3;
        org.apache.cxf.attachment.AttachmentImpl r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.cxf.attachment.AttachmentImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.cxf.attachment.AttachmentImpl: java.util.Map headers>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public java.lang.String getHeader(java.lang.String)
    {
        java.util.Map $r2, $r5;
        org.apache.cxf.attachment.AttachmentImpl r0;
        java.lang.Object $r3, $r7;
        java.lang.String r1, r4, $r6, $r8;

        r0 := @this: org.apache.cxf.attachment.AttachmentImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.cxf.attachment.AttachmentImpl: java.util.Map headers>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.lang.String) $r3;

        if r4 != null goto label1;

        $r5 = r0.<org.apache.cxf.attachment.AttachmentImpl: java.util.Map headers>;

        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r8 = (java.lang.String) $r7;

        goto label2;

     label1:
        $r8 = r4;

     label2:
        return $r8;
    }

    public java.util.Iterator getHeaderNames()
    {
        java.util.Iterator $r3;
        java.util.Map $r1;
        org.apache.cxf.attachment.AttachmentImpl r0;
        java.util.Set $r2;

        r0 := @this: org.apache.cxf.attachment.AttachmentImpl;

        $r1 = r0.<org.apache.cxf.attachment.AttachmentImpl: java.util.Map headers>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        return $r3;
    }

    public boolean isXOP()
    {
        org.apache.cxf.attachment.AttachmentImpl r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.attachment.AttachmentImpl;

        $z0 = r0.<org.apache.cxf.attachment.AttachmentImpl: boolean xop>;

        return $z0;
    }

    public void setXOP(boolean)
    {
        org.apache.cxf.attachment.AttachmentImpl r0;
        boolean z0;

        r0 := @this: org.apache.cxf.attachment.AttachmentImpl;

        z0 := @parameter0: boolean;

        r0.<org.apache.cxf.attachment.AttachmentImpl: boolean xop> = z0;

        return;
    }
}
