public class org.apache.solr.client.solrj.impl.BinaryRequestWriter extends org.apache.solr.client.solrj.request.RequestWriter
{

    public void <init>()
    {
        org.apache.solr.client.solrj.impl.BinaryRequestWriter r0;

        r0 := @this: org.apache.solr.client.solrj.impl.BinaryRequestWriter;

        specialinvoke r0.<org.apache.solr.client.solrj.request.RequestWriter: void <init>()>();

        return;
    }

    public java.util.Collection getContentStreams(org.apache.solr.client.solrj.SolrRequest) throws java.io.IOException
    {
        org.apache.solr.client.solrj.SolrRequest r0;
        java.util.Iterator $r7;
        java.util.Collection $r2;
        org.apache.solr.client.solrj.impl.BinaryRequestWriter r1;
        java.util.ArrayList $r8;
        java.util.List $r4, $r5, $r6;
        org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream $r9;
        org.apache.solr.client.solrj.request.UpdateRequest r3;
        boolean $z0, $z1, $z2, $z3;

        r1 := @this: org.apache.solr.client.solrj.impl.BinaryRequestWriter;

        r0 := @parameter0: org.apache.solr.client.solrj.SolrRequest;

        $z0 = r0 instanceof org.apache.solr.client.solrj.request.UpdateRequest;

        if $z0 == 0 goto label2;

        r3 = (org.apache.solr.client.solrj.request.UpdateRequest) r0;

        $r4 = virtualinvoke r3.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List getDocuments()>();

        $z1 = virtualinvoke r1.<org.apache.solr.client.solrj.impl.BinaryRequestWriter: boolean isNull(java.util.List)>($r4);

        if $z1 == 0 goto label1;

        $r5 = virtualinvoke r3.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List getDeleteById()>();

        $z2 = virtualinvoke r1.<org.apache.solr.client.solrj.impl.BinaryRequestWriter: boolean isNull(java.util.List)>($r5);

        if $z2 == 0 goto label1;

        $r6 = virtualinvoke r3.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List getDeleteQuery()>();

        $z3 = virtualinvoke r1.<org.apache.solr.client.solrj.impl.BinaryRequestWriter: boolean isNull(java.util.List)>($r6);

        if $z3 == 0 goto label1;

        $r7 = virtualinvoke r3.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.Iterator getDocIterator()>();

        if $r7 != null goto label1;

        return null;

     label1:
        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        $r9 = new org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream;

        specialinvoke $r9.<org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream: void <init>(org.apache.solr.client.solrj.request.RequestWriter,org.apache.solr.client.solrj.request.UpdateRequest)>(r1, r3);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9);

        return $r8;

     label2:
        $r2 = specialinvoke r1.<org.apache.solr.client.solrj.request.RequestWriter: java.util.Collection getContentStreams(org.apache.solr.client.solrj.SolrRequest)>(r0);

        return $r2;
    }

    public java.lang.String getUpdateContentType()
    {
        org.apache.solr.client.solrj.impl.BinaryRequestWriter r0;

        r0 := @this: org.apache.solr.client.solrj.impl.BinaryRequestWriter;

        return "application/javabin";
    }

    public org.apache.solr.common.util.ContentStream getContentStream(org.apache.solr.client.solrj.request.UpdateRequest) throws java.io.IOException
    {
        org.apache.solr.client.solrj.impl.BinaryRequestWriter$BAOS $r0;
        org.apache.solr.client.solrj.request.UpdateRequest r3;
        org.apache.solr.client.solrj.impl.BinaryRequestWriter$1 $r4;
        org.apache.solr.client.solrj.impl.BinaryRequestWriter r1;
        org.apache.solr.client.solrj.request.JavaBinUpdateRequestCodec $r2;

        r1 := @this: org.apache.solr.client.solrj.impl.BinaryRequestWriter;

        r3 := @parameter0: org.apache.solr.client.solrj.request.UpdateRequest;

        $r0 = new org.apache.solr.client.solrj.impl.BinaryRequestWriter$BAOS;

        specialinvoke $r0.<org.apache.solr.client.solrj.impl.BinaryRequestWriter$BAOS: void <init>(org.apache.solr.client.solrj.impl.BinaryRequestWriter)>(r1);

        $r2 = new org.apache.solr.client.solrj.request.JavaBinUpdateRequestCodec;

        specialinvoke $r2.<org.apache.solr.client.solrj.request.JavaBinUpdateRequestCodec: void <init>()>();

        virtualinvoke $r2.<org.apache.solr.client.solrj.request.JavaBinUpdateRequestCodec: void marshal(org.apache.solr.client.solrj.request.UpdateRequest,java.io.OutputStream)>(r3, $r0);

        $r4 = new org.apache.solr.client.solrj.impl.BinaryRequestWriter$1;

        specialinvoke $r4.<org.apache.solr.client.solrj.impl.BinaryRequestWriter$1: void <init>(org.apache.solr.client.solrj.impl.BinaryRequestWriter,org.apache.solr.client.solrj.impl.BinaryRequestWriter$BAOS)>(r1, $r0);

        return $r4;
    }

    public void write(org.apache.solr.client.solrj.SolrRequest, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r3;
        org.apache.solr.client.solrj.SolrRequest r0;
        org.apache.solr.client.solrj.request.UpdateRequest r1;
        org.apache.solr.client.solrj.request.JavaBinUpdateRequestCodec $r2;
        org.apache.solr.client.solrj.impl.BinaryRequestWriter r4;
        boolean $z0;

        r4 := @this: org.apache.solr.client.solrj.impl.BinaryRequestWriter;

        r0 := @parameter0: org.apache.solr.client.solrj.SolrRequest;

        r3 := @parameter1: java.io.OutputStream;

        $z0 = r0 instanceof org.apache.solr.client.solrj.request.UpdateRequest;

        if $z0 == 0 goto label1;

        r1 = (org.apache.solr.client.solrj.request.UpdateRequest) r0;

        $r2 = new org.apache.solr.client.solrj.request.JavaBinUpdateRequestCodec;

        specialinvoke $r2.<org.apache.solr.client.solrj.request.JavaBinUpdateRequestCodec: void <init>()>();

        virtualinvoke $r2.<org.apache.solr.client.solrj.request.JavaBinUpdateRequestCodec: void marshal(org.apache.solr.client.solrj.request.UpdateRequest,java.io.OutputStream)>(r1, r3);

     label1:
        return;
    }
}
