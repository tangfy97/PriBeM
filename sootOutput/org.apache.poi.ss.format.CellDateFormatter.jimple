public class org.apache.poi.ss.format.CellDateFormatter extends org.apache.poi.ss.format.CellFormatter
{
    private boolean amPmUpper;
    private boolean showM;
    private boolean showAmPm;
    private final java.text.DateFormat dateFmt;
    private java.lang.String sFmt;
    private static final long EXCEL_EPOCH_TIME;
    private static final java.util.Date EXCEL_EPOCH_DATE;
    private static final org.apache.poi.ss.format.CellFormatter SIMPLE_DATE;

    public void <init>(java.lang.String)
    {
        org.apache.poi.ss.format.CellDateFormatter r0;
        java.text.SimpleDateFormat $r7;
        org.apache.poi.ss.format.CellFormatType $r3;
        java.lang.StringBuffer $r4;
        java.util.Locale $r8;
        java.lang.String r1, $r5, $r6;
        org.apache.poi.ss.format.CellDateFormatter$DatePartHandler $r2;

        r0 := @this: org.apache.poi.ss.format.CellDateFormatter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.poi.ss.format.CellFormatter: void <init>(java.lang.String)>(r1);

        $r2 = new org.apache.poi.ss.format.CellDateFormatter$DatePartHandler;

        specialinvoke $r2.<org.apache.poi.ss.format.CellDateFormatter$DatePartHandler: void <init>(org.apache.poi.ss.format.CellDateFormatter,org.apache.poi.ss.format.CellDateFormatter$1)>(r0, null);

        $r3 = <org.apache.poi.ss.format.CellFormatType: org.apache.poi.ss.format.CellFormatType DATE>;

        $r4 = staticinvoke <org.apache.poi.ss.format.CellFormatPart: java.lang.StringBuffer parseFormat(java.lang.String,org.apache.poi.ss.format.CellFormatType,org.apache.poi.ss.format.CellFormatPart$PartHandler)>(r1, $r3, $r2);

        virtualinvoke $r2.<org.apache.poi.ss.format.CellDateFormatter$DatePartHandler: void finish(java.lang.StringBuffer)>($r4);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("((y)(?!y))(?<!yy)", "yy");

        $r7 = new java.text.SimpleDateFormat;

        $r8 = <org.apache.poi.ss.format.CellDateFormatter: java.util.Locale LOCALE>;

        specialinvoke $r7.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>($r6, $r8);

        r0.<org.apache.poi.ss.format.CellDateFormatter: java.text.DateFormat dateFmt> = $r7;

        return;
    }

    public void formatValue(java.lang.StringBuffer, java.lang.Object)
    {
        java.util.Date r6, $r17;
        java.util.Formatter $r18;
        byte $b6;
        java.util.Locale $r9;
        java.text.DateFormat $r15;
        boolean $z0, $z1, $z2, $z3, $z4, z5, z6;
        java.text.AttributedCharacterIterator $r16;
        org.apache.poi.ss.format.CellDateFormatter r0;
        java.lang.Object[] $r8;
        java.lang.Double $r11;
        long $l3, l4, $l7, $l8;
        java.lang.StringBuffer r5;
        int $i2, $i5, $i10, $i12;
        java.lang.String $r10;
        java.lang.Number r14;
        double $d0, $d1, $d2, $d3, $d4;
        char $c0, $c1, c9;
        java.text.DateFormat$Field $r1, $r3;
        java.lang.Object $r2, $r4, r13;

        r0 := @this: org.apache.poi.ss.format.CellDateFormatter;

        r5 := @parameter0: java.lang.StringBuffer;

        r13 := @parameter1: java.lang.Object;

        if r13 != null goto label01;

        r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

     label01:
        $z0 = r13 instanceof java.lang.Number;

        if $z0 == 0 goto label03;

        r14 = (java.lang.Number) r13;

        $d2 = virtualinvoke r14.<java.lang.Number: double doubleValue()>();

        $b6 = $d2 cmpl 0.0;

        if $b6 != 0 goto label02;

        r13 = <org.apache.poi.ss.format.CellDateFormatter: java.util.Date EXCEL_EPOCH_DATE>;

        goto label03;

     label02:
        $r17 = new java.util.Date;

        $l7 = <org.apache.poi.ss.format.CellDateFormatter: long EXCEL_EPOCH_TIME>;

        $d3 = (double) $l7;

        $d4 = $d3 + $d2;

        $l8 = (long) $d4;

        specialinvoke $r17.<java.util.Date: void <init>(long)>($l8);

        r13 = $r17;

     label03:
        $r15 = r0.<org.apache.poi.ss.format.CellDateFormatter: java.text.DateFormat dateFmt>;

        $r16 = virtualinvoke $r15.<java.text.DateFormat: java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object)>(r13);

        z5 = 0;

        z6 = 0;

        interfaceinvoke $r16.<java.text.AttributedCharacterIterator: char first()>();

        c9 = interfaceinvoke $r16.<java.text.AttributedCharacterIterator: char first()>();

     label04:
        $i10 = (int) c9;

        $i12 = (int) 65535;

        if $i10 == $i12 goto label10;

        $r1 = <java.text.DateFormat$Field: java.text.DateFormat$Field MILLISECOND>;

        $r2 = interfaceinvoke $r16.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r1);

        if $r2 == null goto label05;

        if z6 != 0 goto label09;

        r6 = (java.util.Date) r13;

        $i2 = virtualinvoke r5.<java.lang.StringBuffer: int length()>();

        $r18 = new java.util.Formatter;

        specialinvoke $r18.<java.util.Formatter: void <init>(java.lang.Appendable)>(r5);

        $l3 = virtualinvoke r6.<java.util.Date: long getTime()>();

        l4 = $l3 % 1000L;

        $r9 = <org.apache.poi.ss.format.CellDateFormatter: java.util.Locale LOCALE>;

        $r10 = r0.<org.apache.poi.ss.format.CellDateFormatter: java.lang.String sFmt>;

        $r8 = newarray (java.lang.Object)[1];

        $d0 = (double) l4;

        $d1 = $d0 / 1000.0;

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r8[0] = $r11;

        virtualinvoke $r18.<java.util.Formatter: java.util.Formatter format(java.util.Locale,java.lang.String,java.lang.Object[])>($r9, $r10, $r8);

        $i5 = $i2 + 2;

        virtualinvoke r5.<java.lang.StringBuffer: java.lang.StringBuffer delete(int,int)>($i2, $i5);

        z6 = 1;

        goto label09;

     label05:
        $r3 = <java.text.DateFormat$Field: java.text.DateFormat$Field AM_PM>;

        $r4 = interfaceinvoke $r16.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r3);

        if $r4 == null goto label08;

        if z5 != 0 goto label09;

        $z1 = r0.<org.apache.poi.ss.format.CellDateFormatter: boolean showAmPm>;

        if $z1 == 0 goto label07;

        $z2 = r0.<org.apache.poi.ss.format.CellDateFormatter: boolean amPmUpper>;

        if $z2 == 0 goto label06;

        $c1 = staticinvoke <java.lang.Character: char toUpperCase(char)>(c9);

        virtualinvoke r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        $z4 = r0.<org.apache.poi.ss.format.CellDateFormatter: boolean showM>;

        if $z4 == 0 goto label07;

        virtualinvoke r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(77);

        goto label07;

     label06:
        $c0 = staticinvoke <java.lang.Character: char toLowerCase(char)>(c9);

        virtualinvoke r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c0);

        $z3 = r0.<org.apache.poi.ss.format.CellDateFormatter: boolean showM>;

        if $z3 == 0 goto label07;

        virtualinvoke r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(109);

     label07:
        z5 = 1;

        goto label09;

     label08:
        virtualinvoke r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c9);

     label09:
        c9 = interfaceinvoke $r16.<java.text.AttributedCharacterIterator: char next()>();

        goto label04;

     label10:
        return;
    }

    public void simpleValue(java.lang.StringBuffer, java.lang.Object)
    {
        org.apache.poi.ss.format.CellDateFormatter r3;
        java.lang.StringBuffer r0;
        java.lang.Object r1;
        org.apache.poi.ss.format.CellFormatter $r2;

        r3 := @this: org.apache.poi.ss.format.CellDateFormatter;

        r0 := @parameter0: java.lang.StringBuffer;

        r1 := @parameter1: java.lang.Object;

        $r2 = <org.apache.poi.ss.format.CellDateFormatter: org.apache.poi.ss.format.CellFormatter SIMPLE_DATE>;

        virtualinvoke $r2.<org.apache.poi.ss.format.CellFormatter: void formatValue(java.lang.StringBuffer,java.lang.Object)>(r0, r1);

        return;
    }

    static java.lang.String access$002(org.apache.poi.ss.format.CellDateFormatter, java.lang.String)
    {
        org.apache.poi.ss.format.CellDateFormatter r0;
        java.lang.String r1;

        r0 := @parameter0: org.apache.poi.ss.format.CellDateFormatter;

        r1 := @parameter1: java.lang.String;

        r0.<org.apache.poi.ss.format.CellDateFormatter: java.lang.String sFmt> = r1;

        return r1;
    }

    static boolean access$102(org.apache.poi.ss.format.CellDateFormatter, boolean)
    {
        org.apache.poi.ss.format.CellDateFormatter r0;
        boolean z0;

        r0 := @parameter0: org.apache.poi.ss.format.CellDateFormatter;

        z0 := @parameter1: boolean;

        r0.<org.apache.poi.ss.format.CellDateFormatter: boolean showAmPm> = z0;

        return z0;
    }

    static boolean access$202(org.apache.poi.ss.format.CellDateFormatter, boolean)
    {
        org.apache.poi.ss.format.CellDateFormatter r0;
        boolean z0;

        r0 := @parameter0: org.apache.poi.ss.format.CellDateFormatter;

        z0 := @parameter1: boolean;

        r0.<org.apache.poi.ss.format.CellDateFormatter: boolean showM> = z0;

        return z0;
    }

    static boolean access$302(org.apache.poi.ss.format.CellDateFormatter, boolean)
    {
        org.apache.poi.ss.format.CellDateFormatter r0;
        boolean z0;

        r0 := @parameter0: org.apache.poi.ss.format.CellDateFormatter;

        z0 := @parameter1: boolean;

        r0.<org.apache.poi.ss.format.CellDateFormatter: boolean amPmUpper> = z0;

        return z0;
    }

    static boolean access$200(org.apache.poi.ss.format.CellDateFormatter)
    {
        org.apache.poi.ss.format.CellDateFormatter r0;
        boolean $z0;

        r0 := @parameter0: org.apache.poi.ss.format.CellDateFormatter;

        $z0 = r0.<org.apache.poi.ss.format.CellDateFormatter: boolean showM>;

        return $z0;
    }

    static boolean access$100(org.apache.poi.ss.format.CellDateFormatter)
    {
        org.apache.poi.ss.format.CellDateFormatter r0;
        boolean $z0;

        r0 := @parameter0: org.apache.poi.ss.format.CellDateFormatter;

        $z0 = r0.<org.apache.poi.ss.format.CellDateFormatter: boolean showAmPm>;

        return $z0;
    }

    static void <clinit>()
    {
        org.apache.poi.ss.format.CellDateFormatter $r0;
        java.util.Calendar $r1;
        java.util.Date $r2;
        long $l0;

        $r0 = new org.apache.poi.ss.format.CellDateFormatter;

        specialinvoke $r0.<org.apache.poi.ss.format.CellDateFormatter: void <init>(java.lang.String)>("mm/d/y");

        <org.apache.poi.ss.format.CellDateFormatter: org.apache.poi.ss.format.CellFormatter SIMPLE_DATE> = $r0;

        $r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke $r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(1904, 0, 1, 0, 0, 0);

        $r2 = virtualinvoke $r1.<java.util.Calendar: java.util.Date getTime()>();

        <org.apache.poi.ss.format.CellDateFormatter: java.util.Date EXCEL_EPOCH_DATE> = $r2;

        $l0 = virtualinvoke $r1.<java.util.Calendar: long getTimeInMillis()>();

        <org.apache.poi.ss.format.CellDateFormatter: long EXCEL_EPOCH_TIME> = $l0;

        return;
    }
}
