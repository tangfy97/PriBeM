public final class org.bouncycastle.crypto.engines.CAST6Engine extends org.bouncycastle.crypto.engines.CAST5Engine
{
    protected static final int ROUNDS;
    protected static final int BLOCK_SIZE;
    protected int[] _Kr;
    protected int[] _Km;
    protected int[] _Tr;
    protected int[] _Tm;
    private int[] _workingKey;

    public void <init>()
    {
        org.bouncycastle.crypto.engines.CAST6Engine r0;
        int[] $r1, $r2, $r3, $r4, $r5;

        r0 := @this: org.bouncycastle.crypto.engines.CAST6Engine;

        specialinvoke r0.<org.bouncycastle.crypto.engines.CAST5Engine: void <init>()>();

        $r1 = newarray (int)[48];

        r0.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Kr> = $r1;

        $r2 = newarray (int)[48];

        r0.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Km> = $r2;

        $r3 = newarray (int)[192];

        r0.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tr> = $r3;

        $r4 = newarray (int)[192];

        r0.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tm> = $r4;

        $r5 = newarray (int)[8];

        r0.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey> = $r5;

        return;
    }

    public java.lang.String getAlgorithmName()
    {
        org.bouncycastle.crypto.engines.CAST6Engine r0;

        r0 := @this: org.bouncycastle.crypto.engines.CAST6Engine;

        return "CAST6";
    }

    public void reset()
    {
        org.bouncycastle.crypto.engines.CAST6Engine r0;

        r0 := @this: org.bouncycastle.crypto.engines.CAST6Engine;

        return;
    }

    public int getBlockSize()
    {
        org.bouncycastle.crypto.engines.CAST6Engine r0;

        r0 := @this: org.bouncycastle.crypto.engines.CAST6Engine;

        return 16;
    }

    protected void setKey(byte[])
    {
        byte[] r0, r85;
        int[] $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, i160, i161, i162, i163, i164, i165, i166, i167, i168;
        org.bouncycastle.crypto.engines.CAST6Engine r1;

        r1 := @this: org.bouncycastle.crypto.engines.CAST6Engine;

        r0 := @parameter0: byte[];

        i160 = 1518500249;

        i161 = 19;

        i162 = 0;

     label1:
        if i162 >= 24 goto label4;

        i163 = 0;

     label2:
        if i163 >= 8 goto label3;

        $r83 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tm>;

        $i155 = i162 * 8;

        $i156 = $i155 + i163;

        $r83[$i156] = i160;

        i160 = i160 + 1859775393;

        $r84 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tr>;

        $i157 = i162 * 8;

        $i158 = $i157 + i163;

        $r84[$i158] = i161;

        $i159 = i161 + 17;

        i161 = $i159 & 31;

        i163 = i163 + 1;

        goto label2;

     label3:
        i162 = i162 + 1;

        goto label1;

     label4:
        r85 = newarray (byte)[64];

        i164 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r85, 0, i164);

        i165 = 0;

     label5:
        if i165 >= 8 goto label6;

        $r82 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i153 = i165 * 4;

        $i154 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int BytesTo32bits(byte[],int)>(r85, $i153);

        $r82[i165] = $i154;

        i165 = i165 + 1;

        goto label5;

     label6:
        i166 = 0;

     label7:
        if i166 >= 12 goto label8;

        $i0 = i166 * 2;

        i167 = $i0 * 8;

        $r2 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i4 = $r2[6];

        $r3 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i3 = $r3[7];

        $r4 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tm>;

        $i2 = $r4[i167];

        $r5 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tr>;

        $i1 = $r5[i167];

        $i5 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int F1(int,int,int)>($i3, $i2, $i1);

        $i6 = $i4 ^ $i5;

        $r2[6] = $i6;

        $r6 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i12 = $r6[5];

        $r7 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i11 = $r7[6];

        $r8 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tm>;

        $i7 = i167 + 1;

        $i10 = $r8[$i7];

        $r9 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tr>;

        $i8 = i167 + 1;

        $i9 = $r9[$i8];

        $i13 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int F2(int,int,int)>($i11, $i10, $i9);

        $i14 = $i12 ^ $i13;

        $r6[5] = $i14;

        $r10 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i20 = $r10[4];

        $r11 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i19 = $r11[5];

        $r12 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tm>;

        $i15 = i167 + 2;

        $i18 = $r12[$i15];

        $r13 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tr>;

        $i16 = i167 + 2;

        $i17 = $r13[$i16];

        $i21 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int F3(int,int,int)>($i19, $i18, $i17);

        $i22 = $i20 ^ $i21;

        $r10[4] = $i22;

        $r14 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i28 = $r14[3];

        $r15 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i27 = $r15[4];

        $r16 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tm>;

        $i23 = i167 + 3;

        $i26 = $r16[$i23];

        $r17 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tr>;

        $i24 = i167 + 3;

        $i25 = $r17[$i24];

        $i29 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int F1(int,int,int)>($i27, $i26, $i25);

        $i30 = $i28 ^ $i29;

        $r14[3] = $i30;

        $r18 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i36 = $r18[2];

        $r19 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i35 = $r19[3];

        $r20 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tm>;

        $i31 = i167 + 4;

        $i34 = $r20[$i31];

        $r21 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tr>;

        $i32 = i167 + 4;

        $i33 = $r21[$i32];

        $i37 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int F2(int,int,int)>($i35, $i34, $i33);

        $i38 = $i36 ^ $i37;

        $r18[2] = $i38;

        $r22 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i44 = $r22[1];

        $r23 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i43 = $r23[2];

        $r24 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tm>;

        $i39 = i167 + 5;

        $i42 = $r24[$i39];

        $r25 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tr>;

        $i40 = i167 + 5;

        $i41 = $r25[$i40];

        $i45 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int F3(int,int,int)>($i43, $i42, $i41);

        $i46 = $i44 ^ $i45;

        $r22[1] = $i46;

        $r26 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i52 = $r26[0];

        $r27 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i51 = $r27[1];

        $r28 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tm>;

        $i47 = i167 + 6;

        $i50 = $r28[$i47];

        $r29 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tr>;

        $i48 = i167 + 6;

        $i49 = $r29[$i48];

        $i53 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int F1(int,int,int)>($i51, $i50, $i49);

        $i54 = $i52 ^ $i53;

        $r26[0] = $i54;

        $r30 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i60 = $r30[7];

        $r31 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i59 = $r31[0];

        $r32 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tm>;

        $i55 = i167 + 7;

        $i58 = $r32[$i55];

        $r33 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tr>;

        $i56 = i167 + 7;

        $i57 = $r33[$i56];

        $i61 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int F2(int,int,int)>($i59, $i58, $i57);

        $i62 = $i60 ^ $i61;

        $r30[7] = $i62;

        $i63 = i166 * 2;

        $i64 = $i63 + 1;

        i168 = $i64 * 8;

        $r34 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i68 = $r34[6];

        $r35 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i67 = $r35[7];

        $r36 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tm>;

        $i66 = $r36[i168];

        $r37 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tr>;

        $i65 = $r37[i168];

        $i69 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int F1(int,int,int)>($i67, $i66, $i65);

        $i70 = $i68 ^ $i69;

        $r34[6] = $i70;

        $r38 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i76 = $r38[5];

        $r39 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i75 = $r39[6];

        $r40 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tm>;

        $i71 = i168 + 1;

        $i74 = $r40[$i71];

        $r41 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tr>;

        $i72 = i168 + 1;

        $i73 = $r41[$i72];

        $i77 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int F2(int,int,int)>($i75, $i74, $i73);

        $i78 = $i76 ^ $i77;

        $r38[5] = $i78;

        $r42 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i84 = $r42[4];

        $r43 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i83 = $r43[5];

        $r44 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tm>;

        $i79 = i168 + 2;

        $i82 = $r44[$i79];

        $r45 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tr>;

        $i80 = i168 + 2;

        $i81 = $r45[$i80];

        $i85 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int F3(int,int,int)>($i83, $i82, $i81);

        $i86 = $i84 ^ $i85;

        $r42[4] = $i86;

        $r46 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i92 = $r46[3];

        $r47 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i91 = $r47[4];

        $r48 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tm>;

        $i87 = i168 + 3;

        $i90 = $r48[$i87];

        $r49 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tr>;

        $i88 = i168 + 3;

        $i89 = $r49[$i88];

        $i93 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int F1(int,int,int)>($i91, $i90, $i89);

        $i94 = $i92 ^ $i93;

        $r46[3] = $i94;

        $r50 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i100 = $r50[2];

        $r51 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i99 = $r51[3];

        $r52 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tm>;

        $i95 = i168 + 4;

        $i98 = $r52[$i95];

        $r53 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tr>;

        $i96 = i168 + 4;

        $i97 = $r53[$i96];

        $i101 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int F2(int,int,int)>($i99, $i98, $i97);

        $i102 = $i100 ^ $i101;

        $r50[2] = $i102;

        $r54 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i108 = $r54[1];

        $r55 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i107 = $r55[2];

        $r56 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tm>;

        $i103 = i168 + 5;

        $i106 = $r56[$i103];

        $r57 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tr>;

        $i104 = i168 + 5;

        $i105 = $r57[$i104];

        $i109 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int F3(int,int,int)>($i107, $i106, $i105);

        $i110 = $i108 ^ $i109;

        $r54[1] = $i110;

        $r58 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i116 = $r58[0];

        $r59 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i115 = $r59[1];

        $r60 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tm>;

        $i111 = i168 + 6;

        $i114 = $r60[$i111];

        $r61 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tr>;

        $i112 = i168 + 6;

        $i113 = $r61[$i112];

        $i117 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int F1(int,int,int)>($i115, $i114, $i113);

        $i118 = $i116 ^ $i117;

        $r58[0] = $i118;

        $r62 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i124 = $r62[7];

        $r63 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i123 = $r63[0];

        $r64 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tm>;

        $i119 = i168 + 7;

        $i122 = $r64[$i119];

        $r65 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Tr>;

        $i120 = i168 + 7;

        $i121 = $r65[$i120];

        $i125 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int F2(int,int,int)>($i123, $i122, $i121);

        $i126 = $i124 ^ $i125;

        $r62[7] = $i126;

        $r67 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        $i129 = i166 * 4;

        $r66 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i127 = $r66[0];

        $i128 = $i127 & 31;

        $r67[$i129] = $i128;

        $r69 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        $i130 = i166 * 4;

        $i133 = $i130 + 1;

        $r68 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i131 = $r68[2];

        $i132 = $i131 & 31;

        $r69[$i133] = $i132;

        $r71 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        $i134 = i166 * 4;

        $i137 = $i134 + 2;

        $r70 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i135 = $r70[4];

        $i136 = $i135 & 31;

        $r71[$i137] = $i136;

        $r73 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        $i138 = i166 * 4;

        $i141 = $i138 + 3;

        $r72 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i139 = $r72[6];

        $i140 = $i139 & 31;

        $r73[$i141] = $i140;

        $r75 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i143 = i166 * 4;

        $r74 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i142 = $r74[7];

        $r75[$i143] = $i142;

        $r77 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i144 = i166 * 4;

        $i146 = $i144 + 1;

        $r76 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i145 = $r76[5];

        $r77[$i146] = $i145;

        $r79 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i147 = i166 * 4;

        $i149 = $i147 + 2;

        $r78 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i148 = $r78[3];

        $r79[$i149] = $i148;

        $r81 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i150 = i166 * 4;

        $i152 = $i150 + 3;

        $r80 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        $i151 = $r80[1];

        $r81[$i152] = $i151;

        i166 = i166 + 1;

        goto label7;

     label8:
        return;
    }

    protected int encryptBlock(byte[], int, byte[], int)
    {
        byte[] r2, r3;
        int[] r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        org.bouncycastle.crypto.engines.CAST6Engine r1;

        r1 := @this: org.bouncycastle.crypto.engines.CAST6Engine;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        r3 := @parameter2: byte[];

        i8 := @parameter3: int;

        r0 = newarray (int)[4];

        $i1 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int BytesTo32bits(byte[],int)>(r2, i0);

        $i2 = i0 + 4;

        $i3 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int BytesTo32bits(byte[],int)>(r2, $i2);

        $i4 = i0 + 8;

        $i5 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int BytesTo32bits(byte[],int)>(r2, $i4);

        $i6 = i0 + 12;

        $i7 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int BytesTo32bits(byte[],int)>(r2, $i6);

        virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: void CAST_Encipher(int,int,int,int,int[])>($i1, $i3, $i5, $i7, r0);

        $i9 = r0[0];

        virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: void Bits32ToBytes(int,byte[],int)>($i9, r3, i8);

        $i11 = r0[1];

        $i10 = i8 + 4;

        virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: void Bits32ToBytes(int,byte[],int)>($i11, r3, $i10);

        $i13 = r0[2];

        $i12 = i8 + 8;

        virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: void Bits32ToBytes(int,byte[],int)>($i13, r3, $i12);

        $i15 = r0[3];

        $i14 = i8 + 12;

        virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: void Bits32ToBytes(int,byte[],int)>($i15, r3, $i14);

        return 16;
    }

    protected int decryptBlock(byte[], int, byte[], int)
    {
        byte[] r2, r3;
        int[] r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        org.bouncycastle.crypto.engines.CAST6Engine r1;

        r1 := @this: org.bouncycastle.crypto.engines.CAST6Engine;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        r3 := @parameter2: byte[];

        i8 := @parameter3: int;

        r0 = newarray (int)[4];

        $i1 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int BytesTo32bits(byte[],int)>(r2, i0);

        $i2 = i0 + 4;

        $i3 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int BytesTo32bits(byte[],int)>(r2, $i2);

        $i4 = i0 + 8;

        $i5 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int BytesTo32bits(byte[],int)>(r2, $i4);

        $i6 = i0 + 12;

        $i7 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int BytesTo32bits(byte[],int)>(r2, $i6);

        virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: void CAST_Decipher(int,int,int,int,int[])>($i1, $i3, $i5, $i7, r0);

        $i9 = r0[0];

        virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: void Bits32ToBytes(int,byte[],int)>($i9, r3, i8);

        $i11 = r0[1];

        $i10 = i8 + 4;

        virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: void Bits32ToBytes(int,byte[],int)>($i11, r3, $i10);

        $i13 = r0[2];

        $i12 = i8 + 8;

        virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: void Bits32ToBytes(int,byte[],int)>($i13, r3, $i12);

        $i15 = r0[3];

        $i14 = i8 + 12;

        virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: void Bits32ToBytes(int,byte[],int)>($i15, r3, $i14);

        return 16;
    }

    protected final void CAST_Encipher(int, int, int, int, int[])
    {
        int[] r0, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, i36, i37, i38, i39, i40, i41, i42, i43;
        org.bouncycastle.crypto.engines.CAST6Engine r1;

        r1 := @this: org.bouncycastle.crypto.engines.CAST6Engine;

        i36 := @parameter0: int;

        i37 := @parameter1: int;

        i38 := @parameter2: int;

        i39 := @parameter3: int;

        r0 := @parameter4: int[];

        i40 = 0;

     label1:
        if i40 >= 6 goto label2;

        i41 = i40 * 4;

        $r10 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i19 = $r10[i41];

        $r11 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        $i18 = $r11[i41];

        $i20 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int F1(int,int,int)>(i39, $i19, $i18);

        i38 = i38 ^ $i20;

        $r12 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i21 = i41 + 1;

        $i24 = $r12[$i21];

        $r13 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        $i22 = i41 + 1;

        $i23 = $r13[$i22];

        $i25 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int F2(int,int,int)>(i38, $i24, $i23);

        i37 = i37 ^ $i25;

        $r14 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i26 = i41 + 2;

        $i29 = $r14[$i26];

        $r15 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        $i27 = i41 + 2;

        $i28 = $r15[$i27];

        $i30 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int F3(int,int,int)>(i37, $i29, $i28);

        i36 = i36 ^ $i30;

        $r16 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i31 = i41 + 3;

        $i34 = $r16[$i31];

        $r17 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        $i32 = i41 + 3;

        $i33 = $r17[$i32];

        $i35 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int F1(int,int,int)>(i36, $i34, $i33);

        i39 = i39 ^ $i35;

        i40 = i40 + 1;

        goto label1;

     label2:
        i42 = 6;

     label3:
        if i42 >= 12 goto label4;

        i43 = i42 * 4;

        $r2 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i0 = i43 + 3;

        $i3 = $r2[$i0];

        $r3 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        $i1 = i43 + 3;

        $i2 = $r3[$i1];

        $i4 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int F1(int,int,int)>(i36, $i3, $i2);

        i39 = i39 ^ $i4;

        $r4 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i5 = i43 + 2;

        $i8 = $r4[$i5];

        $r5 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        $i6 = i43 + 2;

        $i7 = $r5[$i6];

        $i9 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int F3(int,int,int)>(i37, $i8, $i7);

        i36 = i36 ^ $i9;

        $r6 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i10 = i43 + 1;

        $i13 = $r6[$i10];

        $r7 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        $i11 = i43 + 1;

        $i12 = $r7[$i11];

        $i14 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int F2(int,int,int)>(i38, $i13, $i12);

        i37 = i37 ^ $i14;

        $r8 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i16 = $r8[i43];

        $r9 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        $i15 = $r9[i43];

        $i17 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int F1(int,int,int)>(i39, $i16, $i15);

        i38 = i38 ^ $i17;

        i42 = i42 + 1;

        goto label3;

     label4:
        r0[0] = i36;

        r0[1] = i37;

        r0[2] = i38;

        r0[3] = i39;

        return;
    }

    protected final void CAST_Decipher(int, int, int, int, int[])
    {
        int[] r0, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, i38, i39, i40, i41, i42, i43, i44, i45;
        org.bouncycastle.crypto.engines.CAST6Engine r1;

        r1 := @this: org.bouncycastle.crypto.engines.CAST6Engine;

        i38 := @parameter0: int;

        i39 := @parameter1: int;

        i40 := @parameter2: int;

        i41 := @parameter3: int;

        r0 := @parameter4: int[];

        i42 = 0;

     label1:
        if i42 >= 6 goto label2;

        $i19 = 11 - i42;

        i43 = $i19 * 4;

        $r10 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i21 = $r10[i43];

        $r11 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        $i20 = $r11[i43];

        $i22 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int F1(int,int,int)>(i41, $i21, $i20);

        i40 = i40 ^ $i22;

        $r12 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i23 = i43 + 1;

        $i26 = $r12[$i23];

        $r13 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        $i24 = i43 + 1;

        $i25 = $r13[$i24];

        $i27 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int F2(int,int,int)>(i40, $i26, $i25);

        i39 = i39 ^ $i27;

        $r14 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i28 = i43 + 2;

        $i31 = $r14[$i28];

        $r15 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        $i29 = i43 + 2;

        $i30 = $r15[$i29];

        $i32 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int F3(int,int,int)>(i39, $i31, $i30);

        i38 = i38 ^ $i32;

        $r16 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i33 = i43 + 3;

        $i36 = $r16[$i33];

        $r17 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        $i34 = i43 + 3;

        $i35 = $r17[$i34];

        $i37 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int F1(int,int,int)>(i38, $i36, $i35);

        i41 = i41 ^ $i37;

        i42 = i42 + 1;

        goto label1;

     label2:
        i44 = 6;

     label3:
        if i44 >= 12 goto label4;

        $i0 = 11 - i44;

        i45 = $i0 * 4;

        $r2 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i1 = i45 + 3;

        $i4 = $r2[$i1];

        $r3 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        $i2 = i45 + 3;

        $i3 = $r3[$i2];

        $i5 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int F1(int,int,int)>(i38, $i4, $i3);

        i41 = i41 ^ $i5;

        $r4 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i6 = i45 + 2;

        $i9 = $r4[$i6];

        $r5 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        $i7 = i45 + 2;

        $i8 = $r5[$i7];

        $i10 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int F3(int,int,int)>(i39, $i9, $i8);

        i38 = i38 ^ $i10;

        $r6 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i11 = i45 + 1;

        $i14 = $r6[$i11];

        $r7 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        $i12 = i45 + 1;

        $i13 = $r7[$i12];

        $i15 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int F2(int,int,int)>(i40, $i14, $i13);

        i39 = i39 ^ $i15;

        $r8 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i17 = $r8[i45];

        $r9 = r1.<org.bouncycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        $i16 = $r9[i45];

        $i18 = virtualinvoke r1.<org.bouncycastle.crypto.engines.CAST6Engine: int F1(int,int,int)>(i41, $i17, $i16);

        i40 = i40 ^ $i18;

        i44 = i44 + 1;

        goto label3;

     label4:
        r0[0] = i38;

        r0[1] = i39;

        r0[2] = i40;

        r0[3] = i41;

        return;
    }

    public static void <clinit>()
    {
        <org.bouncycastle.crypto.engines.CAST6Engine: int BLOCK_SIZE> = 16;

        <org.bouncycastle.crypto.engines.CAST6Engine: int ROUNDS> = 12;

        return;
    }
}
