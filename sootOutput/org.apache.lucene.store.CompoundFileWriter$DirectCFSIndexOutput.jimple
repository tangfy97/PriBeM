final class org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput extends org.apache.lucene.store.IndexOutput
{
    private final org.apache.lucene.store.IndexOutput delegate;
    private final long offset;
    private boolean closed;
    private org.apache.lucene.store.CompoundFileWriter$FileEntry entry;
    private long writtenBytes;
    private final boolean isSeparate;
    static final boolean $assertionsDisabled;
    final org.apache.lucene.store.CompoundFileWriter this$0;

    void <init>(org.apache.lucene.store.CompoundFileWriter, org.apache.lucene.store.IndexOutput, org.apache.lucene.store.CompoundFileWriter$FileEntry, boolean)
    {
        org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput r0;
        org.apache.lucene.store.CompoundFileWriter$FileEntry r3;
        org.apache.lucene.store.CompoundFileWriter r1;
        long $l0;
        org.apache.lucene.store.IndexOutput r2;
        boolean z0;

        r0 := @this: org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput;

        r1 := @parameter0: org.apache.lucene.store.CompoundFileWriter;

        r2 := @parameter1: org.apache.lucene.store.IndexOutput;

        r3 := @parameter2: org.apache.lucene.store.CompoundFileWriter$FileEntry;

        z0 := @parameter3: boolean;

        r0.<org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: org.apache.lucene.store.CompoundFileWriter this$0> = r1;

        specialinvoke r0.<org.apache.lucene.store.IndexOutput: void <init>()>();

        r0.<org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: org.apache.lucene.store.IndexOutput delegate> = r2;

        r0.<org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: org.apache.lucene.store.CompoundFileWriter$FileEntry entry> = r3;

        $l0 = virtualinvoke r2.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        r0.<org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: long offset> = $l0;

        r3.<org.apache.lucene.store.CompoundFileWriter$FileEntry: long offset> = $l0;

        r0.<org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: boolean isSeparate> = z0;

        return;
    }

    public void flush() throws java.io.IOException
    {
        org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput r0;
        org.apache.lucene.store.IndexOutput $r1;

        r0 := @this: org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput;

        $r1 = r0.<org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: org.apache.lucene.store.IndexOutput delegate>;

        virtualinvoke $r1.<org.apache.lucene.store.IndexOutput: void flush()>();

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput r0;
        long $l0;
        org.apache.lucene.store.CompoundFileWriter$FileEntry $r1, $r7;
        org.apache.lucene.store.CompoundFileWriter $r2, $r3, $r5;
        java.util.Queue $r6;
        org.apache.lucene.store.IndexOutput $r4;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput;

        $z0 = r0.<org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: boolean closed>;

        if $z0 != 0 goto label3;

        r0.<org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: boolean closed> = 1;

        $r1 = r0.<org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: org.apache.lucene.store.CompoundFileWriter$FileEntry entry>;

        $l0 = r0.<org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: long writtenBytes>;

        $r1.<org.apache.lucene.store.CompoundFileWriter$FileEntry: long length> = $l0;

        $z1 = r0.<org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: boolean isSeparate>;

        if $z1 == 0 goto label1;

        $r4 = r0.<org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: org.apache.lucene.store.IndexOutput delegate>;

        virtualinvoke $r4.<org.apache.lucene.store.IndexOutput: void close()>();

        $r5 = r0.<org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: org.apache.lucene.store.CompoundFileWriter this$0>;

        $r6 = staticinvoke <org.apache.lucene.store.CompoundFileWriter: java.util.Queue access$100(org.apache.lucene.store.CompoundFileWriter)>($r5);

        $r7 = r0.<org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: org.apache.lucene.store.CompoundFileWriter$FileEntry entry>;

        interfaceinvoke $r6.<java.util.Queue: boolean add(java.lang.Object)>($r7);

        goto label2;

     label1:
        $r2 = r0.<org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: org.apache.lucene.store.CompoundFileWriter this$0>;

        virtualinvoke $r2.<org.apache.lucene.store.CompoundFileWriter: void releaseOutputLock()>();

     label2:
        $r3 = r0.<org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: org.apache.lucene.store.CompoundFileWriter this$0>;

        staticinvoke <org.apache.lucene.store.CompoundFileWriter: void access$200(org.apache.lucene.store.CompoundFileWriter)>($r3);

     label3:
        return;
    }

    public long getFilePointer()
    {
        org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput r0;
        long $l0, $l1, $l2;
        org.apache.lucene.store.IndexOutput $r1;

        r0 := @this: org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput;

        $r1 = r0.<org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: org.apache.lucene.store.IndexOutput delegate>;

        $l0 = virtualinvoke $r1.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        $l1 = r0.<org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: long offset>;

        $l2 = $l0 - $l1;

        return $l2;
    }

    public void seek(long) throws java.io.IOException
    {
        org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput r0;
        long l0, $l1, $l2;
        java.lang.AssertionError $r2;
        org.apache.lucene.store.IndexOutput $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput;

        l0 := @parameter0: long;

        $z0 = <org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = r0.<org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: boolean closed>;

        if $z1 == 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $r1 = r0.<org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: org.apache.lucene.store.IndexOutput delegate>;

        $l1 = r0.<org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: long offset>;

        $l2 = $l1 + l0;

        virtualinvoke $r1.<org.apache.lucene.store.IndexOutput: void seek(long)>($l2);

        return;
    }

    public long length() throws java.io.IOException
    {
        org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput r0;
        long $l0, $l1, $l2;
        java.lang.AssertionError $r2;
        org.apache.lucene.store.IndexOutput $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput;

        $z0 = <org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = r0.<org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: boolean closed>;

        if $z1 == 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $r1 = r0.<org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: org.apache.lucene.store.IndexOutput delegate>;

        $l0 = virtualinvoke $r1.<org.apache.lucene.store.IndexOutput: long length()>();

        $l1 = r0.<org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: long offset>;

        $l2 = $l0 - $l1;

        return $l2;
    }

    public void writeByte(byte) throws java.io.IOException
    {
        org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput r0;
        long $l0, $l1;
        java.lang.AssertionError $r2;
        byte b2;
        org.apache.lucene.store.IndexOutput $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput;

        b2 := @parameter0: byte;

        $z0 = <org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = r0.<org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: boolean closed>;

        if $z1 == 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $l0 = r0.<org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: long writtenBytes>;

        $l1 = $l0 + 1L;

        r0.<org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: long writtenBytes> = $l1;

        $r1 = r0.<org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: org.apache.lucene.store.IndexOutput delegate>;

        virtualinvoke $r1.<org.apache.lucene.store.IndexOutput: void writeByte(byte)>(b2);

        return;
    }

    public void writeBytes(byte[], int, int) throws java.io.IOException
    {
        byte[] r1;
        org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput r0;
        long $l1, $l2, $l3;
        java.lang.AssertionError $r3;
        int i0, i4;
        org.apache.lucene.store.IndexOutput $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput;

        r1 := @parameter0: byte[];

        i4 := @parameter1: int;

        i0 := @parameter2: int;

        $z0 = <org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = r0.<org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: boolean closed>;

        if $z1 == 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $l2 = r0.<org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: long writtenBytes>;

        $l1 = (long) i0;

        $l3 = $l2 + $l1;

        r0.<org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: long writtenBytes> = $l3;

        $r2 = r0.<org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: org.apache.lucene.store.IndexOutput delegate>;

        virtualinvoke $r2.<org.apache.lucene.store.IndexOutput: void writeBytes(byte[],int,int)>(r1, i4, i0);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/store/CompoundFileWriter;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.store.CompoundFileWriter$DirectCFSIndexOutput: boolean $assertionsDisabled> = $z1;

        return;
    }
}
