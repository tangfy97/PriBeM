public interface  org.eclipse.jdt.internal.compiler.parser.TerminalTokens extends java.lang.Object
{
    public static final int TokenNameWHITESPACE;
    public static final int TokenNameCOMMENT_LINE;
    public static final int TokenNameCOMMENT_BLOCK;
    public static final int TokenNameCOMMENT_JAVADOC;
    public static final int TokenNameIdentifier;
    public static final int TokenNameabstract;
    public static final int TokenNameassert;
    public static final int TokenNameboolean;
    public static final int TokenNamebreak;
    public static final int TokenNamebyte;
    public static final int TokenNamecase;
    public static final int TokenNamecatch;
    public static final int TokenNamechar;
    public static final int TokenNameclass;
    public static final int TokenNamecontinue;
    public static final int TokenNameconst;
    public static final int TokenNamedefault;
    public static final int TokenNamedo;
    public static final int TokenNamedouble;
    public static final int TokenNameelse;
    public static final int TokenNameenum;
    public static final int TokenNameextends;
    public static final int TokenNamefalse;
    public static final int TokenNamefinal;
    public static final int TokenNamefinally;
    public static final int TokenNamefloat;
    public static final int TokenNamefor;
    public static final int TokenNamegoto;
    public static final int TokenNameif;
    public static final int TokenNameimplements;
    public static final int TokenNameimport;
    public static final int TokenNameinstanceof;
    public static final int TokenNameint;
    public static final int TokenNameinterface;
    public static final int TokenNamelong;
    public static final int TokenNamenative;
    public static final int TokenNamenew;
    public static final int TokenNamenull;
    public static final int TokenNamepackage;
    public static final int TokenNameprivate;
    public static final int TokenNameprotected;
    public static final int TokenNamepublic;
    public static final int TokenNamereturn;
    public static final int TokenNameshort;
    public static final int TokenNamestatic;
    public static final int TokenNamestrictfp;
    public static final int TokenNamesuper;
    public static final int TokenNameswitch;
    public static final int TokenNamesynchronized;
    public static final int TokenNamethis;
    public static final int TokenNamethrow;
    public static final int TokenNamethrows;
    public static final int TokenNametransient;
    public static final int TokenNametrue;
    public static final int TokenNametry;
    public static final int TokenNamevoid;
    public static final int TokenNamevolatile;
    public static final int TokenNamewhile;
    public static final int TokenNameIntegerLiteral;
    public static final int TokenNameLongLiteral;
    public static final int TokenNameFloatingPointLiteral;
    public static final int TokenNameDoubleLiteral;
    public static final int TokenNameCharacterLiteral;
    public static final int TokenNameStringLiteral;
    public static final int TokenNamePLUS_PLUS;
    public static final int TokenNameMINUS_MINUS;
    public static final int TokenNameEQUAL_EQUAL;
    public static final int TokenNameLESS_EQUAL;
    public static final int TokenNameGREATER_EQUAL;
    public static final int TokenNameNOT_EQUAL;
    public static final int TokenNameLEFT_SHIFT;
    public static final int TokenNameRIGHT_SHIFT;
    public static final int TokenNameUNSIGNED_RIGHT_SHIFT;
    public static final int TokenNamePLUS_EQUAL;
    public static final int TokenNameMINUS_EQUAL;
    public static final int TokenNameMULTIPLY_EQUAL;
    public static final int TokenNameDIVIDE_EQUAL;
    public static final int TokenNameAND_EQUAL;
    public static final int TokenNameOR_EQUAL;
    public static final int TokenNameXOR_EQUAL;
    public static final int TokenNameREMAINDER_EQUAL;
    public static final int TokenNameLEFT_SHIFT_EQUAL;
    public static final int TokenNameRIGHT_SHIFT_EQUAL;
    public static final int TokenNameUNSIGNED_RIGHT_SHIFT_EQUAL;
    public static final int TokenNameOR_OR;
    public static final int TokenNameAND_AND;
    public static final int TokenNamePLUS;
    public static final int TokenNameMINUS;
    public static final int TokenNameNOT;
    public static final int TokenNameREMAINDER;
    public static final int TokenNameXOR;
    public static final int TokenNameAND;
    public static final int TokenNameMULTIPLY;
    public static final int TokenNameOR;
    public static final int TokenNameTWIDDLE;
    public static final int TokenNameDIVIDE;
    public static final int TokenNameGREATER;
    public static final int TokenNameLESS;
    public static final int TokenNameLPAREN;
    public static final int TokenNameRPAREN;
    public static final int TokenNameLBRACE;
    public static final int TokenNameRBRACE;
    public static final int TokenNameLBRACKET;
    public static final int TokenNameRBRACKET;
    public static final int TokenNameSEMICOLON;
    public static final int TokenNameQUESTION;
    public static final int TokenNameCOLON;
    public static final int TokenNameCOMMA;
    public static final int TokenNameDOT;
    public static final int TokenNameEQUAL;
    public static final int TokenNameAT;
    public static final int TokenNameELLIPSIS;
    public static final int TokenNameEOF;
    public static final int TokenNameERROR;

    public static void <clinit>()
    {
        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameERROR> = 110;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameEOF> = 68;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameELLIPSIS> = 107;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameAT> = 53;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameEQUAL> = 71;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameDOT> = 3;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameCOMMA> = 30;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameCOLON> = 65;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameQUESTION> = 23;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameSEMICOLON> = 27;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameRBRACKET> = 70;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameLBRACKET> = 14;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameRBRACE> = 31;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameLBRACE> = 69;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameRPAREN> = 29;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameLPAREN> = 28;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameLESS> = 7;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameGREATER> = 13;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameDIVIDE> = 6;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameTWIDDLE> = 67;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameOR> = 22;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameMULTIPLY> = 4;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameAND> = 20;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameXOR> = 21;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameREMAINDER> = 5;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameNOT> = 66;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameMINUS> = 2;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNamePLUS> = 1;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameAND_AND> = 24;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameOR_OR> = 25;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameUNSIGNED_RIGHT_SHIFT_EQUAL> = 94;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameRIGHT_SHIFT_EQUAL> = 93;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameLEFT_SHIFT_EQUAL> = 92;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameREMAINDER_EQUAL> = 91;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameXOR_EQUAL> = 90;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameOR_EQUAL> = 89;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameAND_EQUAL> = 88;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameDIVIDE_EQUAL> = 87;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameMULTIPLY_EQUAL> = 86;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameMINUS_EQUAL> = 85;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNamePLUS_EQUAL> = 84;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameUNSIGNED_RIGHT_SHIFT> = 11;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameRIGHT_SHIFT> = 10;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameLEFT_SHIFT> = 17;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameNOT_EQUAL> = 19;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameGREATER_EQUAL> = 16;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameLESS_EQUAL> = 15;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameEQUAL_EQUAL> = 18;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameMINUS_MINUS> = 9;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNamePLUS_PLUS> = 8;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameStringLiteral> = 52;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameCharacterLiteral> = 51;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameDoubleLiteral> = 50;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameFloatingPointLiteral> = 49;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameLongLiteral> = 48;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameIntegerLiteral> = 47;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNamewhile> = 73;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNamevolatile> = 64;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNamevoid> = 40;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNametry> = 83;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNametrue> = 46;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNametransient> = 63;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNamethrows> = 105;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNamethrow> = 82;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNamethis> = 42;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNamesynchronized> = 55;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameswitch> = 81;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNamesuper> = 41;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNamestrictfp> = 62;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNamestatic> = 54;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameshort> = 39;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNamereturn> = 80;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNamepublic> = 61;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameprotected> = 60;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameprivate> = 59;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNamepackage> = 96;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNamenull> = 45;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNamenew> = 43;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNamenative> = 58;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNamelong> = 38;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameinterface> = 95;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameint> = 37;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameinstanceof> = 12;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameimport> = 100;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameimplements> = 106;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameif> = 79;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNamegoto> = 109;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNamefor> = 78;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNamefloat> = 36;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNamefinally> = 104;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNamefinal> = 57;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNamefalse> = 44;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameextends> = 99;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameenum> = 98;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameelse> = 103;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNamedouble> = 35;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNamedo> = 77;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNamedefault> = 97;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameconst> = 108;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNamecontinue> = 76;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameclass> = 72;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNamechar> = 34;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNamecatch> = 102;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNamecase> = 101;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNamebyte> = 33;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNamebreak> = 75;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameboolean> = 32;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameassert> = 74;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameabstract> = 56;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameIdentifier> = 26;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameCOMMENT_JAVADOC> = 1003;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameCOMMENT_BLOCK> = 1002;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameCOMMENT_LINE> = 1001;

        <org.eclipse.jdt.internal.compiler.parser.TerminalTokens: int TokenNameWHITESPACE> = 1000;

        return;
    }
}
