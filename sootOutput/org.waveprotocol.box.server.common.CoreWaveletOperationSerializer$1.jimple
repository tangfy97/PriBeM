final class org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$1 extends java.lang.Object implements org.waveprotocol.wave.model.operation.wave.BlipOperationVisitor
{
    final org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$MutateDocument$Builder val$mutation;
    final org.waveprotocol.wave.model.operation.wave.WaveletBlipOperation val$wbOp;

    void <init>(org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$MutateDocument$Builder, org.waveprotocol.wave.model.operation.wave.WaveletBlipOperation)
    {
        org.waveprotocol.wave.model.operation.wave.WaveletBlipOperation r2;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$MutateDocument$Builder r1;
        org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$1 r0;

        r0 := @this: org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$1;

        r1 := @parameter0: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$MutateDocument$Builder;

        r2 := @parameter1: org.waveprotocol.wave.model.operation.wave.WaveletBlipOperation;

        r0.<org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$1: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$MutateDocument$Builder val$mutation> = r1;

        r0.<org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$1: org.waveprotocol.wave.model.operation.wave.WaveletBlipOperation val$wbOp> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void visitBlipContentOperation(org.waveprotocol.wave.model.operation.wave.BlipContentOperation)
    {
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation $r4;
        org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$1 r0;
        org.waveprotocol.wave.model.document.operation.DocOp $r3;
        org.waveprotocol.wave.model.operation.wave.BlipContentOperation r1;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$MutateDocument$Builder $r2;

        r0 := @this: org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$1;

        r1 := @parameter0: org.waveprotocol.wave.model.operation.wave.BlipContentOperation;

        $r2 = r0.<org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$1: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$MutateDocument$Builder val$mutation>;

        $r3 = virtualinvoke r1.<org.waveprotocol.wave.model.operation.wave.BlipContentOperation: org.waveprotocol.wave.model.document.operation.DocOp getContentOp()>();

        $r4 = staticinvoke <org.waveprotocol.box.server.common.CoreWaveletOperationSerializer: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation serialize(org.waveprotocol.wave.model.document.operation.DocOp)>($r3);

        virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$MutateDocument$Builder: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$MutateDocument$Builder setDocumentOperation(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation)>($r4);

        return;
    }

    public void visitSubmitBlip(org.waveprotocol.wave.model.operation.wave.SubmitBlip)
    {
        org.waveprotocol.wave.model.operation.wave.SubmitBlip r8;
        org.waveprotocol.wave.model.operation.wave.WaveletBlipOperation $r4;
        java.lang.IllegalArgumentException $r0;
        org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$1 r3;
        java.lang.StringBuilder $r1, $r2, $r6;
        org.waveprotocol.wave.model.operation.wave.BlipOperation $r5;
        java.lang.String $r7;

        r3 := @this: org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$1;

        r8 := @parameter0: org.waveprotocol.wave.model.operation.wave.SubmitBlip;

        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported blip operation: ");

        $r4 = r3.<org.waveprotocol.box.server.common.CoreWaveletOperationSerializer$1: org.waveprotocol.wave.model.operation.wave.WaveletBlipOperation val$wbOp>;

        $r5 = virtualinvoke $r4.<org.waveprotocol.wave.model.operation.wave.WaveletBlipOperation: org.waveprotocol.wave.model.operation.wave.BlipOperation getBlipOp()>();

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r0;
    }
}
