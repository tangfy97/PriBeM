public class org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl extends java.lang.Object implements org.waveprotocol.box.server.rpc.RpcFinished
{
    private java.lang.Boolean failed;
    private java.lang.String errorText;

    public void <init>()
    {
        org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl r0;

        r0 := @this: org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(org.waveprotocol.box.server.rpc.RpcFinished)
    {
        org.waveprotocol.box.server.rpc.RpcFinished r1;
        org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl r0;

        r0 := @this: org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl;

        r1 := @parameter0: org.waveprotocol.box.server.rpc.RpcFinished;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl: void copyFrom(org.waveprotocol.box.server.rpc.RpcFinished)>(r1);

        return;
    }

    public void copyFrom(org.waveprotocol.box.server.rpc.RpcFinished)
    {
        org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl r0;
        org.waveprotocol.box.server.rpc.RpcFinished r1;
        java.lang.String $r2;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl;

        r1 := @parameter0: org.waveprotocol.box.server.rpc.RpcFinished;

        $z0 = interfaceinvoke r1.<org.waveprotocol.box.server.rpc.RpcFinished: boolean getFailed()>();

        virtualinvoke r0.<org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl: void setFailed(boolean)>($z0);

        $z1 = interfaceinvoke r1.<org.waveprotocol.box.server.rpc.RpcFinished: boolean hasErrorText()>();

        if $z1 == 0 goto label1;

        $r2 = interfaceinvoke r1.<org.waveprotocol.box.server.rpc.RpcFinished: java.lang.String getErrorText()>();

        virtualinvoke r0.<org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl: void setErrorText(java.lang.String)>($r2);

        goto label2;

     label1:
        virtualinvoke r0.<org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl: void clearErrorText()>();

     label2:
        return;
    }

    public boolean getFailed()
    {
        java.lang.Boolean $r1;
        org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl;

        $r1 = r0.<org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl: java.lang.Boolean failed>;

        $z0 = virtualinvoke $r1.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public void setFailed(boolean)
    {
        java.lang.Boolean $r1;
        org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl r0;
        boolean z0;

        r0 := @this: org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r0.<org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl: java.lang.Boolean failed> = $r1;

        return;
    }

    public boolean hasErrorText()
    {
        java.lang.String $r1;
        org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl;

        $r1 = r0.<org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl: java.lang.String errorText>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void clearErrorText()
    {
        org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl r0;

        r0 := @this: org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl;

        r0.<org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl: java.lang.String errorText> = null;

        return;
    }

    public java.lang.String getErrorText()
    {
        java.lang.String $r1;
        org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl r0;

        r0 := @this: org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl;

        $r1 = r0.<org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl: java.lang.String errorText>;

        return $r1;
    }

    public void setErrorText(java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl r0;

        r0 := @this: org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl;

        r1 := @parameter0: java.lang.String;

        r0.<org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl: java.lang.String errorText> = r1;

        return;
    }

    protected void reset()
    {
        org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl r0;

        r0 := @this: org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl;

        r0.<org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl: java.lang.Boolean failed> = null;

        r0.<org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl: java.lang.String errorText> = null;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl r1;
        java.lang.Object r0;
        boolean $z0, $z1, $z2;

        r1 := @this: org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl;

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r1.<org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl: boolean isEqualTo(java.lang.Object)>(r0);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean isEqualTo(java.lang.Object)
    {
        org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl r1;
        java.lang.Object r0;
        org.waveprotocol.box.server.rpc.RpcFinished $r2;
        boolean $z0, $z1;

        r1 := @this: org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof org.waveprotocol.box.server.rpc.RpcFinished;

        if $z0 == 0 goto label2;

        $r2 = (org.waveprotocol.box.server.rpc.RpcFinished) r0;

        $z1 = staticinvoke <org.waveprotocol.box.server.rpc.RpcFinishedUtil: boolean isEqual(org.waveprotocol.box.server.rpc.RpcFinished,org.waveprotocol.box.server.rpc.RpcFinished)>(r1, $r2);

        return $z1;

     label2:
        return 0;
    }

    public int hashCode()
    {
        int $i0;
        org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl r0;

        r0 := @this: org.waveprotocol.box.server.rpc.impl.RpcFinishedImpl;

        $i0 = staticinvoke <org.waveprotocol.box.server.rpc.RpcFinishedUtil: int getHashCode(org.waveprotocol.box.server.rpc.RpcFinished)>(r0);

        return $i0;
    }
}
