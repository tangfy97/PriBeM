public class org.apache.http.impl.cookie.RFC2965Spec extends org.apache.http.impl.cookie.RFC2109Spec
{

    public void <init>()
    {
        org.apache.http.impl.cookie.RFC2965Spec r0;

        r0 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        specialinvoke r0.<org.apache.http.impl.cookie.RFC2965Spec: void <init>(java.lang.String[],boolean)>(null, 0);

        return;
    }

    public void <init>(java.lang.String[], boolean)
    {
        org.apache.http.impl.cookie.RFC2965VersionAttributeHandler $r6;
        org.apache.http.impl.cookie.RFC2965Spec r0;
        org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler $r4;
        java.lang.String[] r1;
        org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler $r5;
        org.apache.http.impl.cookie.RFC2965PortAttributeHandler $r3;
        org.apache.http.impl.cookie.RFC2965DomainAttributeHandler $r2;
        boolean z0;

        r0 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        r1 := @parameter0: java.lang.String[];

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.http.impl.cookie.RFC2109Spec: void <init>(java.lang.String[],boolean)>(r1, z0);

        $r2 = new org.apache.http.impl.cookie.RFC2965DomainAttributeHandler;

        specialinvoke $r2.<org.apache.http.impl.cookie.RFC2965DomainAttributeHandler: void <init>()>();

        virtualinvoke r0.<org.apache.http.impl.cookie.RFC2965Spec: void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler)>("domain", $r2);

        $r3 = new org.apache.http.impl.cookie.RFC2965PortAttributeHandler;

        specialinvoke $r3.<org.apache.http.impl.cookie.RFC2965PortAttributeHandler: void <init>()>();

        virtualinvoke r0.<org.apache.http.impl.cookie.RFC2965Spec: void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler)>("port", $r3);

        $r4 = new org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler;

        specialinvoke $r4.<org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler: void <init>()>();

        virtualinvoke r0.<org.apache.http.impl.cookie.RFC2965Spec: void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler)>("commenturl", $r4);

        $r5 = new org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler;

        specialinvoke $r5.<org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler: void <init>()>();

        virtualinvoke r0.<org.apache.http.impl.cookie.RFC2965Spec: void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler)>("discard", $r5);

        $r6 = new org.apache.http.impl.cookie.RFC2965VersionAttributeHandler;

        specialinvoke $r6.<org.apache.http.impl.cookie.RFC2965VersionAttributeHandler: void <init>()>();

        virtualinvoke r0.<org.apache.http.impl.cookie.RFC2965Spec: void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler)>("version", $r6);

        return;
    }

    public java.util.List parse(org.apache.http.Header, org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException
    {
        org.apache.http.HeaderElement[] $r3;
        org.apache.http.Header r0;
        org.apache.http.cookie.MalformedCookieException $r6;
        java.lang.String $r1, $r9, $r12;
        boolean $z0;
        org.apache.http.cookie.CookieOrigin $r2, r15;
        org.apache.http.impl.cookie.RFC2965Spec r4;
        java.lang.IllegalArgumentException $r13, $r14;
        java.util.List $r5;
        java.lang.StringBuilder $r7, $r8, $r10, $r11;

        r4 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        r0 := @parameter0: org.apache.http.Header;

        r15 := @parameter1: org.apache.http.cookie.CookieOrigin;

        if r0 != null goto label1;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Header may not be null");

        throw $r14;

     label1:
        if r15 != null goto label2;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r13;

     label2:
        $r1 = interfaceinvoke r0.<org.apache.http.Header: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Set-Cookie2");

        if $z0 != 0 goto label3;

        $r6 = new org.apache.http.cookie.MalformedCookieException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized cookie header \'");

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>($r12);

        throw $r6;

     label3:
        $r2 = staticinvoke <org.apache.http.impl.cookie.RFC2965Spec: org.apache.http.cookie.CookieOrigin adjustEffectiveHost(org.apache.http.cookie.CookieOrigin)>(r15);

        $r3 = interfaceinvoke r0.<org.apache.http.Header: org.apache.http.HeaderElement[] getElements()>();

        $r5 = specialinvoke r4.<org.apache.http.impl.cookie.RFC2965Spec: java.util.List createCookies(org.apache.http.HeaderElement[],org.apache.http.cookie.CookieOrigin)>($r3, $r2);

        return $r5;
    }

    protected java.util.List parse(org.apache.http.HeaderElement[], org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException
    {
        org.apache.http.HeaderElement[] r2;
        java.util.List $r3;
        org.apache.http.cookie.CookieOrigin $r0, r4;
        org.apache.http.impl.cookie.RFC2965Spec r1;

        r1 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        r2 := @parameter0: org.apache.http.HeaderElement[];

        r4 := @parameter1: org.apache.http.cookie.CookieOrigin;

        $r0 = staticinvoke <org.apache.http.impl.cookie.RFC2965Spec: org.apache.http.cookie.CookieOrigin adjustEffectiveHost(org.apache.http.cookie.CookieOrigin)>(r4);

        $r3 = specialinvoke r1.<org.apache.http.impl.cookie.RFC2965Spec: java.util.List createCookies(org.apache.http.HeaderElement[],org.apache.http.cookie.CookieOrigin)>(r2, $r0);

        return $r3;
    }

    private java.util.List createCookies(org.apache.http.HeaderElement[], org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException
    {
        org.apache.http.HeaderElement[] r1;
        org.apache.http.impl.cookie.BasicClientCookie2 $r32;
        org.apache.http.cookie.MalformedCookieException $r31;
        int[] $r10;
        java.util.Locale $r19, $r26;
        boolean $z0;
        org.apache.http.cookie.CookieOrigin r7;
        java.util.Set $r13;
        org.apache.http.cookie.CookieAttributeHandler $r23;
        org.apache.http.NameValuePair r17, r28;
        java.util.HashMap $r33;
        org.apache.http.NameValuePair[] $r11;
        java.util.ArrayList $r30;
        int $i0, i1, $i2, $i3, $i4, $i5, i6, i7, $i9;
        java.lang.String $r3, $r4, $r8, $r9, $r18, $r20, $r21, $r24, $r25, $r27;
        java.util.Map$Entry r29;
        java.util.Iterator $r14;
        org.apache.http.impl.cookie.RFC2965Spec r22;
        org.apache.http.HeaderElement r2;
        java.lang.Object $r15, $r16;

        r22 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        r1 := @parameter0: org.apache.http.HeaderElement[];

        r7 := @parameter1: org.apache.http.cookie.CookieOrigin;

        $r30 = new java.util.ArrayList;

        $i0 = lengthof r1;

        specialinvoke $r30.<java.util.ArrayList: void <init>(int)>($i0);

        i1 = lengthof r1;

        i6 = 0;

     label1:
        if i6 >= i1 goto label9;

        r2 = r1[i6];

        $r3 = interfaceinvoke r2.<org.apache.http.HeaderElement: java.lang.String getName()>();

        $r4 = interfaceinvoke r2.<org.apache.http.HeaderElement: java.lang.String getValue()>();

        if $r3 == null goto label2;

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i2 != 0 goto label3;

     label2:
        $r31 = new org.apache.http.cookie.MalformedCookieException;

        specialinvoke $r31.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>("Cookie name may not be empty");

        throw $r31;

     label3:
        $r32 = new org.apache.http.impl.cookie.BasicClientCookie2;

        specialinvoke $r32.<org.apache.http.impl.cookie.BasicClientCookie2: void <init>(java.lang.String,java.lang.String)>($r3, $r4);

        $r8 = staticinvoke <org.apache.http.impl.cookie.RFC2965Spec: java.lang.String getDefaultPath(org.apache.http.cookie.CookieOrigin)>(r7);

        virtualinvoke $r32.<org.apache.http.impl.cookie.BasicClientCookie2: void setPath(java.lang.String)>($r8);

        $r9 = staticinvoke <org.apache.http.impl.cookie.RFC2965Spec: java.lang.String getDefaultDomain(org.apache.http.cookie.CookieOrigin)>(r7);

        virtualinvoke $r32.<org.apache.http.impl.cookie.BasicClientCookie2: void setDomain(java.lang.String)>($r9);

        $r10 = newarray (int)[1];

        $i3 = virtualinvoke r7.<org.apache.http.cookie.CookieOrigin: int getPort()>();

        $r10[0] = $i3;

        virtualinvoke $r32.<org.apache.http.impl.cookie.BasicClientCookie2: void setPorts(int[])>($r10);

        $r11 = interfaceinvoke r2.<org.apache.http.HeaderElement: org.apache.http.NameValuePair[] getParameters()>();

        $r33 = new java.util.HashMap;

        $i4 = lengthof $r11;

        specialinvoke $r33.<java.util.HashMap: void <init>(int)>($i4);

        $i5 = lengthof $r11;

        i7 = $i5 - 1;

     label4:
        if i7 < 0 goto label5;

        r28 = $r11[i7];

        $r25 = interfaceinvoke r28.<org.apache.http.NameValuePair: java.lang.String getName()>();

        $r26 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r27 = virtualinvoke $r25.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r26);

        interfaceinvoke $r33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, r28);

        $i9 = (int) -1;

        i7 = i7 + $i9;

        goto label4;

     label5:
        $r13 = interfaceinvoke $r33.<java.util.Map: java.util.Set entrySet()>();

        $r14 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label6:
        $z0 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r29 = (java.util.Map$Entry) $r15;

        $r16 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getValue()>();

        r17 = (org.apache.http.NameValuePair) $r16;

        $r18 = interfaceinvoke r17.<org.apache.http.NameValuePair: java.lang.String getName()>();

        $r19 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r20 = virtualinvoke $r18.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r19);

        $r21 = interfaceinvoke r17.<org.apache.http.NameValuePair: java.lang.String getValue()>();

        virtualinvoke $r32.<org.apache.http.impl.cookie.BasicClientCookie2: void setAttribute(java.lang.String,java.lang.String)>($r20, $r21);

        $r23 = virtualinvoke r22.<org.apache.http.impl.cookie.RFC2965Spec: org.apache.http.cookie.CookieAttributeHandler findAttribHandler(java.lang.String)>($r20);

        if $r23 == null goto label7;

        $r24 = interfaceinvoke r17.<org.apache.http.NameValuePair: java.lang.String getValue()>();

        interfaceinvoke $r23.<org.apache.http.cookie.CookieAttributeHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)>($r32, $r24);

     label7:
        goto label6;

     label8:
        interfaceinvoke $r30.<java.util.List: boolean add(java.lang.Object)>($r32);

        i6 = i6 + 1;

        goto label1;

     label9:
        return $r30;
    }

    public void validate(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException
    {
        org.apache.http.cookie.CookieOrigin $r1, r5;
        org.apache.http.impl.cookie.RFC2965Spec r2;
        org.apache.http.cookie.Cookie r0;
        java.lang.IllegalArgumentException $r3, $r4;

        r2 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        r0 := @parameter0: org.apache.http.cookie.Cookie;

        r5 := @parameter1: org.apache.http.cookie.CookieOrigin;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r4;

     label1:
        if r5 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r3;

     label2:
        $r1 = staticinvoke <org.apache.http.impl.cookie.RFC2965Spec: org.apache.http.cookie.CookieOrigin adjustEffectiveHost(org.apache.http.cookie.CookieOrigin)>(r5);

        specialinvoke r2.<org.apache.http.impl.cookie.RFC2109Spec: void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>(r0, $r1);

        return;
    }

    public boolean match(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)
    {
        org.apache.http.cookie.CookieOrigin $r1, r5;
        org.apache.http.impl.cookie.RFC2965Spec r2;
        org.apache.http.cookie.Cookie r0;
        java.lang.IllegalArgumentException $r3, $r4;
        boolean $z0;

        r2 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        r0 := @parameter0: org.apache.http.cookie.Cookie;

        r5 := @parameter1: org.apache.http.cookie.CookieOrigin;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r4;

     label1:
        if r5 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r3;

     label2:
        $r1 = staticinvoke <org.apache.http.impl.cookie.RFC2965Spec: org.apache.http.cookie.CookieOrigin adjustEffectiveHost(org.apache.http.cookie.CookieOrigin)>(r5);

        $z0 = specialinvoke r2.<org.apache.http.impl.cookie.RFC2109Spec: boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>(r0, $r1);

        return $z0;
    }

    protected void formatCookieAsVer(org.apache.http.util.CharArrayBuffer, org.apache.http.cookie.Cookie, int)
    {
        org.apache.http.impl.cookie.RFC2965Spec r0;
        org.apache.http.cookie.ClientCookie $r3;
        org.apache.http.util.CharArrayBuffer r1;
        int[] $r6;
        int i0, $i1, i2, $i3, i4;
        org.apache.http.cookie.Cookie r2;
        java.lang.String $r4, $r5, $r7;
        boolean $z0;

        r0 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        r1 := @parameter0: org.apache.http.util.CharArrayBuffer;

        r2 := @parameter1: org.apache.http.cookie.Cookie;

        i0 := @parameter2: int;

        specialinvoke r0.<org.apache.http.impl.cookie.RFC2109Spec: void formatCookieAsVer(org.apache.http.util.CharArrayBuffer,org.apache.http.cookie.Cookie,int)>(r1, r2, i0);

        $z0 = r2 instanceof org.apache.http.cookie.ClientCookie;

        if $z0 == 0 goto label4;

        $r3 = (org.apache.http.cookie.ClientCookie) r2;

        $r4 = interfaceinvoke $r3.<org.apache.http.cookie.ClientCookie: java.lang.String getAttribute(java.lang.String)>("port");

        if $r4 == null goto label4;

        virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("; $Port");

        virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("=\"");

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i1 <= 0 goto label3;

        $r6 = interfaceinvoke r2.<org.apache.http.cookie.Cookie: int[] getPorts()>();

        if $r6 == null goto label3;

        i4 = 0;

        i2 = lengthof $r6;

     label1:
        if i4 >= i2 goto label3;

        if i4 <= 0 goto label2;

        virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>(",");

     label2:
        $i3 = $r6[i4];

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r7);

        i4 = i4 + 1;

        goto label1;

     label3:
        virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("\"");

     label4:
        return;
    }

    private static org.apache.http.cookie.CookieOrigin adjustEffectiveHost(org.apache.http.cookie.CookieOrigin)
    {
        int $i0, $i1, i3, $i4, $i5;
        java.lang.String $r1, $r5, $r7;
        boolean $z0, z1;
        org.apache.http.cookie.CookieOrigin r0, $r9;
        char $c2;
        java.lang.StringBuilder $r3, $r4, $r8;

        r0 := @parameter0: org.apache.http.cookie.CookieOrigin;

        $r1 = virtualinvoke r0.<org.apache.http.cookie.CookieOrigin: java.lang.String getHost()>();

        z1 = 1;

        i3 = 0;

     label1:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i3 >= $i0 goto label4;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i3);

        $i4 = (int) $c2;

        if $i4 == 46 goto label2;

        $i5 = (int) $c2;

        if $i5 != 58 goto label3;

     label2:
        z1 = 0;

        goto label4;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        if z1 == 0 goto label5;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".local");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = new org.apache.http.cookie.CookieOrigin;

        $i1 = virtualinvoke r0.<org.apache.http.cookie.CookieOrigin: int getPort()>();

        $r7 = virtualinvoke r0.<org.apache.http.cookie.CookieOrigin: java.lang.String getPath()>();

        $z0 = virtualinvoke r0.<org.apache.http.cookie.CookieOrigin: boolean isSecure()>();

        specialinvoke $r9.<org.apache.http.cookie.CookieOrigin: void <init>(java.lang.String,int,java.lang.String,boolean)>($r5, $i1, $r7, $z0);

        return $r9;

     label5:
        return r0;
    }

    public int getVersion()
    {
        org.apache.http.impl.cookie.RFC2965Spec r0;

        r0 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        return 1;
    }

    public org.apache.http.Header getVersionHeader()
    {
        org.apache.http.util.CharArrayBuffer $r0;
        org.apache.http.impl.cookie.RFC2965Spec r1;
        int $i0;
        java.lang.String $r2;
        org.apache.http.message.BufferedHeader $r3;

        r1 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        $r0 = new org.apache.http.util.CharArrayBuffer;

        specialinvoke $r0.<org.apache.http.util.CharArrayBuffer: void <init>(int)>(40);

        virtualinvoke $r0.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("Cookie2");

        virtualinvoke $r0.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>(": ");

        virtualinvoke $r0.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("$Version=");

        $i0 = virtualinvoke r1.<org.apache.http.impl.cookie.RFC2965Spec: int getVersion()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke $r0.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r2);

        $r3 = new org.apache.http.message.BufferedHeader;

        specialinvoke $r3.<org.apache.http.message.BufferedHeader: void <init>(org.apache.http.util.CharArrayBuffer)>($r0);

        return $r3;
    }

    public java.lang.String toString()
    {
        org.apache.http.impl.cookie.RFC2965Spec r0;

        r0 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        return "rfc2965";
    }
}
