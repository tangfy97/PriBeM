public class com.mongodb.util.JSON extends java.lang.Object
{

    public void <init>()
    {
        com.mongodb.util.JSON r0;

        r0 := @this: com.mongodb.util.JSON;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String serialize(java.lang.Object)
    {
        java.lang.StringBuilder $r0;
        java.lang.Object r1;
        java.lang.String $r2;

        r1 := @parameter0: java.lang.Object;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        staticinvoke <com.mongodb.util.JSON: void serialize(java.lang.Object,java.lang.StringBuilder)>(r1, $r0);

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    static void string(java.lang.StringBuilder, java.lang.String)
    {
        char $c1;
        int $i0, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.StringBuilder r0;
        java.lang.String r1;

        r0 := @parameter0: java.lang.StringBuilder;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        i2 = 0;

     label01:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i2 >= $i0 goto label10;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        $i3 = (int) $c1;

        if $i3 != 92 goto label02;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\\\");

        goto label09;

     label02:
        $i4 = (int) $c1;

        if $i4 != 34 goto label03;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\\"");

        goto label09;

     label03:
        $i5 = (int) $c1;

        if $i5 != 10 goto label04;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\n");

        goto label09;

     label04:
        $i6 = (int) $c1;

        if $i6 != 13 goto label05;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\r");

        goto label09;

     label05:
        $i7 = (int) $c1;

        if $i7 != 9 goto label06;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\t");

        goto label09;

     label06:
        $i8 = (int) $c1;

        if $i8 != 8 goto label07;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\b");

        goto label09;

     label07:
        $i9 = (int) $c1;

        if $i9 >= 32 goto label08;

        goto label09;

     label08:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

     label09:
        i2 = i2 + 1;

        goto label01;

     label10:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        return;
    }

    public static void serialize(java.lang.Object, java.lang.StringBuilder)
    {
        java.util.Map r49;
        org.bson.types.BSONTimestamp r53;
        java.util.GregorianCalendar $r26;
        java.util.Set $r30, $r36;
        org.bson.types.Code $r9;
        java.lang.StringBuilder $r3, $r4, $r6, r8, $r14, $r15, $r16, $r17;
        java.lang.Object[] $r19, r52;
        java.text.SimpleDateFormat $r25;
        java.lang.String $r7, $r10, $r12, $r18, $r22, $r24, $r29, $r34, $r41, $r45, r48;
        java.util.Map$Entry r50;
        com.mongodb.BasicDBObject $r11, $r21, $r28, $r40;
        org.bson.BSONObject $r13;
        java.lang.RuntimeException $r2;
        java.util.Date r51;
        com.mongodb.DBObject r47;
        org.bson.types.CodeWScope r54;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, z18, z19, z20;
        java.util.Collection $r42;
        java.util.regex.Pattern $r23;
        java.util.SimpleTimeZone $r27;
        int $i0, $i1, $i2, $i3, i4;
        java.util.Iterator $r31, $r37, $r43;
        java.lang.Object $r0, $r20, $r32, $r33, $r35, $r38, $r39, $r44, r46;
        java.lang.Class $r1, $r5;

        r46 := @parameter0: java.lang.Object;

        r8 := @parameter1: java.lang.StringBuilder;

        $r0 = staticinvoke <com.mongodb.Bytes: java.lang.Object applyEncodingHooks(java.lang.Object)>(r46);

        if $r0 != null goto label01;

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" null ");

        return;

     label01:
        $z0 = $r0 instanceof java.lang.Number;

        if $z0 == 0 goto label02;

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        return;

     label02:
        $z1 = $r0 instanceof java.lang.String;

        if $z1 == 0 goto label03;

        $r45 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <com.mongodb.util.JSON: void string(java.lang.StringBuilder,java.lang.String)>(r8, $r45);

        return;

     label03:
        $z2 = $r0 instanceof java.util.Collection;

        if $z2 == 0 goto label08;

        z18 = 1;

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[ ");

        $r42 = (java.util.Collection) $r0;

        $r43 = interfaceinvoke $r42.<java.util.Collection: java.util.Iterator iterator()>();

     label04:
        $z17 = interfaceinvoke $r43.<java.util.Iterator: boolean hasNext()>();

        if $z17 == 0 goto label07;

        $r44 = interfaceinvoke $r43.<java.util.Iterator: java.lang.Object next()>();

        if z18 == 0 goto label05;

        z18 = 0;

        goto label06;

     label05:
        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , ");

     label06:
        staticinvoke <com.mongodb.util.JSON: void serialize(java.lang.Object,java.lang.StringBuilder)>($r44, r8);

        goto label04;

     label07:
        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        return;

     label08:
        $z3 = $r0 instanceof org.bson.types.ObjectId;

        if $z3 == 0 goto label09;

        $r40 = new com.mongodb.BasicDBObject;

        $r41 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r40.<com.mongodb.BasicDBObject: void <init>(java.lang.String,java.lang.Object)>("$oid", $r41);

        staticinvoke <com.mongodb.util.JSON: void serialize(java.lang.Object,java.lang.StringBuilder)>($r40, r8);

        return;

     label09:
        $z4 = $r0 instanceof com.mongodb.DBObject;

        if $z4 == 0 goto label14;

        z19 = 1;

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{ ");

        r47 = (com.mongodb.DBObject) $r0;

        $r36 = interfaceinvoke r47.<com.mongodb.DBObject: java.util.Set keySet()>();

        $r37 = interfaceinvoke $r36.<java.util.Set: java.util.Iterator iterator()>();

     label10:
        $z16 = interfaceinvoke $r37.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label13;

        $r38 = interfaceinvoke $r37.<java.util.Iterator: java.lang.Object next()>();

        r48 = (java.lang.String) $r38;

        if z19 == 0 goto label11;

        z19 = 0;

        goto label12;

     label11:
        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , ");

     label12:
        staticinvoke <com.mongodb.util.JSON: void string(java.lang.StringBuilder,java.lang.String)>(r8, r48);

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r39 = interfaceinvoke r47.<com.mongodb.DBObject: java.lang.Object get(java.lang.String)>(r48);

        staticinvoke <com.mongodb.util.JSON: void serialize(java.lang.Object,java.lang.StringBuilder)>($r39, r8);

        goto label10;

     label13:
        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        return;

     label14:
        $z5 = $r0 instanceof java.util.Map;

        if $z5 == 0 goto label19;

        z20 = 1;

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{ ");

        r49 = (java.util.Map) $r0;

        $r30 = interfaceinvoke r49.<java.util.Map: java.util.Set entrySet()>();

        $r31 = interfaceinvoke $r30.<java.util.Set: java.util.Iterator iterator()>();

     label15:
        $z15 = interfaceinvoke $r31.<java.util.Iterator: boolean hasNext()>();

        if $z15 == 0 goto label18;

        $r32 = interfaceinvoke $r31.<java.util.Iterator: java.lang.Object next()>();

        r50 = (java.util.Map$Entry) $r32;

        if z20 == 0 goto label16;

        z20 = 0;

        goto label17;

     label16:
        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , ");

     label17:
        $r33 = interfaceinvoke r50.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r34 = virtualinvoke $r33.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <com.mongodb.util.JSON: void string(java.lang.StringBuilder,java.lang.String)>(r8, $r34);

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r35 = interfaceinvoke r50.<java.util.Map$Entry: java.lang.Object getValue()>();

        staticinvoke <com.mongodb.util.JSON: void serialize(java.lang.Object,java.lang.StringBuilder)>($r35, r8);

        goto label15;

     label18:
        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        return;

     label19:
        $z6 = $r0 instanceof java.util.Date;

        if $z6 == 0 goto label20;

        r51 = (java.util.Date) $r0;

        $r25 = new java.text.SimpleDateFormat;

        specialinvoke $r25.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd\'T\'HH:mm:ss\'Z\'");

        $r26 = new java.util.GregorianCalendar;

        $r27 = new java.util.SimpleTimeZone;

        specialinvoke $r27.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(0, "GMT");

        specialinvoke $r26.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>($r27);

        virtualinvoke $r25.<java.text.SimpleDateFormat: void setCalendar(java.util.Calendar)>($r26);

        $r28 = new com.mongodb.BasicDBObject;

        $r29 = virtualinvoke $r25.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r51);

        specialinvoke $r28.<com.mongodb.BasicDBObject: void <init>(java.lang.String,java.lang.Object)>("$date", $r29);

        staticinvoke <com.mongodb.util.JSON: void serialize(java.lang.Object,java.lang.StringBuilder)>($r28, r8);

        return;

     label20:
        $z7 = $r0 instanceof com.mongodb.DBRefBase;

        if $z7 == 0 goto label21;

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        return;

     label21:
        $z8 = $r0 instanceof java.lang.Boolean;

        if $z8 == 0 goto label22;

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        return;

     label22:
        $z9 = $r0 instanceof byte[];

        if $z9 == 0 goto label23;

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<Binary Data>");

        return;

     label23:
        $z10 = $r0 instanceof java.util.regex.Pattern;

        if $z10 == 0 goto label24;

        $r21 = new com.mongodb.BasicDBObject;

        specialinvoke $r21.<com.mongodb.BasicDBObject: void <init>()>();

        $r22 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke $r21.<com.mongodb.DBObject: java.lang.Object put(java.lang.String,java.lang.Object)>("$regex", $r22);

        $r23 = (java.util.regex.Pattern) $r0;

        $i3 = virtualinvoke $r23.<java.util.regex.Pattern: int flags()>();

        $r24 = staticinvoke <com.mongodb.Bytes: java.lang.String regexFlags(int)>($i3);

        interfaceinvoke $r21.<com.mongodb.DBObject: java.lang.Object put(java.lang.String,java.lang.Object)>("$options", $r24);

        staticinvoke <com.mongodb.util.JSON: void serialize(java.lang.Object,java.lang.StringBuilder)>($r21, r8);

        return;

     label24:
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $z11 = virtualinvoke $r1.<java.lang.Class: boolean isArray()>();

        if $z11 == 0 goto label28;

        $r19 = (java.lang.Object[]) $r0;

        r52 = (java.lang.Object[]) $r19;

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[ ");

        i4 = 0;

     label25:
        $i2 = lengthof r52;

        if i4 >= $i2 goto label27;

        if i4 <= 0 goto label26;

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , ");

     label26:
        $r20 = r52[i4];

        staticinvoke <com.mongodb.util.JSON: void serialize(java.lang.Object,java.lang.StringBuilder)>($r20, r8);

        i4 = i4 + 1;

        goto label25;

     label27:
        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        return;

     label28:
        $z12 = $r0 instanceof org.bson.types.BSONTimestamp;

        if $z12 == 0 goto label29;

        r53 = (org.bson.types.BSONTimestamp) $r0;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $i0 = virtualinvoke r53.<org.bson.types.BSONTimestamp: int getTime()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

        $i1 = virtualinvoke r53.<org.bson.types.BSONTimestamp: int getInc()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        return;

     label29:
        $z13 = $r0 instanceof org.bson.types.CodeWScope;

        if $z13 == 0 goto label30;

        r54 = (org.bson.types.CodeWScope) $r0;

        $r11 = new com.mongodb.BasicDBObject;

        specialinvoke $r11.<com.mongodb.BasicDBObject: void <init>()>();

        $r12 = virtualinvoke r54.<org.bson.types.CodeWScope: java.lang.String getCode()>();

        virtualinvoke $r11.<com.mongodb.BasicDBObject: java.lang.Object put(java.lang.String,java.lang.Object)>("$code", $r12);

        $r13 = virtualinvoke r54.<org.bson.types.CodeWScope: org.bson.BSONObject getScope()>();

        virtualinvoke $r11.<com.mongodb.BasicDBObject: java.lang.Object put(java.lang.String,java.lang.Object)>("$scope", $r13);

        staticinvoke <com.mongodb.util.JSON: void serialize(java.lang.Object,java.lang.StringBuilder)>($r11, r8);

        return;

     label30:
        $z14 = $r0 instanceof org.bson.types.Code;

        if $z14 == 0 goto label31;

        $r9 = (org.bson.types.Code) $r0;

        $r10 = virtualinvoke $r9.<org.bson.types.Code: java.lang.String getCode()>();

        staticinvoke <com.mongodb.util.JSON: void string(java.lang.StringBuilder,java.lang.String)>(r8, $r10);

        return;

     label31:
        $r2 = new java.lang.RuntimeException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("json can\'t serialize type : ");

        $r5 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r2;
    }

    public static java.lang.Object parse(java.lang.String)
    {
        java.lang.Object $r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.mongodb.util.JSON: java.lang.Object parse(java.lang.String,org.bson.BSONCallback)>(r0, null);

        return $r1;
    }

    public static java.lang.Object parse(java.lang.String, org.bson.BSONCallback)
    {
        org.bson.BSONCallback r2;
        com.mongodb.util.JSONParser $r1;
        java.lang.Object $r3;
        java.lang.String $r0, r4;
        boolean $z0;

        r4 := @parameter0: java.lang.String;

        r2 := @parameter1: org.bson.BSONCallback;

        if r4 == null goto label1;

        $r0 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label2;

     label1:
        return null;

     label2:
        $r1 = new com.mongodb.util.JSONParser;

        specialinvoke $r1.<com.mongodb.util.JSONParser: void <init>(java.lang.String,org.bson.BSONCallback)>($r0, r2);

        $r3 = virtualinvoke $r1.<com.mongodb.util.JSONParser: java.lang.Object parse()>();

        return $r3;
    }
}
