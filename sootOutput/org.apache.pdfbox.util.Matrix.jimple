public class org.apache.pdfbox.util.Matrix extends java.lang.Object implements java.lang.Cloneable
{
    static final float[] DEFAULT_SINGLE;
    private float[] single;

    public void <init>()
    {
        int $i0;
        org.apache.pdfbox.util.Matrix r0;
        float[] $r1, $r2;

        r0 := @this: org.apache.pdfbox.util.Matrix;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <org.apache.pdfbox.util.Matrix: float[] DEFAULT_SINGLE>;

        $i0 = lengthof $r1;

        $r2 = newarray (float)[$i0];

        r0.<org.apache.pdfbox.util.Matrix: float[] single> = $r2;

        virtualinvoke r0.<org.apache.pdfbox.util.Matrix: void reset()>();

        return;
    }

    public void reset()
    {
        int $i0;
        org.apache.pdfbox.util.Matrix r0;
        float[] $r1, $r2, $r3;

        r0 := @this: org.apache.pdfbox.util.Matrix;

        $r3 = <org.apache.pdfbox.util.Matrix: float[] DEFAULT_SINGLE>;

        $r2 = r0.<org.apache.pdfbox.util.Matrix: float[] single>;

        $r1 = <org.apache.pdfbox.util.Matrix: float[] DEFAULT_SINGLE>;

        $i0 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r2, 0, $i0);

        return;
    }

    public java.awt.geom.AffineTransform createAffineTransform()
    {
        float[] $r2, $r3, $r4, $r5, $r6, $r7;
        java.awt.geom.AffineTransform $r0;
        org.apache.pdfbox.util.Matrix r1;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r1 := @this: org.apache.pdfbox.util.Matrix;

        $r0 = new java.awt.geom.AffineTransform;

        $r2 = r1.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f5 = $r2[0];

        $r3 = r1.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f4 = $r3[1];

        $r4 = r1.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f3 = $r4[3];

        $r5 = r1.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f2 = $r5[4];

        $r6 = r1.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f1 = $r6[6];

        $r7 = r1.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f0 = $r7[7];

        specialinvoke $r0.<java.awt.geom.AffineTransform: void <init>(float,float,float,float,float,float)>($f5, $f4, $f3, $f2, $f1, $f0);

        return $r0;
    }

    public void setFromAffineTransform(java.awt.geom.AffineTransform)
    {
        float[] $r2, $r3, $r4, $r5, $r6, $r7;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        java.awt.geom.AffineTransform r1;
        org.apache.pdfbox.util.Matrix r0;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: org.apache.pdfbox.util.Matrix;

        r1 := @parameter0: java.awt.geom.AffineTransform;

        $r2 = r0.<org.apache.pdfbox.util.Matrix: float[] single>;

        $d0 = virtualinvoke r1.<java.awt.geom.AffineTransform: double getScaleX()>();

        $f0 = (float) $d0;

        $r2[0] = $f0;

        $r3 = r0.<org.apache.pdfbox.util.Matrix: float[] single>;

        $d1 = virtualinvoke r1.<java.awt.geom.AffineTransform: double getShearY()>();

        $f1 = (float) $d1;

        $r3[1] = $f1;

        $r4 = r0.<org.apache.pdfbox.util.Matrix: float[] single>;

        $d2 = virtualinvoke r1.<java.awt.geom.AffineTransform: double getShearX()>();

        $f2 = (float) $d2;

        $r4[3] = $f2;

        $r5 = r0.<org.apache.pdfbox.util.Matrix: float[] single>;

        $d3 = virtualinvoke r1.<java.awt.geom.AffineTransform: double getScaleY()>();

        $f3 = (float) $d3;

        $r5[4] = $f3;

        $r6 = r0.<org.apache.pdfbox.util.Matrix: float[] single>;

        $d4 = virtualinvoke r1.<java.awt.geom.AffineTransform: double getTranslateX()>();

        $f4 = (float) $d4;

        $r6[6] = $f4;

        $r7 = r0.<org.apache.pdfbox.util.Matrix: float[] single>;

        $d5 = virtualinvoke r1.<java.awt.geom.AffineTransform: double getTranslateY()>();

        $f5 = (float) $d5;

        $r7[7] = $f5;

        return;
    }

    public float getValue(int, int)
    {
        int i0, i1, $i2, $i3;
        org.apache.pdfbox.util.Matrix r0;
        float $f0;
        float[] $r1;

        r0 := @this: org.apache.pdfbox.util.Matrix;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.pdfbox.util.Matrix: float[] single>;

        $i2 = i0 * 3;

        $i3 = $i2 + i1;

        $f0 = $r1[$i3];

        return $f0;
    }

    public void setValue(int, int, float)
    {
        int i0, i1, $i2, $i3;
        org.apache.pdfbox.util.Matrix r0;
        float f0;
        float[] $r1;

        r0 := @this: org.apache.pdfbox.util.Matrix;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        $r1 = r0.<org.apache.pdfbox.util.Matrix: float[] single>;

        $i2 = i0 * 3;

        $i3 = $i2 + i1;

        $r1[$i3] = f0;

        return;
    }

    public float[][] getValues()
    {
        float[] $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;
        float[][] r0;
        org.apache.pdfbox.util.Matrix r1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;

        r1 := @this: org.apache.pdfbox.util.Matrix;

        r0 = newmultiarray (float)[3][3];

        $r3 = r0[0];

        $r2 = r1.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f0 = $r2[0];

        $r3[0] = $f0;

        $r5 = r0[0];

        $r4 = r1.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f1 = $r4[1];

        $r5[1] = $f1;

        $r7 = r0[0];

        $r6 = r1.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f2 = $r6[2];

        $r7[2] = $f2;

        $r9 = r0[1];

        $r8 = r1.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f3 = $r8[3];

        $r9[0] = $f3;

        $r11 = r0[1];

        $r10 = r1.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f4 = $r10[4];

        $r11[1] = $f4;

        $r13 = r0[1];

        $r12 = r1.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f5 = $r12[5];

        $r13[2] = $f5;

        $r15 = r0[2];

        $r14 = r1.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f6 = $r14[6];

        $r15[0] = $f6;

        $r17 = r0[2];

        $r16 = r1.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f7 = $r16[7];

        $r17[1] = $f7;

        $r19 = r0[2];

        $r18 = r1.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f8 = $r18[8];

        $r19[2] = $f8;

        return r0;
    }

    public double[][] getValuesAsDouble()
    {
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        double[][] r0;
        double[] $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19;
        float[] $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;
        org.apache.pdfbox.util.Matrix r1;

        r1 := @this: org.apache.pdfbox.util.Matrix;

        r0 = newmultiarray (double)[3][3];

        $r3 = r0[0];

        $r2 = r1.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f0 = $r2[0];

        $d0 = (double) $f0;

        $r3[0] = $d0;

        $r5 = r0[0];

        $r4 = r1.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f1 = $r4[1];

        $d1 = (double) $f1;

        $r5[1] = $d1;

        $r7 = r0[0];

        $r6 = r1.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f2 = $r6[2];

        $d2 = (double) $f2;

        $r7[2] = $d2;

        $r9 = r0[1];

        $r8 = r1.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f3 = $r8[3];

        $d3 = (double) $f3;

        $r9[0] = $d3;

        $r11 = r0[1];

        $r10 = r1.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f4 = $r10[4];

        $d4 = (double) $f4;

        $r11[1] = $d4;

        $r13 = r0[1];

        $r12 = r1.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f5 = $r12[5];

        $d5 = (double) $f5;

        $r13[2] = $d5;

        $r15 = r0[2];

        $r14 = r1.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f6 = $r14[6];

        $d6 = (double) $f6;

        $r15[0] = $d6;

        $r17 = r0[2];

        $r16 = r1.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f7 = $r16[7];

        $d7 = (double) $f7;

        $r17[1] = $d7;

        $r19 = r0[2];

        $r18 = r1.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f8 = $r18[8];

        $d8 = (double) $f8;

        $r19[2] = $d8;

        return r0;
    }

    public org.apache.pdfbox.util.Matrix multiply(org.apache.pdfbox.util.Matrix)
    {
        org.apache.pdfbox.util.Matrix r0, r1, $r2, $r3;

        r0 := @this: org.apache.pdfbox.util.Matrix;

        r1 := @parameter0: org.apache.pdfbox.util.Matrix;

        $r2 = new org.apache.pdfbox.util.Matrix;

        specialinvoke $r2.<org.apache.pdfbox.util.Matrix: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.pdfbox.util.Matrix: org.apache.pdfbox.util.Matrix multiply(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.util.Matrix)>(r1, $r2);

        return $r3;
    }

    public org.apache.pdfbox.util.Matrix multiply(org.apache.pdfbox.util.Matrix, org.apache.pdfbox.util.Matrix)
    {
        float[] $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, r20, r21, r22, r23;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53, $f54, $f55, $f56, $f57, $f58, $f59, $f60, $f61, $f62, $f63, $f64, $f65, $f66, $f67, $f68, $f69, $f70, $f71, $f72, $f73, $f74, $f75, $f76, $f77, $f78, $f79, $f80, $f81, $f82, $f83, $f84, $f85, $f86, $f87, $f88, $f89, $f90, $f91, $f92, $f93, $f94, $f95, $f96, $f97, $f98;
        int $i0, $i1, $i2, $i3;
        org.apache.pdfbox.util.Matrix r0, r2, $r18, r19;

        r2 := @this: org.apache.pdfbox.util.Matrix;

        r0 := @parameter0: org.apache.pdfbox.util.Matrix;

        r19 := @parameter1: org.apache.pdfbox.util.Matrix;

        if r19 != null goto label1;

        $r18 = new org.apache.pdfbox.util.Matrix;

        specialinvoke $r18.<org.apache.pdfbox.util.Matrix: void <init>()>();

        r19 = $r18;

     label1:
        if r0 == null goto label4;

        $r1 = r0.<org.apache.pdfbox.util.Matrix: float[] single>;

        if $r1 == null goto label4;

        r20 = r2.<org.apache.pdfbox.util.Matrix: float[] single>;

        r21 = r0.<org.apache.pdfbox.util.Matrix: float[] single>;

        if r2 != r19 goto label2;

        $r15 = r2.<org.apache.pdfbox.util.Matrix: float[] single>;

        $i2 = lengthof $r15;

        r22 = newarray (float)[$i2];

        $r17 = r2.<org.apache.pdfbox.util.Matrix: float[] single>;

        $r16 = r2.<org.apache.pdfbox.util.Matrix: float[] single>;

        $i3 = lengthof $r16;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r17, 0, r22, 0, $i3);

        r20 = r22;

     label2:
        if r0 != r19 goto label3;

        $r12 = r0.<org.apache.pdfbox.util.Matrix: float[] single>;

        $i0 = lengthof $r12;

        r23 = newarray (float)[$i0];

        $r14 = r0.<org.apache.pdfbox.util.Matrix: float[] single>;

        $r13 = r0.<org.apache.pdfbox.util.Matrix: float[] single>;

        $i1 = lengthof $r13;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r14, 0, r23, 0, $i1);

        r21 = r23;

     label3:
        $r3 = r19.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f1 = r20[0];

        $f0 = r21[0];

        $f5 = $f1 * $f0;

        $f3 = r20[1];

        $f2 = r21[3];

        $f4 = $f3 * $f2;

        $f9 = $f5 + $f4;

        $f7 = r20[2];

        $f6 = r21[6];

        $f8 = $f7 * $f6;

        $f10 = $f9 + $f8;

        $r3[0] = $f10;

        $r4 = r19.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f12 = r20[0];

        $f11 = r21[1];

        $f16 = $f12 * $f11;

        $f14 = r20[1];

        $f13 = r21[4];

        $f15 = $f14 * $f13;

        $f20 = $f16 + $f15;

        $f18 = r20[2];

        $f17 = r21[7];

        $f19 = $f18 * $f17;

        $f21 = $f20 + $f19;

        $r4[1] = $f21;

        $r5 = r19.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f23 = r20[0];

        $f22 = r21[2];

        $f27 = $f23 * $f22;

        $f25 = r20[1];

        $f24 = r21[5];

        $f26 = $f25 * $f24;

        $f31 = $f27 + $f26;

        $f29 = r20[2];

        $f28 = r21[8];

        $f30 = $f29 * $f28;

        $f32 = $f31 + $f30;

        $r5[2] = $f32;

        $r6 = r19.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f34 = r20[3];

        $f33 = r21[0];

        $f38 = $f34 * $f33;

        $f36 = r20[4];

        $f35 = r21[3];

        $f37 = $f36 * $f35;

        $f42 = $f38 + $f37;

        $f40 = r20[5];

        $f39 = r21[6];

        $f41 = $f40 * $f39;

        $f43 = $f42 + $f41;

        $r6[3] = $f43;

        $r7 = r19.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f45 = r20[3];

        $f44 = r21[1];

        $f49 = $f45 * $f44;

        $f47 = r20[4];

        $f46 = r21[4];

        $f48 = $f47 * $f46;

        $f53 = $f49 + $f48;

        $f51 = r20[5];

        $f50 = r21[7];

        $f52 = $f51 * $f50;

        $f54 = $f53 + $f52;

        $r7[4] = $f54;

        $r8 = r19.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f56 = r20[3];

        $f55 = r21[2];

        $f60 = $f56 * $f55;

        $f58 = r20[4];

        $f57 = r21[5];

        $f59 = $f58 * $f57;

        $f64 = $f60 + $f59;

        $f62 = r20[5];

        $f61 = r21[8];

        $f63 = $f62 * $f61;

        $f65 = $f64 + $f63;

        $r8[5] = $f65;

        $r9 = r19.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f67 = r20[6];

        $f66 = r21[0];

        $f71 = $f67 * $f66;

        $f69 = r20[7];

        $f68 = r21[3];

        $f70 = $f69 * $f68;

        $f75 = $f71 + $f70;

        $f73 = r20[8];

        $f72 = r21[6];

        $f74 = $f73 * $f72;

        $f76 = $f75 + $f74;

        $r9[6] = $f76;

        $r10 = r19.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f78 = r20[6];

        $f77 = r21[1];

        $f82 = $f78 * $f77;

        $f80 = r20[7];

        $f79 = r21[4];

        $f81 = $f80 * $f79;

        $f86 = $f82 + $f81;

        $f84 = r20[8];

        $f83 = r21[7];

        $f85 = $f84 * $f83;

        $f87 = $f86 + $f85;

        $r10[7] = $f87;

        $r11 = r19.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f89 = r20[6];

        $f88 = r21[2];

        $f93 = $f89 * $f88;

        $f91 = r20[7];

        $f90 = r21[5];

        $f92 = $f91 * $f90;

        $f97 = $f93 + $f92;

        $f95 = r20[8];

        $f94 = r21[8];

        $f96 = $f95 * $f94;

        $f98 = $f97 + $f96;

        $r11[8] = $f98;

     label4:
        return r19;
    }

    public org.apache.pdfbox.util.Matrix extractScaling()
    {
        float[] $r2, $r3, $r4, $r5;
        org.apache.pdfbox.util.Matrix $r0, r1;
        float $f0, $f1;

        r1 := @this: org.apache.pdfbox.util.Matrix;

        $r0 = new org.apache.pdfbox.util.Matrix;

        specialinvoke $r0.<org.apache.pdfbox.util.Matrix: void <init>()>();

        $r3 = $r0.<org.apache.pdfbox.util.Matrix: float[] single>;

        $r2 = r1.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f0 = $r2[0];

        $r3[0] = $f0;

        $r5 = $r0.<org.apache.pdfbox.util.Matrix: float[] single>;

        $r4 = r1.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f1 = $r4[4];

        $r5[4] = $f1;

        return $r0;
    }

    public static org.apache.pdfbox.util.Matrix getScaleInstance(float, float)
    {
        org.apache.pdfbox.util.Matrix $r0;
        float f0, f1;
        float[] $r1, $r2;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r0 = new org.apache.pdfbox.util.Matrix;

        specialinvoke $r0.<org.apache.pdfbox.util.Matrix: void <init>()>();

        $r1 = $r0.<org.apache.pdfbox.util.Matrix: float[] single>;

        $r1[0] = f0;

        $r2 = $r0.<org.apache.pdfbox.util.Matrix: float[] single>;

        $r2[4] = f1;

        return $r0;
    }

    public org.apache.pdfbox.util.Matrix extractTranslating()
    {
        float[] $r2, $r3, $r4, $r5;
        org.apache.pdfbox.util.Matrix $r0, r1;
        float $f0, $f1;

        r1 := @this: org.apache.pdfbox.util.Matrix;

        $r0 = new org.apache.pdfbox.util.Matrix;

        specialinvoke $r0.<org.apache.pdfbox.util.Matrix: void <init>()>();

        $r3 = $r0.<org.apache.pdfbox.util.Matrix: float[] single>;

        $r2 = r1.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f0 = $r2[6];

        $r3[6] = $f0;

        $r5 = $r0.<org.apache.pdfbox.util.Matrix: float[] single>;

        $r4 = r1.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f1 = $r4[7];

        $r5[7] = $f1;

        return $r0;
    }

    public static org.apache.pdfbox.util.Matrix getTranslatingInstance(float, float)
    {
        org.apache.pdfbox.util.Matrix $r0;
        float f0, f1;
        float[] $r1, $r2;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r0 = new org.apache.pdfbox.util.Matrix;

        specialinvoke $r0.<org.apache.pdfbox.util.Matrix: void <init>()>();

        $r1 = $r0.<org.apache.pdfbox.util.Matrix: float[] single>;

        $r1[6] = f0;

        $r2 = $r0.<org.apache.pdfbox.util.Matrix: float[] single>;

        $r2[7] = f1;

        return $r0;
    }

    public java.lang.Object clone()
    {
        org.apache.pdfbox.util.Matrix $r0, r1;
        float[] $r2, $r3;

        r1 := @this: org.apache.pdfbox.util.Matrix;

        $r0 = new org.apache.pdfbox.util.Matrix;

        specialinvoke $r0.<org.apache.pdfbox.util.Matrix: void <init>()>();

        $r3 = r1.<org.apache.pdfbox.util.Matrix: float[] single>;

        $r2 = $r0.<org.apache.pdfbox.util.Matrix: float[] single>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r2, 0, 9);

        return $r0;
    }

    public org.apache.pdfbox.util.Matrix copy()
    {
        org.apache.pdfbox.util.Matrix r0, $r2;
        java.lang.Object $r1;

        r0 := @this: org.apache.pdfbox.util.Matrix;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.util.Matrix: java.lang.Object clone()>();

        $r2 = (org.apache.pdfbox.util.Matrix) $r1;

        return $r2;
    }

    public java.lang.String toString()
    {
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        java.lang.StringBuilder $r1, $r4, $r5, $r7, $r9, $r10, $r12, $r14, $r15, $r17, $r19, $r20, $r22, $r24, $r25, $r27, $r29, $r30, $r32, $r34, $r35, $r37, $r39, $r40, $r42, $r44, $r45;
        float[] $r3, $r8, $r13, $r18, $r23, $r28, $r33, $r38, $r43;
        java.lang.StringBuffer $r0;
        java.lang.String $r6, $r11, $r16, $r21, $r26, $r31, $r36, $r41, $r46, $r47;
        org.apache.pdfbox.util.Matrix r2;

        r2 := @this: org.apache.pdfbox.util.Matrix;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>("");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[[");

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = r2.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f0 = $r3[0];

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = r2.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f1 = $r8[1];

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = r2.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f2 = $r13[2];

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = r2.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f3 = $r18[3];

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = r2.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f4 = $r23[4];

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f4);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = r2.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f5 = $r28[5];

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f5);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r31);

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = r2.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f6 = $r33[6];

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f6);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r36);

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = r2.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f7 = $r38[7];

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f7);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r41);

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r43 = r2.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f8 = $r43[8];

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f8);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]]");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r46);

        $r47 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r47;
    }

    public float getXScale()
    {
        float[] $r1, $r2, $r3, $r4, $r5;
        byte $b0, $b1;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        org.apache.pdfbox.util.Matrix r0;
        float $f0, $f1, $f2, $f3, f4;

        r0 := @this: org.apache.pdfbox.util.Matrix;

        $r1 = r0.<org.apache.pdfbox.util.Matrix: float[] single>;

        f4 = $r1[0];

        $r2 = r0.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f0 = $r2[1];

        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label1;

        $r5 = r0.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f3 = $r5[3];

        $b1 = $f3 cmpl 0.0F;

        if $b1 == 0 goto label2;

     label1:
        $r3 = r0.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f1 = $r3[0];

        $d0 = (double) $f1;

        $d1 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 2.0);

        $r4 = r0.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f2 = $r4[1];

        $d2 = (double) $f2;

        $d3 = staticinvoke <java.lang.Math: double pow(double,double)>($d2, 2.0);

        $d4 = $d1 + $d3;

        $d5 = staticinvoke <java.lang.Math: double sqrt(double)>($d4);

        f4 = (float) $d5;

     label2:
        return f4;
    }

    public float getYScale()
    {
        float[] $r1, $r2, $r3, $r4, $r5;
        byte $b0, $b1;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        org.apache.pdfbox.util.Matrix r0;
        float $f0, $f1, $f2, $f3, f4;

        r0 := @this: org.apache.pdfbox.util.Matrix;

        $r1 = r0.<org.apache.pdfbox.util.Matrix: float[] single>;

        f4 = $r1[4];

        $r2 = r0.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f0 = $r2[1];

        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label1;

        $r5 = r0.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f3 = $r5[3];

        $b1 = $f3 cmpl 0.0F;

        if $b1 == 0 goto label2;

     label1:
        $r3 = r0.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f1 = $r3[3];

        $d0 = (double) $f1;

        $d1 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 2.0);

        $r4 = r0.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f2 = $r4[4];

        $d2 = (double) $f2;

        $d3 = staticinvoke <java.lang.Math: double pow(double,double)>($d2, 2.0);

        $d4 = $d1 + $d3;

        $d5 = staticinvoke <java.lang.Math: double sqrt(double)>($d4);

        f4 = (float) $d5;

     label2:
        return f4;
    }

    public float getXPosition()
    {
        org.apache.pdfbox.util.Matrix r0;
        float $f0;
        float[] $r1;

        r0 := @this: org.apache.pdfbox.util.Matrix;

        $r1 = r0.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f0 = $r1[6];

        return $f0;
    }

    public float getYPosition()
    {
        org.apache.pdfbox.util.Matrix r0;
        float $f0;
        float[] $r1;

        r0 := @this: org.apache.pdfbox.util.Matrix;

        $r1 = r0.<org.apache.pdfbox.util.Matrix: float[] single>;

        $f0 = $r1[7];

        return $f0;
    }

    static void <clinit>()
    {
        float[] $r0;

        $r0 = newarray (float)[9];

        $r0[0] = 1.0F;

        $r0[1] = 0.0F;

        $r0[2] = 0.0F;

        $r0[3] = 0.0F;

        $r0[4] = 1.0F;

        $r0[5] = 0.0F;

        $r0[6] = 0.0F;

        $r0[7] = 0.0F;

        $r0[8] = 1.0F;

        <org.apache.pdfbox.util.Matrix: float[] DEFAULT_SINGLE> = $r0;

        return;
    }
}
