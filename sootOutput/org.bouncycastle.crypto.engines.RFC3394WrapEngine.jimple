public class org.bouncycastle.crypto.engines.RFC3394WrapEngine extends java.lang.Object implements org.bouncycastle.crypto.Wrapper
{
    private org.bouncycastle.crypto.BlockCipher engine;
    private org.bouncycastle.crypto.params.KeyParameter param;
    private boolean forWrapping;
    private byte[] iv;

    public void <init>(org.bouncycastle.crypto.BlockCipher)
    {
        byte[] $r1;
        org.bouncycastle.crypto.engines.RFC3394WrapEngine r0;
        org.bouncycastle.crypto.BlockCipher r2;

        r0 := @this: org.bouncycastle.crypto.engines.RFC3394WrapEngine;

        r2 := @parameter0: org.bouncycastle.crypto.BlockCipher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[8];

        $r1[0] = -90;

        $r1[1] = -90;

        $r1[2] = -90;

        $r1[3] = -90;

        $r1[4] = -90;

        $r1[5] = -90;

        $r1[6] = -90;

        $r1[7] = -90;

        r0.<org.bouncycastle.crypto.engines.RFC3394WrapEngine: byte[] iv> = $r1;

        r0.<org.bouncycastle.crypto.engines.RFC3394WrapEngine: org.bouncycastle.crypto.BlockCipher engine> = r2;

        return;
    }

    public void init(boolean, org.bouncycastle.crypto.CipherParameters)
    {
        byte[] $r2, $r6;
        org.bouncycastle.crypto.params.ParametersWithIV $r1, $r3;
        org.bouncycastle.crypto.params.ParametersWithRandom $r9;
        int $i0;
        org.bouncycastle.crypto.engines.RFC3394WrapEngine r0;
        org.bouncycastle.crypto.params.KeyParameter $r5, $r8;
        boolean z0, $z1, $z2, $z3;
        org.bouncycastle.crypto.CipherParameters $r4, r10;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: org.bouncycastle.crypto.engines.RFC3394WrapEngine;

        z0 := @parameter0: boolean;

        r10 := @parameter1: org.bouncycastle.crypto.CipherParameters;

        r0.<org.bouncycastle.crypto.engines.RFC3394WrapEngine: boolean forWrapping> = z0;

        $z1 = r10 instanceof org.bouncycastle.crypto.params.ParametersWithRandom;

        if $z1 == 0 goto label1;

        $r9 = (org.bouncycastle.crypto.params.ParametersWithRandom) r10;

        r10 = virtualinvoke $r9.<org.bouncycastle.crypto.params.ParametersWithRandom: org.bouncycastle.crypto.CipherParameters getParameters()>();

     label1:
        $z2 = r10 instanceof org.bouncycastle.crypto.params.KeyParameter;

        if $z2 == 0 goto label2;

        $r8 = (org.bouncycastle.crypto.params.KeyParameter) r10;

        r0.<org.bouncycastle.crypto.engines.RFC3394WrapEngine: org.bouncycastle.crypto.params.KeyParameter param> = $r8;

        goto label3;

     label2:
        $z3 = r10 instanceof org.bouncycastle.crypto.params.ParametersWithIV;

        if $z3 == 0 goto label3;

        $r1 = (org.bouncycastle.crypto.params.ParametersWithIV) r10;

        $r2 = virtualinvoke $r1.<org.bouncycastle.crypto.params.ParametersWithIV: byte[] getIV()>();

        r0.<org.bouncycastle.crypto.engines.RFC3394WrapEngine: byte[] iv> = $r2;

        $r3 = (org.bouncycastle.crypto.params.ParametersWithIV) r10;

        $r4 = virtualinvoke $r3.<org.bouncycastle.crypto.params.ParametersWithIV: org.bouncycastle.crypto.CipherParameters getParameters()>();

        $r5 = (org.bouncycastle.crypto.params.KeyParameter) $r4;

        r0.<org.bouncycastle.crypto.engines.RFC3394WrapEngine: org.bouncycastle.crypto.params.KeyParameter param> = $r5;

        $r6 = r0.<org.bouncycastle.crypto.engines.RFC3394WrapEngine: byte[] iv>;

        $i0 = lengthof $r6;

        if $i0 == 8 goto label3;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("IV not equal to 8");

        throw $r7;

     label3:
        return;
    }

    public java.lang.String getAlgorithmName()
    {
        org.bouncycastle.crypto.engines.RFC3394WrapEngine r0;
        java.lang.String $r2;
        org.bouncycastle.crypto.BlockCipher $r1;

        r0 := @this: org.bouncycastle.crypto.engines.RFC3394WrapEngine;

        $r1 = r0.<org.bouncycastle.crypto.engines.RFC3394WrapEngine: org.bouncycastle.crypto.BlockCipher engine>;

        $r2 = interfaceinvoke $r1.<org.bouncycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        return $r2;
    }

    public byte[] wrap(byte[], int, int)
    {
        byte[] $r1, r2, $r3, r4, $r5, $r6, r7, $r8, $r11, $r12, $r14;
        java.lang.IllegalStateException $r16;
        org.bouncycastle.crypto.DataLengthException $r15;
        byte b14, $b17, $b18, $b19;
        org.bouncycastle.crypto.engines.RFC3394WrapEngine r0;
        boolean $z0;
        org.bouncycastle.crypto.BlockCipher $r10, $r13;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, i20, i21, i22, i23, i24;
        org.bouncycastle.crypto.params.KeyParameter $r9;

        r0 := @this: org.bouncycastle.crypto.engines.RFC3394WrapEngine;

        r7 := @parameter0: byte[];

        i20 := @parameter1: int;

        i0 := @parameter2: int;

        $z0 = r0.<org.bouncycastle.crypto.engines.RFC3394WrapEngine: boolean forWrapping>;

        if $z0 != 0 goto label1;

        $r16 = new java.lang.IllegalStateException;

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>("not set for wrapping");

        throw $r16;

     label1:
        i1 = i0 / 8;

        $i2 = i1 * 8;

        if $i2 == i0 goto label2;

        $r15 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r15.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("wrap data must be a multiple of 8 bytes");

        throw $r15;

     label2:
        $r1 = r0.<org.bouncycastle.crypto.engines.RFC3394WrapEngine: byte[] iv>;

        $i3 = lengthof $r1;

        $i4 = i0 + $i3;

        r2 = newarray (byte)[$i4];

        $r3 = r0.<org.bouncycastle.crypto.engines.RFC3394WrapEngine: byte[] iv>;

        $i5 = lengthof $r3;

        $i6 = 8 + $i5;

        r4 = newarray (byte)[$i6];

        $r6 = r0.<org.bouncycastle.crypto.engines.RFC3394WrapEngine: byte[] iv>;

        $r5 = r0.<org.bouncycastle.crypto.engines.RFC3394WrapEngine: byte[] iv>;

        $i7 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r2, 0, $i7);

        $r8 = r0.<org.bouncycastle.crypto.engines.RFC3394WrapEngine: byte[] iv>;

        $i8 = lengthof $r8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, 0, r2, $i8, i0);

        $r10 = r0.<org.bouncycastle.crypto.engines.RFC3394WrapEngine: org.bouncycastle.crypto.BlockCipher engine>;

        $r9 = r0.<org.bouncycastle.crypto.engines.RFC3394WrapEngine: org.bouncycastle.crypto.params.KeyParameter param>;

        interfaceinvoke $r10.<org.bouncycastle.crypto.BlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(1, $r9);

        i21 = 0;

     label3:
        if i21 == 6 goto label8;

        i22 = 1;

     label4:
        if i22 > i1 goto label7;

        $r11 = r0.<org.bouncycastle.crypto.engines.RFC3394WrapEngine: byte[] iv>;

        $i9 = lengthof $r11;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r4, 0, $i9);

        $i11 = 8 * i22;

        $r12 = r0.<org.bouncycastle.crypto.engines.RFC3394WrapEngine: byte[] iv>;

        $i10 = lengthof $r12;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, $i11, r4, $i10, 8);

        $r13 = r0.<org.bouncycastle.crypto.engines.RFC3394WrapEngine: org.bouncycastle.crypto.BlockCipher engine>;

        interfaceinvoke $r13.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>(r4, 0, r4, 0);

        $i12 = i1 * i21;

        i23 = $i12 + i22;

        i24 = 1;

     label5:
        if i23 == 0 goto label6;

        b14 = (byte) i23;

        $r14 = r0.<org.bouncycastle.crypto.engines.RFC3394WrapEngine: byte[] iv>;

        $i15 = lengthof $r14;

        $i16 = $i15 - i24;

        $b17 = r4[$i16];

        $b18 = $b17 ^ b14;

        $b19 = (byte) $b18;

        r4[$i16] = $b19;

        i23 = i23 >>> 8;

        i24 = i24 + 1;

        goto label5;

     label6:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, r2, 0, 8);

        $i13 = 8 * i22;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 8, r2, $i13, 8);

        i22 = i22 + 1;

        goto label4;

     label7:
        i21 = i21 + 1;

        goto label3;

     label8:
        return r2;
    }

    public byte[] unwrap(byte[], int, int) throws org.bouncycastle.crypto.InvalidCipherTextException
    {
        byte[] $r1, r2, $r3, r4, $r5, r6, r7, $r8, $r9, $r10, $r13, $r15, $r16, $r18;
        java.lang.IllegalStateException $r21;
        byte b18, $b21, $b22, $b23;
        org.bouncycastle.crypto.engines.RFC3394WrapEngine r0;
        boolean $z0, $z1;
        org.bouncycastle.crypto.BlockCipher $r12, $r17;
        org.bouncycastle.crypto.InvalidCipherTextException $r22, $r23;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i19, $i20, i24, i25, i26, i27, i28, i29, i30, $i32, $i34;
        org.bouncycastle.crypto.params.KeyParameter $r11;

        r0 := @this: org.bouncycastle.crypto.engines.RFC3394WrapEngine;

        r7 := @parameter0: byte[];

        i24 := @parameter1: int;

        i0 := @parameter2: int;

        $z0 = r0.<org.bouncycastle.crypto.engines.RFC3394WrapEngine: boolean forWrapping>;

        if $z0 == 0 goto label1;

        $r21 = new java.lang.IllegalStateException;

        specialinvoke $r21.<java.lang.IllegalStateException: void <init>(java.lang.String)>("not set for unwrapping");

        throw $r21;

     label1:
        i25 = i0 / 8;

        $i1 = i25 * 8;

        if $i1 == i0 goto label2;

        $r22 = new org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r22.<org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("unwrap data must be a multiple of 8 bytes");

        throw $r22;

     label2:
        $r1 = r0.<org.bouncycastle.crypto.engines.RFC3394WrapEngine: byte[] iv>;

        $i2 = lengthof $r1;

        $i3 = i0 - $i2;

        r2 = newarray (byte)[$i3];

        $r3 = r0.<org.bouncycastle.crypto.engines.RFC3394WrapEngine: byte[] iv>;

        $i4 = lengthof $r3;

        r4 = newarray (byte)[$i4];

        $r5 = r0.<org.bouncycastle.crypto.engines.RFC3394WrapEngine: byte[] iv>;

        $i5 = lengthof $r5;

        $i6 = 8 + $i5;

        r6 = newarray (byte)[$i6];

        $r8 = r0.<org.bouncycastle.crypto.engines.RFC3394WrapEngine: byte[] iv>;

        $i7 = lengthof $r8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, 0, r4, 0, $i7);

        $r9 = r0.<org.bouncycastle.crypto.engines.RFC3394WrapEngine: byte[] iv>;

        $i10 = lengthof $r9;

        $r10 = r0.<org.bouncycastle.crypto.engines.RFC3394WrapEngine: byte[] iv>;

        $i8 = lengthof $r10;

        $i9 = i0 - $i8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, $i10, r2, 0, $i9);

        $r12 = r0.<org.bouncycastle.crypto.engines.RFC3394WrapEngine: org.bouncycastle.crypto.BlockCipher engine>;

        $r11 = r0.<org.bouncycastle.crypto.engines.RFC3394WrapEngine: org.bouncycastle.crypto.params.KeyParameter param>;

        interfaceinvoke $r12.<org.bouncycastle.crypto.BlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(0, $r11);

        i26 = i25 - 1;

        i27 = 5;

     label3:
        if i27 < 0 goto label8;

        i28 = i26;

     label4:
        if i28 < 1 goto label7;

        $r15 = r0.<org.bouncycastle.crypto.engines.RFC3394WrapEngine: byte[] iv>;

        $i11 = lengthof $r15;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, r6, 0, $i11);

        $i12 = i28 - 1;

        $i14 = 8 * $i12;

        $r16 = r0.<org.bouncycastle.crypto.engines.RFC3394WrapEngine: byte[] iv>;

        $i13 = lengthof $r16;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, $i14, r6, $i13, 8);

        $i15 = i26 * i27;

        i29 = $i15 + i28;

        i30 = 1;

     label5:
        if i29 == 0 goto label6;

        b18 = (byte) i29;

        $r18 = r0.<org.bouncycastle.crypto.engines.RFC3394WrapEngine: byte[] iv>;

        $i19 = lengthof $r18;

        $i20 = $i19 - i30;

        $b21 = r6[$i20];

        $b22 = $b21 ^ b18;

        $b23 = (byte) $b22;

        r6[$i20] = $b23;

        i29 = i29 >>> 8;

        i30 = i30 + 1;

        goto label5;

     label6:
        $r17 = r0.<org.bouncycastle.crypto.engines.RFC3394WrapEngine: org.bouncycastle.crypto.BlockCipher engine>;

        interfaceinvoke $r17.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>(r6, 0, r6, 0);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r6, 0, r4, 0, 8);

        $i16 = i28 - 1;

        $i17 = 8 * $i16;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r6, 8, r2, $i17, 8);

        $i32 = (int) -1;

        i28 = i28 + $i32;

        goto label4;

     label7:
        $i34 = (int) -1;

        i27 = i27 + $i34;

        goto label3;

     label8:
        $r13 = r0.<org.bouncycastle.crypto.engines.RFC3394WrapEngine: byte[] iv>;

        $z1 = staticinvoke <org.bouncycastle.util.Arrays: boolean constantTimeAreEqual(byte[],byte[])>(r4, $r13);

        if $z1 != 0 goto label9;

        $r23 = new org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r23.<org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("checksum failed");

        throw $r23;

     label9:
        return r2;
    }
}
