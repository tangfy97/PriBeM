public class org.apache.tika.parser.audio.AudioParser extends org.apache.tika.parser.AbstractParser
{
    private static final long serialVersionUID;
    private static final java.util.Set SUPPORTED_TYPES;

    public void <init>()
    {
        org.apache.tika.parser.audio.AudioParser r0;

        r0 := @this: org.apache.tika.parser.audio.AudioParser;

        specialinvoke r0.<org.apache.tika.parser.AbstractParser: void <init>()>();

        return;
    }

    public java.util.Set getSupportedTypes(org.apache.tika.parser.ParseContext)
    {
        java.util.Set $r0;
        org.apache.tika.parser.audio.AudioParser r1;
        org.apache.tika.parser.ParseContext r2;

        r1 := @this: org.apache.tika.parser.audio.AudioParser;

        r2 := @parameter0: org.apache.tika.parser.ParseContext;

        $r0 = <org.apache.tika.parser.audio.AudioParser: java.util.Set SUPPORTED_TYPES>;

        return $r0;
    }

    public void parse(java.io.InputStream, org.xml.sax.ContentHandler, org.apache.tika.metadata.Metadata, org.apache.tika.parser.ParseContext) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        java.io.BufferedInputStream $r28;
        javax.sound.sampled.AudioFormat $r23;
        org.apache.tika.metadata.Metadata r3;
        org.apache.tika.metadata.Property $r8, $r9, $r10, $r12;
        byte $b0;
        javax.sound.sampled.AudioFileFormat $r0;
        java.util.Map $r26, $r27;
        boolean $z0;
        javax.sound.sampled.UnsupportedAudioFileException $r20;
        javax.sound.sampled.AudioFileFormat$Type $r1, $r2, $r15, $r16, $r17, $r18;
        org.apache.tika.parser.ParseContext r21;
        float $f0;
        int $i1, $i2, $i3, $i5, $i7;
        org.xml.sax.ContentHandler r6;
        java.lang.String $r7, $r11, $r13, $r14, $r25;
        org.apache.tika.sax.XHTMLContentHandler $r29;
        org.apache.tika.parser.audio.AudioParser r4;
        javax.sound.sampled.AudioFormat$Encoding $r24;
        java.io.InputStream r22;

        r4 := @this: org.apache.tika.parser.audio.AudioParser;

        r22 := @parameter0: java.io.InputStream;

        r6 := @parameter1: org.xml.sax.ContentHandler;

        r3 := @parameter2: org.apache.tika.metadata.Metadata;

        r21 := @parameter3: org.apache.tika.parser.ParseContext;

        $z0 = virtualinvoke r22.<java.io.InputStream: boolean markSupported()>();

        if $z0 != 0 goto label01;

        $r28 = new java.io.BufferedInputStream;

        specialinvoke $r28.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r22);

        r22 = $r28;

     label01:
        $r0 = staticinvoke <javax.sound.sampled.AudioSystem: javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.io.InputStream)>(r22);

        $r1 = virtualinvoke $r0.<javax.sound.sampled.AudioFileFormat: javax.sound.sampled.AudioFileFormat$Type getType()>();

        $r2 = <javax.sound.sampled.AudioFileFormat$Type: javax.sound.sampled.AudioFileFormat$Type AIFC>;

        if $r1 == $r2 goto label02;

        $r15 = <javax.sound.sampled.AudioFileFormat$Type: javax.sound.sampled.AudioFileFormat$Type AIFF>;

        if $r1 != $r15 goto label03;

     label02:
        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("Content-Type", "audio/x-aiff");

        goto label06;

     label03:
        $r16 = <javax.sound.sampled.AudioFileFormat$Type: javax.sound.sampled.AudioFileFormat$Type AU>;

        if $r1 == $r16 goto label04;

        $r17 = <javax.sound.sampled.AudioFileFormat$Type: javax.sound.sampled.AudioFileFormat$Type SND>;

        if $r1 != $r17 goto label05;

     label04:
        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("Content-Type", "audio/basic");

        goto label06;

     label05:
        $r18 = <javax.sound.sampled.AudioFileFormat$Type: javax.sound.sampled.AudioFileFormat$Type WAVE>;

        if $r1 != $r18 goto label06;

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("Content-Type", "audio/x-wav");

     label06:
        $r23 = virtualinvoke $r0.<javax.sound.sampled.AudioFileFormat: javax.sound.sampled.AudioFormat getFormat()>();

        $i3 = virtualinvoke $r23.<javax.sound.sampled.AudioFormat: int getChannels()>();

        $i5 = (int) -1;

        if $i3 == $i5 goto label07;

        $r14 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i3);

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("channels", $r14);

     label07:
        $f0 = virtualinvoke $r23.<javax.sound.sampled.AudioFormat: float getSampleRate()>();

        $b0 = $f0 cmpl -1.0F;

        if $b0 == 0 goto label08;

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>($f0);

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("samplerate", $r11);

        $r12 = <org.apache.tika.metadata.XMPDM: org.apache.tika.metadata.Property AUDIO_SAMPLE_RATE>;

        $i2 = (int) $f0;

        $r13 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void set(org.apache.tika.metadata.Property,java.lang.String)>($r12, $r13);

     label08:
        $i1 = virtualinvoke $r23.<javax.sound.sampled.AudioFormat: int getSampleSizeInBits()>();

        $i7 = (int) -1;

        if $i1 == $i7 goto label11;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("bits", $r7);

        if $i1 != 8 goto label09;

        $r10 = <org.apache.tika.metadata.XMPDM: org.apache.tika.metadata.Property AUDIO_SAMPLE_TYPE>;

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void set(org.apache.tika.metadata.Property,java.lang.String)>($r10, "8Int");

        goto label11;

     label09:
        if $i1 != 16 goto label10;

        $r9 = <org.apache.tika.metadata.XMPDM: org.apache.tika.metadata.Property AUDIO_SAMPLE_TYPE>;

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void set(org.apache.tika.metadata.Property,java.lang.String)>($r9, "16Int");

        goto label11;

     label10:
        if $i1 != 32 goto label11;

        $r8 = <org.apache.tika.metadata.XMPDM: org.apache.tika.metadata.Property AUDIO_SAMPLE_TYPE>;

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void set(org.apache.tika.metadata.Property,java.lang.String)>($r8, "32Int");

     label11:
        $r24 = virtualinvoke $r23.<javax.sound.sampled.AudioFormat: javax.sound.sampled.AudioFormat$Encoding getEncoding()>();

        $r25 = virtualinvoke $r24.<javax.sound.sampled.AudioFormat$Encoding: java.lang.String toString()>();

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("encoding", $r25);

        $r26 = virtualinvoke $r0.<javax.sound.sampled.AudioFileFormat: java.util.Map properties()>();

        specialinvoke r4.<org.apache.tika.parser.audio.AudioParser: void addMetadata(org.apache.tika.metadata.Metadata,java.util.Map)>(r3, $r26);

        $r27 = virtualinvoke $r23.<javax.sound.sampled.AudioFormat: java.util.Map properties()>();

        specialinvoke r4.<org.apache.tika.parser.audio.AudioParser: void addMetadata(org.apache.tika.metadata.Metadata,java.util.Map)>(r3, $r27);

     label12:
        goto label14;

     label13:
        $r20 := @caughtexception;

     label14:
        $r29 = new org.apache.tika.sax.XHTMLContentHandler;

        specialinvoke $r29.<org.apache.tika.sax.XHTMLContentHandler: void <init>(org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata)>(r6, r3);

        virtualinvoke $r29.<org.apache.tika.sax.XHTMLContentHandler: void startDocument()>();

        virtualinvoke $r29.<org.apache.tika.sax.XHTMLContentHandler: void endDocument()>();

        return;

        catch javax.sound.sampled.UnsupportedAudioFileException from label01 to label12 with label13;
    }

    private void addMetadata(org.apache.tika.metadata.Metadata, java.util.Map)
    {
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        java.util.Set $r1;
        org.apache.tika.parser.audio.AudioParser r10;
        org.apache.tika.metadata.Metadata r6;
        java.util.Map r0;
        java.lang.Object $r3, $r5, $r7;
        java.lang.String $r8, $r9;
        boolean $z0;

        r10 := @this: org.apache.tika.parser.audio.AudioParser;

        r6 := @parameter0: org.apache.tika.metadata.Metadata;

        r0 := @parameter1: java.util.Map;

        if r0 == null goto label3;

        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r5 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r5 == null goto label2;

        $r7 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.String) $r7;

        $r9 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r6.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>($r8, $r9);

     label2:
        goto label1;

     label3:
        return;
    }

    static void <clinit>()
    {
        java.util.HashSet $r0;
        java.util.List $r5;
        org.apache.tika.mime.MediaType[] $r1;
        java.util.Set $r6;
        org.apache.tika.mime.MediaType $r2, $r3, $r4;

        <org.apache.tika.parser.audio.AudioParser: long serialVersionUID> = -6015684081240882695L;

        $r0 = new java.util.HashSet;

        $r1 = newarray (org.apache.tika.mime.MediaType)[3];

        $r2 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType audio(java.lang.String)>("basic");

        $r1[0] = $r2;

        $r3 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType audio(java.lang.String)>("x-wav");

        $r1[1] = $r3;

        $r4 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType audio(java.lang.String)>("x-aiff");

        $r1[2] = $r4;

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        specialinvoke $r0.<java.util.HashSet: void <init>(java.util.Collection)>($r5);

        $r6 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r0);

        <org.apache.tika.parser.audio.AudioParser: java.util.Set SUPPORTED_TYPES> = $r6;

        return;
    }
}
