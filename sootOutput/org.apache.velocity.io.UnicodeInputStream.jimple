public class org.apache.velocity.io.UnicodeInputStream extends java.io.InputStream
{
    public static final org.apache.velocity.io.UnicodeInputStream$UnicodeBOM UTF8_BOM;
    public static final org.apache.velocity.io.UnicodeInputStream$UnicodeBOM UTF16LE_BOM;
    public static final org.apache.velocity.io.UnicodeInputStream$UnicodeBOM UTF16BE_BOM;
    public static final org.apache.velocity.io.UnicodeInputStream$UnicodeBOM UTF32LE_BOM;
    public static final org.apache.velocity.io.UnicodeInputStream$UnicodeBOM UTF32BE_BOM;
    private static final int MAX_BOM_SIZE;
    private byte[] buf;
    private int pos;
    private final java.lang.String encoding;
    private final boolean skipBOM;
    private final java.io.PushbackInputStream inputStream;

    public void <init>(java.io.InputStream) throws java.lang.IllegalStateException, java.io.IOException
    {
        org.apache.velocity.io.UnicodeInputStream r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.velocity.io.UnicodeInputStream;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<org.apache.velocity.io.UnicodeInputStream: void <init>(java.io.InputStream,boolean)>(r1, 1);

        return;
    }

    public void <init>(java.io.InputStream, boolean) throws java.lang.IllegalStateException, java.io.IOException
    {
        byte[] $r1;
        java.lang.IllegalStateException $r6;
        java.io.PushbackInputStream $r2;
        java.io.IOException $r5;
        java.lang.String $r4;
        org.apache.velocity.io.UnicodeInputStream r0;
        boolean z0;
        java.io.InputStream r3;

        r0 := @this: org.apache.velocity.io.UnicodeInputStream;

        r3 := @parameter0: java.io.InputStream;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        $r1 = newarray (byte)[4];

        r0.<org.apache.velocity.io.UnicodeInputStream: byte[] buf> = $r1;

        r0.<org.apache.velocity.io.UnicodeInputStream: int pos> = 0;

        r0.<org.apache.velocity.io.UnicodeInputStream: boolean skipBOM> = z0;

        $r2 = new java.io.PushbackInputStream;

        specialinvoke $r2.<java.io.PushbackInputStream: void <init>(java.io.InputStream,int)>(r3, 4);

        r0.<org.apache.velocity.io.UnicodeInputStream: java.io.PushbackInputStream inputStream> = $r2;

     label1:
        $r4 = virtualinvoke r0.<org.apache.velocity.io.UnicodeInputStream: java.lang.String readEncoding()>();

        r0.<org.apache.velocity.io.UnicodeInputStream: java.lang.String encoding> = $r4;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Could not read BOM from Stream");

        staticinvoke <org.apache.velocity.util.ExceptionUtils: void setCause(java.lang.Throwable,java.lang.Throwable)>($r6, $r5);

        throw $r6;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public boolean isSkipBOM()
    {
        org.apache.velocity.io.UnicodeInputStream r0;
        boolean $z0;

        r0 := @this: org.apache.velocity.io.UnicodeInputStream;

        $z0 = r0.<org.apache.velocity.io.UnicodeInputStream: boolean skipBOM>;

        return $z0;
    }

    public java.lang.String getEncodingFromStream()
    {
        java.lang.String $r1;
        org.apache.velocity.io.UnicodeInputStream r0;

        r0 := @this: org.apache.velocity.io.UnicodeInputStream;

        $r1 = r0.<org.apache.velocity.io.UnicodeInputStream: java.lang.String encoding>;

        return $r1;
    }

    protected java.lang.String readEncoding() throws java.io.IOException
    {
        byte[] $r1;
        org.apache.velocity.io.UnicodeInputStream$UnicodeBOM $r2, $r3, $r4, $r5, $r6, $r7, r8;
        byte $b0;
        int $i1;
        java.lang.String $r9;
        org.apache.velocity.io.UnicodeInputStream r0;
        boolean $z0;

        r0 := @this: org.apache.velocity.io.UnicodeInputStream;

        r0.<org.apache.velocity.io.UnicodeInputStream: int pos> = 0;

        r8 = null;

        $z0 = specialinvoke r0.<org.apache.velocity.io.UnicodeInputStream: boolean readByte()>();

        if $z0 == 0 goto label6;

        $r1 = r0.<org.apache.velocity.io.UnicodeInputStream: byte[] buf>;

        $b0 = $r1[0];

        $i1 = (int) $b0;

        lookupswitch($i1)
        {
            case -17: goto label2;
            case -2: goto label3;
            case -1: goto label4;
            case 0: goto label1;
            default: goto label5;
        };

     label1:
        $r2 = <org.apache.velocity.io.UnicodeInputStream: org.apache.velocity.io.UnicodeInputStream$UnicodeBOM UTF32BE_BOM>;

        r8 = specialinvoke r0.<org.apache.velocity.io.UnicodeInputStream: org.apache.velocity.io.UnicodeInputStream$UnicodeBOM match(org.apache.velocity.io.UnicodeInputStream$UnicodeBOM,org.apache.velocity.io.UnicodeInputStream$UnicodeBOM)>($r2, null);

        goto label6;

     label2:
        $r7 = <org.apache.velocity.io.UnicodeInputStream: org.apache.velocity.io.UnicodeInputStream$UnicodeBOM UTF8_BOM>;

        r8 = specialinvoke r0.<org.apache.velocity.io.UnicodeInputStream: org.apache.velocity.io.UnicodeInputStream$UnicodeBOM match(org.apache.velocity.io.UnicodeInputStream$UnicodeBOM,org.apache.velocity.io.UnicodeInputStream$UnicodeBOM)>($r7, null);

        goto label6;

     label3:
        $r6 = <org.apache.velocity.io.UnicodeInputStream: org.apache.velocity.io.UnicodeInputStream$UnicodeBOM UTF16BE_BOM>;

        r8 = specialinvoke r0.<org.apache.velocity.io.UnicodeInputStream: org.apache.velocity.io.UnicodeInputStream$UnicodeBOM match(org.apache.velocity.io.UnicodeInputStream$UnicodeBOM,org.apache.velocity.io.UnicodeInputStream$UnicodeBOM)>($r6, null);

        goto label6;

     label4:
        $r3 = <org.apache.velocity.io.UnicodeInputStream: org.apache.velocity.io.UnicodeInputStream$UnicodeBOM UTF16LE_BOM>;

        $r4 = specialinvoke r0.<org.apache.velocity.io.UnicodeInputStream: org.apache.velocity.io.UnicodeInputStream$UnicodeBOM match(org.apache.velocity.io.UnicodeInputStream$UnicodeBOM,org.apache.velocity.io.UnicodeInputStream$UnicodeBOM)>($r3, null);

        r8 = $r4;

        if $r4 == null goto label6;

        $r5 = <org.apache.velocity.io.UnicodeInputStream: org.apache.velocity.io.UnicodeInputStream$UnicodeBOM UTF32LE_BOM>;

        r8 = specialinvoke r0.<org.apache.velocity.io.UnicodeInputStream: org.apache.velocity.io.UnicodeInputStream$UnicodeBOM match(org.apache.velocity.io.UnicodeInputStream$UnicodeBOM,org.apache.velocity.io.UnicodeInputStream$UnicodeBOM)>($r5, $r4);

        goto label6;

     label5:
        r8 = null;

     label6:
        specialinvoke r0.<org.apache.velocity.io.UnicodeInputStream: void pushback(org.apache.velocity.io.UnicodeInputStream$UnicodeBOM)>(r8);

        if r8 == null goto label7;

        $r9 = virtualinvoke r8.<org.apache.velocity.io.UnicodeInputStream$UnicodeBOM: java.lang.String getEncoding()>();

        goto label8;

     label7:
        $r9 = null;

     label8:
        return $r9;
    }

    private final org.apache.velocity.io.UnicodeInputStream$UnicodeBOM match(org.apache.velocity.io.UnicodeInputStream$UnicodeBOM, org.apache.velocity.io.UnicodeInputStream$UnicodeBOM) throws java.io.IOException
    {
        byte[] $r1, $r3;
        org.apache.velocity.io.UnicodeInputStream$UnicodeBOM r0, r4;
        byte $b2, $b3;
        int $i0, $i1, i4, $i5, $i6;
        org.apache.velocity.io.UnicodeInputStream r2;
        boolean $z0;

        r2 := @this: org.apache.velocity.io.UnicodeInputStream;

        r0 := @parameter0: org.apache.velocity.io.UnicodeInputStream$UnicodeBOM;

        r4 := @parameter1: org.apache.velocity.io.UnicodeInputStream$UnicodeBOM;

        $r1 = virtualinvoke r0.<org.apache.velocity.io.UnicodeInputStream$UnicodeBOM: byte[] getBytes()>();

        i4 = 0;

     label1:
        $i0 = lengthof $r1;

        if i4 >= $i0 goto label4;

        $i1 = r2.<org.apache.velocity.io.UnicodeInputStream: int pos>;

        if $i1 > i4 goto label2;

        $z0 = specialinvoke r2.<org.apache.velocity.io.UnicodeInputStream: boolean readByte()>();

        if $z0 != 0 goto label2;

        return r4;

     label2:
        $b3 = $r1[i4];

        $r3 = r2.<org.apache.velocity.io.UnicodeInputStream: byte[] buf>;

        $b2 = $r3[i4];

        $i5 = (int) $b3;

        $i6 = (int) $b2;

        if $i5 == $i6 goto label3;

        return r4;

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        return r0;
    }

    private final boolean readByte() throws java.io.IOException
    {
        byte[] $r2, $r3;
        java.io.PushbackInputStream $r1;
        java.io.IOException $r5;
        byte $b5;
        int $i0, $i1, $i2, $i3, $i4, $i7;
        org.apache.velocity.io.UnicodeInputStream r0;

        r0 := @this: org.apache.velocity.io.UnicodeInputStream;

        $r1 = r0.<org.apache.velocity.io.UnicodeInputStream: java.io.PushbackInputStream inputStream>;

        $i0 = virtualinvoke $r1.<java.io.PushbackInputStream: int read()>();

        $i7 = (int) -1;

        if $i0 != $i7 goto label1;

        return 0;

     label1:
        $i2 = r0.<org.apache.velocity.io.UnicodeInputStream: int pos>;

        $r2 = r0.<org.apache.velocity.io.UnicodeInputStream: byte[] buf>;

        $i1 = lengthof $r2;

        if $i2 < $i1 goto label2;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("BOM read error");

        throw $r5;

     label2:
        $r3 = r0.<org.apache.velocity.io.UnicodeInputStream: byte[] buf>;

        $i3 = r0.<org.apache.velocity.io.UnicodeInputStream: int pos>;

        $i4 = $i3 + 1;

        r0.<org.apache.velocity.io.UnicodeInputStream: int pos> = $i4;

        $b5 = (byte) $i0;

        $r3[$i3] = $b5;

        return 1;
    }

    private final void pushback(org.apache.velocity.io.UnicodeInputStream$UnicodeBOM) throws java.io.IOException
    {
        byte[] $r2, $r5;
        java.lang.IllegalStateException $r3;
        java.io.PushbackInputStream $r4;
        org.apache.velocity.io.UnicodeInputStream$UnicodeBOM r1;
        int $i0, i1, i2;
        org.apache.velocity.io.UnicodeInputStream r0;
        boolean $z0;

        r0 := @this: org.apache.velocity.io.UnicodeInputStream;

        r1 := @parameter0: org.apache.velocity.io.UnicodeInputStream$UnicodeBOM;

        i1 = r0.<org.apache.velocity.io.UnicodeInputStream: int pos>;

        i2 = 0;

        if r1 == null goto label1;

        $z0 = r0.<org.apache.velocity.io.UnicodeInputStream: boolean skipBOM>;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r1.<org.apache.velocity.io.UnicodeInputStream$UnicodeBOM: byte[] getBytes()>();

        i2 = lengthof $r2;

        $i0 = r0.<org.apache.velocity.io.UnicodeInputStream: int pos>;

        i1 = $i0 - i2;

        if i1 >= 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Match has more bytes than available!");

        throw $r3;

     label1:
        $r4 = r0.<org.apache.velocity.io.UnicodeInputStream: java.io.PushbackInputStream inputStream>;

        $r5 = r0.<org.apache.velocity.io.UnicodeInputStream: byte[] buf>;

        virtualinvoke $r4.<java.io.PushbackInputStream: void unread(byte[],int,int)>($r5, i2, i1);

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.velocity.io.UnicodeInputStream r0;
        java.io.PushbackInputStream $r1;

        r0 := @this: org.apache.velocity.io.UnicodeInputStream;

        $r1 = r0.<org.apache.velocity.io.UnicodeInputStream: java.io.PushbackInputStream inputStream>;

        virtualinvoke $r1.<java.io.PushbackInputStream: void close()>();

        return;
    }

    public int available() throws java.io.IOException
    {
        int $i0;
        org.apache.velocity.io.UnicodeInputStream r0;
        java.io.PushbackInputStream $r1;

        r0 := @this: org.apache.velocity.io.UnicodeInputStream;

        $r1 = r0.<org.apache.velocity.io.UnicodeInputStream: java.io.PushbackInputStream inputStream>;

        $i0 = virtualinvoke $r1.<java.io.PushbackInputStream: int available()>();

        return $i0;
    }

    public void mark(int)
    {
        int i0;
        org.apache.velocity.io.UnicodeInputStream r0;
        java.io.PushbackInputStream $r1;

        r0 := @this: org.apache.velocity.io.UnicodeInputStream;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.velocity.io.UnicodeInputStream: java.io.PushbackInputStream inputStream>;

        virtualinvoke $r1.<java.io.PushbackInputStream: void mark(int)>(i0);

        return;
    }

    public boolean markSupported()
    {
        org.apache.velocity.io.UnicodeInputStream r0;
        java.io.PushbackInputStream $r1;
        boolean $z0;

        r0 := @this: org.apache.velocity.io.UnicodeInputStream;

        $r1 = r0.<org.apache.velocity.io.UnicodeInputStream: java.io.PushbackInputStream inputStream>;

        $z0 = virtualinvoke $r1.<java.io.PushbackInputStream: boolean markSupported()>();

        return $z0;
    }

    public int read() throws java.io.IOException
    {
        int $i0;
        org.apache.velocity.io.UnicodeInputStream r0;
        java.io.PushbackInputStream $r1;

        r0 := @this: org.apache.velocity.io.UnicodeInputStream;

        $r1 = r0.<org.apache.velocity.io.UnicodeInputStream: java.io.PushbackInputStream inputStream>;

        $i0 = virtualinvoke $r1.<java.io.PushbackInputStream: int read()>();

        return $i0;
    }

    public int read(byte[]) throws java.io.IOException
    {
        byte[] r1;
        java.io.PushbackInputStream $r2;
        int $i0;
        org.apache.velocity.io.UnicodeInputStream r0;

        r0 := @this: org.apache.velocity.io.UnicodeInputStream;

        r1 := @parameter0: byte[];

        $r2 = r0.<org.apache.velocity.io.UnicodeInputStream: java.io.PushbackInputStream inputStream>;

        $i0 = virtualinvoke $r2.<java.io.PushbackInputStream: int read(byte[])>(r1);

        return $i0;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        byte[] r1;
        java.io.PushbackInputStream $r2;
        int i0, i1, $i2;
        org.apache.velocity.io.UnicodeInputStream r0;

        r0 := @this: org.apache.velocity.io.UnicodeInputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.apache.velocity.io.UnicodeInputStream: java.io.PushbackInputStream inputStream>;

        $i2 = virtualinvoke $r2.<java.io.PushbackInputStream: int read(byte[],int,int)>(r1, i0, i1);

        return $i2;
    }

    public void reset() throws java.io.IOException
    {
        org.apache.velocity.io.UnicodeInputStream r0;
        java.io.PushbackInputStream $r1;

        r0 := @this: org.apache.velocity.io.UnicodeInputStream;

        $r1 = r0.<org.apache.velocity.io.UnicodeInputStream: java.io.PushbackInputStream inputStream>;

        virtualinvoke $r1.<java.io.PushbackInputStream: void reset()>();

        return;
    }

    public long skip(long) throws java.io.IOException
    {
        java.io.PushbackInputStream $r1;
        long l0, $l1;
        org.apache.velocity.io.UnicodeInputStream r0;

        r0 := @this: org.apache.velocity.io.UnicodeInputStream;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.velocity.io.UnicodeInputStream: java.io.PushbackInputStream inputStream>;

        $l1 = virtualinvoke $r1.<java.io.PushbackInputStream: long skip(long)>(l0);

        return $l1;
    }

    static void <clinit>()
    {
        byte[] $r1, $r3, $r5, $r7, $r9;
        org.apache.velocity.io.UnicodeInputStream$UnicodeBOM $r0, $r2, $r4, $r6, $r8;

        <org.apache.velocity.io.UnicodeInputStream: int MAX_BOM_SIZE> = 4;

        $r0 = new org.apache.velocity.io.UnicodeInputStream$UnicodeBOM;

        $r1 = newarray (byte)[3];

        $r1[0] = -17;

        $r1[1] = -69;

        $r1[2] = -65;

        specialinvoke $r0.<org.apache.velocity.io.UnicodeInputStream$UnicodeBOM: void <init>(java.lang.String,byte[],org.apache.velocity.io.UnicodeInputStream$1)>("UTF-8", $r1, null);

        <org.apache.velocity.io.UnicodeInputStream: org.apache.velocity.io.UnicodeInputStream$UnicodeBOM UTF8_BOM> = $r0;

        $r2 = new org.apache.velocity.io.UnicodeInputStream$UnicodeBOM;

        $r3 = newarray (byte)[2];

        $r3[0] = -1;

        $r3[1] = -2;

        specialinvoke $r2.<org.apache.velocity.io.UnicodeInputStream$UnicodeBOM: void <init>(java.lang.String,byte[],org.apache.velocity.io.UnicodeInputStream$1)>("UTF-16LE", $r3, null);

        <org.apache.velocity.io.UnicodeInputStream: org.apache.velocity.io.UnicodeInputStream$UnicodeBOM UTF16LE_BOM> = $r2;

        $r4 = new org.apache.velocity.io.UnicodeInputStream$UnicodeBOM;

        $r5 = newarray (byte)[2];

        $r5[0] = -2;

        $r5[1] = -1;

        specialinvoke $r4.<org.apache.velocity.io.UnicodeInputStream$UnicodeBOM: void <init>(java.lang.String,byte[],org.apache.velocity.io.UnicodeInputStream$1)>("UTF-16BE", $r5, null);

        <org.apache.velocity.io.UnicodeInputStream: org.apache.velocity.io.UnicodeInputStream$UnicodeBOM UTF16BE_BOM> = $r4;

        $r6 = new org.apache.velocity.io.UnicodeInputStream$UnicodeBOM;

        $r7 = newarray (byte)[4];

        $r7[0] = -1;

        $r7[1] = -2;

        $r7[2] = 0;

        $r7[3] = 0;

        specialinvoke $r6.<org.apache.velocity.io.UnicodeInputStream$UnicodeBOM: void <init>(java.lang.String,byte[],org.apache.velocity.io.UnicodeInputStream$1)>("UTF-32LE", $r7, null);

        <org.apache.velocity.io.UnicodeInputStream: org.apache.velocity.io.UnicodeInputStream$UnicodeBOM UTF32LE_BOM> = $r6;

        $r8 = new org.apache.velocity.io.UnicodeInputStream$UnicodeBOM;

        $r9 = newarray (byte)[4];

        $r9[0] = 0;

        $r9[1] = 0;

        $r9[2] = -2;

        $r9[3] = -1;

        specialinvoke $r8.<org.apache.velocity.io.UnicodeInputStream$UnicodeBOM: void <init>(java.lang.String,byte[],org.apache.velocity.io.UnicodeInputStream$1)>("UTF-32BE", $r9, null);

        <org.apache.velocity.io.UnicodeInputStream: org.apache.velocity.io.UnicodeInputStream$UnicodeBOM UTF32BE_BOM> = $r8;

        return;
    }
}
