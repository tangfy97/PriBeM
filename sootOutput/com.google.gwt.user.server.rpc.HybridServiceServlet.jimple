public class com.google.gwt.user.server.rpc.HybridServiceServlet extends com.google.gwt.rpc.server.RpcServlet implements com.google.gwt.user.server.rpc.SerializationPolicyProvider
{
    private final java.util.Set legacyPermutations;
    private final java.util.Map serializationPolicyCache;

    public void <init>()
    {
        java.util.HashSet $r1;
        java.util.HashMap $r2;
        com.google.gwt.user.server.rpc.HybridServiceServlet r0;

        r0 := @this: com.google.gwt.user.server.rpc.HybridServiceServlet;

        specialinvoke r0.<com.google.gwt.rpc.server.RpcServlet: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<com.google.gwt.user.server.rpc.HybridServiceServlet: java.util.Set legacyPermutations> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.google.gwt.user.server.rpc.HybridServiceServlet: java.util.Map serializationPolicyCache> = $r2;

        return;
    }

    public com.google.gwt.rpc.server.ClientOracle getClientOracle()
    {
        com.google.gwt.user.client.rpc.SerializationException $r4;
        com.google.gwt.user.server.rpc.HybridServiceServlet r0;
        java.util.Set $r2, $r5;
        java.lang.String $r1;
        com.google.gwt.rpc.server.ClientOracle $r3;
        boolean $z0;

        r0 := @this: com.google.gwt.user.server.rpc.HybridServiceServlet;

        $r1 = virtualinvoke r0.<com.google.gwt.user.server.rpc.HybridServiceServlet: java.lang.String getPermutationStrongName()>();

        $r2 = r0.<com.google.gwt.user.server.rpc.HybridServiceServlet: java.util.Set legacyPermutations>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r3 = specialinvoke r0.<com.google.gwt.rpc.server.RpcServlet: com.google.gwt.rpc.server.ClientOracle getClientOracle()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = r0.<com.google.gwt.user.server.rpc.HybridServiceServlet: java.util.Set legacyPermutations>;

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return null;

        catch com.google.gwt.user.client.rpc.SerializationException from label1 to label2 with label3;
    }

    public final com.google.gwt.user.server.rpc.SerializationPolicy getSerializationPolicy(java.lang.String, java.lang.String)
    {
        javax.servlet.http.HttpServletRequest $r4;
        com.google.gwt.user.server.rpc.HybridServiceServlet r0;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11;
        java.lang.String r1, r2, $r12;
        com.google.gwt.user.server.rpc.SerializationPolicy $r3, $r5, r13;

        r0 := @this: com.google.gwt.user.server.rpc.HybridServiceServlet;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = specialinvoke r0.<com.google.gwt.user.server.rpc.HybridServiceServlet: com.google.gwt.user.server.rpc.SerializationPolicy getCachedSerializationPolicy(java.lang.String,java.lang.String)>(r1, r2);

        if $r3 == null goto label1;

        return $r3;

     label1:
        $r4 = virtualinvoke r0.<com.google.gwt.user.server.rpc.HybridServiceServlet: javax.servlet.http.HttpServletRequest getThreadLocalRequest()>();

        $r5 = virtualinvoke r0.<com.google.gwt.user.server.rpc.HybridServiceServlet: com.google.gwt.user.server.rpc.SerializationPolicy doGetSerializationPolicy(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>($r4, r1, r2);

        r13 = $r5;

        if $r5 != null goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WARNING: Failed to get the SerializationPolicy \'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' for module \'");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'; a legacy, 1.3.3 compatible, serialization policy will be used.  You may experience SerializationExceptions as a result.");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.google.gwt.user.server.rpc.HybridServiceServlet: void log(java.lang.String)>($r12);

        r13 = staticinvoke <com.google.gwt.user.server.rpc.RPC: com.google.gwt.user.server.rpc.SerializationPolicy getDefaultSerializationPolicy()>();

     label2:
        specialinvoke r0.<com.google.gwt.user.server.rpc.HybridServiceServlet: void putCachedSerializationPolicy(java.lang.String,java.lang.String,com.google.gwt.user.server.rpc.SerializationPolicy)>(r1, r2, r13);

        return r13;
    }

    public void processCall(com.google.gwt.rpc.server.ClientOracle, java.lang.String, java.io.OutputStream) throws com.google.gwt.user.client.rpc.SerializationException
    {
        byte[] $r4;
        java.lang.String r0, $r2, $r9, $r11;
        boolean $z0;
        java.io.OutputStream r3;
        com.google.gwt.user.client.rpc.SerializationException $r6, $r13;
        char $c0;
        java.io.IOException $r12;
        com.google.gwt.rpc.server.ClientOracle r5;
        com.google.gwt.user.server.rpc.HybridServiceServlet r1;
        java.lang.StringBuilder $r7, $r8, $r10;

        r1 := @this: com.google.gwt.user.server.rpc.HybridServiceServlet;

        r5 := @parameter0: com.google.gwt.rpc.server.ClientOracle;

        r0 := @parameter1: java.lang.String;

        r3 := @parameter2: java.io.OutputStream;

        $c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c0);

        if $z0 != 0 goto label2;

        if r5 != null goto label1;

        $r6 = new com.google.gwt.user.client.rpc.SerializationException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No ClientOracle for permutation ");

        $r9 = virtualinvoke r1.<com.google.gwt.user.server.rpc.HybridServiceServlet: java.lang.String getPermutationStrongName()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.google.gwt.user.client.rpc.SerializationException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label1:
        specialinvoke r1.<com.google.gwt.rpc.server.RpcServlet: void processCall(com.google.gwt.rpc.server.ClientOracle,java.lang.String,java.io.OutputStream)>(r5, r0, r3);

        goto label6;

     label2:
        $r2 = virtualinvoke r1.<com.google.gwt.user.server.rpc.HybridServiceServlet: java.lang.String processCall(java.lang.String)>(r0);

        virtualinvoke r1.<com.google.gwt.user.server.rpc.HybridServiceServlet: void onAfterResponseSerialized(java.lang.String)>($r2);

     label3:
        $r4 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke r3.<java.io.OutputStream: void write(byte[])>($r4);

     label4:
        goto label6;

     label5:
        $r12 := @caughtexception;

        $r13 = new com.google.gwt.user.client.rpc.SerializationException;

        specialinvoke $r13.<com.google.gwt.user.client.rpc.SerializationException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to commit bytes", $r12);

        throw $r13;

     label6:
        return;

        catch java.io.IOException from label3 to label4 with label5;
    }

    public java.lang.String processCall(java.lang.String) throws com.google.gwt.user.client.rpc.SerializationException
    {
        java.lang.Object[] $r5;
        com.google.gwt.user.server.rpc.HybridServiceServlet r1;
        com.google.gwt.user.server.rpc.RPCRequest $r3;
        int $i0;
        java.lang.Class $r2;
        java.lang.String r0, $r7, $r9;
        java.lang.reflect.Method $r4;
        com.google.gwt.user.server.rpc.SerializationPolicy $r6;
        com.google.gwt.user.client.rpc.IncompatibleRemoteServiceException $r8;

        r1 := @this: com.google.gwt.user.server.rpc.HybridServiceServlet;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = staticinvoke <com.google.gwt.user.server.rpc.RPC: com.google.gwt.user.server.rpc.RPCRequest decodeRequest(java.lang.String,java.lang.Class,com.google.gwt.user.server.rpc.SerializationPolicyProvider)>(r0, $r2, r1);

        virtualinvoke r1.<com.google.gwt.user.server.rpc.HybridServiceServlet: void onAfterRequestDeserialized(com.google.gwt.user.server.rpc.RPCRequest)>($r3);

        $r4 = virtualinvoke $r3.<com.google.gwt.user.server.rpc.RPCRequest: java.lang.reflect.Method getMethod()>();

        $r5 = virtualinvoke $r3.<com.google.gwt.user.server.rpc.RPCRequest: java.lang.Object[] getParameters()>();

        $r6 = virtualinvoke $r3.<com.google.gwt.user.server.rpc.RPCRequest: com.google.gwt.user.server.rpc.SerializationPolicy getSerializationPolicy()>();

        $i0 = virtualinvoke $r3.<com.google.gwt.user.server.rpc.RPCRequest: int getFlags()>();

        $r7 = staticinvoke <com.google.gwt.user.server.rpc.RPC: java.lang.String invokeAndEncodeResponse(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],com.google.gwt.user.server.rpc.SerializationPolicy,int)>(r1, $r4, $r5, $r6, $i0);

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        virtualinvoke r1.<com.google.gwt.user.server.rpc.HybridServiceServlet: void log(java.lang.String,java.lang.Throwable)>("An IncompatibleRemoteServiceException was thrown while processing this call.", $r8);

        $r9 = staticinvoke <com.google.gwt.user.server.rpc.RPC: java.lang.String encodeResponseForFailure(java.lang.reflect.Method,java.lang.Throwable)>(null, $r8);

        return $r9;

        catch com.google.gwt.user.client.rpc.IncompatibleRemoteServiceException from label1 to label2 with label3;
    }

    protected com.google.gwt.user.server.rpc.SerializationPolicy doGetSerializationPolicy(javax.servlet.http.HttpServletRequest, java.lang.String, java.lang.String)
    {
        javax.servlet.http.HttpServletRequest r1;
        com.google.gwt.user.server.rpc.HybridServiceServlet r0;
        javax.servlet.http.HttpServlet $r5;
        java.lang.String r2, r3;
        com.google.gwt.user.server.rpc.SerializationPolicy $r4;

        r0 := @this: com.google.gwt.user.server.rpc.HybridServiceServlet;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r5 = (javax.servlet.http.HttpServlet) r0;

        $r4 = staticinvoke <com.google.gwt.user.server.rpc.RemoteServiceServlet: com.google.gwt.user.server.rpc.SerializationPolicy loadSerializationPolicy(javax.servlet.http.HttpServlet,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>($r5, r1, r2, r3);

        return $r4;
    }

    protected void onAfterResponseSerialized(java.lang.String)
    {
        com.google.gwt.user.server.rpc.HybridServiceServlet r0;
        java.lang.String r1;

        r0 := @this: com.google.gwt.user.server.rpc.HybridServiceServlet;

        r1 := @parameter0: java.lang.String;

        return;
    }

    private com.google.gwt.user.server.rpc.SerializationPolicy getCachedSerializationPolicy(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r11;
        com.google.gwt.user.server.rpc.HybridServiceServlet r0;
        java.util.Map $r1, $r3;
        java.lang.StringBuilder $r2, $r5, $r7;
        java.lang.Object $r9;
        java.lang.String r4, r6, $r8;
        com.google.gwt.user.server.rpc.SerializationPolicy $r10;

        r0 := @this: com.google.gwt.user.server.rpc.HybridServiceServlet;

        r4 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        $r1 = r0.<com.google.gwt.user.server.rpc.HybridServiceServlet: java.util.Map serializationPolicyCache>;

        entermonitor $r1;

     label1:
        $r3 = r0.<com.google.gwt.user.server.rpc.HybridServiceServlet: java.util.Map serializationPolicyCache>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        $r10 = (com.google.gwt.user.server.rpc.SerializationPolicy) $r9;

        exitmonitor $r1;

     label2:
        return $r10;

     label3:
        $r11 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void putCachedSerializationPolicy(java.lang.String, java.lang.String, com.google.gwt.user.server.rpc.SerializationPolicy)
    {
        java.lang.Throwable $r10;
        com.google.gwt.user.server.rpc.HybridServiceServlet r0;
        java.util.Map $r1, $r3;
        java.lang.StringBuilder $r2, $r5, $r7;
        java.lang.String r4, r6, $r8;
        com.google.gwt.user.server.rpc.SerializationPolicy r9;

        r0 := @this: com.google.gwt.user.server.rpc.HybridServiceServlet;

        r4 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        r9 := @parameter2: com.google.gwt.user.server.rpc.SerializationPolicy;

        $r1 = r0.<com.google.gwt.user.server.rpc.HybridServiceServlet: java.util.Map serializationPolicyCache>;

        entermonitor $r1;

     label1:
        $r3 = r0.<com.google.gwt.user.server.rpc.HybridServiceServlet: java.util.Map serializationPolicyCache>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r9);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r10 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r10;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
