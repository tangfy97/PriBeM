public class org.apache.commons.lang.reflect.ConstructorUtils extends java.lang.Object
{

    public void <init>()
    {
        org.apache.commons.lang.reflect.ConstructorUtils r0;

        r0 := @this: org.apache.commons.lang.reflect.ConstructorUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Object invokeConstructor(java.lang.Class, java.lang.Object) throws java.lang.NoSuchMethodException, java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException, java.lang.InstantiationException
    {
        java.lang.Object[] $r1;
        java.lang.Class r0;
        java.lang.Object r2, $r3;

        r0 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Object;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = r2;

        $r3 = staticinvoke <org.apache.commons.lang.reflect.ConstructorUtils: java.lang.Object invokeConstructor(java.lang.Class,java.lang.Object[])>(r0, $r1);

        return $r3;
    }

    public static java.lang.Object invokeConstructor(java.lang.Class, java.lang.Object[]) throws java.lang.NoSuchMethodException, java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException, java.lang.InstantiationException
    {
        java.lang.Object[] r5;
        java.lang.Class[] $r4;
        int $i0, i1, $i2;
        java.lang.Class r0, $r3;
        java.lang.Object $r1, $r2;

        r0 := @parameter0: java.lang.Class;

        r5 := @parameter1: java.lang.Object[];

        if null != r5 goto label1;

        r5 = <org.apache.commons.lang.ArrayUtils: java.lang.Object[] EMPTY_OBJECT_ARRAY>;

     label1:
        $i0 = lengthof r5;

        $r4 = newarray (java.lang.Class)[$i0];

        i1 = 0;

     label2:
        $i2 = lengthof r5;

        if i1 >= $i2 goto label3;

        $r2 = r5[i1];

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4[i1] = $r3;

        i1 = i1 + 1;

        goto label2;

     label3:
        $r1 = staticinvoke <org.apache.commons.lang.reflect.ConstructorUtils: java.lang.Object invokeConstructor(java.lang.Class,java.lang.Object[],java.lang.Class[])>(r0, r5, $r4);

        return $r1;
    }

    public static java.lang.Object invokeConstructor(java.lang.Class, java.lang.Object[], java.lang.Class[]) throws java.lang.NoSuchMethodException, java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException, java.lang.InstantiationException
    {
        java.lang.Object[] r9;
        java.lang.NoSuchMethodException $r3;
        java.lang.Class[] r10;
        java.lang.reflect.Constructor $r1;
        java.lang.StringBuffer $r4, $r5, $r7;
        java.lang.Class r0;
        java.lang.Object $r2;
        java.lang.String $r6, $r8;

        r0 := @parameter0: java.lang.Class;

        r9 := @parameter1: java.lang.Object[];

        r10 := @parameter2: java.lang.Class[];

        if r10 != null goto label1;

        r10 = <org.apache.commons.lang.ArrayUtils: java.lang.Class[] EMPTY_CLASS_ARRAY>;

     label1:
        if r9 != null goto label2;

        r9 = <org.apache.commons.lang.ArrayUtils: java.lang.Object[] EMPTY_OBJECT_ARRAY>;

     label2:
        $r1 = staticinvoke <org.apache.commons.lang.reflect.ConstructorUtils: java.lang.reflect.Constructor getMatchingAccessibleConstructor(java.lang.Class,java.lang.Class[])>(r0, r10);

        if null != $r1 goto label3;

        $r3 = new java.lang.NoSuchMethodException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("No such accessible constructor on object: ");

        $r6 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.NoSuchMethodException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label3:
        $r2 = virtualinvoke $r1.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(r9);

        return $r2;
    }

    public static java.lang.Object invokeExactConstructor(java.lang.Class, java.lang.Object) throws java.lang.NoSuchMethodException, java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException, java.lang.InstantiationException
    {
        java.lang.Object[] $r1;
        java.lang.Class r0;
        java.lang.Object r2, $r3;

        r0 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Object;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = r2;

        $r3 = staticinvoke <org.apache.commons.lang.reflect.ConstructorUtils: java.lang.Object invokeExactConstructor(java.lang.Class,java.lang.Object[])>(r0, $r1);

        return $r3;
    }

    public static java.lang.Object invokeExactConstructor(java.lang.Class, java.lang.Object[]) throws java.lang.NoSuchMethodException, java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException, java.lang.InstantiationException
    {
        java.lang.Object[] r5;
        java.lang.Class[] $r4;
        int $i0, i1;
        java.lang.Class r0, $r3;
        java.lang.Object $r1, $r2;

        r0 := @parameter0: java.lang.Class;

        r5 := @parameter1: java.lang.Object[];

        if null != r5 goto label1;

        r5 = <org.apache.commons.lang.ArrayUtils: java.lang.Object[] EMPTY_OBJECT_ARRAY>;

     label1:
        $i0 = lengthof r5;

        $r4 = newarray (java.lang.Class)[$i0];

        i1 = 0;

     label2:
        if i1 >= $i0 goto label3;

        $r2 = r5[i1];

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4[i1] = $r3;

        i1 = i1 + 1;

        goto label2;

     label3:
        $r1 = staticinvoke <org.apache.commons.lang.reflect.ConstructorUtils: java.lang.Object invokeExactConstructor(java.lang.Class,java.lang.Object[],java.lang.Class[])>(r0, r5, $r4);

        return $r1;
    }

    public static java.lang.Object invokeExactConstructor(java.lang.Class, java.lang.Object[], java.lang.Class[]) throws java.lang.NoSuchMethodException, java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException, java.lang.InstantiationException
    {
        java.lang.Object[] r9;
        java.lang.NoSuchMethodException $r3;
        java.lang.Class[] r10;
        java.lang.reflect.Constructor $r1;
        java.lang.StringBuffer $r4, $r5, $r7;
        java.lang.Class r0;
        java.lang.Object $r2;
        java.lang.String $r6, $r8;

        r0 := @parameter0: java.lang.Class;

        r9 := @parameter1: java.lang.Object[];

        r10 := @parameter2: java.lang.Class[];

        if r9 != null goto label1;

        r9 = <org.apache.commons.lang.ArrayUtils: java.lang.Object[] EMPTY_OBJECT_ARRAY>;

     label1:
        if r10 != null goto label2;

        r10 = <org.apache.commons.lang.ArrayUtils: java.lang.Class[] EMPTY_CLASS_ARRAY>;

     label2:
        $r1 = staticinvoke <org.apache.commons.lang.reflect.ConstructorUtils: java.lang.reflect.Constructor getAccessibleConstructor(java.lang.Class,java.lang.Class[])>(r0, r10);

        if null != $r1 goto label3;

        $r3 = new java.lang.NoSuchMethodException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("No such accessible constructor on object: ");

        $r6 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.NoSuchMethodException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label3:
        $r2 = virtualinvoke $r1.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(r9);

        return $r2;
    }

    public static java.lang.reflect.Constructor getAccessibleConstructor(java.lang.Class, java.lang.Class)
    {
        java.lang.Class[] $r1;
        java.lang.Class r0, r2;
        java.lang.reflect.Constructor $r3;

        r0 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        $r1 = newarray (java.lang.Class)[1];

        $r1[0] = r2;

        $r3 = staticinvoke <org.apache.commons.lang.reflect.ConstructorUtils: java.lang.reflect.Constructor getAccessibleConstructor(java.lang.Class,java.lang.Class[])>(r0, $r1);

        return $r3;
    }

    public static java.lang.reflect.Constructor getAccessibleConstructor(java.lang.Class, java.lang.Class[])
    {
        java.lang.NoSuchMethodException $r4;
        java.lang.Class[] r1;
        java.lang.Class r0;
        java.lang.reflect.Constructor $r2, $r3;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Class[];

     label1:
        $r2 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>(r1);

        $r3 = staticinvoke <org.apache.commons.lang.reflect.ConstructorUtils: java.lang.reflect.Constructor getAccessibleConstructor(java.lang.reflect.Constructor)>($r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        return null;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }

    public static java.lang.reflect.Constructor getAccessibleConstructor(java.lang.reflect.Constructor)
    {
        int $i0;
        java.lang.Class $r1;
        java.lang.reflect.Constructor r0, $r2;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.reflect.Constructor;

        $z0 = staticinvoke <org.apache.commons.lang.reflect.MemberUtils: boolean isAccessible(java.lang.reflect.Member)>(r0);

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>();

        $i0 = virtualinvoke $r1.<java.lang.Class: int getModifiers()>();

        $z1 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i0);

        if $z1 == 0 goto label1;

        $r2 = r0;

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public static java.lang.reflect.Constructor getMatchingAccessibleConstructor(java.lang.Class, java.lang.Class[])
    {
        java.lang.NoSuchMethodException $r3;
        java.lang.reflect.Constructor $r2, $r5, $r7, $r8, r11;
        java.lang.reflect.Constructor[] $r4;
        int $i0, $i1, i2;
        boolean $z0;
        java.lang.Class[] r1, $r6, $r9, $r10;
        java.lang.Class r0;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Class[];

     label1:
        $r2 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>(r1);

        staticinvoke <org.apache.commons.lang.reflect.MemberUtils: void setAccessibleWorkaround(java.lang.reflect.AccessibleObject)>($r2);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        r11 = null;

        $r4 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>();

        i2 = 0;

     label4:
        $i0 = lengthof $r4;

        if i2 >= $i0 goto label7;

        $r5 = $r4[i2];

        $r6 = virtualinvoke $r5.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        $z0 = staticinvoke <org.apache.commons.lang.ClassUtils: boolean isAssignable(java.lang.Class[],java.lang.Class[],boolean)>(r1, $r6, 1);

        if $z0 == 0 goto label6;

        $r7 = $r4[i2];

        $r8 = staticinvoke <org.apache.commons.lang.reflect.ConstructorUtils: java.lang.reflect.Constructor getAccessibleConstructor(java.lang.reflect.Constructor)>($r7);

        if $r8 == null goto label6;

        staticinvoke <org.apache.commons.lang.reflect.MemberUtils: void setAccessibleWorkaround(java.lang.reflect.AccessibleObject)>($r8);

        if r11 == null goto label5;

        $r9 = virtualinvoke $r8.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        $r10 = virtualinvoke r11.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        $i1 = staticinvoke <org.apache.commons.lang.reflect.MemberUtils: int compareParameterTypes(java.lang.Class[],java.lang.Class[],java.lang.Class[])>($r9, $r10, r1);

        if $i1 >= 0 goto label6;

     label5:
        r11 = $r8;

     label6:
        i2 = i2 + 1;

        goto label4;

     label7:
        return r11;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }
}
