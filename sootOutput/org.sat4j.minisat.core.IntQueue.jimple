public final class org.sat4j.minisat.core.IntQueue extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private static final int INITIAL_QUEUE_CAPACITY;
    private int[] myarray;
    private int size;
    private int first;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        org.sat4j.minisat.core.IntQueue r0;
        int[] $r1;

        r0 := @this: org.sat4j.minisat.core.IntQueue;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (int)[10];

        r0.<org.sat4j.minisat.core.IntQueue: int[] myarray> = $r1;

        r0.<org.sat4j.minisat.core.IntQueue: int size> = 0;

        r0.<org.sat4j.minisat.core.IntQueue: int first> = 0;

        return;
    }

    public void insert(int)
    {
        java.lang.AssertionError $r3;
        org.sat4j.minisat.core.IntQueue r0;
        int[] $r1, $r2;
        int $i0, $i1, i2, $i3, $i4;
        boolean $z0;

        r0 := @this: org.sat4j.minisat.core.IntQueue;

        i2 := @parameter0: int;

        $z0 = <org.sat4j.minisat.core.IntQueue: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i4 = r0.<org.sat4j.minisat.core.IntQueue: int size>;

        $r2 = r0.<org.sat4j.minisat.core.IntQueue: int[] myarray>;

        $i3 = lengthof $r2;

        if $i4 < $i3 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r1 = r0.<org.sat4j.minisat.core.IntQueue: int[] myarray>;

        $i0 = r0.<org.sat4j.minisat.core.IntQueue: int size>;

        $i1 = $i0 + 1;

        r0.<org.sat4j.minisat.core.IntQueue: int size> = $i1;

        $r1[$i0] = i2;

        return;
    }

    public int dequeue()
    {
        java.lang.AssertionError $r2;
        org.sat4j.minisat.core.IntQueue r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;

        r0 := @this: org.sat4j.minisat.core.IntQueue;

        $z0 = <org.sat4j.minisat.core.IntQueue: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i4 = r0.<org.sat4j.minisat.core.IntQueue: int first>;

        $i3 = r0.<org.sat4j.minisat.core.IntQueue: int size>;

        if $i4 < $i3 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $r1 = r0.<org.sat4j.minisat.core.IntQueue: int[] myarray>;

        $i0 = r0.<org.sat4j.minisat.core.IntQueue: int first>;

        $i1 = $i0 + 1;

        r0.<org.sat4j.minisat.core.IntQueue: int first> = $i1;

        $i2 = $r1[$i0];

        return $i2;
    }

    public void clear()
    {
        org.sat4j.minisat.core.IntQueue r0;

        r0 := @this: org.sat4j.minisat.core.IntQueue;

        r0.<org.sat4j.minisat.core.IntQueue: int size> = 0;

        r0.<org.sat4j.minisat.core.IntQueue: int first> = 0;

        return;
    }

    public int size()
    {
        org.sat4j.minisat.core.IntQueue r0;
        int $i0, $i1, $i2;

        r0 := @this: org.sat4j.minisat.core.IntQueue;

        $i1 = r0.<org.sat4j.minisat.core.IntQueue: int size>;

        $i0 = r0.<org.sat4j.minisat.core.IntQueue: int first>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    public void ensure(int)
    {
        org.sat4j.minisat.core.IntQueue r0;
        int[] $r1, r2, $r3;
        int i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.sat4j.minisat.core.IntQueue;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.minisat.core.IntQueue: int[] myarray>;

        $i1 = lengthof $r1;

        if i0 < $i1 goto label1;

        $i2 = r0.<org.sat4j.minisat.core.IntQueue: int size>;

        $i3 = $i2 * 2;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(i0, $i3);

        r2 = newarray (int)[$i4];

        $r3 = r0.<org.sat4j.minisat.core.IntQueue: int[] myarray>;

        $i5 = r0.<org.sat4j.minisat.core.IntQueue: int size>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r2, 0, $i5);

        r0.<org.sat4j.minisat.core.IntQueue: int[] myarray> = r2;

     label1:
        return;
    }

    public java.lang.String toString()
    {
        org.sat4j.minisat.core.IntQueue r1;
        int[] $r3, $r4;
        java.lang.StringBuffer $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        java.lang.String $r2;

        r1 := @this: org.sat4j.minisat.core.IntQueue;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">");

        i8 = r1.<org.sat4j.minisat.core.IntQueue: int first>;

     label1:
        $i0 = r1.<org.sat4j.minisat.core.IntQueue: int size>;

        $i1 = $i0 - 1;

        if i8 >= $i1 goto label2;

        $r4 = r1.<org.sat4j.minisat.core.IntQueue: int[] myarray>;

        $i7 = $r4[i8];

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i7);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        i8 = i8 + 1;

        goto label1;

     label2:
        $i3 = r1.<org.sat4j.minisat.core.IntQueue: int first>;

        $i2 = r1.<org.sat4j.minisat.core.IntQueue: int size>;

        if $i3 == $i2 goto label3;

        $r3 = r1.<org.sat4j.minisat.core.IntQueue: int[] myarray>;

        $i4 = r1.<org.sat4j.minisat.core.IntQueue: int size>;

        $i5 = $i4 - 1;

        $i6 = $r3[$i5];

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i6);

     label3:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<");

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.sat4j.minisat.core.IntQueue: int INITIAL_QUEUE_CAPACITY> = 10;

        <org.sat4j.minisat.core.IntQueue: long serialVersionUID> = 1L;

        $r0 = class "Lorg/sat4j/minisat/core/IntQueue;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.sat4j.minisat.core.IntQueue: boolean $assertionsDisabled> = $z1;

        return;
    }
}
