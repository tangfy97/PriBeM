public class org.apache.lucene.index.FilterAtomicReader$FilterTerms extends org.apache.lucene.index.Terms
{
    protected final org.apache.lucene.index.Terms in;

    public void <init>(org.apache.lucene.index.Terms)
    {
        org.apache.lucene.index.Terms r1;
        org.apache.lucene.index.FilterAtomicReader$FilterTerms r0;

        r0 := @this: org.apache.lucene.index.FilterAtomicReader$FilterTerms;

        r1 := @parameter0: org.apache.lucene.index.Terms;

        specialinvoke r0.<org.apache.lucene.index.Terms: void <init>()>();

        r0.<org.apache.lucene.index.FilterAtomicReader$FilterTerms: org.apache.lucene.index.Terms in> = r1;

        return;
    }

    public org.apache.lucene.index.TermsEnum iterator(org.apache.lucene.index.TermsEnum) throws java.io.IOException
    {
        org.apache.lucene.index.Terms $r2;
        org.apache.lucene.index.TermsEnum r1, $r3;
        org.apache.lucene.index.FilterAtomicReader$FilterTerms r0;

        r0 := @this: org.apache.lucene.index.FilterAtomicReader$FilterTerms;

        r1 := @parameter0: org.apache.lucene.index.TermsEnum;

        $r2 = r0.<org.apache.lucene.index.FilterAtomicReader$FilterTerms: org.apache.lucene.index.Terms in>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.Terms: org.apache.lucene.index.TermsEnum iterator(org.apache.lucene.index.TermsEnum)>(r1);

        return $r3;
    }

    public java.util.Comparator getComparator()
    {
        org.apache.lucene.index.Terms $r1;
        java.util.Comparator $r2;
        org.apache.lucene.index.FilterAtomicReader$FilterTerms r0;

        r0 := @this: org.apache.lucene.index.FilterAtomicReader$FilterTerms;

        $r1 = r0.<org.apache.lucene.index.FilterAtomicReader$FilterTerms: org.apache.lucene.index.Terms in>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.index.Terms: java.util.Comparator getComparator()>();

        return $r2;
    }

    public long size() throws java.io.IOException
    {
        long $l0;
        org.apache.lucene.index.Terms $r1;
        org.apache.lucene.index.FilterAtomicReader$FilterTerms r0;

        r0 := @this: org.apache.lucene.index.FilterAtomicReader$FilterTerms;

        $r1 = r0.<org.apache.lucene.index.FilterAtomicReader$FilterTerms: org.apache.lucene.index.Terms in>;

        $l0 = virtualinvoke $r1.<org.apache.lucene.index.Terms: long size()>();

        return $l0;
    }

    public long getSumTotalTermFreq() throws java.io.IOException
    {
        long $l0;
        org.apache.lucene.index.Terms $r1;
        org.apache.lucene.index.FilterAtomicReader$FilterTerms r0;

        r0 := @this: org.apache.lucene.index.FilterAtomicReader$FilterTerms;

        $r1 = r0.<org.apache.lucene.index.FilterAtomicReader$FilterTerms: org.apache.lucene.index.Terms in>;

        $l0 = virtualinvoke $r1.<org.apache.lucene.index.Terms: long getSumTotalTermFreq()>();

        return $l0;
    }

    public long getSumDocFreq() throws java.io.IOException
    {
        long $l0;
        org.apache.lucene.index.Terms $r1;
        org.apache.lucene.index.FilterAtomicReader$FilterTerms r0;

        r0 := @this: org.apache.lucene.index.FilterAtomicReader$FilterTerms;

        $r1 = r0.<org.apache.lucene.index.FilterAtomicReader$FilterTerms: org.apache.lucene.index.Terms in>;

        $l0 = virtualinvoke $r1.<org.apache.lucene.index.Terms: long getSumDocFreq()>();

        return $l0;
    }

    public int getDocCount() throws java.io.IOException
    {
        int $i0;
        org.apache.lucene.index.Terms $r1;
        org.apache.lucene.index.FilterAtomicReader$FilterTerms r0;

        r0 := @this: org.apache.lucene.index.FilterAtomicReader$FilterTerms;

        $r1 = r0.<org.apache.lucene.index.FilterAtomicReader$FilterTerms: org.apache.lucene.index.Terms in>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.index.Terms: int getDocCount()>();

        return $i0;
    }

    public boolean hasOffsets()
    {
        org.apache.lucene.index.Terms $r1;
        org.apache.lucene.index.FilterAtomicReader$FilterTerms r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.FilterAtomicReader$FilterTerms;

        $r1 = r0.<org.apache.lucene.index.FilterAtomicReader$FilterTerms: org.apache.lucene.index.Terms in>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.index.Terms: boolean hasOffsets()>();

        return $z0;
    }

    public boolean hasPositions()
    {
        org.apache.lucene.index.Terms $r1;
        org.apache.lucene.index.FilterAtomicReader$FilterTerms r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.FilterAtomicReader$FilterTerms;

        $r1 = r0.<org.apache.lucene.index.FilterAtomicReader$FilterTerms: org.apache.lucene.index.Terms in>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.index.Terms: boolean hasPositions()>();

        return $z0;
    }

    public boolean hasPayloads()
    {
        org.apache.lucene.index.Terms $r1;
        org.apache.lucene.index.FilterAtomicReader$FilterTerms r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.FilterAtomicReader$FilterTerms;

        $r1 = r0.<org.apache.lucene.index.FilterAtomicReader$FilterTerms: org.apache.lucene.index.Terms in>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.index.Terms: boolean hasPayloads()>();

        return $z0;
    }
}
