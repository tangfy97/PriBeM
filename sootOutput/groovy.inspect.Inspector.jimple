public class groovy.inspect.Inspector extends java.lang.Object
{
    protected java.lang.Object objectUnderInspection;
    public static final int CLASS_PACKAGE_IDX;
    public static final int CLASS_CLASS_IDX;
    public static final int CLASS_INTERFACE_IDX;
    public static final int CLASS_SUPERCLASS_IDX;
    public static final int CLASS_OTHER_IDX;
    public static final int MEMBER_ORIGIN_IDX;
    public static final int MEMBER_MODIFIER_IDX;
    public static final int MEMBER_DECLARER_IDX;
    public static final int MEMBER_TYPE_IDX;
    public static final int MEMBER_NAME_IDX;
    public static final int MEMBER_PARAMS_IDX;
    public static final int MEMBER_VALUE_IDX;
    public static final int MEMBER_EXCEPTIONS_IDX;
    public static final java.lang.String NOT_APPLICABLE;
    public static final java.lang.String GROOVY;
    public static final java.lang.String JAVA;
    static java.lang.Class class$groovy$lang$GroovyObject;

    public void <init>(java.lang.Object)
    {
        groovy.inspect.Inspector r0;
        java.lang.Object r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: groovy.inspect.Inspector;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if null != r1 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("argument must not be null");

        throw $r2;

     label1:
        r0.<groovy.inspect.Inspector: java.lang.Object objectUnderInspection> = r1;

        return;
    }

    public java.lang.String[] getClassProps()
    {
        groovy.inspect.Inspector r1;
        boolean $z0, $z1, $z2;
        java.lang.String[] r0;
        java.lang.StringBuffer $r4, $r5, $r6, $r10, $r11, $r12, $r15, $r19, $r20, $r24, $r26, $r27, $r29, $r30, $r32, $r33, $r34, $r36, $r38, $r41, $r42;
        int $i0, i1, $i2;
        java.lang.String $r7, $r9, $r14, $r16, $r23, $r25, $r35, $r37, $r40, $r43, $r44;
        java.lang.Package $r3;
        java.lang.Class[] $r18;
        java.lang.Class $r2, $r8, $r13, $r17, $r21, $r22, $r28, $r31, $r39;

        r1 := @this: groovy.inspect.Inspector;

        r0 = newarray (java.lang.String)[5];

        $r2 = virtualinvoke r1.<groovy.inspect.Inspector: java.lang.Class getClassUnderInspection()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Package getPackage()>();

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("package ");

        if $r3 != null goto label1;

        $r44 = "n/a";

        goto label2;

     label1:
        $r44 = virtualinvoke $r3.<java.lang.Package: java.lang.String getName()>();

     label2:
        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r44);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        r0[0] = $r7;

        $r8 = virtualinvoke r1.<groovy.inspect.Inspector: java.lang.Class getClassUnderInspection()>();

        $i0 = virtualinvoke $r8.<java.lang.Class: int getModifiers()>();

        $r9 = staticinvoke <java.lang.reflect.Modifier: java.lang.String toString(int)>($i0);

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" class ");

        $r13 = virtualinvoke r1.<groovy.inspect.Inspector: java.lang.Class getClassUnderInspection()>();

        $r14 = staticinvoke <groovy.inspect.Inspector: java.lang.String shortName(java.lang.Class)>($r13);

        $r15 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        r0[1] = $r16;

        r0[2] = "implements ";

        $r17 = virtualinvoke r1.<groovy.inspect.Inspector: java.lang.Class getClassUnderInspection()>();

        $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        i1 = 0;

     label3:
        $i2 = lengthof $r18;

        if i1 >= $i2 goto label4;

        $r36 = new java.lang.StringBuffer;

        specialinvoke $r36.<java.lang.StringBuffer: void <init>()>();

        $r37 = r0[2];

        $r38 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r37);

        $r39 = $r18[i1];

        $r40 = staticinvoke <groovy.inspect.Inspector: java.lang.String shortName(java.lang.Class)>($r39);

        $r41 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.String toString()>();

        r0[2] = $r43;

        i1 = i1 + 1;

        goto label3;

     label4:
        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("extends ");

        $r21 = virtualinvoke r1.<groovy.inspect.Inspector: java.lang.Class getClassUnderInspection()>();

        $r22 = virtualinvoke $r21.<java.lang.Class: java.lang.Class getSuperclass()>();

        $r23 = staticinvoke <groovy.inspect.Inspector: java.lang.String shortName(java.lang.Class)>($r22);

        $r24 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        r0[3] = $r25;

        $r26 = new java.lang.StringBuffer;

        specialinvoke $r26.<java.lang.StringBuffer: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("is Primitive: ");

        $r28 = virtualinvoke r1.<groovy.inspect.Inspector: java.lang.Class getClassUnderInspection()>();

        $z0 = virtualinvoke $r28.<java.lang.Class: boolean isPrimitive()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", is Array: ");

        $r31 = virtualinvoke r1.<groovy.inspect.Inspector: java.lang.Class getClassUnderInspection()>();

        $z1 = virtualinvoke $r31.<java.lang.Class: boolean isArray()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z1);

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", is Groovy: ");

        $z2 = virtualinvoke r1.<groovy.inspect.Inspector: boolean isGroovy()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z2);

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.String toString()>();

        r0[4] = $r35;

        return r0;
    }

    public boolean isGroovy()
    {
        groovy.inspect.Inspector r1;
        java.lang.Class $r0, $r2, $r3;
        boolean $z0;

        r1 := @this: groovy.inspect.Inspector;

        $r0 = <groovy.inspect.Inspector: java.lang.Class class$groovy$lang$GroovyObject>;

        if $r0 != null goto label1;

        $r3 = staticinvoke <groovy.inspect.Inspector: java.lang.Class class$(java.lang.String)>("groovy.lang.GroovyObject");

        <groovy.inspect.Inspector: java.lang.Class class$groovy$lang$GroovyObject> = $r3;

        goto label2;

     label1:
        $r3 = <groovy.inspect.Inspector: java.lang.Class class$groovy$lang$GroovyObject>;

     label2:
        $r2 = virtualinvoke r1.<groovy.inspect.Inspector: java.lang.Class getClassUnderInspection()>();

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r2);

        return $z0;
    }

    public java.lang.Object getObject()
    {
        groovy.inspect.Inspector r0;
        java.lang.Object $r1;

        r0 := @this: groovy.inspect.Inspector;

        $r1 = r0.<groovy.inspect.Inspector: java.lang.Object objectUnderInspection>;

        return $r1;
    }

    public java.lang.Object[] getMethods()
    {
        java.lang.Object[] r5;
        groovy.inspect.Inspector r0;
        java.lang.String[] $r7, $r8;
        java.lang.reflect.Constructor r6;
        java.lang.reflect.Method[] $r2;
        java.lang.reflect.Constructor[] $r4;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        java.lang.reflect.Method r9;
        java.lang.Class $r1, $r3;

        r0 := @this: groovy.inspect.Inspector;

        $r1 = virtualinvoke r0.<groovy.inspect.Inspector: java.lang.Class getClassUnderInspection()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        $r3 = virtualinvoke r0.<groovy.inspect.Inspector: java.lang.Class getClassUnderInspection()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>();

        $i1 = lengthof $r2;

        $i0 = lengthof $r4;

        $i2 = $i1 + $i0;

        r5 = newarray (java.lang.Object)[$i2];

        i5 = 0;

     label1:
        $i3 = lengthof $r2;

        if i5 >= $i3 goto label2;

        r9 = $r2[i5];

        $r8 = virtualinvoke r0.<groovy.inspect.Inspector: java.lang.String[] methodInfo(java.lang.reflect.Method)>(r9);

        r5[i5] = $r8;

        i5 = i5 + 1;

        goto label1;

     label2:
        i6 = 0;

     label3:
        $i4 = lengthof $r4;

        if i6 >= $i4 goto label4;

        r6 = $r4[i6];

        $r7 = virtualinvoke r0.<groovy.inspect.Inspector: java.lang.String[] methodInfo(java.lang.reflect.Constructor)>(r6);

        r5[i5] = $r7;

        i6 = i6 + 1;

        i5 = i5 + 1;

        goto label3;

     label4:
        return r5;
    }

    public java.lang.Object[] getMetaMethods()
    {
        groovy.lang.MetaClass $r2;
        java.lang.Object[] r4;
        java.util.Iterator $r5;
        groovy.inspect.Inspector r0;
        java.lang.String[] $r8;
        java.util.List $r3;
        groovy.lang.MetaMethod r7;
        int $i0, i1;
        java.lang.Object $r1, $r6;
        boolean $z0;

        r0 := @this: groovy.inspect.Inspector;

        $r1 = r0.<groovy.inspect.Inspector: java.lang.Object objectUnderInspection>;

        $r2 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: groovy.lang.MetaClass getMetaClass(java.lang.Object)>($r1);

        $r3 = interfaceinvoke $r2.<groovy.lang.MetaClass: java.util.List getMetaMethods()>();

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        r4 = newarray (java.lang.Object)[$i0];

        i1 = 0;

        $r5 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (groovy.lang.MetaMethod) $r6;

        $r8 = virtualinvoke r0.<groovy.inspect.Inspector: java.lang.String[] methodInfo(groovy.lang.MetaMethod)>(r7);

        r4[i1] = $r8;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r4;
    }

    public java.lang.Object[] getPublicFields()
    {
        java.lang.Object[] r3;
        groovy.inspect.Inspector r0;
        java.lang.String[] $r5;
        java.lang.reflect.Field r4;
        java.lang.reflect.Field[] $r2;
        int $i0, $i1, i2;
        java.lang.Class $r1;

        r0 := @this: groovy.inspect.Inspector;

        $r1 = virtualinvoke r0.<groovy.inspect.Inspector: java.lang.Class getClassUnderInspection()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field[] getFields()>();

        $i0 = lengthof $r2;

        r3 = newarray (java.lang.Object)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof $r2;

        if i2 >= $i1 goto label2;

        r4 = $r2[i2];

        $r5 = virtualinvoke r0.<groovy.inspect.Inspector: java.lang.String[] fieldInfo(java.lang.reflect.Field)>(r4);

        r3[i2] = $r5;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r3;
    }

    public java.lang.Object[] getPropertyInfo()
    {
        java.lang.Object[] r3;
        java.util.Iterator $r4;
        groovy.inspect.Inspector r0;
        java.lang.String[] $r7;
        java.util.List $r2;
        groovy.lang.PropertyValue r6;
        int $i0, i1;
        java.lang.Object $r1, $r5;
        boolean $z0;

        r0 := @this: groovy.inspect.Inspector;

        $r1 = r0.<groovy.inspect.Inspector: java.lang.Object objectUnderInspection>;

        $r2 = staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: java.util.List getMetaPropertyValues(java.lang.Object)>($r1);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        r3 = newarray (java.lang.Object)[$i0];

        i1 = 0;

        $r4 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (groovy.lang.PropertyValue) $r5;

        $r7 = virtualinvoke r0.<groovy.inspect.Inspector: java.lang.String[] fieldInfo(groovy.lang.PropertyValue)>(r6);

        r3[i1] = $r7;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r3;
    }

    protected java.lang.String[] fieldInfo(java.lang.reflect.Field)
    {
        java.lang.IllegalAccessException $r13;
        groovy.inspect.Inspector r8;
        java.lang.String[] r0, $r12;
        java.lang.reflect.Field r1;
        int $i0;
        java.lang.Class $r3, $r5;
        java.lang.Object $r9, $r10;
        java.lang.String $r2, $r4, $r6, $r7, $r11;

        r8 := @this: groovy.inspect.Inspector;

        r1 := @parameter0: java.lang.reflect.Field;

        r0 = newarray (java.lang.String)[6];

        r0[0] = "JAVA";

        $i0 = virtualinvoke r1.<java.lang.reflect.Field: int getModifiers()>();

        $r2 = staticinvoke <java.lang.reflect.Modifier: java.lang.String toString(int)>($i0);

        r0[1] = $r2;

        $r3 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>();

        $r4 = staticinvoke <groovy.inspect.Inspector: java.lang.String shortName(java.lang.Class)>($r3);

        r0[2] = $r4;

        $r5 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r6 = staticinvoke <groovy.inspect.Inspector: java.lang.String shortName(java.lang.Class)>($r5);

        r0[3] = $r6;

        $r7 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.String getName()>();

        r0[4] = $r7;

     label1:
        $r9 = r8.<groovy.inspect.Inspector: java.lang.Object objectUnderInspection>;

        $r10 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r9);

        $r11 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String inspect(java.lang.Object)>($r10);

        r0[5] = $r11;

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

        r0[5] = "n/a";

     label4:
        $r12 = virtualinvoke r8.<groovy.inspect.Inspector: java.lang.String[] withoutNulls(java.lang.String[])>(r0);

        return $r12;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
    }

    protected java.lang.String[] fieldInfo(groovy.lang.PropertyValue)
    {
        groovy.inspect.Inspector r7;
        java.lang.String[] r0, $r8;
        java.lang.Exception $r9;
        groovy.lang.PropertyValue r1;
        java.lang.Class $r2;
        java.lang.Object $r5;
        java.lang.String $r3, $r4, $r6;

        r7 := @this: groovy.inspect.Inspector;

        r1 := @parameter0: groovy.lang.PropertyValue;

        r0 = newarray (java.lang.String)[6];

        r0[0] = "GROOVY";

        r0[1] = "public";

        r0[2] = "n/a";

        $r2 = virtualinvoke r1.<groovy.lang.PropertyValue: java.lang.Class getType()>();

        $r3 = staticinvoke <groovy.inspect.Inspector: java.lang.String shortName(java.lang.Class)>($r2);

        r0[3] = $r3;

        $r4 = virtualinvoke r1.<groovy.lang.PropertyValue: java.lang.String getName()>();

        r0[4] = $r4;

     label1:
        $r5 = virtualinvoke r1.<groovy.lang.PropertyValue: java.lang.Object getValue()>();

        $r6 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String inspect(java.lang.Object)>($r5);

        r0[5] = $r6;

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        r0[5] = "n/a";

     label4:
        $r8 = virtualinvoke r7.<groovy.inspect.Inspector: java.lang.String[] withoutNulls(java.lang.String[])>(r0);

        return $r8;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected java.lang.Class getClassUnderInspection()
    {
        groovy.inspect.Inspector r0;
        java.lang.Object $r1;
        java.lang.Class $r2;

        r0 := @this: groovy.inspect.Inspector;

        $r1 = r0.<groovy.inspect.Inspector: java.lang.Object objectUnderInspection>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        return $r2;
    }

    public static java.lang.String shortName(java.lang.Class)
    {
        java.lang.Package $r2, $r3;
        int $i0, i1;
        java.lang.Class r0;
        java.lang.String $r1, $r4, $r5;

        r0 := @parameter0: java.lang.Class;

        if null != r0 goto label1;

        return "n/a";

     label1:
        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = virtualinvoke r0.<java.lang.Class: java.lang.Package getPackage()>();

        if null != $r2 goto label2;

        return $r1;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Class: java.lang.Package getPackage()>();

        $r4 = virtualinvoke $r3.<java.lang.Package: java.lang.String getName()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        i1 = $i0;

        if $i0 <= 0 goto label3;

        i1 = $i0 + 1;

     label3:
        $r5 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(i1);

        return $r5;
    }

    protected java.lang.String[] methodInfo(java.lang.reflect.Method)
    {
        groovy.inspect.Inspector r13;
        java.lang.String[] r0, $r14;
        java.lang.StringBuffer $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8;
        java.lang.String $r3, $r4, $r5, $r7, $r10, $r12, $r16, $r18;
        java.lang.reflect.Method r1;
        java.lang.Class[] $r8, $r11;
        java.lang.Class $r2, $r6, $r15, $r17;

        r13 := @this: groovy.inspect.Inspector;

        r1 := @parameter0: java.lang.reflect.Method;

        r0 = newarray (java.lang.String)[7];

        $i0 = virtualinvoke r1.<java.lang.reflect.Method: int getModifiers()>();

        r0[0] = "JAVA";

        $r2 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $r3 = staticinvoke <groovy.inspect.Inspector: java.lang.String shortName(java.lang.Class)>($r2);

        r0[2] = $r3;

        $r4 = staticinvoke <java.lang.reflect.Modifier: java.lang.String toString(int)>($i0);

        r0[1] = $r4;

        $r5 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.String getName()>();

        r0[4] = $r5;

        $r6 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r7 = staticinvoke <groovy.inspect.Inspector: java.lang.String shortName(java.lang.Class)>($r6);

        r0[3] = $r7;

        $r8 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        i7 = 0;

     label1:
        $i1 = lengthof $r8;

        if i7 >= $i1 goto label3;

        $r17 = $r8[i7];

        $r18 = staticinvoke <groovy.inspect.Inspector: java.lang.String shortName(java.lang.Class)>($r17);

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $i5 = lengthof $r8;

        $i6 = $i5 - 1;

        if i7 >= $i6 goto label2;

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label2:
        i7 = i7 + 1;

        goto label1;

     label3:
        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        r0[5] = $r10;

        virtualinvoke $r9.<java.lang.StringBuffer: void setLength(int)>(0);

        $r11 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()>();

        i8 = 0;

     label4:
        $i2 = lengthof $r11;

        if i8 >= $i2 goto label6;

        $r15 = $r11[i8];

        $r16 = staticinvoke <groovy.inspect.Inspector: java.lang.String shortName(java.lang.Class)>($r15);

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $i3 = lengthof $r11;

        $i4 = $i3 - 1;

        if i8 >= $i4 goto label5;

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label5:
        i8 = i8 + 1;

        goto label4;

     label6:
        $r12 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        r0[6] = $r12;

        $r14 = virtualinvoke r13.<groovy.inspect.Inspector: java.lang.String[] withoutNulls(java.lang.String[])>(r0);

        return $r14;
    }

    protected java.lang.String[] methodInfo(java.lang.reflect.Constructor)
    {
        groovy.inspect.Inspector r13;
        java.lang.String[] r0, $r14;
        java.lang.reflect.Constructor r1;
        java.lang.StringBuffer $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8;
        java.lang.String $r2, $r4, $r6, $r7, $r10, $r12, $r16, $r18;
        java.lang.Class[] $r8, $r11;
        java.lang.Class $r3, $r5, $r15, $r17;

        r13 := @this: groovy.inspect.Inspector;

        r1 := @parameter0: java.lang.reflect.Constructor;

        r0 = newarray (java.lang.String)[7];

        $i0 = virtualinvoke r1.<java.lang.reflect.Constructor: int getModifiers()>();

        r0[0] = "JAVA";

        $r2 = staticinvoke <java.lang.reflect.Modifier: java.lang.String toString(int)>($i0);

        r0[1] = $r2;

        $r3 = virtualinvoke r1.<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>();

        $r4 = staticinvoke <groovy.inspect.Inspector: java.lang.String shortName(java.lang.Class)>($r3);

        r0[2] = $r4;

        $r5 = virtualinvoke r1.<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>();

        $r6 = staticinvoke <groovy.inspect.Inspector: java.lang.String shortName(java.lang.Class)>($r5);

        r0[3] = $r6;

        $r7 = virtualinvoke r1.<java.lang.reflect.Constructor: java.lang.String getName()>();

        r0[4] = $r7;

        $r8 = virtualinvoke r1.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        i7 = 0;

     label1:
        $i1 = lengthof $r8;

        if i7 >= $i1 goto label3;

        $r17 = $r8[i7];

        $r18 = staticinvoke <groovy.inspect.Inspector: java.lang.String shortName(java.lang.Class)>($r17);

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $i5 = lengthof $r8;

        $i6 = $i5 - 1;

        if i7 >= $i6 goto label2;

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label2:
        i7 = i7 + 1;

        goto label1;

     label3:
        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        r0[5] = $r10;

        virtualinvoke $r9.<java.lang.StringBuffer: void setLength(int)>(0);

        $r11 = virtualinvoke r1.<java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()>();

        i8 = 0;

     label4:
        $i2 = lengthof $r11;

        if i8 >= $i2 goto label6;

        $r15 = $r11[i8];

        $r16 = staticinvoke <groovy.inspect.Inspector: java.lang.String shortName(java.lang.Class)>($r15);

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $i3 = lengthof $r11;

        $i4 = $i3 - 1;

        if i8 >= $i4 goto label5;

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label5:
        i8 = i8 + 1;

        goto label4;

     label6:
        $r12 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        r0[6] = $r12;

        $r14 = virtualinvoke r13.<groovy.inspect.Inspector: java.lang.String[] withoutNulls(java.lang.String[])>(r0);

        return $r14;
    }

    protected java.lang.String[] methodInfo(groovy.lang.MetaMethod)
    {
        org.codehaus.groovy.reflection.CachedClass[] $r9;
        groovy.inspect.Inspector r12;
        java.lang.String[] r0, $r13;
        java.lang.StringBuffer $r10;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String $r2, $r5, $r7, $r8, $r11, $r16;
        org.codehaus.groovy.reflection.CachedClass $r3, $r14;
        groovy.lang.MetaMethod r1;
        java.lang.Class $r4, $r6, $r15;

        r12 := @this: groovy.inspect.Inspector;

        r1 := @parameter0: groovy.lang.MetaMethod;

        r0 = newarray (java.lang.String)[7];

        $i0 = virtualinvoke r1.<groovy.lang.MetaMethod: int getModifiers()>();

        r0[0] = "GROOVY";

        $r2 = staticinvoke <java.lang.reflect.Modifier: java.lang.String toString(int)>($i0);

        r0[1] = $r2;

        $r3 = virtualinvoke r1.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass getDeclaringClass()>();

        $r4 = virtualinvoke $r3.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r5 = staticinvoke <groovy.inspect.Inspector: java.lang.String shortName(java.lang.Class)>($r4);

        r0[2] = $r5;

        $r6 = virtualinvoke r1.<groovy.lang.MetaMethod: java.lang.Class getReturnType()>();

        $r7 = staticinvoke <groovy.inspect.Inspector: java.lang.String shortName(java.lang.Class)>($r6);

        r0[3] = $r7;

        $r8 = virtualinvoke r1.<groovy.lang.MetaMethod: java.lang.String getName()>();

        r0[4] = $r8;

        $r9 = virtualinvoke r1.<groovy.lang.MetaMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        i4 = 0;

     label1:
        $i1 = lengthof $r9;

        if i4 >= $i1 goto label3;

        $r14 = $r9[i4];

        $r15 = virtualinvoke $r14.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r16 = staticinvoke <groovy.inspect.Inspector: java.lang.String shortName(java.lang.Class)>($r15);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $i2 = lengthof $r9;

        $i3 = $i2 - 1;

        if i4 >= $i3 goto label2;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        r0[5] = $r11;

        r0[6] = "n/a";

        $r13 = virtualinvoke r12.<groovy.inspect.Inspector: java.lang.String[] withoutNulls(java.lang.String[])>(r0);

        return $r13;
    }

    protected java.lang.String[] withoutNulls(java.lang.String[])
    {
        int $i0, i1;
        groovy.inspect.Inspector r2;
        java.lang.String[] r0;
        java.lang.String r1;

        r2 := @this: groovy.inspect.Inspector;

        r0 := @parameter0: java.lang.String[];

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label3;

        r1 = r0[i1];

        if null != r1 goto label2;

        r0[i1] = "n/a";

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return r0;
    }

    public static void print(java.lang.Object[])
    {
        java.io.PrintStream $r1;
        java.lang.Object[] r0;

        r0 := @parameter0: java.lang.Object[];

        $r1 = <java.lang.System: java.io.PrintStream out>;

        staticinvoke <groovy.inspect.Inspector: void print(java.io.PrintStream,java.lang.Object[])>($r1, r0);

        return;
    }

    static void print(java.io.PrintStream, java.lang.Object[])
    {
        java.lang.Object[] r0;
        java.lang.String[] $r2, r3;
        java.lang.StringBuffer $r5, $r6, $r7, $r10, $r11, $r12;
        int $i0, $i1, i2, i3;
        java.lang.String $r8, r9, $r13;
        java.io.PrintStream r4;
        java.lang.Object $r1;

        r4 := @parameter0: java.io.PrintStream;

        r0 := @parameter1: java.lang.Object[];

        i2 = 0;

     label1:
        $i0 = lengthof r0;

        if i2 >= $i0 goto label4;

        $r1 = r0[i2];

        $r2 = (java.lang.String[]) $r1;

        r3 = (java.lang.String[]) $r2;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":\t");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r4.<java.io.PrintStream: void print(java.lang.String)>($r8);

        i3 = 0;

     label2:
        $i1 = lengthof r3;

        if i3 >= $i1 goto label3;

        r9 = r3[i3];

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r9);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r4.<java.io.PrintStream: void print(java.lang.String)>($r13);

        i3 = i3 + 1;

        goto label2;

     label3:
        virtualinvoke r4.<java.io.PrintStream: void println(java.lang.String)>("");

        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }

    public static java.util.Collection sort(java.util.List)
    {
        groovy.inspect.Inspector$MemberComparator $r1;
        java.util.List r0;

        r0 := @parameter0: java.util.List;

        $r1 = new groovy.inspect.Inspector$MemberComparator;

        specialinvoke $r1.<groovy.inspect.Inspector$MemberComparator: void <init>()>();

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r0, $r1);

        return r0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <groovy.inspect.Inspector: java.lang.String JAVA> = "JAVA";

        <groovy.inspect.Inspector: java.lang.String GROOVY> = "GROOVY";

        <groovy.inspect.Inspector: java.lang.String NOT_APPLICABLE> = "n/a";

        <groovy.inspect.Inspector: int MEMBER_EXCEPTIONS_IDX> = 6;

        <groovy.inspect.Inspector: int MEMBER_VALUE_IDX> = 5;

        <groovy.inspect.Inspector: int MEMBER_PARAMS_IDX> = 5;

        <groovy.inspect.Inspector: int MEMBER_NAME_IDX> = 4;

        <groovy.inspect.Inspector: int MEMBER_TYPE_IDX> = 3;

        <groovy.inspect.Inspector: int MEMBER_DECLARER_IDX> = 2;

        <groovy.inspect.Inspector: int MEMBER_MODIFIER_IDX> = 1;

        <groovy.inspect.Inspector: int MEMBER_ORIGIN_IDX> = 0;

        <groovy.inspect.Inspector: int CLASS_OTHER_IDX> = 4;

        <groovy.inspect.Inspector: int CLASS_SUPERCLASS_IDX> = 3;

        <groovy.inspect.Inspector: int CLASS_INTERFACE_IDX> = 2;

        <groovy.inspect.Inspector: int CLASS_CLASS_IDX> = 1;

        <groovy.inspect.Inspector: int CLASS_PACKAGE_IDX> = 0;

        return;
    }
}
