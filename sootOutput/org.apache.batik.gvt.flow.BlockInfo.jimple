public class org.apache.batik.gvt.flow.BlockInfo extends java.lang.Object
{
    public static final int ALIGN_START;
    public static final int ALIGN_MIDDLE;
    public static final int ALIGN_END;
    public static final int ALIGN_FULL;
    protected float top;
    protected float right;
    protected float bottom;
    protected float left;
    protected float indent;
    protected int alignment;
    protected float lineHeight;
    protected java.util.List fontList;
    protected java.util.Map fontAttrs;
    protected float ascent;
    protected float descent;
    protected boolean flowRegionBreak;

    public void <init>(float, float, float, float, float, int, float, java.util.List, java.util.Map, boolean)
    {
        java.util.List r1;
        org.apache.batik.gvt.flow.BlockInfo r0;
        java.util.Map r2;
        int i0;
        float f0, f1, f2, f3, f4, f5;
        boolean z0;

        r0 := @this: org.apache.batik.gvt.flow.BlockInfo;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 := @parameter4: float;

        i0 := @parameter5: int;

        f5 := @parameter6: float;

        r1 := @parameter7: java.util.List;

        r2 := @parameter8: java.util.Map;

        z0 := @parameter9: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.gvt.flow.BlockInfo: float ascent> = -1.0F;

        r0.<org.apache.batik.gvt.flow.BlockInfo: float descent> = -1.0F;

        r0.<org.apache.batik.gvt.flow.BlockInfo: float top> = f0;

        r0.<org.apache.batik.gvt.flow.BlockInfo: float right> = f1;

        r0.<org.apache.batik.gvt.flow.BlockInfo: float bottom> = f2;

        r0.<org.apache.batik.gvt.flow.BlockInfo: float left> = f3;

        r0.<org.apache.batik.gvt.flow.BlockInfo: float indent> = f4;

        r0.<org.apache.batik.gvt.flow.BlockInfo: int alignment> = i0;

        r0.<org.apache.batik.gvt.flow.BlockInfo: float lineHeight> = f5;

        r0.<org.apache.batik.gvt.flow.BlockInfo: java.util.List fontList> = r1;

        r0.<org.apache.batik.gvt.flow.BlockInfo: java.util.Map fontAttrs> = r2;

        r0.<org.apache.batik.gvt.flow.BlockInfo: boolean flowRegionBreak> = z0;

        return;
    }

    public void <init>(float, int)
    {
        int i0;
        float f0;
        org.apache.batik.gvt.flow.BlockInfo r0;

        r0 := @this: org.apache.batik.gvt.flow.BlockInfo;

        f0 := @parameter0: float;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.gvt.flow.BlockInfo: float ascent> = -1.0F;

        r0.<org.apache.batik.gvt.flow.BlockInfo: float descent> = -1.0F;

        virtualinvoke r0.<org.apache.batik.gvt.flow.BlockInfo: void setMargin(float)>(f0);

        r0.<org.apache.batik.gvt.flow.BlockInfo: float indent> = 0.0F;

        r0.<org.apache.batik.gvt.flow.BlockInfo: int alignment> = i0;

        r0.<org.apache.batik.gvt.flow.BlockInfo: boolean flowRegionBreak> = 0;

        return;
    }

    public void setMargin(float)
    {
        float f0;
        org.apache.batik.gvt.flow.BlockInfo r0;

        r0 := @this: org.apache.batik.gvt.flow.BlockInfo;

        f0 := @parameter0: float;

        r0.<org.apache.batik.gvt.flow.BlockInfo: float top> = f0;

        r0.<org.apache.batik.gvt.flow.BlockInfo: float right> = f0;

        r0.<org.apache.batik.gvt.flow.BlockInfo: float bottom> = f0;

        r0.<org.apache.batik.gvt.flow.BlockInfo: float left> = f0;

        return;
    }

    public void initLineInfo(java.awt.font.FontRenderContext)
    {
        java.lang.Float r4;
        java.awt.font.TextAttribute $r1;
        org.apache.batik.gvt.font.GVTFont r8;
        byte $b0;
        java.util.Map $r2;
        org.apache.batik.gvt.font.GVTLineMetrics $r10;
        boolean $z0;
        java.util.Iterator $r6;
        java.util.List $r5;
        java.awt.font.FontRenderContext r9;
        org.apache.batik.gvt.flow.BlockInfo r0;
        float $f0, $f1, $f2, $f3, $f4, f5;
        java.lang.Object $r3, $r7;

        r0 := @this: org.apache.batik.gvt.flow.BlockInfo;

        r9 := @parameter0: java.awt.font.FontRenderContext;

        f5 = 12.0F;

        $r2 = r0.<org.apache.batik.gvt.flow.BlockInfo: java.util.Map fontAttrs>;

        $r1 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute SIZE>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r4 = (java.lang.Float) $r3;

        if r4 == null goto label1;

        f5 = virtualinvoke r4.<java.lang.Float: float floatValue()>();

     label1:
        $r5 = r0.<org.apache.batik.gvt.flow.BlockInfo: java.util.List fontList>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

        goto label3;

     label2:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.batik.gvt.font.GVTFont) $r7;

        $r10 = interfaceinvoke r8.<org.apache.batik.gvt.font.GVTFont: org.apache.batik.gvt.font.GVTLineMetrics getLineMetrics(java.lang.String,java.awt.font.FontRenderContext)>("", r9);

        $f0 = virtualinvoke $r10.<org.apache.batik.gvt.font.GVTLineMetrics: float getAscent()>();

        r0.<org.apache.batik.gvt.flow.BlockInfo: float ascent> = $f0;

        $f1 = virtualinvoke $r10.<org.apache.batik.gvt.font.GVTLineMetrics: float getDescent()>();

        r0.<org.apache.batik.gvt.flow.BlockInfo: float descent> = $f1;

        goto label4;

     label3:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

     label4:
        $f2 = r0.<org.apache.batik.gvt.flow.BlockInfo: float ascent>;

        $b0 = $f2 cmpl -1.0F;

        if $b0 != 0 goto label5;

        $f3 = f5 * 0.8F;

        r0.<org.apache.batik.gvt.flow.BlockInfo: float ascent> = $f3;

        $f4 = f5 * 0.2F;

        r0.<org.apache.batik.gvt.flow.BlockInfo: float descent> = $f4;

     label5:
        return;
    }

    public float getTopMargin()
    {
        float $f0;
        org.apache.batik.gvt.flow.BlockInfo r0;

        r0 := @this: org.apache.batik.gvt.flow.BlockInfo;

        $f0 = r0.<org.apache.batik.gvt.flow.BlockInfo: float top>;

        return $f0;
    }

    public float getRightMargin()
    {
        float $f0;
        org.apache.batik.gvt.flow.BlockInfo r0;

        r0 := @this: org.apache.batik.gvt.flow.BlockInfo;

        $f0 = r0.<org.apache.batik.gvt.flow.BlockInfo: float right>;

        return $f0;
    }

    public float getBottomMargin()
    {
        float $f0;
        org.apache.batik.gvt.flow.BlockInfo r0;

        r0 := @this: org.apache.batik.gvt.flow.BlockInfo;

        $f0 = r0.<org.apache.batik.gvt.flow.BlockInfo: float bottom>;

        return $f0;
    }

    public float getLeftMargin()
    {
        float $f0;
        org.apache.batik.gvt.flow.BlockInfo r0;

        r0 := @this: org.apache.batik.gvt.flow.BlockInfo;

        $f0 = r0.<org.apache.batik.gvt.flow.BlockInfo: float left>;

        return $f0;
    }

    public float getIndent()
    {
        float $f0;
        org.apache.batik.gvt.flow.BlockInfo r0;

        r0 := @this: org.apache.batik.gvt.flow.BlockInfo;

        $f0 = r0.<org.apache.batik.gvt.flow.BlockInfo: float indent>;

        return $f0;
    }

    public int getTextAlignment()
    {
        int $i0;
        org.apache.batik.gvt.flow.BlockInfo r0;

        r0 := @this: org.apache.batik.gvt.flow.BlockInfo;

        $i0 = r0.<org.apache.batik.gvt.flow.BlockInfo: int alignment>;

        return $i0;
    }

    public float getLineHeight()
    {
        float $f0;
        org.apache.batik.gvt.flow.BlockInfo r0;

        r0 := @this: org.apache.batik.gvt.flow.BlockInfo;

        $f0 = r0.<org.apache.batik.gvt.flow.BlockInfo: float lineHeight>;

        return $f0;
    }

    public java.util.List getFontList()
    {
        java.util.List $r1;
        org.apache.batik.gvt.flow.BlockInfo r0;

        r0 := @this: org.apache.batik.gvt.flow.BlockInfo;

        $r1 = r0.<org.apache.batik.gvt.flow.BlockInfo: java.util.List fontList>;

        return $r1;
    }

    public java.util.Map getFontAttrs()
    {
        org.apache.batik.gvt.flow.BlockInfo r0;
        java.util.Map $r1;

        r0 := @this: org.apache.batik.gvt.flow.BlockInfo;

        $r1 = r0.<org.apache.batik.gvt.flow.BlockInfo: java.util.Map fontAttrs>;

        return $r1;
    }

    public float getAscent()
    {
        float $f0;
        org.apache.batik.gvt.flow.BlockInfo r0;

        r0 := @this: org.apache.batik.gvt.flow.BlockInfo;

        $f0 = r0.<org.apache.batik.gvt.flow.BlockInfo: float ascent>;

        return $f0;
    }

    public float getDescent()
    {
        float $f0;
        org.apache.batik.gvt.flow.BlockInfo r0;

        r0 := @this: org.apache.batik.gvt.flow.BlockInfo;

        $f0 = r0.<org.apache.batik.gvt.flow.BlockInfo: float descent>;

        return $f0;
    }

    public boolean isFlowRegionBreak()
    {
        org.apache.batik.gvt.flow.BlockInfo r0;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.flow.BlockInfo;

        $z0 = r0.<org.apache.batik.gvt.flow.BlockInfo: boolean flowRegionBreak>;

        return $z0;
    }

    public static void <clinit>()
    {
        <org.apache.batik.gvt.flow.BlockInfo: int ALIGN_FULL> = 3;

        <org.apache.batik.gvt.flow.BlockInfo: int ALIGN_END> = 2;

        <org.apache.batik.gvt.flow.BlockInfo: int ALIGN_MIDDLE> = 1;

        <org.apache.batik.gvt.flow.BlockInfo: int ALIGN_START> = 0;

        return;
    }
}
