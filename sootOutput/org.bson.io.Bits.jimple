public class org.bson.io.Bits extends java.lang.Object
{

    public void <init>()
    {
        org.bson.io.Bits r0;

        r0 := @this: org.bson.io.Bits;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void readFully(java.io.InputStream, byte[]) throws java.io.IOException
    {
        byte[] r0;
        java.io.EOFException $r2;
        int $i0, $i1, $i2, $i3, i4;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        r0 := @parameter1: byte[];

        i4 = 0;

     label1:
        $i0 = lengthof r0;

        if i4 >= $i0 goto label3;

        $i1 = lengthof r0;

        $i2 = $i1 - i4;

        $i3 = virtualinvoke r1.<java.io.InputStream: int read(byte[],int,int)>(r0, i4, $i2);

        if $i3 >= 0 goto label2;

        $r2 = new java.io.EOFException;

        specialinvoke $r2.<java.io.EOFException: void <init>()>();

        throw $r2;

     label2:
        i4 = i4 + $i3;

        goto label1;

     label3:
        return;
    }

    public static int readInt(java.io.InputStream) throws java.io.IOException
    {
        int $i0;
        byte[] r0;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        r0 = newarray (byte)[4];

        staticinvoke <org.bson.io.Bits: void readFully(java.io.InputStream,byte[])>(r1, r0);

        $i0 = staticinvoke <org.bson.io.Bits: int readInt(byte[])>(r0);

        return $i0;
    }

    public static int readInt(byte[])
    {
        byte[] r0;
        short $s1, $s4, $s7, $s10, $s16, $s18, $s20, $s22;
        byte $b0, $b3, $b6, $b9;
        int $i2, $i5, $i8, $i11, i12, i13, i14, i15, $i17, $i19, $i21, $i23;

        r0 := @parameter0: byte[];

        $b0 = r0[0];

        $s16 = (short) $b0;

        $s1 = 255 & $s16;

        $i17 = (int) $s1;

        $i2 = $i17 << 0;

        i12 = 0 | $i2;

        $b3 = r0[1];

        $s18 = (short) $b3;

        $s4 = 255 & $s18;

        $i19 = (int) $s4;

        $i5 = $i19 << 8;

        i13 = i12 | $i5;

        $b6 = r0[2];

        $s20 = (short) $b6;

        $s7 = 255 & $s20;

        $i21 = (int) $s7;

        $i8 = $i21 << 16;

        i14 = i13 | $i8;

        $b9 = r0[3];

        $s22 = (short) $b9;

        $s10 = 255 & $s22;

        $i23 = (int) $s10;

        $i11 = $i23 << 24;

        i15 = i14 | $i11;

        return i15;
    }

    public static long readLong(java.io.InputStream) throws java.io.IOException
    {
        byte[] r0;
        long $l0;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        r0 = newarray (byte)[8];

        staticinvoke <org.bson.io.Bits: void readFully(java.io.InputStream,byte[])>(r1, r0);

        $l0 = staticinvoke <org.bson.io.Bits: long readLong(byte[])>(r0);

        return $l0;
    }

    public static long readLong(byte[])
    {
        byte[] r0;
        byte $b0, $b4, $b8, $b12, $b16, $b20, $b24, $b28;
        long $l1, $l2, $l3, $l5, $l6, $l7, $l9, $l10, $l11, $l13, $l14, $l15, $l17, $l18, $l19, $l21, $l22, $l23, $l25, $l26, $l27, $l29, $l30, $l31, l32, l33, l34, l35, l36, l37, l38, l39;

        r0 := @parameter0: byte[];

        $b0 = r0[0];

        $l1 = (long) $b0;

        $l2 = 255L & $l1;

        $l3 = $l2 << 0;

        l32 = 0L | $l3;

        $b4 = r0[1];

        $l5 = (long) $b4;

        $l6 = 255L & $l5;

        $l7 = $l6 << 8;

        l33 = l32 | $l7;

        $b8 = r0[2];

        $l9 = (long) $b8;

        $l10 = 255L & $l9;

        $l11 = $l10 << 16;

        l34 = l33 | $l11;

        $b12 = r0[3];

        $l13 = (long) $b12;

        $l14 = 255L & $l13;

        $l15 = $l14 << 24;

        l35 = l34 | $l15;

        $b16 = r0[4];

        $l17 = (long) $b16;

        $l18 = 255L & $l17;

        $l19 = $l18 << 32;

        l36 = l35 | $l19;

        $b20 = r0[5];

        $l21 = (long) $b20;

        $l22 = 255L & $l21;

        $l23 = $l22 << 40;

        l37 = l36 | $l23;

        $b24 = r0[6];

        $l25 = (long) $b24;

        $l26 = 255L & $l25;

        $l27 = $l26 << 48;

        l38 = l37 | $l27;

        $b28 = r0[7];

        $l29 = (long) $b28;

        $l30 = 255L & $l29;

        $l31 = $l30 << 56;

        l39 = l38 | $l31;

        return l39;
    }
}
