public final class org.apache.poi.ss.formula.functions.Even extends org.apache.poi.ss.formula.functions.NumericFunction$OneArg
{
    private static final long PARITY_MASK;

    public void <init>()
    {
        org.apache.poi.ss.formula.functions.Even r0;

        r0 := @this: org.apache.poi.ss.formula.functions.Even;

        specialinvoke r0.<org.apache.poi.ss.formula.functions.NumericFunction$OneArg: void <init>()>();

        return;
    }

    protected double evaluate(double)
    {
        org.apache.poi.ss.formula.functions.Even r0;
        long $l2, l3;
        byte $b0, $b1;
        int $i4;
        double d0, $d1, $d2;

        r0 := @this: org.apache.poi.ss.formula.functions.Even;

        d0 := @parameter0: double;

        $b0 = d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        return 0.0;

     label1:
        $b1 = d0 cmpl 0.0;

        $i4 = (int) $b1;

        if $i4 <= 0 goto label2;

        l3 = staticinvoke <org.apache.poi.ss.formula.functions.Even: long calcEven(double)>(d0);

        goto label3;

     label2:
        $d1 = neg d0;

        $l2 = staticinvoke <org.apache.poi.ss.formula.functions.Even: long calcEven(double)>($d1);

        l3 = neg $l2;

     label3:
        $d2 = (double) l3;

        return $d2;
    }

    private static long calcEven(double)
    {
        byte $b2;
        long $l0, l1, $l3;
        double d0, $d1;

        d0 := @parameter0: double;

        $l0 = (long) d0;

        l1 = $l0 & -2L;

        $d1 = (double) l1;

        $b2 = $d1 cmpl d0;

        if $b2 != 0 goto label1;

        return l1;

     label1:
        $l3 = l1 + 2L;

        return $l3;
    }

    public static void <clinit>()
    {
        <org.apache.poi.ss.formula.functions.Even: long PARITY_MASK> = -2L;

        return;
    }
}
