public interface  org.eclipse.jdt.internal.compiler.env.IBinaryType extends java.lang.Object implements org.eclipse.jdt.internal.compiler.env.IGenericType
{
    public static final char[][] NoInterface;
    public static final org.eclipse.jdt.internal.compiler.env.IBinaryNestedType[] NoNestedType;
    public static final org.eclipse.jdt.internal.compiler.env.IBinaryField[] NoField;
    public static final org.eclipse.jdt.internal.compiler.env.IBinaryMethod[] NoMethod;

    static void <clinit>()
    {
        org.eclipse.jdt.internal.compiler.env.IBinaryField[] $r2;
        org.eclipse.jdt.internal.compiler.env.IBinaryNestedType[] $r1;
        org.eclipse.jdt.internal.compiler.env.IBinaryMethod[] $r3;
        char[][] $r0;

        $r0 = <org.eclipse.jdt.core.compiler.CharOperation: char[][] NO_CHAR_CHAR>;

        <org.eclipse.jdt.internal.compiler.env.IBinaryType: char[][] NoInterface> = $r0;

        $r1 = newarray (org.eclipse.jdt.internal.compiler.env.IBinaryNestedType)[0];

        <org.eclipse.jdt.internal.compiler.env.IBinaryType: org.eclipse.jdt.internal.compiler.env.IBinaryNestedType[] NoNestedType> = $r1;

        $r2 = newarray (org.eclipse.jdt.internal.compiler.env.IBinaryField)[0];

        <org.eclipse.jdt.internal.compiler.env.IBinaryType: org.eclipse.jdt.internal.compiler.env.IBinaryField[] NoField> = $r2;

        $r3 = newarray (org.eclipse.jdt.internal.compiler.env.IBinaryMethod)[0];

        <org.eclipse.jdt.internal.compiler.env.IBinaryType: org.eclipse.jdt.internal.compiler.env.IBinaryMethod[] NoMethod> = $r3;

        return;
    }

    public abstract org.eclipse.jdt.internal.compiler.env.IBinaryAnnotation[] getAnnotations();

    public abstract char[] getEnclosingTypeName();

    public abstract org.eclipse.jdt.internal.compiler.env.IBinaryField[] getFields();

    public abstract char[] getGenericSignature();

    public abstract char[][] getInterfaceNames();

    public abstract org.eclipse.jdt.internal.compiler.env.IBinaryNestedType[] getMemberTypes();

    public abstract org.eclipse.jdt.internal.compiler.env.IBinaryMethod[] getMethods();

    public abstract char[][][] getMissingTypeNames();

    public abstract char[] getName();

    public abstract char[] getSourceName();

    public abstract char[] getSuperclassName();

    public abstract long getTagBits();

    public abstract boolean isAnonymous();

    public abstract boolean isLocal();

    public abstract boolean isMember();

    public abstract char[] sourceFileName();
}
