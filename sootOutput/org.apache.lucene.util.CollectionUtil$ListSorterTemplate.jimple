abstract class org.apache.lucene.util.CollectionUtil$ListSorterTemplate extends org.apache.lucene.util.SorterTemplate
{
    protected final java.util.List list;
    private java.lang.Object pivot;

    void <init>(java.util.List)
    {
        org.apache.lucene.util.CollectionUtil$ListSorterTemplate r0;
        java.util.List r1;

        r0 := @this: org.apache.lucene.util.CollectionUtil$ListSorterTemplate;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<org.apache.lucene.util.SorterTemplate: void <init>()>();

        r0.<org.apache.lucene.util.CollectionUtil$ListSorterTemplate: java.util.List list> = r1;

        return;
    }

    protected abstract int compare(java.lang.Object, java.lang.Object);

    protected void swap(int, int)
    {
        java.util.List $r1;
        int i0, i1;
        org.apache.lucene.util.CollectionUtil$ListSorterTemplate r0;

        r0 := @this: org.apache.lucene.util.CollectionUtil$ListSorterTemplate;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.lucene.util.CollectionUtil$ListSorterTemplate: java.util.List list>;

        staticinvoke <java.util.Collections: void swap(java.util.List,int,int)>($r1, i0, i1);

        return;
    }

    protected int compare(int, int)
    {
        java.util.List $r1, $r3;
        int i0, i1, $i2;
        org.apache.lucene.util.CollectionUtil$ListSorterTemplate r0;
        java.lang.Object $r2, $r4;

        r0 := @this: org.apache.lucene.util.CollectionUtil$ListSorterTemplate;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.lucene.util.CollectionUtil$ListSorterTemplate: java.util.List list>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = r0.<org.apache.lucene.util.CollectionUtil$ListSorterTemplate: java.util.List list>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i1);

        $i2 = virtualinvoke r0.<org.apache.lucene.util.CollectionUtil$ListSorterTemplate: int compare(java.lang.Object,java.lang.Object)>($r2, $r4);

        return $i2;
    }

    protected void setPivot(int)
    {
        java.util.List $r1;
        int i0;
        org.apache.lucene.util.CollectionUtil$ListSorterTemplate r0;
        java.lang.Object $r2;

        r0 := @this: org.apache.lucene.util.CollectionUtil$ListSorterTemplate;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.util.CollectionUtil$ListSorterTemplate: java.util.List list>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        r0.<org.apache.lucene.util.CollectionUtil$ListSorterTemplate: java.lang.Object pivot> = $r2;

        return;
    }

    protected int comparePivot(int)
    {
        java.util.List $r1;
        int i0, $i1;
        org.apache.lucene.util.CollectionUtil$ListSorterTemplate r0;
        java.lang.Object $r2, $r3;

        r0 := @this: org.apache.lucene.util.CollectionUtil$ListSorterTemplate;

        i0 := @parameter0: int;

        $r2 = r0.<org.apache.lucene.util.CollectionUtil$ListSorterTemplate: java.lang.Object pivot>;

        $r1 = r0.<org.apache.lucene.util.CollectionUtil$ListSorterTemplate: java.util.List list>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $i1 = virtualinvoke r0.<org.apache.lucene.util.CollectionUtil$ListSorterTemplate: int compare(java.lang.Object,java.lang.Object)>($r2, $r3);

        return $i1;
    }
}
