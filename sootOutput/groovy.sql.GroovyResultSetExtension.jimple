public class groovy.sql.GroovyResultSetExtension extends groovy.lang.GroovyObjectSupport
{
    private boolean updated;
    private final java.sql.ResultSet resultSet;
    static java.lang.Class class$groovy$sql$GroovyResultSetProxy;

    protected java.sql.ResultSet getResultSet() throws java.sql.SQLException
    {
        groovy.sql.GroovyResultSetExtension r0;
        java.sql.ResultSet $r1;

        r0 := @this: groovy.sql.GroovyResultSetExtension;

        $r1 = r0.<groovy.sql.GroovyResultSetExtension: java.sql.ResultSet resultSet>;

        return $r1;
    }

    public void <init>(java.sql.ResultSet)
    {
        groovy.sql.GroovyResultSetExtension r0;
        java.sql.ResultSet r1;

        r0 := @this: groovy.sql.GroovyResultSetExtension;

        r1 := @parameter0: java.sql.ResultSet;

        specialinvoke r0.<groovy.lang.GroovyObjectSupport: void <init>()>();

        r0.<groovy.sql.GroovyResultSetExtension: boolean updated> = 0;

        r0.<groovy.sql.GroovyResultSetExtension: java.sql.ResultSet resultSet> = r1;

        return;
    }

    public java.lang.String toString()
    {
        java.sql.SQLException $r9;
        groovy.sql.GroovyResultSetExtension r1;
        java.lang.StringBuffer $r0;
        java.sql.ResultSet $r2, $r6;
        int $i0, i1;
        java.lang.Object $r7;
        java.lang.String $r4, $r5, $r8, $r10;
        java.sql.ResultSetMetaData $r3;

        r1 := @this: groovy.sql.GroovyResultSetExtension;

     label1:
        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>("[");

        $r2 = r1.<groovy.sql.GroovyResultSetExtension: java.sql.ResultSet resultSet>;

        $r3 = interfaceinvoke $r2.<java.sql.ResultSet: java.sql.ResultSetMetaData getMetaData()>();

        $i0 = interfaceinvoke $r3.<java.sql.ResultSetMetaData: int getColumnCount()>();

        i1 = 1;

     label2:
        if i1 > $i0 goto label6;

        $r5 = interfaceinvoke $r3.<java.sql.ResultSetMetaData: java.lang.String getColumnName(int)>(i1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r6 = r1.<groovy.sql.GroovyResultSetExtension: java.sql.ResultSet resultSet>;

        $r7 = interfaceinvoke $r6.<java.sql.ResultSet: java.lang.Object getObject(int)>(i1);

        if $r7 == null goto label3;

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        goto label4;

     label3:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[null]");

     label4:
        if i1 >= $i0 goto label5;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label5:
        i1 = i1 + 1;

        goto label2;

     label6:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

     label7:
        return $r4;

     label8:
        $r9 := @caughtexception;

        $r10 = specialinvoke r1.<java.lang.Object: java.lang.String toString()>();

        return $r10;

        catch java.sql.SQLException from label1 to label7 with label8;
    }

    public java.lang.Object invokeMethod(java.lang.String, java.lang.Object)
    {
        java.sql.SQLException $r5;
        groovy.sql.GroovyResultSetExtension r0;
        java.sql.ResultSet $r1;
        java.lang.Object r3, $r4;
        org.codehaus.groovy.runtime.InvokerInvocationException $r6;
        java.lang.String r2;

        r0 := @this: groovy.sql.GroovyResultSetExtension;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

     label1:
        $r1 = virtualinvoke r0.<groovy.sql.GroovyResultSetExtension: java.sql.ResultSet getResultSet()>();

        $r4 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object)>($r1, r2, r3);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = new org.codehaus.groovy.runtime.InvokerInvocationException;

        specialinvoke $r6.<org.codehaus.groovy.runtime.InvokerInvocationException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

        catch java.sql.SQLException from label1 to label2 with label3;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        java.sql.SQLException $r4;
        groovy.sql.GroovyResultSetExtension r0;
        java.sql.ResultSet $r1;
        java.lang.Object $r3;
        java.lang.Class $r6, $r7;
        java.lang.String r2;
        groovy.lang.MissingPropertyException $r5;

        r0 := @this: groovy.sql.GroovyResultSetExtension;

        r2 := @parameter0: java.lang.String;

     label1:
        $r1 = virtualinvoke r0.<groovy.sql.GroovyResultSetExtension: java.sql.ResultSet getResultSet()>();

        $r3 = interfaceinvoke $r1.<java.sql.ResultSet: java.lang.Object getObject(java.lang.String)>(r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new groovy.lang.MissingPropertyException;

        $r6 = <groovy.sql.GroovyResultSetExtension: java.lang.Class class$groovy$sql$GroovyResultSetProxy>;

        if $r6 != null goto label4;

        $r7 = staticinvoke <groovy.sql.GroovyResultSetExtension: java.lang.Class class$(java.lang.String)>("groovy.sql.GroovyResultSetProxy");

        <groovy.sql.GroovyResultSetExtension: java.lang.Class class$groovy$sql$GroovyResultSetProxy> = $r7;

        goto label5;

     label4:
        $r7 = <groovy.sql.GroovyResultSetExtension: java.lang.Class class$groovy$sql$GroovyResultSetProxy>;

     label5:
        specialinvoke $r5.<groovy.lang.MissingPropertyException: void <init>(java.lang.String,java.lang.Class,java.lang.Throwable)>(r2, $r7, $r4);

        throw $r5;

        catch java.sql.SQLException from label1 to label2 with label3;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        java.sql.SQLException $r4;
        groovy.sql.GroovyResultSetExtension r0;
        java.sql.ResultSet $r1;
        java.lang.Object r3;
        java.lang.Class $r6, $r7;
        java.lang.String r2;
        groovy.lang.MissingPropertyException $r5;

        r0 := @this: groovy.sql.GroovyResultSetExtension;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

     label1:
        $r1 = virtualinvoke r0.<groovy.sql.GroovyResultSetExtension: java.sql.ResultSet getResultSet()>();

        interfaceinvoke $r1.<java.sql.ResultSet: void updateObject(java.lang.String,java.lang.Object)>(r2, r3);

        r0.<groovy.sql.GroovyResultSetExtension: boolean updated> = 1;

     label2:
        goto label6;

     label3:
        $r4 := @caughtexception;

        $r5 = new groovy.lang.MissingPropertyException;

        $r6 = <groovy.sql.GroovyResultSetExtension: java.lang.Class class$groovy$sql$GroovyResultSetProxy>;

        if $r6 != null goto label4;

        $r7 = staticinvoke <groovy.sql.GroovyResultSetExtension: java.lang.Class class$(java.lang.String)>("groovy.sql.GroovyResultSetProxy");

        <groovy.sql.GroovyResultSetExtension: java.lang.Class class$groovy$sql$GroovyResultSetProxy> = $r7;

        goto label5;

     label4:
        $r7 = <groovy.sql.GroovyResultSetExtension: java.lang.Class class$groovy$sql$GroovyResultSetProxy>;

     label5:
        specialinvoke $r5.<groovy.lang.MissingPropertyException: void <init>(java.lang.String,java.lang.Class,java.lang.Throwable)>(r2, $r7, $r4);

        throw $r5;

     label6:
        return;

        catch java.sql.SQLException from label1 to label2 with label3;
    }

    public java.lang.Object getAt(int) throws java.sql.SQLException
    {
        groovy.sql.GroovyResultSetExtension r0;
        java.sql.ResultSet $r1;
        int $i0, i1;
        java.lang.Object $r2;

        r0 := @this: groovy.sql.GroovyResultSetExtension;

        i1 := @parameter0: int;

        $i0 = virtualinvoke r0.<groovy.sql.GroovyResultSetExtension: int normalizeIndex(int)>(i1);

        $r1 = virtualinvoke r0.<groovy.sql.GroovyResultSetExtension: java.sql.ResultSet getResultSet()>();

        $r2 = interfaceinvoke $r1.<java.sql.ResultSet: java.lang.Object getObject(int)>($i0);

        return $r2;
    }

    public void putAt(int, java.lang.Object) throws java.sql.SQLException
    {
        groovy.sql.GroovyResultSetExtension r0;
        java.sql.ResultSet $r1;
        int $i0, i1;
        java.lang.Object r2;

        r0 := @this: groovy.sql.GroovyResultSetExtension;

        i1 := @parameter0: int;

        r2 := @parameter1: java.lang.Object;

        $i0 = virtualinvoke r0.<groovy.sql.GroovyResultSetExtension: int normalizeIndex(int)>(i1);

        $r1 = virtualinvoke r0.<groovy.sql.GroovyResultSetExtension: java.sql.ResultSet getResultSet()>();

        interfaceinvoke $r1.<java.sql.ResultSet: void updateObject(int,java.lang.Object)>($i0, r2);

        return;
    }

    public void add(java.util.Map) throws java.sql.SQLException
    {
        java.util.Map$Entry r7;
        java.util.Iterator $r4;
        java.util.Set $r3;
        groovy.sql.GroovyResultSetExtension r0;
        java.sql.ResultSet $r1, $r5, $r8;
        java.util.Map r2;
        java.lang.Object $r6, $r9, $r11;
        java.lang.String $r10;
        boolean $z0;

        r0 := @this: groovy.sql.GroovyResultSetExtension;

        r2 := @parameter0: java.util.Map;

        $r1 = virtualinvoke r0.<groovy.sql.GroovyResultSetExtension: java.sql.ResultSet getResultSet()>();

        interfaceinvoke $r1.<java.sql.ResultSet: void moveToInsertRow()>();

        $r3 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r8 = virtualinvoke r0.<groovy.sql.GroovyResultSetExtension: java.sql.ResultSet getResultSet()>();

        $r9 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r10 = virtualinvoke $r9.<java.lang.Object: java.lang.String toString()>();

        $r11 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke $r8.<java.sql.ResultSet: void updateObject(java.lang.String,java.lang.Object)>($r10, $r11);

        goto label1;

     label2:
        $r5 = virtualinvoke r0.<groovy.sql.GroovyResultSetExtension: java.sql.ResultSet getResultSet()>();

        interfaceinvoke $r5.<java.sql.ResultSet: void insertRow()>();

        return;
    }

    protected int normalizeIndex(int) throws java.sql.SQLException
    {
        groovy.sql.GroovyResultSetExtension r0;
        java.sql.ResultSet $r1;
        int $i0, $i1, $i2, i3;
        java.sql.ResultSetMetaData $r2;

        r0 := @this: groovy.sql.GroovyResultSetExtension;

        i3 := @parameter0: int;

        if i3 >= 0 goto label2;

        $r1 = virtualinvoke r0.<groovy.sql.GroovyResultSetExtension: java.sql.ResultSet getResultSet()>();

        $r2 = interfaceinvoke $r1.<java.sql.ResultSet: java.sql.ResultSetMetaData getMetaData()>();

        $i1 = interfaceinvoke $r2.<java.sql.ResultSetMetaData: int getColumnCount()>();

     label1:
        $i2 = i3 + $i1;

        i3 = $i2;

        if $i2 < 0 goto label1;

     label2:
        $i0 = i3 + 1;

        return $i0;
    }

    public void eachRow(groovy.lang.Closure) throws java.sql.SQLException
    {
        groovy.lang.Closure r1;
        groovy.sql.GroovyResultSetExtension r0;
        boolean $z0;

        r0 := @this: groovy.sql.GroovyResultSetExtension;

        r1 := @parameter0: groovy.lang.Closure;

     label1:
        $z0 = virtualinvoke r0.<groovy.sql.GroovyResultSetExtension: boolean next()>();

        if $z0 == 0 goto label2;

        virtualinvoke r1.<groovy.lang.Closure: java.lang.Object call(java.lang.Object)>(r0);

        goto label1;

     label2:
        return;
    }

    public boolean next() throws java.sql.SQLException
    {
        groovy.sql.GroovyResultSetExtension r0;
        java.sql.ResultSet $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: groovy.sql.GroovyResultSetExtension;

        $z0 = r0.<groovy.sql.GroovyResultSetExtension: boolean updated>;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<groovy.sql.GroovyResultSetExtension: java.sql.ResultSet getResultSet()>();

        interfaceinvoke $r2.<java.sql.ResultSet: void updateRow()>();

        r0.<groovy.sql.GroovyResultSetExtension: boolean updated> = 0;

     label1:
        $r1 = virtualinvoke r0.<groovy.sql.GroovyResultSetExtension: java.sql.ResultSet getResultSet()>();

        $z1 = interfaceinvoke $r1.<java.sql.ResultSet: boolean next()>();

        return $z1;
    }

    public boolean previous() throws java.sql.SQLException
    {
        groovy.sql.GroovyResultSetExtension r0;
        java.sql.ResultSet $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: groovy.sql.GroovyResultSetExtension;

        $z0 = r0.<groovy.sql.GroovyResultSetExtension: boolean updated>;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<groovy.sql.GroovyResultSetExtension: java.sql.ResultSet getResultSet()>();

        interfaceinvoke $r2.<java.sql.ResultSet: void updateRow()>();

        r0.<groovy.sql.GroovyResultSetExtension: boolean updated> = 0;

     label1:
        $r1 = virtualinvoke r0.<groovy.sql.GroovyResultSetExtension: java.sql.ResultSet getResultSet()>();

        $z1 = interfaceinvoke $r1.<java.sql.ResultSet: boolean previous()>();

        return $z1;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
