public class com.google.inject.Scopes extends java.lang.Object
{
    private static final java.lang.Object NULL;
    public static final com.google.inject.Scope SINGLETON;
    public static final com.google.inject.Scope NO_SCOPE;

    private void <init>()
    {
        com.google.inject.Scopes r0;

        r0 := @this: com.google.inject.Scopes;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isSingleton(com.google.inject.Binding)
    {
        com.google.inject.Scopes$3 $r6;
        com.google.inject.Key $r2, $r4;
        com.google.inject.internal.LinkedBindingImpl r9;
        com.google.inject.Binding r5;
        com.google.inject.spi.ExposedBinding r10;
        com.google.inject.Injector $r1;
        com.google.inject.internal.InjectorImpl $r3;
        java.lang.Boolean $r8;
        java.lang.Object $r7;
        com.google.inject.spi.PrivateElements $r0;
        boolean $z0, $z1, $z2;

        r5 := @parameter0: com.google.inject.Binding;

     label1:
        $r6 = new com.google.inject.Scopes$3;

        specialinvoke $r6.<com.google.inject.Scopes$3: void <init>()>();

        $r7 = interfaceinvoke r5.<com.google.inject.Binding: java.lang.Object acceptScopingVisitor(com.google.inject.spi.BindingScopingVisitor)>($r6);

        $r8 = (java.lang.Boolean) $r7;

        $z2 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 == 0 goto label2;

        return 1;

     label2:
        $z0 = r5 instanceof com.google.inject.internal.LinkedBindingImpl;

        if $z0 == 0 goto label4;

        r9 = (com.google.inject.internal.LinkedBindingImpl) r5;

        $r3 = virtualinvoke r9.<com.google.inject.internal.LinkedBindingImpl: com.google.inject.internal.InjectorImpl getInjector()>();

        if $r3 == null goto label3;

        $r4 = virtualinvoke r9.<com.google.inject.internal.LinkedBindingImpl: com.google.inject.Key getLinkedKey()>();

        r5 = interfaceinvoke $r3.<com.google.inject.Injector: com.google.inject.Binding getBinding(com.google.inject.Key)>($r4);

        goto label1;

     label3:
        goto label5;

     label4:
        $z1 = r5 instanceof com.google.inject.spi.ExposedBinding;

        if $z1 == 0 goto label5;

        r10 = (com.google.inject.spi.ExposedBinding) r5;

        $r0 = interfaceinvoke r10.<com.google.inject.spi.ExposedBinding: com.google.inject.spi.PrivateElements getPrivateElements()>();

        $r1 = interfaceinvoke $r0.<com.google.inject.spi.PrivateElements: com.google.inject.Injector getInjector()>();

        if $r1 == null goto label5;

        $r2 = interfaceinvoke r10.<com.google.inject.spi.ExposedBinding: com.google.inject.Key getKey()>();

        r5 = interfaceinvoke $r1.<com.google.inject.Injector: com.google.inject.Binding getBinding(com.google.inject.Key)>($r2);

        goto label1;

     label5:
        return 0;
    }

    static java.lang.Object access$000()
    {
        java.lang.Object $r0;

        $r0 = <com.google.inject.Scopes: java.lang.Object NULL>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;
        com.google.inject.Scopes$1 $r1;
        com.google.inject.Scopes$2 $r2;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <com.google.inject.Scopes: java.lang.Object NULL> = $r0;

        $r1 = new com.google.inject.Scopes$1;

        specialinvoke $r1.<com.google.inject.Scopes$1: void <init>()>();

        <com.google.inject.Scopes: com.google.inject.Scope SINGLETON> = $r1;

        $r2 = new com.google.inject.Scopes$2;

        specialinvoke $r2.<com.google.inject.Scopes$2: void <init>()>();

        <com.google.inject.Scopes: com.google.inject.Scope NO_SCOPE> = $r2;

        return;
    }
}
