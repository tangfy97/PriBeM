public class org.apache.http.entity.mime.Header extends java.lang.Object implements java.lang.Iterable
{
    private final java.util.List fields;
    private final java.util.Map fieldMap;

    public void <init>()
    {
        java.util.HashMap $r2;
        java.util.LinkedList $r1;
        org.apache.http.entity.mime.Header r0;

        r0 := @this: org.apache.http.entity.mime.Header;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.http.entity.mime.Header: java.util.List fields> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.http.entity.mime.Header: java.util.Map fieldMap> = $r2;

        return;
    }

    public void addField(org.apache.http.entity.mime.MinimalField)
    {
        org.apache.http.entity.mime.Header r4;
        org.apache.http.entity.mime.MinimalField r0;
        java.util.List $r7, r10;
        java.util.Locale $r2;
        java.util.Map $r5, $r9;
        java.lang.Object $r6;
        java.lang.String $r1, $r3;
        java.util.LinkedList $r8;

        r4 := @this: org.apache.http.entity.mime.Header;

        r0 := @parameter0: org.apache.http.entity.mime.MinimalField;

        if r0 != null goto label1;

        return;

     label1:
        $r1 = virtualinvoke r0.<org.apache.http.entity.mime.MinimalField: java.lang.String getName()>();

        $r2 = <java.util.Locale: java.util.Locale US>;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        $r5 = r4.<org.apache.http.entity.mime.Header: java.util.Map fieldMap>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r10 = (java.util.List) $r6;

        if r10 != null goto label2;

        $r8 = new java.util.LinkedList;

        specialinvoke $r8.<java.util.LinkedList: void <init>()>();

        r10 = $r8;

        $r9 = r4.<org.apache.http.entity.mime.Header: java.util.Map fieldMap>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r8);

     label2:
        interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r0);

        $r7 = r4.<org.apache.http.entity.mime.Header: java.util.List fields>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r0);

        return;
    }

    public java.util.List getFields()
    {
        java.util.List $r2;
        org.apache.http.entity.mime.Header r1;
        java.util.ArrayList $r0;

        r1 := @this: org.apache.http.entity.mime.Header;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<org.apache.http.entity.mime.Header: java.util.List fields>;

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        return $r0;
    }

    public org.apache.http.entity.mime.MinimalField getField(java.lang.String)
    {
        org.apache.http.entity.mime.Header r3;
        org.apache.http.entity.mime.MinimalField $r8;
        java.util.List r6;
        java.util.Locale $r1;
        java.util.Map $r4;
        java.lang.Object $r5, $r7;
        java.lang.String r0, $r2;
        boolean $z0;

        r3 := @this: org.apache.http.entity.mime.Header;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = <java.util.Locale: java.util.Locale US>;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r1);

        $r4 = r3.<org.apache.http.entity.mime.Header: java.util.Map fieldMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r6 = (java.util.List) $r5;

        if r6 == null goto label2;

        $z0 = interfaceinvoke r6.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r7 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(0);

        $r8 = (org.apache.http.entity.mime.MinimalField) $r7;

        return $r8;

     label2:
        return null;
    }

    public java.util.List getFields(java.lang.String)
    {
        org.apache.http.entity.mime.Header r3;
        java.util.ArrayList $r8;
        java.util.List r6, $r7;
        java.util.Locale $r1;
        java.util.Map $r4;
        java.lang.Object $r5;
        java.lang.String r0, $r2;
        boolean $z0;

        r3 := @this: org.apache.http.entity.mime.Header;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = <java.util.Locale: java.util.Locale US>;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r1);

        $r4 = r3.<org.apache.http.entity.mime.Header: java.util.Map fieldMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r6 = (java.util.List) $r5;

        if r6 == null goto label2;

        $z0 = interfaceinvoke r6.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label3;

     label2:
        $r7 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r7;

     label3:
        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>(java.util.Collection)>(r6);

        return $r8;
    }

    public int removeFields(java.lang.String)
    {
        org.apache.http.entity.mime.Header r3;
        java.util.List r6, $r7;
        java.util.Locale $r1;
        java.util.Map $r4;
        int $i0;
        java.lang.Object $r5;
        java.lang.String r0, $r2;
        boolean $z0;

        r3 := @this: org.apache.http.entity.mime.Header;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return 0;

     label1:
        $r1 = <java.util.Locale: java.util.Locale US>;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r1);

        $r4 = r3.<org.apache.http.entity.mime.Header: java.util.Map fieldMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r2);

        r6 = (java.util.List) $r5;

        if r6 == null goto label2;

        $z0 = interfaceinvoke r6.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label3;

     label2:
        return 0;

     label3:
        $r7 = r3.<org.apache.http.entity.mime.Header: java.util.List fields>;

        interfaceinvoke $r7.<java.util.List: boolean removeAll(java.util.Collection)>(r6);

        $i0 = interfaceinvoke r6.<java.util.List: int size()>();

        return $i0;
    }

    public void setField(org.apache.http.entity.mime.MinimalField)
    {
        org.apache.http.entity.mime.MinimalField r0, r12;
        java.util.Locale $r2;
        java.util.Map $r5;
        int i0, i1, $i3, $i5;
        java.lang.String $r1, $r3, $r13, $r14;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r9;
        org.apache.http.entity.mime.Header r4;
        java.util.List r7, $r8, $r10;
        java.lang.Object $r6, $r11;

        r4 := @this: org.apache.http.entity.mime.Header;

        r0 := @parameter0: org.apache.http.entity.mime.MinimalField;

        if r0 != null goto label1;

        return;

     label1:
        $r1 = virtualinvoke r0.<org.apache.http.entity.mime.MinimalField: java.lang.String getName()>();

        $r2 = <java.util.Locale: java.util.Locale US>;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        $r5 = r4.<org.apache.http.entity.mime.Header: java.util.Map fieldMap>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r7 = (java.util.List) $r6;

        if r7 == null goto label2;

        $z0 = interfaceinvoke r7.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label3;

     label2:
        virtualinvoke r4.<org.apache.http.entity.mime.Header: void addField(org.apache.http.entity.mime.MinimalField)>(r0);

        return;

     label3:
        interfaceinvoke r7.<java.util.List: void clear()>();

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r0);

        $i3 = (int) -1;

        i0 = $i3;

        i1 = 0;

        $r8 = r4.<org.apache.http.entity.mime.Header: java.util.List fields>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r11 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.apache.http.entity.mime.MinimalField) $r11;

        $r13 = virtualinvoke r12.<org.apache.http.entity.mime.MinimalField: java.lang.String getName()>();

        $r14 = virtualinvoke r0.<org.apache.http.entity.mime.MinimalField: java.lang.String getName()>();

        $z2 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r14);

        if $z2 == 0 goto label5;

        interfaceinvoke $r9.<java.util.Iterator: void remove()>();

        $i5 = (int) -1;

        if i0 != $i5 goto label5;

        i0 = i1;

     label5:
        i1 = i1 + 1;

        goto label4;

     label6:
        $r10 = r4.<org.apache.http.entity.mime.Header: java.util.List fields>;

        interfaceinvoke $r10.<java.util.List: void add(int,java.lang.Object)>(i0, r0);

        return;
    }

    public java.util.Iterator iterator()
    {
        java.util.List $r1, $r2;
        java.util.Iterator $r3;
        org.apache.http.entity.mime.Header r0;

        r0 := @this: org.apache.http.entity.mime.Header;

        $r1 = r0.<org.apache.http.entity.mime.Header: java.util.List fields>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        return $r3;
    }

    public java.lang.String toString()
    {
        java.util.List $r1;
        java.lang.String $r2;
        org.apache.http.entity.mime.Header r0;

        r0 := @this: org.apache.http.entity.mime.Header;

        $r1 = r0.<org.apache.http.entity.mime.Header: java.util.List fields>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }
}
