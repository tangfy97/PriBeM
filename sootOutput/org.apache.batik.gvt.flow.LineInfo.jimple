public class org.apache.batik.gvt.flow.LineInfo extends java.lang.Object
{
    org.apache.batik.gvt.flow.FlowRegions fr;
    double lineHeight;
    double ascent;
    double descent;
    double hLeading;
    double baseline;
    int numGlyphs;
    int words;
    int size;
    org.apache.batik.gvt.flow.GlyphGroupInfo[] ggis;
    int newSize;
    org.apache.batik.gvt.flow.GlyphGroupInfo[] newGGIS;
    int numRanges;
    double[] ranges;
    double[] rangeAdv;
    org.apache.batik.gvt.flow.BlockInfo bi;
    boolean paraStart;
    boolean paraEnd;
    protected static final int FULL_WORD;
    protected static final int FULL_ADV;
    static final float MAX_COMPRESS;
    static final float COMRESS_SCALE;

    public void <init>(org.apache.batik.gvt.flow.FlowRegions, org.apache.batik.gvt.flow.BlockInfo, boolean)
    {
        byte $b0;
        int $i1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16;
        boolean z0;
        org.apache.batik.gvt.flow.BlockInfo r2;
        float $f0, $f1, $f2, $f3;
        org.apache.batik.gvt.flow.FlowRegions r1;
        org.apache.batik.gvt.flow.LineInfo r0;

        r0 := @this: org.apache.batik.gvt.flow.LineInfo;

        r1 := @parameter0: org.apache.batik.gvt.flow.FlowRegions;

        r2 := @parameter1: org.apache.batik.gvt.flow.BlockInfo;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.gvt.flow.LineInfo: double lineHeight> = -1.0;

        r0.<org.apache.batik.gvt.flow.LineInfo: double ascent> = -1.0;

        r0.<org.apache.batik.gvt.flow.LineInfo: double descent> = -1.0;

        r0.<org.apache.batik.gvt.flow.LineInfo: double hLeading> = -1.0;

        r0.<org.apache.batik.gvt.flow.LineInfo: int words> = 0;

        r0.<org.apache.batik.gvt.flow.LineInfo: int size> = 0;

        r0.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.GlyphGroupInfo[] ggis> = null;

        r0.<org.apache.batik.gvt.flow.LineInfo: int newSize> = 0;

        r0.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.GlyphGroupInfo[] newGGIS> = null;

        r0.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.BlockInfo bi> = null;

        r0.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.FlowRegions fr> = r1;

        r0.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.BlockInfo bi> = r2;

        $f0 = virtualinvoke r2.<org.apache.batik.gvt.flow.BlockInfo: float getLineHeight()>();

        $d0 = (double) $f0;

        r0.<org.apache.batik.gvt.flow.LineInfo: double lineHeight> = $d0;

        $f1 = virtualinvoke r2.<org.apache.batik.gvt.flow.BlockInfo: float getAscent()>();

        $d1 = (double) $f1;

        r0.<org.apache.batik.gvt.flow.LineInfo: double ascent> = $d1;

        $f2 = virtualinvoke r2.<org.apache.batik.gvt.flow.BlockInfo: float getDescent()>();

        $d2 = (double) $f2;

        r0.<org.apache.batik.gvt.flow.LineInfo: double descent> = $d2;

        $d6 = r0.<org.apache.batik.gvt.flow.LineInfo: double lineHeight>;

        $d4 = r0.<org.apache.batik.gvt.flow.LineInfo: double ascent>;

        $d3 = r0.<org.apache.batik.gvt.flow.LineInfo: double descent>;

        $d5 = $d4 + $d3;

        $d7 = $d6 - $d5;

        $d8 = $d7 / 2.0;

        r0.<org.apache.batik.gvt.flow.LineInfo: double hLeading> = $d8;

        $d9 = virtualinvoke r1.<org.apache.batik.gvt.flow.FlowRegions: double getCurrentY()>();

        $d10 = r0.<org.apache.batik.gvt.flow.LineInfo: double hLeading>;

        $d12 = $d9 + $d10;

        $d11 = r0.<org.apache.batik.gvt.flow.LineInfo: double ascent>;

        $d13 = $d12 + $d11;

        $f3 = (float) $d13;

        $d14 = (double) $f3;

        r0.<org.apache.batik.gvt.flow.LineInfo: double baseline> = $d14;

        r0.<org.apache.batik.gvt.flow.LineInfo: boolean paraStart> = z0;

        r0.<org.apache.batik.gvt.flow.LineInfo: boolean paraEnd> = 0;

        $d15 = r0.<org.apache.batik.gvt.flow.LineInfo: double lineHeight>;

        $b0 = $d15 cmpl 0.0;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label1;

        $d16 = r0.<org.apache.batik.gvt.flow.LineInfo: double lineHeight>;

        virtualinvoke r1.<org.apache.batik.gvt.flow.FlowRegions: void newLineHeight(double)>($d16);

        virtualinvoke r0.<org.apache.batik.gvt.flow.LineInfo: boolean updateRangeInfo()>();

     label1:
        return;
    }

    public void setParaEnd(boolean)
    {
        org.apache.batik.gvt.flow.LineInfo r0;
        boolean z0;

        r0 := @this: org.apache.batik.gvt.flow.LineInfo;

        z0 := @parameter0: boolean;

        r0.<org.apache.batik.gvt.flow.LineInfo: boolean paraEnd> = z0;

        return;
    }

    public boolean addWord(org.apache.batik.gvt.flow.WordInfo)
    {
        byte $b0, $b1, $b2, $b3, $b4;
        boolean $z0, $z1, $z2;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        int $i5, $i6, $i7, $i8, $i9;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22;
        org.apache.batik.gvt.flow.WordInfo r0;
        org.apache.batik.gvt.flow.FlowRegions $r2, $r3, $r4;
        org.apache.batik.gvt.flow.LineInfo r1;

        r1 := @this: org.apache.batik.gvt.flow.LineInfo;

        r0 := @parameter0: org.apache.batik.gvt.flow.WordInfo;

        $f0 = virtualinvoke r0.<org.apache.batik.gvt.flow.WordInfo: float getLineHeight()>();

        d0 = (double) $f0;

        $d1 = r1.<org.apache.batik.gvt.flow.LineInfo: double lineHeight>;

        $b0 = d0 cmpg $d1;

        $i5 = (int) $b0;

        if $i5 > 0 goto label1;

        $z2 = virtualinvoke r1.<org.apache.batik.gvt.flow.LineInfo: boolean insertWord(org.apache.batik.gvt.flow.WordInfo)>(r0);

        return $z2;

     label1:
        $r2 = r1.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.FlowRegions fr>;

        virtualinvoke $r2.<org.apache.batik.gvt.flow.FlowRegions: void newLineHeight(double)>(d0);

        $z0 = virtualinvoke r1.<org.apache.batik.gvt.flow.LineInfo: boolean updateRangeInfo()>();

        if $z0 != 0 goto label3;

        $d21 = r1.<org.apache.batik.gvt.flow.LineInfo: double lineHeight>;

        $b4 = $d21 cmpl 0.0;

        $i6 = (int) $b4;

        if $i6 <= 0 goto label2;

        $r4 = r1.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.FlowRegions fr>;

        $d22 = r1.<org.apache.batik.gvt.flow.LineInfo: double lineHeight>;

        virtualinvoke $r4.<org.apache.batik.gvt.flow.FlowRegions: void newLineHeight(double)>($d22);

     label2:
        return 0;

     label3:
        $z1 = virtualinvoke r1.<org.apache.batik.gvt.flow.LineInfo: boolean insertWord(org.apache.batik.gvt.flow.WordInfo)>(r0);

        if $z1 != 0 goto label5;

        $d19 = r1.<org.apache.batik.gvt.flow.LineInfo: double lineHeight>;

        $b3 = $d19 cmpl 0.0;

        $i7 = (int) $b3;

        if $i7 <= 0 goto label4;

        $d20 = r1.<org.apache.batik.gvt.flow.LineInfo: double lineHeight>;

        virtualinvoke r1.<org.apache.batik.gvt.flow.LineInfo: boolean setLineHeight(double)>($d20);

     label4:
        return 0;

     label5:
        r1.<org.apache.batik.gvt.flow.LineInfo: double lineHeight> = d0;

        $f1 = virtualinvoke r0.<org.apache.batik.gvt.flow.WordInfo: float getAscent()>();

        $d3 = (double) $f1;

        $d2 = r1.<org.apache.batik.gvt.flow.LineInfo: double ascent>;

        $b1 = $d3 cmpl $d2;

        $i8 = (int) $b1;

        if $i8 <= 0 goto label6;

        $f5 = virtualinvoke r0.<org.apache.batik.gvt.flow.WordInfo: float getAscent()>();

        $d18 = (double) $f5;

        r1.<org.apache.batik.gvt.flow.LineInfo: double ascent> = $d18;

     label6:
        $f2 = virtualinvoke r0.<org.apache.batik.gvt.flow.WordInfo: float getDescent()>();

        $d5 = (double) $f2;

        $d4 = r1.<org.apache.batik.gvt.flow.LineInfo: double descent>;

        $b2 = $d5 cmpl $d4;

        $i9 = (int) $b2;

        if $i9 <= 0 goto label7;

        $f4 = virtualinvoke r0.<org.apache.batik.gvt.flow.WordInfo: float getDescent()>();

        $d17 = (double) $f4;

        r1.<org.apache.batik.gvt.flow.LineInfo: double descent> = $d17;

     label7:
        $d7 = r1.<org.apache.batik.gvt.flow.LineInfo: double ascent>;

        $d6 = r1.<org.apache.batik.gvt.flow.LineInfo: double descent>;

        $d8 = $d7 + $d6;

        $d9 = d0 - $d8;

        $d10 = $d9 / 2.0;

        r1.<org.apache.batik.gvt.flow.LineInfo: double hLeading> = $d10;

        $r3 = r1.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.FlowRegions fr>;

        $d11 = virtualinvoke $r3.<org.apache.batik.gvt.flow.FlowRegions: double getCurrentY()>();

        $d12 = r1.<org.apache.batik.gvt.flow.LineInfo: double hLeading>;

        $d14 = $d11 + $d12;

        $d13 = r1.<org.apache.batik.gvt.flow.LineInfo: double ascent>;

        $d15 = $d14 + $d13;

        $f3 = (float) $d15;

        $d16 = (double) $f3;

        r1.<org.apache.batik.gvt.flow.LineInfo: double baseline> = $d16;

        return 1;
    }

    public boolean insertWord(org.apache.batik.gvt.flow.WordInfo)
    {
        org.apache.batik.gvt.flow.GlyphGroupInfo[] $r2;
        org.apache.batik.gvt.flow.WordInfo r1;
        int $i0;
        org.apache.batik.gvt.flow.LineInfo r0;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.flow.LineInfo;

        r1 := @parameter0: org.apache.batik.gvt.flow.WordInfo;

        virtualinvoke r0.<org.apache.batik.gvt.flow.LineInfo: void mergeGlyphGroups(org.apache.batik.gvt.flow.WordInfo)>(r1);

        $i0 = r0.<org.apache.batik.gvt.flow.LineInfo: int newSize>;

        $r2 = r0.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.GlyphGroupInfo[] newGGIS>;

        $z0 = virtualinvoke r0.<org.apache.batik.gvt.flow.LineInfo: boolean assignGlyphGroupRanges(int,org.apache.batik.gvt.flow.GlyphGroupInfo[])>($i0, $r2);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        virtualinvoke r0.<org.apache.batik.gvt.flow.LineInfo: void swapGlyphGroupInfo()>();

        return 1;
    }

    public boolean assignGlyphGroupRanges(int, org.apache.batik.gvt.flow.GlyphGroupInfo[])
    {
        org.apache.batik.gvt.flow.GlyphGroupInfo[] r3;
        byte $b5, $b6;
        org.apache.batik.gvt.flow.GlyphGroupInfo $r4, r5, r6;
        float $f0, $f1, $f2, $f3, f4, f5, f6, $f7;
        double[] $r1, $r2, $r7;
        int $i0, $i1, $i2, $i3, i4, $i7, i8, i9, $i10, $i12, $i14, $i15;
        double $d0, $d1, d2, $d3, $d4, d5, $d6;
        org.apache.batik.gvt.flow.LineInfo r0;

        r0 := @this: org.apache.batik.gvt.flow.LineInfo;

        i4 := @parameter0: int;

        r3 := @parameter1: org.apache.batik.gvt.flow.GlyphGroupInfo[];

        i8 = 0;

        i9 = 0;

        goto label12;

     label01:
        $r1 = r0.<org.apache.batik.gvt.flow.LineInfo: double[] ranges>;

        $i1 = 2 * i9;

        $i2 = $i1 + 1;

        $d1 = $r1[$i2];

        $r2 = r0.<org.apache.batik.gvt.flow.LineInfo: double[] ranges>;

        $i3 = 2 * i9;

        $d0 = $r2[$i3];

        d2 = $d1 - $d0;

        f4 = 0.0F;

        f5 = 0.0F;

        goto label04;

     label02:
        r5 = r3[i8];

        virtualinvoke r5.<org.apache.batik.gvt.flow.GlyphGroupInfo: void setRange(int)>(i9);

        $f0 = virtualinvoke r5.<org.apache.batik.gvt.flow.GlyphGroupInfo: float getAdvance()>();

        f4 = $f0;

        $f1 = f5 + $f0;

        $d3 = (double) $f1;

        d5 = d2 - $d3;

        $b5 = d5 cmpg 0.0;

        $i10 = (int) $b5;

        if $i10 >= 0 goto label03;

        goto label05;

     label03:
        i8 = i8 + 1;

        f5 = f5 + $f0;

     label04:
        if i8 < i4 goto label02;

     label05:
        if i8 != i4 goto label06;

        $i12 = (int) -1;

        i8 = i8 + $i12;

        f5 = f5 - f4;

     label06:
        $r4 = r3[i8];

        f6 = virtualinvoke $r4.<org.apache.batik.gvt.flow.GlyphGroupInfo: float getLastAdvance()>();

        goto label10;

     label07:
        $i14 = (int) -1;

        i8 = i8 + $i14;

        f6 = 0.0F;

        if i8 >= 0 goto label08;

        goto label11;

     label08:
        r6 = r3[i8];

        $i7 = virtualinvoke r6.<org.apache.batik.gvt.flow.GlyphGroupInfo: int getRange()>();

        if i9 == $i7 goto label09;

        goto label11;

     label09:
        $f3 = virtualinvoke r6.<org.apache.batik.gvt.flow.GlyphGroupInfo: float getAdvance()>();

        f5 = f5 - $f3;

        f6 = virtualinvoke r6.<org.apache.batik.gvt.flow.GlyphGroupInfo: float getLastAdvance()>();

     label10:
        $f2 = f5 + f6;

        $d4 = (double) $f2;

        $b6 = $d4 cmpl d2;

        $i15 = (int) $b6;

        if $i15 > 0 goto label07;

     label11:
        i8 = i8 + 1;

        $r7 = r0.<org.apache.batik.gvt.flow.LineInfo: double[] rangeAdv>;

        $f7 = f5 + f6;

        $d6 = (double) $f7;

        $r7[i9] = $d6;

        i9 = i9 + 1;

        if i8 != i4 goto label12;

        return 1;

     label12:
        $i0 = r0.<org.apache.batik.gvt.flow.LineInfo: int numRanges>;

        if i9 < $i0 goto label01;

        return 0;
    }

    public boolean setLineHeight(double)
    {
        byte $b0;
        int $i1;
        org.apache.batik.gvt.flow.FlowRegions $r1, $r2;
        org.apache.batik.gvt.flow.LineInfo r0;
        double d0, $d1, $d2;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.flow.LineInfo;

        d0 := @parameter0: double;

        $r1 = r0.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.FlowRegions fr>;

        virtualinvoke $r1.<org.apache.batik.gvt.flow.FlowRegions: void newLineHeight(double)>(d0);

        $z0 = virtualinvoke r0.<org.apache.batik.gvt.flow.LineInfo: boolean updateRangeInfo()>();

        if $z0 == 0 goto label1;

        r0.<org.apache.batik.gvt.flow.LineInfo: double lineHeight> = d0;

        return 1;

     label1:
        $d1 = r0.<org.apache.batik.gvt.flow.LineInfo: double lineHeight>;

        $b0 = $d1 cmpl 0.0;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label2;

        $r2 = r0.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.FlowRegions fr>;

        $d2 = r0.<org.apache.batik.gvt.flow.LineInfo: double lineHeight>;

        virtualinvoke $r2.<org.apache.batik.gvt.flow.FlowRegions: void newLineHeight(double)>($d2);

     label2:
        return 0;
    }

    public double getCurrentY()
    {
        org.apache.batik.gvt.flow.FlowRegions $r1;
        org.apache.batik.gvt.flow.LineInfo r0;
        double $d0;

        r0 := @this: org.apache.batik.gvt.flow.LineInfo;

        $r1 = r0.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.FlowRegions fr>;

        $d0 = virtualinvoke $r1.<org.apache.batik.gvt.flow.FlowRegions: double getCurrentY()>();

        return $d0;
    }

    public boolean gotoY(double)
    {
        byte $b0;
        int $i1;
        float $f0;
        org.apache.batik.gvt.flow.FlowRegions $r1, $r2;
        org.apache.batik.gvt.flow.LineInfo r0;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.flow.LineInfo;

        d0 := @parameter0: double;

        $r1 = r0.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.FlowRegions fr>;

        $z0 = virtualinvoke $r1.<org.apache.batik.gvt.flow.FlowRegions: boolean gotoY(double)>(d0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $d1 = r0.<org.apache.batik.gvt.flow.LineInfo: double lineHeight>;

        $b0 = $d1 cmpl 0.0;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label2;

        virtualinvoke r0.<org.apache.batik.gvt.flow.LineInfo: boolean updateRangeInfo()>();

     label2:
        $r2 = r0.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.FlowRegions fr>;

        $d2 = virtualinvoke $r2.<org.apache.batik.gvt.flow.FlowRegions: double getCurrentY()>();

        $d3 = r0.<org.apache.batik.gvt.flow.LineInfo: double hLeading>;

        $d5 = $d2 + $d3;

        $d4 = r0.<org.apache.batik.gvt.flow.LineInfo: double ascent>;

        $d6 = $d5 + $d4;

        $f0 = (float) $d6;

        $d7 = (double) $f0;

        r0.<org.apache.batik.gvt.flow.LineInfo: double baseline> = $d7;

        return 0;
    }

    protected boolean updateRangeInfo()
    {
        byte $b6;
        boolean $z0;
        float $f0, $f1, $f2;
        double[] $r3, $r4, $r6, $r7, $r8, $r12, $r13, $r14, $r15, $r16;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, $i15, $i16, $i17, $i18;
        double $d0, d1, $d2, d3, d4, $d5, d6;
        org.apache.batik.gvt.flow.BlockInfo $r9, $r10, $r11;
        org.apache.batik.gvt.flow.FlowRegions $r1, $r2, $r5;
        org.apache.batik.gvt.flow.LineInfo r0;

        r0 := @this: org.apache.batik.gvt.flow.LineInfo;

        $r1 = r0.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.FlowRegions fr>;

        virtualinvoke $r1.<org.apache.batik.gvt.flow.FlowRegions: void resetRange()>();

        $r2 = r0.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.FlowRegions fr>;

        $i0 = virtualinvoke $r2.<org.apache.batik.gvt.flow.FlowRegions: int getNumRangeOnLine()>();

        if $i0 != 0 goto label01;

        return 0;

     label01:
        r0.<org.apache.batik.gvt.flow.LineInfo: int numRanges> = $i0;

        $r3 = r0.<org.apache.batik.gvt.flow.LineInfo: double[] ranges>;

        if $r3 != null goto label02;

        $i10 = r0.<org.apache.batik.gvt.flow.LineInfo: int numRanges>;

        $r15 = newarray (double)[$i10];

        r0.<org.apache.batik.gvt.flow.LineInfo: double[] rangeAdv> = $r15;

        $i11 = r0.<org.apache.batik.gvt.flow.LineInfo: int numRanges>;

        $i12 = 2 * $i11;

        $r16 = newarray (double)[$i12];

        r0.<org.apache.batik.gvt.flow.LineInfo: double[] ranges> = $r16;

        goto label04;

     label02:
        $i2 = r0.<org.apache.batik.gvt.flow.LineInfo: int numRanges>;

        $r4 = r0.<org.apache.batik.gvt.flow.LineInfo: double[] rangeAdv>;

        $i1 = lengthof $r4;

        if $i2 <= $i1 goto label04;

        $r12 = r0.<org.apache.batik.gvt.flow.LineInfo: double[] rangeAdv>;

        $i7 = lengthof $r12;

        i13 = 2 * $i7;

        $i8 = r0.<org.apache.batik.gvt.flow.LineInfo: int numRanges>;

        if i13 >= $i8 goto label03;

        i13 = r0.<org.apache.batik.gvt.flow.LineInfo: int numRanges>;

     label03:
        $r13 = newarray (double)[i13];

        r0.<org.apache.batik.gvt.flow.LineInfo: double[] rangeAdv> = $r13;

        $i9 = 2 * i13;

        $r14 = newarray (double)[$i9];

        r0.<org.apache.batik.gvt.flow.LineInfo: double[] ranges> = $r14;

     label04:
        i14 = 0;

        goto label10;

     label05:
        $r5 = r0.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.FlowRegions fr>;

        $r6 = virtualinvoke $r5.<org.apache.batik.gvt.flow.FlowRegions: double[] nextRange()>();

        d3 = $r6[0];

        if i14 != 0 goto label08;

        $r10 = r0.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.BlockInfo bi>;

        $f1 = virtualinvoke $r10.<org.apache.batik.gvt.flow.BlockInfo: float getLeftMargin()>();

        d4 = (double) $f1;

        $z0 = r0.<org.apache.batik.gvt.flow.LineInfo: boolean paraStart>;

        if $z0 == 0 goto label07;

        $r11 = r0.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.BlockInfo bi>;

        $f2 = virtualinvoke $r11.<org.apache.batik.gvt.flow.BlockInfo: float getIndent()>();

        d1 = (double) $f2;

        $d2 = neg d1;

        $b6 = d4 cmpg $d2;

        $i18 = (int) $b6;

        if $i18 >= 0 goto label06;

        d4 = 0.0;

        goto label07;

     label06:
        d4 = d4 + d1;

     label07:
        d3 = d3 + d4;

     label08:
        $d5 = $r6[1];

        d6 = $d5;

        $i15 = r0.<org.apache.batik.gvt.flow.LineInfo: int numRanges>;

        $i16 = $i15 - 1;

        if i14 != $i16 goto label09;

        $r9 = r0.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.BlockInfo bi>;

        $f0 = virtualinvoke $r9.<org.apache.batik.gvt.flow.BlockInfo: float getRightMargin()>();

        $d0 = (double) $f0;

        d6 = $d5 - $d0;

     label09:
        $r7 = r0.<org.apache.batik.gvt.flow.LineInfo: double[] ranges>;

        $i3 = 2 * i14;

        $r7[$i3] = d3;

        $r8 = r0.<org.apache.batik.gvt.flow.LineInfo: double[] ranges>;

        $i4 = 2 * i14;

        $i5 = $i4 + 1;

        $r8[$i5] = d6;

        i14 = i14 + 1;

     label10:
        $i17 = r0.<org.apache.batik.gvt.flow.LineInfo: int numRanges>;

        if i14 < $i17 goto label05;

        return 1;
    }

    protected void swapGlyphGroupInfo()
    {
        org.apache.batik.gvt.flow.GlyphGroupInfo[] r1, $r2;
        int $i0;
        org.apache.batik.gvt.flow.LineInfo r0;

        r0 := @this: org.apache.batik.gvt.flow.LineInfo;

        r1 = r0.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.GlyphGroupInfo[] ggis>;

        $r2 = r0.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.GlyphGroupInfo[] newGGIS>;

        r0.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.GlyphGroupInfo[] ggis> = $r2;

        r0.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.GlyphGroupInfo[] newGGIS> = r1;

        $i0 = r0.<org.apache.batik.gvt.flow.LineInfo: int newSize>;

        r0.<org.apache.batik.gvt.flow.LineInfo: int size> = $i0;

        r0.<org.apache.batik.gvt.flow.LineInfo: int newSize> = 0;

        return;
    }

    protected void mergeGlyphGroups(org.apache.batik.gvt.flow.WordInfo)
    {
        org.apache.batik.gvt.flow.GlyphGroupInfo[] $r2, $r4, $r5, $r6, $r7, $r8, $r10, $r12, $r13, $r14, $r15, $r17, $r18;
        org.apache.batik.gvt.flow.GlyphGroupInfo $r3, $r9, $r11, $r16, $r19, r20, r21, r22;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i20, i21, i22, $i23, $i24;
        org.apache.batik.gvt.flow.WordInfo r0;
        org.apache.batik.gvt.flow.LineInfo r1;

        r1 := @this: org.apache.batik.gvt.flow.LineInfo;

        r0 := @parameter0: org.apache.batik.gvt.flow.WordInfo;

        $i0 = virtualinvoke r0.<org.apache.batik.gvt.flow.WordInfo: int getNumGlyphGroups()>();

        r1.<org.apache.batik.gvt.flow.LineInfo: int newSize> = 0;

        $r2 = r1.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.GlyphGroupInfo[] ggis>;

        if $r2 != null goto label03;

        r1.<org.apache.batik.gvt.flow.LineInfo: int newSize> = $i0;

        $r17 = newarray (org.apache.batik.gvt.flow.GlyphGroupInfo)[$i0];

        r1.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.GlyphGroupInfo[] newGGIS> = $r17;

        i18 = 0;

        goto label02;

     label01:
        $r18 = r1.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.GlyphGroupInfo[] newGGIS>;

        $r19 = virtualinvoke r0.<org.apache.batik.gvt.flow.WordInfo: org.apache.batik.gvt.flow.GlyphGroupInfo getGlyphGroup(int)>(i18);

        $r18[i18] = $r19;

        i18 = i18 + 1;

     label02:
        if i18 < $i0 goto label01;

        goto label11;

     label03:
        i19 = 0;

        i20 = 0;

        $r3 = virtualinvoke r0.<org.apache.batik.gvt.flow.WordInfo: org.apache.batik.gvt.flow.GlyphGroupInfo getGlyphGroup(int)>(0);

        r20 = $r3;

        $i1 = virtualinvoke $r3.<org.apache.batik.gvt.flow.GlyphGroupInfo: int getStart()>();

        i21 = $i1;

        $r4 = r1.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.GlyphGroupInfo[] ggis>;

        $i2 = r1.<org.apache.batik.gvt.flow.LineInfo: int size>;

        $i3 = $i2 - 1;

        r21 = $r4[$i3];

        $i4 = virtualinvoke r21.<org.apache.batik.gvt.flow.GlyphGroupInfo: int getStart()>();

        $r5 = r1.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.GlyphGroupInfo[] newGGIS>;

        $i5 = r1.<org.apache.batik.gvt.flow.LineInfo: int size>;

        $i6 = $i5 + $i0;

        $r6 = staticinvoke <org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.GlyphGroupInfo[] assureSize(org.apache.batik.gvt.flow.GlyphGroupInfo[],int)>($r5, $i6);

        r1.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.GlyphGroupInfo[] newGGIS> = $r6;

        if $i1 >= $i4 goto label08;

        $r12 = r1.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.GlyphGroupInfo[] ggis>;

        r22 = $r12[0];

        i22 = virtualinvoke r22.<org.apache.batik.gvt.flow.GlyphGroupInfo: int getStart()>();

        goto label06;

     label04:
        if i21 >= i22 goto label05;

        $r15 = r1.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.GlyphGroupInfo[] newGGIS>;

        $i16 = r1.<org.apache.batik.gvt.flow.LineInfo: int newSize>;

        $i17 = $i16 + 1;

        r1.<org.apache.batik.gvt.flow.LineInfo: int newSize> = $i17;

        $r15[$i16] = r20;

        i20 = i20 + 1;

        if i20 >= $i0 goto label06;

        $r16 = virtualinvoke r0.<org.apache.batik.gvt.flow.WordInfo: org.apache.batik.gvt.flow.GlyphGroupInfo getGlyphGroup(int)>(i20);

        r20 = $r16;

        i21 = virtualinvoke $r16.<org.apache.batik.gvt.flow.GlyphGroupInfo: int getStart()>();

        goto label06;

     label05:
        $r13 = r1.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.GlyphGroupInfo[] newGGIS>;

        $i13 = r1.<org.apache.batik.gvt.flow.LineInfo: int newSize>;

        $i14 = $i13 + 1;

        r1.<org.apache.batik.gvt.flow.LineInfo: int newSize> = $i14;

        $r13[$i13] = r22;

        i19 = i19 + 1;

        $i15 = r1.<org.apache.batik.gvt.flow.LineInfo: int size>;

        if i19 >= $i15 goto label06;

        $r14 = r1.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.GlyphGroupInfo[] ggis>;

        r22 = $r14[i19];

        i22 = virtualinvoke r22.<org.apache.batik.gvt.flow.GlyphGroupInfo: int getStart()>();

     label06:
        $i23 = r1.<org.apache.batik.gvt.flow.LineInfo: int size>;

        if i19 >= $i23 goto label08;

        if i20 < $i0 goto label04;

        goto label08;

     label07:
        $r7 = r1.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.GlyphGroupInfo[] newGGIS>;

        $i7 = r1.<org.apache.batik.gvt.flow.LineInfo: int newSize>;

        $i8 = $i7 + 1;

        r1.<org.apache.batik.gvt.flow.LineInfo: int newSize> = $i8;

        $r8 = r1.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.GlyphGroupInfo[] ggis>;

        $i9 = i19;

        i19 = i19 + 1;

        $r9 = $r8[$i9];

        $r7[$i7] = $r9;

     label08:
        $i24 = r1.<org.apache.batik.gvt.flow.LineInfo: int size>;

        if i19 < $i24 goto label07;

        goto label10;

     label09:
        $r10 = r1.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.GlyphGroupInfo[] newGGIS>;

        $i10 = r1.<org.apache.batik.gvt.flow.LineInfo: int newSize>;

        $i11 = $i10 + 1;

        r1.<org.apache.batik.gvt.flow.LineInfo: int newSize> = $i11;

        $i12 = i20;

        i20 = i20 + 1;

        $r11 = virtualinvoke r0.<org.apache.batik.gvt.flow.WordInfo: org.apache.batik.gvt.flow.GlyphGroupInfo getGlyphGroup(int)>($i12);

        $r10[$i10] = $r11;

     label10:
        if i20 < $i0 goto label09;

     label11:
        return;
    }

    public void layout()
    {
        double[] $r15, $r16, $r17;
        boolean[] $r23;
        org.apache.batik.gvt.flow.BlockInfo $r18;
        org.apache.batik.gvt.flow.GlyphGroupInfo[] $r1, $r2, r7, $r8, $r9, $r13, $r20;
        java.awt.geom.Point2D $r14, $r24, r25;
        int[] r5, r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.batik.gvt.flow.GlyphGroupInfo $r3, $r10, $r11, r12, r19, $r21, r22;
        float $f0, $f1;
        org.apache.batik.gvt.font.GVTGlyphVector $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, i35, i36, $i37, $i38, $i39, $i40, $i41, $i42, i43, i44, i45, i46, i47, $i48, $i49, i50, $i51, $i53;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, d21, d22, d23, d24, d25, d26, $d27, d28;
        org.apache.batik.gvt.flow.LineInfo r0;

        r0 := @this: org.apache.batik.gvt.flow.LineInfo;

        $i0 = r0.<org.apache.batik.gvt.flow.LineInfo: int size>;

        if $i0 != 0 goto label01;

        return;

     label01:
        $i1 = r0.<org.apache.batik.gvt.flow.LineInfo: int size>;

        $r1 = r0.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.GlyphGroupInfo[] ggis>;

        virtualinvoke r0.<org.apache.batik.gvt.flow.LineInfo: boolean assignGlyphGroupRanges(int,org.apache.batik.gvt.flow.GlyphGroupInfo[])>($i1, $r1);

        $r2 = r0.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.GlyphGroupInfo[] ggis>;

        $r3 = $r2[0];

        $r4 = virtualinvoke $r3.<org.apache.batik.gvt.flow.GlyphGroupInfo: org.apache.batik.gvt.font.GVTGlyphVector getGlyphVector()>();

        d21 = 0.0;

        d22 = 0.0;

        $i2 = r0.<org.apache.batik.gvt.flow.LineInfo: int numRanges>;

        r5 = newarray (int)[$i2];

        $i3 = r0.<org.apache.batik.gvt.flow.LineInfo: int numRanges>;

        r6 = newarray (int)[$i3];

        $i4 = r0.<org.apache.batik.gvt.flow.LineInfo: int numRanges>;

        r7 = newarray (org.apache.batik.gvt.flow.GlyphGroupInfo)[$i4];

        $r8 = r0.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.GlyphGroupInfo[] ggis>;

        r19 = $r8[0];

        $i5 = virtualinvoke r19.<org.apache.batik.gvt.flow.GlyphGroupInfo: int getRange()>();

        i35 = $i5;

        $i6 = r5[$i5];

        $i7 = $i6 + 1;

        r5[$i5] = $i7;

        $i8 = r6[$i5];

        $i9 = virtualinvoke r19.<org.apache.batik.gvt.flow.GlyphGroupInfo: int getGlyphCount()>();

        $i10 = $i8 + $i9;

        r6[$i5] = $i10;

        i36 = 1;

        goto label06;

     label02:
        $r9 = r0.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.GlyphGroupInfo[] ggis>;

        r19 = $r9[i36];

        $i11 = virtualinvoke r19.<org.apache.batik.gvt.flow.GlyphGroupInfo: int getRange()>();

        i35 = $i11;

        $r10 = r7[$i11];

        if $r10 == null goto label03;

        $r11 = r7[$i11];

        $z0 = virtualinvoke $r11.<org.apache.batik.gvt.flow.GlyphGroupInfo: boolean getHideLast()>();

        if $z0 != 0 goto label04;

     label03:
        $i12 = r5[$i11];

        $i13 = $i12 + 1;

        r5[$i11] = $i13;

     label04:
        r7[$i11] = r19;

        $i37 = r6[$i11];

        $i38 = virtualinvoke r19.<org.apache.batik.gvt.flow.GlyphGroupInfo: int getGlyphCount()>();

        $i39 = $i37 + $i38;

        r6[$i11] = $i39;

        $r20 = r0.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.GlyphGroupInfo[] ggis>;

        $i40 = i36 - 1;

        $r21 = $r20[$i40];

        $i41 = virtualinvoke $r21.<org.apache.batik.gvt.flow.GlyphGroupInfo: int getRange()>();

        if $i11 == $i41 goto label05;

        $i14 = r6[$i41];

        $i15 = virtualinvoke $r21.<org.apache.batik.gvt.flow.GlyphGroupInfo: int getLastGlyphCount()>();

        $i16 = virtualinvoke $r21.<org.apache.batik.gvt.flow.GlyphGroupInfo: int getGlyphCount()>();

        $i17 = $i15 - $i16;

        $i18 = $i14 + $i17;

        r6[$i41] = $i18;

     label05:
        i36 = i36 + 1;

     label06:
        $i42 = r0.<org.apache.batik.gvt.flow.LineInfo: int size>;

        if i36 < $i42 goto label02;

        $i19 = r6[i35];

        $i20 = virtualinvoke r19.<org.apache.batik.gvt.flow.GlyphGroupInfo: int getLastGlyphCount()>();

        $i21 = virtualinvoke r19.<org.apache.batik.gvt.flow.GlyphGroupInfo: int getGlyphCount()>();

        $i22 = $i20 - $i21;

        $i23 = $i19 + $i22;

        r6[i35] = $i23;

        $i53 = (int) -1;

        i43 = $i53;

        d23 = 0.0;

        r22 = null;

        i44 = 0;

        goto label25;

     label07:
        r12 = r22;

        i24 = i43;

        $r13 = r0.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.GlyphGroupInfo[] ggis>;

        r22 = $r13[i44];

        $i25 = virtualinvoke r22.<org.apache.batik.gvt.flow.GlyphGroupInfo: int getRange()>();

        i43 = $i25;

        if $i25 == i24 goto label17;

        $r15 = r0.<org.apache.batik.gvt.flow.LineInfo: double[] ranges>;

        $i29 = 2 * $i25;

        d23 = $r15[$i29];

        $r16 = r0.<org.apache.batik.gvt.flow.LineInfo: double[] ranges>;

        $i30 = 2 * $i25;

        $i31 = $i30 + 1;

        $d15 = $r16[$i31];

        d24 = $d15 - d23;

        $r17 = r0.<org.apache.batik.gvt.flow.LineInfo: double[] rangeAdv>;

        d25 = $r17[$i25];

        $r18 = r0.<org.apache.batik.gvt.flow.LineInfo: org.apache.batik.gvt.flow.BlockInfo bi>;

        $i32 = virtualinvoke $r18.<org.apache.batik.gvt.flow.BlockInfo: int getTextAlignment()>();

        i45 = $i32;

        $z4 = r0.<org.apache.batik.gvt.flow.LineInfo: boolean paraEnd>;

        if $z4 == 0 goto label08;

        if $i32 != 3 goto label08;

        i45 = 0;

     label08:
        tableswitch(i45)
        {
            case 0: goto label13;
            case 1: goto label14;
            case 2: goto label15;
            case 3: goto label09;
            default: goto label09;
        };

     label09:
        d26 = d24 - d25;

        if 0 != 0 goto label11;

        $i34 = r5[$i25];

        i46 = $i34 - 1;

        if i46 < 1 goto label10;

        $d20 = (double) i46;

        d21 = d26 / $d20;

     label10:
        goto label12;

     label11:
        $i33 = r6[$i25];

        i47 = $i33 - 1;

        if i47 < 1 goto label12;

        $d19 = (double) i47;

        d22 = d26 / $d19;

     label12:
        goto label16;

     label13:
        goto label16;

     label14:
        $d17 = d24 - d25;

        $d18 = $d17 / 2.0;

        d23 = d23 + $d18;

        goto label16;

     label15:
        $d16 = d24 - d25;

        d23 = d23 + $d16;

     label16:
        goto label18;

     label17:
        if r12 == null goto label18;

        $z3 = virtualinvoke r12.<org.apache.batik.gvt.flow.GlyphGroupInfo: boolean getHideLast()>();

        if $z3 == 0 goto label18;

        $i28 = virtualinvoke r12.<org.apache.batik.gvt.flow.GlyphGroupInfo: int getEnd()>();

        interfaceinvoke $r4.<org.apache.batik.gvt.font.GVTGlyphVector: void setGlyphVisible(int,boolean)>($i28, 0);

     label18:
        $i48 = virtualinvoke r22.<org.apache.batik.gvt.flow.GlyphGroupInfo: int getStart()>();

        $i49 = virtualinvoke r22.<org.apache.batik.gvt.flow.GlyphGroupInfo: int getEnd()>();

        $r23 = virtualinvoke r22.<org.apache.batik.gvt.flow.GlyphGroupInfo: boolean[] getHide()>();

        $r24 = interfaceinvoke $r4.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.geom.Point2D getGlyphPosition(int)>($i48);

        r25 = $r24;

        $d27 = virtualinvoke $r24.<java.awt.geom.Point2D: double getX()>();

        d28 = 0.0;

        i50 = $i48;

        goto label22;

     label19:
        $i26 = i50 + 1;

        $r14 = interfaceinvoke $r4.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.geom.Point2D getGlyphPosition(int)>($i26);

        $i27 = i50 - $i48;

        $z1 = $r23[$i27];

        if $z1 == 0 goto label20;

        interfaceinvoke $r4.<org.apache.batik.gvt.font.GVTGlyphVector: void setGlyphVisible(int,boolean)>(i50, 0);

        $d7 = virtualinvoke $r14.<java.awt.geom.Point2D: double getX()>();

        $d8 = virtualinvoke r25.<java.awt.geom.Point2D: double getX()>();

        $d9 = $d7 - $d8;

        d28 = d28 + $d9;

        goto label21;

     label20:
        interfaceinvoke $r4.<org.apache.batik.gvt.font.GVTGlyphVector: void setGlyphVisible(int,boolean)>(i50, 1);

     label21:
        $d0 = virtualinvoke r25.<java.awt.geom.Point2D: double getX()>();

        $d1 = $d0 - $d27;

        $d2 = $d1 - d28;

        $d3 = $d2 + d23;

        $d4 = virtualinvoke r25.<java.awt.geom.Point2D: double getY()>();

        $d5 = r0.<org.apache.batik.gvt.flow.LineInfo: double baseline>;

        $d6 = $d4 + $d5;

        virtualinvoke r25.<java.awt.geom.Point2D: void setLocation(double,double)>($d3, $d6);

        interfaceinvoke $r4.<org.apache.batik.gvt.font.GVTGlyphVector: void setGlyphPosition(int,java.awt.geom.Point2D)>(i50, r25);

        r25 = $r14;

        d28 = d28 - d22;

        i50 = i50 + 1;

     label22:
        if i50 <= $i49 goto label19;

        $z2 = virtualinvoke r22.<org.apache.batik.gvt.flow.GlyphGroupInfo: boolean getHideLast()>();

        if $z2 == 0 goto label23;

        $f1 = virtualinvoke r22.<org.apache.batik.gvt.flow.GlyphGroupInfo: float getAdvance()>();

        $d13 = (double) $f1;

        $d14 = $d13 - d28;

        d23 = d23 + $d14;

        goto label24;

     label23:
        $f0 = virtualinvoke r22.<org.apache.batik.gvt.flow.GlyphGroupInfo: float getAdvance()>();

        $d10 = (double) $f0;

        $d11 = $d10 - d28;

        $d12 = $d11 + d21;

        d23 = d23 + $d12;

     label24:
        i44 = i44 + 1;

     label25:
        $i51 = r0.<org.apache.batik.gvt.flow.LineInfo: int size>;

        if i44 < $i51 goto label07;

        return;
    }

    public static org.apache.batik.gvt.flow.GlyphGroupInfo[] assureSize(org.apache.batik.gvt.flow.GlyphGroupInfo[], int)
    {
        org.apache.batik.gvt.flow.GlyphGroupInfo[] r0, $r1, $r2;
        int $i0, $i1, i2, i3;

        r0 := @parameter0: org.apache.batik.gvt.flow.GlyphGroupInfo[];

        i2 := @parameter1: int;

        if r0 != null goto label2;

        if i2 >= 10 goto label1;

        i2 = 10;

     label1:
        $r2 = newarray (org.apache.batik.gvt.flow.GlyphGroupInfo)[i2];

        return $r2;

     label2:
        $i0 = lengthof r0;

        if i2 > $i0 goto label3;

        return r0;

     label3:
        $i1 = lengthof r0;

        i3 = $i1 * 2;

        if i3 >= i2 goto label4;

        i3 = i2;

     label4:
        $r1 = newarray (org.apache.batik.gvt.flow.GlyphGroupInfo)[i3];

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.batik.gvt.flow.LineInfo: float COMRESS_SCALE> = 3.0F;

        <org.apache.batik.gvt.flow.LineInfo: float MAX_COMPRESS> = 0.1F;

        <org.apache.batik.gvt.flow.LineInfo: int FULL_ADV> = 1;

        <org.apache.batik.gvt.flow.LineInfo: int FULL_WORD> = 0;

        return;
    }
}
