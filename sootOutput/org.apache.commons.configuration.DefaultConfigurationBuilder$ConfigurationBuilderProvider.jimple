class org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationBuilderProvider extends org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider
{

    public void <init>()
    {
        org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationBuilderProvider r0;
        java.lang.Class $r1, $r2;

        r0 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationBuilderProvider;

        $r1 = <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$org$apache$commons$configuration$DefaultConfigurationBuilder>;

        if $r1 != null goto label1;

        $r2 = staticinvoke <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$(java.lang.String)>("org.apache.commons.configuration.DefaultConfigurationBuilder");

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$org$apache$commons$configuration$DefaultConfigurationBuilder> = $r2;

        goto label2;

     label1:
        $r2 = <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$org$apache$commons$configuration$DefaultConfigurationBuilder>;

     label2:
        specialinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider: void <init>(java.lang.Class)>($r2);

        return;
    }

    public org.apache.commons.configuration.AbstractConfiguration getConfiguration(org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationDeclaration) throws java.lang.Exception
    {
        org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationDeclaration r1;
        org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationBuilderProvider r0;
        org.apache.commons.configuration.DefaultConfigurationBuilder r3;
        org.apache.commons.configuration.AbstractConfiguration $r2;
        org.apache.commons.configuration.CombinedConfiguration $r4;

        r0 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationBuilderProvider;

        r1 := @parameter0: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationDeclaration;

        $r2 = specialinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider: org.apache.commons.configuration.AbstractConfiguration getConfiguration(org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationDeclaration)>(r1);

        r3 = (org.apache.commons.configuration.DefaultConfigurationBuilder) $r2;

        $r4 = virtualinvoke r3.<org.apache.commons.configuration.DefaultConfigurationBuilder: org.apache.commons.configuration.CombinedConfiguration getConfiguration(boolean)>(1);

        return $r4;
    }

    public org.apache.commons.configuration.AbstractConfiguration getEmptyConfiguration(org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationDeclaration) throws java.lang.Exception
    {
        org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationDeclaration r2;
        org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationBuilderProvider r1;
        org.apache.commons.configuration.CombinedConfiguration $r0;

        r1 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationBuilderProvider;

        r2 := @parameter0: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationDeclaration;

        $r0 = new org.apache.commons.configuration.CombinedConfiguration;

        specialinvoke $r0.<org.apache.commons.configuration.CombinedConfiguration: void <init>()>();

        return $r0;
    }
}
