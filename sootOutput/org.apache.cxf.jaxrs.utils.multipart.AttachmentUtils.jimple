public final class org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils extends java.lang.Object
{
    private static final java.util.logging.Logger LOG;
    private static final java.util.ResourceBundle BUNDLE;

    private void <init>()
    {
        org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils r0;

        r0 := @this: org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.cxf.jaxrs.ext.multipart.MultipartBody getMultipartBody(org.apache.cxf.jaxrs.ext.MessageContext)
    {
        org.apache.cxf.jaxrs.ext.multipart.MultipartBody $r2;
        java.lang.Object $r1;
        org.apache.cxf.jaxrs.ext.MessageContext r0;

        r0 := @parameter0: org.apache.cxf.jaxrs.ext.MessageContext;

        $r1 = interfaceinvoke r0.<org.apache.cxf.jaxrs.ext.MessageContext: java.lang.Object get(java.lang.Object)>("org.apache.cxf.jaxrs.attachments.inbound");

        $r2 = (org.apache.cxf.jaxrs.ext.multipart.MultipartBody) $r1;

        return $r2;
    }

    public static java.util.Map getChildAttachmentsMap(org.apache.cxf.jaxrs.ext.MessageContext, boolean)
    {
        java.util.List $r1;
        org.apache.cxf.jaxrs.ext.MessageContext r0;
        java.util.Map $r2;
        boolean z0;

        r0 := @parameter0: org.apache.cxf.jaxrs.ext.MessageContext;

        z0 := @parameter1: boolean;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils: java.util.List getChildAttachments(org.apache.cxf.jaxrs.ext.MessageContext)>(r0);

        $r2 = staticinvoke <org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils: java.util.Map fromListToMap(java.util.List,boolean)>($r1, z0);

        return $r2;
    }

    public static java.util.Map getChildAttachmentsMap(org.apache.cxf.jaxrs.ext.MessageContext)
    {
        java.util.List $r1;
        org.apache.cxf.jaxrs.ext.MessageContext r0;
        java.util.Map $r2;

        r0 := @parameter0: org.apache.cxf.jaxrs.ext.MessageContext;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils: java.util.List getChildAttachments(org.apache.cxf.jaxrs.ext.MessageContext)>(r0);

        $r2 = staticinvoke <org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils: java.util.Map fromListToMap(java.util.List,boolean)>($r1, 0);

        return $r2;
    }

    public static java.util.List getChildAttachments(org.apache.cxf.jaxrs.ext.MessageContext)
    {
        org.apache.cxf.jaxrs.ext.multipart.MultipartBody $r1;
        java.util.List $r2;
        org.apache.cxf.jaxrs.ext.MessageContext r0;

        r0 := @parameter0: org.apache.cxf.jaxrs.ext.MessageContext;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils: org.apache.cxf.jaxrs.ext.multipart.MultipartBody getMultipartBody(org.apache.cxf.jaxrs.ext.MessageContext)>(r0);

        $r2 = virtualinvoke $r1.<org.apache.cxf.jaxrs.ext.multipart.MultipartBody: java.util.List getChildAttachments()>();

        return $r2;
    }

    public static java.util.Map getAttachmentsMap(org.apache.cxf.jaxrs.ext.MessageContext, boolean)
    {
        java.util.List $r1;
        org.apache.cxf.jaxrs.ext.MessageContext r0;
        java.util.Map $r2;
        boolean z0;

        r0 := @parameter0: org.apache.cxf.jaxrs.ext.MessageContext;

        z0 := @parameter1: boolean;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils: java.util.List getAttachments(org.apache.cxf.jaxrs.ext.MessageContext)>(r0);

        $r2 = staticinvoke <org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils: java.util.Map fromListToMap(java.util.List,boolean)>($r1, z0);

        return $r2;
    }

    public static java.util.Map getAttachmentsMap(org.apache.cxf.jaxrs.ext.MessageContext)
    {
        java.util.List $r1;
        org.apache.cxf.jaxrs.ext.MessageContext r0;
        java.util.Map $r2;

        r0 := @parameter0: org.apache.cxf.jaxrs.ext.MessageContext;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils: java.util.List getAttachments(org.apache.cxf.jaxrs.ext.MessageContext)>(r0);

        $r2 = staticinvoke <org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils: java.util.Map fromListToMap(java.util.List,boolean)>($r1, 0);

        return $r2;
    }

    public static java.util.List getAttachments(org.apache.cxf.jaxrs.ext.MessageContext)
    {
        org.apache.cxf.jaxrs.ext.multipart.MultipartBody $r1;
        java.util.List $r2;
        org.apache.cxf.jaxrs.ext.MessageContext r0;

        r0 := @parameter0: org.apache.cxf.jaxrs.ext.MessageContext;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils: org.apache.cxf.jaxrs.ext.multipart.MultipartBody getMultipartBody(org.apache.cxf.jaxrs.ext.MessageContext)>(r0);

        $r2 = virtualinvoke $r1.<org.apache.cxf.jaxrs.ext.multipart.MultipartBody: java.util.List getAllAttachments()>();

        return $r2;
    }

    public static org.apache.cxf.jaxrs.ext.multipart.Attachment getFirstMatchingPart(org.apache.cxf.jaxrs.ext.MessageContext, org.apache.cxf.jaxrs.ext.multipart.Multipart)
    {
        org.apache.cxf.jaxrs.ext.MessageContext r0;
        org.apache.cxf.jaxrs.ext.multipart.Multipart r1;
        org.apache.cxf.jaxrs.ext.multipart.Attachment $r3;
        java.lang.String $r2;

        r0 := @parameter0: org.apache.cxf.jaxrs.ext.MessageContext;

        r1 := @parameter1: org.apache.cxf.jaxrs.ext.multipart.Multipart;

        $r2 = interfaceinvoke r1.<org.apache.cxf.jaxrs.ext.multipart.Multipart: java.lang.String value()>();

        $r3 = staticinvoke <org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils: org.apache.cxf.jaxrs.ext.multipart.Attachment getFirstMatchingPart(org.apache.cxf.jaxrs.ext.MessageContext,java.lang.String)>(r0, $r2);

        return $r3;
    }

    public static org.apache.cxf.jaxrs.ext.multipart.Attachment getFirstMatchingPart(org.apache.cxf.jaxrs.ext.MessageContext, java.lang.String)
    {
        org.apache.cxf.jaxrs.ext.multipart.Attachment $r2;
        java.lang.String r1;
        org.apache.cxf.jaxrs.ext.MessageContext r0;

        r0 := @parameter0: org.apache.cxf.jaxrs.ext.MessageContext;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils: org.apache.cxf.jaxrs.ext.multipart.Attachment getFirstMatchingPart(org.apache.cxf.jaxrs.ext.MessageContext,java.lang.String,java.lang.String)>(r0, r1, null);

        return $r2;
    }

    public static org.apache.cxf.jaxrs.ext.multipart.Attachment getFirstMatchingPart(org.apache.cxf.jaxrs.ext.MessageContext, java.lang.String, java.lang.String)
    {
        org.apache.cxf.jaxrs.ext.multipart.Attachment $r6;
        java.util.List $r1, $r4;
        org.apache.cxf.jaxrs.ext.MessageContext r0;
        java.lang.Object $r5;
        java.lang.String r2, r3;
        boolean $z0;

        r0 := @parameter0: org.apache.cxf.jaxrs.ext.MessageContext;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils: java.util.List getAttachments(org.apache.cxf.jaxrs.ext.MessageContext)>(r0);

        $r4 = staticinvoke <org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils: java.util.List getMatchingAttachments(java.lang.String,java.lang.String,java.util.List)>(r2, r3, $r1);

        $z0 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r6 = null;

        goto label2;

     label1:
        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (org.apache.cxf.jaxrs.ext.multipart.Attachment) $r5;

     label2:
        return $r6;
    }

    public static org.apache.cxf.jaxrs.ext.multipart.MultipartBody getMultipartBody(org.apache.cxf.jaxrs.ext.MessageContext, java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.cxf.jaxrs.ext.multipart.MultipartBody $r6;
        org.apache.cxf.jaxrs.ext.MessageContext r3;
        java.lang.Object $r4, $r5;
        java.lang.String r0, r1, r2, $r7;
        boolean $z0;

        r3 := @parameter0: org.apache.cxf.jaxrs.ext.MessageContext;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        if r0 == null goto label1;

        interfaceinvoke r3.<org.apache.cxf.jaxrs.ext.MessageContext: void put(java.lang.Object,java.lang.Object)>("attachment-directory", r0);

     label1:
        if r1 == null goto label2;

        interfaceinvoke r3.<org.apache.cxf.jaxrs.ext.MessageContext: void put(java.lang.Object,java.lang.Object)>("attachment-memory-threshold", r1);

     label2:
        if r2 == null goto label3;

        interfaceinvoke r3.<org.apache.cxf.jaxrs.ext.MessageContext: void put(java.lang.Object,java.lang.Object)>("attachment-max-size", r2);

     label3:
        $r4 = interfaceinvoke r3.<org.apache.cxf.jaxrs.ext.MessageContext: java.lang.Object get(java.lang.Object)>("org.apache.cxf.multipart.embedded");

        if $r4 == null goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        if $z0 == 0 goto label6;

        $r7 = "org.apache.cxf.jaxrs.attachments.inbound.embedded";

        goto label7;

     label6:
        $r7 = "org.apache.cxf.jaxrs.attachments.inbound";

     label7:
        $r5 = interfaceinvoke r3.<org.apache.cxf.jaxrs.ext.MessageContext: java.lang.Object get(java.lang.Object)>($r7);

        $r6 = (org.apache.cxf.jaxrs.ext.multipart.MultipartBody) $r5;

        return $r6;
    }

    public static java.util.List getAttachments(org.apache.cxf.jaxrs.ext.MessageContext, java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.cxf.jaxrs.ext.multipart.MultipartBody $r4;
        java.util.List $r5;
        org.apache.cxf.jaxrs.ext.MessageContext r0;
        java.lang.String r1, r2, r3;

        r0 := @parameter0: org.apache.cxf.jaxrs.ext.MessageContext;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r4 = staticinvoke <org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils: org.apache.cxf.jaxrs.ext.multipart.MultipartBody getMultipartBody(org.apache.cxf.jaxrs.ext.MessageContext,java.lang.String,java.lang.String,java.lang.String)>(r0, r1, r2, r3);

        $r5 = virtualinvoke $r4.<org.apache.cxf.jaxrs.ext.multipart.MultipartBody: java.util.List getAllAttachments()>();

        return $r5;
    }

    public static org.apache.cxf.jaxrs.ext.multipart.Attachment getMultipart(org.apache.cxf.jaxrs.ext.multipart.Multipart, javax.ws.rs.core.MediaType, java.util.List) throws java.io.IOException
    {
        java.lang.Object[] $r5;
        org.apache.cxf.jaxrs.ext.multipart.Attachment r18, $r21;
        org.apache.cxf.common.i18n.Message $r4;
        javax.ws.rs.core.MediaType r8, $r19;
        java.util.ResourceBundle $r6;
        org.apache.cxf.jaxrs.ext.multipart.Multipart r0;
        int $i0;
        javax.ws.rs.BadRequestException $r12;
        java.lang.String $r7, $r9, $r11, $r14, $r15, $r16, $r20;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r3;
        java.util.logging.Logger $r10;
        org.apache.cxf.jaxrs.utils.multipart.MultipartReadException $r13;
        java.util.List r1;
        java.lang.Object $r2, $r17;

        r0 := @parameter0: org.apache.cxf.jaxrs.ext.multipart.Multipart;

        r8 := @parameter1: javax.ws.rs.core.MediaType;

        r1 := @parameter2: java.util.List;

        if r0 == null goto label5;

        $r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r17 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r18 = (org.apache.cxf.jaxrs.ext.multipart.Attachment) $r17;

        $z2 = staticinvoke <org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils: boolean matchAttachmentId(org.apache.cxf.jaxrs.ext.multipart.Attachment,org.apache.cxf.jaxrs.ext.multipart.Multipart)>(r18, r0);

        if $z2 == 0 goto label2;

        $r19 = virtualinvoke r18.<org.apache.cxf.jaxrs.ext.multipart.Attachment: javax.ws.rs.core.MediaType getContentType()>();

        $r20 = interfaceinvoke r0.<org.apache.cxf.jaxrs.ext.multipart.Multipart: java.lang.String type()>();

        staticinvoke <org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils: void checkMediaTypes(javax.ws.rs.core.MediaType,java.lang.String)>($r19, $r20);

        return r18;

     label2:
        goto label1;

     label3:
        $z1 = interfaceinvoke r0.<org.apache.cxf.jaxrs.ext.multipart.Multipart: boolean required()>();

        if $z1 == 0 goto label4;

        $r4 = new org.apache.cxf.common.i18n.Message;

        $r6 = <org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils: java.util.ResourceBundle BUNDLE>;

        $r5 = newarray (java.lang.Object)[2];

        $r7 = interfaceinvoke r0.<org.apache.cxf.jaxrs.ext.multipart.Multipart: java.lang.String value()>();

        $r5[0] = $r7;

        $r9 = virtualinvoke r8.<javax.ws.rs.core.MediaType: java.lang.String toString()>();

        $r5[1] = $r9;

        specialinvoke $r4.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("MULTTIPART_ID_NOT_FOUND", $r6, $r5);

        $r10 = <org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils: java.util.logging.Logger LOG>;

        $r11 = virtualinvoke $r4.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        virtualinvoke $r10.<java.util.logging.Logger: void warning(java.lang.String)>($r11);

        $r12 = new javax.ws.rs.BadRequestException;

        $r13 = new org.apache.cxf.jaxrs.utils.multipart.MultipartReadException;

        $r14 = interfaceinvoke r0.<org.apache.cxf.jaxrs.ext.multipart.Multipart: java.lang.String value()>();

        $r15 = interfaceinvoke r0.<org.apache.cxf.jaxrs.ext.multipart.Multipart: java.lang.String type()>();

        $r16 = virtualinvoke $r4.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        specialinvoke $r13.<org.apache.cxf.jaxrs.utils.multipart.MultipartReadException: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r14, $r15, $r16);

        specialinvoke $r12.<javax.ws.rs.BadRequestException: void <init>(java.lang.Throwable)>($r13);

        throw $r12;

     label4:
        return null;

     label5:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 <= 0 goto label6;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r21 = (org.apache.cxf.jaxrs.ext.multipart.Attachment) $r2;

        goto label7;

     label6:
        $r21 = null;

     label7:
        return $r21;
    }

    public static java.util.List getMatchingAttachments(org.apache.cxf.jaxrs.ext.multipart.Multipart, java.util.List)
    {
        java.util.List r3, $r4;
        org.apache.cxf.jaxrs.ext.multipart.Multipart r0;
        java.lang.String $r1, $r2;

        r0 := @parameter0: org.apache.cxf.jaxrs.ext.multipart.Multipart;

        r3 := @parameter1: java.util.List;

        $r1 = interfaceinvoke r0.<org.apache.cxf.jaxrs.ext.multipart.Multipart: java.lang.String value()>();

        $r2 = interfaceinvoke r0.<org.apache.cxf.jaxrs.ext.multipart.Multipart: java.lang.String type()>();

        $r4 = staticinvoke <org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils: java.util.List getMatchingAttachments(java.lang.String,java.lang.String,java.util.List)>($r1, $r2, r3);

        return $r4;
    }

    public static java.util.List getMatchingAttachments(java.lang.String, java.util.List)
    {
        java.util.List r1, $r2;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils: java.util.List getMatchingAttachments(java.lang.String,java.lang.String,java.util.List)>(r0, null, r1);

        return $r2;
    }

    public static java.util.List getMatchingAttachments(java.lang.String, java.lang.String, java.util.List)
    {
        java.util.Iterator $r2;
        org.apache.cxf.jaxrs.ext.multipart.Attachment r4;
        java.util.List r1;
        javax.ws.rs.core.MediaType $r7;
        java.lang.Object $r3;
        java.lang.String r5, r6;
        java.util.LinkedList $r0;
        boolean $z0, $z1;

        r5 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        r1 := @parameter2: java.util.List;

        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.cxf.jaxrs.ext.multipart.Attachment) $r3;

        $z1 = staticinvoke <org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils: boolean matchAttachmentId(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.lang.String)>(r4, r5);

        if $z1 == 0 goto label3;

        if r6 == null goto label2;

        $r7 = virtualinvoke r4.<org.apache.cxf.jaxrs.ext.multipart.Attachment: javax.ws.rs.core.MediaType getContentType()>();

        staticinvoke <org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils: void checkMediaTypes(javax.ws.rs.core.MediaType,java.lang.String)>($r7, r6);

     label2:
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r4);

     label3:
        goto label1;

     label4:
        return $r0;
    }

    public static boolean matchAttachmentId(org.apache.cxf.jaxrs.ext.multipart.Attachment, org.apache.cxf.jaxrs.ext.multipart.Multipart)
    {
        org.apache.cxf.jaxrs.ext.multipart.Multipart r1;
        org.apache.cxf.jaxrs.ext.multipart.Attachment r0;
        java.lang.String $r2;
        boolean $z0;

        r0 := @parameter0: org.apache.cxf.jaxrs.ext.multipart.Attachment;

        r1 := @parameter1: org.apache.cxf.jaxrs.ext.multipart.Multipart;

        $r2 = interfaceinvoke r1.<org.apache.cxf.jaxrs.ext.multipart.Multipart: java.lang.String value()>();

        $z0 = staticinvoke <org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils: boolean matchAttachmentId(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.lang.String)>(r0, $r2);

        return $z0;
    }

    public static boolean matchAttachmentId(org.apache.cxf.jaxrs.ext.multipart.Attachment, java.lang.String)
    {
        org.apache.cxf.jaxrs.ext.multipart.ContentDisposition $r3;
        org.apache.cxf.jaxrs.ext.multipart.Attachment r1;
        java.lang.String r0, $r2, $r4;
        boolean $z0, $z1, $z2;

        r1 := @parameter0: org.apache.cxf.jaxrs.ext.multipart.Attachment;

        r0 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r2 = virtualinvoke r1.<org.apache.cxf.jaxrs.ext.multipart.Attachment: java.lang.String getContentId()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $r3 = virtualinvoke r1.<org.apache.cxf.jaxrs.ext.multipart.Attachment: org.apache.cxf.jaxrs.ext.multipart.ContentDisposition getContentDisposition()>();

        if $r3 == null goto label3;

        $r4 = virtualinvoke $r3.<org.apache.cxf.jaxrs.ext.multipart.ContentDisposition: java.lang.String getParameter(java.lang.String)>("name");

        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public static javax.ws.rs.core.MultivaluedMap populateFormMap(org.apache.cxf.jaxrs.ext.MessageContext, boolean)
    {
        org.apache.cxf.jaxrs.ext.multipart.MultipartBody $r2;
        org.apache.cxf.jaxrs.ext.MessageContext r1;
        org.apache.cxf.message.Message $r3;
        org.apache.cxf.jaxrs.impl.MetadataMap $r0;
        boolean z0;

        r1 := @parameter0: org.apache.cxf.jaxrs.ext.MessageContext;

        z0 := @parameter1: boolean;

        $r0 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        specialinvoke $r0.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>()>();

        $r2 = staticinvoke <org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils: org.apache.cxf.jaxrs.ext.multipart.MultipartBody getMultipartBody(org.apache.cxf.jaxrs.ext.MessageContext)>(r1);

        $r3 = staticinvoke <org.apache.cxf.phase.PhaseInterceptorChain: org.apache.cxf.message.Message getCurrentMessage()>();

        staticinvoke <org.apache.cxf.jaxrs.utils.FormUtils: void populateMapFromMultipart(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.ext.multipart.MultipartBody,org.apache.cxf.message.Message,boolean)>($r0, $r2, $r3, 1);

        return $r0;
    }

    public static javax.ws.rs.core.MultivaluedMap populateFormMap(org.apache.cxf.jaxrs.ext.MessageContext)
    {
        javax.ws.rs.core.MultivaluedMap $r1;
        org.apache.cxf.jaxrs.ext.MessageContext r0;

        r0 := @parameter0: org.apache.cxf.jaxrs.ext.MessageContext;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils: javax.ws.rs.core.MultivaluedMap populateFormMap(org.apache.cxf.jaxrs.ext.MessageContext,boolean)>(r0, 1);

        return $r1;
    }

    private static java.util.Map fromListToMap(java.util.List, boolean)
    {
        java.util.Iterator $r2;
        org.apache.cxf.jaxrs.ext.multipart.ContentDisposition $r5;
        org.apache.cxf.jaxrs.ext.multipart.Attachment r4;
        java.util.LinkedHashMap $r0;
        java.util.List r1;
        java.lang.Object $r3;
        java.lang.String r6;
        boolean $z0, z1;

        r1 := @parameter0: java.util.List;

        z1 := @parameter1: boolean;

        $r0 = new java.util.LinkedHashMap;

        specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.cxf.jaxrs.ext.multipart.Attachment) $r3;

        r6 = null;

        if z1 == 0 goto label2;

        $r5 = virtualinvoke r4.<org.apache.cxf.jaxrs.ext.multipart.Attachment: org.apache.cxf.jaxrs.ext.multipart.ContentDisposition getContentDisposition()>();

        if $r5 == null goto label2;

        r6 = virtualinvoke $r5.<org.apache.cxf.jaxrs.ext.multipart.ContentDisposition: java.lang.String getParameter(java.lang.String)>("name");

     label2:
        if r6 != null goto label3;

        r6 = virtualinvoke r4.<org.apache.cxf.jaxrs.ext.multipart.Attachment: java.lang.String getContentId()>();

     label3:
        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r4);

        goto label1;

     label4:
        return $r0;
    }

    private static void checkMediaTypes(javax.ws.rs.core.MediaType, java.lang.String)
    {
        javax.ws.rs.core.MediaType r0, $r2;
        java.lang.String r1;
        boolean $z0;
        javax.ws.rs.NotSupportedException $r3;

        r0 := @parameter0: javax.ws.rs.core.MediaType;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.MediaType toMediaType(java.lang.String)>(r1);

        $z0 = virtualinvoke r0.<javax.ws.rs.core.MediaType: boolean isCompatible(javax.ws.rs.core.MediaType)>($r2);

        if $z0 != 0 goto label1;

        $r3 = new javax.ws.rs.NotSupportedException;

        specialinvoke $r3.<javax.ws.rs.NotSupportedException: void <init>()>();

        throw $r3;

     label1:
        return;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;
        java.util.ResourceBundle $r1;

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/utils/JAXRSUtils;");

        <org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils: java.util.logging.Logger LOG> = $r0;

        $r1 = staticinvoke <org.apache.cxf.common.i18n.BundleUtils: java.util.ResourceBundle getBundle(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/utils/JAXRSUtils;");

        <org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils: java.util.ResourceBundle BUNDLE> = $r1;

        return;
    }
}
