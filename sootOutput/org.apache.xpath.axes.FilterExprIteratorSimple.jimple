public class org.apache.xpath.axes.FilterExprIteratorSimple extends org.apache.xpath.axes.LocPathIterator
{
    private org.apache.xpath.Expression m_expr;
    private transient org.apache.xpath.objects.XNodeSet m_exprObj;
    private boolean m_mustHardReset;
    private boolean m_canDetachNodeset;

    public void <init>()
    {
        org.apache.xpath.axes.FilterExprIteratorSimple r0;

        r0 := @this: org.apache.xpath.axes.FilterExprIteratorSimple;

        specialinvoke r0.<org.apache.xpath.axes.LocPathIterator: void <init>(org.apache.xml.utils.PrefixResolver)>(null);

        r0.<org.apache.xpath.axes.FilterExprIteratorSimple: boolean m_mustHardReset> = 0;

        r0.<org.apache.xpath.axes.FilterExprIteratorSimple: boolean m_canDetachNodeset> = 1;

        return;
    }

    public void <init>(org.apache.xpath.Expression)
    {
        org.apache.xpath.Expression r1;
        org.apache.xpath.axes.FilterExprIteratorSimple r0;

        r0 := @this: org.apache.xpath.axes.FilterExprIteratorSimple;

        r1 := @parameter0: org.apache.xpath.Expression;

        specialinvoke r0.<org.apache.xpath.axes.LocPathIterator: void <init>(org.apache.xml.utils.PrefixResolver)>(null);

        r0.<org.apache.xpath.axes.FilterExprIteratorSimple: boolean m_mustHardReset> = 0;

        r0.<org.apache.xpath.axes.FilterExprIteratorSimple: boolean m_canDetachNodeset> = 1;

        r0.<org.apache.xpath.axes.FilterExprIteratorSimple: org.apache.xpath.Expression m_expr> = r1;

        return;
    }

    public void setRoot(int, java.lang.Object)
    {
        org.apache.xpath.Expression $r4;
        org.apache.xpath.objects.XNodeSet $r5;
        org.apache.xpath.axes.FilterExprIteratorSimple r0;
        org.apache.xpath.XPathContext $r2;
        int i0, $i1;
        java.lang.Object r1;
        org.apache.xml.utils.PrefixResolver $r3;
        boolean $z0;

        r0 := @this: org.apache.xpath.axes.FilterExprIteratorSimple;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.apache.xpath.axes.LocPathIterator: void setRoot(int,java.lang.Object)>(i0, r1);

        $r2 = r0.<org.apache.xpath.axes.LocPathIterator: org.apache.xpath.XPathContext m_execContext>;

        $r3 = virtualinvoke r0.<org.apache.xpath.axes.LocPathIterator: org.apache.xml.utils.PrefixResolver getPrefixResolver()>();

        $z0 = virtualinvoke r0.<org.apache.xpath.axes.LocPathIterator: boolean getIsTopLevel()>();

        $i1 = r0.<org.apache.xpath.axes.LocPathIterator: int m_stackFrame>;

        $r4 = r0.<org.apache.xpath.axes.FilterExprIteratorSimple: org.apache.xpath.Expression m_expr>;

        $r5 = staticinvoke <org.apache.xpath.axes.FilterExprIteratorSimple: org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)>(i0, $r2, $r3, $z0, $i1, $r4);

        r0.<org.apache.xpath.axes.FilterExprIteratorSimple: org.apache.xpath.objects.XNodeSet m_exprObj> = $r5;

        return;
    }

    public static org.apache.xpath.objects.XNodeSet executeFilterExpr(int, org.apache.xpath.XPathContext, org.apache.xml.utils.PrefixResolver, boolean, int, org.apache.xpath.Expression) throws org.apache.xml.utils.WrappedRuntimeException
    {
        java.lang.Throwable $r7;
        org.apache.xpath.Expression r3;
        org.apache.xml.utils.WrappedRuntimeException $r9;
        javax.xml.transform.TransformerException $r8;
        org.apache.xpath.objects.XNodeSet r10;
        org.apache.xpath.VariableStack $r5;
        org.apache.xpath.XPathContext r0;
        int i0, $i1, i2;
        org.apache.xpath.objects.XObject $r4, $r6;
        org.apache.xml.utils.PrefixResolver $r1, r2;
        boolean z0;

        i0 := @parameter0: int;

        r0 := @parameter1: org.apache.xpath.XPathContext;

        r2 := @parameter2: org.apache.xml.utils.PrefixResolver;

        z0 := @parameter3: boolean;

        i2 := @parameter4: int;

        r3 := @parameter5: org.apache.xpath.Expression;

        $r1 = virtualinvoke r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.PrefixResolver getNamespaceContext()>();

     label01:
        virtualinvoke r0.<org.apache.xpath.XPathContext: void pushCurrentNode(int)>(i0);

        virtualinvoke r0.<org.apache.xpath.XPathContext: void setNamespaceContext(org.apache.xml.utils.PrefixResolver)>(r2);

        if z0 == 0 goto label02;

        $r5 = virtualinvoke r0.<org.apache.xpath.XPathContext: org.apache.xpath.VariableStack getVarStack()>();

        $i1 = virtualinvoke $r5.<org.apache.xpath.VariableStack: int getStackFrame()>();

        virtualinvoke $r5.<org.apache.xpath.VariableStack: void setStackFrame(int)>(i2);

        $r6 = virtualinvoke r3.<org.apache.xpath.Expression: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r0);

        r10 = (org.apache.xpath.objects.XNodeSet) $r6;

        virtualinvoke r10.<org.apache.xpath.axes.NodeSequence: void setShouldCacheNodes(boolean)>(1);

        virtualinvoke $r5.<org.apache.xpath.VariableStack: void setStackFrame(int)>($i1);

        goto label03;

     label02:
        $r4 = virtualinvoke r3.<org.apache.xpath.Expression: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r0);

        r10 = (org.apache.xpath.objects.XNodeSet) $r4;

     label03:
        goto label09;

     label04:
        goto label08;

     label05:
        $r8 := @caughtexception;

        $r9 = new org.apache.xml.utils.WrappedRuntimeException;

        specialinvoke $r9.<org.apache.xml.utils.WrappedRuntimeException: void <init>(java.lang.Exception)>($r8);

        throw $r9;

     label06:
        $r7 := @caughtexception;

        goto label10;

     label07:
        throw $r7;

     label08:
        return r10;

     label09:
        virtualinvoke r0.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        virtualinvoke r0.<org.apache.xpath.XPathContext: void setNamespaceContext(org.apache.xml.utils.PrefixResolver)>($r1);

        goto label04;

     label10:
        virtualinvoke r0.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        virtualinvoke r0.<org.apache.xpath.XPathContext: void setNamespaceContext(org.apache.xml.utils.PrefixResolver)>($r1);

        goto label07;

        catch javax.xml.transform.TransformerException from label01 to label03 with label05;
        catch java.lang.Throwable from label01 to label06 with label06;
    }

    public int nextNode()
    {
        org.apache.xpath.objects.XNodeSet $r1, $r2;
        org.apache.xpath.axes.FilterExprIteratorSimple r0;
        int $i0, $i1, $i2, i3, $i5, $i7, $i9, $i11, $i13;
        boolean $z0;

        r0 := @this: org.apache.xpath.axes.FilterExprIteratorSimple;

        $z0 = r0.<org.apache.xpath.axes.PredicatedNodeTest: boolean m_foundLast>;

        if $z0 == 0 goto label1;

        $i5 = (int) -1;

        return $i5;

     label1:
        $r1 = r0.<org.apache.xpath.axes.FilterExprIteratorSimple: org.apache.xpath.objects.XNodeSet m_exprObj>;

        if null == $r1 goto label2;

        $r2 = r0.<org.apache.xpath.axes.FilterExprIteratorSimple: org.apache.xpath.objects.XNodeSet m_exprObj>;

        $i2 = virtualinvoke $r2.<org.apache.xpath.axes.NodeSequence: int nextNode()>();

        i3 = $i2;

        r0.<org.apache.xpath.axes.LocPathIterator: int m_lastFetched> = $i2;

        goto label3;

     label2:
        $i7 = (int) -1;

        i3 = $i7;

        $i9 = (int) -1;

        r0.<org.apache.xpath.axes.LocPathIterator: int m_lastFetched> = $i9;

     label3:
        $i11 = (int) -1;

        if $i11 == i3 goto label4;

        $i0 = r0.<org.apache.xpath.axes.LocPathIterator: int m_pos>;

        $i1 = $i0 + 1;

        r0.<org.apache.xpath.axes.LocPathIterator: int m_pos> = $i1;

        return i3;

     label4:
        r0.<org.apache.xpath.axes.PredicatedNodeTest: boolean m_foundLast> = 1;

        $i13 = (int) -1;

        return $i13;
    }

    public void detach()
    {
        org.apache.xpath.objects.XNodeSet $r1;
        org.apache.xpath.axes.FilterExprIteratorSimple r0;
        boolean $z0;

        r0 := @this: org.apache.xpath.axes.FilterExprIteratorSimple;

        $z0 = r0.<org.apache.xpath.axes.LocPathIterator: boolean m_allowDetach>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.apache.xpath.axes.LocPathIterator: void detach()>();

        $r1 = r0.<org.apache.xpath.axes.FilterExprIteratorSimple: org.apache.xpath.objects.XNodeSet m_exprObj>;

        virtualinvoke $r1.<org.apache.xpath.axes.NodeSequence: void detach()>();

        r0.<org.apache.xpath.axes.FilterExprIteratorSimple: org.apache.xpath.objects.XNodeSet m_exprObj> = null;

     label1:
        return;
    }

    public void fixupVariables(java.util.Vector, int)
    {
        org.apache.xpath.Expression $r2;
        java.util.Vector r1;
        org.apache.xpath.axes.FilterExprIteratorSimple r0;
        int i0;

        r0 := @this: org.apache.xpath.axes.FilterExprIteratorSimple;

        r1 := @parameter0: java.util.Vector;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.xpath.axes.PredicatedNodeTest: void fixupVariables(java.util.Vector,int)>(r1, i0);

        $r2 = r0.<org.apache.xpath.axes.FilterExprIteratorSimple: org.apache.xpath.Expression m_expr>;

        virtualinvoke $r2.<org.apache.xpath.Expression: void fixupVariables(java.util.Vector,int)>(r1, i0);

        return;
    }

    public org.apache.xpath.Expression getInnerExpression()
    {
        org.apache.xpath.Expression $r1;
        org.apache.xpath.axes.FilterExprIteratorSimple r0;

        r0 := @this: org.apache.xpath.axes.FilterExprIteratorSimple;

        $r1 = r0.<org.apache.xpath.axes.FilterExprIteratorSimple: org.apache.xpath.Expression m_expr>;

        return $r1;
    }

    public void setInnerExpression(org.apache.xpath.Expression)
    {
        org.apache.xpath.Expression r0;
        org.apache.xpath.axes.FilterExprIteratorSimple r1;

        r1 := @this: org.apache.xpath.axes.FilterExprIteratorSimple;

        r0 := @parameter0: org.apache.xpath.Expression;

        virtualinvoke r0.<org.apache.xpath.Expression: void exprSetParent(org.apache.xpath.ExpressionNode)>(r1);

        r1.<org.apache.xpath.axes.FilterExprIteratorSimple: org.apache.xpath.Expression m_expr> = r0;

        return;
    }

    public int getAnalysisBits()
    {
        org.apache.xpath.Expression $r1, $r2, $r3;
        org.apache.xpath.axes.FilterExprIteratorSimple r0;
        int $i0;
        org.apache.xpath.axes.PathComponent $r4;
        boolean $z0;

        r0 := @this: org.apache.xpath.axes.FilterExprIteratorSimple;

        $r1 = r0.<org.apache.xpath.axes.FilterExprIteratorSimple: org.apache.xpath.Expression m_expr>;

        if null == $r1 goto label1;

        $r2 = r0.<org.apache.xpath.axes.FilterExprIteratorSimple: org.apache.xpath.Expression m_expr>;

        $z0 = $r2 instanceof org.apache.xpath.axes.PathComponent;

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.xpath.axes.FilterExprIteratorSimple: org.apache.xpath.Expression m_expr>;

        $r4 = (org.apache.xpath.axes.PathComponent) $r3;

        $i0 = interfaceinvoke $r4.<org.apache.xpath.axes.PathComponent: int getAnalysisBits()>();

        return $i0;

     label1:
        return 67108864;
    }

    public boolean isDocOrdered()
    {
        org.apache.xpath.objects.XNodeSet $r1;
        org.apache.xpath.axes.FilterExprIteratorSimple r0;
        boolean $z0;

        r0 := @this: org.apache.xpath.axes.FilterExprIteratorSimple;

        $r1 = r0.<org.apache.xpath.axes.FilterExprIteratorSimple: org.apache.xpath.objects.XNodeSet m_exprObj>;

        $z0 = virtualinvoke $r1.<org.apache.xpath.axes.NodeSequence: boolean isDocOrdered()>();

        return $z0;
    }

    public void callPredicateVisitors(org.apache.xpath.XPathVisitor)
    {
        org.apache.xpath.Expression $r2;
        org.apache.xpath.XPathVisitor r3;
        org.apache.xpath.axes.FilterExprIteratorSimple r0;
        org.apache.xpath.axes.FilterExprIteratorSimple$filterExprOwner $r1;

        r0 := @this: org.apache.xpath.axes.FilterExprIteratorSimple;

        r3 := @parameter0: org.apache.xpath.XPathVisitor;

        $r2 = r0.<org.apache.xpath.axes.FilterExprIteratorSimple: org.apache.xpath.Expression m_expr>;

        $r1 = new org.apache.xpath.axes.FilterExprIteratorSimple$filterExprOwner;

        specialinvoke $r1.<org.apache.xpath.axes.FilterExprIteratorSimple$filterExprOwner: void <init>(org.apache.xpath.axes.FilterExprIteratorSimple)>(r0);

        virtualinvoke $r2.<org.apache.xpath.Expression: void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)>($r1, r3);

        specialinvoke r0.<org.apache.xpath.axes.PredicatedNodeTest: void callPredicateVisitors(org.apache.xpath.XPathVisitor)>(r3);

        return;
    }

    public boolean deepEquals(org.apache.xpath.Expression)
    {
        org.apache.xpath.Expression r1, $r3, $r4;
        org.apache.xpath.axes.FilterExprIteratorSimple r0, r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.xpath.axes.FilterExprIteratorSimple;

        r1 := @parameter0: org.apache.xpath.Expression;

        $z0 = specialinvoke r0.<org.apache.xpath.axes.PredicatedNodeTest: boolean deepEquals(org.apache.xpath.Expression)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.apache.xpath.axes.FilterExprIteratorSimple) r1;

        $r4 = r0.<org.apache.xpath.axes.FilterExprIteratorSimple: org.apache.xpath.Expression m_expr>;

        $r3 = r2.<org.apache.xpath.axes.FilterExprIteratorSimple: org.apache.xpath.Expression m_expr>;

        $z1 = virtualinvoke $r4.<org.apache.xpath.Expression: boolean deepEquals(org.apache.xpath.Expression)>($r3);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        return 1;
    }

    public int getAxis()
    {
        org.apache.xpath.objects.XNodeSet $r1, $r2;
        org.apache.xpath.axes.FilterExprIteratorSimple r0;
        int $i0;

        r0 := @this: org.apache.xpath.axes.FilterExprIteratorSimple;

        $r1 = r0.<org.apache.xpath.axes.FilterExprIteratorSimple: org.apache.xpath.objects.XNodeSet m_exprObj>;

        if null == $r1 goto label1;

        $r2 = r0.<org.apache.xpath.axes.FilterExprIteratorSimple: org.apache.xpath.objects.XNodeSet m_exprObj>;

        $i0 = virtualinvoke $r2.<org.apache.xpath.axes.NodeSequence: int getAxis()>();

        return $i0;

     label1:
        return 20;
    }

    static org.apache.xpath.Expression access$000(org.apache.xpath.axes.FilterExprIteratorSimple)
    {
        org.apache.xpath.Expression $r1;
        org.apache.xpath.axes.FilterExprIteratorSimple r0;

        r0 := @parameter0: org.apache.xpath.axes.FilterExprIteratorSimple;

        $r1 = r0.<org.apache.xpath.axes.FilterExprIteratorSimple: org.apache.xpath.Expression m_expr>;

        return $r1;
    }

    static org.apache.xpath.Expression access$002(org.apache.xpath.axes.FilterExprIteratorSimple, org.apache.xpath.Expression)
    {
        org.apache.xpath.Expression r1;
        org.apache.xpath.axes.FilterExprIteratorSimple r0;

        r0 := @parameter0: org.apache.xpath.axes.FilterExprIteratorSimple;

        r1 := @parameter1: org.apache.xpath.Expression;

        r0.<org.apache.xpath.axes.FilterExprIteratorSimple: org.apache.xpath.Expression m_expr> = r1;

        return r1;
    }
}
