public class org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory extends java.lang.Object implements javax.validation.ConstraintValidatorFactory
{
    private final org.springframework.beans.factory.config.AutowireCapableBeanFactory beanFactory;

    public void <init>(org.springframework.beans.factory.config.AutowireCapableBeanFactory)
    {
        org.springframework.beans.factory.config.AutowireCapableBeanFactory r1;
        org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory r0;

        r0 := @this: org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory;

        r1 := @parameter0: org.springframework.beans.factory.config.AutowireCapableBeanFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "BeanFactory must not be null");

        r0.<org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory: org.springframework.beans.factory.config.AutowireCapableBeanFactory beanFactory> = r1;

        return;
    }

    public javax.validation.ConstraintValidator getInstance(java.lang.Class)
    {
        javax.validation.ConstraintValidator $r4;
        org.springframework.beans.factory.config.AutowireCapableBeanFactory $r2;
        org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory r0;
        java.lang.Class r1;
        java.lang.Object $r3;

        r0 := @this: org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory: org.springframework.beans.factory.config.AutowireCapableBeanFactory beanFactory>;

        $r3 = interfaceinvoke $r2.<org.springframework.beans.factory.config.AutowireCapableBeanFactory: java.lang.Object createBean(java.lang.Class)>(r1);

        $r4 = (javax.validation.ConstraintValidator) $r3;

        return $r4;
    }
}
