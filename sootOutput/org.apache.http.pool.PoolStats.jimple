public class org.apache.http.pool.PoolStats extends java.lang.Object
{
    private final int leased;
    private final int pending;
    private final int available;
    private final int max;

    public void <init>(int, int, int, int)
    {
        int i0, i1, i2, i3;
        org.apache.http.pool.PoolStats r0;

        r0 := @this: org.apache.http.pool.PoolStats;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.http.pool.PoolStats: int leased> = i0;

        r0.<org.apache.http.pool.PoolStats: int pending> = i1;

        r0.<org.apache.http.pool.PoolStats: int available> = i2;

        r0.<org.apache.http.pool.PoolStats: int max> = i3;

        return;
    }

    public int getLeased()
    {
        int $i0;
        org.apache.http.pool.PoolStats r0;

        r0 := @this: org.apache.http.pool.PoolStats;

        $i0 = r0.<org.apache.http.pool.PoolStats: int leased>;

        return $i0;
    }

    public int getPending()
    {
        int $i0;
        org.apache.http.pool.PoolStats r0;

        r0 := @this: org.apache.http.pool.PoolStats;

        $i0 = r0.<org.apache.http.pool.PoolStats: int pending>;

        return $i0;
    }

    public int getAvailable()
    {
        int $i0;
        org.apache.http.pool.PoolStats r0;

        r0 := @this: org.apache.http.pool.PoolStats;

        $i0 = r0.<org.apache.http.pool.PoolStats: int available>;

        return $i0;
    }

    public int getMax()
    {
        int $i0;
        org.apache.http.pool.PoolStats r0;

        r0 := @this: org.apache.http.pool.PoolStats;

        $i0 = r0.<org.apache.http.pool.PoolStats: int max>;

        return $i0;
    }

    public java.lang.String toString()
    {
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r0;
        java.lang.String $r2;
        org.apache.http.pool.PoolStats r1;

        r1 := @this: org.apache.http.pool.PoolStats;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[leased: ");

        $i0 = r1.<org.apache.http.pool.PoolStats: int leased>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; pending: ");

        $i1 = r1.<org.apache.http.pool.PoolStats: int pending>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; available: ");

        $i2 = r1.<org.apache.http.pool.PoolStats: int available>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; max: ");

        $i3 = r1.<org.apache.http.pool.PoolStats: int max>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
