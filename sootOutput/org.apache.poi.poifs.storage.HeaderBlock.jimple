public final class org.apache.poi.poifs.storage.HeaderBlock extends java.lang.Object implements org.apache.poi.poifs.storage.HeaderBlockConstants
{
    private static final org.apache.poi.util.POILogger _logger;
    private final org.apache.poi.poifs.common.POIFSBigBlockSize bigBlockSize;
    private int _bat_count;
    private int _property_start;
    private int _sbat_start;
    private int _sbat_count;
    private int _xbat_start;
    private int _xbat_count;
    private final byte[] _data;
    private static final byte _default_value;

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        byte[] $r2, r5;
        org.apache.poi.poifs.common.POIFSBigBlockSize $r3, $r4;
        int $i0, $i1, i2;
        org.apache.poi.poifs.storage.HeaderBlock r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.poi.poifs.storage.HeaderBlock;

        r1 := @parameter0: java.io.InputStream;

        $r2 = staticinvoke <org.apache.poi.poifs.storage.HeaderBlock: byte[] readFirst512(java.io.InputStream)>(r1);

        specialinvoke r0.<org.apache.poi.poifs.storage.HeaderBlock: void <init>(byte[])>($r2);

        $r3 = r0.<org.apache.poi.poifs.storage.HeaderBlock: org.apache.poi.poifs.common.POIFSBigBlockSize bigBlockSize>;

        $i0 = virtualinvoke $r3.<org.apache.poi.poifs.common.POIFSBigBlockSize: int getBigBlockSize()>();

        if $i0 == 512 goto label1;

        $r4 = r0.<org.apache.poi.poifs.storage.HeaderBlock: org.apache.poi.poifs.common.POIFSBigBlockSize bigBlockSize>;

        $i1 = virtualinvoke $r4.<org.apache.poi.poifs.common.POIFSBigBlockSize: int getBigBlockSize()>();

        i2 = $i1 - 512;

        r5 = newarray (byte)[i2];

        staticinvoke <org.apache.poi.util.IOUtils: int readFully(java.io.InputStream,byte[])>(r1, r5);

     label1:
        return;
    }

    public void <init>(java.nio.ByteBuffer) throws java.io.IOException
    {
        byte[] $r2;
        org.apache.poi.poifs.storage.HeaderBlock r0;
        java.nio.ByteBuffer r1;

        r0 := @this: org.apache.poi.poifs.storage.HeaderBlock;

        r1 := @parameter0: java.nio.ByteBuffer;

        $r2 = staticinvoke <org.apache.poi.util.IOUtils: byte[] toByteArray(java.nio.ByteBuffer,int)>(r1, 512);

        specialinvoke r0.<org.apache.poi.poifs.storage.HeaderBlock: void <init>(byte[])>($r2);

        return;
    }

    private void <init>(byte[]) throws java.io.IOException
    {
        byte[] r1, $r2, $r3, $r4, $r8, $r15, $r17, $r19, $r21, $r23, r25, $r26, $r39, $r40, $r41;
        org.apache.poi.poifs.filesystem.OfficeXmlFileException $r43;
        byte $b1, $b2, $b3, $b4, $b11, $b12, $b13, $b14, $b15, $b16, $b17, $b18, $b20;
        java.lang.StringBuilder $r7, $r9, $r10, $r29, $r31, $r32, $r34, $r35, $r36, $r45, $r47;
        long $l0, $l19;
        java.lang.String $r11, $r30, $r33, $r37;
        java.io.IOException $r46, $r48;
        int $i5, $i6, $i7, $i8, $i9, $i10, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31;
        org.apache.poi.poifs.storage.HeaderBlock r0;
        java.lang.IllegalArgumentException $r44;
        org.apache.poi.poifs.common.POIFSBigBlockSize $r12, $r24;
        org.apache.poi.util.IntegerField $r49, $r50, $r51, $r52, $r53, $r54;

        r0 := @this: org.apache.poi.poifs.storage.HeaderBlock;

        r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data> = r1;

        $r2 = r0.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        $l0 = staticinvoke <org.apache.poi.util.LittleEndian: long getLong(byte[],int)>($r2, 0);

        $b1 = $l0 cmp -2226271756974174256L;

        if $b1 == 0 goto label3;

        r25 = <org.apache.poi.poifs.common.POIFSConstants: byte[] OOXML_FILE_HEADER>;

        $r26 = r0.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        $b12 = $r26[0];

        $b11 = r25[0];

        $i21 = (int) $b12;

        $i22 = (int) $b11;

        if $i21 != $i22 goto label1;

        $r39 = r0.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        $b14 = $r39[1];

        $b13 = r25[1];

        $i23 = (int) $b14;

        $i24 = (int) $b13;

        if $i23 != $i24 goto label1;

        $r40 = r0.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        $b16 = $r40[2];

        $b15 = r25[2];

        $i25 = (int) $b16;

        $i26 = (int) $b15;

        if $i25 != $i26 goto label1;

        $r41 = r0.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        $b18 = $r41[3];

        $b17 = r25[3];

        $i27 = (int) $b18;

        $i28 = (int) $b17;

        if $i27 != $i28 goto label1;

        $r43 = new org.apache.poi.poifs.filesystem.OfficeXmlFileException;

        specialinvoke $r43.<org.apache.poi.poifs.filesystem.OfficeXmlFileException: void <init>(java.lang.String)>("The supplied data appears to be in the Office 2007+ XML. You are calling the part of POI that deals with OLE2 Office Documents. You need to call a different part of POI to process this data (eg XSSF instead of HSSF)");

        throw $r43;

     label1:
        $l19 = $l0 & -31525197391593473L;

        $b20 = $l19 cmp 4503608217567241L;

        if $b20 != 0 goto label2;

        $r44 = new java.lang.IllegalArgumentException;

        specialinvoke $r44.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The supplied data appears to be in BIFF2 format.  POI only supports BIFF8 format");

        throw $r44;

     label2:
        $r46 = new java.io.IOException;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid header signature; read ");

        $r30 = staticinvoke <org.apache.poi.poifs.storage.HeaderBlock: java.lang.String longToHex(long)>($l0);

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", expected ");

        $r33 = staticinvoke <org.apache.poi.poifs.storage.HeaderBlock: java.lang.String longToHex(long)>(-2226271756974174256L);

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - Your file appears ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not to be a valid OLE2 document");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r46.<java.io.IOException: void <init>(java.lang.String)>($r37);

        throw $r46;

     label3:
        $r3 = r0.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        $b2 = $r3[30];

        $i29 = (int) $b2;

        if $i29 != 12 goto label4;

        $r24 = <org.apache.poi.poifs.common.POIFSConstants: org.apache.poi.poifs.common.POIFSBigBlockSize LARGER_BIG_BLOCK_SIZE_DETAILS>;

        r0.<org.apache.poi.poifs.storage.HeaderBlock: org.apache.poi.poifs.common.POIFSBigBlockSize bigBlockSize> = $r24;

        goto label6;

     label4:
        $r4 = r0.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        $b3 = $r4[30];

        $i30 = (int) $b3;

        if $i30 != 9 goto label5;

        $r12 = <org.apache.poi.poifs.common.POIFSConstants: org.apache.poi.poifs.common.POIFSBigBlockSize SMALLER_BIG_BLOCK_SIZE_DETAILS>;

        r0.<org.apache.poi.poifs.storage.HeaderBlock: org.apache.poi.poifs.common.POIFSBigBlockSize bigBlockSize> = $r12;

        goto label6;

     label5:
        $r48 = new java.io.IOException;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported blocksize  (2^");

        $r8 = r0.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        $b4 = $r8[30];

        $i31 = (int) $b4;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i31);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("). Expected 2^9 or 2^12.");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r48.<java.io.IOException: void <init>(java.lang.String)>($r11);

        throw $r48;

     label6:
        $r49 = new org.apache.poi.util.IntegerField;

        specialinvoke $r49.<org.apache.poi.util.IntegerField: void <init>(int,byte[])>(44, r1);

        $i5 = virtualinvoke $r49.<org.apache.poi.util.IntegerField: int get()>();

        r0.<org.apache.poi.poifs.storage.HeaderBlock: int _bat_count> = $i5;

        $r50 = new org.apache.poi.util.IntegerField;

        $r15 = r0.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        specialinvoke $r50.<org.apache.poi.util.IntegerField: void <init>(int,byte[])>(48, $r15);

        $i6 = virtualinvoke $r50.<org.apache.poi.util.IntegerField: int get()>();

        r0.<org.apache.poi.poifs.storage.HeaderBlock: int _property_start> = $i6;

        $r51 = new org.apache.poi.util.IntegerField;

        $r17 = r0.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        specialinvoke $r51.<org.apache.poi.util.IntegerField: void <init>(int,byte[])>(60, $r17);

        $i7 = virtualinvoke $r51.<org.apache.poi.util.IntegerField: int get()>();

        r0.<org.apache.poi.poifs.storage.HeaderBlock: int _sbat_start> = $i7;

        $r52 = new org.apache.poi.util.IntegerField;

        $r19 = r0.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        specialinvoke $r52.<org.apache.poi.util.IntegerField: void <init>(int,byte[])>(64, $r19);

        $i8 = virtualinvoke $r52.<org.apache.poi.util.IntegerField: int get()>();

        r0.<org.apache.poi.poifs.storage.HeaderBlock: int _sbat_count> = $i8;

        $r53 = new org.apache.poi.util.IntegerField;

        $r21 = r0.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        specialinvoke $r53.<org.apache.poi.util.IntegerField: void <init>(int,byte[])>(68, $r21);

        $i9 = virtualinvoke $r53.<org.apache.poi.util.IntegerField: int get()>();

        r0.<org.apache.poi.poifs.storage.HeaderBlock: int _xbat_start> = $i9;

        $r54 = new org.apache.poi.util.IntegerField;

        $r23 = r0.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        specialinvoke $r54.<org.apache.poi.util.IntegerField: void <init>(int,byte[])>(72, $r23);

        $i10 = virtualinvoke $r54.<org.apache.poi.util.IntegerField: int get()>();

        r0.<org.apache.poi.poifs.storage.HeaderBlock: int _xbat_count> = $i10;

        return;
    }

    public void <init>(org.apache.poi.poifs.common.POIFSBigBlockSize)
    {
        byte[] $r2, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31;
        org.apache.poi.util.LongField $r32;
        short $s0, $s2;
        int $i4, $i6, $i8;
        org.apache.poi.poifs.storage.HeaderBlock r0;
        org.apache.poi.util.ShortField $r37, $r38, $r39, $r40;
        org.apache.poi.poifs.common.POIFSBigBlockSize r1;
        org.apache.poi.util.IntegerField $r33, $r34, $r35, $r36, $r41, $r42, $r43, $r44, $r45;

        r0 := @this: org.apache.poi.poifs.storage.HeaderBlock;

        r1 := @parameter0: org.apache.poi.poifs.common.POIFSBigBlockSize;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.poifs.storage.HeaderBlock: org.apache.poi.poifs.common.POIFSBigBlockSize bigBlockSize> = r1;

        $r2 = newarray (byte)[512];

        r0.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data> = $r2;

        $r3 = r0.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>($r3, -1);

        $r32 = new org.apache.poi.util.LongField;

        $r5 = r0.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        specialinvoke $r32.<org.apache.poi.util.LongField: void <init>(int,long,byte[])>(0, -2226271756974174256L, $r5);

        $r33 = new org.apache.poi.util.IntegerField;

        $r7 = r0.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        specialinvoke $r33.<org.apache.poi.util.IntegerField: void <init>(int,int,byte[])>(8, 0, $r7);

        $r34 = new org.apache.poi.util.IntegerField;

        $r9 = r0.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        specialinvoke $r34.<org.apache.poi.util.IntegerField: void <init>(int,int,byte[])>(12, 0, $r9);

        $r35 = new org.apache.poi.util.IntegerField;

        $r11 = r0.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        specialinvoke $r35.<org.apache.poi.util.IntegerField: void <init>(int,int,byte[])>(16, 0, $r11);

        $r36 = new org.apache.poi.util.IntegerField;

        $r13 = r0.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        specialinvoke $r36.<org.apache.poi.util.IntegerField: void <init>(int,int,byte[])>(20, 0, $r13);

        $r37 = new org.apache.poi.util.ShortField;

        $r15 = r0.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        specialinvoke $r37.<org.apache.poi.util.ShortField: void <init>(int,short,byte[])>(24, 59, $r15);

        $r38 = new org.apache.poi.util.ShortField;

        $r17 = r0.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        specialinvoke $r38.<org.apache.poi.util.ShortField: void <init>(int,short,byte[])>(26, 3, $r17);

        $r39 = new org.apache.poi.util.ShortField;

        $r19 = r0.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        $s2 = (short) -2;

        specialinvoke $r39.<org.apache.poi.util.ShortField: void <init>(int,short,byte[])>(28, $s2, $r19);

        $r40 = new org.apache.poi.util.ShortField;

        $s0 = virtualinvoke r1.<org.apache.poi.poifs.common.POIFSBigBlockSize: short getHeaderValue()>();

        $r21 = r0.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        specialinvoke $r40.<org.apache.poi.util.ShortField: void <init>(int,short,byte[])>(30, $s0, $r21);

        $r41 = new org.apache.poi.util.IntegerField;

        $r23 = r0.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        specialinvoke $r41.<org.apache.poi.util.IntegerField: void <init>(int,int,byte[])>(32, 6, $r23);

        $r42 = new org.apache.poi.util.IntegerField;

        $r25 = r0.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        specialinvoke $r42.<org.apache.poi.util.IntegerField: void <init>(int,int,byte[])>(36, 0, $r25);

        $r43 = new org.apache.poi.util.IntegerField;

        $r27 = r0.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        specialinvoke $r43.<org.apache.poi.util.IntegerField: void <init>(int,int,byte[])>(40, 0, $r27);

        $r44 = new org.apache.poi.util.IntegerField;

        $r29 = r0.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        specialinvoke $r44.<org.apache.poi.util.IntegerField: void <init>(int,int,byte[])>(52, 0, $r29);

        $r45 = new org.apache.poi.util.IntegerField;

        $r31 = r0.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        specialinvoke $r45.<org.apache.poi.util.IntegerField: void <init>(int,int,byte[])>(56, 4096, $r31);

        r0.<org.apache.poi.poifs.storage.HeaderBlock: int _bat_count> = 0;

        r0.<org.apache.poi.poifs.storage.HeaderBlock: int _sbat_count> = 0;

        r0.<org.apache.poi.poifs.storage.HeaderBlock: int _xbat_count> = 0;

        $i4 = (int) -2;

        r0.<org.apache.poi.poifs.storage.HeaderBlock: int _property_start> = $i4;

        $i6 = (int) -2;

        r0.<org.apache.poi.poifs.storage.HeaderBlock: int _sbat_start> = $i6;

        $i8 = (int) -2;

        r0.<org.apache.poi.poifs.storage.HeaderBlock: int _xbat_start> = $i8;

        return;
    }

    private static byte[] readFirst512(java.io.InputStream) throws java.io.IOException
    {
        byte[] r0;
        int $i0;
        java.io.IOException $r2;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        r0 = newarray (byte)[512];

        $i0 = staticinvoke <org.apache.poi.util.IOUtils: int readFully(java.io.InputStream,byte[])>(r1, r0);

        if $i0 == 512 goto label1;

        $r2 = staticinvoke <org.apache.poi.poifs.storage.HeaderBlock: java.io.IOException alertShortRead(int,int)>($i0, 512);

        throw $r2;

     label1:
        return r0;
    }

    private static java.lang.String longToHex(long)
    {
        char[] $r1;
        long l0;
        java.lang.String $r0;

        l0 := @parameter0: long;

        $r0 = new java.lang.String;

        $r1 = staticinvoke <org.apache.poi.util.HexDump: char[] longToHex(long)>(l0);

        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r1);

        return $r0;
    }

    private static java.io.IOException alertShortRead(int, int)
    {
        int i0, i1, i2;
        java.lang.String $r3, $r12, $r13;
        java.io.IOException $r4;
        java.lang.StringBuilder $r0, $r1, $r2, $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 >= 0 goto label1;

        i2 = 0;

        goto label2;

     label1:
        i2 = i0;

     label2:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" byte");

        if i2 != 1 goto label3;

        $r13 = "";

        goto label4;

     label3:
        $r13 = "s";

     label4:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.io.IOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to read entire header; ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" read; expected ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r12);

        return $r4;
    }

    public int getPropertyStart()
    {
        int $i0;
        org.apache.poi.poifs.storage.HeaderBlock r0;

        r0 := @this: org.apache.poi.poifs.storage.HeaderBlock;

        $i0 = r0.<org.apache.poi.poifs.storage.HeaderBlock: int _property_start>;

        return $i0;
    }

    public void setPropertyStart(int)
    {
        int i0;
        org.apache.poi.poifs.storage.HeaderBlock r0;

        r0 := @this: org.apache.poi.poifs.storage.HeaderBlock;

        i0 := @parameter0: int;

        r0.<org.apache.poi.poifs.storage.HeaderBlock: int _property_start> = i0;

        return;
    }

    public int getSBATStart()
    {
        int $i0;
        org.apache.poi.poifs.storage.HeaderBlock r0;

        r0 := @this: org.apache.poi.poifs.storage.HeaderBlock;

        $i0 = r0.<org.apache.poi.poifs.storage.HeaderBlock: int _sbat_start>;

        return $i0;
    }

    public int getSBATCount()
    {
        int $i0;
        org.apache.poi.poifs.storage.HeaderBlock r0;

        r0 := @this: org.apache.poi.poifs.storage.HeaderBlock;

        $i0 = r0.<org.apache.poi.poifs.storage.HeaderBlock: int _sbat_count>;

        return $i0;
    }

    public void setSBATStart(int)
    {
        int i0;
        org.apache.poi.poifs.storage.HeaderBlock r0;

        r0 := @this: org.apache.poi.poifs.storage.HeaderBlock;

        i0 := @parameter0: int;

        r0.<org.apache.poi.poifs.storage.HeaderBlock: int _sbat_start> = i0;

        return;
    }

    public void setSBATBlockCount(int)
    {
        int i0;
        org.apache.poi.poifs.storage.HeaderBlock r0;

        r0 := @this: org.apache.poi.poifs.storage.HeaderBlock;

        i0 := @parameter0: int;

        r0.<org.apache.poi.poifs.storage.HeaderBlock: int _sbat_count> = i0;

        return;
    }

    public int getBATCount()
    {
        int $i0;
        org.apache.poi.poifs.storage.HeaderBlock r0;

        r0 := @this: org.apache.poi.poifs.storage.HeaderBlock;

        $i0 = r0.<org.apache.poi.poifs.storage.HeaderBlock: int _bat_count>;

        return $i0;
    }

    public void setBATCount(int)
    {
        int i0;
        org.apache.poi.poifs.storage.HeaderBlock r0;

        r0 := @this: org.apache.poi.poifs.storage.HeaderBlock;

        i0 := @parameter0: int;

        r0.<org.apache.poi.poifs.storage.HeaderBlock: int _bat_count> = i0;

        return;
    }

    public int[] getBATArray()
    {
        byte[] $r2;
        int[] r1;
        int $i0, $i1, $i2, $i3, i4, i5;
        org.apache.poi.poifs.storage.HeaderBlock r0;

        r0 := @this: org.apache.poi.poifs.storage.HeaderBlock;

        $i0 = r0.<org.apache.poi.poifs.storage.HeaderBlock: int _bat_count>;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i0, 109);

        r1 = newarray (int)[$i1];

        i4 = 76;

        i5 = 0;

     label1:
        $i2 = lengthof r1;

        if i5 >= $i2 goto label2;

        $r2 = r0.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        $i3 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r2, i4);

        r1[i5] = $i3;

        i4 = i4 + 4;

        i5 = i5 + 1;

        goto label1;

     label2:
        return r1;
    }

    public void setBATArray(int[])
    {
        byte[] $r2, $r3;
        int[] r0;
        int $i0, $i1, i2, $i3, i4, i5, i6, $i8;
        org.apache.poi.poifs.storage.HeaderBlock r1;

        r1 := @this: org.apache.poi.poifs.storage.HeaderBlock;

        r0 := @parameter0: int[];

        $i0 = lengthof r0;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i0, 109);

        i2 = 109 - $i1;

        i4 = 76;

        i5 = 0;

     label1:
        if i5 >= $i1 goto label2;

        $r3 = r1.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        $i3 = r0[i5];

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>($r3, i4, $i3);

        i4 = i4 + 4;

        i5 = i5 + 1;

        goto label1;

     label2:
        i6 = 0;

     label3:
        if i6 >= i2 goto label4;

        $r2 = r1.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        $i8 = (int) -1;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>($r2, i4, $i8);

        i4 = i4 + 4;

        i6 = i6 + 1;

        goto label3;

     label4:
        return;
    }

    public int getXBATCount()
    {
        int $i0;
        org.apache.poi.poifs.storage.HeaderBlock r0;

        r0 := @this: org.apache.poi.poifs.storage.HeaderBlock;

        $i0 = r0.<org.apache.poi.poifs.storage.HeaderBlock: int _xbat_count>;

        return $i0;
    }

    public void setXBATCount(int)
    {
        int i0;
        org.apache.poi.poifs.storage.HeaderBlock r0;

        r0 := @this: org.apache.poi.poifs.storage.HeaderBlock;

        i0 := @parameter0: int;

        r0.<org.apache.poi.poifs.storage.HeaderBlock: int _xbat_count> = i0;

        return;
    }

    public int getXBATIndex()
    {
        int $i0;
        org.apache.poi.poifs.storage.HeaderBlock r0;

        r0 := @this: org.apache.poi.poifs.storage.HeaderBlock;

        $i0 = r0.<org.apache.poi.poifs.storage.HeaderBlock: int _xbat_start>;

        return $i0;
    }

    public void setXBATStart(int)
    {
        int i0;
        org.apache.poi.poifs.storage.HeaderBlock r0;

        r0 := @this: org.apache.poi.poifs.storage.HeaderBlock;

        i0 := @parameter0: int;

        r0.<org.apache.poi.poifs.storage.HeaderBlock: int _xbat_start> = i0;

        return;
    }

    public org.apache.poi.poifs.common.POIFSBigBlockSize getBigBlockSize()
    {
        org.apache.poi.poifs.storage.HeaderBlock r0;
        org.apache.poi.poifs.common.POIFSBigBlockSize $r1;

        r0 := @this: org.apache.poi.poifs.storage.HeaderBlock;

        $r1 = r0.<org.apache.poi.poifs.storage.HeaderBlock: org.apache.poi.poifs.common.POIFSBigBlockSize bigBlockSize>;

        return $r1;
    }

    void writeData(java.io.OutputStream) throws java.io.IOException
    {
        byte[] $r2, $r4, $r6, $r8, $r10, $r12, $r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        org.apache.poi.poifs.storage.HeaderBlock r1;
        java.io.OutputStream r13;
        org.apache.poi.poifs.common.POIFSBigBlockSize $r15;
        org.apache.poi.util.IntegerField $r0, $r3, $r5, $r7, $r9, $r11;

        r1 := @this: org.apache.poi.poifs.storage.HeaderBlock;

        r13 := @parameter0: java.io.OutputStream;

        $r0 = new org.apache.poi.util.IntegerField;

        $i0 = r1.<org.apache.poi.poifs.storage.HeaderBlock: int _bat_count>;

        $r2 = r1.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        specialinvoke $r0.<org.apache.poi.util.IntegerField: void <init>(int,int,byte[])>(44, $i0, $r2);

        $r3 = new org.apache.poi.util.IntegerField;

        $i1 = r1.<org.apache.poi.poifs.storage.HeaderBlock: int _property_start>;

        $r4 = r1.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        specialinvoke $r3.<org.apache.poi.util.IntegerField: void <init>(int,int,byte[])>(48, $i1, $r4);

        $r5 = new org.apache.poi.util.IntegerField;

        $i2 = r1.<org.apache.poi.poifs.storage.HeaderBlock: int _sbat_start>;

        $r6 = r1.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        specialinvoke $r5.<org.apache.poi.util.IntegerField: void <init>(int,int,byte[])>(60, $i2, $r6);

        $r7 = new org.apache.poi.util.IntegerField;

        $i3 = r1.<org.apache.poi.poifs.storage.HeaderBlock: int _sbat_count>;

        $r8 = r1.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        specialinvoke $r7.<org.apache.poi.util.IntegerField: void <init>(int,int,byte[])>(64, $i3, $r8);

        $r9 = new org.apache.poi.util.IntegerField;

        $i4 = r1.<org.apache.poi.poifs.storage.HeaderBlock: int _xbat_start>;

        $r10 = r1.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        specialinvoke $r9.<org.apache.poi.util.IntegerField: void <init>(int,int,byte[])>(68, $i4, $r10);

        $r11 = new org.apache.poi.util.IntegerField;

        $i5 = r1.<org.apache.poi.poifs.storage.HeaderBlock: int _xbat_count>;

        $r12 = r1.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        specialinvoke $r11.<org.apache.poi.util.IntegerField: void <init>(int,int,byte[])>(72, $i5, $r12);

        $r14 = r1.<org.apache.poi.poifs.storage.HeaderBlock: byte[] _data>;

        virtualinvoke r13.<java.io.OutputStream: void write(byte[],int,int)>($r14, 0, 512);

        i7 = 512;

     label1:
        $r15 = r1.<org.apache.poi.poifs.storage.HeaderBlock: org.apache.poi.poifs.common.POIFSBigBlockSize bigBlockSize>;

        $i6 = virtualinvoke $r15.<org.apache.poi.poifs.common.POIFSBigBlockSize: int getBigBlockSize()>();

        if i7 >= $i6 goto label2;

        virtualinvoke r13.<java.io.OutputStream: void write(int)>(0);

        i7 = i7 + 1;

        goto label1;

     label2:
        return;
    }

    static void <clinit>()
    {
        org.apache.poi.util.POILogger $r0;

        <org.apache.poi.poifs.storage.HeaderBlock: byte _default_value> = -1;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/poifs/storage/HeaderBlock;");

        <org.apache.poi.poifs.storage.HeaderBlock: org.apache.poi.util.POILogger _logger> = $r0;

        return;
    }
}
