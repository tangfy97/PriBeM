abstract class nu.xom.jaxen.expr.DefaultLocationPath extends nu.xom.jaxen.expr.DefaultExpr implements nu.xom.jaxen.expr.LocationPath
{
    private java.util.List steps;

    void <init>()
    {
        java.util.LinkedList $r1;
        nu.xom.jaxen.expr.DefaultLocationPath r0;

        r0 := @this: nu.xom.jaxen.expr.DefaultLocationPath;

        specialinvoke r0.<nu.xom.jaxen.expr.DefaultExpr: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<nu.xom.jaxen.expr.DefaultLocationPath: java.util.List steps> = $r1;

        return;
    }

    public void addStep(nu.xom.jaxen.expr.Step)
    {
        java.util.List $r1;
        nu.xom.jaxen.expr.DefaultLocationPath r0;
        nu.xom.jaxen.expr.Step r2;

        r0 := @this: nu.xom.jaxen.expr.DefaultLocationPath;

        r2 := @parameter0: nu.xom.jaxen.expr.Step;

        $r1 = virtualinvoke r0.<nu.xom.jaxen.expr.DefaultLocationPath: java.util.List getSteps()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

    public java.util.List getSteps()
    {
        java.util.List $r1;
        nu.xom.jaxen.expr.DefaultLocationPath r0;

        r0 := @this: nu.xom.jaxen.expr.DefaultLocationPath;

        $r1 = r0.<nu.xom.jaxen.expr.DefaultLocationPath: java.util.List steps>;

        return $r1;
    }

    public nu.xom.jaxen.expr.Expr simplify()
    {
        java.util.List $r1;
        java.util.Iterator $r2;
        nu.xom.jaxen.expr.Step r4;
        java.lang.Object $r3;
        nu.xom.jaxen.expr.DefaultLocationPath r0;
        boolean $z0;

        r0 := @this: nu.xom.jaxen.expr.DefaultLocationPath;

        $r1 = virtualinvoke r0.<nu.xom.jaxen.expr.DefaultLocationPath: java.util.List getSteps()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (nu.xom.jaxen.expr.Step) $r3;

        interfaceinvoke r4.<nu.xom.jaxen.expr.Step: void simplify()>();

        goto label1;

     label2:
        return r0;
    }

    public java.lang.String getText()
    {
        java.util.Iterator $r3;
        nu.xom.jaxen.expr.DefaultLocationPath r1;
        java.util.List $r2;
        java.lang.StringBuffer $r0;
        nu.xom.jaxen.expr.Step $r6;
        java.lang.Object $r5;
        java.lang.String $r4, $r7;
        boolean $z0, $z1;

        r1 := @this: nu.xom.jaxen.expr.DefaultLocationPath;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke r1.<nu.xom.jaxen.expr.DefaultLocationPath: java.util.List getSteps()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (nu.xom.jaxen.expr.Step) $r5;

        $r7 = interfaceinvoke $r6.<nu.xom.jaxen.expr.Step: java.lang.String getText()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        goto label1;

     label2:
        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.String toString()
    {
        java.util.Iterator $r3;
        nu.xom.jaxen.expr.DefaultLocationPath r1;
        java.util.List $r2;
        java.lang.StringBuffer $r0;
        java.lang.Object $r5;
        java.lang.String $r4, $r6;
        boolean $z0, $z1;

        r1 := @this: nu.xom.jaxen.expr.DefaultLocationPath;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke r1.<nu.xom.jaxen.expr.DefaultLocationPath: java.util.List getSteps()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        goto label1;

     label2:
        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    public boolean isAbsolute()
    {
        nu.xom.jaxen.expr.DefaultLocationPath r0;

        r0 := @this: nu.xom.jaxen.expr.DefaultLocationPath;

        return 0;
    }

    public java.lang.Object evaluate(nu.xom.jaxen.Context) throws nu.xom.jaxen.JaxenException
    {
        java.util.ArrayList $r2;
        nu.xom.jaxen.expr.Step r12;
        int $i0;
        nu.xom.jaxen.Navigator $r10;
        boolean $z0, $z1;
        java.util.Iterator $r7;
        nu.xom.jaxen.ContextSupport $r3;
        nu.xom.jaxen.expr.DefaultLocationPath r5;
        java.util.List $r1, $r6, $r8, $r13, r14;
        nu.xom.jaxen.expr.NodeComparator $r9;
        java.lang.Object $r11;
        nu.xom.jaxen.Context r0, $r4;

        r5 := @this: nu.xom.jaxen.expr.DefaultLocationPath;

        r0 := @parameter0: nu.xom.jaxen.Context;

        $r1 = virtualinvoke r0.<nu.xom.jaxen.Context: java.util.List getNodeSet()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r1);

        r14 = $r2;

        $r3 = virtualinvoke r0.<nu.xom.jaxen.Context: nu.xom.jaxen.ContextSupport getContextSupport()>();

        $r4 = new nu.xom.jaxen.Context;

        specialinvoke $r4.<nu.xom.jaxen.Context: void <init>(nu.xom.jaxen.ContextSupport)>($r3);

        $r6 = virtualinvoke r5.<nu.xom.jaxen.expr.DefaultLocationPath: java.util.List getSteps()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r11 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r12 = (nu.xom.jaxen.expr.Step) $r11;

        virtualinvoke $r4.<nu.xom.jaxen.Context: void setNodeSet(java.util.List)>(r14);

        $r13 = interfaceinvoke r12.<nu.xom.jaxen.expr.Step: java.util.List evaluate(nu.xom.jaxen.Context)>($r4);

        r14 = $r13;

        $z1 = specialinvoke r5.<nu.xom.jaxen.expr.DefaultLocationPath: boolean isReverseAxis(nu.xom.jaxen.expr.Step)>(r12);

        if $z1 == 0 goto label2;

        staticinvoke <java.util.Collections: void reverse(java.util.List)>($r13);

     label2:
        goto label1;

     label3:
        $r8 = virtualinvoke r5.<nu.xom.jaxen.expr.DefaultLocationPath: java.util.List getSteps()>();

        $i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        if $i0 <= 1 goto label4;

        $r9 = new nu.xom.jaxen.expr.NodeComparator;

        $r10 = virtualinvoke $r3.<nu.xom.jaxen.ContextSupport: nu.xom.jaxen.Navigator getNavigator()>();

        specialinvoke $r9.<nu.xom.jaxen.expr.NodeComparator: void <init>(nu.xom.jaxen.Navigator)>($r10);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r14, $r9);

     label4:
        return r14;
    }

    private boolean isReverseAxis(nu.xom.jaxen.expr.Step)
    {
        nu.xom.jaxen.expr.Step r0;
        int $i0;
        nu.xom.jaxen.expr.DefaultLocationPath r1;
        boolean $z0;

        r1 := @this: nu.xom.jaxen.expr.DefaultLocationPath;

        r0 := @parameter0: nu.xom.jaxen.expr.Step;

        $i0 = interfaceinvoke r0.<nu.xom.jaxen.expr.Step: int getAxis()>();

        if $i0 == 8 goto label1;

        if $i0 == 6 goto label1;

        if $i0 == 4 goto label1;

        if $i0 != 13 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }
}
