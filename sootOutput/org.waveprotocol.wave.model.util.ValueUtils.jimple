public final class org.waveprotocol.wave.model.util.ValueUtils extends java.lang.Object
{

    public void <init>()
    {
        org.waveprotocol.wave.model.util.ValueUtils r0;

        r0 := @this: org.waveprotocol.wave.model.util.ValueUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean equal(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 != null goto label2;

        if r1 != null goto label1;

        $z0 = 1;

        goto label3;

     label1:
        $z0 = 0;

        goto label3;

     label2:
        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

     label3:
        return $z0;
    }

    public static boolean notEqual(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 != null goto label2;

        if r1 == null goto label1;

        $z1 = 1;

        goto label4;

     label1:
        $z1 = 0;

        goto label4;

     label2:
        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public static java.lang.Object valueOrDefault(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1, $r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 == null goto label1;

        $r2 = r0;

        goto label2;

     label1:
        $r2 = r1;

     label2:
        return $r2;
    }

    public static java.lang.String abbrev(java.lang.String, int)
    {
        int $i0, i1;
        java.lang.String r0, $r1, $r2;

        r0 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        if r0 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 > i1 goto label2;

        $r2 = r0;

        goto label3;

     label2:
        $r2 = new java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

        specialinvoke $r2.<java.lang.String: void <init>(java.lang.String)>($r1);

     label3:
        return $r2;
    }
}
