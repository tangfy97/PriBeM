class org.springframework.context.config.PropertyOverrideBeanDefinitionParser extends org.springframework.context.config.AbstractPropertyLoadingBeanDefinitionParser
{

    void <init>()
    {
        org.springframework.context.config.PropertyOverrideBeanDefinitionParser r0;

        r0 := @this: org.springframework.context.config.PropertyOverrideBeanDefinitionParser;

        specialinvoke r0.<org.springframework.context.config.AbstractPropertyLoadingBeanDefinitionParser: void <init>()>();

        return;
    }

    protected java.lang.Class getBeanClass(org.w3c.dom.Element)
    {
        org.springframework.context.config.PropertyOverrideBeanDefinitionParser r0;
        org.w3c.dom.Element r1;

        r0 := @this: org.springframework.context.config.PropertyOverrideBeanDefinitionParser;

        r1 := @parameter0: org.w3c.dom.Element;

        return class "Lorg/springframework/beans/factory/config/PropertyOverrideConfigurer;";
    }

    protected void doParse(org.w3c.dom.Element, org.springframework.beans.factory.support.BeanDefinitionBuilder)
    {
        org.w3c.dom.Element r1;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r2;
        java.lang.Boolean $r4;
        org.springframework.context.config.PropertyOverrideBeanDefinitionParser r0;
        java.lang.String $r3;

        r0 := @this: org.springframework.context.config.PropertyOverrideBeanDefinitionParser;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        specialinvoke r0.<org.springframework.context.config.AbstractPropertyLoadingBeanDefinitionParser: void doParse(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)>(r1, r2);

        $r3 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("ignore-unresolvable");

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r3);

        virtualinvoke r2.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyValue(java.lang.String,java.lang.Object)>("ignoreInvalidKeys", $r4);

        return;
    }
}
