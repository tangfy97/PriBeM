public class org.codehaus.groovy.tools.groovydoc.MockOutputTool extends java.lang.Object implements org.codehaus.groovy.tools.groovydoc.OutputTool
{
    java.util.Set outputAreas;
    java.util.Map output;

    public void <init>()
    {
        java.util.HashSet $r1;
        java.util.HashMap $r2;
        org.codehaus.groovy.tools.groovydoc.MockOutputTool r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.MockOutputTool;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<org.codehaus.groovy.tools.groovydoc.MockOutputTool: java.util.Set outputAreas> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.codehaus.groovy.tools.groovydoc.MockOutputTool: java.util.Map output> = $r2;

        return;
    }

    public void makeOutputArea(java.lang.String)
    {
        java.util.Set $r2;
        java.lang.String r1;
        org.codehaus.groovy.tools.groovydoc.MockOutputTool r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.MockOutputTool;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.groovy.tools.groovydoc.MockOutputTool: java.util.Set outputAreas>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void writeToOutput(java.lang.String, java.lang.String) throws java.lang.Exception
    {
        java.util.Map $r3;
        java.lang.String r1, r2;
        org.codehaus.groovy.tools.groovydoc.MockOutputTool r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.MockOutputTool;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.codehaus.groovy.tools.groovydoc.MockOutputTool: java.util.Map output>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public boolean isValidOutputArea(java.lang.String)
    {
        java.util.Set $r2;
        java.lang.String r1;
        org.codehaus.groovy.tools.groovydoc.MockOutputTool r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.MockOutputTool;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.groovy.tools.groovydoc.MockOutputTool: java.util.Set outputAreas>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public java.lang.String getText(java.lang.String)
    {
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1, $r4;
        org.codehaus.groovy.tools.groovydoc.MockOutputTool r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.MockOutputTool;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.groovy.tools.groovydoc.MockOutputTool: java.util.Map output>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public java.lang.String toString()
    {
        java.util.Set $r3, $r7;
        java.lang.StringBuffer $r0, $r1, $r4, $r5, $r8;
        java.util.Map $r6;
        java.lang.String $r9;
        org.codehaus.groovy.tools.groovydoc.MockOutputTool r2;

        r2 := @this: org.codehaus.groovy.tools.groovydoc.MockOutputTool;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("dirs:");

        $r3 = r2.<org.codehaus.groovy.tools.groovydoc.MockOutputTool: java.util.Set outputAreas>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", files:");

        $r6 = r2.<org.codehaus.groovy.tools.groovydoc.MockOutputTool: java.util.Map output>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set keySet()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }
}
