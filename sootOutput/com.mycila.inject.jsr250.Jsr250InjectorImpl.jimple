final class com.mycila.inject.jsr250.Jsr250InjectorImpl extends java.lang.Object implements com.mycila.inject.jsr250.Jsr250Injector
{
    private volatile boolean closed;
    private volatile com.google.inject.Injector injector;

    void <init>()
    {
        com.mycila.inject.jsr250.Jsr250InjectorImpl r0;

        r0 := @this: com.mycila.inject.jsr250.Jsr250InjectorImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public synchronized void destroy()
    {
        com.google.inject.Injector $r1, r2;
        com.mycila.inject.jsr250.Jsr250InjectorImpl r0;
        java.lang.Object $r3;
        boolean $z0;
        com.mycila.inject.jsr250.Jsr250Destroyer $r4;

        r0 := @this: com.mycila.inject.jsr250.Jsr250InjectorImpl;

        $z0 = r0.<com.mycila.inject.jsr250.Jsr250InjectorImpl: boolean closed>;

        if $z0 != 0 goto label1;

        $r1 = r0.<com.mycila.inject.jsr250.Jsr250InjectorImpl: com.google.inject.Injector injector>;

        if $r1 == null goto label1;

        r0.<com.mycila.inject.jsr250.Jsr250InjectorImpl: boolean closed> = 1;

        r2 = r0.<com.mycila.inject.jsr250.Jsr250InjectorImpl: com.google.inject.Injector injector>;

        r0.<com.mycila.inject.jsr250.Jsr250InjectorImpl: com.google.inject.Injector injector> = null;

        $r3 = interfaceinvoke r2.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lcom/mycila/inject/jsr250/Jsr250Destroyer;");

        $r4 = (com.mycila.inject.jsr250.Jsr250Destroyer) $r3;

        interfaceinvoke $r4.<com.mycila.inject.jsr250.Jsr250Destroyer: void preDestroy()>();

     label1:
        return;
    }

    private com.google.inject.Injector injector()
    {
        com.google.inject.Injector $r2, $r3;
        java.lang.IllegalStateException $r1;
        com.mycila.inject.jsr250.Jsr250InjectorImpl r0;
        boolean $z0;

        r0 := @this: com.mycila.inject.jsr250.Jsr250InjectorImpl;

        $z0 = r0.<com.mycila.inject.jsr250.Jsr250InjectorImpl: boolean closed>;

        if $z0 != 0 goto label1;

        $r2 = r0.<com.mycila.inject.jsr250.Jsr250InjectorImpl: com.google.inject.Injector injector>;

        if $r2 != null goto label2;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Injector closed !");

        throw $r1;

     label2:
        $r3 = r0.<com.mycila.inject.jsr250.Jsr250InjectorImpl: com.google.inject.Injector injector>;

        return $r3;
    }

    public void injectMembers(java.lang.Object)
    {
        com.google.inject.Injector $r1;
        java.lang.Object r2;
        com.mycila.inject.jsr250.Jsr250InjectorImpl r0;

        r0 := @this: com.mycila.inject.jsr250.Jsr250InjectorImpl;

        r2 := @parameter0: java.lang.Object;

        $r1 = specialinvoke r0.<com.mycila.inject.jsr250.Jsr250InjectorImpl: com.google.inject.Injector injector()>();

        interfaceinvoke $r1.<com.google.inject.Injector: void injectMembers(java.lang.Object)>(r2);

        return;
    }

    public com.google.inject.MembersInjector getMembersInjector(com.google.inject.TypeLiteral)
    {
        com.google.inject.Injector $r1;
        com.mycila.inject.jsr250.Jsr250InjectorImpl r0;
        com.google.inject.MembersInjector $r3;
        com.google.inject.TypeLiteral r2;

        r0 := @this: com.mycila.inject.jsr250.Jsr250InjectorImpl;

        r2 := @parameter0: com.google.inject.TypeLiteral;

        $r1 = specialinvoke r0.<com.mycila.inject.jsr250.Jsr250InjectorImpl: com.google.inject.Injector injector()>();

        $r3 = interfaceinvoke $r1.<com.google.inject.Injector: com.google.inject.MembersInjector getMembersInjector(com.google.inject.TypeLiteral)>(r2);

        return $r3;
    }

    public com.google.inject.MembersInjector getMembersInjector(java.lang.Class)
    {
        com.google.inject.Injector $r1;
        com.mycila.inject.jsr250.Jsr250InjectorImpl r0;
        java.lang.Class r2;
        com.google.inject.MembersInjector $r3;

        r0 := @this: com.mycila.inject.jsr250.Jsr250InjectorImpl;

        r2 := @parameter0: java.lang.Class;

        $r1 = specialinvoke r0.<com.mycila.inject.jsr250.Jsr250InjectorImpl: com.google.inject.Injector injector()>();

        $r3 = interfaceinvoke $r1.<com.google.inject.Injector: com.google.inject.MembersInjector getMembersInjector(java.lang.Class)>(r2);

        return $r3;
    }

    public java.util.Map getBindings()
    {
        com.google.inject.Injector $r1;
        com.mycila.inject.jsr250.Jsr250InjectorImpl r0;
        java.util.Map $r2;

        r0 := @this: com.mycila.inject.jsr250.Jsr250InjectorImpl;

        $r1 = specialinvoke r0.<com.mycila.inject.jsr250.Jsr250InjectorImpl: com.google.inject.Injector injector()>();

        $r2 = interfaceinvoke $r1.<com.google.inject.Injector: java.util.Map getBindings()>();

        return $r2;
    }

    public java.util.Map getAllBindings()
    {
        com.google.inject.Injector $r1;
        com.mycila.inject.jsr250.Jsr250InjectorImpl r0;
        java.util.Map $r2;

        r0 := @this: com.mycila.inject.jsr250.Jsr250InjectorImpl;

        $r1 = specialinvoke r0.<com.mycila.inject.jsr250.Jsr250InjectorImpl: com.google.inject.Injector injector()>();

        $r2 = interfaceinvoke $r1.<com.google.inject.Injector: java.util.Map getAllBindings()>();

        return $r2;
    }

    public com.google.inject.Binding getBinding(com.google.inject.Key)
    {
        com.google.inject.Injector $r1;
        com.mycila.inject.jsr250.Jsr250InjectorImpl r0;
        com.google.inject.Key r2;
        com.google.inject.Binding $r3;

        r0 := @this: com.mycila.inject.jsr250.Jsr250InjectorImpl;

        r2 := @parameter0: com.google.inject.Key;

        $r1 = specialinvoke r0.<com.mycila.inject.jsr250.Jsr250InjectorImpl: com.google.inject.Injector injector()>();

        $r3 = interfaceinvoke $r1.<com.google.inject.Injector: com.google.inject.Binding getBinding(com.google.inject.Key)>(r2);

        return $r3;
    }

    public com.google.inject.Binding getBinding(java.lang.Class)
    {
        com.google.inject.Injector $r1;
        com.mycila.inject.jsr250.Jsr250InjectorImpl r0;
        java.lang.Class r2;
        com.google.inject.Binding $r3;

        r0 := @this: com.mycila.inject.jsr250.Jsr250InjectorImpl;

        r2 := @parameter0: java.lang.Class;

        $r1 = specialinvoke r0.<com.mycila.inject.jsr250.Jsr250InjectorImpl: com.google.inject.Injector injector()>();

        $r3 = interfaceinvoke $r1.<com.google.inject.Injector: com.google.inject.Binding getBinding(java.lang.Class)>(r2);

        return $r3;
    }

    public com.google.inject.Binding getExistingBinding(com.google.inject.Key)
    {
        com.google.inject.Injector $r1;
        com.mycila.inject.jsr250.Jsr250InjectorImpl r0;
        com.google.inject.Key r2;
        com.google.inject.Binding $r3;

        r0 := @this: com.mycila.inject.jsr250.Jsr250InjectorImpl;

        r2 := @parameter0: com.google.inject.Key;

        $r1 = specialinvoke r0.<com.mycila.inject.jsr250.Jsr250InjectorImpl: com.google.inject.Injector injector()>();

        $r3 = interfaceinvoke $r1.<com.google.inject.Injector: com.google.inject.Binding getExistingBinding(com.google.inject.Key)>(r2);

        return $r3;
    }

    public java.util.List findBindingsByType(com.google.inject.TypeLiteral)
    {
        com.google.inject.Injector $r1;
        java.util.List $r3;
        com.mycila.inject.jsr250.Jsr250InjectorImpl r0;
        com.google.inject.TypeLiteral r2;

        r0 := @this: com.mycila.inject.jsr250.Jsr250InjectorImpl;

        r2 := @parameter0: com.google.inject.TypeLiteral;

        $r1 = specialinvoke r0.<com.mycila.inject.jsr250.Jsr250InjectorImpl: com.google.inject.Injector injector()>();

        $r3 = interfaceinvoke $r1.<com.google.inject.Injector: java.util.List findBindingsByType(com.google.inject.TypeLiteral)>(r2);

        return $r3;
    }

    public com.google.inject.Provider getProvider(com.google.inject.Key)
    {
        com.google.inject.Injector $r1;
        com.google.inject.Provider $r3;
        com.mycila.inject.jsr250.Jsr250InjectorImpl r0;
        com.google.inject.Key r2;

        r0 := @this: com.mycila.inject.jsr250.Jsr250InjectorImpl;

        r2 := @parameter0: com.google.inject.Key;

        $r1 = specialinvoke r0.<com.mycila.inject.jsr250.Jsr250InjectorImpl: com.google.inject.Injector injector()>();

        $r3 = interfaceinvoke $r1.<com.google.inject.Injector: com.google.inject.Provider getProvider(com.google.inject.Key)>(r2);

        return $r3;
    }

    public com.google.inject.Provider getProvider(java.lang.Class)
    {
        com.google.inject.Injector $r1;
        com.google.inject.Provider $r3;
        com.mycila.inject.jsr250.Jsr250InjectorImpl r0;
        java.lang.Class r2;

        r0 := @this: com.mycila.inject.jsr250.Jsr250InjectorImpl;

        r2 := @parameter0: java.lang.Class;

        $r1 = specialinvoke r0.<com.mycila.inject.jsr250.Jsr250InjectorImpl: com.google.inject.Injector injector()>();

        $r3 = interfaceinvoke $r1.<com.google.inject.Injector: com.google.inject.Provider getProvider(java.lang.Class)>(r2);

        return $r3;
    }

    public java.lang.Object getInstance(com.google.inject.Key)
    {
        com.google.inject.Injector $r1;
        com.mycila.inject.jsr250.Jsr250InjectorImpl r0;
        com.google.inject.Key r2;
        java.lang.Object $r3;

        r0 := @this: com.mycila.inject.jsr250.Jsr250InjectorImpl;

        r2 := @parameter0: com.google.inject.Key;

        $r1 = specialinvoke r0.<com.mycila.inject.jsr250.Jsr250InjectorImpl: com.google.inject.Injector injector()>();

        $r3 = interfaceinvoke $r1.<com.google.inject.Injector: java.lang.Object getInstance(com.google.inject.Key)>(r2);

        return $r3;
    }

    public java.lang.Object getInstance(java.lang.Class)
    {
        com.google.inject.Injector $r1;
        com.mycila.inject.jsr250.Jsr250InjectorImpl r0;
        java.lang.Class r2;
        java.lang.Object $r3;

        r0 := @this: com.mycila.inject.jsr250.Jsr250InjectorImpl;

        r2 := @parameter0: java.lang.Class;

        $r1 = specialinvoke r0.<com.mycila.inject.jsr250.Jsr250InjectorImpl: com.google.inject.Injector injector()>();

        $r3 = interfaceinvoke $r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(r2);

        return $r3;
    }

    public com.google.inject.Injector getParent()
    {
        com.google.inject.Injector $r1, $r2;
        com.mycila.inject.jsr250.Jsr250InjectorImpl r0;

        r0 := @this: com.mycila.inject.jsr250.Jsr250InjectorImpl;

        $r1 = specialinvoke r0.<com.mycila.inject.jsr250.Jsr250InjectorImpl: com.google.inject.Injector injector()>();

        $r2 = interfaceinvoke $r1.<com.google.inject.Injector: com.google.inject.Injector getParent()>();

        return $r2;
    }

    public com.google.inject.Injector createChildInjector(java.lang.Iterable)
    {
        com.google.inject.Injector $r1, $r3;
        com.mycila.inject.jsr250.Jsr250InjectorImpl r0;
        java.lang.Iterable r2;

        r0 := @this: com.mycila.inject.jsr250.Jsr250InjectorImpl;

        r2 := @parameter0: java.lang.Iterable;

        $r1 = specialinvoke r0.<com.mycila.inject.jsr250.Jsr250InjectorImpl: com.google.inject.Injector injector()>();

        $r3 = interfaceinvoke $r1.<com.google.inject.Injector: com.google.inject.Injector createChildInjector(java.lang.Iterable)>(r2);

        return $r3;
    }

    public transient com.google.inject.Injector createChildInjector(com.google.inject.Module[])
    {
        com.google.inject.Injector $r1, $r3;
        com.mycila.inject.jsr250.Jsr250InjectorImpl r0;
        com.google.inject.Module[] r2;

        r0 := @this: com.mycila.inject.jsr250.Jsr250InjectorImpl;

        r2 := @parameter0: com.google.inject.Module[];

        $r1 = specialinvoke r0.<com.mycila.inject.jsr250.Jsr250InjectorImpl: com.google.inject.Injector injector()>();

        $r3 = interfaceinvoke $r1.<com.google.inject.Injector: com.google.inject.Injector createChildInjector(com.google.inject.Module[])>(r2);

        return $r3;
    }

    public java.util.Map getScopeBindings()
    {
        com.google.inject.Injector $r1;
        com.mycila.inject.jsr250.Jsr250InjectorImpl r0;
        java.util.Map $r2;

        r0 := @this: com.mycila.inject.jsr250.Jsr250InjectorImpl;

        $r1 = specialinvoke r0.<com.mycila.inject.jsr250.Jsr250InjectorImpl: com.google.inject.Injector injector()>();

        $r2 = interfaceinvoke $r1.<com.google.inject.Injector: java.util.Map getScopeBindings()>();

        return $r2;
    }

    public java.util.Set getTypeConverterBindings()
    {
        com.google.inject.Injector $r1;
        java.util.Set $r2;
        com.mycila.inject.jsr250.Jsr250InjectorImpl r0;

        r0 := @this: com.mycila.inject.jsr250.Jsr250InjectorImpl;

        $r1 = specialinvoke r0.<com.mycila.inject.jsr250.Jsr250InjectorImpl: com.google.inject.Injector injector()>();

        $r2 = interfaceinvoke $r1.<com.google.inject.Injector: java.util.Set getTypeConverterBindings()>();

        return $r2;
    }
}
