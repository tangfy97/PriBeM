public abstract class org.springframework.remoting.jaxrpc.ServletEndpointSupport extends java.lang.Object implements javax.xml.rpc.server.ServiceLifecycle
{
    protected final org.apache.commons.logging.Log logger;
    private javax.xml.rpc.server.ServletEndpointContext servletEndpointContext;
    private org.springframework.web.context.WebApplicationContext webApplicationContext;
    private org.springframework.context.support.MessageSourceAccessor messageSourceAccessor;

    public void <init>()
    {
        org.springframework.remoting.jaxrpc.ServletEndpointSupport r0;
        java.lang.Class $r1;
        org.apache.commons.logging.Log $r2;

        r0 := @this: org.springframework.remoting.jaxrpc.ServletEndpointSupport;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        r0.<org.springframework.remoting.jaxrpc.ServletEndpointSupport: org.apache.commons.logging.Log logger> = $r2;

        return;
    }

    public final void init(java.lang.Object) throws javax.xml.rpc.ServiceException
    {
        java.lang.Throwable $r16;
        org.springframework.remoting.jaxrpc.ServletEndpointSupport r1;
        javax.xml.rpc.server.ServletEndpointContext $r2, $r3;
        org.springframework.web.context.WebApplicationContext $r5, $r7;
        javax.xml.rpc.ServiceException $r14;
        org.springframework.context.support.MessageSourceAccessor $r15;
        java.lang.Object r0;
        javax.servlet.ServletContext $r4;
        java.lang.StringBuilder $r10, $r11, $r13;
        java.lang.String $r12;
        boolean $z0;

        r1 := @this: org.springframework.remoting.jaxrpc.ServletEndpointSupport;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof javax.xml.rpc.server.ServletEndpointContext;

        if $z0 != 0 goto label1;

        $r14 = new javax.xml.rpc.ServiceException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("ServletEndpointSupport needs ServletEndpointContext, not [");

        $r10 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<javax.xml.rpc.ServiceException: void <init>(java.lang.String)>($r12);

        $r16 = (java.lang.Throwable) $r14;

        throw $r16;

     label1:
        $r2 = (javax.xml.rpc.server.ServletEndpointContext) r0;

        r1.<org.springframework.remoting.jaxrpc.ServletEndpointSupport: javax.xml.rpc.server.ServletEndpointContext servletEndpointContext> = $r2;

        $r3 = r1.<org.springframework.remoting.jaxrpc.ServletEndpointSupport: javax.xml.rpc.server.ServletEndpointContext servletEndpointContext>;

        $r4 = interfaceinvoke $r3.<javax.xml.rpc.server.ServletEndpointContext: javax.servlet.ServletContext getServletContext()>();

        $r5 = staticinvoke <org.springframework.web.context.support.WebApplicationContextUtils: org.springframework.web.context.WebApplicationContext getRequiredWebApplicationContext(javax.servlet.ServletContext)>($r4);

        r1.<org.springframework.remoting.jaxrpc.ServletEndpointSupport: org.springframework.web.context.WebApplicationContext webApplicationContext> = $r5;

        $r15 = new org.springframework.context.support.MessageSourceAccessor;

        $r7 = r1.<org.springframework.remoting.jaxrpc.ServletEndpointSupport: org.springframework.web.context.WebApplicationContext webApplicationContext>;

        specialinvoke $r15.<org.springframework.context.support.MessageSourceAccessor: void <init>(org.springframework.context.MessageSource)>($r7);

        r1.<org.springframework.remoting.jaxrpc.ServletEndpointSupport: org.springframework.context.support.MessageSourceAccessor messageSourceAccessor> = $r15;

        virtualinvoke r1.<org.springframework.remoting.jaxrpc.ServletEndpointSupport: void onInit()>();

        return;
    }

    protected final javax.xml.rpc.server.ServletEndpointContext getServletEndpointContext()
    {
        javax.xml.rpc.server.ServletEndpointContext $r1;
        org.springframework.remoting.jaxrpc.ServletEndpointSupport r0;

        r0 := @this: org.springframework.remoting.jaxrpc.ServletEndpointSupport;

        $r1 = r0.<org.springframework.remoting.jaxrpc.ServletEndpointSupport: javax.xml.rpc.server.ServletEndpointContext servletEndpointContext>;

        return $r1;
    }

    protected final org.springframework.context.ApplicationContext getApplicationContext()
    {
        org.springframework.web.context.WebApplicationContext $r1;
        org.springframework.remoting.jaxrpc.ServletEndpointSupport r0;

        r0 := @this: org.springframework.remoting.jaxrpc.ServletEndpointSupport;

        $r1 = r0.<org.springframework.remoting.jaxrpc.ServletEndpointSupport: org.springframework.web.context.WebApplicationContext webApplicationContext>;

        return $r1;
    }

    protected final org.springframework.web.context.WebApplicationContext getWebApplicationContext()
    {
        org.springframework.web.context.WebApplicationContext $r1;
        org.springframework.remoting.jaxrpc.ServletEndpointSupport r0;

        r0 := @this: org.springframework.remoting.jaxrpc.ServletEndpointSupport;

        $r1 = r0.<org.springframework.remoting.jaxrpc.ServletEndpointSupport: org.springframework.web.context.WebApplicationContext webApplicationContext>;

        return $r1;
    }

    protected final org.springframework.context.support.MessageSourceAccessor getMessageSourceAccessor()
    {
        org.springframework.context.support.MessageSourceAccessor $r1;
        org.springframework.remoting.jaxrpc.ServletEndpointSupport r0;

        r0 := @this: org.springframework.remoting.jaxrpc.ServletEndpointSupport;

        $r1 = r0.<org.springframework.remoting.jaxrpc.ServletEndpointSupport: org.springframework.context.support.MessageSourceAccessor messageSourceAccessor>;

        return $r1;
    }

    protected final javax.servlet.ServletContext getServletContext()
    {
        org.springframework.web.context.WebApplicationContext $r1;
        org.springframework.remoting.jaxrpc.ServletEndpointSupport r0;
        javax.servlet.ServletContext $r2;

        r0 := @this: org.springframework.remoting.jaxrpc.ServletEndpointSupport;

        $r1 = r0.<org.springframework.remoting.jaxrpc.ServletEndpointSupport: org.springframework.web.context.WebApplicationContext webApplicationContext>;

        $r2 = interfaceinvoke $r1.<org.springframework.web.context.WebApplicationContext: javax.servlet.ServletContext getServletContext()>();

        return $r2;
    }

    protected final java.io.File getTempDir()
    {
        org.springframework.remoting.jaxrpc.ServletEndpointSupport r0;
        javax.servlet.ServletContext $r1;
        java.io.File $r2;

        r0 := @this: org.springframework.remoting.jaxrpc.ServletEndpointSupport;

        $r1 = virtualinvoke r0.<org.springframework.remoting.jaxrpc.ServletEndpointSupport: javax.servlet.ServletContext getServletContext()>();

        $r2 = staticinvoke <org.springframework.web.util.WebUtils: java.io.File getTempDir(javax.servlet.ServletContext)>($r1);

        return $r2;
    }

    protected void onInit() throws javax.xml.rpc.ServiceException
    {
        org.springframework.remoting.jaxrpc.ServletEndpointSupport r0;

        r0 := @this: org.springframework.remoting.jaxrpc.ServletEndpointSupport;

        return;
    }

    public void destroy()
    {
        org.springframework.remoting.jaxrpc.ServletEndpointSupport r0;

        r0 := @this: org.springframework.remoting.jaxrpc.ServletEndpointSupport;

        return;
    }
}
