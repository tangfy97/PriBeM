public final class com.ctc.wstx.dtd.DFAState extends java.lang.Object
{
    final int mIndex;
    final boolean mAccepting;
    java.util.BitSet mTokenSet;
    java.util.HashMap mNext;

    public void <init>(int, java.util.BitSet)
    {
        int i0;
        java.util.HashMap $r1;
        com.ctc.wstx.dtd.DFAState r0;
        java.util.BitSet r2;
        boolean $z0;

        r0 := @this: com.ctc.wstx.dtd.DFAState;

        i0 := @parameter0: int;

        r2 := @parameter1: java.util.BitSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.ctc.wstx.dtd.DFAState: java.util.HashMap mNext> = $r1;

        r0.<com.ctc.wstx.dtd.DFAState: int mIndex> = i0;

        $z0 = virtualinvoke r2.<java.util.BitSet: boolean get(int)>(0);

        r0.<com.ctc.wstx.dtd.DFAState: boolean mAccepting> = $z0;

        r0.<com.ctc.wstx.dtd.DFAState: java.util.BitSet mTokenSet> = r2;

        return;
    }

    public static com.ctc.wstx.dtd.DFAState constructDFA(com.ctc.wstx.dtd.ContentSpec)
    {
        com.ctc.wstx.dtd.ContentSpec r0;
        java.util.BitSet[] r5;
        java.util.HashMap $r10;
        com.ctc.wstx.dtd.DFAState $r8, r12;
        java.util.ArrayList $r4, $r9;
        com.ctc.wstx.dtd.NameKey $r16;
        int $i0, $i1, $i2, i3, i4;
        com.ctc.wstx.dtd.ConcatModel $r3;
        com.ctc.wstx.dtd.TokenModel $r2, $r15;
        com.ctc.wstx.dtd.ModelNode $r1;
        com.ctc.wstx.dtd.NameKey[] r6;
        java.lang.Object $r11, $r14;
        java.util.BitSet $r7, $r13;

        r0 := @parameter0: com.ctc.wstx.dtd.ContentSpec;

        $r1 = virtualinvoke r0.<com.ctc.wstx.dtd.ContentSpec: com.ctc.wstx.dtd.ModelNode rewrite()>();

        $r2 = staticinvoke <com.ctc.wstx.dtd.TokenModel: com.ctc.wstx.dtd.TokenModel getNullToken()>();

        $r3 = new com.ctc.wstx.dtd.ConcatModel;

        specialinvoke $r3.<com.ctc.wstx.dtd.ConcatModel: void <init>(com.ctc.wstx.dtd.ModelNode,com.ctc.wstx.dtd.ModelNode)>($r1, $r2);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        virtualinvoke $r3.<com.ctc.wstx.dtd.ConcatModel: void indexTokens(java.util.List)>($r4);

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        r5 = newarray (java.util.BitSet)[$i0];

        r6 = newarray (com.ctc.wstx.dtd.NameKey)[$i0];

        i3 = 0;

     label1:
        if i3 >= $i0 goto label2;

        $r13 = new java.util.BitSet;

        specialinvoke $r13.<java.util.BitSet: void <init>(int)>($i0);

        r5[i3] = $r13;

        $r14 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r15 = (com.ctc.wstx.dtd.TokenModel) $r14;

        $r16 = virtualinvoke $r15.<com.ctc.wstx.dtd.TokenModel: com.ctc.wstx.dtd.NameKey getName()>();

        r6[i3] = $r16;

        i3 = i3 + 1;

        goto label1;

     label2:
        virtualinvoke $r3.<com.ctc.wstx.dtd.ConcatModel: void calcFollowPos(java.util.BitSet[])>(r5);

        $r7 = new java.util.BitSet;

        specialinvoke $r7.<java.util.BitSet: void <init>(int)>($i0);

        virtualinvoke $r3.<com.ctc.wstx.dtd.ConcatModel: void addFirstPos(java.util.BitSet)>($r7);

        $r8 = new com.ctc.wstx.dtd.DFAState;

        specialinvoke $r8.<com.ctc.wstx.dtd.DFAState: void <init>(int,java.util.BitSet)>(0, $r7);

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        $r10 = new java.util.HashMap;

        specialinvoke $r10.<java.util.HashMap: void <init>()>();

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8);

        i4 = 0;

     label3:
        $i1 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        if i4 >= $i1 goto label4;

        $i2 = i4;

        i4 = i4 + 1;

        $r11 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        r12 = (com.ctc.wstx.dtd.DFAState) $r11;

        virtualinvoke r12.<com.ctc.wstx.dtd.DFAState: void calcNext(com.ctc.wstx.dtd.NameKey[],java.util.BitSet[],java.util.List,java.util.Map)>(r6, r5, $r9, $r10);

        goto label3;

     label4:
        return $r8;
    }

    public boolean isAcceptingState()
    {
        com.ctc.wstx.dtd.DFAState r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.dtd.DFAState;

        $z0 = r0.<com.ctc.wstx.dtd.DFAState: boolean mAccepting>;

        return $z0;
    }

    public int getIndex()
    {
        int $i0;
        com.ctc.wstx.dtd.DFAState r0;

        r0 := @this: com.ctc.wstx.dtd.DFAState;

        $i0 = r0.<com.ctc.wstx.dtd.DFAState: int mIndex>;

        return $i0;
    }

    public com.ctc.wstx.dtd.DFAState findNext(com.ctc.wstx.dtd.NameKey)
    {
        com.ctc.wstx.dtd.NameKey r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        com.ctc.wstx.dtd.DFAState r0, $r4;

        r0 := @this: com.ctc.wstx.dtd.DFAState;

        r1 := @parameter0: com.ctc.wstx.dtd.NameKey;

        $r2 = r0.<com.ctc.wstx.dtd.DFAState: java.util.HashMap mNext>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (com.ctc.wstx.dtd.DFAState) $r3;

        return $r4;
    }

    public java.util.TreeSet getNextNames()
    {
        java.util.Iterator $r4;
        java.util.Set $r3;
        java.util.HashMap $r2;
        java.lang.Object $r5;
        com.ctc.wstx.dtd.DFAState r1;
        java.util.TreeSet $r0;
        boolean $z0;

        r1 := @this: com.ctc.wstx.dtd.DFAState;

        $r0 = new java.util.TreeSet;

        specialinvoke $r0.<java.util.TreeSet: void <init>()>();

        $r2 = r1.<com.ctc.wstx.dtd.DFAState: java.util.HashMap mNext>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r0.<java.util.TreeSet: boolean add(java.lang.Object)>($r5);

        goto label1;

     label2:
        return $r0;
    }

    public void calcNext(com.ctc.wstx.dtd.NameKey[], java.util.BitSet[], java.util.List, java.util.Map)
    {
        java.util.BitSet[] r6;
        java.util.HashMap $r12;
        com.ctc.wstx.dtd.DFAState r0, r17, $r18;
        com.ctc.wstx.dtd.NameKey r5, $r15;
        java.util.Map r10;
        int $i0, i1, $i2, $i3, i4, $i5, $i6, $i8;
        java.util.List r14;
        com.ctc.wstx.dtd.NameKey[] r4;
        java.lang.Object $r2, $r8, $r11;
        java.util.BitSet $r1, r3, $r7, r9, $r16;

        r0 := @this: com.ctc.wstx.dtd.DFAState;

        r4 := @parameter0: com.ctc.wstx.dtd.NameKey[];

        r6 := @parameter1: java.util.BitSet[];

        r14 := @parameter2: java.util.List;

        r10 := @parameter3: java.util.Map;

        $i8 = (int) -1;

        i1 = $i8;

        $r1 = r0.<com.ctc.wstx.dtd.DFAState: java.util.BitSet mTokenSet>;

        $r2 = virtualinvoke $r1.<java.util.BitSet: java.lang.Object clone()>();

        r3 = (java.util.BitSet) $r2;

        r0.<com.ctc.wstx.dtd.DFAState: java.util.BitSet mTokenSet> = null;

     label1:
        $i2 = i1 + 1;

        $i3 = virtualinvoke r3.<java.util.BitSet: int nextSetBit(int)>($i2);

        i1 = $i3;

        if $i3 < 0 goto label6;

        r5 = r4[$i3];

        if r5 != null goto label2;

        goto label1;

     label2:
        $r7 = r6[$i3];

        $r8 = virtualinvoke $r7.<java.util.BitSet: java.lang.Object clone()>();

        r9 = (java.util.BitSet) $r8;

        i4 = $i3;

     label3:
        $i5 = i4 + 1;

        $i6 = virtualinvoke r3.<java.util.BitSet: int nextSetBit(int)>($i5);

        i4 = $i6;

        if $i6 <= 0 goto label4;

        $r15 = r4[$i6];

        if $r15 != r5 goto label3;

        virtualinvoke r3.<java.util.BitSet: void clear(int)>($i6);

        $r16 = r6[$i6];

        virtualinvoke r9.<java.util.BitSet: void or(java.util.BitSet)>($r16);

        goto label3;

     label4:
        $r11 = interfaceinvoke r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9);

        r17 = (com.ctc.wstx.dtd.DFAState) $r11;

        if r17 != null goto label5;

        $r18 = new com.ctc.wstx.dtd.DFAState;

        $i0 = interfaceinvoke r14.<java.util.List: int size()>();

        specialinvoke $r18.<com.ctc.wstx.dtd.DFAState: void <init>(int,java.util.BitSet)>($i0, r9);

        r17 = $r18;

        interfaceinvoke r14.<java.util.List: boolean add(java.lang.Object)>($r18);

        interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, $r18);

     label5:
        $r12 = r0.<com.ctc.wstx.dtd.DFAState: java.util.HashMap mNext>;

        virtualinvoke $r12.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r17);

        goto label1;

     label6:
        return;
    }

    public java.lang.String toString()
    {
        java.util.HashMap $r11;
        com.ctc.wstx.dtd.DFAState r3, r19;
        java.lang.StringBuffer $r0, $r1, $r2, $r4, $r5, $r7, $r8, $r9;
        int $i0, $i1;
        java.lang.String $r6, $r10, $r14;
        boolean $z0, $z1;
        java.util.Map$Entry r16;
        java.util.Iterator $r13;
        java.util.Set $r12;
        java.lang.Object $r15, $r17, $r18;

        r3 := @this: com.ctc.wstx.dtd.DFAState;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("State #");

        $i0 = r3.<com.ctc.wstx.dtd.DFAState: int mIndex>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":\n");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  Accepting: ");

        $z0 = r3.<com.ctc.wstx.dtd.DFAState: boolean mAccepting>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n  Next states:\n");

        $r11 = r3.<com.ctc.wstx.dtd.DFAState: java.util.HashMap mNext>;

        $r12 = virtualinvoke $r11.<java.util.HashMap: java.util.Set entrySet()>();

        $r13 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r15 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r16 = (java.util.Map$Entry) $r15;

        $r17 = interfaceinvoke r16.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r17);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" -> ");

        $r18 = interfaceinvoke r16.<java.util.Map$Entry: java.lang.Object getValue()>();

        r19 = (com.ctc.wstx.dtd.DFAState) $r18;

        $i1 = virtualinvoke r19.<com.ctc.wstx.dtd.DFAState: int getIndex()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        goto label1;

     label2:
        $r14 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r14;
    }
}
