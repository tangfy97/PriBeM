final class com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter extends java.util.HashMap implements java.util.Comparator
{
    com.sun.xml.bind.v2.model.impl.PropertyInfoImpl[] used;
    private java.util.Set collidedNames;
    final com.sun.xml.bind.v2.model.impl.ClassInfoImpl this$0;

    void <init>(com.sun.xml.bind.v2.model.impl.ClassInfoImpl)
    {
        java.lang.Object[] $r11;
        com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter r0;
        java.lang.String[] $r2, $r4, $r6;
        java.lang.Integer $r8;
        int $i0, $i1, i2, $i3, i4;
        java.lang.String r7, $r14;
        com.sun.xml.bind.v2.model.impl.ModelBuilder $r13;
        com.sun.xml.bind.v2.model.impl.ClassInfoImpl r1, $r3;
        com.sun.xml.bind.v2.model.impl.PropertyInfoImpl[] $r5;
        com.sun.xml.bind.v2.model.impl.Messages $r12;
        com.sun.xml.bind.v2.runtime.IllegalAnnotationException $r10;
        java.lang.Object $r9;

        r0 := @this: com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter;

        r1 := @parameter0: com.sun.xml.bind.v2.model.impl.ClassInfoImpl;

        r0.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter: com.sun.xml.bind.v2.model.impl.ClassInfoImpl this$0> = r1;

        $r2 = staticinvoke <com.sun.xml.bind.v2.model.impl.ClassInfoImpl: java.lang.String[] access$100(com.sun.xml.bind.v2.model.impl.ClassInfoImpl)>(r1);

        $i0 = lengthof $r2;

        specialinvoke r0.<java.util.HashMap: void <init>(int)>($i0);

        $r3 = r0.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter: com.sun.xml.bind.v2.model.impl.ClassInfoImpl this$0>;

        $r4 = staticinvoke <com.sun.xml.bind.v2.model.impl.ClassInfoImpl: java.lang.String[] access$100(com.sun.xml.bind.v2.model.impl.ClassInfoImpl)>($r3);

        $i1 = lengthof $r4;

        $r5 = newarray (com.sun.xml.bind.v2.model.impl.PropertyInfoImpl)[$i1];

        r0.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter: com.sun.xml.bind.v2.model.impl.PropertyInfoImpl[] used> = $r5;

        $r6 = staticinvoke <com.sun.xml.bind.v2.model.impl.ClassInfoImpl: java.lang.String[] access$100(com.sun.xml.bind.v2.model.impl.ClassInfoImpl)>(r1);

        i2 = lengthof $r6;

        i4 = 0;

     label1:
        if i4 >= i2 goto label3;

        r7 = $r6[i4];

        $i3 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter: int size()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r9 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r8);

        if $r9 == null goto label2;

        $r13 = r1.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl: com.sun.xml.bind.v2.model.impl.ModelBuilder builder>;

        $r10 = new com.sun.xml.bind.v2.runtime.IllegalAnnotationException;

        $r12 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages DUPLICATE_ENTRY_IN_PROP_ORDER>;

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = r7;

        $r14 = virtualinvoke $r12.<com.sun.xml.bind.v2.model.impl.Messages: java.lang.String format(java.lang.Object[])>($r11);

        specialinvoke $r10.<com.sun.xml.bind.v2.runtime.IllegalAnnotationException: void <init>(java.lang.String,com.sun.xml.bind.v2.model.'annotation'.Locatable)>($r14, r1);

        virtualinvoke $r13.<com.sun.xml.bind.v2.model.impl.ModelBuilder: void reportError(com.sun.xml.bind.v2.runtime.IllegalAnnotationException)>($r10);

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return;
    }

    public int compare(com.sun.xml.bind.v2.model.impl.PropertyInfoImpl, com.sun.xml.bind.v2.model.impl.PropertyInfoImpl)
    {
        com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter r0;
        int $i0, $i1, $i2;
        com.sun.xml.bind.v2.model.impl.PropertyInfoImpl r1, r2;

        r0 := @this: com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter;

        r1 := @parameter0: com.sun.xml.bind.v2.model.impl.PropertyInfoImpl;

        r2 := @parameter1: com.sun.xml.bind.v2.model.impl.PropertyInfoImpl;

        $i0 = specialinvoke r0.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter: int checkedGet(com.sun.xml.bind.v2.model.impl.PropertyInfoImpl)>(r1);

        $i1 = specialinvoke r0.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter: int checkedGet(com.sun.xml.bind.v2.model.impl.PropertyInfoImpl)>(r2);

        $i2 = $i0 - $i1;

        return $i2;
    }

    private int checkedGet(com.sun.xml.bind.v2.model.impl.PropertyInfoImpl)
    {
        java.lang.Integer $r22, r31;
        boolean $z0, $z1;
        java.util.Set $r8, $r9;
        com.sun.xml.bind.v2.model.impl.Messages $r15, $r28;
        com.sun.xml.bind.v2.runtime.IllegalAnnotationException $r12, $r25;
        java.lang.Object[] $r13, $r26;
        com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter r0;
        java.util.HashSet $r20;
        int $i0, $i1, $i2, $i3;
        com.sun.xml.bind.v2.model.core.PropertyKind $r21;
        java.lang.String $r2, $r10, $r16, $r17, $r23, $r29, $r30;
        com.sun.xml.bind.v2.model.impl.ModelBuilder $r14, $r27;
        com.sun.xml.bind.v2.model.impl.ClassInfoImpl $r11, $r24;
        com.sun.xml.bind.v2.model.impl.PropertyInfoImpl[] $r4, $r6, $r18, $r32, $r33;
        com.sun.xml.bind.v2.model.impl.PropertyInfoImpl r1, $r5, $r7, $r19;
        java.lang.Object $r3;

        r0 := @this: com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter;

        r1 := @parameter0: com.sun.xml.bind.v2.model.impl.PropertyInfoImpl;

        $r2 = virtualinvoke r1.<com.sun.xml.bind.v2.model.impl.PropertyInfoImpl: java.lang.String getName()>();

        $r3 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter: java.lang.Object get(java.lang.Object)>($r2);

        r31 = (java.lang.Integer) $r3;

        if r31 != null goto label2;

        $r21 = virtualinvoke r1.<com.sun.xml.bind.v2.model.impl.PropertyInfoImpl: com.sun.xml.bind.v2.model.core.PropertyKind kind()>();

        $z1 = $r21.<com.sun.xml.bind.v2.model.core.PropertyKind: boolean isOrdered>;

        if $z1 == 0 goto label1;

        $r24 = r0.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter: com.sun.xml.bind.v2.model.impl.ClassInfoImpl this$0>;

        $r27 = $r24.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl: com.sun.xml.bind.v2.model.impl.ModelBuilder builder>;

        $r25 = new com.sun.xml.bind.v2.runtime.IllegalAnnotationException;

        $r28 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages PROPERTY_MISSING_FROM_ORDER>;

        $r26 = newarray (java.lang.Object)[1];

        $r29 = virtualinvoke r1.<com.sun.xml.bind.v2.model.impl.PropertyInfoImpl: java.lang.String getName()>();

        $r26[0] = $r29;

        $r30 = virtualinvoke $r28.<com.sun.xml.bind.v2.model.impl.Messages: java.lang.String format(java.lang.Object[])>($r26);

        specialinvoke $r25.<com.sun.xml.bind.v2.runtime.IllegalAnnotationException: void <init>(java.lang.String,com.sun.xml.bind.v2.model.'annotation'.Locatable)>($r30, r1);

        virtualinvoke $r27.<com.sun.xml.bind.v2.model.impl.ModelBuilder: void reportError(com.sun.xml.bind.v2.runtime.IllegalAnnotationException)>($r25);

     label1:
        $i0 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter: int size()>();

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        r31 = $r22;

        $r23 = virtualinvoke r1.<com.sun.xml.bind.v2.model.impl.PropertyInfoImpl: java.lang.String getName()>();

        virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, $r22);

     label2:
        $i1 = virtualinvoke r31.<java.lang.Integer: int intValue()>();

        $r32 = r0.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter: com.sun.xml.bind.v2.model.impl.PropertyInfoImpl[] used>;

        $i2 = lengthof $r32;

        if $i1 >= $i2 goto label5;

        $r4 = r0.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter: com.sun.xml.bind.v2.model.impl.PropertyInfoImpl[] used>;

        $r5 = $r4[$i1];

        if $r5 == null goto label4;

        $r6 = r0.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter: com.sun.xml.bind.v2.model.impl.PropertyInfoImpl[] used>;

        $r7 = $r6[$i1];

        if $r7 == r1 goto label4;

        $r8 = r0.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter: java.util.Set collidedNames>;

        if $r8 != null goto label3;

        $r20 = new java.util.HashSet;

        specialinvoke $r20.<java.util.HashSet: void <init>()>();

        r0.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter: java.util.Set collidedNames> = $r20;

     label3:
        $r9 = r0.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter: java.util.Set collidedNames>;

        $r10 = virtualinvoke r1.<com.sun.xml.bind.v2.model.impl.PropertyInfoImpl: java.lang.String getName()>();

        $z0 = interfaceinvoke $r9.<java.util.Set: boolean add(java.lang.Object)>($r10);

        if $z0 == 0 goto label4;

        $r11 = r0.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter: com.sun.xml.bind.v2.model.impl.ClassInfoImpl this$0>;

        $r14 = $r11.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl: com.sun.xml.bind.v2.model.impl.ModelBuilder builder>;

        $r12 = new com.sun.xml.bind.v2.runtime.IllegalAnnotationException;

        $r15 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages DUPLICATE_PROPERTIES>;

        $r13 = newarray (java.lang.Object)[1];

        $r16 = virtualinvoke r1.<com.sun.xml.bind.v2.model.impl.PropertyInfoImpl: java.lang.String getName()>();

        $r13[0] = $r16;

        $r17 = virtualinvoke $r15.<com.sun.xml.bind.v2.model.impl.Messages: java.lang.String format(java.lang.Object[])>($r13);

        $r18 = r0.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter: com.sun.xml.bind.v2.model.impl.PropertyInfoImpl[] used>;

        $r19 = $r18[$i1];

        specialinvoke $r12.<com.sun.xml.bind.v2.runtime.IllegalAnnotationException: void <init>(java.lang.String,com.sun.xml.bind.v2.model.'annotation'.Locatable,com.sun.xml.bind.v2.model.'annotation'.Locatable)>($r17, r1, $r19);

        virtualinvoke $r14.<com.sun.xml.bind.v2.model.impl.ModelBuilder: void reportError(com.sun.xml.bind.v2.runtime.IllegalAnnotationException)>($r12);

     label4:
        $r33 = r0.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter: com.sun.xml.bind.v2.model.impl.PropertyInfoImpl[] used>;

        $r33[$i1] = r1;

     label5:
        $i3 = virtualinvoke r31.<java.lang.Integer: int intValue()>();

        return $i3;
    }

    public void checkUnusedProperties()
    {
        java.lang.Object[] $r17;
        com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter r0;
        java.lang.String[] $r5;
        com.sun.istack.FinalArrayList $r10, $r12;
        int $i0, $i1, $i2, i3;
        java.lang.String r6, $r8, $r20;
        com.sun.xml.bind.v2.model.impl.ModelBuilder $r19;
        boolean $z0;
        com.sun.xml.bind.v2.model.impl.ClassInfoImpl $r4, $r9, $r11, $r15, $r21;
        com.sun.xml.bind.v2.model.impl.PropertyInfoImpl[] $r1, $r2;
        com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter$1 $r7;
        com.sun.xml.bind.v2.model.impl.Messages $r18;
        com.sun.xml.bind.v2.model.impl.PropertyInfoImpl $r3, $r14;
        com.sun.xml.bind.v2.runtime.IllegalAnnotationException $r16;
        java.lang.Object $r13;

        r0 := @this: com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter;

        i3 = 0;

     label1:
        $r1 = r0.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter: com.sun.xml.bind.v2.model.impl.PropertyInfoImpl[] used>;

        $i0 = lengthof $r1;

        if i3 >= $i0 goto label5;

        $r2 = r0.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter: com.sun.xml.bind.v2.model.impl.PropertyInfoImpl[] used>;

        $r3 = $r2[i3];

        if $r3 != null goto label4;

        $r4 = r0.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter: com.sun.xml.bind.v2.model.impl.ClassInfoImpl this$0>;

        $r5 = staticinvoke <com.sun.xml.bind.v2.model.impl.ClassInfoImpl: java.lang.String[] access$100(com.sun.xml.bind.v2.model.impl.ClassInfoImpl)>($r4);

        r6 = $r5[i3];

        $r7 = new com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter$1;

        specialinvoke $r7.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter$1: void <init>(com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter)>(r0);

        $r8 = staticinvoke <com.sun.xml.bind.v2.util.EditDistance: java.lang.String findNearest(java.lang.String,java.util.Collection)>(r6, $r7);

        $r9 = r0.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter: com.sun.xml.bind.v2.model.impl.ClassInfoImpl this$0>;

        $r10 = staticinvoke <com.sun.xml.bind.v2.model.impl.ClassInfoImpl: com.sun.istack.FinalArrayList access$200(com.sun.xml.bind.v2.model.impl.ClassInfoImpl)>($r9);

        $i1 = virtualinvoke $r10.<com.sun.istack.FinalArrayList: int size()>();

        $i2 = $i1 - 1;

        if i3 <= $i2 goto label2;

        $z0 = 0;

        goto label3;

     label2:
        $r11 = r0.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter: com.sun.xml.bind.v2.model.impl.ClassInfoImpl this$0>;

        $r12 = staticinvoke <com.sun.xml.bind.v2.model.impl.ClassInfoImpl: com.sun.istack.FinalArrayList access$200(com.sun.xml.bind.v2.model.impl.ClassInfoImpl)>($r11);

        $r13 = virtualinvoke $r12.<com.sun.istack.FinalArrayList: java.lang.Object get(int)>(i3);

        $r14 = (com.sun.xml.bind.v2.model.impl.PropertyInfoImpl) $r13;

        $z0 = virtualinvoke $r14.<com.sun.xml.bind.v2.model.impl.PropertyInfoImpl: boolean hasAnnotation(java.lang.Class)>(class "Lcom/sun/xml/bind/annotation/OverrideAnnotationOf;");

     label3:
        if $z0 != 0 goto label4;

        $r15 = r0.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter: com.sun.xml.bind.v2.model.impl.ClassInfoImpl this$0>;

        $r19 = $r15.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl: com.sun.xml.bind.v2.model.impl.ModelBuilder builder>;

        $r16 = new com.sun.xml.bind.v2.runtime.IllegalAnnotationException;

        $r18 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages PROPERTY_ORDER_CONTAINS_UNUSED_ENTRY>;

        $r17 = newarray (java.lang.Object)[2];

        $r17[0] = r6;

        $r17[1] = $r8;

        $r20 = virtualinvoke $r18.<com.sun.xml.bind.v2.model.impl.Messages: java.lang.String format(java.lang.Object[])>($r17);

        $r21 = r0.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter: com.sun.xml.bind.v2.model.impl.ClassInfoImpl this$0>;

        specialinvoke $r16.<com.sun.xml.bind.v2.runtime.IllegalAnnotationException: void <init>(java.lang.String,com.sun.xml.bind.v2.model.'annotation'.Locatable)>($r20, $r21);

        virtualinvoke $r19.<com.sun.xml.bind.v2.model.impl.ModelBuilder: void reportError(com.sun.xml.bind.v2.runtime.IllegalAnnotationException)>($r16);

     label4:
        i3 = i3 + 1;

        goto label1;

     label5:
        return;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter r0;
        int $i0;
        com.sun.xml.bind.v2.model.impl.PropertyInfoImpl $r3, $r4;
        java.lang.Object r1, r2;

        r0 := @this: com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (com.sun.xml.bind.v2.model.impl.PropertyInfoImpl) r1;

        $r3 = (com.sun.xml.bind.v2.model.impl.PropertyInfoImpl) r2;

        $i0 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter: int compare(com.sun.xml.bind.v2.model.impl.PropertyInfoImpl,com.sun.xml.bind.v2.model.impl.PropertyInfoImpl)>($r4, $r3);

        return $i0;
    }

    static int access$000(com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter, com.sun.xml.bind.v2.model.impl.PropertyInfoImpl)
    {
        com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter r0;
        int $i0;
        com.sun.xml.bind.v2.model.impl.PropertyInfoImpl r1;

        r0 := @parameter0: com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter;

        r1 := @parameter1: com.sun.xml.bind.v2.model.impl.PropertyInfoImpl;

        $i0 = specialinvoke r0.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl$PropertySorter: int checkedGet(com.sun.xml.bind.v2.model.impl.PropertyInfoImpl)>(r1);

        return $i0;
    }
}
