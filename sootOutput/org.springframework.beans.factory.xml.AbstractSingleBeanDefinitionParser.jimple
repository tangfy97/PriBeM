public abstract class org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser extends org.springframework.beans.factory.xml.AbstractBeanDefinitionParser
{

    public void <init>()
    {
        org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser r0;

        r0 := @this: org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser;

        specialinvoke r0.<org.springframework.beans.factory.xml.AbstractBeanDefinitionParser: void <init>()>();

        return;
    }

    protected final org.springframework.beans.factory.support.AbstractBeanDefinition parseInternal(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
    {
        org.springframework.beans.factory.support.BeanDefinitionBuilder $r0;
        org.springframework.beans.factory.support.AbstractBeanDefinition $r7, $r10, $r11, $r12, $r13;
        org.springframework.beans.factory.xml.ParserContext r6;
        org.springframework.beans.factory.config.BeanDefinition $r8;
        java.lang.String $r3, $r5, $r9;
        boolean $z0, $z1;
        org.w3c.dom.Element r2;
        java.lang.Class $r4;
        java.lang.Object $r14;
        org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser r1;

        r1 := @this: org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser;

        r2 := @parameter0: org.w3c.dom.Element;

        r6 := @parameter1: org.springframework.beans.factory.xml.ParserContext;

        $r0 = staticinvoke <org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder genericBeanDefinition()>();

        $r3 = virtualinvoke r1.<org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser: java.lang.String getParentName(org.w3c.dom.Element)>(r2);

        if $r3 == null goto label1;

        $r12 = virtualinvoke $r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition getRawBeanDefinition()>();

        virtualinvoke $r12.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setParentName(java.lang.String)>($r3);

     label1:
        $r4 = virtualinvoke r1.<org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser: java.lang.Class getBeanClass(org.w3c.dom.Element)>(r2);

        if $r4 == null goto label2;

        $r11 = virtualinvoke $r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition getRawBeanDefinition()>();

        virtualinvoke $r11.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setBeanClass(java.lang.Class)>($r4);

        goto label3;

     label2:
        $r5 = virtualinvoke r1.<org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser: java.lang.String getBeanClassName(org.w3c.dom.Element)>(r2);

        if $r5 == null goto label3;

        $r10 = virtualinvoke $r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition getRawBeanDefinition()>();

        virtualinvoke $r10.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setBeanClassName(java.lang.String)>($r5);

     label3:
        $r13 = virtualinvoke $r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition getRawBeanDefinition()>();

        $r14 = virtualinvoke r6.<org.springframework.beans.factory.xml.ParserContext: java.lang.Object extractSource(java.lang.Object)>(r2);

        virtualinvoke $r13.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setSource(java.lang.Object)>($r14);

        $z1 = virtualinvoke r6.<org.springframework.beans.factory.xml.ParserContext: boolean isNested()>();

        if $z1 == 0 goto label4;

        $r8 = virtualinvoke r6.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.config.BeanDefinition getContainingBeanDefinition()>();

        $r9 = interfaceinvoke $r8.<org.springframework.beans.factory.config.BeanDefinition: java.lang.String getScope()>();

        virtualinvoke $r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder setScope(java.lang.String)>($r9);

     label4:
        $z0 = virtualinvoke r6.<org.springframework.beans.factory.xml.ParserContext: boolean isDefaultLazyInit()>();

        if $z0 == 0 goto label5;

        virtualinvoke $r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder setLazyInit(boolean)>(1);

     label5:
        virtualinvoke r1.<org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser: void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)>(r2, r6, $r0);

        $r7 = virtualinvoke $r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition getBeanDefinition()>();

        return $r7;
    }

    protected java.lang.String getParentName(org.w3c.dom.Element)
    {
        org.w3c.dom.Element r1;
        org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser r0;

        r0 := @this: org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser;

        r1 := @parameter0: org.w3c.dom.Element;

        return null;
    }

    protected java.lang.Class getBeanClass(org.w3c.dom.Element)
    {
        org.w3c.dom.Element r1;
        org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser r0;

        r0 := @this: org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser;

        r1 := @parameter0: org.w3c.dom.Element;

        return null;
    }

    protected java.lang.String getBeanClassName(org.w3c.dom.Element)
    {
        org.w3c.dom.Element r1;
        org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser r0;

        r0 := @this: org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser;

        r1 := @parameter0: org.w3c.dom.Element;

        return null;
    }

    protected void doParse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext, org.springframework.beans.factory.support.BeanDefinitionBuilder)
    {
        org.w3c.dom.Element r1;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r2;
        org.springframework.beans.factory.xml.ParserContext r3;
        org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser r0;

        r0 := @this: org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser;

        r1 := @parameter0: org.w3c.dom.Element;

        r3 := @parameter1: org.springframework.beans.factory.xml.ParserContext;

        r2 := @parameter2: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        virtualinvoke r0.<org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser: void doParse(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)>(r1, r2);

        return;
    }

    protected void doParse(org.w3c.dom.Element, org.springframework.beans.factory.support.BeanDefinitionBuilder)
    {
        org.w3c.dom.Element r1;
        org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser r0;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r2;

        r0 := @this: org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        return;
    }
}
