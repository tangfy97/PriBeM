public abstract class com.google.common.util.concurrent.AbstractService extends java.lang.Object implements com.google.common.util.concurrent.Service
{
    private final java.util.concurrent.locks.ReentrantLock lock;
    private final com.google.common.util.concurrent.AbstractService$Transition startup;
    private final com.google.common.util.concurrent.AbstractService$Transition shutdown;
    private com.google.common.util.concurrent.Service$State state;
    private boolean shutdownWhenStartupFinishes;

    public void <init>()
    {
        com.google.common.util.concurrent.Service$State $r4;
        java.util.concurrent.locks.ReentrantLock $r1;
        com.google.common.util.concurrent.AbstractService r0;
        com.google.common.util.concurrent.AbstractService$Transition $r2, $r3;

        r0 := @this: com.google.common.util.concurrent.AbstractService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock> = $r1;

        $r2 = new com.google.common.util.concurrent.AbstractService$Transition;

        specialinvoke $r2.<com.google.common.util.concurrent.AbstractService$Transition: void <init>(com.google.common.util.concurrent.AbstractService,com.google.common.util.concurrent.AbstractService$1)>(r0, null);

        r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.AbstractService$Transition startup> = $r2;

        $r3 = new com.google.common.util.concurrent.AbstractService$Transition;

        specialinvoke $r3.<com.google.common.util.concurrent.AbstractService$Transition: void <init>(com.google.common.util.concurrent.AbstractService,com.google.common.util.concurrent.AbstractService$1)>(r0, null);

        r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.AbstractService$Transition shutdown> = $r3;

        $r4 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State NEW>;

        r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state> = $r4;

        r0.<com.google.common.util.concurrent.AbstractService: boolean shutdownWhenStartupFinishes> = 0;

        return;
    }

    protected abstract void doStart();

    protected abstract void doStop();

    public final com.google.common.util.concurrent.ListenableFuture start()
    {
        java.lang.Throwable $r7, $r9;
        java.util.concurrent.locks.ReentrantLock $r1, $r4, $r8, $r10;
        com.google.common.util.concurrent.AbstractService$Transition $r5;
        com.google.common.util.concurrent.Service$State $r2, $r3, $r6;
        com.google.common.util.concurrent.AbstractService r0;

        r0 := @this: com.google.common.util.concurrent.AbstractService;

        $r1 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $r3 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state>;

        $r2 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State NEW>;

        if $r3 != $r2 goto label2;

        $r6 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State STARTING>;

        r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state> = $r6;

        virtualinvoke r0.<com.google.common.util.concurrent.AbstractService: void doStart()>();

     label2:
        $r4 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label7;

     label3:
        $r9 := @caughtexception;

        virtualinvoke r0.<com.google.common.util.concurrent.AbstractService: void notifyFailed(java.lang.Throwable)>($r9);

     label4:
        $r10 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r10.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label7;

     label5:
        $r7 := @caughtexception;

     label6:
        $r8 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r8.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r7;

     label7:
        $r5 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.AbstractService$Transition startup>;

        return $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public final com.google.common.util.concurrent.ListenableFuture stop()
    {
        java.lang.Throwable $r17, $r19;
        com.google.common.util.concurrent.Service$State $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r12, $r13, $r15;
        com.google.common.util.concurrent.AbstractService r0;
        java.util.concurrent.locks.ReentrantLock $r1, $r18, $r20, $r21;
        com.google.common.util.concurrent.AbstractService$Transition $r8, $r11, $r14, $r16;

        r0 := @this: com.google.common.util.concurrent.AbstractService;

        $r1 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $r3 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state>;

        $r2 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State NEW>;

        if $r3 != $r2 goto label2;

        $r12 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State TERMINATED>;

        r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state> = $r12;

        $r14 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.AbstractService$Transition startup>;

        $r13 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State TERMINATED>;

        virtualinvoke $r14.<com.google.common.util.concurrent.AbstractService$Transition: boolean set(java.lang.Object)>($r13);

        $r16 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.AbstractService$Transition shutdown>;

        $r15 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State TERMINATED>;

        virtualinvoke $r16.<com.google.common.util.concurrent.AbstractService$Transition: boolean set(java.lang.Object)>($r15);

        goto label4;

     label2:
        $r5 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state>;

        $r4 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State STARTING>;

        if $r5 != $r4 goto label3;

        r0.<com.google.common.util.concurrent.AbstractService: boolean shutdownWhenStartupFinishes> = 1;

        $r11 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.AbstractService$Transition startup>;

        $r10 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State STOPPING>;

        virtualinvoke $r11.<com.google.common.util.concurrent.AbstractService$Transition: boolean set(java.lang.Object)>($r10);

        goto label4;

     label3:
        $r7 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state>;

        $r6 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State RUNNING>;

        if $r7 != $r6 goto label4;

        $r9 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State STOPPING>;

        r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state> = $r9;

        virtualinvoke r0.<com.google.common.util.concurrent.AbstractService: void doStop()>();

     label4:
        $r21 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r21.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label9;

     label5:
        $r19 := @caughtexception;

        virtualinvoke r0.<com.google.common.util.concurrent.AbstractService: void notifyFailed(java.lang.Throwable)>($r19);

     label6:
        $r20 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r20.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label9;

     label7:
        $r17 := @caughtexception;

     label8:
        $r18 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r18.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r17;

     label9:
        $r8 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.AbstractService$Transition shutdown>;

        return $r8;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public com.google.common.util.concurrent.Service$State startAndWait()
    {
        java.lang.Throwable $r6;
        com.google.common.util.concurrent.ListenableFuture $r1;
        com.google.common.util.concurrent.UninterruptibleFuture $r2;
        java.lang.RuntimeException $r7;
        java.util.concurrent.ExecutionException $r5;
        com.google.common.util.concurrent.Service$State $r4;
        com.google.common.util.concurrent.AbstractService r0;
        java.lang.Object $r3;

        r0 := @this: com.google.common.util.concurrent.AbstractService;

     label1:
        $r1 = virtualinvoke r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.ListenableFuture start()>();

        $r2 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.UninterruptibleFuture makeUninterruptible(java.util.concurrent.Future)>($r1);

        $r3 = interfaceinvoke $r2.<com.google.common.util.concurrent.UninterruptibleFuture: java.lang.Object get()>();

        $r4 = (com.google.common.util.concurrent.Service$State) $r3;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        $r7 = staticinvoke <com.google.common.base.Throwables: java.lang.RuntimeException propagate(java.lang.Throwable)>($r6);

        throw $r7;

        catch java.util.concurrent.ExecutionException from label1 to label2 with label3;
    }

    public com.google.common.util.concurrent.Service$State stopAndWait()
    {
        java.lang.Throwable $r6;
        com.google.common.util.concurrent.ListenableFuture $r1;
        com.google.common.util.concurrent.UninterruptibleFuture $r2;
        java.lang.RuntimeException $r7;
        java.util.concurrent.ExecutionException $r5;
        com.google.common.util.concurrent.Service$State $r4;
        com.google.common.util.concurrent.AbstractService r0;
        java.lang.Object $r3;

        r0 := @this: com.google.common.util.concurrent.AbstractService;

     label1:
        $r1 = virtualinvoke r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.ListenableFuture stop()>();

        $r2 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.UninterruptibleFuture makeUninterruptible(java.util.concurrent.Future)>($r1);

        $r3 = interfaceinvoke $r2.<com.google.common.util.concurrent.UninterruptibleFuture: java.lang.Object get()>();

        $r4 = (com.google.common.util.concurrent.Service$State) $r3;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        $r7 = staticinvoke <com.google.common.base.Throwables: java.lang.RuntimeException propagate(java.lang.Throwable)>($r6);

        throw $r7;

        catch java.util.concurrent.ExecutionException from label1 to label2 with label3;
    }

    protected final void notifyStarted()
    {
        java.lang.Throwable $r14;
        java.lang.IllegalStateException $r8;
        com.google.common.util.concurrent.Service$State $r2, $r3, $r4, $r5, $r11;
        com.google.common.util.concurrent.AbstractService r0;
        java.lang.String $r13;
        boolean $z0;
        java.util.concurrent.locks.ReentrantLock $r1, $r7, $r15;
        com.google.common.util.concurrent.AbstractService$Transition $r6;
        java.lang.StringBuilder $r9, $r10, $r12;

        r0 := @this: com.google.common.util.concurrent.AbstractService;

        $r1 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $r3 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state>;

        $r2 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State STARTING>;

        if $r3 == $r2 goto label2;

        $r8 = new java.lang.IllegalStateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot notifyStarted() when the service is ");

        $r11 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        virtualinvoke r0.<com.google.common.util.concurrent.AbstractService: void notifyFailed(java.lang.Throwable)>($r8);

        throw $r8;

     label2:
        $r4 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State RUNNING>;

        r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state> = $r4;

        $z0 = r0.<com.google.common.util.concurrent.AbstractService: boolean shutdownWhenStartupFinishes>;

        if $z0 == 0 goto label3;

        virtualinvoke r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.ListenableFuture stop()>();

        goto label4;

     label3:
        $r6 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.AbstractService$Transition startup>;

        $r5 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State RUNNING>;

        virtualinvoke $r6.<com.google.common.util.concurrent.AbstractService$Transition: boolean set(java.lang.Object)>($r5);

     label4:
        $r7 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r7.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label7;

     label5:
        $r14 := @caughtexception;

     label6:
        $r15 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r15.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r14;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    protected final void notifyStopped()
    {
        java.lang.Throwable $r16;
        java.lang.IllegalStateException $r10;
        com.google.common.util.concurrent.Service$State $r2, $r3, $r4, $r5, $r8, $r9, $r13;
        com.google.common.util.concurrent.AbstractService r0;
        java.lang.String $r15;
        java.util.concurrent.locks.ReentrantLock $r1, $r7, $r17;
        com.google.common.util.concurrent.AbstractService$Transition $r6;
        java.lang.StringBuilder $r11, $r12, $r14;

        r0 := @this: com.google.common.util.concurrent.AbstractService;

        $r1 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $r3 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state>;

        $r2 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State STOPPING>;

        if $r3 == $r2 goto label2;

        $r9 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state>;

        $r8 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State RUNNING>;

        if $r9 == $r8 goto label2;

        $r10 = new java.lang.IllegalStateException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot notifyStopped() when the service is ");

        $r13 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r15);

        virtualinvoke r0.<com.google.common.util.concurrent.AbstractService: void notifyFailed(java.lang.Throwable)>($r10);

        throw $r10;

     label2:
        $r4 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State TERMINATED>;

        r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state> = $r4;

        $r6 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.AbstractService$Transition shutdown>;

        $r5 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State TERMINATED>;

        virtualinvoke $r6.<com.google.common.util.concurrent.AbstractService$Transition: boolean set(java.lang.Object)>($r5);

     label3:
        $r7 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r7.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label6;

     label4:
        $r16 := @caughtexception;

     label5:
        $r17 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r17.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r16;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected final void notifyFailed(java.lang.Throwable)
    {
        java.lang.Throwable r0, $r11;
        java.util.concurrent.locks.ReentrantLock $r2, $r12, $r14;
        com.google.common.util.concurrent.AbstractService$Transition $r7, $r8, $r10;
        java.lang.Exception $r9;
        com.google.common.util.concurrent.Service$State $r3, $r4, $r5, $r6, $r13;
        com.google.common.util.concurrent.AbstractService r1;

        r1 := @this: com.google.common.util.concurrent.AbstractService;

        r0 := @parameter0: java.lang.Throwable;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r2 = r1.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $r4 = r1.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state>;

        $r3 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State STARTING>;

        if $r4 != $r3 goto label2;

        $r8 = r1.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.AbstractService$Transition startup>;

        virtualinvoke $r8.<com.google.common.util.concurrent.AbstractService$Transition: boolean setException(java.lang.Throwable)>(r0);

        $r10 = r1.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.AbstractService$Transition shutdown>;

        $r9 = new java.lang.Exception;

        specialinvoke $r9.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>("Service failed to start.", r0);

        virtualinvoke $r10.<com.google.common.util.concurrent.AbstractService$Transition: boolean setException(java.lang.Throwable)>($r9);

        goto label3;

     label2:
        $r6 = r1.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state>;

        $r5 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State STOPPING>;

        if $r6 != $r5 goto label3;

        $r7 = r1.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.AbstractService$Transition shutdown>;

        virtualinvoke $r7.<com.google.common.util.concurrent.AbstractService$Transition: boolean setException(java.lang.Throwable)>(r0);

     label3:
        $r13 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State FAILED>;

        r1.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state> = $r13;

     label4:
        $r14 = r1.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r14.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label7;

     label5:
        $r11 := @caughtexception;

     label6:
        $r12 = r1.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r12.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r11;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public final boolean isRunning()
    {
        com.google.common.util.concurrent.Service$State $r1, $r2;
        com.google.common.util.concurrent.AbstractService r0;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.AbstractService;

        $r1 = virtualinvoke r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state()>();

        $r2 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State RUNNING>;

        if $r1 != $r2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final com.google.common.util.concurrent.Service$State state()
    {
        java.lang.Throwable $r7;
        java.util.concurrent.locks.ReentrantLock $r1, $r2, $r6, $r8;
        com.google.common.util.concurrent.Service$State $r3, $r4, $r5, r9;
        com.google.common.util.concurrent.AbstractService r0;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.AbstractService;

        $r1 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $z0 = r0.<com.google.common.util.concurrent.AbstractService: boolean shutdownWhenStartupFinishes>;

        if $z0 == 0 goto label3;

        $r4 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state>;

        $r3 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State STARTING>;

        if $r4 != $r3 goto label3;

        r9 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State STOPPING>;

     label2:
        $r6 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r6.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return r9;

     label3:
        $r5 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state>;

     label4:
        $r2 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return $r5;

     label5:
        $r7 := @caughtexception;

     label6:
        $r8 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r8.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.lang.String toString()
    {
        com.google.common.util.concurrent.Service$State $r6;
        com.google.common.util.concurrent.AbstractService r1;
        java.lang.StringBuilder $r0, $r4, $r5, $r7, $r8;
        java.lang.Class $r2;
        java.lang.String $r3, $r9;

        r1 := @this: com.google.common.util.concurrent.AbstractService;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r6 = virtualinvoke r1.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }
}
