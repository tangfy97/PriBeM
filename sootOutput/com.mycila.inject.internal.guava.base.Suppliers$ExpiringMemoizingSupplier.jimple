class com.mycila.inject.internal.guava.base.Suppliers$ExpiringMemoizingSupplier extends java.lang.Object implements com.mycila.inject.internal.guava.base.Supplier, java.io.Serializable
{
    final com.mycila.inject.internal.guava.base.Supplier delegate;
    final long durationNanos;
    transient volatile java.lang.Object value;
    transient volatile long expirationNanos;
    private static final long serialVersionUID;

    void <init>(com.mycila.inject.internal.guava.base.Supplier, long, java.util.concurrent.TimeUnit)
    {
        long l0, $l1;
        com.mycila.inject.internal.guava.base.Suppliers$ExpiringMemoizingSupplier r0;
        java.util.concurrent.TimeUnit r4;
        com.mycila.inject.internal.guava.base.Supplier r1, $r3;
        byte $b2;
        int $i3;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.base.Suppliers$ExpiringMemoizingSupplier;

        r1 := @parameter0: com.mycila.inject.internal.guava.base.Supplier;

        l0 := @parameter1: long;

        r4 := @parameter2: java.util.concurrent.TimeUnit;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (com.mycila.inject.internal.guava.base.Supplier) $r2;

        r0.<com.mycila.inject.internal.guava.base.Suppliers$ExpiringMemoizingSupplier: com.mycila.inject.internal.guava.base.Supplier delegate> = $r3;

        $l1 = virtualinvoke r4.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);

        r0.<com.mycila.inject.internal.guava.base.Suppliers$ExpiringMemoizingSupplier: long durationNanos> = $l1;

        $b2 = l0 cmp 0L;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: void checkArgument(boolean)>($z0);

        return;
    }

    public java.lang.Object get()
    {
        java.lang.Throwable $r4;
        long $l0, $l2, $l4, $l6, l8, l9, $l10;
        com.mycila.inject.internal.guava.base.Supplier $r2;
        byte $b1, $b3, $b5, $b7;
        int $i11;
        com.mycila.inject.internal.guava.base.Suppliers$ExpiringMemoizingSupplier r0;
        java.lang.Object $r1, $r3;

        r0 := @this: com.mycila.inject.internal.guava.base.Suppliers$ExpiringMemoizingSupplier;

        l8 = r0.<com.mycila.inject.internal.guava.base.Suppliers$ExpiringMemoizingSupplier: long expirationNanos>;

        $l0 = staticinvoke <com.mycila.inject.internal.guava.base.Platform: long systemNanoTime()>();

        $b1 = l8 cmp 0L;

        if $b1 == 0 goto label01;

        $l6 = $l0 - l8;

        $b7 = $l6 cmp 0L;

        $i11 = (int) $b7;

        if $i11 < 0 goto label10;

     label01:
        entermonitor r0;

     label02:
        $l2 = r0.<com.mycila.inject.internal.guava.base.Suppliers$ExpiringMemoizingSupplier: long expirationNanos>;

        $b3 = l8 cmp $l2;

        if $b3 != 0 goto label06;

        $r2 = r0.<com.mycila.inject.internal.guava.base.Suppliers$ExpiringMemoizingSupplier: com.mycila.inject.internal.guava.base.Supplier delegate>;

        $r3 = interfaceinvoke $r2.<com.mycila.inject.internal.guava.base.Supplier: java.lang.Object get()>();

        r0.<com.mycila.inject.internal.guava.base.Suppliers$ExpiringMemoizingSupplier: java.lang.Object value> = $r3;

        $l4 = r0.<com.mycila.inject.internal.guava.base.Suppliers$ExpiringMemoizingSupplier: long durationNanos>;

        l9 = $l0 + $l4;

        $b5 = l9 cmp 0L;

        if $b5 != 0 goto label03;

        $l10 = 1L;

        goto label04;

     label03:
        $l10 = l9;

     label04:
        r0.<com.mycila.inject.internal.guava.base.Suppliers$ExpiringMemoizingSupplier: long expirationNanos> = $l10;

        exitmonitor r0;

     label05:
        return $r3;

     label06:
        exitmonitor r0;

     label07:
        goto label10;

     label08:
        $r4 := @caughtexception;

        exitmonitor r0;

     label09:
        throw $r4;

     label10:
        $r1 = r0.<com.mycila.inject.internal.guava.base.Suppliers$ExpiringMemoizingSupplier: java.lang.Object value>;

        return $r1;

        catch java.lang.Throwable from label02 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public static void <clinit>()
    {
        <com.mycila.inject.internal.guava.base.Suppliers$ExpiringMemoizingSupplier: long serialVersionUID> = 0L;

        return;
    }
}
