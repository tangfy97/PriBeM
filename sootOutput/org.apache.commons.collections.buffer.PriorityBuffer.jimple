public class org.apache.commons.collections.buffer.PriorityBuffer extends java.util.AbstractCollection implements org.apache.commons.collections.Buffer, java.io.Serializable
{
    private static final long serialVersionUID;
    private static final int DEFAULT_CAPACITY;
    protected java.lang.Object[] elements;
    protected int size;
    protected boolean ascendingOrder;
    protected java.util.Comparator comparator;

    public void <init>()
    {
        org.apache.commons.collections.buffer.PriorityBuffer r0;

        r0 := @this: org.apache.commons.collections.buffer.PriorityBuffer;

        specialinvoke r0.<org.apache.commons.collections.buffer.PriorityBuffer: void <init>(int,boolean,java.util.Comparator)>(13, 1, null);

        return;
    }

    public void <init>(java.util.Comparator)
    {
        java.util.Comparator r1;
        org.apache.commons.collections.buffer.PriorityBuffer r0;

        r0 := @this: org.apache.commons.collections.buffer.PriorityBuffer;

        r1 := @parameter0: java.util.Comparator;

        specialinvoke r0.<org.apache.commons.collections.buffer.PriorityBuffer: void <init>(int,boolean,java.util.Comparator)>(13, 1, r1);

        return;
    }

    public void <init>(boolean)
    {
        org.apache.commons.collections.buffer.PriorityBuffer r0;
        boolean z0;

        r0 := @this: org.apache.commons.collections.buffer.PriorityBuffer;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.commons.collections.buffer.PriorityBuffer: void <init>(int,boolean,java.util.Comparator)>(13, z0, null);

        return;
    }

    public void <init>(boolean, java.util.Comparator)
    {
        java.util.Comparator r1;
        org.apache.commons.collections.buffer.PriorityBuffer r0;
        boolean z0;

        r0 := @this: org.apache.commons.collections.buffer.PriorityBuffer;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.util.Comparator;

        specialinvoke r0.<org.apache.commons.collections.buffer.PriorityBuffer: void <init>(int,boolean,java.util.Comparator)>(13, z0, r1);

        return;
    }

    public void <init>(int)
    {
        int i0;
        org.apache.commons.collections.buffer.PriorityBuffer r0;

        r0 := @this: org.apache.commons.collections.buffer.PriorityBuffer;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.commons.collections.buffer.PriorityBuffer: void <init>(int,boolean,java.util.Comparator)>(i0, 1, null);

        return;
    }

    public void <init>(int, java.util.Comparator)
    {
        int i0;
        java.util.Comparator r1;
        org.apache.commons.collections.buffer.PriorityBuffer r0;

        r0 := @this: org.apache.commons.collections.buffer.PriorityBuffer;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Comparator;

        specialinvoke r0.<org.apache.commons.collections.buffer.PriorityBuffer: void <init>(int,boolean,java.util.Comparator)>(i0, 1, r1);

        return;
    }

    public void <init>(int, boolean)
    {
        int i0;
        org.apache.commons.collections.buffer.PriorityBuffer r0;
        boolean z0;

        r0 := @this: org.apache.commons.collections.buffer.PriorityBuffer;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.commons.collections.buffer.PriorityBuffer: void <init>(int,boolean,java.util.Comparator)>(i0, z0, null);

        return;
    }

    public void <init>(int, boolean, java.util.Comparator)
    {
        java.lang.Object[] $r1;
        int i0, $i1;
        java.util.Comparator r2;
        java.lang.IllegalArgumentException $r3;
        org.apache.commons.collections.buffer.PriorityBuffer r0;
        boolean z0;

        r0 := @this: org.apache.commons.collections.buffer.PriorityBuffer;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.util.Comparator;

        specialinvoke r0.<java.util.AbstractCollection: void <init>()>();

        if i0 > 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid capacity");

        throw $r3;

     label1:
        r0.<org.apache.commons.collections.buffer.PriorityBuffer: boolean ascendingOrder> = z0;

        $i1 = i0 + 1;

        $r1 = newarray (java.lang.Object)[$i1];

        r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements> = $r1;

        r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.util.Comparator comparator> = r2;

        return;
    }

    public boolean isAscendingOrder()
    {
        org.apache.commons.collections.buffer.PriorityBuffer r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.buffer.PriorityBuffer;

        $z0 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: boolean ascendingOrder>;

        return $z0;
    }

    public java.util.Comparator comparator()
    {
        java.util.Comparator $r1;
        org.apache.commons.collections.buffer.PriorityBuffer r0;

        r0 := @this: org.apache.commons.collections.buffer.PriorityBuffer;

        $r1 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.util.Comparator comparator>;

        return $r1;
    }

    public int size()
    {
        int $i0;
        org.apache.commons.collections.buffer.PriorityBuffer r0;

        r0 := @this: org.apache.commons.collections.buffer.PriorityBuffer;

        $i0 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: int size>;

        return $i0;
    }

    public void clear()
    {
        java.lang.Object[] $r1, $r2;
        int $i0;
        org.apache.commons.collections.buffer.PriorityBuffer r0;

        r0 := @this: org.apache.commons.collections.buffer.PriorityBuffer;

        $r1 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        $i0 = lengthof $r1;

        $r2 = newarray (java.lang.Object)[$i0];

        r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements> = $r2;

        r0.<org.apache.commons.collections.buffer.PriorityBuffer: int size> = 0;

        return;
    }

    public boolean add(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.commons.collections.buffer.PriorityBuffer r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections.buffer.PriorityBuffer;

        r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.commons.collections.buffer.PriorityBuffer: boolean isAtCapacity()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.commons.collections.buffer.PriorityBuffer: void grow()>();

     label1:
        $z1 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: boolean ascendingOrder>;

        if $z1 == 0 goto label2;

        virtualinvoke r0.<org.apache.commons.collections.buffer.PriorityBuffer: void percolateUpMinHeap(java.lang.Object)>(r1);

        goto label3;

     label2:
        virtualinvoke r0.<org.apache.commons.collections.buffer.PriorityBuffer: void percolateUpMaxHeap(java.lang.Object)>(r1);

     label3:
        return 1;
    }

    public java.lang.Object get()
    {
        java.lang.Object[] $r1;
        org.apache.commons.collections.BufferUnderflowException $r3;
        java.lang.Object $r2;
        org.apache.commons.collections.buffer.PriorityBuffer r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.buffer.PriorityBuffer;

        $z0 = virtualinvoke r0.<org.apache.commons.collections.buffer.PriorityBuffer: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r3 = new org.apache.commons.collections.BufferUnderflowException;

        specialinvoke $r3.<org.apache.commons.collections.BufferUnderflowException: void <init>()>();

        throw $r3;

     label1:
        $r1 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        $r2 = $r1[1];

        return $r2;
    }

    public java.lang.Object remove()
    {
        java.lang.Object[] $r2, $r3, $r5;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object $r1, $r4;
        org.apache.commons.collections.buffer.PriorityBuffer r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.buffer.PriorityBuffer;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object get()>();

        $r2 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        $r3 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        $i0 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: int size>;

        $i1 = $i0 - 1;

        r0.<org.apache.commons.collections.buffer.PriorityBuffer: int size> = $i1;

        $r4 = $r3[$i0];

        $r2[1] = $r4;

        $r5 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        $i2 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: int size>;

        $i3 = $i2 + 1;

        $r5[$i3] = null;

        $i4 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: int size>;

        if $i4 == 0 goto label2;

        $z0 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: boolean ascendingOrder>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.commons.collections.buffer.PriorityBuffer: void percolateDownMinHeap(int)>(1);

        goto label2;

     label1:
        virtualinvoke r0.<org.apache.commons.collections.buffer.PriorityBuffer: void percolateDownMaxHeap(int)>(1);

     label2:
        return $r1;
    }

    protected boolean isAtCapacity()
    {
        java.lang.Object[] $r1;
        int $i0, $i1, $i2;
        org.apache.commons.collections.buffer.PriorityBuffer r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.buffer.PriorityBuffer;

        $r1 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        $i2 = lengthof $r1;

        $i0 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: int size>;

        $i1 = $i0 + 1;

        if $i2 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected void percolateDownMinHeap(int)
    {
        java.lang.Object[] $r1, $r3, $r4, $r6, $r7, $r8, $r11;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, $i8;
        java.lang.Object r2, $r5, $r9, $r10, $r12;
        org.apache.commons.collections.buffer.PriorityBuffer r0;

        r0 := @this: org.apache.commons.collections.buffer.PriorityBuffer;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        r2 = $r1[i0];

        i6 = i0;

     label1:
        $i2 = i6 * 2;

        $i1 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: int size>;

        if $i2 > $i1 goto label4;

        i7 = i6 * 2;

        $i3 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: int size>;

        if i7 == $i3 goto label2;

        $r7 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        $i4 = i7 + 1;

        $r10 = $r7[$i4];

        $r8 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        $r9 = $r8[i7];

        $i5 = virtualinvoke r0.<org.apache.commons.collections.buffer.PriorityBuffer: int compare(java.lang.Object,java.lang.Object)>($r10, $r9);

        if $i5 >= 0 goto label2;

        i7 = i7 + 1;

     label2:
        $r11 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        $r12 = $r11[i7];

        $i8 = virtualinvoke r0.<org.apache.commons.collections.buffer.PriorityBuffer: int compare(java.lang.Object,java.lang.Object)>($r12, r2);

        if $i8 < 0 goto label3;

        goto label4;

     label3:
        $r6 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        $r4 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        $r5 = $r4[i7];

        $r6[i6] = $r5;

        i6 = i7;

        goto label1;

     label4:
        $r3 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        $r3[i6] = r2;

        return;
    }

    protected void percolateDownMaxHeap(int)
    {
        java.lang.Object[] $r1, $r3, $r4, $r6, $r7, $r8, $r11;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, $i8;
        java.lang.Object r2, $r5, $r9, $r10, $r12;
        org.apache.commons.collections.buffer.PriorityBuffer r0;

        r0 := @this: org.apache.commons.collections.buffer.PriorityBuffer;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        r2 = $r1[i0];

        i6 = i0;

     label1:
        $i2 = i6 * 2;

        $i1 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: int size>;

        if $i2 > $i1 goto label4;

        i7 = i6 * 2;

        $i3 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: int size>;

        if i7 == $i3 goto label2;

        $r7 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        $i4 = i7 + 1;

        $r10 = $r7[$i4];

        $r8 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        $r9 = $r8[i7];

        $i5 = virtualinvoke r0.<org.apache.commons.collections.buffer.PriorityBuffer: int compare(java.lang.Object,java.lang.Object)>($r10, $r9);

        if $i5 <= 0 goto label2;

        i7 = i7 + 1;

     label2:
        $r11 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        $r12 = $r11[i7];

        $i8 = virtualinvoke r0.<org.apache.commons.collections.buffer.PriorityBuffer: int compare(java.lang.Object,java.lang.Object)>($r12, r2);

        if $i8 > 0 goto label3;

        goto label4;

     label3:
        $r6 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        $r4 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        $r5 = $r4[i7];

        $r6[i6] = $r5;

        i6 = i7;

        goto label1;

     label4:
        $r3 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        $r3[i6] = r2;

        return;
    }

    protected void percolateUpMinHeap(int)
    {
        java.lang.Object[] $r1, $r3, $r4, $r6, $r8;
        int i0, $i1, $i2, i3, i4;
        java.lang.Object r2, $r5, $r7;
        org.apache.commons.collections.buffer.PriorityBuffer r0;

        r0 := @this: org.apache.commons.collections.buffer.PriorityBuffer;

        i0 := @parameter0: int;

        i4 = i0;

        $r1 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        r2 = $r1[i0];

     label1:
        if i4 <= 1 goto label2;

        $r4 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        $i1 = i4 / 2;

        $r5 = $r4[$i1];

        $i2 = virtualinvoke r0.<org.apache.commons.collections.buffer.PriorityBuffer: int compare(java.lang.Object,java.lang.Object)>(r2, $r5);

        if $i2 >= 0 goto label2;

        i3 = i4 / 2;

        $r8 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        $r6 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        $r7 = $r6[i3];

        $r8[i4] = $r7;

        i4 = i3;

        goto label1;

     label2:
        $r3 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        $r3[i4] = r2;

        return;
    }

    protected void percolateUpMinHeap(java.lang.Object)
    {
        java.lang.Object[] $r1;
        int $i0, $i1, $i2;
        java.lang.Object r2;
        org.apache.commons.collections.buffer.PriorityBuffer r0;

        r0 := @this: org.apache.commons.collections.buffer.PriorityBuffer;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        $i0 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: int size>;

        $i1 = $i0 + 1;

        r0.<org.apache.commons.collections.buffer.PriorityBuffer: int size> = $i1;

        $r1[$i1] = r2;

        $i2 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: int size>;

        virtualinvoke r0.<org.apache.commons.collections.buffer.PriorityBuffer: void percolateUpMinHeap(int)>($i2);

        return;
    }

    protected void percolateUpMaxHeap(int)
    {
        java.lang.Object[] $r1, $r3, $r4, $r6, $r8;
        int i0, $i1, $i2, i3, i4;
        java.lang.Object r2, $r5, $r7;
        org.apache.commons.collections.buffer.PriorityBuffer r0;

        r0 := @this: org.apache.commons.collections.buffer.PriorityBuffer;

        i0 := @parameter0: int;

        i4 = i0;

        $r1 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        r2 = $r1[i0];

     label1:
        if i4 <= 1 goto label2;

        $r4 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        $i1 = i4 / 2;

        $r5 = $r4[$i1];

        $i2 = virtualinvoke r0.<org.apache.commons.collections.buffer.PriorityBuffer: int compare(java.lang.Object,java.lang.Object)>(r2, $r5);

        if $i2 <= 0 goto label2;

        i3 = i4 / 2;

        $r8 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        $r6 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        $r7 = $r6[i3];

        $r8[i4] = $r7;

        i4 = i3;

        goto label1;

     label2:
        $r3 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        $r3[i4] = r2;

        return;
    }

    protected void percolateUpMaxHeap(java.lang.Object)
    {
        java.lang.Object[] $r1;
        int $i0, $i1, $i2;
        java.lang.Object r2;
        org.apache.commons.collections.buffer.PriorityBuffer r0;

        r0 := @this: org.apache.commons.collections.buffer.PriorityBuffer;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        $i0 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: int size>;

        $i1 = $i0 + 1;

        r0.<org.apache.commons.collections.buffer.PriorityBuffer: int size> = $i1;

        $r1[$i1] = r2;

        $i2 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: int size>;

        virtualinvoke r0.<org.apache.commons.collections.buffer.PriorityBuffer: void percolateUpMaxHeap(int)>($i2);

        return;
    }

    protected int compare(java.lang.Object, java.lang.Object)
    {
        int $i0, $i1;
        java.lang.Object r2, r3;
        java.lang.Comparable $r4;
        java.util.Comparator $r1, $r5;
        org.apache.commons.collections.buffer.PriorityBuffer r0;

        r0 := @this: org.apache.commons.collections.buffer.PriorityBuffer;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        $r1 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.util.Comparator comparator>;

        if $r1 == null goto label1;

        $r5 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.util.Comparator comparator>;

        $i1 = interfaceinvoke $r5.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r2, r3);

        return $i1;

     label1:
        $r4 = (java.lang.Comparable) r2;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>(r3);

        return $i0;
    }

    protected void grow()
    {
        java.lang.Object[] $r1, r2, $r3, $r4;
        int $i0, $i1, $i2;
        org.apache.commons.collections.buffer.PriorityBuffer r0;

        r0 := @this: org.apache.commons.collections.buffer.PriorityBuffer;

        $r1 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        $i0 = lengthof $r1;

        $i1 = $i0 * 2;

        r2 = newarray (java.lang.Object)[$i1];

        $r4 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        $r3 = r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        $i2 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r2, 0, $i2);

        r0.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements> = r2;

        return;
    }

    public java.util.Iterator iterator()
    {
        org.apache.commons.collections.buffer.PriorityBuffer$1 $r0;
        org.apache.commons.collections.buffer.PriorityBuffer r1;

        r1 := @this: org.apache.commons.collections.buffer.PriorityBuffer;

        $r0 = new org.apache.commons.collections.buffer.PriorityBuffer$1;

        specialinvoke $r0.<org.apache.commons.collections.buffer.PriorityBuffer$1: void <init>(org.apache.commons.collections.buffer.PriorityBuffer)>(r1);

        return $r0;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r3;
        java.lang.StringBuffer $r0;
        int $i0, $i1, i2;
        java.lang.Object $r4;
        java.lang.String $r2;
        org.apache.commons.collections.buffer.PriorityBuffer r1;

        r1 := @this: org.apache.commons.collections.buffer.PriorityBuffer;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[ ");

        i2 = 1;

     label1:
        $i0 = r1.<org.apache.commons.collections.buffer.PriorityBuffer: int size>;

        $i1 = $i0 + 1;

        if i2 >= $i1 goto label3;

        if i2 == 1 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label2:
        $r3 = r1.<org.apache.commons.collections.buffer.PriorityBuffer: java.lang.Object[] elements>;

        $r4 = $r3[i2];

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);

        i2 = i2 + 1;

        goto label1;

     label3:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ]");

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections.buffer.PriorityBuffer: int DEFAULT_CAPACITY> = 13;

        <org.apache.commons.collections.buffer.PriorityBuffer: long serialVersionUID> = 6891186490470027896L;

        return;
    }
}
