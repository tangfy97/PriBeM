final class kodkod.util.ints.Ints$RangeIntSet$1 extends java.lang.Object implements kodkod.util.ints.IntIterator
{
    final boolean ascending;
    long cursor;
    final int end;
    final kodkod.util.ints.Ints$RangeIntSet this$1;

    void <init>(kodkod.util.ints.Ints$RangeIntSet, int, int)
    {
        kodkod.util.ints.Ints$RangeIntSet r1;
        kodkod.util.ints.Ints$RangeIntSet$1 r0;
        long $l3;
        kodkod.util.ints.IntRange $r2, $r3, $r4, $r5;
        int i0, i1, $i2, $i4, $i5, $i6, $i7, $i8;
        boolean $z0, $z1, $z2;

        r0 := @this: kodkod.util.ints.Ints$RangeIntSet$1;

        r1 := @parameter0: kodkod.util.ints.Ints$RangeIntSet;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0.<kodkod.util.ints.Ints$RangeIntSet$1: kodkod.util.ints.Ints$RangeIntSet this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 > i1 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        r0.<kodkod.util.ints.Ints$RangeIntSet$1: boolean ascending> = $z2;

        $z0 = r0.<kodkod.util.ints.Ints$RangeIntSet$1: boolean ascending>;

        if $z0 == 0 goto label3;

        $r5 = staticinvoke <kodkod.util.ints.Ints$RangeIntSet: kodkod.util.ints.IntRange access$0(kodkod.util.ints.Ints$RangeIntSet)>(r1);

        $i6 = virtualinvoke $r5.<kodkod.util.ints.IntRange: int min()>();

        $i7 = staticinvoke <java.lang.StrictMath: int max(int,int)>($i6, i0);

        goto label4;

     label3:
        $r2 = staticinvoke <kodkod.util.ints.Ints$RangeIntSet: kodkod.util.ints.IntRange access$0(kodkod.util.ints.Ints$RangeIntSet)>(r1);

        $i2 = virtualinvoke $r2.<kodkod.util.ints.IntRange: int max()>();

        $i7 = staticinvoke <java.lang.StrictMath: int min(int,int)>($i2, i0);

     label4:
        $l3 = (long) $i7;

        r0.<kodkod.util.ints.Ints$RangeIntSet$1: long cursor> = $l3;

        $z1 = r0.<kodkod.util.ints.Ints$RangeIntSet$1: boolean ascending>;

        if $z1 == 0 goto label5;

        $r4 = staticinvoke <kodkod.util.ints.Ints$RangeIntSet: kodkod.util.ints.IntRange access$0(kodkod.util.ints.Ints$RangeIntSet)>(r1);

        $i5 = virtualinvoke $r4.<kodkod.util.ints.IntRange: int max()>();

        $i8 = staticinvoke <java.lang.StrictMath: int min(int,int)>($i5, i1);

        goto label6;

     label5:
        $r3 = staticinvoke <kodkod.util.ints.Ints$RangeIntSet: kodkod.util.ints.IntRange access$0(kodkod.util.ints.Ints$RangeIntSet)>(r1);

        $i4 = virtualinvoke $r3.<kodkod.util.ints.IntRange: int min()>();

        $i8 = staticinvoke <java.lang.StrictMath: int max(int,int)>($i4, i1);

     label6:
        r0.<kodkod.util.ints.Ints$RangeIntSet$1: int end> = $i8;

        return;
    }

    public boolean hasNext()
    {
        kodkod.util.ints.Ints$RangeIntSet$1 r0;
        long $l1, $l2, $l5, $l6;
        byte $b3, $b7;
        int $i0, $i4, $i8, $i9;
        boolean $z0, $z1;

        r0 := @this: kodkod.util.ints.Ints$RangeIntSet$1;

        $z0 = r0.<kodkod.util.ints.Ints$RangeIntSet$1: boolean ascending>;

        if $z0 == 0 goto label1;

        $l6 = r0.<kodkod.util.ints.Ints$RangeIntSet$1: long cursor>;

        $i4 = r0.<kodkod.util.ints.Ints$RangeIntSet$1: int end>;

        $l5 = (long) $i4;

        $b7 = $l6 cmp $l5;

        $i8 = (int) $b7;

        if $i8 <= 0 goto label3;

     label1:
        $z1 = r0.<kodkod.util.ints.Ints$RangeIntSet$1: boolean ascending>;

        if $z1 != 0 goto label2;

        $l2 = r0.<kodkod.util.ints.Ints$RangeIntSet$1: long cursor>;

        $i0 = r0.<kodkod.util.ints.Ints$RangeIntSet$1: int end>;

        $l1 = (long) $i0;

        $b3 = $l2 cmp $l1;

        $i9 = (int) $b3;

        if $i9 >= 0 goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }

    public int next()
    {
        kodkod.util.ints.Ints$RangeIntSet$1 r0;
        long $l0, $l1, $l2, $l3;
        int $i4;
        java.util.NoSuchElementException $r1;
        boolean $z0, $z1;

        r0 := @this: kodkod.util.ints.Ints$RangeIntSet$1;

        $z0 = virtualinvoke r0.<kodkod.util.ints.Ints$RangeIntSet$1: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;

     label1:
        $z1 = r0.<kodkod.util.ints.Ints$RangeIntSet$1: boolean ascending>;

        if $z1 == 0 goto label2;

        $l2 = r0.<kodkod.util.ints.Ints$RangeIntSet$1: long cursor>;

        $l3 = $l2 + 1L;

        r0.<kodkod.util.ints.Ints$RangeIntSet$1: long cursor> = $l3;

        $i4 = (int) $l2;

        goto label3;

     label2:
        $l0 = r0.<kodkod.util.ints.Ints$RangeIntSet$1: long cursor>;

        $l1 = $l0 - 1L;

        r0.<kodkod.util.ints.Ints$RangeIntSet$1: long cursor> = $l1;

        $i4 = (int) $l0;

     label3:
        return $i4;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        kodkod.util.ints.Ints$RangeIntSet$1 r1;

        r1 := @this: kodkod.util.ints.Ints$RangeIntSet$1;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }
}
