public class org.codehaus.jackson.map.deser.std.StdKeyDeserializers extends java.lang.Object
{
    protected final java.util.HashMap _keyDeserializers;

    protected void <init>()
    {
        org.codehaus.jackson.map.deser.std.StdKeyDeserializer$DoubleKD $r9;
        org.codehaus.jackson.map.deser.std.StdKeyDeserializer$CalendarKD $r11;
        org.codehaus.jackson.map.deser.std.StdKeyDeserializer$ByteKD $r3;
        org.codehaus.jackson.map.deser.std.StdKeyDeserializer$LongKD $r7;
        java.util.HashMap $r1;
        org.codehaus.jackson.map.deser.std.StdKeyDeserializer$BoolKD $r2;
        org.codehaus.jackson.map.deser.std.StdKeyDeserializer$FloatKD $r8;
        org.codehaus.jackson.map.deser.std.StdKeyDeserializer$ShortKD $r5;
        org.codehaus.jackson.map.deser.std.StdKeyDeserializer$DateKD $r10;
        org.codehaus.jackson.map.deser.std.StdKeyDeserializers r0;
        org.codehaus.jackson.map.deser.std.StdKeyDeserializer$CharKD $r4;
        org.codehaus.jackson.map.deser.std.StdKeyDeserializer$IntKD $r6;
        org.codehaus.jackson.map.deser.std.StdKeyDeserializer$UuidKD $r12;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdKeyDeserializers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.codehaus.jackson.map.deser.std.StdKeyDeserializers: java.util.HashMap _keyDeserializers> = $r1;

        $r2 = new org.codehaus.jackson.map.deser.std.StdKeyDeserializer$BoolKD;

        specialinvoke $r2.<org.codehaus.jackson.map.deser.std.StdKeyDeserializer$BoolKD: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.std.StdKeyDeserializers: void add(org.codehaus.jackson.map.deser.std.StdKeyDeserializer)>($r2);

        $r3 = new org.codehaus.jackson.map.deser.std.StdKeyDeserializer$ByteKD;

        specialinvoke $r3.<org.codehaus.jackson.map.deser.std.StdKeyDeserializer$ByteKD: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.std.StdKeyDeserializers: void add(org.codehaus.jackson.map.deser.std.StdKeyDeserializer)>($r3);

        $r4 = new org.codehaus.jackson.map.deser.std.StdKeyDeserializer$CharKD;

        specialinvoke $r4.<org.codehaus.jackson.map.deser.std.StdKeyDeserializer$CharKD: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.std.StdKeyDeserializers: void add(org.codehaus.jackson.map.deser.std.StdKeyDeserializer)>($r4);

        $r5 = new org.codehaus.jackson.map.deser.std.StdKeyDeserializer$ShortKD;

        specialinvoke $r5.<org.codehaus.jackson.map.deser.std.StdKeyDeserializer$ShortKD: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.std.StdKeyDeserializers: void add(org.codehaus.jackson.map.deser.std.StdKeyDeserializer)>($r5);

        $r6 = new org.codehaus.jackson.map.deser.std.StdKeyDeserializer$IntKD;

        specialinvoke $r6.<org.codehaus.jackson.map.deser.std.StdKeyDeserializer$IntKD: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.std.StdKeyDeserializers: void add(org.codehaus.jackson.map.deser.std.StdKeyDeserializer)>($r6);

        $r7 = new org.codehaus.jackson.map.deser.std.StdKeyDeserializer$LongKD;

        specialinvoke $r7.<org.codehaus.jackson.map.deser.std.StdKeyDeserializer$LongKD: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.std.StdKeyDeserializers: void add(org.codehaus.jackson.map.deser.std.StdKeyDeserializer)>($r7);

        $r8 = new org.codehaus.jackson.map.deser.std.StdKeyDeserializer$FloatKD;

        specialinvoke $r8.<org.codehaus.jackson.map.deser.std.StdKeyDeserializer$FloatKD: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.std.StdKeyDeserializers: void add(org.codehaus.jackson.map.deser.std.StdKeyDeserializer)>($r8);

        $r9 = new org.codehaus.jackson.map.deser.std.StdKeyDeserializer$DoubleKD;

        specialinvoke $r9.<org.codehaus.jackson.map.deser.std.StdKeyDeserializer$DoubleKD: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.std.StdKeyDeserializers: void add(org.codehaus.jackson.map.deser.std.StdKeyDeserializer)>($r9);

        $r10 = new org.codehaus.jackson.map.deser.std.StdKeyDeserializer$DateKD;

        specialinvoke $r10.<org.codehaus.jackson.map.deser.std.StdKeyDeserializer$DateKD: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.std.StdKeyDeserializers: void add(org.codehaus.jackson.map.deser.std.StdKeyDeserializer)>($r10);

        $r11 = new org.codehaus.jackson.map.deser.std.StdKeyDeserializer$CalendarKD;

        specialinvoke $r11.<org.codehaus.jackson.map.deser.std.StdKeyDeserializer$CalendarKD: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.std.StdKeyDeserializers: void add(org.codehaus.jackson.map.deser.std.StdKeyDeserializer)>($r11);

        $r12 = new org.codehaus.jackson.map.deser.std.StdKeyDeserializer$UuidKD;

        specialinvoke $r12.<org.codehaus.jackson.map.deser.std.StdKeyDeserializer$UuidKD: void <init>()>();

        specialinvoke r0.<org.codehaus.jackson.map.deser.std.StdKeyDeserializers: void add(org.codehaus.jackson.map.deser.std.StdKeyDeserializer)>($r12);

        return;
    }

    private void add(org.codehaus.jackson.map.deser.std.StdKeyDeserializer)
    {
        org.codehaus.jackson.map.deser.std.StdKeyDeserializer r0;
        org.codehaus.jackson.map.type.TypeFactory $r4;
        org.codehaus.jackson.map.deser.std.StdKeyDeserializers r2;
        org.codehaus.jackson.type.JavaType $r5;
        java.lang.Class $r1;
        java.util.HashMap $r3;

        r2 := @this: org.codehaus.jackson.map.deser.std.StdKeyDeserializers;

        r0 := @parameter0: org.codehaus.jackson.map.deser.std.StdKeyDeserializer;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.StdKeyDeserializer: java.lang.Class getKeyClass()>();

        $r3 = r2.<org.codehaus.jackson.map.deser.std.StdKeyDeserializers: java.util.HashMap _keyDeserializers>;

        $r4 = staticinvoke <org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.map.type.TypeFactory defaultInstance()>();

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType uncheckedSimpleType(java.lang.Class)>($r1);

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r0);

        return;
    }

    public static java.util.HashMap constructAll()
    {
        org.codehaus.jackson.map.deser.std.StdKeyDeserializers $r0;
        java.util.HashMap $r1;

        $r0 = new org.codehaus.jackson.map.deser.std.StdKeyDeserializers;

        specialinvoke $r0.<org.codehaus.jackson.map.deser.std.StdKeyDeserializers: void <init>()>();

        $r1 = $r0.<org.codehaus.jackson.map.deser.std.StdKeyDeserializers: java.util.HashMap _keyDeserializers>;

        return $r1;
    }

    public static org.codehaus.jackson.map.KeyDeserializer constructStringKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringKD $r2;
        org.codehaus.jackson.type.JavaType r0;
        java.lang.Class $r1;
        org.codehaus.jackson.map.DeserializationConfig r3;

        r3 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r0 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringKD: org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringKD forType(java.lang.Class)>($r1);

        return $r2;
    }

    public static org.codehaus.jackson.map.KeyDeserializer constructEnumKeyDeserializer(org.codehaus.jackson.map.util.EnumResolver)
    {
        org.codehaus.jackson.map.util.EnumResolver r1;
        org.codehaus.jackson.map.deser.std.StdKeyDeserializer$EnumKD $r0;

        r1 := @parameter0: org.codehaus.jackson.map.util.EnumResolver;

        $r0 = new org.codehaus.jackson.map.deser.std.StdKeyDeserializer$EnumKD;

        specialinvoke $r0.<org.codehaus.jackson.map.deser.std.StdKeyDeserializer$EnumKD: void <init>(org.codehaus.jackson.map.util.EnumResolver,org.codehaus.jackson.map.introspect.AnnotatedMethod)>(r1, null);

        return $r0;
    }

    public static org.codehaus.jackson.map.KeyDeserializer constructEnumKeyDeserializer(org.codehaus.jackson.map.util.EnumResolver, org.codehaus.jackson.map.introspect.AnnotatedMethod)
    {
        org.codehaus.jackson.map.introspect.AnnotatedMethod r2;
        org.codehaus.jackson.map.util.EnumResolver r1;
        org.codehaus.jackson.map.deser.std.StdKeyDeserializer$EnumKD $r0;

        r1 := @parameter0: org.codehaus.jackson.map.util.EnumResolver;

        r2 := @parameter1: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r0 = new org.codehaus.jackson.map.deser.std.StdKeyDeserializer$EnumKD;

        specialinvoke $r0.<org.codehaus.jackson.map.deser.std.StdKeyDeserializer$EnumKD: void <init>(org.codehaus.jackson.map.util.EnumResolver,org.codehaus.jackson.map.introspect.AnnotatedMethod)>(r1, r2);

        return $r0;
    }

    public static org.codehaus.jackson.map.KeyDeserializer findStringBasedKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.DeserializationConfig$Feature $r8, $r10;
        org.codehaus.jackson.map.introspect.BasicBeanDescription r3;
        java.lang.Class[] $r4, $r6;
        org.codehaus.jackson.map.DeserializationConfig r0;
        java.lang.reflect.Constructor $r5;
        org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringFactoryKeyDeserializer $r9;
        org.codehaus.jackson.type.JavaType r1;
        org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer $r11;
        org.codehaus.jackson.map.BeanDescription $r2;
        java.lang.reflect.Method $r7;
        boolean $z0, $z1;

        r0 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.BeanDescription introspect(org.codehaus.jackson.type.JavaType)>(r1);

        r3 = (org.codehaus.jackson.map.introspect.BasicBeanDescription) $r2;

        $r4 = newarray (java.lang.Class)[1];

        $r4[0] = class "Ljava/lang/String;";

        $r5 = virtualinvoke r3.<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.lang.reflect.Constructor findSingleArgConstructor(java.lang.Class[])>($r4);

        if $r5 == null goto label2;

        $r10 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS>;

        $z1 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r10);

        if $z1 == 0 goto label1;

        staticinvoke <org.codehaus.jackson.map.util.ClassUtil: void checkAndFixAccess(java.lang.reflect.Member)>($r5);

     label1:
        $r11 = new org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer;

        specialinvoke $r11.<org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer: void <init>(java.lang.reflect.Constructor)>($r5);

        return $r11;

     label2:
        $r6 = newarray (java.lang.Class)[1];

        $r6[0] = class "Ljava/lang/String;";

        $r7 = virtualinvoke r3.<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.lang.reflect.Method findFactoryMethod(java.lang.Class[])>($r6);

        if $r7 == null goto label4;

        $r8 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS>;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r8);

        if $z0 == 0 goto label3;

        staticinvoke <org.codehaus.jackson.map.util.ClassUtil: void checkAndFixAccess(java.lang.reflect.Member)>($r7);

     label3:
        $r9 = new org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringFactoryKeyDeserializer;

        specialinvoke $r9.<org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringFactoryKeyDeserializer: void <init>(java.lang.reflect.Method)>($r7);

        return $r9;

     label4:
        return null;
    }
}
