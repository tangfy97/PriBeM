public class org.sat4j.minisat.constraints.cnf.Lits2 extends org.sat4j.minisat.constraints.cnf.Lits implements org.sat4j.minisat.core.ILits2
{
    private static final long serialVersionUID;
    private org.sat4j.minisat.constraints.cnf.BinaryClauses[] binclauses;

    public void <init>()
    {
        org.sat4j.minisat.constraints.cnf.Lits2 r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.Lits2;

        specialinvoke r0.<org.sat4j.minisat.constraints.cnf.Lits: void <init>()>();

        r0.<org.sat4j.minisat.constraints.cnf.Lits2: org.sat4j.minisat.constraints.cnf.BinaryClauses[] binclauses> = null;

        return;
    }

    public int nBinaryClauses(int)
    {
        org.sat4j.minisat.constraints.cnf.BinaryClauses[] $r1, $r2, $r4;
        org.sat4j.minisat.constraints.cnf.Lits2 r0;
        org.sat4j.minisat.constraints.cnf.BinaryClauses $r3, $r5;
        int i0, $i1;

        r0 := @this: org.sat4j.minisat.constraints.cnf.Lits2;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.Lits2: org.sat4j.minisat.constraints.cnf.BinaryClauses[] binclauses>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<org.sat4j.minisat.constraints.cnf.Lits2: org.sat4j.minisat.constraints.cnf.BinaryClauses[] binclauses>;

        $r3 = $r2[i0];

        if $r3 != null goto label2;

        return 0;

     label2:
        $r4 = r0.<org.sat4j.minisat.constraints.cnf.Lits2: org.sat4j.minisat.constraints.cnf.BinaryClauses[] binclauses>;

        $r5 = $r4[i0];

        $i1 = virtualinvoke $r5.<org.sat4j.minisat.constraints.cnf.BinaryClauses: int size()>();

        return $i1;
    }

    public void binaryClauses(int, int)
    {
        int i0, i1;
        org.sat4j.minisat.constraints.cnf.Lits2 r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.Lits2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<org.sat4j.minisat.constraints.cnf.Lits2: void register(int,int)>(i0, i1);

        specialinvoke r0.<org.sat4j.minisat.constraints.cnf.Lits2: void register(int,int)>(i1, i0);

        return;
    }

    private void register(int, int)
    {
        org.sat4j.minisat.constraints.cnf.BinaryClauses[] $r1, $r2, $r3, $r6, $r8, r11, $r12, $r13, $r14, $r15;
        org.sat4j.minisat.constraints.cnf.Lits2 r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        org.sat4j.specs.IVec $r10;
        org.sat4j.specs.IVec[] $r7;
        org.sat4j.minisat.constraints.cnf.BinaryClauses $r4, $r5, $r9, $r16;

        r0 := @this: org.sat4j.minisat.constraints.cnf.Lits2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.Lits2: org.sat4j.minisat.constraints.cnf.BinaryClauses[] binclauses>;

        if $r1 != null goto label1;

        $i9 = virtualinvoke r0.<org.sat4j.minisat.constraints.cnf.Lits2: int capacity()>();

        $i10 = 2 * $i9;

        $i11 = $i10 + 2;

        $r14 = newarray (org.sat4j.minisat.constraints.cnf.BinaryClauses)[$i11];

        r0.<org.sat4j.minisat.constraints.cnf.Lits2: org.sat4j.minisat.constraints.cnf.BinaryClauses[] binclauses> = $r14;

        goto label2;

     label1:
        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(i0, i1);

        $r2 = r0.<org.sat4j.minisat.constraints.cnf.Lits2: org.sat4j.minisat.constraints.cnf.BinaryClauses[] binclauses>;

        $i3 = lengthof $r2;

        if $i3 > $i2 goto label2;

        virtualinvoke r0.<org.sat4j.minisat.constraints.cnf.Lits2: void ensurePool(int)>($i2);

        $i5 = virtualinvoke r0.<org.sat4j.minisat.constraints.cnf.Lits2: int capacity()>();

        $i6 = 2 * $i5;

        $i7 = $i6 + 2;

        r11 = newarray (org.sat4j.minisat.constraints.cnf.BinaryClauses)[$i7];

        $r13 = r0.<org.sat4j.minisat.constraints.cnf.Lits2: org.sat4j.minisat.constraints.cnf.BinaryClauses[] binclauses>;

        $r12 = r0.<org.sat4j.minisat.constraints.cnf.Lits2: org.sat4j.minisat.constraints.cnf.BinaryClauses[] binclauses>;

        $i8 = lengthof $r12;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r13, 0, r11, 0, $i8);

        r0.<org.sat4j.minisat.constraints.cnf.Lits2: org.sat4j.minisat.constraints.cnf.BinaryClauses[] binclauses> = r11;

     label2:
        $r15 = r0.<org.sat4j.minisat.constraints.cnf.Lits2: org.sat4j.minisat.constraints.cnf.BinaryClauses[] binclauses>;

        $r16 = $r15[i0];

        if $r16 != null goto label3;

        $r6 = r0.<org.sat4j.minisat.constraints.cnf.Lits2: org.sat4j.minisat.constraints.cnf.BinaryClauses[] binclauses>;

        $r5 = new org.sat4j.minisat.constraints.cnf.BinaryClauses;

        specialinvoke $r5.<org.sat4j.minisat.constraints.cnf.BinaryClauses: void <init>(org.sat4j.minisat.core.ILits,int)>(r0, i0);

        $r6[i0] = $r5;

        $r7 = r0.<org.sat4j.minisat.constraints.cnf.Lits2: org.sat4j.specs.IVec[] watches>;

        $i4 = i0 ^ 1;

        $r10 = $r7[$i4];

        $r8 = r0.<org.sat4j.minisat.constraints.cnf.Lits2: org.sat4j.minisat.constraints.cnf.BinaryClauses[] binclauses>;

        $r9 = $r8[i0];

        interfaceinvoke $r10.<org.sat4j.specs.IVec: void insertFirstWithShifting(java.lang.Object)>($r9);

     label3:
        $r3 = r0.<org.sat4j.minisat.constraints.cnf.Lits2: org.sat4j.minisat.constraints.cnf.BinaryClauses[] binclauses>;

        $r4 = $r3[i0];

        virtualinvoke $r4.<org.sat4j.minisat.constraints.cnf.BinaryClauses: void addBinaryClause(int)>(i1);

        return;
    }

    public static void <clinit>()
    {
        <org.sat4j.minisat.constraints.cnf.Lits2: long serialVersionUID> = 1L;

        return;
    }
}
