public class groovyjarjarantlr.preprocessor.Hierarchy extends java.lang.Object
{
    protected groovyjarjarantlr.preprocessor.Grammar LexerRoot;
    protected groovyjarjarantlr.preprocessor.Grammar ParserRoot;
    protected groovyjarjarantlr.preprocessor.Grammar TreeParserRoot;
    protected java.util.Hashtable symbols;
    protected java.util.Hashtable files;
    protected groovyjarjarantlr.Tool antlrTool;

    public void <init>(groovyjarjarantlr.Tool)
    {
        groovyjarjarantlr.Tool r1;
        java.lang.String $r12, $r16, $r20;
        groovyjarjarantlr.preprocessor.Hierarchy r0;
        java.util.Hashtable $r5, $r6, $r11, $r15, $r19;
        groovyjarjarantlr.preprocessor.Grammar $r2, $r3, $r4, $r7, $r8, $r9, $r10, $r13, $r14, $r17, $r18, $r21;

        r0 := @this: groovyjarjarantlr.preprocessor.Hierarchy;

        r1 := @parameter0: groovyjarjarantlr.Tool;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<groovyjarjarantlr.preprocessor.Hierarchy: groovyjarjarantlr.preprocessor.Grammar LexerRoot> = null;

        r0.<groovyjarjarantlr.preprocessor.Hierarchy: groovyjarjarantlr.preprocessor.Grammar ParserRoot> = null;

        r0.<groovyjarjarantlr.preprocessor.Hierarchy: groovyjarjarantlr.preprocessor.Grammar TreeParserRoot> = null;

        r0.<groovyjarjarantlr.preprocessor.Hierarchy: groovyjarjarantlr.Tool antlrTool> = r1;

        $r2 = new groovyjarjarantlr.preprocessor.Grammar;

        specialinvoke $r2.<groovyjarjarantlr.preprocessor.Grammar: void <init>(groovyjarjarantlr.Tool,java.lang.String,java.lang.String,groovyjarjarantlr.collections.impl.IndexedVector)>(r1, "Lexer", null, null);

        r0.<groovyjarjarantlr.preprocessor.Hierarchy: groovyjarjarantlr.preprocessor.Grammar LexerRoot> = $r2;

        $r3 = new groovyjarjarantlr.preprocessor.Grammar;

        specialinvoke $r3.<groovyjarjarantlr.preprocessor.Grammar: void <init>(groovyjarjarantlr.Tool,java.lang.String,java.lang.String,groovyjarjarantlr.collections.impl.IndexedVector)>(r1, "Parser", null, null);

        r0.<groovyjarjarantlr.preprocessor.Hierarchy: groovyjarjarantlr.preprocessor.Grammar ParserRoot> = $r3;

        $r4 = new groovyjarjarantlr.preprocessor.Grammar;

        specialinvoke $r4.<groovyjarjarantlr.preprocessor.Grammar: void <init>(groovyjarjarantlr.Tool,java.lang.String,java.lang.String,groovyjarjarantlr.collections.impl.IndexedVector)>(r1, "TreeParser", null, null);

        r0.<groovyjarjarantlr.preprocessor.Hierarchy: groovyjarjarantlr.preprocessor.Grammar TreeParserRoot> = $r4;

        $r5 = new java.util.Hashtable;

        specialinvoke $r5.<java.util.Hashtable: void <init>(int)>(10);

        r0.<groovyjarjarantlr.preprocessor.Hierarchy: java.util.Hashtable symbols> = $r5;

        $r6 = new java.util.Hashtable;

        specialinvoke $r6.<java.util.Hashtable: void <init>(int)>(10);

        r0.<groovyjarjarantlr.preprocessor.Hierarchy: java.util.Hashtable files> = $r6;

        $r7 = r0.<groovyjarjarantlr.preprocessor.Hierarchy: groovyjarjarantlr.preprocessor.Grammar LexerRoot>;

        virtualinvoke $r7.<groovyjarjarantlr.preprocessor.Grammar: void setPredefined(boolean)>(1);

        $r8 = r0.<groovyjarjarantlr.preprocessor.Hierarchy: groovyjarjarantlr.preprocessor.Grammar ParserRoot>;

        virtualinvoke $r8.<groovyjarjarantlr.preprocessor.Grammar: void setPredefined(boolean)>(1);

        $r9 = r0.<groovyjarjarantlr.preprocessor.Hierarchy: groovyjarjarantlr.preprocessor.Grammar TreeParserRoot>;

        virtualinvoke $r9.<groovyjarjarantlr.preprocessor.Grammar: void setPredefined(boolean)>(1);

        $r11 = r0.<groovyjarjarantlr.preprocessor.Hierarchy: java.util.Hashtable symbols>;

        $r10 = r0.<groovyjarjarantlr.preprocessor.Hierarchy: groovyjarjarantlr.preprocessor.Grammar LexerRoot>;

        $r12 = virtualinvoke $r10.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String getName()>();

        $r13 = r0.<groovyjarjarantlr.preprocessor.Hierarchy: groovyjarjarantlr.preprocessor.Grammar LexerRoot>;

        virtualinvoke $r11.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r13);

        $r15 = r0.<groovyjarjarantlr.preprocessor.Hierarchy: java.util.Hashtable symbols>;

        $r14 = r0.<groovyjarjarantlr.preprocessor.Hierarchy: groovyjarjarantlr.preprocessor.Grammar ParserRoot>;

        $r16 = virtualinvoke $r14.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String getName()>();

        $r17 = r0.<groovyjarjarantlr.preprocessor.Hierarchy: groovyjarjarantlr.preprocessor.Grammar ParserRoot>;

        virtualinvoke $r15.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r17);

        $r19 = r0.<groovyjarjarantlr.preprocessor.Hierarchy: java.util.Hashtable symbols>;

        $r18 = r0.<groovyjarjarantlr.preprocessor.Hierarchy: groovyjarjarantlr.preprocessor.Grammar TreeParserRoot>;

        $r20 = virtualinvoke $r18.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String getName()>();

        $r21 = r0.<groovyjarjarantlr.preprocessor.Hierarchy: groovyjarjarantlr.preprocessor.Grammar TreeParserRoot>;

        virtualinvoke $r19.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, $r21);

        return;
    }

    public void addGrammar(groovyjarjarantlr.preprocessor.Grammar)
    {
        groovyjarjarantlr.preprocessor.GrammarFile $r5;
        groovyjarjarantlr.preprocessor.Grammar r0;
        java.lang.String $r3, $r4;
        groovyjarjarantlr.preprocessor.Hierarchy r1;
        java.util.Hashtable $r2;

        r1 := @this: groovyjarjarantlr.preprocessor.Hierarchy;

        r0 := @parameter0: groovyjarjarantlr.preprocessor.Grammar;

        virtualinvoke r0.<groovyjarjarantlr.preprocessor.Grammar: void setHierarchy(groovyjarjarantlr.preprocessor.Hierarchy)>(r1);

        $r2 = r1.<groovyjarjarantlr.preprocessor.Hierarchy: java.util.Hashtable symbols>;

        $r3 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String getName()>();

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r0);

        $r4 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String getFileName()>();

        $r5 = virtualinvoke r1.<groovyjarjarantlr.preprocessor.Hierarchy: groovyjarjarantlr.preprocessor.GrammarFile getFile(java.lang.String)>($r4);

        virtualinvoke $r5.<groovyjarjarantlr.preprocessor.GrammarFile: void addGrammar(groovyjarjarantlr.preprocessor.Grammar)>(r0);

        return;
    }

    public void addGrammarFile(groovyjarjarantlr.preprocessor.GrammarFile)
    {
        groovyjarjarantlr.preprocessor.GrammarFile r1;
        java.lang.String $r3;
        groovyjarjarantlr.preprocessor.Hierarchy r0;
        java.util.Hashtable $r2;

        r0 := @this: groovyjarjarantlr.preprocessor.Hierarchy;

        r1 := @parameter0: groovyjarjarantlr.preprocessor.GrammarFile;

        $r2 = r0.<groovyjarjarantlr.preprocessor.Hierarchy: java.util.Hashtable files>;

        $r3 = virtualinvoke r1.<groovyjarjarantlr.preprocessor.GrammarFile: java.lang.String getName()>();

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1);

        return;
    }

    public void expandGrammarsInFile(java.lang.String)
    {
        groovyjarjarantlr.preprocessor.GrammarFile $r2;
        java.util.Enumeration $r4;
        groovyjarjarantlr.collections.impl.IndexedVector $r3;
        java.lang.Object $r5;
        java.lang.String r1;
        groovyjarjarantlr.preprocessor.Grammar r6;
        groovyjarjarantlr.preprocessor.Hierarchy r0;
        boolean $z0;

        r0 := @this: groovyjarjarantlr.preprocessor.Hierarchy;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.Hierarchy: groovyjarjarantlr.preprocessor.GrammarFile getFile(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<groovyjarjarantlr.preprocessor.GrammarFile: groovyjarjarantlr.collections.impl.IndexedVector getGrammars()>();

        $r4 = virtualinvoke $r3.<groovyjarjarantlr.collections.impl.IndexedVector: java.util.Enumeration elements()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        r6 = (groovyjarjarantlr.preprocessor.Grammar) $r5;

        virtualinvoke r6.<groovyjarjarantlr.preprocessor.Grammar: void expandInPlace()>();

        goto label1;

     label2:
        return;
    }

    public groovyjarjarantlr.preprocessor.Grammar findRoot(groovyjarjarantlr.preprocessor.Grammar)
    {
        groovyjarjarantlr.preprocessor.Grammar r0, $r2, $r4;
        java.lang.String $r1;
        groovyjarjarantlr.preprocessor.Hierarchy r3;

        r3 := @this: groovyjarjarantlr.preprocessor.Hierarchy;

        r0 := @parameter0: groovyjarjarantlr.preprocessor.Grammar;

        $r1 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String getSuperGrammarName()>();

        if $r1 != null goto label1;

        return r0;

     label1:
        $r2 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.Grammar: groovyjarjarantlr.preprocessor.Grammar getSuperGrammar()>();

        if $r2 != null goto label2;

        return r0;

     label2:
        $r4 = virtualinvoke r3.<groovyjarjarantlr.preprocessor.Hierarchy: groovyjarjarantlr.preprocessor.Grammar findRoot(groovyjarjarantlr.preprocessor.Grammar)>($r2);

        return $r4;
    }

    public groovyjarjarantlr.preprocessor.GrammarFile getFile(java.lang.String)
    {
        groovyjarjarantlr.preprocessor.GrammarFile $r4;
        java.lang.Object $r3;
        java.lang.String r1;
        groovyjarjarantlr.preprocessor.Hierarchy r0;
        java.util.Hashtable $r2;

        r0 := @this: groovyjarjarantlr.preprocessor.Hierarchy;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<groovyjarjarantlr.preprocessor.Hierarchy: java.util.Hashtable files>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (groovyjarjarantlr.preprocessor.GrammarFile) $r3;

        return $r4;
    }

    public groovyjarjarantlr.preprocessor.Grammar getGrammar(java.lang.String)
    {
        java.lang.Object $r3;
        java.lang.String r1;
        groovyjarjarantlr.preprocessor.Grammar $r4;
        groovyjarjarantlr.preprocessor.Hierarchy r0;
        java.util.Hashtable $r2;

        r0 := @this: groovyjarjarantlr.preprocessor.Hierarchy;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<groovyjarjarantlr.preprocessor.Hierarchy: java.util.Hashtable symbols>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (groovyjarjarantlr.preprocessor.Grammar) $r3;

        return $r4;
    }

    public static java.lang.String optionsToString(groovyjarjarantlr.collections.impl.IndexedVector)
    {
        java.util.Enumeration $r5;
        java.lang.StringBuffer $r0, $r1, $r3, $r6, $r7, $r8, $r10, $r12, $r14, $r15, $r18, $r20;
        java.lang.String $r2, $r9, $r11, $r13, $r19, r21;
        boolean $z0;
        groovyjarjarantlr.preprocessor.Option $r17;
        groovyjarjarantlr.collections.impl.IndexedVector r4;
        java.lang.Object $r16;

        r4 := @parameter0: groovyjarjarantlr.collections.impl.IndexedVector;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("options {");

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        r21 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = virtualinvoke r4.<groovyjarjarantlr.collections.impl.IndexedVector: java.util.Enumeration elements()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r21);

        $r16 = interfaceinvoke $r5.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r17 = (groovyjarjarantlr.preprocessor.Option) $r16;

        $r18 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r17);

        $r19 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        $r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label1;

     label2:
        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r21);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}");

        $r9 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r13;
    }

    public void readGrammarFile(java.lang.String) throws java.io.FileNotFoundException
    {
        groovyjarjarantlr.Tool $r5, $r8, $r11, $r17;
        java.lang.StringBuffer $r10, $r12, $r13, $r16, $r18, $r19;
        groovyjarjarantlr.preprocessor.PreprocessorLexer $r6;
        java.lang.String r2, $r14, $r20;
        groovyjarjarantlr.preprocessor.Hierarchy r3;
        groovyjarjarantlr.preprocessor.GrammarFile $r4;
        groovyjarjarantlr.preprocessor.Preprocessor $r7;
        java.io.BufferedReader $r0;
        java.io.FileReader $r1;
        groovyjarjarantlr.TokenStreamException $r15;
        groovyjarjarantlr.ANTLRException $r9;

        r3 := @this: groovyjarjarantlr.preprocessor.Hierarchy;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.io.BufferedReader;

        $r1 = new java.io.FileReader;

        specialinvoke $r1.<java.io.FileReader: void <init>(java.lang.String)>(r2);

        specialinvoke $r0.<java.io.BufferedReader: void <init>(java.io.Reader)>($r1);

        $r4 = new groovyjarjarantlr.preprocessor.GrammarFile;

        $r5 = r3.<groovyjarjarantlr.preprocessor.Hierarchy: groovyjarjarantlr.Tool antlrTool>;

        specialinvoke $r4.<groovyjarjarantlr.preprocessor.GrammarFile: void <init>(groovyjarjarantlr.Tool,java.lang.String)>($r5, r2);

        virtualinvoke r3.<groovyjarjarantlr.preprocessor.Hierarchy: void addGrammarFile(groovyjarjarantlr.preprocessor.GrammarFile)>($r4);

        $r6 = new groovyjarjarantlr.preprocessor.PreprocessorLexer;

        specialinvoke $r6.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void <init>(java.io.Reader)>($r0);

        virtualinvoke $r6.<groovyjarjarantlr.preprocessor.PreprocessorLexer: void setFilename(java.lang.String)>(r2);

        $r7 = new groovyjarjarantlr.preprocessor.Preprocessor;

        specialinvoke $r7.<groovyjarjarantlr.preprocessor.Preprocessor: void <init>(groovyjarjarantlr.TokenStream)>($r6);

        $r8 = r3.<groovyjarjarantlr.preprocessor.Hierarchy: groovyjarjarantlr.Tool antlrTool>;

        virtualinvoke $r7.<groovyjarjarantlr.preprocessor.Preprocessor: void setTool(groovyjarjarantlr.Tool)>($r8);

        virtualinvoke $r7.<groovyjarjarantlr.preprocessor.Preprocessor: void setFilename(java.lang.String)>(r2);

     label1:
        virtualinvoke $r7.<groovyjarjarantlr.preprocessor.Preprocessor: void grammarFile(groovyjarjarantlr.preprocessor.Hierarchy,java.lang.String)>(r3, r2);

     label2:
        goto label5;

     label3:
        $r15 := @caughtexception;

        $r17 = r3.<groovyjarjarantlr.preprocessor.Hierarchy: groovyjarjarantlr.Tool antlrTool>;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Token stream error reading grammar(s):\n");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r15);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r17.<groovyjarjarantlr.Tool: void toolError(java.lang.String)>($r20);

        goto label5;

     label4:
        $r9 := @caughtexception;

        $r11 = r3.<groovyjarjarantlr.preprocessor.Hierarchy: groovyjarjarantlr.Tool antlrTool>;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("error reading grammar(s):\n");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r9);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r11.<groovyjarjarantlr.Tool: void toolError(java.lang.String)>($r14);

     label5:
        return;

        catch groovyjarjarantlr.TokenStreamException from label1 to label2 with label3;
        catch groovyjarjarantlr.ANTLRException from label1 to label2 with label4;
    }

    public boolean verifyThatHierarchyIsComplete()
    {
        java.util.Enumeration $r2, $r4;
        groovyjarjarantlr.Tool $r13;
        java.lang.StringBuffer $r12, $r14, $r16, $r17;
        java.lang.String $r6, $r8, $r10, $r15, $r18, $r20;
        groovyjarjarantlr.preprocessor.Hierarchy r0;
        java.util.Hashtable $r1, $r3, $r19;
        boolean z0, $z1, $z2;
        java.lang.Object $r5, $r9;
        groovyjarjarantlr.preprocessor.Grammar $r7, $r11, r21, r22;

        r0 := @this: groovyjarjarantlr.preprocessor.Hierarchy;

        z0 = 1;

        $r1 = r0.<groovyjarjarantlr.preprocessor.Hierarchy: java.util.Hashtable symbols>;

        $r2 = virtualinvoke $r1.<java.util.Hashtable: java.util.Enumeration elements()>();

     label1:
        $z1 = interfaceinvoke $r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label3;

        $r9 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        r21 = (groovyjarjarantlr.preprocessor.Grammar) $r9;

        $r10 = virtualinvoke r21.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String getSuperGrammarName()>();

        if $r10 != null goto label2;

        goto label1;

     label2:
        $r11 = virtualinvoke r21.<groovyjarjarantlr.preprocessor.Grammar: groovyjarjarantlr.preprocessor.Grammar getSuperGrammar()>();

        if $r11 != null goto label1;

        $r13 = r0.<groovyjarjarantlr.preprocessor.Hierarchy: groovyjarjarantlr.Tool antlrTool>;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("grammar ");

        $r15 = virtualinvoke r21.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String getSuperGrammarName()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" not defined");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r13.<groovyjarjarantlr.Tool: void toolError(java.lang.String)>($r18);

        z0 = 0;

        $r19 = r0.<groovyjarjarantlr.preprocessor.Hierarchy: java.util.Hashtable symbols>;

        $r20 = virtualinvoke r21.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String getName()>();

        virtualinvoke $r19.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>($r20);

        goto label1;

     label3:
        if z0 != 0 goto label4;

        return 0;

     label4:
        $r3 = r0.<groovyjarjarantlr.preprocessor.Hierarchy: java.util.Hashtable symbols>;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.util.Enumeration elements()>();

     label5:
        $z2 = interfaceinvoke $r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z2 == 0 goto label7;

        $r5 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        r22 = (groovyjarjarantlr.preprocessor.Grammar) $r5;

        $r6 = virtualinvoke r22.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String getSuperGrammarName()>();

        if $r6 != null goto label6;

        goto label5;

     label6:
        $r7 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.Hierarchy: groovyjarjarantlr.preprocessor.Grammar findRoot(groovyjarjarantlr.preprocessor.Grammar)>(r22);

        $r8 = virtualinvoke $r7.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String getName()>();

        virtualinvoke r22.<groovyjarjarantlr.preprocessor.Grammar: void setType(java.lang.String)>($r8);

        goto label5;

     label7:
        return 1;
    }

    public groovyjarjarantlr.Tool getTool()
    {
        groovyjarjarantlr.preprocessor.Hierarchy r0;
        groovyjarjarantlr.Tool $r1;

        r0 := @this: groovyjarjarantlr.preprocessor.Hierarchy;

        $r1 = r0.<groovyjarjarantlr.preprocessor.Hierarchy: groovyjarjarantlr.Tool antlrTool>;

        return $r1;
    }

    public void setTool(groovyjarjarantlr.Tool)
    {
        groovyjarjarantlr.preprocessor.Hierarchy r0;
        groovyjarjarantlr.Tool r1;

        r0 := @this: groovyjarjarantlr.preprocessor.Hierarchy;

        r1 := @parameter0: groovyjarjarantlr.Tool;

        r0.<groovyjarjarantlr.preprocessor.Hierarchy: groovyjarjarantlr.Tool antlrTool> = r1;

        return;
    }
}
