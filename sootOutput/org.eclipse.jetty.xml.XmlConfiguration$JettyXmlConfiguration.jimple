class org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration extends java.lang.Object implements org.eclipse.jetty.xml.ConfigurationProcessor
{
    org.eclipse.jetty.xml.XmlParser$Node _config;
    java.util.Map _idMap;
    java.util.Map _propertyMap;

    private void <init>()
    {
        org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration r0;

        r0 := @this: org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void init(java.net.URL, org.eclipse.jetty.xml.XmlParser$Node, java.util.Map, java.util.Map)
    {
        org.eclipse.jetty.xml.XmlParser$Node r1;
        java.net.URL r4;
        java.util.Map r2, r3;
        org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration r0;

        r0 := @this: org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration;

        r4 := @parameter0: java.net.URL;

        r1 := @parameter1: org.eclipse.jetty.xml.XmlParser$Node;

        r2 := @parameter2: java.util.Map;

        r3 := @parameter3: java.util.Map;

        r0.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: org.eclipse.jetty.xml.XmlParser$Node _config> = r1;

        r0.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.util.Map _idMap> = r2;

        r0.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.util.Map _propertyMap> = r3;

        return;
    }

    public java.lang.Object configure(java.lang.Object) throws java.lang.Exception
    {
        org.eclipse.jetty.xml.XmlParser$Node $r1, $r4;
        java.lang.String $r12, $r15, $r19, $r20;
        org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration r0;
        boolean $z0;
        java.lang.IllegalArgumentException $r8;
        java.lang.Class $r2, $r6, $r11;
        java.lang.Object r3;
        java.lang.StringBuilder $r9, $r10, $r13, $r14, $r16, $r17, $r18;
        java.lang.ClassLoader $r5, $r7;

        r0 := @this: org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration;

        r3 := @parameter0: java.lang.Object;

        $r1 = r0.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: org.eclipse.jetty.xml.XmlParser$Node _config>;

        $r2 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.lang.Class nodeClass(org.eclipse.jetty.xml.XmlParser$Node)>($r1);

        if $r2 == null goto label3;

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isInstance(java.lang.Object)>(r3);

        if $z0 != 0 goto label3;

        $r5 = virtualinvoke $r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r6 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        if $r5 != $r7 goto label1;

        $r20 = "";

        goto label2;

     label1:
        $r20 = "Object Class and type Class are from different loaders.";

     label2:
        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Object of class \'");

        $r11 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getCanonicalName()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is not of type \'");

        $r15 = virtualinvoke $r2.<java.lang.Class: java.lang.String getCanonicalName()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'. ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r8;

     label3:
        $r4 = r0.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: org.eclipse.jetty.xml.XmlParser$Node _config>;

        virtualinvoke r0.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: void configure(java.lang.Object,org.eclipse.jetty.xml.XmlParser$Node,int)>(r3, $r4, 0);

        return r3;
    }

    public java.lang.Object configure() throws java.lang.Exception
    {
        java.lang.ClassCastException $r7;
        org.eclipse.jetty.xml.XmlParser$Node $r1, $r3, $r6;
        java.util.Map $r5;
        java.lang.Class $r2;
        java.lang.Object $r9, r10;
        java.lang.String $r4, $r8;
        org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration;

        $r1 = r0.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: org.eclipse.jetty.xml.XmlParser$Node _config>;

        $r2 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.lang.Class nodeClass(org.eclipse.jetty.xml.XmlParser$Node)>($r1);

        $r3 = r0.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: org.eclipse.jetty.xml.XmlParser$Node _config>;

        $r4 = virtualinvoke $r3.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getAttribute(java.lang.String)>("id");

        if $r4 != null goto label1;

        $r9 = null;

        goto label2;

     label1:
        $r5 = r0.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.util.Map _idMap>;

        $r9 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

     label2:
        r10 = $r9;

        if $r9 != null goto label3;

        if $r2 == null goto label3;

        r10 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>();

     label3:
        if $r2 == null goto label4;

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isInstance(java.lang.Object)>(r10);

        if $z0 != 0 goto label4;

        $r7 = new java.lang.ClassCastException;

        $r8 = virtualinvoke $r2.<java.lang.Class: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.ClassCastException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label4:
        $r6 = r0.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: org.eclipse.jetty.xml.XmlParser$Node _config>;

        virtualinvoke r0.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: void configure(java.lang.Object,org.eclipse.jetty.xml.XmlParser$Node,int)>(r10, $r6, 0);

        return r10;
    }

    private static java.lang.Class nodeClass(org.eclipse.jetty.xml.XmlParser$Node) throws java.lang.ClassNotFoundException
    {
        org.eclipse.jetty.xml.XmlParser$Node r0;
        java.lang.Class $r2;
        java.lang.String $r1;

        r0 := @parameter0: org.eclipse.jetty.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getAttribute(java.lang.String)>("class");

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = staticinvoke <org.eclipse.jetty.util.Loader: java.lang.Class loadClass(java.lang.Class,java.lang.String,boolean)>(class "Lorg/eclipse/jetty/xml/XmlConfiguration;", $r1, 1);

        return $r2;
    }

    public void configure(java.lang.Object, org.eclipse.jetty.xml.XmlParser$Node, int) throws java.lang.Exception
    {
        java.lang.IllegalStateException $r13;
        java.util.Map $r20;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration r18;
        java.lang.Exception $r21;
        java.lang.StringBuilder $r14, $r15, $r16, $r23, $r24, $r25;
        java.lang.Object[] $r27;
        org.eclipse.jetty.xml.XmlParser$Node r0, r3;
        int i0, $i1;
        java.lang.String $r1, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r17, $r26, $r28;
        java.lang.Object $r2, r19;
        org.eclipse.jetty.util.log.Logger $r22;

        r18 := @this: org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration;

        r19 := @parameter0: java.lang.Object;

        r0 := @parameter1: org.eclipse.jetty.xml.XmlParser$Node;

        i0 := @parameter2: int;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getAttribute(java.lang.String)>("id");

        if $r1 == null goto label01;

        $r20 = r18.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.util.Map _idMap>;

        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r19);

     label01:
        $i1 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: int size()>();

        if i0 >= $i1 goto label15;

        $r2 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.Object get(int)>(i0);

        $z0 = $r2 instanceof java.lang.String;

        if $z0 == 0 goto label02;

        goto label14;

     label02:
        r3 = (org.eclipse.jetty.xml.XmlParser$Node) $r2;

     label03:
        $r4 = virtualinvoke r3.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getTag()>();

        $r5 = "Set";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label04;

        specialinvoke r18.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: void set(java.lang.Object,org.eclipse.jetty.xml.XmlParser$Node)>(r19, r3);

        goto label12;

     label04:
        $r6 = "Put";

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z2 == 0 goto label05;

        specialinvoke r18.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: void put(java.lang.Object,org.eclipse.jetty.xml.XmlParser$Node)>(r19, r3);

        goto label12;

     label05:
        $r7 = "Call";

        $z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z3 == 0 goto label06;

        specialinvoke r18.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.lang.Object call(java.lang.Object,org.eclipse.jetty.xml.XmlParser$Node)>(r19, r3);

        goto label12;

     label06:
        $r8 = "Get";

        $z4 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z4 == 0 goto label07;

        specialinvoke r18.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.lang.Object get(java.lang.Object,org.eclipse.jetty.xml.XmlParser$Node)>(r19, r3);

        goto label12;

     label07:
        $r9 = "New";

        $z5 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z5 == 0 goto label08;

        specialinvoke r18.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.lang.Object newObj(java.lang.Object,org.eclipse.jetty.xml.XmlParser$Node)>(r19, r3);

        goto label12;

     label08:
        $r10 = "Array";

        $z6 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z6 == 0 goto label09;

        specialinvoke r18.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.lang.Object newArray(java.lang.Object,org.eclipse.jetty.xml.XmlParser$Node)>(r19, r3);

        goto label12;

     label09:
        $r11 = "Ref";

        $z7 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z7 == 0 goto label10;

        specialinvoke r18.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.lang.Object refObj(java.lang.Object,org.eclipse.jetty.xml.XmlParser$Node)>(r19, r3);

        goto label12;

     label10:
        $r12 = "Property";

        $z8 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z8 == 0 goto label11;

        specialinvoke r18.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.lang.Object propertyObj(org.eclipse.jetty.xml.XmlParser$Node)>(r3);

        goto label12;

     label11:
        $r13 = new java.lang.IllegalStateException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown tag: ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r17);

        throw $r13;

     label12:
        goto label14;

     label13:
        $r21 := @caughtexception;

        $r22 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger access$100()>();

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Config error at ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $r27 = newarray (java.lang.Object)[1];

        $r28 = virtualinvoke $r21.<java.lang.Exception: java.lang.String toString()>();

        $r27[0] = $r28;

        interfaceinvoke $r22.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r26, $r27);

        throw $r21;

     label14:
        i0 = i0 + 1;

        goto label01;

     label15:
        return;

        catch java.lang.Exception from label03 to label12 with label13;
    }

    private void set(java.lang.Object, org.eclipse.jetty.xml.XmlParser$Node) throws java.lang.Exception
    {
        java.lang.NoSuchFieldException $r57, $r66;
        java.lang.StringBuilder $r2, $r3, $r7, $r9, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r89, $r90, $r91, $r92, $r93, $r95, $r96;
        java.lang.Object[] $r13, $r27, $r52;
        java.lang.reflect.Constructor $r86;
        java.lang.String $r1, $r4, $r6, $r8, $r10, $r26, $r45, $r76, $r97;
        java.lang.Class[] $r15, $r37, $r38, $r39, $r41, $r43, $r49;
        java.lang.reflect.Field $r79, $r83;
        java.lang.NoSuchMethodException $r33, $r60, $r68, $r88;
        java.lang.reflect.Method[] $r59;
        java.util.Locale $r5;
        java.lang.InstantiationException $r29;
        java.lang.reflect.Method $r42, $r44, $r46, $r53, $r77, $r82, r84;
        org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.IllegalAccessException $r31, $r35, $r47, $r62, $r70;
        java.util.Collection $r54;
        org.eclipse.jetty.xml.XmlParser$Node r0;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7;
        java.lang.IllegalArgumentException $r55, $r64, $r72;
        java.lang.Object $r12, r74, $r80, $r87;
        java.lang.Class $r14, $r28, $r40, r50, $r51, r75, $r78, $r81, r85, $r94;
        org.eclipse.jetty.util.log.Logger $r16, $r17, $r30, $r32, $r34, $r36, $r48, $r56, $r58, $r61, $r63, $r65, $r67, $r69, $r71, $r73;

        r11 := @this: org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration;

        r74 := @parameter0: java.lang.Object;

        r0 := @parameter1: org.eclipse.jetty.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getAttribute(java.lang.String)>("name");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("set");

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        $r5 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r6 = virtualinvoke $r4.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(1);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = specialinvoke r11.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.lang.Object value(java.lang.Object,org.eclipse.jetty.xml.XmlParser$Node)>(r74, r0);

        $r13 = newarray (java.lang.Object)[1];

        $r13[0] = $r12;

        $r14 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.lang.Class nodeClass(org.eclipse.jetty.xml.XmlParser$Node)>(r0);

        r75 = $r14;

        if $r14 == null goto label01;

        r74 = null;

        goto label02;

     label01:
        r75 = virtualinvoke r74.<java.lang.Object: java.lang.Class getClass()>();

     label02:
        $r15 = newarray (java.lang.Class)[1];

        $r15[0] = class "Ljava/lang/Object;";

        if $r12 == null goto label03;

        $r28 = virtualinvoke $r12.<java.lang.Object: java.lang.Class getClass()>();

        $r15[0] = $r28;

     label03:
        $r16 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger access$100()>();

        $z0 = interfaceinvoke $r16.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label06;

        $r17 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger access$100()>();

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XML ");

        if r74 == null goto label04;

        $r76 = virtualinvoke r74.<java.lang.Object: java.lang.String toString()>();

        goto label05;

     label04:
        $r76 = virtualinvoke r75.<java.lang.Class: java.lang.String getName()>();

     label05:
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r76);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $r27 = newarray (java.lang.Object)[0];

        interfaceinvoke $r17.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r26, $r27);

     label06:
        $r77 = virtualinvoke r75.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r10, $r15);

        virtualinvoke $r77.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r74, $r13);

     label07:
        return;

     label08:
        $r72 := @caughtexception;

        $r73 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r73.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r72);

        goto label11;

     label09:
        $r70 := @caughtexception;

        $r71 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r71.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r70);

        goto label11;

     label10:
        $r68 := @caughtexception;

        $r69 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r69.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r68);

     label11:
        $r78 = $r15[0];

        $r79 = virtualinvoke $r78.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("TYPE");

        $r80 = virtualinvoke $r79.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $r81 = (java.lang.Class) $r80;

        $r15[0] = $r81;

        $r82 = virtualinvoke r75.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r10, $r15);

        virtualinvoke $r82.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r74, $r13);

     label12:
        return;

     label13:
        $r66 := @caughtexception;

        $r67 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r67.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r66);

        goto label17;

     label14:
        $r64 := @caughtexception;

        $r65 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r65.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r64);

        goto label17;

     label15:
        $r62 := @caughtexception;

        $r63 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r63.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r62);

        goto label17;

     label16:
        $r60 := @caughtexception;

        $r61 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r61.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r60);

     label17:
        $r83 = virtualinvoke r75.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>($r1);

        $i4 = virtualinvoke $r83.<java.lang.reflect.Field: int getModifiers()>();

        $z5 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i4);

        if $z5 == 0 goto label19;

        virtualinvoke $r83.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r74, $r12);

     label18:
        return;

     label19:
        goto label21;

     label20:
        $r57 := @caughtexception;

        $r58 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r58.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r57);

     label21:
        $r59 = virtualinvoke r75.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        r84 = null;

        i5 = 0;

     label22:
        if $r59 == null goto label34;

        $i1 = lengthof $r59;

        if i5 >= $i1 goto label34;

        $r42 = $r59[i5];

        $r43 = virtualinvoke $r42.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r44 = $r59[i5];

        $r45 = virtualinvoke $r44.<java.lang.reflect.Method: java.lang.String getName()>();

        $z3 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r45);

        if $z3 == 0 goto label33;

        $i2 = lengthof $r43;

        if $i2 != 1 goto label33;

     label23:
        r84 = $r59[i5];

        $r46 = $r59[i5];

        virtualinvoke $r46.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r74, $r13);

     label24:
        return;

     label25:
        $r55 := @caughtexception;

        $r56 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r56.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r55);

        goto label27;

     label26:
        $r47 := @caughtexception;

        $r48 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r48.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r47);

     label27:
        $r49 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: java.lang.Class[] access$200()>();

        $i3 = lengthof $r49;

        i6 = 0;

     label28:
        if i6 >= $i3 goto label31;

        r50 = $r49[i6];

        $r51 = $r43[0];

        $z4 = virtualinvoke $r51.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r50);

        if $z4 == 0 goto label30;

        $r53 = $r59[i5];

        $r52 = newarray (java.lang.Object)[1];

        $r54 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.util.Collection convertArrayToCollection(java.lang.Object,java.lang.Class)>($r12, r50);

        $r52[0] = $r54;

        virtualinvoke $r53.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r74, $r52);

     label29:
        return;

     label30:
        i6 = i6 + 1;

        goto label28;

     label31:
        goto label33;

     label32:
        $r35 := @caughtexception;

        $r36 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r36.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r35);

     label33:
        i5 = i5 + 1;

        goto label22;

     label34:
        if r84 == null goto label43;

     label35:
        $r37 = virtualinvoke r84.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        r85 = $r37[0];

        $z1 = virtualinvoke r85.<java.lang.Class: boolean isPrimitive()>();

        if $z1 == 0 goto label38;

        i7 = 0;

     label36:
        $r38 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: java.lang.Class[] access$300()>();

        $i0 = lengthof $r38;

        if i7 >= $i0 goto label38;

        $r39 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: java.lang.Class[] access$300()>();

        $r40 = $r39[i7];

        $z2 = virtualinvoke r85.<java.lang.Object: boolean equals(java.lang.Object)>($r40);

        if $z2 == 0 goto label37;

        $r41 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: java.lang.Class[] access$400()>();

        r85 = $r41[i7];

        goto label38;

     label37:
        i7 = i7 + 1;

        goto label36;

     label38:
        $r86 = virtualinvoke r85.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r15);

        $r87 = virtualinvoke $r86.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r13);

        $r13[0] = $r87;

        virtualinvoke r84.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r74, $r13);

     label39:
        return;

     label40:
        $r33 := @caughtexception;

        $r34 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r34.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r33);

        goto label43;

     label41:
        $r31 := @caughtexception;

        $r32 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r32.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r31);

        goto label43;

     label42:
        $r29 := @caughtexception;

        $r30 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r30.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r29);

     label43:
        $r88 = new java.lang.NoSuchMethodException;

        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r75);

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r94 = $r15[0];

        $r95 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r94);

        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r88.<java.lang.NoSuchMethodException: void <init>(java.lang.String)>($r97);

        throw $r88;

        catch java.lang.IllegalArgumentException from label06 to label07 with label08;
        catch java.lang.IllegalAccessException from label06 to label07 with label09;
        catch java.lang.NoSuchMethodException from label06 to label07 with label10;
        catch java.lang.NoSuchFieldException from label11 to label12 with label13;
        catch java.lang.IllegalArgumentException from label11 to label12 with label14;
        catch java.lang.IllegalAccessException from label11 to label12 with label15;
        catch java.lang.NoSuchMethodException from label11 to label12 with label16;
        catch java.lang.NoSuchFieldException from label17 to label18 with label20;
        catch java.lang.IllegalArgumentException from label23 to label24 with label25;
        catch java.lang.IllegalAccessException from label23 to label24 with label26;
        catch java.lang.IllegalAccessException from label27 to label29 with label32;
        catch java.lang.IllegalAccessException from label30 to label31 with label32;
        catch java.lang.NoSuchMethodException from label35 to label39 with label40;
        catch java.lang.IllegalAccessException from label35 to label39 with label41;
        catch java.lang.InstantiationException from label35 to label39 with label42;
    }

    private static java.util.Collection convertArrayToCollection(java.lang.Object, java.lang.Class)
    {
        java.util.ArrayList $r12, $r14;
        java.util.HashSet $r13;
        java.util.AbstractCollection r15;
        java.lang.String $r10;
        boolean $z0, $z1, $z2, $z3;
        org.eclipse.jetty.util.ArrayQueue $r11;
        java.lang.IllegalArgumentException $r2;
        java.lang.Object r0;
        java.lang.Class $r1, $r5, r8;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r9;

        r0 := @parameter0: java.lang.Object;

        r8 := @parameter1: java.lang.Class;

        r15 = null;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label3;

        $z1 = virtualinvoke r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Ljava/util/ArrayList;");

        if $z1 == 0 goto label1;

        r15 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.util.ArrayList convertArrayToArrayList(java.lang.Object)>(r0);

        goto label3;

     label1:
        $z2 = virtualinvoke r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Ljava/util/HashSet;");

        if $z2 == 0 goto label2;

        $r13 = new java.util.HashSet;

        $r14 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.util.ArrayList convertArrayToArrayList(java.lang.Object)>(r0);

        specialinvoke $r13.<java.util.HashSet: void <init>(java.util.Collection)>($r14);

        r15 = $r13;

        goto label3;

     label2:
        $z3 = virtualinvoke r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Lorg/eclipse/jetty/util/ArrayQueue;");

        if $z3 == 0 goto label3;

        $r11 = new org.eclipse.jetty.util.ArrayQueue;

        specialinvoke $r11.<org.eclipse.jetty.util.ArrayQueue: void <init>()>();

        $r12 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.util.ArrayList convertArrayToArrayList(java.lang.Object)>(r0);

        virtualinvoke $r11.<org.eclipse.jetty.util.ArrayQueue: boolean addAll(java.util.Collection)>($r12);

        r15 = $r11;

     label3:
        if r15 != null goto label4;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t convert \"");

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" to ");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r2;

     label4:
        return r15;
    }

    private static java.util.ArrayList convertArrayToArrayList(java.lang.Object)
    {
        int $i0, i1;
        java.lang.Object r0, $r2;
        java.util.ArrayList $r1;

        r0 := @parameter0: java.lang.Object;

        $i0 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(r0);

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0);

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r2 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(r0, i1);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    private void put(java.lang.Object, org.eclipse.jetty.xml.XmlParser$Node) throws java.lang.Exception
    {
        java.lang.Object[] $r17;
        org.eclipse.jetty.xml.XmlParser$Node r2;
        java.util.Map r1;
        java.lang.String $r3, $r16, $r22;
        boolean $z0, $z1;
        org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration r4;
        java.lang.IllegalArgumentException $r18;
        java.lang.Object r0, $r5;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r19, $r20, $r21;
        org.eclipse.jetty.util.log.Logger $r6, $r7;

        r4 := @this: org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.eclipse.jetty.xml.XmlParser$Node;

        $z0 = r0 instanceof java.util.Map;

        if $z0 != 0 goto label1;

        $r18 = new java.lang.IllegalArgumentException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Object for put is not a Map: ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r18;

     label1:
        r1 = (java.util.Map) r0;

        $r3 = virtualinvoke r2.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getAttribute(java.lang.String)>("name");

        $r5 = specialinvoke r4.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.lang.Object value(java.lang.Object,org.eclipse.jetty.xml.XmlParser$Node)>(r0, r2);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        $r6 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger access$100()>();

        $z1 = interfaceinvoke $r6.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label2;

        $r7 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger access$100()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XML ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".put(");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = newarray (java.lang.Object)[0];

        interfaceinvoke $r7.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r16, $r17);

     label2:
        return;
    }

    private java.lang.Object get(java.lang.Object, org.eclipse.jetty.xml.XmlParser$Node) throws java.lang.Exception
    {
        java.lang.NoSuchMethodException $r27;
        java.lang.NoSuchFieldException $r26;
        java.util.Locale $r8;
        java.util.Map $r19;
        java.lang.reflect.Method $r15;
        boolean $z0;
        org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration r18;
        java.lang.StringBuilder $r5, $r6, $r10, $r12, $r21, $r22, $r23;
        java.lang.Object[] $r16, $r25;
        org.eclipse.jetty.xml.XmlParser$Node r0;
        java.lang.String $r2, $r3, $r7, $r9, $r11, $r13, $r24;
        java.lang.Class[] $r14;
        java.lang.reflect.Field $r28;
        java.lang.Class $r1, r31;
        java.lang.Object $r17, $r29, r30;
        org.eclipse.jetty.util.log.Logger $r4, $r20;

        r18 := @this: org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration;

        r30 := @parameter0: java.lang.Object;

        r0 := @parameter1: org.eclipse.jetty.xml.XmlParser$Node;

        $r1 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.lang.Class nodeClass(org.eclipse.jetty.xml.XmlParser$Node)>(r0);

        r31 = $r1;

        if $r1 == null goto label01;

        r30 = null;

        goto label02;

     label01:
        r31 = virtualinvoke r30.<java.lang.Object: java.lang.Class getClass()>();

     label02:
        $r2 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getAttribute(java.lang.String)>("name");

        $r3 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getAttribute(java.lang.String)>("id");

        $r4 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger access$100()>();

        $z0 = interfaceinvoke $r4.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label03;

        $r20 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger access$100()>();

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XML get ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = newarray (java.lang.Object)[0];

        interfaceinvoke $r20.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r24, $r25);

     label03:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("get");

        $r7 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        $r8 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r9 = virtualinvoke $r7.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r8);

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>(1);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = (java.lang.Class[]) null;

        $r15 = virtualinvoke r31.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r13, $r14);

        $r16 = (java.lang.Object[]) null;

        $r17 = virtualinvoke $r15.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r30, $r16);

        r30 = $r17;

        virtualinvoke r18.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: void configure(java.lang.Object,org.eclipse.jetty.xml.XmlParser$Node,int)>($r17, r0, 0);

     label04:
        goto label09;

     label05:
        $r27 := @caughtexception;

     label06:
        $r28 = virtualinvoke r31.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>($r2);

        $r29 = virtualinvoke $r28.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r30);

        r30 = $r29;

        virtualinvoke r18.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: void configure(java.lang.Object,org.eclipse.jetty.xml.XmlParser$Node,int)>($r29, r0, 0);

     label07:
        goto label09;

     label08:
        $r26 := @caughtexception;

        throw $r27;

     label09:
        if $r3 == null goto label10;

        $r19 = r18.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.util.Map _idMap>;

        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r30);

     label10:
        return r30;

        catch java.lang.NoSuchMethodException from label03 to label04 with label05;
        catch java.lang.NoSuchFieldException from label06 to label07 with label08;
    }

    private java.lang.Object call(java.lang.Object, org.eclipse.jetty.xml.XmlParser$Node) throws java.lang.Exception
    {
        java.lang.IllegalStateException $r24;
        java.lang.NoSuchMethodException $r23;
        java.util.Map $r7;
        boolean $z0, $z1, $z2, $z3;
        org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration r6;
        java.lang.StringBuilder $r9, $r10, $r11, $r25, $r26, $r27, $r28, $r29;
        java.lang.Object[] $r13, $r20;
        org.eclipse.jetty.xml.XmlParser$Node r0, $r15, $r18;
        int $i0, $i1, i2, i3, i4, i5, i6;
        java.lang.String $r1, $r3, $r12, $r19, $r22, $r30;
        java.lang.IllegalArgumentException $r21;
        java.lang.Class $r2, r32;
        java.lang.Object $r5, $r14, $r16, $r17, r31;
        org.eclipse.jetty.util.log.Logger $r4, $r8;

        r6 := @this: org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration;

        r31 := @parameter0: java.lang.Object;

        r0 := @parameter1: org.eclipse.jetty.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getAttribute(java.lang.String)>("id");

        $r2 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.lang.Class nodeClass(org.eclipse.jetty.xml.XmlParser$Node)>(r0);

        r32 = $r2;

        if $r2 == null goto label01;

        r31 = null;

        goto label02;

     label01:
        if r31 == null goto label02;

        r32 = virtualinvoke r31.<java.lang.Object: java.lang.Class getClass()>();

     label02:
        if r32 != null goto label03;

        $r21 = new java.lang.IllegalArgumentException;

        $r22 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r21;

     label03:
        i2 = 0;

        i3 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: int size()>();

        i4 = 0;

     label04:
        $i0 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: int size()>();

        if i4 >= $i0 goto label08;

        $r17 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.Object get(int)>(i4);

        $z2 = $r17 instanceof java.lang.String;

        if $z2 == 0 goto label05;

        goto label07;

     label05:
        $r18 = (org.eclipse.jetty.xml.XmlParser$Node) $r17;

        $r19 = virtualinvoke $r18.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getTag()>();

        $z3 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>("Arg");

        if $z3 != 0 goto label06;

        i3 = i4;

        goto label08;

     label06:
        i2 = i2 + 1;

     label07:
        i4 = i4 + 1;

        goto label04;

     label08:
        $r20 = newarray (java.lang.Object)[i2];

        i5 = 0;

        i6 = 0;

     label09:
        if i6 >= i2 goto label12;

        $r14 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.Object get(int)>(i5);

        $z1 = $r14 instanceof java.lang.String;

        if $z1 == 0 goto label10;

        goto label11;

     label10:
        $i1 = i6;

        i6 = i6 + 1;

        $r15 = (org.eclipse.jetty.xml.XmlParser$Node) $r14;

        $r16 = specialinvoke r6.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.lang.Object value(java.lang.Object,org.eclipse.jetty.xml.XmlParser$Node)>(r31, $r15);

        $r20[$i1] = $r16;

     label11:
        i5 = i5 + 1;

        goto label09;

     label12:
        $r3 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getAttribute(java.lang.String)>("name");

        $r4 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger access$100()>();

        $z0 = interfaceinvoke $r4.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label13;

        $r8 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger access$100()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XML call ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = newarray (java.lang.Object)[0];

        interfaceinvoke $r8.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r12, $r13);

     label13:
        $r5 = staticinvoke <org.eclipse.jetty.util.TypeUtil: java.lang.Object call(java.lang.Class,java.lang.String,java.lang.Object,java.lang.Object[])>(r32, $r3, r31, $r20);

        if $r1 == null goto label14;

        $r7 = r6.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.util.Map _idMap>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r5);

     label14:
        virtualinvoke r6.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: void configure(java.lang.Object,org.eclipse.jetty.xml.XmlParser$Node,int)>($r5, r0, i3);

     label15:
        return $r5;

     label16:
        $r23 := @caughtexception;

        $r24 = new java.lang.IllegalStateException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No Method: ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r32);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r30);

        virtualinvoke $r24.<java.lang.IllegalStateException: java.lang.Throwable initCause(java.lang.Throwable)>($r23);

        throw $r24;

        catch java.lang.NoSuchMethodException from label13 to label15 with label16;
    }

    private java.lang.Object newObj(java.lang.Object, org.eclipse.jetty.xml.XmlParser$Node) throws java.lang.Exception
    {
        java.lang.IllegalStateException $r5;
        java.util.Map $r17;
        java.lang.InstantiationException $r33;
        boolean $z0, $z1, $z2, $z3, z4;
        org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration r16;
        java.lang.IllegalAccessException $r35;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r11, $r19, $r20, $r21;
        java.lang.Object[] $r23, $r30;
        java.lang.reflect.Constructor $r13, $r15;
        java.lang.reflect.Constructor[] $r4;
        org.eclipse.jetty.xml.XmlParser$Node r0, $r25, $r28;
        int $i0, $i1, $i2, $i3, i4, i5, i6, i7, i8, i9;
        java.lang.String $r2, $r12, $r22, $r29;
        java.lang.Class[] $r14;
        java.lang.IllegalArgumentException $r31;
        java.lang.Class $r1;
        java.lang.Object r10, $r24, $r26, $r27, r37;
        org.eclipse.jetty.util.log.Logger $r3, $r18, $r32, $r34, $r36;

        r16 := @this: org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration;

        r10 := @parameter0: java.lang.Object;

        r0 := @parameter1: org.eclipse.jetty.xml.XmlParser$Node;

        $r1 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.lang.Class nodeClass(org.eclipse.jetty.xml.XmlParser$Node)>(r0);

        $r2 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getAttribute(java.lang.String)>("id");

        i4 = 0;

        i5 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: int size()>();

        i6 = 0;

     label01:
        $i0 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: int size()>();

        if i6 >= $i0 goto label05;

        $r27 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.Object get(int)>(i6);

        $z2 = $r27 instanceof java.lang.String;

        if $z2 == 0 goto label02;

        goto label04;

     label02:
        $r28 = (org.eclipse.jetty.xml.XmlParser$Node) $r27;

        $r29 = virtualinvoke $r28.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getTag()>();

        $z3 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>("Arg");

        if $z3 != 0 goto label03;

        i5 = i6;

        goto label05;

     label03:
        i4 = i4 + 1;

     label04:
        i6 = i6 + 1;

        goto label01;

     label05:
        $r30 = newarray (java.lang.Object)[i4];

        i7 = 0;

        i8 = 0;

     label06:
        if i8 >= i4 goto label09;

        $r24 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.Object get(int)>(i7);

        $z1 = $r24 instanceof java.lang.String;

        if $z1 == 0 goto label07;

        goto label08;

     label07:
        $i3 = i8;

        i8 = i8 + 1;

        $r25 = (org.eclipse.jetty.xml.XmlParser$Node) $r24;

        $r26 = specialinvoke r16.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.lang.Object value(java.lang.Object,org.eclipse.jetty.xml.XmlParser$Node)>(r10, $r25);

        $r30[$i3] = $r26;

     label08:
        i7 = i7 + 1;

        goto label06;

     label09:
        $r3 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger access$100()>();

        $z0 = interfaceinvoke $r3.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label10;

        $r18 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger access$100()>();

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XML new ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        $r23 = newarray (java.lang.Object)[0];

        interfaceinvoke $r18.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r22, $r23);

     label10:
        $r4 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>();

        i9 = 0;

     label11:
        if $r4 == null goto label21;

        $i1 = lengthof $r4;

        if i9 >= $i1 goto label21;

        $r13 = $r4[i9];

        $r14 = virtualinvoke $r13.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        $i2 = lengthof $r14;

        if $i2 == i4 goto label12;

        goto label20;

     label12:
        r37 = null;

        z4 = 0;

     label13:
        $r15 = $r4[i9];

        r37 = virtualinvoke $r15.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r30);

        z4 = 1;

     label14:
        goto label18;

     label15:
        $r35 := @caughtexception;

        $r36 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r36.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r35);

        goto label18;

     label16:
        $r33 := @caughtexception;

        $r34 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r34.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r33);

        goto label18;

     label17:
        $r31 := @caughtexception;

        $r32 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r32.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r31);

     label18:
        if z4 == 0 goto label20;

        if $r2 == null goto label19;

        $r17 = r16.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.util.Map _idMap>;

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, r37);

     label19:
        virtualinvoke r16.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: void configure(java.lang.Object,org.eclipse.jetty.xml.XmlParser$Node,int)>(r37, r0, i5);

        return r37;

     label20:
        i9 = i9 + 1;

        goto label11;

     label21:
        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No Constructor: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r5;

        catch java.lang.IllegalAccessException from label13 to label14 with label15;
        catch java.lang.InstantiationException from label13 to label14 with label16;
        catch java.lang.IllegalArgumentException from label13 to label14 with label17;
    }

    private java.lang.Object refObj(java.lang.Object, org.eclipse.jetty.xml.XmlParser$Node) throws java.lang.Exception
    {
        java.lang.IllegalStateException $r5;
        org.eclipse.jetty.xml.XmlParser$Node r0;
        java.util.Map $r3;
        java.lang.Object $r4, r10;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r1, $r9;
        org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration r2;

        r2 := @this: org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration;

        r10 := @parameter0: java.lang.Object;

        r0 := @parameter1: org.eclipse.jetty.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getAttribute(java.lang.String)>("id");

        $r3 = r2.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.util.Map _idMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r4 != null goto label1;

        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No object for id=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label1:
        virtualinvoke r2.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: void configure(java.lang.Object,org.eclipse.jetty.xml.XmlParser$Node,int)>($r4, r0, 0);

        return $r4;
    }

    private java.lang.Object newArray(java.lang.Object, org.eclipse.jetty.xml.XmlParser$Node) throws java.lang.Exception
    {
        org.eclipse.jetty.xml.XmlParser$Node r0, r7;
        java.util.Map $r5, $r11;
        java.lang.String $r1, $r2, $r8, $r13, $r14, $r15;
        org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Iterator $r18;
        java.lang.Object $r3, $r6, r9, $r10, r17, $r19, $r20;
        java.lang.Class $r12, r16;

        r4 := @this: org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration;

        r9 := @parameter0: java.lang.Object;

        r0 := @parameter1: org.eclipse.jetty.xml.XmlParser$Node;

        r16 = class "Ljava/lang/Object;";

        $r1 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getAttribute(java.lang.String)>("type");

        $r2 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getAttribute(java.lang.String)>("id");

        if $r1 == null goto label04;

        $r12 = staticinvoke <org.eclipse.jetty.util.TypeUtil: java.lang.Class fromName(java.lang.String)>($r1);

        r16 = $r12;

        if $r12 != null goto label04;

        $r13 = "String";

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label01;

        r16 = class "Ljava/lang/String;";

        goto label04;

     label01:
        $r14 = "URL";

        $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z2 == 0 goto label02;

        r16 = class "Ljava/net/URL;";

        goto label04;

     label02:
        $r15 = "InetAddress";

        $z3 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z3 == 0 goto label03;

        r16 = class "Ljava/net/InetAddress;";

        goto label04;

     label03:
        r16 = staticinvoke <org.eclipse.jetty.util.Loader: java.lang.Class loadClass(java.lang.Class,java.lang.String,boolean)>(class "Lorg/eclipse/jetty/xml/XmlConfiguration;", $r1, 1);

     label04:
        r17 = null;

        $r18 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.util.Iterator iterator()>();

     label05:
        $z4 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label09;

        $r6 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.eclipse.jetty.xml.XmlParser$Node) $r6;

        $r8 = virtualinvoke r7.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getAttribute(java.lang.String)>("id");

        $r10 = specialinvoke r4.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.lang.Object value(java.lang.Object,org.eclipse.jetty.xml.XmlParser$Node)>(r9, r7);

        $r19 = r17;

        if $r10 != null goto label06;

        $z0 = virtualinvoke r16.<java.lang.Class: boolean isPrimitive()>();

        if $z0 == 0 goto label06;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        goto label07;

     label06:
        $r20 = $r10;

     label07:
        r17 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object add(java.lang.Object,java.lang.Object)>($r19, $r20);

        if $r8 == null goto label08;

        $r11 = r4.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.util.Map _idMap>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r10);

     label08:
        goto label05;

     label09:
        $r3 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object toArray(java.lang.Object,java.lang.Class)>(r17, r16);

        if $r2 == null goto label10;

        $r5 = r4.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.util.Map _idMap>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

     label10:
        return $r3;
    }

    private java.lang.Object newMap(java.lang.Object, org.eclipse.jetty.xml.XmlParser$Node) throws java.lang.Exception
    {
        java.lang.IllegalStateException $r8, $r19, $r20;
        java.util.HashMap $r2;
        org.eclipse.jetty.xml.XmlParser$Node r0, r5, r22, r23, r24;
        java.util.Map $r15, $r16, $r21;
        java.lang.String $r1, $r6, $r9, $r10, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration r11;
        java.util.Iterator $r3, $r7;
        java.lang.Object $r4, r12, $r13, $r14, $r17;

        r11 := @this: org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration;

        r12 := @parameter0: java.lang.Object;

        r0 := @parameter1: org.eclipse.jetty.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getAttribute(java.lang.String)>("id");

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        if $r1 == null goto label01;

        $r21 = r11.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.util.Map _idMap>;

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

     label01:
        $r3 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.util.Iterator iterator()>();

     label02:
        $z4 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label15;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $z0 = $r4 instanceof java.lang.String;

        if $z0 == 0 goto label03;

        goto label02;

     label03:
        r5 = (org.eclipse.jetty.xml.XmlParser$Node) $r4;

        $r6 = virtualinvoke r5.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getTag()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("Entry");

        if $z1 != 0 goto label04;

        $r20 = new java.lang.IllegalStateException;

        specialinvoke $r20.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not an Entry");

        throw $r20;

     label04:
        r22 = null;

        r23 = null;

        $r7 = virtualinvoke r5.<org.eclipse.jetty.xml.XmlParser$Node: java.util.Iterator iterator()>();

     label05:
        $z5 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label10;

        $r17 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $z2 = $r17 instanceof java.lang.String;

        if $z2 == 0 goto label06;

        goto label05;

     label06:
        r24 = (org.eclipse.jetty.xml.XmlParser$Node) $r17;

        $r18 = virtualinvoke r24.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getTag()>();

        $z3 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>("Item");

        if $z3 != 0 goto label07;

        $r19 = new java.lang.IllegalStateException;

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not an Item");

        throw $r19;

     label07:
        if r22 != null goto label08;

        r22 = r24;

        goto label09;

     label08:
        r23 = r24;

     label09:
        goto label05;

     label10:
        if r22 == null goto label11;

        if r23 != null goto label12;

     label11:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Missing Item in Entry");

        throw $r8;

     label12:
        $r9 = virtualinvoke r22.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getAttribute(java.lang.String)>("id");

        $r10 = virtualinvoke r23.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getAttribute(java.lang.String)>("id");

        $r13 = specialinvoke r11.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.lang.Object value(java.lang.Object,org.eclipse.jetty.xml.XmlParser$Node)>(r12, r22);

        $r14 = specialinvoke r11.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.lang.Object value(java.lang.Object,org.eclipse.jetty.xml.XmlParser$Node)>(r12, r23);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r14);

        if $r9 == null goto label13;

        $r16 = r11.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.util.Map _idMap>;

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r13);

     label13:
        if $r10 == null goto label14;

        $r15 = r11.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.util.Map _idMap>;

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r14);

     label14:
        goto label02;

     label15:
        return $r2;
    }

    private java.lang.Object propertyObj(org.eclipse.jetty.xml.XmlParser$Node) throws java.lang.Exception
    {
        org.eclipse.jetty.xml.XmlParser$Node r0;
        java.util.Map $r5, $r6, $r7, $r8;
        java.lang.Object r9;
        java.lang.String $r1, $r2, $r3;
        org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration r4;
        boolean $z0;

        r4 := @this: org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration;

        r0 := @parameter0: org.eclipse.jetty.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getAttribute(java.lang.String)>("id");

        $r2 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getAttribute(java.lang.String)>("name");

        $r3 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getAttribute(java.lang.String)>("default");

        $r5 = r4.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.util.Map _propertyMap>;

        if $r5 == null goto label1;

        $r7 = r4.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.util.Map _propertyMap>;

        $z0 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r8 = r4.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.util.Map _propertyMap>;

        r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        goto label2;

     label1:
        r9 = $r3;

     label2:
        if $r1 == null goto label3;

        $r6 = r4.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.util.Map _idMap>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r9);

     label3:
        if r9 == null goto label4;

        virtualinvoke r4.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: void configure(java.lang.Object,org.eclipse.jetty.xml.XmlParser$Node,int)>(r9, r0, 0);

     label4:
        return r9;
    }

    private java.lang.Object value(java.lang.Object, org.eclipse.jetty.xml.XmlParser$Node) throws java.lang.Exception
    {
        java.net.InetAddress $r13;
        java.util.Map $r37;
        java.lang.reflect.InvocationTargetException $r46, $r47;
        java.lang.StringBuilder $r8, $r9, $r44, $r48;
        java.lang.String $r1, $r2, $r10, $r12, $r15, $r16, $r18, $r19, $r20, $r21, $r28, $r29, $r30, $r32, $r33, $r34, $r35, $r36;
        java.lang.Class[] $r5;
        java.net.UnknownHostException $r38;
        java.lang.IllegalStateException $r49;
        java.net.URL $r45;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration r23;
        java.util.Collection $r11;
        org.eclipse.jetty.xml.XmlParser$Node r0;
        int $i0, $i1, $i2, $i3, i4, i5, i6, i7, i8, $i10;
        java.net.MalformedURLException $r40;
        java.lang.Class $r4, r43;
        java.lang.Object $r17, $r22, r24, $r25, $r26, $r27, $r31, r42;

        r23 := @this: org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration;

        r24 := @parameter0: java.lang.Object;

        r0 := @parameter1: org.eclipse.jetty.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getAttribute(java.lang.String)>("type");

        $r2 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getAttribute(java.lang.String)>("ref");

        if $r2 == null goto label01;

        $r37 = r23.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.util.Map _idMap>;

        r42 = interfaceinvoke $r37.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        goto label15;

     label01:
        $i0 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: int size()>();

        if $i0 != 0 goto label03;

        $r36 = "String";

        $z11 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z11 == 0 goto label02;

        return "";

     label02:
        return null;

     label03:
        i4 = 0;

        $i1 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: int size()>();

        i5 = $i1 - 1;

        if $r1 == null goto label04;

        $r35 = "String";

        $z10 = virtualinvoke $r35.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z10 != 0 goto label11;

     label04:
        if i4 > i5 goto label07;

        $r31 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.Object get(int)>(i4);

        $z9 = $r31 instanceof java.lang.String;

        if $z9 != 0 goto label05;

        goto label07;

     label05:
        $r32 = (java.lang.String) $r31;

        $r33 = virtualinvoke $r32.<java.lang.String: java.lang.String trim()>();

        $r34 = (java.lang.String) $r33;

        $i3 = virtualinvoke $r34.<java.lang.String: int length()>();

        if $i3 <= 0 goto label06;

        goto label07;

     label06:
        i4 = i4 + 1;

        goto label04;

     label07:
        if i4 >= i5 goto label10;

        $r27 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.Object get(int)>(i5);

        $z8 = $r27 instanceof java.lang.String;

        if $z8 != 0 goto label08;

        goto label10;

     label08:
        $r28 = (java.lang.String) $r27;

        $r29 = virtualinvoke $r28.<java.lang.String: java.lang.String trim()>();

        $r30 = (java.lang.String) $r29;

        $i2 = virtualinvoke $r30.<java.lang.String: int length()>();

        if $i2 <= 0 goto label09;

        goto label10;

     label09:
        $i10 = (int) -1;

        i5 = i5 + $i10;

        goto label07;

     label10:
        if i4 <= i5 goto label11;

        return null;

     label11:
        if i4 != i5 goto label12;

        $r26 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.Object get(int)>(i4);

        r42 = specialinvoke r23.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.lang.Object itemValue(java.lang.Object,java.lang.Object)>(r24, $r26);

        goto label15;

     label12:
        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        i6 = i4;

     label13:
        if i6 > i5 goto label14;

        $r22 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.Object get(int)>(i6);

        $r25 = specialinvoke r23.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.lang.Object itemValue(java.lang.Object,java.lang.Object)>(r24, $r22);

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        i6 = i6 + 1;

        goto label13;

     label14:
        r42 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

     label15:
        if r42 != null goto label17;

        $r21 = "String";

        $z7 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z7 == 0 goto label16;

        return "";

     label16:
        return null;

     label17:
        if $r1 != null goto label19;

        $z6 = r42 instanceof java.lang.String;

        if $z6 == 0 goto label18;

        $r19 = (java.lang.String) r42;

        $r20 = virtualinvoke $r19.<java.lang.String: java.lang.String trim()>();

        return $r20;

     label18:
        return r42;

     label19:
        $z0 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: boolean isTypeMatchingClass(java.lang.String,java.lang.Class)>($r1, class "Ljava/lang/String;");

        if $z0 == 0 goto label20;

        $r18 = virtualinvoke r42.<java.lang.Object: java.lang.String toString()>();

        return $r18;

     label20:
        $r4 = staticinvoke <org.eclipse.jetty.util.TypeUtil: java.lang.Class fromName(java.lang.String)>($r1);

        if $r4 == null goto label21;

        $r16 = virtualinvoke r42.<java.lang.Object: java.lang.String toString()>();

        $r17 = staticinvoke <org.eclipse.jetty.util.TypeUtil: java.lang.Object valueOf(java.lang.Class,java.lang.String)>($r4, $r16);

        return $r17;

     label21:
        $z1 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: boolean isTypeMatchingClass(java.lang.String,java.lang.Class)>($r1, class "Ljava/net/URL;");

        if $z1 == 0 goto label25;

        $z5 = r42 instanceof java.net.URL;

        if $z5 == 0 goto label22;

        return r42;

     label22:
        $r45 = new java.net.URL;

        $r15 = virtualinvoke r42.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r45.<java.net.URL: void <init>(java.lang.String)>($r15);

     label23:
        return $r45;

     label24:
        $r40 := @caughtexception;

        $r46 = new java.lang.reflect.InvocationTargetException;

        specialinvoke $r46.<java.lang.reflect.InvocationTargetException: void <init>(java.lang.Throwable)>($r40);

        throw $r46;

     label25:
        $z2 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: boolean isTypeMatchingClass(java.lang.String,java.lang.Class)>($r1, class "Ljava/net/InetAddress;");

        if $z2 == 0 goto label29;

        $z4 = r42 instanceof java.net.InetAddress;

        if $z4 == 0 goto label26;

        return r42;

     label26:
        $r12 = virtualinvoke r42.<java.lang.Object: java.lang.String toString()>();

        $r13 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>($r12);

     label27:
        return $r13;

     label28:
        $r38 := @caughtexception;

        $r47 = new java.lang.reflect.InvocationTargetException;

        specialinvoke $r47.<java.lang.reflect.InvocationTargetException: void <init>(java.lang.Throwable)>($r38);

        throw $r47;

     label29:
        $r5 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: java.lang.Class[] access$200()>();

        i7 = lengthof $r5;

        i8 = 0;

     label30:
        if i8 >= i7 goto label32;

        r43 = $r5[i8];

        $z3 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: boolean isTypeMatchingClass(java.lang.String,java.lang.Class)>($r1, r43);

        if $z3 == 0 goto label31;

        $r11 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.util.Collection convertArrayToCollection(java.lang.Object,java.lang.Class)>(r42, r43);

        return $r11;

     label31:
        i8 = i8 + 1;

        goto label30;

     label32:
        $r49 = new java.lang.IllegalStateException;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown type ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r49.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        throw $r49;

        catch java.net.MalformedURLException from label22 to label23 with label24;
        catch java.net.UnknownHostException from label26 to label27 with label28;
    }

    private static boolean isTypeMatchingClass(java.lang.String, java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.String $r1, r2, $r3;
        boolean $z0, $z1, $z2;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.String getSimpleName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z0 != 0 goto label1;

        $r3 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    private java.lang.Object itemValue(java.lang.Object, java.lang.Object) throws java.lang.Exception
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration r24;
        java.lang.StringBuilder $r13, $r14, $r15;
        java.lang.Throwable $r17;
        org.eclipse.jetty.xml.XmlParser$Node r1;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r16, $r18, $r19, $r20, $r21, $r22, $r23, $r33;
        java.lang.Object r0, $r25, r26, $r27, $r28, $r29, $r30, $r31, $r32;
        org.eclipse.jetty.util.log.Logger $r12;

        r24 := @this: org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration;

        r26 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof java.lang.String;

        if $z0 == 0 goto label01;

        return r0;

     label01:
        r1 = (org.eclipse.jetty.xml.XmlParser$Node) r0;

        $r2 = virtualinvoke r1.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getTag()>();

        $r3 = "Call";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label02;

        $r32 = specialinvoke r24.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.lang.Object call(java.lang.Object,org.eclipse.jetty.xml.XmlParser$Node)>(r26, r1);

        return $r32;

     label02:
        $r4 = "Get";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z2 == 0 goto label03;

        $r31 = specialinvoke r24.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.lang.Object get(java.lang.Object,org.eclipse.jetty.xml.XmlParser$Node)>(r26, r1);

        return $r31;

     label03:
        $r5 = "New";

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z3 == 0 goto label04;

        $r30 = specialinvoke r24.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.lang.Object newObj(java.lang.Object,org.eclipse.jetty.xml.XmlParser$Node)>(r26, r1);

        return $r30;

     label04:
        $r6 = "Ref";

        $z4 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z4 == 0 goto label05;

        $r29 = specialinvoke r24.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.lang.Object refObj(java.lang.Object,org.eclipse.jetty.xml.XmlParser$Node)>(r26, r1);

        return $r29;

     label05:
        $r7 = "Array";

        $z5 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z5 == 0 goto label06;

        $r28 = specialinvoke r24.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.lang.Object newArray(java.lang.Object,org.eclipse.jetty.xml.XmlParser$Node)>(r26, r1);

        return $r28;

     label06:
        $r8 = "Map";

        $z6 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z6 == 0 goto label07;

        $r27 = specialinvoke r24.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.lang.Object newMap(java.lang.Object,org.eclipse.jetty.xml.XmlParser$Node)>(r26, r1);

        return $r27;

     label07:
        $r9 = "Property";

        $z7 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z7 == 0 goto label08;

        $r25 = specialinvoke r24.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: java.lang.Object propertyObj(org.eclipse.jetty.xml.XmlParser$Node)>(r1);

        return $r25;

     label08:
        $r10 = "SystemProperty";

        $z8 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z8 == 0 goto label09;

        $r21 = virtualinvoke r1.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getAttribute(java.lang.String)>("name");

        $r22 = virtualinvoke r1.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getAttribute(java.lang.String)>("default");

        $r23 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>($r21, $r22);

        return $r23;

     label09:
        $r11 = "Env";

        $z9 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z9 == 0 goto label12;

        $r18 = virtualinvoke r1.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getAttribute(java.lang.String)>("name");

        $r19 = virtualinvoke r1.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getAttribute(java.lang.String)>("default");

        $r20 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>($r18);

        if $r20 != null goto label10;

        $r33 = $r19;

        goto label11;

     label10:
        $r33 = $r20;

     label11:
        return $r33;

     label12:
        $r12 = staticinvoke <org.eclipse.jetty.xml.XmlConfiguration: org.eclipse.jetty.util.log.Logger access$100()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown value tag: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = new java.lang.Throwable;

        specialinvoke $r17.<java.lang.Throwable: void <init>()>();

        interfaceinvoke $r12.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>($r16, $r17);

        return null;
    }

    void <init>(org.eclipse.jetty.xml.XmlConfiguration$1)
    {
        org.eclipse.jetty.xml.XmlConfiguration$1 r1;
        org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration r0;

        r0 := @this: org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration;

        r1 := @parameter0: org.eclipse.jetty.xml.XmlConfiguration$1;

        specialinvoke r0.<org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration: void <init>()>();

        return;
    }
}
