public class org.bouncycastle.crypto.modes.SICBlockCipher extends java.lang.Object implements org.bouncycastle.crypto.BlockCipher
{
    private final org.bouncycastle.crypto.BlockCipher cipher;
    private final int blockSize;
    private byte[] IV;
    private byte[] counter;
    private byte[] counterOut;

    public void <init>(org.bouncycastle.crypto.BlockCipher)
    {
        byte[] $r3, $r4, $r5;
        org.bouncycastle.crypto.BlockCipher r1, $r2;
        int $i0, $i1, $i2, $i3;
        org.bouncycastle.crypto.modes.SICBlockCipher r0;

        r0 := @this: org.bouncycastle.crypto.modes.SICBlockCipher;

        r1 := @parameter0: org.bouncycastle.crypto.BlockCipher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.crypto.modes.SICBlockCipher: org.bouncycastle.crypto.BlockCipher cipher> = r1;

        $r2 = r0.<org.bouncycastle.crypto.modes.SICBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $i0 = interfaceinvoke $r2.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        r0.<org.bouncycastle.crypto.modes.SICBlockCipher: int blockSize> = $i0;

        $i1 = r0.<org.bouncycastle.crypto.modes.SICBlockCipher: int blockSize>;

        $r3 = newarray (byte)[$i1];

        r0.<org.bouncycastle.crypto.modes.SICBlockCipher: byte[] IV> = $r3;

        $i2 = r0.<org.bouncycastle.crypto.modes.SICBlockCipher: int blockSize>;

        $r4 = newarray (byte)[$i2];

        r0.<org.bouncycastle.crypto.modes.SICBlockCipher: byte[] counter> = $r4;

        $i3 = r0.<org.bouncycastle.crypto.modes.SICBlockCipher: int blockSize>;

        $r5 = newarray (byte)[$i3];

        r0.<org.bouncycastle.crypto.modes.SICBlockCipher: byte[] counterOut> = $r5;

        return;
    }

    public org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()
    {
        org.bouncycastle.crypto.BlockCipher $r1;
        org.bouncycastle.crypto.modes.SICBlockCipher r0;

        r0 := @this: org.bouncycastle.crypto.modes.SICBlockCipher;

        $r1 = r0.<org.bouncycastle.crypto.modes.SICBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        return $r1;
    }

    public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException
    {
        byte[] $r3, $r5, $r6;
        org.bouncycastle.crypto.params.ParametersWithIV r2;
        java.lang.IllegalArgumentException $r1;
        org.bouncycastle.crypto.BlockCipher $r7;
        int $i0;
        org.bouncycastle.crypto.CipherParameters r0, $r8;
        boolean $z0, z1;
        org.bouncycastle.crypto.modes.SICBlockCipher r4;

        r4 := @this: org.bouncycastle.crypto.modes.SICBlockCipher;

        z1 := @parameter0: boolean;

        r0 := @parameter1: org.bouncycastle.crypto.CipherParameters;

        $z0 = r0 instanceof org.bouncycastle.crypto.params.ParametersWithIV;

        if $z0 == 0 goto label1;

        r2 = (org.bouncycastle.crypto.params.ParametersWithIV) r0;

        $r3 = virtualinvoke r2.<org.bouncycastle.crypto.params.ParametersWithIV: byte[] getIV()>();

        $r6 = r4.<org.bouncycastle.crypto.modes.SICBlockCipher: byte[] IV>;

        $r5 = r4.<org.bouncycastle.crypto.modes.SICBlockCipher: byte[] IV>;

        $i0 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r6, 0, $i0);

        virtualinvoke r4.<org.bouncycastle.crypto.modes.SICBlockCipher: void reset()>();

        $r7 = r4.<org.bouncycastle.crypto.modes.SICBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r8 = virtualinvoke r2.<org.bouncycastle.crypto.params.ParametersWithIV: org.bouncycastle.crypto.CipherParameters getParameters()>();

        interfaceinvoke $r7.<org.bouncycastle.crypto.BlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(1, $r8);

        goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("SIC mode requires ParametersWithIV");

        throw $r1;

     label2:
        return;
    }

    public java.lang.String getAlgorithmName()
    {
        java.lang.StringBuilder $r0, $r4, $r5;
        java.lang.String $r3, $r6;
        org.bouncycastle.crypto.BlockCipher $r2;
        org.bouncycastle.crypto.modes.SICBlockCipher r1;

        r1 := @this: org.bouncycastle.crypto.modes.SICBlockCipher;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.bouncycastle.crypto.modes.SICBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r3 = interfaceinvoke $r2.<org.bouncycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/SIC");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public int getBlockSize()
    {
        int $i0;
        org.bouncycastle.crypto.BlockCipher $r1;
        org.bouncycastle.crypto.modes.SICBlockCipher r0;

        r0 := @this: org.bouncycastle.crypto.modes.SICBlockCipher;

        $r1 = r0.<org.bouncycastle.crypto.modes.SICBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $i0 = interfaceinvoke $r1.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        return $i0;
    }

    public int processBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        byte[] $r1, $r2, $r4, $r5, $r6, $r7, $r8, r9, $r10, r11;
        byte $b3, $b6, $b10, $b11, $b12, $b13;
        boolean z0;
        org.bouncycastle.crypto.BlockCipher $r3;
        org.bouncycastle.crypto.modes.SICBlockCipher r0;
        short $s4, $s17;
        int $i0, $i1, $i2, i5, i7, i8, $i9, $i14, i15, i16, $i18, $i20;

        r0 := @this: org.bouncycastle.crypto.modes.SICBlockCipher;

        r11 := @parameter0: byte[];

        i8 := @parameter1: int;

        r9 := @parameter2: byte[];

        i7 := @parameter3: int;

        $r3 = r0.<org.bouncycastle.crypto.modes.SICBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r2 = r0.<org.bouncycastle.crypto.modes.SICBlockCipher: byte[] counter>;

        $r1 = r0.<org.bouncycastle.crypto.modes.SICBlockCipher: byte[] counterOut>;

        interfaceinvoke $r3.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r2, 0, $r1, 0);

        i15 = 0;

     label1:
        $r4 = r0.<org.bouncycastle.crypto.modes.SICBlockCipher: byte[] counterOut>;

        $i0 = lengthof $r4;

        if i15 >= $i0 goto label2;

        $i14 = i7 + i15;

        $r10 = r0.<org.bouncycastle.crypto.modes.SICBlockCipher: byte[] counterOut>;

        $b11 = $r10[i15];

        $i9 = i8 + i15;

        $b10 = r11[$i9];

        $b12 = $b11 ^ $b10;

        $b13 = (byte) $b12;

        r9[$i14] = $b13;

        i15 = i15 + 1;

        goto label1;

     label2:
        z0 = 1;

        $r5 = r0.<org.bouncycastle.crypto.modes.SICBlockCipher: byte[] counter>;

        $i1 = lengthof $r5;

        i16 = $i1 - 1;

     label3:
        if i16 < 0 goto label6;

        $r7 = r0.<org.bouncycastle.crypto.modes.SICBlockCipher: byte[] counter>;

        $b3 = $r7[i16];

        $s17 = (short) $b3;

        $s4 = $s17 & 255;

        $i18 = (int) $s4;

        i5 = $i18 + z0;

        if i5 <= 255 goto label4;

        z0 = 1;

        goto label5;

     label4:
        z0 = 0;

     label5:
        $r8 = r0.<org.bouncycastle.crypto.modes.SICBlockCipher: byte[] counter>;

        $b6 = (byte) i5;

        $r8[i16] = $b6;

        $i20 = (int) -1;

        i16 = i16 + $i20;

        goto label3;

     label6:
        $r6 = r0.<org.bouncycastle.crypto.modes.SICBlockCipher: byte[] counter>;

        $i2 = lengthof $r6;

        return $i2;
    }

    public void reset()
    {
        byte[] $r1, $r2, $r3;
        int $i0;
        org.bouncycastle.crypto.BlockCipher $r4;
        org.bouncycastle.crypto.modes.SICBlockCipher r0;

        r0 := @this: org.bouncycastle.crypto.modes.SICBlockCipher;

        $r3 = r0.<org.bouncycastle.crypto.modes.SICBlockCipher: byte[] IV>;

        $r2 = r0.<org.bouncycastle.crypto.modes.SICBlockCipher: byte[] counter>;

        $r1 = r0.<org.bouncycastle.crypto.modes.SICBlockCipher: byte[] counter>;

        $i0 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r2, 0, $i0);

        $r4 = r0.<org.bouncycastle.crypto.modes.SICBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        interfaceinvoke $r4.<org.bouncycastle.crypto.BlockCipher: void reset()>();

        return;
    }
}
