public class org.springframework.aop.framework.AdvisedSupport extends org.springframework.aop.framework.ProxyConfig implements org.springframework.aop.framework.Advised
{
    private static final long serialVersionUID;
    public static final org.springframework.aop.TargetSource EMPTY_TARGET_SOURCE;
    org.springframework.aop.TargetSource targetSource;
    private boolean preFiltered;
    org.springframework.aop.framework.AdvisorChainFactory advisorChainFactory;
    private transient java.util.Map methodCache;
    private java.util.List interfaces;
    private java.util.List advisors;
    private org.springframework.aop.Advisor[] advisorArray;

    static void <clinit>()
    {
        org.springframework.aop.target.EmptyTargetSource $r0;

        <org.springframework.aop.framework.AdvisedSupport: long serialVersionUID> = 2651364800145442165L;

        $r0 = <org.springframework.aop.target.EmptyTargetSource: org.springframework.aop.target.EmptyTargetSource INSTANCE>;

        <org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.TargetSource EMPTY_TARGET_SOURCE> = $r0;

        return;
    }

    public void <init>()
    {
        org.springframework.aop.TargetSource $r1;
        java.util.LinkedList $r4;
        org.springframework.aop.framework.DefaultAdvisorChainFactory $r2;
        org.springframework.aop.framework.AdvisedSupport r0;
        java.util.ArrayList $r3;
        org.springframework.aop.Advisor[] $r5;

        r0 := @this: org.springframework.aop.framework.AdvisedSupport;

        specialinvoke r0.<org.springframework.aop.framework.ProxyConfig: void <init>()>();

        $r1 = <org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.TargetSource EMPTY_TARGET_SOURCE>;

        r0.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.TargetSource targetSource> = $r1;

        r0.<org.springframework.aop.framework.AdvisedSupport: boolean preFiltered> = 0;

        $r2 = new org.springframework.aop.framework.DefaultAdvisorChainFactory;

        specialinvoke $r2.<org.springframework.aop.framework.DefaultAdvisorChainFactory: void <init>()>();

        r0.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.framework.AdvisorChainFactory advisorChainFactory> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.springframework.aop.framework.AdvisedSupport: java.util.List interfaces> = $r3;

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        r0.<org.springframework.aop.framework.AdvisedSupport: java.util.List advisors> = $r4;

        $r5 = newarray (org.springframework.aop.Advisor)[0];

        r0.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.Advisor[] advisorArray> = $r5;

        specialinvoke r0.<org.springframework.aop.framework.AdvisedSupport: void initMethodCache()>();

        return;
    }

    public void <init>(java.lang.Class[])
    {
        java.lang.Class[] r1;
        org.springframework.aop.framework.AdvisedSupport r0;

        r0 := @this: org.springframework.aop.framework.AdvisedSupport;

        r1 := @parameter0: java.lang.Class[];

        specialinvoke r0.<org.springframework.aop.framework.AdvisedSupport: void <init>()>();

        virtualinvoke r0.<org.springframework.aop.framework.AdvisedSupport: void setInterfaces(java.lang.Class[])>(r1);

        return;
    }

    private void initMethodCache()
    {
        java.util.concurrent.ConcurrentHashMap $r1;
        org.springframework.aop.framework.AdvisedSupport r0;

        r0 := @this: org.springframework.aop.framework.AdvisedSupport;

        $r1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>(int)>(32);

        r0.<org.springframework.aop.framework.AdvisedSupport: java.util.Map methodCache> = $r1;

        return;
    }

    public void setTarget(java.lang.Object)
    {
        java.lang.Object r2;
        org.springframework.aop.target.SingletonTargetSource $r1;
        org.springframework.aop.framework.AdvisedSupport r0;

        r0 := @this: org.springframework.aop.framework.AdvisedSupport;

        r2 := @parameter0: java.lang.Object;

        $r1 = new org.springframework.aop.target.SingletonTargetSource;

        specialinvoke $r1.<org.springframework.aop.target.SingletonTargetSource: void <init>(java.lang.Object)>(r2);

        virtualinvoke r0.<org.springframework.aop.framework.AdvisedSupport: void setTargetSource(org.springframework.aop.TargetSource)>($r1);

        return;
    }

    public void setTargetSource(org.springframework.aop.TargetSource)
    {
        org.springframework.aop.TargetSource r1, $r2;
        org.springframework.aop.framework.AdvisedSupport r0;

        r0 := @this: org.springframework.aop.framework.AdvisedSupport;

        r1 := @parameter0: org.springframework.aop.TargetSource;

        if r1 == null goto label1;

        $r2 = r1;

        goto label2;

     label1:
        $r2 = <org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.TargetSource EMPTY_TARGET_SOURCE>;

     label2:
        r0.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.TargetSource targetSource> = $r2;

        return;
    }

    public org.springframework.aop.TargetSource getTargetSource()
    {
        org.springframework.aop.TargetSource $r1;
        org.springframework.aop.framework.AdvisedSupport r0;

        r0 := @this: org.springframework.aop.framework.AdvisedSupport;

        $r1 = r0.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.TargetSource targetSource>;

        return $r1;
    }

    public void setTargetClass(java.lang.Class)
    {
        java.lang.Class r1;
        org.springframework.aop.target.EmptyTargetSource $r2;
        org.springframework.aop.framework.AdvisedSupport r0;

        r0 := @this: org.springframework.aop.framework.AdvisedSupport;

        r1 := @parameter0: java.lang.Class;

        $r2 = staticinvoke <org.springframework.aop.target.EmptyTargetSource: org.springframework.aop.target.EmptyTargetSource forClass(java.lang.Class)>(r1);

        r0.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.TargetSource targetSource> = $r2;

        return;
    }

    public java.lang.Class getTargetClass()
    {
        org.springframework.aop.TargetSource $r1;
        java.lang.Class $r2;
        org.springframework.aop.framework.AdvisedSupport r0;

        r0 := @this: org.springframework.aop.framework.AdvisedSupport;

        $r1 = r0.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.TargetSource targetSource>;

        $r2 = interfaceinvoke $r1.<org.springframework.aop.TargetSource: java.lang.Class getTargetClass()>();

        return $r2;
    }

    public void setPreFiltered(boolean)
    {
        org.springframework.aop.framework.AdvisedSupport r0;
        boolean z0;

        r0 := @this: org.springframework.aop.framework.AdvisedSupport;

        z0 := @parameter0: boolean;

        r0.<org.springframework.aop.framework.AdvisedSupport: boolean preFiltered> = z0;

        return;
    }

    public boolean isPreFiltered()
    {
        org.springframework.aop.framework.AdvisedSupport r0;
        boolean $z0;

        r0 := @this: org.springframework.aop.framework.AdvisedSupport;

        $z0 = r0.<org.springframework.aop.framework.AdvisedSupport: boolean preFiltered>;

        return $z0;
    }

    public void setAdvisorChainFactory(org.springframework.aop.framework.AdvisorChainFactory)
    {
        org.springframework.aop.framework.AdvisorChainFactory r0;
        org.springframework.aop.framework.AdvisedSupport r1;

        r1 := @this: org.springframework.aop.framework.AdvisedSupport;

        r0 := @parameter0: org.springframework.aop.framework.AdvisorChainFactory;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "AdvisorChainFactory must not be null");

        r1.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.framework.AdvisorChainFactory advisorChainFactory> = r0;

        return;
    }

    public org.springframework.aop.framework.AdvisorChainFactory getAdvisorChainFactory()
    {
        org.springframework.aop.framework.AdvisedSupport r0;
        org.springframework.aop.framework.AdvisorChainFactory $r1;

        r0 := @this: org.springframework.aop.framework.AdvisedSupport;

        $r1 = r0.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.framework.AdvisorChainFactory advisorChainFactory>;

        return $r1;
    }

    public void setInterfaces(java.lang.Class[])
    {
        java.util.List $r2;
        int i0, i1;
        java.lang.Class[] r0;
        java.lang.Class r3;
        org.springframework.aop.framework.AdvisedSupport r1;

        r1 := @this: org.springframework.aop.framework.AdvisedSupport;

        r0 := @parameter0: java.lang.Class[];

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "Interfaces must not be null");

        $r2 = r1.<org.springframework.aop.framework.AdvisedSupport: java.util.List interfaces>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        i0 = lengthof r0;

        i1 = 0;

        goto label2;

     label1:
        r3 = r0[i1];

        virtualinvoke r1.<org.springframework.aop.framework.AdvisedSupport: void addInterface(java.lang.Class)>(r3);

        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label1;

        return;
    }

    public void addInterface(java.lang.Class)
    {
        java.lang.IllegalArgumentException $r4;
        java.util.List $r2, $r3;
        java.lang.Class r0;
        java.lang.StringBuilder $r5, $r7, $r8;
        java.lang.String $r6, $r9;
        boolean $z0, $z1;
        org.springframework.aop.framework.AdvisedSupport r1;

        r1 := @this: org.springframework.aop.framework.AdvisedSupport;

        r0 := @parameter0: java.lang.Class;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "Interface must not be null");

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isInterface()>();

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("[");

        $r6 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] is not an interface");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label1:
        $r2 = r1.<org.springframework.aop.framework.AdvisedSupport: java.util.List interfaces>;

        $z1 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r0);

        if $z1 != 0 goto label2;

        $r3 = r1.<org.springframework.aop.framework.AdvisedSupport: java.util.List interfaces>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r0);

        virtualinvoke r1.<org.springframework.aop.framework.AdvisedSupport: void adviceChanged()>();

     label2:
        return;
    }

    public boolean removeInterface(java.lang.Class)
    {
        java.util.List $r2;
        java.lang.Class r1;
        org.springframework.aop.framework.AdvisedSupport r0;
        boolean $z0;

        r0 := @this: org.springframework.aop.framework.AdvisedSupport;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.springframework.aop.framework.AdvisedSupport: java.util.List interfaces>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        return $z0;
    }

    public java.lang.Class[] getProxiedInterfaces()
    {
        java.util.List $r1, $r2;
        java.lang.Object[] $r4;
        int $i0;
        java.lang.Class[] $r3, $r5;
        org.springframework.aop.framework.AdvisedSupport r0;

        r0 := @this: org.springframework.aop.framework.AdvisedSupport;

        $r2 = r0.<org.springframework.aop.framework.AdvisedSupport: java.util.List interfaces>;

        $r1 = r0.<org.springframework.aop.framework.AdvisedSupport: java.util.List interfaces>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r3 = newarray (java.lang.Class)[$i0];

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (java.lang.Class[]) $r4;

        return $r5;
    }

    public boolean isInterfaceProxied(java.lang.Class)
    {
        java.util.Iterator $r2;
        java.util.List $r1;
        java.lang.Object $r3;
        java.lang.Class r4, r5;
        org.springframework.aop.framework.AdvisedSupport r0;
        boolean $z0, $z1;

        r0 := @this: org.springframework.aop.framework.AdvisedSupport;

        r5 := @parameter0: java.lang.Class;

        $r1 = r0.<org.springframework.aop.framework.AdvisedSupport: java.util.List interfaces>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.Class) $r3;

        $z1 = virtualinvoke r5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return 0;
    }

    public final org.springframework.aop.Advisor[] getAdvisors()
    {
        org.springframework.aop.framework.AdvisedSupport r0;
        org.springframework.aop.Advisor[] $r1;

        r0 := @this: org.springframework.aop.framework.AdvisedSupport;

        $r1 = r0.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.Advisor[] advisorArray>;

        return $r1;
    }

    public void addAdvisor(org.springframework.aop.Advisor)
    {
        java.util.List $r1;
        int $i0;
        org.springframework.aop.Advisor r2;
        org.springframework.aop.framework.AdvisedSupport r0;

        r0 := @this: org.springframework.aop.framework.AdvisedSupport;

        r2 := @parameter0: org.springframework.aop.Advisor;

        $r1 = r0.<org.springframework.aop.framework.AdvisedSupport: java.util.List advisors>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        virtualinvoke r0.<org.springframework.aop.framework.AdvisedSupport: void addAdvisor(int,org.springframework.aop.Advisor)>($i0, r2);

        return;
    }

    public void addAdvisor(int, org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
    {
        org.springframework.aop.IntroductionAdvisor $r2;
        int i0;
        org.springframework.aop.Advisor r0;
        boolean $z0;
        org.springframework.aop.framework.AdvisedSupport r1;

        r1 := @this: org.springframework.aop.framework.AdvisedSupport;

        i0 := @parameter0: int;

        r0 := @parameter1: org.springframework.aop.Advisor;

        $z0 = r0 instanceof org.springframework.aop.IntroductionAdvisor;

        if $z0 == 0 goto label1;

        $r2 = (org.springframework.aop.IntroductionAdvisor) r0;

        specialinvoke r1.<org.springframework.aop.framework.AdvisedSupport: void validateIntroductionAdvisor(org.springframework.aop.IntroductionAdvisor)>($r2);

     label1:
        specialinvoke r1.<org.springframework.aop.framework.AdvisedSupport: void addAdvisorInternal(int,org.springframework.aop.Advisor)>(i0, r0);

        return;
    }

    public boolean removeAdvisor(org.springframework.aop.Advisor)
    {
        int $i0, $i2;
        org.springframework.aop.Advisor r1;
        org.springframework.aop.framework.AdvisedSupport r0;

        r0 := @this: org.springframework.aop.framework.AdvisedSupport;

        r1 := @parameter0: org.springframework.aop.Advisor;

        $i0 = virtualinvoke r0.<org.springframework.aop.framework.AdvisedSupport: int indexOf(org.springframework.aop.Advisor)>(r1);

        $i2 = (int) -1;

        if $i0 != $i2 goto label1;

        return 0;

     label1:
        virtualinvoke r0.<org.springframework.aop.framework.AdvisedSupport: void removeAdvisor(int)>($i0);

        return 1;
    }

    public void removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
    {
        org.springframework.aop.framework.AopConfigException $r1, $r19;
        int i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String $r9;
        org.springframework.aop.Advisor r13;
        org.springframework.aop.framework.AdvisedSupport r0;
        boolean $z0, $z1;
        org.springframework.aop.IntroductionAdvisor r15;
        java.lang.Class[] $r16, $r17;
        java.util.List $r6, $r10, $r11, $r14;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r7, $r8;
        java.lang.Object $r12;
        java.lang.Class $r18;

        r0 := @this: org.springframework.aop.framework.AdvisedSupport;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<org.springframework.aop.framework.AdvisedSupport: boolean isFrozen()>();

        if $z0 == 0 goto label1;

        $r19 = new org.springframework.aop.framework.AopConfigException;

        specialinvoke $r19.<org.springframework.aop.framework.AopConfigException: void <init>(java.lang.String)>("Cannot remove Advisor: Configuration is frozen.");

        throw $r19;

     label1:
        if i0 < 0 goto label2;

        $r10 = r0.<org.springframework.aop.framework.AdvisedSupport: java.util.List advisors>;

        $i2 = interfaceinvoke $r10.<java.util.List: int size()>();

        $i3 = $i2 - 1;

        if i0 <= $i3 goto label3;

     label2:
        $r1 = new org.springframework.aop.framework.AopConfigException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Advisor index ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is out of bounds: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This configuration only has ");

        $r6 = r0.<org.springframework.aop.framework.AdvisedSupport: java.util.List advisors>;

        $i1 = interfaceinvoke $r6.<java.util.List: int size()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" advisors.");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<org.springframework.aop.framework.AopConfigException: void <init>(java.lang.String)>($r9);

        throw $r1;

     label3:
        $r11 = r0.<org.springframework.aop.framework.AdvisedSupport: java.util.List advisors>;

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i0);

        r13 = (org.springframework.aop.Advisor) $r12;

        $z1 = r13 instanceof org.springframework.aop.IntroductionAdvisor;

        if $z1 == 0 goto label6;

        r15 = (org.springframework.aop.IntroductionAdvisor) r13;

        i5 = 0;

        goto label5;

     label4:
        $r17 = interfaceinvoke r15.<org.springframework.aop.IntroductionAdvisor: java.lang.Class[] getInterfaces()>();

        $r18 = $r17[i5];

        virtualinvoke r0.<org.springframework.aop.framework.AdvisedSupport: boolean removeInterface(java.lang.Class)>($r18);

        i5 = i5 + 1;

     label5:
        $r16 = interfaceinvoke r15.<org.springframework.aop.IntroductionAdvisor: java.lang.Class[] getInterfaces()>();

        $i4 = lengthof $r16;

        if i5 < $i4 goto label4;

     label6:
        $r14 = r0.<org.springframework.aop.framework.AdvisedSupport: java.util.List advisors>;

        interfaceinvoke $r14.<java.util.List: java.lang.Object remove(int)>(i0);

        virtualinvoke r0.<org.springframework.aop.framework.AdvisedSupport: void updateAdvisorArray()>();

        virtualinvoke r0.<org.springframework.aop.framework.AdvisedSupport: void adviceChanged()>();

        return;
    }

    public int indexOf(org.springframework.aop.Advisor)
    {
        java.util.List $r2;
        int $i0;
        org.springframework.aop.Advisor r0;
        org.springframework.aop.framework.AdvisedSupport r1;

        r1 := @this: org.springframework.aop.framework.AdvisedSupport;

        r0 := @parameter0: org.springframework.aop.Advisor;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "Advisor must not be null");

        $r2 = r1.<org.springframework.aop.framework.AdvisedSupport: java.util.List advisors>;

        $i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r0);

        return $i0;
    }

    public boolean replaceAdvisor(org.springframework.aop.Advisor, org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
    {
        int $i0, $i2;
        org.springframework.aop.Advisor r0, r1;
        org.springframework.aop.framework.AdvisedSupport r2;

        r2 := @this: org.springframework.aop.framework.AdvisedSupport;

        r0 := @parameter0: org.springframework.aop.Advisor;

        r1 := @parameter1: org.springframework.aop.Advisor;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "Advisor a must not be null");

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "Advisor b must not be null");

        $i0 = virtualinvoke r2.<org.springframework.aop.framework.AdvisedSupport: int indexOf(org.springframework.aop.Advisor)>(r0);

        $i2 = (int) -1;

        if $i0 != $i2 goto label1;

        return 0;

     label1:
        virtualinvoke r2.<org.springframework.aop.framework.AdvisedSupport: void removeAdvisor(int)>($i0);

        virtualinvoke r2.<org.springframework.aop.framework.AdvisedSupport: void addAdvisor(int,org.springframework.aop.Advisor)>($i0, r1);

        return 1;
    }

    public void addAllAdvisors(org.springframework.aop.Advisor[])
    {
        java.util.List $r2;
        java.util.Collection $r3;
        org.springframework.aop.framework.AdvisedSupport r0;
        org.springframework.aop.Advisor[] r1;

        r0 := @this: org.springframework.aop.framework.AdvisedSupport;

        r1 := @parameter0: org.springframework.aop.Advisor[];

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        $r3 = (java.util.Collection) $r2;

        virtualinvoke r0.<org.springframework.aop.framework.AdvisedSupport: void addAdvisors(java.util.Collection)>($r3);

        return;
    }

    public transient void addAdvisors(org.springframework.aop.Advisor[])
    {
        java.util.List $r2;
        java.util.Collection $r3;
        org.springframework.aop.framework.AdvisedSupport r0;
        org.springframework.aop.Advisor[] r1;

        r0 := @this: org.springframework.aop.framework.AdvisedSupport;

        r1 := @parameter0: org.springframework.aop.Advisor[];

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        $r3 = (java.util.Collection) $r2;

        virtualinvoke r0.<org.springframework.aop.framework.AdvisedSupport: void addAdvisors(java.util.Collection)>($r3);

        return;
    }

    public void addAdvisors(java.util.Collection)
    {
        java.util.Iterator $r2;
        org.springframework.aop.IntroductionAdvisor $r6;
        java.util.Collection r1;
        java.util.List $r5;
        org.springframework.aop.framework.AopConfigException $r7;
        java.lang.Object $r3;
        org.springframework.aop.Advisor r4;
        org.springframework.aop.framework.AdvisedSupport r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.springframework.aop.framework.AdvisedSupport;

        r1 := @parameter0: java.util.Collection;

        $z0 = virtualinvoke r0.<org.springframework.aop.framework.AdvisedSupport: boolean isFrozen()>();

        if $z0 == 0 goto label1;

        $r7 = new org.springframework.aop.framework.AopConfigException;

        specialinvoke $r7.<org.springframework.aop.framework.AopConfigException: void <init>(java.lang.String)>("Cannot add advisor: Configuration is frozen.");

        throw $r7;

     label1:
        $z1 = staticinvoke <org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>(r1);

        if $z1 != 0 goto label5;

        $r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

        goto label4;

     label2:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.springframework.aop.Advisor) $r3;

        $z2 = r4 instanceof org.springframework.aop.IntroductionAdvisor;

        if $z2 == 0 goto label3;

        $r6 = (org.springframework.aop.IntroductionAdvisor) r4;

        specialinvoke r0.<org.springframework.aop.framework.AdvisedSupport: void validateIntroductionAdvisor(org.springframework.aop.IntroductionAdvisor)>($r6);

     label3:
        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r4, "Advisor must not be null");

        $r5 = r0.<org.springframework.aop.framework.AdvisedSupport: java.util.List advisors>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r4);

     label4:
        $z3 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label2;

        virtualinvoke r0.<org.springframework.aop.framework.AdvisedSupport: void updateAdvisorArray()>();

        virtualinvoke r0.<org.springframework.aop.framework.AdvisedSupport: void adviceChanged()>();

     label5:
        return;
    }

    private void validateIntroductionAdvisor(org.springframework.aop.IntroductionAdvisor)
    {
        org.springframework.aop.IntroductionAdvisor r0;
        int i0, i1;
        java.lang.Class[] $r1;
        java.lang.Class r2;
        org.springframework.aop.framework.AdvisedSupport r3;

        r3 := @this: org.springframework.aop.framework.AdvisedSupport;

        r0 := @parameter0: org.springframework.aop.IntroductionAdvisor;

        interfaceinvoke r0.<org.springframework.aop.IntroductionAdvisor: void validateInterfaces()>();

        $r1 = interfaceinvoke r0.<org.springframework.aop.IntroductionAdvisor: java.lang.Class[] getInterfaces()>();

        i0 = lengthof $r1;

        i1 = 0;

        goto label2;

     label1:
        r2 = $r1[i1];

        virtualinvoke r3.<org.springframework.aop.framework.AdvisedSupport: void addInterface(java.lang.Class)>(r2);

        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label1;

        return;
    }

    private void addAdvisorInternal(int, org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
    {
        org.springframework.aop.framework.AopConfigException $r11;
        int i0, $i1, $i2;
        java.lang.String $r10;
        org.springframework.aop.Advisor r0;
        org.springframework.aop.framework.AdvisedSupport r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;
        java.util.List $r2, $r3, $r8;
        java.lang.StringBuilder $r5, $r6, $r7, $r9;

        r1 := @this: org.springframework.aop.framework.AdvisedSupport;

        i0 := @parameter0: int;

        r0 := @parameter1: org.springframework.aop.Advisor;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "Advisor must not be null");

        $z0 = virtualinvoke r1.<org.springframework.aop.framework.AdvisedSupport: boolean isFrozen()>();

        if $z0 == 0 goto label1;

        $r11 = new org.springframework.aop.framework.AopConfigException;

        specialinvoke $r11.<org.springframework.aop.framework.AopConfigException: void <init>(java.lang.String)>("Cannot add advisor: Configuration is frozen.");

        throw $r11;

     label1:
        $r2 = r1.<org.springframework.aop.framework.AdvisedSupport: java.util.List advisors>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i0 <= $i1 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Illegal position ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in advisor list with size ");

        $r8 = r1.<org.springframework.aop.framework.AdvisedSupport: java.util.List advisors>;

        $i2 = interfaceinvoke $r8.<java.util.List: int size()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r4;

     label2:
        $r3 = r1.<org.springframework.aop.framework.AdvisedSupport: java.util.List advisors>;

        interfaceinvoke $r3.<java.util.List: void add(int,java.lang.Object)>(i0, r0);

        virtualinvoke r1.<org.springframework.aop.framework.AdvisedSupport: void updateAdvisorArray()>();

        virtualinvoke r1.<org.springframework.aop.framework.AdvisedSupport: void adviceChanged()>();

        return;
    }

    protected final void updateAdvisorArray()
    {
        java.util.List $r1, $r2;
        java.lang.Object[] $r4;
        int $i0;
        org.springframework.aop.framework.AdvisedSupport r0;
        org.springframework.aop.Advisor[] $r3, $r5;

        r0 := @this: org.springframework.aop.framework.AdvisedSupport;

        $r2 = r0.<org.springframework.aop.framework.AdvisedSupport: java.util.List advisors>;

        $r1 = r0.<org.springframework.aop.framework.AdvisedSupport: java.util.List advisors>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r3 = newarray (org.springframework.aop.Advisor)[$i0];

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (org.springframework.aop.Advisor[]) $r4;

        r0.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.Advisor[] advisorArray> = $r5;

        return;
    }

    protected final java.util.List getAdvisorsInternal()
    {
        java.util.List $r1;
        org.springframework.aop.framework.AdvisedSupport r0;

        r0 := @this: org.springframework.aop.framework.AdvisedSupport;

        $r1 = r0.<org.springframework.aop.framework.AdvisedSupport: java.util.List advisors>;

        return $r1;
    }

    public void addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
    {
        java.util.List $r1;
        int $i0;
        org.aopalliance.aop.Advice r2;
        org.springframework.aop.framework.AdvisedSupport r0;

        r0 := @this: org.springframework.aop.framework.AdvisedSupport;

        r2 := @parameter0: org.aopalliance.aop.Advice;

        $r1 = r0.<org.springframework.aop.framework.AdvisedSupport: java.util.List advisors>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        virtualinvoke r0.<org.springframework.aop.framework.AdvisedSupport: void addAdvice(int,org.aopalliance.aop.Advice)>($i0, r2);

        return;
    }

    public void addAdvice(int, org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
    {
        org.springframework.aop.support.DefaultPointcutAdvisor $r2;
        org.springframework.aop.IntroductionInfo $r5;
        org.springframework.aop.framework.AopConfigException $r3;
        int i0;
        org.aopalliance.aop.Advice r0;
        org.springframework.aop.support.DefaultIntroductionAdvisor $r4;
        boolean $z0, $z1;
        org.springframework.aop.framework.AdvisedSupport r1;

        r1 := @this: org.springframework.aop.framework.AdvisedSupport;

        i0 := @parameter0: int;

        r0 := @parameter1: org.aopalliance.aop.Advice;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "Advice must not be null");

        $z0 = r0 instanceof org.springframework.aop.IntroductionInfo;

        if $z0 == 0 goto label1;

        $r4 = new org.springframework.aop.support.DefaultIntroductionAdvisor;

        $r5 = (org.springframework.aop.IntroductionInfo) r0;

        specialinvoke $r4.<org.springframework.aop.support.DefaultIntroductionAdvisor: void <init>(org.aopalliance.aop.Advice,org.springframework.aop.IntroductionInfo)>(r0, $r5);

        virtualinvoke r1.<org.springframework.aop.framework.AdvisedSupport: void addAdvisor(int,org.springframework.aop.Advisor)>(i0, $r4);

        goto label3;

     label1:
        $z1 = r0 instanceof org.springframework.aop.DynamicIntroductionAdvice;

        if $z1 == 0 goto label2;

        $r3 = new org.springframework.aop.framework.AopConfigException;

        specialinvoke $r3.<org.springframework.aop.framework.AopConfigException: void <init>(java.lang.String)>("DynamicIntroductionAdvice may only be added as part of IntroductionAdvisor");

        throw $r3;

     label2:
        $r2 = new org.springframework.aop.support.DefaultPointcutAdvisor;

        specialinvoke $r2.<org.springframework.aop.support.DefaultPointcutAdvisor: void <init>(org.aopalliance.aop.Advice)>(r0);

        virtualinvoke r1.<org.springframework.aop.framework.AdvisedSupport: void addAdvisor(int,org.springframework.aop.Advisor)>(i0, $r2);

     label3:
        return;
    }

    public boolean removeAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
    {
        int $i0, $i2;
        org.aopalliance.aop.Advice r1;
        org.springframework.aop.framework.AdvisedSupport r0;

        r0 := @this: org.springframework.aop.framework.AdvisedSupport;

        r1 := @parameter0: org.aopalliance.aop.Advice;

        $i0 = virtualinvoke r0.<org.springframework.aop.framework.AdvisedSupport: int indexOf(org.aopalliance.aop.Advice)>(r1);

        $i2 = (int) -1;

        if $i0 != $i2 goto label1;

        return 0;

     label1:
        virtualinvoke r0.<org.springframework.aop.framework.AdvisedSupport: void removeAdvisor(int)>($i0);

        return 1;
    }

    public int indexOf(org.aopalliance.aop.Advice)
    {
        java.util.List $r2, $r3;
        int $i0, i1, $i3;
        org.aopalliance.aop.Advice r0, $r6;
        java.lang.Object $r4;
        org.springframework.aop.Advisor r5;
        org.springframework.aop.framework.AdvisedSupport r1;

        r1 := @this: org.springframework.aop.framework.AdvisedSupport;

        r0 := @parameter0: org.aopalliance.aop.Advice;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "Advice must not be null");

        i1 = 0;

        goto label3;

     label1:
        $r3 = r1.<org.springframework.aop.framework.AdvisedSupport: java.util.List advisors>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i1);

        r5 = (org.springframework.aop.Advisor) $r4;

        $r6 = interfaceinvoke r5.<org.springframework.aop.Advisor: org.aopalliance.aop.Advice getAdvice()>();

        if $r6 != r0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

     label3:
        $r2 = r1.<org.springframework.aop.framework.AdvisedSupport: java.util.List advisors>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i1 < $i0 goto label1;

        $i3 = (int) -1;

        return $i3;
    }

    public boolean adviceIncluded(org.aopalliance.aop.Advice)
    {
        java.util.Iterator $r3;
        java.util.List $r2;
        org.aopalliance.aop.Advice r0, $r6;
        java.lang.Object $r4;
        org.springframework.aop.Advisor r5;
        org.springframework.aop.framework.AdvisedSupport r1;
        boolean $z0;

        r1 := @this: org.springframework.aop.framework.AdvisedSupport;

        r0 := @parameter0: org.aopalliance.aop.Advice;

        if r0 == null goto label3;

        $r2 = r1.<org.springframework.aop.framework.AdvisedSupport: java.util.List advisors>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.springframework.aop.Advisor) $r4;

        $r6 = interfaceinvoke r5.<org.springframework.aop.Advisor: org.aopalliance.aop.Advice getAdvice()>();

        if $r6 != r0 goto label2;

        return 1;

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

     label3:
        return 0;
    }

    public int countAdvicesOfType(java.lang.Class)
    {
        java.util.Iterator $r3;
        java.util.List $r2;
        int i0;
        org.aopalliance.aop.Advice $r6;
        java.lang.Class r0;
        java.lang.Object $r4;
        org.springframework.aop.Advisor r5;
        org.springframework.aop.framework.AdvisedSupport r1;
        boolean $z0, $z1;

        r1 := @this: org.springframework.aop.framework.AdvisedSupport;

        r0 := @parameter0: java.lang.Class;

        i0 = 0;

        if r0 == null goto label3;

        $r2 = r1.<org.springframework.aop.framework.AdvisedSupport: java.util.List advisors>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.springframework.aop.Advisor) $r4;

        $r6 = interfaceinvoke r5.<org.springframework.aop.Advisor: org.aopalliance.aop.Advice getAdvice()>();

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isInstance(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

        i0 = i0 + 1;

     label2:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

     label3:
        return i0;
    }

    public java.util.List getInterceptorsAndDynamicInterceptionAdvice(java.lang.reflect.Method, java.lang.Class)
    {
        org.springframework.aop.framework.AdvisedSupport$MethodCacheKey $r0;
        java.util.List $r7, r9;
        java.util.Map $r3, $r8;
        java.lang.Object $r4;
        java.lang.Class r5;
        java.lang.reflect.Method r1;
        org.springframework.aop.framework.AdvisedSupport r2;
        org.springframework.aop.framework.AdvisorChainFactory $r6;

        r2 := @this: org.springframework.aop.framework.AdvisedSupport;

        r1 := @parameter0: java.lang.reflect.Method;

        r5 := @parameter1: java.lang.Class;

        $r0 = new org.springframework.aop.framework.AdvisedSupport$MethodCacheKey;

        specialinvoke $r0.<org.springframework.aop.framework.AdvisedSupport$MethodCacheKey: void <init>(java.lang.reflect.Method)>(r1);

        $r3 = r2.<org.springframework.aop.framework.AdvisedSupport: java.util.Map methodCache>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        r9 = (java.util.List) $r4;

        if r9 != null goto label1;

        $r6 = r2.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.framework.AdvisorChainFactory advisorChainFactory>;

        $r7 = interfaceinvoke $r6.<org.springframework.aop.framework.AdvisorChainFactory: java.util.List getInterceptorsAndDynamicInterceptionAdvice(org.springframework.aop.framework.Advised,java.lang.reflect.Method,java.lang.Class)>(r2, r1, r5);

        r9 = $r7;

        $r8 = r2.<org.springframework.aop.framework.AdvisedSupport: java.util.Map methodCache>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r7);

     label1:
        return r9;
    }

    protected void adviceChanged()
    {
        org.springframework.aop.framework.AdvisedSupport r0;
        java.util.Map $r1;

        r0 := @this: org.springframework.aop.framework.AdvisedSupport;

        $r1 = r0.<org.springframework.aop.framework.AdvisedSupport: java.util.Map methodCache>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        return;
    }

    protected void copyConfigurationFrom(org.springframework.aop.framework.AdvisedSupport)
    {
        java.util.List $r3;
        org.springframework.aop.TargetSource $r4;
        org.springframework.aop.framework.AdvisedSupport r0, r1;
        java.util.ArrayList $r2;

        r0 := @this: org.springframework.aop.framework.AdvisedSupport;

        r1 := @parameter0: org.springframework.aop.framework.AdvisedSupport;

        $r4 = r1.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.TargetSource targetSource>;

        $r2 = new java.util.ArrayList;

        $r3 = r1.<org.springframework.aop.framework.AdvisedSupport: java.util.List advisors>;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        virtualinvoke r0.<org.springframework.aop.framework.AdvisedSupport: void copyConfigurationFrom(org.springframework.aop.framework.AdvisedSupport,org.springframework.aop.TargetSource,java.util.List)>(r1, $r4, $r2);

        return;
    }

    protected void copyConfigurationFrom(org.springframework.aop.framework.AdvisedSupport, org.springframework.aop.TargetSource, java.util.List)
    {
        java.util.Iterator $r7;
        org.springframework.aop.IntroductionAdvisor $r11;
        org.springframework.aop.TargetSource r2;
        java.util.ArrayList $r4;
        java.util.List $r5, r6, $r10;
        java.lang.Object $r8;
        org.springframework.aop.Advisor r9;
        org.springframework.aop.framework.AdvisedSupport r0, r1;
        org.springframework.aop.framework.AdvisorChainFactory $r3;
        boolean $z0, $z1;

        r0 := @this: org.springframework.aop.framework.AdvisedSupport;

        r1 := @parameter0: org.springframework.aop.framework.AdvisedSupport;

        r2 := @parameter1: org.springframework.aop.TargetSource;

        r6 := @parameter2: java.util.List;

        virtualinvoke r0.<org.springframework.aop.framework.AdvisedSupport: void copyFrom(org.springframework.aop.framework.ProxyConfig)>(r1);

        r0.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.TargetSource targetSource> = r2;

        $r3 = r1.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.framework.AdvisorChainFactory advisorChainFactory>;

        r0.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.framework.AdvisorChainFactory advisorChainFactory> = $r3;

        $r4 = new java.util.ArrayList;

        $r5 = r1.<org.springframework.aop.framework.AdvisedSupport: java.util.List interfaces>;

        specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r5);

        r0.<org.springframework.aop.framework.AdvisedSupport: java.util.List interfaces> = $r4;

        $r7 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>();

        goto label3;

     label1:
        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.springframework.aop.Advisor) $r8;

        $z0 = r9 instanceof org.springframework.aop.IntroductionAdvisor;

        if $z0 == 0 goto label2;

        $r11 = (org.springframework.aop.IntroductionAdvisor) r9;

        specialinvoke r0.<org.springframework.aop.framework.AdvisedSupport: void validateIntroductionAdvisor(org.springframework.aop.IntroductionAdvisor)>($r11);

     label2:
        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r9, "Advisor must not be null");

        $r10 = r0.<org.springframework.aop.framework.AdvisedSupport: java.util.List advisors>;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r9);

     label3:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        virtualinvoke r0.<org.springframework.aop.framework.AdvisedSupport: void updateAdvisorArray()>();

        virtualinvoke r0.<org.springframework.aop.framework.AdvisedSupport: void adviceChanged()>();

        return;
    }

    org.springframework.aop.framework.AdvisedSupport getConfigurationOnlyCopy()
    {
        org.springframework.aop.TargetSource $r3;
        org.springframework.aop.target.EmptyTargetSource $r4;
        java.util.List $r6, $r7;
        java.lang.Class $r2;
        org.springframework.aop.framework.AdvisedSupport $r0, r1;
        boolean $z0;
        org.springframework.aop.framework.AdvisorChainFactory $r5;

        r1 := @this: org.springframework.aop.framework.AdvisedSupport;

        $r0 = new org.springframework.aop.framework.AdvisedSupport;

        specialinvoke $r0.<org.springframework.aop.framework.AdvisedSupport: void <init>()>();

        virtualinvoke $r0.<org.springframework.aop.framework.AdvisedSupport: void copyFrom(org.springframework.aop.framework.ProxyConfig)>(r1);

        $r2 = virtualinvoke r1.<org.springframework.aop.framework.AdvisedSupport: java.lang.Class getTargetClass()>();

        $r3 = virtualinvoke r1.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.TargetSource getTargetSource()>();

        $z0 = interfaceinvoke $r3.<org.springframework.aop.TargetSource: boolean isStatic()>();

        $r4 = staticinvoke <org.springframework.aop.target.EmptyTargetSource: org.springframework.aop.target.EmptyTargetSource forClass(java.lang.Class,boolean)>($r2, $z0);

        $r0.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.TargetSource targetSource> = $r4;

        $r5 = r1.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.framework.AdvisorChainFactory advisorChainFactory>;

        $r0.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.framework.AdvisorChainFactory advisorChainFactory> = $r5;

        $r6 = r1.<org.springframework.aop.framework.AdvisedSupport: java.util.List interfaces>;

        $r0.<org.springframework.aop.framework.AdvisedSupport: java.util.List interfaces> = $r6;

        $r7 = r1.<org.springframework.aop.framework.AdvisedSupport: java.util.List advisors>;

        $r0.<org.springframework.aop.framework.AdvisedSupport: java.util.List advisors> = $r7;

        virtualinvoke $r0.<org.springframework.aop.framework.AdvisedSupport: void updateAdvisorArray()>();

        return $r0;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream r0;
        org.springframework.aop.framework.AdvisedSupport r1;

        r1 := @this: org.springframework.aop.framework.AdvisedSupport;

        r0 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r0.<java.io.ObjectInputStream: void defaultReadObject()>();

        specialinvoke r1.<org.springframework.aop.framework.AdvisedSupport: void initMethodCache()>();

        return;
    }

    public java.lang.String toProxyConfigString()
    {
        java.lang.String $r1;
        org.springframework.aop.framework.AdvisedSupport r0;

        r0 := @this: org.springframework.aop.framework.AdvisedSupport;

        $r1 = virtualinvoke r0.<org.springframework.aop.framework.AdvisedSupport: java.lang.String toString()>();

        return $r1;
    }

    public java.lang.String toString()
    {
        org.springframework.aop.TargetSource $r15;
        int $i0, $i1;
        java.lang.String $r3, $r8, $r17, $r18;
        org.springframework.aop.framework.AdvisedSupport r1;
        java.util.List $r5, $r7, $r10, $r12;
        java.lang.StringBuilder $r0, $r4, $r6, $r9, $r11, $r13, $r14, $r16;
        java.lang.Class $r2;

        r1 := @this: org.springframework.aop.framework.AdvisedSupport;

        $r0 = new java.lang.StringBuilder;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r5 = r1.<org.springframework.aop.framework.AdvisedSupport: java.util.List interfaces>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" interfaces ");

        $r7 = r1.<org.springframework.aop.framework.AdvisedSupport: java.util.List interfaces>;

        $r8 = staticinvoke <org.springframework.util.ClassUtils: java.lang.String classNamesToString(java.util.Collection)>($r7);

        $r9 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        $r10 = r1.<org.springframework.aop.framework.AdvisedSupport: java.util.List advisors>;

        $i1 = interfaceinvoke $r10.<java.util.List: int size()>();

        $r11 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" advisors ");

        $r12 = r1.<org.springframework.aop.framework.AdvisedSupport: java.util.List advisors>;

        $r13 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        $r14 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("targetSource [");

        $r15 = r1.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.TargetSource targetSource>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]; ");

        $r17 = specialinvoke r1.<org.springframework.aop.framework.ProxyConfig: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r18 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r18;
    }
}
