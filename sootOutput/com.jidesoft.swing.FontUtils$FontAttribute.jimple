class com.jidesoft.swing.FontUtils$FontAttribute extends java.lang.Object
{
    private java.awt.Font _font;
    private int _style;
    private float _size;

    void <init>(java.awt.Font, int, float)
    {
        com.jidesoft.swing.FontUtils$FontAttribute r0;
        java.awt.Font r1;
        int i0;
        float f0;

        r0 := @this: com.jidesoft.swing.FontUtils$FontAttribute;

        r1 := @parameter0: java.awt.Font;

        i0 := @parameter1: int;

        f0 := @parameter2: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.jidesoft.swing.FontUtils$FontAttribute: java.awt.Font _font> = r1;

        r0.<com.jidesoft.swing.FontUtils$FontAttribute: int _style> = i0;

        r0.<com.jidesoft.swing.FontUtils$FontAttribute: float _size> = f0;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.awt.Font $r3, $r4, $r5;
        com.jidesoft.swing.FontUtils$FontAttribute r0, r2;
        int $i0, $i1, $i2;
        float $f0, $f1;
        java.lang.Object r1;
        boolean $z0, $z1;

        r0 := @this: com.jidesoft.swing.FontUtils$FontAttribute;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof com.jidesoft.swing.FontUtils$FontAttribute;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (com.jidesoft.swing.FontUtils$FontAttribute) r1;

        $f1 = r2.<com.jidesoft.swing.FontUtils$FontAttribute: float _size>;

        $f0 = r0.<com.jidesoft.swing.FontUtils$FontAttribute: float _size>;

        $i0 = staticinvoke <java.lang.Float: int compare(float,float)>($f1, $f0);

        if $i0 == 0 goto label3;

        return 0;

     label3:
        $i2 = r0.<com.jidesoft.swing.FontUtils$FontAttribute: int _style>;

        $i1 = r2.<com.jidesoft.swing.FontUtils$FontAttribute: int _style>;

        if $i2 == $i1 goto label4;

        return 0;

     label4:
        $r3 = r0.<com.jidesoft.swing.FontUtils$FontAttribute: java.awt.Font _font>;

        if $r3 == null goto label5;

        $r5 = r0.<com.jidesoft.swing.FontUtils$FontAttribute: java.awt.Font _font>;

        $r4 = r2.<com.jidesoft.swing.FontUtils$FontAttribute: java.awt.Font _font>;

        $z1 = virtualinvoke $r5.<java.awt.Font: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label6;

     label5:
        return 0;

     label6:
        return 1;
    }

    public int hashCode()
    {
        java.awt.Font $r1;
        byte $b3;
        com.jidesoft.swing.FontUtils$FontAttribute r0;
        int $i0, $i1, $i2, $i4, $i5, i6, $i7;
        float $f0, $f1;

        r0 := @this: com.jidesoft.swing.FontUtils$FontAttribute;

        $r1 = r0.<com.jidesoft.swing.FontUtils$FontAttribute: java.awt.Font _font>;

        $i0 = virtualinvoke $r1.<java.awt.Font: int hashCode()>();

        $i2 = 31 * $i0;

        $i1 = r0.<com.jidesoft.swing.FontUtils$FontAttribute: int _style>;

        i6 = $i2 + $i1;

        $i4 = 31 * i6;

        $f0 = r0.<com.jidesoft.swing.FontUtils$FontAttribute: float _size>;

        $b3 = $f0 cmpl 0.0F;

        if $b3 == 0 goto label1;

        $f1 = r0.<com.jidesoft.swing.FontUtils$FontAttribute: float _size>;

        $i7 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f1);

        goto label2;

     label1:
        $i7 = 0;

     label2:
        $i5 = $i4 + $i7;

        return $i5;
    }
}
