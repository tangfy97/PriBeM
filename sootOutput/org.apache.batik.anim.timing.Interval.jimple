public class org.apache.batik.anim.timing.Interval extends java.lang.Object
{
    protected float begin;
    protected float end;
    protected org.apache.batik.anim.timing.InstanceTime beginInstanceTime;
    protected org.apache.batik.anim.timing.InstanceTime endInstanceTime;
    protected java.util.LinkedList beginDependents;
    protected java.util.LinkedList endDependents;

    public void <init>(float, float, org.apache.batik.anim.timing.InstanceTime, org.apache.batik.anim.timing.InstanceTime)
    {
        org.apache.batik.anim.timing.Interval r0;
        org.apache.batik.anim.timing.InstanceTime r3, r4;
        float f0, f1;
        java.util.LinkedList $r1, $r2;

        r0 := @this: org.apache.batik.anim.timing.Interval;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r3 := @parameter2: org.apache.batik.anim.timing.InstanceTime;

        r4 := @parameter3: org.apache.batik.anim.timing.InstanceTime;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.batik.anim.timing.Interval: java.util.LinkedList beginDependents> = $r1;

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.batik.anim.timing.Interval: java.util.LinkedList endDependents> = $r2;

        r0.<org.apache.batik.anim.timing.Interval: float begin> = f0;

        r0.<org.apache.batik.anim.timing.Interval: float end> = f1;

        r0.<org.apache.batik.anim.timing.Interval: org.apache.batik.anim.timing.InstanceTime beginInstanceTime> = r3;

        r0.<org.apache.batik.anim.timing.Interval: org.apache.batik.anim.timing.InstanceTime endInstanceTime> = r4;

        return;
    }

    public java.lang.String toString()
    {
        org.apache.batik.anim.timing.Interval r1;
        java.lang.StringBuffer $r0, $r3, $r4, $r6;
        float $f0, $f1;
        java.lang.String $r2, $r5, $r7;

        r1 := @this: org.apache.batik.anim.timing.Interval;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $f0 = r1.<org.apache.batik.anim.timing.Interval: float begin>;

        $r2 = staticinvoke <org.apache.batik.anim.timing.TimedElement: java.lang.String toString(float)>($f0);

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("..");

        $f1 = r1.<org.apache.batik.anim.timing.Interval: float end>;

        $r5 = staticinvoke <org.apache.batik.anim.timing.TimedElement: java.lang.String toString(float)>($f1);

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }

    public float getBegin()
    {
        float $f0;
        org.apache.batik.anim.timing.Interval r0;

        r0 := @this: org.apache.batik.anim.timing.Interval;

        $f0 = r0.<org.apache.batik.anim.timing.Interval: float begin>;

        return $f0;
    }

    public float getEnd()
    {
        float $f0;
        org.apache.batik.anim.timing.Interval r0;

        r0 := @this: org.apache.batik.anim.timing.Interval;

        $f0 = r0.<org.apache.batik.anim.timing.Interval: float end>;

        return $f0;
    }

    public org.apache.batik.anim.timing.InstanceTime getBeginInstanceTime()
    {
        org.apache.batik.anim.timing.Interval r0;
        org.apache.batik.anim.timing.InstanceTime $r1;

        r0 := @this: org.apache.batik.anim.timing.Interval;

        $r1 = r0.<org.apache.batik.anim.timing.Interval: org.apache.batik.anim.timing.InstanceTime beginInstanceTime>;

        return $r1;
    }

    public org.apache.batik.anim.timing.InstanceTime getEndInstanceTime()
    {
        org.apache.batik.anim.timing.Interval r0;
        org.apache.batik.anim.timing.InstanceTime $r1;

        r0 := @this: org.apache.batik.anim.timing.Interval;

        $r1 = r0.<org.apache.batik.anim.timing.Interval: org.apache.batik.anim.timing.InstanceTime endInstanceTime>;

        return $r1;
    }

    void addDependent(org.apache.batik.anim.timing.InstanceTime, boolean)
    {
        org.apache.batik.anim.timing.Interval r0;
        org.apache.batik.anim.timing.InstanceTime r1;
        java.util.LinkedList $r2, $r3;
        boolean z0;

        r0 := @this: org.apache.batik.anim.timing.Interval;

        r1 := @parameter0: org.apache.batik.anim.timing.InstanceTime;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r3 = r0.<org.apache.batik.anim.timing.Interval: java.util.LinkedList beginDependents>;

        virtualinvoke $r3.<java.util.LinkedList: boolean add(java.lang.Object)>(r1);

        goto label2;

     label1:
        $r2 = r0.<org.apache.batik.anim.timing.Interval: java.util.LinkedList endDependents>;

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>(r1);

     label2:
        return;
    }

    void removeDependent(org.apache.batik.anim.timing.InstanceTime, boolean)
    {
        org.apache.batik.anim.timing.Interval r0;
        org.apache.batik.anim.timing.InstanceTime r1;
        java.util.LinkedList $r2, $r3;
        boolean z0;

        r0 := @this: org.apache.batik.anim.timing.Interval;

        r1 := @parameter0: org.apache.batik.anim.timing.InstanceTime;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r3 = r0.<org.apache.batik.anim.timing.Interval: java.util.LinkedList beginDependents>;

        virtualinvoke $r3.<java.util.LinkedList: boolean remove(java.lang.Object)>(r1);

        goto label2;

     label1:
        $r2 = r0.<org.apache.batik.anim.timing.Interval: java.util.LinkedList endDependents>;

        virtualinvoke $r2.<java.util.LinkedList: boolean remove(java.lang.Object)>(r1);

     label2:
        return;
    }

    float setBegin(float)
    {
        java.util.Iterator $r2;
        org.apache.batik.anim.timing.Interval r0;
        org.apache.batik.anim.timing.InstanceTime r4;
        byte $b0;
        int $i1;
        float f0, $f1, f2;
        java.lang.Object $r3;
        java.util.LinkedList $r1;
        boolean $z0;

        r0 := @this: org.apache.batik.anim.timing.Interval;

        f0 := @parameter0: float;

        f2 = #InfinityF;

        r0.<org.apache.batik.anim.timing.Interval: float begin> = f0;

        $r1 = r0.<org.apache.batik.anim.timing.Interval: java.util.LinkedList beginDependents>;

        $r2 = virtualinvoke $r1.<java.util.AbstractSequentialList: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.batik.anim.timing.InstanceTime) $r3;

        $f1 = virtualinvoke r4.<org.apache.batik.anim.timing.InstanceTime: float dependentUpdate(float)>(f0);

        $b0 = $f1 cmpg f2;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label2;

        f2 = $f1;

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return f2;
    }

    float setEnd(float, org.apache.batik.anim.timing.InstanceTime)
    {
        java.util.Iterator $r3;
        org.apache.batik.anim.timing.Interval r0;
        org.apache.batik.anim.timing.InstanceTime r1, r5;
        byte $b0;
        int $i1;
        float f0, $f1, f2;
        java.lang.Object $r4;
        java.util.LinkedList $r2;
        boolean $z0;

        r0 := @this: org.apache.batik.anim.timing.Interval;

        f0 := @parameter0: float;

        r1 := @parameter1: org.apache.batik.anim.timing.InstanceTime;

        f2 = #InfinityF;

        r0.<org.apache.batik.anim.timing.Interval: float end> = f0;

        r0.<org.apache.batik.anim.timing.Interval: org.apache.batik.anim.timing.InstanceTime endInstanceTime> = r1;

        $r2 = r0.<org.apache.batik.anim.timing.Interval: java.util.LinkedList endDependents>;

        $r3 = virtualinvoke $r2.<java.util.AbstractSequentialList: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.batik.anim.timing.InstanceTime) $r4;

        $f1 = virtualinvoke r5.<org.apache.batik.anim.timing.InstanceTime: float dependentUpdate(float)>(f0);

        $b0 = $f1 cmpg f2;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label2;

        f2 = $f1;

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return f2;
    }
}
