public class org.apache.cxf.configuration.security.TLSClientParametersType extends java.lang.Object
{
    protected org.apache.cxf.configuration.security.KeyManagersType keyManagers;
    protected org.apache.cxf.configuration.security.TrustManagersType trustManagers;
    protected org.apache.cxf.configuration.security.CipherSuites cipherSuites;
    protected org.apache.cxf.configuration.security.FiltersType cipherSuitesFilter;
    protected org.apache.cxf.configuration.security.SecureRandomParameters secureRandomParameters;
    protected org.apache.cxf.configuration.security.CertificateConstraintsType certConstraints;
    protected java.lang.String certAlias;
    protected java.lang.Boolean useHttpsURLConnectionDefaultSslSocketFactory;
    protected java.lang.Boolean useHttpsURLConnectionDefaultHostnameVerifier;
    protected java.lang.Boolean disableCNCheck;
    protected java.lang.String jsseProvider;
    protected java.lang.String secureSocketProtocol;
    protected java.lang.Integer sslCacheTimeout;

    public void <init>()
    {
        org.apache.cxf.configuration.security.TLSClientParametersType r0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.cxf.configuration.security.KeyManagersType getKeyManagers()
    {
        org.apache.cxf.configuration.security.KeyManagersType $r1;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        $r1 = r0.<org.apache.cxf.configuration.security.TLSClientParametersType: org.apache.cxf.configuration.security.KeyManagersType keyManagers>;

        return $r1;
    }

    public void setKeyManagers(org.apache.cxf.configuration.security.KeyManagersType)
    {
        org.apache.cxf.configuration.security.KeyManagersType r1;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        r1 := @parameter0: org.apache.cxf.configuration.security.KeyManagersType;

        r0.<org.apache.cxf.configuration.security.TLSClientParametersType: org.apache.cxf.configuration.security.KeyManagersType keyManagers> = r1;

        return;
    }

    public boolean isSetKeyManagers()
    {
        org.apache.cxf.configuration.security.KeyManagersType $r1;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        $r1 = r0.<org.apache.cxf.configuration.security.TLSClientParametersType: org.apache.cxf.configuration.security.KeyManagersType keyManagers>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.apache.cxf.configuration.security.TrustManagersType getTrustManagers()
    {
        org.apache.cxf.configuration.security.TrustManagersType $r1;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        $r1 = r0.<org.apache.cxf.configuration.security.TLSClientParametersType: org.apache.cxf.configuration.security.TrustManagersType trustManagers>;

        return $r1;
    }

    public void setTrustManagers(org.apache.cxf.configuration.security.TrustManagersType)
    {
        org.apache.cxf.configuration.security.TrustManagersType r1;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        r1 := @parameter0: org.apache.cxf.configuration.security.TrustManagersType;

        r0.<org.apache.cxf.configuration.security.TLSClientParametersType: org.apache.cxf.configuration.security.TrustManagersType trustManagers> = r1;

        return;
    }

    public boolean isSetTrustManagers()
    {
        org.apache.cxf.configuration.security.TrustManagersType $r1;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        $r1 = r0.<org.apache.cxf.configuration.security.TLSClientParametersType: org.apache.cxf.configuration.security.TrustManagersType trustManagers>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.apache.cxf.configuration.security.CipherSuites getCipherSuites()
    {
        org.apache.cxf.configuration.security.CipherSuites $r1;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        $r1 = r0.<org.apache.cxf.configuration.security.TLSClientParametersType: org.apache.cxf.configuration.security.CipherSuites cipherSuites>;

        return $r1;
    }

    public void setCipherSuites(org.apache.cxf.configuration.security.CipherSuites)
    {
        org.apache.cxf.configuration.security.CipherSuites r1;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        r1 := @parameter0: org.apache.cxf.configuration.security.CipherSuites;

        r0.<org.apache.cxf.configuration.security.TLSClientParametersType: org.apache.cxf.configuration.security.CipherSuites cipherSuites> = r1;

        return;
    }

    public boolean isSetCipherSuites()
    {
        org.apache.cxf.configuration.security.CipherSuites $r1;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        $r1 = r0.<org.apache.cxf.configuration.security.TLSClientParametersType: org.apache.cxf.configuration.security.CipherSuites cipherSuites>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.apache.cxf.configuration.security.FiltersType getCipherSuitesFilter()
    {
        org.apache.cxf.configuration.security.TLSClientParametersType r0;
        org.apache.cxf.configuration.security.FiltersType $r1;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        $r1 = r0.<org.apache.cxf.configuration.security.TLSClientParametersType: org.apache.cxf.configuration.security.FiltersType cipherSuitesFilter>;

        return $r1;
    }

    public void setCipherSuitesFilter(org.apache.cxf.configuration.security.FiltersType)
    {
        org.apache.cxf.configuration.security.TLSClientParametersType r0;
        org.apache.cxf.configuration.security.FiltersType r1;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        r1 := @parameter0: org.apache.cxf.configuration.security.FiltersType;

        r0.<org.apache.cxf.configuration.security.TLSClientParametersType: org.apache.cxf.configuration.security.FiltersType cipherSuitesFilter> = r1;

        return;
    }

    public boolean isSetCipherSuitesFilter()
    {
        org.apache.cxf.configuration.security.TLSClientParametersType r0;
        org.apache.cxf.configuration.security.FiltersType $r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        $r1 = r0.<org.apache.cxf.configuration.security.TLSClientParametersType: org.apache.cxf.configuration.security.FiltersType cipherSuitesFilter>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.apache.cxf.configuration.security.SecureRandomParameters getSecureRandomParameters()
    {
        org.apache.cxf.configuration.security.SecureRandomParameters $r1;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        $r1 = r0.<org.apache.cxf.configuration.security.TLSClientParametersType: org.apache.cxf.configuration.security.SecureRandomParameters secureRandomParameters>;

        return $r1;
    }

    public void setSecureRandomParameters(org.apache.cxf.configuration.security.SecureRandomParameters)
    {
        org.apache.cxf.configuration.security.SecureRandomParameters r1;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        r1 := @parameter0: org.apache.cxf.configuration.security.SecureRandomParameters;

        r0.<org.apache.cxf.configuration.security.TLSClientParametersType: org.apache.cxf.configuration.security.SecureRandomParameters secureRandomParameters> = r1;

        return;
    }

    public boolean isSetSecureRandomParameters()
    {
        org.apache.cxf.configuration.security.SecureRandomParameters $r1;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        $r1 = r0.<org.apache.cxf.configuration.security.TLSClientParametersType: org.apache.cxf.configuration.security.SecureRandomParameters secureRandomParameters>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.apache.cxf.configuration.security.CertificateConstraintsType getCertConstraints()
    {
        org.apache.cxf.configuration.security.CertificateConstraintsType $r1;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        $r1 = r0.<org.apache.cxf.configuration.security.TLSClientParametersType: org.apache.cxf.configuration.security.CertificateConstraintsType certConstraints>;

        return $r1;
    }

    public void setCertConstraints(org.apache.cxf.configuration.security.CertificateConstraintsType)
    {
        org.apache.cxf.configuration.security.CertificateConstraintsType r1;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        r1 := @parameter0: org.apache.cxf.configuration.security.CertificateConstraintsType;

        r0.<org.apache.cxf.configuration.security.TLSClientParametersType: org.apache.cxf.configuration.security.CertificateConstraintsType certConstraints> = r1;

        return;
    }

    public boolean isSetCertConstraints()
    {
        org.apache.cxf.configuration.security.CertificateConstraintsType $r1;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        $r1 = r0.<org.apache.cxf.configuration.security.TLSClientParametersType: org.apache.cxf.configuration.security.CertificateConstraintsType certConstraints>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String getCertAlias()
    {
        java.lang.String $r1;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        $r1 = r0.<org.apache.cxf.configuration.security.TLSClientParametersType: java.lang.String certAlias>;

        return $r1;
    }

    public void setCertAlias(java.lang.String)
    {
        java.lang.String r1;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.configuration.security.TLSClientParametersType: java.lang.String certAlias> = r1;

        return;
    }

    public boolean isSetCertAlias()
    {
        java.lang.String $r1;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        $r1 = r0.<org.apache.cxf.configuration.security.TLSClientParametersType: java.lang.String certAlias>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String getJsseProvider()
    {
        java.lang.String $r1;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        $r1 = r0.<org.apache.cxf.configuration.security.TLSClientParametersType: java.lang.String jsseProvider>;

        return $r1;
    }

    public void setJsseProvider(java.lang.String)
    {
        java.lang.String r1;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.configuration.security.TLSClientParametersType: java.lang.String jsseProvider> = r1;

        return;
    }

    public boolean isSetJsseProvider()
    {
        java.lang.String $r1;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        $r1 = r0.<org.apache.cxf.configuration.security.TLSClientParametersType: java.lang.String jsseProvider>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String getSecureSocketProtocol()
    {
        java.lang.String $r1;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        $r1 = r0.<org.apache.cxf.configuration.security.TLSClientParametersType: java.lang.String secureSocketProtocol>;

        return $r1;
    }

    public void setSecureSocketProtocol(java.lang.String)
    {
        java.lang.String r1;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.configuration.security.TLSClientParametersType: java.lang.String secureSocketProtocol> = r1;

        return;
    }

    public boolean isSetSecureSocketProtocol()
    {
        java.lang.String $r1;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        $r1 = r0.<org.apache.cxf.configuration.security.TLSClientParametersType: java.lang.String secureSocketProtocol>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int getSslCacheTimeout()
    {
        int $i0;
        java.lang.Integer $r1;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        $r1 = r0.<org.apache.cxf.configuration.security.TLSClientParametersType: java.lang.Integer sslCacheTimeout>;

        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public void setSslCacheTimeout(int)
    {
        int i0;
        java.lang.Integer $r1;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        i0 := @parameter0: int;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r0.<org.apache.cxf.configuration.security.TLSClientParametersType: java.lang.Integer sslCacheTimeout> = $r1;

        return;
    }

    public boolean isSetSslCacheTimeout()
    {
        java.lang.Integer $r1;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        $r1 = r0.<org.apache.cxf.configuration.security.TLSClientParametersType: java.lang.Integer sslCacheTimeout>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void unsetSslCacheTimeout()
    {
        org.apache.cxf.configuration.security.TLSClientParametersType r0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        r0.<org.apache.cxf.configuration.security.TLSClientParametersType: java.lang.Integer sslCacheTimeout> = null;

        return;
    }

    public void setUseHttpsURLConnectionDefaultSslSocketFactory(boolean)
    {
        java.lang.Boolean $r1;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;
        boolean z0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r0.<org.apache.cxf.configuration.security.TLSClientParametersType: java.lang.Boolean useHttpsURLConnectionDefaultSslSocketFactory> = $r1;

        return;
    }

    public void unsetUseHttpsURLConnectionDefaultSslSocketFactory()
    {
        org.apache.cxf.configuration.security.TLSClientParametersType r0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        r0.<org.apache.cxf.configuration.security.TLSClientParametersType: java.lang.Boolean useHttpsURLConnectionDefaultSslSocketFactory> = null;

        return;
    }

    public boolean isSetUseHttpsURLConnectionDefaultSslSocketFactory()
    {
        java.lang.Boolean $r1;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        $r1 = r0.<org.apache.cxf.configuration.security.TLSClientParametersType: java.lang.Boolean useHttpsURLConnectionDefaultSslSocketFactory>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isUseHttpsURLConnectionDefaultSslSocketFactory()
    {
        java.lang.Boolean $r1, $r2;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        $r1 = r0.<org.apache.cxf.configuration.security.TLSClientParametersType: java.lang.Boolean useHttpsURLConnectionDefaultSslSocketFactory>;

        if null != $r1 goto label1;

        return 0;

     label1:
        $r2 = r0.<org.apache.cxf.configuration.security.TLSClientParametersType: java.lang.Boolean useHttpsURLConnectionDefaultSslSocketFactory>;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public void setUseHttpsURLConnectionDefaultHostnameVerifier(boolean)
    {
        java.lang.Boolean $r1;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;
        boolean z0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r0.<org.apache.cxf.configuration.security.TLSClientParametersType: java.lang.Boolean useHttpsURLConnectionDefaultHostnameVerifier> = $r1;

        return;
    }

    public void unsetUseHttpsURLConnectionDefaultHostnameVerifier()
    {
        org.apache.cxf.configuration.security.TLSClientParametersType r0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        r0.<org.apache.cxf.configuration.security.TLSClientParametersType: java.lang.Boolean useHttpsURLConnectionDefaultHostnameVerifier> = null;

        return;
    }

    public boolean isSetUseHttpsURLConnectionDefaultHostnameVerifier()
    {
        java.lang.Boolean $r1;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        $r1 = r0.<org.apache.cxf.configuration.security.TLSClientParametersType: java.lang.Boolean useHttpsURLConnectionDefaultHostnameVerifier>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isUseHttpsURLConnectionDefaultHostnameVerifier()
    {
        java.lang.Boolean $r1, $r2;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        $r1 = r0.<org.apache.cxf.configuration.security.TLSClientParametersType: java.lang.Boolean useHttpsURLConnectionDefaultHostnameVerifier>;

        if null != $r1 goto label1;

        return 0;

     label1:
        $r2 = r0.<org.apache.cxf.configuration.security.TLSClientParametersType: java.lang.Boolean useHttpsURLConnectionDefaultHostnameVerifier>;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public void setDisableCNCheck(boolean)
    {
        java.lang.Boolean $r1;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;
        boolean z0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r0.<org.apache.cxf.configuration.security.TLSClientParametersType: java.lang.Boolean disableCNCheck> = $r1;

        return;
    }

    public void unsetDisableCNCheck()
    {
        org.apache.cxf.configuration.security.TLSClientParametersType r0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        r0.<org.apache.cxf.configuration.security.TLSClientParametersType: java.lang.Boolean disableCNCheck> = null;

        return;
    }

    public boolean isSetDisableCNCheck()
    {
        java.lang.Boolean $r1;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        $r1 = r0.<org.apache.cxf.configuration.security.TLSClientParametersType: java.lang.Boolean disableCNCheck>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isDisableCNCheck()
    {
        java.lang.Boolean $r1, $r2;
        org.apache.cxf.configuration.security.TLSClientParametersType r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.configuration.security.TLSClientParametersType;

        $r1 = r0.<org.apache.cxf.configuration.security.TLSClientParametersType: java.lang.Boolean disableCNCheck>;

        if null != $r1 goto label1;

        return 0;

     label1:
        $r2 = r0.<org.apache.cxf.configuration.security.TLSClientParametersType: java.lang.Boolean disableCNCheck>;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }
}
