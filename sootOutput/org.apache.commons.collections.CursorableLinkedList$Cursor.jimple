public class org.apache.commons.collections.CursorableLinkedList$Cursor extends org.apache.commons.collections.CursorableLinkedList$ListIter implements java.util.ListIterator
{
    boolean _valid;
    private final org.apache.commons.collections.CursorableLinkedList this$0;

    void <init>(org.apache.commons.collections.CursorableLinkedList, int)
    {
        org.apache.commons.collections.CursorableLinkedList$Cursor r0;
        int i0;
        org.apache.commons.collections.CursorableLinkedList r1;

        r0 := @this: org.apache.commons.collections.CursorableLinkedList$Cursor;

        r1 := @parameter0: org.apache.commons.collections.CursorableLinkedList;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.commons.collections.CursorableLinkedList$ListIter: void <init>(org.apache.commons.collections.CursorableLinkedList,int)>(r1, i0);

        r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: org.apache.commons.collections.CursorableLinkedList this$0> = r1;

        r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: boolean _valid> = 0;

        r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: boolean _valid> = 1;

        virtualinvoke r1.<org.apache.commons.collections.CursorableLinkedList: void registerCursor(org.apache.commons.collections.CursorableLinkedList$Cursor)>(r0);

        return;
    }

    public int previousIndex()
    {
        org.apache.commons.collections.CursorableLinkedList$Cursor r1;
        java.lang.UnsupportedOperationException $r0;

        r1 := @this: org.apache.commons.collections.CursorableLinkedList$Cursor;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public int nextIndex()
    {
        org.apache.commons.collections.CursorableLinkedList$Cursor r1;
        java.lang.UnsupportedOperationException $r0;

        r1 := @this: org.apache.commons.collections.CursorableLinkedList$Cursor;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void add(java.lang.Object)
    {
        org.apache.commons.collections.CursorableLinkedList$Listable $r1, $r3, $r4, $r5, $r7, $r8, $r9, $r10;
        org.apache.commons.collections.CursorableLinkedList$Cursor r0;
        int $i0, $i1, $i2, $i3;
        java.lang.Object r6;
        org.apache.commons.collections.CursorableLinkedList $r2;

        r0 := @this: org.apache.commons.collections.CursorableLinkedList$Cursor;

        r6 := @parameter0: java.lang.Object;

        virtualinvoke r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: void checkForComod()>();

        $r2 = r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: org.apache.commons.collections.CursorableLinkedList this$0>;

        $r1 = r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: org.apache.commons.collections.CursorableLinkedList$Listable _cur>;

        $r3 = virtualinvoke $r1.<org.apache.commons.collections.CursorableLinkedList$Listable: org.apache.commons.collections.CursorableLinkedList$Listable prev()>();

        $r4 = r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: org.apache.commons.collections.CursorableLinkedList$Listable _cur>;

        $r5 = virtualinvoke $r4.<org.apache.commons.collections.CursorableLinkedList$Listable: org.apache.commons.collections.CursorableLinkedList$Listable next()>();

        $r7 = virtualinvoke $r2.<org.apache.commons.collections.CursorableLinkedList: org.apache.commons.collections.CursorableLinkedList$Listable insertListable(org.apache.commons.collections.CursorableLinkedList$Listable,org.apache.commons.collections.CursorableLinkedList$Listable,java.lang.Object)>($r3, $r5, r6);

        $r8 = r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: org.apache.commons.collections.CursorableLinkedList$Listable _cur>;

        virtualinvoke $r8.<org.apache.commons.collections.CursorableLinkedList$Listable: void setPrev(org.apache.commons.collections.CursorableLinkedList$Listable)>($r7);

        $r9 = r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: org.apache.commons.collections.CursorableLinkedList$Listable _cur>;

        $r10 = virtualinvoke $r7.<org.apache.commons.collections.CursorableLinkedList$Listable: org.apache.commons.collections.CursorableLinkedList$Listable next()>();

        virtualinvoke $r9.<org.apache.commons.collections.CursorableLinkedList$Listable: void setNext(org.apache.commons.collections.CursorableLinkedList$Listable)>($r10);

        r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: org.apache.commons.collections.CursorableLinkedList$Listable _lastReturned> = null;

        $i0 = r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: int _nextIndex>;

        $i1 = $i0 + 1;

        r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: int _nextIndex> = $i1;

        $i2 = r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: int _expectedModCount>;

        $i3 = $i2 + 1;

        r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: int _expectedModCount> = $i3;

        return;
    }

    protected void listableRemoved(org.apache.commons.collections.CursorableLinkedList$Listable)
    {
        org.apache.commons.collections.CursorableLinkedList$Cursor r0;
        org.apache.commons.collections.CursorableLinkedList $r1, $r15;
        org.apache.commons.collections.CursorableLinkedList$Listable $r2, $r3, $r4, $r5, r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r16, $r17, $r18;

        r0 := @this: org.apache.commons.collections.CursorableLinkedList$Cursor;

        r6 := @parameter0: org.apache.commons.collections.CursorableLinkedList$Listable;

        $r1 = r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: org.apache.commons.collections.CursorableLinkedList this$0>;

        $r2 = $r1.<org.apache.commons.collections.CursorableLinkedList: org.apache.commons.collections.CursorableLinkedList$Listable _head>;

        $r3 = virtualinvoke $r2.<org.apache.commons.collections.CursorableLinkedList$Listable: org.apache.commons.collections.CursorableLinkedList$Listable prev()>();

        if null != $r3 goto label1;

        $r14 = r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: org.apache.commons.collections.CursorableLinkedList$Listable _cur>;

        virtualinvoke $r14.<org.apache.commons.collections.CursorableLinkedList$Listable: void setNext(org.apache.commons.collections.CursorableLinkedList$Listable)>(null);

        goto label2;

     label1:
        $r4 = r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: org.apache.commons.collections.CursorableLinkedList$Listable _cur>;

        $r5 = virtualinvoke $r4.<org.apache.commons.collections.CursorableLinkedList$Listable: org.apache.commons.collections.CursorableLinkedList$Listable next()>();

        if $r5 != r6 goto label2;

        $r12 = r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: org.apache.commons.collections.CursorableLinkedList$Listable _cur>;

        $r13 = virtualinvoke r6.<org.apache.commons.collections.CursorableLinkedList$Listable: org.apache.commons.collections.CursorableLinkedList$Listable next()>();

        virtualinvoke $r12.<org.apache.commons.collections.CursorableLinkedList$Listable: void setNext(org.apache.commons.collections.CursorableLinkedList$Listable)>($r13);

     label2:
        $r15 = r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: org.apache.commons.collections.CursorableLinkedList this$0>;

        $r16 = $r15.<org.apache.commons.collections.CursorableLinkedList: org.apache.commons.collections.CursorableLinkedList$Listable _head>;

        $r17 = virtualinvoke $r16.<org.apache.commons.collections.CursorableLinkedList$Listable: org.apache.commons.collections.CursorableLinkedList$Listable next()>();

        if null != $r17 goto label3;

        $r11 = r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: org.apache.commons.collections.CursorableLinkedList$Listable _cur>;

        virtualinvoke $r11.<org.apache.commons.collections.CursorableLinkedList$Listable: void setPrev(org.apache.commons.collections.CursorableLinkedList$Listable)>(null);

        goto label4;

     label3:
        $r7 = r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: org.apache.commons.collections.CursorableLinkedList$Listable _cur>;

        $r8 = virtualinvoke $r7.<org.apache.commons.collections.CursorableLinkedList$Listable: org.apache.commons.collections.CursorableLinkedList$Listable prev()>();

        if $r8 != r6 goto label4;

        $r9 = r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: org.apache.commons.collections.CursorableLinkedList$Listable _cur>;

        $r10 = virtualinvoke r6.<org.apache.commons.collections.CursorableLinkedList$Listable: org.apache.commons.collections.CursorableLinkedList$Listable prev()>();

        virtualinvoke $r9.<org.apache.commons.collections.CursorableLinkedList$Listable: void setPrev(org.apache.commons.collections.CursorableLinkedList$Listable)>($r10);

     label4:
        $r18 = r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: org.apache.commons.collections.CursorableLinkedList$Listable _lastReturned>;

        if $r18 != r6 goto label5;

        r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: org.apache.commons.collections.CursorableLinkedList$Listable _lastReturned> = null;

     label5:
        return;
    }

    protected void listableInserted(org.apache.commons.collections.CursorableLinkedList$Listable)
    {
        org.apache.commons.collections.CursorableLinkedList$Cursor r0;
        org.apache.commons.collections.CursorableLinkedList$Listable $r1, $r2, $r3, $r4, r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;

        r0 := @this: org.apache.commons.collections.CursorableLinkedList$Cursor;

        r5 := @parameter0: org.apache.commons.collections.CursorableLinkedList$Listable;

        $r1 = r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: org.apache.commons.collections.CursorableLinkedList$Listable _cur>;

        $r2 = virtualinvoke $r1.<org.apache.commons.collections.CursorableLinkedList$Listable: org.apache.commons.collections.CursorableLinkedList$Listable next()>();

        if null != $r2 goto label1;

        $r10 = r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: org.apache.commons.collections.CursorableLinkedList$Listable _cur>;

        $r11 = virtualinvoke $r10.<org.apache.commons.collections.CursorableLinkedList$Listable: org.apache.commons.collections.CursorableLinkedList$Listable prev()>();

        if null != $r11 goto label1;

        $r12 = r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: org.apache.commons.collections.CursorableLinkedList$Listable _cur>;

        virtualinvoke $r12.<org.apache.commons.collections.CursorableLinkedList$Listable: void setNext(org.apache.commons.collections.CursorableLinkedList$Listable)>(r5);

        goto label2;

     label1:
        $r3 = r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: org.apache.commons.collections.CursorableLinkedList$Listable _cur>;

        $r4 = virtualinvoke $r3.<org.apache.commons.collections.CursorableLinkedList$Listable: org.apache.commons.collections.CursorableLinkedList$Listable prev()>();

        $r6 = virtualinvoke r5.<org.apache.commons.collections.CursorableLinkedList$Listable: org.apache.commons.collections.CursorableLinkedList$Listable prev()>();

        if $r4 != $r6 goto label2;

        $r9 = r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: org.apache.commons.collections.CursorableLinkedList$Listable _cur>;

        virtualinvoke $r9.<org.apache.commons.collections.CursorableLinkedList$Listable: void setNext(org.apache.commons.collections.CursorableLinkedList$Listable)>(r5);

     label2:
        $r13 = r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: org.apache.commons.collections.CursorableLinkedList$Listable _cur>;

        $r14 = virtualinvoke $r13.<org.apache.commons.collections.CursorableLinkedList$Listable: org.apache.commons.collections.CursorableLinkedList$Listable next()>();

        $r15 = virtualinvoke r5.<org.apache.commons.collections.CursorableLinkedList$Listable: org.apache.commons.collections.CursorableLinkedList$Listable next()>();

        if $r14 != $r15 goto label3;

        $r8 = r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: org.apache.commons.collections.CursorableLinkedList$Listable _cur>;

        virtualinvoke $r8.<org.apache.commons.collections.CursorableLinkedList$Listable: void setPrev(org.apache.commons.collections.CursorableLinkedList$Listable)>(r5);

     label3:
        $r7 = r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: org.apache.commons.collections.CursorableLinkedList$Listable _lastReturned>;

        if $r7 != r5 goto label4;

        r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: org.apache.commons.collections.CursorableLinkedList$Listable _lastReturned> = null;

     label4:
        return;
    }

    protected void listableChanged(org.apache.commons.collections.CursorableLinkedList$Listable)
    {
        org.apache.commons.collections.CursorableLinkedList$Cursor r0;
        org.apache.commons.collections.CursorableLinkedList$Listable r1, $r2;

        r0 := @this: org.apache.commons.collections.CursorableLinkedList$Cursor;

        r1 := @parameter0: org.apache.commons.collections.CursorableLinkedList$Listable;

        $r2 = r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: org.apache.commons.collections.CursorableLinkedList$Listable _lastReturned>;

        if $r2 != r1 goto label1;

        r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: org.apache.commons.collections.CursorableLinkedList$Listable _lastReturned> = null;

     label1:
        return;
    }

    protected void checkForComod()
    {
        org.apache.commons.collections.CursorableLinkedList$Cursor r0;
        java.util.ConcurrentModificationException $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.CursorableLinkedList$Cursor;

        $z0 = r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: boolean _valid>;

        if $z0 != 0 goto label1;

        $r1 = new java.util.ConcurrentModificationException;

        specialinvoke $r1.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r1;

     label1:
        return;
    }

    protected void invalidate()
    {
        org.apache.commons.collections.CursorableLinkedList$Cursor r0;

        r0 := @this: org.apache.commons.collections.CursorableLinkedList$Cursor;

        r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: boolean _valid> = 0;

        return;
    }

    public void close()
    {
        org.apache.commons.collections.CursorableLinkedList$Cursor r0;
        org.apache.commons.collections.CursorableLinkedList $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.CursorableLinkedList$Cursor;

        $z0 = r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: boolean _valid>;

        if $z0 == 0 goto label1;

        r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: boolean _valid> = 0;

        $r1 = r0.<org.apache.commons.collections.CursorableLinkedList$Cursor: org.apache.commons.collections.CursorableLinkedList this$0>;

        virtualinvoke $r1.<org.apache.commons.collections.CursorableLinkedList: void unregisterCursor(org.apache.commons.collections.CursorableLinkedList$Cursor)>(r0);

     label1:
        return;
    }
}
