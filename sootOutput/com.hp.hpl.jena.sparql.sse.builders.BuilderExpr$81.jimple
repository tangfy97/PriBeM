class com.hp.hpl.jena.sparql.sse.builders.BuilderExpr$81 extends java.lang.Object implements com.hp.hpl.jena.sparql.sse.builders.BuilderExpr$Build
{
    final com.hp.hpl.jena.sparql.sse.builders.BuilderExpr this$0;

    void <init>(com.hp.hpl.jena.sparql.sse.builders.BuilderExpr)
    {
        com.hp.hpl.jena.sparql.sse.builders.BuilderExpr$81 r0;
        com.hp.hpl.jena.sparql.sse.builders.BuilderExpr r1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.builders.BuilderExpr$81;

        r1 := @parameter0: com.hp.hpl.jena.sparql.sse.builders.BuilderExpr;

        r0.<com.hp.hpl.jena.sparql.sse.builders.BuilderExpr$81: com.hp.hpl.jena.sparql.sse.builders.BuilderExpr this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.hp.hpl.jena.sparql.expr.Expr make(com.hp.hpl.jena.sparql.sse.ItemList)
    {
        com.hp.hpl.jena.graph.Node $r10;
        com.hp.hpl.jena.sparql.expr.Expr $r25;
        com.hp.hpl.jena.sparql.expr.ExprAggregator $r27;
        boolean $z0, $z1, $z2;
        com.hp.hpl.jena.sparql.sse.Item $r2, $r3, $r9, $r24;
        java.lang.StringBuilder $r5, $r6, $r7, $r11, $r12, $r13, $r16, $r17, $r19;
        int $i0;
        java.lang.String $r8, $r14, $r18, $r20, r23;
        com.hp.hpl.jena.sparql.expr.aggregate.Aggregator $r26;
        com.hp.hpl.jena.sparql.sse.ItemList r0, $r1, $r4, r22;
        com.hp.hpl.jena.datatypes.RDFDatatype $r15;
        com.hp.hpl.jena.sparql.sse.builders.BuilderExpr$81 r21;

        r21 := @this: com.hp.hpl.jena.sparql.sse.builders.BuilderExpr$81;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.ItemList;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.ItemList cdr()>();

        r22 = $r1;

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderExpr: boolean startsWithDistinct(com.hp.hpl.jena.sparql.sse.ItemList)>($r1);

        if $z0 == 0 goto label1;

        r22 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.ItemList cdr()>();

     label1:
        $i0 = virtualinvoke r22.<com.hp.hpl.jena.sparql.sse.ItemList: int size()>();

        if $i0 != 0 goto label2;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Broken syntax: ");

        $r18 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: java.lang.String shortString()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.ItemList,java.lang.String)>(r0, $r20);

     label2:
        r23 = null;

        $r2 = virtualinvoke r22.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.Item get(int)>(0);

        $z1 = virtualinvoke $r2.<com.hp.hpl.jena.sparql.sse.Item: boolean isTagged(java.lang.String)>("separator");

        if $z1 == 0 goto label5;

        $r3 = virtualinvoke r22.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.Item get(int)>(0);

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.sparql.sse.ItemList getList()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Broken syntax: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void checkLength(int,com.hp.hpl.jena.sparql.sse.ItemList,java.lang.String)>(2, $r4, $r8);

        $r9 = virtualinvoke $r4.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.Item get(int)>(1);

        $r10 = virtualinvoke $r9.<com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.graph.Node getNode()>();

        $z2 = virtualinvoke $r10.<com.hp.hpl.jena.graph.Node: boolean isLiteral()>();

        if $z2 == 0 goto label3;

        $r15 = virtualinvoke $r10.<com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.datatypes.RDFDatatype getLiteralDatatype()>();

        if $r15 == null goto label4;

     label3:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Need string for separator: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderLib: void broken(com.hp.hpl.jena.sparql.sse.ItemList,java.lang.String)>($r4, $r14);

     label4:
        r23 = virtualinvoke $r10.<com.hp.hpl.jena.graph.Node: java.lang.String getLiteralLexicalForm()>();

        r22 = virtualinvoke r22.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.ItemList cdr()>();

     label5:
        $r24 = virtualinvoke r22.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.Item get(int)>(0);

        $r25 = staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderExpr: com.hp.hpl.jena.sparql.expr.Expr buildExpr(com.hp.hpl.jena.sparql.sse.Item)>($r24);

        $r26 = staticinvoke <com.hp.hpl.jena.sparql.expr.aggregate.AggregatorFactory: com.hp.hpl.jena.sparql.expr.aggregate.Aggregator createGroupConcat(boolean,com.hp.hpl.jena.sparql.expr.Expr,java.lang.String,com.hp.hpl.jena.sparql.expr.ExprList)>($z0, $r25, r23, null);

        $r27 = new com.hp.hpl.jena.sparql.expr.ExprAggregator;

        specialinvoke $r27.<com.hp.hpl.jena.sparql.expr.ExprAggregator: void <init>(com.hp.hpl.jena.sparql.core.Var,com.hp.hpl.jena.sparql.expr.aggregate.Aggregator)>(null, $r26);

        return $r27;
    }
}
