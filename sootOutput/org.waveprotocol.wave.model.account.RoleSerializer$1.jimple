final class org.waveprotocol.wave.model.account.RoleSerializer$1 extends java.lang.Object implements org.waveprotocol.wave.model.util.Serializer
{

    void <init>()
    {
        org.waveprotocol.wave.model.account.RoleSerializer$1 r0;

        r0 := @this: org.waveprotocol.wave.model.account.RoleSerializer$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.waveprotocol.wave.model.account.Role fromString(java.lang.String)
    {
        org.waveprotocol.wave.model.account.RoleSerializer$1 r2;
        org.waveprotocol.wave.model.account.Role $r1;
        java.lang.String r0;

        r2 := @this: org.waveprotocol.wave.model.account.RoleSerializer$1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.waveprotocol.wave.model.account.Role: org.waveprotocol.wave.model.account.Role valueOf(java.lang.String)>(r0);

        return $r1;
    }

    public org.waveprotocol.wave.model.account.Role fromString(java.lang.String, org.waveprotocol.wave.model.account.Role)
    {
        org.waveprotocol.wave.model.account.RoleSerializer$1 r2;
        org.waveprotocol.wave.model.account.Role r1, $r3;
        java.lang.String r0;

        r2 := @this: org.waveprotocol.wave.model.account.RoleSerializer$1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.waveprotocol.wave.model.account.Role;

        if r0 == null goto label1;

        $r3 = virtualinvoke r2.<org.waveprotocol.wave.model.account.RoleSerializer$1: org.waveprotocol.wave.model.account.Role fromString(java.lang.String)>(r0);

        return $r3;

     label1:
        return r1;
    }

    public java.lang.String toString(org.waveprotocol.wave.model.account.Role)
    {
        org.waveprotocol.wave.model.account.RoleSerializer$1 r1;
        org.waveprotocol.wave.model.account.Role r0;
        java.lang.String $r2;

        r1 := @this: org.waveprotocol.wave.model.account.RoleSerializer$1;

        r0 := @parameter0: org.waveprotocol.wave.model.account.Role;

        if r0 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.waveprotocol.wave.model.account.Role: java.lang.String toString()>();

     label2:
        return $r2;
    }

    public volatile java.lang.Object fromString(java.lang.String, java.lang.Object)
    {
        org.waveprotocol.wave.model.account.RoleSerializer$1 r0;
        java.lang.Object r2;
        org.waveprotocol.wave.model.account.Role $r3, $r4;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.model.account.RoleSerializer$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = (org.waveprotocol.wave.model.account.Role) r2;

        $r4 = virtualinvoke r0.<org.waveprotocol.wave.model.account.RoleSerializer$1: org.waveprotocol.wave.model.account.Role fromString(java.lang.String,org.waveprotocol.wave.model.account.Role)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object fromString(java.lang.String)
    {
        org.waveprotocol.wave.model.account.RoleSerializer$1 r0;
        org.waveprotocol.wave.model.account.Role $r2;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.model.account.RoleSerializer$1;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.model.account.RoleSerializer$1: org.waveprotocol.wave.model.account.Role fromString(java.lang.String)>(r1);

        return $r2;
    }

    public volatile java.lang.String toString(java.lang.Object)
    {
        org.waveprotocol.wave.model.account.RoleSerializer$1 r0;
        java.lang.Object r1;
        org.waveprotocol.wave.model.account.Role $r2;
        java.lang.String $r3;

        r0 := @this: org.waveprotocol.wave.model.account.RoleSerializer$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.account.Role) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.model.account.RoleSerializer$1: java.lang.String toString(org.waveprotocol.wave.model.account.Role)>($r2);

        return $r3;
    }
}
