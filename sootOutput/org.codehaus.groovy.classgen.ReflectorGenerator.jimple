public class org.codehaus.groovy.classgen.ReflectorGenerator extends java.lang.Object implements groovyjarjarasm.asm.Opcodes
{
    private java.util.List methods;
    private groovyjarjarasm.asm.ClassVisitor cv;
    private org.codehaus.groovy.classgen.BytecodeHelper helper;
    private java.lang.String classInternalName;
    private static java.util.List m_names;

    private static java.lang.String get_m_name(int)
    {
        java.util.List $r0, $r1, $r5, $r7;
        java.lang.StringBuffer $r4, $r6, $r8;
        int i0, $i1, $i2;
        java.lang.Object $r2;
        java.lang.String $r3, $r9;

        i0 := @parameter0: int;

     label1:
        $r0 = <org.codehaus.groovy.classgen.ReflectorGenerator: java.util.List m_names>;

        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        if i0 < $i1 goto label2;

        $r5 = <org.codehaus.groovy.classgen.ReflectorGenerator: java.util.List m_names>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("m");

        $r7 = <org.codehaus.groovy.classgen.ReflectorGenerator: java.util.List m_names>;

        $i2 = interfaceinvoke $r7.<java.util.List: int size()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r9);

        goto label1;

     label2:
        $r1 = <org.codehaus.groovy.classgen.ReflectorGenerator: java.util.List m_names>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    public void <init>(java.util.List)
    {
        java.util.Iterator $r4;
        org.codehaus.groovy.classgen.ReflectorGenerator r0;
        org.codehaus.groovy.classgen.BytecodeHelper $r1;
        java.util.ArrayList $r2;
        org.codehaus.groovy.reflection.CachedMethod r6;
        java.util.List r3, $r7;
        int $i0;
        java.lang.Object $r5;
        boolean $z0, $z1;

        r0 := @this: org.codehaus.groovy.classgen.ReflectorGenerator;

        r3 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.codehaus.groovy.classgen.BytecodeHelper;

        specialinvoke $r1.<org.codehaus.groovy.classgen.BytecodeHelper: void <init>(groovyjarjarasm.asm.MethodVisitor)>(null);

        r0.<org.codehaus.groovy.classgen.ReflectorGenerator: org.codehaus.groovy.classgen.BytecodeHelper helper> = $r1;

        $r2 = new java.util.ArrayList;

        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i0);

        r0.<org.codehaus.groovy.classgen.ReflectorGenerator: java.util.List methods> = $r2;

        $r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.codehaus.groovy.reflection.CachedMethod) $r5;

        $z1 = virtualinvoke r6.<org.codehaus.groovy.reflection.CachedMethod: boolean canBeCalledByReflector()>();

        if $z1 == 0 goto label2;

        $r7 = r0.<org.codehaus.groovy.classgen.ReflectorGenerator: java.util.List methods>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r6);

     label2:
        goto label1;

     label3:
        return;
    }

    public void generate(groovyjarjarasm.asm.ClassVisitor, java.lang.String)
    {
        org.codehaus.groovy.classgen.ReflectorGenerator r0;
        groovyjarjarasm.asm.MethodVisitor $r5, $r6;
        groovyjarjarasm.asm.ClassVisitor r1;
        java.lang.String r2, $r3, $r4, $r7, $r8, $r9;

        r0 := @this: org.codehaus.groovy.classgen.ReflectorGenerator;

        r1 := @parameter0: groovyjarjarasm.asm.ClassVisitor;

        r2 := @parameter1: java.lang.String;

        r0.<org.codehaus.groovy.classgen.ReflectorGenerator: groovyjarjarasm.asm.ClassVisitor cv> = r1;

        $r3 = staticinvoke <org.codehaus.groovy.classgen.BytecodeHelper: java.lang.String getClassInternalName(java.lang.String)>(r2);

        r0.<org.codehaus.groovy.classgen.ReflectorGenerator: java.lang.String classInternalName> = $r3;

        $r4 = r0.<org.codehaus.groovy.classgen.ReflectorGenerator: java.lang.String classInternalName>;

        interfaceinvoke r1.<groovyjarjarasm.asm.ClassVisitor: void visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(47, 33, $r4, null, "org/codehaus/groovy/runtime/Reflector", null);

        interfaceinvoke r1.<groovyjarjarasm.asm.ClassVisitor: groovyjarjarasm.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>(9, "accessor", "Ljava/lang/Object;", null, null);

        $r5 = interfaceinvoke r1.<groovyjarjarasm.asm.ClassVisitor: groovyjarjarasm.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(1, "<init>", "()V", null, null);

        interfaceinvoke $r5.<groovyjarjarasm.asm.MethodVisitor: void visitVarInsn(int,int)>(25, 0);

        interfaceinvoke $r5.<groovyjarjarasm.asm.MethodVisitor: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)>(183, "org/codehaus/groovy/runtime/Reflector", "<init>", "()V");

        interfaceinvoke $r5.<groovyjarjarasm.asm.MethodVisitor: void visitInsn(int)>(177);

        interfaceinvoke $r5.<groovyjarjarasm.asm.MethodVisitor: void visitMaxs(int,int)>(1, 1);

        $r6 = interfaceinvoke r1.<groovyjarjarasm.asm.ClassVisitor: groovyjarjarasm.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(8, "<clinit>", "()V", null, null);

        $r7 = r0.<org.codehaus.groovy.classgen.ReflectorGenerator: java.lang.String classInternalName>;

        interfaceinvoke $r6.<groovyjarjarasm.asm.MethodVisitor: void visitTypeInsn(int,java.lang.String)>(187, $r7);

        interfaceinvoke $r6.<groovyjarjarasm.asm.MethodVisitor: void visitInsn(int)>(89);

        $r8 = r0.<org.codehaus.groovy.classgen.ReflectorGenerator: java.lang.String classInternalName>;

        interfaceinvoke $r6.<groovyjarjarasm.asm.MethodVisitor: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)>(183, $r8, "<init>", "()V");

        $r9 = r0.<org.codehaus.groovy.classgen.ReflectorGenerator: java.lang.String classInternalName>;

        interfaceinvoke $r6.<groovyjarjarasm.asm.MethodVisitor: void visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)>(179, $r9, "accessor", "Ljava/lang/Object;");

        interfaceinvoke $r6.<groovyjarjarasm.asm.MethodVisitor: void visitInsn(int)>(177);

        interfaceinvoke $r6.<groovyjarjarasm.asm.MethodVisitor: void visitMaxs(int,int)>(1, 1);

        virtualinvoke r0.<org.codehaus.groovy.classgen.ReflectorGenerator: void generateInvokeMethod()>();

        interfaceinvoke r1.<groovyjarjarasm.asm.ClassVisitor: void visitEnd()>();

        return;
    }

    protected void generateInvokeMethod()
    {
        org.codehaus.groovy.classgen.BytecodeHelper $r11;
        groovyjarjarasm.asm.Label[] r5;
        groovyjarjarasm.asm.MethodVisitor $r3, $r10;
        groovyjarjarasm.asm.ClassVisitor $r2, $r8;
        int[] r6;
        int $i0, $i1, i2, i3, i4;
        java.lang.String $r7, $r9, $r17, $r18;
        groovyjarjarasm.asm.Label $r4, $r16, $r19;
        org.codehaus.groovy.classgen.ReflectorGenerator r0;
        org.codehaus.groovy.reflection.CachedMethod r22, r23;
        java.util.List $r1, $r12, $r20;
        java.lang.Object $r13, $r21;
        java.lang.Class $r14, $r15;

        r0 := @this: org.codehaus.groovy.classgen.ReflectorGenerator;

        $r1 = r0.<org.codehaus.groovy.classgen.ReflectorGenerator: java.util.List methods>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r2 = r0.<org.codehaus.groovy.classgen.ReflectorGenerator: groovyjarjarasm.asm.ClassVisitor cv>;

        $r3 = interfaceinvoke $r2.<groovyjarjarasm.asm.ClassVisitor: groovyjarjarasm.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(1, "invoke", "(Lorg/codehaus/groovy/reflection/CachedMethod;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;", null, null);

        interfaceinvoke $r3.<groovyjarjarasm.asm.MethodVisitor: void visitVarInsn(int,int)>(25, 0);

        interfaceinvoke $r3.<groovyjarjarasm.asm.MethodVisitor: void visitVarInsn(int,int)>(25, 1);

        interfaceinvoke $r3.<groovyjarjarasm.asm.MethodVisitor: void visitVarInsn(int,int)>(25, 2);

        interfaceinvoke $r3.<groovyjarjarasm.asm.MethodVisitor: void visitVarInsn(int,int)>(25, 3);

        interfaceinvoke $r3.<groovyjarjarasm.asm.MethodVisitor: void visitVarInsn(int,int)>(25, 1);

        interfaceinvoke $r3.<groovyjarjarasm.asm.MethodVisitor: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)>(182, "org/codehaus/groovy/reflection/CachedMethod", "getMethodIndex", "()I");

        $r4 = new groovyjarjarasm.asm.Label;

        specialinvoke $r4.<groovyjarjarasm.asm.Label: void <init>()>();

        r5 = newarray (groovyjarjarasm.asm.Label)[$i0];

        r6 = newarray (int)[$i0];

        i2 = 0;

     label1:
        if i2 >= $i0 goto label2;

        $r19 = new groovyjarjarasm.asm.Label;

        specialinvoke $r19.<groovyjarjarasm.asm.Label: void <init>()>();

        r5[i2] = $r19;

        $r20 = r0.<org.codehaus.groovy.classgen.ReflectorGenerator: java.util.List methods>;

        $r21 = interfaceinvoke $r20.<java.util.List: java.lang.Object get(int)>(i2);

        r22 = (org.codehaus.groovy.reflection.CachedMethod) $r21;

        $i1 = i2 + 1;

        r6[i2] = $i1;

        virtualinvoke r22.<org.codehaus.groovy.reflection.CachedMethod: void setMethodIndex(int)>($i1);

        i2 = i2 + 1;

        goto label1;

     label2:
        interfaceinvoke $r3.<groovyjarjarasm.asm.MethodVisitor: void visitLookupSwitchInsn(groovyjarjarasm.asm.Label,int[],groovyjarjarasm.asm.Label[])>($r4, r6, r5);

        i3 = 0;

     label3:
        if i3 >= $i0 goto label4;

        $r16 = r5[i3];

        interfaceinvoke $r3.<groovyjarjarasm.asm.MethodVisitor: void visitLabel(groovyjarjarasm.asm.Label)>($r16);

        $r17 = r0.<org.codehaus.groovy.classgen.ReflectorGenerator: java.lang.String classInternalName>;

        $r18 = staticinvoke <org.codehaus.groovy.classgen.ReflectorGenerator: java.lang.String get_m_name(int)>(i3);

        interfaceinvoke $r3.<groovyjarjarasm.asm.MethodVisitor: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)>(183, $r17, $r18, "(Lorg/codehaus/groovy/reflection/CachedMethod;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;");

        interfaceinvoke $r3.<groovyjarjarasm.asm.MethodVisitor: void visitInsn(int)>(176);

        i3 = i3 + 1;

        goto label3;

     label4:
        interfaceinvoke $r3.<groovyjarjarasm.asm.MethodVisitor: void visitLabel(groovyjarjarasm.asm.Label)>($r4);

        $r7 = r0.<org.codehaus.groovy.classgen.ReflectorGenerator: java.lang.String classInternalName>;

        interfaceinvoke $r3.<groovyjarjarasm.asm.MethodVisitor: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)>(182, $r7, "noSuchMethod", "(Lorg/codehaus/groovy/reflection/CachedMethod;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;");

        interfaceinvoke $r3.<groovyjarjarasm.asm.MethodVisitor: void visitInsn(int)>(176);

        interfaceinvoke $r3.<groovyjarjarasm.asm.MethodVisitor: void visitMaxs(int,int)>(4, 4);

        interfaceinvoke $r3.<groovyjarjarasm.asm.MethodVisitor: void visitEnd()>();

        i4 = 0;

     label5:
        if i4 >= $i0 goto label7;

        $r8 = r0.<org.codehaus.groovy.classgen.ReflectorGenerator: groovyjarjarasm.asm.ClassVisitor cv>;

        $r9 = staticinvoke <org.codehaus.groovy.classgen.ReflectorGenerator: java.lang.String get_m_name(int)>(i4);

        $r10 = interfaceinvoke $r8.<groovyjarjarasm.asm.ClassVisitor: groovyjarjarasm.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(2, $r9, "(Lorg/codehaus/groovy/reflection/CachedMethod;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;", null, null);

        $r11 = new org.codehaus.groovy.classgen.BytecodeHelper;

        specialinvoke $r11.<org.codehaus.groovy.classgen.BytecodeHelper: void <init>(groovyjarjarasm.asm.MethodVisitor)>($r10);

        r0.<org.codehaus.groovy.classgen.ReflectorGenerator: org.codehaus.groovy.classgen.BytecodeHelper helper> = $r11;

        $r12 = r0.<org.codehaus.groovy.classgen.ReflectorGenerator: java.util.List methods>;

        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(i4);

        r23 = (org.codehaus.groovy.reflection.CachedMethod) $r13;

        virtualinvoke r0.<org.codehaus.groovy.classgen.ReflectorGenerator: void invokeMethod(org.codehaus.groovy.reflection.CachedMethod,groovyjarjarasm.asm.MethodVisitor)>(r23, $r10);

        $r14 = virtualinvoke r23.<org.codehaus.groovy.reflection.CachedMethod: java.lang.Class getReturnType()>();

        $r15 = <java.lang.Void: java.lang.Class TYPE>;

        if $r14 != $r15 goto label6;

        interfaceinvoke $r10.<groovyjarjarasm.asm.MethodVisitor: void visitInsn(int)>(1);

     label6:
        interfaceinvoke $r10.<groovyjarjarasm.asm.MethodVisitor: void visitInsn(int)>(176);

        interfaceinvoke $r10.<groovyjarjarasm.asm.MethodVisitor: void visitMaxs(int,int)>(0, 0);

        interfaceinvoke $r10.<groovyjarjarasm.asm.MethodVisitor: void visitEnd()>();

        i4 = i4 + 1;

        goto label5;

     label7:
        return;
    }

    protected void invokeMethod(org.codehaus.groovy.reflection.CachedMethod, groovyjarjarasm.asm.MethodVisitor)
    {
        org.codehaus.groovy.classgen.BytecodeHelper $r10, $r13;
        groovyjarjarasm.asm.MethodVisitor r8;
        short $s0;
        java.lang.String $r3, $r4, $r7, $r11, $r12;
        boolean $z0, $z1;
        org.codehaus.groovy.classgen.ReflectorGenerator r9;
        java.lang.Class[] $r6;
        org.codehaus.groovy.reflection.CachedMethod r0;
        org.codehaus.groovy.reflection.CachedClass $r1;
        java.lang.Class $r2, $r5, $r14;

        r9 := @this: org.codehaus.groovy.classgen.ReflectorGenerator;

        r0 := @parameter0: org.codehaus.groovy.reflection.CachedMethod;

        r8 := @parameter1: groovyjarjarasm.asm.MethodVisitor;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.reflection.CachedMethod: org.codehaus.groovy.reflection.CachedClass getDeclaringClass()>();

        $r2 = virtualinvoke $r1.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isInterface()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = staticinvoke <org.codehaus.groovy.classgen.BytecodeHelper: java.lang.String getClassInternalName(java.lang.String)>($r3);

        $r5 = virtualinvoke r0.<org.codehaus.groovy.reflection.CachedMethod: java.lang.Class getReturnType()>();

        $r6 = virtualinvoke r0.<org.codehaus.groovy.reflection.CachedMethod: java.lang.Class[] getNativeParameterTypes()>();

        $r7 = staticinvoke <org.codehaus.groovy.classgen.BytecodeHelper: java.lang.String getMethodDescriptor(java.lang.Class,java.lang.Class[])>($r5, $r6);

        $z1 = virtualinvoke r0.<org.codehaus.groovy.reflection.CachedMethod: boolean isStatic()>();

        if $z1 == 0 goto label1;

        virtualinvoke r9.<org.codehaus.groovy.classgen.ReflectorGenerator: void loadParameters(org.codehaus.groovy.reflection.CachedMethod,int,groovyjarjarasm.asm.MethodVisitor)>(r0, 3, r8);

        $r12 = virtualinvoke r0.<org.codehaus.groovy.reflection.CachedMethod: java.lang.String getName()>();

        interfaceinvoke r8.<groovyjarjarasm.asm.MethodVisitor: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)>(184, $r4, $r12, $r7);

        goto label4;

     label1:
        interfaceinvoke r8.<groovyjarjarasm.asm.MethodVisitor: void visitVarInsn(int,int)>(25, 2);

        $r10 = r9.<org.codehaus.groovy.classgen.ReflectorGenerator: org.codehaus.groovy.classgen.BytecodeHelper helper>;

        virtualinvoke $r10.<org.codehaus.groovy.classgen.BytecodeHelper: void doCast(java.lang.Class)>($r2);

        virtualinvoke r9.<org.codehaus.groovy.classgen.ReflectorGenerator: void loadParameters(org.codehaus.groovy.reflection.CachedMethod,int,groovyjarjarasm.asm.MethodVisitor)>(r0, 3, r8);

        if $z0 == 0 goto label2;

        $s0 = 185;

        goto label3;

     label2:
        $s0 = 182;

     label3:
        $r11 = virtualinvoke r0.<org.codehaus.groovy.reflection.CachedMethod: java.lang.String getName()>();

        interfaceinvoke r8.<groovyjarjarasm.asm.MethodVisitor: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)>($s0, $r4, $r11, $r7);

     label4:
        $r13 = r9.<org.codehaus.groovy.classgen.ReflectorGenerator: org.codehaus.groovy.classgen.BytecodeHelper helper>;

        $r14 = virtualinvoke r0.<org.codehaus.groovy.reflection.CachedMethod: java.lang.Class getReturnType()>();

        virtualinvoke $r13.<org.codehaus.groovy.classgen.BytecodeHelper: void box(java.lang.Class)>($r14);

        return;
    }

    protected void loadParameters(org.codehaus.groovy.reflection.CachedMethod, int, groovyjarjarasm.asm.MethodVisitor)
    {
        org.codehaus.groovy.reflection.CachedClass[] $r1;
        org.codehaus.groovy.classgen.ReflectorGenerator r3;
        org.codehaus.groovy.classgen.BytecodeHelper $r4, $r7, $r8;
        org.codehaus.groovy.reflection.CachedMethod r0;
        groovyjarjarasm.asm.MethodVisitor r2;
        org.codehaus.groovy.reflection.CachedClass $r5;
        int i0, i1, i2;
        java.lang.Class $r6;
        boolean $z0;

        r3 := @this: org.codehaus.groovy.classgen.ReflectorGenerator;

        r0 := @parameter0: org.codehaus.groovy.reflection.CachedMethod;

        i1 := @parameter1: int;

        r2 := @parameter2: groovyjarjarasm.asm.MethodVisitor;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.reflection.CachedMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        i0 = lengthof $r1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label4;

        interfaceinvoke r2.<groovyjarjarasm.asm.MethodVisitor: void visitVarInsn(int,int)>(25, i1);

        $r4 = r3.<org.codehaus.groovy.classgen.ReflectorGenerator: org.codehaus.groovy.classgen.BytecodeHelper helper>;

        virtualinvoke $r4.<org.codehaus.groovy.classgen.BytecodeHelper: void pushConstant(int)>(i2);

        interfaceinvoke r2.<groovyjarjarasm.asm.MethodVisitor: void visitInsn(int)>(50);

        $r5 = $r1[i2];

        $r6 = virtualinvoke $r5.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $z0 = virtualinvoke $r6.<java.lang.Class: boolean isPrimitive()>();

        if $z0 == 0 goto label2;

        $r8 = r3.<org.codehaus.groovy.classgen.ReflectorGenerator: org.codehaus.groovy.classgen.BytecodeHelper helper>;

        virtualinvoke $r8.<org.codehaus.groovy.classgen.BytecodeHelper: void unbox(java.lang.Class)>($r6);

        goto label3;

     label2:
        $r7 = r3.<org.codehaus.groovy.classgen.ReflectorGenerator: org.codehaus.groovy.classgen.BytecodeHelper helper>;

        virtualinvoke $r7.<org.codehaus.groovy.classgen.BytecodeHelper: void doCast(java.lang.Class)>($r6);

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }

    static void <clinit>()
    {
        java.util.ArrayList $r0;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        <org.codehaus.groovy.classgen.ReflectorGenerator: java.util.List m_names> = $r0;

        return;
    }
}
