public class org.apache.batik.gvt.filter.GraphicsNodeRable8Bit extends org.apache.batik.ext.awt.image.renderable.AbstractRable implements org.apache.batik.gvt.filter.GraphicsNodeRable, org.apache.batik.ext.awt.image.renderable.PaintRable
{
    private java.awt.geom.AffineTransform cachedGn2dev;
    private java.awt.geom.AffineTransform cachedUsr2dev;
    private org.apache.batik.ext.awt.image.rendered.CachableRed cachedRed;
    private java.awt.geom.Rectangle2D cachedBounds;
    private boolean usePrimitivePaint;
    private org.apache.batik.gvt.GraphicsNode node;

    public boolean getUsePrimitivePaint()
    {
        org.apache.batik.gvt.filter.GraphicsNodeRable8Bit r0;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.filter.GraphicsNodeRable8Bit;

        $z0 = r0.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: boolean usePrimitivePaint>;

        return $z0;
    }

    public void setUsePrimitivePaint(boolean)
    {
        org.apache.batik.gvt.filter.GraphicsNodeRable8Bit r0;
        boolean z0;

        r0 := @this: org.apache.batik.gvt.filter.GraphicsNodeRable8Bit;

        z0 := @parameter0: boolean;

        r0.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: boolean usePrimitivePaint> = z0;

        return;
    }

    public org.apache.batik.gvt.GraphicsNode getGraphicsNode()
    {
        org.apache.batik.gvt.filter.GraphicsNodeRable8Bit r0;
        org.apache.batik.gvt.GraphicsNode $r1;

        r0 := @this: org.apache.batik.gvt.filter.GraphicsNodeRable8Bit;

        $r1 = r0.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: org.apache.batik.gvt.GraphicsNode node>;

        return $r1;
    }

    public void setGraphicsNode(org.apache.batik.gvt.GraphicsNode)
    {
        org.apache.batik.gvt.filter.GraphicsNodeRable8Bit r1;
        java.lang.IllegalArgumentException $r2;
        org.apache.batik.gvt.GraphicsNode r0;

        r1 := @this: org.apache.batik.gvt.filter.GraphicsNodeRable8Bit;

        r0 := @parameter0: org.apache.batik.gvt.GraphicsNode;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        r1.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: org.apache.batik.gvt.GraphicsNode node> = r0;

        return;
    }

    public void clearCache()
    {
        org.apache.batik.gvt.filter.GraphicsNodeRable8Bit r0;

        r0 := @this: org.apache.batik.gvt.filter.GraphicsNodeRable8Bit;

        r0.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: org.apache.batik.ext.awt.image.rendered.CachableRed cachedRed> = null;

        r0.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: java.awt.geom.AffineTransform cachedUsr2dev> = null;

        r0.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: java.awt.geom.AffineTransform cachedGn2dev> = null;

        r0.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: java.awt.geom.Rectangle2D cachedBounds> = null;

        return;
    }

    public void <init>(org.apache.batik.gvt.GraphicsNode)
    {
        org.apache.batik.gvt.filter.GraphicsNodeRable8Bit r0;
        java.lang.IllegalArgumentException $r2;
        org.apache.batik.gvt.GraphicsNode r1;

        r0 := @this: org.apache.batik.gvt.filter.GraphicsNodeRable8Bit;

        r1 := @parameter0: org.apache.batik.gvt.GraphicsNode;

        specialinvoke r0.<org.apache.batik.ext.awt.image.renderable.AbstractRable: void <init>()>();

        r0.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: java.awt.geom.AffineTransform cachedGn2dev> = null;

        r0.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: java.awt.geom.AffineTransform cachedUsr2dev> = null;

        r0.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: org.apache.batik.ext.awt.image.rendered.CachableRed cachedRed> = null;

        r0.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: java.awt.geom.Rectangle2D cachedBounds> = null;

        r0.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: boolean usePrimitivePaint> = 1;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        r0.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: org.apache.batik.gvt.GraphicsNode node> = r1;

        r0.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: boolean usePrimitivePaint> = 1;

        return;
    }

    public void <init>(org.apache.batik.gvt.GraphicsNode, java.util.Map)
    {
        org.apache.batik.gvt.filter.GraphicsNodeRable8Bit r0;
        org.apache.batik.gvt.GraphicsNode r2;
        java.util.Map r1;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.apache.batik.gvt.filter.GraphicsNodeRable8Bit;

        r2 := @parameter0: org.apache.batik.gvt.GraphicsNode;

        r1 := @parameter1: java.util.Map;

        specialinvoke r0.<org.apache.batik.ext.awt.image.renderable.AbstractRable: void <init>(org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map)>(null, r1);

        r0.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: java.awt.geom.AffineTransform cachedGn2dev> = null;

        r0.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: java.awt.geom.AffineTransform cachedUsr2dev> = null;

        r0.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: org.apache.batik.ext.awt.image.rendered.CachableRed cachedRed> = null;

        r0.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: java.awt.geom.Rectangle2D cachedBounds> = null;

        r0.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: boolean usePrimitivePaint> = 1;

        if r2 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label1:
        r0.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: org.apache.batik.gvt.GraphicsNode node> = r2;

        r0.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: boolean usePrimitivePaint> = 1;

        return;
    }

    public void <init>(org.apache.batik.gvt.GraphicsNode, boolean)
    {
        org.apache.batik.gvt.filter.GraphicsNodeRable8Bit r0;
        org.apache.batik.gvt.GraphicsNode r1;
        java.lang.IllegalArgumentException $r2;
        boolean z0;

        r0 := @this: org.apache.batik.gvt.filter.GraphicsNodeRable8Bit;

        r1 := @parameter0: org.apache.batik.gvt.GraphicsNode;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.batik.ext.awt.image.renderable.AbstractRable: void <init>()>();

        r0.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: java.awt.geom.AffineTransform cachedGn2dev> = null;

        r0.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: java.awt.geom.AffineTransform cachedUsr2dev> = null;

        r0.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: org.apache.batik.ext.awt.image.rendered.CachableRed cachedRed> = null;

        r0.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: java.awt.geom.Rectangle2D cachedBounds> = null;

        r0.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: boolean usePrimitivePaint> = 1;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        r0.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: org.apache.batik.gvt.GraphicsNode node> = r1;

        r0.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: boolean usePrimitivePaint> = z0;

        return;
    }

    public java.awt.geom.Rectangle2D getBounds2D()
    {
        java.awt.Shape $r5;
        org.apache.batik.gvt.filter.GraphicsNodeRable8Bit r0;
        org.apache.batik.gvt.GraphicsNode $r1, $r3, $r7;
        java.awt.geom.Rectangle2D $r2, $r8, $r10, r12;
        java.awt.geom.AffineTransform $r4;
        java.lang.Object $r9;
        java.awt.geom.Rectangle2D$Double $r6, $r11;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.filter.GraphicsNodeRable8Bit;

        $z0 = r0.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: boolean usePrimitivePaint>;

        if $z0 == 0 goto label2;

        $r7 = r0.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: org.apache.batik.gvt.GraphicsNode node>;

        $r8 = interfaceinvoke $r7.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.Rectangle2D getPrimitiveBounds()>();

        if $r8 != null goto label1;

        $r11 = new java.awt.geom.Rectangle2D$Double;

        specialinvoke $r11.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(0.0, 0.0, 0.0, 0.0);

        return $r11;

     label1:
        $r9 = virtualinvoke $r8.<java.awt.geom.RectangularShape: java.lang.Object clone()>();

        $r10 = (java.awt.geom.Rectangle2D) $r9;

        return $r10;

     label2:
        $r1 = r0.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: org.apache.batik.gvt.GraphicsNode node>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.Rectangle2D getBounds()>();

        r12 = $r2;

        if $r2 != null goto label3;

        $r6 = new java.awt.geom.Rectangle2D$Double;

        specialinvoke $r6.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(0.0, 0.0, 0.0, 0.0);

        return $r6;

     label3:
        $r3 = r0.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: org.apache.batik.gvt.GraphicsNode node>;

        $r4 = interfaceinvoke $r3.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.AffineTransform getTransform()>();

        if $r4 == null goto label4;

        $r5 = virtualinvoke $r4.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>($r2);

        r12 = interfaceinvoke $r5.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>();

     label4:
        return r12;
    }

    public boolean isDynamic()
    {
        org.apache.batik.gvt.filter.GraphicsNodeRable8Bit r0;

        r0 := @this: org.apache.batik.gvt.filter.GraphicsNodeRable8Bit;

        return 0;
    }

    public boolean paintRable(java.awt.Graphics2D)
    {
        org.apache.batik.gvt.filter.GraphicsNodeRable8Bit r5;
        java.awt.Composite $r1;
        org.apache.batik.gvt.GraphicsNode $r6;
        java.awt.color.ColorSpace $r3, $r4;
        org.apache.batik.ext.awt.image.SVGComposite $r2;
        java.awt.Graphics2D r0;
        boolean $z0, $z1;

        r5 := @this: org.apache.batik.gvt.filter.GraphicsNodeRable8Bit;

        r0 := @parameter0: java.awt.Graphics2D;

        $r1 = virtualinvoke r0.<java.awt.Graphics2D: java.awt.Composite getComposite()>();

        $r2 = <org.apache.batik.ext.awt.image.SVGComposite: org.apache.batik.ext.awt.image.SVGComposite OVER>;

        $z0 = virtualinvoke $r2.<org.apache.batik.ext.awt.image.SVGComposite: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r3 = staticinvoke <org.apache.batik.ext.awt.image.GraphicsUtil: java.awt.color.ColorSpace getDestinationColorSpace(java.awt.Graphics2D)>(r0);

        if $r3 == null goto label2;

        $r4 = staticinvoke <java.awt.color.ColorSpace: java.awt.color.ColorSpace getInstance(int)>(1000);

        if $r3 == $r4 goto label3;

     label2:
        return 0;

     label3:
        $r6 = virtualinvoke r5.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: org.apache.batik.gvt.GraphicsNode getGraphicsNode()>();

        $z1 = virtualinvoke r5.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: boolean getUsePrimitivePaint()>();

        if $z1 == 0 goto label4;

        interfaceinvoke $r6.<org.apache.batik.gvt.GraphicsNode: void primitivePaint(java.awt.Graphics2D)>(r0);

        goto label5;

     label4:
        interfaceinvoke $r6.<org.apache.batik.gvt.GraphicsNode: void paint(java.awt.Graphics2D)>(r0);

     label5:
        return 1;
    }

    public java.awt.image.RenderedImage createRendering(java.awt.image.renderable.RenderContext)
    {
        java.awt.geom.Rectangle2D $r6, $r7, $r15;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b7, $b9, $b16, $b17;
        org.apache.batik.gvt.GraphicsNode $r4, $r11;
        java.awt.geom.AffineTransform $r1, $r5, $r9, $r14, $r16, $r17, $r18, $r19, $r20, $r21, r28, r29, $r30;
        org.apache.batik.ext.awt.image.rendered.CachableRed $r13, $r23, $r24, $r25, $r26;
        org.apache.batik.gvt.filter.GraphicsNodeRed8Bit $r32;
        org.apache.batik.gvt.filter.GraphicsNodeRable8Bit r3;
        long $l11, $l14;
        java.awt.RenderingHints $r12;
        boolean $z0, $z1;
        java.awt.image.renderable.RenderContext r0;
        org.apache.batik.ext.awt.image.rendered.TranslateRed $r31;
        int $i6, $i8, $i10, $i12, $i13, $i15, $i18, $i19;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, d11, $d12, $d13, d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21;
        java.lang.Object $r2, $r8;

        r3 := @this: org.apache.batik.gvt.filter.GraphicsNodeRable8Bit;

        r0 := @parameter0: java.awt.image.renderable.RenderContext;

        $r1 = virtualinvoke r0.<java.awt.image.renderable.RenderContext: java.awt.geom.AffineTransform getTransform()>();

        r28 = $r1;

        if $r1 != null goto label1;

        $r30 = new java.awt.geom.AffineTransform;

        specialinvoke $r30.<java.awt.geom.AffineTransform: void <init>()>();

        r28 = $r30;

        r29 = $r30;

        goto label2;

     label1:
        $r2 = virtualinvoke $r1.<java.awt.geom.AffineTransform: java.lang.Object clone()>();

        r29 = (java.awt.geom.AffineTransform) $r2;

     label2:
        $r4 = r3.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: org.apache.batik.gvt.GraphicsNode node>;

        $r5 = interfaceinvoke $r4.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.AffineTransform getTransform()>();

        if $r5 == null goto label3;

        virtualinvoke r29.<java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>($r5);

     label3:
        $r6 = virtualinvoke r3.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: java.awt.geom.Rectangle2D getBounds2D()>();

        $r7 = r3.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: java.awt.geom.Rectangle2D cachedBounds>;

        if $r7 == null goto label5;

        $r14 = r3.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: java.awt.geom.AffineTransform cachedGn2dev>;

        if $r14 == null goto label5;

        $r15 = r3.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: java.awt.geom.Rectangle2D cachedBounds>;

        $z1 = virtualinvoke $r15.<java.awt.geom.Rectangle2D: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label5;

        $d1 = virtualinvoke r29.<java.awt.geom.AffineTransform: double getScaleX()>();

        $r16 = r3.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: java.awt.geom.AffineTransform cachedGn2dev>;

        $d2 = virtualinvoke $r16.<java.awt.geom.AffineTransform: double getScaleX()>();

        $b1 = $d1 cmpl $d2;

        if $b1 != 0 goto label5;

        $d3 = virtualinvoke r29.<java.awt.geom.AffineTransform: double getScaleY()>();

        $r17 = r3.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: java.awt.geom.AffineTransform cachedGn2dev>;

        $d4 = virtualinvoke $r17.<java.awt.geom.AffineTransform: double getScaleY()>();

        $b2 = $d3 cmpl $d4;

        if $b2 != 0 goto label5;

        $d5 = virtualinvoke r29.<java.awt.geom.AffineTransform: double getShearX()>();

        $r18 = r3.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: java.awt.geom.AffineTransform cachedGn2dev>;

        $d6 = virtualinvoke $r18.<java.awt.geom.AffineTransform: double getShearX()>();

        $b3 = $d5 cmpl $d6;

        if $b3 != 0 goto label5;

        $d7 = virtualinvoke r29.<java.awt.geom.AffineTransform: double getShearY()>();

        $r19 = r3.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: java.awt.geom.AffineTransform cachedGn2dev>;

        $d8 = virtualinvoke $r19.<java.awt.geom.AffineTransform: double getShearY()>();

        $b4 = $d7 cmpl $d8;

        if $b4 != 0 goto label5;

        $d9 = virtualinvoke r28.<java.awt.geom.AffineTransform: double getTranslateX()>();

        $r20 = r3.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: java.awt.geom.AffineTransform cachedUsr2dev>;

        $d10 = virtualinvoke $r20.<java.awt.geom.AffineTransform: double getTranslateX()>();

        d11 = $d9 - $d10;

        $d12 = virtualinvoke r28.<java.awt.geom.AffineTransform: double getTranslateY()>();

        $r21 = r3.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: java.awt.geom.AffineTransform cachedUsr2dev>;

        $d13 = virtualinvoke $r21.<java.awt.geom.AffineTransform: double getTranslateY()>();

        d14 = $d12 - $d13;

        $b5 = d11 cmpl 0.0;

        if $b5 != 0 goto label4;

        $b16 = d14 cmpl 0.0;

        if $b16 != 0 goto label4;

        $r26 = r3.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: org.apache.batik.ext.awt.image.rendered.CachableRed cachedRed>;

        return $r26;

     label4:
        $i6 = (int) d11;

        $d15 = (double) $i6;

        $b7 = d11 cmpl $d15;

        if $b7 != 0 goto label5;

        $i8 = (int) d14;

        $d16 = (double) $i8;

        $b9 = d14 cmpl $d16;

        if $b9 != 0 goto label5;

        $r31 = new org.apache.batik.ext.awt.image.rendered.TranslateRed;

        $r24 = r3.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: org.apache.batik.ext.awt.image.rendered.CachableRed cachedRed>;

        $r23 = r3.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: org.apache.batik.ext.awt.image.rendered.CachableRed cachedRed>;

        $i10 = interfaceinvoke $r23.<java.awt.image.RenderedImage: int getMinX()>();

        $d17 = (double) $i10;

        $d18 = $d17 + d11;

        $l11 = staticinvoke <java.lang.Math: long round(double)>($d18);

        $i12 = (int) $l11;

        $r25 = r3.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: org.apache.batik.ext.awt.image.rendered.CachableRed cachedRed>;

        $i13 = interfaceinvoke $r25.<java.awt.image.RenderedImage: int getMinY()>();

        $d19 = (double) $i13;

        $d20 = $d19 + d14;

        $l14 = staticinvoke <java.lang.Math: long round(double)>($d20);

        $i15 = (int) $l14;

        specialinvoke $r31.<org.apache.batik.ext.awt.image.rendered.TranslateRed: void <init>(org.apache.batik.ext.awt.image.rendered.CachableRed,int,int)>($r24, $i12, $i15);

        return $r31;

     label5:
        $d21 = virtualinvoke $r6.<java.awt.geom.RectangularShape: double getWidth()>();

        $b17 = $d21 cmpl 0.0;

        $i18 = (int) $b17;

        if $i18 <= 0 goto label6;

        $d0 = virtualinvoke $r6.<java.awt.geom.RectangularShape: double getHeight()>();

        $b0 = $d0 cmpl 0.0;

        $i19 = (int) $b0;

        if $i19 <= 0 goto label6;

        $r8 = virtualinvoke r28.<java.awt.geom.AffineTransform: java.lang.Object clone()>();

        $r9 = (java.awt.geom.AffineTransform) $r8;

        r3.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: java.awt.geom.AffineTransform cachedUsr2dev> = $r9;

        r3.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: java.awt.geom.AffineTransform cachedGn2dev> = r29;

        r3.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: java.awt.geom.Rectangle2D cachedBounds> = $r6;

        $r32 = new org.apache.batik.gvt.filter.GraphicsNodeRed8Bit;

        $r11 = r3.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: org.apache.batik.gvt.GraphicsNode node>;

        $z0 = r3.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: boolean usePrimitivePaint>;

        $r12 = virtualinvoke r0.<java.awt.image.renderable.RenderContext: java.awt.RenderingHints getRenderingHints()>();

        specialinvoke $r32.<org.apache.batik.gvt.filter.GraphicsNodeRed8Bit: void <init>(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform,boolean,java.awt.RenderingHints)>($r11, r28, $z0, $r12);

        r3.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: org.apache.batik.ext.awt.image.rendered.CachableRed cachedRed> = $r32;

        $r13 = r3.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: org.apache.batik.ext.awt.image.rendered.CachableRed cachedRed>;

        return $r13;

     label6:
        r3.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: java.awt.geom.AffineTransform cachedUsr2dev> = null;

        r3.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: java.awt.geom.AffineTransform cachedGn2dev> = null;

        r3.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: java.awt.geom.Rectangle2D cachedBounds> = null;

        r3.<org.apache.batik.gvt.filter.GraphicsNodeRable8Bit: org.apache.batik.ext.awt.image.rendered.CachableRed cachedRed> = null;

        return null;
    }
}
