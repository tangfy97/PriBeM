public class org.dom4j.swing.LeafTreeNode extends java.lang.Object implements javax.swing.tree.TreeNode
{
    protected static final java.util.Enumeration EMPTY_ENUMERATION;
    private javax.swing.tree.TreeNode parent;
    protected org.dom4j.Node xmlNode;

    public void <init>()
    {
        org.dom4j.swing.LeafTreeNode r0;

        r0 := @this: org.dom4j.swing.LeafTreeNode;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(org.dom4j.Node)
    {
        org.dom4j.swing.LeafTreeNode r0;
        org.dom4j.Node r1;

        r0 := @this: org.dom4j.swing.LeafTreeNode;

        r1 := @parameter0: org.dom4j.Node;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.dom4j.swing.LeafTreeNode: org.dom4j.Node xmlNode> = r1;

        return;
    }

    public void <init>(javax.swing.tree.TreeNode, org.dom4j.Node)
    {
        org.dom4j.swing.LeafTreeNode r0;
        javax.swing.tree.TreeNode r1;
        org.dom4j.Node r2;

        r0 := @this: org.dom4j.swing.LeafTreeNode;

        r1 := @parameter0: javax.swing.tree.TreeNode;

        r2 := @parameter1: org.dom4j.Node;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.dom4j.swing.LeafTreeNode: javax.swing.tree.TreeNode parent> = r1;

        r0.<org.dom4j.swing.LeafTreeNode: org.dom4j.Node xmlNode> = r2;

        return;
    }

    public java.util.Enumeration children()
    {
        org.dom4j.swing.LeafTreeNode r1;
        java.util.Enumeration $r0;

        r1 := @this: org.dom4j.swing.LeafTreeNode;

        $r0 = <org.dom4j.swing.LeafTreeNode: java.util.Enumeration EMPTY_ENUMERATION>;

        return $r0;
    }

    public boolean getAllowsChildren()
    {
        org.dom4j.swing.LeafTreeNode r0;

        r0 := @this: org.dom4j.swing.LeafTreeNode;

        return 0;
    }

    public javax.swing.tree.TreeNode getChildAt(int)
    {
        int i0;
        org.dom4j.swing.LeafTreeNode r0;

        r0 := @this: org.dom4j.swing.LeafTreeNode;

        i0 := @parameter0: int;

        return null;
    }

    public int getChildCount()
    {
        org.dom4j.swing.LeafTreeNode r0;

        r0 := @this: org.dom4j.swing.LeafTreeNode;

        return 0;
    }

    public int getIndex(javax.swing.tree.TreeNode)
    {
        int $i1;
        org.dom4j.swing.LeafTreeNode r0;
        javax.swing.tree.TreeNode r1;

        r0 := @this: org.dom4j.swing.LeafTreeNode;

        r1 := @parameter0: javax.swing.tree.TreeNode;

        $i1 = (int) -1;

        return $i1;
    }

    public javax.swing.tree.TreeNode getParent()
    {
        org.dom4j.swing.LeafTreeNode r0;
        javax.swing.tree.TreeNode $r1;

        r0 := @this: org.dom4j.swing.LeafTreeNode;

        $r1 = r0.<org.dom4j.swing.LeafTreeNode: javax.swing.tree.TreeNode parent>;

        return $r1;
    }

    public boolean isLeaf()
    {
        org.dom4j.swing.LeafTreeNode r0;

        r0 := @this: org.dom4j.swing.LeafTreeNode;

        return 1;
    }

    public java.lang.String toString()
    {
        org.dom4j.Node $r1;
        java.lang.String $r2, $r3;
        org.dom4j.swing.LeafTreeNode r0;

        r0 := @this: org.dom4j.swing.LeafTreeNode;

        $r1 = r0.<org.dom4j.swing.LeafTreeNode: org.dom4j.Node xmlNode>;

        $r2 = interfaceinvoke $r1.<org.dom4j.Node: java.lang.String getText()>();

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        goto label2;

     label1:
        $r3 = "";

     label2:
        return $r3;
    }

    public void setParent(org.dom4j.swing.LeafTreeNode)
    {
        org.dom4j.swing.LeafTreeNode r0, r1;

        r0 := @this: org.dom4j.swing.LeafTreeNode;

        r1 := @parameter0: org.dom4j.swing.LeafTreeNode;

        r0.<org.dom4j.swing.LeafTreeNode: javax.swing.tree.TreeNode parent> = r1;

        return;
    }

    public org.dom4j.Node getXmlNode()
    {
        org.dom4j.swing.LeafTreeNode r0;
        org.dom4j.Node $r1;

        r0 := @this: org.dom4j.swing.LeafTreeNode;

        $r1 = r0.<org.dom4j.swing.LeafTreeNode: org.dom4j.Node xmlNode>;

        return $r1;
    }

    static void <clinit>()
    {
        org.dom4j.swing.LeafTreeNode$1 $r0;

        $r0 = new org.dom4j.swing.LeafTreeNode$1;

        specialinvoke $r0.<org.dom4j.swing.LeafTreeNode$1: void <init>()>();

        <org.dom4j.swing.LeafTreeNode: java.util.Enumeration EMPTY_ENUMERATION> = $r0;

        return;
    }
}
