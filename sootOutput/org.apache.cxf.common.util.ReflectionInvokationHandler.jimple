public class org.apache.cxf.common.util.ReflectionInvokationHandler extends java.lang.Object implements java.lang.reflect.InvocationHandler
{
    private java.lang.Object target;

    public void <init>(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.cxf.common.util.ReflectionInvokationHandler r0;

        r0 := @this: org.apache.cxf.common.util.ReflectionInvokationHandler;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.common.util.ReflectionInvokationHandler: java.lang.Object target> = r1;

        return;
    }

    public java.lang.Object getTarget()
    {
        java.lang.Object $r1;
        org.apache.cxf.common.util.ReflectionInvokationHandler r0;

        r0 := @this: org.apache.cxf.common.util.ReflectionInvokationHandler;

        $r1 = r0.<org.apache.cxf.common.util.ReflectionInvokationHandler: java.lang.Object target>;

        return $r1;
    }

    public java.lang.Object invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) throws java.lang.Throwable
    {
        org.apache.cxf.common.util.ReflectionInvokationHandler$WrapReturn r2;
        java.lang.NoSuchMethodException $r13;
        java.lang.reflect.Method[] $r16;
        org.apache.cxf.common.util.ReflectionInvokationHandler r3;
        java.lang.reflect.Method r0, $r9, r17;
        boolean $z0, $z1, z2;
        java.lang.reflect.InvocationTargetException $r30;
        java.lang.'annotation'.Annotation $r1;
        java.lang.Throwable $r31;
        java.lang.Object[] r7;
        int i0, $i1, $i2, $i3, i4, i5;
        java.lang.String $r6, $r18, $r19;
        java.lang.Class[] $r8, $r20, $r21, $r22, $r27;
        java.lang.Object $r4, $r10, $r11, $r12, $r14, $r23, $r24, $r25, $r26, $r28, r32;
        java.lang.Class $r5, $r15, $r29;

        r3 := @this: org.apache.cxf.common.util.ReflectionInvokationHandler;

        r32 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.reflect.Method;

        r7 := @parameter2: java.lang.Object[];

        $r1 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lorg/apache/cxf/common/util/ReflectionInvokationHandler$WrapReturn;");

        r2 = (org.apache.cxf.common.util.ReflectionInvokationHandler$WrapReturn) $r1;

     label01:
        $r4 = r3.<org.apache.cxf.common.util.ReflectionInvokationHandler: java.lang.Object target>;

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.String getName()>();

        $r8 = specialinvoke r3.<org.apache.cxf.common.util.ReflectionInvokationHandler: java.lang.Class[] getParameterTypes(java.lang.reflect.Method,java.lang.Object[])>(r0, r7);

        $r9 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r6, $r8);

        staticinvoke <org.apache.cxf.common.util.ReflectionUtil: java.lang.reflect.AccessibleObject setAccessible(java.lang.reflect.AccessibleObject)>($r9);

        $r10 = r3.<org.apache.cxf.common.util.ReflectionInvokationHandler: java.lang.Object target>;

        $r11 = virtualinvoke $r9.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r10, r7);

        $r12 = staticinvoke <org.apache.cxf.common.util.ReflectionInvokationHandler: java.lang.Object wrapReturn(org.apache.cxf.common.util.ReflectionInvokationHandler$WrapReturn,java.lang.Object)>(r2, $r11);

     label02:
        return $r12;

     label03:
        $r30 := @caughtexception;

        $r31 = virtualinvoke $r30.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        throw $r31;

     label04:
        $r13 := @caughtexception;

        $r14 = r3.<org.apache.cxf.common.util.ReflectionInvokationHandler: java.lang.Object target>;

        $r15 = virtualinvoke $r14.<java.lang.Object: java.lang.Class getClass()>();

        $r16 = virtualinvoke $r15.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        i0 = lengthof $r16;

        i4 = 0;

     label05:
        if i4 >= i0 goto label10;

        r17 = $r16[i4];

        $r18 = virtualinvoke r17.<java.lang.reflect.Method: java.lang.String getName()>();

        $r19 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.String getName()>();

        $z0 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>($r19);

        if $z0 == 0 goto label09;

        $r20 = virtualinvoke r17.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i1 = lengthof $r20;

        $r21 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i2 = lengthof $r21;

        if $i1 != $i2 goto label09;

        z2 = 1;

        i5 = 0;

     label06:
        $r22 = virtualinvoke r17.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i3 = lengthof $r22;

        if i5 >= $i3 goto label08;

        $r26 = r7[i5];

        if $r26 == null goto label07;

        $r27 = virtualinvoke r17.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r29 = $r27[i5];

        $r28 = r7[i5];

        $z1 = virtualinvoke $r29.<java.lang.Class: boolean isInstance(java.lang.Object)>($r28);

        if $z1 != 0 goto label07;

        z2 = 0;

     label07:
        i5 = i5 + 1;

        goto label06;

     label08:
        if z2 == 0 goto label09;

        staticinvoke <org.apache.cxf.common.util.ReflectionUtil: java.lang.reflect.AccessibleObject setAccessible(java.lang.reflect.AccessibleObject)>(r17);

        $r23 = r3.<org.apache.cxf.common.util.ReflectionInvokationHandler: java.lang.Object target>;

        $r24 = virtualinvoke r17.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r23, r7);

        $r25 = staticinvoke <org.apache.cxf.common.util.ReflectionInvokationHandler: java.lang.Object wrapReturn(org.apache.cxf.common.util.ReflectionInvokationHandler$WrapReturn,java.lang.Object)>(r2, $r24);

        return $r25;

     label09:
        i4 = i4 + 1;

        goto label05;

     label10:
        throw $r13;

        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label03;
        catch java.lang.NoSuchMethodException from label01 to label02 with label04;
    }

    private java.lang.Class[] getParameterTypes(java.lang.reflect.Method, java.lang.Object[])
    {
        org.apache.cxf.common.util.ReflectionInvokationHandler r3;
        java.lang.reflect.Method r0, $r12, $r17, $r21, $r27;
        boolean $z0;
        java.lang.Exception $r30;
        java.lang.Object[] r8, $r19, $r25;
        java.lang.'annotation'.Annotation[] $r4;
        int $i0, i1;
        org.apache.cxf.common.util.ReflectionInvokationHandler$UnwrapParam $r5;
        java.lang.String $r6, $r7, $r13;
        java.lang.'annotation'.Annotation[][] $r2;
        java.lang.reflect.AccessibleObject $r18, $r24;
        java.lang.Class[] $r1, $r11, $r16;
        java.lang.RuntimeException $r31;
        java.lang.Object $r9, $r14, $r20, $r22, $r26, $r28;
        java.lang.Class $r10, $r15, $r23, $r29;

        r3 := @this: org.apache.cxf.common.util.ReflectionInvokationHandler;

        r0 := @parameter0: java.lang.reflect.Method;

        r8 := @parameter1: java.lang.Object[];

        $r1 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r2 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.'annotation'.Annotation[][] getParameterAnnotations()>();

        i1 = 0;

     label1:
        $i0 = lengthof $r1;

        if i1 >= $i0 goto label8;

        $r4 = $r2[i1];

        $r5 = specialinvoke r3.<org.apache.cxf.common.util.ReflectionInvokationHandler: org.apache.cxf.common.util.ReflectionInvokationHandler$UnwrapParam getUnwrapParam(java.lang.'annotation'.Annotation[])>($r4);

        if $r5 == null goto label7;

        $r6 = interfaceinvoke $r5.<org.apache.cxf.common.util.ReflectionInvokationHandler$UnwrapParam: java.lang.String methodName()>();

        $r7 = interfaceinvoke $r5.<org.apache.cxf.common.util.ReflectionInvokationHandler$UnwrapParam: java.lang.String typeMethodName()>();

     label2:
        $r9 = r8[i1];

        $r10 = virtualinvoke $r9.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = newarray (java.lang.Class)[0];

        $r12 = virtualinvoke $r10.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r6, $r11);

        $r13 = "#default";

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label3;

        $r29 = virtualinvoke $r12.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r1[i1] = $r29;

        goto label4;

     label3:
        $r14 = r8[i1];

        $r15 = virtualinvoke $r14.<java.lang.Object: java.lang.Class getClass()>();

        $r16 = newarray (java.lang.Class)[0];

        $r17 = virtualinvoke $r15.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r7, $r16);

        $r18 = staticinvoke <org.apache.cxf.common.util.ReflectionUtil: java.lang.reflect.AccessibleObject setAccessible(java.lang.reflect.AccessibleObject)>($r17);

        $r21 = (java.lang.reflect.Method) $r18;

        $r20 = r8[i1];

        $r19 = newarray (java.lang.Object)[0];

        $r22 = virtualinvoke $r21.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r20, $r19);

        $r23 = (java.lang.Class) $r22;

        $r1[i1] = $r23;

     label4:
        $r24 = staticinvoke <org.apache.cxf.common.util.ReflectionUtil: java.lang.reflect.AccessibleObject setAccessible(java.lang.reflect.AccessibleObject)>($r12);

        $r27 = (java.lang.reflect.Method) $r24;

        $r26 = r8[i1];

        $r25 = newarray (java.lang.Object)[0];

        $r28 = virtualinvoke $r27.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r26, $r25);

        r8[i1] = $r28;

     label5:
        goto label7;

     label6:
        $r30 := @caughtexception;

        $r31 = new java.lang.RuntimeException;

        specialinvoke $r31.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r30);

        throw $r31;

     label7:
        i1 = i1 + 1;

        goto label1;

     label8:
        return $r1;

        catch java.lang.Exception from label2 to label5 with label6;
    }

    private org.apache.cxf.common.util.ReflectionInvokationHandler$UnwrapParam getUnwrapParam(java.lang.'annotation'.Annotation[])
    {
        int i0, i1;
        java.lang.'annotation'.Annotation r1;
        org.apache.cxf.common.util.ReflectionInvokationHandler$UnwrapParam $r2;
        java.lang.'annotation'.Annotation[] r0;
        org.apache.cxf.common.util.ReflectionInvokationHandler r3;
        boolean $z0;

        r3 := @this: org.apache.cxf.common.util.ReflectionInvokationHandler;

        r0 := @parameter0: java.lang.'annotation'.Annotation[];

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r1 = r0[i1];

        $z0 = r1 instanceof org.apache.cxf.common.util.ReflectionInvokationHandler$UnwrapParam;

        if $z0 == 0 goto label2;

        $r2 = (org.apache.cxf.common.util.ReflectionInvokationHandler$UnwrapParam) r1;

        return $r2;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    private static java.lang.Object wrapReturn(org.apache.cxf.common.util.ReflectionInvokationHandler$WrapReturn, java.lang.Object)
    {
        org.apache.cxf.common.util.ReflectionInvokationHandler$WrapReturn r0;
        java.util.Iterator $r6;
        org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator $r4;
        java.lang.Object r1, $r3;
        java.lang.Class $r2, $r5;
        boolean $z0;

        r0 := @parameter0: org.apache.cxf.common.util.ReflectionInvokationHandler$WrapReturn;

        r1 := @parameter1: java.lang.Object;

        if r0 == null goto label1;

        if r1 != null goto label2;

     label1:
        return r1;

     label2:
        $z0 = interfaceinvoke r0.<org.apache.cxf.common.util.ReflectionInvokationHandler$WrapReturn: boolean iterator()>();

        if $z0 == 0 goto label3;

        $r4 = new org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator;

        $r5 = interfaceinvoke r0.<org.apache.cxf.common.util.ReflectionInvokationHandler$WrapReturn: java.lang.Class value()>();

        $r6 = (java.util.Iterator) r1;

        specialinvoke $r4.<org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator: void <init>(java.lang.Class,java.util.Iterator)>($r5, $r6);

        return $r4;

     label3:
        $r2 = interfaceinvoke r0.<org.apache.cxf.common.util.ReflectionInvokationHandler$WrapReturn: java.lang.Class value()>();

        $r3 = staticinvoke <org.apache.cxf.common.util.ReflectionInvokationHandler: java.lang.Object createProxyWrapper(java.lang.Object,java.lang.Class)>(r1, $r2);

        return $r3;
    }

    public static final java.lang.Object createProxyWrapper(java.lang.Object, java.lang.Class)
    {
        java.lang.Class[] $r4;
        java.lang.Object r1, $r5, $r6;
        java.lang.Class r2;
        java.lang.ClassLoader $r3;
        org.apache.cxf.common.util.ReflectionInvokationHandler $r0;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        $r0 = new org.apache.cxf.common.util.ReflectionInvokationHandler;

        specialinvoke $r0.<org.apache.cxf.common.util.ReflectionInvokationHandler: void <init>(java.lang.Object)>(r1);

        $r3 = virtualinvoke r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r4 = newarray (java.lang.Class)[1];

        $r4[0] = r2;

        $r5 = staticinvoke <java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>($r3, $r4, $r0);

        $r6 = virtualinvoke r2.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r5);

        return $r6;
    }
}
