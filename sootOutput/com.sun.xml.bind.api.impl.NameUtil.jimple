class com.sun.xml.bind.api.impl.NameUtil extends java.lang.Object
{
    protected static final int UPPER_LETTER;
    protected static final int LOWER_LETTER;
    protected static final int OTHER_LETTER;
    protected static final int DIGIT;
    protected static final int OTHER;
    private static final byte[] actionTable;
    private static final byte ACTION_CHECK_PUNCT;
    private static final byte ACTION_CHECK_C2;
    private static final byte ACTION_BREAK;
    private static final byte ACTION_NOBREAK;
    private static java.util.HashSet reservedKeywords;

    void <init>()
    {
        com.sun.xml.bind.api.impl.NameUtil r0;

        r0 := @this: com.sun.xml.bind.api.impl.NameUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected boolean isPunct(char)
    {
        com.sun.xml.bind.api.impl.NameUtil r0;
        char c0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.api.impl.NameUtil;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        if $i1 == 45 goto label1;

        $i2 = (int) c0;

        if $i2 == 46 goto label1;

        $i3 = (int) c0;

        if $i3 == 58 goto label1;

        $i4 = (int) c0;

        if $i4 == 95 goto label1;

        $i5 = (int) c0;

        if $i5 == 183 goto label1;

        $i6 = (int) c0;

        if $i6 == 903 goto label1;

        $i7 = (int) c0;

        if $i7 == 1757 goto label1;

        $i8 = (int) c0;

        if $i8 != 1758 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    protected static boolean isDigit(char)
    {
        int $i1, $i2;
        char c0;
        boolean $z0, $z1;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        if $i1 < 48 goto label1;

        $i2 = (int) c0;

        if $i2 <= 57 goto label2;

     label1:
        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c0);

        if $z0 == 0 goto label3;

     label2:
        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    protected static boolean isUpper(char)
    {
        int $i1, $i2;
        char c0;
        boolean $z0, $z1;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        if $i1 < 65 goto label1;

        $i2 = (int) c0;

        if $i2 <= 90 goto label2;

     label1:
        $z0 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>(c0);

        if $z0 == 0 goto label3;

     label2:
        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    protected static boolean isLower(char)
    {
        int $i1, $i2;
        char c0;
        boolean $z0, $z1;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        if $i1 < 97 goto label1;

        $i2 = (int) c0;

        if $i2 <= 122 goto label2;

     label1:
        $z0 = staticinvoke <java.lang.Character: boolean isLowerCase(char)>(c0);

        if $z0 == 0 goto label3;

     label2:
        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    protected boolean isLetter(char)
    {
        com.sun.xml.bind.api.impl.NameUtil r0;
        char c0;
        int $i1, $i2, $i3, $i4;
        boolean $z0, $z1;

        r0 := @this: com.sun.xml.bind.api.impl.NameUtil;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        if $i1 < 65 goto label1;

        $i2 = (int) c0;

        if $i2 <= 90 goto label3;

     label1:
        $i3 = (int) c0;

        if $i3 < 97 goto label2;

        $i4 = (int) c0;

        if $i4 <= 122 goto label3;

     label2:
        $z0 = staticinvoke <java.lang.Character: boolean isLetter(char)>(c0);

        if $z0 == 0 goto label4;

     label3:
        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        return $z1;
    }

    private java.lang.String toLowerCase(java.lang.String)
    {
        java.util.Locale $r1;
        com.sun.xml.bind.api.impl.NameUtil r3;
        java.lang.String r0, $r2;

        r3 := @this: com.sun.xml.bind.api.impl.NameUtil;

        r0 := @parameter0: java.lang.String;

        $r1 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r1);

        return $r2;
    }

    private java.lang.String toUpperCase(char)
    {
        java.util.Locale $r1;
        com.sun.xml.bind.api.impl.NameUtil r3;
        char c0;
        java.lang.String $r0, $r2;

        r3 := @this: com.sun.xml.bind.api.impl.NameUtil;

        c0 := @parameter0: char;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c0);

        $r1 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r1);

        return $r2;
    }

    private java.lang.String toUpperCase(java.lang.String)
    {
        java.util.Locale $r1;
        com.sun.xml.bind.api.impl.NameUtil r3;
        java.lang.String r0, $r2;

        r3 := @this: com.sun.xml.bind.api.impl.NameUtil;

        r0 := @parameter0: java.lang.String;

        $r1 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r1);

        return $r2;
    }

    public java.lang.String capitalize(java.lang.String)
    {
        com.sun.xml.bind.api.impl.NameUtil r2;
        char $c0, $c2;
        int $i1;
        java.lang.StringBuilder $r1;
        java.lang.String r0, $r3, $r4, $r5, $r6;
        boolean $z0;

        r2 := @this: com.sun.xml.bind.api.impl.NameUtil;

        r0 := @parameter0: java.lang.String;

        $c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $z0 = staticinvoke <com.sun.xml.bind.api.impl.NameUtil: boolean isLower(char)>($c0);

        if $z0 != 0 goto label1;

        return r0;

     label1:
        $r1 = new java.lang.StringBuilder;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i1);

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $r3 = specialinvoke r2.<com.sun.xml.bind.api.impl.NameUtil: java.lang.String toUpperCase(char)>($c2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1);

        $r5 = specialinvoke r2.<com.sun.xml.bind.api.impl.NameUtil: java.lang.String toLowerCase(java.lang.String)>($r4);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private int nextBreak(java.lang.String, int)
    {
        byte[] $r2;
        com.sun.xml.bind.api.impl.NameUtil r1;
        byte $b8;
        int $i0, i1, i3, $i5, $i6, $i7, $i9, $i10, i12, i13, $i14, $i16;
        java.lang.String r0;
        boolean $z0, $z1;
        char $c2, $c4, $c11;

        r1 := @this: com.sun.xml.bind.api.impl.NameUtil;

        r0 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        i12 = virtualinvoke r1.<com.sun.xml.bind.api.impl.NameUtil: int classify(char)>($c2);

        i13 = i1 + 1;

     label1:
        if i13 >= $i0 goto label7;

        i3 = i12;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i13);

        $i5 = virtualinvoke r1.<com.sun.xml.bind.api.impl.NameUtil: int classify(char)>($c4);

        i12 = $i5;

        $r2 = <com.sun.xml.bind.api.impl.NameUtil: byte[] actionTable>;

        $i6 = i3 * 5;

        $i7 = $i6 + $i5;

        $b8 = $r2[$i7];

        $i14 = (int) $b8;

        tableswitch($i14)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label5;
            default: goto label6;
        };

     label2:
        $z1 = virtualinvoke r1.<com.sun.xml.bind.api.impl.NameUtil: boolean isPunct(char)>($c4);

        if $z1 == 0 goto label6;

        return i13;

     label3:
        $i9 = $i0 - 1;

        if i13 >= $i9 goto label6;

        $i10 = i13 + 1;

        $c11 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i10);

        $z0 = staticinvoke <com.sun.xml.bind.api.impl.NameUtil: boolean isLower(char)>($c11);

        if $z0 == 0 goto label4;

        return i13;

     label4:
        goto label6;

     label5:
        return i13;

     label6:
        i13 = i13 + 1;

        goto label1;

     label7:
        $i16 = (int) -1;

        return $i16;
    }

    private static byte decideAction(int, int)
    {
        int i0, i1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 != 4 goto label01;

        if i1 != 4 goto label01;

        return 0;

     label01:
        if i0 != 3 goto label02;

        $z0 = 1;

        goto label03;

     label02:
        $z0 = 0;

     label03:
        if i1 != 3 goto label04;

        $z1 = 1;

        goto label05;

     label04:
        $z1 = 0;

     label05:
        $z2 = staticinvoke <com.sun.xml.bind.api.impl.NameUtil: boolean xor(boolean,boolean)>($z0, $z1);

        if $z2 != 0 goto label06;

        return 2;

     label06:
        if i0 != 1 goto label07;

        if i1 == 1 goto label07;

        return 2;

     label07:
        if i0 > 2 goto label08;

        $z3 = 1;

        goto label09;

     label08:
        $z3 = 0;

     label09:
        if i1 > 2 goto label10;

        $z4 = 1;

        goto label11;

     label10:
        $z4 = 0;

     label11:
        $z5 = staticinvoke <com.sun.xml.bind.api.impl.NameUtil: boolean xor(boolean,boolean)>($z3, $z4);

        if $z5 != 0 goto label12;

        return 2;

     label12:
        if i0 != 2 goto label13;

        $z6 = 1;

        goto label14;

     label13:
        $z6 = 0;

     label14:
        if i1 != 2 goto label15;

        $z7 = 1;

        goto label16;

     label15:
        $z7 = 0;

     label16:
        $z8 = staticinvoke <com.sun.xml.bind.api.impl.NameUtil: boolean xor(boolean,boolean)>($z6, $z7);

        if $z8 != 0 goto label17;

        return 2;

     label17:
        if i0 != 0 goto label18;

        if i1 != 0 goto label18;

        return 1;

     label18:
        return 3;
    }

    private static boolean xor(boolean, boolean)
    {
        boolean z0, z1, $z2;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        if z0 == 0 goto label1;

        if z1 != 0 goto label2;

     label1:
        if z0 != 0 goto label3;

        if z1 != 0 goto label3;

     label2:
        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    protected int classify(char)
    {
        int $i1;
        com.sun.xml.bind.api.impl.NameUtil r0;
        char c0;

        r0 := @this: com.sun.xml.bind.api.impl.NameUtil;

        c0 := @parameter0: char;

        $i1 = staticinvoke <java.lang.Character: int getType(char)>(c0);

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label3;
            case 5: goto label3;
            case 6: goto label5;
            case 7: goto label5;
            case 8: goto label5;
            case 9: goto label4;
            default: goto label5;
        };

     label1:
        return 0;

     label2:
        return 1;

     label3:
        return 2;

     label4:
        return 3;

     label5:
        return 4;
    }

    public java.util.List toWordList(java.lang.String)
    {
        com.sun.xml.bind.api.impl.NameUtil r2;
        char $c2;
        java.util.ArrayList $r6;
        int $i0, $i1, i3, $i5, $i7;
        java.lang.String r1, $r3, $r4, $r5;
        boolean $z0;

        r2 := @this: com.sun.xml.bind.api.impl.NameUtil;

        r1 := @parameter0: java.lang.String;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        i3 = 0;

     label1:
        if i3 >= $i0 goto label9;

     label2:
        if i3 >= $i0 goto label4;

        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i3);

        $z0 = virtualinvoke r2.<com.sun.xml.bind.api.impl.NameUtil: boolean isPunct(char)>($c2);

        if $z0 != 0 goto label3;

        goto label4;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        if i3 < $i0 goto label5;

        goto label9;

     label5:
        $i1 = specialinvoke r2.<com.sun.xml.bind.api.impl.NameUtil: int nextBreak(java.lang.String,int)>(r1, i3);

        $i5 = (int) -1;

        if $i1 != $i5 goto label6;

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i3);

        goto label7;

     label6:
        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i3, $i1);

     label7:
        $r3 = virtualinvoke r2.<com.sun.xml.bind.api.impl.NameUtil: java.lang.String capitalize(java.lang.String)>($r5);

        $r4 = staticinvoke <com.sun.xml.bind.api.impl.NameUtil: java.lang.String escape(java.lang.String)>($r3);

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i7 = (int) -1;

        if $i1 != $i7 goto label8;

        goto label9;

     label8:
        i3 = $i1;

        goto label1;

     label9:
        return $r6;
    }

    protected java.lang.String toMixedCaseName(java.util.List, boolean)
    {
        com.sun.xml.bind.api.impl.NameUtil r3;
        java.util.List r1;
        int i0, $i1;
        java.lang.StringBuilder $r0;
        java.lang.Object $r4, $r6, $r8;
        java.lang.String $r2, $r5, $r7, $r9;
        boolean $z0, z1;

        r3 := @this: com.sun.xml.bind.api.impl.NameUtil;

        r1 := @parameter0: java.util.List;

        z1 := @parameter1: boolean;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        if z1 == 0 goto label1;

        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r9 = (java.lang.String) $r8;

        goto label2;

     label1:
        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (java.lang.String) $r4;

        $r9 = specialinvoke r3.<com.sun.xml.bind.api.impl.NameUtil: java.lang.String toLowerCase(java.lang.String)>($r5);

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        i0 = 1;

     label3:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if i0 >= $i1 goto label4;

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r7 = (java.lang.String) $r6;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        i0 = i0 + 1;

        goto label3;

     label4:
        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    protected java.lang.String toMixedCaseVariableName(java.lang.String[], boolean, boolean)
    {
        com.sun.xml.bind.api.impl.NameUtil r3;
        java.lang.String[] r1;
        int $i0, $i1, i2, i3, $i4;
        java.lang.String $r2, $r4, $r5, $r6, $r7, $r8;
        boolean z0, z1;
        java.lang.StringBuilder $r0;

        r3 := @this: com.sun.xml.bind.api.impl.NameUtil;

        r1 := @parameter0: java.lang.String[];

        z1 := @parameter1: boolean;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label2;

        i2 = 1;

     label1:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label2;

        $r6 = r1[i2];

        $r7 = virtualinvoke r3.<com.sun.xml.bind.api.impl.NameUtil: java.lang.String capitalize(java.lang.String)>($r6);

        r1[i2] = $r7;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $i0 = lengthof r1;

        if $i0 <= 0 goto label6;

        if z1 == 0 goto label3;

        $r8 = r1[0];

        goto label4;

     label3:
        $r4 = r1[0];

        $r8 = specialinvoke r3.<com.sun.xml.bind.api.impl.NameUtil: java.lang.String toLowerCase(java.lang.String)>($r4);

     label4:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        i3 = 1;

     label5:
        $i4 = lengthof r1;

        if i3 >= $i4 goto label6;

        $r5 = r1[i3];

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        i3 = i3 + 1;

        goto label5;

     label6:
        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public java.lang.String toConstantName(java.lang.String)
    {
        java.util.List $r2;
        com.sun.xml.bind.api.impl.NameUtil r0;
        java.lang.String r1, $r3;

        r0 := @this: com.sun.xml.bind.api.impl.NameUtil;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.sun.xml.bind.api.impl.NameUtil: java.util.List toWordList(java.lang.String)>(r1);

        $r3 = virtualinvoke r0.<com.sun.xml.bind.api.impl.NameUtil: java.lang.String toConstantName(java.util.List)>($r2);

        return $r3;
    }

    public java.lang.String toConstantName(java.util.List)
    {
        com.sun.xml.bind.api.impl.NameUtil r3;
        java.util.List r1;
        int $i0, i1;
        java.lang.StringBuilder $r0;
        java.lang.Object $r4, $r7;
        java.lang.String $r2, $r5, $r6, $r8, $r9;
        boolean $z0;

        r3 := @this: com.sun.xml.bind.api.impl.NameUtil;

        r1 := @parameter0: java.util.List;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (java.lang.String) $r4;

        $r6 = specialinvoke r3.<com.sun.xml.bind.api.impl.NameUtil: java.lang.String toUpperCase(java.lang.String)>($r5);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        i1 = 1;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(95);

        $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r8 = (java.lang.String) $r7;

        $r9 = specialinvoke r3.<com.sun.xml.bind.api.impl.NameUtil: java.lang.String toUpperCase(java.lang.String)>($r8);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static void escape(java.lang.StringBuilder, java.lang.String, int)
    {
        char $c2;
        int $i0, i1, i3, $i4, $i5, $i6, $i7;
        java.lang.StringBuilder r1;
        java.lang.String r0, $r2;
        boolean $z0;

        r1 := @parameter0: java.lang.StringBuilder;

        r0 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i3 = i1;

     label1:
        if i3 >= $i0 goto label7;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $z0 = staticinvoke <java.lang.Character: boolean isJavaIdentifierPart(char)>($c2);

        if $z0 == 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        goto label6;

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(95);

        $i4 = (int) $c2;

        if $i4 > 15 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("000");

        goto label5;

     label3:
        $i5 = (int) $c2;

        if $i5 > 255 goto label4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("00");

        goto label5;

     label4:
        $i6 = (int) $c2;

        if $i6 > 4095 goto label5;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

     label5:
        $i7 = (int) $c2;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($i7, 16);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

     label6:
        i3 = i3 + 1;

        goto label1;

     label7:
        return;
    }

    private static java.lang.String escape(java.lang.String)
    {
        char $c1;
        int $i0, i2;
        java.lang.StringBuilder $r1;
        java.lang.String r0, $r2, $r3;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i2 = 0;

     label1:
        if i2 >= $i0 goto label3;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $z0 = staticinvoke <java.lang.Character: boolean isJavaIdentifierPart(char)>($c1);

        if $z0 != 0 goto label2;

        $r1 = new java.lang.StringBuilder;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        staticinvoke <com.sun.xml.bind.api.impl.NameUtil: void escape(java.lang.StringBuilder,java.lang.String,int)>($r1, r0, i2);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return r0;
    }

    public static boolean isJavaIdentifier(java.lang.String)
    {
        char $c1, $c3;
        java.util.HashSet $r1;
        int $i0, $i2, i4;
        java.lang.String r0;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return 0;

     label1:
        $r1 = <com.sun.xml.bind.api.impl.NameUtil: java.util.HashSet reservedKeywords>;

        $z0 = virtualinvoke $r1.<java.util.HashSet: boolean contains(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        return 0;

     label2:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $z1 = staticinvoke <java.lang.Character: boolean isJavaIdentifierStart(char)>($c1);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        i4 = 1;

     label4:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if i4 >= $i2 goto label6;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $z2 = staticinvoke <java.lang.Character: boolean isJavaIdentifierPart(char)>($c3);

        if $z2 != 0 goto label5;

        return 0;

     label5:
        i4 = i4 + 1;

        goto label4;

     label6:
        return 1;
    }

    public static boolean isJavaPackageName(java.lang.String)
    {
        int $i0, $i1, $i2, i3, $i5;
        java.lang.String $r0, $r1, r2;
        boolean $z0;

        r2 := @parameter0: java.lang.String;

     label1:
        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 == 0 goto label5;

        $i1 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(46);

        i3 = $i1;

        $i5 = (int) -1;

        if $i1 != $i5 goto label2;

        i3 = virtualinvoke r2.<java.lang.String: int length()>();

     label2:
        $r0 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i3);

        $z0 = staticinvoke <com.sun.xml.bind.api.impl.NameUtil: boolean isJavaIdentifier(java.lang.String)>($r0);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $r1 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(i3);

        r2 = $r1;

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i2 == 0 goto label4;

        r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(1);

     label4:
        goto label1;

     label5:
        return 1;
    }

    static void <clinit>()
    {
        byte[] $r0, $r5;
        java.lang.String[] $r2;
        java.util.HashSet $r1, $r4;
        byte $b3;
        int i0, $i1, $i2, i4, i5, i6;
        java.lang.String r3;

        <com.sun.xml.bind.api.impl.NameUtil: byte ACTION_NOBREAK> = 3;

        <com.sun.xml.bind.api.impl.NameUtil: byte ACTION_BREAK> = 2;

        <com.sun.xml.bind.api.impl.NameUtil: byte ACTION_CHECK_C2> = 1;

        <com.sun.xml.bind.api.impl.NameUtil: byte ACTION_CHECK_PUNCT> = 0;

        <com.sun.xml.bind.api.impl.NameUtil: int OTHER> = 4;

        <com.sun.xml.bind.api.impl.NameUtil: int DIGIT> = 3;

        <com.sun.xml.bind.api.impl.NameUtil: int OTHER_LETTER> = 2;

        <com.sun.xml.bind.api.impl.NameUtil: int LOWER_LETTER> = 1;

        <com.sun.xml.bind.api.impl.NameUtil: int UPPER_LETTER> = 0;

        $r0 = newarray (byte)[25];

        <com.sun.xml.bind.api.impl.NameUtil: byte[] actionTable> = $r0;

        i4 = 0;

     label1:
        if i4 >= 5 goto label4;

        i5 = 0;

     label2:
        if i5 >= 5 goto label3;

        $r5 = <com.sun.xml.bind.api.impl.NameUtil: byte[] actionTable>;

        $i1 = i4 * 5;

        $i2 = $i1 + i5;

        $b3 = staticinvoke <com.sun.xml.bind.api.impl.NameUtil: byte decideAction(int,int)>(i4, i5);

        $r5[$i2] = $b3;

        i5 = i5 + 1;

        goto label2;

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        <com.sun.xml.bind.api.impl.NameUtil: java.util.HashSet reservedKeywords> = $r1;

        $r2 = newarray (java.lang.String)[53];

        $r2[0] = "abstract";

        $r2[1] = "boolean";

        $r2[2] = "break";

        $r2[3] = "byte";

        $r2[4] = "case";

        $r2[5] = "catch";

        $r2[6] = "char";

        $r2[7] = "class";

        $r2[8] = "const";

        $r2[9] = "continue";

        $r2[10] = "default";

        $r2[11] = "do";

        $r2[12] = "double";

        $r2[13] = "else";

        $r2[14] = "extends";

        $r2[15] = "final";

        $r2[16] = "finally";

        $r2[17] = "float";

        $r2[18] = "for";

        $r2[19] = "goto";

        $r2[20] = "if";

        $r2[21] = "implements";

        $r2[22] = "import";

        $r2[23] = "instanceof";

        $r2[24] = "int";

        $r2[25] = "interface";

        $r2[26] = "long";

        $r2[27] = "native";

        $r2[28] = "new";

        $r2[29] = "package";

        $r2[30] = "private";

        $r2[31] = "protected";

        $r2[32] = "public";

        $r2[33] = "return";

        $r2[34] = "short";

        $r2[35] = "static";

        $r2[36] = "strictfp";

        $r2[37] = "super";

        $r2[38] = "switch";

        $r2[39] = "synchronized";

        $r2[40] = "this";

        $r2[41] = "throw";

        $r2[42] = "throws";

        $r2[43] = "transient";

        $r2[44] = "try";

        $r2[45] = "void";

        $r2[46] = "volatile";

        $r2[47] = "while";

        $r2[48] = "true";

        $r2[49] = "false";

        $r2[50] = "null";

        $r2[51] = "assert";

        $r2[52] = "enum";

        i0 = lengthof $r2;

        i6 = 0;

     label5:
        if i6 >= i0 goto label6;

        r3 = $r2[i6];

        $r4 = <com.sun.xml.bind.api.impl.NameUtil: java.util.HashSet reservedKeywords>;

        virtualinvoke $r4.<java.util.HashSet: boolean add(java.lang.Object)>(r3);

        i6 = i6 + 1;

        goto label5;

     label6:
        return;
    }
}
