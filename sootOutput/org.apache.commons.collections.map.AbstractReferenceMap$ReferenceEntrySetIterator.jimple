class org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator extends java.lang.Object implements java.util.Iterator
{
    final org.apache.commons.collections.map.AbstractReferenceMap parent;
    int index;
    org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntry entry;
    org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntry previous;
    java.lang.Object nextKey;
    java.lang.Object nextValue;
    java.lang.Object currentKey;
    java.lang.Object currentValue;
    int expectedModCount;

    public void <init>(org.apache.commons.collections.map.AbstractReferenceMap)
    {
        org.apache.commons.collections.map.AbstractReferenceMap r1;
        org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator r0;
        int $i0, $i1, $i2;
        org.apache.commons.collections.map.AbstractHashedMap$HashEntry[] $r2;

        r0 := @this: org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator;

        r1 := @parameter0: org.apache.commons.collections.map.AbstractReferenceMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: org.apache.commons.collections.map.AbstractReferenceMap parent> = r1;

        $i0 = virtualinvoke r1.<org.apache.commons.collections.map.AbstractReferenceMap: int size()>();

        if $i0 == 0 goto label1;

        $r2 = r1.<org.apache.commons.collections.map.AbstractReferenceMap: org.apache.commons.collections.map.AbstractHashedMap$HashEntry[] data>;

        $i2 = lengthof $r2;

        goto label2;

     label1:
        $i2 = 0;

     label2:
        r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: int index> = $i2;

        $i1 = r1.<org.apache.commons.collections.map.AbstractReferenceMap: int modCount>;

        r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: int expectedModCount> = $i1;

        return;
    }

    public boolean hasNext()
    {
        org.apache.commons.collections.map.AbstractReferenceMap $r5;
        org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator r0;
        org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntry $r3, $r4, r8;
        org.apache.commons.collections.map.AbstractHashedMap$HashEntry[] $r6;
        int i0, $i2;
        java.lang.Object $r1, $r2;
        org.apache.commons.collections.map.AbstractHashedMap$HashEntry $r7;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator;

        specialinvoke r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: void checkMod()>();

     label1:
        $z0 = specialinvoke r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: boolean nextNull()>();

        if $z0 == 0 goto label6;

        r8 = r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntry entry>;

        i0 = r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: int index>;

     label2:
        if r8 != null goto label3;

        if i0 <= 0 goto label3;

        $i2 = (int) -1;

        i0 = i0 + $i2;

        $r5 = r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: org.apache.commons.collections.map.AbstractReferenceMap parent>;

        $r6 = $r5.<org.apache.commons.collections.map.AbstractReferenceMap: org.apache.commons.collections.map.AbstractHashedMap$HashEntry[] data>;

        $r7 = $r6[i0];

        r8 = (org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntry) $r7;

        goto label2;

     label3:
        r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntry entry> = r8;

        r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: int index> = i0;

        if r8 != null goto label4;

        r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: java.lang.Object currentKey> = null;

        r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: java.lang.Object currentValue> = null;

        return 0;

     label4:
        $r1 = virtualinvoke r8.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntry: java.lang.Object getKey()>();

        r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: java.lang.Object nextKey> = $r1;

        $r2 = virtualinvoke r8.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntry: java.lang.Object getValue()>();

        r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: java.lang.Object nextValue> = $r2;

        $z1 = specialinvoke r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: boolean nextNull()>();

        if $z1 == 0 goto label5;

        $r3 = r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntry entry>;

        $r4 = virtualinvoke $r3.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntry: org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntry next()>();

        r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntry entry> = $r4;

     label5:
        goto label1;

     label6:
        return 1;
    }

    private void checkMod()
    {
        org.apache.commons.collections.map.AbstractReferenceMap $r1;
        org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator r0;
        int $i0, $i1;
        java.util.ConcurrentModificationException $r2;

        r0 := @this: org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator;

        $r1 = r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: org.apache.commons.collections.map.AbstractReferenceMap parent>;

        $i1 = $r1.<org.apache.commons.collections.map.AbstractReferenceMap: int modCount>;

        $i0 = r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: int expectedModCount>;

        if $i1 == $i0 goto label1;

        $r2 = new java.util.ConcurrentModificationException;

        specialinvoke $r2.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r2;

     label1:
        return;
    }

    private boolean nextNull()
    {
        org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator r0;
        java.lang.Object $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator;

        $r1 = r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: java.lang.Object nextKey>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: java.lang.Object nextValue>;

        if $r2 != null goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    protected org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntry nextEntry()
    {
        org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator r0;
        org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntry $r1, $r2, $r3, $r6;
        java.lang.Object $r4, $r5;
        java.util.NoSuchElementException $r7;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator;

        specialinvoke r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: void checkMod()>();

        $z0 = specialinvoke r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: boolean nextNull()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        throw $r7;

     label1:
        $r1 = r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntry entry>;

        r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntry previous> = $r1;

        $r2 = r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntry entry>;

        $r3 = virtualinvoke $r2.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntry: org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntry next()>();

        r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntry entry> = $r3;

        $r4 = r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: java.lang.Object nextKey>;

        r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: java.lang.Object currentKey> = $r4;

        $r5 = r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: java.lang.Object nextValue>;

        r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: java.lang.Object currentValue> = $r5;

        r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: java.lang.Object nextKey> = null;

        r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: java.lang.Object nextValue> = null;

        $r6 = r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntry previous>;

        return $r6;
    }

    protected org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntry currentEntry()
    {
        org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator r0;
        org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntry $r1;

        r0 := @this: org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator;

        specialinvoke r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: void checkMod()>();

        $r1 = r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntry previous>;

        return $r1;
    }

    public java.lang.Object next()
    {
        org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator r0;
        org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntry $r1;

        r0 := @this: org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntry nextEntry()>();

        return $r1;
    }

    public void remove()
    {
        org.apache.commons.collections.map.AbstractReferenceMap $r3, $r4;
        org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator r0;
        java.lang.IllegalStateException $r5;
        int $i0;
        java.lang.Object $r2;
        org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntry $r1;

        r0 := @this: org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator;

        specialinvoke r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: void checkMod()>();

        $r1 = r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntry previous>;

        if $r1 != null goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();

        throw $r5;

     label1:
        $r3 = r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: org.apache.commons.collections.map.AbstractReferenceMap parent>;

        $r2 = r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: java.lang.Object currentKey>;

        virtualinvoke $r3.<org.apache.commons.collections.map.AbstractReferenceMap: java.lang.Object remove(java.lang.Object)>($r2);

        r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntry previous> = null;

        r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: java.lang.Object currentKey> = null;

        r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: java.lang.Object currentValue> = null;

        $r4 = r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: org.apache.commons.collections.map.AbstractReferenceMap parent>;

        $i0 = $r4.<org.apache.commons.collections.map.AbstractReferenceMap: int modCount>;

        r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySetIterator: int expectedModCount> = $i0;

        return;
    }
}
