final class org.waveprotocol.wave.model.document.operation.Nindo$2 extends java.lang.Object implements org.waveprotocol.wave.model.document.operation.DocOpCursor
{
    final org.waveprotocol.wave.model.document.operation.Nindo$Builder val$b;

    void <init>(org.waveprotocol.wave.model.document.operation.Nindo$Builder)
    {
        org.waveprotocol.wave.model.document.operation.Nindo$2 r0;
        org.waveprotocol.wave.model.document.operation.Nindo$Builder r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.Nindo$2;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.Nindo$Builder;

        r0.<org.waveprotocol.wave.model.document.operation.Nindo$2: org.waveprotocol.wave.model.document.operation.Nindo$Builder val$b> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void deleteCharacters(java.lang.String)
    {
        org.waveprotocol.wave.model.document.operation.Nindo$Builder $r2;
        int $i0;
        org.waveprotocol.wave.model.document.operation.Nindo$2 r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.Nindo$2;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.Nindo$2: org.waveprotocol.wave.model.document.operation.Nindo$Builder val$b>;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        virtualinvoke $r2.<org.waveprotocol.wave.model.document.operation.Nindo$Builder: void deleteCharacters(int)>($i0);

        return;
    }

    public void deleteElementEnd()
    {
        org.waveprotocol.wave.model.document.operation.Nindo$2 r0;
        org.waveprotocol.wave.model.document.operation.Nindo$Builder $r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.Nindo$2;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.Nindo$2: org.waveprotocol.wave.model.document.operation.Nindo$Builder val$b>;

        virtualinvoke $r1.<org.waveprotocol.wave.model.document.operation.Nindo$Builder: void deleteElementEnd()>();

        return;
    }

    public void deleteElementStart(java.lang.String, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.operation.Nindo$Builder $r1;
        org.waveprotocol.wave.model.document.operation.Nindo$2 r0;
        java.lang.String r2;
        org.waveprotocol.wave.model.document.operation.Attributes r3;

        r0 := @this: org.waveprotocol.wave.model.document.operation.Nindo$2;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.Nindo$2: org.waveprotocol.wave.model.document.operation.Nindo$Builder val$b>;

        virtualinvoke $r1.<org.waveprotocol.wave.model.document.operation.Nindo$Builder: void deleteElementStart()>();

        return;
    }

    public void replaceAttributes(org.waveprotocol.wave.model.document.operation.Attributes, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.operation.Nindo$Builder $r2;
        org.waveprotocol.wave.model.document.operation.Nindo$2 r0;
        org.waveprotocol.wave.model.document.operation.Attributes r1, r3;

        r0 := @this: org.waveprotocol.wave.model.document.operation.Nindo$2;

        r3 := @parameter0: org.waveprotocol.wave.model.document.operation.Attributes;

        r1 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.Nindo$2: org.waveprotocol.wave.model.document.operation.Nindo$Builder val$b>;

        virtualinvoke $r2.<org.waveprotocol.wave.model.document.operation.Nindo$Builder: void replaceAttributes(org.waveprotocol.wave.model.document.operation.Attributes)>(r1);

        return;
    }

    public void retain(int)
    {
        int i0;
        org.waveprotocol.wave.model.document.operation.Nindo$2 r0;
        org.waveprotocol.wave.model.document.operation.Nindo$Builder $r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.Nindo$2;

        i0 := @parameter0: int;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.Nindo$2: org.waveprotocol.wave.model.document.operation.Nindo$Builder val$b>;

        virtualinvoke $r1.<org.waveprotocol.wave.model.document.operation.Nindo$Builder: void skip(int)>(i0);

        return;
    }

    public void updateAttributes(org.waveprotocol.wave.model.document.operation.AttributesUpdate)
    {
        java.util.HashMap $r0;
        org.waveprotocol.wave.model.document.operation.Nindo$Builder $r3;
        int $i0, i1;
        org.waveprotocol.wave.model.document.operation.Nindo$2 r2;
        java.lang.String $r4, $r5;
        org.waveprotocol.wave.model.document.operation.AttributesUpdate r1;

        r2 := @this: org.waveprotocol.wave.model.document.operation.Nindo$2;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.AttributesUpdate;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: int changeSize()>();

        if i1 >= $i0 goto label2;

        $r4 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: java.lang.String getChangeKey(int)>(i1);

        $r5 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: java.lang.String getNewValue(int)>(i1);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r3 = r2.<org.waveprotocol.wave.model.document.operation.Nindo$2: org.waveprotocol.wave.model.document.operation.Nindo$Builder val$b>;

        virtualinvoke $r3.<org.waveprotocol.wave.model.document.operation.Nindo$Builder: void updateAttributes(java.util.Map)>($r0);

        return;
    }

    public void annotationBoundary(org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap)
    {
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap r0;
        org.waveprotocol.wave.model.document.operation.Nindo$Builder $r2, $r5;
        int $i0, $i1, i2, i3;
        org.waveprotocol.wave.model.document.operation.Nindo$2 r1;
        java.lang.String $r3, $r4, $r6;

        r1 := @this: org.waveprotocol.wave.model.document.operation.Nindo$2;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap;

        i2 = 0;

     label1:
        $i0 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: int endSize()>();

        if i2 >= $i0 goto label2;

        $r5 = r1.<org.waveprotocol.wave.model.document.operation.Nindo$2: org.waveprotocol.wave.model.document.operation.Nindo$Builder val$b>;

        $r6 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: java.lang.String getEndKey(int)>(i2);

        virtualinvoke $r5.<org.waveprotocol.wave.model.document.operation.Nindo$Builder: void endAnnotation(java.lang.String)>($r6);

        i2 = i2 + 1;

        goto label1;

     label2:
        i3 = 0;

     label3:
        $i1 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: int changeSize()>();

        if i3 >= $i1 goto label4;

        $r2 = r1.<org.waveprotocol.wave.model.document.operation.Nindo$2: org.waveprotocol.wave.model.document.operation.Nindo$Builder val$b>;

        $r3 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: java.lang.String getChangeKey(int)>(i3);

        $r4 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: java.lang.String getNewValue(int)>(i3);

        virtualinvoke $r2.<org.waveprotocol.wave.model.document.operation.Nindo$Builder: void startAnnotation(java.lang.String,java.lang.String)>($r3, $r4);

        i3 = i3 + 1;

        goto label3;

     label4:
        return;
    }

    public void characters(java.lang.String)
    {
        org.waveprotocol.wave.model.document.operation.Nindo$2 r0;
        java.lang.String r1;
        org.waveprotocol.wave.model.document.operation.Nindo$Builder $r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.Nindo$2;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.Nindo$2: org.waveprotocol.wave.model.document.operation.Nindo$Builder val$b>;

        virtualinvoke $r2.<org.waveprotocol.wave.model.document.operation.Nindo$Builder: void characters(java.lang.String)>(r1);

        return;
    }

    public void elementEnd()
    {
        org.waveprotocol.wave.model.document.operation.Nindo$2 r0;
        org.waveprotocol.wave.model.document.operation.Nindo$Builder $r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.Nindo$2;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.Nindo$2: org.waveprotocol.wave.model.document.operation.Nindo$Builder val$b>;

        virtualinvoke $r1.<org.waveprotocol.wave.model.document.operation.Nindo$Builder: void elementEnd()>();

        return;
    }

    public void elementStart(java.lang.String, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.operation.Nindo$Builder $r3;
        org.waveprotocol.wave.model.document.operation.Nindo$2 r0;
        java.lang.String r1;
        org.waveprotocol.wave.model.document.operation.Attributes r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.Nindo$2;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        $r3 = r0.<org.waveprotocol.wave.model.document.operation.Nindo$2: org.waveprotocol.wave.model.document.operation.Nindo$Builder val$b>;

        virtualinvoke $r3.<org.waveprotocol.wave.model.document.operation.Nindo$Builder: void elementStart(java.lang.String,org.waveprotocol.wave.model.document.operation.Attributes)>(r1, r2);

        return;
    }
}
