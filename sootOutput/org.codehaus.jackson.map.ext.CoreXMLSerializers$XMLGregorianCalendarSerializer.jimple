public class org.codehaus.jackson.map.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer extends org.codehaus.jackson.map.ser.std.SerializerBase
{

    public void <init>()
    {
        org.codehaus.jackson.map.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer r0;

        r0 := @this: org.codehaus.jackson.map.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer;

        specialinvoke r0.<org.codehaus.jackson.map.ser.std.SerializerBase: void <init>(java.lang.Class)>(class "Ljavax/xml/datatype/XMLGregorianCalendar;");

        return;
    }

    public void serialize(javax.xml.datatype.XMLGregorianCalendar, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.map.ser.std.CalendarSerializer $r1;
        java.util.GregorianCalendar $r2;
        org.codehaus.jackson.JsonGenerator r3;
        org.codehaus.jackson.map.SerializerProvider r4;
        javax.xml.datatype.XMLGregorianCalendar r0;
        org.codehaus.jackson.map.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer r5;

        r5 := @this: org.codehaus.jackson.map.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer;

        r0 := @parameter0: javax.xml.datatype.XMLGregorianCalendar;

        r3 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r4 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $r1 = <org.codehaus.jackson.map.ser.std.CalendarSerializer: org.codehaus.jackson.map.ser.std.CalendarSerializer instance>;

        $r2 = virtualinvoke r0.<javax.xml.datatype.XMLGregorianCalendar: java.util.GregorianCalendar toGregorianCalendar()>();

        virtualinvoke $r1.<org.codehaus.jackson.map.ser.std.CalendarSerializer: void serialize(java.util.Calendar,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>($r2, r3, r4);

        return;
    }

    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider, java.lang.reflect.Type) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.ser.std.CalendarSerializer $r2;
        java.lang.reflect.Type r1;
        org.codehaus.jackson.map.SerializerProvider r0;
        org.codehaus.jackson.JsonNode $r3;
        org.codehaus.jackson.map.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer r4;

        r4 := @this: org.codehaus.jackson.map.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer;

        r0 := @parameter0: org.codehaus.jackson.map.SerializerProvider;

        r1 := @parameter1: java.lang.reflect.Type;

        $r2 = <org.codehaus.jackson.map.ser.std.CalendarSerializer: org.codehaus.jackson.map.ser.std.CalendarSerializer instance>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.ser.std.CalendarSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>(r0, r1);

        return $r3;
    }

    public volatile void serialize(java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.JsonGenerator r2;
        org.codehaus.jackson.map.SerializerProvider r3;
        java.lang.Object r1;
        javax.xml.datatype.XMLGregorianCalendar $r4;
        org.codehaus.jackson.map.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer r0;

        r0 := @this: org.codehaus.jackson.map.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r3 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $r4 = (javax.xml.datatype.XMLGregorianCalendar) r1;

        virtualinvoke r0.<org.codehaus.jackson.map.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer: void serialize(javax.xml.datatype.XMLGregorianCalendar,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>($r4, r2, r3);

        return;
    }
}
