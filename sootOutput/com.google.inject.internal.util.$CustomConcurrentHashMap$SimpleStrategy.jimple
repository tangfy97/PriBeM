class com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy extends java.lang.Object implements com.google.inject.internal.util.$CustomConcurrentHashMap$Strategy
{

    void <init>()
    {
        com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy r0;

        r0 := @this: com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry newEntry(java.lang.Object, int, com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry)
    {
        com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry $r0, r2;
        int i0;
        java.lang.Object r1;
        com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy r3;

        r3 := @this: com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r2 := @parameter2: com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry;

        $r0 = new com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry;

        specialinvoke $r0.<com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry: void <init>(java.lang.Object,int,java.lang.Object,com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry)>(r1, i0, null, r2);

        return $r0;
    }

    public com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry copyEntry(java.lang.Object, com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry, com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry)
    {
        com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry $r0, r2, r3;
        int $i0;
        java.lang.Object r1, $r4;
        com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy r5;

        r5 := @this: com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry;

        r3 := @parameter2: com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry;

        $r0 = new com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry;

        $i0 = r2.<com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry: int hash>;

        $r4 = r2.<com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry: java.lang.Object value>;

        specialinvoke $r0.<com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry: void <init>(java.lang.Object,int,java.lang.Object,com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry)>(r1, $i0, $r4, r3);

        return $r0;
    }

    public void setValue(com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry, java.lang.Object)
    {
        java.lang.Object r1;
        com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy r2;
        com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry r0;

        r2 := @this: com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy;

        r0 := @parameter0: com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry;

        r1 := @parameter1: java.lang.Object;

        r0.<com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry: java.lang.Object value> = r1;

        return;
    }

    public java.lang.Object getValue(com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry)
    {
        java.lang.Object $r1;
        com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy r2;
        com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry r0;

        r2 := @this: com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy;

        r0 := @parameter0: com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry;

        $r1 = r0.<com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry: java.lang.Object value>;

        return $r1;
    }

    public boolean equalKeys(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy r2;
        boolean $z0;

        r2 := @this: com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean equalValues(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy r2;
        boolean $z0;

        r2 := @this: com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    public int hashKey(java.lang.Object)
    {
        int $i0;
        java.lang.Object r0;
        com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy r1;

        r1 := @this: com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy;

        r0 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public java.lang.Object getKey(com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry)
    {
        java.lang.Object $r1;
        com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy r2;
        com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry r0;

        r2 := @this: com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy;

        r0 := @parameter0: com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry;

        $r1 = r0.<com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry: java.lang.Object key>;

        return $r1;
    }

    public com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry getNext(com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry)
    {
        com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy r2;
        com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry r0, $r1;

        r2 := @this: com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy;

        r0 := @parameter0: com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry;

        $r1 = r0.<com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry: com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry next>;

        return $r1;
    }

    public int getHash(com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry)
    {
        int $i0;
        com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy r1;
        com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry r0;

        r1 := @this: com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy;

        r0 := @parameter0: com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry;

        $i0 = r0.<com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry: int hash>;

        return $i0;
    }

    public void setInternals(com.google.inject.internal.util.$CustomConcurrentHashMap$Internals)
    {
        com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy r0;
        com.google.inject.internal.util.$CustomConcurrentHashMap$Internals r1;

        r0 := @this: com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy;

        r1 := @parameter0: com.google.inject.internal.util.$CustomConcurrentHashMap$Internals;

        return;
    }

    public volatile int getHash(java.lang.Object)
    {
        com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry $r2;
        int $i0;
        com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy r0;
        java.lang.Object r1;

        r0 := @this: com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry) r1;

        $i0 = virtualinvoke r0.<com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy: int getHash(com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry)>($r2);

        return $i0;
    }

    public volatile java.lang.Object getNext(java.lang.Object)
    {
        com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry $r2, $r3;
        com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy r0;
        java.lang.Object r1;

        r0 := @this: com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry) r1;

        $r3 = virtualinvoke r0.<com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy: com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry getNext(com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry)>($r2);

        return $r3;
    }

    public volatile java.lang.Object getKey(java.lang.Object)
    {
        com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry $r2;
        com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy r0;
        java.lang.Object r1, $r3;

        r0 := @this: com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry) r1;

        $r3 = virtualinvoke r0.<com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy: java.lang.Object getKey(com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry)>($r2);

        return $r3;
    }

    public volatile java.lang.Object getValue(java.lang.Object)
    {
        com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry $r2;
        com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy r0;
        java.lang.Object r1, $r3;

        r0 := @this: com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry) r1;

        $r3 = virtualinvoke r0.<com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy: java.lang.Object getValue(com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry)>($r2);

        return $r3;
    }

    public volatile void setValue(java.lang.Object, java.lang.Object)
    {
        com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry $r3;
        com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy r0;
        java.lang.Object r1, r2;

        r0 := @this: com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry) r1;

        virtualinvoke r0.<com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy: void setValue(com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry,java.lang.Object)>($r3, r2);

        return;
    }

    public volatile java.lang.Object copyEntry(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry $r4, $r5, $r6;
        com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy r0;
        java.lang.Object r1, r2, r3;

        r0 := @this: com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r5 = (com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry) r2;

        $r4 = (com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry) r3;

        $r6 = virtualinvoke r0.<com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy: com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry copyEntry(java.lang.Object,com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry,com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry)>(r1, $r5, $r4);

        return $r6;
    }

    public volatile java.lang.Object newEntry(java.lang.Object, int, java.lang.Object)
    {
        com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry $r3, $r4;
        int i0;
        com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy r0;
        java.lang.Object r1, r2;

        r0 := @this: com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = (com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry) r2;

        $r4 = virtualinvoke r0.<com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy: com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry newEntry(java.lang.Object,int,com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry)>(r1, i0, $r3);

        return $r4;
    }
}
