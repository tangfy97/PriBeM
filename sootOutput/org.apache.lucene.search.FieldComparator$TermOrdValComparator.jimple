public final class org.apache.lucene.search.FieldComparator$TermOrdValComparator extends org.apache.lucene.search.FieldComparator
{
    final int[] ords;
    final org.apache.lucene.util.BytesRef[] values;
    final int[] readerGen;
    int currentReaderGen;
    org.apache.lucene.index.SortedDocValues termsIndex;
    private final java.lang.String field;
    int bottomSlot;
    int bottomOrd;
    boolean bottomSameReader;
    org.apache.lucene.util.BytesRef bottomValue;
    final org.apache.lucene.util.BytesRef tempBR;
    static final boolean $assertionsDisabled;

    public void <init>(int, java.lang.String)
    {
        org.apache.lucene.util.BytesRef $r6;
        int[] $r2, $r4;
        org.apache.lucene.search.FieldComparator$TermOrdValComparator r0;
        int i0, $i2, $i4;
        org.apache.lucene.util.BytesRef[] $r3;
        java.lang.String r5;

        r0 := @this: org.apache.lucene.search.FieldComparator$TermOrdValComparator;

        i0 := @parameter0: int;

        r5 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.lucene.search.FieldComparator: void <init>()>();

        $i2 = (int) -1;

        r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: int currentReaderGen> = $i2;

        $i4 = (int) -1;

        r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: int bottomSlot> = $i4;

        $r6 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r6.<org.apache.lucene.util.BytesRef: void <init>()>();

        r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: org.apache.lucene.util.BytesRef tempBR> = $r6;

        $r2 = newarray (int)[i0];

        r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: int[] ords> = $r2;

        $r3 = newarray (org.apache.lucene.util.BytesRef)[i0];

        r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: org.apache.lucene.util.BytesRef[] values> = $r3;

        $r4 = newarray (int)[i0];

        r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: int[] readerGen> = $r4;

        r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: java.lang.String field> = r5;

        return;
    }

    public int compare(int, int)
    {
        int[] $r1, $r2, $r7, $r8;
        org.apache.lucene.search.FieldComparator$TermOrdValComparator r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9;
        org.apache.lucene.util.BytesRef r4, r6;
        org.apache.lucene.util.BytesRef[] $r3, $r5;

        r0 := @this: org.apache.lucene.search.FieldComparator$TermOrdValComparator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: int[] readerGen>;

        $i3 = $r1[i0];

        $r2 = r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: int[] readerGen>;

        $i2 = $r2[i1];

        if $i3 != $i2 goto label1;

        $r7 = r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: int[] ords>;

        $i6 = $r7[i0];

        $r8 = r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: int[] ords>;

        $i5 = $r8[i1];

        $i7 = $i6 - $i5;

        return $i7;

     label1:
        $r3 = r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: org.apache.lucene.util.BytesRef[] values>;

        r4 = $r3[i0];

        $r5 = r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: org.apache.lucene.util.BytesRef[] values>;

        r6 = $r5[i1];

        if r4 != null goto label3;

        if r6 != null goto label2;

        return 0;

     label2:
        $i9 = (int) -1;

        return $i9;

     label3:
        if r6 != null goto label4;

        return 1;

     label4:
        $i4 = virtualinvoke r4.<org.apache.lucene.util.BytesRef: int compareTo(org.apache.lucene.util.BytesRef)>(r6);

        return $i4;
    }

    public int compareBottom(int)
    {
        int i0;
        java.lang.UnsupportedOperationException $r0;
        org.apache.lucene.search.FieldComparator$TermOrdValComparator r1;

        r1 := @this: org.apache.lucene.search.FieldComparator$TermOrdValComparator;

        i0 := @parameter0: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void copy(int, int)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.lucene.search.FieldComparator$TermOrdValComparator r1;
        int i0, i1;

        r1 := @this: org.apache.lucene.search.FieldComparator$TermOrdValComparator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public int compareDocToValue(int, org.apache.lucene.util.BytesRef)
    {
        org.apache.lucene.util.BytesRef r2, $r3, $r5;
        org.apache.lucene.search.FieldComparator$TermOrdValComparator r0;
        int i0, $i1, $i2, $i4, $i6;
        org.apache.lucene.index.SortedDocValues $r1, $r4;

        r0 := @this: org.apache.lucene.search.FieldComparator$TermOrdValComparator;

        i0 := @parameter0: int;

        r2 := @parameter1: org.apache.lucene.util.BytesRef;

        $r1 = r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: org.apache.lucene.index.SortedDocValues termsIndex>;

        $i1 = virtualinvoke $r1.<org.apache.lucene.index.SortedDocValues: int getOrd(int)>(i0);

        $i4 = (int) -1;

        if $i1 != $i4 goto label2;

        if r2 != null goto label1;

        return 0;

     label1:
        $i6 = (int) -1;

        return $i6;

     label2:
        if r2 != null goto label3;

        return 1;

     label3:
        $r4 = r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: org.apache.lucene.index.SortedDocValues termsIndex>;

        $r3 = r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: org.apache.lucene.util.BytesRef tempBR>;

        virtualinvoke $r4.<org.apache.lucene.index.SortedDocValues: void lookupOrd(int,org.apache.lucene.util.BytesRef)>($i1, $r3);

        $r5 = r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: org.apache.lucene.util.BytesRef tempBR>;

        $i2 = virtualinvoke $r5.<org.apache.lucene.util.BytesRef: int compareTo(org.apache.lucene.util.BytesRef)>(r2);

        return $i2;
    }

    public org.apache.lucene.search.FieldComparator setNextReader(org.apache.lucene.index.AtomicReaderContext) throws java.io.IOException
    {
        org.apache.lucene.search.FieldCache $r2;
        org.apache.lucene.search.FieldComparator$TermOrdValComparator$AnyOrdComparator $r8;
        org.apache.lucene.search.FieldComparator$TermOrdValComparator r1;
        int i0, $i1, $i2, $i3, $i4, $i6;
        java.lang.String $r4;
        org.apache.lucene.index.SortedDocValues $r5, $r7;
        org.apache.lucene.index.AtomicReaderContext r0;
        org.apache.lucene.index.AtomicReader $r3;

        r1 := @this: org.apache.lucene.search.FieldComparator$TermOrdValComparator;

        r0 := @parameter0: org.apache.lucene.index.AtomicReaderContext;

        i0 = r0.<org.apache.lucene.index.AtomicReaderContext: int docBase>;

        $r2 = <org.apache.lucene.search.FieldCache: org.apache.lucene.search.FieldCache DEFAULT>;

        $r3 = virtualinvoke r0.<org.apache.lucene.index.AtomicReaderContext: org.apache.lucene.index.AtomicReader reader()>();

        $r4 = r1.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: java.lang.String field>;

        $r5 = interfaceinvoke $r2.<org.apache.lucene.search.FieldCache: org.apache.lucene.index.SortedDocValues getTermsIndex(org.apache.lucene.index.AtomicReader,java.lang.String)>($r3, $r4);

        r1.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: org.apache.lucene.index.SortedDocValues termsIndex> = $r5;

        $r8 = new org.apache.lucene.search.FieldComparator$TermOrdValComparator$AnyOrdComparator;

        $r7 = r1.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: org.apache.lucene.index.SortedDocValues termsIndex>;

        specialinvoke $r8.<org.apache.lucene.search.FieldComparator$TermOrdValComparator$AnyOrdComparator: void <init>(org.apache.lucene.search.FieldComparator$TermOrdValComparator,org.apache.lucene.index.SortedDocValues,int)>(r1, $r7, i0);

        $i1 = r1.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: int currentReaderGen>;

        $i2 = $i1 + 1;

        r1.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: int currentReaderGen> = $i2;

        $i3 = r1.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: int bottomSlot>;

        $i6 = (int) -1;

        if $i3 == $i6 goto label1;

        $i4 = r1.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: int bottomSlot>;

        virtualinvoke $r8.<org.apache.lucene.search.FieldComparator: void setBottom(int)>($i4);

     label1:
        return $r8;
    }

    public void setBottom(int)
    {
        int[] $r3, $r7, $r8, $r9, $r10, $r12;
        boolean $z0;
        org.apache.lucene.util.BytesRef $r2, $r4, $r5;
        org.apache.lucene.util.BytesRef[] $r1;
        java.lang.AssertionError $r13;
        org.apache.lucene.search.FieldComparator$TermOrdValComparator r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i19, $i21;
        org.apache.lucene.index.SortedDocValues $r6;

        r0 := @this: org.apache.lucene.search.FieldComparator$TermOrdValComparator;

        i0 := @parameter0: int;

        r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: int bottomSlot> = i0;

        $r1 = r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: org.apache.lucene.util.BytesRef[] values>;

        $i1 = r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: int bottomSlot>;

        $r2 = $r1[$i1];

        r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: org.apache.lucene.util.BytesRef bottomValue> = $r2;

        $i4 = r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: int currentReaderGen>;

        $r3 = r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: int[] readerGen>;

        $i2 = r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: int bottomSlot>;

        $i3 = $r3[$i2];

        if $i4 != $i3 goto label1;

        $r12 = r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: int[] ords>;

        $i16 = r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: int bottomSlot>;

        $i17 = $r12[$i16];

        r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: int bottomOrd> = $i17;

        r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: boolean bottomSameReader> = 1;

        goto label5;

     label1:
        $r4 = r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: org.apache.lucene.util.BytesRef bottomValue>;

        if $r4 != null goto label3;

        $z0 = <org.apache.lucene.search.FieldComparator$TermOrdValComparator: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $r10 = r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: int[] ords>;

        $i14 = r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: int bottomSlot>;

        $i15 = $r10[$i14];

        $i19 = (int) -1;

        if $i15 == $i19 goto label2;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();

        throw $r13;

     label2:
        $i21 = (int) -1;

        r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: int bottomOrd> = $i21;

        r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: boolean bottomSameReader> = 1;

        $r9 = r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: int[] readerGen>;

        $i13 = r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: int bottomSlot>;

        $i12 = r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: int currentReaderGen>;

        $r9[$i13] = $i12;

        goto label5;

     label3:
        $r6 = r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: org.apache.lucene.index.SortedDocValues termsIndex>;

        $r5 = r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: org.apache.lucene.util.BytesRef bottomValue>;

        $i5 = virtualinvoke $r6.<org.apache.lucene.index.SortedDocValues: int lookupTerm(org.apache.lucene.util.BytesRef)>($r5);

        if $i5 >= 0 goto label4;

        $i10 = neg $i5;

        $i11 = $i10 - 2;

        r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: int bottomOrd> = $i11;

        r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: boolean bottomSameReader> = 0;

        goto label5;

     label4:
        r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: int bottomOrd> = $i5;

        r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: boolean bottomSameReader> = 1;

        $r7 = r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: int[] readerGen>;

        $i7 = r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: int bottomSlot>;

        $i6 = r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: int currentReaderGen>;

        $r7[$i7] = $i6;

        $r8 = r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: int[] ords>;

        $i9 = r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: int bottomSlot>;

        $i8 = r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: int bottomOrd>;

        $r8[$i9] = $i8;

     label5:
        return;
    }

    public org.apache.lucene.util.BytesRef value(int)
    {
        org.apache.lucene.util.BytesRef $r2;
        org.apache.lucene.search.FieldComparator$TermOrdValComparator r0;
        int i0;
        org.apache.lucene.util.BytesRef[] $r1;

        r0 := @this: org.apache.lucene.search.FieldComparator$TermOrdValComparator;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: org.apache.lucene.util.BytesRef[] values>;

        $r2 = $r1[i0];

        return $r2;
    }

    public volatile int compareDocToValue(int, java.lang.Object) throws java.io.IOException
    {
        org.apache.lucene.util.BytesRef $r2;
        org.apache.lucene.search.FieldComparator$TermOrdValComparator r0;
        int i0, $i1;
        java.lang.Object r1;

        r0 := @this: org.apache.lucene.search.FieldComparator$TermOrdValComparator;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = (org.apache.lucene.util.BytesRef) r1;

        $i1 = virtualinvoke r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: int compareDocToValue(int,org.apache.lucene.util.BytesRef)>(i0, $r2);

        return $i1;
    }

    public volatile java.lang.Object value(int)
    {
        int i0;
        org.apache.lucene.util.BytesRef $r1;
        org.apache.lucene.search.FieldComparator$TermOrdValComparator r0;

        r0 := @this: org.apache.lucene.search.FieldComparator$TermOrdValComparator;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.lucene.search.FieldComparator$TermOrdValComparator: org.apache.lucene.util.BytesRef value(int)>(i0);

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/search/FieldComparator;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.search.FieldComparator$TermOrdValComparator: boolean $assertionsDisabled> = $z1;

        return;
    }
}
