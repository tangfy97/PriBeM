public class org.apache.xpath.functions.FuncSubstringAfter extends org.apache.xpath.functions.Function2Args
{

    public void <init>()
    {
        org.apache.xpath.functions.FuncSubstringAfter r0;

        r0 := @this: org.apache.xpath.functions.FuncSubstringAfter;

        specialinvoke r0.<org.apache.xpath.functions.Function2Args: void <init>()>();

        return;
    }

    public org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.Expression $r2, $r5;
        org.apache.xml.utils.XMLString $r4, $r7, $r8;
        org.apache.xpath.objects.XString $r9;
        org.apache.xpath.XPathContext r1;
        int $i0, $i1, $i2, $i4;
        org.apache.xpath.objects.XObject $r3, $r6;
        org.apache.xpath.functions.FuncSubstringAfter r0;

        r0 := @this: org.apache.xpath.functions.FuncSubstringAfter;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        $r2 = r0.<org.apache.xpath.functions.FunctionOneArg: org.apache.xpath.Expression m_arg0>;

        $r3 = virtualinvoke $r2.<org.apache.xpath.Expression: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r1);

        $r4 = virtualinvoke $r3.<org.apache.xpath.objects.XObject: org.apache.xml.utils.XMLString xstr()>();

        $r5 = r0.<org.apache.xpath.functions.Function2Args: org.apache.xpath.Expression m_arg1>;

        $r6 = virtualinvoke $r5.<org.apache.xpath.Expression: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r1);

        $r7 = virtualinvoke $r6.<org.apache.xpath.objects.XObject: org.apache.xml.utils.XMLString xstr()>();

        $i0 = interfaceinvoke $r4.<org.apache.xml.utils.XMLString: int indexOf(org.apache.xml.utils.XMLString)>($r7);

        $i4 = (int) -1;

        if $i4 != $i0 goto label1;

        $r9 = <org.apache.xpath.objects.XString: org.apache.xpath.objects.XString EMPTYSTRING>;

        goto label2;

     label1:
        $i1 = interfaceinvoke $r7.<org.apache.xml.utils.XMLString: int length()>();

        $i2 = $i0 + $i1;

        $r8 = interfaceinvoke $r4.<org.apache.xml.utils.XMLString: org.apache.xml.utils.XMLString substring(int)>($i2);

        $r9 = (org.apache.xpath.objects.XString) $r8;

     label2:
        return $r9;
    }
}
