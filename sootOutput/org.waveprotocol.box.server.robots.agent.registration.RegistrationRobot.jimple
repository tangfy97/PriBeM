public final class org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot extends org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent
{
    private static final java.util.logging.Logger LOG;
    public static final java.lang.String ROBOT_URI;
    private final java.lang.String serverAdminId;
    private final org.waveprotocol.box.server.persistence.AccountStore accountStore;

    public void <init>(com.google.inject.Injector)
    {
        com.google.inject.Key $r3;
        com.google.inject.Injector r1;
        org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot r0;
        com.google.inject.name.Named $r2;
        java.lang.Object $r4, $r6;
        java.lang.String $r5;
        org.waveprotocol.box.server.persistence.AccountStore $r7;

        r0 := @this: org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot;

        r1 := @parameter0: com.google.inject.Injector;

        specialinvoke r0.<org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent: void <init>(com.google.inject.Injector)>(r1);

        $r2 = staticinvoke <com.google.inject.name.Names: com.google.inject.name.Named named(java.lang.String)>("admin_user");

        $r3 = staticinvoke <com.google.inject.Key: com.google.inject.Key get(java.lang.Class,java.lang.'annotation'.Annotation)>(class "Ljava/lang/String;", $r2);

        $r4 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(com.google.inject.Key)>($r3);

        $r5 = (java.lang.String) $r4;

        r0.<org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot: java.lang.String serverAdminId> = $r5;

        $r6 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/waveprotocol/box/server/persistence/AccountStore;");

        $r7 = (org.waveprotocol.box.server.persistence.AccountStore) $r6;

        r0.<org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot: org.waveprotocol.box.server.persistence.AccountStore accountStore> = $r7;

        return;
    }

    protected java.lang.String maybeExecuteCommand(org.apache.commons.cli.CommandLine, java.lang.String)
    {
        org.waveprotocol.wave.model.wave.ParticipantId $r14;
        org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot r1;
        boolean $z0, $z1;
        java.util.logging.Logger $r18, $r37, $r47, $r54;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r11, $r12, $r17, $r20, $r21, $r22, $r23, $r25, $r26, $r27, $r28, $r30, $r31, $r33, $r34, $r35, $r36, $r39, $r40, $r43, $r44, $r45, $r46, $r49, $r50;
        org.waveprotocol.wave.model.wave.InvalidParticipantAddress $r32;
        java.lang.Object[] $r16;
        java.lang.String[] $r4;
        org.waveprotocol.box.server.persistence.PersistenceException $r42;
        java.util.logging.Level $r19, $r38, $r48, $r53;
        org.apache.commons.cli.CommandLine r3;
        java.lang.String r0, $r2, r5, $r10, $r13, $r24, $r29, $r41, $r51, r55, r56, $r57;
        java.lang.IllegalArgumentException $r52;
        org.waveprotocol.box.server.persistence.AccountStore $r15;

        r1 := @this: org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot;

        r3 := @parameter0: org.apache.commons.cli.CommandLine;

        r0 := @parameter1: java.lang.String;

        $r2 = r1.<org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot: java.lang.String serverAdminId>;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not authorized to use ");

        $r29 = virtualinvoke r1.<org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot: java.lang.String getCommandName()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" command.");

        r55 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label9;

     label1:
        r56 = null;

     label2:
        $r4 = virtualinvoke r3.<org.apache.commons.cli.CommandLine: java.lang.String[] getArgs()>();

        r56 = $r4[1];

        r5 = $r4[2];

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r56);

        $z1 = virtualinvoke r56.<java.lang.String: boolean contains(java.lang.CharSequence)>("@");

        if $z1 == 0 goto label3;

        $r57 = "";

        goto label4;

     label3:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r10 = virtualinvoke r1.<org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot: java.lang.String getWaveDomain()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r57 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        r56 = $r13;

        $r14 = staticinvoke <org.waveprotocol.wave.model.wave.ParticipantId: org.waveprotocol.wave.model.wave.ParticipantId of(java.lang.String)>($r13);

        $r15 = r1.<org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot: org.waveprotocol.box.server.persistence.AccountStore accountStore>;

        staticinvoke <org.waveprotocol.box.server.robots.agent.RobotAgentUtil: void createUser(org.waveprotocol.box.server.persistence.AccountStore,org.waveprotocol.wave.model.wave.ParticipantId,java.lang.String)>($r15, $r14, r5);

        $r16 = newarray (java.lang.Object)[2];

        $r16[0] = $r13;

        $r16[1] = r5;

        r55 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Created user %s, the password is: %s\n", $r16);

        $r18 = <org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot: java.util.logging.Logger LOG>;

        $r19 = <java.util.logging.Level: java.util.logging.Level INFO>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Created user ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" by ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r19, $r24);

     label5:
        goto label9;

     label6:
        $r52 := @caughtexception;

        $r54 = <org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot: java.util.logging.Logger LOG>;

        $r53 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        virtualinvoke $r54.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r53, r56, $r52);

        r55 = virtualinvoke $r52.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        goto label9;

     label7:
        $r42 := @caughtexception;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create user: ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r56);

        r55 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        $r47 = <org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot: java.util.logging.Logger LOG>;

        $r48 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("userId: ");

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r56);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r47.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r48, $r51, $r42);

        goto label9;

     label8:
        $r32 := @caughtexception;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create user: ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r56);

        r55 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        $r37 = <org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot: java.util.logging.Logger LOG>;

        $r38 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("userId: ");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r56);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r37.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r38, $r41, $r32);

     label9:
        return r55;

        catch java.lang.IllegalArgumentException from label2 to label5 with label6;
        catch org.waveprotocol.box.server.persistence.PersistenceException from label2 to label5 with label7;
        catch org.waveprotocol.wave.model.wave.InvalidParticipantAddress from label2 to label5 with label8;
    }

    public int getMinNumOfArguments()
    {
        org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot r0;

        r0 := @this: org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot;

        return 2;
    }

    public int getMaxNumOfArguments()
    {
        org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot r0;

        r0 := @this: org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot;

        return 2;
    }

    public java.lang.String getCommandName()
    {
        org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot r0;

        r0 := @this: org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot;

        return "register";
    }

    public java.lang.String getFullDescription()
    {
        java.lang.StringBuilder $r0, $r3, $r4, $r6, $r7, $r9, $r10, $r12;
        org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot r1;
        java.lang.String $r2, $r5, $r8, $r11, $r13;

        r1 := @this: org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot: java.lang.String getShortDescription()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r5 = virtualinvoke r1.<org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot: java.lang.String getUsage()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nExample: ");

        $r8 = virtualinvoke r1.<org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot: java.lang.String getCommandName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r11 = virtualinvoke r1.<org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot: java.lang.String getExample()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public java.lang.String getCmdLineSyntax()
    {
        org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot r0;

        r0 := @this: org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot;

        return "[OPTIONS] [USERNAME] [PASSWORD]";
    }

    public java.lang.String getExample()
    {
        org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot r0;

        r0 := @this: org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot;

        return "user_id password";
    }

    public java.lang.String getShortDescription()
    {
        org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot r0;

        r0 := @this: org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot;

        return "The command allows the admin to register other users. Please make sure to use it in a wave without other participants. It is also advised to remove yourself from the wave when you finished creating users.";
    }

    public java.lang.String getRobotName()
    {
        org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot r0;

        r0 := @this: org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot;

        return "Registration-Bot";
    }

    public java.lang.String getRobotUri()
    {
        org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot r0;

        r0 := @this: org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot;

        return "/agent/registration/admin";
    }

    public java.lang.String getRobotId()
    {
        org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot r0;

        r0 := @this: org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot;

        return "registration-bot";
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        <org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot: java.lang.String ROBOT_URI> = "/agent/registration/admin";

        $r0 = class "Lorg/waveprotocol/box/server/robots/agent/registration/RegistrationRobot;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <org.waveprotocol.box.server.robots.agent.registration.RegistrationRobot: java.util.logging.Logger LOG> = $r2;

        return;
    }
}
