public class groovy.swing.factory.ActionFactory extends groovy.util.AbstractFactory implements groovy.lang.GroovyObject
{
    transient groovy.lang.MetaClass metaClass;
    public static java.lang.Long __timeStamp;
    public static java.lang.Long __timeStamp__239_neverHappen1239119696916;
    static java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter;
    static java.lang.Class class$org$codehaus$groovy$runtime$InvokerHelper;
    static java.lang.Class class$javax$swing$JComponent;
    static java.lang.Class class$javax$swing$Action;
    static java.lang.Class class$0;
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$java$lang$Object;
    static java.lang.Class class$java$lang$Character;
    static java.lang.Class class$java$lang$Boolean;
    static java.lang.Class class$groovy$swing$impl$DefaultAction;
    static java.lang.Class class$java$lang$StringBuffer;
    static java.lang.Class class$javax$swing$KeyStroke;
    static java.lang.Class class$java$lang$String;
    static java.lang.Class class$groovy$util$FactoryBuilderSupport;
    static java.lang.Class class$java$lang$Integer;
    static java.lang.Class class$groovy$lang$Closure;

    public void <init>()
    {
        groovy.lang.MetaClass $r9, $r11;
        java.lang.Object[] $r6;
        java.lang.Class $r1, r2, $r3, r4, $r5, $r12, $r13, $r14;
        java.lang.Object $r7, $r8, $r10;
        groovy.swing.factory.ActionFactory r0;

        r0 := @this: groovy.swing.factory.ActionFactory;

        specialinvoke r0.<groovy.util.AbstractFactory: void <init>()>();

        $r1 = <groovy.swing.factory.ActionFactory: java.lang.Class class$0>;

        if $r1 != null goto label1;

        $r12 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.ActionFactory");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$0> = $r12;

        goto label2;

     label1:
        $r12 = <groovy.swing.factory.ActionFactory: java.lang.Class class$0>;

     label2:
        r2 = $r12;

        $r3 = <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r3 != null goto label3;

        $r13 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$MetaClass> = $r13;

        goto label4;

     label3:
        $r13 = <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        r4 = $r13;

        $r5 = <groovy.swing.factory.ActionFactory: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

        if $r5 != null goto label5;

        $r14 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.runtime.ScriptBytecodeAdapter");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter> = $r14;

        goto label6;

     label5:
        $r14 = <groovy.swing.factory.ActionFactory: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

     label6:
        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r0;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeStaticMethodN(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])>(r2, $r14, "initMetaClass", $r6);

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r7, r4);

        $r9 = (groovy.lang.MetaClass) $r8;

        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r9, r4);

        $r11 = (groovy.lang.MetaClass) $r10;

        r0.<groovy.swing.factory.ActionFactory: groovy.lang.MetaClass metaClass> = $r11;

        return;
    }

    public java.lang.Object newInstance(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object, java.util.Map) throws java.lang.InstantiationException, java.lang.IllegalAccessException
    {
        java.util.Map r9;
        groovy.swing.factory.ActionFactory r24;
        boolean $z0, $z1;
        groovy.util.FactoryBuilderSupport r25;
        java.lang.Object[] $r10, $r16, $r30;
        javax.swing.Action $r23;
        java.lang.Class $r0, r1, $r2, $r3, $r5, $r8, $r12, $r18, $r20, $r22, $r26, $r27, $r28, $r29, $r31, $r32, $r34, $r36, $r37, $r38, $r39;
        java.lang.Object $r4, r6, r7, $r11, $r13, $r14, $r15, $r17, $r19, $r21, $r33, r35;

        r24 := @this: groovy.swing.factory.ActionFactory;

        r25 := @parameter0: groovy.util.FactoryBuilderSupport;

        r7 := @parameter1: java.lang.Object;

        r6 := @parameter2: java.lang.Object;

        r9 := @parameter3: java.util.Map;

        $r0 = <groovy.swing.factory.ActionFactory: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r26 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.ActionFactory");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$0> = $r26;

        goto label02;

     label01:
        $r26 = <groovy.swing.factory.ActionFactory: java.lang.Class class$0>;

     label02:
        r1 = $r26;

        $r2 = <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r27 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$MetaClass> = $r27;

        goto label04;

     label03:
        $r27 = <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r3 = <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$Action>;

        if $r3 != null goto label05;

        $r28 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("javax.swing.Action");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$Action> = $r28;

        goto label06;

     label05:
        $r28 = <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$Action>;

     label06:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(null, $r28);

        $r23 = (javax.swing.Action) $r4;

        $r5 = <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$util$FactoryBuilderSupport>;

        if $r5 != null goto label07;

        $r22 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("groovy.util.FactoryBuilderSupport");

        $r29 = $r22;

        <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$util$FactoryBuilderSupport> = $r22;

        goto label08;

     label07:
        $r29 = <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$util$FactoryBuilderSupport>;

     label08:
        $r30 = newarray (java.lang.Object)[3];

        $r30[0] = r6;

        $r30[1] = r7;

        $r8 = <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$Action>;

        if $r8 != null goto label09;

        $r31 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("javax.swing.Action");

        $r32 = $r31;

        <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$Action> = $r31;

        goto label10;

     label09:
        $r32 = <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$Action>;

     label10:
        $r30[2] = $r32;

        $r33 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r29, "checkValueIsTypeNotString", $r30);

        $z1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r33);

        if $z1 == 0 goto label13;

        $r20 = <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$Action>;

        if $r20 != null goto label11;

        $r34 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("javax.swing.Action");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$Action> = $r34;

        goto label12;

     label11:
        $r34 = <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$Action>;

     label12:
        $r21 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(r6, $r34);

        r35 = (javax.swing.Action) $r21;

        goto label19;

     label13:
        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r7;

        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r9, "get", $r10);

        $z0 = $r11 instanceof javax.swing.Action;

        if $z0 == 0 goto label16;

        $r16 = newarray (java.lang.Object)[1];

        $r16[0] = r7;

        $r17 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r9, "remove", $r16);

        $r18 = <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$Action>;

        if $r18 != null goto label14;

        $r36 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("javax.swing.Action");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$Action> = $r36;

        goto label15;

     label14:
        $r36 = <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$Action>;

     label15:
        $r19 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r17, $r36);

        r35 = (javax.swing.Action) $r19;

        goto label19;

     label16:
        $r12 = <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$swing$impl$DefaultAction>;

        if $r12 != null goto label17;

        $r37 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.impl.DefaultAction");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$swing$impl$DefaultAction> = $r37;

        goto label18;

     label17:
        $r37 = <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$swing$impl$DefaultAction>;

     label18:
        r35 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r37);

     label19:
        $r15 = r35;

        $r38 = <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$Object>;

        if $r38 != null goto label20;

        $r39 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$Object> = $r39;

        goto label21;

     label20:
        $r39 = <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$Object>;

     label21:
        $r13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r15, $r39);

        $r14 = (java.lang.Object) $r13;

        return $r14;
    }

    public boolean onHandleNodeAttributes(groovy.util.FactoryBuilderSupport, java.lang.Object, java.util.Map)
    {
        groovy.lang.Closure $r58;
        java.lang.Integer $r31, $r90;
        java.util.Map r3;
        groovy.swing.factory.ActionFactory r61;
        groovy.lang.MissingPropertyException $r60;
        javax.swing.KeyStroke $r49, r77;
        groovy.swing.impl.DefaultAction $r57;
        java.lang.Throwable $r59;
        java.lang.Object[] $r4, $r6, $r8, $r21, $r25, $r35, $r40, $r45, $r50, $r56, $r62, $r67;
        java.lang.String $r24, $r66;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        groovy.util.FactoryBuilderSupport r69;
        org.codehaus.groovy.runtime.wrappers.Wrapper $r32;
        java.lang.Boolean $r13, $r15, $r72;
        java.util.Iterator $r91, $r92;
        java.lang.Class $r0, r1, $r2, $r12, $r18, $r20, $r26, $r28, $r30, $r37, $r39, $r43, $r47, $r52, $r54, $r64, $r70, $r71, $r73, $r74, $r75, $r76, $r78, $r79, $r80, $r81, $r83, $r84, $r85, $r86, $r87, $r88, $r89;
        java.lang.Object $r5, $r7, $r9, $r10, $r11, $r14, $r16, $r17, $r19, r22, $r23, $r27, $r29, $r33, $r34, $r38, $r41, $r42, $r44, $r46, $r48, $r51, $r53, $r55, $r63, $r65, $r68, r82;

        r61 := @this: groovy.swing.factory.ActionFactory;

        r69 := @parameter0: groovy.util.FactoryBuilderSupport;

        r22 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.util.Map;

        $r0 = <groovy.swing.factory.ActionFactory: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r70 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.ActionFactory");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$0> = $r70;

        goto label02;

     label01:
        $r70 = <groovy.swing.factory.ActionFactory: java.lang.Class class$0>;

     label02:
        r1 = $r70;

        $r2 = <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r71 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$MetaClass> = $r71;

        goto label04;

     label03:
        $r71 = <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = "closure";

        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "get", $r4);

        $z0 = $r5 instanceof groovy.lang.Closure;

        if $z0 == 0 goto label05;

        $z6 = r22 instanceof groovy.swing.impl.DefaultAction;

        if $z6 == 0 goto label05;

        $r72 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label06;

     label05:
        $r72 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label06:
        $z7 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r72);

        if $z7 == 0 goto label11;

        $r50 = newarray (java.lang.Object)[1];

        $r50[0] = "closure";

        $r51 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "remove", $r50);

        $r52 = <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$Closure>;

        if $r52 != null goto label07;

        $r73 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.Closure");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$Closure> = $r73;

        goto label08;

     label07:
        $r73 = <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$Closure>;

     label08:
        $r53 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r51, $r73);

        $r58 = (groovy.lang.Closure) $r53;

        $r54 = <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$swing$impl$DefaultAction>;

        if $r54 != null goto label09;

        $r74 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.impl.DefaultAction");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$swing$impl$DefaultAction> = $r74;

        goto label10;

     label09:
        $r74 = <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$swing$impl$DefaultAction>;

     label10:
        $r55 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(r22, $r74);

        $r57 = (groovy.swing.impl.DefaultAction) $r55;

        $r56 = newarray (java.lang.Object)[1];

        $r56[0] = $r58;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r57, "setClosure", $r56);

        goto label11;

     label11:
        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = "accelerator";

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "remove", $r6);

        $z1 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>($r7, null);

        if $z1 == 0 goto label24;

        $r37 = <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$KeyStroke>;

        if $r37 != null goto label12;

        $r75 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("javax.swing.KeyStroke");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$KeyStroke> = $r75;

        goto label13;

     label12:
        $r75 = <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$KeyStroke>;

     label13:
        $r38 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(null, $r75);

        $r49 = (javax.swing.KeyStroke) $r38;

        $z5 = $r7 instanceof javax.swing.KeyStroke;

        if $z5 == 0 goto label16;

        $r47 = <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$KeyStroke>;

        if $r47 != null goto label14;

        $r76 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("javax.swing.KeyStroke");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$KeyStroke> = $r76;

        goto label15;

     label14:
        $r76 = <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$KeyStroke>;

     label15:
        $r48 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r7, $r76);

        r77 = (javax.swing.KeyStroke) $r48;

        goto label21;

     label16:
        $r39 = <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$KeyStroke>;

        if $r39 != null goto label17;

        $r78 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("javax.swing.KeyStroke");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$KeyStroke> = $r78;

        goto label18;

     label17:
        $r78 = <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$KeyStroke>;

     label18:
        $r40 = newarray (java.lang.Object)[1];

        $r41 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r7, "toString");

        $r40[0] = $r41;

        $r42 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r78, "getKeyStroke", $r40);

        $r43 = <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$KeyStroke>;

        if $r43 != null goto label19;

        $r79 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("javax.swing.KeyStroke");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$KeyStroke> = $r79;

        goto label20;

     label19:
        $r79 = <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$KeyStroke>;

     label20:
        $r44 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r42, $r79);

        r77 = (javax.swing.KeyStroke) $r44;

     label21:
        $r45 = newarray (java.lang.Object)[2];

        $r80 = <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$Action>;

        if $r80 != null goto label22;

        $r81 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("javax.swing.Action");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$Action> = $r81;

        goto label23;

     label22:
        $r81 = <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$Action>;

     label23:
        $r46 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r81, "ACCELERATOR_KEY");

        $r45[0] = $r46;

        $r45[1] = r77;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r22, "putValue", $r45);

        goto label24;

     label24:
        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = "mnemonic";

        $r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "remove", $r8);

        r82 = $r9;

        $z2 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>($r9, null);

        if $z2 == 0 goto label34;

        $z4 = $r9 instanceof java.lang.Number;

        if $z4 != 0 goto label25;

        $z8 = 1;

        goto label26;

     label25:
        $z8 = 0;

     label26:
        if $z8 == 0 goto label27;

        $r34 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r9, "toString");

        $r35 = newarray (java.lang.Object)[1];

        $r90 = new java.lang.Integer;

        specialinvoke $r90.<java.lang.Integer: void <init>(int)>(0);

        $r35[0] = $r90;

        r82 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r34, "charAt", $r35);

        goto label27;

     label27:
        $r25 = newarray (java.lang.Object)[2];

        $r26 = <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$Action>;

        if $r26 != null goto label28;

        $r83 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("javax.swing.Action");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$Action> = $r83;

        goto label29;

     label28:
        $r83 = <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$Action>;

     label29:
        $r27 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r83, "MNEMONIC_KEY");

        $r25[0] = $r27;

        $r33 = r82;

        $r28 = <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$Integer>;

        if $r28 != null goto label30;

        $r84 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("java.lang.Integer");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$Integer> = $r84;

        goto label31;

     label30:
        $r84 = <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$Integer>;

     label31:
        $r29 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object asType(java.lang.Object,java.lang.Class)>($r33, $r84);

        $r31 = (java.lang.Integer) $r29;

        $r30 = <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$Integer>;

        if $r30 != null goto label32;

        $r85 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("java.lang.Integer");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$Integer> = $r85;

        goto label33;

     label32:
        $r85 = <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$Integer>;

     label33:
        $r32 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: org.codehaus.groovy.runtime.wrappers.Wrapper createPojoWrapper(java.lang.Object,java.lang.Class)>($r31, $r85);

        $r25[1] = $r32;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r22, "putValue", $r25);

        goto label34;

     label34:
        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r3, "entrySet");

        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r10, "iterator");

     label35:
        $r91 = (java.util.Iterator) $r11;

        $z9 = interfaceinvoke $r91.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label47;

        $r92 = (java.util.Iterator) $r11;

        $r16 = interfaceinvoke $r92.<java.util.Iterator: java.lang.Object next()>();

        $r17 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r16, "getKey");

        $r18 = <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$String>;

        if $r18 != null goto label36;

        $r86 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$String> = $r86;

        goto label37;

     label36:
        $r86 = <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$String>;

     label37:
        $r19 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r17, $r86);

        $r24 = (java.lang.String) $r19;

     label38:
        $r20 = <groovy.swing.factory.ActionFactory: java.lang.Class class$org$codehaus$groovy$runtime$InvokerHelper>;

        if $r20 != null goto label39;

        $r87 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.runtime.InvokerHelper");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$org$codehaus$groovy$runtime$InvokerHelper> = $r87;

        goto label40;

     label39:
        $r87 = <groovy.swing.factory.ActionFactory: java.lang.Class class$org$codehaus$groovy$runtime$InvokerHelper>;

     label40:
        $r21 = newarray (java.lang.Object)[3];

        $r21[0] = r22;

        $r21[1] = $r24;

        $r23 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r16, "getValue");

        $r21[2] = $r23;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r87, "setProperty", $r21);

        goto label44;

     label41:
        $r60 := @caughtexception;

        $r62 = newarray (java.lang.Object)[1];

        $r62[0] = $r24;

        $r63 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r61, "capitalize", $r62);

        $r64 = <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$String>;

        if $r64 != null goto label42;

        $r88 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$String> = $r88;

        goto label43;

     label42:
        $r88 = <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$String>;

     label43:
        $r65 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r63, $r88);

        $r66 = (java.lang.String) $r65;

        $r67 = newarray (java.lang.Object)[2];

        $r67[0] = $r66;

        $r68 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r16, "getValue");

        $r67[1] = $r68;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r22, "putValue", $r67);

        goto label44;

     label44:
        goto label46;

     label45:
        $r59 := @caughtexception;

        throw $r59;

     label46:
        goto label35;

     label47:
        $r13 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r12 = <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$Boolean>;

        if $r12 != null goto label48;

        $r89 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("java.lang.Boolean");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$Boolean> = $r89;

        goto label49;

     label48:
        $r89 = <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$Boolean>;

     label49:
        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r13, $r89);

        $r15 = (java.lang.Boolean) $r14;

        $z3 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r15);

        return $z3;

        catch groovy.lang.MissingPropertyException from label38 to label41 with label41;
        catch java.lang.Throwable from label38 to label44 with label45;
    }

    public void setParent(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object)
    {
        groovy.swing.factory.ActionFactory r31;
        boolean $z0, $z1, $z2, $z3;
        groovy.util.FactoryBuilderSupport r32;
        javax.swing.KeyStroke r38;
        java.lang.Throwable $r29;
        java.lang.Object[] $r4, $r7, $r17, $r19, $r40;
        org.codehaus.groovy.runtime.wrappers.Wrapper $r48;
        java.lang.String $r20, $r44;
        javax.swing.JComponent $r28;
        java.lang.RuntimeException $r30;
        java.lang.Class $r0, r1, $r2, $r3, $r9, $r11, $r14, $r21, $r23, $r24, $r27, $r33, $r34, $r35, $r36, $r37, $r39, $r41, $r42, $r45, $r46, $r47, $r49, $r50, $r51, $r52;
        java.lang.Object r5, r6, $r8, $r10, $r12, $r13, $r15, $r16, $r18, $r22, $r25, $r26, $r43;

        r31 := @this: groovy.swing.factory.ActionFactory;

        r32 := @parameter0: groovy.util.FactoryBuilderSupport;

        r5 := @parameter1: java.lang.Object;

        r6 := @parameter2: java.lang.Object;

        $r0 = <groovy.swing.factory.ActionFactory: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r33 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.ActionFactory");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$0> = $r33;

        goto label02;

     label01:
        $r33 = <groovy.swing.factory.ActionFactory: java.lang.Class class$0>;

     label02:
        r1 = $r33;

        $r2 = <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r34 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$MetaClass> = $r34;

        goto label04;

     label03:
        $r34 = <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r3 = <groovy.swing.factory.ActionFactory: java.lang.Class class$org$codehaus$groovy$runtime$InvokerHelper>;

        if $r3 != null goto label05;

        $r35 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.runtime.InvokerHelper");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$org$codehaus$groovy$runtime$InvokerHelper> = $r35;

        goto label06;

     label05:
        $r35 = <groovy.swing.factory.ActionFactory: java.lang.Class class$org$codehaus$groovy$runtime$InvokerHelper>;

     label06:
        $r4 = newarray (java.lang.Object)[3];

        $r4[0] = r5;

        $r4[1] = "action";

        $r4[2] = r6;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r35, "setProperty", $r4);

        goto label08;

     label07:
        $r30 := @caughtexception;

        goto label08;

     label08:
        goto label10;

     label09:
        $r29 := @caughtexception;

        throw $r29;

     label10:
        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = "KeyStroke";

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r6, "getValue", $r7);

        $z0 = r5 instanceof javax.swing.JComponent;

        if $z0 == 0 goto label30;

        $r9 = <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$JComponent>;

        if $r9 != null goto label11;

        $r36 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("javax.swing.JComponent");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$JComponent> = $r36;

        goto label12;

     label11:
        $r36 = <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$JComponent>;

     label12:
        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(r5, $r36);

        $r28 = (javax.swing.JComponent) $r10;

        $r11 = <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$KeyStroke>;

        if $r11 != null goto label13;

        $r37 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("javax.swing.KeyStroke");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$KeyStroke> = $r37;

        goto label14;

     label13:
        $r37 = <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$KeyStroke>;

     label14:
        $r12 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(null, $r37);

        r38 = (javax.swing.KeyStroke) $r12;

        $z1 = $r8 instanceof java.lang.String;

        if $z1 == 0 goto label23;

        $r23 = <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$KeyStroke>;

        if $r23 != null goto label15;

        $r27 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("javax.swing.KeyStroke");

        $r39 = $r27;

        <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$KeyStroke> = $r27;

        goto label16;

     label15:
        $r39 = <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$KeyStroke>;

     label16:
        $r40 = newarray (java.lang.Object)[1];

        $r24 = <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$String>;

        if $r24 != null goto label17;

        $r41 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("java.lang.String");

        $r42 = $r41;

        <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$String> = $r41;

        goto label18;

     label17:
        $r42 = <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$String>;

     label18:
        $r43 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r8, $r42);

        $r44 = (java.lang.String) $r43;

        $r45 = <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$String>;

        if $r45 != null goto label19;

        $r46 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("java.lang.String");

        $r47 = $r46;

        <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$String> = $r46;

        goto label20;

     label19:
        $r47 = <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$String>;

     label20:
        $r48 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: org.codehaus.groovy.runtime.wrappers.Wrapper createPojoWrapper(java.lang.Object,java.lang.Class)>($r44, $r47);

        $r40[0] = $r48;

        $r25 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r39, "getKeyStroke", $r40);

        $r49 = <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$KeyStroke>;

        if $r49 != null goto label21;

        $r50 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("javax.swing.KeyStroke");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$KeyStroke> = $r50;

        goto label22;

     label21:
        $r50 = <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$KeyStroke>;

     label22:
        $r26 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r25, $r50);

        r38 = (javax.swing.KeyStroke) $r26;

        goto label26;

     label23:
        $z2 = $r8 instanceof javax.swing.KeyStroke;

        if $z2 == 0 goto label26;

        $r21 = <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$KeyStroke>;

        if $r21 != null goto label24;

        $r51 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("javax.swing.KeyStroke");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$KeyStroke> = $r51;

        goto label25;

     label24:
        $r51 = <groovy.swing.factory.ActionFactory: java.lang.Class class$javax$swing$KeyStroke>;

     label25:
        $r22 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r8, $r51);

        r38 = (javax.swing.KeyStroke) $r22;

        goto label26;

     label26:
        $z3 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>(r38, null);

        if $z3 == 0 goto label29;

        $r13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r6, "toString");

        $r14 = <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$String>;

        if $r14 != null goto label27;

        $r52 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$String> = $r52;

        goto label28;

     label27:
        $r52 = <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$String>;

     label28:
        $r15 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r13, $r52);

        $r20 = (java.lang.String) $r15;

        $r16 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r28, "getInputMap");

        $r17 = newarray (java.lang.Object)[2];

        $r17[0] = r38;

        $r17[1] = $r20;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r16, "put", $r17);

        $r18 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r28, "getActionMap");

        $r19 = newarray (java.lang.Object)[2];

        $r19[0] = $r20;

        $r19[1] = r6;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r18, "put", $r19);

        goto label29;

     label29:
        goto label30;

     label30:
        return;

        catch java.lang.RuntimeException from label04 to label07 with label07;
        catch java.lang.Throwable from label04 to label08 with label09;
    }

    public java.lang.String capitalize(java.lang.String)
    {
        java.lang.Integer $r5, $r22;
        java.lang.Character $r31;
        groovy.swing.factory.ActionFactory r32;
        boolean $z0;
        java.lang.Object[] $r4, $r10, $r13, $r16, $r18, $r20, $r21;
        java.lang.String r3, $r27, $r30;
        java.lang.Class $r0, r1, $r2, $r7, $r9, $r12, $r17, $r25, $r28, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40;
        java.lang.Object $r6, $r8, $r11, $r14, $r15, $r19, $r23, $r24, $r26, $r29;

        r32 := @this: groovy.swing.factory.ActionFactory;

        r3 := @parameter0: java.lang.String;

        $r0 = <groovy.swing.factory.ActionFactory: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r33 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.ActionFactory");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$0> = $r33;

        goto label02;

     label01:
        $r33 = <groovy.swing.factory.ActionFactory: java.lang.Class class$0>;

     label02:
        r1 = $r33;

        $r2 = <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r34 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$MetaClass> = $r34;

        goto label04;

     label03:
        $r34 = <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r4 = newarray (java.lang.Object)[1];

        $r5 = new java.lang.Integer;

        specialinvoke $r5.<java.lang.Integer: void <init>(int)>(0);

        $r4[0] = $r5;

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "charAt", $r4);

        $r7 = <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$Character>;

        if $r7 != null goto label05;

        $r35 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("java.lang.Character");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$Character> = $r35;

        goto label06;

     label05:
        $r35 = <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$Character>;

     label06:
        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r6, $r35);

        $r31 = (java.lang.Character) $r8;

        $r9 = <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$Character>;

        if $r9 != null goto label07;

        $r36 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("java.lang.Character");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$Character> = $r36;

        goto label08;

     label07:
        $r36 = <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$Character>;

     label08:
        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = $r31;

        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r36, "isUpperCase", $r10);

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r11);

        if $z0 == 0 goto label11;

        $r28 = <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$String>;

        if $r28 != null goto label09;

        $r37 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$String> = $r37;

        goto label10;

     label09:
        $r37 = <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$String>;

     label10:
        $r29 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(r3, $r37);

        $r30 = (java.lang.String) $r29;

        return $r30;

     label11:
        $r12 = <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$StringBuffer>;

        if $r12 != null goto label12;

        $r38 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("java.lang.StringBuffer");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$StringBuffer> = $r38;

        goto label13;

     label12:
        $r38 = <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$StringBuffer>;

     label13:
        $r13 = newarray (java.lang.Object)[1];

        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r3, "length");

        $r13[0] = $r14;

        $r15 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r38, $r13);

        $r16 = newarray (java.lang.Object)[1];

        $r17 = <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$Character>;

        if $r17 != null goto label14;

        $r39 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("java.lang.Character");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$Character> = $r39;

        goto label15;

     label14:
        $r39 = <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$Character>;

     label15:
        $r18 = newarray (java.lang.Object)[1];

        $r18[0] = $r31;

        $r19 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r39, "toUpperCase", $r18);

        $r16[0] = $r19;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r15, "append", $r16);

        $r20 = newarray (java.lang.Object)[1];

        $r21 = newarray (java.lang.Object)[1];

        $r22 = new java.lang.Integer;

        specialinvoke $r22.<java.lang.Integer: void <init>(int)>(1);

        $r21[0] = $r22;

        $r23 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "substring", $r21);

        $r20[0] = $r23;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r15, "append", $r20);

        $r24 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r15, "toString");

        $r25 = <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$String>;

        if $r25 != null goto label16;

        $r40 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$String> = $r40;

        goto label17;

     label16:
        $r40 = <groovy.swing.factory.ActionFactory: java.lang.Class class$java$lang$String>;

     label17:
        $r26 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r24, $r40);

        $r27 = (java.lang.String) $r26;

        return $r27;
    }

    public groovy.lang.MetaClass getMetaClass()
    {
        java.lang.Object[] $r10;
        groovy.swing.factory.ActionFactory r4;
        boolean $z0;
        groovy.lang.MetaClass $r5, $r6, $r8, $r13, $r15;
        java.lang.Class $r0, r1, $r2, r3, $r9, $r16, $r17, $r18;
        java.lang.Object $r7, $r11, $r12, $r14;

        r4 := @this: groovy.swing.factory.ActionFactory;

        $r0 = <groovy.swing.factory.ActionFactory: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r16 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.ActionFactory");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$0> = $r16;

        goto label2;

     label1:
        $r16 = <groovy.swing.factory.ActionFactory: java.lang.Class class$0>;

     label2:
        r1 = $r16;

        $r2 = <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r17 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$MetaClass> = $r17;

        goto label4;

     label3:
        $r17 = <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        r3 = $r17;

        $r5 = r4.<groovy.swing.factory.ActionFactory: groovy.lang.MetaClass metaClass>;

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>($r5, null);

        if $z0 == 0 goto label7;

        $r9 = <groovy.swing.factory.ActionFactory: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

        if $r9 != null goto label5;

        $r18 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.runtime.ScriptBytecodeAdapter");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter> = $r18;

        goto label6;

     label5:
        $r18 = <groovy.swing.factory.ActionFactory: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

     label6:
        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r4;

        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeStaticMethodN(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])>(r1, $r18, "initMetaClass", $r10);

        $r12 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r11, r3);

        $r13 = (groovy.lang.MetaClass) $r12;

        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r13, r3);

        $r15 = (groovy.lang.MetaClass) $r14;

        r4.<groovy.swing.factory.ActionFactory: groovy.lang.MetaClass metaClass> = $r15;

        goto label7;

     label7:
        $r6 = r4.<groovy.swing.factory.ActionFactory: groovy.lang.MetaClass metaClass>;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r6, r3);

        $r8 = (groovy.lang.MetaClass) $r7;

        return $r8;
    }

    public void setMetaClass(groovy.lang.MetaClass)
    {
        groovy.lang.MetaClass r3;
        java.lang.Class $r0, $r1, $r4, $r5;
        groovy.swing.factory.ActionFactory r2;

        r2 := @this: groovy.swing.factory.ActionFactory;

        r3 := @parameter0: groovy.lang.MetaClass;

        $r0 = <groovy.swing.factory.ActionFactory: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r4 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.ActionFactory");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$0> = $r4;

        goto label2;

     label1:
        $r4 = <groovy.swing.factory.ActionFactory: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r5 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$MetaClass> = $r5;

        goto label4;

     label3:
        $r5 = <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        r2.<groovy.swing.factory.ActionFactory: groovy.lang.MetaClass metaClass> = r3;

        return;
    }

    public java.lang.Object invokeMethod(java.lang.String, java.lang.Object)
    {
        groovy.lang.MetaClass $r3;
        java.lang.Class $r0, $r1, $r7, $r8;
        java.lang.Object r5, $r6;
        groovy.swing.factory.ActionFactory r2;
        java.lang.String r4;

        r2 := @this: groovy.swing.factory.ActionFactory;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Object;

        $r0 = <groovy.swing.factory.ActionFactory: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.ActionFactory");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <groovy.swing.factory.ActionFactory: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = virtualinvoke r2.<groovy.swing.factory.ActionFactory: groovy.lang.MetaClass getMetaClass()>();

        $r6 = interfaceinvoke $r3.<groovy.lang.MetaClass: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object)>(r2, r4, r5);

        return $r6;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        groovy.lang.MetaClass $r3;
        java.lang.Class $r0, $r1, $r6, $r7;
        java.lang.Object $r5;
        groovy.swing.factory.ActionFactory r2;
        java.lang.String r4;

        r2 := @this: groovy.swing.factory.ActionFactory;

        r4 := @parameter0: java.lang.String;

        $r0 = <groovy.swing.factory.ActionFactory: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.ActionFactory");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <groovy.swing.factory.ActionFactory: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = virtualinvoke r2.<groovy.swing.factory.ActionFactory: groovy.lang.MetaClass getMetaClass()>();

        $r5 = interfaceinvoke $r3.<groovy.lang.MetaClass: java.lang.Object getProperty(java.lang.Object,java.lang.String)>(r2, r4);

        return $r5;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        groovy.lang.MetaClass $r3;
        java.lang.Class $r0, $r1, $r6, $r7;
        java.lang.Object r5;
        groovy.swing.factory.ActionFactory r2;
        java.lang.String r4;

        r2 := @this: groovy.swing.factory.ActionFactory;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Object;

        $r0 = <groovy.swing.factory.ActionFactory: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.ActionFactory");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <groovy.swing.factory.ActionFactory: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = virtualinvoke r2.<groovy.swing.factory.ActionFactory: groovy.lang.MetaClass getMetaClass()>();

        interfaceinvoke $r3.<groovy.lang.MetaClass: void setProperty(java.lang.Object,java.lang.String,java.lang.Object)>(r2, r4, r5);

        return;
    }

    static void <clinit>()
    {
        java.lang.Long $r2, $r3, $r4, $r5;
        java.lang.Class $r0, $r1, $r6, $r7;

        $r0 = <groovy.swing.factory.ActionFactory: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.ActionFactory");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <groovy.swing.factory.ActionFactory: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <groovy.swing.factory.ActionFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <groovy.swing.factory.ActionFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r2 = new java.lang.Long;

        specialinvoke $r2.<java.lang.Long: void <init>(long)>(1239119696916L);

        $r3 = (java.lang.Long) $r2;

        <groovy.swing.factory.ActionFactory: java.lang.Long __timeStamp> = $r3;

        $r4 = new java.lang.Long;

        specialinvoke $r4.<java.lang.Long: void <init>(long)>(0L);

        $r5 = (java.lang.Long) $r4;

        <groovy.swing.factory.ActionFactory: java.lang.Long __timeStamp__239_neverHappen1239119696916> = $r5;

        return;
    }

    void super$1$wait()
    {
        groovy.swing.factory.ActionFactory r0;

        r0 := @this: groovy.swing.factory.ActionFactory;

        specialinvoke r0.<java.lang.Object: void wait()>();

        return;
    }

    java.lang.String super$1$toString()
    {
        groovy.swing.factory.ActionFactory r0;
        java.lang.String $r1;

        r0 := @this: groovy.swing.factory.ActionFactory;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    boolean super$2$isLeaf()
    {
        groovy.swing.factory.ActionFactory r0;
        boolean $z0;

        r0 := @this: groovy.swing.factory.ActionFactory;

        $z0 = specialinvoke r0.<groovy.util.AbstractFactory: boolean isLeaf()>();

        return $z0;
    }

    void super$2$setChild(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object)
    {
        groovy.util.FactoryBuilderSupport r1;
        java.lang.Object r2, r3;
        groovy.swing.factory.ActionFactory r0;

        r0 := @this: groovy.swing.factory.ActionFactory;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<groovy.util.AbstractFactory: void setChild(groovy.util.FactoryBuilderSupport,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return;
    }

    void super$1$wait(long, int)
    {
        int i1;
        long l0;
        groovy.swing.factory.ActionFactory r0;

        r0 := @this: groovy.swing.factory.ActionFactory;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void wait(long,int)>(l0, i1);

        return;
    }

    void super$1$notify()
    {
        groovy.swing.factory.ActionFactory r0;

        r0 := @this: groovy.swing.factory.ActionFactory;

        specialinvoke r0.<java.lang.Object: void notify()>();

        return;
    }

    void super$2$onNodeCompleted(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object)
    {
        groovy.util.FactoryBuilderSupport r1;
        java.lang.Object r2, r3;
        groovy.swing.factory.ActionFactory r0;

        r0 := @this: groovy.swing.factory.ActionFactory;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<groovy.util.AbstractFactory: void onNodeCompleted(groovy.util.FactoryBuilderSupport,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return;
    }

    java.lang.Class super$1$getClass()
    {
        java.lang.Class $r1;
        groovy.swing.factory.ActionFactory r0;

        r0 := @this: groovy.swing.factory.ActionFactory;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        return $r1;
    }

    void super$1$notifyAll()
    {
        groovy.swing.factory.ActionFactory r0;

        r0 := @this: groovy.swing.factory.ActionFactory;

        specialinvoke r0.<java.lang.Object: void notifyAll()>();

        return;
    }

    void super$1$finalize()
    {
        groovy.swing.factory.ActionFactory r0;

        r0 := @this: groovy.swing.factory.ActionFactory;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }

    void super$1$wait(long)
    {
        long l0;
        groovy.swing.factory.ActionFactory r0;

        r0 := @this: groovy.swing.factory.ActionFactory;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void wait(long)>(l0);

        return;
    }

    void super$2$setParent(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object)
    {
        groovy.util.FactoryBuilderSupport r1;
        java.lang.Object r2, r3;
        groovy.swing.factory.ActionFactory r0;

        r0 := @this: groovy.swing.factory.ActionFactory;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<groovy.util.AbstractFactory: void setParent(groovy.util.FactoryBuilderSupport,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return;
    }

    boolean super$2$onHandleNodeAttributes(groovy.util.FactoryBuilderSupport, java.lang.Object, java.util.Map)
    {
        groovy.util.FactoryBuilderSupport r1;
        java.util.Map r3;
        java.lang.Object r2;
        groovy.swing.factory.ActionFactory r0;
        boolean $z0;

        r0 := @this: groovy.swing.factory.ActionFactory;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.util.Map;

        $z0 = specialinvoke r0.<groovy.util.AbstractFactory: boolean onHandleNodeAttributes(groovy.util.FactoryBuilderSupport,java.lang.Object,java.util.Map)>(r1, r2, r3);

        return $z0;
    }

    java.lang.Object super$1$clone()
    {
        java.lang.Object $r1;
        groovy.swing.factory.ActionFactory r0;

        r0 := @this: groovy.swing.factory.ActionFactory;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        return $r1;
    }

    boolean super$1$equals(java.lang.Object)
    {
        java.lang.Object r1;
        groovy.swing.factory.ActionFactory r0;
        boolean $z0;

        r0 := @this: groovy.swing.factory.ActionFactory;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    int super$1$hashCode()
    {
        int $i0;
        groovy.swing.factory.ActionFactory r0;

        r0 := @this: groovy.swing.factory.ActionFactory;

        $i0 = specialinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
