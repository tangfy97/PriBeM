public abstract class org.springframework.validation.BindingResultUtils extends java.lang.Object
{

    public void <init>()
    {
        org.springframework.validation.BindingResultUtils r0;

        r0 := @this: org.springframework.validation.BindingResultUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.springframework.validation.BindingResult getBindingResult(java.util.Map, java.lang.String)
    {
        java.lang.IllegalStateException $r9;
        org.springframework.validation.BindingResult $r8;
        java.util.Map r0;
        java.lang.StringBuilder $r2, $r5, $r10, $r11;
        java.lang.Object $r7;
        java.lang.String r1, $r3, $r4, $r6, $r12;
        boolean $z0;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.String;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "Model map must not be null");

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "Name must not be null");

        $r2 = new java.lang.StringBuilder;

        $r3 = <org.springframework.validation.BindingResult: java.lang.String MODEL_KEY_PREFIX>;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        if $r7 == null goto label1;

        $z0 = $r7 instanceof org.springframework.validation.BindingResult;

        if $z0 != 0 goto label1;

        $r9 = new java.lang.IllegalStateException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("BindingResult attribute is not of type BindingResult: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r9;

     label1:
        $r8 = (org.springframework.validation.BindingResult) $r7;

        return $r8;
    }

    public static org.springframework.validation.BindingResult getRequiredBindingResult(java.util.Map, java.lang.String)
    {
        java.lang.IllegalStateException $r3;
        org.springframework.validation.BindingResult $r2;
        java.util.Map r0;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String r1, $r7;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.springframework.validation.BindingResultUtils: org.springframework.validation.BindingResult getBindingResult(java.util.Map,java.lang.String)>(r0, r1);

        if $r2 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("No BindingResult attribute found for name \'");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'- have you exposed the correct model?");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label1:
        return $r2;
    }
}
