public class org.apache.pdfbox.util.PDFTextStripper extends org.apache.pdfbox.util.PDFStreamEngine
{
    private static final java.lang.String thisClassName;
    private static float DEFAULT_INDENT_THRESHOLD;
    private static float DEFAULT_DROP_THRESHOLD;
    protected final java.lang.String systemLineSeparator;
    private java.lang.String lineSeparator;
    private java.lang.String pageSeparator;
    private java.lang.String wordSeparator;
    private java.lang.String paragraphStart;
    private java.lang.String paragraphEnd;
    private java.lang.String pageStart;
    private java.lang.String pageEnd;
    private java.lang.String articleStart;
    private java.lang.String articleEnd;
    private int currentPageNo;
    private int startPage;
    private int endPage;
    private org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem startBookmark;
    private int startBookmarkPageNumber;
    private org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem endBookmark;
    private int endBookmarkPageNumber;
    private boolean suppressDuplicateOverlappingText;
    private boolean shouldSeparateByBeads;
    private boolean sortByPosition;
    private boolean addMoreFormatting;
    private float indentThreshold;
    private float dropThreshold;
    private float spacingTolerance;
    private float averageCharTolerance;
    private java.util.List pageArticles;
    protected java.util.Vector charactersByArticle;
    private java.util.Map characterListMapping;
    protected java.lang.String outputEncoding;
    protected org.apache.pdfbox.pdmodel.PDDocument document;
    protected java.io.Writer output;
    private org.apache.pdfbox.util.TextNormalize normalize;
    private boolean inParagraph;
    private static final float ENDOFLASTTEXTX_RESET_VALUE;
    private static final float MAXYFORLINE_RESET_VALUE;
    private static final float EXPECTEDSTARTOFNEXTWORDX_RESET_VALUE;
    private static final float MAXHEIGHTFORLINE_RESET_VALUE;
    private static final float MINYTOPFORLINE_RESET_VALUE;
    private static final float LASTWORDSPACING_RESET_VALUE;
    private static final java.lang.String[] LIST_ITEM_EXPRESSIONS;
    private java.util.List listOfPatterns;

    public void <init>() throws java.io.IOException
    {
        java.util.Properties $r1;
        java.util.HashMap $r11;
        org.apache.pdfbox.util.TextNormalize $r12;
        java.util.Vector $r10;
        org.apache.pdfbox.util.PDFTextStripper r0;
        int $i1, $i3;
        float $f0, $f1;
        java.lang.String $r2, $r3, $r4, $r5, $r9;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        $r1 = staticinvoke <org.apache.pdfbox.util.ResourceLoader: java.util.Properties loadProperties(java.lang.String,boolean)>("org/apache/pdfbox/resources/PDFTextStripper.properties", 1);

        specialinvoke r0.<org.apache.pdfbox.util.PDFStreamEngine: void <init>(java.util.Properties)>($r1);

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String systemLineSeparator> = $r2;

        $r3 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String systemLineSeparator>;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String lineSeparator> = $r3;

        $r4 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String systemLineSeparator>;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String pageSeparator> = $r4;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String wordSeparator> = " ";

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String paragraphStart> = "";

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String paragraphEnd> = "";

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String pageStart> = "";

        $r5 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String pageSeparator>;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String pageEnd> = $r5;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String articleStart> = "";

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String articleEnd> = "";

        r0.<org.apache.pdfbox.util.PDFTextStripper: int currentPageNo> = 0;

        r0.<org.apache.pdfbox.util.PDFTextStripper: int startPage> = 1;

        r0.<org.apache.pdfbox.util.PDFTextStripper: int endPage> = 2147483647;

        r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem startBookmark> = null;

        $i1 = (int) -1;

        r0.<org.apache.pdfbox.util.PDFTextStripper: int startBookmarkPageNumber> = $i1;

        r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem endBookmark> = null;

        $i3 = (int) -1;

        r0.<org.apache.pdfbox.util.PDFTextStripper: int endBookmarkPageNumber> = $i3;

        r0.<org.apache.pdfbox.util.PDFTextStripper: boolean suppressDuplicateOverlappingText> = 1;

        r0.<org.apache.pdfbox.util.PDFTextStripper: boolean shouldSeparateByBeads> = 1;

        r0.<org.apache.pdfbox.util.PDFTextStripper: boolean sortByPosition> = 0;

        r0.<org.apache.pdfbox.util.PDFTextStripper: boolean addMoreFormatting> = 0;

        $f0 = <org.apache.pdfbox.util.PDFTextStripper: float DEFAULT_INDENT_THRESHOLD>;

        r0.<org.apache.pdfbox.util.PDFTextStripper: float indentThreshold> = $f0;

        $f1 = <org.apache.pdfbox.util.PDFTextStripper: float DEFAULT_DROP_THRESHOLD>;

        r0.<org.apache.pdfbox.util.PDFTextStripper: float dropThreshold> = $f1;

        r0.<org.apache.pdfbox.util.PDFTextStripper: float spacingTolerance> = 0.5F;

        r0.<org.apache.pdfbox.util.PDFTextStripper: float averageCharTolerance> = 0.3F;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.List pageArticles> = null;

        $r10 = new java.util.Vector;

        specialinvoke $r10.<java.util.Vector: void <init>()>();

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.Vector charactersByArticle> = $r10;

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.Map characterListMapping> = $r11;

        r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.util.TextNormalize normalize> = null;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.List listOfPatterns> = null;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String outputEncoding> = null;

        $r12 = new org.apache.pdfbox.util.TextNormalize;

        $r9 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String outputEncoding>;

        specialinvoke $r12.<org.apache.pdfbox.util.TextNormalize: void <init>(java.lang.String)>($r9);

        r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.util.TextNormalize normalize> = $r12;

        return;
    }

    public void <init>(java.util.Properties) throws java.io.IOException
    {
        java.util.Properties r1;
        java.util.HashMap $r11;
        org.apache.pdfbox.util.TextNormalize $r12;
        java.util.Vector $r10;
        org.apache.pdfbox.util.PDFTextStripper r0;
        int $i1, $i3;
        float $f0, $f1;
        java.lang.String $r2, $r3, $r4, $r5, $r9;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r1 := @parameter0: java.util.Properties;

        specialinvoke r0.<org.apache.pdfbox.util.PDFStreamEngine: void <init>(java.util.Properties)>(r1);

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String systemLineSeparator> = $r2;

        $r3 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String systemLineSeparator>;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String lineSeparator> = $r3;

        $r4 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String systemLineSeparator>;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String pageSeparator> = $r4;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String wordSeparator> = " ";

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String paragraphStart> = "";

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String paragraphEnd> = "";

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String pageStart> = "";

        $r5 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String pageSeparator>;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String pageEnd> = $r5;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String articleStart> = "";

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String articleEnd> = "";

        r0.<org.apache.pdfbox.util.PDFTextStripper: int currentPageNo> = 0;

        r0.<org.apache.pdfbox.util.PDFTextStripper: int startPage> = 1;

        r0.<org.apache.pdfbox.util.PDFTextStripper: int endPage> = 2147483647;

        r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem startBookmark> = null;

        $i1 = (int) -1;

        r0.<org.apache.pdfbox.util.PDFTextStripper: int startBookmarkPageNumber> = $i1;

        r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem endBookmark> = null;

        $i3 = (int) -1;

        r0.<org.apache.pdfbox.util.PDFTextStripper: int endBookmarkPageNumber> = $i3;

        r0.<org.apache.pdfbox.util.PDFTextStripper: boolean suppressDuplicateOverlappingText> = 1;

        r0.<org.apache.pdfbox.util.PDFTextStripper: boolean shouldSeparateByBeads> = 1;

        r0.<org.apache.pdfbox.util.PDFTextStripper: boolean sortByPosition> = 0;

        r0.<org.apache.pdfbox.util.PDFTextStripper: boolean addMoreFormatting> = 0;

        $f0 = <org.apache.pdfbox.util.PDFTextStripper: float DEFAULT_INDENT_THRESHOLD>;

        r0.<org.apache.pdfbox.util.PDFTextStripper: float indentThreshold> = $f0;

        $f1 = <org.apache.pdfbox.util.PDFTextStripper: float DEFAULT_DROP_THRESHOLD>;

        r0.<org.apache.pdfbox.util.PDFTextStripper: float dropThreshold> = $f1;

        r0.<org.apache.pdfbox.util.PDFTextStripper: float spacingTolerance> = 0.5F;

        r0.<org.apache.pdfbox.util.PDFTextStripper: float averageCharTolerance> = 0.3F;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.List pageArticles> = null;

        $r10 = new java.util.Vector;

        specialinvoke $r10.<java.util.Vector: void <init>()>();

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.Vector charactersByArticle> = $r10;

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.Map characterListMapping> = $r11;

        r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.util.TextNormalize normalize> = null;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.List listOfPatterns> = null;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String outputEncoding> = null;

        $r12 = new org.apache.pdfbox.util.TextNormalize;

        $r9 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String outputEncoding>;

        specialinvoke $r12.<org.apache.pdfbox.util.TextNormalize: void <init>(java.lang.String)>($r9);

        r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.util.TextNormalize normalize> = $r12;

        return;
    }

    public void <init>(java.lang.String) throws java.io.IOException
    {
        java.util.Properties $r1;
        java.util.HashMap $r12;
        org.apache.pdfbox.util.TextNormalize $r13;
        java.util.Vector $r11;
        org.apache.pdfbox.util.PDFTextStripper r0;
        int $i1, $i3;
        float $f0, $f1;
        java.lang.String $r2, $r3, $r4, $r5, r8, $r10;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r8 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.pdfbox.util.ResourceLoader: java.util.Properties loadProperties(java.lang.String,boolean)>("org/apache/pdfbox/resources/PDFTextStripper.properties", 1);

        specialinvoke r0.<org.apache.pdfbox.util.PDFStreamEngine: void <init>(java.util.Properties)>($r1);

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String systemLineSeparator> = $r2;

        $r3 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String systemLineSeparator>;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String lineSeparator> = $r3;

        $r4 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String systemLineSeparator>;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String pageSeparator> = $r4;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String wordSeparator> = " ";

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String paragraphStart> = "";

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String paragraphEnd> = "";

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String pageStart> = "";

        $r5 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String pageSeparator>;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String pageEnd> = $r5;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String articleStart> = "";

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String articleEnd> = "";

        r0.<org.apache.pdfbox.util.PDFTextStripper: int currentPageNo> = 0;

        r0.<org.apache.pdfbox.util.PDFTextStripper: int startPage> = 1;

        r0.<org.apache.pdfbox.util.PDFTextStripper: int endPage> = 2147483647;

        r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem startBookmark> = null;

        $i1 = (int) -1;

        r0.<org.apache.pdfbox.util.PDFTextStripper: int startBookmarkPageNumber> = $i1;

        r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem endBookmark> = null;

        $i3 = (int) -1;

        r0.<org.apache.pdfbox.util.PDFTextStripper: int endBookmarkPageNumber> = $i3;

        r0.<org.apache.pdfbox.util.PDFTextStripper: boolean suppressDuplicateOverlappingText> = 1;

        r0.<org.apache.pdfbox.util.PDFTextStripper: boolean shouldSeparateByBeads> = 1;

        r0.<org.apache.pdfbox.util.PDFTextStripper: boolean sortByPosition> = 0;

        r0.<org.apache.pdfbox.util.PDFTextStripper: boolean addMoreFormatting> = 0;

        $f0 = <org.apache.pdfbox.util.PDFTextStripper: float DEFAULT_INDENT_THRESHOLD>;

        r0.<org.apache.pdfbox.util.PDFTextStripper: float indentThreshold> = $f0;

        $f1 = <org.apache.pdfbox.util.PDFTextStripper: float DEFAULT_DROP_THRESHOLD>;

        r0.<org.apache.pdfbox.util.PDFTextStripper: float dropThreshold> = $f1;

        r0.<org.apache.pdfbox.util.PDFTextStripper: float spacingTolerance> = 0.5F;

        r0.<org.apache.pdfbox.util.PDFTextStripper: float averageCharTolerance> = 0.3F;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.List pageArticles> = null;

        $r11 = new java.util.Vector;

        specialinvoke $r11.<java.util.Vector: void <init>()>();

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.Vector charactersByArticle> = $r11;

        $r12 = new java.util.HashMap;

        specialinvoke $r12.<java.util.HashMap: void <init>()>();

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.Map characterListMapping> = $r12;

        r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.util.TextNormalize normalize> = null;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.List listOfPatterns> = null;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String outputEncoding> = r8;

        $r13 = new org.apache.pdfbox.util.TextNormalize;

        $r10 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String outputEncoding>;

        specialinvoke $r13.<org.apache.pdfbox.util.TextNormalize: void <init>(java.lang.String)>($r10);

        r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.util.TextNormalize normalize> = $r13;

        return;
    }

    public java.lang.String getText(org.apache.pdfbox.pdmodel.PDDocument) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.PDDocument r2;
        java.io.StringWriter $r0;
        org.apache.pdfbox.util.PDFTextStripper r1;
        java.lang.String $r3;

        r1 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r2 := @parameter0: org.apache.pdfbox.pdmodel.PDDocument;

        $r0 = new java.io.StringWriter;

        specialinvoke $r0.<java.io.StringWriter: void <init>()>();

        virtualinvoke r1.<org.apache.pdfbox.util.PDFTextStripper: void writeText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Writer)>(r2, $r0);

        $r3 = virtualinvoke $r0.<java.io.StringWriter: java.lang.String toString()>();

        return $r3;
    }

    public java.lang.String getText(org.apache.pdfbox.cos.COSDocument) throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSDocument r2;
        org.apache.pdfbox.pdmodel.PDDocument $r1;
        org.apache.pdfbox.util.PDFTextStripper r0;
        java.lang.String $r3;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r2 := @parameter0: org.apache.pdfbox.cos.COSDocument;

        $r1 = new org.apache.pdfbox.pdmodel.PDDocument;

        specialinvoke $r1.<org.apache.pdfbox.pdmodel.PDDocument: void <init>(org.apache.pdfbox.cos.COSDocument)>(r2);

        $r3 = virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String getText(org.apache.pdfbox.pdmodel.PDDocument)>($r1);

        return $r3;
    }

    public void writeText(org.apache.pdfbox.cos.COSDocument, java.io.Writer) throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSDocument r2;
        org.apache.pdfbox.pdmodel.PDDocument $r1;
        org.apache.pdfbox.util.PDFTextStripper r0;
        java.io.Writer r3;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r2 := @parameter0: org.apache.pdfbox.cos.COSDocument;

        r3 := @parameter1: java.io.Writer;

        $r1 = new org.apache.pdfbox.pdmodel.PDDocument;

        specialinvoke $r1.<org.apache.pdfbox.pdmodel.PDDocument: void <init>(org.apache.pdfbox.cos.COSDocument)>(r2);

        virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: void writeText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Writer)>($r1, r3);

        return;
    }

    public void resetEngine()
    {
        java.util.Vector $r1, $r4;
        org.apache.pdfbox.util.PDFTextStripper r0;
        java.util.Map $r2, $r3;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        specialinvoke r0.<org.apache.pdfbox.util.PDFStreamEngine: void resetEngine()>();

        r0.<org.apache.pdfbox.util.PDFTextStripper: int currentPageNo> = 0;

        r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.pdmodel.PDDocument document> = null;

        $r1 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.Vector charactersByArticle>;

        if $r1 == null goto label1;

        $r4 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.Vector charactersByArticle>;

        virtualinvoke $r4.<java.util.Vector: void clear()>();

     label1:
        $r2 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.Map characterListMapping>;

        if $r2 == null goto label2;

        $r3 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.Map characterListMapping>;

        interfaceinvoke $r3.<java.util.Map: void clear()>();

     label2:
        r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem startBookmark> = null;

        r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem endBookmark> = null;

        return;
    }

    public void writeText(org.apache.pdfbox.pdmodel.PDDocument, java.io.Writer) throws java.io.IOException
    {
        org.apache.pdfbox.exceptions.CryptographyException $r14;
        java.lang.String $r10, $r11, $r12, $r13;
        boolean $z0, $z1;
        org.apache.pdfbox.pdmodel.PDDocumentCatalog $r6;
        org.apache.pdfbox.pdmodel.PDDocument r1, $r3, $r4, $r5, $r8, $r9;
        org.apache.pdfbox.exceptions.WrappedIOException $r15;
        java.util.List $r7;
        org.apache.pdfbox.util.PDFTextStripper r0;
        java.io.Writer r2;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.PDDocument;

        r2 := @parameter1: java.io.Writer;

        virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: void resetEngine()>();

        r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.pdmodel.PDDocument document> = r1;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.io.Writer output> = r2;

        $z0 = virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: boolean getAddMoreFormatting()>();

        if $z0 == 0 goto label1;

        $r10 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String lineSeparator>;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String paragraphEnd> = $r10;

        $r11 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String lineSeparator>;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String pageStart> = $r11;

        $r12 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String lineSeparator>;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String articleStart> = $r12;

        $r13 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String lineSeparator>;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String articleEnd> = $r13;

     label1:
        $r3 = r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.pdmodel.PDDocument document>;

        virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: void startDocument(org.apache.pdfbox.pdmodel.PDDocument)>($r3);

        $r4 = r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.pdmodel.PDDocument document>;

        $z1 = virtualinvoke $r4.<org.apache.pdfbox.pdmodel.PDDocument: boolean isEncrypted()>();

        if $z1 == 0 goto label5;

     label2:
        $r9 = r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.pdmodel.PDDocument document>;

        virtualinvoke $r9.<org.apache.pdfbox.pdmodel.PDDocument: void decrypt(java.lang.String)>("");

     label3:
        goto label5;

     label4:
        $r14 := @caughtexception;

        $r15 = new org.apache.pdfbox.exceptions.WrappedIOException;

        specialinvoke $r15.<org.apache.pdfbox.exceptions.WrappedIOException: void <init>(java.lang.String,java.lang.Throwable)>("Error decrypting document, details: ", $r14);

        throw $r15;

     label5:
        $r5 = r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.pdmodel.PDDocument document>;

        $r6 = virtualinvoke $r5.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>();

        $r7 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: java.util.List getAllPages()>();

        virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: void processPages(java.util.List)>($r7);

        $r8 = r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.pdmodel.PDDocument document>;

        virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: void endDocument(org.apache.pdfbox.pdmodel.PDDocument)>($r8);

        return;

        catch org.apache.pdfbox.exceptions.CryptographyException from label2 to label3 with label4;
    }

    protected void processPages(java.util.List) throws java.io.IOException
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9;
        org.apache.pdfbox.cos.COSStream $r7;
        boolean $z0;
        java.util.Iterator $r16;
        org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem $r1, $r2, $r8, $r9, $r10, $r12, $r14, $r15;
        org.apache.pdfbox.pdmodel.common.PDStream $r6;
        java.util.List r3;
        org.apache.pdfbox.cos.COSBase $r11, $r13;
        org.apache.pdfbox.util.PDFTextStripper r0;
        java.lang.Object $r4;
        org.apache.pdfbox.pdmodel.PDPage r5;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r3 := @parameter0: java.util.List;

        $r1 = r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem startBookmark>;

        if $r1 == null goto label1;

        $r15 = r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem startBookmark>;

        $i5 = specialinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: int getPageNumber(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem,java.util.List)>($r15, r3);

        r0.<org.apache.pdfbox.util.PDFTextStripper: int startBookmarkPageNumber> = $i5;

     label1:
        $r2 = r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem endBookmark>;

        if $r2 == null goto label2;

        $r14 = r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem endBookmark>;

        $i4 = specialinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: int getPageNumber(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem,java.util.List)>($r14, r3);

        r0.<org.apache.pdfbox.util.PDFTextStripper: int endBookmarkPageNumber> = $i4;

     label2:
        $i0 = r0.<org.apache.pdfbox.util.PDFTextStripper: int startBookmarkPageNumber>;

        $i7 = (int) -1;

        if $i0 != $i7 goto label3;

        $r8 = r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem startBookmark>;

        if $r8 == null goto label3;

        $i3 = r0.<org.apache.pdfbox.util.PDFTextStripper: int endBookmarkPageNumber>;

        $i9 = (int) -1;

        if $i3 != $i9 goto label3;

        $r9 = r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem endBookmark>;

        if $r9 == null goto label3;

        $r10 = r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem startBookmark>;

        $r11 = virtualinvoke $r10.<org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem: org.apache.pdfbox.cos.COSBase getCOSObject()>();

        $r12 = r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem endBookmark>;

        $r13 = virtualinvoke $r12.<org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem: org.apache.pdfbox.cos.COSBase getCOSObject()>();

        if $r11 != $r13 goto label3;

        r0.<org.apache.pdfbox.util.PDFTextStripper: int startBookmarkPageNumber> = 0;

        r0.<org.apache.pdfbox.util.PDFTextStripper: int endBookmarkPageNumber> = 0;

     label3:
        $r16 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r4 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.pdfbox.pdmodel.PDPage) $r4;

        $r6 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.common.PDStream getContents()>();

        $i1 = r0.<org.apache.pdfbox.util.PDFTextStripper: int currentPageNo>;

        $i2 = $i1 + 1;

        r0.<org.apache.pdfbox.util.PDFTextStripper: int currentPageNo> = $i2;

        if $r6 == null goto label5;

        $r7 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream getStream()>();

        virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: void processPage(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.cos.COSStream)>(r5, $r7);

     label5:
        goto label4;

     label6:
        return;
    }

    private int getPageNumber(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem, java.util.List) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.PDDocument $r2;
        org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem r0;
        java.util.List r4;
        org.apache.pdfbox.util.PDFTextStripper r1;
        int $i0, i1, $i3;
        org.apache.pdfbox.pdmodel.PDPage $r3;

        r1 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r0 := @parameter0: org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem;

        r4 := @parameter1: java.util.List;

        $i3 = (int) -1;

        i1 = $i3;

        $r2 = r1.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.pdmodel.PDDocument document>;

        $r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem: org.apache.pdfbox.pdmodel.PDPage findDestinationPage(org.apache.pdfbox.pdmodel.PDDocument)>($r2);

        if $r3 == null goto label1;

        $i0 = interfaceinvoke r4.<java.util.List: int indexOf(java.lang.Object)>($r3);

        i1 = $i0 + 1;

     label1:
        return i1;
    }

    protected void startDocument(org.apache.pdfbox.pdmodel.PDDocument) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.PDDocument r1;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.PDDocument;

        return;
    }

    protected void endDocument(org.apache.pdfbox.pdmodel.PDDocument) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.PDDocument r1;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.PDDocument;

        return;
    }

    protected void processPage(org.apache.pdfbox.pdmodel.PDPage, org.apache.pdfbox.cos.COSStream) throws java.io.IOException
    {
        java.util.Vector $r4, $r5, $r10, $r11;
        java.util.Map $r6;
        boolean $z0;
        org.apache.pdfbox.pdmodel.PDResources $r7;
        java.util.List $r2, $r3, $r13;
        org.apache.pdfbox.pdmodel.PDPage r1;
        java.util.ArrayList $r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, $i16, $i18;
        org.apache.pdfbox.cos.COSStream r8;
        org.apache.pdfbox.util.PDFTextStripper r0;
        java.lang.Object $r12;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.PDPage;

        r8 := @parameter1: org.apache.pdfbox.cos.COSStream;

        $i1 = r0.<org.apache.pdfbox.util.PDFTextStripper: int currentPageNo>;

        $i0 = r0.<org.apache.pdfbox.util.PDFTextStripper: int startPage>;

        if $i1 < $i0 goto label8;

        $i3 = r0.<org.apache.pdfbox.util.PDFTextStripper: int currentPageNo>;

        $i2 = r0.<org.apache.pdfbox.util.PDFTextStripper: int endPage>;

        if $i3 > $i2 goto label8;

        $i4 = r0.<org.apache.pdfbox.util.PDFTextStripper: int startBookmarkPageNumber>;

        $i16 = (int) -1;

        if $i4 == $i16 goto label1;

        $i12 = r0.<org.apache.pdfbox.util.PDFTextStripper: int currentPageNo>;

        $i11 = r0.<org.apache.pdfbox.util.PDFTextStripper: int startBookmarkPageNumber>;

        if $i12 < $i11 goto label8;

     label1:
        $i5 = r0.<org.apache.pdfbox.util.PDFTextStripper: int endBookmarkPageNumber>;

        $i18 = (int) -1;

        if $i5 == $i18 goto label2;

        $i10 = r0.<org.apache.pdfbox.util.PDFTextStripper: int currentPageNo>;

        $i9 = r0.<org.apache.pdfbox.util.PDFTextStripper: int endBookmarkPageNumber>;

        if $i10 > $i9 goto label8;

     label2:
        virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: void startPage(org.apache.pdfbox.pdmodel.PDPage)>(r1);

        $r2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDPage: java.util.List getThreadBeads()>();

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.List pageArticles> = $r2;

        $r3 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.List pageArticles>;

        $i6 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i7 = $i6 * 2;

        i13 = 1 + $i7;

        $z0 = r0.<org.apache.pdfbox.util.PDFTextStripper: boolean shouldSeparateByBeads>;

        if $z0 != 0 goto label3;

        i13 = 1;

     label3:
        $r4 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.Vector charactersByArticle>;

        $i8 = virtualinvoke $r4.<java.util.Vector: int size()>();

        $r5 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.Vector charactersByArticle>;

        virtualinvoke $r5.<java.util.Vector: void setSize(int)>(i13);

        i14 = 0;

     label4:
        if i14 >= i13 goto label7;

        if i13 >= $i8 goto label5;

        $r11 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.Vector charactersByArticle>;

        $r12 = virtualinvoke $r11.<java.util.Vector: java.lang.Object get(int)>(i14);

        $r13 = (java.util.List) $r12;

        interfaceinvoke $r13.<java.util.List: void clear()>();

        goto label6;

     label5:
        $r10 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.Vector charactersByArticle>;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        virtualinvoke $r10.<java.util.Vector: java.lang.Object set(int,java.lang.Object)>(i14, $r14);

     label6:
        i14 = i14 + 1;

        goto label4;

     label7:
        $r6 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.Map characterListMapping>;

        interfaceinvoke $r6.<java.util.Map: void clear()>();

        $r7 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.PDResources findResources()>();

        virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: void processStream(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.cos.COSStream)>(r1, $r7, r8);

        virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: void writePage()>();

        virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: void endPage(org.apache.pdfbox.pdmodel.PDPage)>(r1);

     label8:
        return;
    }

    protected void startArticle() throws java.io.IOException
    {
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: void startArticle(boolean)>(1);

        return;
    }

    protected void startArticle(boolean) throws java.io.IOException
    {
        org.apache.pdfbox.util.PDFTextStripper r0;
        java.io.Writer $r1;
        java.lang.String $r2;
        boolean z0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.io.Writer output>;

        $r2 = virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String getArticleStart()>();

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>($r2);

        return;
    }

    protected void endArticle() throws java.io.IOException
    {
        java.io.Writer $r1;
        java.lang.String $r2;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        $r1 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.io.Writer output>;

        $r2 = virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String getArticleEnd()>();

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>($r2);

        return;
    }

    protected void startPage(org.apache.pdfbox.pdmodel.PDPage) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.PDPage r1;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.PDPage;

        return;
    }

    protected void endPage(org.apache.pdfbox.pdmodel.PDPage) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.PDPage r1;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.PDPage;

        return;
    }

    protected void writePage() throws java.io.IOException
    {
        java.util.Vector $r1, $r2, $r29;
        byte $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b10, $b13, $b19, $b20;
        float[] $r13;
        org.apache.pdfbox.pdmodel.font.PDFont $r20, $r22;
        java.util.ArrayList $r32;
        java.lang.String $r12, $r15, $r17, $r25;
        org.apache.pdfbox.util.PositionWrapper r27, r28, $r33;
        org.apache.pdfbox.util.PDFTextStripper$WordSeparator $r18;
        boolean $z0, $z1, $z2, z3, $z4, z6, $z7, z8, $z9, z10, $z11, $z12, z13, z14, $z15, $z16;
        org.apache.pdfbox.util.TextPosition r10, $r14, $r16, $r21, $r23, r30;
        java.util.List r4, $r8, $r19;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, $f26;
        org.apache.pdfbox.util.TextPositionComparator $r31;
        int $i0, $i1, $i9, $i11, i14, $i15, i16, i17, i18, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30;
        java.util.Iterator $r5, $r7;
        char $c12;
        org.apache.pdfbox.util.PDFTextStripper r0;
        java.lang.Object $r3, $r9, $r24;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        f13 = -3.4028235E38F;

        f14 = 3.4028235E38F;

        f15 = -1.0F;

        f16 = -1.0F;

        f17 = -1.0F;

        r27 = null;

        r28 = null;

        z3 = 1;

        z14 = 1;

        z13 = 1;

        $r1 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.Vector charactersByArticle>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i0 <= 0 goto label01;

        virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: void writePageStart()>();

     label01:
        i14 = 0;

     label02:
        $r29 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.Vector charactersByArticle>;

        $i15 = virtualinvoke $r29.<java.util.Vector: int size()>();

        if i14 >= $i15 goto label40;

        $r2 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.Vector charactersByArticle>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object get(int)>(i14);

        r4 = (java.util.List) $r3;

        $z0 = virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: boolean getSortByPosition()>();

        if $z0 == 0 goto label03;

        $r31 = new org.apache.pdfbox.util.TextPositionComparator;

        specialinvoke $r31.<org.apache.pdfbox.util.TextPositionComparator: void <init>()>();

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r4, $r31);

     label03:
        $r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

        i16 = 0;

        i17 = 0;

     label04:
        $z4 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label11;

        $r24 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r30 = (org.apache.pdfbox.util.TextPosition) $r24;

        $r25 = virtualinvoke r30.<org.apache.pdfbox.util.TextPosition: java.lang.String getCharacter()>();

        i18 = 0;

     label05:
        $i11 = virtualinvoke $r25.<java.lang.String: int length()>();

        if i18 >= $i11 goto label10;

        $c12 = virtualinvoke $r25.<java.lang.String: char charAt(int)>(i18);

        $b13 = staticinvoke <java.lang.Character: byte getDirectionality(char)>($c12);

        if $b13 == 0 goto label06;

        $i21 = (int) $b13;

        if $i21 == 14 goto label06;

        $i22 = (int) $b13;

        if $i22 != 15 goto label07;

     label06:
        i16 = i16 + 1;

        goto label09;

     label07:
        if $b13 == 1 goto label08;

        $i23 = (int) $b13;

        if $i23 == 2 goto label08;

        $i24 = (int) $b13;

        if $i24 == 16 goto label08;

        $i25 = (int) $b13;

        if $i25 != 17 goto label09;

     label08:
        i17 = i17 + 1;

     label09:
        i18 = i18 + 1;

        goto label05;

     label10:
        goto label04;

     label11:
        if i17 <= i16 goto label12;

        $z16 = 1;

        $z15 = 1;

        goto label13;

     label12:
        $z16 = 0;

        $z15 = 0;

     label13:
        z6 = $z15;

        if $z16 != 0 goto label14;

        $z7 = 1;

        goto label15;

     label14:
        $z7 = 0;

     label15:
        virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: void startArticle(boolean)>($z7);

        z8 = 1;

        if i17 <= 0 goto label16;

        $z9 = 1;

        goto label17;

     label16:
        $z9 = 0;

     label17:
        z10 = $z9;

        $r32 = new java.util.ArrayList;

        specialinvoke $r32.<java.util.ArrayList: void <init>()>();

        $r7 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

        f18 = -1.0F;

     label18:
        $z11 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label38;

        $r9 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.apache.pdfbox.util.TextPosition) $r9;

        $r33 = new org.apache.pdfbox.util.PositionWrapper;

        specialinvoke $r33.<org.apache.pdfbox.util.PositionWrapper: void <init>(org.apache.pdfbox.util.TextPosition)>(r10);

        $r12 = virtualinvoke r10.<org.apache.pdfbox.util.TextPosition: java.lang.String getCharacter()>();

        if r27 == null goto label20;

        $r20 = virtualinvoke r10.<org.apache.pdfbox.util.TextPosition: org.apache.pdfbox.pdmodel.font.PDFont getFont()>();

        $r21 = virtualinvoke r27.<org.apache.pdfbox.util.PositionWrapper: org.apache.pdfbox.util.TextPosition getTextPosition()>();

        $r22 = virtualinvoke $r21.<org.apache.pdfbox.util.TextPosition: org.apache.pdfbox.pdmodel.font.PDFont getFont()>();

        if $r20 != $r22 goto label19;

        $f11 = virtualinvoke r10.<org.apache.pdfbox.util.TextPosition: float getFontSize()>();

        $r23 = virtualinvoke r27.<org.apache.pdfbox.util.PositionWrapper: org.apache.pdfbox.util.TextPosition getTextPosition()>();

        $f12 = virtualinvoke $r23.<org.apache.pdfbox.util.TextPosition: float getFontSize()>();

        $b10 = $f11 cmpl $f12;

        if $b10 == 0 goto label20;

     label19:
        f18 = -1.0F;

     label20:
        $z12 = virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: boolean getSortByPosition()>();

        if $z12 == 0 goto label21;

        f19 = virtualinvoke r10.<org.apache.pdfbox.util.TextPosition: float getXDirAdj()>();

        f20 = virtualinvoke r10.<org.apache.pdfbox.util.TextPosition: float getYDirAdj()>();

        f21 = virtualinvoke r10.<org.apache.pdfbox.util.TextPosition: float getWidthDirAdj()>();

        f22 = virtualinvoke r10.<org.apache.pdfbox.util.TextPosition: float getHeightDir()>();

        goto label22;

     label21:
        f19 = virtualinvoke r10.<org.apache.pdfbox.util.TextPosition: float getX()>();

        f20 = virtualinvoke r10.<org.apache.pdfbox.util.TextPosition: float getY()>();

        f21 = virtualinvoke r10.<org.apache.pdfbox.util.TextPosition: float getWidth()>();

        f22 = virtualinvoke r10.<org.apache.pdfbox.util.TextPosition: float getHeight()>();

     label22:
        $r13 = virtualinvoke r10.<org.apache.pdfbox.util.TextPosition: float[] getIndividualWidths()>();

        $i9 = lengthof $r13;

        $f0 = virtualinvoke r10.<org.apache.pdfbox.util.TextPosition: float getWidthOfSpace()>();

        $b2 = $f0 cmpl 0.0F;

        if $b2 == 0 goto label23;

        $b7 = $f0 cmpl #NaNF;

        if $b7 != 0 goto label24;

     label23:
        f23 = 3.4028235E38F;

        goto label26;

     label24:
        $b8 = f16 cmpg 0.0F;

        $i26 = (int) $b8;

        if $i26 >= 0 goto label25;

        $f10 = virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: float getSpacingTolerance()>();

        f23 = $f0 * $f10;

        goto label26;

     label25:
        $f7 = $f0 + f16;

        $f8 = $f7 / 2.0F;

        $f9 = virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: float getSpacingTolerance()>();

        f23 = $f8 * $f9;

     label26:
        $b19 = f18 cmpg 0.0F;

        $i27 = (int) $b19;

        if $i27 >= 0 goto label27;

        $f5 = (float) $i9;

        f24 = f21 / $f5;

        goto label28;

     label27:
        $f1 = (float) $i9;

        $f2 = f21 / $f1;

        $f3 = f18 + $f2;

        f24 = $f3 / 2.0F;

     label28:
        $f4 = virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: float getAverageCharTolerance()>();

        $f6 = f24 * $f4;

        f25 = -3.4028235E38F;

        $b3 = f15 cmpl -1.0F;

        if $b3 == 0 goto label30;

        $b6 = $f6 cmpl f23;

        $i28 = (int) $b6;

        if $i28 <= 0 goto label29;

        f25 = f15 + f23;

        goto label30;

     label29:
        f25 = f15 + $f6;

     label30:
        if r27 == null goto label33;

        if z8 == 0 goto label31;

        virtualinvoke r27.<org.apache.pdfbox.util.PositionWrapper: void setArticleStart()>();

        z8 = 0;

     label31:
        $z1 = specialinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: boolean overlap(float,float,float,float)>(f20, f22, f13, f17);

        if $z1 != 0 goto label32;

        $r19 = specialinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.List normalize(java.util.List,boolean,boolean)>($r32, z6, z10);

        specialinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: void writeLine(java.util.List,boolean)>($r19, z6);

        interfaceinvoke $r32.<java.util.List: void clear()>();

        r28 = virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.util.PositionWrapper handleLineSeparation(org.apache.pdfbox.util.PositionWrapper,org.apache.pdfbox.util.PositionWrapper,org.apache.pdfbox.util.PositionWrapper,float)>($r33, r27, r28, f17);

        f25 = -3.4028235E38F;

        f13 = -3.4028235E38F;

        f17 = -1.0F;

        f14 = 3.4028235E38F;

     label32:
        $b4 = f25 cmpl -3.4028235E38F;

        if $b4 == 0 goto label33;

        $b5 = f25 cmpg f19;

        $i29 = (int) $b5;

        if $i29 >= 0 goto label33;

        $r14 = virtualinvoke r27.<org.apache.pdfbox.util.PositionWrapper: org.apache.pdfbox.util.TextPosition getTextPosition()>();

        $r15 = virtualinvoke $r14.<org.apache.pdfbox.util.TextPosition: java.lang.String getCharacter()>();

        if $r15 == null goto label33;

        $r16 = virtualinvoke r27.<org.apache.pdfbox.util.PositionWrapper: org.apache.pdfbox.util.TextPosition getTextPosition()>();

        $r17 = virtualinvoke $r16.<org.apache.pdfbox.util.TextPosition: java.lang.String getCharacter()>();

        $z2 = virtualinvoke $r17.<java.lang.String: boolean endsWith(java.lang.String)>(" ");

        if $z2 != 0 goto label33;

        $r18 = staticinvoke <org.apache.pdfbox.util.PDFTextStripper$WordSeparator: org.apache.pdfbox.util.PDFTextStripper$WordSeparator getSeparator()>();

        interfaceinvoke $r32.<java.util.List: boolean add(java.lang.Object)>($r18);

     label33:
        $b20 = f20 cmpl f13;

        $i30 = (int) $b20;

        if $i30 < 0 goto label34;

        f13 = f20;

     label34:
        f15 = f19 + f21;

        if $r12 == null goto label36;

        if z13 == 0 goto label35;

        if r27 != null goto label35;

        virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: void writeParagraphStart()>();

     label35:
        interfaceinvoke $r32.<java.util.List: boolean add(java.lang.Object)>(r10);

     label36:
        f17 = staticinvoke <java.lang.Math: float max(float,float)>(f17, f22);

        $f26 = f20 - f22;

        f14 = staticinvoke <java.lang.Math: float min(float,float)>(f14, $f26);

        r27 = $r33;

        if z14 == 0 goto label37;

        virtualinvoke $r33.<org.apache.pdfbox.util.PositionWrapper: void setParagraphStart()>();

        virtualinvoke $r33.<org.apache.pdfbox.util.PositionWrapper: void setLineStart()>();

        r28 = $r33;

        z3 = 0;

        z14 = 0;

        z13 = 0;

     label37:
        f16 = $f0;

        f18 = f24;

        goto label18;

     label38:
        $i1 = interfaceinvoke $r32.<java.util.List: int size()>();

        if $i1 <= 0 goto label39;

        $r8 = specialinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.List normalize(java.util.List,boolean,boolean)>($r32, z6, z10);

        specialinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: void writeLine(java.util.List,boolean)>($r8, z6);

        virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: void writeParagraphEnd()>();

     label39:
        virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: void endArticle()>();

        i14 = i14 + 1;

        goto label02;

     label40:
        virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: void writePageEnd()>();

        return;
    }

    private boolean overlap(float, float, float, float)
    {
        byte $b0, $b1, $b2, $b3;
        int $i4, $i5, $i6, $i7;
        boolean $z0, $z1;
        org.apache.pdfbox.util.PDFTextStripper r0;
        float f0, f1, f2, $f3, f4, $f5;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        f0 := @parameter0: float;

        f4 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        $z0 = specialinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: boolean within(float,float,float)>(f0, f1, 0.1F);

        if $z0 != 0 goto label2;

        $b0 = f1 cmpg f0;

        $i4 = (int) $b0;

        if $i4 > 0 goto label1;

        $f5 = f0 - f4;

        $b3 = f1 cmpl $f5;

        $i5 = (int) $b3;

        if $i5 >= 0 goto label2;

     label1:
        $b1 = f0 cmpg f1;

        $i6 = (int) $b1;

        if $i6 > 0 goto label3;

        $f3 = f1 - f2;

        $b2 = f0 cmpl $f3;

        $i7 = (int) $b2;

        if $i7 < 0 goto label3;

     label2:
        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    protected void writePageSeperator() throws java.io.IOException
    {
        org.apache.pdfbox.util.PDFTextStripper r0;
        java.io.Writer $r1, $r3;
        java.lang.String $r2;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        $r1 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.io.Writer output>;

        $r2 = virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String getPageSeparator()>();

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>($r2);

        $r3 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.io.Writer output>;

        virtualinvoke $r3.<java.io.Writer: void flush()>();

        return;
    }

    protected void writeLineSeparator() throws java.io.IOException
    {
        java.io.Writer $r1;
        java.lang.String $r2;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        $r1 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.io.Writer output>;

        $r2 = virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String getLineSeparator()>();

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>($r2);

        return;
    }

    protected void writeWordSeparator() throws java.io.IOException
    {
        java.io.Writer $r1;
        java.lang.String $r2;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        $r1 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.io.Writer output>;

        $r2 = virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String getWordSeparator()>();

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>($r2);

        return;
    }

    protected void writeCharacters(org.apache.pdfbox.util.TextPosition) throws java.io.IOException
    {
        org.apache.pdfbox.util.PDFTextStripper r0;
        java.io.Writer $r2;
        org.apache.pdfbox.util.TextPosition r1;
        java.lang.String $r3;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r1 := @parameter0: org.apache.pdfbox.util.TextPosition;

        $r2 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.io.Writer output>;

        $r3 = virtualinvoke r1.<org.apache.pdfbox.util.TextPosition: java.lang.String getCharacter()>();

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>($r3);

        return;
    }

    protected void writeString(java.lang.String, java.util.List) throws java.io.IOException
    {
        java.util.List r2;
        java.lang.String r1;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: void writeString(java.lang.String)>(r1);

        return;
    }

    protected void writeString(java.lang.String) throws java.io.IOException
    {
        java.io.Writer $r2;
        java.lang.String r1;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.io.Writer output>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>(r1);

        return;
    }

    private boolean within(float, float, float)
    {
        byte $b0, $b1;
        org.apache.pdfbox.util.PDFTextStripper r0;
        int $i2, $i3;
        float f0, f1, f2, $f3, $f4;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        f1 := @parameter0: float;

        f0 := @parameter1: float;

        f2 := @parameter2: float;

        $f3 = f1 + f2;

        $b0 = f0 cmpg $f3;

        $i2 = (int) $b0;

        if $i2 >= 0 goto label1;

        $f4 = f1 - f2;

        $b1 = f0 cmpl $f4;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected void processTextPosition(org.apache.pdfbox.util.TextPosition)
    {
        java.lang.Float $r13, $r14, $r18, $r20, $r22, $r24, $r25;
        java.util.Vector $r2, $r33;
        byte $b6, $b7, $b8, $b9;
        java.util.Map $r11, $r28;
        java.util.TreeSet r30, r31, $r38;
        org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead r32;
        java.lang.String $r10;
        java.util.TreeMap r29, $r37;
        java.util.SortedSet $r26;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, z9, $z10, $z11;
        java.util.Collection $r16;
        org.apache.pdfbox.util.TextPosition r1, r36;
        org.apache.pdfbox.util.TextNormalize $r4, $r5;
        java.util.List $r6, $r7, $r35;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15;
        java.util.SortedMap $r15;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i10, $i11, i12, i13, i14, i15, i16, i17, $i19, $i21, $i23, $i25, $i27, $i28, $i29, $i31, $i32, $i34, $i35, $i37, $i39, $i41, $i43, $i45;
        java.util.Iterator $r17;
        org.apache.pdfbox.pdmodel.common.PDRectangle $r9;
        org.apache.pdfbox.util.PDFTextStripper r0;
        java.lang.Object $r3, $r8, $r12, $r19, $r23, $r34;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r1 := @parameter0: org.apache.pdfbox.util.TextPosition;

        z8 = 1;

        $z0 = r0.<org.apache.pdfbox.util.PDFTextStripper: boolean suppressDuplicateOverlappingText>;

        if $z0 == 0 goto label06;

        z8 = 0;

        $r10 = virtualinvoke r1.<org.apache.pdfbox.util.TextPosition: java.lang.String getCharacter()>();

        $f6 = virtualinvoke r1.<org.apache.pdfbox.util.TextPosition: float getX()>();

        $f7 = virtualinvoke r1.<org.apache.pdfbox.util.TextPosition: float getY()>();

        $r11 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.Map characterListMapping>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        r29 = (java.util.TreeMap) $r12;

        if r29 != null goto label01;

        $r37 = new java.util.TreeMap;

        specialinvoke $r37.<java.util.TreeMap: void <init>()>();

        r29 = $r37;

        $r28 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.Map characterListMapping>;

        interfaceinvoke $r28.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r37);

     label01:
        z9 = 0;

        $f8 = virtualinvoke r1.<org.apache.pdfbox.util.TextPosition: float getWidth()>();

        $i11 = virtualinvoke $r10.<java.lang.String: int length()>();

        $f9 = (float) $i11;

        $f10 = $f8 / $f9;

        $f15 = $f10 / 3.0F;

        $f11 = $f6 - $f15;

        $r13 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f11);

        $f12 = $f6 + $f15;

        $r14 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f12);

        $r15 = virtualinvoke r29.<java.util.TreeMap: java.util.SortedMap subMap(java.lang.Object,java.lang.Object)>($r13, $r14);

        $r16 = interfaceinvoke $r15.<java.util.SortedMap: java.util.Collection values()>();

        $r17 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z10 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label04;

        $r23 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r30 = (java.util.TreeSet) $r23;

        $f13 = $f7 - $f15;

        $r24 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f13);

        $f14 = $f7 + $f15;

        $r25 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f14);

        $r26 = virtualinvoke r30.<java.util.TreeSet: java.util.SortedSet subSet(java.lang.Object,java.lang.Object)>($r24, $r25);

        $z7 = interfaceinvoke $r26.<java.util.SortedSet: boolean isEmpty()>();

        if $z7 != 0 goto label03;

        z9 = 1;

        goto label04;

     label03:
        goto label02;

     label04:
        if z9 != 0 goto label06;

        $r18 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f6);

        $r19 = virtualinvoke r29.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r18);

        r31 = (java.util.TreeSet) $r19;

        if r31 != null goto label05;

        $r38 = new java.util.TreeSet;

        specialinvoke $r38.<java.util.TreeSet: void <init>()>();

        r31 = $r38;

        $r22 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f6);

        virtualinvoke r29.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, $r38);

     label05:
        $r20 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f7);

        virtualinvoke r31.<java.util.TreeSet: boolean add(java.lang.Object)>($r20);

        z8 = 1;

     label06:
        if z8 == 0 goto label26;

        $i19 = (int) -1;

        i12 = $i19;

        $i21 = (int) -1;

        i13 = $i21;

        $i23 = (int) -1;

        i14 = $i23;

        $i25 = (int) -1;

        i15 = $i25;

        $f0 = virtualinvoke r1.<org.apache.pdfbox.util.TextPosition: float getX()>();

        $f1 = virtualinvoke r1.<org.apache.pdfbox.util.TextPosition: float getY()>();

        $z1 = r0.<org.apache.pdfbox.util.PDFTextStripper: boolean shouldSeparateByBeads>;

        if $z1 == 0 goto label16;

        i16 = 0;

     label07:
        $r6 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.List pageArticles>;

        $i5 = interfaceinvoke $r6.<java.util.List: int size()>();

        if i16 >= $i5 goto label15;

        $i27 = (int) -1;

        if i12 != $i27 goto label15;

        $r7 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.List pageArticles>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i16);

        r32 = (org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead) $r8;

        if r32 == null goto label13;

        $r9 = virtualinvoke r32.<org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead: org.apache.pdfbox.pdmodel.common.PDRectangle getRectangle()>();

        $z6 = virtualinvoke $r9.<org.apache.pdfbox.pdmodel.common.PDRectangle: boolean contains(float,float)>($f0, $f1);

        if $z6 == 0 goto label08;

        $i10 = i16 * 2;

        i12 = $i10 + 1;

        goto label12;

     label08:
        $f2 = virtualinvoke $r9.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftX()>();

        $b6 = $f0 cmpg $f2;

        $i28 = (int) $b6;

        if $i28 < 0 goto label09;

        $f5 = virtualinvoke $r9.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getUpperRightY()>();

        $b9 = $f1 cmpg $f5;

        $i29 = (int) $b9;

        if $i29 >= 0 goto label10;

     label09:
        $i31 = (int) -1;

        if i13 != $i31 goto label10;

        i13 = i16 * 2;

        goto label12;

     label10:
        $f3 = virtualinvoke $r9.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftX()>();

        $b7 = $f0 cmpg $f3;

        $i32 = (int) $b7;

        if $i32 >= 0 goto label11;

        $i34 = (int) -1;

        if i14 != $i34 goto label11;

        i14 = i16 * 2;

        goto label12;

     label11:
        $f4 = virtualinvoke $r9.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getUpperRightY()>();

        $b8 = $f1 cmpg $f4;

        $i35 = (int) $b8;

        if $i35 >= 0 goto label12;

        $i37 = (int) -1;

        if i15 != $i37 goto label12;

        i15 = i16 * 2;

     label12:
        goto label14;

     label13:
        i12 = 0;

     label14:
        i16 = i16 + 1;

        goto label07;

     label15:
        goto label17;

     label16:
        i12 = 0;

     label17:
        $i39 = (int) -1;

        if i12 == $i39 goto label18;

        i17 = i12;

        goto label22;

     label18:
        $i41 = (int) -1;

        if i13 == $i41 goto label19;

        i17 = i13;

        goto label22;

     label19:
        $i43 = (int) -1;

        if i14 == $i43 goto label20;

        i17 = i14;

        goto label22;

     label20:
        $i45 = (int) -1;

        if i15 == $i45 goto label21;

        i17 = i15;

        goto label22;

     label21:
        $r2 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.Vector charactersByArticle>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        i17 = $i0 - 1;

     label22:
        $r33 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.Vector charactersByArticle>;

        $r34 = virtualinvoke $r33.<java.util.Vector: java.lang.Object get(int)>(i17);

        $r35 = (java.util.List) $r34;

        $z11 = interfaceinvoke $r35.<java.util.List: boolean isEmpty()>();

        if $z11 == 0 goto label23;

        interfaceinvoke $r35.<java.util.List: boolean add(java.lang.Object)>(r1);

        goto label26;

     label23:
        $i1 = interfaceinvoke $r35.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        $r3 = interfaceinvoke $r35.<java.util.List: java.lang.Object get(int)>($i2);

        r36 = (org.apache.pdfbox.util.TextPosition) $r3;

        $z2 = virtualinvoke r1.<org.apache.pdfbox.util.TextPosition: boolean isDiacritic()>();

        if $z2 == 0 goto label24;

        $z5 = virtualinvoke r36.<org.apache.pdfbox.util.TextPosition: boolean contains(org.apache.pdfbox.util.TextPosition)>(r1);

        if $z5 == 0 goto label24;

        $r5 = r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.util.TextNormalize normalize>;

        virtualinvoke r36.<org.apache.pdfbox.util.TextPosition: void mergeDiacritic(org.apache.pdfbox.util.TextPosition,org.apache.pdfbox.util.TextNormalize)>(r1, $r5);

        goto label26;

     label24:
        $z3 = virtualinvoke r36.<org.apache.pdfbox.util.TextPosition: boolean isDiacritic()>();

        if $z3 == 0 goto label25;

        $z4 = virtualinvoke r1.<org.apache.pdfbox.util.TextPosition: boolean contains(org.apache.pdfbox.util.TextPosition)>(r36);

        if $z4 == 0 goto label25;

        $r4 = r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.util.TextNormalize normalize>;

        virtualinvoke r1.<org.apache.pdfbox.util.TextPosition: void mergeDiacritic(org.apache.pdfbox.util.TextPosition,org.apache.pdfbox.util.TextNormalize)>(r36, $r4);

        $i3 = interfaceinvoke $r35.<java.util.List: int size()>();

        $i4 = $i3 - 1;

        interfaceinvoke $r35.<java.util.List: java.lang.Object remove(int)>($i4);

        interfaceinvoke $r35.<java.util.List: boolean add(java.lang.Object)>(r1);

        goto label26;

     label25:
        interfaceinvoke $r35.<java.util.List: boolean add(java.lang.Object)>(r1);

     label26:
        return;
    }

    public int getStartPage()
    {
        int $i0;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        $i0 = r0.<org.apache.pdfbox.util.PDFTextStripper: int startPage>;

        return $i0;
    }

    public void setStartPage(int)
    {
        int i0;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        i0 := @parameter0: int;

        r0.<org.apache.pdfbox.util.PDFTextStripper: int startPage> = i0;

        return;
    }

    public int getEndPage()
    {
        int $i0;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        $i0 = r0.<org.apache.pdfbox.util.PDFTextStripper: int endPage>;

        return $i0;
    }

    public void setEndPage(int)
    {
        int i0;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        i0 := @parameter0: int;

        r0.<org.apache.pdfbox.util.PDFTextStripper: int endPage> = i0;

        return;
    }

    public void setLineSeparator(java.lang.String)
    {
        java.lang.String r1;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String lineSeparator> = r1;

        return;
    }

    public java.lang.String getLineSeparator()
    {
        java.lang.String $r1;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        $r1 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String lineSeparator>;

        return $r1;
    }

    public void setPageSeparator(java.lang.String)
    {
        java.lang.String r1;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String pageSeparator> = r1;

        return;
    }

    public java.lang.String getWordSeparator()
    {
        java.lang.String $r1;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        $r1 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String wordSeparator>;

        return $r1;
    }

    public void setWordSeparator(java.lang.String)
    {
        java.lang.String r1;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String wordSeparator> = r1;

        return;
    }

    public java.lang.String getPageSeparator()
    {
        java.lang.String $r1;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        $r1 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String pageSeparator>;

        return $r1;
    }

    public boolean getSuppressDuplicateOverlappingText()
    {
        org.apache.pdfbox.util.PDFTextStripper r0;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        $z0 = r0.<org.apache.pdfbox.util.PDFTextStripper: boolean suppressDuplicateOverlappingText>;

        return $z0;
    }

    protected int getCurrentPageNo()
    {
        int $i0;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        $i0 = r0.<org.apache.pdfbox.util.PDFTextStripper: int currentPageNo>;

        return $i0;
    }

    protected java.io.Writer getOutput()
    {
        java.io.Writer $r1;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        $r1 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.io.Writer output>;

        return $r1;
    }

    protected java.util.Vector getCharactersByArticle()
    {
        java.util.Vector $r1;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        $r1 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.Vector charactersByArticle>;

        return $r1;
    }

    public void setSuppressDuplicateOverlappingText(boolean)
    {
        org.apache.pdfbox.util.PDFTextStripper r0;
        boolean z0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        z0 := @parameter0: boolean;

        r0.<org.apache.pdfbox.util.PDFTextStripper: boolean suppressDuplicateOverlappingText> = z0;

        return;
    }

    public boolean getSeparateByBeads()
    {
        org.apache.pdfbox.util.PDFTextStripper r0;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        $z0 = r0.<org.apache.pdfbox.util.PDFTextStripper: boolean shouldSeparateByBeads>;

        return $z0;
    }

    public void setShouldSeparateByBeads(boolean)
    {
        org.apache.pdfbox.util.PDFTextStripper r0;
        boolean z0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        z0 := @parameter0: boolean;

        r0.<org.apache.pdfbox.util.PDFTextStripper: boolean shouldSeparateByBeads> = z0;

        return;
    }

    public org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem getEndBookmark()
    {
        org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem $r1;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        $r1 = r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem endBookmark>;

        return $r1;
    }

    public void setEndBookmark(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)
    {
        org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem r1;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem;

        r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem endBookmark> = r1;

        return;
    }

    public org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem getStartBookmark()
    {
        org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem $r1;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        $r1 = r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem startBookmark>;

        return $r1;
    }

    public void setStartBookmark(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)
    {
        org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem r1;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem;

        r0.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem startBookmark> = r1;

        return;
    }

    public boolean getAddMoreFormatting()
    {
        org.apache.pdfbox.util.PDFTextStripper r0;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        $z0 = r0.<org.apache.pdfbox.util.PDFTextStripper: boolean addMoreFormatting>;

        return $z0;
    }

    public void setAddMoreFormatting(boolean)
    {
        org.apache.pdfbox.util.PDFTextStripper r0;
        boolean z0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        z0 := @parameter0: boolean;

        r0.<org.apache.pdfbox.util.PDFTextStripper: boolean addMoreFormatting> = z0;

        return;
    }

    public boolean getSortByPosition()
    {
        org.apache.pdfbox.util.PDFTextStripper r0;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        $z0 = r0.<org.apache.pdfbox.util.PDFTextStripper: boolean sortByPosition>;

        return $z0;
    }

    public void setSortByPosition(boolean)
    {
        org.apache.pdfbox.util.PDFTextStripper r0;
        boolean z0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        z0 := @parameter0: boolean;

        r0.<org.apache.pdfbox.util.PDFTextStripper: boolean sortByPosition> = z0;

        return;
    }

    public float getSpacingTolerance()
    {
        float $f0;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        $f0 = r0.<org.apache.pdfbox.util.PDFTextStripper: float spacingTolerance>;

        return $f0;
    }

    public void setSpacingTolerance(float)
    {
        float f0;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        f0 := @parameter0: float;

        r0.<org.apache.pdfbox.util.PDFTextStripper: float spacingTolerance> = f0;

        return;
    }

    public float getAverageCharTolerance()
    {
        float $f0;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        $f0 = r0.<org.apache.pdfbox.util.PDFTextStripper: float averageCharTolerance>;

        return $f0;
    }

    public void setAverageCharTolerance(float)
    {
        float f0;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        f0 := @parameter0: float;

        r0.<org.apache.pdfbox.util.PDFTextStripper: float averageCharTolerance> = f0;

        return;
    }

    public float getIndentThreshold()
    {
        float $f0;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        $f0 = r0.<org.apache.pdfbox.util.PDFTextStripper: float indentThreshold>;

        return $f0;
    }

    public void setIndentThreshold(float)
    {
        float f0;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        f0 := @parameter0: float;

        r0.<org.apache.pdfbox.util.PDFTextStripper: float indentThreshold> = f0;

        return;
    }

    public float getDropThreshold()
    {
        float $f0;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        $f0 = r0.<org.apache.pdfbox.util.PDFTextStripper: float dropThreshold>;

        return $f0;
    }

    public void setDropThreshold(float)
    {
        float f0;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        f0 := @parameter0: float;

        r0.<org.apache.pdfbox.util.PDFTextStripper: float dropThreshold> = f0;

        return;
    }

    public java.lang.String getParagraphStart()
    {
        java.lang.String $r1;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        $r1 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String paragraphStart>;

        return $r1;
    }

    public void setParagraphStart(java.lang.String)
    {
        java.lang.String r1;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String paragraphStart> = r1;

        return;
    }

    public java.lang.String getParagraphEnd()
    {
        java.lang.String $r1;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        $r1 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String paragraphEnd>;

        return $r1;
    }

    public void setParagraphEnd(java.lang.String)
    {
        java.lang.String r1;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String paragraphEnd> = r1;

        return;
    }

    public java.lang.String getPageStart()
    {
        java.lang.String $r1;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        $r1 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String pageStart>;

        return $r1;
    }

    public void setPageStart(java.lang.String)
    {
        java.lang.String r1;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String pageStart> = r1;

        return;
    }

    public java.lang.String getPageEnd()
    {
        java.lang.String $r1;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        $r1 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String pageEnd>;

        return $r1;
    }

    public void setPageEnd(java.lang.String)
    {
        java.lang.String r1;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String pageEnd> = r1;

        return;
    }

    public java.lang.String getArticleStart()
    {
        java.lang.String $r1;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        $r1 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String articleStart>;

        return $r1;
    }

    public void setArticleStart(java.lang.String)
    {
        java.lang.String r1;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String articleStart> = r1;

        return;
    }

    public java.lang.String getArticleEnd()
    {
        java.lang.String $r1;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        $r1 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String articleEnd>;

        return $r1;
    }

    public void setArticleEnd(java.lang.String)
    {
        java.lang.String r1;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String articleEnd> = r1;

        return;
    }

    public java.lang.String inspectFontEncoding(java.lang.String)
    {
        byte $b6;
        int $i0, $i1, $i2, $i3, i7, i8, $i9, $i11;
        java.lang.String r1, $r3;
        boolean $z0;
        char $c4, $c5;
        org.apache.pdfbox.util.PDFTextStripper r0;
        java.lang.StringBuilder $r4;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.apache.pdfbox.util.PDFTextStripper: boolean sortByPosition>;

        if $z0 == 0 goto label1;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 >= 2 goto label2;

     label1:
        return r1;

     label2:
        i7 = 0;

     label3:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if i7 >= $i1 goto label5;

        $c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i7);

        $b6 = staticinvoke <java.lang.Character: byte getDirectionality(char)>($c5);

        $i9 = (int) $b6;

        if $i9 == 2 goto label4;

        return r1;

     label4:
        i7 = i7 + 1;

        goto label3;

     label5:
        $r4 = new java.lang.StringBuilder;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i2);

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        i8 = $i3 - 1;

     label6:
        if i8 < 0 goto label7;

        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i8);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        $i11 = (int) -1;

        i8 = i8 + $i11;

        goto label6;

     label7:
        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    protected org.apache.pdfbox.util.PositionWrapper handleLineSeparation(org.apache.pdfbox.util.PositionWrapper, org.apache.pdfbox.util.PositionWrapper, org.apache.pdfbox.util.PositionWrapper, float) throws java.io.IOException
    {
        org.apache.pdfbox.util.PositionWrapper r0, r2, r3;
        org.apache.pdfbox.util.PDFTextStripper r1;
        float f0;
        boolean $z0, $z1;

        r1 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r0 := @parameter0: org.apache.pdfbox.util.PositionWrapper;

        r2 := @parameter1: org.apache.pdfbox.util.PositionWrapper;

        r3 := @parameter2: org.apache.pdfbox.util.PositionWrapper;

        f0 := @parameter3: float;

        virtualinvoke r0.<org.apache.pdfbox.util.PositionWrapper: void setLineStart()>();

        virtualinvoke r1.<org.apache.pdfbox.util.PDFTextStripper: void isParagraphSeparation(org.apache.pdfbox.util.PositionWrapper,org.apache.pdfbox.util.PositionWrapper,org.apache.pdfbox.util.PositionWrapper,float)>(r0, r2, r3, f0);

        $z0 = virtualinvoke r0.<org.apache.pdfbox.util.PositionWrapper: boolean isParagraphStart()>();

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r2.<org.apache.pdfbox.util.PositionWrapper: boolean isArticleStart()>();

        if $z1 == 0 goto label1;

        virtualinvoke r1.<org.apache.pdfbox.util.PDFTextStripper: void writeParagraphStart()>();

        goto label3;

     label1:
        virtualinvoke r1.<org.apache.pdfbox.util.PDFTextStripper: void writeLineSeparator()>();

        virtualinvoke r1.<org.apache.pdfbox.util.PDFTextStripper: void writeParagraphSeparator()>();

        goto label3;

     label2:
        virtualinvoke r1.<org.apache.pdfbox.util.PDFTextStripper: void writeLineSeparator()>();

     label3:
        return r0;
    }

    protected void isParagraphSeparation(org.apache.pdfbox.util.PositionWrapper, org.apache.pdfbox.util.PositionWrapper, org.apache.pdfbox.util.PositionWrapper, float)
    {
        byte $b0, $b1, $b2, $b3;
        boolean $z0, $z1, $z2, $z3, z4;
        org.apache.pdfbox.util.TextPosition $r2, $r4, $r5, $r6, $r8, $r9, $r10;
        float $f0, $f1, $f2, $f3, $f4, $f5, f6, $f7, f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16;
        java.util.regex.Pattern $r11, $r12;
        int $i4, $i5, $i6, $i7;
        double $d0, $d1, $d2;
        org.apache.pdfbox.util.PositionWrapper r0, r1, r3;
        org.apache.pdfbox.util.PDFTextStripper r7;

        r7 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r1 := @parameter0: org.apache.pdfbox.util.PositionWrapper;

        r3 := @parameter1: org.apache.pdfbox.util.PositionWrapper;

        r0 := @parameter2: org.apache.pdfbox.util.PositionWrapper;

        f8 := @parameter3: float;

        z4 = 0;

        if r0 != null goto label1;

        z4 = 1;

        goto label7;

     label1:
        $r2 = virtualinvoke r1.<org.apache.pdfbox.util.PositionWrapper: org.apache.pdfbox.util.TextPosition getTextPosition()>();

        $f0 = virtualinvoke $r2.<org.apache.pdfbox.util.TextPosition: float getYDirAdj()>();

        $r4 = virtualinvoke r3.<org.apache.pdfbox.util.PositionWrapper: org.apache.pdfbox.util.TextPosition getTextPosition()>();

        $f1 = virtualinvoke $r4.<org.apache.pdfbox.util.TextPosition: float getYDirAdj()>();

        $f2 = $f0 - $f1;

        $f3 = staticinvoke <java.lang.Math: float abs(float)>($f2);

        $r5 = virtualinvoke r1.<org.apache.pdfbox.util.PositionWrapper: org.apache.pdfbox.util.TextPosition getTextPosition()>();

        $f4 = virtualinvoke $r5.<org.apache.pdfbox.util.TextPosition: float getXDirAdj()>();

        $r6 = virtualinvoke r0.<org.apache.pdfbox.util.PositionWrapper: org.apache.pdfbox.util.TextPosition getTextPosition()>();

        $f5 = virtualinvoke $r6.<org.apache.pdfbox.util.TextPosition: float getXDirAdj()>();

        f6 = $f4 - $f5;

        $f7 = virtualinvoke r7.<org.apache.pdfbox.util.PDFTextStripper: float getDropThreshold()>();

        $f9 = $f7 * f8;

        $b0 = $f3 cmpl $f9;

        $i4 = (int) $b0;

        if $i4 <= 0 goto label2;

        z4 = 1;

        goto label7;

     label2:
        $f10 = virtualinvoke r7.<org.apache.pdfbox.util.PDFTextStripper: float getIndentThreshold()>();

        $r8 = virtualinvoke r1.<org.apache.pdfbox.util.PositionWrapper: org.apache.pdfbox.util.TextPosition getTextPosition()>();

        $f11 = virtualinvoke $r8.<org.apache.pdfbox.util.TextPosition: float getWidthOfSpace()>();

        $f12 = $f10 * $f11;

        $b1 = f6 cmpl $f12;

        $i5 = (int) $b1;

        if $i5 <= 0 goto label4;

        $z3 = virtualinvoke r0.<org.apache.pdfbox.util.PositionWrapper: boolean isParagraphStart()>();

        if $z3 != 0 goto label3;

        z4 = 1;

        goto label7;

     label3:
        virtualinvoke r1.<org.apache.pdfbox.util.PositionWrapper: void setHangingIndent()>();

        goto label7;

     label4:
        $r9 = virtualinvoke r1.<org.apache.pdfbox.util.PositionWrapper: org.apache.pdfbox.util.TextPosition getTextPosition()>();

        $f13 = virtualinvoke $r9.<org.apache.pdfbox.util.TextPosition: float getWidthOfSpace()>();

        $f14 = neg $f13;

        $b2 = f6 cmpg $f14;

        $i6 = (int) $b2;

        if $i6 >= 0 goto label5;

        $z2 = virtualinvoke r0.<org.apache.pdfbox.util.PositionWrapper: boolean isParagraphStart()>();

        if $z2 != 0 goto label7;

        z4 = 1;

        goto label7;

     label5:
        $f15 = staticinvoke <java.lang.Math: float abs(float)>(f6);

        $d0 = (double) $f15;

        $r10 = virtualinvoke r1.<org.apache.pdfbox.util.PositionWrapper: org.apache.pdfbox.util.TextPosition getTextPosition()>();

        $f16 = virtualinvoke $r10.<org.apache.pdfbox.util.TextPosition: float getWidth()>();

        $d1 = (double) $f16;

        $d2 = 0.25 * $d1;

        $b3 = $d0 cmpg $d2;

        $i7 = (int) $b3;

        if $i7 >= 0 goto label7;

        $z0 = virtualinvoke r0.<org.apache.pdfbox.util.PositionWrapper: boolean isHangingIndent()>();

        if $z0 == 0 goto label6;

        virtualinvoke r1.<org.apache.pdfbox.util.PositionWrapper: void setHangingIndent()>();

        goto label7;

     label6:
        $z1 = virtualinvoke r0.<org.apache.pdfbox.util.PositionWrapper: boolean isParagraphStart()>();

        if $z1 == 0 goto label7;

        $r11 = virtualinvoke r7.<org.apache.pdfbox.util.PDFTextStripper: java.util.regex.Pattern matchListItemPattern(org.apache.pdfbox.util.PositionWrapper)>(r0);

        if $r11 == null goto label7;

        $r12 = virtualinvoke r7.<org.apache.pdfbox.util.PDFTextStripper: java.util.regex.Pattern matchListItemPattern(org.apache.pdfbox.util.PositionWrapper)>(r1);

        if $r11 != $r12 goto label7;

        z4 = 1;

     label7:
        if z4 == 0 goto label8;

        virtualinvoke r1.<org.apache.pdfbox.util.PositionWrapper: void setParagraphStart()>();

     label8:
        return;
    }

    protected void writeParagraphSeparator() throws java.io.IOException
    {
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: void writeParagraphEnd()>();

        virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: void writeParagraphStart()>();

        return;
    }

    protected void writeParagraphStart() throws java.io.IOException
    {
        org.apache.pdfbox.util.PDFTextStripper r0;
        java.io.Writer $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        $z0 = r0.<org.apache.pdfbox.util.PDFTextStripper: boolean inParagraph>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: void writeParagraphEnd()>();

        r0.<org.apache.pdfbox.util.PDFTextStripper: boolean inParagraph> = 0;

     label1:
        $r1 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.io.Writer output>;

        $r2 = virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String getParagraphStart()>();

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>($r2);

        r0.<org.apache.pdfbox.util.PDFTextStripper: boolean inParagraph> = 1;

        return;
    }

    protected void writeParagraphEnd() throws java.io.IOException
    {
        java.io.Writer $r1;
        java.lang.String $r2;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        $r1 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.io.Writer output>;

        $r2 = virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String getParagraphEnd()>();

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>($r2);

        r0.<org.apache.pdfbox.util.PDFTextStripper: boolean inParagraph> = 0;

        return;
    }

    protected void writePageStart() throws java.io.IOException
    {
        java.io.Writer $r1;
        java.lang.String $r2;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        $r1 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.io.Writer output>;

        $r2 = virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String getPageStart()>();

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>($r2);

        return;
    }

    protected void writePageEnd() throws java.io.IOException
    {
        java.io.Writer $r1;
        java.lang.String $r2;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        $r1 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.io.Writer output>;

        $r2 = virtualinvoke r0.<org.apache.pdfbox.util.PDFTextStripper: java.lang.String getPageEnd()>();

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>($r2);

        return;
    }

    protected java.util.regex.Pattern matchListItemPattern(org.apache.pdfbox.util.PositionWrapper)
    {
        java.util.List $r4;
        org.apache.pdfbox.util.PositionWrapper r0;
        org.apache.pdfbox.util.PDFTextStripper r3;
        org.apache.pdfbox.util.TextPosition $r1;
        java.lang.String $r2;
        java.util.regex.Pattern $r5;

        r3 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r0 := @parameter0: org.apache.pdfbox.util.PositionWrapper;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.util.PositionWrapper: org.apache.pdfbox.util.TextPosition getTextPosition()>();

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.util.TextPosition: java.lang.String getCharacter()>();

        $r4 = virtualinvoke r3.<org.apache.pdfbox.util.PDFTextStripper: java.util.List getListItemPatterns()>();

        $r5 = staticinvoke <org.apache.pdfbox.util.PDFTextStripper: java.util.regex.Pattern matchPattern(java.lang.String,java.util.List)>($r2, $r4);

        return $r5;
    }

    protected void setListItemPatterns(java.util.List)
    {
        java.util.List r1;
        org.apache.pdfbox.util.PDFTextStripper r0;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r1 := @parameter0: java.util.List;

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.List listOfPatterns> = r1;

        return;
    }

    protected java.util.List getListItemPatterns()
    {
        java.lang.String[] r4;
        java.util.ArrayList $r3;
        java.util.List $r1, $r2, $r7;
        org.apache.pdfbox.util.PDFTextStripper r0;
        int i0, i1;
        java.lang.String r5;
        java.util.regex.Pattern $r6;

        r0 := @this: org.apache.pdfbox.util.PDFTextStripper;

        $r1 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.List listOfPatterns>;

        if $r1 != null goto label2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.List listOfPatterns> = $r3;

        r4 = <org.apache.pdfbox.util.PDFTextStripper: java.lang.String[] LIST_ITEM_EXPRESSIONS>;

        i0 = lengthof r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r5 = r4[i1];

        $r6 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r5);

        $r7 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.List listOfPatterns>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r6);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = r0.<org.apache.pdfbox.util.PDFTextStripper: java.util.List listOfPatterns>;

        return $r2;
    }

    protected static final java.util.regex.Pattern matchPattern(java.lang.String, java.util.List)
    {
        java.util.Iterator $r1;
        java.util.List r0;
        java.util.regex.Matcher $r5;
        java.lang.Object $r2;
        java.util.regex.Pattern r3;
        java.lang.String r4;
        boolean $z0, $z1;

        r4 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.regex.Pattern) $r2;

        $r5 = virtualinvoke r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r4);

        $z1 = virtualinvoke $r5.<java.util.regex.Matcher: boolean matches()>();

        if $z1 == 0 goto label2;

        return r3;

     label2:
        goto label1;

     label3:
        return null;
    }

    private void writeLine(java.util.List, boolean) throws java.io.IOException
    {
        java.util.List r0, $r5;
        org.apache.pdfbox.util.PDFTextStripper$WordWithTextPositions r2;
        org.apache.pdfbox.util.PDFTextStripper r3;
        int $i0, $i1, i2;
        java.lang.Object $r1;
        java.lang.String $r4;
        boolean z0;

        r3 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r0 := @parameter0: java.util.List;

        z0 := @parameter1: boolean;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        i2 = 0;

     label1:
        if i2 >= $i0 goto label3;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);

        r2 = (org.apache.pdfbox.util.PDFTextStripper$WordWithTextPositions) $r1;

        $r4 = virtualinvoke r2.<org.apache.pdfbox.util.PDFTextStripper$WordWithTextPositions: java.lang.String getText()>();

        $r5 = virtualinvoke r2.<org.apache.pdfbox.util.PDFTextStripper$WordWithTextPositions: java.util.List getTextPositions()>();

        virtualinvoke r3.<org.apache.pdfbox.util.PDFTextStripper: void writeString(java.lang.String,java.util.List)>($r4, $r5);

        $i1 = $i0 - 1;

        if i2 >= $i1 goto label2;

        virtualinvoke r3.<org.apache.pdfbox.util.PDFTextStripper: void writeWordSeparator()>();

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    private java.util.List normalize(java.util.List, boolean, boolean)
    {
        java.util.ArrayList $r15;
        org.apache.pdfbox.util.PDFTextStripper$WordWithTextPositions $r7;
        int $i0, $i1, i2, $i4;
        java.lang.String $r6;
        java.util.LinkedList $r13;
        boolean z0, $z1, z2;
        java.util.Iterator $r4;
        org.apache.pdfbox.util.TextPosition $r10, r12;
        java.util.List r3;
        org.apache.pdfbox.util.PDFTextStripper r5;
        java.lang.Object $r8, $r9;
        java.lang.StringBuilder r11, $r14;

        r5 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r3 := @parameter0: java.util.List;

        z0 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        $r13 = new java.util.LinkedList;

        specialinvoke $r13.<java.util.LinkedList: void <init>()>();

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        r11 = $r14;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        if z0 == 0 goto label3;

        $i1 = interfaceinvoke r3.<java.util.List: int size()>();

        i2 = $i1 - 1;

     label1:
        if i2 < 0 goto label2;

        $r9 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i2);

        $r10 = (org.apache.pdfbox.util.TextPosition) $r9;

        r11 = specialinvoke r5.<org.apache.pdfbox.util.PDFTextStripper: java.lang.StringBuilder normalizeAdd(java.util.LinkedList,java.lang.StringBuilder,java.util.List,org.apache.pdfbox.util.TextPosition)>($r13, r11, $r15, $r10);

        $i4 = (int) -1;

        i2 = i2 + $i4;

        goto label1;

     label2:
        goto label5;

     label3:
        $r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r8 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.apache.pdfbox.util.TextPosition) $r8;

        r11 = specialinvoke r5.<org.apache.pdfbox.util.PDFTextStripper: java.lang.StringBuilder normalizeAdd(java.util.LinkedList,java.lang.StringBuilder,java.util.List,org.apache.pdfbox.util.TextPosition)>($r13, r11, $r15, r12);

        goto label4;

     label5:
        $i0 = virtualinvoke r11.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label6;

        $r6 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = specialinvoke r5.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.util.PDFTextStripper$WordWithTextPositions createWord(java.lang.String,java.util.List)>($r6, $r15);

        virtualinvoke $r13.<java.util.LinkedList: boolean add(java.lang.Object)>($r7);

     label6:
        return $r13;
    }

    private org.apache.pdfbox.util.PDFTextStripper$WordWithTextPositions createWord(java.lang.String, java.util.List)
    {
        java.util.List r5;
        org.apache.pdfbox.util.PDFTextStripper$WordWithTextPositions $r0;
        org.apache.pdfbox.util.PDFTextStripper r1;
        java.lang.String r2, $r4;
        org.apache.pdfbox.util.TextNormalize $r3;

        r1 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r2 := @parameter0: java.lang.String;

        r5 := @parameter1: java.util.List;

        $r0 = new org.apache.pdfbox.util.PDFTextStripper$WordWithTextPositions;

        $r3 = r1.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.util.TextNormalize normalize>;

        $r4 = virtualinvoke $r3.<org.apache.pdfbox.util.TextNormalize: java.lang.String normalizePres(java.lang.String)>(r2);

        specialinvoke $r0.<org.apache.pdfbox.util.PDFTextStripper$WordWithTextPositions: void <init>(java.lang.String,java.util.List)>($r4, r5);

        return $r0;
    }

    private java.lang.StringBuilder normalizeAdd(java.util.LinkedList, java.lang.StringBuilder, java.util.List, org.apache.pdfbox.util.TextPosition)
    {
        org.apache.pdfbox.util.TextPosition r0;
        java.util.ArrayList $r6;
        java.util.List r2;
        org.apache.pdfbox.util.PDFTextStripper$WordWithTextPositions $r7;
        org.apache.pdfbox.util.PDFTextStripper r4;
        java.lang.StringBuilder $r8, r9;
        java.lang.String $r1, $r5;
        java.util.LinkedList r3;
        boolean $z0;

        r4 := @this: org.apache.pdfbox.util.PDFTextStripper;

        r3 := @parameter0: java.util.LinkedList;

        r9 := @parameter1: java.lang.StringBuilder;

        r2 := @parameter2: java.util.List;

        r0 := @parameter3: org.apache.pdfbox.util.TextPosition;

        $z0 = r0 instanceof org.apache.pdfbox.util.PDFTextStripper$WordSeparator;

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r2);

        $r7 = specialinvoke r4.<org.apache.pdfbox.util.PDFTextStripper: org.apache.pdfbox.util.PDFTextStripper$WordWithTextPositions createWord(java.lang.String,java.util.List)>($r5, $r6);

        virtualinvoke r3.<java.util.LinkedList: boolean add(java.lang.Object)>($r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        r9 = $r8;

        interfaceinvoke r2.<java.util.List: void clear()>();

        goto label2;

     label1:
        $r1 = virtualinvoke r0.<org.apache.pdfbox.util.TextPosition: java.lang.String getCharacter()>();

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r0);

     label2:
        return r9;
    }

    static void <clinit>()
    {
        java.lang.String[] $r18;
        int $i0, $i1;
        java.lang.SecurityException $r15;
        java.lang.String $r1, $r2, $r4, $r7, $r9, $r12, r16, r17;
        java.lang.NumberFormatException $r13, $r14;
        float $f0, $f1;
        java.lang.Class $r0;
        java.lang.StringBuilder $r3, $r5, $r6, $r8, $r10, $r11;

        <org.apache.pdfbox.util.PDFTextStripper: float LASTWORDSPACING_RESET_VALUE> = -1.0F;

        <org.apache.pdfbox.util.PDFTextStripper: float MINYTOPFORLINE_RESET_VALUE> = 3.4028235E38F;

        <org.apache.pdfbox.util.PDFTextStripper: float MAXHEIGHTFORLINE_RESET_VALUE> = -1.0F;

        <org.apache.pdfbox.util.PDFTextStripper: float EXPECTEDSTARTOFNEXTWORDX_RESET_VALUE> = -3.4028235E38F;

        <org.apache.pdfbox.util.PDFTextStripper: float MAXYFORLINE_RESET_VALUE> = -3.4028235E38F;

        <org.apache.pdfbox.util.PDFTextStripper: float ENDOFLASTTEXTX_RESET_VALUE> = -1.0F;

        $r0 = class "Lorg/apache/pdfbox/util/PDFTextStripper;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        <org.apache.pdfbox.util.PDFTextStripper: java.lang.String thisClassName> = $r2;

        <org.apache.pdfbox.util.PDFTextStripper: float DEFAULT_INDENT_THRESHOLD> = 2.0F;

        <org.apache.pdfbox.util.PDFTextStripper: float DEFAULT_DROP_THRESHOLD> = 2.5F;

        r16 = null;

        r17 = null;

     label01:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = <org.apache.pdfbox.util.PDFTextStripper: java.lang.String thisClassName>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".indent");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        r17 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>($r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = <org.apache.pdfbox.util.PDFTextStripper: java.lang.String thisClassName>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".drop");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        r16 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>($r12);

     label02:
        goto label04;

     label03:
        $r15 := @caughtexception;

     label04:
        if r17 == null goto label08;

        $i1 = virtualinvoke r17.<java.lang.String: int length()>();

        if $i1 <= 0 goto label08;

     label05:
        $f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r17);

        <org.apache.pdfbox.util.PDFTextStripper: float DEFAULT_INDENT_THRESHOLD> = $f1;

     label06:
        goto label08;

     label07:
        $r14 := @caughtexception;

     label08:
        if r16 == null goto label12;

        $i0 = virtualinvoke r16.<java.lang.String: int length()>();

        if $i0 <= 0 goto label12;

     label09:
        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r16);

        <org.apache.pdfbox.util.PDFTextStripper: float DEFAULT_DROP_THRESHOLD> = $f0;

     label10:
        goto label12;

     label11:
        $r13 := @caughtexception;

     label12:
        $r18 = newarray (java.lang.String)[10];

        $r18[0] = "\\.";

        $r18[1] = "\\d+\\.";

        $r18[2] = "\\[\\d+\\]";

        $r18[3] = "\\d+\\)";

        $r18[4] = "[A-Z]\\.";

        $r18[5] = "[a-z]\\.";

        $r18[6] = "[A-Z]\\)";

        $r18[7] = "[a-z]\\)";

        $r18[8] = "[IVXL]+\\.";

        $r18[9] = "[ivxl]+\\.";

        <org.apache.pdfbox.util.PDFTextStripper: java.lang.String[] LIST_ITEM_EXPRESSIONS> = $r18;

        return;

        catch java.lang.SecurityException from label01 to label02 with label03;
        catch java.lang.NumberFormatException from label05 to label06 with label07;
        catch java.lang.NumberFormatException from label09 to label10 with label11;
    }
}
