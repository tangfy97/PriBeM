public class org.fife.ui.rtextarea.RUndoManager extends javax.swing.undo.UndoManager
{
    private org.fife.ui.rtextarea.RUndoManager$RCompoundEdit compoundEdit;
    private org.fife.ui.rtextarea.RTextArea textArea;
    private int lastOffset;
    private java.lang.String cantUndoText;
    private java.lang.String cantRedoText;
    private int internalAtomicEditDepth;
    private static final java.lang.String MSG;

    public void <init>(org.fife.ui.rtextarea.RTextArea)
    {
        org.fife.ui.rtextarea.RUndoManager r0;
        java.util.ResourceBundle $r2;
        org.fife.ui.rtextarea.RTextArea r1;
        java.lang.String $r3, $r4;

        r0 := @this: org.fife.ui.rtextarea.RUndoManager;

        r1 := @parameter0: org.fife.ui.rtextarea.RTextArea;

        specialinvoke r0.<javax.swing.undo.UndoManager: void <init>()>();

        r0.<org.fife.ui.rtextarea.RUndoManager: org.fife.ui.rtextarea.RTextArea textArea> = r1;

        $r2 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)>("org.fife.ui.rtextarea.RTextArea");

        $r3 = virtualinvoke $r2.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Action.CantUndo.Name");

        r0.<org.fife.ui.rtextarea.RUndoManager: java.lang.String cantUndoText> = $r3;

        $r4 = virtualinvoke $r2.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Action.CantRedo.Name");

        r0.<org.fife.ui.rtextarea.RUndoManager: java.lang.String cantRedoText> = $r4;

        return;
    }

    public void beginInternalAtomicEdit()
    {
        org.fife.ui.rtextarea.RUndoManager r0;
        int $i0, $i1;
        org.fife.ui.rtextarea.RUndoManager$RCompoundEdit $r1, $r2, $r3;

        r0 := @this: org.fife.ui.rtextarea.RUndoManager;

        $i0 = r0.<org.fife.ui.rtextarea.RUndoManager: int internalAtomicEditDepth>;

        $i1 = $i0 + 1;

        r0.<org.fife.ui.rtextarea.RUndoManager: int internalAtomicEditDepth> = $i1;

        if $i1 != 1 goto label2;

        $r1 = r0.<org.fife.ui.rtextarea.RUndoManager: org.fife.ui.rtextarea.RUndoManager$RCompoundEdit compoundEdit>;

        if $r1 == null goto label1;

        $r3 = r0.<org.fife.ui.rtextarea.RUndoManager: org.fife.ui.rtextarea.RUndoManager$RCompoundEdit compoundEdit>;

        virtualinvoke $r3.<org.fife.ui.rtextarea.RUndoManager$RCompoundEdit: void end()>();

     label1:
        $r2 = new org.fife.ui.rtextarea.RUndoManager$RCompoundEdit;

        specialinvoke $r2.<org.fife.ui.rtextarea.RUndoManager$RCompoundEdit: void <init>(org.fife.ui.rtextarea.RUndoManager)>(r0);

        r0.<org.fife.ui.rtextarea.RUndoManager: org.fife.ui.rtextarea.RUndoManager$RCompoundEdit compoundEdit> = $r2;

     label2:
        return;
    }

    public void endInternalAtomicEdit()
    {
        org.fife.ui.rtextarea.RUndoManager r0;
        int $i0, $i1, $i2;
        org.fife.ui.rtextarea.RUndoManager$RCompoundEdit $r1, $r2;

        r0 := @this: org.fife.ui.rtextarea.RUndoManager;

        $i0 = r0.<org.fife.ui.rtextarea.RUndoManager: int internalAtomicEditDepth>;

        if $i0 <= 0 goto label1;

        $i1 = r0.<org.fife.ui.rtextarea.RUndoManager: int internalAtomicEditDepth>;

        $i2 = $i1 - 1;

        r0.<org.fife.ui.rtextarea.RUndoManager: int internalAtomicEditDepth> = $i2;

        if $i2 != 0 goto label1;

        $r1 = r0.<org.fife.ui.rtextarea.RUndoManager: org.fife.ui.rtextarea.RUndoManager$RCompoundEdit compoundEdit>;

        virtualinvoke r0.<org.fife.ui.rtextarea.RUndoManager: boolean addEdit(javax.swing.undo.UndoableEdit)>($r1);

        $r2 = r0.<org.fife.ui.rtextarea.RUndoManager: org.fife.ui.rtextarea.RUndoManager$RCompoundEdit compoundEdit>;

        virtualinvoke $r2.<org.fife.ui.rtextarea.RUndoManager$RCompoundEdit: void end()>();

        r0.<org.fife.ui.rtextarea.RUndoManager: org.fife.ui.rtextarea.RUndoManager$RCompoundEdit compoundEdit> = null;

        virtualinvoke r0.<org.fife.ui.rtextarea.RUndoManager: void updateActions()>();

     label1:
        return;
    }

    public java.lang.String getCantRedoText()
    {
        org.fife.ui.rtextarea.RUndoManager r0;
        java.lang.String $r1;

        r0 := @this: org.fife.ui.rtextarea.RUndoManager;

        $r1 = r0.<org.fife.ui.rtextarea.RUndoManager: java.lang.String cantRedoText>;

        return $r1;
    }

    public java.lang.String getCantUndoText()
    {
        org.fife.ui.rtextarea.RUndoManager r0;
        java.lang.String $r1;

        r0 := @this: org.fife.ui.rtextarea.RUndoManager;

        $r1 = r0.<org.fife.ui.rtextarea.RUndoManager: java.lang.String cantUndoText>;

        return $r1;
    }

    public void redo() throws javax.swing.undo.CannotRedoException
    {
        org.fife.ui.rtextarea.RUndoManager r0;

        r0 := @this: org.fife.ui.rtextarea.RUndoManager;

        specialinvoke r0.<javax.swing.undo.UndoManager: void redo()>();

        virtualinvoke r0.<org.fife.ui.rtextarea.RUndoManager: void updateActions()>();

        return;
    }

    private org.fife.ui.rtextarea.RUndoManager$RCompoundEdit startCompoundEdit(javax.swing.undo.UndoableEdit)
    {
        javax.swing.undo.UndoableEdit r3;
        org.fife.ui.rtextarea.RTextArea $r1;
        org.fife.ui.rtextarea.RUndoManager$RCompoundEdit $r2, $r4, $r5, $r6;
        org.fife.ui.rtextarea.RUndoManager r0;
        int $i0;

        r0 := @this: org.fife.ui.rtextarea.RUndoManager;

        r3 := @parameter0: javax.swing.undo.UndoableEdit;

        $r1 = r0.<org.fife.ui.rtextarea.RUndoManager: org.fife.ui.rtextarea.RTextArea textArea>;

        $i0 = virtualinvoke $r1.<org.fife.ui.rtextarea.RTextArea: int getCaretPosition()>();

        r0.<org.fife.ui.rtextarea.RUndoManager: int lastOffset> = $i0;

        $r2 = new org.fife.ui.rtextarea.RUndoManager$RCompoundEdit;

        specialinvoke $r2.<org.fife.ui.rtextarea.RUndoManager$RCompoundEdit: void <init>(org.fife.ui.rtextarea.RUndoManager)>(r0);

        r0.<org.fife.ui.rtextarea.RUndoManager: org.fife.ui.rtextarea.RUndoManager$RCompoundEdit compoundEdit> = $r2;

        $r4 = r0.<org.fife.ui.rtextarea.RUndoManager: org.fife.ui.rtextarea.RUndoManager$RCompoundEdit compoundEdit>;

        virtualinvoke $r4.<org.fife.ui.rtextarea.RUndoManager$RCompoundEdit: boolean addEdit(javax.swing.undo.UndoableEdit)>(r3);

        $r5 = r0.<org.fife.ui.rtextarea.RUndoManager: org.fife.ui.rtextarea.RUndoManager$RCompoundEdit compoundEdit>;

        virtualinvoke r0.<org.fife.ui.rtextarea.RUndoManager: boolean addEdit(javax.swing.undo.UndoableEdit)>($r5);

        $r6 = r0.<org.fife.ui.rtextarea.RUndoManager: org.fife.ui.rtextarea.RUndoManager$RCompoundEdit compoundEdit>;

        return $r6;
    }

    public void undo() throws javax.swing.undo.CannotUndoException
    {
        org.fife.ui.rtextarea.RUndoManager r0;

        r0 := @this: org.fife.ui.rtextarea.RUndoManager;

        specialinvoke r0.<javax.swing.undo.UndoManager: void undo()>();

        virtualinvoke r0.<org.fife.ui.rtextarea.RUndoManager: void updateActions()>();

        return;
    }

    public void undoableEditHappened(javax.swing.event.UndoableEditEvent)
    {
        int $i0, $i1, $i2, i3, $i4, $i5, $i6;
        javax.swing.undo.UndoableEdit $r5, $r8, $r10, $r11;
        org.fife.ui.rtextarea.RTextArea $r2;
        org.fife.ui.rtextarea.RUndoManager$RCompoundEdit $r1, $r3, $r6, $r7, $r9, $r12;
        org.fife.ui.rtextarea.RUndoManager r0;
        javax.swing.event.UndoableEditEvent r4;

        r0 := @this: org.fife.ui.rtextarea.RUndoManager;

        r4 := @parameter0: javax.swing.event.UndoableEditEvent;

        $r1 = r0.<org.fife.ui.rtextarea.RUndoManager: org.fife.ui.rtextarea.RUndoManager$RCompoundEdit compoundEdit>;

        if $r1 != null goto label1;

        $r11 = virtualinvoke r4.<javax.swing.event.UndoableEditEvent: javax.swing.undo.UndoableEdit getEdit()>();

        $r12 = specialinvoke r0.<org.fife.ui.rtextarea.RUndoManager: org.fife.ui.rtextarea.RUndoManager$RCompoundEdit startCompoundEdit(javax.swing.undo.UndoableEdit)>($r11);

        r0.<org.fife.ui.rtextarea.RUndoManager: org.fife.ui.rtextarea.RUndoManager$RCompoundEdit compoundEdit> = $r12;

        virtualinvoke r0.<org.fife.ui.rtextarea.RUndoManager: void updateActions()>();

        return;

     label1:
        $i0 = r0.<org.fife.ui.rtextarea.RUndoManager: int internalAtomicEditDepth>;

        if $i0 <= 0 goto label2;

        $r9 = r0.<org.fife.ui.rtextarea.RUndoManager: org.fife.ui.rtextarea.RUndoManager$RCompoundEdit compoundEdit>;

        $r10 = virtualinvoke r4.<javax.swing.event.UndoableEditEvent: javax.swing.undo.UndoableEdit getEdit()>();

        virtualinvoke $r9.<org.fife.ui.rtextarea.RUndoManager$RCompoundEdit: boolean addEdit(javax.swing.undo.UndoableEdit)>($r10);

        return;

     label2:
        $r2 = r0.<org.fife.ui.rtextarea.RUndoManager: org.fife.ui.rtextarea.RTextArea textArea>;

        $i1 = virtualinvoke $r2.<org.fife.ui.rtextarea.RTextArea: int getCaretPosition()>();

        $i2 = r0.<org.fife.ui.rtextarea.RUndoManager: int lastOffset>;

        i3 = $i1 - $i2;

        $i4 = staticinvoke <java.lang.Math: int abs(int)>(i3);

        if $i4 > 1 goto label3;

        $r7 = r0.<org.fife.ui.rtextarea.RUndoManager: org.fife.ui.rtextarea.RUndoManager$RCompoundEdit compoundEdit>;

        $r8 = virtualinvoke r4.<javax.swing.event.UndoableEditEvent: javax.swing.undo.UndoableEdit getEdit()>();

        virtualinvoke $r7.<org.fife.ui.rtextarea.RUndoManager$RCompoundEdit: boolean addEdit(javax.swing.undo.UndoableEdit)>($r8);

        $i5 = r0.<org.fife.ui.rtextarea.RUndoManager: int lastOffset>;

        $i6 = $i5 + i3;

        r0.<org.fife.ui.rtextarea.RUndoManager: int lastOffset> = $i6;

        return;

     label3:
        $r3 = r0.<org.fife.ui.rtextarea.RUndoManager: org.fife.ui.rtextarea.RUndoManager$RCompoundEdit compoundEdit>;

        virtualinvoke $r3.<org.fife.ui.rtextarea.RUndoManager$RCompoundEdit: void end()>();

        $r5 = virtualinvoke r4.<javax.swing.event.UndoableEditEvent: javax.swing.undo.UndoableEdit getEdit()>();

        $r6 = specialinvoke r0.<org.fife.ui.rtextarea.RUndoManager: org.fife.ui.rtextarea.RUndoManager$RCompoundEdit startCompoundEdit(javax.swing.undo.UndoableEdit)>($r5);

        r0.<org.fife.ui.rtextarea.RUndoManager: org.fife.ui.rtextarea.RUndoManager$RCompoundEdit compoundEdit> = $r6;

        return;
    }

    public void updateActions()
    {
        org.fife.ui.rtextarea.RecordableTextAction $r0, $r5;
        org.fife.ui.rtextarea.RUndoManager r1;
        java.lang.String $r2, $r3, r4, r6;
        boolean $z0, $z1, $z2, $z3;

        r1 := @this: org.fife.ui.rtextarea.RUndoManager;

        $r0 = staticinvoke <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction getAction(int)>(6);

        $z0 = virtualinvoke r1.<org.fife.ui.rtextarea.RUndoManager: boolean canUndo()>();

        if $z0 == 0 goto label1;

        interfaceinvoke $r0.<javax.swing.Action: void setEnabled(boolean)>(1);

        $r3 = virtualinvoke r1.<org.fife.ui.rtextarea.RUndoManager: java.lang.String getUndoPresentationName()>();

        interfaceinvoke $r0.<javax.swing.Action: void putValue(java.lang.String,java.lang.Object)>("Name", $r3);

        interfaceinvoke $r0.<javax.swing.Action: void putValue(java.lang.String,java.lang.Object)>("ShortDescription", $r3);

        goto label2;

     label1:
        $z1 = interfaceinvoke $r0.<javax.swing.Action: boolean isEnabled()>();

        if $z1 == 0 goto label2;

        interfaceinvoke $r0.<javax.swing.Action: void setEnabled(boolean)>(0);

        r4 = r1.<org.fife.ui.rtextarea.RUndoManager: java.lang.String cantUndoText>;

        interfaceinvoke $r0.<javax.swing.Action: void putValue(java.lang.String,java.lang.Object)>("Name", r4);

        interfaceinvoke $r0.<javax.swing.Action: void putValue(java.lang.String,java.lang.Object)>("ShortDescription", r4);

     label2:
        $r5 = staticinvoke <org.fife.ui.rtextarea.RTextArea: org.fife.ui.rtextarea.RecordableTextAction getAction(int)>(4);

        $z3 = virtualinvoke r1.<org.fife.ui.rtextarea.RUndoManager: boolean canRedo()>();

        if $z3 == 0 goto label3;

        interfaceinvoke $r5.<javax.swing.Action: void setEnabled(boolean)>(1);

        $r2 = virtualinvoke r1.<org.fife.ui.rtextarea.RUndoManager: java.lang.String getRedoPresentationName()>();

        interfaceinvoke $r5.<javax.swing.Action: void putValue(java.lang.String,java.lang.Object)>("Name", $r2);

        interfaceinvoke $r5.<javax.swing.Action: void putValue(java.lang.String,java.lang.Object)>("ShortDescription", $r2);

        goto label4;

     label3:
        $z2 = interfaceinvoke $r5.<javax.swing.Action: boolean isEnabled()>();

        if $z2 == 0 goto label4;

        interfaceinvoke $r5.<javax.swing.Action: void setEnabled(boolean)>(0);

        r6 = r1.<org.fife.ui.rtextarea.RUndoManager: java.lang.String cantRedoText>;

        interfaceinvoke $r5.<javax.swing.Action: void putValue(java.lang.String,java.lang.Object)>("Name", r6);

        interfaceinvoke $r5.<javax.swing.Action: void putValue(java.lang.String,java.lang.Object)>("ShortDescription", r6);

     label4:
        return;
    }

    static org.fife.ui.rtextarea.RUndoManager$RCompoundEdit access$000(org.fife.ui.rtextarea.RUndoManager)
    {
        org.fife.ui.rtextarea.RUndoManager$RCompoundEdit $r1;
        org.fife.ui.rtextarea.RUndoManager r0;

        r0 := @parameter0: org.fife.ui.rtextarea.RUndoManager;

        $r1 = r0.<org.fife.ui.rtextarea.RUndoManager: org.fife.ui.rtextarea.RUndoManager$RCompoundEdit compoundEdit>;

        return $r1;
    }

    static org.fife.ui.rtextarea.RUndoManager$RCompoundEdit access$002(org.fife.ui.rtextarea.RUndoManager, org.fife.ui.rtextarea.RUndoManager$RCompoundEdit)
    {
        org.fife.ui.rtextarea.RUndoManager$RCompoundEdit r1;
        org.fife.ui.rtextarea.RUndoManager r0;

        r0 := @parameter0: org.fife.ui.rtextarea.RUndoManager;

        r1 := @parameter1: org.fife.ui.rtextarea.RUndoManager$RCompoundEdit;

        r0.<org.fife.ui.rtextarea.RUndoManager: org.fife.ui.rtextarea.RUndoManager$RCompoundEdit compoundEdit> = r1;

        return r1;
    }

    public static void <clinit>()
    {
        <org.fife.ui.rtextarea.RUndoManager: java.lang.String MSG> = "org.fife.ui.rtextarea.RTextArea";

        return;
    }
}
