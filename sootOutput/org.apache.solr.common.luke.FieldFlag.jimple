public final enum class org.apache.solr.common.luke.FieldFlag extends java.lang.Enum
{
    public static final enum org.apache.solr.common.luke.FieldFlag INDEXED;
    public static final enum org.apache.solr.common.luke.FieldFlag TOKENIZED;
    public static final enum org.apache.solr.common.luke.FieldFlag STORED;
    public static final enum org.apache.solr.common.luke.FieldFlag DOC_VALUES;
    public static final enum org.apache.solr.common.luke.FieldFlag MULTI_VALUED;
    public static final enum org.apache.solr.common.luke.FieldFlag TERM_VECTOR_STORED;
    public static final enum org.apache.solr.common.luke.FieldFlag TERM_VECTOR_OFFSET;
    public static final enum org.apache.solr.common.luke.FieldFlag TERM_VECTOR_POSITION;
    public static final enum org.apache.solr.common.luke.FieldFlag OMIT_NORMS;
    public static final enum org.apache.solr.common.luke.FieldFlag OMIT_TF;
    public static final enum org.apache.solr.common.luke.FieldFlag OMIT_POSITIONS;
    public static final enum org.apache.solr.common.luke.FieldFlag STORE_OFFSETS_WITH_POSITIONS;
    public static final enum org.apache.solr.common.luke.FieldFlag LAZY;
    public static final enum org.apache.solr.common.luke.FieldFlag BINARY;
    public static final enum org.apache.solr.common.luke.FieldFlag SORT_MISSING_FIRST;
    public static final enum org.apache.solr.common.luke.FieldFlag SORT_MISSING_LAST;
    private final char abbreviation;
    private final java.lang.String display;
    private static final org.apache.solr.common.luke.FieldFlag[] $VALUES;

    public static org.apache.solr.common.luke.FieldFlag[] values()
    {
        org.apache.solr.common.luke.FieldFlag[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.solr.common.luke.FieldFlag[]) $r1;

        return $r2;
    }

    public static org.apache.solr.common.luke.FieldFlag valueOf(java.lang.String)
    {
        org.apache.solr.common.luke.FieldFlag $r2;
        java.lang.String r0;
        java.lang.Enum $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/solr/common/luke/FieldFlag;", r0);

        $r2 = (org.apache.solr.common.luke.FieldFlag) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, char, java.lang.String)
    {
        int i0;
        org.apache.solr.common.luke.FieldFlag r0;
        char c1;
        java.lang.String r1, r2, $r3;

        r0 := @this: org.apache.solr.common.luke.FieldFlag;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        c1 := @parameter2: char;

        r2 := @parameter3: java.lang.String;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<org.apache.solr.common.luke.FieldFlag: char abbreviation> = c1;

        r0.<org.apache.solr.common.luke.FieldFlag: java.lang.String display> = r2;

        $r3 = r0.<org.apache.solr.common.luke.FieldFlag: java.lang.String display>;

        virtualinvoke $r3.<java.lang.String: java.lang.String intern()>();

        return;
    }

    public static org.apache.solr.common.luke.FieldFlag getFlag(char)
    {
        org.apache.solr.common.luke.FieldFlag[] $r0;
        char $c1, c2;
        int $i0, i3, $i4, $i5;
        org.apache.solr.common.luke.FieldFlag $r1, r2;

        c2 := @parameter0: char;

        r2 = null;

        $r0 = staticinvoke <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag[] values()>();

        i3 = 0;

     label1:
        $i0 = lengthof $r0;

        if i3 >= $i0 goto label3;

        $r1 = $r0[i3];

        $c1 = virtualinvoke $r1.<org.apache.solr.common.luke.FieldFlag: char getAbbreviation()>();

        $i4 = (int) $c1;

        $i5 = (int) c2;

        if $i4 != $i5 goto label2;

        r2 = $r0[i3];

        goto label3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return r2;
    }

    public char getAbbreviation()
    {
        org.apache.solr.common.luke.FieldFlag r0;
        char $c0;

        r0 := @this: org.apache.solr.common.luke.FieldFlag;

        $c0 = r0.<org.apache.solr.common.luke.FieldFlag: char abbreviation>;

        return $c0;
    }

    public java.lang.String getDisplay()
    {
        org.apache.solr.common.luke.FieldFlag r0;
        java.lang.String $r1;

        r0 := @this: org.apache.solr.common.luke.FieldFlag;

        $r1 = r0.<org.apache.solr.common.luke.FieldFlag: java.lang.String display>;

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.solr.common.luke.FieldFlag[] $r16;
        org.apache.solr.common.luke.FieldFlag $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32;

        $r0 = new org.apache.solr.common.luke.FieldFlag;

        specialinvoke $r0.<org.apache.solr.common.luke.FieldFlag: void <init>(java.lang.String,int,char,java.lang.String)>("INDEXED", 0, 73, "Indexed");

        <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag INDEXED> = $r0;

        $r1 = new org.apache.solr.common.luke.FieldFlag;

        specialinvoke $r1.<org.apache.solr.common.luke.FieldFlag: void <init>(java.lang.String,int,char,java.lang.String)>("TOKENIZED", 1, 84, "Tokenized");

        <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag TOKENIZED> = $r1;

        $r2 = new org.apache.solr.common.luke.FieldFlag;

        specialinvoke $r2.<org.apache.solr.common.luke.FieldFlag: void <init>(java.lang.String,int,char,java.lang.String)>("STORED", 2, 83, "Stored");

        <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag STORED> = $r2;

        $r3 = new org.apache.solr.common.luke.FieldFlag;

        specialinvoke $r3.<org.apache.solr.common.luke.FieldFlag: void <init>(java.lang.String,int,char,java.lang.String)>("DOC_VALUES", 3, 68, "DocValues");

        <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag DOC_VALUES> = $r3;

        $r4 = new org.apache.solr.common.luke.FieldFlag;

        specialinvoke $r4.<org.apache.solr.common.luke.FieldFlag: void <init>(java.lang.String,int,char,java.lang.String)>("MULTI_VALUED", 4, 77, "Multivalued");

        <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag MULTI_VALUED> = $r4;

        $r5 = new org.apache.solr.common.luke.FieldFlag;

        specialinvoke $r5.<org.apache.solr.common.luke.FieldFlag: void <init>(java.lang.String,int,char,java.lang.String)>("TERM_VECTOR_STORED", 5, 86, "TermVector Stored");

        <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag TERM_VECTOR_STORED> = $r5;

        $r6 = new org.apache.solr.common.luke.FieldFlag;

        specialinvoke $r6.<org.apache.solr.common.luke.FieldFlag: void <init>(java.lang.String,int,char,java.lang.String)>("TERM_VECTOR_OFFSET", 6, 111, "Store Offset With TermVector");

        <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag TERM_VECTOR_OFFSET> = $r6;

        $r7 = new org.apache.solr.common.luke.FieldFlag;

        specialinvoke $r7.<org.apache.solr.common.luke.FieldFlag: void <init>(java.lang.String,int,char,java.lang.String)>("TERM_VECTOR_POSITION", 7, 112, "Store Position With TermVector");

        <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag TERM_VECTOR_POSITION> = $r7;

        $r8 = new org.apache.solr.common.luke.FieldFlag;

        specialinvoke $r8.<org.apache.solr.common.luke.FieldFlag: void <init>(java.lang.String,int,char,java.lang.String)>("OMIT_NORMS", 8, 79, "Omit Norms");

        <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag OMIT_NORMS> = $r8;

        $r9 = new org.apache.solr.common.luke.FieldFlag;

        specialinvoke $r9.<org.apache.solr.common.luke.FieldFlag: void <init>(java.lang.String,int,char,java.lang.String)>("OMIT_TF", 9, 70, "Omit Term Frequencies & Positions");

        <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag OMIT_TF> = $r9;

        $r10 = new org.apache.solr.common.luke.FieldFlag;

        specialinvoke $r10.<org.apache.solr.common.luke.FieldFlag: void <init>(java.lang.String,int,char,java.lang.String)>("OMIT_POSITIONS", 10, 80, "Omit Positions");

        <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag OMIT_POSITIONS> = $r10;

        $r11 = new org.apache.solr.common.luke.FieldFlag;

        specialinvoke $r11.<org.apache.solr.common.luke.FieldFlag: void <init>(java.lang.String,int,char,java.lang.String)>("STORE_OFFSETS_WITH_POSITIONS", 11, 72, "Store Offsets with Positions");

        <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag STORE_OFFSETS_WITH_POSITIONS> = $r11;

        $r12 = new org.apache.solr.common.luke.FieldFlag;

        specialinvoke $r12.<org.apache.solr.common.luke.FieldFlag: void <init>(java.lang.String,int,char,java.lang.String)>("LAZY", 12, 76, "Lazy");

        <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag LAZY> = $r12;

        $r13 = new org.apache.solr.common.luke.FieldFlag;

        specialinvoke $r13.<org.apache.solr.common.luke.FieldFlag: void <init>(java.lang.String,int,char,java.lang.String)>("BINARY", 13, 66, "Binary");

        <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag BINARY> = $r13;

        $r14 = new org.apache.solr.common.luke.FieldFlag;

        specialinvoke $r14.<org.apache.solr.common.luke.FieldFlag: void <init>(java.lang.String,int,char,java.lang.String)>("SORT_MISSING_FIRST", 14, 102, "Sort Missing First");

        <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag SORT_MISSING_FIRST> = $r14;

        $r15 = new org.apache.solr.common.luke.FieldFlag;

        specialinvoke $r15.<org.apache.solr.common.luke.FieldFlag: void <init>(java.lang.String,int,char,java.lang.String)>("SORT_MISSING_LAST", 15, 108, "Sort Missing Last");

        <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag SORT_MISSING_LAST> = $r15;

        $r16 = newarray (org.apache.solr.common.luke.FieldFlag)[16];

        $r17 = <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag INDEXED>;

        $r16[0] = $r17;

        $r18 = <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag TOKENIZED>;

        $r16[1] = $r18;

        $r19 = <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag STORED>;

        $r16[2] = $r19;

        $r20 = <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag DOC_VALUES>;

        $r16[3] = $r20;

        $r21 = <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag MULTI_VALUED>;

        $r16[4] = $r21;

        $r22 = <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag TERM_VECTOR_STORED>;

        $r16[5] = $r22;

        $r23 = <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag TERM_VECTOR_OFFSET>;

        $r16[6] = $r23;

        $r24 = <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag TERM_VECTOR_POSITION>;

        $r16[7] = $r24;

        $r25 = <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag OMIT_NORMS>;

        $r16[8] = $r25;

        $r26 = <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag OMIT_TF>;

        $r16[9] = $r26;

        $r27 = <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag OMIT_POSITIONS>;

        $r16[10] = $r27;

        $r28 = <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag STORE_OFFSETS_WITH_POSITIONS>;

        $r16[11] = $r28;

        $r29 = <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag LAZY>;

        $r16[12] = $r29;

        $r30 = <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag BINARY>;

        $r16[13] = $r30;

        $r31 = <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag SORT_MISSING_FIRST>;

        $r16[14] = $r31;

        $r32 = <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag SORT_MISSING_LAST>;

        $r16[15] = $r32;

        <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag[] $VALUES> = $r16;

        return;
    }
}
