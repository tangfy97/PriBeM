public class org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker extends org.fife.ui.rsyntaxtextarea.AbstractJFlexTokenMaker
{
    public static final int YYEOF;
    public static final int INTAG_START;
    public static final int INTAG_ELEMENT;
    public static final int YYINITIAL;
    public static final int INTAG_ATTLIST;
    public static final int COMMENT;
    private static final java.lang.String ZZ_CMAP_PACKED;
    private static final char[] ZZ_CMAP;
    private static final int[] ZZ_ACTION;
    private static final java.lang.String ZZ_ACTION_PACKED_0;
    private static final int[] ZZ_ROWMAP;
    private static final java.lang.String ZZ_ROWMAP_PACKED_0;
    private static final int[] ZZ_TRANS;
    private static final java.lang.String ZZ_TRANS_PACKED_0;
    private static final int ZZ_UNKNOWN_ERROR;
    private static final int ZZ_NO_MATCH;
    private static final int ZZ_PUSHBACK_2BIG;
    private static final java.lang.String[] ZZ_ERROR_MSG;
    private static final int[] ZZ_ATTRIBUTE;
    private static final java.lang.String ZZ_ATTRIBUTE_PACKED_0;
    private java.io.Reader zzReader;
    private int zzState;
    private int zzLexicalState;
    private char[] zzBuffer;
    private int zzMarkedPos;
    private int zzCurrentPos;
    private int zzStartRead;
    private int zzEndRead;
    private boolean zzAtEOF;
    public static final int INTERNAL_INTAG_START;
    public static final int INTERNAL_INTAG_ELEMENT;
    public static final int INTERNAL_INTAG_ATTLIST;
    public static final int INTERNAL_IN_COMMENT;
    private int prevState;

    private static int[] zzUnpackAction()
    {
        int[] r0;

        r0 = newarray (int)[70];

        staticinvoke <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzUnpackAction(java.lang.String,int,int[])>("\u0005\u0000\u0001\u0001\u0001\u0002\u0001\u0003\u0001\u0004\u0001\u0005\u0004\u0004\u0001\u0003\u0001\u0006\u0002\u0003\u0002\u0007\u0002\u0008\u0002\u0007\u0001\t\u0005\u0000\u0002\u0003\u0001\u0008\u0003\u0007\u0005\u0000\u0001\n\u0002\u0003\u0003\u0007\u0001\u000b\u0002\u0000\u0001\f\u0002\u0003\u0003\u0007\u0002\u0000\u0002\u0003\u0001\r\u0002\u0007\u0002\u0003\u0002\u0007\u0001\u000e\u0001\u000f\u0001\u0007", 0, r0);

        return r0;
    }

    private static int zzUnpackAction(java.lang.String, int, int[])
    {
        char $c2, $c8;
        int[] r1;
        int i0, $i1, $i3, i4, i5, i6, i7, $i9, $i10, $i12;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: int[];

        i4 = 0;

        i5 = i0;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

     label1:
        if i4 >= $i1 goto label3;

        i6 = i4 + 1;

        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $i9 = (int) $c8;

        i7 = $i9;

        i4 = i6 + 1;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

     label2:
        $i3 = i5;

        i5 = i5 + 1;

        $i10 = (int) $c2;

        r1[$i3] = $i10;

        $i12 = (int) -1;

        i7 = i7 + $i12;

        if i7 > 0 goto label2;

        goto label1;

     label3:
        return i5;
    }

    private static int[] zzUnpackRowMap()
    {
        int[] r0;

        r0 = newarray (int)[70];

        staticinvoke <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzUnpackRowMap(java.lang.String,int,int[])>("\u0000\u0000\u0000&\u0000L\u0000r\u0000\u0098\u0000\u00be\u0000\u00e4\u0000\u010a\u0000\u0130\u0000\u0156\u0000\u017c\u0000\u01a2\u0000\u01c8\u0000\u01ee\u0000\u0214\u0000\u0156\u0000\u023a\u0000\u0260\u0000\u0286\u0000\u02ac\u0000\u02d2\u0000\u02f8\u0000\u031e\u0000\u0344\u0000\u036a\u0000\u0390\u0000\u03b6\u0000\u03dc\u0000\u0402\u0000\u0428\u0000\u044e\u0000\u0474\u0000\u0156\u0000\u049a\u0000\u04c0\u0000\u04e6\u0000\u050c\u0000\u0532\u0000\u0558\u0000\u057e\u0000\u05a4\u0000\u0156\u0000\u05ca\u0000\u05f0\u0000\u0616\u0000\u063c\u0000\u0662\u0000\u0156\u0000\u0688\u0000\u06ae\u0000\u06d4\u0000\u06fa\u0000\u0720\u0000\u0746\u0000\u076c\u0000\u0792\u0000\u07b8\u0000\u06d4\u0000\u07de\u0000\u0804\u0000\u02ac\u0000\u082a\u0000\u0850\u0000\u0876\u0000\u089c\u0000\u08c2\u0000\u08e8\u0000\u0214\u0000\u0214\u0000\u090e", 0, r0);

        return r0;
    }

    private static int zzUnpackRowMap(java.lang.String, int, int[])
    {
        char $c2, $c5;
        int[] r1;
        int i0, $i1, i3, $i4, $i6, i7, i8, i9, $i10, $i11;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: int[];

        i7 = 0;

        i8 = i0;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

     label1:
        if i7 >= $i1 goto label2;

        i9 = i7 + 1;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i7);

        $i10 = (int) $c2;

        i3 = $i10 << 16;

        $i4 = i8;

        i8 = i8 + 1;

        i7 = i9 + 1;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i9);

        $i11 = (int) $c5;

        $i6 = i3 | $i11;

        r1[$i4] = $i6;

        goto label1;

     label2:
        return i8;
    }

    private static int[] zzUnpackTrans()
    {
        int[] r0;

        r0 = newarray (int)[2356];

        staticinvoke <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzUnpackTrans(java.lang.String,int,int[])>("\u0001\u0006\u0001\u0007\u0011\u0006\u0001\u0008\u0012\u0006\u0002\t\u0001\n\u0005\t\u0001\u000b\u0003\t\u0001\f\u0004\t\u0001\r\u0003\t\u0001\u000e\u0010\t\u0001\u000f\u0001\u0007\u0014\u000f\u0001\u0010\u0001\u0011\u0004\u000f\u0001\u0012\t\u000f\u0001\u0013\u0001\u0007\u0014\u0013\u0001\u0010\u000f\u0013\u0001\u0014\u0001\u0007\u0001\u0014\u0001\u0015\u0001\u0016\u0011\u0014\u0001\u0010\u0008\u0014\u0001\u0017\u0001\u0014\u0001\u0018\u0004\u0014\u0001\u0006\u0001\u0000\u0011\u0006\u0001\u0000\u0012\u0006\u0001\u0000\u0001\u00078\u0000\u0001\u0019\u0011\u0000\u0002\t\u0001\u0000\u0005\t\u0001\u0000\u0003\t\u0001\u0000\u0004\t\u0001\u0000\u0003\t\u0001\u0000\u0010\t/\u0000\u0001\u001a%\u0000\u0001\u001b\u0003\u0000\u0001\u001c)\u0000\u0001\u001d)\u0000\u0001\u001e\u0010\u0000\u0001\u000f\u0001\u0000\u0014\u000f\u0001\u0000\u0010\u000f\u0001\u0000\u0014\u000f\u0001\u0000\u0001\u000f\u0001\u001f\u000e\u000f\u0001\u0000\u0014\u000f\u0001\u0000\u0004\u000f\u0001 \n\u000f\u0001\u0013\u0001\u0000\u0014\u0013\u0001\u0000\u000f\u0013\u0001\u0014\u0001\u0000\u0001\u0014\u0002\u0000\u0011\u0014\u0001\u0000\u000f\u0014\u0003\u0015\u0001!\"\u0015\u0004\u0016\u0001!!\u0016\u0001\u0014\u0001\u0000\u0001\u0014\u0002\u0000\u0011\u0014\u0001\u0000\t\u0014\u0001\"\u0006\u0014\u0001\u0000\u0001\u0014\u0002\u0000\u0011\u0014\u0001\u0000\u0006\u0014\u0001#\u0005\u0014\u0001$\u0002\u0014\u0015\u0000\u0001%\u0019\u0000\u0001&&\u0000\u0001\')\u0000\u0001((\u0000\u0001)*\u0000\u0001*\u000f\u0000\u0001\u000f\u0001\u0000\u0014\u000f\u0001\u0000\u0001+\u000f\u000f\u0001\u0000\u0014\u000f\u0001\u0000\u0004\u000f\u0001,\n\u000f\u0001\u0014\u0001\u0000\u0001\u0014\u0002\u0000\u0011\u0014\u0001\u0000\u0005\u0014\u0001-\n\u0014\u0001\u0000\u0001\u0014\u0002\u0000\u0011\u0014\u0001\u0000\u0002\u0014\u0001.\r\u0014\u0001\u0000\u0001\u0014\u0002\u0000\u0011\u0014\u0001\u0000\u0001/\u000e\u0014\u0015\u0000\u00010\u001a\u0000\u00011+\u0000\u00012$\u0000\u0001\'(\u0000\u00013\u0013\u0000\u0001\u000f\u0001\u0000\u0014\u000f\u0001\u0000\u0002\u000f\u00014\r\u000f\u0001\u0000\u0014\u000f\u0001\u0000\u0001\u000f\u00015\r\u000f\u0001\u0014\u0001\u0000\u0001\u0014\u0002\u0000\u0011\u0014\u0001\u0000\u0004\u0014\u00016\u000b\u0014\u0001\u0000\u0001\u0014\u0002\u0000\u0011\u0014\u0001\u0000\u000b\u0014\u00017\u0004\u0014\u0001\u0000\u0001\u0014\u0002\u0000\u0011\u0014\u0001\u0000\r\u0014\u00018\u0001\u0014\u000b\u0000\u0001\'\u0004\u0000\u00012\u001b\u0000\u00019#\u0000\u0002:\n3\u0001:\u00013\u0001:\u0001\u0000\u0002:\u0001\u0000\n3\u0001:\u00043\u0001\u000f\u0001\u0000\u0014\u000f\u0001\u0000\u0001;\u000f\u000f\u0001\u0000\u0014\u000f\u0001\u0000\u0006\u000f\u0001<\u0008\u000f\u0001\u0014\u0001\u0000\u0001\u0014\u0002\u0000\u0011\u0014\u0001\u0000\u0005\u0014\u0001=\n\u0014\u0001\u0000\u0001\u0014\u0002\u0000\u0011\u0014\u0001\u0000\u0001\u0014\u0001>\u000e\u0014\u0001\u0000\u0001\u0014\u0002\u0000\u0011\u0014\u0001\u0000\u000e\u0014\u0001?\u0006\u0000\u00013\u001f\u0000\u0001\u000f\u0001\u0000\u0014\u000f\u0001\u0000\u0003\u000f\u0001@\f\u000f\u0001\u0000\u0014\u000f\u0001\u0000\u0007\u000f\u0001A\u0007\u000f\u0001\u0014\u0001\u0000\u0001\u0014\u0002\u0000\u0011\u0014\u0001\u0000\u0006\u0014\u0001B\t\u0014\u0001\u0000\u0001\u0014\u0002\u0000\u0011\u0014\u0001\u0000\u0006\u0014\u0001C\u0008\u0014\u0001\u000f\u0001\u0000\u0014\u000f\u0001\u0000\u0004\u000f\u0001D\u000b\u000f\u0001\u0000\u0014\u000f\u0001\u0000\u0004\u000f\u0001E\n\u000f\u0001\u0014\u0001\u0000\u0001\u0014\u0002\u0000\u0011\u0014\u0001\u0000\u0001F\u000f\u0014\u0001\u0000\u0001\u0014\u0002\u0000\u0011\u0014\u0001\u0000\f\u0014\u0001B\u0003\u0014\u0001\u0000\u0001\u0014\u0002\u0000\u0011\u0014\u0001\u0000\t\u0014\u0001=\u0005\u0014", 0, r0);

        return r0;
    }

    private static int zzUnpackTrans(java.lang.String, int, int[])
    {
        int[] r1;
        int i0, $i1, $i3, i4, i5, i6, i7, i8, $i10, $i11, $i13, $i15;
        java.lang.String r0;
        char $c2, $c9;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: int[];

        i4 = 0;

        i5 = i0;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

     label1:
        if i4 >= $i1 goto label3;

        i6 = i4 + 1;

        $c9 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $i10 = (int) $c9;

        i7 = $i10;

        i4 = i6 + 1;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

        $i11 = (int) $c2;

        $i13 = (int) -1;

        i8 = $i11 + $i13;

     label2:
        $i3 = i5;

        i5 = i5 + 1;

        r1[$i3] = i8;

        $i15 = (int) -1;

        i7 = i7 + $i15;

        if i7 > 0 goto label2;

        goto label1;

     label3:
        return i5;
    }

    private static int[] zzUnpackAttribute()
    {
        int[] r0;

        r0 = newarray (int)[70];

        staticinvoke <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzUnpackAttribute(java.lang.String,int,int[])>("\u0005\u0000\u0004\u0001\u0001\t\u0005\u0001\u0001\t\t\u0001\u0005\u0000\u0002\u0001\u0001\t\u0003\u0001\u0005\u0000\u0001\t\u0005\u0001\u0001\t\u0002\u0000\u0006\u0001\u0002\u0000\f\u0001", 0, r0);

        return r0;
    }

    private static int zzUnpackAttribute(java.lang.String, int, int[])
    {
        char $c2, $c8;
        int[] r1;
        int i0, $i1, $i3, i4, i5, i6, i7, $i9, $i10, $i12;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: int[];

        i4 = 0;

        i5 = i0;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

     label1:
        if i4 >= $i1 goto label3;

        i6 = i4 + 1;

        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $i9 = (int) $c8;

        i7 = $i9;

        i4 = i6 + 1;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

     label2:
        $i3 = i5;

        i5 = i5 + 1;

        $i10 = (int) $c2;

        r1[$i3] = $i10;

        $i12 = (int) -1;

        i7 = i7 + $i12;

        if i7 > 0 goto label2;

        goto label1;

     label3:
        return i5;
    }

    public void <init>()
    {
        org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.AbstractJFlexTokenMaker: void <init>()>();

        r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzLexicalState> = 0;

        return;
    }

    private void addEndToken(int)
    {
        int i0, $i1, $i2;
        org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker;

        i0 := @parameter0: int;

        $i2 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzMarkedPos>;

        $i1 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzMarkedPos>;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void addToken(int,int,int)>($i2, $i1, i0);

        return;
    }

    private void addHyperlinkToken(int, int, int)
    {
        int i0, $i1, i2, i3, i4;
        org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker r0;
        char[] $r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker;

        i0 := @parameter0: int;

        i3 := @parameter1: int;

        i4 := @parameter2: int;

        $i1 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int offsetShift>;

        i2 = i0 + $i1;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: char[] zzBuffer>;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void addToken(char[],int,int,int,int,boolean)>($r1, i0, i3, i4, i2, 1);

        return;
    }

    private void addToken(int)
    {
        int $i0, i1, $i2, $i3;
        org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker;

        i1 := @parameter0: int;

        $i3 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzStartRead>;

        $i0 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzMarkedPos>;

        $i2 = $i0 - 1;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void addToken(int,int,int)>($i3, $i2, i1);

        return;
    }

    private void addToken(int, int, int)
    {
        int i0, $i1, i2, i3, i4;
        org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker r0;
        char[] $r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker;

        i0 := @parameter0: int;

        i3 := @parameter1: int;

        i4 := @parameter2: int;

        $i1 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int offsetShift>;

        i2 = i0 + $i1;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: char[] zzBuffer>;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void addToken(char[],int,int,int,int)>($r1, i0, i3, i4, i2);

        return;
    }

    public void addToken(char[], int, int, int, int)
    {
        int i0, i1, i2, i3, $i4;
        org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker r0;
        char[] r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.AbstractJFlexTokenMaker: void addToken(char[],int,int,int,int)>(r1, i0, i1, i2, i3);

        $i4 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzMarkedPos>;

        r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzStartRead> = $i4;

        return;
    }

    public boolean getMarkOccurrencesOfTokenType(int)
    {
        int i0;
        org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker;

        i0 := @parameter0: int;

        return 0;
    }

    public org.fife.ui.rsyntaxtextarea.Token getTokenList(javax.swing.text.Segment, int, int)
    {
        byte b9;
        int $i0, i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, i10, $i11, $i13, $i15;
        org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker r0;
        org.fife.ui.rsyntaxtextarea.DefaultToken $r6;
        java.io.IOException $r2;
        java.io.Reader $r4;
        javax.swing.text.Segment r1;
        org.fife.ui.rsyntaxtextarea.Token $r5;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker;

        r1 := @parameter0: javax.swing.text.Segment;

        i4 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void resetTokenList()>();

        $i0 = r1.<javax.swing.text.Segment: int offset>;

        $i2 = neg $i0;

        $i3 = $i2 + i1;

        r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int offsetShift> = $i3;

        r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int prevState> = 0;

        tableswitch(i4)
        {
            case -3: goto label03;
            case -2: goto label02;
            case -1: goto label01;
            default: goto label04;
        };

     label01:
        b9 = 2;

        goto label07;

     label02:
        b9 = 3;

        goto label07;

     label03:
        b9 = 4;

        goto label07;

     label04:
        $i13 = (int) -1024;

        if i4 >= $i13 goto label06;

        $i5 = neg i4;

        $i15 = (int) -256;

        $i6 = $i5 & $i15;

        i10 = neg $i6;

        lookupswitch(i10)
        {
            case -2048: goto label05;
            default: goto label05;
        };

     label05:
        b9 = 1;

        $i7 = neg i4;

        $i8 = $i7 & 255;

        r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int prevState> = $i8;

        goto label07;

     label06:
        b9 = 0;

     label07:
        $i11 = r1.<javax.swing.text.Segment: int offset>;

        r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int start> = $i11;

        r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: javax.swing.text.Segment s> = r1;

     label08:
        $r4 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: java.io.Reader zzReader>;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void yyreset(java.io.Reader)>($r4);

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void yybegin(int)>(b9);

        $r5 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: org.fife.ui.rsyntaxtextarea.Token yylex()>();

     label09:
        return $r5;

     label10:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.io.IOException: void printStackTrace()>();

        $r6 = new org.fife.ui.rsyntaxtextarea.DefaultToken;

        specialinvoke $r6.<org.fife.ui.rsyntaxtextarea.DefaultToken: void <init>()>();

        return $r6;

        catch java.io.IOException from label08 to label09 with label10;
    }

    private boolean zzRefill()
    {
        int $i0, $i1, $i2, $i3;
        org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker r0;
        javax.swing.text.Segment $r1, $r2;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker;

        $i3 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzCurrentPos>;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: javax.swing.text.Segment s>;

        $i1 = $r1.<javax.swing.text.Segment: int offset>;

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: javax.swing.text.Segment s>;

        $i0 = $r2.<javax.swing.text.Segment: int count>;

        $i2 = $i1 + $i0;

        if $i3 < $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final void yyreset(java.io.Reader)
    {
        java.io.Reader r6;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker r0;
        char[] $r2;
        javax.swing.text.Segment $r1, $r3, $r4, $r5;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker;

        r6 := @parameter0: java.io.Reader;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: javax.swing.text.Segment s>;

        $r2 = $r1.<javax.swing.text.Segment: char[] array>;

        r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: char[] zzBuffer> = $r2;

        $r3 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: javax.swing.text.Segment s>;

        $i0 = $r3.<javax.swing.text.Segment: int offset>;

        r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzStartRead> = $i0;

        $i2 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzStartRead>;

        $r4 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: javax.swing.text.Segment s>;

        $i1 = $r4.<javax.swing.text.Segment: int count>;

        $i3 = $i2 + $i1;

        $i4 = $i3 - 1;

        r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzEndRead> = $i4;

        $r5 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: javax.swing.text.Segment s>;

        $i5 = $r5.<javax.swing.text.Segment: int offset>;

        r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzMarkedPos> = $i5;

        r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzCurrentPos> = $i5;

        r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzLexicalState> = 0;

        r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: java.io.Reader zzReader> = r6;

        r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: boolean zzAtEOF> = 0;

        return;
    }

    public void <init>(java.io.Reader)
    {
        org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker r0;
        java.io.Reader r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker;

        r1 := @parameter0: java.io.Reader;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.AbstractJFlexTokenMaker: void <init>()>();

        r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzLexicalState> = 0;

        r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: java.io.Reader zzReader> = r1;

        return;
    }

    public void <init>(java.io.InputStream)
    {
        org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker r0;
        java.io.InputStreamReader $r1;
        java.io.InputStream r2;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker;

        r2 := @parameter0: java.io.InputStream;

        $r1 = new java.io.InputStreamReader;

        specialinvoke $r1.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r2);

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void <init>(java.io.Reader)>($r1);

        return;
    }

    private static char[] zzUnpackCMap(java.lang.String)
    {
        char $c0, $c6;
        int $i1, i2, i3, i4, i5, $i7, $i9;
        char[] r0;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        r0 = newarray (char)[65536];

        i2 = 0;

        i3 = 0;

     label1:
        if i2 >= 138 goto label3;

        i4 = i2 + 1;

        $c6 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        $i7 = (int) $c6;

        i5 = $i7;

        i2 = i4 + 1;

        $c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i4);

     label2:
        $i1 = i3;

        i3 = i3 + 1;

        r0[$i1] = $c0;

        $i9 = (int) -1;

        i5 = i5 + $i9;

        if i5 > 0 goto label2;

        goto label1;

     label3:
        return r0;
    }

    public final void yyclose() throws java.io.IOException
    {
        int $i0;
        org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker r0;
        java.io.Reader $r1, $r2;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker;

        r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: boolean zzAtEOF> = 1;

        $i0 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzStartRead>;

        r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzEndRead> = $i0;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: java.io.Reader zzReader>;

        if $r1 == null goto label1;

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: java.io.Reader zzReader>;

        virtualinvoke $r2.<java.io.Reader: void close()>();

     label1:
        return;
    }

    public final int yystate()
    {
        int $i0;
        org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker;

        $i0 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzLexicalState>;

        return $i0;
    }

    public final void yybegin(int)
    {
        int i0;
        org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker;

        i0 := @parameter0: int;

        r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzLexicalState> = i0;

        return;
    }

    public final java.lang.String yytext()
    {
        int $i0, $i1, $i2, $i3;
        org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker r1;
        char[] $r2;
        java.lang.String $r0;

        r1 := @this: org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker;

        $r0 = new java.lang.String;

        $r2 = r1.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: char[] zzBuffer>;

        $i3 = r1.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzStartRead>;

        $i1 = r1.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzMarkedPos>;

        $i0 = r1.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzStartRead>;

        $i2 = $i1 - $i0;

        specialinvoke $r0.<java.lang.String: void <init>(char[],int,int)>($r2, $i3, $i2);

        return $r0;
    }

    public final char yycharat(int)
    {
        int i0, $i1, $i2;
        org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker r0;
        char[] $r1;
        char $c3;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker;

        i0 := @parameter0: int;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: char[] zzBuffer>;

        $i1 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzStartRead>;

        $i2 = $i1 + i0;

        $c3 = $r1[$i2];

        return $c3;
    }

    public final int yylength()
    {
        int $i0, $i1, $i2;
        org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker;

        $i1 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzMarkedPos>;

        $i0 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzStartRead>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    private void zzScanError(int)
    {
        int i0;
        java.lang.Error $r1;
        org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker r4;
        java.lang.String[] $r0, $r3;
        java.lang.ArrayIndexOutOfBoundsException $r2;
        java.lang.String r5;

        r4 := @this: org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker;

        i0 := @parameter0: int;

     label1:
        $r0 = <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: java.lang.String[] ZZ_ERROR_MSG>;

        r5 = $r0[i0];

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: java.lang.String[] ZZ_ERROR_MSG>;

        r5 = $r3[0];

     label4:
        $r1 = new java.lang.Error;

        specialinvoke $r1.<java.lang.Error: void <init>(java.lang.String)>(r5);

        throw $r1;

        catch java.lang.ArrayIndexOutOfBoundsException from label1 to label2 with label3;
    }

    public void yypushback(int)
    {
        int i0, $i1, $i2, $i3;
        org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int yylength()>();

        if i0 <= $i1 goto label1;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void zzScanError(int)>(2);

     label1:
        $i2 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzMarkedPos>;

        $i3 = $i2 - i0;

        r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzMarkedPos> = $i3;

        return;
    }

    public org.fife.ui.rsyntaxtextarea.Token yylex() throws java.io.IOException
    {
        org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker r0;
        char[] r1, r12;
        org.fife.ui.rsyntaxtextarea.Token $r6, $r7, $r8, $r9, $r10, $r11;
        int[] r2, r3, r4, $r5;
        boolean $z0, $z1;
        int $i0, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, i35, $i36, i37, i38, i39, $i40, i41, i42, $i43, i44, i45, $i47, $i48, $i50, $i52, $i54, $i56, $i58, $i60, $i62;
        char $c1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker;

        i35 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzEndRead>;

        r12 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: char[] zzBuffer>;

        r1 = <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: char[] ZZ_CMAP>;

        r2 = <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int[] ZZ_TRANS>;

        r3 = <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int[] ZZ_ROWMAP>;

        r4 = <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int[] ZZ_ATTRIBUTE>;

     label01:
        $i36 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzMarkedPos>;

        i37 = $i36;

        $i47 = (int) -1;

        i38 = $i47;

        r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzStartRead> = $i36;

        r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzCurrentPos> = $i36;

        i39 = $i36;

        $i40 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzLexicalState>;

        r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzState> = $i40;

     label02:
        if i39 >= i35 goto label03;

        $i33 = i39;

        i39 = i39 + 1;

        i41 = r12[$i33];

        goto label06;

     label03:
        $z0 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: boolean zzAtEOF>;

        if $z0 == 0 goto label04;

        i41 = -1;

        goto label09;

     label04:
        r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzCurrentPos> = i39;

        r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzMarkedPos> = i37;

        $z1 = specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: boolean zzRefill()>();

        i42 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzCurrentPos>;

        i37 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzMarkedPos>;

        r12 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: char[] zzBuffer>;

        i35 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzEndRead>;

        if $z1 == 0 goto label05;

        i41 = -1;

        goto label09;

     label05:
        i39 = i42 + 1;

        i41 = r12[i42];

     label06:
        $i0 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzState>;

        $i2 = r3[$i0];

        $c1 = r1[i41];

        $i48 = (int) $c1;

        $i3 = $i2 + $i48;

        $i34 = r2[$i3];

        $i50 = (int) -1;

        if $i34 != $i50 goto label07;

        goto label09;

     label07:
        r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzState> = $i34;

        $i4 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzState>;

        i5 = r4[$i4];

        $i6 = i5 & 1;

        if $i6 != 1 goto label08;

        i38 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzState>;

        i37 = i39;

        $i7 = i5 & 8;

        if $i7 != 8 goto label08;

        goto label09;

     label08:
        goto label02;

     label09:
        r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzMarkedPos> = i37;

        if i38 >= 0 goto label10;

        $i43 = i38;

        goto label11;

     label10:
        $r5 = <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int[] ZZ_ACTION>;

        $i43 = $r5[i38];

     label11:
        tableswitch($i43)
        {
            case 1: goto label18;
            case 2: goto label16;
            case 3: goto label12;
            case 4: goto label36;
            case 5: goto label37;
            case 6: goto label22;
            case 7: goto label26;
            case 8: goto label39;
            case 9: goto label20;
            case 10: goto label28;
            case 11: goto label24;
            case 12: goto label14;
            case 13: goto label34;
            case 14: goto label32;
            case 15: goto label30;
            case 16: goto label13;
            case 17: goto label15;
            case 18: goto label17;
            case 19: goto label19;
            case 20: goto label21;
            case 21: goto label23;
            case 22: goto label25;
            case 23: goto label27;
            case 24: goto label29;
            case 25: goto label31;
            case 26: goto label33;
            case 27: goto label35;
            case 28: goto label36;
            case 29: goto label38;
            case 30: goto label40;
            default: goto label41;
        };

     label12:
        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void addToken(int)>(20);

     label13:
        goto label01;

     label14:
        i44 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzStartRead>;

        $i10 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int start>;

        $i8 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzStartRead>;

        $i9 = $i8 - 1;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void addToken(int,int,int)>($i10, $i9, 2);

        $i11 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzMarkedPos>;

        $i12 = $i11 - 1;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void addHyperlinkToken(int,int,int)>(i44, $i12, 2);

        $i13 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzMarkedPos>;

        r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int start> = $i13;

     label15:
        goto label01;

     label16:
        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void addToken(int)>(21);

     label17:
        goto label01;

     label18:
        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void addToken(int)>(20);

     label19:
        goto label01;

     label20:
        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void addToken(int)>(25);

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void yybegin(int)>(2);

     label21:
        goto label01;

     label22:
        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void addToken(int)>(25);

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void yybegin(int)>(0);

     label23:
        goto label01;

     label24:
        $i14 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzStartRead>;

        r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int start> = $i14;

        $i15 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzLexicalState>;

        r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int prevState> = $i15;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void yybegin(int)>(1);

     label25:
        goto label01;

     label26:
        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void addToken(int)>(27);

     label27:
        goto label01;

     label28:
        i45 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzMarkedPos>;

        $i18 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int start>;

        $i16 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzStartRead>;

        $i17 = $i16 + 2;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void addToken(int,int,int)>($i18, $i17, 2);

        r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int start> = i45;

        $i19 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int prevState>;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void yybegin(int)>($i19);

     label29:
        goto label01;

     label30:
        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void addToken(int)>(26);

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void yybegin(int)>(4);

     label31:
        goto label01;

     label32:
        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void addToken(int)>(26);

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void yybegin(int)>(3);

     label33:
        goto label01;

     label34:
        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void addToken(int)>(29);

     label35:
        goto label01;

     label36:
        goto label01;

     label37:
        $i22 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int start>;

        $i20 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzStartRead>;

        $i21 = $i20 - 1;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void addToken(int,int,int)>($i22, $i21, 2);

        $i23 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int prevState>;

        $i52 = (int) -2048;

        $i24 = $i52 - $i23;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void addEndToken(int)>($i24);

        $r6 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: org.fife.ui.rsyntaxtextarea.Token firstToken>;

        return $r6;

     label38:
        goto label01;

     label39:
        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void addToken(int)>(28);

     label40:
        goto label01;

     label41:
        $i54 = (int) -1;

        if i41 != $i54 goto label53;

        $i26 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzStartRead>;

        $i25 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzCurrentPos>;

        if $i26 != $i25 goto label53;

        r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: boolean zzAtEOF> = 1;

        $i27 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzLexicalState>;

        lookupswitch($i27)
        {
            case 0: goto label46;
            case 1: goto label50;
            case 2: goto label42;
            case 3: goto label44;
            case 4: goto label48;
            case 71: goto label43;
            case 72: goto label45;
            case 73: goto label47;
            case 74: goto label49;
            case 75: goto label51;
            default: goto label52;
        };

     label42:
        $i56 = (int) -1;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void addEndToken(int)>($i56);

        $r9 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: org.fife.ui.rsyntaxtextarea.Token firstToken>;

        return $r9;

     label43:
        goto label01;

     label44:
        $i58 = (int) -2;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void addEndToken(int)>($i58);

        $r8 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: org.fife.ui.rsyntaxtextarea.Token firstToken>;

        return $r8;

     label45:
        goto label01;

     label46:
        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void addNullToken()>();

        $r11 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: org.fife.ui.rsyntaxtextarea.Token firstToken>;

        return $r11;

     label47:
        goto label01;

     label48:
        $i60 = (int) -3;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void addEndToken(int)>($i60);

        $r7 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: org.fife.ui.rsyntaxtextarea.Token firstToken>;

        return $r7;

     label49:
        goto label01;

     label50:
        $i30 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int start>;

        $i28 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int zzStartRead>;

        $i29 = $i28 - 1;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void addToken(int,int,int)>($i30, $i29, 2);

        $i31 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int prevState>;

        $i62 = (int) -2048;

        $i32 = $i62 - $i31;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void addEndToken(int)>($i32);

        $r10 = r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: org.fife.ui.rsyntaxtextarea.Token firstToken>;

        return $r10;

     label51:
        goto label01;

     label52:
        return null;

     label53:
        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: void zzScanError(int)>(1);

        goto label01;
    }

    static void <clinit>()
    {
        int[] $r1, $r2, $r3, $r5;
        char[] $r0;
        java.lang.String[] $r4;

        <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int INTERNAL_IN_COMMENT> = -2048;

        <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int INTERNAL_INTAG_ATTLIST> = -3;

        <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int INTERNAL_INTAG_ELEMENT> = -2;

        <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int INTERNAL_INTAG_START> = -1;

        <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: java.lang.String ZZ_ATTRIBUTE_PACKED_0> = "\u0005\u0000\u0004\u0001\u0001\t\u0005\u0001\u0001\t\t\u0001\u0005\u0000\u0002\u0001\u0001\t\u0003\u0001\u0005\u0000\u0001\t\u0005\u0001\u0001\t\u0002\u0000\u0006\u0001\u0002\u0000\f\u0001";

        <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int ZZ_PUSHBACK_2BIG> = 2;

        <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int ZZ_NO_MATCH> = 1;

        <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int ZZ_UNKNOWN_ERROR> = 0;

        <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: java.lang.String ZZ_TRANS_PACKED_0> = "\u0001\u0006\u0001\u0007\u0011\u0006\u0001\u0008\u0012\u0006\u0002\t\u0001\n\u0005\t\u0001\u000b\u0003\t\u0001\f\u0004\t\u0001\r\u0003\t\u0001\u000e\u0010\t\u0001\u000f\u0001\u0007\u0014\u000f\u0001\u0010\u0001\u0011\u0004\u000f\u0001\u0012\t\u000f\u0001\u0013\u0001\u0007\u0014\u0013\u0001\u0010\u000f\u0013\u0001\u0014\u0001\u0007\u0001\u0014\u0001\u0015\u0001\u0016\u0011\u0014\u0001\u0010\u0008\u0014\u0001\u0017\u0001\u0014\u0001\u0018\u0004\u0014\u0001\u0006\u0001\u0000\u0011\u0006\u0001\u0000\u0012\u0006\u0001\u0000\u0001\u00078\u0000\u0001\u0019\u0011\u0000\u0002\t\u0001\u0000\u0005\t\u0001\u0000\u0003\t\u0001\u0000\u0004\t\u0001\u0000\u0003\t\u0001\u0000\u0010\t/\u0000\u0001\u001a%\u0000\u0001\u001b\u0003\u0000\u0001\u001c)\u0000\u0001\u001d)\u0000\u0001\u001e\u0010\u0000\u0001\u000f\u0001\u0000\u0014\u000f\u0001\u0000\u0010\u000f\u0001\u0000\u0014\u000f\u0001\u0000\u0001\u000f\u0001\u001f\u000e\u000f\u0001\u0000\u0014\u000f\u0001\u0000\u0004\u000f\u0001 \n\u000f\u0001\u0013\u0001\u0000\u0014\u0013\u0001\u0000\u000f\u0013\u0001\u0014\u0001\u0000\u0001\u0014\u0002\u0000\u0011\u0014\u0001\u0000\u000f\u0014\u0003\u0015\u0001!\"\u0015\u0004\u0016\u0001!!\u0016\u0001\u0014\u0001\u0000\u0001\u0014\u0002\u0000\u0011\u0014\u0001\u0000\t\u0014\u0001\"\u0006\u0014\u0001\u0000\u0001\u0014\u0002\u0000\u0011\u0014\u0001\u0000\u0006\u0014\u0001#\u0005\u0014\u0001$\u0002\u0014\u0015\u0000\u0001%\u0019\u0000\u0001&&\u0000\u0001\')\u0000\u0001((\u0000\u0001)*\u0000\u0001*\u000f\u0000\u0001\u000f\u0001\u0000\u0014\u000f\u0001\u0000\u0001+\u000f\u000f\u0001\u0000\u0014\u000f\u0001\u0000\u0004\u000f\u0001,\n\u000f\u0001\u0014\u0001\u0000\u0001\u0014\u0002\u0000\u0011\u0014\u0001\u0000\u0005\u0014\u0001-\n\u0014\u0001\u0000\u0001\u0014\u0002\u0000\u0011\u0014\u0001\u0000\u0002\u0014\u0001.\r\u0014\u0001\u0000\u0001\u0014\u0002\u0000\u0011\u0014\u0001\u0000\u0001/\u000e\u0014\u0015\u0000\u00010\u001a\u0000\u00011+\u0000\u00012$\u0000\u0001\'(\u0000\u00013\u0013\u0000\u0001\u000f\u0001\u0000\u0014\u000f\u0001\u0000\u0002\u000f\u00014\r\u000f\u0001\u0000\u0014\u000f\u0001\u0000\u0001\u000f\u00015\r\u000f\u0001\u0014\u0001\u0000\u0001\u0014\u0002\u0000\u0011\u0014\u0001\u0000\u0004\u0014\u00016\u000b\u0014\u0001\u0000\u0001\u0014\u0002\u0000\u0011\u0014\u0001\u0000\u000b\u0014\u00017\u0004\u0014\u0001\u0000\u0001\u0014\u0002\u0000\u0011\u0014\u0001\u0000\r\u0014\u00018\u0001\u0014\u000b\u0000\u0001\'\u0004\u0000\u00012\u001b\u0000\u00019#\u0000\u0002:\n3\u0001:\u00013\u0001:\u0001\u0000\u0002:\u0001\u0000\n3\u0001:\u00043\u0001\u000f\u0001\u0000\u0014\u000f\u0001\u0000\u0001;\u000f\u000f\u0001\u0000\u0014\u000f\u0001\u0000\u0006\u000f\u0001<\u0008\u000f\u0001\u0014\u0001\u0000\u0001\u0014\u0002\u0000\u0011\u0014\u0001\u0000\u0005\u0014\u0001=\n\u0014\u0001\u0000\u0001\u0014\u0002\u0000\u0011\u0014\u0001\u0000\u0001\u0014\u0001>\u000e\u0014\u0001\u0000\u0001\u0014\u0002\u0000\u0011\u0014\u0001\u0000\u000e\u0014\u0001?\u0006\u0000\u00013\u001f\u0000\u0001\u000f\u0001\u0000\u0014\u000f\u0001\u0000\u0003\u000f\u0001@\f\u000f\u0001\u0000\u0014\u000f\u0001\u0000\u0007\u000f\u0001A\u0007\u000f\u0001\u0014\u0001\u0000\u0001\u0014\u0002\u0000\u0011\u0014\u0001\u0000\u0006\u0014\u0001B\t\u0014\u0001\u0000\u0001\u0014\u0002\u0000\u0011\u0014\u0001\u0000\u0006\u0014\u0001C\u0008\u0014\u0001\u000f\u0001\u0000\u0014\u000f\u0001\u0000\u0004\u000f\u0001D\u000b\u000f\u0001\u0000\u0014\u000f\u0001\u0000\u0004\u000f\u0001E\n\u000f\u0001\u0014\u0001\u0000\u0001\u0014\u0002\u0000\u0011\u0014\u0001\u0000\u0001F\u000f\u0014\u0001\u0000\u0001\u0014\u0002\u0000\u0011\u0014\u0001\u0000\f\u0014\u0001B\u0003\u0014\u0001\u0000\u0001\u0014\u0002\u0000\u0011\u0014\u0001\u0000\t\u0014\u0001=\u0005\u0014";

        <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: java.lang.String ZZ_ROWMAP_PACKED_0> = "\u0000\u0000\u0000&\u0000L\u0000r\u0000\u0098\u0000\u00be\u0000\u00e4\u0000\u010a\u0000\u0130\u0000\u0156\u0000\u017c\u0000\u01a2\u0000\u01c8\u0000\u01ee\u0000\u0214\u0000\u0156\u0000\u023a\u0000\u0260\u0000\u0286\u0000\u02ac\u0000\u02d2\u0000\u02f8\u0000\u031e\u0000\u0344\u0000\u036a\u0000\u0390\u0000\u03b6\u0000\u03dc\u0000\u0402\u0000\u0428\u0000\u044e\u0000\u0474\u0000\u0156\u0000\u049a\u0000\u04c0\u0000\u04e6\u0000\u050c\u0000\u0532\u0000\u0558\u0000\u057e\u0000\u05a4\u0000\u0156\u0000\u05ca\u0000\u05f0\u0000\u0616\u0000\u063c\u0000\u0662\u0000\u0156\u0000\u0688\u0000\u06ae\u0000\u06d4\u0000\u06fa\u0000\u0720\u0000\u0746\u0000\u076c\u0000\u0792\u0000\u07b8\u0000\u06d4\u0000\u07de\u0000\u0804\u0000\u02ac\u0000\u082a\u0000\u0850\u0000\u0876\u0000\u089c\u0000\u08c2\u0000\u08e8\u0000\u0214\u0000\u0214\u0000\u090e";

        <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: java.lang.String ZZ_ACTION_PACKED_0> = "\u0005\u0000\u0001\u0001\u0001\u0002\u0001\u0003\u0001\u0004\u0001\u0005\u0004\u0004\u0001\u0003\u0001\u0006\u0002\u0003\u0002\u0007\u0002\u0008\u0002\u0007\u0001\t\u0005\u0000\u0002\u0003\u0001\u0008\u0003\u0007\u0005\u0000\u0001\n\u0002\u0003\u0003\u0007\u0001\u000b\u0002\u0000\u0001\f\u0002\u0003\u0003\u0007\u0002\u0000\u0002\u0003\u0001\r\u0002\u0007\u0002\u0003\u0002\u0007\u0001\u000e\u0001\u000f\u0001\u0007";

        <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: java.lang.String ZZ_CMAP_PACKED> = "\t\u0000\u0001\u0001\u0001\u0002\u0001\u0000\u0001\u0001\u0013\u0000\u0001\u0001\u0001\u0014\u0001\u0003\u0001!\u0001\u0007\u0001\u0005\u0001\u0005\u0001\u0004\u0005\u0005\u0001\u0015\u0001\u0012\u0001\u0006\n\u0007\u0001\u0010\u0001\u0005\u0001\u0013\u0001\u0005\u0001\u0016\u0002\u0005\u0001\u001c\u0001\u0007\u0001\u001f\u0001 \u0001\u0017\u0003\u0007\u0001\u001d\u0002\u0007\u0001\u0018\u0001\u0019\u0001\u001a\u0001\u0007\u0001\"\u0001$\u0001#\u0001\u001e\u0001\u001b\u0001%\u0005\u0007\u0001\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0004\u0007\u0001\u000f\u0001\f\u0001\u0007\u0001\u0008\u0001\r\u0002\u0007\u0001\u000e\u0003\u0007\u0001\n\u0002\u0007\u0001\u000b\u0001\t\u0002\u0007\u0001\u0011\u0003\u0007\u0003\u0000\u0001\u0005\uff81\u0000";

        <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int COMMENT> = 1;

        <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int INTAG_ATTLIST> = 4;

        <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int YYINITIAL> = 0;

        <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int INTAG_ELEMENT> = 3;

        <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int INTAG_START> = 2;

        <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int YYEOF> = -1;

        $r0 = staticinvoke <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: char[] zzUnpackCMap(java.lang.String)>("\t\u0000\u0001\u0001\u0001\u0002\u0001\u0000\u0001\u0001\u0013\u0000\u0001\u0001\u0001\u0014\u0001\u0003\u0001!\u0001\u0007\u0001\u0005\u0001\u0005\u0001\u0004\u0005\u0005\u0001\u0015\u0001\u0012\u0001\u0006\n\u0007\u0001\u0010\u0001\u0005\u0001\u0013\u0001\u0005\u0001\u0016\u0002\u0005\u0001\u001c\u0001\u0007\u0001\u001f\u0001 \u0001\u0017\u0003\u0007\u0001\u001d\u0002\u0007\u0001\u0018\u0001\u0019\u0001\u001a\u0001\u0007\u0001\"\u0001$\u0001#\u0001\u001e\u0001\u001b\u0001%\u0005\u0007\u0001\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0004\u0007\u0001\u000f\u0001\f\u0001\u0007\u0001\u0008\u0001\r\u0002\u0007\u0001\u000e\u0003\u0007\u0001\n\u0002\u0007\u0001\u000b\u0001\t\u0002\u0007\u0001\u0011\u0003\u0007\u0003\u0000\u0001\u0005\uff81\u0000");

        <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: char[] ZZ_CMAP> = $r0;

        $r1 = staticinvoke <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int[] zzUnpackAction()>();

        <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int[] ZZ_ACTION> = $r1;

        $r2 = staticinvoke <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int[] zzUnpackRowMap()>();

        <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int[] ZZ_ROWMAP> = $r2;

        $r3 = staticinvoke <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int[] zzUnpackTrans()>();

        <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int[] ZZ_TRANS> = $r3;

        $r4 = newarray (java.lang.String)[3];

        $r4[0] = "Unkown internal scanner error";

        $r4[1] = "Error: could not match input";

        $r4[2] = "Error: pushback value was too large";

        <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: java.lang.String[] ZZ_ERROR_MSG> = $r4;

        $r5 = staticinvoke <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int[] zzUnpackAttribute()>();

        <org.fife.ui.rsyntaxtextarea.modes.DtdTokenMaker: int[] ZZ_ATTRIBUTE> = $r5;

        return;
    }
}
