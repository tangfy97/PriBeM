public class org.waveprotocol.wave.concurrencycontrol.testing.MockWaveViewService$OpenArguments extends java.lang.Object
{
    public final org.waveprotocol.wave.model.id.IdFilter waveletFilter;
    public final java.util.Map knownWavelets;
    public final org.waveprotocol.wave.concurrencycontrol.channel.WaveViewService$OpenCallback callback;

    private void <init>(org.waveprotocol.wave.model.id.IdFilter, java.util.Map, org.waveprotocol.wave.concurrencycontrol.channel.WaveViewService$OpenCallback)
    {
        org.waveprotocol.wave.concurrencycontrol.testing.MockWaveViewService$OpenArguments r0;
        org.waveprotocol.wave.concurrencycontrol.channel.WaveViewService$OpenCallback r3;
        java.util.Map r2;
        org.waveprotocol.wave.model.id.IdFilter r1;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.testing.MockWaveViewService$OpenArguments;

        r1 := @parameter0: org.waveprotocol.wave.model.id.IdFilter;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: org.waveprotocol.wave.concurrencycontrol.channel.WaveViewService$OpenCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.concurrencycontrol.testing.MockWaveViewService$OpenArguments: org.waveprotocol.wave.model.id.IdFilter waveletFilter> = r1;

        r0.<org.waveprotocol.wave.concurrencycontrol.testing.MockWaveViewService$OpenArguments: java.util.Map knownWavelets> = r2;

        r0.<org.waveprotocol.wave.concurrencycontrol.testing.MockWaveViewService$OpenArguments: org.waveprotocol.wave.concurrencycontrol.channel.WaveViewService$OpenCallback callback> = r3;

        return;
    }

    void <init>(org.waveprotocol.wave.model.id.IdFilter, java.util.Map, org.waveprotocol.wave.concurrencycontrol.channel.WaveViewService$OpenCallback, org.waveprotocol.wave.concurrencycontrol.testing.MockWaveViewService$1)
    {
        org.waveprotocol.wave.concurrencycontrol.testing.MockWaveViewService$OpenArguments r0;
        org.waveprotocol.wave.concurrencycontrol.channel.WaveViewService$OpenCallback r3;
        java.util.Map r2;
        org.waveprotocol.wave.concurrencycontrol.testing.MockWaveViewService$1 r4;
        org.waveprotocol.wave.model.id.IdFilter r1;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.testing.MockWaveViewService$OpenArguments;

        r1 := @parameter0: org.waveprotocol.wave.model.id.IdFilter;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: org.waveprotocol.wave.concurrencycontrol.channel.WaveViewService$OpenCallback;

        r4 := @parameter3: org.waveprotocol.wave.concurrencycontrol.testing.MockWaveViewService$1;

        specialinvoke r0.<org.waveprotocol.wave.concurrencycontrol.testing.MockWaveViewService$OpenArguments: void <init>(org.waveprotocol.wave.model.id.IdFilter,java.util.Map,org.waveprotocol.wave.concurrencycontrol.channel.WaveViewService$OpenCallback)>(r1, r2, r3);

        return;
    }
}
