public abstract class org.springframework.context.support.AbstractMessageSource extends org.springframework.context.support.MessageSourceSupport implements org.springframework.context.HierarchicalMessageSource
{
    private org.springframework.context.MessageSource parentMessageSource;
    private boolean useCodeAsDefaultMessage;

    public void <init>()
    {
        org.springframework.context.support.AbstractMessageSource r0;

        r0 := @this: org.springframework.context.support.AbstractMessageSource;

        specialinvoke r0.<org.springframework.context.support.MessageSourceSupport: void <init>()>();

        r0.<org.springframework.context.support.AbstractMessageSource: boolean useCodeAsDefaultMessage> = 0;

        return;
    }

    public void setParentMessageSource(org.springframework.context.MessageSource)
    {
        org.springframework.context.support.AbstractMessageSource r0;
        org.springframework.context.MessageSource r1;

        r0 := @this: org.springframework.context.support.AbstractMessageSource;

        r1 := @parameter0: org.springframework.context.MessageSource;

        r0.<org.springframework.context.support.AbstractMessageSource: org.springframework.context.MessageSource parentMessageSource> = r1;

        return;
    }

    public org.springframework.context.MessageSource getParentMessageSource()
    {
        org.springframework.context.support.AbstractMessageSource r0;
        org.springframework.context.MessageSource $r1;

        r0 := @this: org.springframework.context.support.AbstractMessageSource;

        $r1 = r0.<org.springframework.context.support.AbstractMessageSource: org.springframework.context.MessageSource parentMessageSource>;

        return $r1;
    }

    public void setUseCodeAsDefaultMessage(boolean)
    {
        org.springframework.context.support.AbstractMessageSource r0;
        boolean z0;

        r0 := @this: org.springframework.context.support.AbstractMessageSource;

        z0 := @parameter0: boolean;

        r0.<org.springframework.context.support.AbstractMessageSource: boolean useCodeAsDefaultMessage> = z0;

        return;
    }

    protected boolean isUseCodeAsDefaultMessage()
    {
        org.springframework.context.support.AbstractMessageSource r0;
        boolean $z0;

        r0 := @this: org.springframework.context.support.AbstractMessageSource;

        $z0 = r0.<org.springframework.context.support.AbstractMessageSource: boolean useCodeAsDefaultMessage>;

        return $z0;
    }

    public final java.lang.String getMessage(java.lang.String, java.lang.Object[], java.lang.String, java.util.Locale)
    {
        java.lang.Object[] r2;
        org.springframework.context.support.AbstractMessageSource r0;
        java.util.Locale r3;
        java.lang.String r1, $r4, r5, $r6, $r7;

        r0 := @this: org.springframework.context.support.AbstractMessageSource;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        r5 := @parameter2: java.lang.String;

        r3 := @parameter3: java.util.Locale;

        $r4 = virtualinvoke r0.<org.springframework.context.support.AbstractMessageSource: java.lang.String getMessageInternal(java.lang.String,java.lang.Object[],java.util.Locale)>(r1, r2, r3);

        if $r4 == null goto label1;

        return $r4;

     label1:
        if r5 != null goto label2;

        $r7 = virtualinvoke r0.<org.springframework.context.support.AbstractMessageSource: java.lang.String getDefaultMessage(java.lang.String)>(r1);

        if $r7 == null goto label2;

        return $r7;

     label2:
        $r6 = virtualinvoke r0.<org.springframework.context.support.AbstractMessageSource: java.lang.String renderDefaultMessage(java.lang.String,java.lang.Object[],java.util.Locale)>(r5, r2, r3);

        return $r6;
    }

    public final java.lang.String getMessage(java.lang.String, java.lang.Object[], java.util.Locale) throws org.springframework.context.NoSuchMessageException
    {
        java.lang.Object[] r2;
        org.springframework.context.NoSuchMessageException $r6;
        java.util.Locale r3;
        org.springframework.context.support.AbstractMessageSource r0;
        java.lang.String r1, $r4, $r5;

        r0 := @this: org.springframework.context.support.AbstractMessageSource;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        r3 := @parameter2: java.util.Locale;

        $r4 = virtualinvoke r0.<org.springframework.context.support.AbstractMessageSource: java.lang.String getMessageInternal(java.lang.String,java.lang.Object[],java.util.Locale)>(r1, r2, r3);

        if $r4 == null goto label1;

        return $r4;

     label1:
        $r5 = virtualinvoke r0.<org.springframework.context.support.AbstractMessageSource: java.lang.String getDefaultMessage(java.lang.String)>(r1);

        if $r5 == null goto label2;

        return $r5;

     label2:
        $r6 = new org.springframework.context.NoSuchMessageException;

        specialinvoke $r6.<org.springframework.context.NoSuchMessageException: void <init>(java.lang.String,java.util.Locale)>(r1, r3);

        throw $r6;
    }

    public final java.lang.String getMessage(org.springframework.context.MessageSourceResolvable, java.util.Locale) throws org.springframework.context.NoSuchMessageException
    {
        java.lang.Object[] $r4, $r11;
        org.springframework.context.NoSuchMessageException $r8;
        org.springframework.context.support.AbstractMessageSource r3;
        java.lang.String[] $r1, r2, r13;
        java.util.Locale r5;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String $r6, $r7, $r9, $r10, $r12, r14, $r15;
        org.springframework.context.MessageSourceResolvable r0;

        r3 := @this: org.springframework.context.support.AbstractMessageSource;

        r0 := @parameter0: org.springframework.context.MessageSourceResolvable;

        r5 := @parameter1: java.util.Locale;

        $r1 = interfaceinvoke r0.<org.springframework.context.MessageSourceResolvable: java.lang.String[] getCodes()>();

        r13 = $r1;

        if $r1 != null goto label1;

        r13 = newarray (java.lang.String)[0];

     label1:
        r2 = r13;

        $i4 = lengthof r13;

        i5 = 0;

        goto label4;

     label2:
        r14 = r2[i5];

        $r4 = interfaceinvoke r0.<org.springframework.context.MessageSourceResolvable: java.lang.Object[] getArguments()>();

        $r6 = virtualinvoke r3.<org.springframework.context.support.AbstractMessageSource: java.lang.String getMessageInternal(java.lang.String,java.lang.Object[],java.util.Locale)>(r14, $r4, r5);

        if $r6 == null goto label3;

        return $r6;

     label3:
        i5 = i5 + 1;

     label4:
        if i5 < $i4 goto label2;

        $r7 = interfaceinvoke r0.<org.springframework.context.MessageSourceResolvable: java.lang.String getDefaultMessage()>();

        if $r7 == null goto label5;

        $r11 = interfaceinvoke r0.<org.springframework.context.MessageSourceResolvable: java.lang.Object[] getArguments()>();

        $r12 = virtualinvoke r3.<org.springframework.context.support.AbstractMessageSource: java.lang.String renderDefaultMessage(java.lang.String,java.lang.Object[],java.util.Locale)>($r7, $r11, r5);

        return $r12;

     label5:
        $i0 = lengthof r13;

        if $i0 <= 0 goto label6;

        $r9 = r13[0];

        $r10 = virtualinvoke r3.<org.springframework.context.support.AbstractMessageSource: java.lang.String getDefaultMessage(java.lang.String)>($r9);

        if $r10 == null goto label6;

        return $r10;

     label6:
        $r8 = new org.springframework.context.NoSuchMessageException;

        $i1 = lengthof r13;

        if $i1 <= 0 goto label7;

        $i2 = lengthof r13;

        $i3 = $i2 - 1;

        $r15 = r13[$i3];

        goto label8;

     label7:
        $r15 = null;

     label8:
        specialinvoke $r8.<org.springframework.context.NoSuchMessageException: void <init>(java.lang.String,java.util.Locale)>($r15, r5);

        throw $r8;
    }

    protected java.lang.String getMessageInternal(java.lang.String, java.lang.Object[], java.util.Locale)
    {
        java.lang.Throwable $r8;
        java.lang.Object[] r1, $r3, r10;
        org.springframework.context.support.AbstractMessageSource r2;
        java.text.MessageFormat $r4;
        java.util.Locale r9;
        java.lang.String r0, $r5, $r6, $r7;
        boolean $z0, $z1;

        r2 := @this: org.springframework.context.support.AbstractMessageSource;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

        r9 := @parameter2: java.util.Locale;

        if r0 != null goto label1;

        return null;

     label1:
        if r9 != null goto label2;

        r9 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

     label2:
        r10 = r1;

        $z0 = virtualinvoke r2.<org.springframework.context.support.AbstractMessageSource: boolean isAlwaysUseMessageFormat()>();

        if $z0 != 0 goto label3;

        $z1 = staticinvoke <org.springframework.util.ObjectUtils: boolean isEmpty(java.lang.Object[])>(r1);

        if $z1 == 0 goto label3;

        $r7 = virtualinvoke r2.<org.springframework.context.support.AbstractMessageSource: java.lang.String resolveCodeWithoutArguments(java.lang.String,java.util.Locale)>(r0, r9);

        if $r7 == null goto label8;

        return $r7;

     label3:
        $r3 = virtualinvoke r2.<org.springframework.context.support.AbstractMessageSource: java.lang.Object[] resolveArguments(java.lang.Object[],java.util.Locale)>(r1, r9);

        r10 = $r3;

        $r4 = virtualinvoke r2.<org.springframework.context.support.AbstractMessageSource: java.text.MessageFormat resolveCode(java.lang.String,java.util.Locale)>(r0, r9);

        if $r4 == null goto label8;

        entermonitor $r4;

     label4:
        $r6 = virtualinvoke $r4.<java.text.MessageFormat: java.lang.String format(java.lang.Object)>($r3);

        exitmonitor $r4;

     label5:
        return $r6;

     label6:
        $r8 := @caughtexception;

        exitmonitor $r4;

     label7:
        throw $r8;

     label8:
        $r5 = virtualinvoke r2.<org.springframework.context.support.AbstractMessageSource: java.lang.String getMessageFromParent(java.lang.String,java.lang.Object[],java.util.Locale)>(r0, r10, r9);

        return $r5;

        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    protected java.lang.String getMessageFromParent(java.lang.String, java.lang.Object[], java.util.Locale)
    {
        java.lang.Object[] r3;
        org.springframework.context.support.AbstractMessageSource r0, $r6;
        java.util.Locale r4;
        java.lang.String r2, $r5, $r7;
        org.springframework.context.MessageSource $r1;
        boolean $z0;

        r0 := @this: org.springframework.context.support.AbstractMessageSource;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object[];

        r4 := @parameter2: java.util.Locale;

        $r1 = virtualinvoke r0.<org.springframework.context.support.AbstractMessageSource: org.springframework.context.MessageSource getParentMessageSource()>();

        if $r1 == null goto label2;

        $z0 = $r1 instanceof org.springframework.context.support.AbstractMessageSource;

        if $z0 == 0 goto label1;

        $r6 = (org.springframework.context.support.AbstractMessageSource) $r1;

        $r7 = virtualinvoke $r6.<org.springframework.context.support.AbstractMessageSource: java.lang.String getMessageInternal(java.lang.String,java.lang.Object[],java.util.Locale)>(r2, r3, r4);

        return $r7;

     label1:
        $r5 = interfaceinvoke $r1.<org.springframework.context.MessageSource: java.lang.String getMessage(java.lang.String,java.lang.Object[],java.lang.String,java.util.Locale)>(r2, r3, null, r4);

        return $r5;

     label2:
        return null;
    }

    protected java.lang.String getDefaultMessage(java.lang.String)
    {
        java.lang.String r1;
        org.springframework.context.support.AbstractMessageSource r0;
        boolean $z0;

        r0 := @this: org.springframework.context.support.AbstractMessageSource;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.springframework.context.support.AbstractMessageSource: boolean isUseCodeAsDefaultMessage()>();

        if $z0 == 0 goto label1;

        return r1;

     label1:
        return null;
    }

    protected java.lang.Object[] resolveArguments(java.lang.Object[], java.util.Locale)
    {
        java.lang.Object[] r0, $r7, $r8, $r9;
        org.springframework.context.support.AbstractMessageSource r3;
        java.util.ArrayList $r1;
        java.util.Locale r4;
        int $i0, i1, $i2, i3;
        java.lang.Object r2;
        java.lang.String $r6;
        org.springframework.context.MessageSourceResolvable $r5;
        boolean $z0;

        r3 := @this: org.springframework.context.support.AbstractMessageSource;

        r0 := @parameter0: java.lang.Object[];

        r4 := @parameter1: java.util.Locale;

        if r0 != null goto label1;

        $r9 = newarray (java.lang.Object)[0];

        return $r9;

     label1:
        $r1 = new java.util.ArrayList;

        $i0 = lengthof r0;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0);

        i1 = lengthof r0;

        i3 = 0;

        goto label5;

     label2:
        r2 = r0[i3];

        $z0 = r2 instanceof org.springframework.context.MessageSourceResolvable;

        if $z0 == 0 goto label3;

        $r5 = (org.springframework.context.MessageSourceResolvable) r2;

        $r6 = virtualinvoke r3.<org.springframework.context.support.AbstractMessageSource: java.lang.String getMessage(org.springframework.context.MessageSourceResolvable,java.util.Locale)>($r5, r4);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label4;

     label3:
        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(r2);

     label4:
        i3 = i3 + 1;

     label5:
        if i3 < i1 goto label2;

        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r7 = newarray (java.lang.Object)[$i2];

        $r8 = interfaceinvoke $r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        return $r8;
    }

    protected java.lang.String resolveCodeWithoutArguments(java.lang.String, java.util.Locale)
    {
        java.lang.Throwable $r6;
        java.lang.Object[] $r4;
        java.util.Locale r2;
        org.springframework.context.support.AbstractMessageSource r0;
        java.lang.String r1, $r5;
        java.text.MessageFormat $r3;

        r0 := @this: org.springframework.context.support.AbstractMessageSource;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Locale;

        $r3 = virtualinvoke r0.<org.springframework.context.support.AbstractMessageSource: java.text.MessageFormat resolveCode(java.lang.String,java.util.Locale)>(r1, r2);

        if $r3 == null goto label5;

        entermonitor $r3;

     label1:
        $r4 = newarray (java.lang.Object)[0];

        $r5 = virtualinvoke $r3.<java.text.MessageFormat: java.lang.String format(java.lang.Object)>($r4);

        exitmonitor $r3;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r3;

     label4:
        throw $r6;

     label5:
        return null;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    protected abstract java.text.MessageFormat resolveCode(java.lang.String, java.util.Locale);
}
