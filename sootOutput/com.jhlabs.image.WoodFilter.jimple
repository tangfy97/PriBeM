public class com.jhlabs.image.WoodFilter extends com.jhlabs.image.PointFilter
{
    private float scale;
    private float stretch;
    private float angle;
    public float rings;
    public float turbulence;
    public float fibres;
    public float gain;
    private float m00;
    private float m01;
    private float m10;
    private float m11;
    private com.jhlabs.image.Colormap colormap;
    private com.jhlabs.math.Function2D function;

    public void <init>()
    {
        com.jhlabs.image.WoodFilter r0;
        com.jhlabs.image.LinearColormap $r1;
        com.jhlabs.math.Noise $r2;

        r0 := @this: com.jhlabs.image.WoodFilter;

        specialinvoke r0.<com.jhlabs.image.PointFilter: void <init>()>();

        r0.<com.jhlabs.image.WoodFilter: float scale> = 200.0F;

        r0.<com.jhlabs.image.WoodFilter: float stretch> = 10.0F;

        r0.<com.jhlabs.image.WoodFilter: float angle> = 1.5707964F;

        r0.<com.jhlabs.image.WoodFilter: float rings> = 0.5F;

        r0.<com.jhlabs.image.WoodFilter: float turbulence> = 0.0F;

        r0.<com.jhlabs.image.WoodFilter: float fibres> = 0.5F;

        r0.<com.jhlabs.image.WoodFilter: float gain> = 0.8F;

        r0.<com.jhlabs.image.WoodFilter: float m00> = 1.0F;

        r0.<com.jhlabs.image.WoodFilter: float m01> = 0.0F;

        r0.<com.jhlabs.image.WoodFilter: float m10> = 0.0F;

        r0.<com.jhlabs.image.WoodFilter: float m11> = 1.0F;

        $r1 = new com.jhlabs.image.LinearColormap;

        specialinvoke $r1.<com.jhlabs.image.LinearColormap: void <init>(int,int)>(-1719148, -6784175);

        r0.<com.jhlabs.image.WoodFilter: com.jhlabs.image.Colormap colormap> = $r1;

        $r2 = new com.jhlabs.math.Noise;

        specialinvoke $r2.<com.jhlabs.math.Noise: void <init>()>();

        r0.<com.jhlabs.image.WoodFilter: com.jhlabs.math.Function2D function> = $r2;

        return;
    }

    public void setRings(float)
    {
        com.jhlabs.image.WoodFilter r0;
        float f0;

        r0 := @this: com.jhlabs.image.WoodFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.WoodFilter: float rings> = f0;

        return;
    }

    public float getRings()
    {
        com.jhlabs.image.WoodFilter r0;
        float $f0;

        r0 := @this: com.jhlabs.image.WoodFilter;

        $f0 = r0.<com.jhlabs.image.WoodFilter: float rings>;

        return $f0;
    }

    public void setFunction(com.jhlabs.math.Function2D)
    {
        com.jhlabs.image.WoodFilter r0;
        com.jhlabs.math.Function2D r1;

        r0 := @this: com.jhlabs.image.WoodFilter;

        r1 := @parameter0: com.jhlabs.math.Function2D;

        r0.<com.jhlabs.image.WoodFilter: com.jhlabs.math.Function2D function> = r1;

        return;
    }

    public com.jhlabs.math.Function2D getFunction()
    {
        com.jhlabs.image.WoodFilter r0;
        com.jhlabs.math.Function2D $r1;

        r0 := @this: com.jhlabs.image.WoodFilter;

        $r1 = r0.<com.jhlabs.image.WoodFilter: com.jhlabs.math.Function2D function>;

        return $r1;
    }

    public void setScale(float)
    {
        com.jhlabs.image.WoodFilter r0;
        float f0;

        r0 := @this: com.jhlabs.image.WoodFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.WoodFilter: float scale> = f0;

        return;
    }

    public float getScale()
    {
        com.jhlabs.image.WoodFilter r0;
        float $f0;

        r0 := @this: com.jhlabs.image.WoodFilter;

        $f0 = r0.<com.jhlabs.image.WoodFilter: float scale>;

        return $f0;
    }

    public void setStretch(float)
    {
        com.jhlabs.image.WoodFilter r0;
        float f0;

        r0 := @this: com.jhlabs.image.WoodFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.WoodFilter: float stretch> = f0;

        return;
    }

    public float getStretch()
    {
        com.jhlabs.image.WoodFilter r0;
        float $f0;

        r0 := @this: com.jhlabs.image.WoodFilter;

        $f0 = r0.<com.jhlabs.image.WoodFilter: float stretch>;

        return $f0;
    }

    public void setAngle(float)
    {
        com.jhlabs.image.WoodFilter r0;
        float f0, f1, f2, $f3;
        double $d0, $d1, $d2, $d3;

        r0 := @this: com.jhlabs.image.WoodFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.WoodFilter: float angle> = f0;

        $d0 = (double) f0;

        $d1 = staticinvoke <java.lang.Math: double cos(double)>($d0);

        f1 = (float) $d1;

        $d2 = (double) f0;

        $d3 = staticinvoke <java.lang.Math: double sin(double)>($d2);

        f2 = (float) $d3;

        r0.<com.jhlabs.image.WoodFilter: float m00> = f1;

        r0.<com.jhlabs.image.WoodFilter: float m01> = f2;

        $f3 = neg f2;

        r0.<com.jhlabs.image.WoodFilter: float m10> = $f3;

        r0.<com.jhlabs.image.WoodFilter: float m11> = f1;

        return;
    }

    public float getAngle()
    {
        com.jhlabs.image.WoodFilter r0;
        float $f0;

        r0 := @this: com.jhlabs.image.WoodFilter;

        $f0 = r0.<com.jhlabs.image.WoodFilter: float angle>;

        return $f0;
    }

    public void setTurbulence(float)
    {
        com.jhlabs.image.WoodFilter r0;
        float f0;

        r0 := @this: com.jhlabs.image.WoodFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.WoodFilter: float turbulence> = f0;

        return;
    }

    public float getTurbulence()
    {
        com.jhlabs.image.WoodFilter r0;
        float $f0;

        r0 := @this: com.jhlabs.image.WoodFilter;

        $f0 = r0.<com.jhlabs.image.WoodFilter: float turbulence>;

        return $f0;
    }

    public void setFibres(float)
    {
        com.jhlabs.image.WoodFilter r0;
        float f0;

        r0 := @this: com.jhlabs.image.WoodFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.WoodFilter: float fibres> = f0;

        return;
    }

    public float getFibres()
    {
        com.jhlabs.image.WoodFilter r0;
        float $f0;

        r0 := @this: com.jhlabs.image.WoodFilter;

        $f0 = r0.<com.jhlabs.image.WoodFilter: float fibres>;

        return $f0;
    }

    public void setgain(float)
    {
        com.jhlabs.image.WoodFilter r0;
        float f0;

        r0 := @this: com.jhlabs.image.WoodFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.WoodFilter: float gain> = f0;

        return;
    }

    public float getGain()
    {
        com.jhlabs.image.WoodFilter r0;
        float $f0;

        r0 := @this: com.jhlabs.image.WoodFilter;

        $f0 = r0.<com.jhlabs.image.WoodFilter: float gain>;

        return $f0;
    }

    public void setColormap(com.jhlabs.image.Colormap)
    {
        com.jhlabs.image.WoodFilter r0;
        com.jhlabs.image.Colormap r1;

        r0 := @this: com.jhlabs.image.WoodFilter;

        r1 := @parameter0: com.jhlabs.image.Colormap;

        r0.<com.jhlabs.image.WoodFilter: com.jhlabs.image.Colormap colormap> = r1;

        return;
    }

    public com.jhlabs.image.Colormap getColormap()
    {
        com.jhlabs.image.WoodFilter r0;
        com.jhlabs.image.Colormap $r1;

        r0 := @this: com.jhlabs.image.WoodFilter;

        $r1 = r0.<com.jhlabs.image.WoodFilter: com.jhlabs.image.Colormap colormap>;

        return $r1;
    }

    public int filterRGB(int, int, int)
    {
        com.jhlabs.image.WoodFilter r0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46;
        int i0, i1, $i2, i3, i4, $i5, $i6, i7, i8, $i9, $i10, i11;
        com.jhlabs.image.Colormap $r1, $r2;

        r0 := @this: com.jhlabs.image.WoodFilter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i3 := @parameter2: int;

        $f1 = r0.<com.jhlabs.image.WoodFilter: float m00>;

        $f0 = (float) i0;

        $f5 = $f1 * $f0;

        $f3 = r0.<com.jhlabs.image.WoodFilter: float m01>;

        $f2 = (float) i1;

        $f4 = $f3 * $f2;

        f37 = $f5 + $f4;

        $f7 = r0.<com.jhlabs.image.WoodFilter: float m10>;

        $f6 = (float) i0;

        $f11 = $f7 * $f6;

        $f9 = r0.<com.jhlabs.image.WoodFilter: float m11>;

        $f8 = (float) i1;

        $f10 = $f9 * $f8;

        f38 = $f11 + $f10;

        $f12 = r0.<com.jhlabs.image.WoodFilter: float scale>;

        f39 = f37 / $f12;

        $f14 = r0.<com.jhlabs.image.WoodFilter: float scale>;

        $f13 = r0.<com.jhlabs.image.WoodFilter: float stretch>;

        $f15 = $f14 * $f13;

        f40 = f38 / $f15;

        $f16 = staticinvoke <com.jhlabs.math.Noise: float noise2(float,float)>(f39, f40);

        $f17 = r0.<com.jhlabs.image.WoodFilter: float turbulence>;

        $f20 = 0.1F * $f17;

        $f19 = f39 * 0.05F;

        $f18 = f40 * 20.0F;

        $f21 = staticinvoke <com.jhlabs.math.Noise: float noise2(float,float)>($f19, $f18);

        $f22 = $f20 * $f21;

        f41 = $f16 + $f22;

        $f23 = f41 * 0.5F;

        f42 = $f23 + 0.5F;

        $f24 = r0.<com.jhlabs.image.WoodFilter: float rings>;

        $f25 = $f24 * 50.0F;

        f43 = f42 * $f25;

        $i2 = (int) f43;

        $f26 = (float) $i2;

        f44 = f43 - $f26;

        $f27 = r0.<com.jhlabs.image.WoodFilter: float gain>;

        $f28 = staticinvoke <com.jhlabs.image.ImageMath: float smoothStep(float,float,float)>($f27, 1.0F, f44);

        $f29 = 1.0F - $f28;

        f45 = f44 * $f29;

        $f33 = r0.<com.jhlabs.image.WoodFilter: float fibres>;

        $f30 = r0.<com.jhlabs.image.WoodFilter: float scale>;

        $f32 = f39 * $f30;

        $f31 = f40 * 50.0F;

        $f34 = staticinvoke <com.jhlabs.math.Noise: float noise2(float,float)>($f32, $f31);

        $f35 = $f33 * $f34;

        f46 = f45 + $f35;

        i4 = i3 & -16777216;

        $r1 = r0.<com.jhlabs.image.WoodFilter: com.jhlabs.image.Colormap colormap>;

        if $r1 == null goto label1;

        $r2 = r0.<com.jhlabs.image.WoodFilter: com.jhlabs.image.Colormap colormap>;

        i11 = interfaceinvoke $r2.<com.jhlabs.image.Colormap: int getColor(float)>(f46);

        goto label2;

     label1:
        $f36 = f46 * 255.0F;

        $i5 = (int) $f36;

        $i6 = staticinvoke <com.jhlabs.image.PixelUtils: int clamp(int)>($i5);

        i7 = $i6 << 16;

        i8 = $i6 << 8;

        $i9 = i4 | i7;

        $i10 = $i9 | i8;

        i11 = $i10 | $i6;

     label2:
        return i11;
    }

    public java.lang.String toString()
    {
        com.jhlabs.image.WoodFilter r0;

        r0 := @this: com.jhlabs.image.WoodFilter;

        return "Texture/Wood...";
    }
}
