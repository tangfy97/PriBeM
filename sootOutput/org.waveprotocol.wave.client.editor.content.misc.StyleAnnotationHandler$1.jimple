final class org.waveprotocol.wave.client.editor.content.misc.StyleAnnotationHandler$1 extends java.lang.Object implements org.waveprotocol.wave.client.editor.content.AnnotationPainter$PaintFunction
{

    void <init>()
    {
        org.waveprotocol.wave.client.editor.content.misc.StyleAnnotationHandler$1 r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.misc.StyleAnnotationHandler$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.Map apply(java.util.Map, boolean)
    {
        java.util.HashMap $r0;
        org.waveprotocol.wave.client.editor.content.misc.StyleAnnotationHandler$1 r13;
        java.util.Map r1;
        java.lang.String $r7, $r9, $r10, $r12;
        boolean $z0, $z1, z2;
        java.util.Map$Entry r5;
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.lang.Object $r4, $r6, $r8, $r11;

        r13 := @this: org.waveprotocol.wave.client.editor.content.misc.StyleAnnotationHandler$1;

        r1 := @parameter0: java.util.Map;

        z2 := @parameter1: boolean;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r6 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = (java.lang.String) $r6;

        $z1 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>("style/");

        if $z1 == 0 goto label2;

        $r8 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (java.lang.String) $r8;

        $r10 = staticinvoke <org.waveprotocol.wave.client.editor.content.misc.StyleAnnotationHandler: java.lang.String access$000(java.lang.String)>($r9);

        $r11 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (java.lang.String) $r11;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r12);

     label2:
        goto label1;

     label3:
        return $r0;
    }
}
