class ucar.nc2.iosp.IndexChunker$Dim extends java.lang.Object
{
    long stride;
    long maxSize;
    ucar.ma2.Range want;
    int wantSize;
    final ucar.nc2.iosp.IndexChunker this$0;

    void <init>(ucar.nc2.iosp.IndexChunker, long, int, ucar.ma2.Range)
    {
        ucar.nc2.iosp.IndexChunker$Dim r0;
        ucar.ma2.Range r2;
        int i1, $i3;
        ucar.nc2.iosp.IndexChunker r1;
        long l0, $l2;

        r0 := @this: ucar.nc2.iosp.IndexChunker$Dim;

        r1 := @parameter0: ucar.nc2.iosp.IndexChunker;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        r2 := @parameter3: ucar.ma2.Range;

        r0.<ucar.nc2.iosp.IndexChunker$Dim: ucar.nc2.iosp.IndexChunker this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.IndexChunker$Dim: long stride> = l0;

        $l2 = (long) i1;

        r0.<ucar.nc2.iosp.IndexChunker$Dim: long maxSize> = $l2;

        $i3 = virtualinvoke r2.<ucar.ma2.Range: int length()>();

        r0.<ucar.nc2.iosp.IndexChunker$Dim: int wantSize> = $i3;

        r0.<ucar.nc2.iosp.IndexChunker$Dim: ucar.ma2.Range want> = r2;

        return;
    }
}
