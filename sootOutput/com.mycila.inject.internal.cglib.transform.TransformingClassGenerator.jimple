public class com.mycila.inject.internal.cglib.transform.TransformingClassGenerator extends java.lang.Object implements com.mycila.inject.internal.cglib.core.ClassGenerator
{
    private com.mycila.inject.internal.cglib.core.ClassGenerator gen;
    private com.mycila.inject.internal.cglib.transform.ClassTransformer t;

    public void <init>(com.mycila.inject.internal.cglib.core.ClassGenerator, com.mycila.inject.internal.cglib.transform.ClassTransformer)
    {
        com.mycila.inject.internal.cglib.core.ClassGenerator r1;
        com.mycila.inject.internal.cglib.transform.ClassTransformer r2;
        com.mycila.inject.internal.cglib.transform.TransformingClassGenerator r0;

        r0 := @this: com.mycila.inject.internal.cglib.transform.TransformingClassGenerator;

        r1 := @parameter0: com.mycila.inject.internal.cglib.core.ClassGenerator;

        r2 := @parameter1: com.mycila.inject.internal.cglib.transform.ClassTransformer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mycila.inject.internal.cglib.transform.TransformingClassGenerator: com.mycila.inject.internal.cglib.core.ClassGenerator gen> = r1;

        r0.<com.mycila.inject.internal.cglib.transform.TransformingClassGenerator: com.mycila.inject.internal.cglib.transform.ClassTransformer t> = r2;

        return;
    }

    public void generateClass(com.mycila.inject.internal.asm.ClassVisitor) throws java.lang.Exception
    {
        com.mycila.inject.internal.cglib.core.ClassGenerator $r4;
        com.mycila.inject.internal.cglib.transform.TransformingClassGenerator r0;
        com.mycila.inject.internal.asm.ClassVisitor r1;
        com.mycila.inject.internal.cglib.transform.ClassTransformer $r2, $r3;

        r0 := @this: com.mycila.inject.internal.cglib.transform.TransformingClassGenerator;

        r1 := @parameter0: com.mycila.inject.internal.asm.ClassVisitor;

        $r2 = r0.<com.mycila.inject.internal.cglib.transform.TransformingClassGenerator: com.mycila.inject.internal.cglib.transform.ClassTransformer t>;

        interfaceinvoke $r2.<com.mycila.inject.internal.cglib.transform.ClassTransformer: void setTarget(com.mycila.inject.internal.asm.ClassVisitor)>(r1);

        $r4 = r0.<com.mycila.inject.internal.cglib.transform.TransformingClassGenerator: com.mycila.inject.internal.cglib.core.ClassGenerator gen>;

        $r3 = r0.<com.mycila.inject.internal.cglib.transform.TransformingClassGenerator: com.mycila.inject.internal.cglib.transform.ClassTransformer t>;

        interfaceinvoke $r4.<com.mycila.inject.internal.cglib.core.ClassGenerator: void generateClass(com.mycila.inject.internal.asm.ClassVisitor)>($r3);

        return;
    }
}
