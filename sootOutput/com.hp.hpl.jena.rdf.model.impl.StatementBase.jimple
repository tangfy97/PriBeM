public abstract class com.hp.hpl.jena.rdf.model.impl.StatementBase extends java.lang.Object
{
    protected final com.hp.hpl.jena.rdf.model.impl.ModelCom model;

    protected void <init>(com.hp.hpl.jena.rdf.model.impl.ModelCom)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r1;
        com.hp.hpl.jena.rdf.model.impl.StatementBase r0;
        com.hp.hpl.jena.shared.JenaException $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.StatementBase;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new com.hp.hpl.jena.shared.JenaException;

        specialinvoke $r2.<com.hp.hpl.jena.shared.JenaException: void <init>(java.lang.String)>("Statement models must no be null");

        throw $r2;

     label1:
        r0.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.impl.ModelCom model> = r1;

        return;
    }

    public com.hp.hpl.jena.rdf.model.Model getModel()
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.StatementBase r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.StatementBase;

        $r1 = r0.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.impl.ModelCom model>;

        return $r1;
    }

    protected abstract com.hp.hpl.jena.rdf.model.impl.StatementImpl replace(com.hp.hpl.jena.rdf.model.RDFNode);

    public abstract com.hp.hpl.jena.rdf.model.Literal getLiteral();

    public abstract com.hp.hpl.jena.rdf.model.Resource getResource();

    public abstract com.hp.hpl.jena.rdf.model.Resource getSubject();

    public abstract com.hp.hpl.jena.rdf.model.Property getPredicate();

    public abstract com.hp.hpl.jena.rdf.model.RDFNode getObject();

    protected com.hp.hpl.jena.rdf.model.impl.StatementImpl stringReplace(java.lang.String, java.lang.String, boolean)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r5;
        com.hp.hpl.jena.rdf.model.impl.StatementBase r0;
        com.hp.hpl.jena.graph.Node $r4;
        com.hp.hpl.jena.rdf.model.impl.StatementImpl $r6;
        com.hp.hpl.jena.rdf.model.impl.LiteralImpl $r1;
        java.lang.String r2, r3;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.StatementBase;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r1 = new com.hp.hpl.jena.rdf.model.impl.LiteralImpl;

        $r4 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(java.lang.String,java.lang.String,boolean)>(r2, r3, z0);

        $r5 = r0.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.impl.ModelCom model>;

        specialinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.LiteralImpl: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.rdf.model.impl.ModelCom)>($r4, $r5);

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.impl.StatementImpl replace(com.hp.hpl.jena.rdf.model.RDFNode)>($r1);

        return $r6;
    }

    protected com.hp.hpl.jena.rdf.model.impl.StatementImpl stringReplace(java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.impl.StatementBase r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.impl.StatementImpl $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.StatementBase;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.impl.StatementImpl stringReplace(java.lang.String,java.lang.String,boolean)>(r1, "", 0);

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Statement changeLiteralObject(boolean)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.StatementBase r0;
        com.hp.hpl.jena.rdf.model.Literal $r2;
        com.hp.hpl.jena.rdf.model.Statement $r3;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.StatementBase;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.impl.ModelCom model>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(boolean)>(z0);

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.Statement changeObject(com.hp.hpl.jena.rdf.model.RDFNode)>($r2);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.Statement changeLiteralObject(long)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        long l0;
        com.hp.hpl.jena.rdf.model.impl.StatementBase r0;
        com.hp.hpl.jena.rdf.model.Literal $r2;
        com.hp.hpl.jena.rdf.model.Statement $r3;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.StatementBase;

        l0 := @parameter0: long;

        $r1 = r0.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.impl.ModelCom model>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(long)>(l0);

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.Statement changeObject(com.hp.hpl.jena.rdf.model.RDFNode)>($r2);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.Statement changeLiteralObject(char)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        char c0;
        com.hp.hpl.jena.rdf.model.impl.StatementBase r0;
        com.hp.hpl.jena.rdf.model.Literal $r2;
        com.hp.hpl.jena.rdf.model.Statement $r3;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.StatementBase;

        c0 := @parameter0: char;

        $r1 = r0.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.impl.ModelCom model>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(char)>(c0);

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.Statement changeObject(com.hp.hpl.jena.rdf.model.RDFNode)>($r2);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.Statement changeLiteralObject(double)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.StatementBase r0;
        com.hp.hpl.jena.rdf.model.Literal $r2;
        com.hp.hpl.jena.rdf.model.Statement $r3;
        double d0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.StatementBase;

        d0 := @parameter0: double;

        $r1 = r0.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.impl.ModelCom model>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(double)>(d0);

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.Statement changeObject(com.hp.hpl.jena.rdf.model.RDFNode)>($r2);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.Statement changeLiteralObject(float)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        float f0;
        com.hp.hpl.jena.rdf.model.impl.StatementBase r0;
        com.hp.hpl.jena.rdf.model.Literal $r2;
        com.hp.hpl.jena.rdf.model.Statement $r3;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.StatementBase;

        f0 := @parameter0: float;

        $r1 = r0.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.impl.ModelCom model>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(float)>(f0);

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.Statement changeObject(com.hp.hpl.jena.rdf.model.RDFNode)>($r2);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.Statement changeLiteralObject(int)
    {
        int i0;
        com.hp.hpl.jena.rdf.model.impl.ModelCom $r1;
        com.hp.hpl.jena.rdf.model.impl.StatementBase r0;
        com.hp.hpl.jena.rdf.model.Literal $r2;
        com.hp.hpl.jena.rdf.model.Statement $r3;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.StatementBase;

        i0 := @parameter0: int;

        $r1 = r0.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.impl.ModelCom model>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.model.impl.ModelCom: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(int)>(i0);

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.Statement changeObject(com.hp.hpl.jena.rdf.model.RDFNode)>($r2);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.Statement changeObject(java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.impl.StatementImpl $r3;
        com.hp.hpl.jena.rdf.model.impl.StatementBase r0;
        java.lang.String r1, $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.StatementBase;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.impl.StatementImpl stringReplace(java.lang.String)>($r2);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.Statement changeObject(java.lang.String, boolean)
    {
        com.hp.hpl.jena.rdf.model.impl.StatementImpl $r3;
        com.hp.hpl.jena.rdf.model.impl.StatementBase r0;
        java.lang.String r1, $r2;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.StatementBase;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.impl.StatementImpl stringReplace(java.lang.String,java.lang.String,boolean)>($r2, "", z0);

        return $r3;
    }

    public com.hp.hpl.jena.rdf.model.Statement changeObject(java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.impl.StatementImpl $r4;
        com.hp.hpl.jena.rdf.model.impl.StatementBase r0;
        java.lang.String r1, $r2, r3;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.StatementBase;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.impl.StatementImpl stringReplace(java.lang.String,java.lang.String,boolean)>($r2, r3, 0);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.Statement changeObject(java.lang.String, java.lang.String, boolean)
    {
        com.hp.hpl.jena.rdf.model.impl.StatementImpl $r4;
        com.hp.hpl.jena.rdf.model.impl.StatementBase r0;
        java.lang.String r1, $r2, r3;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.StatementBase;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.impl.StatementImpl stringReplace(java.lang.String,java.lang.String,boolean)>($r2, r3, z0);

        return $r4;
    }

    public com.hp.hpl.jena.rdf.model.Statement changeObject(com.hp.hpl.jena.rdf.model.RDFNode)
    {
        com.hp.hpl.jena.rdf.model.impl.StatementBase r0;
        com.hp.hpl.jena.rdf.model.RDFNode r1;
        com.hp.hpl.jena.rdf.model.impl.StatementImpl $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.StatementBase;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.RDFNode;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.impl.StatementImpl replace(com.hp.hpl.jena.rdf.model.RDFNode)>(r1);

        return $r2;
    }

    public boolean getBoolean()
    {
        com.hp.hpl.jena.rdf.model.impl.StatementBase r0;
        com.hp.hpl.jena.rdf.model.Literal $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.StatementBase;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.Literal getLiteral()>();

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Literal: boolean getBoolean()>();

        return $z0;
    }

    public byte getByte()
    {
        com.hp.hpl.jena.rdf.model.impl.StatementBase r0;
        com.hp.hpl.jena.rdf.model.Literal $r1;
        byte $b0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.StatementBase;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.Literal getLiteral()>();

        $b0 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Literal: byte getByte()>();

        return $b0;
    }

    public short getShort()
    {
        short $s0;
        com.hp.hpl.jena.rdf.model.impl.StatementBase r0;
        com.hp.hpl.jena.rdf.model.Literal $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.StatementBase;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.Literal getLiteral()>();

        $s0 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Literal: short getShort()>();

        return $s0;
    }

    public int getInt()
    {
        int $i0;
        com.hp.hpl.jena.rdf.model.impl.StatementBase r0;
        com.hp.hpl.jena.rdf.model.Literal $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.StatementBase;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.Literal getLiteral()>();

        $i0 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Literal: int getInt()>();

        return $i0;
    }

    public long getLong()
    {
        long $l0;
        com.hp.hpl.jena.rdf.model.impl.StatementBase r0;
        com.hp.hpl.jena.rdf.model.Literal $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.StatementBase;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.Literal getLiteral()>();

        $l0 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Literal: long getLong()>();

        return $l0;
    }

    public char getChar()
    {
        char $c0;
        com.hp.hpl.jena.rdf.model.impl.StatementBase r0;
        com.hp.hpl.jena.rdf.model.Literal $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.StatementBase;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.Literal getLiteral()>();

        $c0 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Literal: char getChar()>();

        return $c0;
    }

    public float getFloat()
    {
        float $f0;
        com.hp.hpl.jena.rdf.model.impl.StatementBase r0;
        com.hp.hpl.jena.rdf.model.Literal $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.StatementBase;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.Literal getLiteral()>();

        $f0 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Literal: float getFloat()>();

        return $f0;
    }

    public double getDouble()
    {
        com.hp.hpl.jena.rdf.model.impl.StatementBase r0;
        com.hp.hpl.jena.rdf.model.Literal $r1;
        double $d0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.StatementBase;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.Literal getLiteral()>();

        $d0 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Literal: double getDouble()>();

        return $d0;
    }

    public java.lang.String getString()
    {
        com.hp.hpl.jena.rdf.model.impl.StatementBase r0;
        java.lang.String $r2;
        com.hp.hpl.jena.rdf.model.Literal $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.StatementBase;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.Literal getLiteral()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Literal: java.lang.String getLexicalForm()>();

        return $r2;
    }

    protected com.hp.hpl.jena.rdf.model.Resource mustBeResource(com.hp.hpl.jena.rdf.model.RDFNode)
    {
        com.hp.hpl.jena.rdf.model.RDFNode r0;
        com.hp.hpl.jena.rdf.model.impl.StatementBase r3;
        com.hp.hpl.jena.rdf.model.ResourceRequiredException $r1;
        com.hp.hpl.jena.rdf.model.Resource $r2;
        boolean $z0;

        r3 := @this: com.hp.hpl.jena.rdf.model.impl.StatementBase;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.RDFNode;

        $z0 = r0 instanceof com.hp.hpl.jena.rdf.model.Resource;

        if $z0 == 0 goto label1;

        $r2 = (com.hp.hpl.jena.rdf.model.Resource) r0;

        return $r2;

     label1:
        $r1 = new com.hp.hpl.jena.rdf.model.ResourceRequiredException;

        specialinvoke $r1.<com.hp.hpl.jena.rdf.model.ResourceRequiredException: void <init>(com.hp.hpl.jena.rdf.model.RDFNode)>(r0);

        throw $r1;
    }

    public java.lang.String getLanguage()
    {
        com.hp.hpl.jena.rdf.model.impl.StatementBase r0;
        java.lang.String $r2;
        com.hp.hpl.jena.rdf.model.Literal $r1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.StatementBase;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.Literal getLiteral()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Literal: java.lang.String getLanguage()>();

        return $r2;
    }

    public boolean getWellFormed()
    {
        com.hp.hpl.jena.rdf.model.impl.StatementBase r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.StatementBase;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.StatementBase: boolean hasWellFormedXML()>();

        return $z0;
    }

    public boolean hasWellFormedXML()
    {
        com.hp.hpl.jena.rdf.model.impl.StatementBase r0;
        com.hp.hpl.jena.rdf.model.Literal $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.StatementBase;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.Literal getLiteral()>();

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Literal: boolean isWellFormedXML()>();

        return $z0;
    }

    public java.lang.String toString()
    {
        com.hp.hpl.jena.rdf.model.impl.StatementBase r2;
        com.hp.hpl.jena.rdf.model.Property $r7;
        java.lang.String $r4, $r8, $r12, $r15;
        com.hp.hpl.jena.rdf.model.RDFNode $r11;
        com.hp.hpl.jena.rdf.model.Resource $r3;
        java.lang.StringBuilder $r0, $r1, $r5, $r6, $r9, $r10, $r13, $r14;

        r2 := @this: com.hp.hpl.jena.rdf.model.impl.StatementBase;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r3 = virtualinvoke r2.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.Resource getSubject()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.Resource: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r7 = virtualinvoke r2.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.Property getPredicate()>();

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r11 = virtualinvoke r2.<com.hp.hpl.jena.rdf.model.impl.StatementBase: com.hp.hpl.jena.rdf.model.RDFNode getObject()>();

        $r12 = virtualinvoke r2.<com.hp.hpl.jena.rdf.model.impl.StatementBase: java.lang.String objectString(com.hp.hpl.jena.rdf.model.RDFNode)>($r11);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    protected java.lang.String objectString(com.hp.hpl.jena.rdf.model.RDFNode)
    {
        com.hp.hpl.jena.rdf.model.RDFNode r0;
        com.hp.hpl.jena.graph.Node $r1;
        java.lang.String $r2;
        com.hp.hpl.jena.rdf.model.impl.StatementBase r3;

        r3 := @this: com.hp.hpl.jena.rdf.model.impl.StatementBase;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.RDFNode;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.RDFNode: com.hp.hpl.jena.graph.Node asNode()>();

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.graph.Node: java.lang.String toString(com.hp.hpl.jena.shared.PrefixMapping,boolean)>(null, 1);

        return $r2;
    }
}
