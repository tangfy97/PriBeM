public class org.waveprotocol.wave.model.document.raw.RawDocumentProviderImpl extends java.lang.Object implements org.waveprotocol.wave.model.document.raw.RawDocument$Provider
{
    private final org.waveprotocol.wave.model.document.raw.RawDocument$Factory builder;
    private final org.waveprotocol.wave.model.document.util.DocumentParser parser;

    public static org.waveprotocol.wave.model.document.raw.RawDocumentProviderImpl create(org.waveprotocol.wave.model.document.raw.RawDocument$Factory)
    {
        org.waveprotocol.wave.model.document.raw.RawDocument$Factory r1;
        org.waveprotocol.wave.model.document.raw.RawDocumentProviderImpl $r0;

        r1 := @parameter0: org.waveprotocol.wave.model.document.raw.RawDocument$Factory;

        $r0 = new org.waveprotocol.wave.model.document.raw.RawDocumentProviderImpl;

        specialinvoke $r0.<org.waveprotocol.wave.model.document.raw.RawDocumentProviderImpl: void <init>(org.waveprotocol.wave.model.document.raw.RawDocument$Factory)>(r1);

        return $r0;
    }

    private void <init>(org.waveprotocol.wave.model.document.raw.RawDocument$Factory)
    {
        org.waveprotocol.wave.model.document.raw.RawDocument$Factory r1;
        org.waveprotocol.wave.model.document.raw.RawDocumentParserImpl $r2;
        org.waveprotocol.wave.model.document.raw.RawDocumentProviderImpl r0;

        r0 := @this: org.waveprotocol.wave.model.document.raw.RawDocumentProviderImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.document.raw.RawDocument$Factory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.model.document.raw.RawDocumentProviderImpl: org.waveprotocol.wave.model.document.raw.RawDocument$Factory builder> = r1;

        $r2 = staticinvoke <org.waveprotocol.wave.model.document.raw.RawDocumentParserImpl: org.waveprotocol.wave.model.document.raw.RawDocumentParserImpl create(org.waveprotocol.wave.model.document.raw.RawDocument$Factory)>(r1);

        r0.<org.waveprotocol.wave.model.document.raw.RawDocumentProviderImpl: org.waveprotocol.wave.model.document.util.DocumentParser parser> = $r2;

        return;
    }

    public org.waveprotocol.wave.model.document.raw.RawDocument create(java.lang.String, java.util.Map)
    {
        org.waveprotocol.wave.model.document.raw.RawDocument $r5;
        org.waveprotocol.wave.model.document.raw.RawDocument$Factory $r3;
        org.waveprotocol.wave.model.document.raw.RawDocumentProviderImpl r0;
        java.util.Map r2;
        java.lang.Object $r4;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.model.document.raw.RawDocumentProviderImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Map;

        $r3 = r0.<org.waveprotocol.wave.model.document.raw.RawDocumentProviderImpl: org.waveprotocol.wave.model.document.raw.RawDocument$Factory builder>;

        $r4 = interfaceinvoke $r3.<org.waveprotocol.wave.model.document.raw.RawDocument$Factory: java.lang.Object create(java.lang.String,java.util.Map)>(r1, r2);

        $r5 = (org.waveprotocol.wave.model.document.raw.RawDocument) $r4;

        return $r5;
    }

    public org.waveprotocol.wave.model.document.raw.RawDocument parse(java.lang.String)
    {
        org.waveprotocol.wave.model.document.raw.RawDocument $r4;
        org.waveprotocol.wave.model.document.raw.RawDocumentProviderImpl r0;
        java.lang.Object $r3;
        java.lang.String r1;
        org.waveprotocol.wave.model.document.util.DocumentParser $r2;

        r0 := @this: org.waveprotocol.wave.model.document.raw.RawDocumentProviderImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.model.document.raw.RawDocumentProviderImpl: org.waveprotocol.wave.model.document.util.DocumentParser parser>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.model.document.util.DocumentParser: java.lang.Object parse(java.lang.String)>(r1);

        $r4 = (org.waveprotocol.wave.model.document.raw.RawDocument) $r3;

        return $r4;
    }

    public volatile java.lang.Object parse(java.lang.String)
    {
        org.waveprotocol.wave.model.document.raw.RawDocument $r2;
        java.lang.String r1;
        org.waveprotocol.wave.model.document.raw.RawDocumentProviderImpl r0;

        r0 := @this: org.waveprotocol.wave.model.document.raw.RawDocumentProviderImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.model.document.raw.RawDocumentProviderImpl: org.waveprotocol.wave.model.document.raw.RawDocument parse(java.lang.String)>(r1);

        return $r2;
    }

    public volatile java.lang.Object create(java.lang.String, java.util.Map)
    {
        org.waveprotocol.wave.model.document.raw.RawDocument $r3;
        org.waveprotocol.wave.model.document.raw.RawDocumentProviderImpl r0;
        java.util.Map r2;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.model.document.raw.RawDocumentProviderImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Map;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.model.document.raw.RawDocumentProviderImpl: org.waveprotocol.wave.model.document.raw.RawDocument create(java.lang.String,java.util.Map)>(r1, r2);

        return $r3;
    }
}
