public abstract class com.mycila.inject.internal.guava.cache.CacheLoader extends java.lang.Object
{

    public void <init>()
    {
        com.mycila.inject.internal.guava.cache.CacheLoader r0;

        r0 := @this: com.mycila.inject.internal.guava.cache.CacheLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.mycila.inject.internal.guava.cache.CacheLoader 'from'(com.mycila.inject.internal.guava.base.Function)
    {
        com.mycila.inject.internal.guava.base.Function r1;
        com.mycila.inject.internal.guava.cache.CacheLoader$FunctionToCacheLoader $r0;

        r1 := @parameter0: com.mycila.inject.internal.guava.base.Function;

        $r0 = new com.mycila.inject.internal.guava.cache.CacheLoader$FunctionToCacheLoader;

        specialinvoke $r0.<com.mycila.inject.internal.guava.cache.CacheLoader$FunctionToCacheLoader: void <init>(com.mycila.inject.internal.guava.base.Function)>(r1);

        return $r0;
    }

    public static com.mycila.inject.internal.guava.cache.CacheLoader 'from'(com.mycila.inject.internal.guava.base.Supplier)
    {
        com.mycila.inject.internal.guava.base.Supplier r1;
        com.mycila.inject.internal.guava.cache.CacheLoader$SupplierToCacheLoader $r0;

        r1 := @parameter0: com.mycila.inject.internal.guava.base.Supplier;

        $r0 = new com.mycila.inject.internal.guava.cache.CacheLoader$SupplierToCacheLoader;

        specialinvoke $r0.<com.mycila.inject.internal.guava.cache.CacheLoader$SupplierToCacheLoader: void <init>(com.mycila.inject.internal.guava.base.Supplier)>(r1);

        return $r0;
    }

    public abstract java.lang.Object load(java.lang.Object) throws java.lang.Exception;
}
