public class com.hp.hpl.jena.n3.N3JenaWriterPP extends com.hp.hpl.jena.n3.N3JenaWriterCommon
{
    protected final boolean doObjectListsAsLists;
    protected java.util.Set rdfLists;
    protected java.util.Set rdfListsAll;
    protected java.util.Set rdfListsDone;
    protected java.util.Set oneRefObjects;
    protected java.util.Set oneRefDone;
    protected boolean allowDeep;
    protected static final java.lang.String objectListSep;

    public void <init>()
    {
        com.hp.hpl.jena.n3.N3JenaWriterPP r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.n3.N3JenaWriterPP;

        specialinvoke r0.<com.hp.hpl.jena.n3.N3JenaWriterCommon: void <init>()>();

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: boolean getBooleanValue(java.lang.String,boolean)>("objectLists", 1);

        r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: boolean doObjectListsAsLists> = $z0;

        r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.util.Set rdfLists> = null;

        r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.util.Set rdfListsAll> = null;

        r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.util.Set rdfListsDone> = null;

        r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.util.Set oneRefObjects> = null;

        r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.util.Set oneRefDone> = null;

        r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: boolean allowDeep> = 1;

        return;
    }

    protected void prepare(com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.Model r1;
        com.hp.hpl.jena.n3.N3JenaWriterPP r0;

        r0 := @this: com.hp.hpl.jena.n3.N3JenaWriterPP;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        virtualinvoke r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: void prepareLists(com.hp.hpl.jena.rdf.model.Model)>(r1);

        virtualinvoke r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: void prepareOneRefBNodes(com.hp.hpl.jena.rdf.model.Model)>(r1);

        return;
    }

    protected void prepareLists(com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.StmtIterator $r4, $r8;
        com.hp.hpl.jena.rdf.model.Property $r3, $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.Set $r11, $r12;
        com.hp.hpl.jena.n3.N3JenaWriterPP r6;
        java.lang.StringBuilder $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29;
        com.hp.hpl.jena.n3.N3IndentedWriter $r14, $r20, $r26;
        java.util.HashSet $r0;
        java.lang.String $r16, $r18, $r22, $r24, $r28, $r30;
        com.hp.hpl.jena.rdf.model.Statement $r5, $r9;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r10, r31, r32;
        com.hp.hpl.jena.rdf.model.Model r1;

        r6 := @this: com.hp.hpl.jena.n3.N3JenaWriterPP;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r3 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property rest>;

        $r2 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Resource nil>;

        $r4 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(null, $r3, $r2);

     label01:
        $z0 = interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r5 = interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.rdf.model.Statement nextStatement()>();

        r31 = interfaceinvoke $r5.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Resource getSubject()>();

        r32 = null;

     label02:
        $z1 = virtualinvoke r6.<com.hp.hpl.jena.n3.N3JenaWriterPP: boolean checkListElement(com.hp.hpl.jena.rdf.model.Resource)>(r31);

        if $z1 != 0 goto label03;

        goto label07;

     label03:
        $z2 = <com.hp.hpl.jena.n3.N3JenaWriter: boolean DEBUG>;

        if $z2 == 0 goto label04;

        $r26 = r6.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("# RDF list all: ");

        $r28 = virtualinvoke r6.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.lang.String formatResource(com.hp.hpl.jena.rdf.model.Resource)>(r31);

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<com.hp.hpl.jena.n3.N3IndentedWriter: void println(java.lang.String)>($r30);

     label04:
        r32 = r31;

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>(r31);

        $r7 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property rest>;

        $r8 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(null, $r7, r31);

        $z3 = interfaceinvoke $r8.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z3 != 0 goto label05;

        goto label07;

     label05:
        $r9 = interfaceinvoke $r8.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.rdf.model.Statement nextStatement()>();

        $r10 = interfaceinvoke $r9.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Resource getSubject()>();

        r31 = $r10;

        $z4 = interfaceinvoke $r8.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z4 == 0 goto label06;

        $z5 = <com.hp.hpl.jena.n3.N3JenaWriter: boolean DEBUG>;

        if $z5 == 0 goto label07;

        $r20 = r6.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("# RDF shared tail from ");

        $r22 = virtualinvoke r6.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.lang.String formatResource(com.hp.hpl.jena.rdf.model.Resource)>($r10);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<com.hp.hpl.jena.n3.N3IndentedWriter: void println(java.lang.String)>($r24);

        goto label07;

     label06:
        goto label02;

     label07:
        $z6 = <com.hp.hpl.jena.n3.N3JenaWriter: boolean DEBUG>;

        if $z6 == 0 goto label08;

        $r14 = r6.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("# Collection list head: ");

        $r16 = virtualinvoke r6.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.lang.String formatResource(com.hp.hpl.jena.rdf.model.Resource)>(r32);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<com.hp.hpl.jena.n3.N3IndentedWriter: void println(java.lang.String)>($r18);

     label08:
        $r11 = r6.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.util.Set rdfListsAll>;

        interfaceinvoke $r11.<java.util.Set: boolean addAll(java.util.Collection)>($r0);

        if r32 == null goto label09;

        $r12 = r6.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.util.Set rdfLists>;

        interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>(r32);

     label09:
        goto label01;

     label10:
        interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.StmtIterator: void close()>();

        return;
    }

    protected boolean checkListElement(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.n3.N3IndentedWriter $r4, $r11;
        com.hp.hpl.jena.rdf.model.Property $r1, $r9;
        int $i0;
        java.lang.String $r6, $r8, $r13, $r15;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.hp.hpl.jena.n3.N3JenaWriterPP r2;
        com.hp.hpl.jena.rdf.model.Resource r0;
        java.lang.StringBuilder $r3, $r5, $r7, $r10, $r12, $r14;

        r2 := @this: com.hp.hpl.jena.n3.N3JenaWriterPP;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $z0 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: boolean isAnon()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property rest>;

        $z1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: boolean hasProperty(com.hp.hpl.jena.rdf.model.Property)>($r1);

        if $z1 == 0 goto label2;

        $r9 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property first>;

        $z3 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: boolean hasProperty(com.hp.hpl.jena.rdf.model.Property)>($r9);

        if $z3 != 0 goto label4;

     label2:
        $z2 = <com.hp.hpl.jena.n3.N3JenaWriter: boolean DEBUG>;

        if $z2 == 0 goto label3;

        $r4 = r2.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("# RDF list element does not have required properties: ");

        $r6 = virtualinvoke r2.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.lang.String formatResource(com.hp.hpl.jena.rdf.model.Resource)>(r0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<com.hp.hpl.jena.n3.N3IndentedWriter: void println(java.lang.String)>($r8);

     label3:
        return 0;

     label4:
        $i0 = virtualinvoke r2.<com.hp.hpl.jena.n3.N3JenaWriterPP: int countProperties(com.hp.hpl.jena.rdf.model.Resource)>(r0);

        if $i0 != 2 goto label5;

        return 1;

     label5:
        $z4 = <com.hp.hpl.jena.n3.N3JenaWriter: boolean DEBUG>;

        if $z4 == 0 goto label6;

        $r11 = r2.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("# RDF list element does not right number of properties: ");

        $r13 = virtualinvoke r2.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.lang.String formatResource(com.hp.hpl.jena.rdf.model.Resource)>(r0);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<com.hp.hpl.jena.n3.N3IndentedWriter: void println(java.lang.String)>($r15);

     label6:
        return 0;
    }

    protected void prepareOneRefBNodes(com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.n3.N3IndentedWriter $r5, $r11, $r17;
        int $i0, $i1, $i2;
        java.lang.String $r9, $r15, $r21;
        boolean $z0, $z1, $z2;
        com.hp.hpl.jena.rdf.model.RDFNode $r2;
        java.util.Set $r7, $r13, $r19, $r22;
        com.hp.hpl.jena.n3.N3JenaWriterPP r3;
        com.hp.hpl.jena.rdf.model.NodeIterator $r1;
        com.hp.hpl.jena.rdf.model.Model r0;
        java.lang.StringBuilder $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20;

        r3 := @this: com.hp.hpl.jena.n3.N3JenaWriterPP;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.NodeIterator listObjects()>();

     label1:
        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.NodeIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.NodeIterator: com.hp.hpl.jena.rdf.model.RDFNode nextNode()>();

        $z1 = virtualinvoke r3.<com.hp.hpl.jena.n3.N3JenaWriterPP: boolean testOneRefBNode(com.hp.hpl.jena.rdf.model.RDFNode)>($r2);

        if $z1 == 0 goto label2;

        $r22 = r3.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.util.Set oneRefObjects>;

        interfaceinvoke $r22.<java.util.Set: boolean add(java.lang.Object)>($r2);

     label2:
        interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.NodeIterator: void close()>();

        $z2 = <com.hp.hpl.jena.n3.N3JenaWriter: boolean DEBUG>;

        if $z2 == 0 goto label3;

        $r5 = r3.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("# RDF Lists      = ");

        $r7 = r3.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.util.Set rdfLists>;

        $i0 = interfaceinvoke $r7.<java.util.Set: int size()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<com.hp.hpl.jena.n3.N3IndentedWriter: void println(java.lang.String)>($r9);

        $r11 = r3.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("# RDF ListsAll   = ");

        $r13 = r3.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.util.Set rdfListsAll>;

        $i1 = interfaceinvoke $r13.<java.util.Set: int size()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<com.hp.hpl.jena.n3.N3IndentedWriter: void println(java.lang.String)>($r15);

        $r17 = r3.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("# oneRefObjects  = ");

        $r19 = r3.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.util.Set oneRefObjects>;

        $i2 = interfaceinvoke $r19.<java.util.Set: int size()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<com.hp.hpl.jena.n3.N3IndentedWriter: void println(java.lang.String)>($r21);

     label3:
        goto label1;

     label4:
        return;
    }

    protected boolean testOneRefBNode(com.hp.hpl.jena.rdf.model.RDFNode)
    {
        com.hp.hpl.jena.n3.N3IndentedWriter $r7;
        com.hp.hpl.jena.shared.JenaException $r12;
        com.hp.hpl.jena.rdf.model.StmtIterator $r5;
        java.lang.String $r9, $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.hp.hpl.jena.rdf.model.RDFNode r0;
        java.util.Set $r3;
        com.hp.hpl.jena.n3.N3JenaWriterPP r2;
        com.hp.hpl.jena.rdf.model.Resource r1;
        com.hp.hpl.jena.rdf.model.Model $r4;
        java.lang.StringBuilder $r6, $r8, $r10;

        r2 := @this: com.hp.hpl.jena.n3.N3JenaWriterPP;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.RDFNode;

        $z0 = r0 instanceof com.hp.hpl.jena.rdf.model.Resource;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (com.hp.hpl.jena.rdf.model.Resource) r0;

        $z1 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.Resource: boolean isAnon()>();

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $r3 = r2.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.util.Set rdfListsAll>;

        $z2 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z2 == 0 goto label3;

        return 0;

     label3:
        $r4 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.Model getModel()>();

        $r5 = interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(null, null, r1);

        $z3 = interfaceinvoke $r5.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z3 != 0 goto label4;

        $r12 = new com.hp.hpl.jena.shared.JenaException;

        specialinvoke $r12.<com.hp.hpl.jena.shared.JenaException: void <init>(java.lang.String)>("N3: found object with no arcs!");

        throw $r12;

     label4:
        interfaceinvoke $r5.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.rdf.model.Statement nextStatement()>();

        $z4 = interfaceinvoke $r5.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z4 == 0 goto label5;

        return 0;

     label5:
        $z5 = <com.hp.hpl.jena.n3.N3JenaWriter: boolean DEBUG>;

        if $z5 == 0 goto label6;

        $r7 = r2.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("# OneRef: ");

        $r9 = virtualinvoke r2.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.lang.String formatResource(com.hp.hpl.jena.rdf.model.Resource)>(r1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<com.hp.hpl.jena.n3.N3IndentedWriter: void println(java.lang.String)>($r11);

     label6:
        return 1;
    }

    protected com.hp.hpl.jena.util.iterator.ClosableIterator preparePropertiesForSubject(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.StmtIterator $r4;
        com.hp.hpl.jena.rdf.model.Property $r12, $r14, $r15;
        boolean $z0, $z1, $z2, $z3, z4, $z5;
        java.util.Collection $r5, $r8;
        com.hp.hpl.jena.n3.N3JenaWriterPP r22;
        com.hp.hpl.jena.util.iterator.SingletonIterator $r11, r23;
        java.util.HashSet $r0;
        java.lang.String $r16, $r17, $r18, $r19, $r20, $r21;
        java.util.Iterator $r6, $r9;
        com.hp.hpl.jena.rdf.model.Statement $r13;
        com.hp.hpl.jena.rdf.model.Resource r3;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r7, $r10, $r24, $r25;
        java.util.TreeMap $r1, $r2;

        r22 := @this: com.hp.hpl.jena.n3.N3JenaWriterPP;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        z4 = 0;

        $r1 = new java.util.TreeMap;

        specialinvoke $r1.<java.util.TreeMap: void <init>()>();

        $r2 = new java.util.TreeMap;

        specialinvoke $r2.<java.util.TreeMap: void <init>()>();

        $r4 = interfaceinvoke r3.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.StmtIterator listProperties()>();

     label01:
        $z5 = interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z5 == 0 goto label06;

        $r13 = interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.rdf.model.Statement nextStatement()>();

        $r14 = interfaceinvoke $r13.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Property getPredicate()>();

        $z0 = interfaceinvoke $r0.<java.util.Set: boolean contains(java.lang.Object)>($r14);

        if $z0 == 0 goto label02;

        goto label01;

     label02:
        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r14);

        $r15 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $z1 = virtualinvoke $r14.<java.lang.Object: boolean equals(java.lang.Object)>($r15);

        if $z1 == 0 goto label03;

        z4 = 1;

        goto label01;

     label03:
        $r16 = interfaceinvoke $r14.<com.hp.hpl.jena.rdf.model.Property: java.lang.String getURI()>();

        $r17 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: java.lang.String getURI()>();

        $z2 = virtualinvoke $r16.<java.lang.String: boolean startsWith(java.lang.String)>($r17);

        if $z2 != 0 goto label04;

        $r19 = interfaceinvoke $r14.<com.hp.hpl.jena.rdf.model.Property: java.lang.String getURI()>();

        $r20 = staticinvoke <com.hp.hpl.jena.vocabulary.RDFS: java.lang.String getURI()>();

        $z3 = virtualinvoke $r19.<java.lang.String: boolean startsWith(java.lang.String)>($r20);

        if $z3 == 0 goto label05;

     label04:
        $r18 = interfaceinvoke $r14.<com.hp.hpl.jena.rdf.model.Property: java.lang.String getURI()>();

        interfaceinvoke $r1.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r14);

        goto label01;

     label05:
        $r21 = interfaceinvoke $r14.<com.hp.hpl.jena.rdf.model.Property: java.lang.String getURI()>();

        interfaceinvoke $r2.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r14);

        goto label01;

     label06:
        interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.StmtIterator: void close()>();

        r23 = null;

        if z4 == 0 goto label07;

        $r11 = new com.hp.hpl.jena.util.iterator.SingletonIterator;

        $r12 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        specialinvoke $r11.<com.hp.hpl.jena.util.iterator.SingletonIterator: void <init>(java.lang.Object)>($r12);

        r23 = $r11;

     label07:
        $r5 = interfaceinvoke $r1.<java.util.SortedMap: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

        $r7 = staticinvoke <com.hp.hpl.jena.util.iterator.WrappedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator create(java.util.Iterator)>($r6);

        if r23 != null goto label08;

        $r24 = $r7;

        goto label09;

     label08:
        $r24 = interfaceinvoke r23.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator andThen(java.util.Iterator)>($r7);

     label09:
        $r8 = interfaceinvoke $r2.<java.util.SortedMap: java.util.Collection values()>();

        $r9 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

        $r10 = staticinvoke <com.hp.hpl.jena.util.iterator.WrappedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator create(java.util.Iterator)>($r9);

        if $r24 != null goto label10;

        $r25 = $r10;

        goto label11;

     label10:
        $r25 = interfaceinvoke $r24.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator andThen(java.util.Iterator)>($r10);

     label11:
        return $r25;
    }

    protected boolean skipThisSubject(com.hp.hpl.jena.rdf.model.Resource)
    {
        java.util.Set $r2, $r3;
        com.hp.hpl.jena.n3.N3JenaWriterPP r0;
        com.hp.hpl.jena.rdf.model.Resource r1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.hp.hpl.jena.n3.N3JenaWriterPP;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r2 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.util.Set rdfListsAll>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.util.Set oneRefObjects>;

        $z1 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    protected void startWriting()
    {
        com.hp.hpl.jena.n3.N3JenaWriterPP r0;

        r0 := @this: com.hp.hpl.jena.n3.N3JenaWriterPP;

        virtualinvoke r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: void allocateDatastructures()>();

        return;
    }

    protected void finishWriting()
    {
        com.hp.hpl.jena.n3.N3IndentedWriter $r7, $r8, $r11, $r15, $r16;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Iterator $r2, $r6;
        java.util.Set $r1, $r3, $r4, $r5, $r14;
        com.hp.hpl.jena.n3.N3JenaWriterPP r0;
        com.hp.hpl.jena.rdf.model.Resource $r10, r13;
        java.lang.Object $r9, $r12;

        r0 := @this: com.hp.hpl.jena.n3.N3JenaWriterPP;

        $r1 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.util.Set rdfLists>;

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z4 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label4;

        $r12 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r13 = (com.hp.hpl.jena.rdf.model.Resource) $r12;

        $r14 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.util.Set rdfListsDone>;

        $z2 = interfaceinvoke $r14.<java.util.Set: boolean contains(java.lang.Object)>(r13);

        if $z2 == 0 goto label2;

        goto label1;

     label2:
        $r15 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        virtualinvoke $r15.<com.hp.hpl.jena.n3.N3IndentedWriter: void println()>();

        $z3 = <com.hp.hpl.jena.n3.N3JenaWriter: boolean DEBUG>;

        if $z3 == 0 goto label3;

        $r16 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        virtualinvoke $r16.<com.hp.hpl.jena.n3.N3IndentedWriter: void println(java.lang.String)>("# RDF List");

     label3:
        virtualinvoke r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: void writeListUnpretty(com.hp.hpl.jena.rdf.model.Resource)>(r13);

        goto label1;

     label4:
        $r4 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.util.Set oneRefObjects>;

        $r3 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.util.Set oneRefDone>;

        interfaceinvoke $r4.<java.util.Set: boolean removeAll(java.util.Collection)>($r3);

        $r5 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.util.Set oneRefObjects>;

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r8 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        virtualinvoke $r8.<com.hp.hpl.jena.n3.N3IndentedWriter: void println()>();

        $z1 = <com.hp.hpl.jena.n3.N3JenaWriter: boolean DEBUG>;

        if $z1 == 0 goto label6;

        $r11 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        virtualinvoke $r11.<com.hp.hpl.jena.n3.N3IndentedWriter: void println(java.lang.String)>("# One ref");

     label6:
        r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: boolean allowDeep> = 0;

        $r9 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (com.hp.hpl.jena.rdf.model.Resource) $r9;

        virtualinvoke r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: void writeOneGraphNode(com.hp.hpl.jena.rdf.model.Resource)>($r10);

        r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: boolean allowDeep> = 1;

        goto label5;

     label7:
        $r7 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        virtualinvoke $r7.<com.hp.hpl.jena.n3.N3IndentedWriter: void flush()>();

        virtualinvoke r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: void clearDatastructures()>();

        return;
    }

    protected void writeObjectList(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.rdf.model.Property r1;
        com.hp.hpl.jena.n3.N3JenaWriterPP r0;
        com.hp.hpl.jena.n3.N3IndentedWriter $r8, $r9, $r10, $r12, $r13, $r14, $r16, $r18, $r19, $r20, $r22, $r23, $r24, $r26, $r27, $r28, $r30, $r32, $r33;
        java.lang.String $r2, r36, r38;
        com.hp.hpl.jena.rdf.model.Resource r3;
        com.hp.hpl.jena.rdf.model.StmtIterator $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        com.hp.hpl.jena.rdf.model.RDFNode $r15, $r25, $r35, r37;
        java.util.HashSet $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        java.util.Iterator $r7, $r17, $r29;
        com.hp.hpl.jena.rdf.model.Statement $r34;
        java.lang.Object $r11, $r21, $r31;

        r0 := @this: com.hp.hpl.jena.n3.N3JenaWriterPP;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r1 := @parameter1: com.hp.hpl.jena.rdf.model.Property;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.lang.String formatProperty(com.hp.hpl.jena.rdf.model.Property)>(r1);

        $r4 = interfaceinvoke r3.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.StmtIterator listProperties(com.hp.hpl.jena.rdf.model.Property)>(r1);

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

     label01:
        $z0 = interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r34 = interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.rdf.model.Statement nextStatement()>();

        $r35 = interfaceinvoke $r34.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.RDFNode getObject()>();

        $z6 = virtualinvoke r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: boolean isSimpleObject(com.hp.hpl.jena.rdf.model.RDFNode)>($r35);

        if $z6 == 0 goto label02;

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r35);

        goto label03;

     label02:
        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r35);

     label03:
        goto label01;

     label04:
        interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.StmtIterator: void close()>();

        interfaceinvoke $r5.<java.util.Set: int size()>();

        interfaceinvoke $r6.<java.util.Set: int size()>();

        $i0 = interfaceinvoke $r5.<java.util.Set: int size()>();

        if $i0 <= 0 goto label16;

        r36 = null;

        $i8 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i9 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: int minGap>;

        $i11 = $i8 + $i9;

        $i10 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: int widePropertyLen>;

        if $i11 > $i10 goto label05;

        $i16 = virtualinvoke r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: int calcPropertyPadding(java.lang.String)>($r2);

        r36 = staticinvoke <com.hp.hpl.jena.n3.N3JenaWriterPP: java.lang.String pad(int)>($i16);

     label05:
        $z2 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: boolean doObjectListsAsLists>;

        if $z2 == 0 goto label11;

        $r26 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        virtualinvoke $r26.<com.hp.hpl.jena.n3.N3IndentedWriter: void print(java.lang.String)>($r2);

        $r27 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        $i14 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: int indentObject>;

        virtualinvoke $r27.<com.hp.hpl.jena.n3.N3IndentedWriter: void incIndent(int)>($i14);

        if r36 == null goto label06;

        $r33 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        virtualinvoke $r33.<com.hp.hpl.jena.n3.N3IndentedWriter: void print(java.lang.String)>(r36);

        goto label07;

     label06:
        $r28 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        virtualinvoke $r28.<com.hp.hpl.jena.n3.N3IndentedWriter: void println()>();

     label07:
        $r29 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label08:
        $z7 = interfaceinvoke $r29.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label10;

        $r31 = interfaceinvoke $r29.<java.util.Iterator: java.lang.Object next()>();

        r37 = (com.hp.hpl.jena.rdf.model.RDFNode) $r31;

        virtualinvoke r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: void writeObject(com.hp.hpl.jena.rdf.model.RDFNode)>(r37);

        $z5 = interfaceinvoke $r29.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label09;

        $r32 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        virtualinvoke $r32.<com.hp.hpl.jena.n3.N3IndentedWriter: void print(java.lang.String)>(" , ");

     label09:
        goto label08;

     label10:
        $r30 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        $i15 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: int indentObject>;

        virtualinvoke $r30.<com.hp.hpl.jena.n3.N3IndentedWriter: void decIndent(int)>($i15);

        goto label16;

     label11:
        $r17 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label12:
        $z3 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label16;

        $r18 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        virtualinvoke $r18.<com.hp.hpl.jena.n3.N3IndentedWriter: void print(java.lang.String)>($r2);

        $r19 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        $i12 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: int indentObject>;

        virtualinvoke $r19.<com.hp.hpl.jena.n3.N3IndentedWriter: void incIndent(int)>($i12);

        if r36 == null goto label13;

        $r24 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        virtualinvoke $r24.<com.hp.hpl.jena.n3.N3IndentedWriter: void print(java.lang.String)>(r36);

        goto label14;

     label13:
        $r20 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        virtualinvoke $r20.<com.hp.hpl.jena.n3.N3IndentedWriter: void println()>();

     label14:
        $r21 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        $r25 = (com.hp.hpl.jena.rdf.model.RDFNode) $r21;

        virtualinvoke r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: void writeObject(com.hp.hpl.jena.rdf.model.RDFNode)>($r25);

        $r22 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        $i13 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: int indentObject>;

        virtualinvoke $r22.<com.hp.hpl.jena.n3.N3IndentedWriter: void decIndent(int)>($i13);

        $z4 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label15;

        $r23 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        virtualinvoke $r23.<com.hp.hpl.jena.n3.N3IndentedWriter: void println(java.lang.String)>(" ;");

     label15:
        goto label12;

     label16:
        $i17 = interfaceinvoke $r6.<java.util.Set: int size()>();

        if $i17 <= 0 goto label23;

        $i1 = interfaceinvoke $r5.<java.util.Set: int size()>();

        if $i1 <= 0 goto label17;

        $r16 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        virtualinvoke $r16.<com.hp.hpl.jena.n3.N3IndentedWriter: void println(java.lang.String)>(" ;");

     label17:
        r38 = null;

        virtualinvoke $r2.<java.lang.String: int length()>();

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i3 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: int minGap>;

        $i5 = $i2 + $i3;

        $i4 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: int propertyCol>;

        if $i5 > $i4 goto label18;

        $i7 = virtualinvoke r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: int calcPropertyPadding(java.lang.String)>($r2);

        r38 = staticinvoke <com.hp.hpl.jena.n3.N3JenaWriterPP: java.lang.String pad(int)>($i7);

     label18:
        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label19:
        $z8 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label23;

        i6 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: int indentObject>;

        $r8 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        virtualinvoke $r8.<com.hp.hpl.jena.n3.N3IndentedWriter: void incIndent(int)>(i6);

        $r9 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        virtualinvoke $r9.<com.hp.hpl.jena.n3.N3IndentedWriter: void print(java.lang.String)>($r2);

        if r38 == null goto label20;

        $r14 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        virtualinvoke $r14.<com.hp.hpl.jena.n3.N3IndentedWriter: void print(java.lang.String)>(r38);

        goto label21;

     label20:
        $r10 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        virtualinvoke $r10.<com.hp.hpl.jena.n3.N3IndentedWriter: void println()>();

     label21:
        $r11 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r15 = (com.hp.hpl.jena.rdf.model.RDFNode) $r11;

        virtualinvoke r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: void writeObject(com.hp.hpl.jena.rdf.model.RDFNode)>($r15);

        $r12 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        virtualinvoke $r12.<com.hp.hpl.jena.n3.N3IndentedWriter: void decIndent(int)>(i6);

        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label22;

        $r13 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        virtualinvoke $r13.<com.hp.hpl.jena.n3.N3IndentedWriter: void println(java.lang.String)>(" ;");

     label22:
        goto label19;

     label23:
        return;
    }

    protected boolean isSimpleObject(com.hp.hpl.jena.rdf.model.RDFNode)
    {
        com.hp.hpl.jena.rdf.model.RDFNode r0;
        java.util.Set $r3;
        com.hp.hpl.jena.n3.N3JenaWriterPP r2;
        com.hp.hpl.jena.rdf.model.Resource r1;
        boolean $z0, $z1, $z2;

        r2 := @this: com.hp.hpl.jena.n3.N3JenaWriterPP;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.RDFNode;

        $z0 = r0 instanceof com.hp.hpl.jena.rdf.model.Literal;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = (com.hp.hpl.jena.rdf.model.Resource) r0;

        $z1 = r2.<com.hp.hpl.jena.n3.N3JenaWriterPP: boolean allowDeep>;

        if $z1 == 0 goto label2;

        $r3 = r2.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.util.Set oneRefObjects>;

        $z2 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z2 == 0 goto label2;

        return 0;

     label2:
        return 1;
    }

    protected void writeObject(com.hp.hpl.jena.rdf.model.RDFNode)
    {
        com.hp.hpl.jena.n3.N3IndentedWriter $r4, $r8, $r9, $r10, $r11, $r12, $r13;
        com.hp.hpl.jena.util.iterator.ClosableIterator $r7;
        int $i0;
        java.lang.String $r5;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.hp.hpl.jena.rdf.model.RDFNode r0;
        java.util.Set $r3, $r6;
        com.hp.hpl.jena.n3.N3JenaWriterPP r2;
        com.hp.hpl.jena.rdf.model.Resource r1;
        com.hp.hpl.jena.rdf.model.Literal $r14;

        r2 := @this: com.hp.hpl.jena.n3.N3JenaWriterPP;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.RDFNode;

        $z0 = r0 instanceof com.hp.hpl.jena.rdf.model.Literal;

        if $z0 == 0 goto label1;

        $r14 = (com.hp.hpl.jena.rdf.model.Literal) r0;

        virtualinvoke r2.<com.hp.hpl.jena.n3.N3JenaWriterPP: void writeLiteral(com.hp.hpl.jena.rdf.model.Literal)>($r14);

        return;

     label1:
        r1 = (com.hp.hpl.jena.rdf.model.Resource) r0;

        $z1 = r2.<com.hp.hpl.jena.n3.N3JenaWriterPP: boolean allowDeep>;

        if $z1 == 0 goto label4;

        $z3 = virtualinvoke r2.<com.hp.hpl.jena.n3.N3JenaWriterPP: boolean isSimpleObject(com.hp.hpl.jena.rdf.model.RDFNode)>(r1);

        if $z3 != 0 goto label4;

        $r6 = r2.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.util.Set oneRefDone>;

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>(r1);

        $r7 = virtualinvoke r2.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.util.iterator.ClosableIterator preparePropertiesForSubject(com.hp.hpl.jena.rdf.model.Resource)>(r1);

        $z4 = interfaceinvoke $r7.<com.hp.hpl.jena.util.iterator.ClosableIterator: boolean hasNext()>();

        if $z4 != 0 goto label2;

        $r13 = r2.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        virtualinvoke $r13.<com.hp.hpl.jena.n3.N3IndentedWriter: void print(java.lang.String)>("[]");

        goto label3;

     label2:
        $r8 = r2.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        virtualinvoke $r8.<com.hp.hpl.jena.n3.N3IndentedWriter: void print(java.lang.String)>("[ ");

        $r9 = r2.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        virtualinvoke $r9.<com.hp.hpl.jena.n3.N3IndentedWriter: void incIndent(int)>(2);

        virtualinvoke r2.<com.hp.hpl.jena.n3.N3JenaWriterPP: void writePropertiesForSubject(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.util.iterator.ClosableIterator)>(r1, $r7);

        $r10 = r2.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        virtualinvoke $r10.<com.hp.hpl.jena.n3.N3IndentedWriter: void decIndent(int)>(2);

        $r11 = r2.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        virtualinvoke $r11.<com.hp.hpl.jena.n3.N3IndentedWriter: void println()>();

        $r12 = r2.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        virtualinvoke $r12.<com.hp.hpl.jena.n3.N3IndentedWriter: void print(java.lang.String)>("]");

     label3:
        interfaceinvoke $r7.<com.hp.hpl.jena.util.iterator.ClosableIterator: void close()>();

        return;

     label4:
        $r3 = r2.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.util.Set rdfLists>;

        $z2 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z2 == 0 goto label5;

        $i0 = virtualinvoke r2.<com.hp.hpl.jena.n3.N3JenaWriterPP: int countArcsTo(com.hp.hpl.jena.rdf.model.Resource)>(r1);

        if $i0 > 1 goto label5;

        virtualinvoke r2.<com.hp.hpl.jena.n3.N3JenaWriterPP: void writeList(com.hp.hpl.jena.rdf.model.Resource)>(r1);

        return;

     label5:
        $r4 = r2.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        $r5 = virtualinvoke r2.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.lang.String formatResource(com.hp.hpl.jena.rdf.model.Resource)>(r1);

        virtualinvoke $r4.<com.hp.hpl.jena.n3.N3IndentedWriter: void print(java.lang.String)>($r5);

        return;
    }

    protected void writeList(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.n3.N3IndentedWriter $r1, $r2, $r5, $r6, $r9;
        java.util.Iterator $r4;
        com.hp.hpl.jena.rdf.model.RDFNode $r10;
        java.util.Set $r7;
        com.hp.hpl.jena.n3.N3JenaWriterPP r0;
        com.hp.hpl.jena.rdf.model.Resource r3;
        java.lang.Object $r8;
        boolean $z0, z1;

        r0 := @this: com.hp.hpl.jena.n3.N3JenaWriterPP;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        virtualinvoke $r1.<com.hp.hpl.jena.n3.N3IndentedWriter: void print(java.lang.String)>("(");

        $r2 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        virtualinvoke $r2.<com.hp.hpl.jena.n3.N3IndentedWriter: void incIndent(int)>(2);

        z1 = 1;

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.util.Iterator rdfListIterator(com.hp.hpl.jena.rdf.model.Resource)>(r3);

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        if z1 != 0 goto label2;

        $r9 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        virtualinvoke $r9.<com.hp.hpl.jena.n3.N3IndentedWriter: void print(java.lang.String)>(" ");

     label2:
        z1 = 0;

        $r8 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (com.hp.hpl.jena.rdf.model.RDFNode) $r8;

        virtualinvoke r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: void writeObject(com.hp.hpl.jena.rdf.model.RDFNode)>($r10);

        goto label1;

     label3:
        $r5 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        virtualinvoke $r5.<com.hp.hpl.jena.n3.N3IndentedWriter: void print(java.lang.String)>(")");

        $r6 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        virtualinvoke $r6.<com.hp.hpl.jena.n3.N3IndentedWriter: void decIndent(int)>(2);

        $r7 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.util.Set rdfListsDone>;

        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>(r3);

        return;
    }

    protected void writeListUnpretty(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.StmtIterator $r2, $r5;
        com.hp.hpl.jena.rdf.model.Property $r4;
        boolean $z0, $z1, $z2;
        com.hp.hpl.jena.rdf.model.RDFNode $r7;
        com.hp.hpl.jena.n3.N3JenaWriterPP r8;
        com.hp.hpl.jena.rdf.model.Statement r11, r12;
        com.hp.hpl.jena.rdf.model.Resource r0, r9;
        com.hp.hpl.jena.rdf.model.Model $r1, $r3;
        java.lang.Object $r6, $r10;

        r8 := @this: com.hp.hpl.jena.n3.N3JenaWriterPP;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.Model getModel()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r0, null, null);

     label1:
        $z0 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: java.lang.Object next()>();

        r11 = (com.hp.hpl.jena.rdf.model.Statement) $r10;

        specialinvoke r8.<com.hp.hpl.jena.n3.N3JenaWriterPP: void writeStatement(com.hp.hpl.jena.rdf.model.Statement)>(r11);

        goto label1;

     label2:
        $r3 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.Model getModel()>();

        $r4 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property rest>;

        $r5 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(r0, $r4, null);

     label3:
        $z1 = interfaceinvoke $r5.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r6 = interfaceinvoke $r5.<com.hp.hpl.jena.rdf.model.StmtIterator: java.lang.Object next()>();

        r12 = (com.hp.hpl.jena.rdf.model.Statement) $r6;

        $r7 = interfaceinvoke r12.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.RDFNode getObject()>();

        $z2 = $r7 instanceof com.hp.hpl.jena.rdf.model.Resource;

        if $z2 == 0 goto label4;

        r9 = (com.hp.hpl.jena.rdf.model.Resource) $r7;

        virtualinvoke r8.<com.hp.hpl.jena.n3.N3JenaWriterPP: void writeListUnpretty(com.hp.hpl.jena.rdf.model.Resource)>(r9);

        goto label5;

     label4:
        specialinvoke r8.<com.hp.hpl.jena.n3.N3JenaWriterPP: void writeStatement(com.hp.hpl.jena.rdf.model.Statement)>(r12);

     label5:
        goto label3;

     label6:
        return;
    }

    private void writeStatement(com.hp.hpl.jena.rdf.model.Statement)
    {
        com.hp.hpl.jena.n3.N3IndentedWriter $r2, $r5, $r6, $r9, $r10, $r13;
        com.hp.hpl.jena.rdf.model.RDFNode $r11;
        com.hp.hpl.jena.n3.N3JenaWriterPP r0;
        com.hp.hpl.jena.rdf.model.Statement r1;
        com.hp.hpl.jena.rdf.model.Resource $r3;
        com.hp.hpl.jena.rdf.model.Property $r7;
        java.lang.String $r4, $r8, $r12;

        r0 := @this: com.hp.hpl.jena.n3.N3JenaWriterPP;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Statement;

        $r2 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        $r3 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Resource getSubject()>();

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.lang.String formatResource(com.hp.hpl.jena.rdf.model.Resource)>($r3);

        virtualinvoke $r2.<com.hp.hpl.jena.n3.N3IndentedWriter: void print(java.lang.String)>($r4);

        $r5 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        virtualinvoke $r5.<com.hp.hpl.jena.n3.N3IndentedWriter: void print(java.lang.String)>(" ");

        $r6 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        $r7 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Property getPredicate()>();

        $r8 = virtualinvoke r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.lang.String formatResource(com.hp.hpl.jena.rdf.model.Resource)>($r7);

        virtualinvoke $r6.<com.hp.hpl.jena.n3.N3IndentedWriter: void print(java.lang.String)>($r8);

        $r9 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        virtualinvoke $r9.<com.hp.hpl.jena.n3.N3IndentedWriter: void print(java.lang.String)>(" ");

        $r10 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        $r11 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.RDFNode getObject()>();

        $r12 = virtualinvoke r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.lang.String formatNode(com.hp.hpl.jena.rdf.model.RDFNode)>($r11);

        virtualinvoke $r10.<com.hp.hpl.jena.n3.N3IndentedWriter: void print(java.lang.String)>($r12);

        $r13 = r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: com.hp.hpl.jena.n3.N3IndentedWriter out>;

        virtualinvoke $r13.<com.hp.hpl.jena.n3.N3IndentedWriter: void println(java.lang.String)>(" .");

        return;
    }

    protected void allocateDatastructures()
    {
        java.util.HashSet $r1, $r2, $r3, $r4, $r5;
        com.hp.hpl.jena.n3.N3JenaWriterPP r0;

        r0 := @this: com.hp.hpl.jena.n3.N3JenaWriterPP;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.util.Set rdfLists> = $r1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.util.Set rdfListsAll> = $r2;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.util.Set rdfListsDone> = $r3;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.util.Set oneRefObjects> = $r4;

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.util.Set oneRefDone> = $r5;

        return;
    }

    protected void clearDatastructures()
    {
        com.hp.hpl.jena.n3.N3JenaWriterPP r0;

        r0 := @this: com.hp.hpl.jena.n3.N3JenaWriterPP;

        r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.util.Set rdfLists> = null;

        r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.util.Set rdfListsAll> = null;

        r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.util.Set rdfListsDone> = null;

        r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.util.Set oneRefObjects> = null;

        r0.<com.hp.hpl.jena.n3.N3JenaWriterPP: java.util.Set oneRefDone> = null;

        return;
    }

    public static void <clinit>()
    {
        <com.hp.hpl.jena.n3.N3JenaWriterPP: java.lang.String objectListSep> = " , ";

        return;
    }
}
