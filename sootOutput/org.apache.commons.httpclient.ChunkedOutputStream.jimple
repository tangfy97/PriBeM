public class org.apache.commons.httpclient.ChunkedOutputStream extends java.io.OutputStream
{
    private static final byte[] CRLF;
    private static final byte[] ENDCHUNK;
    private static final byte[] ZERO;
    private java.io.OutputStream stream;
    private byte[] cache;
    private int cachePosition;
    private boolean wroteLastChunk;

    public void <init>(java.io.OutputStream, int) throws java.io.IOException
    {
        java.io.OutputStream r2;
        byte[] $r1;
        org.apache.commons.httpclient.ChunkedOutputStream r0;
        int i0;

        r0 := @this: org.apache.commons.httpclient.ChunkedOutputStream;

        r2 := @parameter0: java.io.OutputStream;

        i0 := @parameter1: int;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        r0.<org.apache.commons.httpclient.ChunkedOutputStream: java.io.OutputStream stream> = null;

        r0.<org.apache.commons.httpclient.ChunkedOutputStream: int cachePosition> = 0;

        r0.<org.apache.commons.httpclient.ChunkedOutputStream: boolean wroteLastChunk> = 0;

        $r1 = newarray (byte)[i0];

        r0.<org.apache.commons.httpclient.ChunkedOutputStream: byte[] cache> = $r1;

        r0.<org.apache.commons.httpclient.ChunkedOutputStream: java.io.OutputStream stream> = r2;

        return;
    }

    public void <init>(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r1;
        org.apache.commons.httpclient.ChunkedOutputStream r0;

        r0 := @this: org.apache.commons.httpclient.ChunkedOutputStream;

        r1 := @parameter0: java.io.OutputStream;

        specialinvoke r0.<org.apache.commons.httpclient.ChunkedOutputStream: void <init>(java.io.OutputStream,int)>(r1, 2048);

        return;
    }

    protected void flushCache() throws java.io.IOException
    {
        byte[] $r6, $r8, $r10, $r11;
        java.lang.StringBuffer $r1, $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r2, $r5;
        java.io.OutputStream $r7, $r9, $r12;
        org.apache.commons.httpclient.ChunkedOutputStream r0;

        r0 := @this: org.apache.commons.httpclient.ChunkedOutputStream;

        $i0 = r0.<org.apache.commons.httpclient.ChunkedOutputStream: int cachePosition>;

        if $i0 <= 0 goto label1;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $i1 = r0.<org.apache.commons.httpclient.ChunkedOutputStream: int cachePosition>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\r\n");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = staticinvoke <org.apache.commons.httpclient.util.EncodingUtil: byte[] getAsciiBytes(java.lang.String)>($r5);

        $r7 = r0.<org.apache.commons.httpclient.ChunkedOutputStream: java.io.OutputStream stream>;

        $i2 = lengthof $r6;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r6, 0, $i2);

        $r9 = r0.<org.apache.commons.httpclient.ChunkedOutputStream: java.io.OutputStream stream>;

        $r8 = r0.<org.apache.commons.httpclient.ChunkedOutputStream: byte[] cache>;

        $i3 = r0.<org.apache.commons.httpclient.ChunkedOutputStream: int cachePosition>;

        virtualinvoke $r9.<java.io.OutputStream: void write(byte[],int,int)>($r8, 0, $i3);

        $r12 = r0.<org.apache.commons.httpclient.ChunkedOutputStream: java.io.OutputStream stream>;

        $r11 = <org.apache.commons.httpclient.ChunkedOutputStream: byte[] ENDCHUNK>;

        $r10 = <org.apache.commons.httpclient.ChunkedOutputStream: byte[] ENDCHUNK>;

        $i4 = lengthof $r10;

        virtualinvoke $r12.<java.io.OutputStream: void write(byte[],int,int)>($r11, 0, $i4);

        r0.<org.apache.commons.httpclient.ChunkedOutputStream: int cachePosition> = 0;

     label1:
        return;
    }

    protected void flushCacheWithAppend(byte[], int, int) throws java.io.IOException
    {
        byte[] $r6, $r8, r10, $r12, $r13;
        java.lang.StringBuffer $r0, $r3, $r4;
        int i0, $i1, $i2, $i3, $i4, i5, $i6;
        java.lang.String $r2, $r5;
        java.io.OutputStream $r7, $r9, $r11, $r14;
        org.apache.commons.httpclient.ChunkedOutputStream r1;

        r1 := @this: org.apache.commons.httpclient.ChunkedOutputStream;

        r10 := @parameter0: byte[];

        i5 := @parameter1: int;

        i0 := @parameter2: int;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $i1 = r1.<org.apache.commons.httpclient.ChunkedOutputStream: int cachePosition>;

        $i2 = $i1 + i0;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\r\n");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = staticinvoke <org.apache.commons.httpclient.util.EncodingUtil: byte[] getAsciiBytes(java.lang.String)>($r5);

        $r7 = r1.<org.apache.commons.httpclient.ChunkedOutputStream: java.io.OutputStream stream>;

        $i3 = lengthof $r6;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r6, 0, $i3);

        $r9 = r1.<org.apache.commons.httpclient.ChunkedOutputStream: java.io.OutputStream stream>;

        $r8 = r1.<org.apache.commons.httpclient.ChunkedOutputStream: byte[] cache>;

        $i4 = r1.<org.apache.commons.httpclient.ChunkedOutputStream: int cachePosition>;

        virtualinvoke $r9.<java.io.OutputStream: void write(byte[],int,int)>($r8, 0, $i4);

        $r11 = r1.<org.apache.commons.httpclient.ChunkedOutputStream: java.io.OutputStream stream>;

        virtualinvoke $r11.<java.io.OutputStream: void write(byte[],int,int)>(r10, i5, i0);

        $r14 = r1.<org.apache.commons.httpclient.ChunkedOutputStream: java.io.OutputStream stream>;

        $r13 = <org.apache.commons.httpclient.ChunkedOutputStream: byte[] ENDCHUNK>;

        $r12 = <org.apache.commons.httpclient.ChunkedOutputStream: byte[] ENDCHUNK>;

        $i6 = lengthof $r12;

        virtualinvoke $r14.<java.io.OutputStream: void write(byte[],int,int)>($r13, 0, $i6);

        r1.<org.apache.commons.httpclient.ChunkedOutputStream: int cachePosition> = 0;

        return;
    }

    protected void writeClosingChunk() throws java.io.IOException
    {
        java.io.OutputStream $r3, $r6, $r9;
        byte[] $r1, $r2, $r4, $r5, $r7, $r8;
        org.apache.commons.httpclient.ChunkedOutputStream r0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.commons.httpclient.ChunkedOutputStream;

        $r3 = r0.<org.apache.commons.httpclient.ChunkedOutputStream: java.io.OutputStream stream>;

        $r2 = <org.apache.commons.httpclient.ChunkedOutputStream: byte[] ZERO>;

        $r1 = <org.apache.commons.httpclient.ChunkedOutputStream: byte[] ZERO>;

        $i0 = lengthof $r1;

        virtualinvoke $r3.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0);

        $r6 = r0.<org.apache.commons.httpclient.ChunkedOutputStream: java.io.OutputStream stream>;

        $r5 = <org.apache.commons.httpclient.ChunkedOutputStream: byte[] CRLF>;

        $r4 = <org.apache.commons.httpclient.ChunkedOutputStream: byte[] CRLF>;

        $i1 = lengthof $r4;

        virtualinvoke $r6.<java.io.OutputStream: void write(byte[],int,int)>($r5, 0, $i1);

        $r9 = r0.<org.apache.commons.httpclient.ChunkedOutputStream: java.io.OutputStream stream>;

        $r8 = <org.apache.commons.httpclient.ChunkedOutputStream: byte[] ENDCHUNK>;

        $r7 = <org.apache.commons.httpclient.ChunkedOutputStream: byte[] ENDCHUNK>;

        $i2 = lengthof $r7;

        virtualinvoke $r9.<java.io.OutputStream: void write(byte[],int,int)>($r8, 0, $i2);

        return;
    }

    public void finish() throws java.io.IOException
    {
        org.apache.commons.httpclient.ChunkedOutputStream r0;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.ChunkedOutputStream;

        $z0 = r0.<org.apache.commons.httpclient.ChunkedOutputStream: boolean wroteLastChunk>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.apache.commons.httpclient.ChunkedOutputStream: void flushCache()>();

        virtualinvoke r0.<org.apache.commons.httpclient.ChunkedOutputStream: void writeClosingChunk()>();

        r0.<org.apache.commons.httpclient.ChunkedOutputStream: boolean wroteLastChunk> = 1;

     label1:
        return;
    }

    public void write(int) throws java.io.IOException
    {
        byte[] $r1, $r2;
        byte $b1;
        org.apache.commons.httpclient.ChunkedOutputStream r0;
        int i0, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: org.apache.commons.httpclient.ChunkedOutputStream;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.commons.httpclient.ChunkedOutputStream: byte[] cache>;

        $i2 = r0.<org.apache.commons.httpclient.ChunkedOutputStream: int cachePosition>;

        $b1 = (byte) i0;

        $r1[$i2] = $b1;

        $i3 = r0.<org.apache.commons.httpclient.ChunkedOutputStream: int cachePosition>;

        $i4 = $i3 + 1;

        r0.<org.apache.commons.httpclient.ChunkedOutputStream: int cachePosition> = $i4;

        $i6 = r0.<org.apache.commons.httpclient.ChunkedOutputStream: int cachePosition>;

        $r2 = r0.<org.apache.commons.httpclient.ChunkedOutputStream: byte[] cache>;

        $i5 = lengthof $r2;

        if $i6 != $i5 goto label1;

        virtualinvoke r0.<org.apache.commons.httpclient.ChunkedOutputStream: void flushCache()>();

     label1:
        return;
    }

    public void write(byte[]) throws java.io.IOException
    {
        int $i0;
        byte[] r1;
        org.apache.commons.httpclient.ChunkedOutputStream r0;

        r0 := @this: org.apache.commons.httpclient.ChunkedOutputStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<org.apache.commons.httpclient.ChunkedOutputStream: void write(byte[],int,int)>(r1, 0, $i0);

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        byte[] $r1, r2, $r3;
        org.apache.commons.httpclient.ChunkedOutputStream r0;
        int i0, $i1, $i2, $i3, i4, $i5, $i6, $i7;

        r0 := @this: org.apache.commons.httpclient.ChunkedOutputStream;

        r2 := @parameter0: byte[];

        i4 := @parameter1: int;

        i0 := @parameter2: int;

        $r1 = r0.<org.apache.commons.httpclient.ChunkedOutputStream: byte[] cache>;

        $i2 = lengthof $r1;

        $i1 = r0.<org.apache.commons.httpclient.ChunkedOutputStream: int cachePosition>;

        $i3 = $i2 - $i1;

        if i0 < $i3 goto label1;

        virtualinvoke r0.<org.apache.commons.httpclient.ChunkedOutputStream: void flushCacheWithAppend(byte[],int,int)>(r2, i4, i0);

        goto label2;

     label1:
        $r3 = r0.<org.apache.commons.httpclient.ChunkedOutputStream: byte[] cache>;

        $i5 = r0.<org.apache.commons.httpclient.ChunkedOutputStream: int cachePosition>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i4, $r3, $i5, i0);

        $i6 = r0.<org.apache.commons.httpclient.ChunkedOutputStream: int cachePosition>;

        $i7 = $i6 + i0;

        r0.<org.apache.commons.httpclient.ChunkedOutputStream: int cachePosition> = $i7;

     label2:
        return;
    }

    public void flush() throws java.io.IOException
    {
        java.io.OutputStream $r1;
        org.apache.commons.httpclient.ChunkedOutputStream r0;

        r0 := @this: org.apache.commons.httpclient.ChunkedOutputStream;

        $r1 = r0.<org.apache.commons.httpclient.ChunkedOutputStream: java.io.OutputStream stream>;

        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.commons.httpclient.ChunkedOutputStream r0;

        r0 := @this: org.apache.commons.httpclient.ChunkedOutputStream;

        virtualinvoke r0.<org.apache.commons.httpclient.ChunkedOutputStream: void finish()>();

        specialinvoke r0.<java.io.OutputStream: void close()>();

        return;
    }

    static void <clinit>()
    {
        byte[] $r0, $r1, $r2;

        $r0 = newarray (byte)[2];

        $r0[0] = 13;

        $r0[1] = 10;

        <org.apache.commons.httpclient.ChunkedOutputStream: byte[] CRLF> = $r0;

        $r1 = <org.apache.commons.httpclient.ChunkedOutputStream: byte[] CRLF>;

        <org.apache.commons.httpclient.ChunkedOutputStream: byte[] ENDCHUNK> = $r1;

        $r2 = newarray (byte)[1];

        $r2[0] = 48;

        <org.apache.commons.httpclient.ChunkedOutputStream: byte[] ZERO> = $r2;

        return;
    }
}
