class org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySet extends org.apache.commons.collections.map.AbstractHashedMap$EntrySet
{

    protected void <init>(org.apache.commons.collections.map.AbstractHashedMap)
    {
        org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySet r0;
        org.apache.commons.collections.map.AbstractHashedMap r1;

        r0 := @this: org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySet;

        r1 := @parameter0: org.apache.commons.collections.map.AbstractHashedMap;

        specialinvoke r0.<org.apache.commons.collections.map.AbstractHashedMap$EntrySet: void <init>(org.apache.commons.collections.map.AbstractHashedMap)>(r1);

        return;
    }

    public java.lang.Object[] toArray()
    {
        org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySet r0;
        java.lang.Object[] $r1, $r2;

        r0 := @this: org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySet;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySet: java.lang.Object[] toArray(java.lang.Object[])>($r1);

        return $r2;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        java.util.Map$Entry r6;
        org.apache.commons.collections.keyvalue.DefaultMapEntry $r7;
        java.lang.Object[] r3, $r4;
        java.util.Iterator $r2;
        java.util.ArrayList $r0;
        org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySet r1;
        java.lang.Object $r5, $r8, $r9;
        boolean $z0;

        r1 := @this: org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySet;

        r3 := @parameter0: java.lang.Object[];

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntrySet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r7 = new org.apache.commons.collections.keyvalue.DefaultMapEntry;

        $r8 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        specialinvoke $r7.<org.apache.commons.collections.keyvalue.DefaultMapEntry: void <init>(java.lang.Object,java.lang.Object)>($r8, $r9);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        goto label1;

     label2:
        $r4 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r3);

        return $r4;
    }
}
