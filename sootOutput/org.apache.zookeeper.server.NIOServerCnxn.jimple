public class org.apache.zookeeper.server.NIOServerCnxn extends org.apache.zookeeper.server.ServerCnxn
{
    static final org.slf4j.Logger LOG;
    org.apache.zookeeper.server.NIOServerCnxnFactory factory;
    java.nio.channels.SocketChannel sock;
    private final java.nio.channels.SelectionKey sk;
    boolean initialized;
    java.nio.ByteBuffer lenBuffer;
    java.nio.ByteBuffer incomingBuffer;
    java.util.concurrent.LinkedBlockingQueue outgoingBuffers;
    int sessionTimeout;
    private final org.apache.zookeeper.server.ZooKeeperServer zkServer;
    int outstandingRequests;
    long sessionId;
    static long nextSessionId;
    int outstandingLimit;
    private static final java.lang.String ZK_NOT_SERVING;
    private static final byte[] fourBytes;

    public void <init>(org.apache.zookeeper.server.ZooKeeperServer, java.nio.channels.SocketChannel, java.nio.channels.SelectionKey, org.apache.zookeeper.server.NIOServerCnxnFactory) throws java.io.IOException
    {
        java.net.Socket $r10, $r11, $r12;
        java.net.SocketAddress $r13;
        org.apache.zookeeper.server.NIOServerCnxnFactory r7, $r8;
        java.nio.ByteBuffer $r1, $r2;
        java.util.ArrayList $r17;
        org.apache.zookeeper.Login $r9, $r20;
        java.net.InetAddress $r15;
        java.nio.channels.SocketChannel r5;
        int $i0, $i2;
        java.lang.String $r18;
        java.nio.channels.SelectionKey r6;
        java.net.InetSocketAddress $r14;
        java.util.concurrent.LinkedBlockingQueue $r21;
        org.apache.zookeeper.server.ZooKeeperServer r4;
        org.apache.zookeeper.server.ZooKeeperSaslServer $r22;
        org.apache.zookeeper.data.Id $r23;
        org.apache.zookeeper.server.NIOServerCnxn r0;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxn;

        r4 := @parameter0: org.apache.zookeeper.server.ZooKeeperServer;

        r5 := @parameter1: java.nio.channels.SocketChannel;

        r6 := @parameter2: java.nio.channels.SelectionKey;

        r7 := @parameter3: org.apache.zookeeper.server.NIOServerCnxnFactory;

        specialinvoke r0.<org.apache.zookeeper.server.ServerCnxn: void <init>()>();

        $r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(4);

        r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.ByteBuffer lenBuffer> = $r1;

        $r2 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.ByteBuffer lenBuffer>;

        r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.ByteBuffer incomingBuffer> = $r2;

        $r21 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke $r21.<java.util.concurrent.LinkedBlockingQueue: void <init>()>();

        r0.<org.apache.zookeeper.server.NIOServerCnxn: java.util.concurrent.LinkedBlockingQueue outgoingBuffers> = $r21;

        r0.<org.apache.zookeeper.server.NIOServerCnxn: int outstandingLimit> = 1;

        r0.<org.apache.zookeeper.server.NIOServerCnxn: org.apache.zookeeper.server.ZooKeeperServer zkServer> = r4;

        r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SocketChannel sock> = r5;

        r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SelectionKey sk> = r6;

        r0.<org.apache.zookeeper.server.NIOServerCnxn: org.apache.zookeeper.server.NIOServerCnxnFactory factory> = r7;

        $r8 = r0.<org.apache.zookeeper.server.NIOServerCnxn: org.apache.zookeeper.server.NIOServerCnxnFactory factory>;

        $r9 = $r8.<org.apache.zookeeper.server.NIOServerCnxnFactory: org.apache.zookeeper.Login login>;

        if $r9 == null goto label1;

        $r22 = new org.apache.zookeeper.server.ZooKeeperSaslServer;

        $r20 = r7.<org.apache.zookeeper.server.NIOServerCnxnFactory: org.apache.zookeeper.Login login>;

        specialinvoke $r22.<org.apache.zookeeper.server.ZooKeeperSaslServer: void <init>(org.apache.zookeeper.Login)>($r20);

        r0.<org.apache.zookeeper.server.NIOServerCnxn: org.apache.zookeeper.server.ZooKeeperSaslServer zooKeeperSaslServer> = $r22;

     label1:
        if r4 == null goto label2;

        $i0 = virtualinvoke r4.<org.apache.zookeeper.server.ZooKeeperServer: int getGlobalOutstandingLimit()>();

        r0.<org.apache.zookeeper.server.NIOServerCnxn: int outstandingLimit> = $i0;

     label2:
        $r10 = virtualinvoke r5.<java.nio.channels.SocketChannel: java.net.Socket socket()>();

        virtualinvoke $r10.<java.net.Socket: void setTcpNoDelay(boolean)>(1);

        $r11 = virtualinvoke r5.<java.nio.channels.SocketChannel: java.net.Socket socket()>();

        $i2 = (int) -1;

        virtualinvoke $r11.<java.net.Socket: void setSoLinger(boolean,int)>(0, $i2);

        $r12 = virtualinvoke r5.<java.nio.channels.SocketChannel: java.net.Socket socket()>();

        $r13 = virtualinvoke $r12.<java.net.Socket: java.net.SocketAddress getRemoteSocketAddress()>();

        $r14 = (java.net.InetSocketAddress) $r13;

        $r15 = virtualinvoke $r14.<java.net.InetSocketAddress: java.net.InetAddress getAddress()>();

        $r17 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.util.ArrayList authInfo>;

        $r23 = new org.apache.zookeeper.data.Id;

        $r18 = virtualinvoke $r15.<java.net.InetAddress: java.lang.String getHostAddress()>();

        specialinvoke $r23.<org.apache.zookeeper.data.Id: void <init>(java.lang.String,java.lang.String)>("ip", $r18);

        virtualinvoke $r17.<java.util.ArrayList: boolean add(java.lang.Object)>($r23);

        virtualinvoke r6.<java.nio.channels.SelectionKey: java.nio.channels.SelectionKey interestOps(int)>(1);

        return;
    }

    public void sendCloseSession()
    {
        org.apache.zookeeper.server.NIOServerCnxn r0;
        java.nio.ByteBuffer $r1;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxn;

        $r1 = <org.apache.zookeeper.server.ServerCnxnFactory: java.nio.ByteBuffer closeConn>;

        virtualinvoke r0.<org.apache.zookeeper.server.NIOServerCnxn: void sendBuffer(java.nio.ByteBuffer)>($r1);

        return;
    }

    void sendBufferSync(java.nio.ByteBuffer)
    {
        org.slf4j.Logger $r7;
        java.io.IOException $r6;
        java.nio.ByteBuffer r2, $r3;
        java.nio.channels.SocketChannel $r1, $r4, $r5;
        org.apache.zookeeper.server.NIOServerCnxn r0;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxn;

        r2 := @parameter0: java.nio.ByteBuffer;

     label1:
        $r1 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SocketChannel sock>;

        virtualinvoke $r1.<java.nio.channels.SocketChannel: java.nio.channels.SelectableChannel configureBlocking(boolean)>(1);

        $r3 = <org.apache.zookeeper.server.ServerCnxnFactory: java.nio.ByteBuffer closeConn>;

        if r2 == $r3 goto label3;

        $r4 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SocketChannel sock>;

        if $r4 == null goto label2;

        $r5 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SocketChannel sock>;

        virtualinvoke $r5.<java.nio.channels.SocketChannel: int write(java.nio.ByteBuffer)>(r2);

     label2:
        virtualinvoke r0.<org.apache.zookeeper.server.NIOServerCnxn: void packetSent()>();

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        $r7 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        interfaceinvoke $r7.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Error sending data synchronously ", $r6);

     label5:
        return;

        catch java.io.IOException from label1 to label3 with label4;
    }

    public void sendBuffer(java.nio.ByteBuffer)
    {
        org.apache.zookeeper.server.NIOServerCnxnFactory $r3;
        java.nio.ByteBuffer r0, $r1;
        java.nio.channels.SocketChannel $r21;
        boolean $z0, $z1, $z2;
        java.util.concurrent.LinkedBlockingQueue $r7;
        java.lang.Exception $r22;
        org.apache.zookeeper.server.NIOServerCnxn r2;
        java.lang.StringBuilder $r11, $r13, $r15, $r16, $r18;
        java.lang.Throwable $r24;
        java.nio.channels.Selector $r5;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r19;
        org.slf4j.Logger $r6, $r12, $r23;
        java.nio.channels.SelectionKey $r4, $r8, $r9, $r10, $r14, $r17, $r20;
        java.io.IOException $r25;

        r2 := @this: org.apache.zookeeper.server.NIOServerCnxn;

        r0 := @parameter0: java.nio.ByteBuffer;

     label01:
        $r1 = <org.apache.zookeeper.server.ServerCnxnFactory: java.nio.ByteBuffer closeConn>;

        if r0 == $r1 goto label07;

        $r20 = r2.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SelectionKey sk>;

        $i2 = virtualinvoke $r20.<java.nio.channels.SelectionKey: int interestOps()>();

        $i3 = $i2 & 4;

        if $i3 != 0 goto label05;

     label02:
        $r21 = r2.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SocketChannel sock>;

        virtualinvoke $r21.<java.nio.channels.SocketChannel: int write(java.nio.ByteBuffer)>(r0);

     label03:
        goto label05;

     label04:
        $r25 := @caughtexception;

     label05:
        $i4 = virtualinvoke r0.<java.nio.ByteBuffer: int remaining()>();

        if $i4 != 0 goto label07;

        virtualinvoke r2.<org.apache.zookeeper.server.NIOServerCnxn: void packetSent()>();

     label06:
        return;

     label07:
        $r3 = r2.<org.apache.zookeeper.server.NIOServerCnxn: org.apache.zookeeper.server.NIOServerCnxnFactory factory>;

        entermonitor $r3;

     label08:
        $r4 = r2.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SelectionKey sk>;

        $r5 = virtualinvoke $r4.<java.nio.channels.SelectionKey: java.nio.channels.Selector selector()>();

        virtualinvoke $r5.<java.nio.channels.Selector: java.nio.channels.Selector wakeup()>();

        $r6 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        $z0 = interfaceinvoke $r6.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label09;

        $r12 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Add a buffer to outgoingBuffers, sk ");

        $r14 = r2.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SelectionKey sk>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is valid: ");

        $r17 = r2.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SelectionKey sk>;

        $z2 = virtualinvoke $r17.<java.nio.channels.SelectionKey: boolean isValid()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<org.slf4j.Logger: void trace(java.lang.String)>($r19);

     label09:
        $r7 = r2.<org.apache.zookeeper.server.NIOServerCnxn: java.util.concurrent.LinkedBlockingQueue outgoingBuffers>;

        virtualinvoke $r7.<java.util.concurrent.LinkedBlockingQueue: boolean add(java.lang.Object)>(r0);

        $r8 = r2.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SelectionKey sk>;

        $z1 = virtualinvoke $r8.<java.nio.channels.SelectionKey: boolean isValid()>();

        if $z1 == 0 goto label10;

        $r10 = r2.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SelectionKey sk>;

        $r9 = r2.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SelectionKey sk>;

        $i0 = virtualinvoke $r9.<java.nio.channels.SelectionKey: int interestOps()>();

        $i1 = $i0 | 4;

        virtualinvoke $r10.<java.nio.channels.SelectionKey: java.nio.channels.SelectionKey interestOps(int)>($i1);

     label10:
        exitmonitor $r3;

     label11:
        goto label14;

     label12:
        $r24 := @caughtexception;

        exitmonitor $r3;

     label13:
        throw $r24;

     label14:
        goto label16;

     label15:
        $r22 := @caughtexception;

        $r23 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        interfaceinvoke $r23.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Unexpected Exception: ", $r22);

     label16:
        return;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.lang.Throwable from label08 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.lang.Exception from label01 to label06 with label15;
        catch java.lang.Exception from label07 to label14 with label15;
    }

    private void readPayload() throws java.io.IOException, java.lang.InterruptedException
    {
        long $l3;
        java.nio.ByteBuffer $r1, $r2, $r3, $r4, $r5, $r6;
        java.nio.channels.SocketChannel $r7;
        int $i0, $i1, $i2;
        java.lang.String $r11, $r14;
        boolean $z0;
        org.apache.zookeeper.server.NIOServerCnxn r0;
        java.lang.StringBuilder $r9, $r10, $r12, $r13;
        org.apache.zookeeper.server.ServerCnxn$EndOfStreamException $r8;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxn;

        $r1 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.ByteBuffer incomingBuffer>;

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int remaining()>();

        if $i0 == 0 goto label1;

        $r7 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SocketChannel sock>;

        $r6 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.ByteBuffer incomingBuffer>;

        $i2 = virtualinvoke $r7.<java.nio.channels.SocketChannel: int read(java.nio.ByteBuffer)>($r6);

        if $i2 >= 0 goto label1;

        $r8 = new org.apache.zookeeper.server.ServerCnxn$EndOfStreamException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to read additional data from client sessionid 0x");

        $l3 = r0.<org.apache.zookeeper.server.NIOServerCnxn: long sessionId>;

        $r11 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l3);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", likely client has closed socket");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.apache.zookeeper.server.ServerCnxn$EndOfStreamException: void <init>(java.lang.String)>($r14);

        throw $r8;

     label1:
        $r2 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.ByteBuffer incomingBuffer>;

        $i1 = virtualinvoke $r2.<java.nio.ByteBuffer: int remaining()>();

        if $i1 != 0 goto label4;

        virtualinvoke r0.<org.apache.zookeeper.server.NIOServerCnxn: void packetReceived()>();

        $r3 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.ByteBuffer incomingBuffer>;

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        $z0 = r0.<org.apache.zookeeper.server.NIOServerCnxn: boolean initialized>;

        if $z0 != 0 goto label2;

        specialinvoke r0.<org.apache.zookeeper.server.NIOServerCnxn: void readConnectRequest()>();

        goto label3;

     label2:
        specialinvoke r0.<org.apache.zookeeper.server.NIOServerCnxn: void readRequest()>();

     label3:
        $r4 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.ByteBuffer lenBuffer>;

        virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        $r5 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.ByteBuffer lenBuffer>;

        r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.ByteBuffer incomingBuffer> = $r5;

     label4:
        return;
    }

    void doIO(java.nio.channels.SelectionKey) throws java.lang.InterruptedException
    {
        org.apache.zookeeper.server.NIOServerCnxnFactory $r10, $r72;
        java.lang.StringBuilder $r31, $r33, $r34, $r38, $r40, $r45, $r47, $r48, $r49, $r59, $r61, $r62, $r63, $r74, $r75, $r79, $r80;
        org.apache.zookeeper.server.ServerCnxn$EndOfStreamException $r53, $r76;
        java.lang.Throwable $r67;
        java.nio.channels.CancelledKeyException $r56;
        long $l18, $l19, $l20, $l21;
        org.apache.zookeeper.server.ServerCnxn$CloseRequestException $r55, $r77, $r78;
        java.nio.Buffer $r21;
        java.lang.String $r32, $r35, $r39, $r41, $r46, $r50, $r60, $r64;
        java.nio.channels.SelectionKey r2, $r4, $r5, $r6, $r7, $r8;
        java.io.IOException $r42;
        java.nio.ByteBuffer $r16, $r20, $r22, $r24, $r25, $r26, $r27, $r28, r68, r69, r71;
        java.nio.channels.SocketChannel $r1, $r13, $r23;
        boolean $z0, $z1, $z2, $z3, $z4, z5, $z6;
        java.util.concurrent.LinkedBlockingQueue $r3, $r11, $r14, $r17, $r70, $r73;
        org.apache.zookeeper.server.NIOServerCnxn r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i22, $i23, i24, $i25, $i27;
        org.slf4j.Logger $r37, $r44, $r51, $r52, $r54, $r58, $r65, $r66;
        java.util.Iterator $r12;
        java.lang.Object $r15, $r19;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxn;

        r2 := @parameter0: java.nio.channels.SelectionKey;

     label01:
        $r1 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SocketChannel sock>;

        if $r1 != null goto label03;

        $r37 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("trying to do i/o on a null socket for session:0x");

        $l19 = r0.<org.apache.zookeeper.server.NIOServerCnxn: long sessionId>;

        $r39 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l19);

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r37.<org.slf4j.Logger: void warn(java.lang.String)>($r41);

     label02:
        return;

     label03:
        $z0 = virtualinvoke r2.<java.nio.channels.SelectionKey: boolean isReadable()>();

        if $z0 == 0 goto label08;

        $r23 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SocketChannel sock>;

        $r22 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.ByteBuffer incomingBuffer>;

        $i16 = virtualinvoke $r23.<java.nio.channels.SocketChannel: int read(java.nio.ByteBuffer)>($r22);

        if $i16 >= 0 goto label04;

        $r76 = new org.apache.zookeeper.server.ServerCnxn$EndOfStreamException;

        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to read additional data from client sessionid 0x");

        $l18 = r0.<org.apache.zookeeper.server.NIOServerCnxn: long sessionId>;

        $r32 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l18);

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", likely client has closed socket");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r76.<org.apache.zookeeper.server.ServerCnxn$EndOfStreamException: void <init>(java.lang.String)>($r35);

        throw $r76;

     label04:
        $r24 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.ByteBuffer incomingBuffer>;

        $i17 = virtualinvoke $r24.<java.nio.ByteBuffer: int remaining()>();

        if $i17 != 0 goto label08;

        $r26 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.ByteBuffer incomingBuffer>;

        $r25 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.ByteBuffer lenBuffer>;

        if $r26 != $r25 goto label05;

        $r27 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.ByteBuffer incomingBuffer>;

        virtualinvoke $r27.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        z5 = specialinvoke r0.<org.apache.zookeeper.server.NIOServerCnxn: boolean readLength(java.nio.channels.SelectionKey)>(r2);

        $r28 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.ByteBuffer incomingBuffer>;

        virtualinvoke $r28.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        goto label06;

     label05:
        z5 = 1;

     label06:
        if z5 == 0 goto label07;

        specialinvoke r0.<org.apache.zookeeper.server.NIOServerCnxn: void readPayload()>();

        goto label08;

     label07:
        return;

     label08:
        $z6 = virtualinvoke r2.<java.nio.channels.SelectionKey: boolean isWritable()>();

        if $z6 == 0 goto label24;

        $r3 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.util.concurrent.LinkedBlockingQueue outgoingBuffers>;

        $i0 = virtualinvoke $r3.<java.util.concurrent.LinkedBlockingQueue: int size()>();

        if $i0 <= 0 goto label16;

        $r10 = r0.<org.apache.zookeeper.server.NIOServerCnxn: org.apache.zookeeper.server.NIOServerCnxnFactory factory>;

        r68 = $r10.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.nio.ByteBuffer directBuffer>;

        virtualinvoke r68.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        $r11 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.util.concurrent.LinkedBlockingQueue outgoingBuffers>;

        $r12 = virtualinvoke $r11.<java.util.concurrent.LinkedBlockingQueue: java.util.Iterator iterator()>();

     label09:
        $z2 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label12;

        $r19 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r69 = (java.nio.ByteBuffer) $r19;

        $i11 = virtualinvoke r68.<java.nio.ByteBuffer: int remaining()>();

        $i12 = virtualinvoke r69.<java.nio.ByteBuffer: int remaining()>();

        if $i11 >= $i12 goto label10;

        $r20 = virtualinvoke r69.<java.nio.ByteBuffer: java.nio.ByteBuffer slice()>();

        $i15 = virtualinvoke r68.<java.nio.ByteBuffer: int remaining()>();

        $r21 = virtualinvoke $r20.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i15);

        r69 = (java.nio.ByteBuffer) $r21;

     label10:
        $i13 = virtualinvoke r69.<java.nio.ByteBuffer: int position()>();

        virtualinvoke r68.<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>(r69);

        virtualinvoke r69.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i13);

        $i14 = virtualinvoke r68.<java.nio.ByteBuffer: int remaining()>();

        if $i14 != 0 goto label11;

        goto label12;

     label11:
        goto label09;

     label12:
        virtualinvoke r68.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        $r13 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SocketChannel sock>;

        i22 = virtualinvoke $r13.<java.nio.channels.SocketChannel: int write(java.nio.ByteBuffer)>(r68);

     label13:
        $r70 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.util.concurrent.LinkedBlockingQueue outgoingBuffers>;

        $i23 = virtualinvoke $r70.<java.util.concurrent.LinkedBlockingQueue: int size()>();

        if $i23 <= 0 goto label16;

        $r14 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.util.concurrent.LinkedBlockingQueue outgoingBuffers>;

        $r15 = virtualinvoke $r14.<java.util.concurrent.LinkedBlockingQueue: java.lang.Object peek()>();

        r71 = (java.nio.ByteBuffer) $r15;

        $r16 = <org.apache.zookeeper.server.ServerCnxnFactory: java.nio.ByteBuffer closeConn>;

        if r71 != $r16 goto label14;

        $r77 = new org.apache.zookeeper.server.ServerCnxn$CloseRequestException;

        specialinvoke $r77.<org.apache.zookeeper.server.ServerCnxn$CloseRequestException: void <init>(java.lang.String)>("close requested");

        throw $r77;

     label14:
        $i7 = virtualinvoke r71.<java.nio.ByteBuffer: int remaining()>();

        i24 = $i7 - i22;

        if i24 <= 0 goto label15;

        $i9 = virtualinvoke r71.<java.nio.ByteBuffer: int position()>();

        $i10 = $i9 + i22;

        virtualinvoke r71.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i10);

        goto label16;

     label15:
        virtualinvoke r0.<org.apache.zookeeper.server.NIOServerCnxn: void packetSent()>();

        $i8 = virtualinvoke r71.<java.nio.ByteBuffer: int remaining()>();

        i22 = i22 - $i8;

        $r17 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.util.concurrent.LinkedBlockingQueue outgoingBuffers>;

        virtualinvoke $r17.<java.util.concurrent.LinkedBlockingQueue: java.lang.Object remove()>();

        goto label13;

     label16:
        $r72 = r0.<org.apache.zookeeper.server.NIOServerCnxn: org.apache.zookeeper.server.NIOServerCnxnFactory factory>;

        entermonitor $r72;

     label17:
        $r73 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.util.concurrent.LinkedBlockingQueue outgoingBuffers>;

        $i25 = virtualinvoke $r73.<java.util.concurrent.LinkedBlockingQueue: int size()>();

        if $i25 != 0 goto label19;

        $z1 = r0.<org.apache.zookeeper.server.NIOServerCnxn: boolean initialized>;

        if $z1 != 0 goto label18;

        $r8 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SelectionKey sk>;

        $i5 = virtualinvoke $r8.<java.nio.channels.SelectionKey: int interestOps()>();

        $i6 = $i5 & 1;

        if $i6 != 0 goto label18;

        $r78 = new org.apache.zookeeper.server.ServerCnxn$CloseRequestException;

        specialinvoke $r78.<org.apache.zookeeper.server.ServerCnxn$CloseRequestException: void <init>(java.lang.String)>("responded to info probe");

        throw $r78;

     label18:
        $r7 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SelectionKey sk>;

        $r6 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SelectionKey sk>;

        $i3 = virtualinvoke $r6.<java.nio.channels.SelectionKey: int interestOps()>();

        $i27 = (int) -5;

        $i4 = $i3 & $i27;

        virtualinvoke $r7.<java.nio.channels.SelectionKey: java.nio.channels.SelectionKey interestOps(int)>($i4);

        goto label20;

     label19:
        $r5 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SelectionKey sk>;

        $r4 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SelectionKey sk>;

        $i1 = virtualinvoke $r4.<java.nio.channels.SelectionKey: int interestOps()>();

        $i2 = $i1 | 4;

        virtualinvoke $r5.<java.nio.channels.SelectionKey: java.nio.channels.SelectionKey interestOps(int)>($i2);

     label20:
        exitmonitor $r72;

     label21:
        goto label24;

     label22:
        $r67 := @caughtexception;

        exitmonitor $r72;

     label23:
        throw $r67;

     label24:
        goto label31;

     label25:
        $r56 := @caughtexception;

        $r58 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception causing close of session 0x");

        $l21 = r0.<org.apache.zookeeper.server.NIOServerCnxn: long sessionId>;

        $r60 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l21);

        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" due to ");

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r56);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r58.<org.slf4j.Logger: void warn(java.lang.String)>($r64);

        $r65 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        $z4 = interfaceinvoke $r65.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z4 == 0 goto label26;

        $r66 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        interfaceinvoke $r66.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>("CancelledKeyException stack trace", $r56);

     label26:
        virtualinvoke r0.<org.apache.zookeeper.server.NIOServerCnxn: void close()>();

        goto label31;

     label27:
        $r55 := @caughtexception;

        virtualinvoke r0.<org.apache.zookeeper.server.NIOServerCnxn: void close()>();

        goto label31;

     label28:
        $r53 := @caughtexception;

        $r54 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        interfaceinvoke $r54.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("caught end of stream exception", $r53);

        virtualinvoke r0.<org.apache.zookeeper.server.NIOServerCnxn: void close()>();

        goto label31;

     label29:
        $r42 := @caughtexception;

        $r44 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        $r80 = new java.lang.StringBuilder;

        specialinvoke $r80.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception causing close of session 0x");

        $l20 = r0.<org.apache.zookeeper.server.NIOServerCnxn: long sessionId>;

        $r46 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l20);

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" due to ");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r42);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r44.<org.slf4j.Logger: void warn(java.lang.String)>($r50);

        $r51 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        $z3 = interfaceinvoke $r51.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z3 == 0 goto label30;

        $r52 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        interfaceinvoke $r52.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>("IOException stack trace", $r42);

     label30:
        virtualinvoke r0.<org.apache.zookeeper.server.NIOServerCnxn: void close()>();

     label31:
        return;

        catch java.lang.Throwable from label17 to label21 with label22;
        catch java.lang.Throwable from label22 to label23 with label22;
        catch java.nio.channels.CancelledKeyException from label01 to label02 with label25;
        catch java.nio.channels.CancelledKeyException from label03 to label07 with label25;
        catch java.nio.channels.CancelledKeyException from label08 to label24 with label25;
        catch org.apache.zookeeper.server.ServerCnxn$CloseRequestException from label01 to label02 with label27;
        catch org.apache.zookeeper.server.ServerCnxn$CloseRequestException from label03 to label07 with label27;
        catch org.apache.zookeeper.server.ServerCnxn$CloseRequestException from label08 to label24 with label27;
        catch org.apache.zookeeper.server.ServerCnxn$EndOfStreamException from label01 to label02 with label28;
        catch org.apache.zookeeper.server.ServerCnxn$EndOfStreamException from label03 to label07 with label28;
        catch org.apache.zookeeper.server.ServerCnxn$EndOfStreamException from label08 to label24 with label28;
        catch java.io.IOException from label01 to label02 with label29;
        catch java.io.IOException from label03 to label07 with label29;
        catch java.io.IOException from label08 to label24 with label29;
    }

    private void readRequest() throws java.io.IOException
    {
        org.apache.zookeeper.server.ZooKeeperServer $r2;
        org.apache.zookeeper.server.NIOServerCnxn r0;
        java.nio.ByteBuffer $r1;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxn;

        $r2 = r0.<org.apache.zookeeper.server.NIOServerCnxn: org.apache.zookeeper.server.ZooKeeperServer zkServer>;

        $r1 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.ByteBuffer incomingBuffer>;

        virtualinvoke $r2.<org.apache.zookeeper.server.ZooKeeperServer: void processPacket(org.apache.zookeeper.server.ServerCnxn,java.nio.ByteBuffer)>(r0, $r1);

        return;
    }

    protected void incrOutstandingRequests(org.apache.zookeeper.proto.RequestHeader)
    {
        java.lang.Throwable $r11, $r12;
        org.apache.zookeeper.server.NIOServerCnxnFactory $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r10;
        boolean $z0;
        org.slf4j.Logger $r4, $r6;
        org.apache.zookeeper.proto.RequestHeader r0;
        org.apache.zookeeper.server.ZooKeeperServer $r3, $r8;
        org.apache.zookeeper.server.NIOServerCnxn r1;
        java.lang.StringBuilder $r5, $r7, $r9;

        r1 := @this: org.apache.zookeeper.server.NIOServerCnxn;

        r0 := @parameter0: org.apache.zookeeper.proto.RequestHeader;

        $i0 = virtualinvoke r0.<org.apache.zookeeper.proto.RequestHeader: int getXid()>();

        if $i0 < 0 goto label12;

        entermonitor r1;

     label01:
        $i1 = r1.<org.apache.zookeeper.server.NIOServerCnxn: int outstandingRequests>;

        $i2 = $i1 + 1;

        r1.<org.apache.zookeeper.server.NIOServerCnxn: int outstandingRequests> = $i2;

        exitmonitor r1;

     label02:
        goto label05;

     label03:
        $r12 := @caughtexception;

        exitmonitor r1;

     label04:
        throw $r12;

     label05:
        $r2 = r1.<org.apache.zookeeper.server.NIOServerCnxn: org.apache.zookeeper.server.NIOServerCnxnFactory factory>;

        entermonitor $r2;

     label06:
        $r3 = r1.<org.apache.zookeeper.server.NIOServerCnxn: org.apache.zookeeper.server.ZooKeeperServer zkServer>;

        $i3 = virtualinvoke $r3.<org.apache.zookeeper.server.ZooKeeperServer: int getInProcess()>();

        $i4 = r1.<org.apache.zookeeper.server.NIOServerCnxn: int outstandingLimit>;

        if $i3 <= $i4 goto label08;

        $r4 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        $z0 = interfaceinvoke $r4.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label07;

        $r6 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Throttling recv ");

        $r8 = r1.<org.apache.zookeeper.server.NIOServerCnxn: org.apache.zookeeper.server.ZooKeeperServer zkServer>;

        $i5 = virtualinvoke $r8.<org.apache.zookeeper.server.ZooKeeperServer: int getInProcess()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.slf4j.Logger: void debug(java.lang.String)>($r10);

     label07:
        virtualinvoke r1.<org.apache.zookeeper.server.NIOServerCnxn: void disableRecv()>();

     label08:
        exitmonitor $r2;

     label09:
        goto label12;

     label10:
        $r11 := @caughtexception;

        exitmonitor $r2;

     label11:
        throw $r11;

     label12:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label06 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void disableRecv()
    {
        java.nio.channels.SelectionKey $r1, $r2;
        int $i0, $i1, $i3;
        org.apache.zookeeper.server.NIOServerCnxn r0;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxn;

        $r2 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SelectionKey sk>;

        $r1 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SelectionKey sk>;

        $i0 = virtualinvoke $r1.<java.nio.channels.SelectionKey: int interestOps()>();

        $i3 = (int) -2;

        $i1 = $i0 & $i3;

        virtualinvoke $r2.<java.nio.channels.SelectionKey: java.nio.channels.SelectionKey interestOps(int)>($i1);

        return;
    }

    public void enableRecv()
    {
        java.lang.Throwable $r7;
        java.nio.channels.SelectionKey $r2, $r4, $r5, $r6;
        java.nio.channels.Selector $r3;
        org.apache.zookeeper.server.NIOServerCnxnFactory $r1;
        int $i0, $i1, $i2;
        org.apache.zookeeper.server.NIOServerCnxn r0;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxn;

        $r1 = r0.<org.apache.zookeeper.server.NIOServerCnxn: org.apache.zookeeper.server.NIOServerCnxnFactory factory>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SelectionKey sk>;

        $r3 = virtualinvoke $r2.<java.nio.channels.SelectionKey: java.nio.channels.Selector selector()>();

        virtualinvoke $r3.<java.nio.channels.Selector: java.nio.channels.Selector wakeup()>();

        $r4 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SelectionKey sk>;

        $z0 = virtualinvoke $r4.<java.nio.channels.SelectionKey: boolean isValid()>();

        if $z0 == 0 goto label2;

        $r5 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SelectionKey sk>;

        $i0 = virtualinvoke $r5.<java.nio.channels.SelectionKey: int interestOps()>();

        $i1 = $i0 & 1;

        if $i1 != 0 goto label2;

        $r6 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SelectionKey sk>;

        $i2 = $i0 | 1;

        virtualinvoke $r6.<java.nio.channels.SelectionKey: java.nio.channels.SelectionKey interestOps(int)>($i2);

     label2:
        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void readConnectRequest() throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.zookeeper.server.ZooKeeperServer $r1, $r3;
        org.apache.zookeeper.server.NIOServerCnxn r0;
        java.io.IOException $r4;
        java.nio.ByteBuffer $r2;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxn;

        $r1 = r0.<org.apache.zookeeper.server.NIOServerCnxn: org.apache.zookeeper.server.ZooKeeperServer zkServer>;

        if $r1 != null goto label1;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("ZooKeeperServer not running");

        throw $r4;

     label1:
        $r3 = r0.<org.apache.zookeeper.server.NIOServerCnxn: org.apache.zookeeper.server.ZooKeeperServer zkServer>;

        $r2 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.ByteBuffer incomingBuffer>;

        virtualinvoke $r3.<org.apache.zookeeper.server.ZooKeeperServer: void processConnectRequest(org.apache.zookeeper.server.ServerCnxn,java.nio.ByteBuffer)>(r0, $r2);

        r0.<org.apache.zookeeper.server.NIOServerCnxn: boolean initialized> = 1;

        return;
    }

    private void cleanupWriterSocket(java.io.PrintWriter)
    {
        java.io.PrintWriter r0;
        java.lang.Throwable $r8;
        org.slf4j.Logger $r3, $r5, $r7, $r10;
        java.lang.Exception $r2, $r4, $r6, $r9;
        org.apache.zookeeper.server.NIOServerCnxn r1;

        r1 := @this: org.apache.zookeeper.server.NIOServerCnxn;

        r0 := @parameter0: java.io.PrintWriter;

     label01:
        if r0 == null goto label02;

        virtualinvoke r0.<java.io.PrintWriter: void flush()>();

        virtualinvoke r0.<java.io.PrintWriter: void close()>();

     label02:
        goto label09;

     label03:
        goto label08;

     label04:
        $r9 := @caughtexception;

        $r10 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String,java.lang.Throwable)>("Error closing PrintWriter ", $r9);

        goto label13;

     label05:
        goto label08;

     label06:
        $r8 := @caughtexception;

        goto label17;

     label07:
        throw $r8;

     label08:
        return;

     label09:
        virtualinvoke r1.<org.apache.zookeeper.server.NIOServerCnxn: void close()>();

     label10:
        goto label12;

     label11:
        $r6 := @caughtexception;

        $r7 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        interfaceinvoke $r7.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Error closing a command socket ", $r6);

     label12:
        goto label03;

     label13:
        virtualinvoke r1.<org.apache.zookeeper.server.NIOServerCnxn: void close()>();

     label14:
        goto label16;

     label15:
        $r4 := @caughtexception;

        $r5 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        interfaceinvoke $r5.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Error closing a command socket ", $r4);

     label16:
        goto label05;

     label17:
        virtualinvoke r1.<org.apache.zookeeper.server.NIOServerCnxn: void close()>();

     label18:
        goto label20;

     label19:
        $r2 := @caughtexception;

        $r3 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        interfaceinvoke $r3.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Error closing a command socket ", $r2);

     label20:
        goto label07;

        catch java.lang.Exception from label01 to label02 with label04;
        catch java.lang.Throwable from label01 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Exception from label13 to label14 with label15;
        catch java.lang.Exception from label17 to label18 with label19;
    }

    private boolean checkFourLetterWord(java.nio.channels.SelectionKey, int) throws java.io.IOException
    {
        java.net.SocketAddress $r12;
        org.apache.zookeeper.server.NIOServerCnxn$StatCommand $r16;
        org.apache.zookeeper.server.NIOServerCnxn$StatResetCommand $r22;
        org.apache.zookeeper.server.NIOServerCnxn$EnvCommand $r24;
        java.lang.Integer $r1;
        java.nio.ByteBuffer $r25, $r27, $r28;
        java.nio.channels.SocketChannel $r10, $r26;
        org.apache.zookeeper.server.NIOServerCnxn$WatchCommand $r38;
        java.io.PrintWriter $r35;
        org.apache.zookeeper.server.NIOServerCnxn$ConsCommand $r19;
        java.lang.Exception $r33;
        org.apache.zookeeper.server.NIOServerCnxn$CnxnStatResetCommand $r21;
        org.apache.zookeeper.server.NIOServerCnxn r9;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r13;
        org.apache.zookeeper.server.NIOServerCnxn$RuokCommand $r32;
        org.apache.zookeeper.server.NIOServerCnxn$MonitorCommand $r18;
        java.net.Socket $r11;
        org.apache.zookeeper.server.NIOServerCnxn$SendBufferWriter $r37;
        org.apache.zookeeper.server.NIOServerCnxn$ConfCommand $r23;
        org.apache.zookeeper.server.NIOServerCnxn$SetTraceMaskCommand $r29;
        org.apache.zookeeper.server.NIOServerCnxn$DumpCommand $r20;
        java.util.HashMap $r0;
        long $l17;
        org.apache.zookeeper.server.NIOServerCnxn$TraceMaskCommand $r31;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i18;
        java.lang.String r3, $r14;
        org.slf4j.Logger $r5, $r34;
        java.nio.channels.SelectionKey r15;
        java.io.BufferedWriter $r36;
        java.io.IOException $r30;
        org.apache.zookeeper.server.NIOServerCnxn$IsroCommand $r17;
        java.lang.Object $r2;

        r9 := @this: org.apache.zookeeper.server.NIOServerCnxn;

        r15 := @parameter0: java.nio.channels.SelectionKey;

        i0 := @parameter1: int;

        $r0 = <org.apache.zookeeper.server.NIOServerCnxn: java.util.HashMap cmd2String>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2 = virtualinvoke $r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        r3 = (java.lang.String) $r2;

        if r3 != null goto label01;

        return 0;

     label01:
        $r5 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Processing ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" command from ");

        $r10 = r9.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SocketChannel sock>;

        $r11 = virtualinvoke $r10.<java.nio.channels.SocketChannel: java.net.Socket socket()>();

        $r12 = virtualinvoke $r11.<java.net.Socket: java.net.SocketAddress getRemoteSocketAddress()>();

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String)>($r14);

        virtualinvoke r9.<org.apache.zookeeper.server.NIOServerCnxn: void packetReceived()>();

        if r15 == null goto label05;

     label02:
        virtualinvoke r15.<java.nio.channels.SelectionKey: void cancel()>();

     label03:
        goto label05;

     label04:
        $r33 := @caughtexception;

        $r34 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        interfaceinvoke $r34.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Error cancelling command selection key ", $r33);

     label05:
        $r35 = new java.io.PrintWriter;

        $r36 = new java.io.BufferedWriter;

        $r37 = new org.apache.zookeeper.server.NIOServerCnxn$SendBufferWriter;

        specialinvoke $r37.<org.apache.zookeeper.server.NIOServerCnxn$SendBufferWriter: void <init>(org.apache.zookeeper.server.NIOServerCnxn,org.apache.zookeeper.server.NIOServerCnxn$1)>(r9, null);

        specialinvoke $r36.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r37);

        specialinvoke $r35.<java.io.PrintWriter: void <init>(java.io.Writer)>($r36);

        $i18 = <org.apache.zookeeper.server.NIOServerCnxn: int ruokCmd>;

        if i0 != $i18 goto label06;

        $r32 = new org.apache.zookeeper.server.NIOServerCnxn$RuokCommand;

        specialinvoke $r32.<org.apache.zookeeper.server.NIOServerCnxn$RuokCommand: void <init>(org.apache.zookeeper.server.NIOServerCnxn,java.io.PrintWriter)>(r9, $r35);

        virtualinvoke $r32.<org.apache.zookeeper.server.NIOServerCnxn$RuokCommand: void start()>();

        return 1;

     label06:
        $i1 = <org.apache.zookeeper.server.NIOServerCnxn: int getTraceMaskCmd>;

        if i0 != $i1 goto label07;

        $r31 = new org.apache.zookeeper.server.NIOServerCnxn$TraceMaskCommand;

        specialinvoke $r31.<org.apache.zookeeper.server.NIOServerCnxn$TraceMaskCommand: void <init>(org.apache.zookeeper.server.NIOServerCnxn,java.io.PrintWriter)>(r9, $r35);

        virtualinvoke $r31.<org.apache.zookeeper.server.NIOServerCnxn$TraceMaskCommand: void start()>();

        return 1;

     label07:
        $i2 = <org.apache.zookeeper.server.NIOServerCnxn: int setTraceMaskCmd>;

        if i0 != $i2 goto label09;

        $r26 = r9.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SocketChannel sock>;

        $r25 = r9.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.ByteBuffer incomingBuffer>;

        $i16 = virtualinvoke $r26.<java.nio.channels.SocketChannel: int read(java.nio.ByteBuffer)>($r25);

        if $i16 >= 0 goto label08;

        $r30 = new java.io.IOException;

        specialinvoke $r30.<java.io.IOException: void <init>(java.lang.String)>("Read error");

        throw $r30;

     label08:
        $r27 = r9.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.ByteBuffer incomingBuffer>;

        virtualinvoke $r27.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        $r28 = r9.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.ByteBuffer incomingBuffer>;

        $l17 = virtualinvoke $r28.<java.nio.ByteBuffer: long getLong()>();

        staticinvoke <org.apache.zookeeper.server.ZooTrace: void setTextTraceLevel(long)>($l17);

        $r29 = new org.apache.zookeeper.server.NIOServerCnxn$SetTraceMaskCommand;

        specialinvoke $r29.<org.apache.zookeeper.server.NIOServerCnxn$SetTraceMaskCommand: void <init>(org.apache.zookeeper.server.NIOServerCnxn,java.io.PrintWriter,long)>(r9, $r35, $l17);

        virtualinvoke $r29.<org.apache.zookeeper.server.NIOServerCnxn$SetTraceMaskCommand: void start()>();

        return 1;

     label09:
        $i3 = <org.apache.zookeeper.server.NIOServerCnxn: int enviCmd>;

        if i0 != $i3 goto label10;

        $r24 = new org.apache.zookeeper.server.NIOServerCnxn$EnvCommand;

        specialinvoke $r24.<org.apache.zookeeper.server.NIOServerCnxn$EnvCommand: void <init>(org.apache.zookeeper.server.NIOServerCnxn,java.io.PrintWriter)>(r9, $r35);

        virtualinvoke $r24.<org.apache.zookeeper.server.NIOServerCnxn$EnvCommand: void start()>();

        return 1;

     label10:
        $i4 = <org.apache.zookeeper.server.NIOServerCnxn: int confCmd>;

        if i0 != $i4 goto label11;

        $r23 = new org.apache.zookeeper.server.NIOServerCnxn$ConfCommand;

        specialinvoke $r23.<org.apache.zookeeper.server.NIOServerCnxn$ConfCommand: void <init>(org.apache.zookeeper.server.NIOServerCnxn,java.io.PrintWriter)>(r9, $r35);

        virtualinvoke $r23.<org.apache.zookeeper.server.NIOServerCnxn$ConfCommand: void start()>();

        return 1;

     label11:
        $i5 = <org.apache.zookeeper.server.NIOServerCnxn: int srstCmd>;

        if i0 != $i5 goto label12;

        $r22 = new org.apache.zookeeper.server.NIOServerCnxn$StatResetCommand;

        specialinvoke $r22.<org.apache.zookeeper.server.NIOServerCnxn$StatResetCommand: void <init>(org.apache.zookeeper.server.NIOServerCnxn,java.io.PrintWriter)>(r9, $r35);

        virtualinvoke $r22.<org.apache.zookeeper.server.NIOServerCnxn$StatResetCommand: void start()>();

        return 1;

     label12:
        $i6 = <org.apache.zookeeper.server.NIOServerCnxn: int crstCmd>;

        if i0 != $i6 goto label13;

        $r21 = new org.apache.zookeeper.server.NIOServerCnxn$CnxnStatResetCommand;

        specialinvoke $r21.<org.apache.zookeeper.server.NIOServerCnxn$CnxnStatResetCommand: void <init>(org.apache.zookeeper.server.NIOServerCnxn,java.io.PrintWriter)>(r9, $r35);

        virtualinvoke $r21.<org.apache.zookeeper.server.NIOServerCnxn$CnxnStatResetCommand: void start()>();

        return 1;

     label13:
        $i7 = <org.apache.zookeeper.server.NIOServerCnxn: int dumpCmd>;

        if i0 != $i7 goto label14;

        $r20 = new org.apache.zookeeper.server.NIOServerCnxn$DumpCommand;

        specialinvoke $r20.<org.apache.zookeeper.server.NIOServerCnxn$DumpCommand: void <init>(org.apache.zookeeper.server.NIOServerCnxn,java.io.PrintWriter)>(r9, $r35);

        virtualinvoke $r20.<org.apache.zookeeper.server.NIOServerCnxn$DumpCommand: void start()>();

        return 1;

     label14:
        $i8 = <org.apache.zookeeper.server.NIOServerCnxn: int statCmd>;

        if i0 == $i8 goto label15;

        $i9 = <org.apache.zookeeper.server.NIOServerCnxn: int srvrCmd>;

        if i0 != $i9 goto label16;

     label15:
        $r16 = new org.apache.zookeeper.server.NIOServerCnxn$StatCommand;

        specialinvoke $r16.<org.apache.zookeeper.server.NIOServerCnxn$StatCommand: void <init>(org.apache.zookeeper.server.NIOServerCnxn,java.io.PrintWriter,int)>(r9, $r35, i0);

        virtualinvoke $r16.<org.apache.zookeeper.server.NIOServerCnxn$StatCommand: void start()>();

        return 1;

     label16:
        $i10 = <org.apache.zookeeper.server.NIOServerCnxn: int consCmd>;

        if i0 != $i10 goto label17;

        $r19 = new org.apache.zookeeper.server.NIOServerCnxn$ConsCommand;

        specialinvoke $r19.<org.apache.zookeeper.server.NIOServerCnxn$ConsCommand: void <init>(org.apache.zookeeper.server.NIOServerCnxn,java.io.PrintWriter)>(r9, $r35);

        virtualinvoke $r19.<org.apache.zookeeper.server.NIOServerCnxn$ConsCommand: void start()>();

        return 1;

     label17:
        $i11 = <org.apache.zookeeper.server.NIOServerCnxn: int wchpCmd>;

        if i0 == $i11 goto label18;

        $i12 = <org.apache.zookeeper.server.NIOServerCnxn: int wchcCmd>;

        if i0 == $i12 goto label18;

        $i13 = <org.apache.zookeeper.server.NIOServerCnxn: int wchsCmd>;

        if i0 != $i13 goto label19;

     label18:
        $r38 = new org.apache.zookeeper.server.NIOServerCnxn$WatchCommand;

        specialinvoke $r38.<org.apache.zookeeper.server.NIOServerCnxn$WatchCommand: void <init>(org.apache.zookeeper.server.NIOServerCnxn,java.io.PrintWriter,int)>(r9, $r35, i0);

        virtualinvoke $r38.<org.apache.zookeeper.server.NIOServerCnxn$WatchCommand: void start()>();

        return 1;

     label19:
        $i14 = <org.apache.zookeeper.server.NIOServerCnxn: int mntrCmd>;

        if i0 != $i14 goto label20;

        $r18 = new org.apache.zookeeper.server.NIOServerCnxn$MonitorCommand;

        specialinvoke $r18.<org.apache.zookeeper.server.NIOServerCnxn$MonitorCommand: void <init>(org.apache.zookeeper.server.NIOServerCnxn,java.io.PrintWriter)>(r9, $r35);

        virtualinvoke $r18.<org.apache.zookeeper.server.NIOServerCnxn$MonitorCommand: void start()>();

        return 1;

     label20:
        $i15 = <org.apache.zookeeper.server.NIOServerCnxn: int isroCmd>;

        if i0 != $i15 goto label21;

        $r17 = new org.apache.zookeeper.server.NIOServerCnxn$IsroCommand;

        specialinvoke $r17.<org.apache.zookeeper.server.NIOServerCnxn$IsroCommand: void <init>(org.apache.zookeeper.server.NIOServerCnxn,java.io.PrintWriter)>(r9, $r35);

        virtualinvoke $r17.<org.apache.zookeeper.server.NIOServerCnxn$IsroCommand: void start()>();

        return 1;

     label21:
        return 0;

        catch java.lang.Exception from label02 to label03 with label04;
    }

    private boolean readLength(java.nio.channels.SelectionKey) throws java.io.IOException
    {
        java.nio.ByteBuffer $r1, $r8;
        int $i0, $i1;
        java.lang.String $r6;
        boolean $z0, $z1;
        java.nio.channels.SelectionKey $r10, r11;
        java.io.IOException $r2, $r9;
        org.apache.zookeeper.server.ZooKeeperServer $r7;
        org.apache.zookeeper.server.NIOServerCnxn r0;
        java.lang.StringBuilder $r3, $r4, $r5;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxn;

        r11 := @parameter0: java.nio.channels.SelectionKey;

        $r1 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.ByteBuffer lenBuffer>;

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int getInt()>();

        $z0 = r0.<org.apache.zookeeper.server.NIOServerCnxn: boolean initialized>;

        if $z0 != 0 goto label1;

        $r10 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SelectionKey sk>;

        $z1 = specialinvoke r0.<org.apache.zookeeper.server.NIOServerCnxn: boolean checkFourLetterWord(java.nio.channels.SelectionKey,int)>($r10, $i0);

        if $z1 == 0 goto label1;

        return 0;

     label1:
        if $i0 < 0 goto label2;

        $i1 = <org.apache.jute.BinaryInputArchive: int maxBuffer>;

        if $i0 <= $i1 goto label3;

     label2:
        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Len error ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label3:
        $r7 = r0.<org.apache.zookeeper.server.NIOServerCnxn: org.apache.zookeeper.server.ZooKeeperServer zkServer>;

        if $r7 != null goto label4;

        $r9 = new java.io.IOException;

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>("ZooKeeperServer not running");

        throw $r9;

     label4:
        $r8 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i0);

        r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.ByteBuffer incomingBuffer> = $r8;

        return 1;
    }

    public long getOutstandingRequests()
    {
        java.lang.Throwable $r2, $r3;
        org.apache.zookeeper.server.NIOServerCnxnFactory $r1;
        int $i0;
        org.apache.zookeeper.server.NIOServerCnxn r0;
        long $l1;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxn;

        entermonitor r0;

     label1:
        $r1 = r0.<org.apache.zookeeper.server.NIOServerCnxn: org.apache.zookeeper.server.NIOServerCnxnFactory factory>;

        entermonitor $r1;

     label2:
        $i0 = r0.<org.apache.zookeeper.server.NIOServerCnxn: int outstandingRequests>;

        $l1 = (long) $i0;

        exitmonitor $r1;

     label3:
        exitmonitor r0;

     label4:
        return $l1;

     label5:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r3;

     label7:
        $r2 := @caughtexception;

        exitmonitor r0;

     label8:
        throw $r2;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
        catch java.lang.Throwable from label1 to label4 with label7;
        catch java.lang.Throwable from label5 to label8 with label7;
    }

    public int getSessionTimeout()
    {
        int $i0;
        org.apache.zookeeper.server.NIOServerCnxn r0;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxn;

        $i0 = r0.<org.apache.zookeeper.server.NIOServerCnxn: int sessionTimeout>;

        return $i0;
    }

    public java.lang.String toString()
    {
        java.nio.channels.SelectionKey $r6;
        java.nio.channels.SocketChannel $r3;
        org.apache.zookeeper.server.NIOServerCnxn r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7;
        java.lang.String $r8;

        r2 := @this: org.apache.zookeeper.server.NIOServerCnxn;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NIOServerCnxn object with sock = ");

        $r3 = r2.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SocketChannel sock>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and sk = ");

        $r6 = r2.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SelectionKey sk>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public void close()
    {
        java.lang.Throwable $r19, $r23;
        java.net.Socket $r10;
        org.apache.zookeeper.server.NIOServerCnxnFactory $r1, $r3, $r5, $r7, $r14;
        java.util.HashMap $r6, $r9;
        java.util.HashSet $r2, $r4;
        java.net.InetAddress $r11;
        java.nio.channels.SocketChannel $r8;
        boolean $z0, $z1;
        org.slf4j.Logger $r21, $r22;
        java.nio.channels.SelectionKey $r16, $r17;
        java.util.Set r13;
        java.lang.Exception $r20;
        org.apache.zookeeper.server.ZooKeeperServer $r15, $r18;
        org.apache.zookeeper.server.NIOServerCnxn r0;
        java.lang.Object $r12;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxn;

        $r1 = r0.<org.apache.zookeeper.server.NIOServerCnxn: org.apache.zookeeper.server.NIOServerCnxnFactory factory>;

        $r2 = $r1.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.util.HashSet cnxns>;

        entermonitor $r2;

     label01:
        $r3 = r0.<org.apache.zookeeper.server.NIOServerCnxn: org.apache.zookeeper.server.NIOServerCnxnFactory factory>;

        $r4 = $r3.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.util.HashSet cnxns>;

        $z0 = virtualinvoke $r4.<java.util.HashSet: boolean remove(java.lang.Object)>(r0);

        if $z0 != 0 goto label03;

        exitmonitor $r2;

     label02:
        return;

     label03:
        $r5 = r0.<org.apache.zookeeper.server.NIOServerCnxn: org.apache.zookeeper.server.NIOServerCnxnFactory factory>;

        $r6 = $r5.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.util.HashMap ipMap>;

        entermonitor $r6;

     label04:
        $r7 = r0.<org.apache.zookeeper.server.NIOServerCnxn: org.apache.zookeeper.server.NIOServerCnxnFactory factory>;

        $r9 = $r7.<org.apache.zookeeper.server.NIOServerCnxnFactory: java.util.HashMap ipMap>;

        $r8 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SocketChannel sock>;

        $r10 = virtualinvoke $r8.<java.nio.channels.SocketChannel: java.net.Socket socket()>();

        $r11 = virtualinvoke $r10.<java.net.Socket: java.net.InetAddress getInetAddress()>();

        $r12 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r11);

        r13 = (java.util.Set) $r12;

        interfaceinvoke r13.<java.util.Set: boolean remove(java.lang.Object)>(r0);

        exitmonitor $r6;

     label05:
        goto label08;

     label06:
        $r23 := @caughtexception;

        exitmonitor $r6;

     label07:
        throw $r23;

     label08:
        $r14 = r0.<org.apache.zookeeper.server.NIOServerCnxn: org.apache.zookeeper.server.NIOServerCnxnFactory factory>;

        virtualinvoke $r14.<org.apache.zookeeper.server.NIOServerCnxnFactory: void unregisterConnection(org.apache.zookeeper.server.ServerCnxn)>(r0);

        $r15 = r0.<org.apache.zookeeper.server.NIOServerCnxn: org.apache.zookeeper.server.ZooKeeperServer zkServer>;

        if $r15 == null goto label09;

        $r18 = r0.<org.apache.zookeeper.server.NIOServerCnxn: org.apache.zookeeper.server.ZooKeeperServer zkServer>;

        virtualinvoke $r18.<org.apache.zookeeper.server.ZooKeeperServer: void removeCnxn(org.apache.zookeeper.server.ServerCnxn)>(r0);

     label09:
        specialinvoke r0.<org.apache.zookeeper.server.NIOServerCnxn: void closeSock()>();

        $r16 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SelectionKey sk>;

        if $r16 == null goto label13;

     label10:
        $r17 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SelectionKey sk>;

        virtualinvoke $r17.<java.nio.channels.SelectionKey: void cancel()>();

     label11:
        goto label13;

     label12:
        $r20 := @caughtexception;

        $r21 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        $z1 = interfaceinvoke $r21.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label13;

        $r22 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        interfaceinvoke $r22.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>("ignoring exception during selectionkey cancel", $r20);

     label13:
        exitmonitor $r2;

     label14:
        goto label17;

     label15:
        $r19 := @caughtexception;

        exitmonitor $r2;

     label16:
        throw $r19;

     label17:
        return;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Exception from label10 to label11 with label12;
        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    private void closeSock()
    {
        java.net.SocketAddress $r7;
        java.nio.channels.SocketChannel $r1, $r5, $r11, $r30, $r32, $r34;
        byte $b1;
        boolean $z0, $z1, $z2, $z3;
        org.apache.zookeeper.server.NIOServerCnxn r0;
        java.lang.StringBuilder $r2, $r4, $r8, $r9, $r13, $r14, $r16;
        java.net.Socket $r6, $r12, $r31, $r33;
        long $l0, $l2;
        java.lang.String $r10, $r15, $r29;
        org.slf4j.Logger $r3, $r18, $r19, $r21, $r22, $r24, $r25, $r27, $r28;
        java.io.IOException $r17, $r20, $r23, $r26;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxn;

        $r1 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SocketChannel sock>;

        if $r1 != null goto label01;

        return;

     label01:
        $r3 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closed socket connection for client ");

        $r5 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SocketChannel sock>;

        $r6 = virtualinvoke $r5.<java.nio.channels.SocketChannel: java.net.Socket socket()>();

        $r7 = virtualinvoke $r6.<java.net.Socket: java.net.SocketAddress getRemoteSocketAddress()>();

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $l0 = r0.<org.apache.zookeeper.server.NIOServerCnxn: long sessionId>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label02;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" which had sessionid 0x");

        $l2 = r0.<org.apache.zookeeper.server.NIOServerCnxn: long sessionId>;

        $r15 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l2);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r29 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label03;

     label02:
        $r29 = " (no session established for client)";

     label03:
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>($r10);

     label04:
        $r11 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SocketChannel sock>;

        $r12 = virtualinvoke $r11.<java.nio.channels.SocketChannel: java.net.Socket socket()>();

        virtualinvoke $r12.<java.net.Socket: void shutdownOutput()>();

     label05:
        goto label07;

     label06:
        $r26 := @caughtexception;

        $r27 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        $z3 = interfaceinvoke $r27.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z3 == 0 goto label07;

        $r28 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        interfaceinvoke $r28.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>("ignoring exception during output shutdown", $r26);

     label07:
        $r30 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SocketChannel sock>;

        $r31 = virtualinvoke $r30.<java.nio.channels.SocketChannel: java.net.Socket socket()>();

        virtualinvoke $r31.<java.net.Socket: void shutdownInput()>();

     label08:
        goto label10;

     label09:
        $r23 := @caughtexception;

        $r24 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        $z2 = interfaceinvoke $r24.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z2 == 0 goto label10;

        $r25 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        interfaceinvoke $r25.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>("ignoring exception during input shutdown", $r23);

     label10:
        $r32 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SocketChannel sock>;

        $r33 = virtualinvoke $r32.<java.nio.channels.SocketChannel: java.net.Socket socket()>();

        virtualinvoke $r33.<java.net.Socket: void close()>();

     label11:
        goto label13;

     label12:
        $r20 := @caughtexception;

        $r21 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        $z1 = interfaceinvoke $r21.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label13;

        $r22 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        interfaceinvoke $r22.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>("ignoring exception during socket close", $r20);

     label13:
        $r34 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SocketChannel sock>;

        virtualinvoke $r34.<java.nio.channels.SocketChannel: void close()>();

     label14:
        goto label16;

     label15:
        $r17 := @caughtexception;

        $r18 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        $z0 = interfaceinvoke $r18.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label16;

        $r19 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        interfaceinvoke $r19.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>("ignoring exception during socketchannel close", $r17);

     label16:
        r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SocketChannel sock> = null;

        return;

        catch java.io.IOException from label04 to label05 with label06;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.io.IOException from label13 to label14 with label15;
    }

    public synchronized void sendResponse(org.apache.zookeeper.proto.ReplyHeader, org.apache.jute.Record, java.lang.String)
    {
        java.lang.Throwable $r16, $r17;
        org.apache.jute.BinaryOutputArchive $r1;
        byte[] $r2, $r5;
        java.io.ByteArrayOutputStream $r0;
        java.nio.channels.Selector $r12;
        org.apache.zookeeper.server.NIOServerCnxnFactory $r9;
        java.nio.ByteBuffer $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String r13;
        org.slf4j.Logger $r15, $r19;
        java.nio.channels.SelectionKey $r11;
        org.apache.jute.Record r4;
        java.io.IOException $r18;
        java.lang.Exception $r14;
        org.apache.zookeeper.server.ZooKeeperServer $r10;
        org.apache.zookeeper.server.NIOServerCnxn r8;
        org.apache.zookeeper.proto.ReplyHeader r3;

        r8 := @this: org.apache.zookeeper.server.NIOServerCnxn;

        r3 := @parameter0: org.apache.zookeeper.proto.ReplyHeader;

        r4 := @parameter1: org.apache.jute.Record;

        r13 := @parameter2: java.lang.String;

     label01:
        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        $r1 = staticinvoke <org.apache.jute.BinaryOutputArchive: org.apache.jute.BinaryOutputArchive getArchive(java.io.OutputStream)>($r0);

     label02:
        $r2 = <org.apache.zookeeper.server.NIOServerCnxn: byte[] fourBytes>;

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[])>($r2);

        virtualinvoke $r1.<org.apache.jute.BinaryOutputArchive: void writeRecord(org.apache.jute.Record,java.lang.String)>(r3, "header");

        if r4 == null goto label03;

        virtualinvoke $r1.<org.apache.jute.BinaryOutputArchive: void writeRecord(org.apache.jute.Record,java.lang.String)>(r4, r13);

     label03:
        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void close()>();

     label04:
        goto label06;

     label05:
        $r18 := @caughtexception;

        $r19 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        interfaceinvoke $r19.<org.slf4j.Logger: void error(java.lang.String)>("Error serializing response");

     label06:
        $r5 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r6 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r5);

        $i0 = lengthof $r5;

        $i1 = $i0 - 4;

        $r7 = virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i1);

        virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        virtualinvoke r8.<org.apache.zookeeper.server.NIOServerCnxn: void sendBuffer(java.nio.ByteBuffer)>($r6);

        $i2 = virtualinvoke r3.<org.apache.zookeeper.proto.ReplyHeader: int getXid()>();

        if $i2 <= 0 goto label18;

        entermonitor r8;

     label07:
        $i3 = r8.<org.apache.zookeeper.server.NIOServerCnxn: int outstandingRequests>;

        $i4 = $i3 - 1;

        r8.<org.apache.zookeeper.server.NIOServerCnxn: int outstandingRequests> = $i4;

        exitmonitor r8;

     label08:
        goto label11;

     label09:
        $r17 := @caughtexception;

        exitmonitor r8;

     label10:
        throw $r17;

     label11:
        $r9 = r8.<org.apache.zookeeper.server.NIOServerCnxn: org.apache.zookeeper.server.NIOServerCnxnFactory factory>;

        entermonitor $r9;

     label12:
        $r10 = r8.<org.apache.zookeeper.server.NIOServerCnxn: org.apache.zookeeper.server.ZooKeeperServer zkServer>;

        $i5 = virtualinvoke $r10.<org.apache.zookeeper.server.ZooKeeperServer: int getInProcess()>();

        $i6 = r8.<org.apache.zookeeper.server.NIOServerCnxn: int outstandingLimit>;

        if $i5 < $i6 goto label13;

        $i7 = r8.<org.apache.zookeeper.server.NIOServerCnxn: int outstandingRequests>;

        if $i7 >= 1 goto label14;

     label13:
        $r11 = r8.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SelectionKey sk>;

        $r12 = virtualinvoke $r11.<java.nio.channels.SelectionKey: java.nio.channels.Selector selector()>();

        virtualinvoke $r12.<java.nio.channels.Selector: java.nio.channels.Selector wakeup()>();

        virtualinvoke r8.<org.apache.zookeeper.server.NIOServerCnxn: void enableRecv()>();

     label14:
        exitmonitor $r9;

     label15:
        goto label18;

     label16:
        $r16 := @caughtexception;

        exitmonitor $r9;

     label17:
        throw $r16;

     label18:
        goto label20;

     label19:
        $r14 := @caughtexception;

        $r15 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        interfaceinvoke $r15.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Unexpected exception. Destruction averted.", $r14);

     label20:
        return;

        catch java.io.IOException from label02 to label04 with label05;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch java.lang.Throwable from label12 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
        catch java.lang.Exception from label01 to label18 with label19;
    }

    public synchronized void process(org.apache.zookeeper.WatchedEvent)
    {
        long $l0;
        int $i2;
        java.lang.String $r10, $r14;
        boolean $z0;
        org.slf4j.Logger $r1, $r6;
        org.apache.zookeeper.WatchedEvent r2;
        org.apache.zookeeper.proto.WatcherEvent $r3;
        org.apache.zookeeper.server.NIOServerCnxn r4;
        java.lang.StringBuilder $r7, $r8, $r9, $r11, $r12, $r13, $r16;
        org.apache.zookeeper.proto.ReplyHeader $r15;

        r4 := @this: org.apache.zookeeper.server.NIOServerCnxn;

        r2 := @parameter0: org.apache.zookeeper.WatchedEvent;

        $r15 = new org.apache.zookeeper.proto.ReplyHeader;

        $i2 = (int) -1;

        specialinvoke $r15.<org.apache.zookeeper.proto.ReplyHeader: void <init>(int,long,int)>($i2, -1L, 0);

        $r1 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label1;

        $r6 = <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deliver event ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to 0x");

        $l0 = r4.<org.apache.zookeeper.server.NIOServerCnxn: long sessionId>;

        $r10 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" through ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.zookeeper.server.ZooTrace: void logTraceMessage(org.slf4j.Logger,long,java.lang.String)>($r6, 64L, $r14);

     label1:
        $r3 = virtualinvoke r2.<org.apache.zookeeper.WatchedEvent: org.apache.zookeeper.proto.WatcherEvent getWrapper()>();

        virtualinvoke r4.<org.apache.zookeeper.server.NIOServerCnxn: void sendResponse(org.apache.zookeeper.proto.ReplyHeader,org.apache.jute.Record,java.lang.String)>($r15, $r3, "notification");

        return;
    }

    public long getSessionId()
    {
        org.apache.zookeeper.server.NIOServerCnxn r0;
        long $l0;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxn;

        $l0 = r0.<org.apache.zookeeper.server.NIOServerCnxn: long sessionId>;

        return $l0;
    }

    public void setSessionId(long)
    {
        org.apache.zookeeper.server.NIOServerCnxn r0;
        long l0;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxn;

        l0 := @parameter0: long;

        r0.<org.apache.zookeeper.server.NIOServerCnxn: long sessionId> = l0;

        return;
    }

    public void setSessionTimeout(int)
    {
        int i0;
        org.apache.zookeeper.server.NIOServerCnxn r0;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxn;

        i0 := @parameter0: int;

        r0.<org.apache.zookeeper.server.NIOServerCnxn: int sessionTimeout> = i0;

        return;
    }

    public int getInterestOps()
    {
        java.nio.channels.SelectionKey $r1, $r2;
        int $i0;
        org.apache.zookeeper.server.NIOServerCnxn r0;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxn;

        $r1 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SelectionKey sk>;

        $z0 = virtualinvoke $r1.<java.nio.channels.SelectionKey: boolean isValid()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SelectionKey sk>;

        $i0 = virtualinvoke $r2.<java.nio.channels.SelectionKey: int interestOps()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public java.net.InetSocketAddress getRemoteSocketAddress()
    {
        java.net.Socket $r3;
        java.nio.channels.SocketChannel $r1, $r2;
        java.net.SocketAddress $r4;
        org.apache.zookeeper.server.NIOServerCnxn r0;
        java.net.InetSocketAddress $r5;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxn;

        $r1 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SocketChannel sock>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.zookeeper.server.NIOServerCnxn: java.nio.channels.SocketChannel sock>;

        $r3 = virtualinvoke $r2.<java.nio.channels.SocketChannel: java.net.Socket socket()>();

        $r4 = virtualinvoke $r3.<java.net.Socket: java.net.SocketAddress getRemoteSocketAddress()>();

        $r5 = (java.net.InetSocketAddress) $r4;

        return $r5;
    }

    protected org.apache.zookeeper.server.ServerStats serverStats()
    {
        org.apache.zookeeper.server.ZooKeeperServer $r1, $r2;
        org.apache.zookeeper.server.ServerStats $r3;
        org.apache.zookeeper.server.NIOServerCnxn r0;

        r0 := @this: org.apache.zookeeper.server.NIOServerCnxn;

        $r1 = r0.<org.apache.zookeeper.server.NIOServerCnxn: org.apache.zookeeper.server.ZooKeeperServer zkServer>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.zookeeper.server.NIOServerCnxn: org.apache.zookeeper.server.ZooKeeperServer zkServer>;

        $r3 = virtualinvoke $r2.<org.apache.zookeeper.server.ZooKeeperServer: org.apache.zookeeper.server.ServerStats serverStats()>();

        return $r3;
    }

    static void access$000(org.apache.zookeeper.server.NIOServerCnxn, java.io.PrintWriter)
    {
        java.io.PrintWriter r1;
        org.apache.zookeeper.server.NIOServerCnxn r0;

        r0 := @parameter0: org.apache.zookeeper.server.NIOServerCnxn;

        r1 := @parameter1: java.io.PrintWriter;

        specialinvoke r0.<org.apache.zookeeper.server.NIOServerCnxn: void cleanupWriterSocket(java.io.PrintWriter)>(r1);

        return;
    }

    static org.apache.zookeeper.server.ZooKeeperServer access$100(org.apache.zookeeper.server.NIOServerCnxn)
    {
        org.apache.zookeeper.server.ZooKeeperServer $r1;
        org.apache.zookeeper.server.NIOServerCnxn r0;

        r0 := @parameter0: org.apache.zookeeper.server.NIOServerCnxn;

        $r1 = r0.<org.apache.zookeeper.server.NIOServerCnxn: org.apache.zookeeper.server.ZooKeeperServer zkServer>;

        return $r1;
    }

    static void <clinit>()
    {
        byte[] $r1;
        org.slf4j.Logger $r0;

        <org.apache.zookeeper.server.NIOServerCnxn: java.lang.String ZK_NOT_SERVING> = "This ZooKeeper instance is not currently serving requests";

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/zookeeper/server/NIOServerCnxn;");

        <org.apache.zookeeper.server.NIOServerCnxn: org.slf4j.Logger LOG> = $r0;

        <org.apache.zookeeper.server.NIOServerCnxn: long nextSessionId> = 1L;

        $r1 = newarray (byte)[4];

        <org.apache.zookeeper.server.NIOServerCnxn: byte[] fourBytes> = $r1;

        return;
    }
}
