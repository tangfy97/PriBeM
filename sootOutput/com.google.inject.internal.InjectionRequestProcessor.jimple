final class com.google.inject.internal.InjectionRequestProcessor extends com.google.inject.internal.AbstractProcessor
{
    private final java.util.List staticInjections;
    private final com.google.inject.internal.Initializer initializer;

    void <init>(com.google.inject.internal.Errors, com.google.inject.internal.Initializer)
    {
        com.google.inject.internal.Errors r1;
        com.google.inject.internal.InjectionRequestProcessor r0;
        com.google.inject.internal.Initializer r3;
        java.util.ArrayList $r2;

        r0 := @this: com.google.inject.internal.InjectionRequestProcessor;

        r1 := @parameter0: com.google.inject.internal.Errors;

        r3 := @parameter1: com.google.inject.internal.Initializer;

        specialinvoke r0.<com.google.inject.internal.AbstractProcessor: void <init>(com.google.inject.internal.Errors)>(r1);

        $r2 = staticinvoke <com.google.inject.internal.util.$Lists: java.util.ArrayList newArrayList()>();

        r0.<com.google.inject.internal.InjectionRequestProcessor: java.util.List staticInjections> = $r2;

        r0.<com.google.inject.internal.InjectionRequestProcessor: com.google.inject.internal.Initializer initializer> = r3;

        return;
    }

    public java.lang.Boolean visit(com.google.inject.spi.StaticInjectionRequest)
    {
        com.google.inject.spi.StaticInjectionRequest r2;
        java.util.List $r4;
        com.google.inject.internal.InjectorImpl $r3;
        com.google.inject.internal.InjectionRequestProcessor r0;
        com.google.inject.internal.InjectionRequestProcessor$StaticInjection $r1;
        java.lang.Boolean $r5;

        r0 := @this: com.google.inject.internal.InjectionRequestProcessor;

        r2 := @parameter0: com.google.inject.spi.StaticInjectionRequest;

        $r4 = r0.<com.google.inject.internal.InjectionRequestProcessor: java.util.List staticInjections>;

        $r1 = new com.google.inject.internal.InjectionRequestProcessor$StaticInjection;

        $r3 = r0.<com.google.inject.internal.InjectionRequestProcessor: com.google.inject.internal.InjectorImpl injector>;

        specialinvoke $r1.<com.google.inject.internal.InjectionRequestProcessor$StaticInjection: void <init>(com.google.inject.internal.InjectionRequestProcessor,com.google.inject.internal.InjectorImpl,com.google.inject.spi.StaticInjectionRequest)>(r0, $r3, r2);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        return $r5;
    }

    public java.lang.Boolean visit(com.google.inject.spi.InjectionRequest)
    {
        java.util.Collection $r9;
        com.google.inject.internal.Initializer $r2;
        com.google.inject.ConfigurationException $r7;
        java.util.Set r11;
        com.google.inject.internal.Errors $r8;
        com.google.inject.internal.InjectorImpl $r3;
        com.google.inject.internal.InjectionRequestProcessor r1;
        java.lang.Boolean $r6;
        java.lang.Object $r4, $r5, $r10;
        com.google.inject.spi.InjectionRequest r0;

        r1 := @this: com.google.inject.internal.InjectionRequestProcessor;

        r0 := @parameter0: com.google.inject.spi.InjectionRequest;

     label1:
        r11 = virtualinvoke r0.<com.google.inject.spi.InjectionRequest: java.util.Set getInjectionPoints()>();

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = r1.<com.google.inject.internal.InjectionRequestProcessor: com.google.inject.internal.Errors errors>;

        $r9 = virtualinvoke $r7.<com.google.inject.ConfigurationException: java.util.Collection getErrorMessages()>();

        virtualinvoke $r8.<com.google.inject.internal.Errors: com.google.inject.internal.Errors merge(java.util.Collection)>($r9);

        $r10 = virtualinvoke $r7.<com.google.inject.ConfigurationException: java.lang.Object getPartialValue()>();

        r11 = (java.util.Set) $r10;

     label4:
        $r2 = r1.<com.google.inject.internal.InjectionRequestProcessor: com.google.inject.internal.Initializer initializer>;

        $r3 = r1.<com.google.inject.internal.InjectionRequestProcessor: com.google.inject.internal.InjectorImpl injector>;

        $r4 = virtualinvoke r0.<com.google.inject.spi.InjectionRequest: java.lang.Object getInstance()>();

        $r5 = virtualinvoke r0.<com.google.inject.spi.InjectionRequest: java.lang.Object getSource()>();

        virtualinvoke $r2.<com.google.inject.internal.Initializer: com.google.inject.internal.Initializable requestInjection(com.google.inject.internal.InjectorImpl,java.lang.Object,java.lang.Object,java.util.Set)>($r3, $r4, $r5, r11);

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        return $r6;

        catch com.google.inject.ConfigurationException from label1 to label2 with label3;
    }

    void validate()
    {
        java.util.List $r1;
        java.util.Iterator $r2;
        com.google.inject.internal.InjectionRequestProcessor r0;
        com.google.inject.internal.InjectionRequestProcessor$StaticInjection r4;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: com.google.inject.internal.InjectionRequestProcessor;

        $r1 = r0.<com.google.inject.internal.InjectionRequestProcessor: java.util.List staticInjections>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.google.inject.internal.InjectionRequestProcessor$StaticInjection) $r3;

        virtualinvoke r4.<com.google.inject.internal.InjectionRequestProcessor$StaticInjection: void validate()>();

        goto label1;

     label2:
        return;
    }

    void injectMembers()
    {
        java.util.List $r1;
        java.util.Iterator $r2;
        com.google.inject.internal.InjectionRequestProcessor r0;
        com.google.inject.internal.InjectionRequestProcessor$StaticInjection r4;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: com.google.inject.internal.InjectionRequestProcessor;

        $r1 = r0.<com.google.inject.internal.InjectionRequestProcessor: java.util.List staticInjections>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.google.inject.internal.InjectionRequestProcessor$StaticInjection) $r3;

        virtualinvoke r4.<com.google.inject.internal.InjectionRequestProcessor$StaticInjection: void injectMembers()>();

        goto label1;

     label2:
        return;
    }

    public volatile java.lang.Object visit(com.google.inject.spi.StaticInjectionRequest)
    {
        com.google.inject.spi.StaticInjectionRequest r1;
        com.google.inject.internal.InjectionRequestProcessor r0;
        java.lang.Boolean $r2;

        r0 := @this: com.google.inject.internal.InjectionRequestProcessor;

        r1 := @parameter0: com.google.inject.spi.StaticInjectionRequest;

        $r2 = virtualinvoke r0.<com.google.inject.internal.InjectionRequestProcessor: java.lang.Boolean visit(com.google.inject.spi.StaticInjectionRequest)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visit(com.google.inject.spi.InjectionRequest)
    {
        com.google.inject.internal.InjectionRequestProcessor r0;
        java.lang.Boolean $r2;
        com.google.inject.spi.InjectionRequest r1;

        r0 := @this: com.google.inject.internal.InjectionRequestProcessor;

        r1 := @parameter0: com.google.inject.spi.InjectionRequest;

        $r2 = virtualinvoke r0.<com.google.inject.internal.InjectionRequestProcessor: java.lang.Boolean visit(com.google.inject.spi.InjectionRequest)>(r1);

        return $r2;
    }
}
