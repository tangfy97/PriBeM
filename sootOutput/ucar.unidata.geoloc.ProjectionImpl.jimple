public abstract class ucar.unidata.geoloc.ProjectionImpl extends java.lang.Object implements ucar.unidata.geoloc.Projection, java.lang.Cloneable, java.io.Serializable
{
    public static final java.lang.String ATTR_NAME;
    public static final double EARTH_RADIUS;
    public static final int INDEX_LAT;
    public static final int INDEX_LON;
    public static final int INDEX_X;
    public static final int INDEX_Y;
    protected static final double TOLERANCE;
    public static final double PI;
    public static final double PI_OVER_2;
    public static final double PI_OVER_4;
    protected java.lang.String name;
    protected boolean isLatLon;
    protected java.util.List atts;
    protected ucar.unidata.geoloc.ProjectionRect defaultMapArea;
    private static java.lang.String header;

    public void <init>()
    {
        ucar.unidata.geoloc.ProjectionImpl r0;
        ucar.unidata.geoloc.ProjectionRect $r2;
        java.util.ArrayList $r1;

        r0 := @this: ucar.unidata.geoloc.ProjectionImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.unidata.geoloc.ProjectionImpl: java.lang.String name> = "";

        r0.<ucar.unidata.geoloc.ProjectionImpl: boolean isLatLon> = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<ucar.unidata.geoloc.ProjectionImpl: java.util.List atts> = $r1;

        $r2 = new ucar.unidata.geoloc.ProjectionRect;

        specialinvoke $r2.<ucar.unidata.geoloc.ProjectionRect: void <init>()>();

        r0.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionRect defaultMapArea> = $r2;

        return;
    }

    public abstract ucar.unidata.geoloc.ProjectionImpl constructCopy();

    public java.lang.String getClassName()
    {
        int $i0, $i1;
        java.lang.Class $r1;
        java.lang.String $r2, r3;
        ucar.unidata.geoloc.ProjectionImpl r0;

        r0 := @this: ucar.unidata.geoloc.ProjectionImpl;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        r3 = $r2;

        $i0 = virtualinvoke $r2.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

        if $i0 < 0 goto label1;

        $i1 = $i0 + 1;

        r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i1);

     label1:
        return r3;
    }

    public abstract java.lang.String paramsToString();

    public java.lang.String getProjectionTypeLabel()
    {
        java.lang.String $r1;
        ucar.unidata.geoloc.ProjectionImpl r0;

        r0 := @this: ucar.unidata.geoloc.ProjectionImpl;

        $r1 = virtualinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: java.lang.String getClassName()>();

        return $r1;
    }

    public abstract ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint, ucar.unidata.geoloc.ProjectionPointImpl);

    public abstract ucar.unidata.geoloc.LatLonPoint projToLatLon(ucar.unidata.geoloc.ProjectionPoint, ucar.unidata.geoloc.LatLonPointImpl);

    public ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint)
    {
        ucar.unidata.geoloc.LatLonPoint r1;
        ucar.unidata.geoloc.ProjectionPointImpl $r2;
        ucar.unidata.geoloc.ProjectionImpl r0;
        ucar.unidata.geoloc.ProjectionPoint $r3;

        r0 := @this: ucar.unidata.geoloc.ProjectionImpl;

        r1 := @parameter0: ucar.unidata.geoloc.LatLonPoint;

        $r2 = new ucar.unidata.geoloc.ProjectionPointImpl;

        specialinvoke $r2.<ucar.unidata.geoloc.ProjectionPointImpl: void <init>()>();

        $r3 = virtualinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint,ucar.unidata.geoloc.ProjectionPointImpl)>(r1, $r2);

        return $r3;
    }

    public ucar.unidata.geoloc.LatLonPoint projToLatLon(ucar.unidata.geoloc.ProjectionPoint)
    {
        ucar.unidata.geoloc.LatLonPoint $r3;
        ucar.unidata.geoloc.LatLonPointImpl $r2;
        ucar.unidata.geoloc.ProjectionImpl r0;
        ucar.unidata.geoloc.ProjectionPoint r1;

        r0 := @this: ucar.unidata.geoloc.ProjectionImpl;

        r1 := @parameter0: ucar.unidata.geoloc.ProjectionPoint;

        $r2 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r2.<ucar.unidata.geoloc.LatLonPointImpl: void <init>()>();

        $r3 = virtualinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.LatLonPoint projToLatLon(ucar.unidata.geoloc.ProjectionPoint,ucar.unidata.geoloc.LatLonPointImpl)>(r1, $r2);

        return $r3;
    }

    public abstract boolean crossSeam(ucar.unidata.geoloc.ProjectionPoint, ucar.unidata.geoloc.ProjectionPoint);

    public abstract boolean equals(java.lang.Object);

    public java.lang.String getName()
    {
        java.lang.String $r1;
        ucar.unidata.geoloc.ProjectionImpl r0;

        r0 := @this: ucar.unidata.geoloc.ProjectionImpl;

        $r1 = r0.<ucar.unidata.geoloc.ProjectionImpl: java.lang.String name>;

        return $r1;
    }

    public void setName(java.lang.String)
    {
        java.lang.String r1;
        ucar.unidata.geoloc.ProjectionImpl r0;

        r0 := @this: ucar.unidata.geoloc.ProjectionImpl;

        r1 := @parameter0: java.lang.String;

        r0.<ucar.unidata.geoloc.ProjectionImpl: java.lang.String name> = r1;

        return;
    }

    public java.util.List getProjectionParameters()
    {
        java.util.List $r1;
        ucar.unidata.geoloc.ProjectionImpl r0;

        r0 := @this: ucar.unidata.geoloc.ProjectionImpl;

        $r1 = r0.<ucar.unidata.geoloc.ProjectionImpl: java.util.List atts>;

        return $r1;
    }

    protected void addParameter(java.lang.String, java.lang.String)
    {
        java.util.List $r4;
        java.lang.String r2, r3;
        ucar.unidata.geoloc.ProjectionImpl r0;
        ucar.unidata.util.Parameter $r1;

        r0 := @this: ucar.unidata.geoloc.ProjectionImpl;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r4 = r0.<ucar.unidata.geoloc.ProjectionImpl: java.util.List atts>;

        $r1 = new ucar.unidata.util.Parameter;

        specialinvoke $r1.<ucar.unidata.util.Parameter: void <init>(java.lang.String,java.lang.String)>(r2, r3);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    protected void addParameter(java.lang.String, double)
    {
        java.util.List $r3;
        java.lang.String r2;
        ucar.unidata.geoloc.ProjectionImpl r0;
        ucar.unidata.util.Parameter $r1;
        double d0;

        r0 := @this: ucar.unidata.geoloc.ProjectionImpl;

        r2 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        $r3 = r0.<ucar.unidata.geoloc.ProjectionImpl: java.util.List atts>;

        $r1 = new ucar.unidata.util.Parameter;

        specialinvoke $r1.<ucar.unidata.util.Parameter: void <init>(java.lang.String,double)>(r2, d0);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    protected void addParameter(ucar.unidata.util.Parameter)
    {
        java.util.List $r2;
        ucar.unidata.geoloc.ProjectionImpl r0;
        ucar.unidata.util.Parameter r1;

        r0 := @this: ucar.unidata.geoloc.ProjectionImpl;

        r1 := @parameter0: ucar.unidata.util.Parameter;

        $r2 = r0.<ucar.unidata.geoloc.ProjectionImpl: java.util.List atts>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public boolean isLatLon()
    {
        ucar.unidata.geoloc.ProjectionImpl r0;
        boolean $z0;

        r0 := @this: ucar.unidata.geoloc.ProjectionImpl;

        $z0 = r0.<ucar.unidata.geoloc.ProjectionImpl: boolean isLatLon>;

        return $z0;
    }

    public static java.lang.String getHeader()
    {
        java.lang.StringBuilder $r2;
        java.lang.String $r0, $r1, $r3;

        $r0 = <ucar.unidata.geoloc.ProjectionImpl: java.lang.String header>;

        if $r0 != null goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(60);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Name");

        staticinvoke <ucar.unidata.util.Format: void tab(java.lang.StringBuilder,int,boolean)>($r2, 20, 1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Class");

        staticinvoke <ucar.unidata.util.Format: void tab(java.lang.StringBuilder,int,boolean)>($r2, 40, 1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parameters");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        <ucar.unidata.geoloc.ProjectionImpl: java.lang.String header> = $r3;

     label1:
        $r1 = <ucar.unidata.geoloc.ProjectionImpl: java.lang.String header>;

        return $r1;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        ucar.unidata.geoloc.ProjectionImpl r0;

        r0 := @this: ucar.unidata.geoloc.ProjectionImpl;

        $r1 = virtualinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: java.lang.String getName()>();

        return $r1;
    }

    public java.lang.Object clone()
    {
        ucar.unidata.geoloc.ProjectionRect $r4, $r5;
        java.lang.Object $r1;
        java.lang.String $r3;
        ucar.unidata.geoloc.ProjectionImpl r0, r2;
        java.lang.CloneNotSupportedException $r6;

        r0 := @this: ucar.unidata.geoloc.ProjectionImpl;

     label1:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r2 = (ucar.unidata.geoloc.ProjectionImpl) $r1;

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        return null;

     label4:
        $r3 = r0.<ucar.unidata.geoloc.ProjectionImpl: java.lang.String name>;

        r2.<ucar.unidata.geoloc.ProjectionImpl: java.lang.String name> = $r3;

        $r4 = new ucar.unidata.geoloc.ProjectionRect;

        $r5 = r0.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionRect defaultMapArea>;

        specialinvoke $r4.<ucar.unidata.geoloc.ProjectionRect: void <init>(java.awt.geom.Rectangle2D)>($r5);

        r2.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionRect defaultMapArea> = $r4;

        return r2;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public ucar.unidata.geoloc.ProjectionRect getDefaultMapArea()
    {
        ucar.unidata.geoloc.ProjectionImpl r0;
        ucar.unidata.geoloc.ProjectionRect $r1;

        r0 := @this: ucar.unidata.geoloc.ProjectionImpl;

        $r1 = r0.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionRect defaultMapArea>;

        return $r1;
    }

    public ucar.unidata.geoloc.LatLonRect getDefaultMapAreaLL()
    {
        ucar.unidata.geoloc.LatLonRect $r2;
        ucar.unidata.geoloc.ProjectionImpl r0;
        ucar.unidata.geoloc.ProjectionRect $r1;

        r0 := @this: ucar.unidata.geoloc.ProjectionImpl;

        $r1 = r0.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionRect defaultMapArea>;

        $r2 = virtualinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.LatLonRect projToLatLonBB(ucar.unidata.geoloc.ProjectionRect)>($r1);

        return $r2;
    }

    public void setDefaultMapArea(ucar.unidata.geoloc.ProjectionRect)
    {
        ucar.unidata.geoloc.ProjectionRect r0, $r3;
        java.lang.Object $r2;
        ucar.unidata.geoloc.ProjectionImpl r1;

        r1 := @this: ucar.unidata.geoloc.ProjectionImpl;

        r0 := @parameter0: ucar.unidata.geoloc.ProjectionRect;

        if r0 != null goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<ucar.unidata.geoloc.ProjectionRect: java.lang.Object clone()>();

        $r3 = (ucar.unidata.geoloc.ProjectionRect) $r2;

        r1.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionRect defaultMapArea> = $r3;

        return;
    }

    public ucar.unidata.geoloc.ProjectionPointImpl latLonToProj(double, double)
    {
        ucar.unidata.geoloc.ProjectionPointImpl $r3;
        ucar.unidata.geoloc.LatLonPointImpl $r1;
        ucar.unidata.geoloc.ProjectionImpl r0;
        double d0, d1;
        ucar.unidata.geoloc.ProjectionPoint $r2;

        r0 := @this: ucar.unidata.geoloc.ProjectionImpl;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r1 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r1.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>(d0, d1);

        $r2 = virtualinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint)>($r1);

        $r3 = (ucar.unidata.geoloc.ProjectionPointImpl) $r2;

        return $r3;
    }

    public ucar.unidata.geoloc.LatLonPointImpl projToLatLon(double, double)
    {
        ucar.unidata.geoloc.LatLonPoint $r2;
        ucar.unidata.geoloc.ProjectionPointImpl $r1;
        ucar.unidata.geoloc.LatLonPointImpl $r3;
        ucar.unidata.geoloc.ProjectionImpl r0;
        double d0, d1;

        r0 := @this: ucar.unidata.geoloc.ProjectionImpl;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r1 = new ucar.unidata.geoloc.ProjectionPointImpl;

        specialinvoke $r1.<ucar.unidata.geoloc.ProjectionPointImpl: void <init>(double,double)>(d0, d1);

        $r2 = virtualinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.LatLonPoint projToLatLon(ucar.unidata.geoloc.ProjectionPoint)>($r1);

        $r3 = (ucar.unidata.geoloc.LatLonPointImpl) $r2;

        return $r3;
    }

    public double[][] projToLatLon(double[][])
    {
        double[] $r2;
        int $i0;
        ucar.unidata.geoloc.ProjectionImpl r0;
        double[][] r1, $r3, $r4;

        r0 := @this: ucar.unidata.geoloc.ProjectionImpl;

        r1 := @parameter0: double[][];

        $r2 = r1[0];

        $i0 = lengthof $r2;

        $r3 = newmultiarray (double)[2][$i0];

        $r4 = virtualinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: double[][] projToLatLon(double[][],double[][])>(r1, $r3);

        return $r4;
    }

    public double[][] projToLatLon(double[][], double[][])
    {
        double[] $r4, $r5, $r6, $r8, $r9, $r11, $r12;
        ucar.unidata.geoloc.ProjectionImpl r7;
        int $i0, $i1, $i2, $i3, $i4, i5;
        double $d0, $d1, $d2, $d3;
        java.lang.IllegalArgumentException $r1, $r3, $r13;
        ucar.unidata.geoloc.LatLonPointImpl $r10;
        double[][] r0, r2;

        r7 := @this: ucar.unidata.geoloc.ProjectionImpl;

        r0 := @parameter0: double[][];

        r2 := @parameter1: double[][];

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 == 2 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ProjectionImpl.projToLatLon:null array argument or wrong dimension (from)");

        throw $r1;

     label2:
        if r2 == null goto label3;

        $i1 = lengthof r2;

        if $i1 == 2 goto label4;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ProjectionImpl.projToLatLon:null array argument or wrong dimension (to)");

        throw $r3;

     label4:
        $r4 = r0[0];

        $i3 = lengthof $r4;

        $r5 = r2[0];

        $i2 = lengthof $r5;

        if $i3 == $i2 goto label5;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ProjectionImpl.projToLatLon:from array not same length as to array");

        throw $r13;

     label5:
        i5 = 0;

     label6:
        $r6 = r0[0];

        $i4 = lengthof $r6;

        if i5 >= $i4 goto label7;

        $r8 = r0[0];

        $d1 = $r8[i5];

        $r9 = r0[1];

        $d0 = $r9[i5];

        $r10 = virtualinvoke r7.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.LatLonPointImpl projToLatLon(double,double)>($d1, $d0);

        $r11 = r2[0];

        $d2 = interfaceinvoke $r10.<ucar.unidata.geoloc.LatLonPoint: double getLatitude()>();

        $r11[i5] = $d2;

        $r12 = r2[1];

        $d3 = interfaceinvoke $r10.<ucar.unidata.geoloc.LatLonPoint: double getLongitude()>();

        $r12[i5] = $d3;

        i5 = i5 + 1;

        goto label6;

     label7:
        return r2;
    }

    public float[][] projToLatLon(float[][])
    {
        float[][] r1, $r3, $r4;
        int $i0;
        float[] $r2;
        ucar.unidata.geoloc.ProjectionImpl r0;

        r0 := @this: ucar.unidata.geoloc.ProjectionImpl;

        r1 := @parameter0: float[][];

        $r2 = r1[0];

        $i0 = lengthof $r2;

        $r3 = newmultiarray (float)[2][$i0];

        $r4 = virtualinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: float[][] projToLatLon(float[][],float[][])>(r1, $r3);

        return $r4;
    }

    public float[][] projToLatLon(float[][], float[][])
    {
        float[] $r4, $r5, $r8, $r9, $r10, $r12, $r13;
        ucar.unidata.geoloc.ProjectionImpl r11;
        ucar.unidata.geoloc.ProjectionPointImpl $r6;
        int $i0, $i1, $i2, $i3, $i4, i5;
        double $d0, $d1, $d2, $d3;
        float[][] r0, r2;
        java.lang.IllegalArgumentException $r1, $r3, $r14;
        float $f0, $f1, $f2, $f3;
        ucar.unidata.geoloc.LatLonPointImpl $r7;

        r11 := @this: ucar.unidata.geoloc.ProjectionImpl;

        r0 := @parameter0: float[][];

        r2 := @parameter1: float[][];

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 == 2 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ProjectionImpl.projToLatLon:null array argument or wrong dimension (from)");

        throw $r1;

     label2:
        if r2 == null goto label3;

        $i1 = lengthof r2;

        if $i1 == 2 goto label4;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ProjectionImpl.projToLatLon:null array argument or wrong dimension (to)");

        throw $r3;

     label4:
        $r4 = r0[0];

        $i3 = lengthof $r4;

        $r5 = r2[0];

        $i2 = lengthof $r5;

        if $i3 == $i2 goto label5;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ProjectionImpl.projToLatLon:from array not same length as to array");

        throw $r14;

     label5:
        $r6 = new ucar.unidata.geoloc.ProjectionPointImpl;

        specialinvoke $r6.<ucar.unidata.geoloc.ProjectionPointImpl: void <init>()>();

        $r7 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r7.<ucar.unidata.geoloc.LatLonPointImpl: void <init>()>();

        i5 = 0;

     label6:
        $r8 = r0[0];

        $i4 = lengthof $r8;

        if i5 >= $i4 goto label7;

        $r9 = r0[0];

        $f0 = $r9[i5];

        $d1 = (double) $f0;

        $r10 = r0[1];

        $f1 = $r10[i5];

        $d0 = (double) $f1;

        virtualinvoke $r6.<ucar.unidata.geoloc.ProjectionPointImpl: void setLocation(double,double)>($d1, $d0);

        virtualinvoke r11.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.LatLonPoint projToLatLon(ucar.unidata.geoloc.ProjectionPoint,ucar.unidata.geoloc.LatLonPointImpl)>($r6, $r7);

        $r12 = r2[0];

        $d2 = virtualinvoke $r7.<ucar.unidata.geoloc.LatLonPointImpl: double getLatitude()>();

        $f2 = (float) $d2;

        $r12[i5] = $f2;

        $r13 = r2[1];

        $d3 = virtualinvoke $r7.<ucar.unidata.geoloc.LatLonPointImpl: double getLongitude()>();

        $f3 = (float) $d3;

        $r13[i5] = $f3;

        i5 = i5 + 1;

        goto label6;

     label7:
        return r2;
    }

    public double[][] latLonToProj(double[][])
    {
        double[] $r2;
        int $i0;
        ucar.unidata.geoloc.ProjectionImpl r0;
        double[][] r1, $r3, $r4;

        r0 := @this: ucar.unidata.geoloc.ProjectionImpl;

        r1 := @parameter0: double[][];

        $r2 = r1[0];

        $i0 = lengthof $r2;

        $r3 = newmultiarray (double)[2][$i0];

        $r4 = virtualinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: double[][] latLonToProj(double[][],double[][])>(r1, $r3);

        return $r4;
    }

    public double[][] latLonToProj(double[][], double[][])
    {
        ucar.unidata.geoloc.ProjectionImpl r0;
        double[][] r1, r2, $r3;

        r0 := @this: ucar.unidata.geoloc.ProjectionImpl;

        r1 := @parameter0: double[][];

        r2 := @parameter1: double[][];

        $r3 = virtualinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: double[][] latLonToProj(double[][],double[][],int,int)>(r1, r2, 0, 1);

        return $r3;
    }

    public double[][] latLonToProj(double[][], int, int)
    {
        double[] $r2;
        ucar.unidata.geoloc.ProjectionImpl r0;
        int $i0, i1, i2;
        double[][] r1, $r3, $r4;

        r0 := @this: ucar.unidata.geoloc.ProjectionImpl;

        r1 := @parameter0: double[][];

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r2 = r1[0];

        $i0 = lengthof $r2;

        $r3 = newmultiarray (double)[2][$i0];

        $r4 = virtualinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: double[][] latLonToProj(double[][],double[][],int,int)>(r1, $r3, i1, i2);

        return $r4;
    }

    public double[][] latLonToProj(double[][], double[][], int, int)
    {
        double[] $r4, $r5, $r8, $r9, $r10, $r12, $r13;
        ucar.unidata.geoloc.ProjectionImpl r11;
        ucar.unidata.geoloc.ProjectionPointImpl $r6;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7;
        double $d0, $d1, $d2, $d3;
        java.lang.IllegalArgumentException $r1, $r3, $r14;
        ucar.unidata.geoloc.LatLonPointImpl $r7;
        double[][] r0, r2;

        r11 := @this: ucar.unidata.geoloc.ProjectionImpl;

        r0 := @parameter0: double[][];

        r2 := @parameter1: double[][];

        i5 := @parameter2: int;

        i6 := @parameter3: int;

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 == 2 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ProjectionImpl.latLonToProj:null array argument or wrong dimension (from)");

        throw $r1;

     label2:
        if r2 == null goto label3;

        $i1 = lengthof r2;

        if $i1 == 2 goto label4;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ProjectionImpl.latLonToProj:null array argument or wrong dimension (to)");

        throw $r3;

     label4:
        $r4 = r0[0];

        $i3 = lengthof $r4;

        $r5 = r2[0];

        $i2 = lengthof $r5;

        if $i3 == $i2 goto label5;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ProjectionImpl.latLonToProj:from array not same length as to array");

        throw $r14;

     label5:
        $r6 = new ucar.unidata.geoloc.ProjectionPointImpl;

        specialinvoke $r6.<ucar.unidata.geoloc.ProjectionPointImpl: void <init>()>();

        $r7 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r7.<ucar.unidata.geoloc.LatLonPointImpl: void <init>()>();

        i7 = 0;

     label6:
        $r8 = r0[0];

        $i4 = lengthof $r8;

        if i7 >= $i4 goto label7;

        $r9 = r0[i5];

        $d0 = $r9[i7];

        virtualinvoke $r7.<ucar.unidata.geoloc.LatLonPointImpl: void setLatitude(double)>($d0);

        $r10 = r0[i6];

        $d1 = $r10[i7];

        virtualinvoke $r7.<ucar.unidata.geoloc.LatLonPointImpl: void setLongitude(double)>($d1);

        virtualinvoke r11.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint,ucar.unidata.geoloc.ProjectionPointImpl)>($r7, $r6);

        $r12 = r2[0];

        $d2 = virtualinvoke $r6.<ucar.unidata.geoloc.ProjectionPointImpl: double getX()>();

        $r12[i7] = $d2;

        $r13 = r2[1];

        $d3 = virtualinvoke $r6.<ucar.unidata.geoloc.ProjectionPointImpl: double getY()>();

        $r13[i7] = $d3;

        i7 = i7 + 1;

        goto label6;

     label7:
        return r2;
    }

    public float[][] latLonToProj(float[][])
    {
        float[][] r1, $r3, $r4;
        int $i0;
        float[] $r2;
        ucar.unidata.geoloc.ProjectionImpl r0;

        r0 := @this: ucar.unidata.geoloc.ProjectionImpl;

        r1 := @parameter0: float[][];

        $r2 = r1[0];

        $i0 = lengthof $r2;

        $r3 = newmultiarray (float)[2][$i0];

        $r4 = virtualinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: float[][] latLonToProj(float[][],float[][])>(r1, $r3);

        return $r4;
    }

    public float[][] latLonToProj(float[][], float[][])
    {
        float[][] r1, r2, $r3;
        ucar.unidata.geoloc.ProjectionImpl r0;

        r0 := @this: ucar.unidata.geoloc.ProjectionImpl;

        r1 := @parameter0: float[][];

        r2 := @parameter1: float[][];

        $r3 = virtualinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: float[][] latLonToProj(float[][],float[][],int,int)>(r1, r2, 0, 1);

        return $r3;
    }

    public float[][] latLonToProj(float[][], int, int)
    {
        float[][] r1, $r3, $r4;
        float[] $r2;
        ucar.unidata.geoloc.ProjectionImpl r0;
        int $i0, i1, i2;

        r0 := @this: ucar.unidata.geoloc.ProjectionImpl;

        r1 := @parameter0: float[][];

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r2 = r1[0];

        $i0 = lengthof $r2;

        $r3 = newmultiarray (float)[2][$i0];

        $r4 = virtualinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: float[][] latLonToProj(float[][],float[][],int,int)>(r1, $r3, i1, i2);

        return $r4;
    }

    public float[][] latLonToProj(float[][], float[][], int, int)
    {
        float[] $r4, $r5, $r8, $r9, $r10, $r12, $r13;
        ucar.unidata.geoloc.ProjectionImpl r11;
        ucar.unidata.geoloc.ProjectionPointImpl $r6;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7;
        double $d0, $d1, $d2, $d3;
        float[][] r0, r2;
        java.lang.IllegalArgumentException $r1, $r3, $r14;
        float $f0, $f1, $f2, $f3;
        ucar.unidata.geoloc.LatLonPointImpl $r7;

        r11 := @this: ucar.unidata.geoloc.ProjectionImpl;

        r0 := @parameter0: float[][];

        r2 := @parameter1: float[][];

        i5 := @parameter2: int;

        i6 := @parameter3: int;

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 == 2 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ProjectionImpl.latLonToProj:null array argument or wrong dimension (from)");

        throw $r1;

     label2:
        if r2 == null goto label3;

        $i1 = lengthof r2;

        if $i1 == 2 goto label4;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ProjectionImpl.latLonToProj:null array argument or wrong dimension (to)");

        throw $r3;

     label4:
        $r4 = r0[0];

        $i3 = lengthof $r4;

        $r5 = r2[0];

        $i2 = lengthof $r5;

        if $i3 == $i2 goto label5;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ProjectionImpl.latLonToProj:from array not same length as to array");

        throw $r14;

     label5:
        $r6 = new ucar.unidata.geoloc.ProjectionPointImpl;

        specialinvoke $r6.<ucar.unidata.geoloc.ProjectionPointImpl: void <init>()>();

        $r7 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r7.<ucar.unidata.geoloc.LatLonPointImpl: void <init>()>();

        i7 = 0;

     label6:
        $r8 = r0[0];

        $i4 = lengthof $r8;

        if i7 >= $i4 goto label7;

        $r9 = r0[i5];

        $f0 = $r9[i7];

        $d0 = (double) $f0;

        virtualinvoke $r7.<ucar.unidata.geoloc.LatLonPointImpl: void setLatitude(double)>($d0);

        $r10 = r0[i6];

        $f1 = $r10[i7];

        $d1 = (double) $f1;

        virtualinvoke $r7.<ucar.unidata.geoloc.LatLonPointImpl: void setLongitude(double)>($d1);

        virtualinvoke r11.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint,ucar.unidata.geoloc.ProjectionPointImpl)>($r7, $r6);

        $r12 = r2[0];

        $d2 = virtualinvoke $r6.<ucar.unidata.geoloc.ProjectionPointImpl: double getX()>();

        $f2 = (float) $d2;

        $r12[i7] = $f2;

        $r13 = r2[1];

        $d3 = virtualinvoke $r6.<ucar.unidata.geoloc.ProjectionPointImpl: double getY()>();

        $f3 = (float) $d3;

        $r13[i7] = $f3;

        i7 = i7 + 1;

        goto label6;

     label7:
        return r2;
    }

    ucar.unidata.geoloc.ProjectionRect latLonToProjBB2(ucar.unidata.geoloc.LatLonRect)
    {
        ucar.unidata.geoloc.ProjectionImpl r5;
        ucar.unidata.geoloc.ProjectionPointImpl $r6, $r8, $r10, $r12;
        boolean $z0;
        ucar.unidata.geoloc.ProjectionRect $r14;
        ucar.unidata.geoloc.ProjectionPoint $r7, $r9, $r11, $r13;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, d16, d17, d18, d19;
        ucar.unidata.geoloc.LatLonRect r0;
        ucar.unidata.geoloc.LatLonPointImpl $r1, $r2, $r3, $r4;

        r5 := @this: ucar.unidata.geoloc.ProjectionImpl;

        r0 := @parameter0: ucar.unidata.geoloc.LatLonRect;

        $r1 = virtualinvoke r0.<ucar.unidata.geoloc.LatLonRect: ucar.unidata.geoloc.LatLonPointImpl getLowerLeftPoint()>();

        $r2 = virtualinvoke r0.<ucar.unidata.geoloc.LatLonRect: ucar.unidata.geoloc.LatLonPointImpl getUpperRightPoint()>();

        $r3 = virtualinvoke r0.<ucar.unidata.geoloc.LatLonRect: ucar.unidata.geoloc.LatLonPointImpl getLowerRightPoint()>();

        $r4 = virtualinvoke r0.<ucar.unidata.geoloc.LatLonRect: ucar.unidata.geoloc.LatLonPointImpl getUpperLeftPoint()>();

        $z0 = virtualinvoke r5.<ucar.unidata.geoloc.ProjectionImpl: boolean isLatLon()>();

        if $z0 == 0 goto label1;

        $d8 = virtualinvoke $r1.<ucar.unidata.geoloc.LatLonPointImpl: double getLongitude()>();

        $d9 = virtualinvoke $r4.<ucar.unidata.geoloc.LatLonPointImpl: double getLongitude()>();

        d16 = specialinvoke r5.<ucar.unidata.geoloc.ProjectionImpl: double getMinOrMaxLon(double,double,boolean)>($d8, $d9, 1);

        $d10 = virtualinvoke $r1.<ucar.unidata.geoloc.LatLonPointImpl: double getLatitude()>();

        $d11 = virtualinvoke $r3.<ucar.unidata.geoloc.LatLonPointImpl: double getLatitude()>();

        d17 = staticinvoke <java.lang.Math: double min(double,double)>($d10, $d11);

        $d12 = virtualinvoke $r2.<ucar.unidata.geoloc.LatLonPointImpl: double getLongitude()>();

        $d13 = virtualinvoke $r3.<ucar.unidata.geoloc.LatLonPointImpl: double getLongitude()>();

        d18 = specialinvoke r5.<ucar.unidata.geoloc.ProjectionImpl: double getMinOrMaxLon(double,double,boolean)>($d12, $d13, 0);

        $d14 = virtualinvoke $r4.<ucar.unidata.geoloc.LatLonPointImpl: double getLatitude()>();

        $d15 = virtualinvoke $r2.<ucar.unidata.geoloc.LatLonPointImpl: double getLatitude()>();

        d19 = staticinvoke <java.lang.Math: double min(double,double)>($d14, $d15);

        goto label2;

     label1:
        $r6 = new ucar.unidata.geoloc.ProjectionPointImpl;

        specialinvoke $r6.<ucar.unidata.geoloc.ProjectionPointImpl: void <init>()>();

        $r7 = virtualinvoke r5.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint,ucar.unidata.geoloc.ProjectionPointImpl)>($r1, $r6);

        $r8 = new ucar.unidata.geoloc.ProjectionPointImpl;

        specialinvoke $r8.<ucar.unidata.geoloc.ProjectionPointImpl: void <init>()>();

        $r9 = virtualinvoke r5.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint,ucar.unidata.geoloc.ProjectionPointImpl)>($r2, $r8);

        $r10 = new ucar.unidata.geoloc.ProjectionPointImpl;

        specialinvoke $r10.<ucar.unidata.geoloc.ProjectionPointImpl: void <init>()>();

        $r11 = virtualinvoke r5.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint,ucar.unidata.geoloc.ProjectionPointImpl)>($r3, $r10);

        $r12 = new ucar.unidata.geoloc.ProjectionPointImpl;

        specialinvoke $r12.<ucar.unidata.geoloc.ProjectionPointImpl: void <init>()>();

        $r13 = virtualinvoke r5.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint,ucar.unidata.geoloc.ProjectionPointImpl)>($r4, $r12);

        $d0 = interfaceinvoke $r7.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $d1 = interfaceinvoke $r13.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        d16 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d1);

        $d2 = interfaceinvoke $r7.<ucar.unidata.geoloc.ProjectionPoint: double getY()>();

        $d3 = interfaceinvoke $r11.<ucar.unidata.geoloc.ProjectionPoint: double getY()>();

        d17 = staticinvoke <java.lang.Math: double min(double,double)>($d2, $d3);

        $d4 = interfaceinvoke $r9.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $d5 = interfaceinvoke $r11.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        d18 = staticinvoke <java.lang.Math: double max(double,double)>($d4, $d5);

        $d6 = interfaceinvoke $r13.<ucar.unidata.geoloc.ProjectionPoint: double getY()>();

        $d7 = interfaceinvoke $r9.<ucar.unidata.geoloc.ProjectionPoint: double getY()>();

        d19 = staticinvoke <java.lang.Math: double max(double,double)>($d6, $d7);

     label2:
        $r14 = new ucar.unidata.geoloc.ProjectionRect;

        specialinvoke $r14.<ucar.unidata.geoloc.ProjectionRect: void <init>(double,double,double,double)>(d16, d17, d18, d19);

        return $r14;
    }

    private double getMinOrMaxLon(double, double, boolean)
    {
        ucar.unidata.geoloc.ProjectionImpl r0;
        double $d0, d1, $d2, $d3, d4, d5, $d6;
        boolean z0;

        r0 := @this: ucar.unidata.geoloc.ProjectionImpl;

        d4 := @parameter0: double;

        d5 := @parameter1: double;

        z0 := @parameter2: boolean;

        $d0 = d4 + d5;

        d1 = $d0 / 2.0;

        $d2 = staticinvoke <ucar.unidata.geoloc.LatLonPointImpl: double lonNormal(double,double)>(d4, d1);

        $d3 = staticinvoke <ucar.unidata.geoloc.LatLonPointImpl: double lonNormal(double,double)>(d5, d1);

        if z0 == 0 goto label1;

        $d6 = staticinvoke <java.lang.Math: double min(double,double)>($d2, $d3);

        goto label2;

     label1:
        $d6 = staticinvoke <java.lang.Math: double max(double,double)>($d2, $d3);

     label2:
        return $d6;
    }

    public ucar.unidata.geoloc.ProjectionRect latLonToProjBB(ucar.unidata.geoloc.LatLonRect)
    {
        ucar.unidata.geoloc.ProjectionRect $r6;
        ucar.unidata.geoloc.ProjectionImpl r0;
        ucar.unidata.geoloc.ProjectionPointImpl $r1, $r2;
        boolean $z0;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;
        ucar.unidata.geoloc.LatLonRect r3;
        ucar.unidata.geoloc.LatLonPointImpl $r4, $r5, $r7, $r8;
        ucar.unidata.geoloc.projection.LatLonProjection r9;

        r0 := @this: ucar.unidata.geoloc.ProjectionImpl;

        r3 := @parameter0: ucar.unidata.geoloc.LatLonRect;

        $z0 = r0.<ucar.unidata.geoloc.ProjectionImpl: boolean isLatLon>;

        if $z0 == 0 goto label1;

        r9 = (ucar.unidata.geoloc.projection.LatLonProjection) r0;

        $d8 = virtualinvoke r3.<ucar.unidata.geoloc.LatLonRect: double getCenterLon()>();

        virtualinvoke r9.<ucar.unidata.geoloc.projection.LatLonProjection: double setCenterLon(double)>($d8);

     label1:
        $r1 = new ucar.unidata.geoloc.ProjectionPointImpl;

        specialinvoke $r1.<ucar.unidata.geoloc.ProjectionPointImpl: void <init>()>();

        $r2 = new ucar.unidata.geoloc.ProjectionPointImpl;

        specialinvoke $r2.<ucar.unidata.geoloc.ProjectionPointImpl: void <init>()>();

        $r4 = virtualinvoke r3.<ucar.unidata.geoloc.LatLonRect: ucar.unidata.geoloc.LatLonPointImpl getLowerLeftPoint()>();

        $r5 = virtualinvoke r3.<ucar.unidata.geoloc.LatLonRect: ucar.unidata.geoloc.LatLonPointImpl getUpperRightPoint()>();

        virtualinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint,ucar.unidata.geoloc.ProjectionPointImpl)>($r4, $r1);

        virtualinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint,ucar.unidata.geoloc.ProjectionPointImpl)>($r5, $r2);

        $r6 = new ucar.unidata.geoloc.ProjectionRect;

        $d0 = virtualinvoke $r1.<ucar.unidata.geoloc.ProjectionPointImpl: double getX()>();

        $d1 = virtualinvoke $r1.<ucar.unidata.geoloc.ProjectionPointImpl: double getY()>();

        $d2 = virtualinvoke $r2.<ucar.unidata.geoloc.ProjectionPointImpl: double getX()>();

        $d3 = virtualinvoke $r2.<ucar.unidata.geoloc.ProjectionPointImpl: double getY()>();

        specialinvoke $r6.<ucar.unidata.geoloc.ProjectionRect: void <init>(double,double,double,double)>($d0, $d1, $d2, $d3);

        $r7 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r7.<ucar.unidata.geoloc.LatLonPointImpl: void <init>()>();

        $r8 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r8.<ucar.unidata.geoloc.LatLonPointImpl: void <init>()>();

        $d4 = interfaceinvoke $r5.<ucar.unidata.geoloc.LatLonPoint: double getLatitude()>();

        virtualinvoke $r7.<ucar.unidata.geoloc.LatLonPointImpl: void setLatitude(double)>($d4);

        $d5 = interfaceinvoke $r4.<ucar.unidata.geoloc.LatLonPoint: double getLongitude()>();

        virtualinvoke $r7.<ucar.unidata.geoloc.LatLonPointImpl: void setLongitude(double)>($d5);

        virtualinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint,ucar.unidata.geoloc.ProjectionPointImpl)>($r7, $r1);

        virtualinvoke $r6.<ucar.unidata.geoloc.ProjectionRect: void add(java.awt.geom.Point2D)>($r1);

        $d6 = interfaceinvoke $r4.<ucar.unidata.geoloc.LatLonPoint: double getLatitude()>();

        virtualinvoke $r8.<ucar.unidata.geoloc.LatLonPointImpl: void setLatitude(double)>($d6);

        $d7 = interfaceinvoke $r5.<ucar.unidata.geoloc.LatLonPoint: double getLongitude()>();

        virtualinvoke $r8.<ucar.unidata.geoloc.LatLonPointImpl: void setLongitude(double)>($d7);

        virtualinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint,ucar.unidata.geoloc.ProjectionPointImpl)>($r8, $r2);

        virtualinvoke $r6.<ucar.unidata.geoloc.ProjectionRect: void add(java.awt.geom.Point2D)>($r2);

        return $r6;
    }

    public ucar.unidata.geoloc.LatLonRect projToLatLonBB(ucar.unidata.geoloc.ProjectionRect)
    {
        ucar.unidata.geoloc.ProjectionRect r0;
        ucar.unidata.geoloc.ProjectionImpl r5;
        ucar.unidata.geoloc.LatLonRect $r6;
        ucar.unidata.geoloc.ProjectionPointImpl $r7, $r8;
        ucar.unidata.geoloc.LatLonPointImpl $r3, $r4;
        ucar.unidata.geoloc.ProjectionPoint $r1, $r2;
        double $d0, $d1, $d2, $d3;

        r5 := @this: ucar.unidata.geoloc.ProjectionImpl;

        r0 := @parameter0: ucar.unidata.geoloc.ProjectionRect;

        $r1 = virtualinvoke r0.<ucar.unidata.geoloc.ProjectionRect: ucar.unidata.geoloc.ProjectionPoint getMinPoint()>();

        $r2 = virtualinvoke r0.<ucar.unidata.geoloc.ProjectionRect: ucar.unidata.geoloc.ProjectionPoint getMaxPoint()>();

        $r3 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r3.<ucar.unidata.geoloc.LatLonPointImpl: void <init>()>();

        $r4 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r4.<ucar.unidata.geoloc.LatLonPointImpl: void <init>()>();

        virtualinvoke r5.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.LatLonPoint projToLatLon(ucar.unidata.geoloc.ProjectionPoint,ucar.unidata.geoloc.LatLonPointImpl)>($r1, $r3);

        virtualinvoke r5.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.LatLonPoint projToLatLon(ucar.unidata.geoloc.ProjectionPoint,ucar.unidata.geoloc.LatLonPointImpl)>($r2, $r4);

        $r6 = new ucar.unidata.geoloc.LatLonRect;

        specialinvoke $r6.<ucar.unidata.geoloc.LatLonRect: void <init>(ucar.unidata.geoloc.LatLonPoint,ucar.unidata.geoloc.LatLonPoint)>($r3, $r4);

        $r7 = new ucar.unidata.geoloc.ProjectionPointImpl;

        specialinvoke $r7.<ucar.unidata.geoloc.ProjectionPointImpl: void <init>()>();

        $r8 = new ucar.unidata.geoloc.ProjectionPointImpl;

        specialinvoke $r8.<ucar.unidata.geoloc.ProjectionPointImpl: void <init>()>();

        $d0 = interfaceinvoke $r1.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $d1 = interfaceinvoke $r2.<ucar.unidata.geoloc.ProjectionPoint: double getY()>();

        virtualinvoke $r7.<ucar.unidata.geoloc.ProjectionPointImpl: void setLocation(double,double)>($d0, $d1);

        virtualinvoke r5.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.LatLonPoint projToLatLon(ucar.unidata.geoloc.ProjectionPoint,ucar.unidata.geoloc.LatLonPointImpl)>($r7, $r3);

        virtualinvoke $r6.<ucar.unidata.geoloc.LatLonRect: void extend(ucar.unidata.geoloc.LatLonPoint)>($r3);

        $d2 = interfaceinvoke $r2.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $d3 = interfaceinvoke $r1.<ucar.unidata.geoloc.ProjectionPoint: double getY()>();

        virtualinvoke $r8.<ucar.unidata.geoloc.ProjectionPointImpl: void setLocation(double,double)>($d2, $d3);

        virtualinvoke r5.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.LatLonPoint projToLatLon(ucar.unidata.geoloc.ProjectionPoint,ucar.unidata.geoloc.LatLonPointImpl)>($r8, $r4);

        virtualinvoke $r6.<ucar.unidata.geoloc.LatLonRect: void extend(ucar.unidata.geoloc.LatLonPoint)>($r4);

        return $r6;
    }

    public ucar.unidata.geoloc.LatLonRect getLatLonBoundingBox(ucar.unidata.geoloc.ProjectionRect)
    {
        ucar.unidata.geoloc.ProjectionImpl r0;
        ucar.unidata.geoloc.ProjectionRect r1;
        ucar.unidata.geoloc.ProjectionPoint $r2, $r6, $r10, $r14;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        ucar.unidata.geoloc.LatLonPoint $r4, $r8, $r12, $r16;
        ucar.unidata.geoloc.LatLonRect $r18, $r19, $r21, r23;
        ucar.unidata.geoloc.LatLonPointImpl $r3, r5, $r7, r9, $r11, r13, $r15, r17, $r20, $r22;

        r0 := @this: ucar.unidata.geoloc.ProjectionImpl;

        r1 := @parameter0: ucar.unidata.geoloc.ProjectionRect;

        $r2 = virtualinvoke r1.<ucar.unidata.geoloc.ProjectionRect: ucar.unidata.geoloc.ProjectionPoint getLowerLeftPoint()>();

        $r3 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r3.<ucar.unidata.geoloc.LatLonPointImpl: void <init>()>();

        $r4 = virtualinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.LatLonPoint projToLatLon(ucar.unidata.geoloc.ProjectionPoint,ucar.unidata.geoloc.LatLonPointImpl)>($r2, $r3);

        r5 = (ucar.unidata.geoloc.LatLonPointImpl) $r4;

        $r6 = virtualinvoke r1.<ucar.unidata.geoloc.ProjectionRect: ucar.unidata.geoloc.ProjectionPoint getLowerRightPoint()>();

        $r7 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r7.<ucar.unidata.geoloc.LatLonPointImpl: void <init>()>();

        $r8 = virtualinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.LatLonPoint projToLatLon(ucar.unidata.geoloc.ProjectionPoint,ucar.unidata.geoloc.LatLonPointImpl)>($r6, $r7);

        r9 = (ucar.unidata.geoloc.LatLonPointImpl) $r8;

        $r10 = virtualinvoke r1.<ucar.unidata.geoloc.ProjectionRect: ucar.unidata.geoloc.ProjectionPoint getUpperRightPoint()>();

        $r11 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r11.<ucar.unidata.geoloc.LatLonPointImpl: void <init>()>();

        $r12 = virtualinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.LatLonPoint projToLatLon(ucar.unidata.geoloc.ProjectionPoint,ucar.unidata.geoloc.LatLonPointImpl)>($r10, $r11);

        r13 = (ucar.unidata.geoloc.LatLonPointImpl) $r12;

        $r14 = virtualinvoke r1.<ucar.unidata.geoloc.ProjectionRect: ucar.unidata.geoloc.ProjectionPoint getUpperLeftPoint()>();

        $r15 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r15.<ucar.unidata.geoloc.LatLonPointImpl: void <init>()>();

        $r16 = virtualinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.LatLonPoint projToLatLon(ucar.unidata.geoloc.ProjectionPoint,ucar.unidata.geoloc.LatLonPointImpl)>($r14, $r15);

        r17 = (ucar.unidata.geoloc.LatLonPointImpl) $r16;

        if 0 == 0 goto label1;

        if 0 != 0 goto label1;

        $r21 = new ucar.unidata.geoloc.LatLonRect;

        $r22 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r22.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>(90.0, 0.0);

        specialinvoke $r21.<ucar.unidata.geoloc.LatLonRect: void <init>(ucar.unidata.geoloc.LatLonPoint,ucar.unidata.geoloc.LatLonPoint)>(r5, $r22);

        r23 = $r21;

        virtualinvoke $r21.<ucar.unidata.geoloc.LatLonRect: void extend(ucar.unidata.geoloc.LatLonPoint)>(r9);

        virtualinvoke $r21.<ucar.unidata.geoloc.LatLonRect: void extend(ucar.unidata.geoloc.LatLonPoint)>(r13);

        virtualinvoke $r21.<ucar.unidata.geoloc.LatLonRect: void extend(ucar.unidata.geoloc.LatLonPoint)>(r17);

        goto label3;

     label1:
        if 0 == 0 goto label2;

        if 0 != 0 goto label2;

        $r19 = new ucar.unidata.geoloc.LatLonRect;

        $r20 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r20.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>(-90.0, -180.0);

        specialinvoke $r19.<ucar.unidata.geoloc.LatLonRect: void <init>(ucar.unidata.geoloc.LatLonPoint,ucar.unidata.geoloc.LatLonPoint)>(r5, $r20);

        r23 = $r19;

        virtualinvoke $r19.<ucar.unidata.geoloc.LatLonRect: void extend(ucar.unidata.geoloc.LatLonPoint)>(r9);

        virtualinvoke $r19.<ucar.unidata.geoloc.LatLonRect: void extend(ucar.unidata.geoloc.LatLonPoint)>(r13);

        virtualinvoke $r19.<ucar.unidata.geoloc.LatLonRect: void extend(ucar.unidata.geoloc.LatLonPoint)>(r17);

        goto label3;

     label2:
        $d0 = virtualinvoke r5.<ucar.unidata.geoloc.LatLonPointImpl: double getLatitude()>();

        $d1 = virtualinvoke r9.<ucar.unidata.geoloc.LatLonPointImpl: double getLatitude()>();

        $d2 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d1);

        $d3 = virtualinvoke r17.<ucar.unidata.geoloc.LatLonPointImpl: double getLatitude()>();

        $d4 = virtualinvoke r13.<ucar.unidata.geoloc.LatLonPointImpl: double getLatitude()>();

        $d5 = staticinvoke <java.lang.Math: double max(double,double)>($d3, $d4);

        $d6 = virtualinvoke r5.<ucar.unidata.geoloc.LatLonPointImpl: double getLongitude()>();

        $d7 = virtualinvoke r17.<ucar.unidata.geoloc.LatLonPointImpl: double getLongitude()>();

        $d8 = specialinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: double getMinOrMaxLon(double,double,boolean)>($d6, $d7, 1);

        $d9 = virtualinvoke r9.<ucar.unidata.geoloc.LatLonPointImpl: double getLongitude()>();

        $d10 = virtualinvoke r13.<ucar.unidata.geoloc.LatLonPointImpl: double getLongitude()>();

        $d11 = specialinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: double getMinOrMaxLon(double,double,boolean)>($d9, $d10, 0);

        virtualinvoke r5.<ucar.unidata.geoloc.LatLonPointImpl: void set(double,double)>($d2, $d8);

        virtualinvoke r13.<ucar.unidata.geoloc.LatLonPointImpl: void set(double,double)>($d5, $d11);

        $r18 = new ucar.unidata.geoloc.LatLonRect;

        specialinvoke $r18.<ucar.unidata.geoloc.LatLonRect: void <init>(ucar.unidata.geoloc.LatLonPoint,ucar.unidata.geoloc.LatLonPoint)>(r5, r13);

        r23 = $r18;

     label3:
        return r23;
    }

    static void <clinit>()
    {
        double $d0, $d1;

        <ucar.unidata.geoloc.ProjectionImpl: double PI_OVER_4> = 0.7853981633974483;

        <ucar.unidata.geoloc.ProjectionImpl: double PI_OVER_2> = 1.5707963267948966;

        <ucar.unidata.geoloc.ProjectionImpl: double PI> = 3.141592653589793;

        <ucar.unidata.geoloc.ProjectionImpl: double TOLERANCE> = 1.0E-6;

        <ucar.unidata.geoloc.ProjectionImpl: int INDEX_Y> = 1;

        <ucar.unidata.geoloc.ProjectionImpl: int INDEX_X> = 0;

        <ucar.unidata.geoloc.ProjectionImpl: int INDEX_LON> = 1;

        <ucar.unidata.geoloc.ProjectionImpl: int INDEX_LAT> = 0;

        <ucar.unidata.geoloc.ProjectionImpl: java.lang.String ATTR_NAME> = "grid_mapping_name";

        $d0 = staticinvoke <ucar.unidata.geoloc.Earth: double getRadius()>();

        $d1 = $d0 * 0.001;

        <ucar.unidata.geoloc.ProjectionImpl: double EARTH_RADIUS> = $d1;

        <ucar.unidata.geoloc.ProjectionImpl: java.lang.String header> = null;

        return;
    }
}
