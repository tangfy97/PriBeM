public final class org.waveprotocol.box.server.rpc.FetchProfilesServlet extends javax.servlet.http.HttpServlet
{
    private static final java.util.logging.Logger LOG;
    private final org.waveprotocol.box.server.robots.util.ConversationUtil conversationUtil;
    private final com.google.wave.api.data.converter.EventDataConverterManager converterManager;
    private final org.waveprotocol.box.server.waveserver.WaveletProvider waveletProvider;
    private final org.waveprotocol.box.server.authentication.SessionManager sessionManager;
    private final org.waveprotocol.box.server.robots.OperationServiceRegistry operationRegistry;
    private final org.waveprotocol.box.server.rpc.ProtoSerializer serializer;

    private static org.waveprotocol.box.profile.ProfilesProto$ProfileRequest parseProfileRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
    {
        javax.servlet.http.HttpServletResponse r8;
        java.lang.String[] $r3;
        java.util.ArrayList $r5;
        javax.servlet.http.HttpServletRequest r0;
        org.waveprotocol.box.profile.ProfilesProto$ProfileRequest$Builder $r4, $r6;
        java.lang.String $r1, $r2;
        org.waveprotocol.box.profile.ProfilesProto$ProfileRequest $r7;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        r8 := @parameter1: javax.servlet.http.HttpServletResponse;

        $r1 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getParameter(java.lang.String)>("addresses");

        $r2 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r1, "UTF-8");

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $r4 = staticinvoke <org.waveprotocol.box.profile.ProfilesProto$ProfileRequest: org.waveprotocol.box.profile.ProfilesProto$ProfileRequest$Builder newBuilder()>();

        $r5 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>($r3);

        $r6 = virtualinvoke $r4.<org.waveprotocol.box.profile.ProfilesProto$ProfileRequest$Builder: org.waveprotocol.box.profile.ProfilesProto$ProfileRequest$Builder addAllAddresses(java.lang.Iterable)>($r5);

        $r7 = virtualinvoke $r6.<org.waveprotocol.box.profile.ProfilesProto$ProfileRequest$Builder: org.waveprotocol.box.profile.ProfilesProto$ProfileRequest build()>();

        return $r7;
    }

    private static org.waveprotocol.box.profile.ProfilesProto$ProfileResponse serializeProfileResult(com.google.wave.api.FetchProfilesResult)
    {
        com.google.wave.api.FetchProfilesResult r1;
        java.lang.String $r8, $r10, $r12, $r14;
        boolean $z0;
        java.util.Iterator $r3;
        com.google.wave.api.ParticipantProfile r6;
        org.waveprotocol.box.profile.ProfilesProto$ProfileResponse$Builder $r0;
        java.util.List $r2;
        org.waveprotocol.box.profile.ProfilesProto$ProfileResponse $r4;
        java.lang.Object $r5;
        org.waveprotocol.box.profile.ProfilesProto$ProfileResponse$FetchedProfile$Builder $r7, $r9, $r11, $r13, $r15;
        org.waveprotocol.box.profile.ProfilesProto$ProfileResponse$FetchedProfile $r16;

        r1 := @parameter0: com.google.wave.api.FetchProfilesResult;

        $r0 = staticinvoke <org.waveprotocol.box.profile.ProfilesProto$ProfileResponse: org.waveprotocol.box.profile.ProfilesProto$ProfileResponse$Builder newBuilder()>();

        $r2 = virtualinvoke r1.<com.google.wave.api.FetchProfilesResult: java.util.List getProfiles()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.google.wave.api.ParticipantProfile) $r5;

        $r7 = staticinvoke <org.waveprotocol.box.profile.ProfilesProto$ProfileResponse$FetchedProfile: org.waveprotocol.box.profile.ProfilesProto$ProfileResponse$FetchedProfile$Builder newBuilder()>();

        $r8 = virtualinvoke r6.<com.google.wave.api.ParticipantProfile: java.lang.String getAddress()>();

        $r9 = virtualinvoke $r7.<org.waveprotocol.box.profile.ProfilesProto$ProfileResponse$FetchedProfile$Builder: org.waveprotocol.box.profile.ProfilesProto$ProfileResponse$FetchedProfile$Builder setAddress(java.lang.String)>($r8);

        $r10 = virtualinvoke r6.<com.google.wave.api.ParticipantProfile: java.lang.String getImageUrl()>();

        $r11 = virtualinvoke $r9.<org.waveprotocol.box.profile.ProfilesProto$ProfileResponse$FetchedProfile$Builder: org.waveprotocol.box.profile.ProfilesProto$ProfileResponse$FetchedProfile$Builder setImageUrl(java.lang.String)>($r10);

        $r12 = virtualinvoke r6.<com.google.wave.api.ParticipantProfile: java.lang.String getName()>();

        $r13 = virtualinvoke $r11.<org.waveprotocol.box.profile.ProfilesProto$ProfileResponse$FetchedProfile$Builder: org.waveprotocol.box.profile.ProfilesProto$ProfileResponse$FetchedProfile$Builder setName(java.lang.String)>($r12);

        $r14 = virtualinvoke r6.<com.google.wave.api.ParticipantProfile: java.lang.String getProfileUrl()>();

        $r15 = virtualinvoke $r13.<org.waveprotocol.box.profile.ProfilesProto$ProfileResponse$FetchedProfile$Builder: org.waveprotocol.box.profile.ProfilesProto$ProfileResponse$FetchedProfile$Builder setProfileUrl(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<org.waveprotocol.box.profile.ProfilesProto$ProfileResponse$FetchedProfile$Builder: org.waveprotocol.box.profile.ProfilesProto$ProfileResponse$FetchedProfile build()>();

        virtualinvoke $r0.<org.waveprotocol.box.profile.ProfilesProto$ProfileResponse$Builder: org.waveprotocol.box.profile.ProfilesProto$ProfileResponse$Builder addProfiles(org.waveprotocol.box.profile.ProfilesProto$ProfileResponse$FetchedProfile)>($r16);

        goto label1;

     label2:
        $r4 = virtualinvoke $r0.<org.waveprotocol.box.profile.ProfilesProto$ProfileResponse$Builder: org.waveprotocol.box.profile.ProfilesProto$ProfileResponse build()>();

        return $r4;
    }

    public void <init>(org.waveprotocol.box.server.authentication.SessionManager, com.google.wave.api.data.converter.EventDataConverterManager, org.waveprotocol.box.server.robots.OperationServiceRegistry, org.waveprotocol.box.server.waveserver.WaveletProvider, org.waveprotocol.box.server.robots.util.ConversationUtil, org.waveprotocol.box.server.rpc.ProtoSerializer)
    {
        org.waveprotocol.box.server.authentication.SessionManager r4;
        com.google.wave.api.data.converter.EventDataConverterManager r1;
        org.waveprotocol.box.server.robots.util.ConversationUtil r3;
        org.waveprotocol.box.server.rpc.FetchProfilesServlet r0;
        org.waveprotocol.box.server.waveserver.WaveletProvider r2;
        org.waveprotocol.box.server.rpc.ProtoSerializer r6;
        org.waveprotocol.box.server.robots.OperationServiceRegistry r5;

        r0 := @this: org.waveprotocol.box.server.rpc.FetchProfilesServlet;

        r4 := @parameter0: org.waveprotocol.box.server.authentication.SessionManager;

        r1 := @parameter1: com.google.wave.api.data.converter.EventDataConverterManager;

        r5 := @parameter2: org.waveprotocol.box.server.robots.OperationServiceRegistry;

        r2 := @parameter3: org.waveprotocol.box.server.waveserver.WaveletProvider;

        r3 := @parameter4: org.waveprotocol.box.server.robots.util.ConversationUtil;

        r6 := @parameter5: org.waveprotocol.box.server.rpc.ProtoSerializer;

        specialinvoke r0.<javax.servlet.http.HttpServlet: void <init>()>();

        r0.<org.waveprotocol.box.server.rpc.FetchProfilesServlet: com.google.wave.api.data.converter.EventDataConverterManager converterManager> = r1;

        r0.<org.waveprotocol.box.server.rpc.FetchProfilesServlet: org.waveprotocol.box.server.waveserver.WaveletProvider waveletProvider> = r2;

        r0.<org.waveprotocol.box.server.rpc.FetchProfilesServlet: org.waveprotocol.box.server.robots.util.ConversationUtil conversationUtil> = r3;

        r0.<org.waveprotocol.box.server.rpc.FetchProfilesServlet: org.waveprotocol.box.server.authentication.SessionManager sessionManager> = r4;

        r0.<org.waveprotocol.box.server.rpc.FetchProfilesServlet: org.waveprotocol.box.server.robots.OperationServiceRegistry operationRegistry> = r5;

        r0.<org.waveprotocol.box.server.rpc.FetchProfilesServlet: org.waveprotocol.box.server.rpc.ProtoSerializer serializer> = r6;

        return;
    }

    protected void doGet(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.io.IOException
    {
        javax.servlet.http.HttpSession $r3;
        javax.servlet.http.HttpServletResponse r5;
        org.waveprotocol.wave.model.wave.ParticipantId $r4;
        org.waveprotocol.box.server.authentication.SessionManager $r2;
        javax.servlet.http.HttpServletRequest r1;
        org.waveprotocol.box.server.rpc.FetchProfilesServlet r0;
        org.waveprotocol.box.profile.ProfilesProto$ProfileResponse $r7;
        org.waveprotocol.box.profile.ProfilesProto$ProfileRequest $r6;

        r0 := @this: org.waveprotocol.box.server.rpc.FetchProfilesServlet;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r5 := @parameter1: javax.servlet.http.HttpServletResponse;

        $r2 = r0.<org.waveprotocol.box.server.rpc.FetchProfilesServlet: org.waveprotocol.box.server.authentication.SessionManager sessionManager>;

        $r3 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: javax.servlet.http.HttpSession getSession(boolean)>(0);

        $r4 = interfaceinvoke $r2.<org.waveprotocol.box.server.authentication.SessionManager: org.waveprotocol.wave.model.wave.ParticipantId getLoggedInUser(javax.servlet.http.HttpSession)>($r3);

        if $r4 != null goto label1;

        interfaceinvoke r5.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(403);

        return;

     label1:
        $r6 = staticinvoke <org.waveprotocol.box.server.rpc.FetchProfilesServlet: org.waveprotocol.box.profile.ProfilesProto$ProfileRequest parseProfileRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r5);

        $r7 = specialinvoke r0.<org.waveprotocol.box.server.rpc.FetchProfilesServlet: org.waveprotocol.box.profile.ProfilesProto$ProfileResponse fetchProfiles(org.waveprotocol.box.profile.ProfilesProto$ProfileRequest,org.waveprotocol.wave.model.wave.ParticipantId)>($r6, $r4);

        specialinvoke r0.<org.waveprotocol.box.server.rpc.FetchProfilesServlet: void printJson(com.google.protobuf.MessageLite,javax.servlet.http.HttpServletResponse)>($r7, r5);

        return;
    }

    private org.waveprotocol.box.profile.ProfilesProto$ProfileResponse fetchProfiles(org.waveprotocol.box.profile.ProfilesProto$ProfileRequest, org.waveprotocol.wave.model.wave.ParticipantId)
    {
        org.waveprotocol.wave.model.wave.ParticipantId r3;
        java.util.logging.Level $r0;
        com.google.wave.api.FetchProfilesResult $r6;
        int $i0;
        java.lang.String $r12, $r19, $r21;
        boolean $z0;
        java.util.logging.Logger $r1, $r8, $r15;
        java.util.List $r5, $r10, $r18;
        org.waveprotocol.box.server.rpc.FetchProfilesServlet r2;
        org.waveprotocol.box.profile.ProfilesProto$ProfileResponse $r13;
        java.lang.StringBuilder $r7, $r9, $r11, $r14, $r16, $r20;
        org.waveprotocol.box.profile.ProfilesProto$ProfileRequest r4;
        com.google.common.base.Joiner $r17;

        r2 := @this: org.waveprotocol.box.server.rpc.FetchProfilesServlet;

        r4 := @parameter0: org.waveprotocol.box.profile.ProfilesProto$ProfileRequest;

        r3 := @parameter1: org.waveprotocol.wave.model.wave.ParticipantId;

        $r1 = <org.waveprotocol.box.server.rpc.FetchProfilesServlet: java.util.logging.Logger LOG>;

        $r0 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r1.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r0);

        if $z0 == 0 goto label1;

        $r15 = <org.waveprotocol.box.server.rpc.FetchProfilesServlet: java.util.logging.Logger LOG>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fetching profiles: ");

        $r17 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(java.lang.String)>(",");

        $r18 = virtualinvoke r4.<org.waveprotocol.box.profile.ProfilesProto$ProfileRequest: java.util.List getAddressesList()>();

        $r19 = virtualinvoke $r17.<com.google.common.base.Joiner: java.lang.String join(java.lang.Iterable)>($r18);

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.util.logging.Logger: void fine(java.lang.String)>($r21);

     label1:
        $r5 = virtualinvoke r4.<org.waveprotocol.box.profile.ProfilesProto$ProfileRequest: java.util.List getAddressesList()>();

        $r6 = specialinvoke r2.<org.waveprotocol.box.server.rpc.FetchProfilesServlet: com.google.wave.api.FetchProfilesResult fetchProfilesFromService(org.waveprotocol.wave.model.wave.ParticipantId,java.util.List)>(r3, $r5);

        $r8 = <org.waveprotocol.box.server.rpc.FetchProfilesServlet: java.util.logging.Logger LOG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fetched profiles: ");

        $r10 = virtualinvoke $r6.<com.google.wave.api.FetchProfilesResult: java.util.List getProfiles()>();

        $i0 = interfaceinvoke $r10.<java.util.List: int size()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.util.logging.Logger: void fine(java.lang.String)>($r12);

        $r13 = staticinvoke <org.waveprotocol.box.server.rpc.FetchProfilesServlet: org.waveprotocol.box.profile.ProfilesProto$ProfileResponse serializeProfileResult(com.google.wave.api.FetchProfilesResult)>($r6);

        return $r13;
    }

    private com.google.wave.api.FetchProfilesResult fetchProfilesFromService(org.waveprotocol.wave.model.wave.ParticipantId, java.util.List)
    {
        com.google.wave.api.data.converter.EventDataConverterManager $r6;
        com.google.wave.api.OperationRequest r12;
        org.waveprotocol.box.server.waveserver.WaveletProvider $r7;
        com.google.wave.api.JsonRpcResponse r18;
        org.waveprotocol.wave.model.wave.ParticipantId r14;
        com.google.wave.api.FetchProfilesResult r22;
        com.google.wave.api.data.converter.EventDataConverter $r8;
        java.util.Map $r16, $r19;
        java.lang.String $r13;
        org.waveprotocol.box.server.robots.OperationServiceRegistry $r15;
        com.google.wave.api.JsonRpcConstant$ParamsProperty $r20;
        org.waveprotocol.box.server.robots.util.ConversationUtil $r9;
        org.waveprotocol.box.server.robots.OperationContextImpl $r3;
        java.util.List r2, $r10;
        com.google.wave.api.OperationQueue $r0;
        org.waveprotocol.box.server.rpc.FetchProfilesServlet r4;
        com.google.wave.api.ProtocolVersion $r5;
        com.google.wave.api.FetchProfilesRequest $r1;
        java.lang.Object $r11, $r17, $r21;

        r4 := @this: org.waveprotocol.box.server.rpc.FetchProfilesServlet;

        r14 := @parameter0: org.waveprotocol.wave.model.wave.ParticipantId;

        r2 := @parameter1: java.util.List;

        $r0 = new com.google.wave.api.OperationQueue;

        specialinvoke $r0.<com.google.wave.api.OperationQueue: void <init>()>();

        $r1 = new com.google.wave.api.FetchProfilesRequest;

        specialinvoke $r1.<com.google.wave.api.FetchProfilesRequest: void <init>(java.util.List)>(r2);

        virtualinvoke $r0.<com.google.wave.api.OperationQueue: void fetchProfiles(com.google.wave.api.FetchProfilesRequest)>($r1);

        $r3 = new org.waveprotocol.box.server.robots.OperationContextImpl;

        $r7 = r4.<org.waveprotocol.box.server.rpc.FetchProfilesServlet: org.waveprotocol.box.server.waveserver.WaveletProvider waveletProvider>;

        $r6 = r4.<org.waveprotocol.box.server.rpc.FetchProfilesServlet: com.google.wave.api.data.converter.EventDataConverterManager converterManager>;

        $r5 = <com.google.wave.api.ProtocolVersion: com.google.wave.api.ProtocolVersion DEFAULT>;

        $r8 = virtualinvoke $r6.<com.google.wave.api.data.converter.EventDataConverterManager: com.google.wave.api.data.converter.EventDataConverter getEventDataConverter(com.google.wave.api.ProtocolVersion)>($r5);

        $r9 = r4.<org.waveprotocol.box.server.rpc.FetchProfilesServlet: org.waveprotocol.box.server.robots.util.ConversationUtil conversationUtil>;

        specialinvoke $r3.<org.waveprotocol.box.server.robots.OperationContextImpl: void <init>(org.waveprotocol.box.server.waveserver.WaveletProvider,com.google.wave.api.data.converter.EventDataConverter,org.waveprotocol.box.server.robots.util.ConversationUtil)>($r7, $r8, $r9);

        $r10 = virtualinvoke $r0.<com.google.wave.api.OperationQueue: java.util.List getPendingOperations()>();

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(0);

        r12 = (com.google.wave.api.OperationRequest) $r11;

        $r13 = virtualinvoke r12.<com.google.wave.api.OperationRequest: java.lang.String getId()>();

        $r15 = r4.<org.waveprotocol.box.server.rpc.FetchProfilesServlet: org.waveprotocol.box.server.robots.OperationServiceRegistry operationRegistry>;

        staticinvoke <org.waveprotocol.box.server.robots.util.OperationUtil: void executeOperation(com.google.wave.api.OperationRequest,org.waveprotocol.box.server.robots.OperationServiceRegistry,org.waveprotocol.box.server.robots.OperationContext,org.waveprotocol.wave.model.wave.ParticipantId)>(r12, $r15, $r3, r14);

        $r16 = virtualinvoke $r3.<org.waveprotocol.box.server.robots.OperationContextImpl: java.util.Map getResponses()>();

        $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>($r13);

        r18 = (com.google.wave.api.JsonRpcResponse) $r17;

        $r19 = virtualinvoke r18.<com.google.wave.api.JsonRpcResponse: java.util.Map getData()>();

        $r20 = <com.google.wave.api.JsonRpcConstant$ParamsProperty: com.google.wave.api.JsonRpcConstant$ParamsProperty FETCH_PROFILES_RESULT>;

        $r21 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>($r20);

        r22 = (com.google.wave.api.FetchProfilesResult) $r21;

        return r22;
    }

    private void printJson(com.google.protobuf.MessageLite, javax.servlet.http.HttpServletResponse) throws java.io.IOException
    {
        java.io.PrintWriter $r2;
        javax.servlet.http.HttpServletResponse r1;
        java.io.IOException $r8;
        org.waveprotocol.box.server.rpc.ProtoSerializer$SerializationException $r7;
        org.waveprotocol.box.server.rpc.ProtoSerializer $r4;
        com.google.gson.JsonElement $r5;
        com.google.protobuf.MessageLite r0;
        org.waveprotocol.box.server.rpc.FetchProfilesServlet r3;
        java.lang.String $r6;

        r3 := @this: org.waveprotocol.box.server.rpc.FetchProfilesServlet;

        r0 := @parameter0: com.google.protobuf.MessageLite;

        r1 := @parameter1: javax.servlet.http.HttpServletResponse;

        if r0 != null goto label1;

        interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(403);

        goto label5;

     label1:
        interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(200);

        interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>("application/json");

        interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>("Cache-Control", "no-store");

     label2:
        $r2 = interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: java.io.PrintWriter getWriter()>();

        $r4 = r3.<org.waveprotocol.box.server.rpc.FetchProfilesServlet: org.waveprotocol.box.server.rpc.ProtoSerializer serializer>;

        $r5 = virtualinvoke $r4.<org.waveprotocol.box.server.rpc.ProtoSerializer: com.google.gson.JsonElement toJson(com.google.protobuf.MessageLite)>(r0);

        $r6 = virtualinvoke $r5.<com.google.gson.JsonElement: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r6);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        $r8 = new java.io.IOException;

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

     label5:
        return;

        catch org.waveprotocol.box.server.rpc.ProtoSerializer$SerializationException from label2 to label3 with label4;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "Lorg/waveprotocol/box/server/rpc/FetchProfilesServlet;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getCanonicalName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <org.waveprotocol.box.server.rpc.FetchProfilesServlet: java.util.logging.Logger LOG> = $r2;

        return;
    }
}
