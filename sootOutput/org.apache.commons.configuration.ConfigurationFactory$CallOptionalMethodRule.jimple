class org.apache.commons.configuration.ConfigurationFactory$CallOptionalMethodRule extends org.apache.commons.digester.CallMethodRule
{
    private boolean optional;

    public void <init>(java.lang.String)
    {
        org.apache.commons.configuration.ConfigurationFactory$CallOptionalMethodRule r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.configuration.ConfigurationFactory$CallOptionalMethodRule;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.digester.CallMethodRule: void <init>(java.lang.String)>(r1);

        return;
    }

    public void begin(org.xml.sax.Attributes) throws java.lang.Exception
    {
        org.apache.commons.configuration.ConfigurationFactory$CallOptionalMethodRule r0;
        org.xml.sax.Attributes r1;
        java.lang.Boolean $r4;
        java.lang.String $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.configuration.ConfigurationFactory$CallOptionalMethodRule;

        r1 := @parameter0: org.xml.sax.Attributes;

        $r2 = interfaceinvoke r1.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("optional");

        if $r2 == null goto label1;

        $r3 = interfaceinvoke r1.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("optional");

        $r4 = staticinvoke <org.apache.commons.configuration.PropertyConverter: java.lang.Boolean toBoolean(java.lang.Object)>($r3);

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<org.apache.commons.configuration.ConfigurationFactory$CallOptionalMethodRule: boolean optional> = $z1;

        specialinvoke r0.<org.apache.commons.digester.CallMethodRule: void begin(org.xml.sax.Attributes)>(r1);

        return;
    }

    public void end() throws java.lang.Exception
    {
        org.apache.commons.configuration.ConfigurationFactory$CallOptionalMethodRule r0;
        org.apache.commons.logging.Log $r2;
        java.lang.Exception $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.ConfigurationFactory$CallOptionalMethodRule;

     label1:
        specialinvoke r0.<org.apache.commons.digester.CallMethodRule: void end()>();

     label2:
        goto label5;

     label3:
        $r1 := @caughtexception;

        $z0 = r0.<org.apache.commons.configuration.ConfigurationFactory$CallOptionalMethodRule: boolean optional>;

        if $z0 == 0 goto label4;

        $r2 = staticinvoke <org.apache.commons.configuration.ConfigurationFactory: org.apache.commons.logging.Log access$000()>();

        interfaceinvoke $r2.<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>("Could not create optional configuration!", $r1);

        goto label5;

     label4:
        throw $r1;

     label5:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
