public class org.springframework.core.task.support.TaskExecutorAdapter extends java.lang.Object implements org.springframework.core.task.AsyncTaskExecutor
{
    private java.util.concurrent.Executor concurrentExecutor;

    public void <init>(java.util.concurrent.Executor)
    {
        org.springframework.core.task.support.TaskExecutorAdapter r0;
        java.util.concurrent.Executor r1;

        r0 := @this: org.springframework.core.task.support.TaskExecutorAdapter;

        r1 := @parameter0: java.util.concurrent.Executor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "Executor must not be null");

        r0.<org.springframework.core.task.support.TaskExecutorAdapter: java.util.concurrent.Executor concurrentExecutor> = r1;

        return;
    }

    public void execute(java.lang.Runnable)
    {
        java.util.concurrent.Executor $r2, $r6;
        org.springframework.core.task.support.TaskExecutorAdapter r0;
        org.springframework.core.task.TaskRejectedException $r4;
        java.lang.Runnable r1;
        java.util.concurrent.RejectedExecutionException $r3;
        java.lang.StringBuilder $r5, $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: org.springframework.core.task.support.TaskExecutorAdapter;

        r1 := @parameter0: java.lang.Runnable;

     label1:
        $r2 = r0.<org.springframework.core.task.support.TaskExecutorAdapter: java.util.concurrent.Executor concurrentExecutor>;

        interfaceinvoke $r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.springframework.core.task.TaskRejectedException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Executor [");

        $r6 = r0.<org.springframework.core.task.support.TaskExecutorAdapter: java.util.concurrent.Executor concurrentExecutor>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] did not accept task: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.springframework.core.task.TaskRejectedException: void <init>(java.lang.String,java.lang.Throwable)>($r10, $r3);

        throw $r4;

     label4:
        return;

        catch java.util.concurrent.RejectedExecutionException from label1 to label2 with label3;
    }

    public void execute(java.lang.Runnable, long)
    {
        org.springframework.core.task.support.TaskExecutorAdapter r0;
        long l0;
        java.lang.Runnable r1;

        r0 := @this: org.springframework.core.task.support.TaskExecutorAdapter;

        r1 := @parameter0: java.lang.Runnable;

        l0 := @parameter1: long;

        virtualinvoke r0.<org.springframework.core.task.support.TaskExecutorAdapter: void execute(java.lang.Runnable)>(r1);

        return;
    }

    public java.util.concurrent.Future submit(java.lang.Runnable)
    {
        java.util.concurrent.FutureTask $r2;
        org.springframework.core.task.TaskRejectedException $r9;
        java.lang.Runnable r3;
        java.util.concurrent.Future $r7;
        java.util.concurrent.RejectedExecutionException $r8;
        java.lang.String $r15;
        java.util.concurrent.ExecutorService $r6;
        boolean $z0;
        java.util.concurrent.Executor $r1, $r4, $r5, $r11;
        org.springframework.core.task.support.TaskExecutorAdapter r0;
        java.lang.StringBuilder $r10, $r12, $r13, $r14;

        r0 := @this: org.springframework.core.task.support.TaskExecutorAdapter;

        r3 := @parameter0: java.lang.Runnable;

     label1:
        $r1 = r0.<org.springframework.core.task.support.TaskExecutorAdapter: java.util.concurrent.Executor concurrentExecutor>;

        $z0 = $r1 instanceof java.util.concurrent.ExecutorService;

        if $z0 == 0 goto label3;

        $r5 = r0.<org.springframework.core.task.support.TaskExecutorAdapter: java.util.concurrent.Executor concurrentExecutor>;

        $r6 = (java.util.concurrent.ExecutorService) $r5;

        $r7 = interfaceinvoke $r6.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>(r3);

     label2:
        return $r7;

     label3:
        $r2 = new java.util.concurrent.FutureTask;

        specialinvoke $r2.<java.util.concurrent.FutureTask: void <init>(java.lang.Runnable,java.lang.Object)>(r3, null);

        $r4 = r0.<org.springframework.core.task.support.TaskExecutorAdapter: java.util.concurrent.Executor concurrentExecutor>;

        interfaceinvoke $r4.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r2);

     label4:
        return $r2;

     label5:
        $r8 := @caughtexception;

        $r9 = new org.springframework.core.task.TaskRejectedException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Executor [");

        $r11 = r0.<org.springframework.core.task.support.TaskExecutorAdapter: java.util.concurrent.Executor concurrentExecutor>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] did not accept task: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.springframework.core.task.TaskRejectedException: void <init>(java.lang.String,java.lang.Throwable)>($r15, $r8);

        throw $r9;

        catch java.util.concurrent.RejectedExecutionException from label1 to label2 with label5;
        catch java.util.concurrent.RejectedExecutionException from label3 to label4 with label5;
    }

    public java.util.concurrent.Future submit(java.util.concurrent.Callable)
    {
        java.util.concurrent.FutureTask $r2;
        java.util.concurrent.Callable r3;
        org.springframework.core.task.TaskRejectedException $r9;
        java.util.concurrent.Future $r7;
        java.util.concurrent.RejectedExecutionException $r8;
        java.lang.String $r15;
        java.util.concurrent.ExecutorService $r6;
        boolean $z0;
        java.util.concurrent.Executor $r1, $r4, $r5, $r11;
        org.springframework.core.task.support.TaskExecutorAdapter r0;
        java.lang.StringBuilder $r10, $r12, $r13, $r14;

        r0 := @this: org.springframework.core.task.support.TaskExecutorAdapter;

        r3 := @parameter0: java.util.concurrent.Callable;

     label1:
        $r1 = r0.<org.springframework.core.task.support.TaskExecutorAdapter: java.util.concurrent.Executor concurrentExecutor>;

        $z0 = $r1 instanceof java.util.concurrent.ExecutorService;

        if $z0 == 0 goto label3;

        $r5 = r0.<org.springframework.core.task.support.TaskExecutorAdapter: java.util.concurrent.Executor concurrentExecutor>;

        $r6 = (java.util.concurrent.ExecutorService) $r5;

        $r7 = interfaceinvoke $r6.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>(r3);

     label2:
        return $r7;

     label3:
        $r2 = new java.util.concurrent.FutureTask;

        specialinvoke $r2.<java.util.concurrent.FutureTask: void <init>(java.util.concurrent.Callable)>(r3);

        $r4 = r0.<org.springframework.core.task.support.TaskExecutorAdapter: java.util.concurrent.Executor concurrentExecutor>;

        interfaceinvoke $r4.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r2);

     label4:
        return $r2;

     label5:
        $r8 := @caughtexception;

        $r9 = new org.springframework.core.task.TaskRejectedException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Executor [");

        $r11 = r0.<org.springframework.core.task.support.TaskExecutorAdapter: java.util.concurrent.Executor concurrentExecutor>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] did not accept task: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.springframework.core.task.TaskRejectedException: void <init>(java.lang.String,java.lang.Throwable)>($r15, $r8);

        throw $r9;

        catch java.util.concurrent.RejectedExecutionException from label1 to label2 with label5;
        catch java.util.concurrent.RejectedExecutionException from label3 to label4 with label5;
    }
}
