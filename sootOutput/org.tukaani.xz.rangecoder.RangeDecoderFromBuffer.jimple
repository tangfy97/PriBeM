public final class org.tukaani.xz.rangecoder.RangeDecoderFromBuffer extends org.tukaani.xz.rangecoder.RangeDecoder
{
    private static final int INIT_SIZE;
    private final byte[] buf;
    private int pos;
    private int end;

    public void <init>(int)
    {
        byte[] $r1;
        int i0, $i1;
        org.tukaani.xz.rangecoder.RangeDecoderFromBuffer r0;

        r0 := @this: org.tukaani.xz.rangecoder.RangeDecoderFromBuffer;

        i0 := @parameter0: int;

        specialinvoke r0.<org.tukaani.xz.rangecoder.RangeDecoder: void <init>()>();

        r0.<org.tukaani.xz.rangecoder.RangeDecoderFromBuffer: int pos> = 0;

        r0.<org.tukaani.xz.rangecoder.RangeDecoderFromBuffer: int end> = 0;

        $i1 = i0 - 5;

        $r1 = newarray (byte)[$i1];

        r0.<org.tukaani.xz.rangecoder.RangeDecoderFromBuffer: byte[] buf> = $r1;

        return;
    }

    public void prepareInputBuffer(java.io.DataInputStream, int) throws java.io.IOException
    {
        java.io.DataInputStream r0;
        byte[] $r2;
        org.tukaani.xz.rangecoder.RangeDecoderFromBuffer r1;
        org.tukaani.xz.CorruptedInputException $r5, $r6;
        int i0, $i1, $i2, $i3, $i4, $i6;

        r1 := @this: org.tukaani.xz.rangecoder.RangeDecoderFromBuffer;

        r0 := @parameter0: java.io.DataInputStream;

        i0 := @parameter1: int;

        if i0 >= 5 goto label1;

        $r5 = new org.tukaani.xz.CorruptedInputException;

        specialinvoke $r5.<org.tukaani.xz.CorruptedInputException: void <init>()>();

        throw $r5;

     label1:
        $i1 = virtualinvoke r0.<java.io.DataInputStream: int readUnsignedByte()>();

        if $i1 == 0 goto label2;

        $r6 = new org.tukaani.xz.CorruptedInputException;

        specialinvoke $r6.<org.tukaani.xz.CorruptedInputException: void <init>()>();

        throw $r6;

     label2:
        $i2 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();

        r1.<org.tukaani.xz.rangecoder.RangeDecoderFromBuffer: int code> = $i2;

        $i6 = (int) -1;

        r1.<org.tukaani.xz.rangecoder.RangeDecoderFromBuffer: int range> = $i6;

        r1.<org.tukaani.xz.rangecoder.RangeDecoderFromBuffer: int pos> = 0;

        $i3 = i0 - 5;

        r1.<org.tukaani.xz.rangecoder.RangeDecoderFromBuffer: int end> = $i3;

        $r2 = r1.<org.tukaani.xz.rangecoder.RangeDecoderFromBuffer: byte[] buf>;

        $i4 = r1.<org.tukaani.xz.rangecoder.RangeDecoderFromBuffer: int end>;

        virtualinvoke r0.<java.io.DataInputStream: void readFully(byte[],int,int)>($r2, 0, $i4);

        return;
    }

    public boolean isInBufferOK()
    {
        int $i0, $i1;
        org.tukaani.xz.rangecoder.RangeDecoderFromBuffer r0;
        boolean $z0;

        r0 := @this: org.tukaani.xz.rangecoder.RangeDecoderFromBuffer;

        $i1 = r0.<org.tukaani.xz.rangecoder.RangeDecoderFromBuffer: int pos>;

        $i0 = r0.<org.tukaani.xz.rangecoder.RangeDecoderFromBuffer: int end>;

        if $i1 > $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isFinished()
    {
        int $i0, $i1, $i2;
        org.tukaani.xz.rangecoder.RangeDecoderFromBuffer r0;
        boolean $z0;

        r0 := @this: org.tukaani.xz.rangecoder.RangeDecoderFromBuffer;

        $i1 = r0.<org.tukaani.xz.rangecoder.RangeDecoderFromBuffer: int pos>;

        $i0 = r0.<org.tukaani.xz.rangecoder.RangeDecoderFromBuffer: int end>;

        if $i1 != $i0 goto label1;

        $i2 = r0.<org.tukaani.xz.rangecoder.RangeDecoderFromBuffer: int code>;

        if $i2 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void normalize() throws java.io.IOException
    {
        byte[] $r1;
        short $s7, $s11;
        byte $b6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i8, $i9, $i10, $i12;
        java.lang.ArrayIndexOutOfBoundsException $r2;
        org.tukaani.xz.rangecoder.RangeDecoderFromBuffer r0;
        org.tukaani.xz.CorruptedInputException $r4;

        r0 := @this: org.tukaani.xz.rangecoder.RangeDecoderFromBuffer;

        $i0 = r0.<org.tukaani.xz.rangecoder.RangeDecoderFromBuffer: int range>;

        $i1 = $i0 & -16777216;

        if $i1 != 0 goto label4;

     label1:
        $i2 = r0.<org.tukaani.xz.rangecoder.RangeDecoderFromBuffer: int code>;

        $i5 = $i2 << 8;

        $r1 = r0.<org.tukaani.xz.rangecoder.RangeDecoderFromBuffer: byte[] buf>;

        $i3 = r0.<org.tukaani.xz.rangecoder.RangeDecoderFromBuffer: int pos>;

        $i4 = $i3 + 1;

        r0.<org.tukaani.xz.rangecoder.RangeDecoderFromBuffer: int pos> = $i4;

        $b6 = $r1[$i3];

        $s11 = (short) $b6;

        $s7 = $s11 & 255;

        $i12 = (int) $s7;

        $i8 = $i5 | $i12;

        r0.<org.tukaani.xz.rangecoder.RangeDecoderFromBuffer: int code> = $i8;

        $i9 = r0.<org.tukaani.xz.rangecoder.RangeDecoderFromBuffer: int range>;

        $i10 = $i9 << 8;

        r0.<org.tukaani.xz.rangecoder.RangeDecoderFromBuffer: int range> = $i10;

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r4 = new org.tukaani.xz.CorruptedInputException;

        specialinvoke $r4.<org.tukaani.xz.CorruptedInputException: void <init>()>();

        throw $r4;

     label4:
        return;

        catch java.lang.ArrayIndexOutOfBoundsException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <org.tukaani.xz.rangecoder.RangeDecoderFromBuffer: int INIT_SIZE> = 5;

        return;
    }
}
