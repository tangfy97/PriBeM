public class org.apache.commons.collections.FastArrayList extends java.util.ArrayList
{
    protected java.util.ArrayList list;
    protected boolean fast;

    public void <init>()
    {
        org.apache.commons.collections.FastArrayList r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.commons.collections.FastArrayList;

        specialinvoke r0.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list> = null;

        r0.<org.apache.commons.collections.FastArrayList: boolean fast> = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list> = $r1;

        return;
    }

    public void <init>(int)
    {
        int i0;
        org.apache.commons.collections.FastArrayList r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.commons.collections.FastArrayList;

        i0 := @parameter0: int;

        specialinvoke r0.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list> = null;

        r0.<org.apache.commons.collections.FastArrayList: boolean fast> = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(i0);

        r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list> = $r1;

        return;
    }

    public void <init>(java.util.Collection)
    {
        org.apache.commons.collections.FastArrayList r0;
        java.util.ArrayList $r1;
        java.util.Collection r2;

        r0 := @this: org.apache.commons.collections.FastArrayList;

        r2 := @parameter0: java.util.Collection;

        specialinvoke r0.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list> = null;

        r0.<org.apache.commons.collections.FastArrayList: boolean fast> = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>(r2);

        r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list> = $r1;

        return;
    }

    public boolean getFast()
    {
        org.apache.commons.collections.FastArrayList r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.FastArrayList;

        $z0 = r0.<org.apache.commons.collections.FastArrayList: boolean fast>;

        return $z0;
    }

    public void setFast(boolean)
    {
        org.apache.commons.collections.FastArrayList r0;
        boolean z0;

        r0 := @this: org.apache.commons.collections.FastArrayList;

        z0 := @parameter0: boolean;

        r0.<org.apache.commons.collections.FastArrayList: boolean fast> = z0;

        return;
    }

    public boolean add(java.lang.Object)
    {
        java.lang.Throwable $r7, $r8;
        java.util.ArrayList $r1, $r3, $r4, r6;
        org.apache.commons.collections.FastArrayList r0;
        java.lang.Object r2, $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.collections.FastArrayList;

        r2 := @parameter0: java.lang.Object;

        $z0 = r0.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label5;

        entermonitor r0;

     label1:
        $r4 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object clone()>();

        r6 = (java.util.ArrayList) $r5;

        $z2 = virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list> = r6;

        exitmonitor r0;

     label2:
        return $z2;

     label3:
        $r8 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r8;

     label5:
        $r1 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r1;

     label6:
        $r3 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $z1 = virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        exitmonitor $r1;

     label7:
        return $z1;

     label8:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label9:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
        catch java.lang.Throwable from label6 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public void add(int, java.lang.Object)
    {
        java.lang.Throwable $r7, $r8;
        java.util.ArrayList $r1, $r3, $r4, r6;
        int i0;
        org.apache.commons.collections.FastArrayList r0;
        java.lang.Object r2, $r5;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.FastArrayList;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.Object;

        $z0 = r0.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label06;

        entermonitor r0;

     label01:
        $r4 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object clone()>();

        r6 = (java.util.ArrayList) $r5;

        virtualinvoke r6.<java.util.ArrayList: void add(int,java.lang.Object)>(i0, r2);

        r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list> = r6;

        exitmonitor r0;

     label02:
        goto label05;

     label03:
        $r8 := @caughtexception;

        exitmonitor r0;

     label04:
        throw $r8;

     label05:
        goto label11;

     label06:
        $r1 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r1;

     label07:
        $r3 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        virtualinvoke $r3.<java.util.ArrayList: void add(int,java.lang.Object)>(i0, r2);

        exitmonitor $r1;

     label08:
        goto label11;

     label09:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label10:
        throw $r7;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public boolean addAll(java.util.Collection)
    {
        java.lang.Throwable $r7, $r8;
        java.util.Collection r2;
        java.util.ArrayList $r1, $r3, $r4, r6;
        org.apache.commons.collections.FastArrayList r0;
        java.lang.Object $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.collections.FastArrayList;

        r2 := @parameter0: java.util.Collection;

        $z0 = r0.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label5;

        entermonitor r0;

     label1:
        $r4 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object clone()>();

        r6 = (java.util.ArrayList) $r5;

        $z2 = virtualinvoke r6.<java.util.ArrayList: boolean addAll(java.util.Collection)>(r2);

        r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list> = r6;

        exitmonitor r0;

     label2:
        return $z2;

     label3:
        $r8 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r8;

     label5:
        $r1 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r1;

     label6:
        $r3 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $z1 = virtualinvoke $r3.<java.util.ArrayList: boolean addAll(java.util.Collection)>(r2);

        exitmonitor $r1;

     label7:
        return $z1;

     label8:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label9:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
        catch java.lang.Throwable from label6 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public boolean addAll(int, java.util.Collection)
    {
        java.lang.Throwable $r7, $r8;
        java.util.Collection r2;
        java.util.ArrayList $r1, $r3, $r4, r6;
        int i0;
        org.apache.commons.collections.FastArrayList r0;
        java.lang.Object $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.collections.FastArrayList;

        i0 := @parameter0: int;

        r2 := @parameter1: java.util.Collection;

        $z0 = r0.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label5;

        entermonitor r0;

     label1:
        $r4 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object clone()>();

        r6 = (java.util.ArrayList) $r5;

        $z2 = virtualinvoke r6.<java.util.ArrayList: boolean addAll(int,java.util.Collection)>(i0, r2);

        r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list> = r6;

        exitmonitor r0;

     label2:
        return $z2;

     label3:
        $r8 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r8;

     label5:
        $r1 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r1;

     label6:
        $r3 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $z1 = virtualinvoke $r3.<java.util.ArrayList: boolean addAll(int,java.util.Collection)>(i0, r2);

        exitmonitor $r1;

     label7:
        return $z1;

     label8:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label9:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
        catch java.lang.Throwable from label6 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public void clear()
    {
        java.lang.Throwable $r6, $r7;
        java.util.ArrayList $r1, $r2, $r3, r5;
        org.apache.commons.collections.FastArrayList r0;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.FastArrayList;

        $z0 = r0.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label06;

        entermonitor r0;

     label01:
        $r3 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object clone()>();

        r5 = (java.util.ArrayList) $r4;

        virtualinvoke r5.<java.util.ArrayList: void clear()>();

        r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list> = r5;

        exitmonitor r0;

     label02:
        goto label05;

     label03:
        $r7 := @caughtexception;

        exitmonitor r0;

     label04:
        throw $r7;

     label05:
        goto label11;

     label06:
        $r1 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r1;

     label07:
        $r2 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        exitmonitor $r1;

     label08:
        goto label11;

     label09:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label10:
        throw $r6;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public java.lang.Object clone()
    {
        java.lang.Throwable $r6;
        java.util.ArrayList $r1, $r3, $r5;
        org.apache.commons.collections.FastArrayList r0, $r2, $r4, r7;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections.FastArrayList;

        $z0 = r0.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label1;

        $r4 = new org.apache.commons.collections.FastArrayList;

        $r5 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        specialinvoke $r4.<org.apache.commons.collections.FastArrayList: void <init>(java.util.Collection)>($r5);

        r7 = $r4;

        goto label6;

     label1:
        $r1 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r1;

     label2:
        $r2 = new org.apache.commons.collections.FastArrayList;

        $r3 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        specialinvoke $r2.<org.apache.commons.collections.FastArrayList: void <init>(java.util.Collection)>($r3);

        r7 = $r2;

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r6;

     label6:
        $z1 = virtualinvoke r0.<org.apache.commons.collections.FastArrayList: boolean getFast()>();

        virtualinvoke r7.<org.apache.commons.collections.FastArrayList: void setFast(boolean)>($z1);

        return r7;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean contains(java.lang.Object)
    {
        java.lang.Throwable $r5;
        java.util.ArrayList $r1, $r3, $r4;
        org.apache.commons.collections.FastArrayList r0;
        java.lang.Object r2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.collections.FastArrayList;

        r2 := @parameter0: java.lang.Object;

        $z0 = r0.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label1;

        $r4 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $z2 = virtualinvoke $r4.<java.util.ArrayList: boolean contains(java.lang.Object)>(r2);

        return $z2;

     label1:
        $r1 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r1;

     label2:
        $r3 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $z1 = virtualinvoke $r3.<java.util.ArrayList: boolean contains(java.lang.Object)>(r2);

        exitmonitor $r1;

     label3:
        return $z1;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean containsAll(java.util.Collection)
    {
        java.lang.Throwable $r5;
        java.util.Collection r2;
        java.util.ArrayList $r1, $r3, $r4;
        org.apache.commons.collections.FastArrayList r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.collections.FastArrayList;

        r2 := @parameter0: java.util.Collection;

        $z0 = r0.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label1;

        $r4 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $z2 = virtualinvoke $r4.<java.util.ArrayList: boolean containsAll(java.util.Collection)>(r2);

        return $z2;

     label1:
        $r1 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r1;

     label2:
        $r3 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $z1 = virtualinvoke $r3.<java.util.ArrayList: boolean containsAll(java.util.Collection)>(r2);

        exitmonitor $r1;

     label3:
        return $z1;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void ensureCapacity(int)
    {
        java.lang.Throwable $r6, $r7;
        java.util.ArrayList $r1, $r2, $r3, r5;
        int i0;
        org.apache.commons.collections.FastArrayList r0;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.FastArrayList;

        i0 := @parameter0: int;

        $z0 = r0.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label06;

        entermonitor r0;

     label01:
        $r3 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object clone()>();

        r5 = (java.util.ArrayList) $r4;

        virtualinvoke r5.<java.util.ArrayList: void ensureCapacity(int)>(i0);

        r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list> = r5;

        exitmonitor r0;

     label02:
        goto label05;

     label03:
        $r7 := @caughtexception;

        exitmonitor r0;

     label04:
        throw $r7;

     label05:
        goto label11;

     label06:
        $r1 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r1;

     label07:
        $r2 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        virtualinvoke $r2.<java.util.ArrayList: void ensureCapacity(int)>(i0);

        exitmonitor $r1;

     label08:
        goto label11;

     label09:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label10:
        throw $r6;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Throwable $r14;
        java.util.ListIterator $r5, $r6, $r10, $r11;
        java.util.ArrayList $r3, $r4, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        java.util.List r2;
        org.apache.commons.collections.FastArrayList r1;
        java.lang.Object r0, $r7, $r8, $r12, $r13;

        r1 := @this: org.apache.commons.collections.FastArrayList;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label01;

        return 1;

     label01:
        $z0 = r0 instanceof java.util.List;

        if $z0 != 0 goto label02;

        return 0;

     label02:
        r2 = (java.util.List) r0;

        $z1 = r1.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z1 == 0 goto label10;

        $r9 = r1.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.util.ListIterator listIterator()>();

        $r11 = interfaceinvoke r2.<java.util.List: java.util.ListIterator listIterator()>();

     label03:
        $z7 = interfaceinvoke $r10.<java.util.ListIterator: boolean hasNext()>();

        if $z7 == 0 goto label07;

        $z10 = interfaceinvoke $r11.<java.util.ListIterator: boolean hasNext()>();

        if $z10 == 0 goto label07;

        $r12 = interfaceinvoke $r10.<java.util.ListIterator: java.lang.Object next()>();

        $r13 = interfaceinvoke $r11.<java.util.ListIterator: java.lang.Object next()>();

        if $r12 != null goto label04;

        if $r13 != null goto label05;

        goto label06;

     label04:
        $z11 = virtualinvoke $r12.<java.lang.Object: boolean equals(java.lang.Object)>($r13);

        if $z11 != 0 goto label06;

     label05:
        return 0;

     label06:
        goto label03;

     label07:
        $z8 = interfaceinvoke $r10.<java.util.ListIterator: boolean hasNext()>();

        if $z8 != 0 goto label08;

        $z9 = interfaceinvoke $r11.<java.util.ListIterator: boolean hasNext()>();

        if $z9 != 0 goto label08;

        $z12 = 1;

        goto label09;

     label08:
        $z12 = 0;

     label09:
        return $z12;

     label10:
        $r3 = r1.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r3;

     label11:
        $r4 = r1.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.util.ListIterator listIterator()>();

        $r6 = interfaceinvoke r2.<java.util.List: java.util.ListIterator listIterator()>();

     label12:
        $z2 = interfaceinvoke $r5.<java.util.ListIterator: boolean hasNext()>();

        if $z2 == 0 goto label17;

        $z5 = interfaceinvoke $r6.<java.util.ListIterator: boolean hasNext()>();

        if $z5 == 0 goto label17;

        $r7 = interfaceinvoke $r5.<java.util.ListIterator: java.lang.Object next()>();

        $r8 = interfaceinvoke $r6.<java.util.ListIterator: java.lang.Object next()>();

        if $r7 != null goto label13;

        if $r8 != null goto label14;

        goto label16;

     label13:
        $z6 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>($r8);

        if $z6 != 0 goto label16;

     label14:
        exitmonitor $r3;

     label15:
        return 0;

     label16:
        goto label12;

     label17:
        $z3 = interfaceinvoke $r5.<java.util.ListIterator: boolean hasNext()>();

        if $z3 != 0 goto label18;

        $z4 = interfaceinvoke $r6.<java.util.ListIterator: boolean hasNext()>();

        if $z4 != 0 goto label18;

        $z13 = 1;

        goto label19;

     label18:
        $z13 = 0;

     label19:
        exitmonitor $r3;

     label20:
        return $z13;

     label21:
        $r14 := @caughtexception;

        exitmonitor $r3;

     label22:
        throw $r14;

        catch java.lang.Throwable from label11 to label15 with label21;
        catch java.lang.Throwable from label16 to label20 with label21;
        catch java.lang.Throwable from label21 to label22 with label21;
    }

    public java.lang.Object get(int)
    {
        java.lang.Throwable $r6;
        java.util.ArrayList $r1, $r2, $r4;
        int i0;
        org.apache.commons.collections.FastArrayList r0;
        java.lang.Object $r3, $r5;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.FastArrayList;

        i0 := @parameter0: int;

        $z0 = r0.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label1;

        $r4 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        return $r5;

     label1:
        $r1 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r1;

     label2:
        $r2 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        exitmonitor $r1;

     label3:
        return $r3;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int hashCode()
    {
        java.lang.Throwable $r8;
        java.util.ArrayList $r1, $r2, $r5;
        int $i0, $i1, i2, $i3, i4, $i5;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r3, $r6;
        org.apache.commons.collections.FastArrayList r0;
        java.lang.Object $r4, $r7;

        r0 := @this: org.apache.commons.collections.FastArrayList;

        $z0 = r0.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label05;

        i2 = 1;

        $r5 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label01:
        $z2 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label04;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $i1 = 31 * i2;

        if $r7 != null goto label02;

        $i3 = 0;

        goto label03;

     label02:
        $i3 = virtualinvoke $r7.<java.lang.Object: int hashCode()>();

     label03:
        i2 = $i1 + $i3;

        goto label01;

     label04:
        return i2;

     label05:
        $r1 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r1;

     label06:
        i4 = 1;

        $r2 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $i0 = 31 * i4;

        if $r4 != null goto label08;

        $i5 = 0;

        goto label09;

     label08:
        $i5 = virtualinvoke $r4.<java.lang.Object: int hashCode()>();

     label09:
        i4 = $i0 + $i5;

        goto label07;

     label10:
        exitmonitor $r1;

     label11:
        return i4;

     label12:
        $r8 := @caughtexception;

        exitmonitor $r1;

     label13:
        throw $r8;

        catch java.lang.Throwable from label06 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public int indexOf(java.lang.Object)
    {
        java.lang.Throwable $r5;
        java.util.ArrayList $r1, $r3, $r4;
        int $i0, $i1;
        org.apache.commons.collections.FastArrayList r0;
        java.lang.Object r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.FastArrayList;

        r2 := @parameter0: java.lang.Object;

        $z0 = r0.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label1;

        $r4 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int indexOf(java.lang.Object)>(r2);

        return $i1;

     label1:
        $r1 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r1;

     label2:
        $r3 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int indexOf(java.lang.Object)>(r2);

        exitmonitor $r1;

     label3:
        return $i0;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean isEmpty()
    {
        java.lang.Throwable $r4;
        java.util.ArrayList $r1, $r2, $r3;
        org.apache.commons.collections.FastArrayList r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.collections.FastArrayList;

        $z0 = r0.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $z2 = virtualinvoke $r3.<java.util.ArrayList: boolean isEmpty()>();

        return $z2;

     label1:
        $r1 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r1;

     label2:
        $r2 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $z1 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();

        exitmonitor $r1;

     label3:
        return $z1;

     label4:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public java.util.Iterator iterator()
    {
        java.util.Iterator $r2;
        org.apache.commons.collections.FastArrayList r0;
        org.apache.commons.collections.FastArrayList$ListIter $r3;
        boolean $z0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.commons.collections.FastArrayList;

        $z0 = r0.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label1;

        $r3 = new org.apache.commons.collections.FastArrayList$ListIter;

        specialinvoke $r3.<org.apache.commons.collections.FastArrayList$ListIter: void <init>(org.apache.commons.collections.FastArrayList,int)>(r0, 0);

        return $r3;

     label1:
        $r1 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

        return $r2;
    }

    public int lastIndexOf(java.lang.Object)
    {
        java.lang.Throwable $r5;
        java.util.ArrayList $r1, $r3, $r4;
        int $i0, $i1;
        org.apache.commons.collections.FastArrayList r0;
        java.lang.Object r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.FastArrayList;

        r2 := @parameter0: java.lang.Object;

        $z0 = r0.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label1;

        $r4 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int lastIndexOf(java.lang.Object)>(r2);

        return $i1;

     label1:
        $r1 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r1;

     label2:
        $r3 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int lastIndexOf(java.lang.Object)>(r2);

        exitmonitor $r1;

     label3:
        return $i0;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public java.util.ListIterator listIterator()
    {
        java.util.ListIterator $r2;
        org.apache.commons.collections.FastArrayList r0;
        org.apache.commons.collections.FastArrayList$ListIter $r3;
        boolean $z0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.commons.collections.FastArrayList;

        $z0 = r0.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label1;

        $r3 = new org.apache.commons.collections.FastArrayList$ListIter;

        specialinvoke $r3.<org.apache.commons.collections.FastArrayList$ListIter: void <init>(org.apache.commons.collections.FastArrayList,int)>(r0, 0);

        return $r3;

     label1:
        $r1 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.util.ListIterator listIterator()>();

        return $r2;
    }

    public java.util.ListIterator listIterator(int)
    {
        java.util.ListIterator $r2;
        int i0;
        org.apache.commons.collections.FastArrayList r0;
        org.apache.commons.collections.FastArrayList$ListIter $r3;
        boolean $z0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.commons.collections.FastArrayList;

        i0 := @parameter0: int;

        $z0 = r0.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label1;

        $r3 = new org.apache.commons.collections.FastArrayList$ListIter;

        specialinvoke $r3.<org.apache.commons.collections.FastArrayList$ListIter: void <init>(org.apache.commons.collections.FastArrayList,int)>(r0, i0);

        return $r3;

     label1:
        $r1 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.util.ListIterator listIterator(int)>(i0);

        return $r2;
    }

    public java.lang.Object remove(int)
    {
        java.lang.Throwable $r8, $r9;
        java.util.ArrayList $r1, $r2, $r4, r6;
        int i0;
        org.apache.commons.collections.FastArrayList r0;
        java.lang.Object $r3, $r5, $r7;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.FastArrayList;

        i0 := @parameter0: int;

        $z0 = r0.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label5;

        entermonitor r0;

     label1:
        $r4 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object clone()>();

        r6 = (java.util.ArrayList) $r5;

        $r7 = virtualinvoke r6.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list> = r6;

        exitmonitor r0;

     label2:
        return $r7;

     label3:
        $r9 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r9;

     label5:
        $r1 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r1;

     label6:
        $r2 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        exitmonitor $r1;

     label7:
        return $r3;

     label8:
        $r8 := @caughtexception;

        exitmonitor $r1;

     label9:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
        catch java.lang.Throwable from label6 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public boolean remove(java.lang.Object)
    {
        java.lang.Throwable $r7, $r8;
        java.util.ArrayList $r1, $r3, $r4, r6;
        org.apache.commons.collections.FastArrayList r0;
        java.lang.Object r2, $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.collections.FastArrayList;

        r2 := @parameter0: java.lang.Object;

        $z0 = r0.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label5;

        entermonitor r0;

     label1:
        $r4 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object clone()>();

        r6 = (java.util.ArrayList) $r5;

        $z2 = virtualinvoke r6.<java.util.ArrayList: boolean remove(java.lang.Object)>(r2);

        r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list> = r6;

        exitmonitor r0;

     label2:
        return $z2;

     label3:
        $r8 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r8;

     label5:
        $r1 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r1;

     label6:
        $r3 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $z1 = virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r2);

        exitmonitor $r1;

     label7:
        return $z1;

     label8:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label9:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
        catch java.lang.Throwable from label6 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public boolean removeAll(java.util.Collection)
    {
        java.lang.Throwable $r7, $r8;
        java.util.Collection r2;
        java.util.ArrayList $r1, $r3, $r4, r6;
        org.apache.commons.collections.FastArrayList r0;
        java.lang.Object $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.collections.FastArrayList;

        r2 := @parameter0: java.util.Collection;

        $z0 = r0.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label5;

        entermonitor r0;

     label1:
        $r4 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object clone()>();

        r6 = (java.util.ArrayList) $r5;

        $z2 = virtualinvoke r6.<java.util.ArrayList: boolean removeAll(java.util.Collection)>(r2);

        r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list> = r6;

        exitmonitor r0;

     label2:
        return $z2;

     label3:
        $r8 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r8;

     label5:
        $r1 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r1;

     label6:
        $r3 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $z1 = virtualinvoke $r3.<java.util.ArrayList: boolean removeAll(java.util.Collection)>(r2);

        exitmonitor $r1;

     label7:
        return $z1;

     label8:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label9:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
        catch java.lang.Throwable from label6 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public boolean retainAll(java.util.Collection)
    {
        java.lang.Throwable $r7, $r8;
        java.util.Collection r2;
        java.util.ArrayList $r1, $r3, $r4, r6;
        org.apache.commons.collections.FastArrayList r0;
        java.lang.Object $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.collections.FastArrayList;

        r2 := @parameter0: java.util.Collection;

        $z0 = r0.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label5;

        entermonitor r0;

     label1:
        $r4 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object clone()>();

        r6 = (java.util.ArrayList) $r5;

        $z2 = virtualinvoke r6.<java.util.ArrayList: boolean retainAll(java.util.Collection)>(r2);

        r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list> = r6;

        exitmonitor r0;

     label2:
        return $z2;

     label3:
        $r8 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r8;

     label5:
        $r1 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r1;

     label6:
        $r3 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $z1 = virtualinvoke $r3.<java.util.ArrayList: boolean retainAll(java.util.Collection)>(r2);

        exitmonitor $r1;

     label7:
        return $z1;

     label8:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label9:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
        catch java.lang.Throwable from label6 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public java.lang.Object set(int, java.lang.Object)
    {
        java.lang.Throwable $r7;
        java.util.ArrayList $r1, $r3, $r5;
        int i0;
        org.apache.commons.collections.FastArrayList r0;
        java.lang.Object r2, $r4, $r6;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.FastArrayList;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.Object;

        $z0 = r0.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label1;

        $r5 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i0, r2);

        return $r6;

     label1:
        $r1 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r1;

     label2:
        $r3 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i0, r2);

        exitmonitor $r1;

     label3:
        return $r4;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int size()
    {
        java.lang.Throwable $r4;
        java.util.ArrayList $r1, $r2, $r3;
        int $i0, $i1;
        org.apache.commons.collections.FastArrayList r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.FastArrayList;

        $z0 = r0.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        return $i1;

     label1:
        $r1 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r1;

     label2:
        $r2 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        exitmonitor $r1;

     label3:
        return $i0;

     label4:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public java.util.List subList(int, int)
    {
        java.util.List $r2;
        int i0, i1;
        org.apache.commons.collections.FastArrayList r0;
        org.apache.commons.collections.FastArrayList$SubList $r3;
        boolean $z0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.commons.collections.FastArrayList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = r0.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label1;

        $r3 = new org.apache.commons.collections.FastArrayList$SubList;

        specialinvoke $r3.<org.apache.commons.collections.FastArrayList$SubList: void <init>(org.apache.commons.collections.FastArrayList,int,int)>(r0, i0, i1);

        return $r3;

     label1:
        $r1 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.util.List subList(int,int)>(i0, i1);

        return $r2;
    }

    public java.lang.Object[] toArray()
    {
        java.lang.Throwable $r6;
        java.lang.Object[] $r3, $r5;
        java.util.ArrayList $r1, $r2, $r4;
        org.apache.commons.collections.FastArrayList r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.FastArrayList;

        $z0 = r0.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label1;

        $r4 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object[] toArray()>();

        return $r5;

     label1:
        $r1 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r1;

     label2:
        $r2 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object[] toArray()>();

        exitmonitor $r1;

     label3:
        return $r3;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        java.lang.Throwable $r7;
        java.lang.Object[] r2, $r4, $r6;
        java.util.ArrayList $r1, $r3, $r5;
        org.apache.commons.collections.FastArrayList r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.FastArrayList;

        r2 := @parameter0: java.lang.Object[];

        $z0 = r0.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label1;

        $r5 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r2);

        return $r6;

     label1:
        $r1 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r1;

     label2:
        $r3 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r2);

        exitmonitor $r1;

     label3:
        return $r4;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r0;
        org.apache.commons.collections.FastArrayList r1;
        java.lang.String $r3, $r4;
        java.util.ArrayList $r2;

        r1 := @this: org.apache.commons.collections.FastArrayList;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>("FastArrayList[");

        $r2 = r1.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    public void trimToSize()
    {
        java.lang.Throwable $r6, $r7;
        java.util.ArrayList $r1, $r2, $r3, r5;
        org.apache.commons.collections.FastArrayList r0;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.FastArrayList;

        $z0 = r0.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label06;

        entermonitor r0;

     label01:
        $r3 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object clone()>();

        r5 = (java.util.ArrayList) $r4;

        virtualinvoke r5.<java.util.ArrayList: void trimToSize()>();

        r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list> = r5;

        exitmonitor r0;

     label02:
        goto label05;

     label03:
        $r7 := @caughtexception;

        exitmonitor r0;

     label04:
        throw $r7;

     label05:
        goto label11;

     label06:
        $r1 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r1;

     label07:
        $r2 = r0.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        virtualinvoke $r2.<java.util.ArrayList: void trimToSize()>();

        exitmonitor $r1;

     label08:
        goto label11;

     label09:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label10:
        throw $r6;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }
}
