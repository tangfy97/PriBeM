public class org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertionBuilder extends java.lang.Object implements org.apache.neethi.builders.AssertionBuilder
{
    private javax.xml.namespace.QName[] knownElements;

    public void <init>()
    {
        javax.xml.namespace.QName[] $r1;
        org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertionBuilder r0;

        r0 := @this: org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertionBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (javax.xml.namespace.QName)[0];

        r0.<org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertionBuilder: javax.xml.namespace.QName[] knownElements> = $r1;

        return;
    }

    public void <init>(java.util.Collection)
    {
        java.lang.Object[] $r4;
        javax.xml.namespace.QName[] $r1, $r3, $r5;
        org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertionBuilder r0;
        java.util.Collection r2;
        int $i0;

        r0 := @this: org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertionBuilder;

        r2 := @parameter0: java.util.Collection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (javax.xml.namespace.QName)[0];

        r0.<org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertionBuilder: javax.xml.namespace.QName[] knownElements> = $r1;

        $i0 = interfaceinvoke r2.<java.util.Collection: int size()>();

        $r3 = newarray (javax.xml.namespace.QName)[$i0];

        $r4 = interfaceinvoke r2.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (javax.xml.namespace.QName[]) $r4;

        r0.<org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertionBuilder: javax.xml.namespace.QName[] knownElements> = $r5;

        return;
    }

    public void <init>(javax.xml.namespace.QName[])
    {
        javax.xml.namespace.QName[] $r1, r2;
        org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertionBuilder r0;

        r0 := @this: org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertionBuilder;

        r2 := @parameter0: javax.xml.namespace.QName[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (javax.xml.namespace.QName)[0];

        r0.<org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertionBuilder: javax.xml.namespace.QName[] knownElements> = $r1;

        r0.<org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertionBuilder: javax.xml.namespace.QName[] knownElements> = r2;

        return;
    }

    public org.apache.neethi.Assertion build(org.w3c.dom.Element, org.apache.neethi.AssertionBuilderFactory)
    {
        org.w3c.dom.Element r1;
        org.apache.neethi.AssertionBuilderFactory r3;
        org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertionBuilder r2;
        org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion $r0;

        r2 := @this: org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertionBuilder;

        r1 := @parameter0: org.w3c.dom.Element;

        r3 := @parameter1: org.apache.neethi.AssertionBuilderFactory;

        $r0 = new org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion;

        specialinvoke $r0.<org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion: void <init>(org.w3c.dom.Element)>(r1);

        return $r0;
    }

    public javax.xml.namespace.QName[] getKnownElements()
    {
        javax.xml.namespace.QName[] $r1;
        org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertionBuilder r0;

        r0 := @this: org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertionBuilder;

        $r1 = r0.<org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertionBuilder: javax.xml.namespace.QName[] knownElements>;

        return $r1;
    }

    public void setKnownElements(java.util.Collection)
    {
        java.lang.Object[] $r3;
        javax.xml.namespace.QName[] $r2, $r4;
        org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertionBuilder r0;
        java.util.Collection r1;
        int $i0;

        r0 := @this: org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertionBuilder;

        r1 := @parameter0: java.util.Collection;

        $i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        $r2 = newarray (javax.xml.namespace.QName)[$i0];

        $r3 = interfaceinvoke r1.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        $r4 = (javax.xml.namespace.QName[]) $r3;

        r0.<org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertionBuilder: javax.xml.namespace.QName[] knownElements> = $r4;

        return;
    }

    public void setKnownElements(javax.xml.namespace.QName[])
    {
        javax.xml.namespace.QName[] r1;
        org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertionBuilder r0;

        r0 := @this: org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertionBuilder;

        r1 := @parameter0: javax.xml.namespace.QName[];

        r0.<org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertionBuilder: javax.xml.namespace.QName[] knownElements> = r1;

        return;
    }

    public volatile org.apache.neethi.Assertion build(java.lang.Object, org.apache.neethi.AssertionBuilderFactory) throws java.lang.IllegalArgumentException
    {
        org.apache.neethi.AssertionBuilderFactory r2;
        org.w3c.dom.Element $r3;
        org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertionBuilder r0;
        java.lang.Object r1;
        org.apache.neethi.Assertion $r4;

        r0 := @this: org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertionBuilder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.neethi.AssertionBuilderFactory;

        $r3 = (org.w3c.dom.Element) r1;

        $r4 = virtualinvoke r0.<org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertionBuilder: org.apache.neethi.Assertion build(org.w3c.dom.Element,org.apache.neethi.AssertionBuilderFactory)>($r3, r2);

        return $r4;
    }
}
