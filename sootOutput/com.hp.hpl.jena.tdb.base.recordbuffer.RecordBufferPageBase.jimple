public abstract class com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase extends com.hp.hpl.jena.tdb.base.page.PageBase
{
    public static final int COUNT;
    private static final int FIELD_LENGTH;
    protected final int headerLength;
    protected com.hp.hpl.jena.tdb.base.buffer.RecordBuffer recBuff;
    private final com.hp.hpl.jena.tdb.base.record.RecordFactory factory;

    public static int calcRecordSize(com.hp.hpl.jena.tdb.base.record.RecordFactory, int, int)
    {
        int i0, i1, $i2, i3, $i4, $i5;
        com.hp.hpl.jena.tdb.base.record.RecordFactory r0;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.record.RecordFactory;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = staticinvoke <com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase: int totalOffset(int)>(i1);

        i3 = i0 - $i2;

        $i4 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.record.RecordFactory: int recordLength()>();

        $i5 = i3 / $i4;

        return $i5;
    }

    public static int calcBlockSize(com.hp.hpl.jena.tdb.base.record.RecordFactory, int, int)
    {
        int i0, $i1, $i2, i3, $i4, $i5;
        com.hp.hpl.jena.tdb.base.record.RecordFactory r0;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.record.RecordFactory;

        i3 := @parameter1: int;

        i0 := @parameter2: int;

        $i1 = staticinvoke <com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase: int totalOffset(int)>(i0);

        $i2 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.record.RecordFactory: int recordLength()>();

        $i4 = $i2 * i3;

        $i5 = $i1 + $i4;

        return $i5;
    }

    private static int totalOffset(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = 4 + i0;

        return $i1;
    }

    protected void <init>(com.hp.hpl.jena.tdb.base.block.Block, int, com.hp.hpl.jena.tdb.base.record.RecordFactory, int)
    {
        com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase r0;
        com.hp.hpl.jena.tdb.base.block.Block r1;
        int i0, $i1, i2;
        com.hp.hpl.jena.tdb.base.record.RecordFactory r2;

        r0 := @this: com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase;

        r1 := @parameter0: com.hp.hpl.jena.tdb.base.block.Block;

        i0 := @parameter1: int;

        r2 := @parameter2: com.hp.hpl.jena.tdb.base.record.RecordFactory;

        i2 := @parameter3: int;

        specialinvoke r0.<com.hp.hpl.jena.tdb.base.page.PageBase: void <init>(com.hp.hpl.jena.tdb.base.block.Block)>(r1);

        $i1 = 4 + i0;

        r0.<com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase: int headerLength> = $i1;

        r0.<com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase: com.hp.hpl.jena.tdb.base.record.RecordFactory factory> = r2;

        virtualinvoke r0.<com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase: void reset(com.hp.hpl.jena.tdb.base.block.Block,int)>(r1, i2);

        return;
    }

    protected void reset(com.hp.hpl.jena.tdb.base.block.Block, int)
    {
        java.nio.ByteBuffer $r1, $r3;
        com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase r2;
        com.hp.hpl.jena.tdb.base.block.Block r0;
        int $i0, i1;
        com.hp.hpl.jena.tdb.base.buffer.RecordBuffer $r4;
        com.hp.hpl.jena.tdb.base.record.RecordFactory $r5;

        r2 := @this: com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.block.Block;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.block.Block: java.nio.ByteBuffer getByteBuffer()>();

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        $i0 = r2.<com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase: int headerLength>;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i0);

        $r3 = virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer slice()>();

        $r4 = new com.hp.hpl.jena.tdb.base.buffer.RecordBuffer;

        $r5 = r2.<com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase: com.hp.hpl.jena.tdb.base.record.RecordFactory factory>;

        specialinvoke $r4.<com.hp.hpl.jena.tdb.base.buffer.RecordBuffer: void <init>(java.nio.ByteBuffer,com.hp.hpl.jena.tdb.base.record.RecordFactory,int)>($r3, $r5, i1);

        r2.<com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase: com.hp.hpl.jena.tdb.base.buffer.RecordBuffer recBuff> = $r4;

        return;
    }

    public final com.hp.hpl.jena.tdb.base.buffer.RecordBuffer getRecordBuffer()
    {
        com.hp.hpl.jena.tdb.base.buffer.RecordBuffer $r1;
        com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase: com.hp.hpl.jena.tdb.base.buffer.RecordBuffer recBuff>;

        return $r1;
    }

    public final int getCount()
    {
        com.hp.hpl.jena.tdb.base.buffer.RecordBuffer $r1;
        int $i0;
        com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase: com.hp.hpl.jena.tdb.base.buffer.RecordBuffer recBuff>;

        $i0 = virtualinvoke $r1.<com.hp.hpl.jena.tdb.base.buffer.RecordBuffer: int size()>();

        return $i0;
    }

    public final int getMaxSize()
    {
        com.hp.hpl.jena.tdb.base.buffer.RecordBuffer $r1;
        int $i0;
        com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase: com.hp.hpl.jena.tdb.base.buffer.RecordBuffer recBuff>;

        $i0 = virtualinvoke $r1.<com.hp.hpl.jena.tdb.base.buffer.RecordBuffer: int maxSize()>();

        return $i0;
    }

    public void setCount(int)
    {
        int i0;
        com.hp.hpl.jena.tdb.base.buffer.RecordBuffer $r1;
        com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase;

        i0 := @parameter0: int;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase: com.hp.hpl.jena.tdb.base.buffer.RecordBuffer recBuff>;

        virtualinvoke $r1.<com.hp.hpl.jena.tdb.base.buffer.RecordBuffer: void setSize(int)>(i0);

        return;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r0;
        java.lang.Long $r3;
        com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase r1;
        com.hp.hpl.jena.tdb.base.block.Block $r2;
        com.hp.hpl.jena.tdb.base.buffer.RecordBuffer $r4;
        java.lang.String $r5;

        r1 := @this: com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase;

        $r0 = newarray (java.lang.Object)[2];

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase: com.hp.hpl.jena.tdb.base.block.Block getBackingBlock()>();

        $r3 = virtualinvoke $r2.<com.hp.hpl.jena.tdb.base.block.Block: java.lang.Long getId()>();

        $r0[0] = $r3;

        $r4 = r1.<com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase: com.hp.hpl.jena.tdb.base.buffer.RecordBuffer recBuff>;

        $r0[1] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("RecordBufferPageBase[id=%d]: %s", $r0);

        return $r5;
    }

    public void output(org.apache.jena.atlas.io.IndentedWriter)
    {
        java.lang.String $r2;
        org.apache.jena.atlas.io.IndentedWriter r0;
        com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase r1;

        r1 := @this: com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase;

        r0 := @parameter0: org.apache.jena.atlas.io.IndentedWriter;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>($r2);

        return;
    }

    public static void <clinit>()
    {
        <com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase: int FIELD_LENGTH> = 4;

        <com.hp.hpl.jena.tdb.base.recordbuffer.RecordBufferPageBase: int COUNT> = 0;

        return;
    }
}
