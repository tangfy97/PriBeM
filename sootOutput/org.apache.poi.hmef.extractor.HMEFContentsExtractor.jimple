public final class org.apache.poi.hmef.extractor.HMEFContentsExtractor extends java.lang.Object
{
    private org.apache.poi.hmef.HMEFMessage message;

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        org.apache.poi.hmef.extractor.HMEFContentsExtractor $r1;
        java.lang.String[] r0;
        int $i0;
        java.lang.String $r3, $r5, $r12, $r15;
        boolean $z0;
        java.io.PrintStream $r7, $r8, $r16, $r17, $r18, $r19, $r20, $r21;
        java.io.File $r2, $r4, $r6;
        java.io.FileNotFoundException $r9;
        java.lang.StringBuilder $r10, $r11, $r13, $r14;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 >= 2 goto label1;

        $r16 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>("Use:");

        $r17 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>("  HMEFContentsExtractor <filename> <output dir>");

        $r18 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>("");

        $r19 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>("");

        $r20 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>("Where <filename> is the winmail.dat file to extract,");

        $r21 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>(" and <output dir> is where to place the extracted files");

        staticinvoke <java.lang.System: void exit(int)>(2);

     label1:
        $r1 = new org.apache.poi.hmef.extractor.HMEFContentsExtractor;

        $r2 = new java.io.File;

        $r3 = r0[0];

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r3);

        specialinvoke $r1.<org.apache.poi.hmef.extractor.HMEFContentsExtractor: void <init>(java.io.File)>($r2);

        $r4 = new java.io.File;

        $r5 = r0[1];

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r5);

        $r6 = new java.io.File;

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, "message.rtf");

        $z0 = virtualinvoke $r4.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label2;

        $r9 = new java.io.FileNotFoundException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Output directory ");

        $r12 = virtualinvoke $r4.<java.io.File: java.lang.String getName()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r15);

        throw $r9;

     label2:
        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("Extracting...");

        virtualinvoke $r1.<org.apache.poi.hmef.extractor.HMEFContentsExtractor: void extractMessageBody(java.io.File)>($r6);

        virtualinvoke $r1.<org.apache.poi.hmef.extractor.HMEFContentsExtractor: void extractAttachments(java.io.File)>($r4);

        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("Extraction completed");

        return;
    }

    public void <init>(java.io.File) throws java.io.IOException
    {
        org.apache.poi.hmef.extractor.HMEFContentsExtractor r0;
        org.apache.poi.hmef.HMEFMessage $r1;
        java.io.FileInputStream $r2;
        java.io.File r3;

        r0 := @this: org.apache.poi.hmef.extractor.HMEFContentsExtractor;

        r3 := @parameter0: java.io.File;

        $r1 = new org.apache.poi.hmef.HMEFMessage;

        $r2 = new java.io.FileInputStream;

        specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>(r3);

        specialinvoke $r1.<org.apache.poi.hmef.HMEFMessage: void <init>(java.io.InputStream)>($r2);

        specialinvoke r0.<org.apache.poi.hmef.extractor.HMEFContentsExtractor: void <init>(org.apache.poi.hmef.HMEFMessage)>($r1);

        return;
    }

    public void <init>(org.apache.poi.hmef.HMEFMessage)
    {
        org.apache.poi.hmef.HMEFMessage r1;
        org.apache.poi.hmef.extractor.HMEFContentsExtractor r0;

        r0 := @this: org.apache.poi.hmef.extractor.HMEFContentsExtractor;

        r1 := @parameter0: org.apache.poi.hmef.HMEFMessage;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.hmef.extractor.HMEFContentsExtractor: org.apache.poi.hmef.HMEFMessage message> = r1;

        return;
    }

    public void extractMessageBody(java.io.File) throws java.io.IOException
    {
        byte[] $r7;
        org.apache.poi.hmef.extractor.HMEFContentsExtractor r2;
        org.apache.poi.hsmf.datatypes.MAPIProperty $r3;
        java.io.FileOutputStream $r0;
        java.io.File r1;
        org.apache.poi.hmef.attribute.MAPIAttribute $r5;
        org.apache.poi.hmef.HMEFMessage $r4;
        org.apache.poi.hmef.attribute.MAPIRtfAttribute r6;

        r2 := @this: org.apache.poi.hmef.extractor.HMEFContentsExtractor;

        r1 := @parameter0: java.io.File;

        $r0 = new java.io.FileOutputStream;

        specialinvoke $r0.<java.io.FileOutputStream: void <init>(java.io.File)>(r1);

        $r4 = r2.<org.apache.poi.hmef.extractor.HMEFContentsExtractor: org.apache.poi.hmef.HMEFMessage message>;

        $r3 = <org.apache.poi.hsmf.datatypes.MAPIProperty: org.apache.poi.hsmf.datatypes.MAPIProperty RTF_COMPRESSED>;

        $r5 = virtualinvoke $r4.<org.apache.poi.hmef.HMEFMessage: org.apache.poi.hmef.attribute.MAPIAttribute getMessageMAPIAttribute(org.apache.poi.hsmf.datatypes.MAPIProperty)>($r3);

        r6 = (org.apache.poi.hmef.attribute.MAPIRtfAttribute) $r5;

        $r7 = virtualinvoke r6.<org.apache.poi.hmef.attribute.MAPIRtfAttribute: byte[] getData()>();

        virtualinvoke $r0.<java.io.FileOutputStream: void write(byte[])>($r7);

        virtualinvoke $r0.<java.io.FileOutputStream: void close()>();

        return;
    }

    public void extractAttachments(java.io.File) throws java.io.IOException
    {
        byte[] $r20;
        org.apache.poi.hmef.extractor.HMEFContentsExtractor r0;
        int $i0, $i1, i2;
        java.lang.String $r6, $r10, $r11, $r15, r17;
        boolean $z0;
        java.util.Iterator $r3;
        org.apache.poi.hmef.Attachment r5;
        java.io.FileOutputStream $r19;
        java.io.File r12, $r18;
        java.util.List $r2;
        org.apache.poi.hmef.HMEFMessage $r1;
        java.lang.Object $r4;
        java.lang.StringBuilder $r7, $r8, $r9, $r13, $r14, $r16;

        r0 := @this: org.apache.poi.hmef.extractor.HMEFContentsExtractor;

        r12 := @parameter0: java.io.File;

        i2 = 0;

        $r1 = r0.<org.apache.poi.hmef.extractor.HMEFContentsExtractor: org.apache.poi.hmef.HMEFMessage message>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hmef.HMEFMessage: java.util.List getAttachments()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.poi.hmef.Attachment) $r4;

        i2 = i2 + 1;

        $r6 = virtualinvoke r5.<org.apache.poi.hmef.Attachment: java.lang.String getLongFilename()>();

        r17 = $r6;

        if $r6 == null goto label2;

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i1 != 0 goto label3;

     label2:
        r17 = virtualinvoke r5.<org.apache.poi.hmef.Attachment: java.lang.String getFilename()>();

     label3:
        if r17 == null goto label4;

        $i0 = virtualinvoke r17.<java.lang.String: int length()>();

        if $i0 != 0 goto label5;

     label4:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("attachment");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r17 = $r10;

        $r11 = virtualinvoke r5.<org.apache.poi.hmef.Attachment: java.lang.String getExtension()>();

        if $r11 == null goto label5;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r15 = virtualinvoke r5.<org.apache.poi.hmef.Attachment: java.lang.String getExtension()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        $r18 = new java.io.File;

        specialinvoke $r18.<java.io.File: void <init>(java.io.File,java.lang.String)>(r12, r17);

        $r19 = new java.io.FileOutputStream;

        specialinvoke $r19.<java.io.FileOutputStream: void <init>(java.io.File)>($r18);

        $r20 = virtualinvoke r5.<org.apache.poi.hmef.Attachment: byte[] getContents()>();

        virtualinvoke $r19.<java.io.FileOutputStream: void write(byte[])>($r20);

        virtualinvoke $r19.<java.io.FileOutputStream: void close()>();

        goto label1;

     label6:
        return;
    }
}
