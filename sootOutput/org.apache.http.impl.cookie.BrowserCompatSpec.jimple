public class org.apache.http.impl.cookie.BrowserCompatSpec extends org.apache.http.impl.cookie.CookieSpecBase
{
    private static final java.lang.String[] DEFAULT_DATE_PATTERNS;
    private final java.lang.String[] datepatterns;

    public void <init>(java.lang.String[])
    {
        org.apache.http.impl.cookie.BasicCommentHandler $r7;
        org.apache.http.impl.cookie.BasicMaxAgeHandler $r5;
        org.apache.http.impl.cookie.BrowserCompatVersionAttributeHandler $r10;
        java.lang.String[] r1, $r2, $r9, $r12;
        org.apache.http.impl.cookie.BrowserCompatSpec r0;
        org.apache.http.impl.cookie.BasicExpiresHandler $r8;
        org.apache.http.impl.cookie.BasicSecureHandler $r6;
        java.lang.Object $r11;
        org.apache.http.impl.cookie.BasicPathHandler $r3;
        org.apache.http.impl.cookie.BasicDomainHandler $r4;

        r0 := @this: org.apache.http.impl.cookie.BrowserCompatSpec;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<org.apache.http.impl.cookie.CookieSpecBase: void <init>()>();

        if r1 == null goto label1;

        $r11 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        $r12 = (java.lang.String[]) $r11;

        r0.<org.apache.http.impl.cookie.BrowserCompatSpec: java.lang.String[] datepatterns> = $r12;

        goto label2;

     label1:
        $r2 = <org.apache.http.impl.cookie.BrowserCompatSpec: java.lang.String[] DEFAULT_DATE_PATTERNS>;

        r0.<org.apache.http.impl.cookie.BrowserCompatSpec: java.lang.String[] datepatterns> = $r2;

     label2:
        $r3 = new org.apache.http.impl.cookie.BasicPathHandler;

        specialinvoke $r3.<org.apache.http.impl.cookie.BasicPathHandler: void <init>()>();

        virtualinvoke r0.<org.apache.http.impl.cookie.BrowserCompatSpec: void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler)>("path", $r3);

        $r4 = new org.apache.http.impl.cookie.BasicDomainHandler;

        specialinvoke $r4.<org.apache.http.impl.cookie.BasicDomainHandler: void <init>()>();

        virtualinvoke r0.<org.apache.http.impl.cookie.BrowserCompatSpec: void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler)>("domain", $r4);

        $r5 = new org.apache.http.impl.cookie.BasicMaxAgeHandler;

        specialinvoke $r5.<org.apache.http.impl.cookie.BasicMaxAgeHandler: void <init>()>();

        virtualinvoke r0.<org.apache.http.impl.cookie.BrowserCompatSpec: void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler)>("max-age", $r5);

        $r6 = new org.apache.http.impl.cookie.BasicSecureHandler;

        specialinvoke $r6.<org.apache.http.impl.cookie.BasicSecureHandler: void <init>()>();

        virtualinvoke r0.<org.apache.http.impl.cookie.BrowserCompatSpec: void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler)>("secure", $r6);

        $r7 = new org.apache.http.impl.cookie.BasicCommentHandler;

        specialinvoke $r7.<org.apache.http.impl.cookie.BasicCommentHandler: void <init>()>();

        virtualinvoke r0.<org.apache.http.impl.cookie.BrowserCompatSpec: void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler)>("comment", $r7);

        $r8 = new org.apache.http.impl.cookie.BasicExpiresHandler;

        $r9 = r0.<org.apache.http.impl.cookie.BrowserCompatSpec: java.lang.String[] datepatterns>;

        specialinvoke $r8.<org.apache.http.impl.cookie.BasicExpiresHandler: void <init>(java.lang.String[])>($r9);

        virtualinvoke r0.<org.apache.http.impl.cookie.BrowserCompatSpec: void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler)>("expires", $r8);

        $r10 = new org.apache.http.impl.cookie.BrowserCompatVersionAttributeHandler;

        specialinvoke $r10.<org.apache.http.impl.cookie.BrowserCompatVersionAttributeHandler: void <init>()>();

        virtualinvoke r0.<org.apache.http.impl.cookie.BrowserCompatSpec: void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler)>("version", $r10);

        return;
    }

    public void <init>()
    {
        org.apache.http.impl.cookie.BrowserCompatSpec r0;

        r0 := @this: org.apache.http.impl.cookie.BrowserCompatSpec;

        specialinvoke r0.<org.apache.http.impl.cookie.BrowserCompatSpec: void <init>(java.lang.String[])>(null);

        return;
    }

    public java.util.List parse(org.apache.http.Header, org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException
    {
        org.apache.http.HeaderElement[] $r3, $r7, r27;
        org.apache.http.Header r0;
        org.apache.http.cookie.MalformedCookieException $r10, $r18;
        boolean $z0, $z1, z2, z3;
        org.apache.http.cookie.CookieOrigin r1;
        java.util.List $r31;
        java.lang.StringBuilder $r19, $r20, $r22, $r23;
        org.apache.http.NameValuePair $r16, $r17;
        org.apache.http.FormattedHeader $r11, $r14;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.lang.String $r2, $r4, $r21, $r24;
        org.apache.http.impl.cookie.NetscapeDraftHeaderParser $r15;
        org.apache.http.HeaderElement $r8, r28;
        org.apache.http.impl.cookie.BrowserCompatSpec r9;
        java.lang.IllegalArgumentException $r25, $r26;
        org.apache.http.util.CharArrayBuffer $r5, $r12, r29;
        org.apache.http.message.ParserCursor $r6, $r13, r30;

        r9 := @this: org.apache.http.impl.cookie.BrowserCompatSpec;

        r0 := @parameter0: org.apache.http.Header;

        r1 := @parameter1: org.apache.http.cookie.CookieOrigin;

        if r0 != null goto label01;

        $r26 = new java.lang.IllegalArgumentException;

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Header may not be null");

        throw $r26;

     label01:
        if r1 != null goto label02;

        $r25 = new java.lang.IllegalArgumentException;

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r25;

     label02:
        $r2 = interfaceinvoke r0.<org.apache.http.Header: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Set-Cookie");

        if $z0 != 0 goto label03;

        $r18 = new org.apache.http.cookie.MalformedCookieException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized cookie header \'");

        $r21 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>($r24);

        throw $r18;

     label03:
        $r3 = interfaceinvoke r0.<org.apache.http.Header: org.apache.http.HeaderElement[] getElements()>();

        r27 = $r3;

        z2 = 0;

        z3 = 0;

        i4 = lengthof $r3;

        i5 = 0;

     label04:
        if i5 >= i4 goto label07;

        r28 = $r3[i5];

        $r16 = interfaceinvoke r28.<org.apache.http.HeaderElement: org.apache.http.NameValuePair getParameterByName(java.lang.String)>("version");

        if $r16 == null goto label05;

        z2 = 1;

     label05:
        $r17 = interfaceinvoke r28.<org.apache.http.HeaderElement: org.apache.http.NameValuePair getParameterByName(java.lang.String)>("expires");

        if $r17 == null goto label06;

        z3 = 1;

     label06:
        i5 = i5 + 1;

        goto label04;

     label07:
        if z3 != 0 goto label08;

        if z2 != 0 goto label12;

     label08:
        $r15 = <org.apache.http.impl.cookie.NetscapeDraftHeaderParser: org.apache.http.impl.cookie.NetscapeDraftHeaderParser DEFAULT>;

        $z1 = r0 instanceof org.apache.http.FormattedHeader;

        if $z1 == 0 goto label09;

        $r11 = (org.apache.http.FormattedHeader) r0;

        $r12 = interfaceinvoke $r11.<org.apache.http.FormattedHeader: org.apache.http.util.CharArrayBuffer getBuffer()>();

        r29 = $r12;

        $r13 = new org.apache.http.message.ParserCursor;

        $r14 = (org.apache.http.FormattedHeader) r0;

        $i2 = interfaceinvoke $r14.<org.apache.http.FormattedHeader: int getValuePos()>();

        $i3 = virtualinvoke $r12.<org.apache.http.util.CharArrayBuffer: int length()>();

        specialinvoke $r13.<org.apache.http.message.ParserCursor: void <init>(int,int)>($i2, $i3);

        r30 = $r13;

        goto label11;

     label09:
        $r4 = interfaceinvoke r0.<org.apache.http.Header: java.lang.String getValue()>();

        if $r4 != null goto label10;

        $r10 = new org.apache.http.cookie.MalformedCookieException;

        specialinvoke $r10.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>("Header value is null");

        throw $r10;

     label10:
        $r5 = new org.apache.http.util.CharArrayBuffer;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        specialinvoke $r5.<org.apache.http.util.CharArrayBuffer: void <init>(int)>($i0);

        r29 = $r5;

        virtualinvoke $r5.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r4);

        $r6 = new org.apache.http.message.ParserCursor;

        $i1 = virtualinvoke $r5.<org.apache.http.util.CharArrayBuffer: int length()>();

        specialinvoke $r6.<org.apache.http.message.ParserCursor: void <init>(int,int)>(0, $i1);

        r30 = $r6;

     label11:
        $r7 = newarray (org.apache.http.HeaderElement)[1];

        $r8 = virtualinvoke $r15.<org.apache.http.impl.cookie.NetscapeDraftHeaderParser: org.apache.http.HeaderElement parseHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>(r29, r30);

        $r7[0] = $r8;

        r27 = $r7;

     label12:
        $r31 = virtualinvoke r9.<org.apache.http.impl.cookie.BrowserCompatSpec: java.util.List parse(org.apache.http.HeaderElement[],org.apache.http.cookie.CookieOrigin)>(r27, r1);

        return $r31;
    }

    public java.util.List formatCookies(java.util.List)
    {
        org.apache.http.message.BasicHeaderElement $r8;
        java.util.ArrayList $r2;
        int $i0, $i1, $i2, $i3, i4;
        org.apache.http.cookie.Cookie r5;
        java.lang.String $r6, $r7, $r10, $r11;
        boolean $z0;
        org.apache.http.impl.cookie.BrowserCompatSpec r14;
        org.apache.http.message.BufferedHeader $r3;
        java.lang.IllegalArgumentException $r12, $r13;
        org.apache.http.util.CharArrayBuffer $r1;
        org.apache.http.message.BasicHeaderValueFormatter $r9;
        java.util.List r0;
        java.lang.Object $r4;

        r14 := @this: org.apache.http.impl.cookie.BrowserCompatSpec;

        r0 := @parameter0: java.util.List;

        if r0 != null goto label1;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("List of cookies may not be null");

        throw $r13;

     label1:
        $z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("List of cookies may not be empty");

        throw $r12;

     label2:
        $r1 = new org.apache.http.util.CharArrayBuffer;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $i1 = 20 * $i0;

        specialinvoke $r1.<org.apache.http.util.CharArrayBuffer: void <init>(int)>($i1);

        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("Cookie");

        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>(": ");

        i4 = 0;

     label3:
        $i2 = interfaceinvoke r0.<java.util.List: int size()>();

        if i4 >= $i2 goto label7;

        $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i4);

        r5 = (org.apache.http.cookie.Cookie) $r4;

        if i4 <= 0 goto label4;

        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("; ");

     label4:
        $i3 = interfaceinvoke r5.<org.apache.http.cookie.Cookie: int getVersion()>();

        if $i3 <= 0 goto label5;

        $r9 = <org.apache.http.message.BasicHeaderValueFormatter: org.apache.http.message.BasicHeaderValueFormatter DEFAULT>;

        $r8 = new org.apache.http.message.BasicHeaderElement;

        $r10 = interfaceinvoke r5.<org.apache.http.cookie.Cookie: java.lang.String getName()>();

        $r11 = interfaceinvoke r5.<org.apache.http.cookie.Cookie: java.lang.String getValue()>();

        specialinvoke $r8.<org.apache.http.message.BasicHeaderElement: void <init>(java.lang.String,java.lang.String)>($r10, $r11);

        virtualinvoke $r9.<org.apache.http.message.BasicHeaderValueFormatter: org.apache.http.util.CharArrayBuffer formatHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.HeaderElement,boolean)>($r1, $r8, 0);

        goto label6;

     label5:
        $r6 = interfaceinvoke r5.<org.apache.http.cookie.Cookie: java.lang.String getName()>();

        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r6);

        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("=");

        $r7 = interfaceinvoke r5.<org.apache.http.cookie.Cookie: java.lang.String getValue()>();

        if $r7 == null goto label6;

        virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r7);

     label6:
        i4 = i4 + 1;

        goto label3;

     label7:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(1);

        $r3 = new org.apache.http.message.BufferedHeader;

        specialinvoke $r3.<org.apache.http.message.BufferedHeader: void <init>(org.apache.http.util.CharArrayBuffer)>($r1);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        return $r2;
    }

    public int getVersion()
    {
        org.apache.http.impl.cookie.BrowserCompatSpec r0;

        r0 := @this: org.apache.http.impl.cookie.BrowserCompatSpec;

        return 0;
    }

    public org.apache.http.Header getVersionHeader()
    {
        org.apache.http.impl.cookie.BrowserCompatSpec r0;

        r0 := @this: org.apache.http.impl.cookie.BrowserCompatSpec;

        return null;
    }

    public java.lang.String toString()
    {
        org.apache.http.impl.cookie.BrowserCompatSpec r0;

        r0 := @this: org.apache.http.impl.cookie.BrowserCompatSpec;

        return "compatibility";
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[14];

        $r0[0] = "EEE, dd MMM yyyy HH:mm:ss zzz";

        $r0[1] = "EEE, dd-MMM-yy HH:mm:ss zzz";

        $r0[2] = "EEE MMM d HH:mm:ss yyyy";

        $r0[3] = "EEE, dd-MMM-yyyy HH:mm:ss z";

        $r0[4] = "EEE, dd-MMM-yyyy HH-mm-ss z";

        $r0[5] = "EEE, dd MMM yy HH:mm:ss z";

        $r0[6] = "EEE dd-MMM-yyyy HH:mm:ss z";

        $r0[7] = "EEE dd MMM yyyy HH:mm:ss z";

        $r0[8] = "EEE dd-MMM-yyyy HH-mm-ss z";

        $r0[9] = "EEE dd-MMM-yy HH:mm:ss z";

        $r0[10] = "EEE dd MMM yy HH:mm:ss z";

        $r0[11] = "EEE,dd-MMM-yy HH:mm:ss z";

        $r0[12] = "EEE,dd-MMM-yyyy HH:mm:ss z";

        $r0[13] = "EEE, dd-MM-yyyy HH:mm:ss z";

        <org.apache.http.impl.cookie.BrowserCompatSpec: java.lang.String[] DEFAULT_DATE_PATTERNS> = $r0;

        return;
    }
}
