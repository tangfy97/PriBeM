public class com.sun.lwuit.Container extends com.sun.lwuit.Component
{
    private com.sun.lwuit.layouts.Layout layout;
    private java.util.Vector components;
    private boolean shouldLayout;
    private boolean scrollableX;
    private boolean scrollableY;
    private java.util.Vector cmpTransitions;
    private int scrollIncrement;

    public void <init>(com.sun.lwuit.layouts.Layout)
    {
        java.util.Vector $r1;
        com.sun.lwuit.plaf.LookAndFeel $r4;
        com.sun.lwuit.layouts.Layout r2;
        com.sun.lwuit.Container r0;
        com.sun.lwuit.plaf.UIManager $r3;
        boolean $z0;

        r0 := @this: com.sun.lwuit.Container;

        r2 := @parameter0: com.sun.lwuit.layouts.Layout;

        specialinvoke r0.<com.sun.lwuit.Component: void <init>()>();

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        r0.<com.sun.lwuit.Container: java.util.Vector components> = $r1;

        r0.<com.sun.lwuit.Container: boolean shouldLayout> = 1;

        r0.<com.sun.lwuit.Container: int scrollIncrement> = 20;

        virtualinvoke r0.<com.sun.lwuit.Container: void setUIID(java.lang.String)>("Container");

        r0.<com.sun.lwuit.Container: com.sun.lwuit.layouts.Layout layout> = r2;

        virtualinvoke r0.<com.sun.lwuit.Container: void setFocusable(boolean)>(0);

        $r3 = staticinvoke <com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.UIManager getInstance()>();

        $r4 = virtualinvoke $r3.<com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.LookAndFeel getLookAndFeel()>();

        $z0 = virtualinvoke $r4.<com.sun.lwuit.plaf.LookAndFeel: boolean isDefaultSmoothScrolling()>();

        virtualinvoke r0.<com.sun.lwuit.Container: void setSmoothScrolling(boolean)>($z0);

        return;
    }

    public void <init>()
    {
        com.sun.lwuit.layouts.FlowLayout $r1;
        com.sun.lwuit.Container r0;

        r0 := @this: com.sun.lwuit.Container;

        $r1 = new com.sun.lwuit.layouts.FlowLayout;

        specialinvoke $r1.<com.sun.lwuit.layouts.FlowLayout: void <init>()>();

        specialinvoke r0.<com.sun.lwuit.Container: void <init>(com.sun.lwuit.layouts.Layout)>($r1);

        return;
    }

    public com.sun.lwuit.layouts.Layout getLayout()
    {
        com.sun.lwuit.layouts.Layout $r1;
        com.sun.lwuit.Container r0;

        r0 := @this: com.sun.lwuit.Container;

        $r1 = r0.<com.sun.lwuit.Container: com.sun.lwuit.layouts.Layout layout>;

        return $r1;
    }

    public void setLayout(com.sun.lwuit.layouts.Layout)
    {
        com.sun.lwuit.layouts.Layout r1;
        com.sun.lwuit.Container r0;

        r0 := @this: com.sun.lwuit.Container;

        r1 := @parameter0: com.sun.lwuit.layouts.Layout;

        r0.<com.sun.lwuit.Container: com.sun.lwuit.layouts.Layout layout> = r1;

        return;
    }

    public void invalidate()
    {
        com.sun.lwuit.Container r0;

        r0 := @this: com.sun.lwuit.Container;

        virtualinvoke r0.<com.sun.lwuit.Container: void setShouldCalcPreferredSize(boolean)>(1);

        return;
    }

    protected void setShouldLayout(boolean)
    {
        com.sun.lwuit.Container r0, $r1;
        boolean z0, $z1;

        r0 := @this: com.sun.lwuit.Container;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.sun.lwuit.Container: boolean shouldLayout>;

        if $z1 == z0 goto label1;

        r0.<com.sun.lwuit.Container: boolean shouldLayout> = z0;

        r0.<com.sun.lwuit.Container: boolean shouldCalcPreferredSize> = z0;

        r0.<com.sun.lwuit.Container: boolean shouldCalcScrollSize> = z0;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Container: com.sun.lwuit.Container getParent()>();

        if $r1 == null goto label1;

        virtualinvoke $r1.<com.sun.lwuit.Container: void setShouldLayout(boolean)>(z0);

     label1:
        return;
    }

    protected void setShouldCalcPreferredSize(boolean)
    {
        com.sun.lwuit.Form $r1;
        com.sun.lwuit.Container r0, $r6;
        com.sun.lwuit.Component r5;
        java.util.Vector $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;
        boolean z0, $z1, $z2;

        r0 := @this: com.sun.lwuit.Container;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.sun.lwuit.Component: void setShouldCalcPreferredSize(boolean)>(z0);

        r0.<com.sun.lwuit.Container: boolean shouldLayout> = z0;

        $z1 = r0.<com.sun.lwuit.Container: boolean shouldLayout>;

        if $z1 == 0 goto label3;

        $r2 = r0.<com.sun.lwuit.Container: java.util.Vector components>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label3;

        $r3 = r0.<com.sun.lwuit.Container: java.util.Vector components>;

        $r4 = virtualinvoke $r3.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r5 = (com.sun.lwuit.Component) $r4;

        $z2 = r5 instanceof com.sun.lwuit.Container;

        if $z2 == 0 goto label2;

        $r6 = (com.sun.lwuit.Container) r5;

        virtualinvoke $r6.<com.sun.lwuit.Container: void setShouldCalcPreferredSize(boolean)>(z0);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r1 = virtualinvoke r0.<com.sun.lwuit.Container: com.sun.lwuit.Form getComponentForm()>();

        if $r1 == null goto label4;

        virtualinvoke $r1.<com.sun.lwuit.Form: void clearFocusVectors()>();

     label4:
        return;
    }

    public int getLayoutWidth()
    {
        com.sun.lwuit.Container r0, $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0, $z1;

        r0 := @this: com.sun.lwuit.Container;

        $z0 = virtualinvoke r0.<com.sun.lwuit.Container: boolean isScrollableX()>();

        if $z0 == 0 goto label1;

        $i5 = virtualinvoke r0.<com.sun.lwuit.Container: int getWidth()>();

        $i6 = virtualinvoke r0.<com.sun.lwuit.Container: int getPreferredW()>();

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i6);

        return $i7;

     label1:
        $r1 = specialinvoke r0.<com.sun.lwuit.Container: com.sun.lwuit.Container getScrollableParent()>();

        if $r1 == null goto label2;

        $z1 = virtualinvoke $r1.<com.sun.lwuit.Container: boolean isScrollableX()>();

        if $z1 == 0 goto label2;

        $i2 = virtualinvoke r0.<com.sun.lwuit.Container: int getWidth()>();

        $i3 = virtualinvoke r0.<com.sun.lwuit.Container: int getPreferredW()>();

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i3);

        return $i4;

     label2:
        $i0 = virtualinvoke r0.<com.sun.lwuit.Container: int getWidth()>();

        if $i0 > 0 goto label3;

        $i1 = virtualinvoke r0.<com.sun.lwuit.Container: int getPreferredW()>();

        return $i1;

     label3:
        return $i0;
    }

    public int getLayoutHeight()
    {
        com.sun.lwuit.Container r0, $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0, $z1;

        r0 := @this: com.sun.lwuit.Container;

        $z0 = virtualinvoke r0.<com.sun.lwuit.Container: boolean isScrollableY()>();

        if $z0 == 0 goto label1;

        $i5 = virtualinvoke r0.<com.sun.lwuit.Container: int getHeight()>();

        $i6 = virtualinvoke r0.<com.sun.lwuit.Container: int getPreferredH()>();

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i6);

        return $i7;

     label1:
        $r1 = specialinvoke r0.<com.sun.lwuit.Container: com.sun.lwuit.Container getScrollableParent()>();

        if $r1 == null goto label2;

        $z1 = virtualinvoke $r1.<com.sun.lwuit.Container: boolean isScrollableY()>();

        if $z1 == 0 goto label2;

        $i2 = virtualinvoke r0.<com.sun.lwuit.Container: int getHeight()>();

        $i3 = virtualinvoke r0.<com.sun.lwuit.Container: int getPreferredH()>();

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i3);

        return $i4;

     label2:
        $i0 = virtualinvoke r0.<com.sun.lwuit.Container: int getHeight()>();

        if $i0 > 1 goto label3;

        $i1 = virtualinvoke r0.<com.sun.lwuit.Container: int getPreferredH()>();

        return $i1;

     label3:
        return $i0;
    }

    public void applyRTL(boolean)
    {
        com.sun.lwuit.Component $r1;
        int $i0, i1;
        com.sun.lwuit.Container r0, $r2;
        boolean z0, $z1;

        r0 := @this: com.sun.lwuit.Container;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.sun.lwuit.Container: void setRTL(boolean)>(z0);

        $i0 = virtualinvoke r0.<com.sun.lwuit.Container: int getComponentCount()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label4;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Container: com.sun.lwuit.Component getComponentAt(int)>(i1);

        $z1 = $r1 instanceof com.sun.lwuit.Container;

        if $z1 == 0 goto label2;

        $r2 = (com.sun.lwuit.Container) $r1;

        virtualinvoke $r2.<com.sun.lwuit.Container: void applyRTL(boolean)>(z0);

        goto label3;

     label2:
        virtualinvoke $r1.<com.sun.lwuit.Component: void setRTL(boolean)>(z0);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    private com.sun.lwuit.Container getScrollableParent()
    {
        com.sun.lwuit.Container r0, r1;
        boolean $z0;

        r0 := @this: com.sun.lwuit.Container;

        r1 = virtualinvoke r0.<com.sun.lwuit.Container: com.sun.lwuit.Container getParent()>();

     label1:
        if r1 == null goto label3;

        $z0 = virtualinvoke r1.<com.sun.lwuit.Container: boolean isScrollable()>();

        if $z0 == 0 goto label2;

        return r1;

     label2:
        r1 = virtualinvoke r1.<com.sun.lwuit.Container: com.sun.lwuit.Container getParent()>();

        goto label1;

     label3:
        return null;
    }

    public void addComponent(com.sun.lwuit.Component)
    {
        com.sun.lwuit.Component r1;
        java.util.Vector $r3;
        int $i0;
        com.sun.lwuit.layouts.Layout $r2;
        com.sun.lwuit.Container r0;

        r0 := @this: com.sun.lwuit.Container;

        r1 := @parameter0: com.sun.lwuit.Component;

        $r2 = r0.<com.sun.lwuit.Container: com.sun.lwuit.layouts.Layout layout>;

        virtualinvoke $r2.<com.sun.lwuit.layouts.Layout: void addLayoutComponent(java.lang.Object,com.sun.lwuit.Component,com.sun.lwuit.Container)>(null, r1, r0);

        $r3 = r0.<com.sun.lwuit.Container: java.util.Vector components>;

        $i0 = virtualinvoke $r3.<java.util.Vector: int size()>();

        specialinvoke r0.<com.sun.lwuit.Container: void insertComponentAt(int,com.sun.lwuit.Component)>($i0, r1);

        return;
    }

    public void addComponent(java.lang.Object, com.sun.lwuit.Component)
    {
        com.sun.lwuit.Component r2;
        java.util.Vector $r4;
        int $i0;
        java.lang.Object r1;
        com.sun.lwuit.layouts.Layout $r3;
        com.sun.lwuit.Container r0;

        r0 := @this: com.sun.lwuit.Container;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: com.sun.lwuit.Component;

        $r3 = r0.<com.sun.lwuit.Container: com.sun.lwuit.layouts.Layout layout>;

        virtualinvoke $r3.<com.sun.lwuit.layouts.Layout: void addLayoutComponent(java.lang.Object,com.sun.lwuit.Component,com.sun.lwuit.Container)>(r1, r2, r0);

        $r4 = r0.<com.sun.lwuit.Container: java.util.Vector components>;

        $i0 = virtualinvoke $r4.<java.util.Vector: int size()>();

        specialinvoke r0.<com.sun.lwuit.Container: void insertComponentAt(int,com.sun.lwuit.Component)>($i0, r2);

        return;
    }

    public void addComponent(int, java.lang.Object, com.sun.lwuit.Component)
    {
        com.sun.lwuit.Component r2;
        int i0;
        java.lang.Object r1;
        com.sun.lwuit.layouts.Layout $r3;
        com.sun.lwuit.Container r0;

        r0 := @this: com.sun.lwuit.Container;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: com.sun.lwuit.Component;

        $r3 = r0.<com.sun.lwuit.Container: com.sun.lwuit.layouts.Layout layout>;

        virtualinvoke $r3.<com.sun.lwuit.layouts.Layout: void addLayoutComponent(java.lang.Object,com.sun.lwuit.Component,com.sun.lwuit.Container)>(r1, r2, r0);

        specialinvoke r0.<com.sun.lwuit.Container: void insertComponentAt(int,com.sun.lwuit.Component)>(i0, r2);

        return;
    }

    private void insertComponentAt(int, com.sun.lwuit.Component)
    {
        com.sun.lwuit.Form $r4;
        java.lang.IllegalArgumentException $r5, $r6;
        com.sun.lwuit.Container $r1, r2, $r9;
        com.sun.lwuit.Component r0;
        java.util.Vector $r3;
        int i0;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.String $r11;
        boolean $z0, $z1;

        r2 := @this: com.sun.lwuit.Container;

        i0 := @parameter0: int;

        r0 := @parameter1: com.sun.lwuit.Component;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.Container getParent()>();

        if $r1 == null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Component is already contained in Container: ");

        $r9 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.Container getParent()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label1:
        $z0 = r0 instanceof com.sun.lwuit.Form;

        if $z0 == 0 goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("A form cannot be added to a container");

        throw $r5;

     label2:
        virtualinvoke r0.<com.sun.lwuit.Component: void setParent(com.sun.lwuit.Container)>(r2);

        $r3 = r2.<com.sun.lwuit.Container: java.util.Vector components>;

        virtualinvoke $r3.<java.util.Vector: void insertElementAt(java.lang.Object,int)>(r0, i0);

        virtualinvoke r2.<com.sun.lwuit.Container: void setShouldCalcPreferredSize(boolean)>(1);

        $z1 = virtualinvoke r2.<com.sun.lwuit.Container: boolean isInitialized()>();

        if $z1 == 0 goto label3;

        virtualinvoke r0.<com.sun.lwuit.Component: void initComponentImpl()>();

     label3:
        $r4 = virtualinvoke r2.<com.sun.lwuit.Container: com.sun.lwuit.Form getComponentForm()>();

        if $r4 == null goto label4;

        virtualinvoke $r4.<com.sun.lwuit.Form: void clearFocusVectors()>();

     label4:
        return;
    }

    public void addComponent(int, com.sun.lwuit.Component)
    {
        int i0;
        com.sun.lwuit.Component r1;
        com.sun.lwuit.Container r0;

        r0 := @this: com.sun.lwuit.Container;

        i0 := @parameter0: int;

        r1 := @parameter1: com.sun.lwuit.Component;

        specialinvoke r0.<com.sun.lwuit.Container: void insertComponentAt(int,com.sun.lwuit.Component)>(i0, r1);

        return;
    }

    public void replaceAndWait(com.sun.lwuit.Component, com.sun.lwuit.Component, com.sun.lwuit.animations.Transition)
    {
        com.sun.lwuit.Component r1, r2;
        com.sun.lwuit.animations.Transition r3;
        com.sun.lwuit.Container r0;

        r0 := @this: com.sun.lwuit.Container;

        r1 := @parameter0: com.sun.lwuit.Component;

        r2 := @parameter1: com.sun.lwuit.Component;

        r3 := @parameter2: com.sun.lwuit.animations.Transition;

        specialinvoke r0.<com.sun.lwuit.Container: void replaceComponents(com.sun.lwuit.Component,com.sun.lwuit.Component,com.sun.lwuit.animations.Transition,boolean)>(r1, r2, r3, 1);

        return;
    }

    public void replace(com.sun.lwuit.Component, com.sun.lwuit.Component, com.sun.lwuit.animations.Transition)
    {
        com.sun.lwuit.Component r1, r2;
        com.sun.lwuit.animations.Transition r3;
        com.sun.lwuit.Container r0;

        r0 := @this: com.sun.lwuit.Container;

        r1 := @parameter0: com.sun.lwuit.Component;

        r2 := @parameter1: com.sun.lwuit.Component;

        r3 := @parameter2: com.sun.lwuit.animations.Transition;

        specialinvoke r0.<com.sun.lwuit.Container: void replaceComponents(com.sun.lwuit.Component,com.sun.lwuit.Component,com.sun.lwuit.animations.Transition,boolean)>(r1, r2, r3, 0);

        return;
    }

    private void replaceComponents(com.sun.lwuit.Component, com.sun.lwuit.Component, com.sun.lwuit.animations.Transition, boolean)
    {
        com.sun.lwuit.animations.Transition r2;
        com.sun.lwuit.Component r1, r3;
        com.sun.lwuit.Container$Anim $r5;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r14;
        boolean $z0, $z1, $z2, z3;
        com.sun.lwuit.Display $r7;
        com.sun.lwuit.Form $r4, $r6;
        java.lang.IllegalArgumentException $r9;
        com.sun.lwuit.Container r0, $r8;
        java.lang.StringBuilder $r10, $r11, $r12, $r13;

        r0 := @this: com.sun.lwuit.Container;

        r1 := @parameter0: com.sun.lwuit.Component;

        r3 := @parameter1: com.sun.lwuit.Component;

        r2 := @parameter2: com.sun.lwuit.animations.Transition;

        z3 := @parameter3: boolean;

        $z0 = virtualinvoke r0.<com.sun.lwuit.Container: boolean contains(com.sun.lwuit.Component)>(r1);

        if $z0 != 0 goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Component ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not contained in this Container");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r9;

     label1:
        if r2 == null goto label2;

        $z1 = virtualinvoke r0.<com.sun.lwuit.Container: boolean isVisible()>();

        if $z1 == 0 goto label2;

        $r4 = virtualinvoke r0.<com.sun.lwuit.Container: com.sun.lwuit.Form getComponentForm()>();

        if $r4 != null goto label3;

     label2:
        virtualinvoke r0.<com.sun.lwuit.Container: void replace(com.sun.lwuit.Component,com.sun.lwuit.Component)>(r1, r3);

        return;

     label3:
        $i0 = virtualinvoke r1.<com.sun.lwuit.Component: int getX()>();

        virtualinvoke r3.<com.sun.lwuit.Component: void setX(int)>($i0);

        $i1 = virtualinvoke r1.<com.sun.lwuit.Component: int getY()>();

        virtualinvoke r3.<com.sun.lwuit.Component: void setY(int)>($i1);

        $i2 = virtualinvoke r1.<com.sun.lwuit.Component: int getWidth()>();

        virtualinvoke r3.<com.sun.lwuit.Component: void setWidth(int)>($i2);

        $i3 = virtualinvoke r1.<com.sun.lwuit.Component: int getHeight()>();

        virtualinvoke r3.<com.sun.lwuit.Component: void setHeight(int)>($i3);

        virtualinvoke r3.<com.sun.lwuit.Component: void setParent(com.sun.lwuit.Container)>(r0);

        $z2 = r3 instanceof com.sun.lwuit.Container;

        if $z2 == 0 goto label4;

        $r8 = (com.sun.lwuit.Container) r3;

        virtualinvoke $r8.<com.sun.lwuit.Container: void layoutContainer()>();

     label4:
        $r5 = new com.sun.lwuit.Container$Anim;

        specialinvoke $r5.<com.sun.lwuit.Container$Anim: void <init>(com.sun.lwuit.Container,com.sun.lwuit.Container,com.sun.lwuit.Component,com.sun.lwuit.Component,com.sun.lwuit.animations.Transition)>(r0, r0, r1, r3, r2);

        $r6 = virtualinvoke r0.<com.sun.lwuit.Container: com.sun.lwuit.Form getComponentForm()>();

        virtualinvoke $r6.<com.sun.lwuit.Form: void registerAnimatedInternal(com.sun.lwuit.animations.Animation)>($r5);

        if z3 == 0 goto label5;

        $r7 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        virtualinvoke $r7.<com.sun.lwuit.Display: void invokeAndBlock(java.lang.Runnable)>($r5);

     label5:
        return;
    }

    private boolean isParentOf(com.sun.lwuit.Component)
    {
        com.sun.lwuit.Component r2;
        com.sun.lwuit.Container $r0, r1;
        boolean $z0, $z1, $z2;

        r1 := @this: com.sun.lwuit.Container;

        r2 := @parameter0: com.sun.lwuit.Component;

        $r0 = virtualinvoke r2.<com.sun.lwuit.Component: com.sun.lwuit.Container getParent()>();

        if $r0 == null goto label1;

        $z0 = $r0 instanceof com.sun.lwuit.Form;

        if $z0 == 0 goto label2;

     label1:
        return 0;

     label2:
        if $r0 == r1 goto label3;

        $z1 = specialinvoke r1.<com.sun.lwuit.Container: boolean isParentOf(com.sun.lwuit.Component)>($r0);

        if $z1 == 0 goto label4;

     label3:
        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        return $z2;
    }

    private boolean requestFocusChild()
    {
        com.sun.lwuit.Container r0, $r2;
        com.sun.lwuit.Component $r1;
        int $i0, i1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.sun.lwuit.Container;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<com.sun.lwuit.Container: int getComponentCount()>();

        if i1 >= $i0 goto label4;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Container: com.sun.lwuit.Component getComponentAt(int)>(i1);

        $z0 = virtualinvoke $r1.<com.sun.lwuit.Component: boolean isFocusable()>();

        if $z0 == 0 goto label2;

        virtualinvoke $r1.<com.sun.lwuit.Component: void requestFocus()>();

        return 1;

     label2:
        $z1 = $r1 instanceof com.sun.lwuit.Container;

        if $z1 == 0 goto label3;

        $r2 = (com.sun.lwuit.Container) $r1;

        $z2 = specialinvoke $r2.<com.sun.lwuit.Container: boolean requestFocusChild()>();

        if $z2 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return 0;
    }

    void replace(com.sun.lwuit.Component, com.sun.lwuit.Component)
    {
        com.sun.lwuit.Component r1, r4, $r10;
        java.util.Vector $r2;
        int $i0, i1;
        com.sun.lwuit.layouts.Layout $r6, $r8, $r12;
        boolean $z0, $z1, $z2, $z3, z4, $z6, $z7, $z8;
        com.sun.lwuit.Form $r3, $r9;
        com.sun.lwuit.Container r0, $r5, $r11;
        java.lang.Object $r7;

        r0 := @this: com.sun.lwuit.Container;

        r1 := @parameter0: com.sun.lwuit.Component;

        r4 := @parameter1: com.sun.lwuit.Component;

        $r2 = r0.<com.sun.lwuit.Container: java.util.Vector components>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int indexOf(java.lang.Object)>(r1);

        i1 = $i0;

        z4 = 0;

        $r3 = virtualinvoke r1.<com.sun.lwuit.Component: com.sun.lwuit.Form getComponentForm()>();

        if $r3 == null goto label3;

        $r9 = virtualinvoke r1.<com.sun.lwuit.Component: com.sun.lwuit.Form getComponentForm()>();

        $r10 = virtualinvoke $r9.<com.sun.lwuit.Form: com.sun.lwuit.Component getFocused()>();

        if $r10 != r1 goto label1;

        $z8 = 1;

        $z7 = 1;

        goto label2;

     label1:
        $z8 = 0;

        $z7 = 0;

     label2:
        z4 = $z7;

        if $z8 != 0 goto label3;

        $z2 = r1 instanceof com.sun.lwuit.Container;

        if $z2 == 0 goto label3;

        if $r10 == null goto label3;

        $r11 = (com.sun.lwuit.Container) r1;

        $z3 = specialinvoke $r11.<com.sun.lwuit.Container: boolean isParentOf(com.sun.lwuit.Component)>($r10);

        if $z3 == 0 goto label3;

        z4 = 1;

     label3:
        $r12 = r0.<com.sun.lwuit.Container: com.sun.lwuit.layouts.Layout layout>;

        $z6 = $r12 instanceof com.sun.lwuit.layouts.BorderLayout;

        if $z6 == 0 goto label4;

        $r6 = r0.<com.sun.lwuit.Container: com.sun.lwuit.layouts.Layout layout>;

        $r7 = virtualinvoke $r6.<com.sun.lwuit.layouts.Layout: java.lang.Object getComponentConstraint(com.sun.lwuit.Component)>(r1);

        virtualinvoke r0.<com.sun.lwuit.Container: void removeComponentImpl(com.sun.lwuit.Component)>(r1);

        $r8 = r0.<com.sun.lwuit.Container: com.sun.lwuit.layouts.Layout layout>;

        virtualinvoke $r8.<com.sun.lwuit.layouts.Layout: void addLayoutComponent(java.lang.Object,com.sun.lwuit.Component,com.sun.lwuit.Container)>($r7, r4, r0);

        goto label5;

     label4:
        virtualinvoke r0.<com.sun.lwuit.Container: void removeComponentImpl(com.sun.lwuit.Component)>(r1);

     label5:
        virtualinvoke r4.<com.sun.lwuit.Component: void setParent(com.sun.lwuit.Container)>(null);

        if $i0 >= 0 goto label6;

        i1 = 0;

     label6:
        specialinvoke r0.<com.sun.lwuit.Container: void insertComponentAt(int,com.sun.lwuit.Component)>(i1, r4);

        if z4 == 0 goto label8;

        $z0 = virtualinvoke r4.<com.sun.lwuit.Component: boolean isFocusable()>();

        if $z0 == 0 goto label7;

        virtualinvoke r4.<com.sun.lwuit.Component: void requestFocus()>();

        goto label8;

     label7:
        $z1 = r4 instanceof com.sun.lwuit.Container;

        if $z1 == 0 goto label8;

        $r5 = (com.sun.lwuit.Container) r4;

        specialinvoke $r5.<com.sun.lwuit.Container: boolean requestFocusChild()>();

     label8:
        return;
    }

    void initComponentImpl()
    {
        com.sun.lwuit.Container r0;
        com.sun.lwuit.Component $r4;
        java.util.Vector $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: com.sun.lwuit.Container;

        $z0 = virtualinvoke r0.<com.sun.lwuit.Container: boolean isInitialized()>();

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.sun.lwuit.Component: void initComponentImpl()>();

     label1:
        $r1 = r0.<com.sun.lwuit.Container: java.util.Vector components>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        i1 = 0;

     label2:
        if i1 >= $i0 goto label3;

        $r2 = r0.<com.sun.lwuit.Container: java.util.Vector components>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        $r4 = (com.sun.lwuit.Component) $r3;

        virtualinvoke $r4.<com.sun.lwuit.Component: void initComponentImpl()>();

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    public void removeComponent(com.sun.lwuit.Component)
    {
        com.sun.lwuit.Component r1;
        com.sun.lwuit.Container r0;

        r0 := @this: com.sun.lwuit.Container;

        r1 := @parameter0: com.sun.lwuit.Component;

        virtualinvoke r0.<com.sun.lwuit.Container: void removeComponentImpl(com.sun.lwuit.Component)>(r1);

        return;
    }

    void removeComponentImpl(com.sun.lwuit.Component)
    {
        com.sun.lwuit.Form $r1;
        com.sun.lwuit.Container r2, $r6;
        com.sun.lwuit.Component r0, $r5, $r7;
        java.util.Vector $r4;
        com.sun.lwuit.layouts.Layout $r3;
        boolean $z0, $z1, $z2;

        r2 := @this: com.sun.lwuit.Container;

        r0 := @parameter0: com.sun.lwuit.Component;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.Form getComponentForm()>();

        $r3 = r2.<com.sun.lwuit.Container: com.sun.lwuit.layouts.Layout layout>;

        virtualinvoke $r3.<com.sun.lwuit.layouts.Layout: void removeLayoutComponent(com.sun.lwuit.Component)>(r0);

        virtualinvoke r0.<com.sun.lwuit.Component: void deinitializeImpl()>();

        $r4 = r2.<com.sun.lwuit.Container: java.util.Vector components>;

        virtualinvoke $r4.<java.util.Vector: boolean removeElement(java.lang.Object)>(r0);

        virtualinvoke r0.<com.sun.lwuit.Component: void setParent(com.sun.lwuit.Container)>(null);

        virtualinvoke r0.<com.sun.lwuit.Component: void setShouldCalcPreferredSize(boolean)>(1);

        if $r1 == null goto label3;

        $r5 = virtualinvoke $r1.<com.sun.lwuit.Form: com.sun.lwuit.Component getFocused()>();

        if $r5 == r0 goto label1;

        $z0 = r0 instanceof com.sun.lwuit.Container;

        if $z0 == 0 goto label2;

        $r6 = (com.sun.lwuit.Container) r0;

        $r7 = virtualinvoke $r1.<com.sun.lwuit.Form: com.sun.lwuit.Component getFocused()>();

        $z1 = virtualinvoke $r6.<com.sun.lwuit.Container: boolean contains(com.sun.lwuit.Component)>($r7);

        if $z1 == 0 goto label2;

     label1:
        virtualinvoke $r1.<com.sun.lwuit.Form: void setFocused(com.sun.lwuit.Component)>(null);

     label2:
        virtualinvoke $r1.<com.sun.lwuit.Form: void clearFocusVectors()>();

        $z2 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isSmoothScrolling()>();

        if $z2 == 0 goto label3;

        virtualinvoke $r1.<com.sun.lwuit.Form: void deregisterAnimatedInternal(com.sun.lwuit.animations.Animation)>(r0);

     label3:
        virtualinvoke r2.<com.sun.lwuit.Container: void setShouldCalcPreferredSize(boolean)>(1);

        return;
    }

    void deinitializeImpl()
    {
        com.sun.lwuit.Component $r4;
        java.util.Vector $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        com.sun.lwuit.Container r0;

        r0 := @this: com.sun.lwuit.Container;

        specialinvoke r0.<com.sun.lwuit.Component: void deinitializeImpl()>();

        $r1 = r0.<com.sun.lwuit.Container: java.util.Vector components>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r2 = r0.<com.sun.lwuit.Container: java.util.Vector components>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        $r4 = (com.sun.lwuit.Component) $r3;

        virtualinvoke $r4.<com.sun.lwuit.Component: void deinitializeImpl()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<com.sun.lwuit.Container: void flushReplace()>();

        return;
    }

    public void flushReplace()
    {
        com.sun.lwuit.Container r0;
        java.util.Vector $r1, $r2, $r3, $r4;
        com.sun.lwuit.Container$Anim $r6;
        int $i0, i1;
        java.lang.Object $r5;

        r0 := @this: com.sun.lwuit.Container;

        $r1 = r0.<com.sun.lwuit.Container: java.util.Vector cmpTransitions>;

        if $r1 == null goto label3;

        $r2 = r0.<com.sun.lwuit.Container: java.util.Vector cmpTransitions>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r4 = r0.<com.sun.lwuit.Container: java.util.Vector cmpTransitions>;

        $r5 = virtualinvoke $r4.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        $r6 = (com.sun.lwuit.Container$Anim) $r5;

        virtualinvoke $r6.<com.sun.lwuit.Container$Anim: void destroy()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        $r3 = r0.<com.sun.lwuit.Container: java.util.Vector cmpTransitions>;

        virtualinvoke $r3.<java.util.Vector: void removeAllElements()>();

        r0.<com.sun.lwuit.Container: java.util.Vector cmpTransitions> = null;

     label3:
        return;
    }

    public void removeAll()
    {
        java.lang.Object[] $r6;
        com.sun.lwuit.Form $r1;
        com.sun.lwuit.Container r0;
        com.sun.lwuit.Component $r3, $r4;
        java.util.Vector $r5, $r7;
        int $i0, i1, $i2;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: com.sun.lwuit.Container;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Container: com.sun.lwuit.Form getComponentForm()>();

        if $r1 == null goto label1;

        $r4 = virtualinvoke $r1.<com.sun.lwuit.Form: com.sun.lwuit.Component getFocused()>();

        if $r4 == null goto label1;

        $z0 = virtualinvoke r0.<com.sun.lwuit.Container: boolean contains(com.sun.lwuit.Component)>($r4);

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<com.sun.lwuit.Form: void setFocused(com.sun.lwuit.Component)>(null);

     label1:
        $r5 = r0.<com.sun.lwuit.Container: java.util.Vector components>;

        $i0 = virtualinvoke $r5.<java.util.Vector: int size()>();

        $r6 = newarray (java.lang.Object)[$i0];

        $r7 = r0.<com.sun.lwuit.Container: java.util.Vector components>;

        virtualinvoke $r7.<java.util.Vector: void copyInto(java.lang.Object[])>($r6);

        i1 = 0;

     label2:
        $i2 = lengthof $r6;

        if i1 >= $i2 goto label3;

        $r2 = $r6[i1];

        $r3 = (com.sun.lwuit.Component) $r2;

        virtualinvoke r0.<com.sun.lwuit.Container: void removeComponent(com.sun.lwuit.Component)>($r3);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    public void revalidate()
    {
        com.sun.lwuit.Container r0;
        com.sun.lwuit.Form $r1;

        r0 := @this: com.sun.lwuit.Container;

        virtualinvoke r0.<com.sun.lwuit.Container: void setShouldCalcPreferredSize(boolean)>(1);

        $r1 = virtualinvoke r0.<com.sun.lwuit.Container: com.sun.lwuit.Form getComponentForm()>();

        if $r1 == null goto label1;

        virtualinvoke $r1.<com.sun.lwuit.Form: void layoutContainer()>();

        virtualinvoke $r1.<com.sun.lwuit.Form: void repaint()>();

        goto label2;

     label1:
        virtualinvoke r0.<com.sun.lwuit.Container: void layoutContainer()>();

        virtualinvoke r0.<com.sun.lwuit.Container: void repaint()>();

     label2:
        return;
    }

    public void paint(com.sun.lwuit.Graphics)
    {
        com.sun.lwuit.Graphics r1;
        com.sun.lwuit.Component r5;
        java.util.Vector $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11;
        com.sun.lwuit.Container r0;
        java.lang.Object $r4;

        r0 := @this: com.sun.lwuit.Container;

        r1 := @parameter0: com.sun.lwuit.Graphics;

        virtualinvoke r0.<com.sun.lwuit.Container: void layoutContainer()>();

        $i0 = virtualinvoke r0.<com.sun.lwuit.Container: int getX()>();

        $i1 = virtualinvoke r0.<com.sun.lwuit.Container: int getY()>();

        virtualinvoke r1.<com.sun.lwuit.Graphics: void translate(int,int)>($i0, $i1);

        $r2 = r0.<com.sun.lwuit.Container: java.util.Vector components>;

        $i2 = virtualinvoke $r2.<java.util.Vector: int size()>();

        i11 = 0;

     label1:
        if i11 >= $i2 goto label2;

        $r3 = r0.<com.sun.lwuit.Container: java.util.Vector components>;

        $r4 = virtualinvoke $r3.<java.util.Vector: java.lang.Object elementAt(int)>(i11);

        r5 = (com.sun.lwuit.Component) $r4;

        virtualinvoke r5.<com.sun.lwuit.Component: void paintInternal(com.sun.lwuit.Graphics,boolean)>(r1, 0);

        i11 = i11 + 1;

        goto label1;

     label2:
        $i3 = virtualinvoke r1.<com.sun.lwuit.Graphics: int getTranslateX()>();

        $i4 = virtualinvoke r1.<com.sun.lwuit.Graphics: int getTranslateY()>();

        $i6 = neg $i3;

        $i5 = neg $i4;

        virtualinvoke r1.<com.sun.lwuit.Graphics: void translate(int,int)>($i6, $i5);

        virtualinvoke r0.<com.sun.lwuit.Container: void paintGlass(com.sun.lwuit.Graphics)>(r1);

        virtualinvoke r1.<com.sun.lwuit.Graphics: void translate(int,int)>($i3, $i4);

        $i7 = virtualinvoke r0.<com.sun.lwuit.Container: int getX()>();

        $i8 = neg $i7;

        $i9 = virtualinvoke r0.<com.sun.lwuit.Container: int getY()>();

        $i10 = neg $i9;

        virtualinvoke r1.<com.sun.lwuit.Graphics: void translate(int,int)>($i8, $i10);

        return;
    }

    void paintGlassImpl(com.sun.lwuit.Graphics)
    {
        int $i0, $i1, $i2, $i3;
        com.sun.lwuit.Graphics r1;
        com.sun.lwuit.Container r0;

        r0 := @this: com.sun.lwuit.Container;

        r1 := @parameter0: com.sun.lwuit.Graphics;

        specialinvoke r0.<com.sun.lwuit.Component: void paintGlassImpl(com.sun.lwuit.Graphics)>(r1);

        $i0 = virtualinvoke r1.<com.sun.lwuit.Graphics: int getTranslateX()>();

        $i1 = virtualinvoke r1.<com.sun.lwuit.Graphics: int getTranslateY()>();

        $i3 = neg $i0;

        $i2 = neg $i1;

        virtualinvoke r1.<com.sun.lwuit.Graphics: void translate(int,int)>($i3, $i2);

        virtualinvoke r0.<com.sun.lwuit.Container: void paintGlass(com.sun.lwuit.Graphics)>(r1);

        virtualinvoke r1.<com.sun.lwuit.Graphics: void translate(int,int)>($i0, $i1);

        return;
    }

    protected void paintGlass(com.sun.lwuit.Graphics)
    {
        com.sun.lwuit.Graphics r1;
        com.sun.lwuit.Container r0;

        r0 := @this: com.sun.lwuit.Container;

        r1 := @parameter0: com.sun.lwuit.Graphics;

        return;
    }

    void paintIntersecting(com.sun.lwuit.Graphics, com.sun.lwuit.Component, int, int, int, int, boolean)
    {
        com.sun.lwuit.Component r2, r7;
        java.util.Vector $r3, $r4, $r5, $r13;
        com.sun.lwuit.layouts.Layout $r1;
        boolean $z0, $z1, z2, $z3;
        com.sun.lwuit.Graphics r12;
        com.sun.lwuit.geom.Rectangle $r8, $r10;
        com.sun.lwuit.geom.Dimension $r9, $r11;
        int $i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15;
        com.sun.lwuit.Container r0;
        java.lang.Object $r6;

        r0 := @this: com.sun.lwuit.Container;

        r12 := @parameter0: com.sun.lwuit.Graphics;

        r2 := @parameter1: com.sun.lwuit.Component;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        z2 := @parameter6: boolean;

        $r1 = r0.<com.sun.lwuit.Container: com.sun.lwuit.layouts.Layout layout>;

        $z0 = virtualinvoke $r1.<com.sun.lwuit.layouts.Layout: boolean isOverlapSupported()>();

        if $z0 == 0 goto label5;

        $r3 = r0.<com.sun.lwuit.Container: java.util.Vector components>;

        $z1 = virtualinvoke $r3.<java.util.Vector: boolean contains(java.lang.Object)>(r2);

        if $z1 == 0 goto label5;

        $r4 = r0.<com.sun.lwuit.Container: java.util.Vector components>;

        $i0 = virtualinvoke $r4.<java.util.Vector: int indexOf(java.lang.Object)>(r2);

        if z2 == 0 goto label1;

        i13 = $i0 + 1;

        $r13 = r0.<com.sun.lwuit.Container: java.util.Vector components>;

        i14 = virtualinvoke $r13.<java.util.Vector: int size()>();

        goto label2;

     label1:
        i13 = 0;

        i14 = $i0;

     label2:
        i15 = i13;

     label3:
        if i15 >= i14 goto label5;

        $r5 = r0.<com.sun.lwuit.Container: java.util.Vector components>;

        $r6 = virtualinvoke $r5.<java.util.Vector: java.lang.Object elementAt(int)>(i15);

        r7 = (com.sun.lwuit.Component) $r6;

        $i5 = virtualinvoke r7.<com.sun.lwuit.Component: int getAbsoluteX()>();

        $i6 = virtualinvoke r7.<com.sun.lwuit.Component: int getScrollX()>();

        $i7 = $i5 + $i6;

        $i8 = virtualinvoke r7.<com.sun.lwuit.Component: int getAbsoluteY()>();

        $i9 = virtualinvoke r7.<com.sun.lwuit.Component: int getScrollY()>();

        $i10 = $i8 + $i9;

        $r8 = virtualinvoke r7.<com.sun.lwuit.Component: com.sun.lwuit.geom.Rectangle getBounds()>();

        $r9 = virtualinvoke $r8.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i11 = virtualinvoke $r9.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $r10 = virtualinvoke r7.<com.sun.lwuit.Component: com.sun.lwuit.geom.Rectangle getBounds()>();

        $r11 = virtualinvoke $r10.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i12 = virtualinvoke $r11.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $z3 = staticinvoke <com.sun.lwuit.geom.Rectangle: boolean intersects(int,int,int,int,int,int,int,int)>(i1, i2, i3, i4, $i7, $i10, $i11, $i12);

        if $z3 == 0 goto label4;

        virtualinvoke r7.<com.sun.lwuit.Component: void paintInternal(com.sun.lwuit.Graphics,boolean)>(r12, 0);

     label4:
        i15 = i15 + 1;

        goto label3;

     label5:
        return;
    }

    public void layoutContainer()
    {
        com.sun.lwuit.Container r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.Container;

        $z0 = r0.<com.sun.lwuit.Container: boolean shouldLayout>;

        if $z0 == 0 goto label1;

        r0.<com.sun.lwuit.Container: boolean shouldLayout> = 0;

        virtualinvoke r0.<com.sun.lwuit.Container: void doLayout()>();

     label1:
        return;
    }

    void doLayout()
    {
        com.sun.lwuit.Component $r2;
        int $i0, i1;
        com.sun.lwuit.layouts.Layout $r1;
        com.sun.lwuit.Container r0, $r3;
        boolean $z0;

        r0 := @this: com.sun.lwuit.Container;

        $r1 = r0.<com.sun.lwuit.Container: com.sun.lwuit.layouts.Layout layout>;

        virtualinvoke $r1.<com.sun.lwuit.layouts.Layout: void layoutContainer(com.sun.lwuit.Container)>(r0);

        $i0 = virtualinvoke r0.<com.sun.lwuit.Container: int getComponentCount()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label4;

        $r2 = virtualinvoke r0.<com.sun.lwuit.Container: com.sun.lwuit.Component getComponentAt(int)>(i1);

        $z0 = $r2 instanceof com.sun.lwuit.Container;

        if $z0 == 0 goto label2;

        $r3 = (com.sun.lwuit.Container) $r2;

        virtualinvoke $r3.<com.sun.lwuit.Container: void layoutContainer()>();

        goto label3;

     label2:
        virtualinvoke $r2.<com.sun.lwuit.Component: void laidOut()>();

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        virtualinvoke r0.<com.sun.lwuit.Container: void laidOut()>();

        return;
    }

    public int getComponentCount()
    {
        int $i0;
        java.util.Vector $r1;
        com.sun.lwuit.Container r0;

        r0 := @this: com.sun.lwuit.Container;

        $r1 = r0.<com.sun.lwuit.Container: java.util.Vector components>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        return $i0;
    }

    public com.sun.lwuit.Component getComponentAt(int)
    {
        com.sun.lwuit.Component $r3;
        java.util.Vector $r1;
        int i0;
        java.lang.Object $r2;
        com.sun.lwuit.Container r0;

        r0 := @this: com.sun.lwuit.Container;

        i0 := @parameter0: int;

        $r1 = r0.<com.sun.lwuit.Container: java.util.Vector components>;

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        $r3 = (com.sun.lwuit.Component) $r2;

        return $r3;
    }

    public int getComponentIndex(com.sun.lwuit.Component)
    {
        com.sun.lwuit.Component $r1, r2;
        int $i0, i1, $i3;
        com.sun.lwuit.Container r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.Container;

        r2 := @parameter0: com.sun.lwuit.Component;

        $i0 = virtualinvoke r0.<com.sun.lwuit.Container: int getComponentCount()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label3;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Container: com.sun.lwuit.Component getComponentAt(int)>(i1);

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $i3 = (int) -1;

        return $i3;
    }

    public boolean contains(com.sun.lwuit.Component)
    {
        com.sun.lwuit.Container r0, $r3;
        com.sun.lwuit.Component $r1, r2;
        int $i0, i1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.sun.lwuit.Container;

        r2 := @parameter0: com.sun.lwuit.Component;

        $i0 = virtualinvoke r0.<com.sun.lwuit.Container: int getComponentCount()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label4;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Container: com.sun.lwuit.Component getComponentAt(int)>(i1);

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $z1 = $r1 instanceof com.sun.lwuit.Container;

        if $z1 == 0 goto label3;

        $r3 = (com.sun.lwuit.Container) $r1;

        $z2 = virtualinvoke $r3.<com.sun.lwuit.Container: boolean contains(com.sun.lwuit.Component)>(r2);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return 0;
    }

    protected void scrollComponentToVisible(com.sun.lwuit.Component)
    {
        com.sun.lwuit.geom.Rectangle $r2, $r5, $r6;
        com.sun.lwuit.Component r1;
        com.sun.lwuit.geom.Dimension $r7, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        boolean $z0;
        com.sun.lwuit.Form $r4;
        com.sun.lwuit.Container r0, $r3;

        r0 := @this: com.sun.lwuit.Container;

        r1 := @parameter0: com.sun.lwuit.Component;

        $z0 = virtualinvoke r0.<com.sun.lwuit.Container: boolean isScrollable()>();

        if $z0 == 0 goto label2;

        if r1 == null goto label2;

        $r2 = virtualinvoke r1.<com.sun.lwuit.Component: com.sun.lwuit.geom.Rectangle getVisibleBounds()>();

        $r3 = virtualinvoke r1.<com.sun.lwuit.Component: com.sun.lwuit.Container getParent()>();

        if $r3 == null goto label1;

        $r4 = virtualinvoke r0.<com.sun.lwuit.Container: com.sun.lwuit.Form getComponentForm()>();

        if $r4 == null goto label1;

        $i0 = virtualinvoke $r4.<com.sun.lwuit.Form: int getFocusPosition(com.sun.lwuit.Component)>(r1);

        if $i0 != 0 goto label1;

        $r5 = virtualinvoke r1.<com.sun.lwuit.Component: com.sun.lwuit.geom.Rectangle getBounds()>();

        if $r2 != $r5 goto label1;

        $r6 = new com.sun.lwuit.geom.Rectangle;

        $i1 = virtualinvoke r1.<com.sun.lwuit.Component: int getX()>();

        $i2 = virtualinvoke r1.<com.sun.lwuit.Component: int getWidth()>();

        $i3 = virtualinvoke r0.<com.sun.lwuit.Container: int getWidth()>();

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i3);

        $i5 = $i1 + $i4;

        $i6 = virtualinvoke r1.<com.sun.lwuit.Component: int getY()>();

        $i7 = virtualinvoke r1.<com.sun.lwuit.Component: int getHeight()>();

        $i8 = virtualinvoke r0.<com.sun.lwuit.Container: int getHeight()>();

        $i9 = staticinvoke <java.lang.Math: int min(int,int)>($i7, $i8);

        $i10 = $i6 + $i9;

        specialinvoke $r6.<com.sun.lwuit.geom.Rectangle: void <init>(int,int,int,int)>(0, 0, $i5, $i10);

        virtualinvoke r0.<com.sun.lwuit.Container: void scrollRectToVisible(com.sun.lwuit.geom.Rectangle,com.sun.lwuit.Component)>($r6, r0);

        return;

     label1:
        $i11 = virtualinvoke $r2.<com.sun.lwuit.geom.Rectangle: int getX()>();

        $i12 = virtualinvoke $r2.<com.sun.lwuit.geom.Rectangle: int getY()>();

        $r7 = virtualinvoke $r2.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i13 = virtualinvoke $r7.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i14 = virtualinvoke r0.<com.sun.lwuit.Container: int getWidth()>();

        $i15 = staticinvoke <java.lang.Math: int min(int,int)>($i13, $i14);

        $r8 = virtualinvoke $r2.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i16 = virtualinvoke $r8.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i17 = virtualinvoke r0.<com.sun.lwuit.Container: int getHeight()>();

        $i18 = staticinvoke <java.lang.Math: int min(int,int)>($i16, $i17);

        virtualinvoke r0.<com.sun.lwuit.Container: void scrollRectToVisible(int,int,int,int,com.sun.lwuit.Component)>($i11, $i12, $i15, $i18, r1);

     label2:
        return;
    }

    boolean moveScrollTowards(int, com.sun.lwuit.Component)
    {
        com.sun.lwuit.Form $r1;
        com.sun.lwuit.Component r2, r13;
        boolean $z0, $z1, z2, $z3, $z4, z5, z6, z7, $z8, $z9, $z11, $z12, $z14, $z15, $z17, $z18, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31;
        com.sun.lwuit.geom.Rectangle $r4, $r7, $r9, $r11;
        com.sun.lwuit.geom.Dimension $r3, $r5, $r6, $r8, $r10, $r12, $r14, $r15;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, i44, i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61;
        com.sun.lwuit.Container r0;

        r0 := @this: com.sun.lwuit.Container;

        i3 := @parameter0: int;

        r2 := @parameter1: com.sun.lwuit.Component;

        $z0 = virtualinvoke r0.<com.sun.lwuit.Container: boolean isScrollable()>();

        if $z0 == 0 goto label39;

        r13 = null;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Container: com.sun.lwuit.Form getComponentForm()>();

        if $r1 == null goto label01;

        r13 = virtualinvoke $r1.<com.sun.lwuit.Form: com.sun.lwuit.Component getFocused()>();

     label01:
        $i0 = virtualinvoke $r1.<com.sun.lwuit.Form: int getFocusPosition(com.sun.lwuit.Component)>(r13);

        z5 = 0;

        z6 = 0;

        z7 = 0;

        i44 = virtualinvoke r0.<com.sun.lwuit.Container: int getScrollX()>();

        i45 = virtualinvoke r0.<com.sun.lwuit.Container: int getScrollY()>();

        $i1 = virtualinvoke r0.<com.sun.lwuit.Container: int getWidth()>();

        $i2 = virtualinvoke r0.<com.sun.lwuit.Container: int getHeight()>();

        tableswitch(i3)
        {
            case 1: goto label02;
            case 2: goto label23;
            case 3: goto label30;
            case 4: goto label30;
            case 5: goto label16;
            case 6: goto label09;
            default: goto label30;
        };

     label02:
        $i40 = virtualinvoke r0.<com.sun.lwuit.Container: int getScrollY()>();

        $i41 = r0.<com.sun.lwuit.Container: int scrollIncrement>;

        i45 = $i40 - $i41;

        if $i0 != 0 goto label03;

        $z8 = 1;

        goto label04;

     label03:
        $z8 = 0;

     label04:
        z5 = $z8;

        if r13 == null goto label05;

        $r11 = virtualinvoke r13.<com.sun.lwuit.Component: com.sun.lwuit.geom.Rectangle getVisibleBounds()>();

        $r12 = virtualinvoke $r11.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i42 = virtualinvoke $r12.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i43 = virtualinvoke r0.<com.sun.lwuit.Container: int getHeight()>();

        if $i42 <= $i43 goto label05;

        $z9 = 1;

        goto label06;

     label05:
        $z9 = 0;

     label06:
        z6 = $z9;

        if i45 >= 0 goto label07;

        $z27 = 1;

        $z26 = 1;

        goto label08;

     label07:
        $z27 = 0;

        $z26 = 0;

     label08:
        z7 = $z27;

        if $z26 == 0 goto label30;

        i45 = 0;

        goto label30;

     label09:
        $i4 = virtualinvoke r0.<com.sun.lwuit.Container: int getScrollY()>();

        $i5 = r0.<com.sun.lwuit.Container: int scrollIncrement>;

        i45 = $i4 + $i5;

        $i6 = virtualinvoke $r1.<com.sun.lwuit.Form: int getFocusCount()>();

        $i7 = $i6 - 1;

        if $i0 != $i7 goto label10;

        $z11 = 1;

        goto label11;

     label10:
        $z11 = 0;

     label11:
        z5 = $z11;

        if r13 == null goto label12;

        $r4 = virtualinvoke r13.<com.sun.lwuit.Component: com.sun.lwuit.geom.Rectangle getVisibleBounds()>();

        $r5 = virtualinvoke $r4.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i26 = virtualinvoke $r5.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i27 = virtualinvoke r0.<com.sun.lwuit.Container: int getHeight()>();

        if $i26 <= $i27 goto label12;

        $z12 = 1;

        goto label13;

     label12:
        $z12 = 0;

     label13:
        z6 = $z12;

        $r14 = virtualinvoke r0.<com.sun.lwuit.Container: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i46 = virtualinvoke $r14.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i47 = virtualinvoke r0.<com.sun.lwuit.Container: int getHeight()>();

        $i48 = $i46 - $i47;

        if i45 <= $i48 goto label14;

        $z23 = 1;

        $z22 = 1;

        goto label15;

     label14:
        $z23 = 0;

        $z22 = 0;

     label15:
        z7 = $z22;

        if $z23 == 0 goto label30;

        $r3 = virtualinvoke r0.<com.sun.lwuit.Container: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i24 = virtualinvoke $r3.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i25 = virtualinvoke r0.<com.sun.lwuit.Container: int getHeight()>();

        i45 = $i24 - $i25;

        goto label30;

     label16:
        $i28 = virtualinvoke r0.<com.sun.lwuit.Container: int getScrollX()>();

        $i29 = r0.<com.sun.lwuit.Container: int scrollIncrement>;

        i44 = $i28 + $i29;

        $i30 = virtualinvoke $r1.<com.sun.lwuit.Form: int getFocusCount()>();

        $i31 = $i30 - 1;

        if $i0 != $i31 goto label17;

        $z14 = 1;

        goto label18;

     label17:
        $z14 = 0;

     label18:
        z5 = $z14;

        if r13 == null goto label19;

        $r7 = virtualinvoke r13.<com.sun.lwuit.Component: com.sun.lwuit.geom.Rectangle getVisibleBounds()>();

        $r8 = virtualinvoke $r7.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i34 = virtualinvoke $r8.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i35 = virtualinvoke r0.<com.sun.lwuit.Container: int getWidth()>();

        if $i34 <= $i35 goto label19;

        $z15 = 1;

        goto label20;

     label19:
        $z15 = 0;

     label20:
        z6 = $z15;

        $r15 = virtualinvoke r0.<com.sun.lwuit.Container: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i49 = virtualinvoke $r15.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i50 = virtualinvoke r0.<com.sun.lwuit.Container: int getWidth()>();

        $i51 = $i49 - $i50;

        if i44 <= $i51 goto label21;

        $z29 = 1;

        $z28 = 1;

        goto label22;

     label21:
        $z29 = 0;

        $z28 = 0;

     label22:
        z7 = $z28;

        if $z29 == 0 goto label30;

        $r6 = virtualinvoke r0.<com.sun.lwuit.Container: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i32 = virtualinvoke $r6.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i33 = virtualinvoke r0.<com.sun.lwuit.Container: int getWidth()>();

        i44 = $i32 - $i33;

        goto label30;

     label23:
        $i36 = virtualinvoke r0.<com.sun.lwuit.Container: int getScrollX()>();

        $i37 = r0.<com.sun.lwuit.Container: int scrollIncrement>;

        i44 = $i36 - $i37;

        if $i0 != 0 goto label24;

        $z17 = 1;

        goto label25;

     label24:
        $z17 = 0;

     label25:
        z5 = $z17;

        if r13 == null goto label26;

        $r9 = virtualinvoke r13.<com.sun.lwuit.Component: com.sun.lwuit.geom.Rectangle getVisibleBounds()>();

        $r10 = virtualinvoke $r9.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i38 = virtualinvoke $r10.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i39 = virtualinvoke r0.<com.sun.lwuit.Container: int getWidth()>();

        if $i38 <= $i39 goto label26;

        $z18 = 1;

        goto label27;

     label26:
        $z18 = 0;

     label27:
        z6 = $z18;

        if i44 >= 0 goto label28;

        $z31 = 1;

        $z30 = 1;

        goto label29;

     label28:
        $z31 = 0;

        $z30 = 0;

     label29:
        z7 = $z30;

        if $z31 == 0 goto label30;

        i44 = 0;

     label30:
        if r2 != null goto label31;

        virtualinvoke r0.<com.sun.lwuit.Container: void scrollRectToVisible(int,int,int,int,com.sun.lwuit.Component)>(i44, i45, $i1, $i2, r0);

        return 0;

     label31:
        $z1 = virtualinvoke r0.<com.sun.lwuit.Container: boolean contains(com.sun.lwuit.Component)>(r2);

        if $z1 == 0 goto label32;

        $i16 = virtualinvoke r2.<com.sun.lwuit.Component: int getAbsoluteX()>();

        $i17 = virtualinvoke r2.<com.sun.lwuit.Component: int getAbsoluteY()>();

        $i18 = virtualinvoke r2.<com.sun.lwuit.Component: int getWidth()>();

        $i19 = virtualinvoke r2.<com.sun.lwuit.Component: int getHeight()>();

        $i20 = virtualinvoke r0.<com.sun.lwuit.Container: int getAbsoluteX()>();

        $i21 = $i20 + i44;

        $i22 = virtualinvoke r0.<com.sun.lwuit.Container: int getAbsoluteY()>();

        $i23 = $i22 + i45;

        $z4 = staticinvoke <com.sun.lwuit.geom.Rectangle: boolean intersects(int,int,int,int,int,int,int,int)>($i16, $i17, $i18, $i19, $i21, $i23, $i1, $i2);

        if $z4 == 0 goto label32;

        $z25 = 1;

        $z24 = 1;

        goto label33;

     label32:
        $z25 = 0;

        $z24 = 0;

     label33:
        z2 = $z25;

        if $z24 == 0 goto label34;

        if z6 != 0 goto label34;

        if z5 == 0 goto label35;

     label34:
        $i52 = virtualinvoke r0.<com.sun.lwuit.Container: int getAbsoluteX()>();

        $i53 = virtualinvoke r0.<com.sun.lwuit.Container: int getScrollX()>();

        $i54 = $i52 + $i53;

        $i55 = virtualinvoke r0.<com.sun.lwuit.Container: int getAbsoluteY()>();

        $i56 = virtualinvoke r0.<com.sun.lwuit.Container: int getScrollY()>();

        $i57 = $i55 + $i56;

        $i58 = virtualinvoke r2.<com.sun.lwuit.Component: int getAbsoluteX()>();

        $i59 = virtualinvoke r2.<com.sun.lwuit.Component: int getAbsoluteY()>();

        $i60 = virtualinvoke r2.<com.sun.lwuit.Component: int getWidth()>();

        $i61 = virtualinvoke r2.<com.sun.lwuit.Component: int getHeight()>();

        $z21 = staticinvoke <com.sun.lwuit.geom.Rectangle: boolean contains(int,int,int,int,int,int,int,int)>($i54, $i57, $i1, $i2, $i58, $i59, $i60, $i61);

        if $z21 == 0 goto label36;

     label35:
        virtualinvoke r0.<com.sun.lwuit.Container: void scrollComponentToVisible(com.sun.lwuit.Component)>(r2);

        return 1;

     label36:
        if z7 != 0 goto label38;

        virtualinvoke r0.<com.sun.lwuit.Container: void scrollRectToVisible(int,int,int,int,com.sun.lwuit.Component)>(i44, i45, $i1, $i2, r0);

        if z2 == 0 goto label37;

        $i8 = virtualinvoke r13.<com.sun.lwuit.Component: int getAbsoluteX()>();

        $i9 = virtualinvoke r13.<com.sun.lwuit.Component: int getAbsoluteY()>();

        $i10 = virtualinvoke r13.<com.sun.lwuit.Component: int getWidth()>();

        $i11 = virtualinvoke r13.<com.sun.lwuit.Component: int getHeight()>();

        $i12 = virtualinvoke r0.<com.sun.lwuit.Container: int getAbsoluteX()>();

        $i13 = $i12 + i44;

        $i14 = virtualinvoke r0.<com.sun.lwuit.Container: int getAbsoluteY()>();

        $i15 = $i14 + i45;

        $z3 = staticinvoke <com.sun.lwuit.geom.Rectangle: boolean intersects(int,int,int,int,int,int,int,int)>($i8, $i9, $i10, $i11, $i13, $i15, $i1, $i2);

        if $z3 != 0 goto label37;

        return 1;

     label37:
        return 0;

     label38:
        virtualinvoke r0.<com.sun.lwuit.Container: void scrollComponentToVisible(com.sun.lwuit.Component)>(r2);

        return 1;

     label39:
        return 1;
    }

    public com.sun.lwuit.Component getComponentAt(int, int)
    {
        com.sun.lwuit.Component $r2, r4;
        int $i0, i1, i2, i3, $i5;
        com.sun.lwuit.layouts.Layout $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.sun.lwuit.Container r0, $r3;

        r0 := @this: com.sun.lwuit.Container;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        $i0 = virtualinvoke r0.<com.sun.lwuit.Container: int getComponentCount()>();

        $r1 = virtualinvoke r0.<com.sun.lwuit.Container: com.sun.lwuit.layouts.Layout getLayout()>();

        $z0 = virtualinvoke $r1.<com.sun.lwuit.layouts.Layout: boolean isOverlapSupported()>();

        r4 = null;

        i3 = $i0 - 1;

     label1:
        if i3 < 0 goto label6;

        $r2 = virtualinvoke r0.<com.sun.lwuit.Container: com.sun.lwuit.Component getComponentAt(int)>(i3);

        $z2 = virtualinvoke $r2.<com.sun.lwuit.Component: boolean contains(int,int)>(i1, i2);

        if $z2 == 0 goto label5;

        r4 = $r2;

        if $z0 != 0 goto label2;

        $z5 = virtualinvoke $r2.<com.sun.lwuit.Component: boolean isFocusable()>();

        if $z5 == 0 goto label2;

        return $r2;

     label2:
        $z3 = $r2 instanceof com.sun.lwuit.Container;

        if $z3 == 0 goto label3;

        $r3 = (com.sun.lwuit.Container) $r2;

        r4 = virtualinvoke $r3.<com.sun.lwuit.Container: com.sun.lwuit.Component getComponentAt(int,int)>(i1, i2);

     label3:
        if $z0 == 0 goto label4;

        $z4 = virtualinvoke r4.<com.sun.lwuit.Component: boolean isFocusable()>();

        if $z4 == 0 goto label5;

     label4:
        return r4;

     label5:
        $i5 = (int) -1;

        i3 = i3 + $i5;

        goto label1;

     label6:
        if r4 == null goto label7;

        return r4;

     label7:
        $z1 = virtualinvoke r0.<com.sun.lwuit.Container: boolean contains(int,int)>(i1, i2);

        if $z1 == 0 goto label8;

        return r0;

     label8:
        return null;
    }

    public void pointerHover(int[], int[])
    {
        com.sun.lwuit.Container r0;
        com.sun.lwuit.Component $r3;
        int[] r1, r2;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1;

        r0 := @this: com.sun.lwuit.Container;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        $z0 = virtualinvoke r0.<com.sun.lwuit.Container: boolean isDragActivated()>();

        if $z0 != 0 goto label1;

        $i1 = r1[0];

        $i0 = r2[0];

        $r3 = virtualinvoke r0.<com.sun.lwuit.Container: com.sun.lwuit.Component getComponentAt(int,int)>($i1, $i0);

        if $r3 == null goto label1;

        $z1 = virtualinvoke $r3.<com.sun.lwuit.Component: boolean isFocusable()>();

        if $z1 == 0 goto label1;

        virtualinvoke $r3.<com.sun.lwuit.Component: void requestFocus()>();

     label1:
        $i2 = r1[0];

        $i3 = r2[0];

        specialinvoke r0.<com.sun.lwuit.Component: void pointerDragged(int,int)>($i2, $i3);

        return;
    }

    public void pointerPressed(int, int)
    {
        com.sun.lwuit.Component $r1;
        int i0, i1;
        com.sun.lwuit.Container r0;

        r0 := @this: com.sun.lwuit.Container;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.sun.lwuit.Container: void clearDrag()>();

        virtualinvoke r0.<com.sun.lwuit.Container: void setDragActivated(boolean)>(0);

        $r1 = virtualinvoke r0.<com.sun.lwuit.Container: com.sun.lwuit.Component getComponentAt(int,int)>(i0, i1);

        if $r1 != r0 goto label1;

        specialinvoke r0.<com.sun.lwuit.Component: void pointerPressed(int,int)>(i0, i1);

        goto label2;

     label1:
        if $r1 == null goto label2;

        virtualinvoke $r1.<com.sun.lwuit.Component: void pointerPressed(int,int)>(i0, i1);

     label2:
        return;
    }

    protected com.sun.lwuit.geom.Dimension calcPreferredSize()
    {
        com.sun.lwuit.geom.Dimension $r2;
        com.sun.lwuit.layouts.Layout $r1;
        com.sun.lwuit.Container r0;

        r0 := @this: com.sun.lwuit.Container;

        $r1 = r0.<com.sun.lwuit.Container: com.sun.lwuit.layouts.Layout layout>;

        $r2 = virtualinvoke $r1.<com.sun.lwuit.layouts.Layout: com.sun.lwuit.geom.Dimension getPreferredSize(com.sun.lwuit.Container)>(r0);

        return $r2;
    }

    protected java.lang.String paramString()
    {
        int $i0, $i1;
        java.lang.String $r3, $r4, $r6, $r15, $r17;
        com.sun.lwuit.layouts.Layout $r1;
        boolean $z0, $z1;
        com.sun.lwuit.Container r0;
        java.lang.Class $r2;
        java.lang.StringBuilder $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r16;

        r0 := @this: com.sun.lwuit.Container;

        $r1 = r0.<com.sun.lwuit.Container: com.sun.lwuit.layouts.Layout layout>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int lastIndexOf(int)>(46);

        $i1 = $i0 + 1;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i1);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = specialinvoke r0.<com.sun.lwuit.Component: java.lang.String paramString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", layout = ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", scrollableX = ");

        $z0 = r0.<com.sun.lwuit.Container: boolean scrollableX>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", scrollableY = ");

        $z1 = r0.<com.sun.lwuit.Container: boolean scrollableY>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", components = ");

        $r15 = specialinvoke r0.<com.sun.lwuit.Container: java.lang.String getComponentsNames()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r17;
    }

    private java.lang.String getComponentsNames()
    {
        java.util.Vector $r1, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.String $r5, $r9, $r12, r15;
        com.sun.lwuit.Container r0;
        java.lang.StringBuilder $r2, $r3, $r4, $r10, $r11, $r13, $r14;
        java.lang.Object $r7;
        java.lang.Class $r8;

        r0 := @this: com.sun.lwuit.Container;

        r15 = "[";

        $r1 = r0.<com.sun.lwuit.Container: java.util.Vector components>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        i6 = 0;

     label1:
        if i6 >= $i0 goto label2;

        $r6 = r0.<com.sun.lwuit.Container: java.util.Vector components>;

        $r7 = virtualinvoke $r6.<java.util.Vector: java.lang.Object elementAt(int)>(i6);

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $i4 = virtualinvoke $r9.<java.lang.String: int lastIndexOf(int)>(46);

        $i5 = $i4 + 1;

        $r12 = virtualinvoke $r9.<java.lang.String: java.lang.String substring(int)>($i5);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        i6 = i6 + 1;

        goto label1;

     label2:
        $i1 = virtualinvoke r15.<java.lang.String: int length()>();

        if $i1 <= 1 goto label3;

        $i2 = virtualinvoke r15.<java.lang.String: int length()>();

        $i3 = $i2 - 2;

        r15 = virtualinvoke r15.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public void refreshTheme()
    {
        com.sun.lwuit.Component r4;
        java.util.Vector $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        com.sun.lwuit.Container r0;

        r0 := @this: com.sun.lwuit.Container;

        specialinvoke r0.<com.sun.lwuit.Component: void refreshTheme()>();

        $r1 = r0.<com.sun.lwuit.Container: java.util.Vector components>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r2 = r0.<com.sun.lwuit.Container: java.util.Vector components>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r4 = (com.sun.lwuit.Component) $r3;

        virtualinvoke r4.<com.sun.lwuit.Component: void refreshTheme()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public boolean isScrollableX()
    {
        com.sun.lwuit.geom.Dimension $r1;
        int $i0, $i1;
        com.sun.lwuit.Container r0;
        boolean $z0, $z1;

        r0 := @this: com.sun.lwuit.Container;

        $z0 = r0.<com.sun.lwuit.Container: boolean scrollableX>;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Container: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i0 = virtualinvoke $r1.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i1 = virtualinvoke r0.<com.sun.lwuit.Container: int getWidth()>();

        if $i0 <= $i1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean isScrollableY()
    {
        com.sun.lwuit.geom.Dimension $r1;
        int $i0, $i1;
        com.sun.lwuit.Container r0;
        boolean $z0, $z1;

        r0 := @this: com.sun.lwuit.Container;

        $z0 = r0.<com.sun.lwuit.Container: boolean scrollableY>;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Container: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i0 = virtualinvoke $r1.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i1 = virtualinvoke r0.<com.sun.lwuit.Container: int getHeight()>();

        if $i0 <= $i1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void setScrollableX(boolean)
    {
        com.sun.lwuit.Container r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.Container;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.Container: boolean scrollableX> = z0;

        return;
    }

    public void setScrollableY(boolean)
    {
        com.sun.lwuit.Container r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.Container;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.Container: boolean scrollableY> = z0;

        return;
    }

    public void setScrollable(boolean)
    {
        com.sun.lwuit.Container r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.Container;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.sun.lwuit.Container: void setScrollableX(boolean)>(z0);

        virtualinvoke r0.<com.sun.lwuit.Container: void setScrollableY(boolean)>(z0);

        return;
    }

    public void setCellRenderer(boolean)
    {
        com.sun.lwuit.Component $r1;
        int $i0, i1;
        com.sun.lwuit.Container r0;
        boolean $z0, z1;

        r0 := @this: com.sun.lwuit.Container;

        z1 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<com.sun.lwuit.Container: boolean isCellRenderer()>();

        if $z0 == z1 goto label2;

        specialinvoke r0.<com.sun.lwuit.Component: void setCellRenderer(boolean)>(z1);

        $i0 = virtualinvoke r0.<com.sun.lwuit.Container: int getComponentCount()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Container: com.sun.lwuit.Component getComponentAt(int)>(i1);

        virtualinvoke $r1.<com.sun.lwuit.Component: void setCellRenderer(boolean)>(z1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void setScrollIncrement(int)
    {
        int i0;
        com.sun.lwuit.Container r0;

        r0 := @this: com.sun.lwuit.Container;

        i0 := @parameter0: int;

        r0.<com.sun.lwuit.Container: int scrollIncrement> = i0;

        return;
    }

    public int getScrollIncrement()
    {
        int $i0;
        com.sun.lwuit.Container r0;

        r0 := @this: com.sun.lwuit.Container;

        $i0 = r0.<com.sun.lwuit.Container: int scrollIncrement>;

        return $i0;
    }

    static java.util.Vector access$000(com.sun.lwuit.Container)
    {
        java.util.Vector $r1;
        com.sun.lwuit.Container r0;

        r0 := @parameter0: com.sun.lwuit.Container;

        $r1 = r0.<com.sun.lwuit.Container: java.util.Vector cmpTransitions>;

        return $r1;
    }

    static java.util.Vector access$002(com.sun.lwuit.Container, java.util.Vector)
    {
        java.util.Vector r1;
        com.sun.lwuit.Container r0;

        r0 := @parameter0: com.sun.lwuit.Container;

        r1 := @parameter1: java.util.Vector;

        r0.<com.sun.lwuit.Container: java.util.Vector cmpTransitions> = r1;

        return r1;
    }
}
