final class org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator extends java.lang.Object implements java.util.ListIterator
{
    org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder[] heads;
    org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder prev;
    org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder first;

    public void <init>(org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder[])
    {
        org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder $r2;
        org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator r0;
        org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder[] r1;

        r0 := @this: org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator;

        r1 := @parameter0: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder[] heads> = r1;

        $r2 = specialinvoke r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder findFirst()>();

        r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder first> = $r2;

        return;
    }

    public void reset()
    {
        org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder $r1;
        org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator r0;

        r0 := @this: org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator;

        r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder prev> = null;

        $r1 = specialinvoke r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder findFirst()>();

        r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder first> = $r1;

        return;
    }

    private org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder findFirst()
    {
        org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder[] $r1, $r2, $r4;
        org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder $r3, $r5;
        org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator r0;
        int $i0, i1;

        r0 := @this: org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator;

        i1 = 0;

     label1:
        $r1 = r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder[] heads>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label3;

        $r2 = r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder[] heads>;

        $r3 = $r2[i1];

        if $r3 == null goto label2;

        $r4 = r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder[] heads>;

        $r5 = $r4[i1];

        return $r5;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    public boolean hasNext()
    {
        org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder $r1, $r2, $r3, $r4;
        org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator;

        $r1 = r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder prev>;

        if $r1 != null goto label3;

        $r4 = r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder first>;

        if $r4 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;

     label3:
        $r2 = r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder prev>;

        $r3 = $r2.<org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder next>;

        if $r3 == null goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        return $z1;
    }

    public org.apache.cxf.interceptor.Interceptor next()
    {
        org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder $r1, $r2, $r3, $r4, $r5, $r6, $r9, $r10;
        org.apache.cxf.phase.PhaseInterceptor $r7;
        org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator r0;
        java.util.NoSuchElementException $r8, $r11;

        r0 := @this: org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator;

        $r1 = r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder prev>;

        if $r1 != null goto label2;

        $r9 = r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder first>;

        if $r9 != null goto label1;

        $r11 = new java.util.NoSuchElementException;

        specialinvoke $r11.<java.util.NoSuchElementException: void <init>()>();

        throw $r11;

     label1:
        $r10 = r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder first>;

        r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder prev> = $r10;

        goto label4;

     label2:
        $r2 = r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder prev>;

        $r3 = $r2.<org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder next>;

        if $r3 != null goto label3;

        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        throw $r8;

     label3:
        $r4 = r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder prev>;

        $r5 = $r4.<org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder next>;

        r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder prev> = $r5;

     label4:
        $r6 = r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder prev>;

        $r7 = $r6.<org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder: org.apache.cxf.phase.PhaseInterceptor interceptor>;

        return $r7;
    }

    public org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder nextInterceptorHolder()
    {
        org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder $r1, $r2, $r3, $r4, $r5, $r6, $r8, $r9;
        org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator r0;
        java.util.NoSuchElementException $r7, $r10;

        r0 := @this: org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator;

        $r1 = r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder prev>;

        if $r1 != null goto label2;

        $r8 = r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder first>;

        if $r8 != null goto label1;

        $r10 = new java.util.NoSuchElementException;

        specialinvoke $r10.<java.util.NoSuchElementException: void <init>()>();

        throw $r10;

     label1:
        $r9 = r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder first>;

        r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder prev> = $r9;

        goto label4;

     label2:
        $r2 = r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder prev>;

        $r3 = $r2.<org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder next>;

        if $r3 != null goto label3;

        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        throw $r7;

     label3:
        $r4 = r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder prev>;

        $r5 = $r4.<org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder next>;

        r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder prev> = $r5;

     label4:
        $r6 = r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder prev>;

        return $r6;
    }

    public boolean hasPrevious()
    {
        org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder $r1;
        org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator;

        $r1 = r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder prev>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.apache.cxf.interceptor.Interceptor previous()
    {
        org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder $r1, r2, $r3, $r4;
        org.apache.cxf.phase.PhaseInterceptor $r5;
        org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator r0;
        java.util.NoSuchElementException $r6;

        r0 := @this: org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator;

        $r1 = r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder prev>;

        if $r1 != null goto label1;

        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        throw $r6;

     label1:
        r2 = r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder prev>;

        $r3 = r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder prev>;

        $r4 = $r3.<org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder prev>;

        r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder prev> = $r4;

        $r5 = r2.<org.apache.cxf.phase.PhaseInterceptorChain$InterceptorHolder: org.apache.cxf.phase.PhaseInterceptor interceptor>;

        return $r5;
    }

    public int nextIndex()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator r1;

        r1 := @this: org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public int previousIndex()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator r1;

        r1 := @this: org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void add(org.apache.cxf.interceptor.Interceptor)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator r1;
        org.apache.cxf.interceptor.Interceptor r2;

        r1 := @this: org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator;

        r2 := @parameter0: org.apache.cxf.interceptor.Interceptor;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void set(org.apache.cxf.interceptor.Interceptor)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator r1;
        org.apache.cxf.interceptor.Interceptor r2;

        r1 := @this: org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator;

        r2 := @parameter0: org.apache.cxf.interceptor.Interceptor;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator r1;

        r1 := @this: org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public volatile void add(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator r0;
        org.apache.cxf.interceptor.Interceptor $r2;

        r0 := @this: org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.cxf.interceptor.Interceptor) r1;

        virtualinvoke r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: void add(org.apache.cxf.interceptor.Interceptor)>($r2);

        return;
    }

    public volatile void set(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator r0;
        org.apache.cxf.interceptor.Interceptor $r2;

        r0 := @this: org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.cxf.interceptor.Interceptor) r1;

        virtualinvoke r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: void set(org.apache.cxf.interceptor.Interceptor)>($r2);

        return;
    }

    public volatile java.lang.Object previous()
    {
        org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator r0;
        org.apache.cxf.interceptor.Interceptor $r1;

        r0 := @this: org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator;

        $r1 = virtualinvoke r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: org.apache.cxf.interceptor.Interceptor previous()>();

        return $r1;
    }

    public volatile java.lang.Object next()
    {
        org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator r0;
        org.apache.cxf.interceptor.Interceptor $r1;

        r0 := @this: org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator;

        $r1 = virtualinvoke r0.<org.apache.cxf.phase.PhaseInterceptorChain$PhaseInterceptorIterator: org.apache.cxf.interceptor.Interceptor next()>();

        return $r1;
    }
}
