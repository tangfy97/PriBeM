class com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel extends javax.swing.table.AbstractTableModel
{
    private java.util.Hashtable theme;
    private java.util.List keys;
    private java.lang.String prefix;
    final com.sun.jwt.resources.editor.editors.ThemeEditor this$0;

    public void <init>(com.sun.jwt.resources.editor.editors.ThemeEditor, java.util.Hashtable, java.lang.String)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel r0;
        java.util.ArrayList $r18;
        int $i0, $i1, $i3;
        java.lang.String r3, r16, r17;
        java.util.Hashtable r2, $r5, $r11;
        boolean $z0, $z1;
        java.util.Iterator $r7, $r13;
        java.util.Set $r6, $r12;
        java.util.List $r8, $r10, $r15;
        com.sun.jwt.resources.editor.editors.ThemeEditor r1;
        java.lang.Object $r9, $r14;

        r0 := @this: com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel;

        r1 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor;

        r2 := @parameter1: java.util.Hashtable;

        r3 := @parameter2: java.lang.String;

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: com.sun.jwt.resources.editor.editors.ThemeEditor this$0> = r1;

        specialinvoke r0.<javax.swing.table.AbstractTableModel: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: java.util.Hashtable theme> = r2;

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: java.lang.String prefix> = r3;

        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: java.util.List keys> = $r18;

        if r3 == null goto label4;

        $r11 = staticinvoke <com.sun.jwt.resources.editor.editors.ThemeEditor: java.util.Hashtable access$1200(com.sun.jwt.resources.editor.editors.ThemeEditor)>(r1);

        $r12 = virtualinvoke $r11.<java.util.Hashtable: java.util.Set keySet()>();

        $r13 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r16 = (java.lang.String) $r14;

        $i1 = virtualinvoke r16.<java.lang.String: int indexOf(java.lang.String)>(r3);

        $i3 = (int) -1;

        if $i1 <= $i3 goto label2;

        $r15 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: java.util.List keys>;

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r14);

     label2:
        goto label1;

     label3:
        goto label7;

     label4:
        $r5 = staticinvoke <com.sun.jwt.resources.editor.editors.ThemeEditor: java.util.Hashtable access$1200(com.sun.jwt.resources.editor.editors.ThemeEditor)>(r1);

        $r6 = virtualinvoke $r5.<java.util.Hashtable: java.util.Set keySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r9 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r17 = (java.lang.String) $r9;

        $i0 = virtualinvoke r17.<java.lang.String: int indexOf(java.lang.String)>("#");

        if $i0 >= 0 goto label6;

        $r10 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: java.util.List keys>;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r9);

     label6:
        goto label5;

     label7:
        $r8 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: java.util.List keys>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r8);

        return;
    }

    private void refreshTheme()
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel$1 $r3;
        com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel r0;
        java.util.Hashtable $r1;
        com.sun.lwuit.Display $r2;

        r0 := @this: com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: java.util.Hashtable theme>;

        staticinvoke <com.sun.lwuit.plaf.Accessor: void setTheme(java.util.Hashtable)>($r1);

        $r2 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r3 = new com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel$1;

        specialinvoke $r3.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel$1: void <init>(com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel)>(r0);

        virtualinvoke $r2.<com.sun.lwuit.Display: void callSeriallyAndWait(java.lang.Runnable)>($r3);

        return;
    }

    public void remove(int)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel r0;
        com.sun.lwuit.util.EditableResources $r4;
        java.util.List $r1;
        int i0;
        com.sun.jwt.resources.editor.editors.ThemeEditor $r3, $r5;
        java.lang.Object $r2;
        java.lang.String $r6, $r7;

        r0 := @this: com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel;

        i0 := @parameter0: int;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: java.util.List keys>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>(i0);

        $r3 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: com.sun.jwt.resources.editor.editors.ThemeEditor this$0>;

        $r4 = staticinvoke <com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.lwuit.util.EditableResources access$1000(com.sun.jwt.resources.editor.editors.ThemeEditor)>($r3);

        $r5 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: com.sun.jwt.resources.editor.editors.ThemeEditor this$0>;

        $r6 = staticinvoke <com.sun.jwt.resources.editor.editors.ThemeEditor: java.lang.String access$3700(com.sun.jwt.resources.editor.editors.ThemeEditor)>($r5);

        $r7 = (java.lang.String) $r2;

        virtualinvoke $r4.<com.sun.lwuit.util.EditableResources: void setThemeProperty(java.lang.String,java.lang.String,java.lang.Object)>($r6, $r7, null);

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: void fireTableRowsDeleted(int,int)>(i0, i0);

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: void refreshTheme()>();

        return;
    }

    public java.lang.Object getPropertyValue(java.lang.String)
    {
        java.lang.Object $r3;
        com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel r0;
        java.lang.String r1;
        java.util.Hashtable $r2;

        r0 := @this: com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: java.util.Hashtable theme>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        return $r3;
    }

    public int getRowCount()
    {
        int $i0;
        java.util.List $r1;
        com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel r0;

        r0 := @this: com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: java.util.List keys>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public java.lang.String getColumnName(int)
    {
        int i0;
        com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel r0;

        r0 := @this: com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        return "Selector";

     label1:
        return "Value";
    }

    public int getColumnCount()
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel r0;

        r0 := @this: com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel;

        return 2;
    }

    public void setKeyValue(java.lang.String, java.lang.Object)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel r0;
        com.sun.lwuit.util.EditableResources $r2;
        java.util.List $r7;
        int $i0;
        com.sun.jwt.resources.editor.editors.ThemeEditor $r1, $r3;
        java.lang.Object r6;
        java.lang.String $r4, r5;

        r0 := @this: com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel;

        r5 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.Object;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: com.sun.jwt.resources.editor.editors.ThemeEditor this$0>;

        $r2 = staticinvoke <com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.lwuit.util.EditableResources access$1000(com.sun.jwt.resources.editor.editors.ThemeEditor)>($r1);

        $r3 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: com.sun.jwt.resources.editor.editors.ThemeEditor this$0>;

        $r4 = staticinvoke <com.sun.jwt.resources.editor.editors.ThemeEditor: java.lang.String access$3700(com.sun.jwt.resources.editor.editors.ThemeEditor)>($r3);

        virtualinvoke $r2.<com.sun.lwuit.util.EditableResources: void setThemeProperty(java.lang.String,java.lang.String,java.lang.Object)>($r4, r5, r6);

        $r7 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: java.util.List keys>;

        $i0 = interfaceinvoke $r7.<java.util.List: int indexOf(java.lang.Object)>(r5);

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: void fireTableRowsUpdated(int,int)>($i0, $i0);

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: void refreshTheme()>();

        return;
    }

    public void addKeyValue(java.lang.String, java.lang.Object)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel r0;
        com.sun.lwuit.util.EditableResources $r4;
        java.util.List $r2, $r8, $r9;
        int $i0;
        com.sun.jwt.resources.editor.editors.ThemeEditor $r3, $r5;
        java.lang.Object r7;
        java.lang.String r1, $r6;

        r0 := @this: com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel;

        r1 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.Object;

        $r2 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: java.util.List keys>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r3 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: com.sun.jwt.resources.editor.editors.ThemeEditor this$0>;

        $r4 = staticinvoke <com.sun.jwt.resources.editor.editors.ThemeEditor: com.sun.lwuit.util.EditableResources access$1000(com.sun.jwt.resources.editor.editors.ThemeEditor)>($r3);

        $r5 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: com.sun.jwt.resources.editor.editors.ThemeEditor this$0>;

        $r6 = staticinvoke <com.sun.jwt.resources.editor.editors.ThemeEditor: java.lang.String access$3700(com.sun.jwt.resources.editor.editors.ThemeEditor)>($r5);

        virtualinvoke $r4.<com.sun.lwuit.util.EditableResources: void setThemeProperty(java.lang.String,java.lang.String,java.lang.Object)>($r6, r1, r7);

        $r8 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: java.util.List keys>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r8);

        $r9 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: java.util.List keys>;

        $i0 = interfaceinvoke $r9.<java.util.List: int indexOf(java.lang.Object)>(r1);

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: void fireTableRowsInserted(int,int)>($i0, $i0);

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: void refreshTheme()>();

        return;
    }

    public java.lang.Object getValueAt(int, int)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel r0;
        java.util.List $r1, $r5;
        int i0, i1;
        java.lang.Object $r3, $r4, $r6;
        java.util.Hashtable $r2;

        r0 := @this: com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        if i0 != 0 goto label1;

        $r5 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: java.util.List keys>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i1);

        return $r6;

     label1:
        $r2 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: java.util.Hashtable theme>;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: java.util.List keys>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r4 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r3);

        return $r4;
    }

    static java.lang.String access$1300(com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel)
    {
        com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel r0;
        java.lang.String $r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.ThemeEditor$ThemeModel: java.lang.String prefix>;

        return $r1;
    }
}
