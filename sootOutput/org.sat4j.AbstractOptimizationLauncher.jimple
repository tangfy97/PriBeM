public abstract class org.sat4j.AbstractOptimizationLauncher extends org.sat4j.AbstractLauncher
{
    private static final long serialVersionUID;
    private static final java.lang.String CURRENT_OPTIMUM_VALUE_PREFIX;
    private boolean incomplete;
    private boolean displaySolutionLine;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        org.sat4j.AbstractOptimizationLauncher r0;

        r0 := @this: org.sat4j.AbstractOptimizationLauncher;

        specialinvoke r0.<org.sat4j.AbstractLauncher: void <init>()>();

        r0.<org.sat4j.AbstractOptimizationLauncher: boolean incomplete> = 0;

        r0.<org.sat4j.AbstractOptimizationLauncher: boolean displaySolutionLine> = 1;

        return;
    }

    protected void setIncomplete(boolean)
    {
        org.sat4j.AbstractOptimizationLauncher r0;
        boolean z0;

        r0 := @this: org.sat4j.AbstractOptimizationLauncher;

        z0 := @parameter0: boolean;

        r0.<org.sat4j.AbstractOptimizationLauncher: boolean incomplete> = z0;

        return;
    }

    protected void setDisplaySolutionLine(boolean)
    {
        org.sat4j.AbstractOptimizationLauncher r0;
        boolean z0;

        r0 := @this: org.sat4j.AbstractOptimizationLauncher;

        z0 := @parameter0: boolean;

        r0.<org.sat4j.AbstractOptimizationLauncher: boolean displaySolutionLine> = z0;

        return;
    }

    protected void displayResult()
    {
        org.sat4j.AbstractOptimizationLauncher r0;
        long $l0, $l1, $l2;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        double $d0, $d1;

        r0 := @this: org.sat4j.AbstractOptimizationLauncher;

        virtualinvoke r0.<org.sat4j.AbstractOptimizationLauncher: void displayAnswer()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Total wall clock time (in seconds): ");

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = virtualinvoke r0.<org.sat4j.AbstractOptimizationLauncher: long getBeginTime()>();

        $l2 = $l0 - $l1;

        $d0 = (double) $l2;

        $d1 = $d0 / 1000.0;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.sat4j.AbstractOptimizationLauncher: void log(java.lang.String)>($r4);

        return;
    }

    protected void displayAnswer()
    {
        org.sat4j.specs.ISolver $r1, $r4, $r5, $r12, $r19;
        int[] $r20;
        org.sat4j.ExitCode $r6, $r11, $r22, $r23;
        java.lang.String $r10, $r17;
        java.lang.Number $r15;
        boolean $z0, $z1, $z2;
        java.io.PrintStream $r2;
        java.io.PrintWriter $r3;
        org.sat4j.specs.IOptimizationProblem $r21;
        org.sat4j.AbstractOptimizationLauncher r0;
        org.sat4j.reader.Reader $r18;
        java.lang.StringBuilder $r7, $r8, $r9, $r13, $r14, $r16;

        r0 := @this: org.sat4j.AbstractOptimizationLauncher;

        $r1 = r0.<org.sat4j.AbstractOptimizationLauncher: org.sat4j.specs.ISolver solver>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void flush()>();

        $r3 = virtualinvoke r0.<org.sat4j.AbstractOptimizationLauncher: java.io.PrintWriter getLogWriter()>();

        virtualinvoke $r3.<java.io.PrintWriter: void flush()>();

        $r4 = r0.<org.sat4j.AbstractOptimizationLauncher: org.sat4j.specs.ISolver solver>;

        interfaceinvoke $r4.<org.sat4j.specs.ISolver: void printStat(java.io.PrintWriter,java.lang.String)>($r3, "c ");

        $r5 = r0.<org.sat4j.AbstractOptimizationLauncher: org.sat4j.specs.ISolver solver>;

        interfaceinvoke $r5.<org.sat4j.specs.ISolver: void printInfos(java.io.PrintWriter,java.lang.String)>($r3, "c ");

        $r6 = virtualinvoke r0.<org.sat4j.AbstractOptimizationLauncher: org.sat4j.ExitCode getExitCode()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("s ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        $r11 = <org.sat4j.ExitCode: org.sat4j.ExitCode SATISFIABLE>;

        if $r6 == $r11 goto label2;

        $r22 = <org.sat4j.ExitCode: org.sat4j.ExitCode OPTIMUM_FOUND>;

        if $r6 == $r22 goto label2;

        $z1 = r0.<org.sat4j.AbstractOptimizationLauncher: boolean incomplete>;

        if $z1 == 0 goto label4;

        $r23 = <org.sat4j.ExitCode: org.sat4j.ExitCode UPPER_BOUND>;

        if $r6 != $r23 goto label4;

     label2:
        $z2 = r0.<org.sat4j.AbstractOptimizationLauncher: boolean displaySolutionLine>;

        if $z2 == 0 goto label3;

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>("v ");

        $r18 = virtualinvoke r0.<org.sat4j.AbstractOptimizationLauncher: org.sat4j.reader.Reader getReader()>();

        $r19 = r0.<org.sat4j.AbstractOptimizationLauncher: org.sat4j.specs.ISolver solver>;

        $r20 = interfaceinvoke $r19.<org.sat4j.specs.ISolver: int[] model()>();

        virtualinvoke $r18.<org.sat4j.reader.Reader: void decode(int[],java.io.PrintWriter)>($r20, $r3);

        virtualinvoke $r3.<java.io.PrintWriter: void println()>();

     label3:
        $r12 = r0.<org.sat4j.AbstractOptimizationLauncher: org.sat4j.specs.ISolver solver>;

        $r21 = (org.sat4j.specs.IOptimizationProblem) $r12;

        $z0 = interfaceinvoke $r21.<org.sat4j.specs.IOptimizationProblem: boolean hasNoObjectiveFunction()>();

        if $z0 != 0 goto label4;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("objective function=");

        $r15 = interfaceinvoke $r21.<org.sat4j.specs.IOptimizationProblem: java.lang.Number getObjectiveValue()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.sat4j.AbstractOptimizationLauncher: void log(java.lang.String)>($r17);

     label4:
        return;
    }

    protected void solve(org.sat4j.specs.IProblem) throws org.sat4j.specs.TimeoutException
    {
        org.sat4j.ExitCode $r3, $r4, $r5, $r6, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, z5, z6, z7, z8;
        java.io.PrintWriter $r14;
        org.sat4j.specs.IOptimizationProblem r1;
        org.sat4j.AbstractOptimizationLauncher r2;
        java.lang.StringBuilder $r10, $r11, $r12, $r15, $r16, $r18;
        long $l0, $l1, $l2;
        java.lang.AssertionError $r9;
        java.lang.String $r13, $r19;
        java.lang.Number $r17;
        double $d0, $d1;
        org.sat4j.specs.ContradictionException $r7;
        org.sat4j.specs.IProblem r0;

        r2 := @this: org.sat4j.AbstractOptimizationLauncher;

        r0 := @parameter0: org.sat4j.specs.IProblem;

        z5 = 0;

        z8 = 0;

        z7 = 0;

        z6 = 0;

        r1 = (org.sat4j.specs.IOptimizationProblem) r0;

     label01:
        $z0 = interfaceinvoke r1.<org.sat4j.specs.IOptimizationProblem: boolean admitABetterSolution()>();

        if $z0 == 0 goto label07;

        if z6 != 0 goto label06;

        $z1 = interfaceinvoke r1.<org.sat4j.specs.IOptimizationProblem: boolean nonOptimalMeansSatisfiable()>();

        if $z1 == 0 goto label04;

        $r6 = <org.sat4j.ExitCode: org.sat4j.ExitCode SATISFIABLE>;

        virtualinvoke r2.<org.sat4j.AbstractOptimizationLauncher: void setExitCode(org.sat4j.ExitCode)>($r6);

        $z3 = interfaceinvoke r1.<org.sat4j.specs.IOptimizationProblem: boolean hasNoObjectiveFunction()>();

        if $z3 == 0 goto label03;

     label02:
        return;

     label03:
        virtualinvoke r2.<org.sat4j.AbstractOptimizationLauncher: void log(java.lang.String)>("SATISFIABLE");

        goto label05;

     label04:
        $z2 = r2.<org.sat4j.AbstractOptimizationLauncher: boolean incomplete>;

        if $z2 == 0 goto label05;

        $r5 = <org.sat4j.ExitCode: org.sat4j.ExitCode UPPER_BOUND>;

        virtualinvoke r2.<org.sat4j.AbstractOptimizationLauncher: void setExitCode(org.sat4j.ExitCode)>($r5);

     label05:
        z5 = 1;

        z8 = 1;

        z7 = 1;

        z6 = 1;

        virtualinvoke r2.<org.sat4j.AbstractOptimizationLauncher: void log(java.lang.String)>("OPTIMIZING...");

     label06:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got one! Elapsed wall clock time (in seconds):");

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = virtualinvoke r2.<org.sat4j.AbstractOptimizationLauncher: long getBeginTime()>();

        $l2 = $l0 - $l1;

        $d0 = (double) $l2;

        $d1 = $d0 / 1000.0;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<org.sat4j.AbstractOptimizationLauncher: void log(java.lang.String)>($r13);

        $r14 = virtualinvoke r2.<org.sat4j.AbstractOptimizationLauncher: java.io.PrintWriter getLogWriter()>();

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("o ");

        $r17 = interfaceinvoke r1.<org.sat4j.specs.IOptimizationProblem: java.lang.Number getObjectiveValue()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintWriter: void println(java.lang.String)>($r19);

        interfaceinvoke r1.<org.sat4j.specs.IOptimizationProblem: void discardCurrentSolution()>();

        goto label01;

     label07:
        if z7 == 0 goto label08;

        $r4 = <org.sat4j.ExitCode: org.sat4j.ExitCode OPTIMUM_FOUND>;

        virtualinvoke r2.<org.sat4j.AbstractOptimizationLauncher: void setExitCode(org.sat4j.ExitCode)>($r4);

        goto label09;

     label08:
        $r3 = <org.sat4j.ExitCode: org.sat4j.ExitCode UNSATISFIABLE>;

        virtualinvoke r2.<org.sat4j.AbstractOptimizationLauncher: void setExitCode(org.sat4j.ExitCode)>($r3);

     label09:
        goto label12;

     label10:
        $r7 := @caughtexception;

        $z4 = <org.sat4j.AbstractOptimizationLauncher: boolean $assertionsDisabled>;

        if $z4 != 0 goto label11;

        if z8 != 0 goto label11;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label11:
        $r8 = <org.sat4j.ExitCode: org.sat4j.ExitCode OPTIMUM_FOUND>;

        virtualinvoke r2.<org.sat4j.AbstractOptimizationLauncher: void setExitCode(org.sat4j.ExitCode)>($r8);

     label12:
        return;

        catch org.sat4j.specs.ContradictionException from label01 to label02 with label10;
        catch org.sat4j.specs.ContradictionException from label03 to label09 with label10;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.sat4j.AbstractOptimizationLauncher: java.lang.String CURRENT_OPTIMUM_VALUE_PREFIX> = "o ";

        <org.sat4j.AbstractOptimizationLauncher: long serialVersionUID> = 1L;

        $r0 = class "Lorg/sat4j/AbstractOptimizationLauncher;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.sat4j.AbstractOptimizationLauncher: boolean $assertionsDisabled> = $z1;

        return;
    }
}
