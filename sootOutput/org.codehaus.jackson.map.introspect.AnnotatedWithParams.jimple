public abstract class org.codehaus.jackson.map.introspect.AnnotatedWithParams extends org.codehaus.jackson.map.introspect.AnnotatedMember
{
    protected final org.codehaus.jackson.map.introspect.AnnotationMap[] _paramAnnotations;

    protected void <init>(org.codehaus.jackson.map.introspect.AnnotationMap, org.codehaus.jackson.map.introspect.AnnotationMap[])
    {
        org.codehaus.jackson.map.introspect.AnnotationMap[] r2;
        org.codehaus.jackson.map.introspect.AnnotatedWithParams r0;
        org.codehaus.jackson.map.introspect.AnnotationMap r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedWithParams;

        r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotationMap;

        r2 := @parameter1: org.codehaus.jackson.map.introspect.AnnotationMap[];

        specialinvoke r0.<org.codehaus.jackson.map.introspect.AnnotatedMember: void <init>(org.codehaus.jackson.map.introspect.AnnotationMap)>(r1);

        r0.<org.codehaus.jackson.map.introspect.AnnotatedWithParams: org.codehaus.jackson.map.introspect.AnnotationMap[] _paramAnnotations> = r2;

        return;
    }

    public final void addOrOverride(java.lang.'annotation'.Annotation)
    {
        java.lang.'annotation'.Annotation r1;
        org.codehaus.jackson.map.introspect.AnnotatedWithParams r0;
        org.codehaus.jackson.map.introspect.AnnotationMap $r2;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedWithParams;

        r1 := @parameter0: java.lang.'annotation'.Annotation;

        $r2 = r0.<org.codehaus.jackson.map.introspect.AnnotatedWithParams: org.codehaus.jackson.map.introspect.AnnotationMap _annotations>;

        virtualinvoke $r2.<org.codehaus.jackson.map.introspect.AnnotationMap: void add(java.lang.'annotation'.Annotation)>(r1);

        return;
    }

    public final void addOrOverrideParam(int, java.lang.'annotation'.Annotation)
    {
        int i0;
        org.codehaus.jackson.map.introspect.AnnotationMap[] $r1, $r4;
        java.lang.'annotation'.Annotation r2;
        org.codehaus.jackson.map.introspect.AnnotatedWithParams r0;
        org.codehaus.jackson.map.introspect.AnnotationMap $r3, r5;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedWithParams;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.'annotation'.Annotation;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotatedWithParams: org.codehaus.jackson.map.introspect.AnnotationMap[] _paramAnnotations>;

        r5 = $r1[i0];

        if r5 != null goto label1;

        $r3 = new org.codehaus.jackson.map.introspect.AnnotationMap;

        specialinvoke $r3.<org.codehaus.jackson.map.introspect.AnnotationMap: void <init>()>();

        r5 = $r3;

        $r4 = r0.<org.codehaus.jackson.map.introspect.AnnotatedWithParams: org.codehaus.jackson.map.introspect.AnnotationMap[] _paramAnnotations>;

        $r4[i0] = $r3;

     label1:
        virtualinvoke r5.<org.codehaus.jackson.map.introspect.AnnotationMap: void add(java.lang.'annotation'.Annotation)>(r2);

        return;
    }

    public final void addIfNotPresent(java.lang.'annotation'.Annotation)
    {
        java.lang.'annotation'.Annotation r1;
        org.codehaus.jackson.map.introspect.AnnotatedWithParams r0;
        org.codehaus.jackson.map.introspect.AnnotationMap $r2;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedWithParams;

        r1 := @parameter0: java.lang.'annotation'.Annotation;

        $r2 = r0.<org.codehaus.jackson.map.introspect.AnnotatedWithParams: org.codehaus.jackson.map.introspect.AnnotationMap _annotations>;

        virtualinvoke $r2.<org.codehaus.jackson.map.introspect.AnnotationMap: void addIfNotPresent(java.lang.'annotation'.Annotation)>(r1);

        return;
    }

    protected org.codehaus.jackson.map.introspect.AnnotatedParameter replaceParameterAnnotations(int, org.codehaus.jackson.map.introspect.AnnotationMap)
    {
        int i0;
        org.codehaus.jackson.map.introspect.AnnotationMap[] $r2;
        org.codehaus.jackson.map.introspect.AnnotatedWithParams r0;
        org.codehaus.jackson.map.introspect.AnnotatedParameter $r3;
        org.codehaus.jackson.map.introspect.AnnotationMap r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedWithParams;

        i0 := @parameter0: int;

        r1 := @parameter1: org.codehaus.jackson.map.introspect.AnnotationMap;

        $r2 = r0.<org.codehaus.jackson.map.introspect.AnnotatedWithParams: org.codehaus.jackson.map.introspect.AnnotationMap[] _paramAnnotations>;

        $r2[i0] = r1;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.AnnotatedWithParams: org.codehaus.jackson.map.introspect.AnnotatedParameter getParameter(int)>(i0);

        return $r3;
    }

    protected org.codehaus.jackson.type.JavaType getType(org.codehaus.jackson.map.type.TypeBindings, java.lang.reflect.TypeVariable[])
    {
        java.lang.reflect.TypeVariable r3;
        org.codehaus.jackson.map.type.TypeBindings $r2, r8;
        org.codehaus.jackson.map.introspect.AnnotatedWithParams r1;
        java.lang.reflect.Type r6, $r10;
        java.lang.reflect.TypeVariable[] r0;
        int $i0, i1, i2;
        java.lang.reflect.Type[] $r5;
        org.codehaus.jackson.type.JavaType $r9, $r11;
        java.lang.String $r4, $r7;

        r1 := @this: org.codehaus.jackson.map.introspect.AnnotatedWithParams;

        r8 := @parameter0: org.codehaus.jackson.map.type.TypeBindings;

        r0 := @parameter1: java.lang.reflect.TypeVariable[];

        if r0 == null goto label4;

        $i0 = lengthof r0;

        if $i0 <= 0 goto label4;

        $r2 = virtualinvoke r8.<org.codehaus.jackson.map.type.TypeBindings: org.codehaus.jackson.map.type.TypeBindings childInstance()>();

        r8 = $r2;

        i1 = lengthof r0;

        i2 = 0;

     label1:
        if i2 >= i1 goto label4;

        r3 = r0[i2];

        $r4 = interfaceinvoke r3.<java.lang.reflect.TypeVariable: java.lang.String getName()>();

        virtualinvoke $r2.<org.codehaus.jackson.map.type.TypeBindings: void _addPlaceholder(java.lang.String)>($r4);

        $r5 = interfaceinvoke r3.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();

        r6 = $r5[0];

        if r6 != null goto label2;

        $r9 = staticinvoke <org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType unknownType()>();

        goto label3;

     label2:
        $r9 = virtualinvoke $r2.<org.codehaus.jackson.map.type.TypeBindings: org.codehaus.jackson.type.JavaType resolveType(java.lang.reflect.Type)>(r6);

     label3:
        $r7 = interfaceinvoke r3.<java.lang.reflect.TypeVariable: java.lang.String getName()>();

        virtualinvoke $r2.<org.codehaus.jackson.map.type.TypeBindings: void addBinding(java.lang.String,org.codehaus.jackson.type.JavaType)>($r7, $r9);

        i2 = i2 + 1;

        goto label1;

     label4:
        $r10 = virtualinvoke r1.<org.codehaus.jackson.map.introspect.AnnotatedWithParams: java.lang.reflect.Type getGenericType()>();

        $r11 = virtualinvoke r8.<org.codehaus.jackson.map.type.TypeBindings: org.codehaus.jackson.type.JavaType resolveType(java.lang.reflect.Type)>($r10);

        return $r11;
    }

    public final java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)
    {
        java.lang.'annotation'.Annotation $r3;
        java.lang.Class r1;
        org.codehaus.jackson.map.introspect.AnnotatedWithParams r0;
        org.codehaus.jackson.map.introspect.AnnotationMap $r2;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedWithParams;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.codehaus.jackson.map.introspect.AnnotatedWithParams: org.codehaus.jackson.map.introspect.AnnotationMap _annotations>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.AnnotationMap: java.lang.'annotation'.Annotation get(java.lang.Class)>(r1);

        return $r3;
    }

    public final org.codehaus.jackson.map.introspect.AnnotationMap getParameterAnnotations(int)
    {
        org.codehaus.jackson.map.introspect.AnnotationMap[] $r1, $r2, $r3;
        int i0, $i1;
        org.codehaus.jackson.map.introspect.AnnotatedWithParams r0;
        org.codehaus.jackson.map.introspect.AnnotationMap $r4;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedWithParams;

        i0 := @parameter0: int;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotatedWithParams: org.codehaus.jackson.map.introspect.AnnotationMap[] _paramAnnotations>;

        if $r1 == null goto label1;

        if i0 < 0 goto label1;

        $r2 = r0.<org.codehaus.jackson.map.introspect.AnnotatedWithParams: org.codehaus.jackson.map.introspect.AnnotationMap[] _paramAnnotations>;

        $i1 = lengthof $r2;

        if i0 > $i1 goto label1;

        $r3 = r0.<org.codehaus.jackson.map.introspect.AnnotatedWithParams: org.codehaus.jackson.map.introspect.AnnotationMap[] _paramAnnotations>;

        $r4 = $r3[i0];

        return $r4;

     label1:
        return null;
    }

    public final org.codehaus.jackson.map.introspect.AnnotatedParameter getParameter(int)
    {
        java.lang.reflect.Type $r2;
        int i0;
        org.codehaus.jackson.map.introspect.AnnotationMap[] $r3;
        org.codehaus.jackson.map.introspect.AnnotatedParameter $r0;
        org.codehaus.jackson.map.introspect.AnnotatedWithParams r1;
        org.codehaus.jackson.map.introspect.AnnotationMap $r4;

        r1 := @this: org.codehaus.jackson.map.introspect.AnnotatedWithParams;

        i0 := @parameter0: int;

        $r0 = new org.codehaus.jackson.map.introspect.AnnotatedParameter;

        $r2 = virtualinvoke r1.<org.codehaus.jackson.map.introspect.AnnotatedWithParams: java.lang.reflect.Type getParameterType(int)>(i0);

        $r3 = r1.<org.codehaus.jackson.map.introspect.AnnotatedWithParams: org.codehaus.jackson.map.introspect.AnnotationMap[] _paramAnnotations>;

        $r4 = $r3[i0];

        specialinvoke $r0.<org.codehaus.jackson.map.introspect.AnnotatedParameter: void <init>(org.codehaus.jackson.map.introspect.AnnotatedWithParams,java.lang.reflect.Type,org.codehaus.jackson.map.introspect.AnnotationMap,int)>(r1, $r2, $r4, i0);

        return $r0;
    }

    public abstract int getParameterCount();

    public abstract java.lang.Class getParameterClass(int);

    public abstract java.lang.reflect.Type getParameterType(int);

    public final org.codehaus.jackson.type.JavaType resolveParameterType(int, org.codehaus.jackson.map.type.TypeBindings)
    {
        java.lang.reflect.Type $r2;
        int i0;
        org.codehaus.jackson.type.JavaType $r3;
        org.codehaus.jackson.map.type.TypeBindings r0;
        org.codehaus.jackson.map.introspect.AnnotatedWithParams r1;

        r1 := @this: org.codehaus.jackson.map.introspect.AnnotatedWithParams;

        i0 := @parameter0: int;

        r0 := @parameter1: org.codehaus.jackson.map.type.TypeBindings;

        $r2 = virtualinvoke r1.<org.codehaus.jackson.map.introspect.AnnotatedWithParams: java.lang.reflect.Type getParameterType(int)>(i0);

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.type.TypeBindings: org.codehaus.jackson.type.JavaType resolveType(java.lang.reflect.Type)>($r2);

        return $r3;
    }

    public final int getAnnotationCount()
    {
        int $i0;
        org.codehaus.jackson.map.introspect.AnnotatedWithParams r0;
        org.codehaus.jackson.map.introspect.AnnotationMap $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedWithParams;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotatedWithParams: org.codehaus.jackson.map.introspect.AnnotationMap _annotations>;

        $i0 = virtualinvoke $r1.<org.codehaus.jackson.map.introspect.AnnotationMap: int size()>();

        return $i0;
    }

    public abstract java.lang.Object call() throws java.lang.Exception;

    public abstract java.lang.Object call(java.lang.Object[]) throws java.lang.Exception;

    public abstract java.lang.Object call1(java.lang.Object) throws java.lang.Exception;
}
