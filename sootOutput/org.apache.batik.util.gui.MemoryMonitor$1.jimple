class org.apache.batik.util.gui.MemoryMonitor$1 extends java.awt.event.WindowAdapter
{
    private final org.apache.batik.util.gui.MemoryMonitor this$0;

    void <init>(org.apache.batik.util.gui.MemoryMonitor)
    {
        org.apache.batik.util.gui.MemoryMonitor$1 r0;
        org.apache.batik.util.gui.MemoryMonitor r1;

        r0 := @this: org.apache.batik.util.gui.MemoryMonitor$1;

        r1 := @parameter0: org.apache.batik.util.gui.MemoryMonitor;

        specialinvoke r0.<java.awt.event.WindowAdapter: void <init>()>();

        r0.<org.apache.batik.util.gui.MemoryMonitor$1: org.apache.batik.util.gui.MemoryMonitor this$0> = r1;

        return;
    }

    public void windowActivated(java.awt.event.WindowEvent)
    {
        org.apache.batik.util.gui.MemoryMonitor$RepaintThread $r3;
        org.apache.batik.util.gui.MemoryMonitor$1 r0;
        org.apache.batik.util.gui.MemoryMonitor $r1;
        org.apache.batik.util.gui.MemoryMonitor$Panel $r2;
        java.awt.event.WindowEvent r4;
        boolean $z0;

        r0 := @this: org.apache.batik.util.gui.MemoryMonitor$1;

        r4 := @parameter0: java.awt.event.WindowEvent;

        $r1 = r0.<org.apache.batik.util.gui.MemoryMonitor$1: org.apache.batik.util.gui.MemoryMonitor this$0>;

        $r2 = $r1.<org.apache.batik.util.gui.MemoryMonitor: org.apache.batik.util.gui.MemoryMonitor$Panel panel>;

        $r3 = virtualinvoke $r2.<org.apache.batik.util.gui.MemoryMonitor$Panel: org.apache.batik.util.gui.MemoryMonitor$RepaintThread getRepaintThread()>();

        $z0 = virtualinvoke $r3.<java.lang.Thread: boolean isAlive()>();

        if $z0 != 0 goto label1;

        virtualinvoke $r3.<java.lang.Thread: void start()>();

        goto label2;

     label1:
        virtualinvoke $r3.<org.apache.batik.util.gui.MemoryMonitor$RepaintThread: void safeResume()>();

     label2:
        return;
    }

    public void windowClosing(java.awt.event.WindowEvent)
    {
        org.apache.batik.util.gui.MemoryMonitor$RepaintThread $r3;
        org.apache.batik.util.gui.MemoryMonitor$1 r0;
        org.apache.batik.util.gui.MemoryMonitor $r1;
        org.apache.batik.util.gui.MemoryMonitor$Panel $r2;
        java.awt.event.WindowEvent r4;

        r0 := @this: org.apache.batik.util.gui.MemoryMonitor$1;

        r4 := @parameter0: java.awt.event.WindowEvent;

        $r1 = r0.<org.apache.batik.util.gui.MemoryMonitor$1: org.apache.batik.util.gui.MemoryMonitor this$0>;

        $r2 = $r1.<org.apache.batik.util.gui.MemoryMonitor: org.apache.batik.util.gui.MemoryMonitor$Panel panel>;

        $r3 = virtualinvoke $r2.<org.apache.batik.util.gui.MemoryMonitor$Panel: org.apache.batik.util.gui.MemoryMonitor$RepaintThread getRepaintThread()>();

        virtualinvoke $r3.<org.apache.batik.util.gui.MemoryMonitor$RepaintThread: void safeSuspend()>();

        return;
    }

    public void windowDeiconified(java.awt.event.WindowEvent)
    {
        org.apache.batik.util.gui.MemoryMonitor$RepaintThread $r3;
        org.apache.batik.util.gui.MemoryMonitor$1 r0;
        org.apache.batik.util.gui.MemoryMonitor $r1;
        org.apache.batik.util.gui.MemoryMonitor$Panel $r2;
        java.awt.event.WindowEvent r4;

        r0 := @this: org.apache.batik.util.gui.MemoryMonitor$1;

        r4 := @parameter0: java.awt.event.WindowEvent;

        $r1 = r0.<org.apache.batik.util.gui.MemoryMonitor$1: org.apache.batik.util.gui.MemoryMonitor this$0>;

        $r2 = $r1.<org.apache.batik.util.gui.MemoryMonitor: org.apache.batik.util.gui.MemoryMonitor$Panel panel>;

        $r3 = virtualinvoke $r2.<org.apache.batik.util.gui.MemoryMonitor$Panel: org.apache.batik.util.gui.MemoryMonitor$RepaintThread getRepaintThread()>();

        virtualinvoke $r3.<org.apache.batik.util.gui.MemoryMonitor$RepaintThread: void safeResume()>();

        return;
    }

    public void windowIconified(java.awt.event.WindowEvent)
    {
        org.apache.batik.util.gui.MemoryMonitor$RepaintThread $r3;
        org.apache.batik.util.gui.MemoryMonitor$1 r0;
        org.apache.batik.util.gui.MemoryMonitor $r1;
        org.apache.batik.util.gui.MemoryMonitor$Panel $r2;
        java.awt.event.WindowEvent r4;

        r0 := @this: org.apache.batik.util.gui.MemoryMonitor$1;

        r4 := @parameter0: java.awt.event.WindowEvent;

        $r1 = r0.<org.apache.batik.util.gui.MemoryMonitor$1: org.apache.batik.util.gui.MemoryMonitor this$0>;

        $r2 = $r1.<org.apache.batik.util.gui.MemoryMonitor: org.apache.batik.util.gui.MemoryMonitor$Panel panel>;

        $r3 = virtualinvoke $r2.<org.apache.batik.util.gui.MemoryMonitor$Panel: org.apache.batik.util.gui.MemoryMonitor$RepaintThread getRepaintThread()>();

        virtualinvoke $r3.<org.apache.batik.util.gui.MemoryMonitor$RepaintThread: void safeSuspend()>();

        return;
    }
}
