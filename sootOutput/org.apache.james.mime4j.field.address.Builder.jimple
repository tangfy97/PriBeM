class org.apache.james.mime4j.field.address.Builder extends java.lang.Object
{
    private static org.apache.james.mime4j.field.address.Builder singleton;

    void <init>()
    {
        org.apache.james.mime4j.field.address.Builder r0;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.james.mime4j.field.address.Builder getInstance()
    {
        org.apache.james.mime4j.field.address.Builder $r0;

        $r0 = <org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.Builder singleton>;

        return $r0;
    }

    public org.apache.james.mime4j.dom.address.AddressList buildAddressList(org.apache.james.mime4j.field.address.ASTaddress_list, org.apache.james.mime4j.codec.DecodeMonitor) throws org.apache.james.mime4j.field.address.ParseException
    {
        org.apache.james.mime4j.field.address.Node $r3;
        java.util.ArrayList $r0;
        org.apache.james.mime4j.dom.address.Address $r7;
        int $i0, i1;
        org.apache.james.mime4j.dom.address.AddressList $r2;
        org.apache.james.mime4j.codec.DecodeMonitor r6;
        org.apache.james.mime4j.field.address.ASTaddress r4;
        org.apache.james.mime4j.field.address.ASTaddress_list r1;
        org.apache.james.mime4j.field.address.Builder r5;

        r5 := @this: org.apache.james.mime4j.field.address.Builder;

        r1 := @parameter0: org.apache.james.mime4j.field.address.ASTaddress_list;

        r6 := @parameter1: org.apache.james.mime4j.codec.DecodeMonitor;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        i1 = 0;

     label1:
        $i0 = virtualinvoke r1.<org.apache.james.mime4j.field.address.ASTaddress_list: int jjtGetNumChildren()>();

        if i1 >= $i0 goto label2;

        $r3 = virtualinvoke r1.<org.apache.james.mime4j.field.address.ASTaddress_list: org.apache.james.mime4j.field.address.Node jjtGetChild(int)>(i1);

        r4 = (org.apache.james.mime4j.field.address.ASTaddress) $r3;

        $r7 = virtualinvoke r5.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.dom.address.Address buildAddress(org.apache.james.mime4j.field.address.ASTaddress,org.apache.james.mime4j.codec.DecodeMonitor)>(r4, r6);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r7);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = new org.apache.james.mime4j.dom.address.AddressList;

        specialinvoke $r2.<org.apache.james.mime4j.dom.address.AddressList: void <init>(java.util.List,boolean)>($r0, 1);

        return $r2;
    }

    public org.apache.james.mime4j.dom.address.Address buildAddress(org.apache.james.mime4j.field.address.ASTaddress, org.apache.james.mime4j.codec.DecodeMonitor) throws org.apache.james.mime4j.field.address.ParseException
    {
        org.apache.james.mime4j.field.address.ASTangle_addr $r11, $r20;
        org.apache.james.mime4j.dom.address.DomainList $r14;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.james.mime4j.field.address.ASTphrase $r5;
        org.apache.james.mime4j.field.address.ASTgroup_body $r18;
        org.apache.james.mime4j.field.address.Builder$ChildNodeIterator $r0;
        org.apache.james.mime4j.field.address.Builder r4;
        org.apache.james.mime4j.field.address.ParseException $r3, $r8, $r25;
        java.lang.String $r6, $r10, $r15, $r16, $r26;
        org.apache.james.mime4j.field.address.ASTaddr_spec $r22;
        org.apache.james.mime4j.field.address.Node $r2, $r7;
        java.lang.IllegalArgumentException $r24;
        org.apache.james.mime4j.dom.address.MailboxList $r19;
        org.apache.james.mime4j.codec.DecodeMonitor r9;
        org.apache.james.mime4j.dom.address.Group $r17;
        org.apache.james.mime4j.field.address.ASTaddress r1;
        org.apache.james.mime4j.dom.address.Mailbox $r12, $r13, $r21, $r23;

        r4 := @this: org.apache.james.mime4j.field.address.Builder;

        r1 := @parameter0: org.apache.james.mime4j.field.address.ASTaddress;

        r9 := @parameter1: org.apache.james.mime4j.codec.DecodeMonitor;

        $r0 = new org.apache.james.mime4j.field.address.Builder$ChildNodeIterator;

        specialinvoke $r0.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: void <init>(org.apache.james.mime4j.field.address.SimpleNode)>(r1);

        $r2 = virtualinvoke $r0.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.Node next()>();

        $z0 = $r2 instanceof org.apache.james.mime4j.field.address.ASTaddr_spec;

        if $z0 == 0 goto label1;

        $r22 = (org.apache.james.mime4j.field.address.ASTaddr_spec) $r2;

        $r23 = specialinvoke r4.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.dom.address.Mailbox buildAddrSpec(org.apache.james.mime4j.field.address.ASTaddr_spec)>($r22);

        return $r23;

     label1:
        $z1 = $r2 instanceof org.apache.james.mime4j.field.address.ASTangle_addr;

        if $z1 == 0 goto label2;

        $r20 = (org.apache.james.mime4j.field.address.ASTangle_addr) $r2;

        $r21 = specialinvoke r4.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.dom.address.Mailbox buildAngleAddr(org.apache.james.mime4j.field.address.ASTangle_addr)>($r20);

        return $r21;

     label2:
        $z2 = $r2 instanceof org.apache.james.mime4j.field.address.ASTphrase;

        if $z2 == 0 goto label9;

        $r5 = (org.apache.james.mime4j.field.address.ASTphrase) $r2;

        $r6 = specialinvoke r4.<org.apache.james.mime4j.field.address.Builder: java.lang.String buildString(org.apache.james.mime4j.field.address.SimpleNode,boolean)>($r5, 0);

        $r7 = virtualinvoke $r0.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.Node next()>();

        $z3 = $r7 instanceof org.apache.james.mime4j.field.address.ASTgroup_body;

        if $z3 == 0 goto label3;

        $r17 = new org.apache.james.mime4j.dom.address.Group;

        $r18 = (org.apache.james.mime4j.field.address.ASTgroup_body) $r7;

        $r19 = specialinvoke r4.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.dom.address.MailboxList buildGroupBody(org.apache.james.mime4j.field.address.ASTgroup_body,org.apache.james.mime4j.codec.DecodeMonitor)>($r18, r9);

        specialinvoke $r17.<org.apache.james.mime4j.dom.address.Group: void <init>(java.lang.String,org.apache.james.mime4j.dom.address.MailboxList)>($r6, $r19);

        return $r17;

     label3:
        $z4 = $r7 instanceof org.apache.james.mime4j.field.address.ASTangle_addr;

        if $z4 == 0 goto label8;

     label4:
        $r10 = staticinvoke <org.apache.james.mime4j.codec.DecoderUtil: java.lang.String decodeEncodedWords(java.lang.String,org.apache.james.mime4j.codec.DecodeMonitor)>($r6, r9);

     label5:
        goto label7;

     label6:
        $r24 := @caughtexception;

        $r25 = new org.apache.james.mime4j.field.address.ParseException;

        $r26 = virtualinvoke $r24.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        specialinvoke $r25.<org.apache.james.mime4j.field.address.ParseException: void <init>(java.lang.String)>($r26);

        throw $r25;

     label7:
        $r11 = (org.apache.james.mime4j.field.address.ASTangle_addr) $r7;

        $r12 = specialinvoke r4.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.dom.address.Mailbox buildAngleAddr(org.apache.james.mime4j.field.address.ASTangle_addr)>($r11);

        $r13 = new org.apache.james.mime4j.dom.address.Mailbox;

        $r14 = virtualinvoke $r12.<org.apache.james.mime4j.dom.address.Mailbox: org.apache.james.mime4j.dom.address.DomainList getRoute()>();

        $r15 = virtualinvoke $r12.<org.apache.james.mime4j.dom.address.Mailbox: java.lang.String getLocalPart()>();

        $r16 = virtualinvoke $r12.<org.apache.james.mime4j.dom.address.Mailbox: java.lang.String getDomain()>();

        specialinvoke $r13.<org.apache.james.mime4j.dom.address.Mailbox: void <init>(java.lang.String,org.apache.james.mime4j.dom.address.DomainList,java.lang.String,java.lang.String)>($r10, $r14, $r15, $r16);

        return $r13;

     label8:
        $r8 = new org.apache.james.mime4j.field.address.ParseException;

        specialinvoke $r8.<org.apache.james.mime4j.field.address.ParseException: void <init>()>();

        throw $r8;

     label9:
        $r3 = new org.apache.james.mime4j.field.address.ParseException;

        specialinvoke $r3.<org.apache.james.mime4j.field.address.ParseException: void <init>()>();

        throw $r3;

        catch java.lang.IllegalArgumentException from label4 to label5 with label6;
    }

    private org.apache.james.mime4j.dom.address.MailboxList buildGroupBody(org.apache.james.mime4j.field.address.ASTgroup_body, org.apache.james.mime4j.codec.DecodeMonitor) throws org.apache.james.mime4j.field.address.ParseException
    {
        org.apache.james.mime4j.field.address.Node $r4;
        org.apache.james.mime4j.field.address.ASTmailbox $r8;
        org.apache.james.mime4j.field.address.ParseException $r5;
        java.util.ArrayList $r0;
        org.apache.james.mime4j.field.address.ASTgroup_body r2;
        org.apache.james.mime4j.field.address.Builder$ChildNodeIterator $r1;
        org.apache.james.mime4j.dom.address.MailboxList $r3;
        org.apache.james.mime4j.codec.DecodeMonitor r7;
        boolean $z0, $z1;
        org.apache.james.mime4j.field.address.Builder r6;
        org.apache.james.mime4j.dom.address.Mailbox $r9;

        r6 := @this: org.apache.james.mime4j.field.address.Builder;

        r2 := @parameter0: org.apache.james.mime4j.field.address.ASTgroup_body;

        r7 := @parameter1: org.apache.james.mime4j.codec.DecodeMonitor;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1 = new org.apache.james.mime4j.field.address.Builder$ChildNodeIterator;

        specialinvoke $r1.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: void <init>(org.apache.james.mime4j.field.address.SimpleNode)>(r2);

     label1:
        $z0 = virtualinvoke $r1.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = virtualinvoke $r1.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.Node next()>();

        $z1 = $r4 instanceof org.apache.james.mime4j.field.address.ASTmailbox;

        if $z1 == 0 goto label2;

        $r8 = (org.apache.james.mime4j.field.address.ASTmailbox) $r4;

        $r9 = virtualinvoke r6.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.dom.address.Mailbox buildMailbox(org.apache.james.mime4j.field.address.ASTmailbox,org.apache.james.mime4j.codec.DecodeMonitor)>($r8, r7);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r9);

        goto label3;

     label2:
        $r5 = new org.apache.james.mime4j.field.address.ParseException;

        specialinvoke $r5.<org.apache.james.mime4j.field.address.ParseException: void <init>()>();

        throw $r5;

     label3:
        goto label1;

     label4:
        $r3 = new org.apache.james.mime4j.dom.address.MailboxList;

        specialinvoke $r3.<org.apache.james.mime4j.dom.address.MailboxList: void <init>(java.util.List,boolean)>($r0, 1);

        return $r3;
    }

    public org.apache.james.mime4j.dom.address.Mailbox buildMailbox(org.apache.james.mime4j.field.address.ASTmailbox, org.apache.james.mime4j.codec.DecodeMonitor) throws org.apache.james.mime4j.field.address.ParseException
    {
        org.apache.james.mime4j.field.address.ASTangle_addr $r8;
        org.apache.james.mime4j.field.address.ASTname_addr $r6;
        org.apache.james.mime4j.field.address.Node $r2;
        org.apache.james.mime4j.field.address.ASTmailbox r1;
        org.apache.james.mime4j.field.address.ParseException $r3;
        org.apache.james.mime4j.field.address.Builder$ChildNodeIterator $r0;
        org.apache.james.mime4j.codec.DecodeMonitor r5;
        boolean $z0, $z1, $z2;
        org.apache.james.mime4j.field.address.Builder r4;
        org.apache.james.mime4j.dom.address.Mailbox $r7, $r9, $r11;
        org.apache.james.mime4j.field.address.ASTaddr_spec $r10;

        r4 := @this: org.apache.james.mime4j.field.address.Builder;

        r1 := @parameter0: org.apache.james.mime4j.field.address.ASTmailbox;

        r5 := @parameter1: org.apache.james.mime4j.codec.DecodeMonitor;

        $r0 = new org.apache.james.mime4j.field.address.Builder$ChildNodeIterator;

        specialinvoke $r0.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: void <init>(org.apache.james.mime4j.field.address.SimpleNode)>(r1);

        $r2 = virtualinvoke $r0.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.Node next()>();

        $z0 = $r2 instanceof org.apache.james.mime4j.field.address.ASTaddr_spec;

        if $z0 == 0 goto label1;

        $r10 = (org.apache.james.mime4j.field.address.ASTaddr_spec) $r2;

        $r11 = specialinvoke r4.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.dom.address.Mailbox buildAddrSpec(org.apache.james.mime4j.field.address.ASTaddr_spec)>($r10);

        return $r11;

     label1:
        $z1 = $r2 instanceof org.apache.james.mime4j.field.address.ASTangle_addr;

        if $z1 == 0 goto label2;

        $r8 = (org.apache.james.mime4j.field.address.ASTangle_addr) $r2;

        $r9 = specialinvoke r4.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.dom.address.Mailbox buildAngleAddr(org.apache.james.mime4j.field.address.ASTangle_addr)>($r8);

        return $r9;

     label2:
        $z2 = $r2 instanceof org.apache.james.mime4j.field.address.ASTname_addr;

        if $z2 == 0 goto label3;

        $r6 = (org.apache.james.mime4j.field.address.ASTname_addr) $r2;

        $r7 = specialinvoke r4.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.dom.address.Mailbox buildNameAddr(org.apache.james.mime4j.field.address.ASTname_addr,org.apache.james.mime4j.codec.DecodeMonitor)>($r6, r5);

        return $r7;

     label3:
        $r3 = new org.apache.james.mime4j.field.address.ParseException;

        specialinvoke $r3.<org.apache.james.mime4j.field.address.ParseException: void <init>()>();

        throw $r3;
    }

    private org.apache.james.mime4j.dom.address.Mailbox buildNameAddr(org.apache.james.mime4j.field.address.ASTname_addr, org.apache.james.mime4j.codec.DecodeMonitor) throws org.apache.james.mime4j.field.address.ParseException
    {
        org.apache.james.mime4j.field.address.ASTangle_addr $r11;
        org.apache.james.mime4j.dom.address.DomainList $r14;
        org.apache.james.mime4j.field.address.ASTname_addr r1;
        org.apache.james.mime4j.field.address.ParseException $r3, $r8, $r18;
        java.lang.String $r6, $r10, $r15, $r16, $r19;
        boolean $z0, $z1;
        org.apache.james.mime4j.field.address.ASTphrase $r5;
        org.apache.james.mime4j.field.address.Node $r2, $r7;
        java.lang.IllegalArgumentException $r17;
        org.apache.james.mime4j.field.address.Builder$ChildNodeIterator $r0;
        org.apache.james.mime4j.codec.DecodeMonitor r9;
        org.apache.james.mime4j.field.address.Builder r4;
        org.apache.james.mime4j.dom.address.Mailbox $r12, $r13;

        r4 := @this: org.apache.james.mime4j.field.address.Builder;

        r1 := @parameter0: org.apache.james.mime4j.field.address.ASTname_addr;

        r9 := @parameter1: org.apache.james.mime4j.codec.DecodeMonitor;

        $r0 = new org.apache.james.mime4j.field.address.Builder$ChildNodeIterator;

        specialinvoke $r0.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: void <init>(org.apache.james.mime4j.field.address.SimpleNode)>(r1);

        $r2 = virtualinvoke $r0.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.Node next()>();

        $z0 = $r2 instanceof org.apache.james.mime4j.field.address.ASTphrase;

        if $z0 == 0 goto label1;

        $r5 = (org.apache.james.mime4j.field.address.ASTphrase) $r2;

        $r6 = specialinvoke r4.<org.apache.james.mime4j.field.address.Builder: java.lang.String buildString(org.apache.james.mime4j.field.address.SimpleNode,boolean)>($r5, 0);

        goto label2;

     label1:
        $r3 = new org.apache.james.mime4j.field.address.ParseException;

        specialinvoke $r3.<org.apache.james.mime4j.field.address.ParseException: void <init>()>();

        throw $r3;

     label2:
        $r7 = virtualinvoke $r0.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.Node next()>();

        $z1 = $r7 instanceof org.apache.james.mime4j.field.address.ASTangle_addr;

        if $z1 == 0 goto label7;

     label3:
        $r10 = staticinvoke <org.apache.james.mime4j.codec.DecoderUtil: java.lang.String decodeEncodedWords(java.lang.String,org.apache.james.mime4j.codec.DecodeMonitor)>($r6, r9);

     label4:
        goto label6;

     label5:
        $r17 := @caughtexception;

        $r18 = new org.apache.james.mime4j.field.address.ParseException;

        $r19 = virtualinvoke $r17.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        specialinvoke $r18.<org.apache.james.mime4j.field.address.ParseException: void <init>(java.lang.String)>($r19);

        throw $r18;

     label6:
        $r11 = (org.apache.james.mime4j.field.address.ASTangle_addr) $r7;

        $r12 = specialinvoke r4.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.dom.address.Mailbox buildAngleAddr(org.apache.james.mime4j.field.address.ASTangle_addr)>($r11);

        $r13 = new org.apache.james.mime4j.dom.address.Mailbox;

        $r14 = virtualinvoke $r12.<org.apache.james.mime4j.dom.address.Mailbox: org.apache.james.mime4j.dom.address.DomainList getRoute()>();

        $r15 = virtualinvoke $r12.<org.apache.james.mime4j.dom.address.Mailbox: java.lang.String getLocalPart()>();

        $r16 = virtualinvoke $r12.<org.apache.james.mime4j.dom.address.Mailbox: java.lang.String getDomain()>();

        specialinvoke $r13.<org.apache.james.mime4j.dom.address.Mailbox: void <init>(java.lang.String,org.apache.james.mime4j.dom.address.DomainList,java.lang.String,java.lang.String)>($r10, $r14, $r15, $r16);

        return $r13;

     label7:
        $r8 = new org.apache.james.mime4j.field.address.ParseException;

        specialinvoke $r8.<org.apache.james.mime4j.field.address.ParseException: void <init>()>();

        throw $r8;

        catch java.lang.IllegalArgumentException from label3 to label4 with label5;
    }

    private org.apache.james.mime4j.dom.address.Mailbox buildAngleAddr(org.apache.james.mime4j.field.address.ASTangle_addr) throws org.apache.james.mime4j.field.address.ParseException
    {
        org.apache.james.mime4j.field.address.ASTangle_addr r1;
        org.apache.james.mime4j.dom.address.DomainList r9;
        org.apache.james.mime4j.field.address.ASTroute $r8;
        org.apache.james.mime4j.field.address.Node $r2, r10;
        org.apache.james.mime4j.field.address.ParseException $r3, $r4;
        org.apache.james.mime4j.field.address.Builder$ChildNodeIterator $r0;
        boolean $z0, $z1, $z2;
        org.apache.james.mime4j.field.address.Builder r5;
        org.apache.james.mime4j.field.address.ASTaddr_spec $r6;
        org.apache.james.mime4j.dom.address.Mailbox $r7;

        r5 := @this: org.apache.james.mime4j.field.address.Builder;

        r1 := @parameter0: org.apache.james.mime4j.field.address.ASTangle_addr;

        $r0 = new org.apache.james.mime4j.field.address.Builder$ChildNodeIterator;

        specialinvoke $r0.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: void <init>(org.apache.james.mime4j.field.address.SimpleNode)>(r1);

        r9 = null;

        $r2 = virtualinvoke $r0.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.Node next()>();

        r10 = $r2;

        $z0 = $r2 instanceof org.apache.james.mime4j.field.address.ASTroute;

        if $z0 == 0 goto label1;

        $r8 = (org.apache.james.mime4j.field.address.ASTroute) $r2;

        r9 = specialinvoke r5.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.dom.address.DomainList buildRoute(org.apache.james.mime4j.field.address.ASTroute)>($r8);

        r10 = virtualinvoke $r0.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.Node next()>();

        goto label3;

     label1:
        $z1 = $r2 instanceof org.apache.james.mime4j.field.address.ASTaddr_spec;

        if $z1 == 0 goto label2;

        goto label3;

     label2:
        $r3 = new org.apache.james.mime4j.field.address.ParseException;

        specialinvoke $r3.<org.apache.james.mime4j.field.address.ParseException: void <init>()>();

        throw $r3;

     label3:
        $z2 = r10 instanceof org.apache.james.mime4j.field.address.ASTaddr_spec;

        if $z2 == 0 goto label4;

        $r6 = (org.apache.james.mime4j.field.address.ASTaddr_spec) r10;

        $r7 = specialinvoke r5.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.dom.address.Mailbox buildAddrSpec(org.apache.james.mime4j.dom.address.DomainList,org.apache.james.mime4j.field.address.ASTaddr_spec)>(r9, $r6);

        return $r7;

     label4:
        $r4 = new org.apache.james.mime4j.field.address.ParseException;

        specialinvoke $r4.<org.apache.james.mime4j.field.address.ParseException: void <init>()>();

        throw $r4;
    }

    private org.apache.james.mime4j.dom.address.DomainList buildRoute(org.apache.james.mime4j.field.address.ASTroute) throws org.apache.james.mime4j.field.address.ParseException
    {
        org.apache.james.mime4j.dom.address.DomainList $r3;
        org.apache.james.mime4j.field.address.ASTroute r1;
        org.apache.james.mime4j.field.address.ASTdomain $r7;
        org.apache.james.mime4j.field.address.Node $r4;
        org.apache.james.mime4j.field.address.ParseException $r5;
        java.util.ArrayList $r0;
        org.apache.james.mime4j.field.address.Builder$ChildNodeIterator $r2;
        int $i0;
        java.lang.String $r8;
        boolean $z0, $z1;
        org.apache.james.mime4j.field.address.Builder r6;

        r6 := @this: org.apache.james.mime4j.field.address.Builder;

        r1 := @parameter0: org.apache.james.mime4j.field.address.ASTroute;

        $r0 = new java.util.ArrayList;

        $i0 = virtualinvoke r1.<org.apache.james.mime4j.field.address.ASTroute: int jjtGetNumChildren()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        $r2 = new org.apache.james.mime4j.field.address.Builder$ChildNodeIterator;

        specialinvoke $r2.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: void <init>(org.apache.james.mime4j.field.address.SimpleNode)>(r1);

     label1:
        $z0 = virtualinvoke $r2.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = virtualinvoke $r2.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.Node next()>();

        $z1 = $r4 instanceof org.apache.james.mime4j.field.address.ASTdomain;

        if $z1 == 0 goto label2;

        $r7 = (org.apache.james.mime4j.field.address.ASTdomain) $r4;

        $r8 = specialinvoke r6.<org.apache.james.mime4j.field.address.Builder: java.lang.String buildString(org.apache.james.mime4j.field.address.SimpleNode,boolean)>($r7, 1);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label3;

     label2:
        $r5 = new org.apache.james.mime4j.field.address.ParseException;

        specialinvoke $r5.<org.apache.james.mime4j.field.address.ParseException: void <init>()>();

        throw $r5;

     label3:
        goto label1;

     label4:
        $r3 = new org.apache.james.mime4j.dom.address.DomainList;

        specialinvoke $r3.<org.apache.james.mime4j.dom.address.DomainList: void <init>(java.util.List,boolean)>($r0, 1);

        return $r3;
    }

    private org.apache.james.mime4j.dom.address.Mailbox buildAddrSpec(org.apache.james.mime4j.field.address.ASTaddr_spec)
    {
        org.apache.james.mime4j.field.address.Builder r0;
        org.apache.james.mime4j.field.address.ASTaddr_spec r1;
        org.apache.james.mime4j.dom.address.Mailbox $r2;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        r1 := @parameter0: org.apache.james.mime4j.field.address.ASTaddr_spec;

        $r2 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.dom.address.Mailbox buildAddrSpec(org.apache.james.mime4j.dom.address.DomainList,org.apache.james.mime4j.field.address.ASTaddr_spec)>(null, r1);

        return $r2;
    }

    private org.apache.james.mime4j.dom.address.Mailbox buildAddrSpec(org.apache.james.mime4j.dom.address.DomainList, org.apache.james.mime4j.field.address.ASTaddr_spec)
    {
        org.apache.james.mime4j.dom.address.DomainList r10;
        org.apache.james.mime4j.field.address.ASTdomain $r7;
        org.apache.james.mime4j.field.address.Node $r3, $r6;
        org.apache.james.mime4j.field.address.ASTlocal_part $r4;
        org.apache.james.mime4j.field.address.Builder$ChildNodeIterator $r0;
        java.lang.String $r5, $r8;
        org.apache.james.mime4j.field.address.ASTaddr_spec r1;
        org.apache.james.mime4j.field.address.Builder r2;
        org.apache.james.mime4j.dom.address.Mailbox $r9;

        r2 := @this: org.apache.james.mime4j.field.address.Builder;

        r10 := @parameter0: org.apache.james.mime4j.dom.address.DomainList;

        r1 := @parameter1: org.apache.james.mime4j.field.address.ASTaddr_spec;

        $r0 = new org.apache.james.mime4j.field.address.Builder$ChildNodeIterator;

        specialinvoke $r0.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: void <init>(org.apache.james.mime4j.field.address.SimpleNode)>(r1);

        $r3 = virtualinvoke $r0.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.Node next()>();

        $r4 = (org.apache.james.mime4j.field.address.ASTlocal_part) $r3;

        $r5 = specialinvoke r2.<org.apache.james.mime4j.field.address.Builder: java.lang.String buildString(org.apache.james.mime4j.field.address.SimpleNode,boolean)>($r4, 1);

        $r6 = virtualinvoke $r0.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.Node next()>();

        $r7 = (org.apache.james.mime4j.field.address.ASTdomain) $r6;

        $r8 = specialinvoke r2.<org.apache.james.mime4j.field.address.Builder: java.lang.String buildString(org.apache.james.mime4j.field.address.SimpleNode,boolean)>($r7, 1);

        $r9 = new org.apache.james.mime4j.dom.address.Mailbox;

        specialinvoke $r9.<org.apache.james.mime4j.dom.address.Mailbox: void <init>(org.apache.james.mime4j.dom.address.DomainList,java.lang.String,java.lang.String)>(r10, $r5, $r8);

        return $r9;
    }

    private java.lang.String buildString(org.apache.james.mime4j.field.address.SimpleNode, boolean)
    {
        org.apache.james.mime4j.field.address.SimpleNode r0;
        org.apache.james.mime4j.field.address.Token r1, $r7, r8;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r4, $r5;
        boolean z0;
        org.apache.james.mime4j.field.address.Builder r6;

        r6 := @this: org.apache.james.mime4j.field.address.Builder;

        r0 := @parameter0: org.apache.james.mime4j.field.address.SimpleNode;

        z0 := @parameter1: boolean;

        r8 = r0.<org.apache.james.mime4j.field.address.SimpleNode: org.apache.james.mime4j.field.address.Token firstToken>;

        r1 = r0.<org.apache.james.mime4j.field.address.SimpleNode: org.apache.james.mime4j.field.address.Token lastToken>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

     label1:
        if r8 == r1 goto label2;

        $r5 = r8.<org.apache.james.mime4j.field.address.Token: java.lang.String image>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        r8 = r8.<org.apache.james.mime4j.field.address.Token: org.apache.james.mime4j.field.address.Token next>;

        if z0 != 0 goto label1;

        $r7 = r8.<org.apache.james.mime4j.field.address.Token: org.apache.james.mime4j.field.address.Token specialToken>;

        specialinvoke r6.<org.apache.james.mime4j.field.address.Builder: void addSpecials(java.lang.StringBuilder,org.apache.james.mime4j.field.address.Token)>($r2, $r7);

        goto label1;

     label2:
        $r3 = r1.<org.apache.james.mime4j.field.address.Token: java.lang.String image>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    private void addSpecials(java.lang.StringBuilder, org.apache.james.mime4j.field.address.Token)
    {
        org.apache.james.mime4j.field.address.Token r0, $r3;
        java.lang.StringBuilder r2;
        java.lang.String $r4;
        org.apache.james.mime4j.field.address.Builder r1;

        r1 := @this: org.apache.james.mime4j.field.address.Builder;

        r2 := @parameter0: java.lang.StringBuilder;

        r0 := @parameter1: org.apache.james.mime4j.field.address.Token;

        if r0 == null goto label1;

        $r3 = r0.<org.apache.james.mime4j.field.address.Token: org.apache.james.mime4j.field.address.Token specialToken>;

        specialinvoke r1.<org.apache.james.mime4j.field.address.Builder: void addSpecials(java.lang.StringBuilder,org.apache.james.mime4j.field.address.Token)>(r2, $r3);

        $r4 = r0.<org.apache.james.mime4j.field.address.Token: java.lang.String image>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

     label1:
        return;
    }

    static void <clinit>()
    {
        org.apache.james.mime4j.field.address.Builder $r0;

        $r0 = new org.apache.james.mime4j.field.address.Builder;

        specialinvoke $r0.<org.apache.james.mime4j.field.address.Builder: void <init>()>();

        <org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.Builder singleton> = $r0;

        return;
    }
}
