final class org.apache.lucene.analysis.synonym.SlowSynonymFilter extends org.apache.lucene.analysis.TokenFilter
{
    private final org.apache.lucene.analysis.synonym.SlowSynonymMap map;
    private java.util.Iterator replacement;
    private java.util.LinkedList buffer;
    private java.util.LinkedList matched;
    private boolean exhausted;

    public void <init>(org.apache.lucene.analysis.TokenStream, org.apache.lucene.analysis.synonym.SlowSynonymMap)
    {
        org.apache.lucene.analysis.synonym.SlowSynonymFilter r0;
        org.apache.lucene.analysis.synonym.SlowSynonymMap r2;
        org.apache.lucene.analysis.TokenStream r1;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.apache.lucene.analysis.synonym.SlowSynonymFilter;

        r1 := @parameter0: org.apache.lucene.analysis.TokenStream;

        r2 := @parameter1: org.apache.lucene.analysis.synonym.SlowSynonymMap;

        specialinvoke r0.<org.apache.lucene.analysis.TokenFilter: void <init>(org.apache.lucene.analysis.TokenStream)>(r1);

        if r2 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("map is required");

        throw $r3;

     label1:
        r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: org.apache.lucene.analysis.synonym.SlowSynonymMap map> = r2;

        virtualinvoke r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/CharTermAttribute;");

        virtualinvoke r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/PositionIncrementAttribute;");

        virtualinvoke r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/OffsetAttribute;");

        virtualinvoke r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/TypeAttribute;");

        return;
    }

    public boolean incrementToken() throws java.io.IOException
    {
        org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute r31, $r40, r56, r58, r59, r61;
        org.apache.lucene.util.Attribute $r3, $r16, $r18, $r22, $r26, $r28, $r30, $r32, $r35, $r39;
        org.apache.lucene.analysis.util.CharArrayMap $r6, $r42;
        java.util.ArrayList $r9;
        org.apache.lucene.analysis.Token[] $r10, $r23, $r55;
        char[] $r34, $r43;
        org.apache.lucene.util.AttributeSource $r2, r15, $r25, $r48, r49, $r52, $r53, r54, $r57, $r60;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute r29, r33;
        org.apache.lucene.analysis.synonym.SlowSynonymFilter r0;
        org.apache.lucene.analysis.Token r24;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18, i19, i20, $i21;
        java.util.LinkedList $r7, $r11, $r12, $r13, $r19, $r20, $r36, $r37;
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute r4, r27;
        java.util.Iterator $r1, $r17, $r45, $r46;
        org.apache.lucene.analysis.synonym.SlowSynonymMap $r5, $r8, $r41, $r50, r51;
        java.lang.Object $r14, $r21, $r38, $r44, $r47;

        r0 := @this: org.apache.lucene.analysis.synonym.SlowSynonymFilter;

     label01:
        $r1 = r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: java.util.Iterator replacement>;

        if $r1 == null goto label02;

        $r45 = r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: java.util.Iterator replacement>;

        $z4 = interfaceinvoke $r45.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label02;

        $r46 = r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: java.util.Iterator replacement>;

        $r47 = interfaceinvoke $r46.<java.util.Iterator: java.lang.Object next()>();

        $r48 = (org.apache.lucene.util.AttributeSource) $r47;

        specialinvoke r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: void copy(org.apache.lucene.util.AttributeSource,org.apache.lucene.util.AttributeSource)>(r0, $r48);

        return 1;

     label02:
        $r2 = specialinvoke r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: org.apache.lucene.util.AttributeSource nextTok()>();

        r49 = $r2;

        if $r2 != null goto label03;

        return 0;

     label03:
        $r3 = virtualinvoke $r2.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/CharTermAttribute;");

        r4 = (org.apache.lucene.analysis.tokenattributes.CharTermAttribute) $r3;

        $r5 = r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: org.apache.lucene.analysis.synonym.SlowSynonymMap map>;

        $r6 = $r5.<org.apache.lucene.analysis.synonym.SlowSynonymMap: org.apache.lucene.analysis.util.CharArrayMap submap>;

        if $r6 == null goto label04;

        $r41 = r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: org.apache.lucene.analysis.synonym.SlowSynonymMap map>;

        $r42 = $r41.<org.apache.lucene.analysis.synonym.SlowSynonymMap: org.apache.lucene.analysis.util.CharArrayMap submap>;

        $r43 = interfaceinvoke r4.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: char[] buffer()>();

        $i16 = interfaceinvoke r4.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: int length()>();

        $r44 = virtualinvoke $r42.<org.apache.lucene.analysis.util.CharArrayMap: java.lang.Object get(char[],int,int)>($r43, 0, $i16);

        $r50 = (org.apache.lucene.analysis.synonym.SlowSynonymMap) $r44;

        goto label05;

     label04:
        $r50 = null;

     label05:
        r51 = $r50;

        if $r50 != null goto label06;

        specialinvoke r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: void copy(org.apache.lucene.util.AttributeSource,org.apache.lucene.util.AttributeSource)>(r0, $r2);

        return 1;

     label06:
        if $r2 != r0 goto label07;

        r49 = virtualinvoke r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: org.apache.lucene.util.AttributeSource cloneAttributes()>();

     label07:
        $r7 = new java.util.LinkedList;

        specialinvoke $r7.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: java.util.LinkedList matched> = $r7;

        $r8 = specialinvoke r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: org.apache.lucene.analysis.synonym.SlowSynonymMap match(org.apache.lucene.analysis.synonym.SlowSynonymMap)>(r51);

        if $r8 != null goto label08;

        specialinvoke r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: void copy(org.apache.lucene.util.AttributeSource,org.apache.lucene.util.AttributeSource)>(r0, r49);

        return 1;

     label08:
        $r9 = new java.util.ArrayList;

        $r10 = $r8.<org.apache.lucene.analysis.synonym.SlowSynonymMap: org.apache.lucene.analysis.Token[] synonyms>;

        $i0 = lengthof $r10;

        $r11 = r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: java.util.LinkedList matched>;

        $i1 = virtualinvoke $r11.<java.util.LinkedList: int size()>();

        $i2 = $i0 + $i1;

        $i3 = $i2 + 1;

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i3);

        $r12 = r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: java.util.LinkedList matched>;

        $z0 = virtualinvoke $r12.<java.util.LinkedList: boolean isEmpty()>();

        if $z0 == 0 goto label09;

        $r52 = r49;

        goto label10;

     label09:
        $r13 = r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: java.util.LinkedList matched>;

        $r14 = virtualinvoke $r13.<java.util.LinkedList: java.lang.Object getLast()>();

        $r52 = (org.apache.lucene.util.AttributeSource) $r14;

     label10:
        r15 = $r52;

        $z1 = virtualinvoke $r8.<org.apache.lucene.analysis.synonym.SlowSynonymMap: boolean includeOrig()>();

        if $z1 == 0 goto label11;

        $r53 = r49;

        goto label12;

     label11:
        $r53 = null;

     label12:
        r54 = $r53;

        $r16 = virtualinvoke r49.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/PositionIncrementAttribute;");

        $r40 = (org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute) $r16;

        i17 = interfaceinvoke $r40.<org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute: int getPositionIncrement()>();

        i18 = 0;

        i19 = 0;

        i20 = 0;

     label13:
        $r55 = $r8.<org.apache.lucene.analysis.synonym.SlowSynonymMap: org.apache.lucene.analysis.Token[] synonyms>;

        $i21 = lengthof $r55;

        if i20 >= $i21 goto label19;

        $r23 = $r8.<org.apache.lucene.analysis.synonym.SlowSynonymMap: org.apache.lucene.analysis.Token[] synonyms>;

        r24 = $r23[i20];

        $r25 = virtualinvoke r49.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.AttributeSource cloneAttributes()>();

        $r26 = virtualinvoke $r25.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/CharTermAttribute;");

        r27 = (org.apache.lucene.analysis.tokenattributes.CharTermAttribute) $r26;

        $r28 = virtualinvoke $r25.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/OffsetAttribute;");

        r29 = (org.apache.lucene.analysis.tokenattributes.OffsetAttribute) $r28;

        $r30 = virtualinvoke $r25.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/PositionIncrementAttribute;");

        r31 = (org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute) $r30;

        $r32 = virtualinvoke r15.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/OffsetAttribute;");

        r33 = (org.apache.lucene.analysis.tokenattributes.OffsetAttribute) $r32;

        $i7 = interfaceinvoke r29.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: int startOffset()>();

        $i8 = interfaceinvoke r33.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: int endOffset()>();

        interfaceinvoke r29.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: void setOffset(int,int)>($i7, $i8);

        $r34 = virtualinvoke r24.<org.apache.lucene.analysis.Token: char[] buffer()>();

        $i9 = virtualinvoke r24.<org.apache.lucene.analysis.Token: int length()>();

        interfaceinvoke r27.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: void copyBuffer(char[],int,int)>($r34, 0, $i9);

        $i10 = virtualinvoke r24.<org.apache.lucene.analysis.Token: int getPositionIncrement()>();

        i18 = i18 + $i10;

        if i20 != 0 goto label14;

        i18 = i17;

     label14:
        if r54 == null goto label18;

        if i17 > i18 goto label18;

        $r35 = virtualinvoke r54.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/PositionIncrementAttribute;");

        r56 = (org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute) $r35;

        $i13 = i17 - i19;

        interfaceinvoke r56.<org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute: void setPositionIncrement(int)>($i13);

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r54);

        $i14 = interfaceinvoke r56.<org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute: int getPositionIncrement()>();

        i19 = i19 + $i14;

        $r36 = r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: java.util.LinkedList matched>;

        $z3 = virtualinvoke $r36.<java.util.LinkedList: boolean isEmpty()>();

        if $z3 == 0 goto label15;

        $r57 = null;

        goto label16;

     label15:
        $r37 = r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: java.util.LinkedList matched>;

        $r38 = virtualinvoke $r37.<java.util.LinkedList: java.lang.Object removeFirst()>();

        $r57 = (org.apache.lucene.util.AttributeSource) $r38;

     label16:
        r54 = $r57;

        if $r57 == null goto label17;

        $r39 = virtualinvoke $r57.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/PositionIncrementAttribute;");

        r58 = (org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute) $r39;

        $i15 = interfaceinvoke r58.<org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute: int getPositionIncrement()>();

        i17 = i17 + $i15;

     label17:
        goto label14;

     label18:
        $i11 = i18 - i19;

        interfaceinvoke r31.<org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute: void setPositionIncrement(int)>($i11);

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r25);

        $i12 = interfaceinvoke r31.<org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute: int getPositionIncrement()>();

        i19 = i19 + $i12;

        i20 = i20 + 1;

        goto label13;

     label19:
        if r54 == null goto label23;

        $r18 = virtualinvoke r54.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/PositionIncrementAttribute;");

        r59 = (org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute) $r18;

        $i4 = i17 - i19;

        interfaceinvoke r59.<org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute: void setPositionIncrement(int)>($i4);

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r54);

        $i5 = interfaceinvoke r59.<org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute: int getPositionIncrement()>();

        i19 = i19 + $i5;

        $r19 = r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: java.util.LinkedList matched>;

        $z2 = virtualinvoke $r19.<java.util.LinkedList: boolean isEmpty()>();

        if $z2 == 0 goto label20;

        $r60 = null;

        goto label21;

     label20:
        $r20 = r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: java.util.LinkedList matched>;

        $r21 = virtualinvoke $r20.<java.util.LinkedList: java.lang.Object removeFirst()>();

        $r60 = (org.apache.lucene.util.AttributeSource) $r21;

     label21:
        r54 = $r60;

        if $r60 == null goto label22;

        $r22 = virtualinvoke $r60.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/PositionIncrementAttribute;");

        r61 = (org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute) $r22;

        $i6 = interfaceinvoke r61.<org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute: int getPositionIncrement()>();

        i17 = i17 + $i6;

     label22:
        goto label19;

     label23:
        $r17 = virtualinvoke $r9.<java.util.ArrayList: java.util.Iterator iterator()>();

        r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: java.util.Iterator replacement> = $r17;

        goto label01;
    }

    private org.apache.lucene.util.AttributeSource nextTok() throws java.io.IOException
    {
        org.apache.lucene.analysis.synonym.SlowSynonymFilter r0;
        org.apache.lucene.analysis.TokenStream $r2;
        org.apache.lucene.util.AttributeSource $r6;
        java.lang.Object $r5;
        java.util.LinkedList $r1, $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.lucene.analysis.synonym.SlowSynonymFilter;

        $r1 = r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: java.util.LinkedList buffer>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: java.util.LinkedList buffer>;

        $z2 = virtualinvoke $r3.<java.util.LinkedList: boolean isEmpty()>();

        if $z2 != 0 goto label1;

        $r4 = r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: java.util.LinkedList buffer>;

        $r5 = virtualinvoke $r4.<java.util.LinkedList: java.lang.Object removeFirst()>();

        $r6 = (org.apache.lucene.util.AttributeSource) $r5;

        return $r6;

     label1:
        $z0 = r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: boolean exhausted>;

        if $z0 != 0 goto label2;

        $r2 = r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: org.apache.lucene.analysis.TokenStream input>;

        $z1 = virtualinvoke $r2.<org.apache.lucene.analysis.TokenStream: boolean incrementToken()>();

        if $z1 == 0 goto label2;

        return r0;

     label2:
        r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: boolean exhausted> = 1;

        return null;
    }

    private void pushTok(org.apache.lucene.util.AttributeSource)
    {
        org.apache.lucene.analysis.synonym.SlowSynonymFilter r0;
        org.apache.lucene.util.AttributeSource r2;
        java.util.LinkedList $r1, $r3, $r4;

        r0 := @this: org.apache.lucene.analysis.synonym.SlowSynonymFilter;

        r2 := @parameter0: org.apache.lucene.util.AttributeSource;

        $r1 = r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: java.util.LinkedList buffer>;

        if $r1 != null goto label1;

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: java.util.LinkedList buffer> = $r4;

     label1:
        $r3 = r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: java.util.LinkedList buffer>;

        virtualinvoke $r3.<java.util.LinkedList: void addFirst(java.lang.Object)>(r2);

        return;
    }

    private org.apache.lucene.analysis.synonym.SlowSynonymMap match(org.apache.lucene.analysis.synonym.SlowSynonymMap) throws java.io.IOException
    {
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute $r10;
        org.apache.lucene.analysis.synonym.SlowSynonymFilter r3;
        org.apache.lucene.analysis.Token[] $r2;
        org.apache.lucene.analysis.synonym.SlowSynonymMap r0, $r11, r12;
        int $i0;
        org.apache.lucene.util.AttributeSource $r4, r13;
        char[] $r7;
        java.lang.Object $r8;
        org.apache.lucene.util.Attribute $r5;
        java.util.LinkedList $r9;
        org.apache.lucene.analysis.util.CharArrayMap $r1, $r6;

        r3 := @this: org.apache.lucene.analysis.synonym.SlowSynonymFilter;

        r0 := @parameter0: org.apache.lucene.analysis.synonym.SlowSynonymMap;

        r12 = null;

        $r1 = r0.<org.apache.lucene.analysis.synonym.SlowSynonymMap: org.apache.lucene.analysis.util.CharArrayMap submap>;

        if $r1 == null goto label4;

        $r4 = specialinvoke r3.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: org.apache.lucene.util.AttributeSource nextTok()>();

        r13 = $r4;

        if $r4 == null goto label4;

        if $r4 != r3 goto label1;

        r13 = virtualinvoke r3.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: org.apache.lucene.util.AttributeSource cloneAttributes()>();

     label1:
        $r5 = virtualinvoke r13.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.Attribute getAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/CharTermAttribute;");

        $r10 = (org.apache.lucene.analysis.tokenattributes.CharTermAttribute) $r5;

        $r6 = r0.<org.apache.lucene.analysis.synonym.SlowSynonymMap: org.apache.lucene.analysis.util.CharArrayMap submap>;

        $r7 = interfaceinvoke $r10.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: char[] buffer()>();

        $i0 = interfaceinvoke $r10.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: int length()>();

        $r8 = virtualinvoke $r6.<org.apache.lucene.analysis.util.CharArrayMap: java.lang.Object get(char[],int,int)>($r7, 0, $i0);

        $r11 = (org.apache.lucene.analysis.synonym.SlowSynonymMap) $r8;

        if $r11 == null goto label2;

        r12 = specialinvoke r3.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: org.apache.lucene.analysis.synonym.SlowSynonymMap match(org.apache.lucene.analysis.synonym.SlowSynonymMap)>($r11);

     label2:
        if r12 == null goto label3;

        $r9 = r3.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: java.util.LinkedList matched>;

        virtualinvoke $r9.<java.util.LinkedList: void addFirst(java.lang.Object)>(r13);

        goto label4;

     label3:
        specialinvoke r3.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: void pushTok(org.apache.lucene.util.AttributeSource)>(r13);

     label4:
        if r12 != null goto label5;

        $r2 = r0.<org.apache.lucene.analysis.synonym.SlowSynonymMap: org.apache.lucene.analysis.Token[] synonyms>;

        if $r2 == null goto label5;

        r12 = r0;

     label5:
        return r12;
    }

    private void copy(org.apache.lucene.util.AttributeSource, org.apache.lucene.util.AttributeSource)
    {
        org.apache.lucene.util.AttributeSource r0, r1;
        org.apache.lucene.analysis.synonym.SlowSynonymFilter r2;

        r2 := @this: org.apache.lucene.analysis.synonym.SlowSynonymFilter;

        r0 := @parameter0: org.apache.lucene.util.AttributeSource;

        r1 := @parameter1: org.apache.lucene.util.AttributeSource;

        if r0 == r1 goto label1;

        virtualinvoke r1.<org.apache.lucene.util.AttributeSource: void copyTo(org.apache.lucene.util.AttributeSource)>(r0);

     label1:
        return;
    }

    public void reset() throws java.io.IOException
    {
        org.apache.lucene.analysis.synonym.SlowSynonymFilter r0;
        org.apache.lucene.analysis.TokenStream $r1;

        r0 := @this: org.apache.lucene.analysis.synonym.SlowSynonymFilter;

        $r1 = r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: org.apache.lucene.analysis.TokenStream input>;

        virtualinvoke $r1.<org.apache.lucene.analysis.TokenStream: void reset()>();

        r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: java.util.Iterator replacement> = null;

        r0.<org.apache.lucene.analysis.synonym.SlowSynonymFilter: boolean exhausted> = 0;

        return;
    }
}
