class com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry extends java.lang.Object
{
    final java.lang.Object key;
    final int hash;
    final com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry next;
    volatile java.lang.Object value;

    void <init>(java.lang.Object, int, java.lang.Object, com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry)
    {
        com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry r0, r3;
        int i0;
        java.lang.Object r1, r2;

        r0 := @this: com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry: java.lang.Object key> = r1;

        r0.<com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry: int hash> = i0;

        r0.<com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry: java.lang.Object value> = r2;

        r0.<com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry: com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry next> = r3;

        return;
    }
}
