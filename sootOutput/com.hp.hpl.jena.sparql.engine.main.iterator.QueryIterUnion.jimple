public class com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterUnion extends com.hp.hpl.jena.sparql.engine.iterator.QueryIterRepeatApply
{
    protected java.util.List subOps;

    public void <init>(com.hp.hpl.jena.sparql.engine.QueryIterator, java.util.List, com.hp.hpl.jena.sparql.engine.ExecutionContext)
    {
        java.util.List r3;
        com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterUnion r0;
        com.hp.hpl.jena.sparql.engine.ExecutionContext r2;
        com.hp.hpl.jena.sparql.engine.QueryIterator r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterUnion;

        r1 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryIterator;

        r3 := @parameter1: java.util.List;

        r2 := @parameter2: com.hp.hpl.jena.sparql.engine.ExecutionContext;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterRepeatApply: void <init>(com.hp.hpl.jena.sparql.engine.QueryIterator,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r1, r2);

        r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterUnion: java.util.List subOps> = r3;

        return;
    }

    protected com.hp.hpl.jena.sparql.engine.QueryIterator nextStage(com.hp.hpl.jena.sparql.engine.binding.Binding)
    {
        java.util.Iterator $r4;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIterSingleton $r9;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIterConcat $r0;
        java.util.List $r3;
        com.hp.hpl.jena.sparql.engine.binding.Binding r6;
        com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterUnion r1;
        java.lang.Object $r5;
        com.hp.hpl.jena.sparql.engine.ExecutionContext $r2, $r8, $r10;
        com.hp.hpl.jena.sparql.algebra.Op $r7, r12;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r11;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterUnion;

        r6 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        $r0 = new com.hp.hpl.jena.sparql.engine.iterator.QueryIterConcat;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterUnion: com.hp.hpl.jena.sparql.engine.ExecutionContext getExecContext()>();

        specialinvoke $r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterConcat: void <init>(com.hp.hpl.jena.sparql.engine.ExecutionContext)>($r2);

        $r3 = r1.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterUnion: java.util.List subOps>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r12 = (com.hp.hpl.jena.sparql.algebra.Op) $r5;

        $r7 = staticinvoke <com.hp.hpl.jena.sparql.engine.main.QC: com.hp.hpl.jena.sparql.algebra.Op substitute(com.hp.hpl.jena.sparql.algebra.Op,com.hp.hpl.jena.sparql.engine.binding.Binding)>(r12, r6);

        $r8 = virtualinvoke r1.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterUnion: com.hp.hpl.jena.sparql.engine.ExecutionContext getExecContext()>();

        $r9 = staticinvoke <com.hp.hpl.jena.sparql.engine.iterator.QueryIterSingleton: com.hp.hpl.jena.sparql.engine.iterator.QueryIterSingleton create(com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r6, $r8);

        $r10 = virtualinvoke r1.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterUnion: com.hp.hpl.jena.sparql.engine.ExecutionContext getExecContext()>();

        $r11 = staticinvoke <com.hp.hpl.jena.sparql.engine.main.QC: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.Op,com.hp.hpl.jena.sparql.engine.QueryIterator,com.hp.hpl.jena.sparql.engine.ExecutionContext)>($r7, $r9, $r10);

        virtualinvoke $r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterConcat: void add(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r11);

        goto label1;

     label2:
        return $r0;
    }

    public void output(org.apache.jena.atlas.io.IndentedWriter, com.hp.hpl.jena.sparql.serializer.SerializationContext)
    {
        java.util.Iterator $r4;
        com.hp.hpl.jena.sparql.serializer.SerializationContext r7;
        org.apache.jena.atlas.io.IndentedWriter r0;
        java.util.List $r3;
        com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterUnion r1;
        java.lang.Object $r5;
        java.lang.String $r2;
        com.hp.hpl.jena.sparql.algebra.Op r6;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterUnion;

        r0 := @parameter0: org.apache.jena.atlas.io.IndentedWriter;

        r7 := @parameter1: com.hp.hpl.jena.sparql.serializer.SerializationContext;

        $r2 = staticinvoke <com.hp.hpl.jena.sparql.util.Utils: java.lang.String className(java.lang.Object)>(r1);

        virtualinvoke r0.<org.apache.jena.atlas.io.IndentedWriter: void println(java.lang.String)>($r2);

        virtualinvoke r0.<org.apache.jena.atlas.io.IndentedWriter: void incIndent()>();

        $r3 = r1.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterUnion: java.util.List subOps>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.hp.hpl.jena.sparql.algebra.Op) $r5;

        interfaceinvoke r6.<com.hp.hpl.jena.sparql.algebra.Op: void output(org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.sparql.serializer.SerializationContext)>(r0, r7);

        goto label1;

     label2:
        virtualinvoke r0.<org.apache.jena.atlas.io.IndentedWriter: void decIndent()>();

        virtualinvoke r0.<org.apache.jena.atlas.io.IndentedWriter: void ensureStartOfLine()>();

        return;
    }
}
