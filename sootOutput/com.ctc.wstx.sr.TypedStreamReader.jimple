public class com.ctc.wstx.sr.TypedStreamReader extends com.ctc.wstx.sr.BasicStreamReader
{
    protected static final int MASK_TYPED_ACCESS_ARRAY;
    protected static final int MASK_TYPED_ACCESS_BINARY;
    static final int MIN_BINARY_CHUNK;
    protected org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory;
    protected org.codehaus.stax2.ri.typed.CharArrayBase64Decoder _base64Decoder;

    protected void <init>(com.ctc.wstx.io.InputBootstrapper, com.ctc.wstx.io.BranchingReaderSource, com.ctc.wstx.sr.ReaderCreator, com.ctc.wstx.api.ReaderConfig, com.ctc.wstx.sr.InputElementStack, boolean) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        com.ctc.wstx.io.BranchingReaderSource r2;
        com.ctc.wstx.sr.InputElementStack r5;
        com.ctc.wstx.sr.ReaderCreator r3;
        com.ctc.wstx.io.InputBootstrapper r1;
        com.ctc.wstx.api.ReaderConfig r4;
        boolean z0;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        r1 := @parameter0: com.ctc.wstx.io.InputBootstrapper;

        r2 := @parameter1: com.ctc.wstx.io.BranchingReaderSource;

        r3 := @parameter2: com.ctc.wstx.sr.ReaderCreator;

        r4 := @parameter3: com.ctc.wstx.api.ReaderConfig;

        r5 := @parameter4: com.ctc.wstx.sr.InputElementStack;

        z0 := @parameter5: boolean;

        specialinvoke r0.<com.ctc.wstx.sr.BasicStreamReader: void <init>(com.ctc.wstx.io.InputBootstrapper,com.ctc.wstx.io.BranchingReaderSource,com.ctc.wstx.sr.ReaderCreator,com.ctc.wstx.api.ReaderConfig,com.ctc.wstx.sr.InputElementStack,boolean)>(r1, r2, r3, r4, r5, z0);

        r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.ri.typed.CharArrayBase64Decoder _base64Decoder> = null;

        return;
    }

    public static com.ctc.wstx.sr.TypedStreamReader createStreamReader(com.ctc.wstx.io.BranchingReaderSource, com.ctc.wstx.sr.ReaderCreator, com.ctc.wstx.api.ReaderConfig, com.ctc.wstx.io.InputBootstrapper, boolean) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.TypedStreamReader $r0;
        com.ctc.wstx.io.BranchingReaderSource r2;
        com.ctc.wstx.sr.InputElementStack $r5;
        com.ctc.wstx.sr.ReaderCreator r3;
        com.ctc.wstx.io.InputBootstrapper r1;
        com.ctc.wstx.api.ReaderConfig r4;
        boolean z0;

        r2 := @parameter0: com.ctc.wstx.io.BranchingReaderSource;

        r3 := @parameter1: com.ctc.wstx.sr.ReaderCreator;

        r4 := @parameter2: com.ctc.wstx.api.ReaderConfig;

        r1 := @parameter3: com.ctc.wstx.io.InputBootstrapper;

        z0 := @parameter4: boolean;

        $r0 = new com.ctc.wstx.sr.TypedStreamReader;

        $r5 = staticinvoke <com.ctc.wstx.sr.TypedStreamReader: com.ctc.wstx.sr.InputElementStack createElementStack(com.ctc.wstx.api.ReaderConfig)>(r4);

        specialinvoke $r0.<com.ctc.wstx.sr.TypedStreamReader: void <init>(com.ctc.wstx.io.InputBootstrapper,com.ctc.wstx.io.BranchingReaderSource,com.ctc.wstx.sr.ReaderCreator,com.ctc.wstx.api.ReaderConfig,com.ctc.wstx.sr.InputElementStack,boolean)>(r1, r2, r3, r4, $r5, z0);

        return $r0;
    }

    public boolean getElementAsBoolean() throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$BooleanDecoder $r2;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        boolean $z0;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        $r1 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$BooleanDecoder getBooleanDecoder()>();

        virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: void getElementAs(org.codehaus.stax2.typed.TypedValueDecoder)>($r2);

        $z0 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$BooleanDecoder: boolean getValue()>();

        return $z0;
    }

    public int getElementAsInt() throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$IntDecoder $r2;
        int $i0;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        $r1 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$IntDecoder getIntDecoder()>();

        virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: void getElementAs(org.codehaus.stax2.typed.TypedValueDecoder)>($r2);

        $i0 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$IntDecoder: int getValue()>();

        return $i0;
    }

    public long getElementAsLong() throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder $r2;
        long $l0;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        $r1 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder getLongDecoder()>();

        virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: void getElementAs(org.codehaus.stax2.typed.TypedValueDecoder)>($r2);

        $l0 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder: long getValue()>();

        return $l0;
    }

    public float getElementAsFloat() throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        float $f0;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$FloatDecoder $r2;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        $r1 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$FloatDecoder getFloatDecoder()>();

        virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: void getElementAs(org.codehaus.stax2.typed.TypedValueDecoder)>($r2);

        $f0 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$FloatDecoder: float getValue()>();

        return $f0;
    }

    public double getElementAsDouble() throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$DoubleDecoder $r2;
        double $d0;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        $r1 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$DoubleDecoder getDoubleDecoder()>();

        virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: void getElementAs(org.codehaus.stax2.typed.TypedValueDecoder)>($r2);

        $d0 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$DoubleDecoder: double getValue()>();

        return $d0;
    }

    public java.math.BigInteger getElementAsInteger() throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$IntegerDecoder $r2;
        java.math.BigInteger $r3;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        $r1 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$IntegerDecoder getIntegerDecoder()>();

        virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: void getElementAs(org.codehaus.stax2.typed.TypedValueDecoder)>($r2);

        $r3 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$IntegerDecoder: java.math.BigInteger getValue()>();

        return $r3;
    }

    public java.math.BigDecimal getElementAsDecimal() throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        java.math.BigDecimal $r3;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecimalDecoder $r2;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        $r1 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecimalDecoder getDecimalDecoder()>();

        virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: void getElementAs(org.codehaus.stax2.typed.TypedValueDecoder)>($r2);

        $r3 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecimalDecoder: java.math.BigDecimal getValue()>();

        return $r3;
    }

    public javax.xml.namespace.QName getElementAsQName() throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        javax.xml.namespace.NamespaceContext $r2;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$QNameDecoder $r3;
        javax.xml.namespace.QName $r4, $r5;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        $r1 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: javax.xml.namespace.NamespaceContext getNamespaceContext()>();

        $r3 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$QNameDecoder getQNameDecoder(javax.xml.namespace.NamespaceContext)>($r2);

        virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: void getElementAs(org.codehaus.stax2.typed.TypedValueDecoder)>($r3);

        $r4 = virtualinvoke $r3.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$QNameDecoder: javax.xml.namespace.QName getValue()>();

        $r5 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: javax.xml.namespace.QName _verifyQName(javax.xml.namespace.QName)>($r4);

        return $r5;
    }

    public final byte[] getElementAsBinary() throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        byte[] $r2;
        org.codehaus.stax2.typed.Base64Variant $r1;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        $r1 = staticinvoke <org.codehaus.stax2.typed.Base64Variants: org.codehaus.stax2.typed.Base64Variant getDefaultVariant()>();

        $r2 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: byte[] getElementAsBinary(org.codehaus.stax2.typed.Base64Variant)>($r1);

        return $r2;
    }

    public byte[] getElementAsBinary(org.codehaus.stax2.typed.Base64Variant) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        byte[] $r4, r5;
        org.codehaus.stax2.ri.Stax2Util$ByteAggregator $r2;
        org.codehaus.stax2.typed.Base64Variant r3;
        int i0, i1, $i2;
        org.codehaus.stax2.ri.typed.CharArrayBase64Decoder $r1;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        r3 := @parameter0: org.codehaus.stax2.typed.Base64Variant;

        $r1 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.ri.typed.CharArrayBase64Decoder _base64Decoder()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.CharArrayBase64Decoder: org.codehaus.stax2.ri.Stax2Util$ByteAggregator getByteAggregator()>();

        r5 = virtualinvoke $r2.<org.codehaus.stax2.ri.Stax2Util$ByteAggregator: byte[] startAggregation()>();

     label1:
        i0 = 0;

        i1 = lengthof r5;

     label2:
        $i2 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: int readElementAsBinary(byte[],int,int,org.codehaus.stax2.typed.Base64Variant)>(r5, i0, i1, r3);

        if $i2 >= 1 goto label3;

        $r4 = virtualinvoke $r2.<org.codehaus.stax2.ri.Stax2Util$ByteAggregator: byte[] aggregateAll(byte[],int)>(r5, i0);

        return $r4;

     label3:
        i0 = i0 + $i2;

        i1 = i1 - $i2;

        if i1 > 0 goto label2;

        r5 = virtualinvoke $r2.<org.codehaus.stax2.ri.Stax2Util$ByteAggregator: byte[] addFullBlock(byte[])>(r5);

        goto label1;
    }

    public void getElementAs(org.codehaus.stax2.typed.TypedValueDecoder) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.util.TextBuffer $r10, $r13, $r24, $r27, $r28;
        boolean $z0;
        com.ctc.wstx.sr.TypedStreamReader r0;
        org.codehaus.stax2.typed.TypedValueDecoder r3;
        org.codehaus.stax2.typed.TypedXMLStreamException $r22, $r26;
        java.lang.StringBuffer $r5, $r7, $r8, $r15, $r17, $r18, $r29, $r30, $r31;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24;
        java.lang.String $r1, $r2, $r6, $r9, $r16, $r19, $r20, $r25;
        char $c11, $c14;
        java.lang.IllegalArgumentException $r21, $r23;
        char[] $r11, $r12;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        r3 := @parameter0: org.codehaus.stax2.typed.TypedValueDecoder;

        $i0 = r0.<com.ctc.wstx.sr.TypedStreamReader: int mCurrToken>;

        if $i0 == 1 goto label01;

        $r20 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String ERR_STATE_NOT_STELEM>;

        virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: void throwParseError(java.lang.String)>($r20);

     label01:
        $z0 = r0.<com.ctc.wstx.sr.TypedStreamReader: boolean mStEmptyElem>;

        if $z0 == 0 goto label02;

        r0.<com.ctc.wstx.sr.TypedStreamReader: boolean mStEmptyElem> = 0;

        r0.<com.ctc.wstx.sr.TypedStreamReader: int mCurrToken> = 2;

        specialinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: void _handleEmptyValue(org.codehaus.stax2.typed.TypedValueDecoder)>(r3);

        return;

     label02:
        $i18 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: int next()>();

        if $i18 != 2 goto label03;

        specialinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: void _handleEmptyValue(org.codehaus.stax2.typed.TypedValueDecoder)>(r3);

        return;

     label03:
        if $i18 == 5 goto label02;

        if $i18 != 3 goto label04;

        goto label02;

     label04:
        $i1 = 1 << $i18;

        $i2 = $i1 & 4688;

        if $i2 != 0 goto label05;

        $r30 = new java.lang.StringBuffer;

        specialinvoke $r30.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Expected a text token, got ");

        $r16 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: java.lang.String tokenTypeDesc(int)>($i18);

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: void throwParseError(java.lang.String)>($r19);

        goto label05;

     label05:
        $i3 = r0.<com.ctc.wstx.sr.TypedStreamReader: int mTokenState>;

        if $i3 >= 3 goto label06;

        $i17 = r0.<com.ctc.wstx.sr.TypedStreamReader: int mCurrToken>;

        virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: void readCoalescedText(int,boolean)>($i17, 0);

     label06:
        $i4 = r0.<com.ctc.wstx.sr.TypedStreamReader: int mInputPtr>;

        $i6 = $i4 + 1;

        $i5 = r0.<com.ctc.wstx.sr.TypedStreamReader: int mInputEnd>;

        if $i6 >= $i5 goto label11;

        $r11 = r0.<com.ctc.wstx.sr.TypedStreamReader: char[] mInputBuffer>;

        $i10 = r0.<com.ctc.wstx.sr.TypedStreamReader: int mInputPtr>;

        $c11 = $r11[$i10];

        $i23 = (int) $c11;

        if $i23 != 60 goto label11;

        $r12 = r0.<com.ctc.wstx.sr.TypedStreamReader: char[] mInputBuffer>;

        $i12 = r0.<com.ctc.wstx.sr.TypedStreamReader: int mInputPtr>;

        $i13 = $i12 + 1;

        $c14 = $r12[$i13];

        $i24 = (int) $c14;

        if $i24 != 47 goto label11;

        $i15 = r0.<com.ctc.wstx.sr.TypedStreamReader: int mInputPtr>;

        $i16 = $i15 + 2;

        r0.<com.ctc.wstx.sr.TypedStreamReader: int mInputPtr> = $i16;

        r0.<com.ctc.wstx.sr.TypedStreamReader: int mCurrToken> = 2;

     label07:
        $r13 = r0.<com.ctc.wstx.sr.TypedStreamReader: com.ctc.wstx.util.TextBuffer mTextBuffer>;

        virtualinvoke $r13.<com.ctc.wstx.util.TextBuffer: void decode(org.codehaus.stax2.typed.TypedValueDecoder)>(r3);

     label08:
        goto label10;

     label09:
        $r23 := @caughtexception;

        $r24 = r0.<com.ctc.wstx.sr.TypedStreamReader: com.ctc.wstx.util.TextBuffer mTextBuffer>;

        $r25 = virtualinvoke $r24.<com.ctc.wstx.util.TextBuffer: java.lang.String contentsAsString()>();

        $r26 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.typed.TypedXMLStreamException _constructTypeException(java.lang.IllegalArgumentException,java.lang.String)>($r23, $r25);

        throw $r26;

     label10:
        virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: void readEndElem()>();

        return;

     label11:
        $r27 = r0.<com.ctc.wstx.sr.TypedStreamReader: com.ctc.wstx.util.TextBuffer mTextBuffer>;

        $i19 = virtualinvoke $r27.<com.ctc.wstx.util.TextBuffer: int size()>();

        $i20 = $i19 >> 1;

        $i21 = 1 + $i20;

        $r28 = r0.<com.ctc.wstx.sr.TypedStreamReader: com.ctc.wstx.util.TextBuffer mTextBuffer>;

        $r29 = virtualinvoke $r28.<com.ctc.wstx.util.TextBuffer: java.lang.StringBuffer contentsAsStringBuffer(int)>($i21);

     label12:
        $i22 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: int next()>();

        if $i22 == 2 goto label15;

        $i7 = 1 << $i22;

        $i8 = $i7 & 4688;

        if $i8 == 0 goto label14;

        $i9 = r0.<com.ctc.wstx.sr.TypedStreamReader: int mTokenState>;

        if $i9 >= 3 goto label13;

        virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: void readCoalescedText(int,boolean)>($i22, 0);

     label13:
        $r10 = r0.<com.ctc.wstx.sr.TypedStreamReader: com.ctc.wstx.util.TextBuffer mTextBuffer>;

        virtualinvoke $r10.<com.ctc.wstx.util.TextBuffer: void contentsToStringBuffer(java.lang.StringBuffer)>($r29);

        goto label12;

     label14:
        if $i22 == 5 goto label12;

        if $i22 == 3 goto label12;

        $r31 = new java.lang.StringBuffer;

        specialinvoke $r31.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Expected a text token, got ");

        $r6 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: java.lang.String tokenTypeDesc(int)>($i22);

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: void throwParseError(java.lang.String)>($r9);

        goto label12;

     label15:
        $r1 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.String toString()>();

        $r2 = staticinvoke <org.codehaus.stax2.ri.Stax2Util: java.lang.String trimSpaces(java.lang.String)>($r1);

        if $r2 != null goto label16;

        specialinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: void _handleEmptyValue(org.codehaus.stax2.typed.TypedValueDecoder)>(r3);

        goto label19;

     label16:
        virtualinvoke r3.<org.codehaus.stax2.typed.TypedValueDecoder: void decode(java.lang.String)>($r2);

     label17:
        goto label19;

     label18:
        $r21 := @caughtexception;

        $r22 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.typed.TypedXMLStreamException _constructTypeException(java.lang.IllegalArgumentException,java.lang.String)>($r21, $r1);

        throw $r22;

     label19:
        return;

        catch java.lang.IllegalArgumentException from label07 to label08 with label09;
        catch java.lang.IllegalArgumentException from label16 to label17 with label18;
    }

    public int readElementAsIntArray(int[], int, int) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        int[] r2;
        int i0, i1, $i2;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$IntArrayDecoder $r3;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        r2 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r3 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$IntArrayDecoder getIntArrayDecoder(int[],int,int)>(r2, i0, i1);

        $i2 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: int readElementAsArray(org.codehaus.stax2.typed.TypedArrayDecoder)>($r3);

        return $i2;
    }

    public int readElementAsLongArray(long[], int, int) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        long[] r2;
        int i0, i1, $i2;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongArrayDecoder $r3;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        r2 := @parameter0: long[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r3 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongArrayDecoder getLongArrayDecoder(long[],int,int)>(r2, i0, i1);

        $i2 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: int readElementAsArray(org.codehaus.stax2.typed.TypedArrayDecoder)>($r3);

        return $i2;
    }

    public int readElementAsFloatArray(float[], int, int) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        int i0, i1, $i2;
        float[] r2;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$FloatArrayDecoder $r3;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        r2 := @parameter0: float[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r3 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$FloatArrayDecoder getFloatArrayDecoder(float[],int,int)>(r2, i0, i1);

        $i2 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: int readElementAsArray(org.codehaus.stax2.typed.TypedArrayDecoder)>($r3);

        return $i2;
    }

    public int readElementAsDoubleArray(double[], int, int) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$DoubleArrayDecoder $r3;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        double[] r2;
        int i0, i1, $i2;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        r2 := @parameter0: double[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r3 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$DoubleArrayDecoder getDoubleArrayDecoder(double[],int,int)>(r2, i0, i1);

        $i2 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: int readElementAsArray(org.codehaus.stax2.typed.TypedArrayDecoder)>($r3);

        return $i2;
    }

    public final int readElementAsArray(org.codehaus.stax2.typed.TypedArrayDecoder) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.util.TextBuffer $r2;
        org.codehaus.stax2.typed.TypedArrayDecoder r1;
        javax.xml.stream.XMLStreamException $r3, $r4;
        int $i0, $i1, $i2, i3, $i4, i5, $i6, $i7, $i9, $i11, $i13;
        boolean $z0, $z1;
        com.ctc.wstx.sr.TypedStreamReader r0;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        r1 := @parameter0: org.codehaus.stax2.typed.TypedArrayDecoder;

        i3 = r0.<com.ctc.wstx.sr.TypedStreamReader: int mCurrToken>;

        $i0 = 1 << i3;

        $i1 = $i0 & 4182;

        if $i1 != 0 goto label01;

        virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: void throwNotTextualOrElem(int)>(i3);

     label01:
        if i3 != 1 goto label06;

        $z1 = r0.<com.ctc.wstx.sr.TypedStreamReader: boolean mStEmptyElem>;

        if $z1 == 0 goto label02;

        r0.<com.ctc.wstx.sr.TypedStreamReader: boolean mStEmptyElem> = 0;

        r0.<com.ctc.wstx.sr.TypedStreamReader: int mCurrToken> = 2;

        $i9 = (int) -1;

        return $i9;

     label02:
        $i4 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: int next()>();

        i3 = $i4;

        if $i4 != 2 goto label03;

        $i11 = (int) -1;

        return $i11;

     label03:
        if $i4 == 5 goto label02;

        if $i4 != 3 goto label04;

        goto label02;

     label04:
        if $i4 == 4 goto label06;

        if $i4 != 12 goto label05;

        goto label06;

     label05:
        $r4 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: javax.xml.stream.XMLStreamException _constructUnexpectedInTyped(int)>($i4);

        throw $r4;

     label06:
        i5 = 0;

     label07:
        if i3 == 2 goto label14;

        if i3 == 4 goto label08;

        if i3 == 12 goto label08;

        if i3 != 6 goto label09;

     label08:
        $i6 = r0.<com.ctc.wstx.sr.TypedStreamReader: int mTokenState>;

        if $i6 >= 3 goto label12;

        virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: void readCoalescedText(int,boolean)>(i3, 0);

        goto label12;

     label09:
        if i3 == 5 goto label10;

        if i3 != 3 goto label11;

     label10:
        i3 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: int next()>();

        goto label07;

     label11:
        $r3 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: javax.xml.stream.XMLStreamException _constructUnexpectedInTyped(int)>(i3);

        throw $r3;

     label12:
        $r2 = r0.<com.ctc.wstx.sr.TypedStreamReader: com.ctc.wstx.util.TextBuffer mTextBuffer>;

        $i2 = virtualinvoke $r2.<com.ctc.wstx.util.TextBuffer: int decodeElements(org.codehaus.stax2.typed.TypedArrayDecoder,com.ctc.wstx.sr.InputProblemReporter)>(r1, r0);

        i5 = i5 + $i2;

        $z0 = virtualinvoke r1.<org.codehaus.stax2.typed.TypedArrayDecoder: boolean hasRoom()>();

        if $z0 != 0 goto label13;

        goto label14;

     label13:
        i3 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: int next()>();

        goto label07;

     label14:
        if i5 <= 0 goto label15;

        $i7 = i5;

        goto label16;

     label15:
        $i13 = (int) -1;

        $i7 = $i13;

     label16:
        return $i7;
    }

    public final int readElementAsBinary(byte[], int, int) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        byte[] r1;
        org.codehaus.stax2.typed.Base64Variant $r2;
        int i0, i1, $i2;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = staticinvoke <org.codehaus.stax2.typed.Base64Variants: org.codehaus.stax2.typed.Base64Variant getDefaultVariant()>();

        $i2 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: int readElementAsBinary(byte[],int,int,org.codehaus.stax2.typed.Base64Variant)>(r1, i0, i1, $r2);

        return $i2;
    }

    public int readElementAsBinary(byte[], int, int, org.codehaus.stax2.typed.Base64Variant) throws javax.xml.stream.XMLStreamException
    {
        byte[] r0;
        org.codehaus.stax2.typed.Base64Variant r10;
        boolean $z0, $z1;
        com.ctc.wstx.sr.TypedStreamReader r8;
        org.codehaus.stax2.ri.typed.CharArrayBase64Decoder $r9;
        org.codehaus.stax2.typed.TypedXMLStreamException $r11, $r23;
        java.lang.StringBuffer $r3, $r4, $r5, $r6, $r14, $r15, $r16, $r17, $r18, $r25, $r27;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, $i15, i16, $i17, $i18, $i19, $i21, $i23, $i25, $i27;
        java.lang.String $r7, $r19, $r22;
        java.lang.IllegalArgumentException $r21, $r24, $r26, $r28;

        r8 := @this: com.ctc.wstx.sr.TypedStreamReader;

        r0 := @parameter0: byte[];

        i12 := @parameter1: int;

        i13 := @parameter2: int;

        r10 := @parameter3: org.codehaus.stax2.typed.Base64Variant;

        if r0 != null goto label01;

        $r24 = new java.lang.IllegalArgumentException;

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("resultBuffer is null");

        throw $r24;

     label01:
        if i12 >= 0 goto label02;

        $r26 = new java.lang.IllegalArgumentException;

        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal offset (");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i12);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("), must be [0, ");

        $i11 = lengthof r0;

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i11);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r26;

     label02:
        if i13 < 1 goto label03;

        $i2 = i12 + i13;

        $i1 = lengthof r0;

        if $i2 <= $i1 goto label05;

     label03:
        if i13 != 0 goto label04;

        return 0;

     label04:
        $r28 = new java.lang.IllegalArgumentException;

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal maxLength (");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i13);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("), has to be positive number, and offset+maxLength can not exceed");

        $i0 = lengthof r0;

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r28;

     label05:
        $r9 = virtualinvoke r8.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.ri.typed.CharArrayBase64Decoder _base64Decoder()>();

        i14 = r8.<com.ctc.wstx.sr.TypedStreamReader: int mCurrToken>;

        $i3 = 1 << i14;

        $i4 = $i3 & 4178;

        if $i4 != 0 goto label07;

        if i14 != 2 goto label06;

        $z1 = virtualinvoke $r9.<org.codehaus.stax2.ri.typed.CharArrayBase64Decoder: boolean hasData()>();

        if $z1 != 0 goto label12;

        $i21 = (int) -1;

        return $i21;

     label06:
        virtualinvoke r8.<com.ctc.wstx.sr.TypedStreamReader: void throwNotTextualOrElem(int)>(i14);

        goto label12;

     label07:
        if i14 != 1 goto label12;

        $z0 = r8.<com.ctc.wstx.sr.TypedStreamReader: boolean mStEmptyElem>;

        if $z0 == 0 goto label08;

        r8.<com.ctc.wstx.sr.TypedStreamReader: boolean mStEmptyElem> = 0;

        r8.<com.ctc.wstx.sr.TypedStreamReader: int mCurrToken> = 2;

        $i23 = (int) -1;

        return $i23;

     label08:
        $i15 = virtualinvoke r8.<com.ctc.wstx.sr.TypedStreamReader: int next()>();

        if $i15 != 2 goto label09;

        $i25 = (int) -1;

        return $i25;

     label09:
        if $i15 == 5 goto label08;

        if $i15 != 3 goto label10;

        goto label08;

     label10:
        $i10 = r8.<com.ctc.wstx.sr.TypedStreamReader: int mTokenState>;

        $i9 = r8.<com.ctc.wstx.sr.TypedStreamReader: int mStTextThreshold>;

        if $i10 >= $i9 goto label11;

        virtualinvoke r8.<com.ctc.wstx.sr.TypedStreamReader: void finishToken(boolean)>(0);

     label11:
        specialinvoke r8.<com.ctc.wstx.sr.TypedStreamReader: void _initBinaryChunks(org.codehaus.stax2.typed.Base64Variant,org.codehaus.stax2.ri.typed.CharArrayBase64Decoder,int,boolean)>(r10, $r9, $i15, 1);

        goto label12;

     label12:
        i16 = 0;

     label13:
        $i17 = virtualinvoke $r9.<org.codehaus.stax2.ri.typed.CharArrayBase64Decoder: int decode(byte[],int,int)>(r0, i12, i13);

     label14:
        goto label16;

     label15:
        $r21 := @caughtexception;

        $r22 = virtualinvoke $r21.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        $r23 = virtualinvoke r8.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.typed.TypedXMLStreamException _constructTypeException(java.lang.String,java.lang.String)>($r22, "");

        throw $r23;

     label16:
        i12 = i12 + $i17;

        i16 = i16 + $i17;

        i13 = i13 - $i17;

        if i13 < 1 goto label23;

        $i5 = r8.<com.ctc.wstx.sr.TypedStreamReader: int mCurrToken>;

        if $i5 != 2 goto label17;

        goto label23;

     label17:
        $i18 = virtualinvoke r8.<com.ctc.wstx.sr.TypedStreamReader: int next()>();

        if $i18 == 5 goto label17;

        if $i18 == 3 goto label17;

        if $i18 != 6 goto label18;

        goto label17;

     label18:
        if $i18 != 2 goto label20;

        $i8 = virtualinvoke $r9.<org.codehaus.stax2.ri.typed.CharArrayBase64Decoder: int endOfContent()>();

        if $i8 >= 0 goto label19;

        $r11 = virtualinvoke r8.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.typed.TypedXMLStreamException _constructTypeException(java.lang.String,java.lang.String)>("Incomplete base64 triplet at the end of decoded content", "");

        throw $r11;

     label19:
        if $i8 <= 0 goto label23;

        goto label13;

     label20:
        $i7 = r8.<com.ctc.wstx.sr.TypedStreamReader: int mTokenState>;

        $i6 = r8.<com.ctc.wstx.sr.TypedStreamReader: int mStTextThreshold>;

        if $i7 >= $i6 goto label21;

        virtualinvoke r8.<com.ctc.wstx.sr.TypedStreamReader: void finishToken(boolean)>(0);

     label21:
        specialinvoke r8.<com.ctc.wstx.sr.TypedStreamReader: void _initBinaryChunks(org.codehaus.stax2.typed.Base64Variant,org.codehaus.stax2.ri.typed.CharArrayBase64Decoder,int,boolean)>(r10, $r9, $i18, 0);

        goto label22;

     label22:
        goto label13;

     label23:
        if i16 <= 0 goto label24;

        $i19 = i16;

        goto label25;

     label24:
        $i27 = (int) -1;

        $i19 = $i27;

     label25:
        return $i19;

        catch java.lang.IllegalArgumentException from label13 to label14 with label15;
    }

    private final void _initBinaryChunks(org.codehaus.stax2.typed.Base64Variant, org.codehaus.stax2.ri.typed.CharArrayBase64Decoder, int, boolean) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        com.ctc.wstx.util.TextBuffer $r4;
        org.codehaus.stax2.typed.Base64Variant r2;
        byte $b5, $b6;
        javax.xml.stream.XMLStreamException $r1;
        int i0, $i1, $i2, $i3, $i4;
        org.codehaus.stax2.ri.typed.CharArrayBase64Decoder r3;
        boolean z0, $z1, $z2;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        r2 := @parameter0: org.codehaus.stax2.typed.Base64Variant;

        r3 := @parameter1: org.codehaus.stax2.ri.typed.CharArrayBase64Decoder;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        if i0 != 4 goto label3;

        $i4 = r0.<com.ctc.wstx.sr.TypedStreamReader: int mTokenState>;

        $i3 = r0.<com.ctc.wstx.sr.TypedStreamReader: int mStTextThreshold>;

        if $i4 >= $i3 goto label7;

        $z2 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: boolean readTextSecondary(int,boolean)>(2000, 0);

        if $z2 == 0 goto label1;

        $b5 = 3;

        goto label2;

     label1:
        $b5 = 2;

     label2:
        r0.<com.ctc.wstx.sr.TypedStreamReader: int mTokenState> = $b5;

        goto label7;

     label3:
        if i0 != 12 goto label6;

        $i2 = r0.<com.ctc.wstx.sr.TypedStreamReader: int mTokenState>;

        $i1 = r0.<com.ctc.wstx.sr.TypedStreamReader: int mStTextThreshold>;

        if $i2 >= $i1 goto label7;

        $z1 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: boolean readCDataSecondary(int)>(2000);

        if $z1 == 0 goto label4;

        $b6 = 3;

        goto label5;

     label4:
        $b6 = 2;

     label5:
        r0.<com.ctc.wstx.sr.TypedStreamReader: int mTokenState> = $b6;

        goto label7;

     label6:
        $r1 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: javax.xml.stream.XMLStreamException _constructUnexpectedInTyped(int)>(i0);

        throw $r1;

     label7:
        $r4 = r0.<com.ctc.wstx.sr.TypedStreamReader: com.ctc.wstx.util.TextBuffer mTextBuffer>;

        virtualinvoke $r4.<com.ctc.wstx.util.TextBuffer: void initBinaryChunks(org.codehaus.stax2.typed.Base64Variant,org.codehaus.stax2.ri.typed.CharArrayBase64Decoder,boolean)>(r2, r3, z0);

        return;
    }

    public int getAttributeIndex(java.lang.String, java.lang.String)
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        java.lang.IllegalStateException $r4;
        com.ctc.wstx.sr.InputElementStack $r3;
        int $i0, $i1;
        java.lang.String r1, r2, $r5;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $i0 = r0.<com.ctc.wstx.sr.TypedStreamReader: int mCurrToken>;

        if $i0 == 1 goto label1;

        $r4 = new java.lang.IllegalStateException;

        $r5 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String ERR_STATE_NOT_STELEM>;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label1:
        $r3 = r0.<com.ctc.wstx.sr.TypedStreamReader: com.ctc.wstx.sr.InputElementStack mElementStack>;

        $i1 = virtualinvoke $r3.<com.ctc.wstx.sr.InputElementStack: int findAttributeIndex(java.lang.String,java.lang.String)>(r1, r2);

        return $i1;
    }

    public boolean getAttributeAsBoolean(int) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$BooleanDecoder $r2;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        int i0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$BooleanDecoder getBooleanDecoder()>();

        virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: void getAttributeAs(int,org.codehaus.stax2.typed.TypedValueDecoder)>(i0, $r2);

        $z0 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$BooleanDecoder: boolean getValue()>();

        return $z0;
    }

    public int getAttributeAsInt(int) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$IntDecoder $r2;
        int i0, $i1;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$IntDecoder getIntDecoder()>();

        virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: void getAttributeAs(int,org.codehaus.stax2.typed.TypedValueDecoder)>(i0, $r2);

        $i1 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$IntDecoder: int getValue()>();

        return $i1;
    }

    public long getAttributeAsLong(int) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder $r2;
        int i0;
        long $l1;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder getLongDecoder()>();

        virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: void getAttributeAs(int,org.codehaus.stax2.typed.TypedValueDecoder)>(i0, $r2);

        $l1 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder: long getValue()>();

        return $l1;
    }

    public float getAttributeAsFloat(int) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        int i0;
        float $f0;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$FloatDecoder $r2;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$FloatDecoder getFloatDecoder()>();

        virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: void getAttributeAs(int,org.codehaus.stax2.typed.TypedValueDecoder)>(i0, $r2);

        $f0 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$FloatDecoder: float getValue()>();

        return $f0;
    }

    public double getAttributeAsDouble(int) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        int i0;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$DoubleDecoder $r2;
        double $d0;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$DoubleDecoder getDoubleDecoder()>();

        virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: void getAttributeAs(int,org.codehaus.stax2.typed.TypedValueDecoder)>(i0, $r2);

        $d0 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$DoubleDecoder: double getValue()>();

        return $d0;
    }

    public java.math.BigInteger getAttributeAsInteger(int) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$IntegerDecoder $r2;
        int i0;
        java.math.BigInteger $r3;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$IntegerDecoder getIntegerDecoder()>();

        virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: void getAttributeAs(int,org.codehaus.stax2.typed.TypedValueDecoder)>(i0, $r2);

        $r3 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$IntegerDecoder: java.math.BigInteger getValue()>();

        return $r3;
    }

    public java.math.BigDecimal getAttributeAsDecimal(int) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        java.math.BigDecimal $r3;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecimalDecoder $r2;
        int i0;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecimalDecoder getDecimalDecoder()>();

        virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: void getAttributeAs(int,org.codehaus.stax2.typed.TypedValueDecoder)>(i0, $r2);

        $r3 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecimalDecoder: java.math.BigDecimal getValue()>();

        return $r3;
    }

    public javax.xml.namespace.QName getAttributeAsQName(int) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        int i0;
        javax.xml.namespace.NamespaceContext $r2;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$QNameDecoder $r3;
        javax.xml.namespace.QName $r4, $r5;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: javax.xml.namespace.NamespaceContext getNamespaceContext()>();

        $r3 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$QNameDecoder getQNameDecoder(javax.xml.namespace.NamespaceContext)>($r2);

        virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: void getAttributeAs(int,org.codehaus.stax2.typed.TypedValueDecoder)>(i0, $r3);

        $r4 = virtualinvoke $r3.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$QNameDecoder: javax.xml.namespace.QName getValue()>();

        $r5 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: javax.xml.namespace.QName _verifyQName(javax.xml.namespace.QName)>($r4);

        return $r5;
    }

    public void getAttributeAs(int, org.codehaus.stax2.typed.TypedValueDecoder) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        java.lang.IllegalStateException $r3;
        com.ctc.wstx.sr.AttributeCollector $r2, $r6;
        java.lang.IllegalArgumentException $r5;
        org.codehaus.stax2.typed.TypedXMLStreamException $r8;
        int $i0, i1;
        java.lang.String $r4, $r7;
        org.codehaus.stax2.typed.TypedValueDecoder r1;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        i1 := @parameter0: int;

        r1 := @parameter1: org.codehaus.stax2.typed.TypedValueDecoder;

        $i0 = r0.<com.ctc.wstx.sr.TypedStreamReader: int mCurrToken>;

        if $i0 == 1 goto label1;

        $r3 = new java.lang.IllegalStateException;

        $r4 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String ERR_STATE_NOT_STELEM>;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label1:
        $r2 = r0.<com.ctc.wstx.sr.TypedStreamReader: com.ctc.wstx.sr.AttributeCollector mAttrCollector>;

        virtualinvoke $r2.<com.ctc.wstx.sr.AttributeCollector: void decodeValue(int,org.codehaus.stax2.typed.TypedValueDecoder)>(i1, r1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = r0.<com.ctc.wstx.sr.TypedStreamReader: com.ctc.wstx.sr.AttributeCollector mAttrCollector>;

        $r7 = virtualinvoke $r6.<com.ctc.wstx.sr.AttributeCollector: java.lang.String getValue(int)>(i1);

        $r8 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.typed.TypedXMLStreamException _constructTypeException(java.lang.IllegalArgumentException,java.lang.String)>($r5, $r7);

        throw $r8;

     label4:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public int[] getAttributeAsIntArray(int) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        int[] $r3;
        int i0;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$IntArrayDecoder $r2;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$IntArrayDecoder getIntArrayDecoder()>();

        virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: int getAttributeAsArray(int,org.codehaus.stax2.typed.TypedArrayDecoder)>(i0, $r2);

        $r3 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$IntArrayDecoder: int[] getValues()>();

        return $r3;
    }

    public long[] getAttributeAsLongArray(int) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        long[] $r3;
        int i0;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongArrayDecoder $r2;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongArrayDecoder getLongArrayDecoder()>();

        virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: int getAttributeAsArray(int,org.codehaus.stax2.typed.TypedArrayDecoder)>(i0, $r2);

        $r3 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongArrayDecoder: long[] getValues()>();

        return $r3;
    }

    public float[] getAttributeAsFloatArray(int) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        int i0;
        float[] $r3;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$FloatArrayDecoder $r2;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$FloatArrayDecoder getFloatArrayDecoder()>();

        virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: int getAttributeAsArray(int,org.codehaus.stax2.typed.TypedArrayDecoder)>(i0, $r2);

        $r3 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$FloatArrayDecoder: float[] getValues()>();

        return $r3;
    }

    public double[] getAttributeAsDoubleArray(int) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$DoubleArrayDecoder $r2;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1;
        int i0;
        double[] $r3;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()>();

        $r2 = virtualinvoke $r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: org.codehaus.stax2.ri.typed.ValueDecoderFactory$DoubleArrayDecoder getDoubleArrayDecoder()>();

        virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: int getAttributeAsArray(int,org.codehaus.stax2.typed.TypedArrayDecoder)>(i0, $r2);

        $r3 = virtualinvoke $r2.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$DoubleArrayDecoder: double[] getValues()>();

        return $r3;
    }

    public int getAttributeAsArray(int, org.codehaus.stax2.typed.TypedArrayDecoder) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        java.lang.IllegalStateException $r3;
        com.ctc.wstx.sr.AttributeCollector $r2;
        org.codehaus.stax2.typed.TypedArrayDecoder r1;
        int $i0, i1, $i2;
        java.lang.String $r4;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        i1 := @parameter0: int;

        r1 := @parameter1: org.codehaus.stax2.typed.TypedArrayDecoder;

        $i0 = r0.<com.ctc.wstx.sr.TypedStreamReader: int mCurrToken>;

        if $i0 == 1 goto label1;

        $r3 = new java.lang.IllegalStateException;

        $r4 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String ERR_STATE_NOT_STELEM>;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label1:
        $r2 = r0.<com.ctc.wstx.sr.TypedStreamReader: com.ctc.wstx.sr.AttributeCollector mAttrCollector>;

        $i2 = virtualinvoke $r2.<com.ctc.wstx.sr.AttributeCollector: int decodeValues(int,org.codehaus.stax2.typed.TypedArrayDecoder,com.ctc.wstx.sr.InputProblemReporter)>(i1, r1, r0);

        return $i2;
    }

    public byte[] getAttributeAsBinary(int) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        byte[] $r2;
        org.codehaus.stax2.typed.Base64Variant $r1;
        int i0;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        i0 := @parameter0: int;

        $r1 = staticinvoke <org.codehaus.stax2.typed.Base64Variants: org.codehaus.stax2.typed.Base64Variant getDefaultVariant()>();

        $r2 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: byte[] getAttributeAsBinary(int,org.codehaus.stax2.typed.Base64Variant)>(i0, $r1);

        return $r2;
    }

    public byte[] getAttributeAsBinary(int, org.codehaus.stax2.typed.Base64Variant) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        byte[] $r4;
        org.codehaus.stax2.typed.Base64Variant r1;
        com.ctc.wstx.sr.AttributeCollector $r2;
        int i0;
        org.codehaus.stax2.ri.typed.CharArrayBase64Decoder $r3;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        i0 := @parameter0: int;

        r1 := @parameter1: org.codehaus.stax2.typed.Base64Variant;

        $r2 = r0.<com.ctc.wstx.sr.TypedStreamReader: com.ctc.wstx.sr.AttributeCollector mAttrCollector>;

        $r3 = virtualinvoke r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.ri.typed.CharArrayBase64Decoder _base64Decoder()>();

        $r4 = virtualinvoke $r2.<com.ctc.wstx.sr.AttributeCollector: byte[] decodeBinary(int,org.codehaus.stax2.typed.Base64Variant,org.codehaus.stax2.ri.typed.CharArrayBase64Decoder,com.ctc.wstx.sr.InputProblemReporter)>(i0, r1, $r3, r0);

        return $r4;
    }

    protected javax.xml.namespace.QName _verifyQName(javax.xml.namespace.QName) throws org.codehaus.stax2.typed.TypedXMLStreamException
    {
        org.codehaus.stax2.typed.TypedXMLStreamException $r16;
        java.lang.StringBuffer $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14;
        int $i0, $i1;
        java.lang.String $r1, $r3, $r8, $r15;
        boolean $z0, $z1;
        com.ctc.wstx.sr.TypedStreamReader r2;
        javax.xml.namespace.QName r0;

        r2 := @this: com.ctc.wstx.sr.TypedStreamReader;

        r0 := @parameter0: javax.xml.namespace.QName;

        $r1 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z1 = r2.<com.ctc.wstx.sr.TypedStreamReader: boolean mCfgNsEnabled>;

        $z0 = r2.<com.ctc.wstx.sr.TypedStreamReader: boolean mXml11>;

        $i0 = staticinvoke <com.ctc.wstx.io.WstxInputData: int findIllegalNameChar(java.lang.String,boolean,boolean)>($r1, $z1, $z0);

        if $i0 < 0 goto label3;

        $r3 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        if $r3 == null goto label1;

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i1 <= 0 goto label1;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label2;

     label1:
        $r8 = $r1;

     label2:
        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid local name \"");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" (character at #");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is invalid)");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        $r16 = virtualinvoke r2.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.typed.TypedXMLStreamException _constructTypeException(java.lang.String,java.lang.String)>($r15, $r8);

        throw $r16;

     label3:
        return r0;
    }

    protected org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory()
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        org.codehaus.stax2.ri.typed.ValueDecoderFactory $r1, $r2, $r3;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        $r1 = r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory>;

        if $r1 != null goto label1;

        $r3 = new org.codehaus.stax2.ri.typed.ValueDecoderFactory;

        specialinvoke $r3.<org.codehaus.stax2.ri.typed.ValueDecoderFactory: void <init>()>();

        r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory> = $r3;

     label1:
        $r2 = r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.ri.typed.ValueDecoderFactory _decoderFactory>;

        return $r2;
    }

    protected org.codehaus.stax2.ri.typed.CharArrayBase64Decoder _base64Decoder()
    {
        com.ctc.wstx.sr.TypedStreamReader r0;
        org.codehaus.stax2.ri.typed.CharArrayBase64Decoder $r1, $r2, $r3;

        r0 := @this: com.ctc.wstx.sr.TypedStreamReader;

        $r1 = r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.ri.typed.CharArrayBase64Decoder _base64Decoder>;

        if $r1 != null goto label1;

        $r3 = new org.codehaus.stax2.ri.typed.CharArrayBase64Decoder;

        specialinvoke $r3.<org.codehaus.stax2.ri.typed.CharArrayBase64Decoder: void <init>()>();

        r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.ri.typed.CharArrayBase64Decoder _base64Decoder> = $r3;

     label1:
        $r2 = r0.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.ri.typed.CharArrayBase64Decoder _base64Decoder>;

        return $r2;
    }

    private void _handleEmptyValue(org.codehaus.stax2.typed.TypedValueDecoder) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.TypedStreamReader r2;
        org.codehaus.stax2.typed.TypedXMLStreamException $r3;
        org.codehaus.stax2.typed.TypedValueDecoder r0;
        java.lang.IllegalArgumentException $r1;

        r2 := @this: com.ctc.wstx.sr.TypedStreamReader;

        r0 := @parameter0: org.codehaus.stax2.typed.TypedValueDecoder;

     label1:
        virtualinvoke r0.<org.codehaus.stax2.typed.TypedValueDecoder: void handleEmptyValue()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r3 = virtualinvoke r2.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.typed.TypedXMLStreamException _constructTypeException(java.lang.IllegalArgumentException,java.lang.String)>($r1, "");

        throw $r3;

     label4:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    protected org.codehaus.stax2.typed.TypedXMLStreamException _constructTypeException(java.lang.IllegalArgumentException, java.lang.String)
    {
        com.ctc.wstx.sr.TypedStreamReader r4;
        org.codehaus.stax2.typed.TypedXMLStreamException $r0;
        java.lang.String r1, $r3;
        java.lang.IllegalArgumentException r2;
        org.codehaus.stax2.XMLStreamLocation2 $r5;

        r4 := @this: com.ctc.wstx.sr.TypedStreamReader;

        r2 := @parameter0: java.lang.IllegalArgumentException;

        r1 := @parameter1: java.lang.String;

        $r0 = new org.codehaus.stax2.typed.TypedXMLStreamException;

        $r3 = virtualinvoke r2.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        $r5 = virtualinvoke r4.<com.ctc.wstx.sr.TypedStreamReader: org.codehaus.stax2.XMLStreamLocation2 getStartLocation()>();

        specialinvoke $r0.<org.codehaus.stax2.typed.TypedXMLStreamException: void <init>(java.lang.String,java.lang.String,javax.xml.stream.Location,java.lang.IllegalArgumentException)>(r1, $r3, $r5, r2);

        return $r0;
    }

    public static void <clinit>()
    {
        <com.ctc.wstx.sr.TypedStreamReader: int MIN_BINARY_CHUNK> = 2000;

        <com.ctc.wstx.sr.TypedStreamReader: int MASK_TYPED_ACCESS_BINARY> = 4178;

        <com.ctc.wstx.sr.TypedStreamReader: int MASK_TYPED_ACCESS_ARRAY> = 4182;

        return;
    }
}
