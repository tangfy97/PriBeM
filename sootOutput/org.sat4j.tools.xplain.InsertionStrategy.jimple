public class org.sat4j.tools.xplain.InsertionStrategy extends java.lang.Object implements org.sat4j.tools.xplain.MinimizationStrategy
{
    private static final long serialVersionUID;
    private boolean computationCanceled;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        org.sat4j.tools.xplain.InsertionStrategy r0;

        r0 := @this: org.sat4j.tools.xplain.InsertionStrategy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void cancelExplanationComputation()
    {
        org.sat4j.tools.xplain.InsertionStrategy r0;

        r0 := @this: org.sat4j.tools.xplain.InsertionStrategy;

        r0.<org.sat4j.tools.xplain.InsertionStrategy: boolean computationCanceled> = 1;

        return;
    }

    public org.sat4j.specs.IVecInt explain(org.sat4j.specs.ISolver, java.util.Map, org.sat4j.specs.IVecInt) throws org.sat4j.specs.TimeoutException
    {
        java.lang.Integer $r16, $r34, r38;
        java.util.Map r2;
        java.util.Set $r6;
        java.lang.StringBuilder $r15, $r18, $r19, $r28, $r29, $r41, $r46;
        org.sat4j.specs.TimeoutException $r47;
        org.sat4j.specs.IteratorInt $r9, $r31;
        org.sat4j.specs.ISolver r4;
        java.lang.AssertionError $r43, $r44, $r45;
        java.lang.String $r14, $r20, $r27, $r30;
        org.sat4j.specs.IVecInt r3, $r5;
        org.sat4j.tools.xplain.InsertionStrategy r0;
        org.sat4j.core.VecInt $r39, $r40, $r42, $r48;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, z13, $z14, $z15, $z16;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, $i26, i27, i28, i29, i30, i31, $i33;
        java.io.PrintStream $r13, $r26, $r32, $r33, $r36;
        java.util.Iterator $r8;
        java.lang.Object $r17, $r24, $r35;

        r0 := @this: org.sat4j.tools.xplain.InsertionStrategy;

        r4 := @parameter0: org.sat4j.specs.ISolver;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: org.sat4j.specs.IVecInt;

        r0.<org.sat4j.tools.xplain.InsertionStrategy: boolean computationCanceled> = 0;

        $r39 = new org.sat4j.core.VecInt;

        $i0 = interfaceinvoke r2.<java.util.Map: int size()>();

        $i1 = interfaceinvoke r3.<org.sat4j.specs.IVecInt: int size()>();

        $i2 = $i0 + $i1;

        specialinvoke $r39.<org.sat4j.core.VecInt: void <init>(int)>($i2);

        interfaceinvoke r3.<org.sat4j.specs.IVecInt: void copyTo(org.sat4j.specs.IVecInt)>($r39);

        $r5 = interfaceinvoke r4.<org.sat4j.specs.ISolver: org.sat4j.specs.IVecInt unsatExplanation()>();

        $i3 = interfaceinvoke $r5.<org.sat4j.specs.IVecInt: int size()>();

        if $i3 != 1 goto label01;

        $r40 = new org.sat4j.core.VecInt;

        specialinvoke $r40.<org.sat4j.core.VecInt: void <init>()>();

        $i23 = interfaceinvoke $r5.<org.sat4j.specs.IVecInt: int get(int)>(0);

        $i24 = neg $i23;

        interfaceinvoke $r40.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i24);

        return $r40;

     label01:
        $z0 = interfaceinvoke r4.<org.sat4j.specs.ISolver: boolean isVerbose()>();

        if $z0 == 0 goto label04;

        $r26 = <java.lang.System: java.io.PrintStream out>;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r27 = interfaceinvoke r4.<org.sat4j.specs.ISolver: java.lang.String getLogPrefix()>();

        $r28 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("initial unsat core ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<java.io.PrintStream: void print(java.lang.String)>($r30);

        interfaceinvoke $r5.<org.sat4j.specs.IVecInt: void sort()>();

        $r31 = interfaceinvoke $r5.<org.sat4j.specs.IVecInt: org.sat4j.specs.IteratorInt iterator()>();

     label02:
        $z12 = interfaceinvoke $r31.<org.sat4j.specs.IteratorInt: boolean hasNext()>();

        if $z12 == 0 goto label03;

        $r33 = <java.lang.System: java.io.PrintStream out>;

        $i21 = interfaceinvoke $r31.<org.sat4j.specs.IteratorInt: int next()>();

        $i22 = neg $i21;

        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i22);

        $r35 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r34);

        virtualinvoke $r33.<java.io.PrintStream: void print(java.lang.Object)>($r35);

        $r36 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r36.<java.io.PrintStream: void print(java.lang.String)>(" ");

        goto label02;

     label03:
        $r32 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r32.<java.io.PrintStream: void println()>();

     label04:
        i25 = 0;

     label05:
        $i26 = interfaceinvoke $r5.<org.sat4j.specs.IVecInt: int size()>();

        if i25 >= $i26 goto label07;

        $i20 = interfaceinvoke $r5.<org.sat4j.specs.IVecInt: int get(int)>(i25);

        $z11 = interfaceinvoke r3.<org.sat4j.specs.IVecInt: boolean contains(int)>($i20);

        if $z11 == 0 goto label06;

        interfaceinvoke $r5.<org.sat4j.specs.IVecInt: int delete(int)>(i25);

        goto label05;

     label06:
        i25 = i25 + 1;

        goto label05;

     label07:
        $r6 = interfaceinvoke r2.<java.util.Map: java.util.Set keySet()>();

        $r42 = new org.sat4j.core.VecInt;

        $i4 = interfaceinvoke $r6.<java.util.Set: int size()>();

        specialinvoke $r42.<org.sat4j.core.VecInt: void <init>(int)>($i4);

        $r8 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label08:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r24 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r38 = (java.lang.Integer) $r24;

        $i19 = virtualinvoke r38.<java.lang.Integer: int intValue()>();

        interfaceinvoke $r42.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i19);

        goto label08;

     label09:
        $r9 = interfaceinvoke $r5.<org.sat4j.specs.IVecInt: org.sat4j.specs.IteratorInt iterator()>();

     label10:
        $z2 = interfaceinvoke $r9.<org.sat4j.specs.IteratorInt: boolean hasNext()>();

        if $z2 == 0 goto label12;

        $i18 = interfaceinvoke $r9.<org.sat4j.specs.IteratorInt: int next()>();

        i27 = $i18;

        if $i18 >= 0 goto label11;

        i27 = neg $i18;

     label11:
        interfaceinvoke $r42.<org.sat4j.specs.IVecInt: void remove(int)>(i27);

        interfaceinvoke $r39.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i27);

        goto label10;

     label12:
        interfaceinvoke $r42.<org.sat4j.specs.IVecInt: void copyTo(org.sat4j.specs.IVecInt)>($r39);

        i28 = interfaceinvoke r3.<org.sat4j.specs.IVecInt: int size()>();

     label13:
        z13 = 0;

        i29 = i28;

        $i5 = interfaceinvoke $r39.<org.sat4j.specs.IVecInt: int get(int)>(i28);

        $i6 = neg $i5;

        interfaceinvoke $r39.<org.sat4j.specs.IVecInt: void set(int,int)>(i28, $i6);

        $z3 = <org.sat4j.tools.xplain.InsertionStrategy: boolean $assertionsDisabled>;

        if $z3 != 0 goto label14;

        $i17 = interfaceinvoke $r39.<org.sat4j.specs.IVecInt: int get(int)>(i28);

        if $i17 < 0 goto label14;

        $r43 = new java.lang.AssertionError;

        specialinvoke $r43.<java.lang.AssertionError: void <init>()>();

        throw $r43;

     label14:
        $z14 = r0.<org.sat4j.tools.xplain.InsertionStrategy: boolean computationCanceled>;

        if $z14 != 0 goto label16;

        $z9 = interfaceinvoke r4.<org.sat4j.specs.ISolver: boolean isSatisfiable(org.sat4j.specs.IVecInt)>($r39);

        if $z9 == 0 goto label16;

        i29 = i29 + 1;

        $z10 = <org.sat4j.tools.xplain.InsertionStrategy: boolean $assertionsDisabled>;

        if $z10 != 0 goto label15;

        $i16 = interfaceinvoke $r39.<org.sat4j.specs.IVecInt: int get(int)>(i29);

        if $i16 > 0 goto label15;

        $r44 = new java.lang.AssertionError;

        specialinvoke $r44.<java.lang.AssertionError: void <init>()>();

        throw $r44;

     label15:
        $i14 = interfaceinvoke $r39.<org.sat4j.specs.IVecInt: int get(int)>(i29);

        $i15 = neg $i14;

        interfaceinvoke $r39.<org.sat4j.specs.IVecInt: void set(int,int)>(i29, $i15);

        goto label14;

     label16:
        $z4 = r0.<org.sat4j.tools.xplain.InsertionStrategy: boolean computationCanceled>;

        if $z4 != 0 goto label21;

        if i29 <= i28 goto label21;

        $z6 = <org.sat4j.tools.xplain.InsertionStrategy: boolean $assertionsDisabled>;

        if $z6 != 0 goto label17;

        $z8 = interfaceinvoke r4.<org.sat4j.specs.ISolver: boolean isSatisfiable(org.sat4j.specs.IVecInt)>($r39);

        if $z8 == 0 goto label17;

        $r45 = new java.lang.AssertionError;

        specialinvoke $r45.<java.lang.AssertionError: void <init>()>();

        throw $r45;

     label17:
        $i9 = interfaceinvoke $r39.<org.sat4j.specs.IVecInt: int size()>();

        if i29 >= $i9 goto label20;

        $i10 = interfaceinvoke $r39.<org.sat4j.specs.IVecInt: int get(int)>(i29);

        i30 = i29;

     label18:
        if i30 <= i28 goto label19;

        $i11 = i30 - 1;

        $i12 = interfaceinvoke $r39.<org.sat4j.specs.IVecInt: int get(int)>($i11);

        $i13 = neg $i12;

        interfaceinvoke $r39.<org.sat4j.specs.IVecInt: void set(int,int)>(i30, $i13);

        $i33 = (int) -1;

        i30 = i30 + $i33;

        goto label18;

     label19:
        interfaceinvoke $r39.<org.sat4j.specs.IVecInt: void set(int,int)>(i28, $i10);

        $z7 = interfaceinvoke r4.<org.sat4j.specs.ISolver: boolean isVerbose()>();

        if $z7 == 0 goto label20;

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r14 = interfaceinvoke r4.<org.sat4j.specs.ISolver: java.lang.String getLogPrefix()>();

        $r15 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        $r17 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is mandatory ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r20);

     label20:
        z13 = 1;

     label21:
        i28 = i28 + 1;

        $z15 = r0.<org.sat4j.tools.xplain.InsertionStrategy: boolean computationCanceled>;

        if $z15 != 0 goto label22;

        if z13 == 0 goto label22;

        $z5 = interfaceinvoke r4.<org.sat4j.specs.ISolver: boolean isSatisfiable(org.sat4j.specs.IVecInt)>($r39);

        if $z5 != 0 goto label13;

     label22:
        $z16 = r0.<org.sat4j.tools.xplain.InsertionStrategy: boolean computationCanceled>;

        if $z16 == 0 goto label23;

        $r47 = new org.sat4j.specs.TimeoutException;

        specialinvoke $r47.<org.sat4j.specs.TimeoutException: void <init>()>();

        throw $r47;

     label23:
        $r48 = new org.sat4j.core.VecInt;

        specialinvoke $r48.<org.sat4j.core.VecInt: void <init>(int)>(i28);

        i31 = interfaceinvoke r3.<org.sat4j.specs.IVecInt: int size()>();

     label24:
        if i31 >= i28 goto label25;

        $i7 = interfaceinvoke $r39.<org.sat4j.specs.IVecInt: int get(int)>(i31);

        $i8 = neg $i7;

        interfaceinvoke $r48.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i8);

        i31 = i31 + 1;

        goto label24;

     label25:
        return $r48;
    }

    public java.lang.String toString()
    {
        org.sat4j.tools.xplain.InsertionStrategy r0;

        r0 := @this: org.sat4j.tools.xplain.InsertionStrategy;

        return "Replay (Insertion-based) minimization strategy";
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.sat4j.tools.xplain.InsertionStrategy: long serialVersionUID> = 1L;

        $r0 = class "Lorg/sat4j/tools/xplain/InsertionStrategy;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.sat4j.tools.xplain.InsertionStrategy: boolean $assertionsDisabled> = $z1;

        return;
    }
}
