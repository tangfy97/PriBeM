public final class org.apache.lucene.util.automaton.MinimizationOperations extends java.lang.Object
{

    private void <init>()
    {
        org.apache.lucene.util.automaton.MinimizationOperations r0;

        r0 := @this: org.apache.lucene.util.automaton.MinimizationOperations;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void minimize(org.apache.lucene.util.automaton.Automaton)
    {
        org.apache.lucene.util.automaton.Automaton r0;
        boolean $z0;

        r0 := @parameter0: org.apache.lucene.util.automaton.Automaton;

        $z0 = virtualinvoke r0.<org.apache.lucene.util.automaton.Automaton: boolean isSingleton()>();

        if $z0 != 0 goto label1;

        staticinvoke <org.apache.lucene.util.automaton.MinimizationOperations: void minimizeHopcroft(org.apache.lucene.util.automaton.Automaton)>(r0);

     label1:
        return;
    }

    public static void minimizeHopcroft(org.apache.lucene.util.automaton.Automaton)
    {
        byte $b55, $b56, $b57;
        org.apache.lucene.util.automaton.Transition[] $r65;
        org.apache.lucene.util.automaton.Automaton r0;
        java.util.HashSet[] $r73, $r74;
        org.apache.lucene.util.automaton.State $r1, $r2, $r3, $r8, $r9, $r10, $r14, $r36, $r56, $r64, $r66, $r67, r85, r87, r91, r95, r98, r100, r101;
        int[] $r69, $r77;
        java.util.ArrayList[][] $r71, $r72;
        java.util.HashSet $r11, $r18, $r46, $r55, $r61, r93, r94;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, i34, i35, i36, i37, i38, i39, i40, i41, i42, i43, i44, i45, i46, i47, i48, i49, i50, i51, $i52, i53, i54;
        java.util.LinkedList $r80;
        java.util.ArrayList[] $r37, $r49, $r75, $r76, r86;
        org.apache.lucene.util.automaton.MinimizationOperations$StateListNode $r35, $r54, r89, r96;
        java.lang.Object $r6, $r13, $r15, $r20, $r27, $r39, $r48;
        org.apache.lucene.util.automaton.State[] $r70, r99;
        java.util.BitSet $r81, $r82, $r83, $r84;
        org.apache.lucene.util.automaton.MinimizationOperations$StateListNode[][] $r79;
        org.apache.lucene.util.automaton.MinimizationOperations$StateList[][] $r78;
        org.apache.lucene.util.automaton.MinimizationOperations$StateList[] $r16, $r22, $r24, $r29, $r32, $r41, $r43, $r51, $r63;
        java.util.ArrayList $r40, $r50, $r57, $r58, $r59, $r60, r90, r92;
        org.apache.lucene.util.automaton.MinimizationOperations$StateListNode[] $r28, $r34, $r53;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z14, $z15;
        org.apache.lucene.util.automaton.MinimizationOperations$IntPair $r26, $r45, r88, $r97;
        java.lang.Iterable $r4;
        java.util.Iterator $r5, $r12, $r19, $r21, $r38, $r47;
        org.apache.lucene.util.automaton.Transition $r7, r68, r102;
        org.apache.lucene.util.automaton.MinimizationOperations$StateList $r17, $r23, $r25, $r30, $r31, $r33, $r42, $r44, $r52, $r62;

        r0 := @parameter0: org.apache.lucene.util.automaton.Automaton;

        virtualinvoke r0.<org.apache.lucene.util.automaton.Automaton: void determinize()>();

        $r1 = r0.<org.apache.lucene.util.automaton.Automaton: org.apache.lucene.util.automaton.State initial>;

        $i0 = $r1.<org.apache.lucene.util.automaton.State: int numTransitions>;

        if $i0 != 1 goto label01;

        $r64 = r0.<org.apache.lucene.util.automaton.Automaton: org.apache.lucene.util.automaton.State initial>;

        $r65 = $r64.<org.apache.lucene.util.automaton.State: org.apache.lucene.util.automaton.Transition[] transitionsArray>;

        r68 = $r65[0];

        $r67 = r68.<org.apache.lucene.util.automaton.Transition: org.apache.lucene.util.automaton.State 'to'>;

        $r66 = r0.<org.apache.lucene.util.automaton.Automaton: org.apache.lucene.util.automaton.State initial>;

        if $r67 != $r66 goto label01;

        $i29 = r68.<org.apache.lucene.util.automaton.Transition: int min>;

        if $i29 != 0 goto label01;

        $i30 = r68.<org.apache.lucene.util.automaton.Transition: int max>;

        if $i30 != 1114111 goto label01;

        return;

     label01:
        virtualinvoke r0.<org.apache.lucene.util.automaton.Automaton: void totalize()>();

        $r69 = virtualinvoke r0.<org.apache.lucene.util.automaton.Automaton: int[] getStartPoints()>();

        $r70 = virtualinvoke r0.<org.apache.lucene.util.automaton.Automaton: org.apache.lucene.util.automaton.State[] getNumberedStates()>();

        $i31 = lengthof $r69;

        $i32 = lengthof $r70;

        $r71 = newmultiarray (java.util.ArrayList)[$i32][$i31];

        $r72 = (java.util.ArrayList[][]) $r71;

        $r73 = newarray (java.util.HashSet)[$i32];

        $r74 = (java.util.HashSet[]) $r73;

        $r75 = newarray (java.util.ArrayList)[$i32];

        $r76 = (java.util.ArrayList[]) $r75;

        $r77 = newarray (int)[$i32];

        $r78 = newmultiarray (org.apache.lucene.util.automaton.MinimizationOperations$StateList)[$i32][$i31];

        $r79 = newmultiarray (org.apache.lucene.util.automaton.MinimizationOperations$StateListNode)[$i32][$i31];

        $r80 = new java.util.LinkedList;

        specialinvoke $r80.<java.util.LinkedList: void <init>()>();

        $r81 = new java.util.BitSet;

        $i33 = $i31 * $i32;

        specialinvoke $r81.<java.util.BitSet: void <init>(int)>($i33);

        $r82 = new java.util.BitSet;

        specialinvoke $r82.<java.util.BitSet: void <init>(int)>($i32);

        $r83 = new java.util.BitSet;

        specialinvoke $r83.<java.util.BitSet: void <init>(int)>($i32);

        $r84 = new java.util.BitSet;

        specialinvoke $r84.<java.util.BitSet: void <init>(int)>($i32);

        i34 = 0;

     label02:
        if i34 >= $i32 goto label05;

        $r60 = new java.util.ArrayList;

        specialinvoke $r60.<java.util.ArrayList: void <init>()>();

        $r76[i34] = $r60;

        $r61 = new java.util.HashSet;

        specialinvoke $r61.<java.util.HashSet: void <init>()>();

        $r74[i34] = $r61;

        i35 = 0;

     label03:
        if i35 >= $i31 goto label04;

        $r63 = $r78[i34];

        $r62 = new org.apache.lucene.util.automaton.MinimizationOperations$StateList;

        specialinvoke $r62.<org.apache.lucene.util.automaton.MinimizationOperations$StateList: void <init>()>();

        $r63[i35] = $r62;

        i35 = i35 + 1;

        goto label03;

     label04:
        i34 = i34 + 1;

        goto label02;

     label05:
        i36 = 0;

     label06:
        if i36 >= $i32 goto label12;

        r85 = $r70[i36];

        $z11 = r85.<org.apache.lucene.util.automaton.State: boolean accept>;

        if $z11 == 0 goto label07;

        $b56 = 0;

        $b55 = 0;

        goto label08;

     label07:
        $b56 = 1;

        $b55 = 1;

     label08:
        $r55 = $r74[$b55];

        virtualinvoke $r55.<java.util.HashSet: boolean add(java.lang.Object)>(r85);

        $r77[i36] = $b56;

        i37 = 0;

     label09:
        if i37 >= $i31 goto label11;

        $i27 = $r69[i37];

        $r56 = virtualinvoke r85.<org.apache.lucene.util.automaton.State: org.apache.lucene.util.automaton.State step(int)>($i27);

        $i28 = $r56.<org.apache.lucene.util.automaton.State: int number>;

        r86 = $r72[$i28];

        $r57 = r86[i37];

        if $r57 != null goto label10;

        $r59 = new java.util.ArrayList;

        specialinvoke $r59.<java.util.ArrayList: void <init>()>();

        r86[i37] = $r59;

     label10:
        $r58 = r86[i37];

        virtualinvoke $r58.<java.util.ArrayList: boolean add(java.lang.Object)>(r85);

        i37 = i37 + 1;

        goto label09;

     label11:
        i36 = i36 + 1;

        goto label06;

     label12:
        i38 = 0;

     label13:
        if i38 > 1 goto label19;

        i39 = 0;

     label14:
        if i39 >= $i31 goto label18;

        $r46 = $r74[i38];

        $r47 = virtualinvoke $r46.<java.util.HashSet: java.util.Iterator iterator()>();

     label15:
        $z10 = interfaceinvoke $r47.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label17;

        $r48 = interfaceinvoke $r47.<java.util.Iterator: java.lang.Object next()>();

        r87 = (org.apache.lucene.util.automaton.State) $r48;

        $i25 = r87.<org.apache.lucene.util.automaton.State: int number>;

        $r49 = $r72[$i25];

        $r50 = $r49[i39];

        if $r50 == null goto label16;

        $i26 = r87.<org.apache.lucene.util.automaton.State: int number>;

        $r53 = $r79[$i26];

        $r51 = $r78[i38];

        $r52 = $r51[i39];

        $r54 = virtualinvoke $r52.<org.apache.lucene.util.automaton.MinimizationOperations$StateList: org.apache.lucene.util.automaton.MinimizationOperations$StateListNode add(org.apache.lucene.util.automaton.State)>(r87);

        $r53[i39] = $r54;

     label16:
        goto label15;

     label17:
        i39 = i39 + 1;

        goto label14;

     label18:
        i38 = i38 + 1;

        goto label13;

     label19:
        i40 = 0;

     label20:
        if i40 >= $i31 goto label23;

        $r41 = $r78[0];

        $r42 = $r41[i40];

        $i22 = $r42.<org.apache.lucene.util.automaton.MinimizationOperations$StateList: int size>;

        $r43 = $r78[1];

        $r44 = $r43[i40];

        $i21 = $r44.<org.apache.lucene.util.automaton.MinimizationOperations$StateList: int size>;

        if $i22 > $i21 goto label21;

        $b57 = 0;

        $z15 = 0;

        goto label22;

     label21:
        $b57 = 1;

        $z15 = 1;

     label22:
        $r45 = new org.apache.lucene.util.automaton.MinimizationOperations$IntPair;

        specialinvoke $r45.<org.apache.lucene.util.automaton.MinimizationOperations$IntPair: void <init>(int,int)>($b57, i40);

        virtualinvoke $r80.<java.util.LinkedList: boolean add(java.lang.Object)>($r45);

        $i23 = i40 * $i32;

        $i24 = $i23 + $z15;

        virtualinvoke $r81.<java.util.BitSet: void set(int)>($i24);

        i40 = i40 + 1;

        goto label20;

     label23:
        i41 = 2;

     label24:
        $z0 = virtualinvoke $r80.<java.util.LinkedList: boolean isEmpty()>();

        if $z0 != 0 goto label44;

        $r15 = virtualinvoke $r80.<java.util.LinkedList: java.lang.Object removeFirst()>();

        r88 = (org.apache.lucene.util.automaton.MinimizationOperations$IntPair) $r15;

        i42 = r88.<org.apache.lucene.util.automaton.MinimizationOperations$IntPair: int n1>;

        i43 = r88.<org.apache.lucene.util.automaton.MinimizationOperations$IntPair: int n2>;

        $i9 = i43 * $i32;

        $i10 = $i9 + i42;

        virtualinvoke $r81.<java.util.BitSet: void clear(int)>($i10);

        $r16 = $r78[i42];

        $r17 = $r16[i43];

        r89 = $r17.<org.apache.lucene.util.automaton.MinimizationOperations$StateList: org.apache.lucene.util.automaton.MinimizationOperations$StateListNode first>;

     label25:
        if r89 == null goto label29;

        $r36 = r89.<org.apache.lucene.util.automaton.MinimizationOperations$StateListNode: org.apache.lucene.util.automaton.State q>;

        $i20 = $r36.<org.apache.lucene.util.automaton.State: int number>;

        $r37 = $r72[$i20];

        r90 = $r37[i43];

        if r90 == null goto label28;

        $r38 = virtualinvoke r90.<java.util.ArrayList: java.util.Iterator iterator()>();

     label26:
        $z7 = interfaceinvoke $r38.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label28;

        $r39 = interfaceinvoke $r38.<java.util.Iterator: java.lang.Object next()>();

        r91 = (org.apache.lucene.util.automaton.State) $r39;

        i44 = r91.<org.apache.lucene.util.automaton.State: int number>;

        $z8 = virtualinvoke $r82.<java.util.BitSet: boolean get(int)>(i44);

        if $z8 != 0 goto label27;

        virtualinvoke $r82.<java.util.BitSet: void set(int)>(i44);

        i45 = $r77[i44];

        $r40 = $r76[i45];

        virtualinvoke $r40.<java.util.ArrayList: boolean add(java.lang.Object)>(r91);

        $z9 = virtualinvoke $r84.<java.util.BitSet: boolean get(int)>(i45);

        if $z9 != 0 goto label27;

        virtualinvoke $r84.<java.util.BitSet: void set(int)>(i45);

        virtualinvoke $r83.<java.util.BitSet: void set(int)>(i45);

     label27:
        goto label26;

     label28:
        r89 = r89.<org.apache.lucene.util.automaton.MinimizationOperations$StateListNode: org.apache.lucene.util.automaton.MinimizationOperations$StateListNode next>;

        goto label25;

     label29:
        i46 = virtualinvoke $r83.<java.util.BitSet: int nextSetBit(int)>(0);

     label30:
        if i46 < 0 goto label43;

        r92 = $r76[i46];

        $i11 = virtualinvoke r92.<java.util.ArrayList: int size()>();

        $r18 = $r74[i46];

        $i12 = virtualinvoke $r18.<java.util.HashSet: int size()>();

        if $i11 >= $i12 goto label40;

        r93 = $r74[i46];

        r94 = $r74[i41];

        $r21 = virtualinvoke r92.<java.util.ArrayList: java.util.Iterator iterator()>();

     label31:
        $z5 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label35;

        $r27 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        r95 = (org.apache.lucene.util.automaton.State) $r27;

        virtualinvoke r93.<java.util.HashSet: boolean remove(java.lang.Object)>(r95);

        virtualinvoke r94.<java.util.HashSet: boolean add(java.lang.Object)>(r95);

        $i17 = r95.<org.apache.lucene.util.automaton.State: int number>;

        $r77[$i17] = i41;

        i47 = 0;

     label32:
        if i47 >= $i31 goto label34;

        $i18 = r95.<org.apache.lucene.util.automaton.State: int number>;

        $r28 = $r79[$i18];

        r96 = $r28[i47];

        if r96 == null goto label33;

        $r31 = r96.<org.apache.lucene.util.automaton.MinimizationOperations$StateListNode: org.apache.lucene.util.automaton.MinimizationOperations$StateList sl>;

        $r29 = $r78[i46];

        $r30 = $r29[i47];

        if $r31 != $r30 goto label33;

        virtualinvoke r96.<org.apache.lucene.util.automaton.MinimizationOperations$StateListNode: void remove()>();

        $i19 = r95.<org.apache.lucene.util.automaton.State: int number>;

        $r34 = $r79[$i19];

        $r32 = $r78[i41];

        $r33 = $r32[i47];

        $r35 = virtualinvoke $r33.<org.apache.lucene.util.automaton.MinimizationOperations$StateList: org.apache.lucene.util.automaton.MinimizationOperations$StateListNode add(org.apache.lucene.util.automaton.State)>(r95);

        $r34[i47] = $r35;

     label33:
        i47 = i47 + 1;

        goto label32;

     label34:
        goto label31;

     label35:
        i48 = 0;

     label36:
        if i48 >= $i31 goto label39;

        $r22 = $r78[i46];

        $r23 = $r22[i48];

        i49 = $r23.<org.apache.lucene.util.automaton.MinimizationOperations$StateList: int size>;

        $r24 = $r78[i41];

        $r25 = $r24[i48];

        i50 = $r25.<org.apache.lucene.util.automaton.MinimizationOperations$StateList: int size>;

        i51 = i48 * $i32;

        $i15 = i51 + i46;

        $z6 = virtualinvoke $r81.<java.util.BitSet: boolean get(int)>($i15);

        if $z6 != 0 goto label37;

        if 0 >= i49 goto label37;

        if i49 > i50 goto label37;

        $i16 = i51 + i46;

        virtualinvoke $r81.<java.util.BitSet: void set(int)>($i16);

        $r26 = new org.apache.lucene.util.automaton.MinimizationOperations$IntPair;

        specialinvoke $r26.<org.apache.lucene.util.automaton.MinimizationOperations$IntPair: void <init>(int,int)>(i46, i48);

        virtualinvoke $r80.<java.util.LinkedList: boolean add(java.lang.Object)>($r26);

        goto label38;

     label37:
        $i52 = i51 + i41;

        virtualinvoke $r81.<java.util.BitSet: void set(int)>($i52);

        $r97 = new org.apache.lucene.util.automaton.MinimizationOperations$IntPair;

        specialinvoke $r97.<org.apache.lucene.util.automaton.MinimizationOperations$IntPair: void <init>(int,int)>(i41, i48);

        virtualinvoke $r80.<java.util.LinkedList: boolean add(java.lang.Object)>($r97);

     label38:
        i48 = i48 + 1;

        goto label36;

     label39:
        i41 = i41 + 1;

     label40:
        virtualinvoke $r84.<java.util.BitSet: void clear(int)>(i46);

        $r19 = virtualinvoke r92.<java.util.ArrayList: java.util.Iterator iterator()>();

     label41:
        $z14 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z14 == 0 goto label42;

        $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r98 = (org.apache.lucene.util.automaton.State) $r20;

        $i14 = r98.<org.apache.lucene.util.automaton.State: int number>;

        virtualinvoke $r82.<java.util.BitSet: void clear(int)>($i14);

        goto label41;

     label42:
        virtualinvoke r92.<java.util.ArrayList: void clear()>();

        $i13 = i46 + 1;

        i46 = virtualinvoke $r83.<java.util.BitSet: int nextSetBit(int)>($i13);

        goto label30;

     label43:
        virtualinvoke $r83.<java.util.BitSet: void clear()>();

        goto label24;

     label44:
        r99 = newarray (org.apache.lucene.util.automaton.State)[i41];

        i53 = 0;

     label45:
        $i1 = lengthof r99;

        if i53 >= $i1 goto label49;

        $r10 = new org.apache.lucene.util.automaton.State;

        specialinvoke $r10.<org.apache.lucene.util.automaton.State: void <init>()>();

        r99[i53] = $r10;

        $r11 = $r74[i53];

        $r12 = virtualinvoke $r11.<java.util.HashSet: java.util.Iterator iterator()>();

     label46:
        $z3 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label48;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r100 = (org.apache.lucene.util.automaton.State) $r13;

        $r14 = r0.<org.apache.lucene.util.automaton.Automaton: org.apache.lucene.util.automaton.State initial>;

        if r100 != $r14 goto label47;

        r0.<org.apache.lucene.util.automaton.Automaton: org.apache.lucene.util.automaton.State initial> = $r10;

     label47:
        $z4 = r100.<org.apache.lucene.util.automaton.State: boolean accept>;

        $r10.<org.apache.lucene.util.automaton.State: boolean accept> = $z4;

        $i8 = r100.<org.apache.lucene.util.automaton.State: int number>;

        $r10.<org.apache.lucene.util.automaton.State: int number> = $i8;

        r100.<org.apache.lucene.util.automaton.State: int number> = i53;

        goto label46;

     label48:
        i53 = i53 + 1;

        goto label45;

     label49:
        i54 = 0;

     label50:
        $i2 = lengthof r99;

        if i54 >= $i2 goto label53;

        r101 = r99[i54];

        $i3 = r101.<org.apache.lucene.util.automaton.State: int number>;

        $r2 = $r70[$i3];

        $z1 = $r2.<org.apache.lucene.util.automaton.State: boolean accept>;

        r101.<org.apache.lucene.util.automaton.State: boolean accept> = $z1;

        $i4 = r101.<org.apache.lucene.util.automaton.State: int number>;

        $r3 = $r70[$i4];

        $r4 = virtualinvoke $r3.<org.apache.lucene.util.automaton.State: java.lang.Iterable getTransitions()>();

        $r5 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label51:
        $z2 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label52;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r102 = (org.apache.lucene.util.automaton.Transition) $r6;

        $r7 = new org.apache.lucene.util.automaton.Transition;

        $i7 = r102.<org.apache.lucene.util.automaton.Transition: int min>;

        $i6 = r102.<org.apache.lucene.util.automaton.Transition: int max>;

        $r8 = r102.<org.apache.lucene.util.automaton.Transition: org.apache.lucene.util.automaton.State 'to'>;

        $i5 = $r8.<org.apache.lucene.util.automaton.State: int number>;

        $r9 = r99[$i5];

        specialinvoke $r7.<org.apache.lucene.util.automaton.Transition: void <init>(int,int,org.apache.lucene.util.automaton.State)>($i7, $i6, $r9);

        virtualinvoke r101.<org.apache.lucene.util.automaton.State: void addTransition(org.apache.lucene.util.automaton.Transition)>($r7);

        goto label51;

     label52:
        i54 = i54 + 1;

        goto label50;

     label53:
        virtualinvoke r0.<org.apache.lucene.util.automaton.Automaton: void clearNumberedStates()>();

        virtualinvoke r0.<org.apache.lucene.util.automaton.Automaton: void removeDeadTransitions()>();

        return;
    }
}
