public abstract class org.apache.xmlbeans.impl.soap.AttachmentPart extends java.lang.Object
{

    public void <init>()
    {
        org.apache.xmlbeans.impl.soap.AttachmentPart r0;

        r0 := @this: org.apache.xmlbeans.impl.soap.AttachmentPart;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract int getSize() throws org.apache.xmlbeans.impl.soap.SOAPException;

    public abstract void clearContent();

    public abstract java.lang.Object getContent() throws org.apache.xmlbeans.impl.soap.SOAPException;

    public abstract void setContent(java.lang.Object, java.lang.String);

    public java.lang.String getContentId()
    {
        int $i0;
        org.apache.xmlbeans.impl.soap.AttachmentPart r0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xmlbeans.impl.soap.AttachmentPart;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.soap.AttachmentPart: java.lang.String[] getMimeHeader(java.lang.String)>("Content-Id");

        if $r1 == null goto label1;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        $r2 = $r1[0];

        return $r2;

     label1:
        return null;
    }

    public java.lang.String getContentLocation()
    {
        int $i0;
        org.apache.xmlbeans.impl.soap.AttachmentPart r0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xmlbeans.impl.soap.AttachmentPart;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.soap.AttachmentPart: java.lang.String[] getMimeHeader(java.lang.String)>("Content-Location");

        if $r1 == null goto label1;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        $r2 = $r1[0];

        return $r2;

     label1:
        return null;
    }

    public java.lang.String getContentType()
    {
        int $i0;
        org.apache.xmlbeans.impl.soap.AttachmentPart r0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xmlbeans.impl.soap.AttachmentPart;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.soap.AttachmentPart: java.lang.String[] getMimeHeader(java.lang.String)>("Content-Type");

        if $r1 == null goto label1;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        $r2 = $r1[0];

        return $r2;

     label1:
        return null;
    }

    public void setContentId(java.lang.String)
    {
        org.apache.xmlbeans.impl.soap.AttachmentPart r0;
        java.lang.String r1;

        r0 := @this: org.apache.xmlbeans.impl.soap.AttachmentPart;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xmlbeans.impl.soap.AttachmentPart: void setMimeHeader(java.lang.String,java.lang.String)>("Content-Id", r1);

        return;
    }

    public void setContentLocation(java.lang.String)
    {
        org.apache.xmlbeans.impl.soap.AttachmentPart r0;
        java.lang.String r1;

        r0 := @this: org.apache.xmlbeans.impl.soap.AttachmentPart;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xmlbeans.impl.soap.AttachmentPart: void setMimeHeader(java.lang.String,java.lang.String)>("Content-Location", r1);

        return;
    }

    public void setContentType(java.lang.String)
    {
        org.apache.xmlbeans.impl.soap.AttachmentPart r0;
        java.lang.String r1;

        r0 := @this: org.apache.xmlbeans.impl.soap.AttachmentPart;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xmlbeans.impl.soap.AttachmentPart: void setMimeHeader(java.lang.String,java.lang.String)>("Content-Type", r1);

        return;
    }

    public abstract void removeMimeHeader(java.lang.String);

    public abstract void removeAllMimeHeaders();

    public abstract java.lang.String[] getMimeHeader(java.lang.String);

    public abstract void setMimeHeader(java.lang.String, java.lang.String);

    public abstract void addMimeHeader(java.lang.String, java.lang.String);

    public abstract java.util.Iterator getAllMimeHeaders();

    public abstract java.util.Iterator getMatchingMimeHeaders(java.lang.String[]);

    public abstract java.util.Iterator getNonMatchingMimeHeaders(java.lang.String[]);
}
