public class org.springframework.ejb.access.LocalSlsbInvokerInterceptor extends org.springframework.ejb.access.AbstractSlsbInvokerInterceptor
{
    private volatile boolean homeAsComponent;

    public void <init>()
    {
        org.springframework.ejb.access.LocalSlsbInvokerInterceptor r0;

        r0 := @this: org.springframework.ejb.access.LocalSlsbInvokerInterceptor;

        specialinvoke r0.<org.springframework.ejb.access.AbstractSlsbInvokerInterceptor: void <init>()>();

        r0.<org.springframework.ejb.access.LocalSlsbInvokerInterceptor: boolean homeAsComponent> = 0;

        return;
    }

    public java.lang.Object invokeInContext(org.aopalliance.intercept.MethodInvocation) throws java.lang.Throwable
    {
        javax.naming.NamingException $r28;
        org.aopalliance.intercept.MethodInvocation r2;
        java.lang.reflect.Method $r3, $r8, $r20;
        org.springframework.ejb.access.EjbAccessException $r18, $r29, $r38;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.IllegalAccessException $r17;
        java.lang.reflect.InvocationTargetException $r35;
        java.lang.StringBuilder $r19, $r22, $r23, $r25, $r26, $r30, $r32, $r33, $r39, $r41, $r42, $r44, $r47, $r48;
        javax.ejb.EJBLocalObject $r11, $r14, $r16;
        org.springframework.ejb.access.LocalSlsbInvokerInterceptor r0;
        java.lang.Throwable $r15, $r36;
        java.lang.Object[] $r9, $r12;
        java.lang.String $r6, $r21, $r24, $r27, $r31, $r34, $r40, $r43, $r46, $r49;
        java.lang.Class[] $r7;
        java.lang.Object $r1, $r10, $r13, r50;
        java.lang.Class $r4, $r5;
        org.apache.commons.logging.Log $r37, $r45;

        r0 := @this: org.springframework.ejb.access.LocalSlsbInvokerInterceptor;

        r2 := @parameter0: org.aopalliance.intercept.MethodInvocation;

        r50 = null;

     label01:
        $r1 = virtualinvoke r0.<org.springframework.ejb.access.LocalSlsbInvokerInterceptor: java.lang.Object getSessionBeanInstance()>();

        r50 = $r1;

        $r3 = interfaceinvoke r2.<org.aopalliance.intercept.MethodInvocation: java.lang.reflect.Method getMethod()>();

        $r4 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $z0 = virtualinvoke $r4.<java.lang.Class: boolean isInstance(java.lang.Object)>($r1);

        if $z0 == 0 goto label04;

        $r12 = interfaceinvoke r2.<org.aopalliance.intercept.MethodInvocation: java.lang.Object[] getArguments()>();

        $r13 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, $r12);

     label02:
        $z2 = $r1 instanceof javax.ejb.EJBLocalObject;

        if $z2 == 0 goto label03;

        $r14 = (javax.ejb.EJBLocalObject) $r1;

        virtualinvoke r0.<org.springframework.ejb.access.LocalSlsbInvokerInterceptor: void releaseSessionBeanInstance(javax.ejb.EJBLocalObject)>($r14);

     label03:
        return $r13;

     label04:
        $r5 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.String getName()>();

        $r7 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r8 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r6, $r7);

        $r9 = interfaceinvoke r2.<org.aopalliance.intercept.MethodInvocation: java.lang.Object[] getArguments()>();

        $r10 = virtualinvoke $r8.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, $r9);

     label05:
        $z1 = $r1 instanceof javax.ejb.EJBLocalObject;

        if $z1 == 0 goto label06;

        $r11 = (javax.ejb.EJBLocalObject) $r1;

        virtualinvoke r0.<org.springframework.ejb.access.LocalSlsbInvokerInterceptor: void releaseSessionBeanInstance(javax.ejb.EJBLocalObject)>($r11);

     label06:
        return $r10;

     label07:
        $r35 := @caughtexception;

        $r36 = virtualinvoke $r35.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        $r37 = r0.<org.springframework.ejb.access.LocalSlsbInvokerInterceptor: org.apache.commons.logging.Log logger>;

        $z4 = interfaceinvoke $r37.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z4 == 0 goto label08;

        $r45 = r0.<org.springframework.ejb.access.LocalSlsbInvokerInterceptor: org.apache.commons.logging.Log logger>;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>(java.lang.String)>("Method of local EJB [");

        $r46 = virtualinvoke r0.<org.springframework.ejb.access.LocalSlsbInvokerInterceptor: java.lang.String getJndiName()>();

        $r47 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] threw exception");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r45.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>($r49, $r36);

     label08:
        $z5 = $r36 instanceof javax.ejb.CreateException;

        if $z5 == 0 goto label09;

        $r38 = new org.springframework.ejb.access.EjbAccessException;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not create local EJB [");

        $r40 = virtualinvoke r0.<org.springframework.ejb.access.LocalSlsbInvokerInterceptor: java.lang.String getJndiName()>();

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r38.<org.springframework.ejb.access.EjbAccessException: void <init>(java.lang.String,java.lang.Throwable)>($r43, $r36);

        throw $r38;

     label09:
        throw $r36;

     label10:
        $r28 := @caughtexception;

        $r29 = new org.springframework.ejb.access.EjbAccessException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to locate local EJB [");

        $r31 = virtualinvoke r0.<org.springframework.ejb.access.LocalSlsbInvokerInterceptor: java.lang.String getJndiName()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<org.springframework.ejb.access.EjbAccessException: void <init>(java.lang.String,java.lang.Throwable)>($r34, $r28);

        throw $r29;

     label11:
        $r17 := @caughtexception;

        $r18 = new org.springframework.ejb.access.EjbAccessException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not access method [");

        $r20 = interfaceinvoke r2.<org.aopalliance.intercept.MethodInvocation: java.lang.reflect.Method getMethod()>();

        $r21 = virtualinvoke $r20.<java.lang.reflect.Method: java.lang.String getName()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] of local EJB [");

        $r24 = virtualinvoke r0.<org.springframework.ejb.access.LocalSlsbInvokerInterceptor: java.lang.String getJndiName()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<org.springframework.ejb.access.EjbAccessException: void <init>(java.lang.String,java.lang.Throwable)>($r27, $r17);

        throw $r18;

     label12:
        $r15 := @caughtexception;

        $z3 = r50 instanceof javax.ejb.EJBLocalObject;

        if $z3 == 0 goto label13;

        $r16 = (javax.ejb.EJBLocalObject) r50;

        virtualinvoke r0.<org.springframework.ejb.access.LocalSlsbInvokerInterceptor: void releaseSessionBeanInstance(javax.ejb.EJBLocalObject)>($r16);

     label13:
        throw $r15;

        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label07;
        catch java.lang.reflect.InvocationTargetException from label04 to label05 with label07;
        catch javax.naming.NamingException from label01 to label02 with label10;
        catch javax.naming.NamingException from label04 to label05 with label10;
        catch java.lang.IllegalAccessException from label01 to label02 with label11;
        catch java.lang.IllegalAccessException from label04 to label05 with label11;
        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label07 to label12 with label12;
    }

    protected java.lang.reflect.Method getCreateMethod(java.lang.Object) throws org.springframework.ejb.access.EjbAccessException
    {
        java.lang.Object r1;
        java.lang.reflect.Method $r2;
        org.springframework.ejb.access.LocalSlsbInvokerInterceptor r0;
        boolean $z0, $z1;

        r0 := @this: org.springframework.ejb.access.LocalSlsbInvokerInterceptor;

        r1 := @parameter0: java.lang.Object;

        $z0 = r0.<org.springframework.ejb.access.LocalSlsbInvokerInterceptor: boolean homeAsComponent>;

        if $z0 == 0 goto label1;

        return null;

     label1:
        $z1 = r1 instanceof javax.ejb.EJBLocalHome;

        if $z1 != 0 goto label2;

        r0.<org.springframework.ejb.access.LocalSlsbInvokerInterceptor: boolean homeAsComponent> = 1;

        return null;

     label2:
        $r2 = specialinvoke r0.<org.springframework.ejb.access.AbstractSlsbInvokerInterceptor: java.lang.reflect.Method getCreateMethod(java.lang.Object)>(r1);

        return $r2;
    }

    protected java.lang.Object getSessionBeanInstance() throws javax.naming.NamingException, java.lang.reflect.InvocationTargetException
    {
        java.lang.Object $r1;
        org.springframework.ejb.access.LocalSlsbInvokerInterceptor r0;

        r0 := @this: org.springframework.ejb.access.LocalSlsbInvokerInterceptor;

        $r1 = virtualinvoke r0.<org.springframework.ejb.access.LocalSlsbInvokerInterceptor: java.lang.Object newSessionBeanInstance()>();

        return $r1;
    }

    protected void releaseSessionBeanInstance(javax.ejb.EJBLocalObject)
    {
        javax.ejb.EJBLocalObject r1;
        org.springframework.ejb.access.LocalSlsbInvokerInterceptor r0;

        r0 := @this: org.springframework.ejb.access.LocalSlsbInvokerInterceptor;

        r1 := @parameter0: javax.ejb.EJBLocalObject;

        virtualinvoke r0.<org.springframework.ejb.access.LocalSlsbInvokerInterceptor: void removeSessionBeanInstance(javax.ejb.EJBLocalObject)>(r1);

        return;
    }

    protected java.lang.Object newSessionBeanInstance() throws javax.naming.NamingException, java.lang.reflect.InvocationTargetException
    {
        org.apache.commons.logging.Log $r1, $r3, $r5, $r8;
        java.lang.Object $r2;
        java.lang.StringBuilder $r4, $r6;
        java.lang.String $r7;
        org.springframework.ejb.access.LocalSlsbInvokerInterceptor r0;
        boolean $z0, $z1;

        r0 := @this: org.springframework.ejb.access.LocalSlsbInvokerInterceptor;

        $r1 = r0.<org.springframework.ejb.access.LocalSlsbInvokerInterceptor: org.apache.commons.logging.Log logger>;

        $z0 = interfaceinvoke $r1.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r8 = r0.<org.springframework.ejb.access.LocalSlsbInvokerInterceptor: org.apache.commons.logging.Log logger>;

        interfaceinvoke $r8.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Trying to create reference to local EJB");

     label1:
        $r2 = virtualinvoke r0.<org.springframework.ejb.access.LocalSlsbInvokerInterceptor: java.lang.Object create()>();

        $r3 = r0.<org.springframework.ejb.access.LocalSlsbInvokerInterceptor: org.apache.commons.logging.Log logger>;

        $z1 = interfaceinvoke $r3.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label2;

        $r5 = r0.<org.springframework.ejb.access.LocalSlsbInvokerInterceptor: org.apache.commons.logging.Log logger>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Obtained reference to local EJB: ");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r7);

     label2:
        return $r2;
    }

    protected void removeSessionBeanInstance(javax.ejb.EJBLocalObject)
    {
        java.lang.Throwable $r2;
        org.apache.commons.logging.Log $r3;
        javax.ejb.EJBLocalObject r0;
        org.springframework.ejb.access.LocalSlsbInvokerInterceptor r1;
        boolean $z0;

        r1 := @this: org.springframework.ejb.access.LocalSlsbInvokerInterceptor;

        r0 := @parameter0: javax.ejb.EJBLocalObject;

        if r0 == null goto label4;

        $z0 = r1.<org.springframework.ejb.access.LocalSlsbInvokerInterceptor: boolean homeAsComponent>;

        if $z0 != 0 goto label4;

     label1:
        interfaceinvoke r0.<javax.ejb.EJBLocalObject: void remove()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = r1.<org.springframework.ejb.access.LocalSlsbInvokerInterceptor: org.apache.commons.logging.Log logger>;

        interfaceinvoke $r3.<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>("Could not invoke \'remove\' on local EJB proxy", $r2);

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
