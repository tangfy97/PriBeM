public class org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl extends java.lang.Object implements org.waveprotocol.box.common.comms.ProtocolSubmitResponse
{
    private java.lang.Integer operationsApplied;
    private java.lang.String errorMessage;
    private org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl hashedVersionAfterApplication;

    public void <init>()
    {
        org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl r0;

        r0 := @this: org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(org.waveprotocol.box.common.comms.ProtocolSubmitResponse)
    {
        org.waveprotocol.box.common.comms.ProtocolSubmitResponse r1;
        org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl r0;

        r0 := @this: org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl;

        r1 := @parameter0: org.waveprotocol.box.common.comms.ProtocolSubmitResponse;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl: void copyFrom(org.waveprotocol.box.common.comms.ProtocolSubmitResponse)>(r1);

        return;
    }

    public void copyFrom(org.waveprotocol.box.common.comms.ProtocolSubmitResponse)
    {
        org.waveprotocol.box.common.comms.ProtocolSubmitResponse r1;
        org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl r0;
        int $i0;
        org.waveprotocol.wave.federation.ProtocolHashedVersion $r2;
        java.lang.String $r3;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl;

        r1 := @parameter0: org.waveprotocol.box.common.comms.ProtocolSubmitResponse;

        $i0 = interfaceinvoke r1.<org.waveprotocol.box.common.comms.ProtocolSubmitResponse: int getOperationsApplied()>();

        virtualinvoke r0.<org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl: void setOperationsApplied(int)>($i0);

        $z0 = interfaceinvoke r1.<org.waveprotocol.box.common.comms.ProtocolSubmitResponse: boolean hasErrorMessage()>();

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke r1.<org.waveprotocol.box.common.comms.ProtocolSubmitResponse: java.lang.String getErrorMessage()>();

        virtualinvoke r0.<org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl: void setErrorMessage(java.lang.String)>($r3);

        goto label2;

     label1:
        virtualinvoke r0.<org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl: void clearErrorMessage()>();

     label2:
        $z1 = interfaceinvoke r1.<org.waveprotocol.box.common.comms.ProtocolSubmitResponse: boolean hasHashedVersionAfterApplication()>();

        if $z1 == 0 goto label3;

        $r2 = interfaceinvoke r1.<org.waveprotocol.box.common.comms.ProtocolSubmitResponse: org.waveprotocol.wave.federation.ProtocolHashedVersion getHashedVersionAfterApplication()>();

        virtualinvoke r0.<org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl: void setHashedVersionAfterApplication(org.waveprotocol.wave.federation.ProtocolHashedVersion)>($r2);

        goto label4;

     label3:
        virtualinvoke r0.<org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl: void clearHashedVersionAfterApplication()>();

     label4:
        return;
    }

    public int getOperationsApplied()
    {
        int $i0;
        org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl r0;
        java.lang.Integer $r1;

        r0 := @this: org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl;

        $r1 = r0.<org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl: java.lang.Integer operationsApplied>;

        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public void setOperationsApplied(int)
    {
        int i0;
        org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl r0;
        java.lang.Integer $r1;

        r0 := @this: org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl;

        i0 := @parameter0: int;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r0.<org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl: java.lang.Integer operationsApplied> = $r1;

        return;
    }

    public boolean hasErrorMessage()
    {
        java.lang.String $r1;
        org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl;

        $r1 = r0.<org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl: java.lang.String errorMessage>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void clearErrorMessage()
    {
        org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl r0;

        r0 := @this: org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl;

        r0.<org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl: java.lang.String errorMessage> = null;

        return;
    }

    public java.lang.String getErrorMessage()
    {
        java.lang.String $r1;
        org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl r0;

        r0 := @this: org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl;

        $r1 = r0.<org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl: java.lang.String errorMessage>;

        return $r1;
    }

    public void setErrorMessage(java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl r0;

        r0 := @this: org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl;

        r1 := @parameter0: java.lang.String;

        r0.<org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl: java.lang.String errorMessage> = r1;

        return;
    }

    public boolean hasHashedVersionAfterApplication()
    {
        org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl $r1;
        org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl;

        $r1 = r0.<org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl: org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl hashedVersionAfterApplication>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void clearHashedVersionAfterApplication()
    {
        org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl r0;

        r0 := @this: org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl;

        r0.<org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl: org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl hashedVersionAfterApplication> = null;

        return;
    }

    public org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl getHashedVersionAfterApplication()
    {
        org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl $r0, $r2;
        org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl r1;

        r1 := @this: org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl;

        $r0 = new org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl;

        $r2 = r1.<org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl: org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl hashedVersionAfterApplication>;

        specialinvoke $r0.<org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl: void <init>(org.waveprotocol.wave.federation.ProtocolHashedVersion)>($r2);

        return $r0;
    }

    public void setHashedVersionAfterApplication(org.waveprotocol.wave.federation.ProtocolHashedVersion)
    {
        org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl $r1;
        org.waveprotocol.wave.federation.ProtocolHashedVersion r2;
        org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl r0;

        r0 := @this: org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl;

        r2 := @parameter0: org.waveprotocol.wave.federation.ProtocolHashedVersion;

        $r1 = new org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl;

        specialinvoke $r1.<org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl: void <init>(org.waveprotocol.wave.federation.ProtocolHashedVersion)>(r2);

        r0.<org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl: org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl hashedVersionAfterApplication> = $r1;

        return;
    }

    protected void reset()
    {
        org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl r0;

        r0 := @this: org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl;

        r0.<org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl: java.lang.Integer operationsApplied> = null;

        r0.<org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl: java.lang.String errorMessage> = null;

        r0.<org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl: org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl hashedVersionAfterApplication> = null;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl r1;
        java.lang.Object r0;
        boolean $z0, $z1, $z2;

        r1 := @this: org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl;

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r1.<org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl: boolean isEqualTo(java.lang.Object)>(r0);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean isEqualTo(java.lang.Object)
    {
        org.waveprotocol.box.common.comms.ProtocolSubmitResponse $r2;
        org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl r1;
        java.lang.Object r0;
        boolean $z0, $z1;

        r1 := @this: org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof org.waveprotocol.box.common.comms.ProtocolSubmitResponse;

        if $z0 == 0 goto label2;

        $r2 = (org.waveprotocol.box.common.comms.ProtocolSubmitResponse) r0;

        $z1 = staticinvoke <org.waveprotocol.box.common.comms.ProtocolSubmitResponseUtil: boolean isEqual(org.waveprotocol.box.common.comms.ProtocolSubmitResponse,org.waveprotocol.box.common.comms.ProtocolSubmitResponse)>(r1, $r2);

        return $z1;

     label2:
        return 0;
    }

    public int hashCode()
    {
        int $i0;
        org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl r0;

        r0 := @this: org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl;

        $i0 = staticinvoke <org.waveprotocol.box.common.comms.ProtocolSubmitResponseUtil: int getHashCode(org.waveprotocol.box.common.comms.ProtocolSubmitResponse)>(r0);

        return $i0;
    }

    public volatile org.waveprotocol.wave.federation.ProtocolHashedVersion getHashedVersionAfterApplication()
    {
        org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl $r1;
        org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl r0;

        r0 := @this: org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.common.comms.impl.ProtocolSubmitResponseImpl: org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl getHashedVersionAfterApplication()>();

        return $r1;
    }
}
