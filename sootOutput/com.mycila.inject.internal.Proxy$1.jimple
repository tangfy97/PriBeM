final class com.mycila.inject.internal.Proxy$1 extends java.lang.Object implements com.mycila.inject.internal.WeakCache$Provider
{

    void <init>()
    {
        com.mycila.inject.internal.Proxy$1 r0;

        r0 := @this: com.mycila.inject.internal.Proxy$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.mycila.inject.internal.MethodInvoker get(java.lang.reflect.Method)
    {
        int $i0, $i1;
        java.lang.reflect.Method r0;
        boolean $z0, $z1, $z2, $z3;
        com.mycila.inject.internal.BytecodeGen$Visibility $r4;
        com.mycila.inject.internal.cglib.core.CodeGenerationException $r8;
        com.mycila.inject.internal.cglib.reflect.FastClass $r5;
        com.mycila.inject.internal.cglib.reflect.FastMethod $r6;
        com.mycila.inject.internal.Proxy$1$2 $r9;
        com.mycila.inject.internal.Proxy$1$1 $r7;
        com.mycila.inject.internal.Proxy$1 r1;
        java.lang.Class $r2, $r3;

        r1 := @this: com.mycila.inject.internal.Proxy$1;

        r0 := @parameter0: java.lang.reflect.Method;

        $i0 = virtualinvoke r0.<java.lang.reflect.Method: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isPrivate(int)>($i0);

        if $z0 != 0 goto label4;

        $z2 = staticinvoke <java.lang.reflect.Modifier: boolean isProtected(int)>($i0);

        if $z2 != 0 goto label4;

     label1:
        $r3 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $r4 = staticinvoke <com.mycila.inject.internal.BytecodeGen$Visibility: com.mycila.inject.internal.BytecodeGen$Visibility forMember(java.lang.reflect.Member)>(r0);

        $r5 = staticinvoke <com.mycila.inject.internal.BytecodeGen: com.mycila.inject.internal.cglib.reflect.FastClass newFastClass(java.lang.Class,com.mycila.inject.internal.BytecodeGen$Visibility)>($r3, $r4);

        $r6 = virtualinvoke $r5.<com.mycila.inject.internal.cglib.reflect.FastClass: com.mycila.inject.internal.cglib.reflect.FastMethod getMethod(java.lang.reflect.Method)>(r0);

        $r7 = new com.mycila.inject.internal.Proxy$1$1;

        specialinvoke $r7.<com.mycila.inject.internal.Proxy$1$1: void <init>(com.mycila.inject.internal.Proxy$1,com.mycila.inject.internal.cglib.reflect.FastMethod)>(r1, $r6);

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

     label4:
        $z3 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i0);

        if $z3 == 0 goto label5;

        $r2 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $i1 = virtualinvoke $r2.<java.lang.Class: int getModifiers()>();

        $z1 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i1);

        if $z1 != 0 goto label6;

     label5:
        virtualinvoke r0.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label6:
        $r9 = new com.mycila.inject.internal.Proxy$1$2;

        specialinvoke $r9.<com.mycila.inject.internal.Proxy$1$2: void <init>(com.mycila.inject.internal.Proxy$1,java.lang.reflect.Method)>(r1, r0);

        return $r9;

        catch com.mycila.inject.internal.cglib.core.CodeGenerationException from label1 to label2 with label3;
    }

    public volatile java.lang.Object get(java.lang.Object)
    {
        com.mycila.inject.internal.MethodInvoker $r3;
        com.mycila.inject.internal.Proxy$1 r0;
        java.lang.Object r1;
        java.lang.reflect.Method $r2;

        r0 := @this: com.mycila.inject.internal.Proxy$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.reflect.Method) r1;

        $r3 = virtualinvoke r0.<com.mycila.inject.internal.Proxy$1: com.mycila.inject.internal.MethodInvoker get(java.lang.reflect.Method)>($r2);

        return $r3;
    }
}
