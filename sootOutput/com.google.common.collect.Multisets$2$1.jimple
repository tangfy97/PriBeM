class com.google.common.collect.Multisets$2$1 extends java.util.AbstractSet
{
    final com.google.common.collect.Multisets$2 this$0;

    void <init>(com.google.common.collect.Multisets$2)
    {
        com.google.common.collect.Multisets$2$1 r0;
        com.google.common.collect.Multisets$2 r1;

        r0 := @this: com.google.common.collect.Multisets$2$1;

        r1 := @parameter0: com.google.common.collect.Multisets$2;

        r0.<com.google.common.collect.Multisets$2$1: com.google.common.collect.Multisets$2 this$0> = r1;

        specialinvoke r0.<java.util.AbstractSet: void <init>()>();

        return;
    }

    public java.util.Iterator iterator()
    {
        java.util.Iterator $r4;
        com.google.common.collect.Multisets$2$1 r0;
        com.google.common.collect.Multiset $r2;
        java.util.Set $r3;
        com.google.common.collect.Multisets$2$1$1 $r5;
        com.google.common.collect.Multisets$2 $r1;

        r0 := @this: com.google.common.collect.Multisets$2$1;

        $r1 = r0.<com.google.common.collect.Multisets$2$1: com.google.common.collect.Multisets$2 this$0>;

        $r2 = $r1.<com.google.common.collect.Multisets$2: com.google.common.collect.Multiset val$multiset1>;

        $r3 = interfaceinvoke $r2.<com.google.common.collect.Multiset: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        $r5 = new com.google.common.collect.Multisets$2$1$1;

        specialinvoke $r5.<com.google.common.collect.Multisets$2$1$1: void <init>(com.google.common.collect.Multisets$2$1,java.util.Iterator)>(r0, $r4);

        return $r5;
    }

    public int size()
    {
        com.google.common.collect.Multisets$2$1 r0;
        int $i0;
        java.util.Set $r2;
        com.google.common.collect.Multisets$2 $r1;

        r0 := @this: com.google.common.collect.Multisets$2$1;

        $r1 = r0.<com.google.common.collect.Multisets$2$1: com.google.common.collect.Multisets$2 this$0>;

        $r2 = virtualinvoke $r1.<com.google.common.collect.Multisets$2: java.util.Set elementSet()>();

        $i0 = interfaceinvoke $r2.<java.util.Set: int size()>();

        return $i0;
    }

    public boolean contains(java.lang.Object)
    {
        com.google.common.collect.Multiset$Entry r1;
        com.google.common.collect.Multisets$2$1 r2;
        int $i0, $i1;
        java.lang.Object r0, $r4;
        boolean $z0, $z1;
        com.google.common.collect.Multisets$2 $r3;

        r2 := @this: com.google.common.collect.Multisets$2$1;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof com.google.common.collect.Multiset$Entry;

        if $z0 == 0 goto label3;

        r1 = (com.google.common.collect.Multiset$Entry) r0;

        $i0 = interfaceinvoke r1.<com.google.common.collect.Multiset$Entry: int getCount()>();

        if $i0 <= 0 goto label1;

        $r3 = r2.<com.google.common.collect.Multisets$2$1: com.google.common.collect.Multisets$2 this$0>;

        $r4 = interfaceinvoke r1.<com.google.common.collect.Multiset$Entry: java.lang.Object getElement()>();

        $i1 = virtualinvoke $r3.<com.google.common.collect.Multisets$2: int count(java.lang.Object)>($r4);

        if $i1 != $i0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        return 0;
    }

    public boolean isEmpty()
    {
        com.google.common.collect.Multisets$2$1 r0;
        java.util.Set $r2;
        com.google.common.collect.Multisets$2 $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.Multisets$2$1;

        $r1 = r0.<com.google.common.collect.Multisets$2$1: com.google.common.collect.Multisets$2 this$0>;

        $r2 = virtualinvoke $r1.<com.google.common.collect.Multisets$2: java.util.Set elementSet()>();

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean isEmpty()>();

        return $z0;
    }
}
