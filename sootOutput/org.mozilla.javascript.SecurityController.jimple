public abstract class org.mozilla.javascript.SecurityController extends java.lang.Object
{
    private static org.mozilla.javascript.SecurityController global;

    public void <init>()
    {
        org.mozilla.javascript.SecurityController r0;

        r0 := @this: org.mozilla.javascript.SecurityController;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static org.mozilla.javascript.SecurityController global()
    {
        org.mozilla.javascript.SecurityController $r0;

        $r0 = <org.mozilla.javascript.SecurityController: org.mozilla.javascript.SecurityController global>;

        return $r0;
    }

    public static boolean hasGlobal()
    {
        org.mozilla.javascript.SecurityController $r0;
        boolean $z0;

        $r0 = <org.mozilla.javascript.SecurityController: org.mozilla.javascript.SecurityController global>;

        if $r0 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static void initGlobal(org.mozilla.javascript.SecurityController)
    {
        org.mozilla.javascript.SecurityController r0, $r1;
        java.lang.SecurityException $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @parameter0: org.mozilla.javascript.SecurityController;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label1:
        $r1 = <org.mozilla.javascript.SecurityController: org.mozilla.javascript.SecurityController global>;

        if $r1 == null goto label2;

        $r2 = new java.lang.SecurityException;

        specialinvoke $r2.<java.lang.SecurityException: void <init>(java.lang.String)>("Cannot overwrite already installed global SecurityController");

        throw $r2;

     label2:
        <org.mozilla.javascript.SecurityController: org.mozilla.javascript.SecurityController global> = r0;

        return;
    }

    public abstract org.mozilla.javascript.GeneratedClassLoader createClassLoader(java.lang.ClassLoader, java.lang.Object);

    public static org.mozilla.javascript.GeneratedClassLoader createLoader(java.lang.ClassLoader, java.lang.Object)
    {
        org.mozilla.javascript.Context $r0;
        org.mozilla.javascript.SecurityController $r1;
        org.mozilla.javascript.GeneratedClassLoader r5;
        java.lang.Object r2, $r3;
        java.lang.ClassLoader r4;

        r4 := @parameter0: java.lang.ClassLoader;

        r2 := @parameter1: java.lang.Object;

        $r0 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.Context getContext()>();

        if r4 != null goto label1;

        r4 = virtualinvoke $r0.<org.mozilla.javascript.Context: java.lang.ClassLoader getApplicationClassLoader()>();

     label1:
        $r1 = virtualinvoke $r0.<org.mozilla.javascript.Context: org.mozilla.javascript.SecurityController getSecurityController()>();

        if $r1 != null goto label2;

        r5 = virtualinvoke $r0.<org.mozilla.javascript.Context: org.mozilla.javascript.GeneratedClassLoader createClassLoader(java.lang.ClassLoader)>(r4);

        goto label3;

     label2:
        $r3 = virtualinvoke $r1.<org.mozilla.javascript.SecurityController: java.lang.Object getDynamicSecurityDomain(java.lang.Object)>(r2);

        r5 = virtualinvoke $r1.<org.mozilla.javascript.SecurityController: org.mozilla.javascript.GeneratedClassLoader createClassLoader(java.lang.ClassLoader,java.lang.Object)>(r4, $r3);

     label3:
        return r5;
    }

    public abstract java.lang.Object getDynamicSecurityDomain(java.lang.Object);

    public java.lang.Object callWithDomain(java.lang.Object, org.mozilla.javascript.Context, org.mozilla.javascript.Callable, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        org.mozilla.javascript.SecurityController$1 $r3;
        java.lang.Object[] r6;
        org.mozilla.javascript.SecurityController r0;
        org.mozilla.javascript.Context r1;
        org.mozilla.javascript.Callable r4;
        org.mozilla.javascript.Scriptable r2, r5;
        java.lang.Object r7, $r8;

        r0 := @this: org.mozilla.javascript.SecurityController;

        r7 := @parameter0: java.lang.Object;

        r1 := @parameter1: org.mozilla.javascript.Context;

        r4 := @parameter2: org.mozilla.javascript.Callable;

        r2 := @parameter3: org.mozilla.javascript.Scriptable;

        r5 := @parameter4: org.mozilla.javascript.Scriptable;

        r6 := @parameter5: java.lang.Object[];

        $r3 = new org.mozilla.javascript.SecurityController$1;

        specialinvoke $r3.<org.mozilla.javascript.SecurityController$1: void <init>(org.mozilla.javascript.SecurityController,org.mozilla.javascript.Callable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r0, r4, r5, r6);

        $r8 = virtualinvoke r0.<org.mozilla.javascript.SecurityController: java.lang.Object execWithDomain(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Script,java.lang.Object)>(r1, r2, $r3, r7);

        return $r8;
    }

    public java.lang.Object execWithDomain(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Script, java.lang.Object)
    {
        java.lang.IllegalStateException $r0;
        org.mozilla.javascript.Scriptable r3;
        org.mozilla.javascript.SecurityController r1;
        org.mozilla.javascript.Context r2;
        org.mozilla.javascript.Script r4;
        java.lang.Object r5;

        r1 := @this: org.mozilla.javascript.SecurityController;

        r2 := @parameter0: org.mozilla.javascript.Context;

        r3 := @parameter1: org.mozilla.javascript.Scriptable;

        r4 := @parameter2: org.mozilla.javascript.Script;

        r5 := @parameter3: java.lang.Object;

        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("callWithDomain should be overridden");

        throw $r0;
    }
}
