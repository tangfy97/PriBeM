public class org.apache.xmlbeans.impl.config.PrePostExtensionImpl extends java.lang.Object implements org.apache.xmlbeans.PrePostExtension
{
    private static org.apache.xmlbeans.impl.jam.JClass[] PARAMTYPES_PREPOST;
    private static final java.lang.String[] PARAMTYPES_STRING;
    private static final java.lang.String SIGNATURE;
    private org.apache.xmlbeans.impl.config.NameSet _xbeanSet;
    private org.apache.xmlbeans.impl.jam.JClass _delegateToClass;
    private java.lang.String _delegateToClassName;
    private org.apache.xmlbeans.impl.jam.JMethod _preSet;
    private org.apache.xmlbeans.impl.jam.JMethod _postSet;
    static final boolean $assertionsDisabled;
    static java.lang.Class class$org$apache$xmlbeans$impl$config$PrePostExtensionImpl;

    public void <init>()
    {
        org.apache.xmlbeans.impl.config.PrePostExtensionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.config.PrePostExtensionImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static org.apache.xmlbeans.impl.config.PrePostExtensionImpl newInstance(org.apache.xmlbeans.impl.jam.JamClassLoader, org.apache.xmlbeans.impl.config.NameSet, org.apache.xmlbeans.impl.xb.xmlconfig.Extensionconfig$PrePostSet)
    {
        org.apache.xmlbeans.impl.config.NameSet r2;
        org.apache.xmlbeans.impl.config.PrePostExtensionImpl $r1;
        org.apache.xmlbeans.impl.jam.JClass $r6, $r7;
        org.apache.xmlbeans.impl.xb.xmlconfig.Extensionconfig$PrePostSet r0;
        org.apache.xmlbeans.impl.jam.JamClassLoader r4;
        java.lang.StringBuffer $r8, $r9, $r11, $r12;
        java.lang.String $r3, $r5, $r10, $r13;
        boolean $z0;

        r4 := @parameter0: org.apache.xmlbeans.impl.jam.JamClassLoader;

        r2 := @parameter1: org.apache.xmlbeans.impl.config.NameSet;

        r0 := @parameter2: org.apache.xmlbeans.impl.xb.xmlconfig.Extensionconfig$PrePostSet;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new org.apache.xmlbeans.impl.config.PrePostExtensionImpl;

        specialinvoke $r1.<org.apache.xmlbeans.impl.config.PrePostExtensionImpl: void <init>()>();

        $r1.<org.apache.xmlbeans.impl.config.PrePostExtensionImpl: org.apache.xmlbeans.impl.config.NameSet _xbeanSet> = r2;

        $r3 = interfaceinvoke r0.<org.apache.xmlbeans.impl.xb.xmlconfig.Extensionconfig$PrePostSet: java.lang.String getStaticHandler()>();

        $r1.<org.apache.xmlbeans.impl.config.PrePostExtensionImpl: java.lang.String _delegateToClassName> = $r3;

        $r5 = $r1.<org.apache.xmlbeans.impl.config.PrePostExtensionImpl: java.lang.String _delegateToClassName>;

        $r6 = staticinvoke <org.apache.xmlbeans.impl.config.InterfaceExtensionImpl: org.apache.xmlbeans.impl.jam.JClass validateClass(org.apache.xmlbeans.impl.jam.JamClassLoader,java.lang.String,org.apache.xmlbeans.XmlObject)>(r4, $r5, r0);

        $r1.<org.apache.xmlbeans.impl.config.PrePostExtensionImpl: org.apache.xmlbeans.impl.jam.JClass _delegateToClass> = $r6;

        $r7 = $r1.<org.apache.xmlbeans.impl.config.PrePostExtensionImpl: org.apache.xmlbeans.impl.jam.JClass _delegateToClass>;

        if $r7 != null goto label2;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Handler class \'");

        $r10 = interfaceinvoke r0.<org.apache.xmlbeans.impl.xb.xmlconfig.Extensionconfig$PrePostSet: java.lang.String getStaticHandler()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' not found on classpath, skip validation.");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.xmlbeans.impl.config.BindingConfigImpl: void warning(java.lang.String,org.apache.xmlbeans.XmlObject)>($r13, r0);

        return $r1;

     label2:
        $z0 = specialinvoke $r1.<org.apache.xmlbeans.impl.config.PrePostExtensionImpl: boolean lookAfterPreAndPost(org.apache.xmlbeans.impl.jam.JamClassLoader,org.apache.xmlbeans.XmlObject)>(r4, r0);

        if $z0 != 0 goto label3;

        return null;

     label3:
        return $r1;
    }

    private boolean lookAfterPreAndPost(org.apache.xmlbeans.impl.jam.JamClassLoader, org.apache.xmlbeans.XmlObject)
    {
        org.apache.xmlbeans.impl.jam.JamClassLoader r1;
        boolean $z0, $z1, z2;
        org.apache.xmlbeans.impl.jam.JClass $r3, $r11, $r25, $r26, $r29, $r38, $r40;
        java.lang.AssertionError $r39;
        java.lang.StringBuffer $r9, $r10, $r13, $r14, $r16, $r17, $r18, $r20, $r21, $r27, $r28, $r31, $r32, $r34, $r35, $r36;
        org.apache.xmlbeans.impl.jam.JClass[] $r2, $r41;
        java.lang.String $r12, $r15, $r19, $r22, $r30, $r33, $r37;
        org.apache.xmlbeans.XmlObject r23;
        org.apache.xmlbeans.impl.config.PrePostExtensionImpl r0;
        org.apache.xmlbeans.impl.jam.JMethod $r4, $r5, $r6, $r7, $r8, $r24, $r42, $r43;

        r0 := @this: org.apache.xmlbeans.impl.config.PrePostExtensionImpl;

        r1 := @parameter0: org.apache.xmlbeans.impl.jam.JamClassLoader;

        r23 := @parameter1: org.apache.xmlbeans.XmlObject;

        $z0 = <org.apache.xmlbeans.impl.config.PrePostExtensionImpl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r38 = r0.<org.apache.xmlbeans.impl.config.PrePostExtensionImpl: org.apache.xmlbeans.impl.jam.JClass _delegateToClass>;

        if $r38 != null goto label1;

        $r39 = new java.lang.AssertionError;

        specialinvoke $r39.<java.lang.AssertionError: void <init>(java.lang.Object)>("Delegate to class handler expected.");

        throw $r39;

     label1:
        z2 = 1;

        specialinvoke r0.<org.apache.xmlbeans.impl.config.PrePostExtensionImpl: void initParamPrePost(org.apache.xmlbeans.impl.jam.JamClassLoader)>(r1);

        $r3 = r0.<org.apache.xmlbeans.impl.config.PrePostExtensionImpl: org.apache.xmlbeans.impl.jam.JClass _delegateToClass>;

        $r2 = <org.apache.xmlbeans.impl.config.PrePostExtensionImpl: org.apache.xmlbeans.impl.jam.JClass[] PARAMTYPES_PREPOST>;

        $r4 = staticinvoke <org.apache.xmlbeans.impl.config.InterfaceExtensionImpl: org.apache.xmlbeans.impl.jam.JMethod getMethod(org.apache.xmlbeans.impl.jam.JClass,java.lang.String,org.apache.xmlbeans.impl.jam.JClass[])>($r3, "preSet", $r2);

        r0.<org.apache.xmlbeans.impl.config.PrePostExtensionImpl: org.apache.xmlbeans.impl.jam.JMethod _preSet> = $r4;

        $r5 = r0.<org.apache.xmlbeans.impl.config.PrePostExtensionImpl: org.apache.xmlbeans.impl.jam.JMethod _preSet>;

        if $r5 != null goto label2;

     label2:
        $r6 = r0.<org.apache.xmlbeans.impl.config.PrePostExtensionImpl: org.apache.xmlbeans.impl.jam.JMethod _preSet>;

        if $r6 == null goto label3;

        $r24 = r0.<org.apache.xmlbeans.impl.config.PrePostExtensionImpl: org.apache.xmlbeans.impl.jam.JMethod _preSet>;

        $r25 = interfaceinvoke $r24.<org.apache.xmlbeans.impl.jam.JMethod: org.apache.xmlbeans.impl.jam.JClass getReturnType()>();

        $r26 = interfaceinvoke r1.<org.apache.xmlbeans.impl.jam.JamClassLoader: org.apache.xmlbeans.impl.jam.JClass loadClass(java.lang.String)>("boolean");

        $z1 = virtualinvoke $r25.<java.lang.Object: boolean equals(java.lang.Object)>($r26);

        if $z1 != 0 goto label3;

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Method \'");

        $r29 = r0.<org.apache.xmlbeans.impl.config.PrePostExtensionImpl: org.apache.xmlbeans.impl.jam.JClass _delegateToClass>;

        $r30 = interfaceinvoke $r29.<org.apache.xmlbeans.impl.jam.JClass: java.lang.String getSimpleName()>();

        $r31 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".preSet");

        $r33 = <org.apache.xmlbeans.impl.config.PrePostExtensionImpl: java.lang.String SIGNATURE>;

        $r34 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("should return boolean to be considered for a preSet handler.");

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.xmlbeans.impl.config.BindingConfigImpl: void warning(java.lang.String,org.apache.xmlbeans.XmlObject)>($r37, r23);

        r0.<org.apache.xmlbeans.impl.config.PrePostExtensionImpl: org.apache.xmlbeans.impl.jam.JMethod _preSet> = null;

     label3:
        $r40 = r0.<org.apache.xmlbeans.impl.config.PrePostExtensionImpl: org.apache.xmlbeans.impl.jam.JClass _delegateToClass>;

        $r41 = <org.apache.xmlbeans.impl.config.PrePostExtensionImpl: org.apache.xmlbeans.impl.jam.JClass[] PARAMTYPES_PREPOST>;

        $r42 = staticinvoke <org.apache.xmlbeans.impl.config.InterfaceExtensionImpl: org.apache.xmlbeans.impl.jam.JMethod getMethod(org.apache.xmlbeans.impl.jam.JClass,java.lang.String,org.apache.xmlbeans.impl.jam.JClass[])>($r40, "postSet", $r41);

        r0.<org.apache.xmlbeans.impl.config.PrePostExtensionImpl: org.apache.xmlbeans.impl.jam.JMethod _postSet> = $r42;

        $r43 = r0.<org.apache.xmlbeans.impl.config.PrePostExtensionImpl: org.apache.xmlbeans.impl.jam.JMethod _postSet>;

        if $r43 != null goto label4;

     label4:
        $r7 = r0.<org.apache.xmlbeans.impl.config.PrePostExtensionImpl: org.apache.xmlbeans.impl.jam.JMethod _preSet>;

        if $r7 != null goto label5;

        $r8 = r0.<org.apache.xmlbeans.impl.config.PrePostExtensionImpl: org.apache.xmlbeans.impl.jam.JMethod _postSet>;

        if $r8 != null goto label5;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("prePostSet handler specified \'");

        $r11 = r0.<org.apache.xmlbeans.impl.config.PrePostExtensionImpl: org.apache.xmlbeans.impl.jam.JClass _delegateToClass>;

        $r12 = interfaceinvoke $r11.<org.apache.xmlbeans.impl.jam.JClass: java.lang.String getSimpleName()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' but no preSet");

        $r15 = <org.apache.xmlbeans.impl.config.PrePostExtensionImpl: java.lang.String SIGNATURE>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" or ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("postSet");

        $r19 = <org.apache.xmlbeans.impl.config.PrePostExtensionImpl: java.lang.String SIGNATURE>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" methods found.");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.xmlbeans.impl.config.BindingConfigImpl: void error(java.lang.String,org.apache.xmlbeans.XmlObject)>($r22, r23);

        z2 = 0;

     label5:
        return z2;
    }

    private void initParamPrePost(org.apache.xmlbeans.impl.jam.JamClassLoader)
    {
        java.lang.IllegalStateException $r11;
        java.lang.String[] $r1, $r5;
        org.apache.xmlbeans.impl.jam.JamClassLoader r4;
        java.lang.StringBuffer $r12, $r13, $r15;
        int $i0, $i1, i2;
        org.apache.xmlbeans.impl.jam.JClass[] $r0, $r2, $r3, $r7, $r9;
        java.lang.String $r6, $r14, $r16;
        org.apache.xmlbeans.impl.config.PrePostExtensionImpl r17;
        org.apache.xmlbeans.impl.jam.JClass $r8, $r10;

        r17 := @this: org.apache.xmlbeans.impl.config.PrePostExtensionImpl;

        r4 := @parameter0: org.apache.xmlbeans.impl.jam.JamClassLoader;

        $r0 = <org.apache.xmlbeans.impl.config.PrePostExtensionImpl: org.apache.xmlbeans.impl.jam.JClass[] PARAMTYPES_PREPOST>;

        if $r0 != null goto label3;

        $r1 = <org.apache.xmlbeans.impl.config.PrePostExtensionImpl: java.lang.String[] PARAMTYPES_STRING>;

        $i0 = lengthof $r1;

        $r2 = newarray (org.apache.xmlbeans.impl.jam.JClass)[$i0];

        <org.apache.xmlbeans.impl.config.PrePostExtensionImpl: org.apache.xmlbeans.impl.jam.JClass[] PARAMTYPES_PREPOST> = $r2;

        i2 = 0;

     label1:
        $r3 = <org.apache.xmlbeans.impl.config.PrePostExtensionImpl: org.apache.xmlbeans.impl.jam.JClass[] PARAMTYPES_PREPOST>;

        $i1 = lengthof $r3;

        if i2 >= $i1 goto label3;

        $r7 = <org.apache.xmlbeans.impl.config.PrePostExtensionImpl: org.apache.xmlbeans.impl.jam.JClass[] PARAMTYPES_PREPOST>;

        $r5 = <org.apache.xmlbeans.impl.config.PrePostExtensionImpl: java.lang.String[] PARAMTYPES_STRING>;

        $r6 = $r5[i2];

        $r8 = interfaceinvoke r4.<org.apache.xmlbeans.impl.jam.JamClassLoader: org.apache.xmlbeans.impl.jam.JClass loadClass(java.lang.String)>($r6);

        $r7[i2] = $r8;

        $r9 = <org.apache.xmlbeans.impl.config.PrePostExtensionImpl: org.apache.xmlbeans.impl.jam.JClass[] PARAMTYPES_PREPOST>;

        $r10 = $r9[i2];

        if $r10 != null goto label2;

        $r11 = new java.lang.IllegalStateException;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("JAM should have access to the following types ");

        $r14 = <org.apache.xmlbeans.impl.config.PrePostExtensionImpl: java.lang.String SIGNATURE>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r16);

        throw $r11;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    public org.apache.xmlbeans.impl.config.NameSet getNameSet()
    {
        org.apache.xmlbeans.impl.config.NameSet $r1;
        org.apache.xmlbeans.impl.config.PrePostExtensionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.config.PrePostExtensionImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.config.PrePostExtensionImpl: org.apache.xmlbeans.impl.config.NameSet _xbeanSet>;

        return $r1;
    }

    public boolean contains(java.lang.String)
    {
        org.apache.xmlbeans.impl.config.NameSet $r2;
        org.apache.xmlbeans.impl.config.PrePostExtensionImpl r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.config.PrePostExtensionImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xmlbeans.impl.config.PrePostExtensionImpl: org.apache.xmlbeans.impl.config.NameSet _xbeanSet>;

        $z0 = virtualinvoke $r2.<org.apache.xmlbeans.impl.config.NameSet: boolean contains(java.lang.String)>(r1);

        return $z0;
    }

    public boolean hasPreCall()
    {
        org.apache.xmlbeans.impl.jam.JMethod $r1;
        org.apache.xmlbeans.impl.config.PrePostExtensionImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.config.PrePostExtensionImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.config.PrePostExtensionImpl: org.apache.xmlbeans.impl.jam.JMethod _preSet>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasPostCall()
    {
        org.apache.xmlbeans.impl.jam.JMethod $r1;
        org.apache.xmlbeans.impl.config.PrePostExtensionImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.config.PrePostExtensionImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.config.PrePostExtensionImpl: org.apache.xmlbeans.impl.jam.JMethod _postSet>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String getStaticHandler()
    {
        java.lang.String $r1;
        org.apache.xmlbeans.impl.config.PrePostExtensionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.config.PrePostExtensionImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.config.PrePostExtensionImpl: java.lang.String _delegateToClassName>;

        return $r1;
    }

    public java.lang.String getHandlerNameForJavaSource()
    {
        org.apache.xmlbeans.impl.config.PrePostExtensionImpl r0;
        java.lang.String $r3;
        org.apache.xmlbeans.impl.jam.JClass $r1, $r2;

        r0 := @this: org.apache.xmlbeans.impl.config.PrePostExtensionImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.config.PrePostExtensionImpl: org.apache.xmlbeans.impl.jam.JClass _delegateToClass>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.config.PrePostExtensionImpl: org.apache.xmlbeans.impl.jam.JClass _delegateToClass>;

        $r3 = staticinvoke <org.apache.xmlbeans.impl.config.InterfaceExtensionImpl: java.lang.String emitType(org.apache.xmlbeans.impl.jam.JClass)>($r2);

        return $r3;
    }

    boolean hasNameSetIntersection(org.apache.xmlbeans.impl.config.PrePostExtensionImpl)
    {
        org.apache.xmlbeans.impl.config.NameSet $r2, $r3, $r4, $r5;
        org.apache.xmlbeans.impl.config.PrePostExtensionImpl r0, r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.config.PrePostExtensionImpl;

        r1 := @parameter0: org.apache.xmlbeans.impl.config.PrePostExtensionImpl;

        $r4 = <org.apache.xmlbeans.impl.config.NameSet: org.apache.xmlbeans.impl.config.NameSet EMPTY>;

        $r3 = r0.<org.apache.xmlbeans.impl.config.PrePostExtensionImpl: org.apache.xmlbeans.impl.config.NameSet _xbeanSet>;

        $r2 = r1.<org.apache.xmlbeans.impl.config.PrePostExtensionImpl: org.apache.xmlbeans.impl.config.NameSet _xbeanSet>;

        $r5 = virtualinvoke $r3.<org.apache.xmlbeans.impl.config.NameSet: org.apache.xmlbeans.impl.config.NameSet intersect(org.apache.xmlbeans.impl.config.NameSet)>($r2);

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.String[] $r1, $r6, $r16;
        java.lang.StringBuffer $r2, $r3, $r4, $r8, $r9, $r10, $r11, $r12, $r13;
        int i0, $i1;
        java.lang.String $r5, r7, r15;
        boolean $z0, $z1;
        java.lang.Class $r0, $r14;

        $r0 = <org.apache.xmlbeans.impl.config.PrePostExtensionImpl: java.lang.Class class$org$apache$xmlbeans$impl$config$PrePostExtensionImpl>;

        if $r0 != null goto label1;

        $r14 = staticinvoke <org.apache.xmlbeans.impl.config.PrePostExtensionImpl: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.config.PrePostExtensionImpl");

        <org.apache.xmlbeans.impl.config.PrePostExtensionImpl: java.lang.Class class$org$apache$xmlbeans$impl$config$PrePostExtensionImpl> = $r14;

        goto label2;

     label1:
        $r14 = <org.apache.xmlbeans.impl.config.PrePostExtensionImpl: java.lang.Class class$org$apache$xmlbeans$impl$config$PrePostExtensionImpl>;

     label2:
        $z0 = virtualinvoke $r14.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.apache.xmlbeans.impl.config.PrePostExtensionImpl: boolean $assertionsDisabled> = $z1;

        <org.apache.xmlbeans.impl.config.PrePostExtensionImpl: org.apache.xmlbeans.impl.jam.JClass[] PARAMTYPES_PREPOST> = null;

        $r1 = newarray (java.lang.String)[5];

        $r1[0] = "int";

        $r1[1] = "org.apache.xmlbeans.XmlObject";

        $r1[2] = "javax.xml.namespace.QName";

        $r1[3] = "boolean";

        $r1[4] = "int";

        <org.apache.xmlbeans.impl.config.PrePostExtensionImpl: java.lang.String[] PARAMTYPES_STRING> = $r1;

        r15 = "(";

        i0 = 0;

     label5:
        $r16 = <org.apache.xmlbeans.impl.config.PrePostExtensionImpl: java.lang.String[] PARAMTYPES_STRING>;

        $i1 = lengthof $r16;

        if i0 >= $i1 goto label7;

        $r6 = <org.apache.xmlbeans.impl.config.PrePostExtensionImpl: java.lang.String[] PARAMTYPES_STRING>;

        r7 = $r6[i0];

        if i0 == 0 goto label6;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r15);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

     label6:
        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r15);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        r15 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        i0 = i0 + 1;

        goto label5;

     label7:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r15);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        <org.apache.xmlbeans.impl.config.PrePostExtensionImpl: java.lang.String SIGNATURE> = $r5;

        return;
    }
}
