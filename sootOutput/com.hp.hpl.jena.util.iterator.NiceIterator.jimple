public class com.hp.hpl.jena.util.iterator.NiceIterator extends java.lang.Object implements com.hp.hpl.jena.util.iterator.ExtendedIterator
{

    public void <init>()
    {
        com.hp.hpl.jena.util.iterator.NiceIterator r0;

        r0 := @this: com.hp.hpl.jena.util.iterator.NiceIterator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void close()
    {
        com.hp.hpl.jena.util.iterator.NiceIterator r0;

        r0 := @this: com.hp.hpl.jena.util.iterator.NiceIterator;

        return;
    }

    public boolean hasNext()
    {
        com.hp.hpl.jena.util.iterator.NiceIterator r0;

        r0 := @this: com.hp.hpl.jena.util.iterator.NiceIterator;

        return 0;
    }

    protected void ensureHasNext()
    {
        java.util.NoSuchElementException $r1;
        com.hp.hpl.jena.util.iterator.NiceIterator r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.util.iterator.NiceIterator;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.util.iterator.NiceIterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;

     label1:
        return;
    }

    public java.lang.Object next()
    {
        java.util.NoSuchElementException $r0;
        com.hp.hpl.jena.util.iterator.NiceIterator r1;

        r1 := @this: com.hp.hpl.jena.util.iterator.NiceIterator;

        $r0 = new java.util.NoSuchElementException;

        specialinvoke $r0.<java.util.NoSuchElementException: void <init>(java.lang.String)>("empty NiceIterator");

        throw $r0;
    }

    protected java.lang.Object noElements(java.lang.String)
    {
        java.lang.String r1;
        java.util.NoSuchElementException $r0;
        com.hp.hpl.jena.util.iterator.NiceIterator r2;

        r2 := @this: com.hp.hpl.jena.util.iterator.NiceIterator;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.util.NoSuchElementException;

        specialinvoke $r0.<java.util.NoSuchElementException: void <init>(java.lang.String)>(r1);

        throw $r0;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        com.hp.hpl.jena.util.iterator.NiceIterator r1;

        r1 := @this: com.hp.hpl.jena.util.iterator.NiceIterator;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("remove not supported for this iterator");

        throw $r0;
    }

    public java.lang.Object removeNext()
    {
        java.lang.Object $r1;
        com.hp.hpl.jena.util.iterator.NiceIterator r0;

        r0 := @this: com.hp.hpl.jena.util.iterator.NiceIterator;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.util.iterator.NiceIterator: java.lang.Object next()>();

        virtualinvoke r0.<com.hp.hpl.jena.util.iterator.NiceIterator: void remove()>();

        return $r1;
    }

    public static com.hp.hpl.jena.util.iterator.ExtendedIterator andThen(java.util.Iterator, java.util.Iterator)
    {
        com.hp.hpl.jena.util.iterator.NiceIterator$1 $r2;
        java.util.Iterator r1, r3;
        java.util.ArrayList $r0;

        r3 := @parameter0: java.util.Iterator;

        r1 := @parameter1: java.util.Iterator;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>(2);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r2 = new com.hp.hpl.jena.util.iterator.NiceIterator$1;

        specialinvoke $r2.<com.hp.hpl.jena.util.iterator.NiceIterator$1: void <init>(java.util.Iterator,java.util.List)>(r3, $r0);

        return $r2;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator andThen(java.util.Iterator)
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r2;
        java.util.Iterator r1;
        com.hp.hpl.jena.util.iterator.NiceIterator r0;

        r0 := @this: com.hp.hpl.jena.util.iterator.NiceIterator;

        r1 := @parameter0: java.util.Iterator;

        $r2 = staticinvoke <com.hp.hpl.jena.util.iterator.NiceIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator andThen(java.util.Iterator,java.util.Iterator)>(r0, r1);

        return $r2;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator filterKeep(com.hp.hpl.jena.util.iterator.Filter)
    {
        com.hp.hpl.jena.util.iterator.FilterKeepIterator $r0;
        com.hp.hpl.jena.util.iterator.NiceIterator r2;
        com.hp.hpl.jena.util.iterator.Filter r1;

        r2 := @this: com.hp.hpl.jena.util.iterator.NiceIterator;

        r1 := @parameter0: com.hp.hpl.jena.util.iterator.Filter;

        $r0 = new com.hp.hpl.jena.util.iterator.FilterKeepIterator;

        specialinvoke $r0.<com.hp.hpl.jena.util.iterator.FilterKeepIterator: void <init>(com.hp.hpl.jena.util.iterator.Filter,java.util.Iterator)>(r1, r2);

        return $r0;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator filterDrop(com.hp.hpl.jena.util.iterator.Filter)
    {
        com.hp.hpl.jena.util.iterator.FilterDropIterator $r0;
        com.hp.hpl.jena.util.iterator.NiceIterator r2;
        com.hp.hpl.jena.util.iterator.Filter r1;

        r2 := @this: com.hp.hpl.jena.util.iterator.NiceIterator;

        r1 := @parameter0: com.hp.hpl.jena.util.iterator.Filter;

        $r0 = new com.hp.hpl.jena.util.iterator.FilterDropIterator;

        specialinvoke $r0.<com.hp.hpl.jena.util.iterator.FilterDropIterator: void <init>(com.hp.hpl.jena.util.iterator.Filter,java.util.Iterator)>(r1, r2);

        return $r0;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator mapWith(com.hp.hpl.jena.util.iterator.Map1)
    {
        com.hp.hpl.jena.util.iterator.Map1Iterator $r0;
        com.hp.hpl.jena.util.iterator.Map1 r1;
        com.hp.hpl.jena.util.iterator.NiceIterator r2;

        r2 := @this: com.hp.hpl.jena.util.iterator.NiceIterator;

        r1 := @parameter0: com.hp.hpl.jena.util.iterator.Map1;

        $r0 = new com.hp.hpl.jena.util.iterator.Map1Iterator;

        specialinvoke $r0.<com.hp.hpl.jena.util.iterator.Map1Iterator: void <init>(com.hp.hpl.jena.util.iterator.Map1,java.util.Iterator)>(r1, r2);

        return $r0;
    }

    public static void close(java.util.Iterator)
    {
        java.util.Iterator r0;
        com.hp.hpl.jena.util.iterator.ClosableIterator $r1;
        boolean $z0;

        r0 := @parameter0: java.util.Iterator;

        $z0 = r0 instanceof com.hp.hpl.jena.util.iterator.ClosableIterator;

        if $z0 == 0 goto label1;

        $r1 = (com.hp.hpl.jena.util.iterator.ClosableIterator) r0;

        interfaceinvoke $r1.<com.hp.hpl.jena.util.iterator.ClosableIterator: void close()>();

     label1:
        return;
    }

    public static com.hp.hpl.jena.util.iterator.ExtendedIterator emptyIterator()
    {
        com.hp.hpl.jena.util.iterator.NullIterator $r0;

        $r0 = staticinvoke <com.hp.hpl.jena.util.iterator.NullIterator: com.hp.hpl.jena.util.iterator.NullIterator instance()>();

        return $r0;
    }

    public java.util.List toList()
    {
        java.util.List $r1;
        com.hp.hpl.jena.util.iterator.NiceIterator r0;

        r0 := @this: com.hp.hpl.jena.util.iterator.NiceIterator;

        $r1 = staticinvoke <com.hp.hpl.jena.util.iterator.NiceIterator: java.util.List asList(com.hp.hpl.jena.util.iterator.ExtendedIterator)>(r0);

        return $r1;
    }

    public java.util.Set toSet()
    {
        java.util.Set $r1;
        com.hp.hpl.jena.util.iterator.NiceIterator r0;

        r0 := @this: com.hp.hpl.jena.util.iterator.NiceIterator;

        $r1 = staticinvoke <com.hp.hpl.jena.util.iterator.NiceIterator: java.util.Set asSet(com.hp.hpl.jena.util.iterator.ExtendedIterator)>(r0);

        return $r1;
    }

    public static java.util.Set asSet(com.hp.hpl.jena.util.iterator.ExtendedIterator)
    {
        java.util.HashSet $r0;
        com.hp.hpl.jena.util.iterator.ExtendedIterator r1;
        java.lang.Object $r2;
        boolean $z0;

        r1 := @parameter0: com.hp.hpl.jena.util.iterator.ExtendedIterator;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

     label1:
        $z0 = interfaceinvoke r1.<com.hp.hpl.jena.util.iterator.ExtendedIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r1.<com.hp.hpl.jena.util.iterator.ExtendedIterator: java.lang.Object next()>();

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r2);

        goto label1;

     label2:
        return $r0;
    }

    public static java.util.List asList(com.hp.hpl.jena.util.iterator.ExtendedIterator)
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator r1;
        java.lang.Object $r2;
        java.util.ArrayList $r0;
        boolean $z0;

        r1 := @parameter0: com.hp.hpl.jena.util.iterator.ExtendedIterator;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

     label1:
        $z0 = interfaceinvoke r1.<com.hp.hpl.jena.util.iterator.ExtendedIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r1.<com.hp.hpl.jena.util.iterator.ExtendedIterator: java.lang.Object next()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r2);

        goto label1;

     label2:
        return $r0;
    }
}
