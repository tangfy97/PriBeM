class org.bouncycastle.cms.KeyTransRecipientInfoGenerator extends java.lang.Object implements org.bouncycastle.cms.RecipientInfoGenerator
{
    private org.bouncycastle.asn1.x509.TBSCertificateStructure recipientTBSCert;
    private java.security.PublicKey recipientPublicKey;
    private org.bouncycastle.asn1.ASN1OctetString subjectKeyIdentifier;
    private org.bouncycastle.asn1.x509.SubjectPublicKeyInfo info;

    void <init>()
    {
        org.bouncycastle.cms.KeyTransRecipientInfoGenerator r0;

        r0 := @this: org.bouncycastle.cms.KeyTransRecipientInfoGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void setRecipientCert(java.security.cert.X509Certificate)
    {
        java.security.cert.X509Certificate r1;
        org.bouncycastle.asn1.x509.SubjectPublicKeyInfo $r5;
        org.bouncycastle.asn1.x509.TBSCertificateStructure $r2, $r4;
        org.bouncycastle.cms.KeyTransRecipientInfoGenerator r0;
        java.security.PublicKey $r3;
        java.lang.IllegalArgumentException $r7;
        java.security.cert.CertificateEncodingException $r6;

        r0 := @this: org.bouncycastle.cms.KeyTransRecipientInfoGenerator;

        r1 := @parameter0: java.security.cert.X509Certificate;

     label1:
        $r2 = staticinvoke <org.bouncycastle.cms.CMSUtils: org.bouncycastle.asn1.x509.TBSCertificateStructure getTBSCertificateStructure(java.security.cert.X509Certificate)>(r1);

        r0.<org.bouncycastle.cms.KeyTransRecipientInfoGenerator: org.bouncycastle.asn1.x509.TBSCertificateStructure recipientTBSCert> = $r2;

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("can\'t extract TBS structure from this cert");

        throw $r7;

     label4:
        $r3 = virtualinvoke r1.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        r0.<org.bouncycastle.cms.KeyTransRecipientInfoGenerator: java.security.PublicKey recipientPublicKey> = $r3;

        $r4 = r0.<org.bouncycastle.cms.KeyTransRecipientInfoGenerator: org.bouncycastle.asn1.x509.TBSCertificateStructure recipientTBSCert>;

        $r5 = virtualinvoke $r4.<org.bouncycastle.asn1.x509.TBSCertificateStructure: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getSubjectPublicKeyInfo()>();

        r0.<org.bouncycastle.cms.KeyTransRecipientInfoGenerator: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo info> = $r5;

        return;

        catch java.security.cert.CertificateEncodingException from label1 to label2 with label3;
    }

    void setRecipientPublicKey(java.security.PublicKey)
    {
        byte[] $r2;
        org.bouncycastle.asn1.x509.SubjectPublicKeyInfo $r4;
        org.bouncycastle.cms.KeyTransRecipientInfoGenerator r0;
        java.security.PublicKey r1;
        java.io.IOException $r5;
        java.lang.IllegalArgumentException $r6;
        org.bouncycastle.asn1.ASN1Object $r3;

        r0 := @this: org.bouncycastle.cms.KeyTransRecipientInfoGenerator;

        r1 := @parameter0: java.security.PublicKey;

        r0.<org.bouncycastle.cms.KeyTransRecipientInfoGenerator: java.security.PublicKey recipientPublicKey> = r1;

     label1:
        $r2 = interfaceinvoke r1.<java.security.PublicKey: byte[] getEncoded()>();

        $r3 = staticinvoke <org.bouncycastle.asn1.ASN1Object: org.bouncycastle.asn1.ASN1Object fromByteArray(byte[])>($r2);

        $r4 = staticinvoke <org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getInstance(java.lang.Object)>($r3);

        r0.<org.bouncycastle.cms.KeyTransRecipientInfoGenerator: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo info> = $r4;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("can\'t extract key algorithm from this key");

        throw $r6;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    void setSubjectKeyIdentifier(org.bouncycastle.asn1.ASN1OctetString)
    {
        org.bouncycastle.cms.KeyTransRecipientInfoGenerator r0;
        org.bouncycastle.asn1.ASN1OctetString r1;

        r0 := @this: org.bouncycastle.cms.KeyTransRecipientInfoGenerator;

        r1 := @parameter0: org.bouncycastle.asn1.ASN1OctetString;

        r0.<org.bouncycastle.cms.KeyTransRecipientInfoGenerator: org.bouncycastle.asn1.ASN1OctetString subjectKeyIdentifier> = r1;

        return;
    }

    public org.bouncycastle.asn1.cms.RecipientInfo generate(javax.crypto.SecretKey, java.security.SecureRandom, java.security.Provider) throws java.security.GeneralSecurityException
    {
        byte[] $r12, $r27, $r28, $r32, $r33, $r37, $r38;
        java.lang.IllegalStateException $r29;
        org.bouncycastle.asn1.x509.SubjectPublicKeyInfo $r1;
        org.bouncycastle.asn1.cms.KeyTransRecipientInfo $r16;
        java.security.SecureRandom r8;
        org.bouncycastle.asn1.ASN1OctetString $r14;
        java.security.GeneralSecurityException $r34;
        java.math.BigInteger $r22;
        org.bouncycastle.asn1.DERObjectIdentifier $r4;
        org.bouncycastle.cms.KeyTransRecipientInfoGenerator r0;
        java.security.Provider r6;
        javax.crypto.SecretKey r11;
        org.bouncycastle.asn1.DEROctetString $r10, $r26, $r31, $r36, r39;
        javax.crypto.Cipher $r7;
        org.bouncycastle.cms.CMSEnvelopedHelper $r3;
        org.bouncycastle.asn1.cms.RecipientIdentifier $r13, $r23, r41;
        org.bouncycastle.asn1.cms.RecipientInfo $r15;
        java.lang.String $r5;
        java.lang.UnsupportedOperationException $r24;
        org.bouncycastle.asn1.x509.X509Name $r19;
        org.bouncycastle.asn1.x509.TBSCertificateStructure $r18, $r20, $r40;
        java.security.PublicKey $r9, $r25, $r30, $r35;
        org.bouncycastle.asn1.DERInteger $r21;
        org.bouncycastle.asn1.cms.IssuerAndSerialNumber $r17;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r2;

        r0 := @this: org.bouncycastle.cms.KeyTransRecipientInfoGenerator;

        r11 := @parameter0: javax.crypto.SecretKey;

        r8 := @parameter1: java.security.SecureRandom;

        r6 := @parameter2: java.security.Provider;

        $r1 = r0.<org.bouncycastle.cms.KeyTransRecipientInfoGenerator: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo info>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmId()>();

        $r3 = <org.bouncycastle.cms.CMSEnvelopedHelper: org.bouncycastle.cms.CMSEnvelopedHelper INSTANCE>;

        $r4 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DERObjectIdentifier getObjectId()>();

        $r5 = virtualinvoke $r4.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $r7 = virtualinvoke $r3.<org.bouncycastle.cms.CMSEnvelopedHelper: javax.crypto.Cipher createAsymmetricCipher(java.lang.String,java.security.Provider)>($r5, r6);

     label1:
        $r9 = r0.<org.bouncycastle.cms.KeyTransRecipientInfoGenerator: java.security.PublicKey recipientPublicKey>;

        virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(3, $r9, r8);

        $r10 = new org.bouncycastle.asn1.DEROctetString;

        $r12 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] wrap(java.security.Key)>(r11);

        specialinvoke $r10.<org.bouncycastle.asn1.DEROctetString: void <init>(byte[])>($r12);

        r39 = $r10;

     label2:
        goto label6;

     label3:
        $r34 := @caughtexception;

        $r35 = r0.<org.bouncycastle.cms.KeyTransRecipientInfoGenerator: java.security.PublicKey recipientPublicKey>;

        virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(1, $r35, r8);

        $r36 = new org.bouncycastle.asn1.DEROctetString;

        $r37 = interfaceinvoke r11.<javax.crypto.SecretKey: byte[] getEncoded()>();

        $r38 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r37);

        specialinvoke $r36.<org.bouncycastle.asn1.DEROctetString: void <init>(byte[])>($r38);

        r39 = $r36;

        goto label6;

     label4:
        $r29 := @caughtexception;

        $r30 = r0.<org.bouncycastle.cms.KeyTransRecipientInfoGenerator: java.security.PublicKey recipientPublicKey>;

        virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(1, $r30, r8);

        $r31 = new org.bouncycastle.asn1.DEROctetString;

        $r32 = interfaceinvoke r11.<javax.crypto.SecretKey: byte[] getEncoded()>();

        $r33 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r32);

        specialinvoke $r31.<org.bouncycastle.asn1.DEROctetString: void <init>(byte[])>($r33);

        r39 = $r31;

        goto label6;

     label5:
        $r24 := @caughtexception;

        $r25 = r0.<org.bouncycastle.cms.KeyTransRecipientInfoGenerator: java.security.PublicKey recipientPublicKey>;

        virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(1, $r25, r8);

        $r26 = new org.bouncycastle.asn1.DEROctetString;

        $r27 = interfaceinvoke r11.<javax.crypto.SecretKey: byte[] getEncoded()>();

        $r28 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r27);

        specialinvoke $r26.<org.bouncycastle.asn1.DEROctetString: void <init>(byte[])>($r28);

        r39 = $r26;

     label6:
        $r40 = r0.<org.bouncycastle.cms.KeyTransRecipientInfoGenerator: org.bouncycastle.asn1.x509.TBSCertificateStructure recipientTBSCert>;

        if $r40 == null goto label7;

        $r17 = new org.bouncycastle.asn1.cms.IssuerAndSerialNumber;

        $r18 = r0.<org.bouncycastle.cms.KeyTransRecipientInfoGenerator: org.bouncycastle.asn1.x509.TBSCertificateStructure recipientTBSCert>;

        $r19 = virtualinvoke $r18.<org.bouncycastle.asn1.x509.TBSCertificateStructure: org.bouncycastle.asn1.x509.X509Name getIssuer()>();

        $r20 = r0.<org.bouncycastle.cms.KeyTransRecipientInfoGenerator: org.bouncycastle.asn1.x509.TBSCertificateStructure recipientTBSCert>;

        $r21 = virtualinvoke $r20.<org.bouncycastle.asn1.x509.TBSCertificateStructure: org.bouncycastle.asn1.DERInteger getSerialNumber()>();

        $r22 = virtualinvoke $r21.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        specialinvoke $r17.<org.bouncycastle.asn1.cms.IssuerAndSerialNumber: void <init>(org.bouncycastle.asn1.x509.X509Name,java.math.BigInteger)>($r19, $r22);

        $r23 = new org.bouncycastle.asn1.cms.RecipientIdentifier;

        specialinvoke $r23.<org.bouncycastle.asn1.cms.RecipientIdentifier: void <init>(org.bouncycastle.asn1.cms.IssuerAndSerialNumber)>($r17);

        r41 = $r23;

        goto label8;

     label7:
        $r13 = new org.bouncycastle.asn1.cms.RecipientIdentifier;

        $r14 = r0.<org.bouncycastle.cms.KeyTransRecipientInfoGenerator: org.bouncycastle.asn1.ASN1OctetString subjectKeyIdentifier>;

        specialinvoke $r13.<org.bouncycastle.asn1.cms.RecipientIdentifier: void <init>(org.bouncycastle.asn1.ASN1OctetString)>($r14);

        r41 = $r13;

     label8:
        $r15 = new org.bouncycastle.asn1.cms.RecipientInfo;

        $r16 = new org.bouncycastle.asn1.cms.KeyTransRecipientInfo;

        specialinvoke $r16.<org.bouncycastle.asn1.cms.KeyTransRecipientInfo: void <init>(org.bouncycastle.asn1.cms.RecipientIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1OctetString)>(r41, $r2, r39);

        specialinvoke $r15.<org.bouncycastle.asn1.cms.RecipientInfo: void <init>(org.bouncycastle.asn1.cms.KeyTransRecipientInfo)>($r16);

        return $r15;

        catch java.security.GeneralSecurityException from label1 to label2 with label3;
        catch java.lang.IllegalStateException from label1 to label2 with label4;
        catch java.lang.UnsupportedOperationException from label1 to label2 with label5;
    }
}
