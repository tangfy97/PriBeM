public class org.apache.commons.collections.map.CaseInsensitiveMap extends org.apache.commons.collections.map.AbstractHashedMap implements java.io.Serializable, java.lang.Cloneable
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.apache.commons.collections.map.CaseInsensitiveMap r0;

        r0 := @this: org.apache.commons.collections.map.CaseInsensitiveMap;

        specialinvoke r0.<org.apache.commons.collections.map.AbstractHashedMap: void <init>(int,float,int)>(16, 0.75F, 12);

        return;
    }

    public void <init>(int)
    {
        int i0;
        org.apache.commons.collections.map.CaseInsensitiveMap r0;

        r0 := @this: org.apache.commons.collections.map.CaseInsensitiveMap;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.commons.collections.map.AbstractHashedMap: void <init>(int)>(i0);

        return;
    }

    public void <init>(int, float)
    {
        int i0;
        float f0;
        org.apache.commons.collections.map.CaseInsensitiveMap r0;

        r0 := @this: org.apache.commons.collections.map.CaseInsensitiveMap;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        specialinvoke r0.<org.apache.commons.collections.map.AbstractHashedMap: void <init>(int,float)>(i0, f0);

        return;
    }

    public void <init>(java.util.Map)
    {
        org.apache.commons.collections.map.CaseInsensitiveMap r0;
        java.util.Map r1;

        r0 := @this: org.apache.commons.collections.map.CaseInsensitiveMap;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<org.apache.commons.collections.map.AbstractHashedMap: void <init>(java.util.Map)>(r1);

        return;
    }

    protected java.lang.Object convertKey(java.lang.Object)
    {
        java.lang.Object r0, $r1;
        java.lang.String $r2, $r3;
        org.apache.commons.collections.map.CaseInsensitiveMap r4;

        r4 := @this: org.apache.commons.collections.map.CaseInsensitiveMap;

        r0 := @parameter0: java.lang.Object;

        if r0 == null goto label1;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

        return $r3;

     label1:
        $r1 = <org.apache.commons.collections.map.AbstractHashedMap: java.lang.Object NULL>;

        return $r1;
    }

    public java.lang.Object clone()
    {
        java.lang.Object $r1;
        org.apache.commons.collections.map.CaseInsensitiveMap r0;

        r0 := @this: org.apache.commons.collections.map.CaseInsensitiveMap;

        $r1 = specialinvoke r0.<org.apache.commons.collections.map.AbstractHashedMap: java.lang.Object clone()>();

        return $r1;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream r0;
        org.apache.commons.collections.map.CaseInsensitiveMap r1;

        r1 := @this: org.apache.commons.collections.map.CaseInsensitiveMap;

        r0 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r0.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        virtualinvoke r1.<org.apache.commons.collections.map.CaseInsensitiveMap: void doWriteObject(java.io.ObjectOutputStream)>(r0);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream r0;
        org.apache.commons.collections.map.CaseInsensitiveMap r1;

        r1 := @this: org.apache.commons.collections.map.CaseInsensitiveMap;

        r0 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r0.<java.io.ObjectInputStream: void defaultReadObject()>();

        virtualinvoke r1.<org.apache.commons.collections.map.CaseInsensitiveMap: void doReadObject(java.io.ObjectInputStream)>(r0);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections.map.CaseInsensitiveMap: long serialVersionUID> = -7074655917369299456L;

        return;
    }
}
