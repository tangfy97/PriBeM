public abstract class org.apache.batik.css.engine.sac.AbstractSiblingSelector extends java.lang.Object implements org.w3c.css.sac.SiblingSelector, org.apache.batik.css.engine.sac.ExtendedSelector
{
    protected short nodeType;
    protected org.w3c.css.sac.Selector selector;
    protected org.w3c.css.sac.SimpleSelector simpleSelector;

    protected void <init>(short, org.w3c.css.sac.Selector, org.w3c.css.sac.SimpleSelector)
    {
        short s0;
        org.w3c.css.sac.SimpleSelector r2;
        org.apache.batik.css.engine.sac.AbstractSiblingSelector r0;
        org.w3c.css.sac.Selector r1;

        r0 := @this: org.apache.batik.css.engine.sac.AbstractSiblingSelector;

        s0 := @parameter0: short;

        r1 := @parameter1: org.w3c.css.sac.Selector;

        r2 := @parameter2: org.w3c.css.sac.SimpleSelector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.css.engine.sac.AbstractSiblingSelector: short nodeType> = s0;

        r0.<org.apache.batik.css.engine.sac.AbstractSiblingSelector: org.w3c.css.sac.Selector selector> = r1;

        r0.<org.apache.batik.css.engine.sac.AbstractSiblingSelector: org.w3c.css.sac.SimpleSelector simpleSelector> = r2;

        return;
    }

    public short getNodeType()
    {
        short $s0;
        org.apache.batik.css.engine.sac.AbstractSiblingSelector r0;

        r0 := @this: org.apache.batik.css.engine.sac.AbstractSiblingSelector;

        $s0 = r0.<org.apache.batik.css.engine.sac.AbstractSiblingSelector: short nodeType>;

        return $s0;
    }

    public boolean equals(java.lang.Object)
    {
        org.w3c.css.sac.SimpleSelector $r5, $r6;
        java.lang.Object r0;
        java.lang.Class $r1, $r3;
        org.apache.batik.css.engine.sac.AbstractSiblingSelector r2, r4;
        boolean $z0;

        r2 := @this: org.apache.batik.css.engine.sac.AbstractSiblingSelector;

        r0 := @parameter0: java.lang.Object;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == $r3 goto label2;

     label1:
        return 0;

     label2:
        r4 = (org.apache.batik.css.engine.sac.AbstractSiblingSelector) r0;

        $r6 = r4.<org.apache.batik.css.engine.sac.AbstractSiblingSelector: org.w3c.css.sac.SimpleSelector simpleSelector>;

        $r5 = r2.<org.apache.batik.css.engine.sac.AbstractSiblingSelector: org.w3c.css.sac.SimpleSelector simpleSelector>;

        $z0 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        return $z0;
    }

    public int getSpecificity()
    {
        org.w3c.css.sac.Selector $r1;
        org.w3c.css.sac.SimpleSelector $r3;
        int $i0, $i1, $i2;
        org.apache.batik.css.engine.sac.AbstractSiblingSelector r0;
        org.apache.batik.css.engine.sac.ExtendedSelector $r2, $r4;

        r0 := @this: org.apache.batik.css.engine.sac.AbstractSiblingSelector;

        $r1 = r0.<org.apache.batik.css.engine.sac.AbstractSiblingSelector: org.w3c.css.sac.Selector selector>;

        $r2 = (org.apache.batik.css.engine.sac.ExtendedSelector) $r1;

        $i0 = interfaceinvoke $r2.<org.apache.batik.css.engine.sac.ExtendedSelector: int getSpecificity()>();

        $r3 = r0.<org.apache.batik.css.engine.sac.AbstractSiblingSelector: org.w3c.css.sac.SimpleSelector simpleSelector>;

        $r4 = (org.apache.batik.css.engine.sac.ExtendedSelector) $r3;

        $i1 = interfaceinvoke $r4.<org.apache.batik.css.engine.sac.ExtendedSelector: int getSpecificity()>();

        $i2 = $i0 + $i1;

        return $i2;
    }

    public org.w3c.css.sac.Selector getSelector()
    {
        org.apache.batik.css.engine.sac.AbstractSiblingSelector r0;
        org.w3c.css.sac.Selector $r1;

        r0 := @this: org.apache.batik.css.engine.sac.AbstractSiblingSelector;

        $r1 = r0.<org.apache.batik.css.engine.sac.AbstractSiblingSelector: org.w3c.css.sac.Selector selector>;

        return $r1;
    }

    public org.w3c.css.sac.SimpleSelector getSiblingSelector()
    {
        org.apache.batik.css.engine.sac.AbstractSiblingSelector r0;
        org.w3c.css.sac.SimpleSelector $r1;

        r0 := @this: org.apache.batik.css.engine.sac.AbstractSiblingSelector;

        $r1 = r0.<org.apache.batik.css.engine.sac.AbstractSiblingSelector: org.w3c.css.sac.SimpleSelector simpleSelector>;

        return $r1;
    }

    public abstract short getSelectorType();

    public abstract void fillAttributeSet(java.util.Set);

    public abstract boolean match(org.w3c.dom.Element, java.lang.String);
}
