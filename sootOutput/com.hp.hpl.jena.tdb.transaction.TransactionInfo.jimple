public class com.hp.hpl.jena.tdb.transaction.TransactionInfo extends java.lang.Object implements com.hp.hpl.jena.tdb.transaction.TransactionInfoMBean
{
    private com.hp.hpl.jena.tdb.transaction.TransactionManager transactionManager;

    public void <init>(com.hp.hpl.jena.tdb.transaction.TransactionManager)
    {
        com.hp.hpl.jena.tdb.transaction.TransactionManager r1;
        com.hp.hpl.jena.tdb.transaction.TransactionInfo r0;

        r0 := @this: com.hp.hpl.jena.tdb.transaction.TransactionInfo;

        r1 := @parameter0: com.hp.hpl.jena.tdb.transaction.TransactionManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.tdb.transaction.TransactionInfo: com.hp.hpl.jena.tdb.transaction.TransactionManager transactionManager> = r1;

        return;
    }

    public long getTransactionCount()
    {
        com.hp.hpl.jena.tdb.transaction.TransactionInfo r0;
        long $l0, $l1, $l2;

        r0 := @this: com.hp.hpl.jena.tdb.transaction.TransactionInfo;

        $l0 = virtualinvoke r0.<com.hp.hpl.jena.tdb.transaction.TransactionInfo: long getReadTransactionCount()>();

        $l1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.transaction.TransactionInfo: long getWriteTransactionCount()>();

        $l2 = $l0 + $l1;

        return $l2;
    }

    public long getReadTransactionCount()
    {
        java.util.concurrent.atomic.AtomicLong $r2;
        com.hp.hpl.jena.tdb.transaction.TransactionInfo r0;
        com.hp.hpl.jena.tdb.transaction.TransactionManager $r1;
        long $l0;

        r0 := @this: com.hp.hpl.jena.tdb.transaction.TransactionInfo;

        $r1 = r0.<com.hp.hpl.jena.tdb.transaction.TransactionInfo: com.hp.hpl.jena.tdb.transaction.TransactionManager transactionManager>;

        $r2 = $r1.<com.hp.hpl.jena.tdb.transaction.TransactionManager: java.util.concurrent.atomic.AtomicLong finishedReaders>;

        $l0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicLong: long get()>();

        return $l0;
    }

    public long getWriteTransactionCount()
    {
        com.hp.hpl.jena.tdb.transaction.TransactionInfo r0;
        long $l0, $l1, $l2;

        r0 := @this: com.hp.hpl.jena.tdb.transaction.TransactionInfo;

        $l0 = virtualinvoke r0.<com.hp.hpl.jena.tdb.transaction.TransactionInfo: long getWriteCommitTransactionCount()>();

        $l1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.transaction.TransactionInfo: long getWriteAbortTransactionCount()>();

        $l2 = $l0 + $l1;

        return $l2;
    }

    public long getWriteAbortTransactionCount()
    {
        java.util.concurrent.atomic.AtomicLong $r2;
        com.hp.hpl.jena.tdb.transaction.TransactionInfo r0;
        com.hp.hpl.jena.tdb.transaction.TransactionManager $r1;
        long $l0;

        r0 := @this: com.hp.hpl.jena.tdb.transaction.TransactionInfo;

        $r1 = r0.<com.hp.hpl.jena.tdb.transaction.TransactionInfo: com.hp.hpl.jena.tdb.transaction.TransactionManager transactionManager>;

        $r2 = $r1.<com.hp.hpl.jena.tdb.transaction.TransactionManager: java.util.concurrent.atomic.AtomicLong abortedWriters>;

        $l0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicLong: long get()>();

        return $l0;
    }

    public long getWriteCommitTransactionCount()
    {
        java.util.concurrent.atomic.AtomicLong $r2;
        com.hp.hpl.jena.tdb.transaction.TransactionInfo r0;
        com.hp.hpl.jena.tdb.transaction.TransactionManager $r1;
        long $l0;

        r0 := @this: com.hp.hpl.jena.tdb.transaction.TransactionInfo;

        $r1 = r0.<com.hp.hpl.jena.tdb.transaction.TransactionInfo: com.hp.hpl.jena.tdb.transaction.TransactionManager transactionManager>;

        $r2 = $r1.<com.hp.hpl.jena.tdb.transaction.TransactionManager: java.util.concurrent.atomic.AtomicLong committedWriters>;

        $l0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicLong: long get()>();

        return $l0;
    }

    public long getWriteCommitTransactionPendingCount()
    {
        java.util.List $r2;
        com.hp.hpl.jena.tdb.transaction.TransactionInfo r0;
        int $i0;
        com.hp.hpl.jena.tdb.transaction.TransactionManager $r1;
        long $l1;

        r0 := @this: com.hp.hpl.jena.tdb.transaction.TransactionInfo;

        $r1 = r0.<com.hp.hpl.jena.tdb.transaction.TransactionInfo: com.hp.hpl.jena.tdb.transaction.TransactionManager transactionManager>;

        $r2 = $r1.<com.hp.hpl.jena.tdb.transaction.TransactionManager: java.util.List commitedAwaitingFlush>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $l1 = (long) $i0;

        return $l1;
    }

    public long getCurrentWriteTransactionCount()
    {
        java.util.concurrent.atomic.AtomicLong $r2;
        com.hp.hpl.jena.tdb.transaction.TransactionInfo r0;
        com.hp.hpl.jena.tdb.transaction.TransactionManager $r1;
        long $l0;

        r0 := @this: com.hp.hpl.jena.tdb.transaction.TransactionInfo;

        $r1 = r0.<com.hp.hpl.jena.tdb.transaction.TransactionInfo: com.hp.hpl.jena.tdb.transaction.TransactionManager transactionManager>;

        $r2 = $r1.<com.hp.hpl.jena.tdb.transaction.TransactionManager: java.util.concurrent.atomic.AtomicLong activeWriters>;

        $l0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicLong: long get()>();

        return $l0;
    }

    public long getCurrentReadTransactionCount()
    {
        java.util.concurrent.atomic.AtomicLong $r2;
        com.hp.hpl.jena.tdb.transaction.TransactionInfo r0;
        com.hp.hpl.jena.tdb.transaction.TransactionManager $r1;
        long $l0;

        r0 := @this: com.hp.hpl.jena.tdb.transaction.TransactionInfo;

        $r1 = r0.<com.hp.hpl.jena.tdb.transaction.TransactionInfo: com.hp.hpl.jena.tdb.transaction.TransactionManager transactionManager>;

        $r2 = $r1.<com.hp.hpl.jena.tdb.transaction.TransactionManager: java.util.concurrent.atomic.AtomicLong activeReaders>;

        $l0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicLong: long get()>();

        return $l0;
    }
}
