public class org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl extends org.aspectj.internal.lang.reflect.InterTypeDeclarationImpl implements org.aspectj.lang.reflect.InterTypeFieldDeclaration
{
    private java.lang.String name;
    private org.aspectj.lang.reflect.AjType type;
    private java.lang.reflect.Type genericType;

    public void <init>(org.aspectj.lang.reflect.AjType, java.lang.String, int, java.lang.String, org.aspectj.lang.reflect.AjType, java.lang.reflect.Type)
    {
        org.aspectj.lang.reflect.AjType r1, r4;
        java.lang.reflect.Type r5;
        org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl r0;
        int i0;
        java.lang.String r2, r3;

        r0 := @this: org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl;

        r1 := @parameter0: org.aspectj.lang.reflect.AjType;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: org.aspectj.lang.reflect.AjType;

        r5 := @parameter5: java.lang.reflect.Type;

        specialinvoke r0.<org.aspectj.internal.lang.reflect.InterTypeDeclarationImpl: void <init>(org.aspectj.lang.reflect.AjType,java.lang.String,int)>(r1, r2, i0);

        r0.<org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl: java.lang.String name> = r3;

        r0.<org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl: org.aspectj.lang.reflect.AjType type> = r4;

        r0.<org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl: java.lang.reflect.Type genericType> = r5;

        return;
    }

    public void <init>(org.aspectj.lang.reflect.AjType, org.aspectj.lang.reflect.AjType, java.lang.reflect.Field)
    {
        org.aspectj.lang.reflect.AjType r1, r2, $r6, $r9;
        java.lang.reflect.Field r3;
        java.lang.reflect.Type $r7;
        org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl r0;
        int $i0;
        java.lang.Class $r5, $r8;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl;

        r1 := @parameter0: org.aspectj.lang.reflect.AjType;

        r2 := @parameter1: org.aspectj.lang.reflect.AjType;

        r3 := @parameter2: java.lang.reflect.Field;

        $i0 = virtualinvoke r3.<java.lang.reflect.Field: int getModifiers()>();

        specialinvoke r0.<org.aspectj.internal.lang.reflect.InterTypeDeclarationImpl: void <init>(org.aspectj.lang.reflect.AjType,org.aspectj.lang.reflect.AjType,int)>(r1, r2, $i0);

        $r4 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.String getName()>();

        r0.<org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl: java.lang.String name> = $r4;

        $r5 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r6 = staticinvoke <org.aspectj.lang.reflect.AjTypeSystem: org.aspectj.lang.reflect.AjType getAjType(java.lang.Class)>($r5);

        r0.<org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl: org.aspectj.lang.reflect.AjType type> = $r6;

        $r7 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();

        $z0 = $r7 instanceof java.lang.Class;

        if $z0 == 0 goto label1;

        $r8 = (java.lang.Class) $r7;

        $r9 = staticinvoke <org.aspectj.lang.reflect.AjTypeSystem: org.aspectj.lang.reflect.AjType getAjType(java.lang.Class)>($r8);

        r0.<org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl: java.lang.reflect.Type genericType> = $r9;

        goto label2;

     label1:
        r0.<org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl: java.lang.reflect.Type genericType> = $r7;

     label2:
        return;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl r0;

        r0 := @this: org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl;

        $r1 = r0.<org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl: java.lang.String name>;

        return $r1;
    }

    public org.aspectj.lang.reflect.AjType getType()
    {
        org.aspectj.lang.reflect.AjType $r1;
        org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl r0;

        r0 := @this: org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl;

        $r1 = r0.<org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl: org.aspectj.lang.reflect.AjType type>;

        return $r1;
    }

    public java.lang.reflect.Type getGenericType()
    {
        java.lang.reflect.Type $r1;
        org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl r0;

        r0 := @this: org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl;

        $r1 = r0.<org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl: java.lang.reflect.Type genericType>;

        return $r1;
    }

    public java.lang.String toString()
    {
        org.aspectj.lang.reflect.AjType $r3;
        java.lang.StringBuffer $r0;
        org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl r1;
        int $i0;
        java.lang.String $r2, $r4, $r5, $r6, $r7;

        r1 := @this: org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $i0 = virtualinvoke r1.<org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl: int getModifiers()>();

        $r2 = staticinvoke <java.lang.reflect.Modifier: java.lang.String toString(int)>($i0);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r3 = virtualinvoke r1.<org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl: org.aspectj.lang.reflect.AjType getType()>();

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r5 = r1.<org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl: java.lang.String targetTypeName>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r6 = virtualinvoke r1.<org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl: java.lang.String getName()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r7 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }
}
