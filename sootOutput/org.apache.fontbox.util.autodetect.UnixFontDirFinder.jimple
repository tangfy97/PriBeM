public class org.apache.fontbox.util.autodetect.UnixFontDirFinder extends org.apache.fontbox.util.autodetect.NativeFontDirFinder
{

    public void <init>()
    {
        org.apache.fontbox.util.autodetect.UnixFontDirFinder r0;

        r0 := @this: org.apache.fontbox.util.autodetect.UnixFontDirFinder;

        specialinvoke r0.<org.apache.fontbox.util.autodetect.NativeFontDirFinder: void <init>()>();

        return;
    }

    protected java.lang.String[] getSearchableDirectories()
    {
        org.apache.fontbox.util.autodetect.UnixFontDirFinder r6;
        java.lang.String[] $r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5;

        r6 := @this: org.apache.fontbox.util.autodetect.UnixFontDirFinder;

        $r0 = newarray (java.lang.String)[5];

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.home");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/.fonts");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0[0] = $r5;

        $r0[1] = "/usr/local/fonts";

        $r0[2] = "/usr/local/share/fonts";

        $r0[3] = "/usr/share/fonts";

        $r0[4] = "/usr/X11R6/lib/X11/fonts";

        return $r0;
    }

    public java.util.Map getCommonTTFMapping()
    {
        org.apache.fontbox.util.autodetect.UnixFontDirFinder r2;
        java.util.HashMap $r0;
        java.util.Map $r1;

        r2 := @this: org.apache.fontbox.util.autodetect.UnixFontDirFinder;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("TimesNewRoman,BoldItalic", "LiberationSerif-BoldItalic");

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("TimesNewRoman,Bold", "LiberationSerif-Bold");

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("TimesNewRoman,Italic", "LiberationSerif-Italic");

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("TimesNewRoman", "LiberationSerif");

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Arial,BoldItalic", "LiberationSans-BoldItalic");

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Arial,Italic", "LiberationSans-Italic");

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Arial,Bold", "LiberationSans-Bold");

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Arial", "LiberationSans");

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Courier,BoldItalic", "LiberationMono-BoldItalic");

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Courier,Italic", "LiberationMono-Italic");

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Courier,Bold", "LiberationMono-Bold");

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Courier", "LiberationMono");

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Symbol", "OpenSymbol");

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ZapfDingbats", "Dingbats");

        $r1 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r0);

        return $r1;
    }
}
