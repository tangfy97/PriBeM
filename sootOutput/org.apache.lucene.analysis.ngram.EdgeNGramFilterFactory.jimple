public class org.apache.lucene.analysis.ngram.EdgeNGramFilterFactory extends org.apache.lucene.analysis.util.TokenFilterFactory
{
    private final int maxGramSize;
    private final int minGramSize;
    private final java.lang.String side;

    public void <init>(java.util.Map)
    {
        org.apache.lucene.analysis.ngram.EdgeNGramTokenFilter$Side $r2;
        java.lang.IllegalArgumentException $r5;
        org.apache.lucene.analysis.ngram.EdgeNGramFilterFactory r0;
        java.util.Map r1;
        int $i0, $i1;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r3, $r4, $r9;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.ngram.EdgeNGramFilterFactory;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<org.apache.lucene.analysis.util.TokenFilterFactory: void <init>(java.util.Map)>(r1);

        $i0 = virtualinvoke r0.<org.apache.lucene.analysis.ngram.EdgeNGramFilterFactory: int getInt(java.util.Map,java.lang.String,int)>(r1, "minGramSize", 1);

        r0.<org.apache.lucene.analysis.ngram.EdgeNGramFilterFactory: int minGramSize> = $i0;

        $i1 = virtualinvoke r0.<org.apache.lucene.analysis.ngram.EdgeNGramFilterFactory: int getInt(java.util.Map,java.lang.String,int)>(r1, "maxGramSize", 1);

        r0.<org.apache.lucene.analysis.ngram.EdgeNGramFilterFactory: int maxGramSize> = $i1;

        $r2 = <org.apache.lucene.analysis.ngram.EdgeNGramTokenFilter$Side: org.apache.lucene.analysis.ngram.EdgeNGramTokenFilter$Side FRONT>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.analysis.ngram.EdgeNGramTokenFilter$Side: java.lang.String getLabel()>();

        $r4 = virtualinvoke r0.<org.apache.lucene.analysis.ngram.EdgeNGramFilterFactory: java.lang.String get(java.util.Map,java.lang.String,java.lang.String)>(r1, "side", $r3);

        r0.<org.apache.lucene.analysis.ngram.EdgeNGramFilterFactory: java.lang.String side> = $r4;

        $z0 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown parameters: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label1:
        return;
    }

    public org.apache.lucene.analysis.ngram.EdgeNGramTokenFilter create(org.apache.lucene.analysis.TokenStream)
    {
        org.apache.lucene.analysis.TokenStream r1;
        org.apache.lucene.analysis.ngram.EdgeNGramTokenFilter $r0;
        int $i0, $i1;
        java.lang.String $r3;
        org.apache.lucene.analysis.ngram.EdgeNGramFilterFactory r2;

        r2 := @this: org.apache.lucene.analysis.ngram.EdgeNGramFilterFactory;

        r1 := @parameter0: org.apache.lucene.analysis.TokenStream;

        $r0 = new org.apache.lucene.analysis.ngram.EdgeNGramTokenFilter;

        $r3 = r2.<org.apache.lucene.analysis.ngram.EdgeNGramFilterFactory: java.lang.String side>;

        $i1 = r2.<org.apache.lucene.analysis.ngram.EdgeNGramFilterFactory: int minGramSize>;

        $i0 = r2.<org.apache.lucene.analysis.ngram.EdgeNGramFilterFactory: int maxGramSize>;

        specialinvoke $r0.<org.apache.lucene.analysis.ngram.EdgeNGramTokenFilter: void <init>(org.apache.lucene.analysis.TokenStream,java.lang.String,int,int)>(r1, $r3, $i1, $i0);

        return $r0;
    }

    public volatile org.apache.lucene.analysis.TokenStream create(org.apache.lucene.analysis.TokenStream)
    {
        org.apache.lucene.analysis.TokenStream r1;
        org.apache.lucene.analysis.ngram.EdgeNGramFilterFactory r0;
        org.apache.lucene.analysis.ngram.EdgeNGramTokenFilter $r2;

        r0 := @this: org.apache.lucene.analysis.ngram.EdgeNGramFilterFactory;

        r1 := @parameter0: org.apache.lucene.analysis.TokenStream;

        $r2 = virtualinvoke r0.<org.apache.lucene.analysis.ngram.EdgeNGramFilterFactory: org.apache.lucene.analysis.ngram.EdgeNGramTokenFilter create(org.apache.lucene.analysis.TokenStream)>(r1);

        return $r2;
    }
}
