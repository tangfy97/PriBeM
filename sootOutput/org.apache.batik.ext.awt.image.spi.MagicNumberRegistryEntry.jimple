public abstract class org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry extends org.apache.batik.ext.awt.image.spi.AbstractRegistryEntry implements org.apache.batik.ext.awt.image.spi.StreamRegistryEntry
{
    public static final float PRIORITY;
    org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber[] magicNumbers;

    public void <init>(java.lang.String, float, java.lang.String, java.lang.String, int, byte[])
    {
        byte[] r6;
        org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber $r5;
        int i0;
        float f0;
        java.lang.String r1, r2, r3;
        org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry r0;
        org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber[] $r4, $r7;

        r0 := @this: org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        r6 := @parameter5: byte[];

        specialinvoke r0.<org.apache.batik.ext.awt.image.spi.AbstractRegistryEntry: void <init>(java.lang.String,float,java.lang.String,java.lang.String)>(r1, f0, r2, r3);

        $r4 = newarray (org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber)[1];

        r0.<org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry: org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber[] magicNumbers> = $r4;

        $r7 = r0.<org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry: org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber[] magicNumbers>;

        $r5 = new org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber;

        specialinvoke $r5.<org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber: void <init>(int,byte[])>(i0, r6);

        $r7[0] = $r5;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, int, byte[])
    {
        byte[] r4;
        int i0;
        java.lang.String r1, r2, r3;
        org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry r0;

        r0 := @this: org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r4 := @parameter4: byte[];

        specialinvoke r0.<org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry: void <init>(java.lang.String,float,java.lang.String,java.lang.String,int,byte[])>(r1, 1000.0F, r2, r3, i0, r4);

        return;
    }

    public void <init>(java.lang.String, float, java.lang.String, java.lang.String, org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber[])
    {
        float f0;
        java.lang.String r1, r2, r3;
        org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry r0;
        org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber[] r4;

        r0 := @this: org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber[];

        specialinvoke r0.<org.apache.batik.ext.awt.image.spi.AbstractRegistryEntry: void <init>(java.lang.String,float,java.lang.String,java.lang.String)>(r1, f0, r2, r3);

        r0.<org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry: org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber[] magicNumbers> = r4;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber[])
    {
        java.lang.String r1, r2, r3;
        org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry r0;
        org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber[] r4;

        r0 := @this: org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber[];

        specialinvoke r0.<org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry: void <init>(java.lang.String,float,java.lang.String,java.lang.String,org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber[])>(r1, 1000.0F, r2, r3, r4);

        return;
    }

    public void <init>(java.lang.String, float, java.lang.String[], java.lang.String[], int, byte[])
    {
        byte[] r6;
        java.lang.String[] r2, r3;
        org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber $r5;
        int i0;
        float f0;
        java.lang.String r1;
        org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry r0;
        org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber[] $r4, $r7;

        r0 := @this: org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.lang.String[];

        i0 := @parameter4: int;

        r6 := @parameter5: byte[];

        specialinvoke r0.<org.apache.batik.ext.awt.image.spi.AbstractRegistryEntry: void <init>(java.lang.String,float,java.lang.String[],java.lang.String[])>(r1, f0, r2, r3);

        $r4 = newarray (org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber)[1];

        r0.<org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry: org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber[] magicNumbers> = $r4;

        $r7 = r0.<org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry: org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber[] magicNumbers>;

        $r5 = new org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber;

        specialinvoke $r5.<org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber: void <init>(int,byte[])>(i0, r6);

        $r7[0] = $r5;

        return;
    }

    public void <init>(java.lang.String, java.lang.String[], java.lang.String[], int, byte[])
    {
        byte[] r4;
        int i0;
        java.lang.String[] r2, r3;
        java.lang.String r1;
        org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry r0;

        r0 := @this: org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String[];

        i0 := @parameter3: int;

        r4 := @parameter4: byte[];

        specialinvoke r0.<org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry: void <init>(java.lang.String,float,java.lang.String[],java.lang.String[],int,byte[])>(r1, 1000.0F, r2, r3, i0, r4);

        return;
    }

    public void <init>(java.lang.String, float, java.lang.String[], java.lang.String[], org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber[])
    {
        float f0;
        java.lang.String[] r2, r3;
        java.lang.String r1;
        org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry r0;
        org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber[] r4;

        r0 := @this: org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.lang.String[];

        r4 := @parameter4: org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber[];

        specialinvoke r0.<org.apache.batik.ext.awt.image.spi.AbstractRegistryEntry: void <init>(java.lang.String,float,java.lang.String[],java.lang.String[])>(r1, f0, r2, r3);

        r0.<org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry: org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber[] magicNumbers> = r4;

        return;
    }

    public void <init>(java.lang.String, java.lang.String[], java.lang.String[], org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber[])
    {
        java.lang.String[] r2, r3;
        java.lang.String r1;
        org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry r0;
        org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber[] r4;

        r0 := @this: org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String[];

        r4 := @parameter3: org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber[];

        specialinvoke r0.<org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry: void <init>(java.lang.String,float,java.lang.String[],java.lang.String[],org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber[])>(r1, 1000.0F, r2, r3, r4);

        return;
    }

    public void <init>(java.lang.String, java.lang.String[], java.lang.String[], org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber[], float)
    {
        float f0;
        java.lang.String[] r2, r3;
        java.lang.String r1;
        org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry r0;
        org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber[] r4;

        r0 := @this: org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String[];

        r4 := @parameter3: org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber[];

        f0 := @parameter4: float;

        specialinvoke r0.<org.apache.batik.ext.awt.image.spi.AbstractRegistryEntry: void <init>(java.lang.String,float,java.lang.String[],java.lang.String[])>(r1, f0, r2, r3);

        r0.<org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry: org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber[] magicNumbers> = r4;

        return;
    }

    public int getReadlimit()
    {
        org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber $r2;
        int $i0, i1, i2, $i3;
        org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry r0;
        org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber[] $r1, $r3;

        r0 := @this: org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry;

        i1 = 0;

        i2 = 0;

        goto label3;

     label1:
        $r1 = r0.<org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry: org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber[] magicNumbers>;

        $r2 = $r1[i2];

        $i0 = virtualinvoke $r2.<org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber: int getReadlimit()>();

        if $i0 <= i1 goto label2;

        i1 = $i0;

     label2:
        i2 = i2 + 1;

     label3:
        $r3 = r0.<org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry: org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber[] magicNumbers>;

        $i3 = lengthof $r3;

        if i2 < $i3 goto label1;

        return i1;
    }

    public boolean isCompatibleStream(java.io.InputStream) throws java.io.StreamCorruptedException
    {
        org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber $r4;
        int $i0, i1;
        org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry r0;
        org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber[] $r1, $r2;
        java.io.InputStream r3;
        boolean $z0;

        r0 := @this: org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry;

        r3 := @parameter0: java.io.InputStream;

        i1 = 0;

        goto label3;

     label1:
        $r2 = r0.<org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry: org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber[] magicNumbers>;

        $r4 = $r2[i1];

        $z0 = virtualinvoke $r4.<org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber: boolean isMatch(java.io.InputStream)>(r3);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

     label3:
        $r1 = r0.<org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry: org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry$MagicNumber[] magicNumbers>;

        $i0 = lengthof $r1;

        if i1 < $i0 goto label1;

        return 0;
    }

    public abstract org.apache.batik.ext.awt.image.renderable.Filter handleStream(java.io.InputStream, org.apache.batik.util.ParsedURL, boolean);

    public static void <clinit>()
    {
        <org.apache.batik.ext.awt.image.spi.MagicNumberRegistryEntry: float PRIORITY> = 1000.0F;

        return;
    }
}
