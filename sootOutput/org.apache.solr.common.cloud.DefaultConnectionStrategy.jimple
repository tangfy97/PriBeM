public class org.apache.solr.common.cloud.DefaultConnectionStrategy extends org.apache.solr.common.cloud.ZkClientConnectionStrategy
{
    private static org.slf4j.Logger log;

    public void <init>()
    {
        org.apache.solr.common.cloud.DefaultConnectionStrategy r0;

        r0 := @this: org.apache.solr.common.cloud.DefaultConnectionStrategy;

        specialinvoke r0.<org.apache.solr.common.cloud.ZkClientConnectionStrategy: void <init>()>();

        return;
    }

    public void connect(java.lang.String, int, org.apache.zookeeper.Watcher, org.apache.solr.common.cloud.ZkClientConnectionStrategy$ZkUpdate) throws java.io.IOException, java.lang.InterruptedException, java.util.concurrent.TimeoutException
    {
        org.apache.solr.common.cloud.DefaultConnectionStrategy r4;
        org.apache.zookeeper.Watcher r3;
        int i0;
        org.apache.solr.common.cloud.ZkClientConnectionStrategy$ZkUpdate r0;
        java.lang.String r2;
        org.apache.solr.common.cloud.SolrZooKeeper $r1;

        r4 := @this: org.apache.solr.common.cloud.DefaultConnectionStrategy;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r3 := @parameter2: org.apache.zookeeper.Watcher;

        r0 := @parameter3: org.apache.solr.common.cloud.ZkClientConnectionStrategy$ZkUpdate;

        $r1 = new org.apache.solr.common.cloud.SolrZooKeeper;

        specialinvoke $r1.<org.apache.solr.common.cloud.SolrZooKeeper: void <init>(java.lang.String,int,org.apache.zookeeper.Watcher)>(r2, i0, r3);

        virtualinvoke r0.<org.apache.solr.common.cloud.ZkClientConnectionStrategy$ZkUpdate: void update(org.apache.solr.common.cloud.SolrZooKeeper)>($r1);

        return;
    }

    public void reconnect(java.lang.String, int, org.apache.zookeeper.Watcher, org.apache.solr.common.cloud.ZkClientConnectionStrategy$ZkUpdate) throws java.io.IOException
    {
        org.slf4j.Logger $r0, $r5, $r7, $r8;
        org.apache.solr.common.cloud.DefaultConnectionStrategy r9;
        org.apache.zookeeper.Watcher r4;
        java.lang.Exception $r6;
        int i0;
        org.apache.solr.common.cloud.ZkClientConnectionStrategy$ZkUpdate r1;
        java.lang.String r3;
        org.apache.solr.common.cloud.SolrZooKeeper $r2;

        r9 := @this: org.apache.solr.common.cloud.DefaultConnectionStrategy;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r4 := @parameter2: org.apache.zookeeper.Watcher;

        r1 := @parameter3: org.apache.solr.common.cloud.ZkClientConnectionStrategy$ZkUpdate;

        $r0 = <org.apache.solr.common.cloud.DefaultConnectionStrategy: org.slf4j.Logger log>;

        interfaceinvoke $r0.<org.slf4j.Logger: void info(java.lang.String)>("Connection expired - starting a new one...");

     label1:
        $r2 = new org.apache.solr.common.cloud.SolrZooKeeper;

        specialinvoke $r2.<org.apache.solr.common.cloud.SolrZooKeeper: void <init>(java.lang.String,int,org.apache.zookeeper.Watcher)>(r3, i0, r4);

        virtualinvoke r1.<org.apache.solr.common.cloud.ZkClientConnectionStrategy$ZkUpdate: void update(org.apache.solr.common.cloud.SolrZooKeeper)>($r2);

        $r5 = <org.apache.solr.common.cloud.DefaultConnectionStrategy: org.slf4j.Logger log>;

        interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String)>("Reconnected to ZooKeeper");

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = <org.apache.solr.common.cloud.DefaultConnectionStrategy: org.slf4j.Logger log>;

        staticinvoke <org.apache.solr.common.SolrException: void log(org.slf4j.Logger,java.lang.String,java.lang.Throwable)>($r7, "Reconnect to ZooKeeper failed", $r6);

        $r8 = <org.apache.solr.common.cloud.DefaultConnectionStrategy: org.slf4j.Logger log>;

        interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String)>("Reconnect to ZooKeeper failed");

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/solr/common/cloud/DefaultConnectionStrategy;");

        <org.apache.solr.common.cloud.DefaultConnectionStrategy: org.slf4j.Logger log> = $r0;

        return;
    }
}
