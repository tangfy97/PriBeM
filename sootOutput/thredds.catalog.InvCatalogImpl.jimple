public class thredds.catalog.InvCatalogImpl extends thredds.catalog.InvCatalog
{
    private java.lang.String createFrom;
    private java.util.List roots;
    private java.lang.StringBuilder log;
    private boolean hasError;
    private boolean isStatic;
    private thredds.catalog.DatasetFilter filter;
    private boolean debugFilter;
    private javax.swing.event.EventListenerList listenerList;
    private thredds.catalog.InvCatalogImpl top;
    private thredds.catalog.InvCatalogFactory factory;
    private thredds.catalog.InvCatalogConvertIF converter;
    private volatile int hashCode;

    public void subset(thredds.catalog.InvDataset)
    {
        java.util.ArrayList $r7;
        java.util.List $r3, $r5, $r8;
        thredds.catalog.InvCatalogImpl r2;
        thredds.catalog.InvDatasetImpl r1, $r4;
        ucar.nc2.constants.FeatureType $r6;
        thredds.catalog.InvDataset r0;

        r2 := @this: thredds.catalog.InvCatalogImpl;

        r0 := @parameter0: thredds.catalog.InvDataset;

        r1 = (thredds.catalog.InvDatasetImpl) r0;

        virtualinvoke r1.<thredds.catalog.InvDatasetImpl: void transferMetadata(thredds.catalog.InvDatasetImpl,boolean)>(r1, 1);

        r2.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvDatasetImpl topDataset> = r1;

        $r3 = r2.<thredds.catalog.InvCatalogImpl: java.util.List datasets>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        $r5 = r2.<thredds.catalog.InvCatalogImpl: java.util.List datasets>;

        $r4 = r2.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvDatasetImpl topDataset>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r6 = virtualinvoke r1.<thredds.catalog.InvDatasetImpl: ucar.nc2.constants.FeatureType getDataType()>();

        r1.<thredds.catalog.InvDatasetImpl: ucar.nc2.constants.FeatureType dataType> = $r6;

        virtualinvoke r1.<thredds.catalog.InvDatasetImpl: void setCatalog(thredds.catalog.InvCatalog)>(r2);

        r1.<thredds.catalog.InvDatasetImpl: thredds.catalog.InvDataset parent> = null;

        $r7 = new java.util.ArrayList;

        $r8 = virtualinvoke r1.<thredds.catalog.InvDatasetImpl: java.util.List getServicesLocal()>();

        specialinvoke $r7.<java.util.ArrayList: void <init>(java.util.Collection)>($r8);

        virtualinvoke r2.<thredds.catalog.InvCatalogImpl: void findServices(java.util.List,thredds.catalog.InvDataset)>($r7, r1);

        virtualinvoke r1.<thredds.catalog.InvDatasetImpl: void setServicesLocal(java.util.List)>($r7);

        virtualinvoke r2.<thredds.catalog.InvCatalogImpl: boolean finish()>();

        return;
    }

    void findServices(java.util.List, thredds.catalog.InvDataset)
    {
        thredds.catalog.InvAccess r13;
        java.lang.String $r11;
        thredds.catalog.InvDataset r0, $r10, r14;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r2, $r4;
        thredds.catalog.InvService $r9, $r12;
        java.util.List $r1, $r3, r7;
        thredds.catalog.InvCatalogImpl r6;
        java.lang.Object $r5, $r8;

        r6 := @this: thredds.catalog.InvCatalogImpl;

        r7 := @parameter0: java.util.List;

        r0 := @parameter1: thredds.catalog.InvDataset;

        $z0 = r0 instanceof thredds.catalog.InvCatalogRef;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = virtualinvoke r0.<thredds.catalog.InvDataset: java.util.List getAccess()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r8 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r13 = (thredds.catalog.InvAccess) $r8;

        $r9 = virtualinvoke r13.<thredds.catalog.InvAccess: thredds.catalog.InvService getService()>();

        $r10 = virtualinvoke r13.<thredds.catalog.InvAccess: thredds.catalog.InvDataset getDataset()>();

        $r11 = virtualinvoke $r9.<thredds.catalog.InvService: java.lang.String getName()>();

        $r12 = virtualinvoke $r10.<thredds.catalog.InvDataset: thredds.catalog.InvService findService(java.lang.String)>($r11);

        if null != $r12 goto label3;

        $z3 = interfaceinvoke r7.<java.util.List: boolean contains(java.lang.Object)>($r9);

        if $z3 != 0 goto label3;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r9);

     label3:
        goto label2;

     label4:
        $r3 = virtualinvoke r0.<thredds.catalog.InvDataset: java.util.List getDatasets()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r14 = (thredds.catalog.InvDataset) $r5;

        virtualinvoke r6.<thredds.catalog.InvCatalogImpl: void findServices(java.util.List,thredds.catalog.InvDataset)>(r7, r14);

        goto label5;

     label6:
        return;
    }

    public void filter(thredds.catalog.DatasetFilter)
    {
        thredds.catalog.InvCatalogImpl r0;
        thredds.catalog.DatasetFilter r1;
        thredds.catalog.InvDatasetImpl $r2, $r3;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        r1 := @parameter0: thredds.catalog.DatasetFilter;

        $r2 = r0.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvDatasetImpl topDataset>;

        specialinvoke r0.<thredds.catalog.InvCatalogImpl: boolean mark(thredds.catalog.DatasetFilter,thredds.catalog.InvDatasetImpl)>(r1, $r2);

        $r3 = r0.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvDatasetImpl topDataset>;

        specialinvoke r0.<thredds.catalog.InvCatalogImpl: void delete(thredds.catalog.InvDatasetImpl)>($r3);

        r0.<thredds.catalog.InvCatalogImpl: thredds.catalog.DatasetFilter filter> = r1;

        return;
    }

    protected thredds.catalog.DatasetFilter getDatasetFilter()
    {
        thredds.catalog.InvCatalogImpl r0;
        thredds.catalog.DatasetFilter $r1;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        $r1 = r0.<thredds.catalog.InvCatalogImpl: thredds.catalog.DatasetFilter filter>;

        return $r1;
    }

    private boolean mark(thredds.catalog.DatasetFilter, thredds.catalog.InvDatasetImpl)
    {
        thredds.catalog.InvCatalogRef r14;
        int $i0;
        java.lang.String $r8, $r10;
        boolean $z0, $z1, $z2, $z3, z4, $z5;
        thredds.catalog.InvDataset r12;
        java.io.PrintStream $r6;
        java.util.Iterator $r2;
        java.util.List $r1;
        thredds.catalog.InvCatalogImpl r4;
        java.lang.StringBuilder $r5, $r7, $r9;
        java.lang.Object $r11;
        thredds.catalog.DatasetFilter r3;
        thredds.catalog.InvDatasetImpl r0, $r13;

        r4 := @this: thredds.catalog.InvCatalogImpl;

        r3 := @parameter0: thredds.catalog.DatasetFilter;

        r0 := @parameter1: thredds.catalog.InvDatasetImpl;

        $z0 = r0 instanceof thredds.catalog.InvCatalogRef;

        if $z0 == 0 goto label1;

        r14 = (thredds.catalog.InvCatalogRef) r0;

        $z3 = virtualinvoke r14.<thredds.catalog.InvCatalogRef: boolean isRead()>();

        if $z3 != 0 goto label1;

        return 0;

     label1:
        z4 = 1;

        $r1 = virtualinvoke r0.<thredds.catalog.InvDatasetImpl: java.util.List getDatasets()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z5 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label3;

        $r11 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r12 = (thredds.catalog.InvDataset) $r11;

        $r13 = (thredds.catalog.InvDatasetImpl) r12;

        $z2 = specialinvoke r4.<thredds.catalog.InvCatalogImpl: boolean mark(thredds.catalog.DatasetFilter,thredds.catalog.InvDatasetImpl)>(r3, $r13);

        z4 = z4 & $z2;

        goto label2;

     label3:
        if z4 != 0 goto label4;

        return 0;

     label4:
        $i0 = interfaceinvoke r3.<thredds.catalog.DatasetFilter: int accept(thredds.catalog.InvDataset)>(r0);

        if $i0 < 0 goto label5;

        return 0;

     label5:
        virtualinvoke r0.<thredds.catalog.InvDatasetImpl: void setMark(boolean)>(1);

        $z1 = r4.<thredds.catalog.InvCatalogImpl: boolean debugFilter>;

        if $z1 == 0 goto label6;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mark ");

        $r8 = virtualinvoke r0.<thredds.catalog.InvDatasetImpl: java.lang.String getName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r10);

     label6:
        return 1;
    }

    private void delete(thredds.catalog.InvDatasetImpl)
    {
        thredds.catalog.InvCatalogRef r12;
        java.lang.String $r9, $r11;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.io.PrintStream $r7;
        java.util.Iterator $r2;
        java.util.List $r1;
        thredds.catalog.InvCatalogImpl r5;
        java.lang.Object $r3;
        java.lang.StringBuilder $r6, $r8, $r10;
        thredds.catalog.InvDatasetImpl r0, r4;

        r5 := @this: thredds.catalog.InvCatalogImpl;

        r0 := @parameter0: thredds.catalog.InvDatasetImpl;

        $z0 = r0 instanceof thredds.catalog.InvCatalogRef;

        if $z0 == 0 goto label1;

        r12 = (thredds.catalog.InvCatalogRef) r0;

        $z3 = virtualinvoke r12.<thredds.catalog.InvCatalogRef: boolean isRead()>();

        if $z3 != 0 goto label1;

        return;

     label1:
        $r1 = virtualinvoke r0.<thredds.catalog.InvDatasetImpl: java.util.List getDatasets()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z4 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label5;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (thredds.catalog.InvDatasetImpl) $r3;

        $z1 = virtualinvoke r4.<thredds.catalog.InvDatasetImpl: boolean getMark()>();

        if $z1 == 0 goto label3;

        interfaceinvoke $r2.<java.util.Iterator: void remove()>();

        $z2 = r5.<thredds.catalog.InvCatalogImpl: boolean debugFilter>;

        if $z2 == 0 goto label4;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" remove ");

        $r9 = virtualinvoke r4.<thredds.catalog.InvDatasetImpl: java.lang.String getName()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r11);

        goto label4;

     label3:
        specialinvoke r5.<thredds.catalog.InvCatalogImpl: void delete(thredds.catalog.InvDatasetImpl)>(r4);

     label4:
        goto label2;

     label5:
        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.net.URI)
    {
        thredds.catalog.InvCatalogImpl r0;
        java.lang.String r1, r2;
        java.net.URI r3;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.net.URI;

        specialinvoke r0.<thredds.catalog.InvCatalogImpl: void <init>(java.lang.String,java.lang.String,ucar.nc2.units.DateType,java.net.URI)>(r1, r2, null, r3);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, ucar.nc2.units.DateType, java.net.URI)
    {
        thredds.catalog.InvCatalogImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String r3, r4;
        java.net.URI r6;
        java.util.ArrayList $r1;
        ucar.nc2.units.DateType r5;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: ucar.nc2.units.DateType;

        r6 := @parameter3: java.net.URI;

        specialinvoke r0.<thredds.catalog.InvCatalog: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<thredds.catalog.InvCatalogImpl: java.util.List roots> = $r1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r0.<thredds.catalog.InvCatalogImpl: java.lang.StringBuilder log> = $r2;

        r0.<thredds.catalog.InvCatalogImpl: boolean hasError> = 0;

        r0.<thredds.catalog.InvCatalogImpl: boolean isStatic> = 0;

        r0.<thredds.catalog.InvCatalogImpl: thredds.catalog.DatasetFilter filter> = null;

        r0.<thredds.catalog.InvCatalogImpl: boolean debugFilter> = 0;

        r0.<thredds.catalog.InvCatalogImpl: javax.swing.event.EventListenerList listenerList> = null;

        r0.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvCatalogImpl top> = null;

        r0.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvCatalogFactory factory> = null;

        r0.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvCatalogConvertIF converter> = null;

        r0.<thredds.catalog.InvCatalogImpl: int hashCode> = 0;

        r0.<thredds.catalog.InvCatalogImpl: java.lang.String name> = r3;

        r0.<thredds.catalog.InvCatalogImpl: java.lang.String version> = r4;

        r0.<thredds.catalog.InvCatalogImpl: ucar.nc2.units.DateType expires> = r5;

        r0.<thredds.catalog.InvCatalogImpl: java.net.URI baseURI> = r6;

        return;
    }

    public boolean finish()
    {
        java.util.HashMap $r9;
        int $i0;
        java.lang.String $r3, $r19;
        boolean $z0, $z1;
        thredds.catalog.InvDataset r13;
        java.util.Iterator $r5;
        java.util.List $r1, $r4, $r6, $r16;
        thredds.catalog.InvCatalogImpl r0;
        java.lang.Object $r12, $r17;
        thredds.catalog.InvDatasetImpl $r2, $r7, $r8, $r10, $r11, $r14, $r15, $r18;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        $r1 = r0.<thredds.catalog.InvCatalogImpl: java.util.List datasets>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 1 goto label1;

        $r16 = r0.<thredds.catalog.InvCatalogImpl: java.util.List datasets>;

        $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(0);

        $r18 = (thredds.catalog.InvDatasetImpl) $r17;

        r0.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvDatasetImpl topDataset> = $r18;

        goto label6;

     label1:
        $r2 = new thredds.catalog.InvDatasetImpl;

        $r3 = r0.<thredds.catalog.InvCatalogImpl: java.lang.String name>;

        if $r3 != null goto label2;

        $r19 = "Top Dataset";

        goto label3;

     label2:
        $r19 = r0.<thredds.catalog.InvCatalogImpl: java.lang.String name>;

     label3:
        specialinvoke $r2.<thredds.catalog.InvDatasetImpl: void <init>(thredds.catalog.InvDataset,java.lang.String)>(null, $r19);

        r0.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvDatasetImpl topDataset> = $r2;

        $r4 = r0.<thredds.catalog.InvCatalogImpl: java.util.List datasets>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r12 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r13 = (thredds.catalog.InvDataset) $r12;

        $r15 = r0.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvDatasetImpl topDataset>;

        $r14 = (thredds.catalog.InvDatasetImpl) r13;

        virtualinvoke $r15.<thredds.catalog.InvDatasetImpl: void addDataset(thredds.catalog.InvDatasetImpl)>($r14);

        goto label4;

     label5:
        $r7 = r0.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvDatasetImpl topDataset>;

        $r6 = r0.<thredds.catalog.InvCatalogImpl: java.util.List services>;

        virtualinvoke $r7.<thredds.catalog.InvDatasetImpl: void setServicesLocal(java.util.List)>($r6);

     label6:
        $r8 = r0.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvDatasetImpl topDataset>;

        virtualinvoke $r8.<thredds.catalog.InvDatasetImpl: void setCatalog(thredds.catalog.InvCatalog)>(r0);

        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        r0.<thredds.catalog.InvCatalogImpl: java.util.Map dsHash> = $r9;

        $r10 = r0.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvDatasetImpl topDataset>;

        specialinvoke r0.<thredds.catalog.InvCatalogImpl: void addDatasetIds(thredds.catalog.InvDatasetImpl)>($r10);

        $r11 = r0.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvDatasetImpl topDataset>;

        $z0 = virtualinvoke $r11.<thredds.catalog.InvDatasetImpl: boolean finish()>();

        return $z0;
    }

    private void addDatasetIds(thredds.catalog.InvDatasetImpl)
    {
        java.util.Iterator $r3;
        java.util.List $r2;
        thredds.catalog.InvCatalogImpl r0;
        java.lang.Object $r4;
        thredds.catalog.InvDatasetImpl r1, r6;
        boolean $z0, $z1;
        thredds.catalog.InvDataset r5;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        r1 := @parameter0: thredds.catalog.InvDatasetImpl;

        virtualinvoke r0.<thredds.catalog.InvCatalogImpl: void addDatasetByID(thredds.catalog.InvDatasetImpl)>(r1);

        $z0 = r1 instanceof thredds.catalog.InvCatalogRef;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = virtualinvoke r1.<thredds.catalog.InvDatasetImpl: java.util.List getDatasets()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (thredds.catalog.InvDataset) $r4;

        r6 = (thredds.catalog.InvDatasetImpl) r5;

        specialinvoke r0.<thredds.catalog.InvCatalogImpl: void addDatasetIds(thredds.catalog.InvDatasetImpl)>(r6);

        goto label2;

     label3:
        return;
    }

    public void addDatasetByID(thredds.catalog.InvDatasetImpl)
    {
        thredds.catalog.InvCatalogImpl r2;
        java.util.Map $r3;
        java.lang.String $r1, $r4;
        thredds.catalog.InvDatasetImpl r0;

        r2 := @this: thredds.catalog.InvCatalogImpl;

        r0 := @parameter0: thredds.catalog.InvDatasetImpl;

        $r1 = virtualinvoke r0.<thredds.catalog.InvDatasetImpl: java.lang.String getID()>();

        if $r1 == null goto label1;

        $r3 = r2.<thredds.catalog.InvCatalogImpl: java.util.Map dsHash>;

        $r4 = virtualinvoke r0.<thredds.catalog.InvDatasetImpl: java.lang.String getID()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r0);

     label1:
        return;
    }

    public void removeDatasetByID(thredds.catalog.InvDatasetImpl)
    {
        thredds.catalog.InvCatalogImpl r2;
        java.util.Map $r3;
        java.lang.String $r1, $r4;
        thredds.catalog.InvDatasetImpl r0;

        r2 := @this: thredds.catalog.InvCatalogImpl;

        r0 := @parameter0: thredds.catalog.InvDatasetImpl;

        $r1 = virtualinvoke r0.<thredds.catalog.InvDatasetImpl: java.lang.String getID()>();

        if $r1 == null goto label1;

        $r3 = r2.<thredds.catalog.InvCatalogImpl: java.util.Map dsHash>;

        $r4 = virtualinvoke r0.<thredds.catalog.InvDatasetImpl: java.lang.String getID()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r4);

     label1:
        return;
    }

    public void addDataset(thredds.catalog.InvDatasetImpl)
    {
        java.util.List $r2;
        thredds.catalog.InvCatalogImpl r1;
        thredds.catalog.InvDatasetImpl r0;

        r1 := @this: thredds.catalog.InvCatalogImpl;

        r0 := @parameter0: thredds.catalog.InvDatasetImpl;

        if r0 == null goto label1;

        $r2 = r1.<thredds.catalog.InvCatalogImpl: java.util.List datasets>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r0);

     label1:
        return;
    }

    public boolean removeDataset(thredds.catalog.InvDatasetImpl)
    {
        java.util.List $r2;
        thredds.catalog.InvCatalogImpl r0;
        thredds.catalog.InvDatasetImpl r1;
        boolean $z0;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        r1 := @parameter0: thredds.catalog.InvDatasetImpl;

        $r2 = r0.<thredds.catalog.InvCatalogImpl: java.util.List datasets>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        virtualinvoke r1.<thredds.catalog.InvDatasetImpl: void setParent(thredds.catalog.InvDatasetImpl)>(null);

        virtualinvoke r0.<thredds.catalog.InvCatalogImpl: void removeDatasetByID(thredds.catalog.InvDatasetImpl)>(r1);

        return 1;

     label1:
        return 0;
    }

    public boolean replaceDataset(thredds.catalog.InvDatasetImpl, thredds.catalog.InvDatasetImpl)
    {
        java.util.List $r3, $r7, $r9;
        thredds.catalog.InvCatalogImpl r0;
        int i0, $i1;
        java.lang.Object $r4;
        thredds.catalog.InvDatasetImpl r1, $r2, r6, $r8;
        boolean $z0, $z1;
        thredds.catalog.InvDataset r5;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        r1 := @parameter0: thredds.catalog.InvDatasetImpl;

        r6 := @parameter1: thredds.catalog.InvDatasetImpl;

        $r2 = r0.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvDatasetImpl topDataset>;

        $z0 = virtualinvoke $r2.<thredds.catalog.InvDatasetImpl: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        r0.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvDatasetImpl topDataset> = r6;

        $r8 = r0.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvDatasetImpl topDataset>;

        virtualinvoke $r8.<thredds.catalog.InvDatasetImpl: void setCatalog(thredds.catalog.InvCatalog)>(r0);

     label1:
        i0 = 0;

     label2:
        $r9 = r0.<thredds.catalog.InvCatalogImpl: java.util.List datasets>;

        $i1 = interfaceinvoke $r9.<java.util.List: int size()>();

        if i0 >= $i1 goto label4;

        $r3 = r0.<thredds.catalog.InvCatalogImpl: java.util.List datasets>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0);

        r5 = (thredds.catalog.InvDataset) $r4;

        $z1 = virtualinvoke r5.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label3;

        $r7 = r0.<thredds.catalog.InvCatalogImpl: java.util.List datasets>;

        interfaceinvoke $r7.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r6);

        virtualinvoke r0.<thredds.catalog.InvCatalogImpl: void removeDatasetByID(thredds.catalog.InvDatasetImpl)>(r1);

        virtualinvoke r0.<thredds.catalog.InvCatalogImpl: void addDatasetByID(thredds.catalog.InvDatasetImpl)>(r6);

        return 1;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        return 0;
    }

    public void addProperty(thredds.catalog.InvProperty)
    {
        java.util.List $r2;
        thredds.catalog.InvCatalogImpl r0;
        thredds.catalog.InvProperty r1;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        r1 := @parameter0: thredds.catalog.InvProperty;

        $r2 = r0.<thredds.catalog.InvCatalogImpl: java.util.List properties>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void addService(thredds.catalog.InvService)
    {
        thredds.catalog.InvService r0;
        java.lang.IllegalArgumentException $r10;
        java.util.List $r9;
        thredds.catalog.InvCatalogImpl r2;
        java.util.Map $r3, $r7;
        java.lang.Object $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r1, $r4, $r8;
        boolean $z0;

        r2 := @this: thredds.catalog.InvCatalogImpl;

        r0 := @parameter0: thredds.catalog.InvService;

        if r0 != null goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Service to add was null.");

        throw $r10;

     label1:
        $r1 = virtualinvoke r0.<thredds.catalog.InvService: java.lang.String getName()>();

        if $r1 == null goto label4;

        $r3 = r2.<thredds.catalog.InvCatalogImpl: java.util.Map serviceHash>;

        $r4 = virtualinvoke r0.<thredds.catalog.InvService: java.lang.String getName()>();

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        if $r5 != null goto label2;

        $r7 = r2.<thredds.catalog.InvCatalogImpl: java.util.Map serviceHash>;

        $r8 = virtualinvoke r0.<thredds.catalog.InvService: java.lang.String getName()>();

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r0);

        $r9 = r2.<thredds.catalog.InvCatalogImpl: java.util.List services>;

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r0);

        return;

     label2:
        $z0 = virtualinvoke r0.<thredds.catalog.InvService: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label3;

        return;

     label3:
        $r6 = r2.<thredds.catalog.InvCatalogImpl: java.lang.StringBuilder log>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Multiple Services with the same name\n");

        return;

     label4:
        return;
    }

    public void setDataset(thredds.catalog.InvDatasetImpl)
    {
        thredds.catalog.InvCatalogImpl r0;
        thredds.catalog.InvDatasetImpl r1;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        r1 := @parameter0: thredds.catalog.InvDatasetImpl;

        r0.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvDatasetImpl topDataset> = r1;

        virtualinvoke r0.<thredds.catalog.InvCatalogImpl: void addDataset(thredds.catalog.InvDatasetImpl)>(r1);

        return;
    }

    public java.lang.String getCreateFrom()
    {
        thredds.catalog.InvCatalogImpl r0;
        java.lang.String $r1;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        $r1 = r0.<thredds.catalog.InvCatalogImpl: java.lang.String createFrom>;

        return $r1;
    }

    public void setCreateFrom(java.lang.String)
    {
        thredds.catalog.InvCatalogImpl r0;
        java.lang.String r1;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        r1 := @parameter0: java.lang.String;

        r0.<thredds.catalog.InvCatalogImpl: java.lang.String createFrom> = r1;

        return;
    }

    public void setBaseURI(java.net.URI)
    {
        thredds.catalog.InvCatalogImpl r0;
        java.net.URI r1;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        r1 := @parameter0: java.net.URI;

        r0.<thredds.catalog.InvCatalogImpl: java.net.URI baseURI> = r1;

        return;
    }

    public java.net.URI getBaseURI()
    {
        thredds.catalog.InvCatalogImpl r0;
        java.net.URI $r1;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        $r1 = r0.<thredds.catalog.InvCatalogImpl: java.net.URI baseURI>;

        return $r1;
    }

    public void setExpires(ucar.nc2.units.DateType)
    {
        thredds.catalog.InvCatalogImpl r0;
        ucar.nc2.units.DateType r1;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        r1 := @parameter0: ucar.nc2.units.DateType;

        r0.<thredds.catalog.InvCatalogImpl: ucar.nc2.units.DateType expires> = r1;

        return;
    }

    public boolean hasFatalError()
    {
        thredds.catalog.InvCatalogImpl r0;
        boolean $z0;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        $z0 = r0.<thredds.catalog.InvCatalogImpl: boolean hasError>;

        return $z0;
    }

    public void appendErrorMessage(java.lang.String, boolean)
    {
        thredds.catalog.InvCatalogImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String r1;
        boolean z0, $z1, $z2;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<thredds.catalog.InvCatalogImpl: java.lang.StringBuilder log>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $z1 = r0.<thredds.catalog.InvCatalogImpl: boolean hasError>;

        $z2 = $z1 | z0;

        r0.<thredds.catalog.InvCatalogImpl: boolean hasError> = $z2;

        return;
    }

    public boolean check(java.lang.StringBuilder, boolean)
    {
        int $i0;
        java.lang.String $r12;
        boolean $z0, z1, z2, $z3, $z4;
        thredds.catalog.InvDataset r6;
        java.io.PrintStream $r9;
        java.util.Iterator $r4;
        java.util.List $r3;
        thredds.catalog.InvCatalogImpl r0;
        java.lang.StringBuilder r1, $r2, $r8, $r10, $r11, $r13;
        java.lang.Object $r5;
        thredds.catalog.InvDatasetImpl r7;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        r1 := @parameter0: java.lang.StringBuilder;

        z2 := @parameter1: boolean;

        $z0 = r0.<thredds.catalog.InvCatalogImpl: boolean hasError>;

        if $z0 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z1 = $z3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("----Catalog Validation version 1.0.01\n");

        $r2 = r0.<thredds.catalog.InvCatalogImpl: java.lang.StringBuilder log>;

        $i0 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label3;

        $r13 = r0.<thredds.catalog.InvCatalogImpl: java.lang.StringBuilder log>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r13);

     label3:
        if z2 == 0 goto label4;

        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" catalog valid = ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r12);

     label4:
        $r3 = r0.<thredds.catalog.InvCatalogImpl: java.util.List datasets>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z4 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label6;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (thredds.catalog.InvDataset) $r5;

        r7 = (thredds.catalog.InvDatasetImpl) r6;

        virtualinvoke r7.<thredds.catalog.InvDatasetImpl: boolean check(java.lang.StringBuilder,boolean)>(r1, z2);

        goto label5;

     label6:
        return z1;
    }

    public java.lang.String getLog()
    {
        java.lang.StringBuilder $r1;
        thredds.catalog.InvCatalogImpl r0;
        java.lang.String $r2;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        $r1 = r0.<thredds.catalog.InvCatalogImpl: java.lang.StringBuilder log>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public java.lang.String dump()
    {
        thredds.catalog.InvCatalogImpl r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8, $r10;
        java.lang.String $r3, $r6, $r9, $r12, $r13;
        thredds.catalog.InvDatasetImpl $r11;

        r2 := @this: thredds.catalog.InvCatalogImpl;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>(1000);

        virtualinvoke $r0.<java.lang.StringBuilder: void setLength(int)>(0);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Catalog <");

        $r3 = virtualinvoke r2.<thredds.catalog.InvCatalogImpl: java.lang.String getName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> <");

        $r6 = virtualinvoke r2.<thredds.catalog.InvCatalogImpl: java.lang.String getVersion()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> <");

        $r9 = virtualinvoke r2.<thredds.catalog.InvCatalogImpl: java.lang.String getCreateFrom()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        $r11 = r2.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvDatasetImpl topDataset>;

        $r12 = virtualinvoke $r11.<thredds.catalog.InvDatasetImpl: java.lang.String dump(int)>(2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public void addPropertyChangeListener(java.beans.PropertyChangeListener)
    {
        thredds.catalog.InvCatalogImpl r0;
        javax.swing.event.EventListenerList $r1, $r3, $r4;
        java.beans.PropertyChangeListener r2;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        r2 := @parameter0: java.beans.PropertyChangeListener;

        $r1 = r0.<thredds.catalog.InvCatalogImpl: javax.swing.event.EventListenerList listenerList>;

        if $r1 != null goto label1;

        $r4 = new javax.swing.event.EventListenerList;

        specialinvoke $r4.<javax.swing.event.EventListenerList: void <init>()>();

        r0.<thredds.catalog.InvCatalogImpl: javax.swing.event.EventListenerList listenerList> = $r4;

     label1:
        $r3 = r0.<thredds.catalog.InvCatalogImpl: javax.swing.event.EventListenerList listenerList>;

        virtualinvoke $r3.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "Ljava/beans/PropertyChangeListener;", r2);

        return;
    }

    public void removePropertyChangeListener(java.beans.PropertyChangeListener)
    {
        thredds.catalog.InvCatalogImpl r0;
        java.beans.PropertyChangeListener r1;
        javax.swing.event.EventListenerList $r2;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        r1 := @parameter0: java.beans.PropertyChangeListener;

        $r2 = r0.<thredds.catalog.InvCatalogImpl: javax.swing.event.EventListenerList listenerList>;

        virtualinvoke $r2.<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>(class "Ljava/beans/PropertyChangeListener;", r1);

        return;
    }

    void firePropertyChangeEvent(java.beans.PropertyChangeEvent)
    {
        java.lang.Object[] $r3;
        thredds.catalog.InvCatalogImpl r0;
        javax.swing.event.EventListenerList $r1, $r2;
        java.beans.PropertyChangeListener $r7;
        int $i0, $i1, i2, $i4;
        java.lang.Object $r4, $r5;
        java.beans.PropertyChangeEvent r6;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        r6 := @parameter0: java.beans.PropertyChangeEvent;

        $r1 = r0.<thredds.catalog.InvCatalogImpl: javax.swing.event.EventListenerList listenerList>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<thredds.catalog.InvCatalogImpl: javax.swing.event.EventListenerList listenerList>;

        $r3 = virtualinvoke $r2.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>();

        $i0 = lengthof $r3;

        i2 = $i0 - 2;

     label2:
        if i2 < 0 goto label4;

        $r4 = $r3[i2];

        if $r4 != class "Ljava/beans/PropertyChangeListener;" goto label3;

        $i1 = i2 + 1;

        $r5 = $r3[$i1];

        $r7 = (java.beans.PropertyChangeListener) $r5;

        interfaceinvoke $r7.<java.beans.PropertyChangeListener: void propertyChange(java.beans.PropertyChangeEvent)>(r6);

     label3:
        $i4 = (int) -2;

        i2 = i2 + $i4;

        goto label2;

     label4:
        return;
    }

    thredds.catalog.InvCatalogImpl getTopCatalog()
    {
        thredds.catalog.InvCatalogImpl r0, $r1, $r2;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        $r1 = r0.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvCatalogImpl top>;

        if $r1 != null goto label1;

        $r2 = r0;

        goto label2;

     label1:
        $r2 = r0.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvCatalogImpl top>;

     label2:
        return $r2;
    }

    void setTopCatalog(thredds.catalog.InvCatalogImpl)
    {
        thredds.catalog.InvCatalogImpl r0, r1;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        r1 := @parameter0: thredds.catalog.InvCatalogImpl;

        r0.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvCatalogImpl top> = r1;

        return;
    }

    thredds.catalog.InvCatalogFactory getCatalogFactory()
    {
        thredds.catalog.InvCatalogImpl r0;
        thredds.catalog.InvCatalogFactory $r1;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        $r1 = r0.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvCatalogFactory factory>;

        return $r1;
    }

    void setCatalogFactory(thredds.catalog.InvCatalogFactory)
    {
        thredds.catalog.InvCatalogImpl r0;
        thredds.catalog.InvCatalogFactory r1;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        r1 := @parameter0: thredds.catalog.InvCatalogFactory;

        r0.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvCatalogFactory factory> = r1;

        return;
    }

    thredds.catalog.InvCatalogConvertIF getCatalogConverter()
    {
        thredds.catalog.InvCatalogConvertIF $r1;
        thredds.catalog.InvCatalogImpl r0;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        $r1 = r0.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvCatalogConvertIF converter>;

        return $r1;
    }

    void setCatalogConverter(thredds.catalog.InvCatalogConvertIF)
    {
        thredds.catalog.InvCatalogConvertIF r1;
        thredds.catalog.InvCatalogImpl r0;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        r1 := @parameter0: thredds.catalog.InvCatalogConvertIF;

        r0.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvCatalogConvertIF converter> = r1;

        return;
    }

    public void setCatalogConverterToVersion1()
    {
        thredds.catalog.InvCatalogConvertIF $r2;
        thredds.catalog.InvCatalogImpl r0;
        thredds.catalog.InvCatalogFactory $r1;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        $r1 = r0.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvCatalogFactory factory>;

        $r2 = virtualinvoke $r1.<thredds.catalog.InvCatalogFactory: thredds.catalog.InvCatalogConvertIF getCatalogConverter(java.lang.String)>("http://www.unidata.ucar.edu/namespaces/thredds/InvCatalog/v1.0");

        virtualinvoke r0.<thredds.catalog.InvCatalogImpl: void setCatalogConverter(thredds.catalog.InvCatalogConvertIF)>($r2);

        return;
    }

    public java.util.List getDatasetRoots()
    {
        java.util.List $r1;
        thredds.catalog.InvCatalogImpl r0;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        $r1 = r0.<thredds.catalog.InvCatalogImpl: java.util.List roots>;

        return $r1;
    }

    public void addDatasetRoot(thredds.catalog.DataRootConfig)
    {
        thredds.catalog.DataRootConfig r1;
        java.util.List $r2;
        thredds.catalog.InvCatalogImpl r0;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        r1 := @parameter0: thredds.catalog.DataRootConfig;

        $r2 = r0.<thredds.catalog.InvCatalogImpl: java.util.List roots>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void writeXML(java.io.OutputStream) throws java.io.IOException
    {
        thredds.catalog.InvCatalogConvertIF $r1;
        java.io.OutputStream r2;
        thredds.catalog.InvCatalogImpl r0;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        r2 := @parameter0: java.io.OutputStream;

        $r1 = virtualinvoke r0.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvCatalogConvertIF getCatalogConverter()>();

        interfaceinvoke $r1.<thredds.catalog.InvCatalogConvertIF: void writeXML(thredds.catalog.InvCatalogImpl,java.io.OutputStream)>(r0, r2);

        return;
    }

    public void writeXML(java.io.OutputStream, boolean) throws java.io.IOException
    {
        java.io.OutputStream r2;
        thredds.catalog.InvCatalogImpl r0;
        thredds.catalog.InvCatalogConvertIF $r1;
        boolean z0;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        r2 := @parameter0: java.io.OutputStream;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvCatalogConvertIF getCatalogConverter()>();

        interfaceinvoke $r1.<thredds.catalog.InvCatalogConvertIF: void writeXML(thredds.catalog.InvCatalogImpl,java.io.OutputStream,boolean)>(r0, r2, z0);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        thredds.catalog.InvCatalogImpl r0;
        int $i0, $i1;
        java.lang.Object r1;
        boolean $z0, $z1;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof thredds.catalog.InvCatalogImpl;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        $i1 = virtualinvoke r0.<thredds.catalog.InvCatalogImpl: int hashCode()>();

        if $i0 != $i1 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public int hashCode()
    {
        java.util.List $r2, $r3;
        thredds.catalog.InvCatalogImpl r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9;
        java.lang.String $r1, $r4;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        $i0 = r0.<thredds.catalog.InvCatalogImpl: int hashCode>;

        if $i0 != 0 goto label2;

        i8 = 17;

        $r1 = virtualinvoke r0.<thredds.catalog.InvCatalogImpl: java.lang.String getName()>();

        if null == $r1 goto label1;

        $r4 = virtualinvoke r0.<thredds.catalog.InvCatalogImpl: java.lang.String getName()>();

        $i5 = virtualinvoke $r4.<java.lang.String: int hashCode()>();

        i8 = 629 + $i5;

     label1:
        $i1 = 37 * i8;

        $r2 = virtualinvoke r0.<thredds.catalog.InvCatalogImpl: java.util.List getServices()>();

        $i2 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        $i6 = $i1 + $i2;

        $i3 = 37 * $i6;

        $r3 = virtualinvoke r0.<thredds.catalog.InvCatalogImpl: java.util.List getDatasets()>();

        $i4 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

        $i7 = $i3 + $i4;

        r0.<thredds.catalog.InvCatalogImpl: int hashCode> = $i7;

     label2:
        $i9 = r0.<thredds.catalog.InvCatalogImpl: int hashCode>;

        return $i9;
    }

    public boolean isStatic()
    {
        thredds.catalog.InvCatalogImpl r0;
        boolean $z0;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        $z0 = r0.<thredds.catalog.InvCatalogImpl: boolean isStatic>;

        return $z0;
    }

    public void setStatic(boolean)
    {
        thredds.catalog.InvCatalogImpl r0;
        boolean z0;

        r0 := @this: thredds.catalog.InvCatalogImpl;

        z0 := @parameter0: boolean;

        r0.<thredds.catalog.InvCatalogImpl: boolean isStatic> = z0;

        return;
    }
}
