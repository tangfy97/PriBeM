public class org.jdesktop.swingx.table.ColumnControlButton extends javax.swing.JButton
{
    public static final java.lang.String COLUMN_CONTROL_MARKER;
    public static final java.lang.String COLUMN_CONTROL_BUTTON_ICON_KEY;
    public static final java.lang.String COLUMN_CONTROL_BUTTON_MARGIN_KEY;
    protected org.jdesktop.swingx.table.ColumnControlPopup popup;
    private org.jdesktop.swingx.JXTable table;
    private java.beans.PropertyChangeListener tablePropertyChangeListener;
    javax.swing.event.TableColumnModelListener columnModelListener;
    private java.util.List columnVisibilityActions;

    public void <init>(org.jdesktop.swingx.JXTable)
    {
        org.jdesktop.swingx.table.ColumnControlButton r0;
        org.jdesktop.swingx.JXTable r1;

        r0 := @this: org.jdesktop.swingx.table.ColumnControlButton;

        r1 := @parameter0: org.jdesktop.swingx.JXTable;

        specialinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: void <init>(org.jdesktop.swingx.JXTable,javax.swing.Icon)>(r1, null);

        return;
    }

    public void <init>(org.jdesktop.swingx.JXTable, javax.swing.Icon)
    {
        org.jdesktop.swingx.table.ColumnControlButton r0;
        javax.swing.Icon r1;
        javax.swing.Action $r2;
        org.jdesktop.swingx.JXTable r3;

        r0 := @this: org.jdesktop.swingx.table.ColumnControlButton;

        r3 := @parameter0: org.jdesktop.swingx.JXTable;

        r1 := @parameter1: javax.swing.Icon;

        specialinvoke r0.<javax.swing.JButton: void <init>()>();

        specialinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: void init()>();

        $r2 = specialinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: javax.swing.Action createControlAction(javax.swing.Icon)>(r1);

        virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: void setAction(javax.swing.Action)>($r2);

        virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: void updateActionUI()>();

        virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: void updateButtonUI()>();

        specialinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: void installTable(org.jdesktop.swingx.JXTable)>(r3);

        return;
    }

    public void updateUI()
    {
        org.jdesktop.swingx.table.ColumnControlButton r0;
        org.jdesktop.swingx.table.ColumnControlPopup $r1;

        r0 := @this: org.jdesktop.swingx.table.ColumnControlButton;

        specialinvoke r0.<javax.swing.JButton: void updateUI()>();

        virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: void updateActionUI()>();

        virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: void updateButtonUI()>();

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: org.jdesktop.swingx.table.ColumnControlPopup getColumnControlPopup()>();

        interfaceinvoke $r1.<org.jdesktop.swingx.table.ColumnControlPopup: void updateUI()>();

        return;
    }

    protected void updateButtonUI()
    {
        java.awt.Insets $r1, $r2, $r3;
        org.jdesktop.swingx.table.ColumnControlButton r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.table.ColumnControlButton;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: java.awt.Insets getMargin()>();

        if $r1 == null goto label1;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: java.awt.Insets getMargin()>();

        $z0 = $r3 instanceof javax.swing.plaf.UIResource;

        if $z0 == 0 goto label2;

     label1:
        $r2 = staticinvoke <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>("ColumnControlButton.margin");

        virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: void setMargin(java.awt.Insets)>($r2);

     label2:
        return;
    }

    protected void updateActionUI()
    {
        org.jdesktop.swingx.table.ColumnControlButton r0;
        javax.swing.Icon $r4, r6;
        javax.swing.Action $r1, $r2, $r5;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.table.ColumnControlButton;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: javax.swing.Action getAction()>();

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: javax.swing.Action getAction()>();

        $r3 = interfaceinvoke $r2.<javax.swing.Action: java.lang.Object getValue(java.lang.String)>("SmallIcon");

        r6 = (javax.swing.Icon) $r3;

        if r6 == null goto label2;

        $z0 = r6 instanceof javax.swing.plaf.UIResource;

        if $z0 == 0 goto label3;

     label2:
        $r4 = staticinvoke <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>("ColumnControlButton.actionIcon");

        $r5 = virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: javax.swing.Action getAction()>();

        interfaceinvoke $r5.<javax.swing.Action: void putValue(java.lang.String,java.lang.Object)>("SmallIcon", $r4);

     label3:
        return;
    }

    public void togglePopup()
    {
        org.jdesktop.swingx.table.ColumnControlButton r0;
        org.jdesktop.swingx.table.ColumnControlPopup $r1;

        r0 := @this: org.jdesktop.swingx.table.ColumnControlButton;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: org.jdesktop.swingx.table.ColumnControlPopup getColumnControlPopup()>();

        interfaceinvoke $r1.<org.jdesktop.swingx.table.ColumnControlPopup: void toggleVisibility(javax.swing.JComponent)>(r0);

        return;
    }

    public void applyComponentOrientation(java.awt.ComponentOrientation)
    {
        org.jdesktop.swingx.table.ColumnControlButton r0;
        java.awt.ComponentOrientation r1;
        org.jdesktop.swingx.table.ColumnControlPopup $r2;

        r0 := @this: org.jdesktop.swingx.table.ColumnControlButton;

        r1 := @parameter0: java.awt.ComponentOrientation;

        specialinvoke r0.<javax.swing.JButton: void applyComponentOrientation(java.awt.ComponentOrientation)>(r1);

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: org.jdesktop.swingx.table.ColumnControlPopup getColumnControlPopup()>();

        interfaceinvoke $r2.<org.jdesktop.swingx.table.ColumnControlPopup: void applyComponentOrientation(java.awt.ComponentOrientation)>(r1);

        return;
    }

    protected org.jdesktop.swingx.table.ColumnControlPopup getColumnControlPopup()
    {
        org.jdesktop.swingx.table.ColumnControlButton r0;
        org.jdesktop.swingx.table.ColumnControlPopup $r1, $r2, $r3;

        r0 := @this: org.jdesktop.swingx.table.ColumnControlButton;

        $r1 = r0.<org.jdesktop.swingx.table.ColumnControlButton: org.jdesktop.swingx.table.ColumnControlPopup popup>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: org.jdesktop.swingx.table.ColumnControlPopup createColumnControlPopup()>();

        r0.<org.jdesktop.swingx.table.ColumnControlButton: org.jdesktop.swingx.table.ColumnControlPopup popup> = $r3;

     label1:
        $r2 = r0.<org.jdesktop.swingx.table.ColumnControlButton: org.jdesktop.swingx.table.ColumnControlPopup popup>;

        return $r2;
    }

    protected org.jdesktop.swingx.table.ColumnControlPopup createColumnControlPopup()
    {
        org.jdesktop.swingx.table.ColumnControlButton r1;
        org.jdesktop.swingx.table.ColumnControlButton$DefaultColumnControlPopup $r0;

        r1 := @this: org.jdesktop.swingx.table.ColumnControlButton;

        $r0 = new org.jdesktop.swingx.table.ColumnControlButton$DefaultColumnControlPopup;

        specialinvoke $r0.<org.jdesktop.swingx.table.ColumnControlButton$DefaultColumnControlPopup: void <init>(org.jdesktop.swingx.table.ColumnControlButton)>(r1);

        return $r0;
    }

    protected void updateFromColumnModelChange(javax.swing.table.TableColumnModel)
    {
        org.jdesktop.swingx.table.ColumnControlButton r1;
        javax.swing.event.TableColumnModelListener $r4, $r5;
        javax.swing.table.TableColumnModel r0, $r3;
        org.jdesktop.swingx.JXTable $r2;
        boolean $z0;

        r1 := @this: org.jdesktop.swingx.table.ColumnControlButton;

        r0 := @parameter0: javax.swing.table.TableColumnModel;

        if r0 == null goto label1;

        $r5 = r1.<org.jdesktop.swingx.table.ColumnControlButton: javax.swing.event.TableColumnModelListener columnModelListener>;

        interfaceinvoke r0.<javax.swing.table.TableColumnModel: void removeColumnModelListener(javax.swing.event.TableColumnModelListener)>($r5);

     label1:
        virtualinvoke r1.<org.jdesktop.swingx.table.ColumnControlButton: void populatePopup()>();

        $z0 = virtualinvoke r1.<org.jdesktop.swingx.table.ColumnControlButton: boolean canControl()>();

        if $z0 == 0 goto label2;

        $r2 = r1.<org.jdesktop.swingx.table.ColumnControlButton: org.jdesktop.swingx.JXTable table>;

        $r3 = virtualinvoke $r2.<org.jdesktop.swingx.JXTable: javax.swing.table.TableColumnModel getColumnModel()>();

        $r4 = virtualinvoke r1.<org.jdesktop.swingx.table.ColumnControlButton: javax.swing.event.TableColumnModelListener getColumnModelListener()>();

        interfaceinvoke $r3.<javax.swing.table.TableColumnModel: void addColumnModelListener(javax.swing.event.TableColumnModelListener)>($r4);

     label2:
        return;
    }

    protected void updateFromTableEnabledChanged()
    {
        org.jdesktop.swingx.table.ColumnControlButton r0;
        javax.swing.Action $r1;
        org.jdesktop.swingx.JXTable $r2;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.table.ColumnControlButton;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: javax.swing.Action getAction()>();

        $r2 = r0.<org.jdesktop.swingx.table.ColumnControlButton: org.jdesktop.swingx.JXTable table>;

        $z0 = virtualinvoke $r2.<org.jdesktop.swingx.JXTable: boolean isEnabled()>();

        interfaceinvoke $r1.<javax.swing.Action: void setEnabled(boolean)>($z0);

        return;
    }

    protected boolean canControl()
    {
        org.jdesktop.swingx.table.ColumnControlButton r0;
        javax.swing.table.TableColumnModel $r2;
        org.jdesktop.swingx.JXTable $r1;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.table.ColumnControlButton;

        $r1 = r0.<org.jdesktop.swingx.table.ColumnControlButton: org.jdesktop.swingx.JXTable table>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXTable: javax.swing.table.TableColumnModel getColumnModel()>();

        $z0 = $r2 instanceof org.jdesktop.swingx.table.TableColumnModelExt;

        return $z0;
    }

    protected void populatePopup()
    {
        org.jdesktop.swingx.table.ColumnControlButton r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.table.ColumnControlButton;

        virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: void clearAll()>();

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: boolean canControl()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: void createVisibilityActions()>();

        virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: void addVisibilityActionItems()>();

     label1:
        virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: void addAdditionalActionItems()>();

        return;
    }

    protected void clearAll()
    {
        org.jdesktop.swingx.table.ColumnControlButton r0;
        org.jdesktop.swingx.table.ColumnControlPopup $r1;

        r0 := @this: org.jdesktop.swingx.table.ColumnControlButton;

        virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: void clearColumnVisibilityActions()>();

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: org.jdesktop.swingx.table.ColumnControlPopup getColumnControlPopup()>();

        interfaceinvoke $r1.<org.jdesktop.swingx.table.ColumnControlPopup: void removeAll()>();

        return;
    }

    protected void clearColumnVisibilityActions()
    {
        org.jdesktop.swingx.table.ColumnControlButton r0;
        java.util.Iterator $r3;
        org.jdesktop.swingx.table.ColumnControlButton$ColumnVisibilityAction r6;
        java.util.List $r1, $r2, $r4;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.table.ColumnControlButton;

        $r1 = r0.<org.jdesktop.swingx.table.ColumnControlButton: java.util.List columnVisibilityActions>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<org.jdesktop.swingx.table.ColumnControlButton: java.util.List columnVisibilityActions>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.jdesktop.swingx.table.ColumnControlButton$ColumnVisibilityAction) $r5;

        virtualinvoke r6.<org.jdesktop.swingx.table.ColumnControlButton$ColumnVisibilityAction: void releaseColumn()>();

        goto label2;

     label3:
        $r4 = r0.<org.jdesktop.swingx.table.ColumnControlButton: java.util.List columnVisibilityActions>;

        interfaceinvoke $r4.<java.util.List: void clear()>();

        return;
    }

    protected void addVisibilityActionItems()
    {
        java.util.List $r2, $r3;
        org.jdesktop.swingx.table.ColumnControlButton r0;
        org.jdesktop.swingx.table.ColumnControlPopup $r1;

        r0 := @this: org.jdesktop.swingx.table.ColumnControlButton;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: org.jdesktop.swingx.table.ColumnControlPopup getColumnControlPopup()>();

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: java.util.List getColumnVisibilityActions()>();

        $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        interfaceinvoke $r1.<org.jdesktop.swingx.table.ColumnControlPopup: void addVisibilityActionItems(java.util.List)>($r3);

        return;
    }

    protected void addAdditionalActionItems()
    {
        java.util.List $r2, $r3;
        org.jdesktop.swingx.table.ColumnControlButton r0;
        org.jdesktop.swingx.table.ColumnControlPopup $r1;

        r0 := @this: org.jdesktop.swingx.table.ColumnControlButton;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: org.jdesktop.swingx.table.ColumnControlPopup getColumnControlPopup()>();

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: java.util.List getAdditionalActions()>();

        $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        interfaceinvoke $r1.<org.jdesktop.swingx.table.ColumnControlPopup: void addAdditionalActionItems(java.util.List)>($r3);

        return;
    }

    protected void createVisibilityActions()
    {
        org.jdesktop.swingx.table.ColumnControlButton r0;
        java.util.Iterator $r3;
        javax.swing.table.TableColumn r5;
        org.jdesktop.swingx.JXTable $r1;
        org.jdesktop.swingx.table.ColumnControlButton$ColumnVisibilityAction $r6;
        java.util.List $r2, $r7;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.table.ColumnControlButton;

        $r1 = r0.<org.jdesktop.swingx.table.ColumnControlButton: org.jdesktop.swingx.JXTable table>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXTable: java.util.List getColumns(boolean)>(1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (javax.swing.table.TableColumn) $r4;

        $r6 = virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: org.jdesktop.swingx.table.ColumnControlButton$ColumnVisibilityAction createColumnVisibilityAction(javax.swing.table.TableColumn)>(r5);

        if $r6 == null goto label2;

        $r7 = virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: java.util.List getColumnVisibilityActions()>();

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r6);

     label2:
        goto label1;

     label3:
        return;
    }

    protected org.jdesktop.swingx.table.ColumnControlButton$ColumnVisibilityAction createColumnVisibilityAction(javax.swing.table.TableColumn)
    {
        org.jdesktop.swingx.table.ColumnControlButton r1;
        javax.swing.table.TableColumn r2;
        org.jdesktop.swingx.table.ColumnControlButton$ColumnVisibilityAction $r0;

        r1 := @this: org.jdesktop.swingx.table.ColumnControlButton;

        r2 := @parameter0: javax.swing.table.TableColumn;

        $r0 = new org.jdesktop.swingx.table.ColumnControlButton$ColumnVisibilityAction;

        specialinvoke $r0.<org.jdesktop.swingx.table.ColumnControlButton$ColumnVisibilityAction: void <init>(org.jdesktop.swingx.table.ColumnControlButton,javax.swing.table.TableColumn)>(r1, r2);

        return $r0;
    }

    protected java.util.List getColumnVisibilityActions()
    {
        java.util.List $r1, $r2;
        org.jdesktop.swingx.table.ColumnControlButton r0;
        java.util.ArrayList $r3;

        r0 := @this: org.jdesktop.swingx.table.ColumnControlButton;

        $r1 = r0.<org.jdesktop.swingx.table.ColumnControlButton: java.util.List columnVisibilityActions>;

        if $r1 != null goto label1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.jdesktop.swingx.table.ColumnControlButton: java.util.List columnVisibilityActions> = $r3;

     label1:
        $r2 = r0.<org.jdesktop.swingx.table.ColumnControlButton: java.util.List columnVisibilityActions>;

        return $r2;
    }

    protected java.util.List getAdditionalActions()
    {
        org.jdesktop.swingx.table.ColumnControlButton r0;
        java.util.Iterator $r3;
        javax.swing.Action $r7;
        org.jdesktop.swingx.JXTable $r5;
        java.util.ArrayList $r2;
        java.util.List $r1;
        java.lang.Object $r4;
        javax.swing.ActionMap $r6;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.table.ColumnControlButton;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: java.util.List getColumnControlActionKeys()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = r0.<org.jdesktop.swingx.table.ColumnControlButton: org.jdesktop.swingx.JXTable table>;

        $r6 = virtualinvoke $r5.<org.jdesktop.swingx.JXTable: javax.swing.ActionMap getActionMap()>();

        $r7 = virtualinvoke $r6.<javax.swing.ActionMap: javax.swing.Action get(java.lang.Object)>($r4);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label1;

     label2:
        return $r2;
    }

    protected java.util.List getColumnControlActionKeys()
    {
        org.jdesktop.swingx.table.ColumnControlButton r0;
        java.lang.Object[] $r3;
        org.jdesktop.swingx.JXTable $r1;
        java.util.ArrayList $r4;
        int $i0, i1;
        java.lang.Object $r5, $r6;
        javax.swing.ActionMap $r2;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.table.ColumnControlButton;

        $r1 = r0.<org.jdesktop.swingx.table.ColumnControlButton: org.jdesktop.swingx.JXTable table>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXTable: javax.swing.ActionMap getActionMap()>();

        $r3 = virtualinvoke $r2.<javax.swing.ActionMap: java.lang.Object[] allKeys()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        i1 = 0;

     label1:
        $i0 = lengthof $r3;

        if i1 >= $i0 goto label3;

        $r5 = $r3[i1];

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: boolean isColumnControlActionKey(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        $r6 = $r3[i1];

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r6);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        staticinvoke <java.util.Collections: void sort(java.util.List)>($r4);

        return $r4;
    }

    protected boolean isColumnControlActionKey(java.lang.Object)
    {
        org.jdesktop.swingx.table.ColumnControlButton r2;
        java.lang.Object r0;
        java.lang.String $r1;
        boolean $z0, $z1, $z2;

        r2 := @this: org.jdesktop.swingx.table.ColumnControlButton;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $r1 = (java.lang.String) r0;

        $z1 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("column.");

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    private void installTable(org.jdesktop.swingx.JXTable)
    {
        org.jdesktop.swingx.table.ColumnControlButton r0;
        java.beans.PropertyChangeListener $r2;
        org.jdesktop.swingx.JXTable r1;

        r0 := @this: org.jdesktop.swingx.table.ColumnControlButton;

        r1 := @parameter0: org.jdesktop.swingx.JXTable;

        r0.<org.jdesktop.swingx.table.ColumnControlButton: org.jdesktop.swingx.JXTable table> = r1;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: java.beans.PropertyChangeListener getTablePropertyChangeListener()>();

        virtualinvoke r1.<org.jdesktop.swingx.JXTable: void addPropertyChangeListener(java.beans.PropertyChangeListener)>($r2);

        virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: void updateFromColumnModelChange(javax.swing.table.TableColumnModel)>(null);

        virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: void updateFromTableEnabledChanged()>();

        return;
    }

    private void init()
    {
        java.lang.Object $r2;
        org.jdesktop.swingx.table.ColumnControlButton r0;
        javax.swing.JComboBox $r1;

        r0 := @this: org.jdesktop.swingx.table.ColumnControlButton;

        virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: void setFocusPainted(boolean)>(0);

        virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: void setFocusable(boolean)>(0);

        $r1 = new javax.swing.JComboBox;

        specialinvoke $r1.<javax.swing.JComboBox: void <init>()>();

        $r2 = virtualinvoke $r1.<javax.swing.JComboBox: java.lang.Object getClientProperty(java.lang.Object)>("doNotCancelPopup");

        virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: void putClientProperty(java.lang.Object,java.lang.Object)>("doNotCancelPopup", $r2);

        return;
    }

    private javax.swing.Action createControlAction(javax.swing.Icon)
    {
        javax.swing.Icon r2;
        org.jdesktop.swingx.table.ColumnControlButton$1 $r0;
        org.jdesktop.swingx.table.ColumnControlButton r1;

        r1 := @this: org.jdesktop.swingx.table.ColumnControlButton;

        r2 := @parameter0: javax.swing.Icon;

        $r0 = new org.jdesktop.swingx.table.ColumnControlButton$1;

        specialinvoke $r0.<org.jdesktop.swingx.table.ColumnControlButton$1: void <init>(org.jdesktop.swingx.table.ColumnControlButton)>(r1);

        interfaceinvoke $r0.<javax.swing.Action: void putValue(java.lang.String,java.lang.Object)>("SmallIcon", r2);

        return $r0;
    }

    protected java.beans.PropertyChangeListener getTablePropertyChangeListener()
    {
        org.jdesktop.swingx.table.ColumnControlButton r0;
        java.beans.PropertyChangeListener $r1, $r2, $r3;

        r0 := @this: org.jdesktop.swingx.table.ColumnControlButton;

        $r1 = r0.<org.jdesktop.swingx.table.ColumnControlButton: java.beans.PropertyChangeListener tablePropertyChangeListener>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: java.beans.PropertyChangeListener createTablePropertyChangeListener()>();

        r0.<org.jdesktop.swingx.table.ColumnControlButton: java.beans.PropertyChangeListener tablePropertyChangeListener> = $r3;

     label1:
        $r2 = r0.<org.jdesktop.swingx.table.ColumnControlButton: java.beans.PropertyChangeListener tablePropertyChangeListener>;

        return $r2;
    }

    protected java.beans.PropertyChangeListener createTablePropertyChangeListener()
    {
        org.jdesktop.swingx.table.ColumnControlButton$2 $r0;
        org.jdesktop.swingx.table.ColumnControlButton r1;

        r1 := @this: org.jdesktop.swingx.table.ColumnControlButton;

        $r0 = new org.jdesktop.swingx.table.ColumnControlButton$2;

        specialinvoke $r0.<org.jdesktop.swingx.table.ColumnControlButton$2: void <init>(org.jdesktop.swingx.table.ColumnControlButton)>(r1);

        return $r0;
    }

    protected javax.swing.event.TableColumnModelListener getColumnModelListener()
    {
        org.jdesktop.swingx.table.ColumnControlButton r0;
        javax.swing.event.TableColumnModelListener $r1, $r2, $r3;

        r0 := @this: org.jdesktop.swingx.table.ColumnControlButton;

        $r1 = r0.<org.jdesktop.swingx.table.ColumnControlButton: javax.swing.event.TableColumnModelListener columnModelListener>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.table.ColumnControlButton: javax.swing.event.TableColumnModelListener createColumnModelListener()>();

        r0.<org.jdesktop.swingx.table.ColumnControlButton: javax.swing.event.TableColumnModelListener columnModelListener> = $r3;

     label1:
        $r2 = r0.<org.jdesktop.swingx.table.ColumnControlButton: javax.swing.event.TableColumnModelListener columnModelListener>;

        return $r2;
    }

    protected javax.swing.event.TableColumnModelListener createColumnModelListener()
    {
        org.jdesktop.swingx.table.ColumnControlButton$3 $r0;
        org.jdesktop.swingx.table.ColumnControlButton r1;

        r1 := @this: org.jdesktop.swingx.table.ColumnControlButton;

        $r0 = new org.jdesktop.swingx.table.ColumnControlButton$3;

        specialinvoke $r0.<org.jdesktop.swingx.table.ColumnControlButton$3: void <init>(org.jdesktop.swingx.table.ColumnControlButton)>(r1);

        return $r0;
    }

    static org.jdesktop.swingx.JXTable access$000(org.jdesktop.swingx.table.ColumnControlButton)
    {
        org.jdesktop.swingx.table.ColumnControlButton r0;
        org.jdesktop.swingx.JXTable $r1;

        r0 := @parameter0: org.jdesktop.swingx.table.ColumnControlButton;

        $r1 = r0.<org.jdesktop.swingx.table.ColumnControlButton: org.jdesktop.swingx.JXTable table>;

        return $r1;
    }

    static void <clinit>()
    {
        org.jdesktop.swingx.plaf.ColumnControlButtonAddon $r0;

        <org.jdesktop.swingx.table.ColumnControlButton: java.lang.String COLUMN_CONTROL_BUTTON_MARGIN_KEY> = "ColumnControlButton.margin";

        <org.jdesktop.swingx.table.ColumnControlButton: java.lang.String COLUMN_CONTROL_BUTTON_ICON_KEY> = "ColumnControlButton.actionIcon";

        <org.jdesktop.swingx.table.ColumnControlButton: java.lang.String COLUMN_CONTROL_MARKER> = "column.";

        $r0 = new org.jdesktop.swingx.plaf.ColumnControlButtonAddon;

        specialinvoke $r0.<org.jdesktop.swingx.plaf.ColumnControlButtonAddon: void <init>()>();

        staticinvoke <org.jdesktop.swingx.plaf.LookAndFeelAddons: void contribute(org.jdesktop.swingx.plaf.ComponentAddon)>($r0);

        return;
    }
}
