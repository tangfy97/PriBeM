class org.apache.lucene.codecs.DocValuesConsumer$BitsFilteredTermsEnum extends org.apache.lucene.index.FilteredTermsEnum
{
    final org.apache.lucene.util.OpenBitSet liveTerms;
    static final boolean $assertionsDisabled;

    void <init>(org.apache.lucene.index.TermsEnum, org.apache.lucene.util.OpenBitSet)
    {
        org.apache.lucene.index.TermsEnum r1;
        org.apache.lucene.util.OpenBitSet r2;
        java.lang.AssertionError $r3;
        org.apache.lucene.codecs.DocValuesConsumer$BitsFilteredTermsEnum r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.codecs.DocValuesConsumer$BitsFilteredTermsEnum;

        r1 := @parameter0: org.apache.lucene.index.TermsEnum;

        r2 := @parameter1: org.apache.lucene.util.OpenBitSet;

        specialinvoke r0.<org.apache.lucene.index.FilteredTermsEnum: void <init>(org.apache.lucene.index.TermsEnum,boolean)>(r1, 0);

        $z0 = <org.apache.lucene.codecs.DocValuesConsumer$BitsFilteredTermsEnum: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r2 != null goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        r0.<org.apache.lucene.codecs.DocValuesConsumer$BitsFilteredTermsEnum: org.apache.lucene.util.OpenBitSet liveTerms> = r2;

        return;
    }

    protected org.apache.lucene.index.FilteredTermsEnum$AcceptStatus accept(org.apache.lucene.util.BytesRef) throws java.io.IOException
    {
        org.apache.lucene.util.BytesRef r4;
        org.apache.lucene.util.OpenBitSet $r1;
        long $l0;
        org.apache.lucene.index.FilteredTermsEnum$AcceptStatus $r2, $r3;
        org.apache.lucene.codecs.DocValuesConsumer$BitsFilteredTermsEnum r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.codecs.DocValuesConsumer$BitsFilteredTermsEnum;

        r4 := @parameter0: org.apache.lucene.util.BytesRef;

        $r1 = r0.<org.apache.lucene.codecs.DocValuesConsumer$BitsFilteredTermsEnum: org.apache.lucene.util.OpenBitSet liveTerms>;

        $l0 = virtualinvoke r0.<org.apache.lucene.codecs.DocValuesConsumer$BitsFilteredTermsEnum: long ord()>();

        $z0 = virtualinvoke $r1.<org.apache.lucene.util.OpenBitSet: boolean get(long)>($l0);

        if $z0 == 0 goto label1;

        $r3 = <org.apache.lucene.index.FilteredTermsEnum$AcceptStatus: org.apache.lucene.index.FilteredTermsEnum$AcceptStatus YES>;

        return $r3;

     label1:
        $r2 = <org.apache.lucene.index.FilteredTermsEnum$AcceptStatus: org.apache.lucene.index.FilteredTermsEnum$AcceptStatus NO>;

        return $r2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/codecs/DocValuesConsumer;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.codecs.DocValuesConsumer$BitsFilteredTermsEnum: boolean $assertionsDisabled> = $z1;

        return;
    }
}
