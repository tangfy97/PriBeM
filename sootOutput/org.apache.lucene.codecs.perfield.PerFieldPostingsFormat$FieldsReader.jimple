class org.apache.lucene.codecs.perfield.PerFieldPostingsFormat$FieldsReader extends org.apache.lucene.codecs.FieldsProducer
{
    private final java.util.Map fields;
    private final java.util.Map formats;
    static final boolean $assertionsDisabled;
    final org.apache.lucene.codecs.perfield.PerFieldPostingsFormat this$0;

    public void <init>(org.apache.lucene.codecs.perfield.PerFieldPostingsFormat, org.apache.lucene.index.SegmentReadState) throws java.io.IOException
    {
        org.apache.lucene.codecs.perfield.PerFieldPostingsFormat r1;
        java.util.Map $r7, $r18, $r19, $r20, $r23, $r27;
        org.apache.lucene.index.FieldInfos $r5;
        boolean $z0, $z1, $z2, $z3;
        org.apache.lucene.index.SegmentReadState r4, $r22;
        java.util.Collection $r8, $r28;
        org.apache.lucene.codecs.PostingsFormat $r16;
        java.lang.Throwable $r26;
        java.util.HashMap $r3;
        java.lang.AssertionError $r25;
        org.apache.lucene.codecs.perfield.PerFieldPostingsFormat$FieldsReader r0;
        java.lang.String r11, $r12, $r13, $r14, $r15, $r17;
        org.apache.lucene.codecs.FieldsProducer $r24;
        java.util.Iterator $r6;
        java.util.TreeMap $r2;
        org.apache.lucene.index.FieldInfo r10;
        java.lang.Object $r9, $r21;

        r0 := @this: org.apache.lucene.codecs.perfield.PerFieldPostingsFormat$FieldsReader;

        r1 := @parameter0: org.apache.lucene.codecs.perfield.PerFieldPostingsFormat;

        r4 := @parameter1: org.apache.lucene.index.SegmentReadState;

        r0.<org.apache.lucene.codecs.perfield.PerFieldPostingsFormat$FieldsReader: org.apache.lucene.codecs.perfield.PerFieldPostingsFormat this$0> = r1;

        specialinvoke r0.<org.apache.lucene.codecs.FieldsProducer: void <init>()>();

        $r2 = new java.util.TreeMap;

        specialinvoke $r2.<java.util.TreeMap: void <init>()>();

        r0.<org.apache.lucene.codecs.perfield.PerFieldPostingsFormat$FieldsReader: java.util.Map fields> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.apache.lucene.codecs.perfield.PerFieldPostingsFormat$FieldsReader: java.util.Map formats> = $r3;

     label01:
        $r5 = r4.<org.apache.lucene.index.SegmentReadState: org.apache.lucene.index.FieldInfos fieldInfos>;

        $r6 = virtualinvoke $r5.<org.apache.lucene.index.FieldInfos: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r9 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.apache.lucene.index.FieldInfo) $r9;

        $z1 = virtualinvoke r10.<org.apache.lucene.index.FieldInfo: boolean isIndexed()>();

        if $z1 == 0 goto label05;

        r11 = r10.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r12 = <org.apache.lucene.codecs.perfield.PerFieldPostingsFormat: java.lang.String PER_FIELD_FORMAT_KEY>;

        $r13 = virtualinvoke r10.<org.apache.lucene.index.FieldInfo: java.lang.String getAttribute(java.lang.String)>($r12);

        if $r13 == null goto label05;

        $r14 = <org.apache.lucene.codecs.perfield.PerFieldPostingsFormat: java.lang.String PER_FIELD_SUFFIX_KEY>;

        $r15 = virtualinvoke r10.<org.apache.lucene.index.FieldInfo: java.lang.String getAttribute(java.lang.String)>($r14);

        $z2 = <org.apache.lucene.codecs.perfield.PerFieldPostingsFormat$FieldsReader: boolean $assertionsDisabled>;

        if $z2 != 0 goto label03;

        if $r15 != null goto label03;

        $r25 = new java.lang.AssertionError;

        specialinvoke $r25.<java.lang.AssertionError: void <init>()>();

        throw $r25;

     label03:
        $r16 = staticinvoke <org.apache.lucene.codecs.PostingsFormat: org.apache.lucene.codecs.PostingsFormat forName(java.lang.String)>($r13);

        $r17 = staticinvoke <org.apache.lucene.codecs.perfield.PerFieldPostingsFormat: java.lang.String getSuffix(java.lang.String,java.lang.String)>($r13, $r15);

        $r18 = r0.<org.apache.lucene.codecs.perfield.PerFieldPostingsFormat$FieldsReader: java.util.Map formats>;

        $z3 = interfaceinvoke $r18.<java.util.Map: boolean containsKey(java.lang.Object)>($r17);

        if $z3 != 0 goto label04;

        $r23 = r0.<org.apache.lucene.codecs.perfield.PerFieldPostingsFormat$FieldsReader: java.util.Map formats>;

        $r22 = new org.apache.lucene.index.SegmentReadState;

        specialinvoke $r22.<org.apache.lucene.index.SegmentReadState: void <init>(org.apache.lucene.index.SegmentReadState,java.lang.String)>(r4, $r17);

        $r24 = virtualinvoke $r16.<org.apache.lucene.codecs.PostingsFormat: org.apache.lucene.codecs.FieldsProducer fieldsProducer(org.apache.lucene.index.SegmentReadState)>($r22);

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, $r24);

     label04:
        $r20 = r0.<org.apache.lucene.codecs.perfield.PerFieldPostingsFormat$FieldsReader: java.util.Map fields>;

        $r19 = r0.<org.apache.lucene.codecs.perfield.PerFieldPostingsFormat$FieldsReader: java.util.Map formats>;

        $r21 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>($r17);

        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r21);

     label05:
        goto label02;

     label06:
        if 1 != 0 goto label10;

        $r7 = r0.<org.apache.lucene.codecs.perfield.PerFieldPostingsFormat$FieldsReader: java.util.Map formats>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Collection values()>();

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.lang.Iterable)>($r8);

        goto label10;

     label07:
        $r26 := @caughtexception;

     label08:
        if 0 != 0 goto label09;

        $r27 = r0.<org.apache.lucene.codecs.perfield.PerFieldPostingsFormat$FieldsReader: java.util.Map formats>;

        $r28 = interfaceinvoke $r27.<java.util.Map: java.util.Collection values()>();

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.lang.Iterable)>($r28);

     label09:
        throw $r26;

     label10:
        return;

        catch java.lang.Throwable from label01 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    public java.util.Iterator iterator()
    {
        java.util.Iterator $r4;
        java.util.Map $r1;
        java.util.Set $r2, $r3;
        org.apache.lucene.codecs.perfield.PerFieldPostingsFormat$FieldsReader r0;

        r0 := @this: org.apache.lucene.codecs.perfield.PerFieldPostingsFormat$FieldsReader;

        $r1 = r0.<org.apache.lucene.codecs.perfield.PerFieldPostingsFormat$FieldsReader: java.util.Map fields>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r2);

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        return $r4;
    }

    public org.apache.lucene.index.Terms terms(java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.codecs.FieldsProducer r4;
        org.apache.lucene.index.Terms $r5;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        org.apache.lucene.codecs.perfield.PerFieldPostingsFormat$FieldsReader r0;

        r0 := @this: org.apache.lucene.codecs.perfield.PerFieldPostingsFormat$FieldsReader;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.lucene.codecs.perfield.PerFieldPostingsFormat$FieldsReader: java.util.Map fields>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.lucene.codecs.FieldsProducer) $r3;

        if r4 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r5 = virtualinvoke r4.<org.apache.lucene.codecs.FieldsProducer: org.apache.lucene.index.Terms terms(java.lang.String)>(r1);

     label2:
        return $r5;
    }

    public int size()
    {
        int $i0;
        org.apache.lucene.codecs.perfield.PerFieldPostingsFormat$FieldsReader r0;
        java.util.Map $r1;

        r0 := @this: org.apache.lucene.codecs.perfield.PerFieldPostingsFormat$FieldsReader;

        $r1 = r0.<org.apache.lucene.codecs.perfield.PerFieldPostingsFormat$FieldsReader: java.util.Map fields>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

    public void close() throws java.io.IOException
    {
        org.apache.lucene.codecs.perfield.PerFieldPostingsFormat$FieldsReader r0;
        java.util.Map $r1;
        java.util.Collection $r2;

        r0 := @this: org.apache.lucene.codecs.perfield.PerFieldPostingsFormat$FieldsReader;

        $r1 = r0.<org.apache.lucene.codecs.perfield.PerFieldPostingsFormat$FieldsReader: java.util.Map formats>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.lang.Iterable)>($r2);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/codecs/perfield/PerFieldPostingsFormat;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.codecs.perfield.PerFieldPostingsFormat$FieldsReader: boolean $assertionsDisabled> = $z1;

        return;
    }
}
