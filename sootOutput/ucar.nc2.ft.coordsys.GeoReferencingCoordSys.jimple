public class ucar.nc2.ft.coordsys.GeoReferencingCoordSys extends java.lang.Object
{
    private ucar.nc2.dataset.CoordinateSystem cs;

    public void <init>(ucar.nc2.dataset.CoordinateSystem)
    {
        ucar.nc2.dataset.CoordinateSystem r1;
        ucar.nc2.ft.coordsys.GeoReferencingCoordSys r0;

        r0 := @this: ucar.nc2.ft.coordsys.GeoReferencingCoordSys;

        r1 := @parameter0: ucar.nc2.dataset.CoordinateSystem;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.ft.coordsys.GeoReferencingCoordSys: ucar.nc2.dataset.CoordinateSystem cs> = r1;

        return;
    }

    public double readLatitudeCoord(ucar.nc2.Variable, int[]) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.nc2.dataset.CoordinateAxis $r2;
        ucar.nc2.ft.coordsys.GeoReferencingCoordSys r0;
        int[] r4;
        ucar.nc2.Variable r3;
        ucar.nc2.dataset.CoordinateSystem $r1;
        java.lang.IllegalArgumentException $r5;
        double $d0;

        r0 := @this: ucar.nc2.ft.coordsys.GeoReferencingCoordSys;

        r3 := @parameter0: ucar.nc2.Variable;

        r4 := @parameter1: int[];

        $r1 = r0.<ucar.nc2.ft.coordsys.GeoReferencingCoordSys: ucar.nc2.dataset.CoordinateSystem cs>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.CoordinateSystem: ucar.nc2.dataset.CoordinateAxis getLatAxis()>();

        if null != $r2 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("There is no latitude coordinate");

        throw $r5;

     label1:
        $d0 = virtualinvoke r0.<ucar.nc2.ft.coordsys.GeoReferencingCoordSys: double readValue(ucar.nc2.Variable,ucar.nc2.Variable,int[])>($r2, r3, r4);

        return $d0;
    }

    public double readLongitudeCoord(ucar.nc2.Variable, int[]) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.nc2.dataset.CoordinateAxis $r2;
        ucar.nc2.ft.coordsys.GeoReferencingCoordSys r0;
        int[] r4;
        ucar.nc2.Variable r3;
        ucar.nc2.dataset.CoordinateSystem $r1;
        java.lang.IllegalArgumentException $r5;
        double $d0;

        r0 := @this: ucar.nc2.ft.coordsys.GeoReferencingCoordSys;

        r3 := @parameter0: ucar.nc2.Variable;

        r4 := @parameter1: int[];

        $r1 = r0.<ucar.nc2.ft.coordsys.GeoReferencingCoordSys: ucar.nc2.dataset.CoordinateSystem cs>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.CoordinateSystem: ucar.nc2.dataset.CoordinateAxis getLonAxis()>();

        if null != $r2 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("There is no longiude coordinate");

        throw $r5;

     label1:
        $d0 = virtualinvoke r0.<ucar.nc2.ft.coordsys.GeoReferencingCoordSys: double readValue(ucar.nc2.Variable,ucar.nc2.Variable,int[])>($r2, r3, r4);

        return $d0;
    }

    public double readPressureCoord(ucar.nc2.Variable, int[]) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.nc2.dataset.CoordinateAxis $r2;
        ucar.nc2.ft.coordsys.GeoReferencingCoordSys r0;
        int[] r4;
        ucar.nc2.Variable r3;
        ucar.nc2.dataset.CoordinateSystem $r1;
        java.lang.IllegalArgumentException $r5;
        double $d0;

        r0 := @this: ucar.nc2.ft.coordsys.GeoReferencingCoordSys;

        r3 := @parameter0: ucar.nc2.Variable;

        r4 := @parameter1: int[];

        $r1 = r0.<ucar.nc2.ft.coordsys.GeoReferencingCoordSys: ucar.nc2.dataset.CoordinateSystem cs>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.CoordinateSystem: ucar.nc2.dataset.CoordinateAxis getPressureAxis()>();

        if null != $r2 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("There is no pressure coordinate");

        throw $r5;

     label1:
        $d0 = virtualinvoke r0.<ucar.nc2.ft.coordsys.GeoReferencingCoordSys: double readValue(ucar.nc2.Variable,ucar.nc2.Variable,int[])>($r2, r3, r4);

        return $d0;
    }

    public double readHeightCoord(ucar.nc2.Variable, int[]) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.nc2.dataset.CoordinateAxis $r2;
        ucar.nc2.ft.coordsys.GeoReferencingCoordSys r0;
        int[] r4;
        ucar.nc2.Variable r3;
        ucar.nc2.dataset.CoordinateSystem $r1;
        java.lang.IllegalArgumentException $r5;
        double $d0;

        r0 := @this: ucar.nc2.ft.coordsys.GeoReferencingCoordSys;

        r3 := @parameter0: ucar.nc2.Variable;

        r4 := @parameter1: int[];

        $r1 = r0.<ucar.nc2.ft.coordsys.GeoReferencingCoordSys: ucar.nc2.dataset.CoordinateSystem cs>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.CoordinateSystem: ucar.nc2.dataset.CoordinateAxis getHeightAxis()>();

        if null != $r2 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("There is no height coordinate");

        throw $r5;

     label1:
        $d0 = virtualinvoke r0.<ucar.nc2.ft.coordsys.GeoReferencingCoordSys: double readValue(ucar.nc2.Variable,ucar.nc2.Variable,int[])>($r2, r3, r4);

        return $d0;
    }

    public double readTimeCoord(ucar.nc2.Variable, int[]) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.nc2.dataset.CoordinateAxis $r2;
        ucar.nc2.ft.coordsys.GeoReferencingCoordSys r0;
        int[] r4;
        ucar.nc2.Variable r3;
        ucar.nc2.dataset.CoordinateSystem $r1;
        java.lang.IllegalArgumentException $r5;
        double $d0;

        r0 := @this: ucar.nc2.ft.coordsys.GeoReferencingCoordSys;

        r3 := @parameter0: ucar.nc2.Variable;

        r4 := @parameter1: int[];

        $r1 = r0.<ucar.nc2.ft.coordsys.GeoReferencingCoordSys: ucar.nc2.dataset.CoordinateSystem cs>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.CoordinateSystem: ucar.nc2.dataset.CoordinateAxis getTaxis()>();

        if null != $r2 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("There is no time coordinate");

        throw $r5;

     label1:
        $d0 = virtualinvoke r0.<ucar.nc2.ft.coordsys.GeoReferencingCoordSys: double readValue(ucar.nc2.Variable,ucar.nc2.Variable,int[])>($r2, r3, r4);

        return $d0;
    }

    public double readGeoXCoord(ucar.nc2.Variable, int[]) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.nc2.dataset.CoordinateAxis $r2;
        ucar.nc2.ft.coordsys.GeoReferencingCoordSys r0;
        int[] r4;
        ucar.nc2.Variable r3;
        ucar.nc2.dataset.CoordinateSystem $r1;
        java.lang.IllegalArgumentException $r5;
        double $d0;

        r0 := @this: ucar.nc2.ft.coordsys.GeoReferencingCoordSys;

        r3 := @parameter0: ucar.nc2.Variable;

        r4 := @parameter1: int[];

        $r1 = r0.<ucar.nc2.ft.coordsys.GeoReferencingCoordSys: ucar.nc2.dataset.CoordinateSystem cs>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.CoordinateSystem: ucar.nc2.dataset.CoordinateAxis getXaxis()>();

        if null != $r2 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("There is no GeoX coordinate");

        throw $r5;

     label1:
        $d0 = virtualinvoke r0.<ucar.nc2.ft.coordsys.GeoReferencingCoordSys: double readValue(ucar.nc2.Variable,ucar.nc2.Variable,int[])>($r2, r3, r4);

        return $d0;
    }

    public double readGeoYCoord(ucar.nc2.Variable, int[]) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.nc2.dataset.CoordinateAxis $r2;
        ucar.nc2.ft.coordsys.GeoReferencingCoordSys r0;
        int[] r4;
        ucar.nc2.Variable r3;
        ucar.nc2.dataset.CoordinateSystem $r1;
        java.lang.IllegalArgumentException $r5;
        double $d0;

        r0 := @this: ucar.nc2.ft.coordsys.GeoReferencingCoordSys;

        r3 := @parameter0: ucar.nc2.Variable;

        r4 := @parameter1: int[];

        $r1 = r0.<ucar.nc2.ft.coordsys.GeoReferencingCoordSys: ucar.nc2.dataset.CoordinateSystem cs>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.CoordinateSystem: ucar.nc2.dataset.CoordinateAxis getYaxis()>();

        if null != $r2 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("There is no GeoY coordinate");

        throw $r5;

     label1:
        $d0 = virtualinvoke r0.<ucar.nc2.ft.coordsys.GeoReferencingCoordSys: double readValue(ucar.nc2.Variable,ucar.nc2.Variable,int[])>($r2, r3, r4);

        return $d0;
    }

    public double readGeoZCoord(ucar.nc2.Variable, int[]) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.nc2.dataset.CoordinateAxis $r2;
        ucar.nc2.ft.coordsys.GeoReferencingCoordSys r0;
        int[] r4;
        ucar.nc2.Variable r3;
        ucar.nc2.dataset.CoordinateSystem $r1;
        java.lang.IllegalArgumentException $r5;
        double $d0;

        r0 := @this: ucar.nc2.ft.coordsys.GeoReferencingCoordSys;

        r3 := @parameter0: ucar.nc2.Variable;

        r4 := @parameter1: int[];

        $r1 = r0.<ucar.nc2.ft.coordsys.GeoReferencingCoordSys: ucar.nc2.dataset.CoordinateSystem cs>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.CoordinateSystem: ucar.nc2.dataset.CoordinateAxis getZaxis()>();

        if null != $r2 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("There is no GeoZ coordinate");

        throw $r5;

     label1:
        $d0 = virtualinvoke r0.<ucar.nc2.ft.coordsys.GeoReferencingCoordSys: double readValue(ucar.nc2.Variable,ucar.nc2.Variable,int[])>($r2, r3, r4);

        return $d0;
    }

    public double readValue(ucar.nc2.Variable, ucar.nc2.Variable, int[]) throws ucar.ma2.InvalidRangeException, java.io.IOException
    {
        ucar.ma2.Section $r4;
        ucar.nc2.ft.coordsys.GeoReferencingCoordSys r0;
        int[] r3;
        ucar.nc2.Variable r1, r2;
        ucar.ma2.Array $r5;
        double $d0;

        r0 := @this: ucar.nc2.ft.coordsys.GeoReferencingCoordSys;

        r1 := @parameter0: ucar.nc2.Variable;

        r2 := @parameter1: ucar.nc2.Variable;

        r3 := @parameter2: int[];

        $r4 = virtualinvoke r0.<ucar.nc2.ft.coordsys.GeoReferencingCoordSys: ucar.ma2.Section mapIndex(ucar.nc2.Variable,ucar.nc2.Variable,int[])>(r1, r2, r3);

        $r5 = virtualinvoke r1.<ucar.nc2.Variable: ucar.ma2.Array read(ucar.ma2.Section)>($r4);

        $d0 = virtualinvoke $r5.<ucar.ma2.Array: double nextDouble()>();

        return $d0;
    }

    public ucar.ma2.Section mapIndex(ucar.nc2.Variable, ucar.nc2.Variable, int[]) throws ucar.ma2.InvalidRangeException
    {
        ucar.ma2.Section $r4;
        int[] r8;
        int $i0, $i1, $i2, $i3, i4;
        ucar.nc2.Variable r0, r2;
        java.lang.String $r14;
        java.lang.IllegalArgumentException $r9;
        java.util.List $r1, $r3;
        ucar.nc2.ft.coordsys.GeoReferencingCoordSys r15;
        java.lang.Object $r5, $r7;
        ucar.nc2.Dimension r6;
        java.lang.StringBuilder $r10, $r11, $r12, $r13;

        r15 := @this: ucar.nc2.ft.coordsys.GeoReferencingCoordSys;

        r0 := @parameter0: ucar.nc2.Variable;

        r2 := @parameter1: ucar.nc2.Variable;

        r8 := @parameter2: int[];

        $r1 = virtualinvoke r0.<ucar.nc2.Variable: java.util.List getDimensions()>();

        $r3 = virtualinvoke r2.<ucar.nc2.Variable: java.util.List getDimensions()>();

        $r4 = new ucar.ma2.Section;

        specialinvoke $r4.<ucar.ma2.Section: void <init>()>();

        i4 = 0;

     label1:
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i4 >= $i0 goto label3;

        $r5 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i4);

        r6 = (ucar.nc2.Dimension) $r5;

        $r7 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i4);

        $i1 = interfaceinvoke $r3.<java.util.List: int indexOf(java.lang.Object)>($r7);

        if $i1 >= 0 goto label2;

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dimension ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not exist");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r9;

     label2:
        $i3 = r8[$i1];

        $i2 = r8[$i1];

        virtualinvoke $r4.<ucar.ma2.Section: ucar.ma2.Section appendRange(int,int)>($i3, $i2);

        i4 = i4 + 1;

        goto label1;

     label3:
        return $r4;
    }
}
