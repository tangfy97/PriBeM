public class org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator extends java.lang.Object implements org.osgi.framework.BundleActivator, org.osgi.service.cm.ManagedServiceFactory
{
    public static final java.lang.String FACTORY_PID;
    org.osgi.framework.BundleContext context;
    javax.management.MBeanServer mbeans;
    org.osgi.util.tracker.ServiceTracker configAdminTracker;
    org.osgi.framework.ServiceRegistration reg;
    org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory factory;

    public void <init>()
    {
        org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator$1 $r1;
        org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator r0;

        r0 := @this: org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator$1;

        specialinvoke $r1.<org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator$1: void <init>(org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator)>(r0);

        r0.<org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory factory> = $r1;

        return;
    }

    public void start(org.osgi.framework.BundleContext) throws java.lang.Exception
    {
        javax.management.MBeanServer $r18;
        java.lang.String $r5, $r10, $r14;
        org.osgi.framework.ServiceReference $r15;
        org.osgi.framework.ServiceRegistration $r6;
        java.util.Properties $r2;
        org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator r0;
        org.osgi.framework.BundleContext r1, $r4, $r9, $r13, $r16;
        org.osgi.util.tracker.ServiceTracker $r7, $r11;
        java.lang.Class $r3, $r8, $r12;
        java.lang.Object $r17;

        r0 := @this: org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator;

        r1 := @parameter0: org.osgi.framework.BundleContext;

        r0.<org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator: org.osgi.framework.BundleContext context> = r1;

        $r2 = new java.util.Properties;

        specialinvoke $r2.<java.util.Properties: void <init>()>();

        virtualinvoke $r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("service.pid", "org.apache.cxf.http.jetty");

        $r4 = r0.<org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator: org.osgi.framework.BundleContext context>;

        $r3 = class "Lorg/osgi/service/cm/ManagedServiceFactory;";

        $r5 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r6 = interfaceinvoke $r4.<org.osgi.framework.BundleContext: org.osgi.framework.ServiceRegistration registerService(java.lang.String,java.lang.Object,java.util.Dictionary)>($r5, r0, $r2);

        r0.<org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator: org.osgi.framework.ServiceRegistration reg> = $r6;

        $r7 = new org.osgi.util.tracker.ServiceTracker;

        $r9 = r0.<org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator: org.osgi.framework.BundleContext context>;

        $r8 = class "Lorg/osgi/service/cm/ConfigurationAdmin;";

        $r10 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r7.<org.osgi.util.tracker.ServiceTracker: void <init>(org.osgi.framework.BundleContext,java.lang.String,org.osgi.util.tracker.ServiceTrackerCustomizer)>($r9, $r10, null);

        r0.<org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator: org.osgi.util.tracker.ServiceTracker configAdminTracker> = $r7;

        $r11 = r0.<org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator: org.osgi.util.tracker.ServiceTracker configAdminTracker>;

        virtualinvoke $r11.<org.osgi.util.tracker.ServiceTracker: void open()>();

        $r13 = r0.<org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator: org.osgi.framework.BundleContext context>;

        $r12 = class "Ljavax/management/MBeanServer;";

        $r14 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

        $r15 = interfaceinvoke $r13.<org.osgi.framework.BundleContext: org.osgi.framework.ServiceReference getServiceReference(java.lang.String)>($r14);

        if $r15 == null goto label1;

        $r16 = r0.<org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator: org.osgi.framework.BundleContext context>;

        $r17 = interfaceinvoke $r16.<org.osgi.framework.BundleContext: java.lang.Object getService(org.osgi.framework.ServiceReference)>($r15);

        $r18 = (javax.management.MBeanServer) $r17;

        r0.<org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator: javax.management.MBeanServer mbeans> = $r18;

     label1:
        return;
    }

    public void stop(org.osgi.framework.BundleContext) throws java.lang.Exception
    {
        org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator r0;
        org.osgi.util.tracker.ServiceTracker $r2;
        org.osgi.framework.BundleContext r3;
        org.osgi.framework.ServiceRegistration $r1;

        r0 := @this: org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator;

        r3 := @parameter0: org.osgi.framework.BundleContext;

        $r1 = r0.<org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator: org.osgi.framework.ServiceRegistration reg>;

        interfaceinvoke $r1.<org.osgi.framework.ServiceRegistration: void unregister()>();

        $r2 = r0.<org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator: org.osgi.util.tracker.ServiceTracker configAdminTracker>;

        virtualinvoke $r2.<org.osgi.util.tracker.ServiceTracker: void close()>();

        return;
    }

    public java.lang.String getName()
    {
        org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator r0;

        r0 := @this: org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator;

        return "org.apache.cxf.http.jetty";
    }

    public void updated(java.lang.String, java.util.Dictionary) throws org.osgi.service.cm.ConfigurationException
    {
        java.lang.Throwable $r18, $r19;
        org.apache.cxf.configuration.jsse.TLSServerParameters $r7;
        java.security.GeneralSecurityException $r14;
        org.osgi.service.cm.ConfigurationException $r16, $r17;
        int $i0;
        java.lang.String r0, $r3, r5;
        org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator r6;
        java.io.IOException $r12;
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine $r10;
        java.lang.Object $r2, $r4;
        java.util.Dictionary r1;
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory $r8, $r9, $r11;

        r6 := @this: org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Dictionary;

        if r0 != null goto label1;

        return;

     label1:
        $r2 = virtualinvoke r1.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("port");

        $r3 = (java.lang.String) $r2;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

        $r4 = virtualinvoke r1.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("host");

        r5 = (java.lang.String) $r4;

     label2:
        $r7 = specialinvoke r6.<org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator: org.apache.cxf.configuration.jsse.TLSServerParameters createTlsServerParameters(java.util.Dictionary)>(r1);

        if $r7 == null goto label3;

        $r11 = r6.<org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory factory>;

        virtualinvoke $r11.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory: void setTLSServerParametersForPort(java.lang.String,int,org.apache.cxf.configuration.jsse.TLSServerParameters)>(r5, $i0, $r7);

        goto label4;

     label3:
        $r8 = r6.<org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory factory>;

        virtualinvoke $r8.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(java.lang.String,int,java.lang.String)>(r5, $i0, "http");

     label4:
        $r9 = r6.<org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory factory>;

        $r10 = virtualinvoke $r9.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine retrieveJettyHTTPServerEngine(int)>($i0);

        specialinvoke r6.<org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator: void configure(org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine,java.util.Dictionary)>($r10, r1);

     label5:
        goto label8;

     label6:
        $r14 := @caughtexception;

        $r16 = new org.osgi.service.cm.ConfigurationException;

        specialinvoke $r16.<org.osgi.service.cm.ConfigurationException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>(null, null, $r14);

        $r18 = (java.lang.Throwable) $r16;

        throw $r18;

     label7:
        $r12 := @caughtexception;

        $r17 = new org.osgi.service.cm.ConfigurationException;

        specialinvoke $r17.<org.osgi.service.cm.ConfigurationException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>(null, null, $r12);

        $r19 = (java.lang.Throwable) $r17;

        throw $r19;

     label8:
        return;

        catch java.security.GeneralSecurityException from label2 to label5 with label6;
        catch java.io.IOException from label2 to label5 with label7;
    }

    private void configure(org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine, java.util.Dictionary)
    {
        java.util.Enumeration $r3;
        org.apache.cxf.transport.http_jetty.ThreadingParameters $r2;
        int $i0;
        java.lang.String r5, $r6, $r7, $r8, $r9, $r12, $r14, $r16, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator r0;
        org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine r10;
        java.lang.Object $r4, $r11, $r13, $r15, $r17;
        java.util.Dictionary r1;

        r0 := @this: org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator;

        r10 := @parameter0: org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine;

        r1 := @parameter1: java.util.Dictionary;

        $r2 = specialinvoke r0.<org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator: org.apache.cxf.transport.http_jetty.ThreadingParameters createThreadingParameters(java.util.Dictionary)>(r1);

        if $r2 == null goto label1;

        virtualinvoke r10.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: void setThreadingParameters(org.apache.cxf.transport.http_jetty.ThreadingParameters)>($r2);

     label1:
        $r3 = virtualinvoke r1.<java.util.Dictionary: java.util.Enumeration keys()>();

     label2:
        $z7 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z7 == 0 goto label7;

        $r4 = interfaceinvoke $r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        r5 = (java.lang.String) $r4;

        $r6 = "sessionSupport";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z0 == 0 goto label3;

        $r17 = virtualinvoke r1.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>(r5);

        $r18 = (java.lang.String) $r17;

        $z6 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r18);

        virtualinvoke r10.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: void setSessionSupport(boolean)>($z6);

        goto label6;

     label3:
        $r7 = "continuationsEnabled";

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z1 == 0 goto label4;

        $r15 = virtualinvoke r1.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>(r5);

        $r16 = (java.lang.String) $r15;

        $z5 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r16);

        virtualinvoke r10.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: void setContinuationsEnabled(boolean)>($z5);

        goto label6;

     label4:
        $r8 = "reuseAddress";

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z2 == 0 goto label5;

        $r13 = virtualinvoke r1.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>(r5);

        $r14 = (java.lang.String) $r13;

        $z4 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r14);

        virtualinvoke r10.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: void setReuseAddress(boolean)>($z4);

        goto label6;

     label5:
        $r9 = "maxIdleTime";

        $z3 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z3 == 0 goto label6;

        $r11 = virtualinvoke r1.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>(r5);

        $r12 = (java.lang.String) $r11;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r12);

        virtualinvoke r10.<org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine: void setMaxIdleTime(int)>($i0);

     label6:
        goto label2;

     label7:
        return;
    }

    public void deleted(java.lang.String)
    {
        java.lang.String r1;
        org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator r0;

        r0 := @this: org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator;

        r1 := @parameter0: java.lang.String;

        return;
    }

    private org.apache.cxf.transport.http_jetty.ThreadingParameters createThreadingParameters(java.util.Dictionary)
    {
        java.util.Enumeration $r1;
        org.apache.cxf.transport.http_jetty.ThreadingParameters $r8, r11;
        int $i0, $i1, $i2;
        java.lang.String $r4, $r5, $r6, $r7, $r9, r12;
        boolean $z0, $z1, $z2, $z3;
        org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator r10;
        java.lang.Object $r2, $r3;
        java.util.Dictionary r0;

        r10 := @this: org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator;

        r0 := @parameter0: java.util.Dictionary;

        $r1 = virtualinvoke r0.<java.util.Dictionary: java.util.Enumeration keys()>();

        r11 = null;

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label5;

        $r2 = interfaceinvoke $r1.<java.util.Enumeration: java.lang.Object nextElement()>();

        r12 = (java.lang.String) $r2;

        $z1 = virtualinvoke r12.<java.lang.String: boolean startsWith(java.lang.String)>("threadingParameters.");

        if $z1 == 0 goto label4;

        if r11 != null goto label2;

        $r8 = new org.apache.cxf.transport.http_jetty.ThreadingParameters;

        specialinvoke $r8.<org.apache.cxf.transport.http_jetty.ThreadingParameters: void <init>()>();

        r11 = $r8;

     label2:
        $r3 = virtualinvoke r0.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>(r12);

        $r9 = (java.lang.String) $r3;

        $r4 = "threadingParameters.";

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $r5 = virtualinvoke r12.<java.lang.String: java.lang.String substring(int)>($i0);

        $r6 = "minThreads";

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label3;

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        virtualinvoke r11.<org.apache.cxf.transport.http_jetty.ThreadingParameters: void setMinThreads(int)>($i2);

        goto label4;

     label3:
        $r7 = "maxThreads";

        $z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z3 == 0 goto label4;

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        virtualinvoke r11.<org.apache.cxf.transport.http_jetty.ThreadingParameters: void setMaxThreads(int)>($i1);

     label4:
        goto label1;

     label5:
        return r11;
    }

    private org.apache.cxf.configuration.jsse.TLSServerParameters createTlsServerParameters(java.util.Dictionary)
    {
        org.apache.cxf.configuration.jsse.TLSServerParameters $r28, r33;
        java.util.Enumeration $r1;
        org.apache.cxf.configuration.security.ClientAuthentication $r22, $r23, $r24, $r25, $r26, $r27;
        java.security.SecureRandom $r4;
        org.apache.cxf.configuration.security.TrustManagersType r36;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        org.apache.cxf.configuration.security.KeyManagersType r35;
        org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator r14;
        java.lang.Exception $r30;
        java.util.List $r20;
        java.util.Dictionary r0;
        java.util.StringTokenizer $r19;
        int $i0, $i1, $i2;
        java.lang.String $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r15, $r16, $r17, $r18, $r21, $r29, r37;
        java.lang.RuntimeException $r31, $r32;
        org.apache.cxf.configuration.security.SecureRandomParameters r34;
        javax.net.ssl.TrustManager[] $r2;
        java.lang.Object $r5, $r6;
        javax.net.ssl.KeyManager[] $r3;

        r14 := @this: org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator;

        r0 := @parameter0: java.util.Dictionary;

        $r1 = virtualinvoke r0.<java.util.Dictionary: java.util.Enumeration keys()>();

        r33 = null;

        r34 = null;

        r35 = null;

        r36 = null;

     label01:
        $z0 = interfaceinvoke $r1.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label18;

        $r5 = interfaceinvoke $r1.<java.util.Enumeration: java.lang.Object nextElement()>();

        r37 = (java.lang.String) $r5;

        $z1 = virtualinvoke r37.<java.lang.String: boolean startsWith(java.lang.String)>("tlsServerParameters.");

        if $z1 == 0 goto label17;

        if r33 != null goto label02;

        $r28 = new org.apache.cxf.configuration.jsse.TLSServerParameters;

        specialinvoke $r28.<org.apache.cxf.configuration.jsse.TLSServerParameters: void <init>()>();

        r33 = $r28;

     label02:
        $r6 = virtualinvoke r0.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>(r37);

        $r29 = (java.lang.String) $r6;

        $r7 = "tlsServerParameters.";

        $i0 = virtualinvoke $r7.<java.lang.String: int length()>();

        $r8 = virtualinvoke r37.<java.lang.String: java.lang.String substring(int)>($i0);

        $r9 = "secureSocketProtocol";

        $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z2 == 0 goto label03;

        virtualinvoke r33.<org.apache.cxf.configuration.jsse.TLSServerParameters: void setSecureSocketProtocol(java.lang.String)>($r29);

        goto label17;

     label03:
        $r10 = "jsseProvider";

        $z3 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z3 == 0 goto label04;

        virtualinvoke r33.<org.apache.cxf.configuration.jsse.TLSServerParameters: void setJsseProvider(java.lang.String)>($r29);

        goto label17;

     label04:
        $r11 = "certAlias";

        $z4 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z4 == 0 goto label05;

        virtualinvoke r33.<org.apache.cxf.configuration.jsse.TLSServerParameters: void setCertAlias(java.lang.String)>($r29);

        goto label17;

     label05:
        $r12 = "clientAuthentication.want";

        $z5 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z5 == 0 goto label07;

        $r25 = virtualinvoke r33.<org.apache.cxf.configuration.jsse.TLSServerParameters: org.apache.cxf.configuration.security.ClientAuthentication getClientAuthentication()>();

        if $r25 != null goto label06;

        $r27 = new org.apache.cxf.configuration.security.ClientAuthentication;

        specialinvoke $r27.<org.apache.cxf.configuration.security.ClientAuthentication: void <init>()>();

        virtualinvoke r33.<org.apache.cxf.configuration.jsse.TLSServerParameters: void setClientAuthentication(org.apache.cxf.configuration.security.ClientAuthentication)>($r27);

     label06:
        $r26 = virtualinvoke r33.<org.apache.cxf.configuration.jsse.TLSServerParameters: org.apache.cxf.configuration.security.ClientAuthentication getClientAuthentication()>();

        $z15 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r29);

        virtualinvoke $r26.<org.apache.cxf.configuration.security.ClientAuthentication: void setWant(boolean)>($z15);

        goto label17;

     label07:
        $r13 = "clientAuthentication.required";

        $z6 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z6 == 0 goto label09;

        $r22 = virtualinvoke r33.<org.apache.cxf.configuration.jsse.TLSServerParameters: org.apache.cxf.configuration.security.ClientAuthentication getClientAuthentication()>();

        if $r22 != null goto label08;

        $r24 = new org.apache.cxf.configuration.security.ClientAuthentication;

        specialinvoke $r24.<org.apache.cxf.configuration.security.ClientAuthentication: void <init>()>();

        virtualinvoke r33.<org.apache.cxf.configuration.jsse.TLSServerParameters: void setClientAuthentication(org.apache.cxf.configuration.security.ClientAuthentication)>($r24);

     label08:
        $r23 = virtualinvoke r33.<org.apache.cxf.configuration.jsse.TLSServerParameters: org.apache.cxf.configuration.security.ClientAuthentication getClientAuthentication()>();

        $z14 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r29);

        virtualinvoke $r23.<org.apache.cxf.configuration.security.ClientAuthentication: void setRequired(boolean)>($z14);

        goto label17;

     label09:
        $z7 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>("certConstraints.");

        if $z7 == 0 goto label10;

        specialinvoke r14.<org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator: void configureCertConstraints(org.apache.cxf.configuration.jsse.TLSServerParameters,java.lang.String,java.lang.String)>(r33, $r8, $r29);

        goto label17;

     label10:
        $z8 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>("secureRandomParameters.");

        if $z8 == 0 goto label11;

        r34 = specialinvoke r14.<org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator: org.apache.cxf.configuration.security.SecureRandomParameters configureSecureRandom(org.apache.cxf.configuration.security.SecureRandomParameters,java.lang.String,java.lang.String)>(r34, $r8, $r29);

        goto label17;

     label11:
        $z9 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>("cipherSuitesFilter.");

        if $z9 == 0 goto label12;

        specialinvoke r14.<org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator: void configureCipherSuitesFilter(org.apache.cxf.configuration.jsse.TLSServerParameters,java.lang.String,java.lang.String)>(r33, $r8, $r29);

        goto label17;

     label12:
        $z10 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>("cipherSuites");

        if $z10 == 0 goto label15;

        $r19 = new java.util.StringTokenizer;

        specialinvoke $r19.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r29, ",");

     label13:
        $z13 = virtualinvoke $r19.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z13 == 0 goto label14;

        $r20 = virtualinvoke r33.<org.apache.cxf.configuration.jsse.TLSServerParameters: java.util.List getCipherSuites()>();

        $r21 = virtualinvoke $r19.<java.util.StringTokenizer: java.lang.String nextToken()>();

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>($r21);

        goto label13;

     label14:
        goto label17;

     label15:
        $z11 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>("trustManagers.");

        if $z11 == 0 goto label16;

        $r17 = "trustManagers.";

        $i2 = virtualinvoke $r17.<java.lang.String: int length()>();

        $r18 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int)>($i2);

        r36 = specialinvoke r14.<org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator: org.apache.cxf.configuration.security.TrustManagersType getTrustManagers(org.apache.cxf.configuration.security.TrustManagersType,java.lang.String,java.lang.String)>(r36, $r18, $r29);

        goto label17;

     label16:
        $z12 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>("keyManagers.");

        if $z12 == 0 goto label17;

        $r15 = "keyManagers.";

        $i1 = virtualinvoke $r15.<java.lang.String: int length()>();

        $r16 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int)>($i1);

        r35 = specialinvoke r14.<org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator: org.apache.cxf.configuration.security.KeyManagersType getKeyManagers(org.apache.cxf.configuration.security.KeyManagersType,java.lang.String,java.lang.String)>(r35, $r16, $r29);

     label17:
        goto label01;

     label18:
        if r34 == null goto label19;

        $r4 = staticinvoke <org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils: java.security.SecureRandom getSecureRandom(org.apache.cxf.configuration.security.SecureRandomParameters)>(r34);

        virtualinvoke r33.<org.apache.cxf.configuration.jsse.TLSServerParameters: void setSecureRandom(java.security.SecureRandom)>($r4);

     label19:
        if r35 == null goto label20;

        $r3 = staticinvoke <org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils: javax.net.ssl.KeyManager[] getKeyManagers(org.apache.cxf.configuration.security.KeyManagersType)>(r35);

        virtualinvoke r33.<org.apache.cxf.configuration.jsse.TLSServerParameters: void setKeyManagers(javax.net.ssl.KeyManager[])>($r3);

     label20:
        if r36 == null goto label21;

        $r2 = staticinvoke <org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils: javax.net.ssl.TrustManager[] getTrustManagers(org.apache.cxf.configuration.security.TrustManagersType)>(r36);

        virtualinvoke r33.<org.apache.cxf.configuration.jsse.TLSServerParameters: void setTrustManagers(javax.net.ssl.TrustManager[])>($r2);

     label21:
        goto label24;

     label22:
        $r32 := @caughtexception;

        throw $r32;

     label23:
        $r30 := @caughtexception;

        $r31 = new java.lang.RuntimeException;

        specialinvoke $r31.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r30);

        throw $r31;

     label24:
        return r33;

        catch java.lang.RuntimeException from label18 to label21 with label22;
        catch java.lang.Exception from label18 to label21 with label23;
    }

    private void configureCipherSuitesFilter(org.apache.cxf.configuration.jsse.TLSServerParameters, java.lang.String, java.lang.String)
    {
        org.apache.cxf.configuration.jsse.TLSServerParameters r4;
        java.util.StringTokenizer $r2;
        org.apache.cxf.configuration.security.FiltersType $r5, $r9, r12;
        int $i0;
        java.lang.String $r0, $r1, r3, $r6, $r8, r11;
        boolean $z0, $z1;
        org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator r10;
        java.util.List r7, $r13;

        r10 := @this: org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator;

        r4 := @parameter0: org.apache.cxf.configuration.jsse.TLSServerParameters;

        r11 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r0 = "cipherSuitesFilter.";

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $r1 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>($i0);

        $r2 = new java.util.StringTokenizer;

        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r3, ",");

        $r5 = virtualinvoke r4.<org.apache.cxf.configuration.jsse.TLSServerParameters: org.apache.cxf.configuration.security.FiltersType getCipherSuitesFilter()>();

        r12 = $r5;

        if $r5 != null goto label1;

        $r9 = new org.apache.cxf.configuration.security.FiltersType;

        specialinvoke $r9.<org.apache.cxf.configuration.security.FiltersType: void <init>()>();

        r12 = $r9;

        virtualinvoke r4.<org.apache.cxf.configuration.jsse.TLSServerParameters: void setCipherSuitesFilter(org.apache.cxf.configuration.security.FiltersType)>($r9);

     label1:
        $r6 = "include";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        $r13 = virtualinvoke r12.<org.apache.cxf.configuration.security.FiltersType: java.util.List getInclude()>();

        goto label3;

     label2:
        $r13 = virtualinvoke r12.<org.apache.cxf.configuration.security.FiltersType: java.util.List getExclude()>();

     label3:
        r7 = $r13;

     label4:
        $z1 = virtualinvoke $r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label5;

        $r8 = virtualinvoke $r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label4;

     label5:
        return;
    }

    private org.apache.cxf.configuration.security.SecureRandomParameters configureSecureRandom(org.apache.cxf.configuration.security.SecureRandomParameters, java.lang.String, java.lang.String)
    {
        org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator r6;
        org.apache.cxf.configuration.security.SecureRandomParameters $r5, r7;
        int $i0;
        java.lang.String $r0, $r1, $r2, $r3, r4, r8;
        boolean $z0, $z1;

        r6 := @this: org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator;

        r7 := @parameter0: org.apache.cxf.configuration.security.SecureRandomParameters;

        r8 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r0 = "secureRandomParameters.";

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $r1 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int)>($i0);

        if r7 != null goto label1;

        $r5 = new org.apache.cxf.configuration.security.SecureRandomParameters;

        specialinvoke $r5.<org.apache.cxf.configuration.security.SecureRandomParameters: void <init>()>();

        r7 = $r5;

     label1:
        $r2 = "algorithm";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        virtualinvoke r7.<org.apache.cxf.configuration.security.SecureRandomParameters: void setAlgorithm(java.lang.String)>(r4);

        goto label3;

     label2:
        $r3 = "provider";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label3;

        virtualinvoke r7.<org.apache.cxf.configuration.security.SecureRandomParameters: void setProvider(java.lang.String)>(r4);

     label3:
        return r7;
    }

    private void configureCertConstraints(org.apache.cxf.configuration.jsse.TLSServerParameters, java.lang.String, java.lang.String)
    {
        org.apache.cxf.configuration.jsse.TLSServerParameters r2;
        int $i0, $i1, $i2;
        java.lang.String $r0, $r1, $r4, $r5, r7, $r10, $r13, r17, r18;
        boolean $z0, $z1, $z2, $z3;
        org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator r16;
        org.apache.cxf.configuration.security.DNConstraintsType $r9, $r11, $r12, $r14, r20;
        org.apache.cxf.configuration.security.CertificateConstraintsType $r3, $r15, r19;
        org.apache.cxf.configuration.security.CombinatorType $r8;
        java.util.List $r6;

        r16 := @this: org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator;

        r2 := @parameter0: org.apache.cxf.configuration.jsse.TLSServerParameters;

        r17 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

        $r0 = "certConstraints.";

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $r1 = virtualinvoke r17.<java.lang.String: java.lang.String substring(int)>($i0);

        r18 = $r1;

        $r3 = virtualinvoke r2.<org.apache.cxf.configuration.jsse.TLSServerParameters: org.apache.cxf.configuration.security.CertificateConstraintsType getCertConstraints()>();

        r19 = $r3;

        if $r3 != null goto label1;

        $r15 = new org.apache.cxf.configuration.security.CertificateConstraintsType;

        specialinvoke $r15.<org.apache.cxf.configuration.security.CertificateConstraintsType: void <init>()>();

        r19 = $r15;

        virtualinvoke r2.<org.apache.cxf.configuration.jsse.TLSServerParameters: void setCertConstraints(org.apache.cxf.configuration.security.CertificateConstraintsType)>($r15);

     label1:
        r20 = null;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("SubjectDNConstraints.");

        if $z0 == 0 goto label3;

        $r12 = virtualinvoke r19.<org.apache.cxf.configuration.security.CertificateConstraintsType: org.apache.cxf.configuration.security.DNConstraintsType getSubjectDNConstraints()>();

        r20 = $r12;

        if $r12 != null goto label2;

        $r14 = new org.apache.cxf.configuration.security.DNConstraintsType;

        specialinvoke $r14.<org.apache.cxf.configuration.security.DNConstraintsType: void <init>()>();

        r20 = $r14;

        virtualinvoke r19.<org.apache.cxf.configuration.security.CertificateConstraintsType: void setSubjectDNConstraints(org.apache.cxf.configuration.security.DNConstraintsType)>($r14);

     label2:
        $r13 = "SubjectDNConstraints.";

        $i2 = virtualinvoke $r13.<java.lang.String: int length()>();

        r18 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i2);

        goto label5;

     label3:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("IssuerDNConstraints.");

        if $z1 == 0 goto label5;

        $r9 = virtualinvoke r19.<org.apache.cxf.configuration.security.CertificateConstraintsType: org.apache.cxf.configuration.security.DNConstraintsType getIssuerDNConstraints()>();

        r20 = $r9;

        if $r9 != null goto label4;

        $r11 = new org.apache.cxf.configuration.security.DNConstraintsType;

        specialinvoke $r11.<org.apache.cxf.configuration.security.DNConstraintsType: void <init>()>();

        r20 = $r11;

        virtualinvoke r19.<org.apache.cxf.configuration.security.CertificateConstraintsType: void setIssuerDNConstraints(org.apache.cxf.configuration.security.DNConstraintsType)>($r11);

     label4:
        $r10 = "IssuerDNConstraints.";

        $i1 = virtualinvoke $r10.<java.lang.String: int length()>();

        r18 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i1);

     label5:
        if r20 == null goto label7;

        $r4 = "combinator";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r18);

        if $z2 == 0 goto label6;

        $r8 = staticinvoke <org.apache.cxf.configuration.security.CombinatorType: org.apache.cxf.configuration.security.CombinatorType fromValue(java.lang.String)>(r7);

        virtualinvoke r20.<org.apache.cxf.configuration.security.DNConstraintsType: void setCombinator(org.apache.cxf.configuration.security.CombinatorType)>($r8);

        goto label7;

     label6:
        $r5 = "RegularExpression";

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r18);

        if $z3 == 0 goto label7;

        $r6 = virtualinvoke r20.<org.apache.cxf.configuration.security.DNConstraintsType: java.util.List getRegularExpression()>();

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r18);

     label7:
        return;
    }

    private org.apache.cxf.configuration.security.KeyManagersType getKeyManagers(org.apache.cxf.configuration.security.KeyManagersType, java.lang.String, java.lang.String)
    {
        int $i0;
        java.lang.String r0, $r1, $r2, $r3, $r6, $r7, r8;
        boolean $z0, $z1, $z2, $z3;
        org.apache.cxf.configuration.security.KeyManagersType $r10, r11;
        org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator r4;
        org.apache.cxf.configuration.security.KeyStoreType $r5, $r9;

        r4 := @this: org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator;

        r11 := @parameter0: org.apache.cxf.configuration.security.KeyManagersType;

        r0 := @parameter1: java.lang.String;

        r8 := @parameter2: java.lang.String;

        if r11 != null goto label1;

        $r10 = new org.apache.cxf.configuration.security.KeyManagersType;

        specialinvoke $r10.<org.apache.cxf.configuration.security.KeyManagersType: void <init>()>();

        r11 = $r10;

     label1:
        $r1 = "factoryAlgorithm";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        virtualinvoke r11.<org.apache.cxf.configuration.security.KeyManagersType: void setFactoryAlgorithm(java.lang.String)>(r8);

        goto label5;

     label2:
        $r2 = "provider";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label3;

        virtualinvoke r11.<org.apache.cxf.configuration.security.KeyManagersType: void setProvider(java.lang.String)>(r8);

        goto label5;

     label3:
        $r3 = "keyPassword";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label4;

        virtualinvoke r11.<org.apache.cxf.configuration.security.KeyManagersType: void setKeyPassword(java.lang.String)>(r8);

        goto label5;

     label4:
        $z3 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("keyStore.");

        if $z3 == 0 goto label5;

        $r5 = virtualinvoke r11.<org.apache.cxf.configuration.security.KeyManagersType: org.apache.cxf.configuration.security.KeyStoreType getKeyStore()>();

        $r6 = "keyStore.";

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        $r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i0);

        $r9 = specialinvoke r4.<org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator: org.apache.cxf.configuration.security.KeyStoreType getKeyStore(org.apache.cxf.configuration.security.KeyStoreType,java.lang.String,java.lang.String)>($r5, $r7, r8);

        virtualinvoke r11.<org.apache.cxf.configuration.security.KeyManagersType: void setKeyStore(org.apache.cxf.configuration.security.KeyStoreType)>($r9);

     label5:
        return r11;
    }

    private org.apache.cxf.configuration.security.KeyStoreType getKeyStore(org.apache.cxf.configuration.security.KeyStoreType, java.lang.String, java.lang.String)
    {
        java.lang.String r0, $r1, $r2, $r3, $r4, $r5, $r6, r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.cxf.configuration.security.KeyStoreType $r8, r10;
        org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator r9;

        r9 := @this: org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator;

        r10 := @parameter0: org.apache.cxf.configuration.security.KeyStoreType;

        r0 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

        if r10 != null goto label1;

        $r8 = new org.apache.cxf.configuration.security.KeyStoreType;

        specialinvoke $r8.<org.apache.cxf.configuration.security.KeyStoreType: void <init>()>();

        r10 = $r8;

     label1:
        $r1 = "type";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        virtualinvoke r10.<org.apache.cxf.configuration.security.KeyStoreType: void setType(java.lang.String)>(r7);

        goto label7;

     label2:
        $r2 = "password";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label3;

        virtualinvoke r10.<org.apache.cxf.configuration.security.KeyStoreType: void setPassword(java.lang.String)>(r7);

        goto label7;

     label3:
        $r3 = "provider";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label4;

        virtualinvoke r10.<org.apache.cxf.configuration.security.KeyStoreType: void setProvider(java.lang.String)>(r7);

        goto label7;

     label4:
        $r4 = "url";

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z3 == 0 goto label5;

        virtualinvoke r10.<org.apache.cxf.configuration.security.KeyStoreType: void setUrl(java.lang.String)>(r7);

        goto label7;

     label5:
        $r5 = "file";

        $z4 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z4 == 0 goto label6;

        virtualinvoke r10.<org.apache.cxf.configuration.security.KeyStoreType: void setFile(java.lang.String)>(r7);

        goto label7;

     label6:
        $r6 = "resource";

        $z5 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z5 == 0 goto label7;

        virtualinvoke r10.<org.apache.cxf.configuration.security.KeyStoreType: void setResource(java.lang.String)>(r7);

     label7:
        return r10;
    }

    private org.apache.cxf.configuration.security.TrustManagersType getTrustManagers(org.apache.cxf.configuration.security.TrustManagersType, java.lang.String, java.lang.String)
    {
        org.apache.cxf.configuration.security.CertStoreType $r4, $r8;
        int $i0, $i1;
        org.apache.cxf.configuration.security.TrustManagersType $r13, r14;
        java.lang.String r0, $r1, $r2, $r5, $r6, r7, $r10, $r11;
        boolean $z0, $z1, $z2, $z3;
        org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator r3;
        org.apache.cxf.configuration.security.KeyStoreType $r9, $r12;

        r3 := @this: org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator;

        r14 := @parameter0: org.apache.cxf.configuration.security.TrustManagersType;

        r0 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

        if r14 != null goto label1;

        $r13 = new org.apache.cxf.configuration.security.TrustManagersType;

        specialinvoke $r13.<org.apache.cxf.configuration.security.TrustManagersType: void <init>()>();

        r14 = $r13;

     label1:
        $r1 = "provider";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        virtualinvoke r14.<org.apache.cxf.configuration.security.TrustManagersType: void setProvider(java.lang.String)>(r7);

        goto label5;

     label2:
        $r2 = "factoryAlgorithm";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label3;

        virtualinvoke r14.<org.apache.cxf.configuration.security.TrustManagersType: void setFactoryAlgorithm(java.lang.String)>(r7);

        goto label5;

     label3:
        $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("keyStore.");

        if $z2 == 0 goto label4;

        $r9 = virtualinvoke r14.<org.apache.cxf.configuration.security.TrustManagersType: org.apache.cxf.configuration.security.KeyStoreType getKeyStore()>();

        $r10 = "keyStore.";

        $i1 = virtualinvoke $r10.<java.lang.String: int length()>();

        $r11 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        $r12 = specialinvoke r3.<org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator: org.apache.cxf.configuration.security.KeyStoreType getKeyStore(org.apache.cxf.configuration.security.KeyStoreType,java.lang.String,java.lang.String)>($r9, $r11, r7);

        virtualinvoke r14.<org.apache.cxf.configuration.security.TrustManagersType: void setKeyStore(org.apache.cxf.configuration.security.KeyStoreType)>($r12);

        goto label5;

     label4:
        $z3 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("certStore");

        if $z3 == 0 goto label5;

        $r4 = virtualinvoke r14.<org.apache.cxf.configuration.security.TrustManagersType: org.apache.cxf.configuration.security.CertStoreType getCertStore()>();

        $r5 = "certStore.";

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i0);

        $r8 = specialinvoke r3.<org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator: org.apache.cxf.configuration.security.CertStoreType getCertStore(org.apache.cxf.configuration.security.CertStoreType,java.lang.String,java.lang.String)>($r4, $r6, r7);

        virtualinvoke r14.<org.apache.cxf.configuration.security.TrustManagersType: void setCertStore(org.apache.cxf.configuration.security.CertStoreType)>($r8);

     label5:
        return r14;
    }

    private org.apache.cxf.configuration.security.CertStoreType getCertStore(org.apache.cxf.configuration.security.CertStoreType, java.lang.String, java.lang.String)
    {
        org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator r6;
        org.apache.cxf.configuration.security.CertStoreType $r5, r7;
        java.lang.String r0, $r1, $r2, $r3, r4;
        boolean $z0, $z1, $z2;

        r6 := @this: org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator;

        r7 := @parameter0: org.apache.cxf.configuration.security.CertStoreType;

        r0 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        if r7 != null goto label1;

        $r5 = new org.apache.cxf.configuration.security.CertStoreType;

        specialinvoke $r5.<org.apache.cxf.configuration.security.CertStoreType: void <init>()>();

        r7 = $r5;

     label1:
        $r1 = "file";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        virtualinvoke r7.<org.apache.cxf.configuration.security.CertStoreType: void setFile(java.lang.String)>(r4);

        goto label4;

     label2:
        $r2 = "url";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label3;

        virtualinvoke r7.<org.apache.cxf.configuration.security.CertStoreType: void setUrl(java.lang.String)>(r4);

        goto label4;

     label3:
        $r3 = "resource";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label4;

        virtualinvoke r7.<org.apache.cxf.configuration.security.CertStoreType: void setResource(java.lang.String)>(r4);

     label4:
        return r7;
    }

    public static void <clinit>()
    {
        <org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator: java.lang.String FACTORY_PID> = "org.apache.cxf.http.jetty";

        return;
    }
}
