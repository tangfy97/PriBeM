public class org.jdesktop.swingx.auth.UserPermissions extends java.lang.Object
{
    private static final org.jdesktop.swingx.auth.UserPermissions INSTANCE;
    private java.beans.PropertyChangeSupport propertyChange;
    private java.lang.String[] roles;

    private void <init>()
    {
        org.jdesktop.swingx.auth.UserPermissions r0;
        java.beans.PropertyChangeSupport $r1;

        r0 := @this: org.jdesktop.swingx.auth.UserPermissions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.beans.PropertyChangeSupport;

        specialinvoke $r1.<java.beans.PropertyChangeSupport: void <init>(java.lang.Object)>(r0);

        r0.<org.jdesktop.swingx.auth.UserPermissions: java.beans.PropertyChangeSupport propertyChange> = $r1;

        return;
    }

    public void addPropertyChangeListener(java.beans.PropertyChangeListener)
    {
        org.jdesktop.swingx.auth.UserPermissions r0;
        java.beans.PropertyChangeSupport $r2;
        java.beans.PropertyChangeListener r1;

        r0 := @this: org.jdesktop.swingx.auth.UserPermissions;

        r1 := @parameter0: java.beans.PropertyChangeListener;

        $r2 = r0.<org.jdesktop.swingx.auth.UserPermissions: java.beans.PropertyChangeSupport propertyChange>;

        virtualinvoke $r2.<java.beans.PropertyChangeSupport: void addPropertyChangeListener(java.beans.PropertyChangeListener)>(r1);

        return;
    }

    public void addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)
    {
        org.jdesktop.swingx.auth.UserPermissions r0;
        java.beans.PropertyChangeListener r2;
        java.beans.PropertyChangeSupport $r3;
        java.lang.String r1;

        r0 := @this: org.jdesktop.swingx.auth.UserPermissions;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.beans.PropertyChangeListener;

        $r3 = r0.<org.jdesktop.swingx.auth.UserPermissions: java.beans.PropertyChangeSupport propertyChange>;

        virtualinvoke $r3.<java.beans.PropertyChangeSupport: void addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>(r1, r2);

        return;
    }

    public void removePropertyChangeListener(java.beans.PropertyChangeListener)
    {
        org.jdesktop.swingx.auth.UserPermissions r0;
        java.beans.PropertyChangeSupport $r2;
        java.beans.PropertyChangeListener r1;

        r0 := @this: org.jdesktop.swingx.auth.UserPermissions;

        r1 := @parameter0: java.beans.PropertyChangeListener;

        $r2 = r0.<org.jdesktop.swingx.auth.UserPermissions: java.beans.PropertyChangeSupport propertyChange>;

        virtualinvoke $r2.<java.beans.PropertyChangeSupport: void removePropertyChangeListener(java.beans.PropertyChangeListener)>(r1);

        return;
    }

    public void removePropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)
    {
        org.jdesktop.swingx.auth.UserPermissions r0;
        java.beans.PropertyChangeListener r2;
        java.beans.PropertyChangeSupport $r3;
        java.lang.String r1;

        r0 := @this: org.jdesktop.swingx.auth.UserPermissions;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.beans.PropertyChangeListener;

        $r3 = r0.<org.jdesktop.swingx.auth.UserPermissions: java.beans.PropertyChangeSupport propertyChange>;

        virtualinvoke $r3.<java.beans.PropertyChangeSupport: void removePropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>(r1, r2);

        return;
    }

    public static org.jdesktop.swingx.auth.UserPermissions getInstance()
    {
        org.jdesktop.swingx.auth.UserPermissions $r0;

        $r0 = <org.jdesktop.swingx.auth.UserPermissions: org.jdesktop.swingx.auth.UserPermissions INSTANCE>;

        return $r0;
    }

    public java.lang.String[] getRoles()
    {
        org.jdesktop.swingx.auth.UserPermissions r0;
        java.lang.String[] $r1;

        r0 := @this: org.jdesktop.swingx.auth.UserPermissions;

        $r1 = r0.<org.jdesktop.swingx.auth.UserPermissions: java.lang.String[] roles>;

        return $r1;
    }

    public boolean isUserInRole(java.lang.String)
    {
        org.jdesktop.swingx.auth.UserPermissions r0;
        java.lang.String[] $r1, $r2, $r3;
        int $i0, i1;
        java.lang.String r4, $r5;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.auth.UserPermissions;

        r4 := @parameter0: java.lang.String;

        $r1 = r0.<org.jdesktop.swingx.auth.UserPermissions: java.lang.String[] roles>;

        if $r1 == null goto label3;

        i1 = 0;

     label1:
        $r2 = r0.<org.jdesktop.swingx.auth.UserPermissions: java.lang.String[] roles>;

        $i0 = lengthof $r2;

        if i1 >= $i0 goto label3;

        $r3 = r0.<org.jdesktop.swingx.auth.UserPermissions: java.lang.String[] roles>;

        $r5 = $r3[i1];

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public boolean isUserInARole(java.lang.String[])
    {
        org.jdesktop.swingx.auth.UserPermissions r1;
        int $i0, i1;
        java.lang.String[] r0;
        java.lang.String $r2;
        boolean $z0;

        r1 := @this: org.jdesktop.swingx.auth.UserPermissions;

        r0 := @parameter0: java.lang.String[];

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label3;

        $r2 = r0[i1];

        $z0 = virtualinvoke r1.<org.jdesktop.swingx.auth.UserPermissions: boolean isUserInRole(java.lang.String)>($r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public boolean isUserInRoles(java.lang.String[])
    {
        org.jdesktop.swingx.auth.UserPermissions r1;
        int $i0, i1;
        java.lang.String[] r0;
        java.lang.String $r2;
        boolean $z0;

        r1 := @this: org.jdesktop.swingx.auth.UserPermissions;

        r0 := @parameter0: java.lang.String[];

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label3;

        $r2 = r0[i1];

        $z0 = virtualinvoke r1.<org.jdesktop.swingx.auth.UserPermissions: boolean isUserInRole(java.lang.String)>($r2);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 1;
    }

    void setRoles(java.lang.String[])
    {
        org.jdesktop.swingx.auth.UserPermissions r0;
        java.beans.PropertyChangeSupport $r3;
        java.lang.String[] r1, r2;

        r0 := @this: org.jdesktop.swingx.auth.UserPermissions;

        r2 := @parameter0: java.lang.String[];

        r1 = r0.<org.jdesktop.swingx.auth.UserPermissions: java.lang.String[] roles>;

        r0.<org.jdesktop.swingx.auth.UserPermissions: java.lang.String[] roles> = r2;

        $r3 = r0.<org.jdesktop.swingx.auth.UserPermissions: java.beans.PropertyChangeSupport propertyChange>;

        virtualinvoke $r3.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("roles", r1, r2);

        return;
    }

    static void <clinit>()
    {
        org.jdesktop.swingx.auth.UserPermissions $r0;

        $r0 = new org.jdesktop.swingx.auth.UserPermissions;

        specialinvoke $r0.<org.jdesktop.swingx.auth.UserPermissions: void <init>()>();

        <org.jdesktop.swingx.auth.UserPermissions: org.jdesktop.swingx.auth.UserPermissions INSTANCE> = $r0;

        return;
    }
}
