public class org.apache.cxf.jaxrs.client.WebClient extends org.apache.cxf.jaxrs.client.AbstractClient
{
    private static final java.lang.String REQUEST_CLASS;
    private static final java.lang.String REQUEST_TYPE;
    private static final java.lang.String RESPONSE_CLASS;
    private static final java.lang.String RESPONSE_TYPE;

    protected void <init>(java.lang.String)
    {
        java.lang.String r1;
        java.net.URI $r2;
        org.apache.cxf.jaxrs.client.WebClient r0;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.client.WebClient: java.net.URI convertStringToURI(java.lang.String)>(r1);

        specialinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: void <init>(java.net.URI)>($r2);

        return;
    }

    protected void <init>(java.net.URI)
    {
        java.net.URI r2;
        org.apache.cxf.jaxrs.client.LocalClientState $r1;
        org.apache.cxf.jaxrs.client.WebClient r0;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r2 := @parameter0: java.net.URI;

        $r1 = new org.apache.cxf.jaxrs.client.LocalClientState;

        specialinvoke $r1.<org.apache.cxf.jaxrs.client.LocalClientState: void <init>(java.net.URI)>(r2);

        specialinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: void <init>(org.apache.cxf.jaxrs.client.ClientState)>($r1);

        return;
    }

    protected void <init>(org.apache.cxf.jaxrs.client.ClientState)
    {
        java.util.List $r3;
        org.apache.cxf.jaxrs.client.WebClient r0;
        org.apache.cxf.jaxrs.client.ClientState r1;
        org.apache.cxf.jaxrs.client.ClientConfiguration $r2;
        org.apache.cxf.jaxrs.client.WebClient$ClientAsyncResponseInterceptor $r4;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: org.apache.cxf.jaxrs.client.ClientState;

        specialinvoke r0.<org.apache.cxf.jaxrs.client.AbstractClient: void <init>(org.apache.cxf.jaxrs.client.ClientState)>(r1);

        $r2 = r0.<org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.ClientConfiguration cfg>;

        $r3 = virtualinvoke $r2.<org.apache.cxf.jaxrs.client.ClientConfiguration: java.util.List getInInterceptors()>();

        $r4 = new org.apache.cxf.jaxrs.client.WebClient$ClientAsyncResponseInterceptor;

        specialinvoke $r4.<org.apache.cxf.jaxrs.client.WebClient$ClientAsyncResponseInterceptor: void <init>(org.apache.cxf.jaxrs.client.WebClient)>(r0);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        return;
    }

    public static org.apache.cxf.jaxrs.client.WebClient create(java.lang.String)
    {
        java.lang.String r1;
        org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean $r0;
        org.apache.cxf.jaxrs.client.WebClient $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean;

        specialinvoke $r0.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void <init>()>();

        virtualinvoke $r0.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setAddress(java.lang.String)>(r1);

        $r2 = virtualinvoke $r0.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: org.apache.cxf.jaxrs.client.WebClient createWebClient()>();

        return $r2;
    }

    public static org.apache.cxf.jaxrs.client.WebClient create(java.net.URI)
    {
        java.net.URI r0;
        java.lang.String $r1;
        org.apache.cxf.jaxrs.client.WebClient $r2;

        r0 := @parameter0: java.net.URI;

        $r1 = virtualinvoke r0.<java.net.URI: java.lang.String toString()>();

        $r2 = staticinvoke <org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.WebClient create(java.lang.String)>($r1);

        return $r2;
    }

    public static org.apache.cxf.jaxrs.client.WebClient create(java.lang.String, boolean)
    {
        java.util.List $r1;
        org.apache.cxf.jaxrs.client.WebClient $r2;
        java.lang.String r0;
        boolean z0;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r2 = staticinvoke <org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.WebClient create(java.lang.String,java.util.List,boolean)>(r0, $r1, z0);

        return $r2;
    }

    public static org.apache.cxf.jaxrs.client.WebClient create(java.lang.String, java.util.List)
    {
        java.util.List r1;
        java.lang.String r0;
        org.apache.cxf.jaxrs.client.WebClient $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.WebClient create(java.lang.String,java.util.List,java.lang.String)>(r0, r1, null);

        return $r2;
    }

    public static org.apache.cxf.jaxrs.client.WebClient create(java.lang.String, java.util.List, boolean)
    {
        org.apache.cxf.jaxrs.client.ThreadLocalClientState $r4;
        java.util.List r2;
        org.apache.cxf.jaxrs.client.WebClient $r3;
        java.lang.String r0;
        org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean $r1;
        boolean z0;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        z0 := @parameter2: boolean;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean getBean(java.lang.String,java.lang.String)>(r0, null);

        virtualinvoke $r1.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setProviders(java.util.List)>(r2);

        if z0 == 0 goto label1;

        $r4 = new org.apache.cxf.jaxrs.client.ThreadLocalClientState;

        specialinvoke $r4.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: void <init>(java.lang.String)>(r0);

        virtualinvoke $r1.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setInitialState(org.apache.cxf.jaxrs.client.ClientState)>($r4);

     label1:
        $r3 = virtualinvoke $r1.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: org.apache.cxf.jaxrs.client.WebClient createWebClient()>();

        return $r3;
    }

    public static org.apache.cxf.jaxrs.client.WebClient create(java.lang.String, java.util.List, java.lang.String)
    {
        java.util.List r3;
        org.apache.cxf.jaxrs.client.WebClient $r4;
        java.lang.String r0, r1;
        org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean $r2;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.List;

        r1 := @parameter2: java.lang.String;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean getBean(java.lang.String,java.lang.String)>(r0, r1);

        virtualinvoke $r2.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setProviders(java.util.List)>(r3);

        $r4 = virtualinvoke $r2.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: org.apache.cxf.jaxrs.client.WebClient createWebClient()>();

        return $r4;
    }

    public static org.apache.cxf.jaxrs.client.WebClient create(java.lang.String, java.util.List, java.util.List, java.lang.String)
    {
        java.util.List r3, r4;
        org.apache.cxf.jaxrs.client.WebClient $r5;
        java.lang.String r0, r1;
        org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean $r2;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.List;

        r4 := @parameter2: java.util.List;

        r1 := @parameter3: java.lang.String;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean getBean(java.lang.String,java.lang.String)>(r0, r1);

        virtualinvoke $r2.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setProviders(java.util.List)>(r3);

        virtualinvoke $r2.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setFeatures(java.util.List)>(r4);

        $r5 = virtualinvoke $r2.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: org.apache.cxf.jaxrs.client.WebClient createWebClient()>();

        return $r5;
    }

    public static org.apache.cxf.jaxrs.client.WebClient create(java.lang.String, java.lang.String)
    {
        org.apache.cxf.jaxrs.client.WebClient $r3;
        java.lang.String r0, r1;
        org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean getBean(java.lang.String,java.lang.String)>(r0, r1);

        $r3 = virtualinvoke $r2.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: org.apache.cxf.jaxrs.client.WebClient createWebClient()>();

        return $r3;
    }

    public static org.apache.cxf.jaxrs.client.WebClient create(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.cxf.jaxrs.client.WebClient $r5;
        java.lang.String r0, r1, r3, r4;
        org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean $r2;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean getBean(java.lang.String,java.lang.String)>(r0, r1);

        virtualinvoke $r2.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setUsername(java.lang.String)>(r3);

        virtualinvoke $r2.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setPassword(java.lang.String)>(r4);

        $r5 = virtualinvoke $r2.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: org.apache.cxf.jaxrs.client.WebClient createWebClient()>();

        return $r5;
    }

    public static org.apache.cxf.jaxrs.client.WebClient create(java.lang.String, java.util.List, java.lang.String, java.lang.String, java.lang.String)
    {
        java.util.List r5;
        org.apache.cxf.jaxrs.client.WebClient $r6;
        java.lang.String r0, r1, r3, r4;
        org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean $r2;

        r0 := @parameter0: java.lang.String;

        r5 := @parameter1: java.util.List;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r1 := @parameter4: java.lang.String;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean getBean(java.lang.String,java.lang.String)>(r0, r1);

        virtualinvoke $r2.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setUsername(java.lang.String)>(r3);

        virtualinvoke $r2.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setPassword(java.lang.String)>(r4);

        virtualinvoke $r2.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setProviders(java.util.List)>(r5);

        $r6 = virtualinvoke $r2.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: org.apache.cxf.jaxrs.client.WebClient createWebClient()>();

        return $r6;
    }

    public static org.apache.cxf.jaxrs.client.WebClient fromClient(org.apache.cxf.jaxrs.client.Client)
    {
        org.apache.cxf.jaxrs.client.Client r0;
        org.apache.cxf.jaxrs.client.WebClient $r1;

        r0 := @parameter0: org.apache.cxf.jaxrs.client.Client;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.WebClient fromClient(org.apache.cxf.jaxrs.client.Client,boolean)>(r0, 0);

        return $r1;
    }

    public static org.apache.cxf.jaxrs.client.WebClient fromClient(org.apache.cxf.jaxrs.client.Client, boolean)
    {
        org.apache.cxf.jaxrs.client.WebClient $r2, $r6, r8;
        org.apache.cxf.jaxrs.client.Client r0;
        org.apache.cxf.jaxrs.client.ClientState $r1, $r4;
        javax.ws.rs.core.MultivaluedMap $r7, $r9;
        java.net.URI $r3, $r5;
        boolean z0;

        r0 := @parameter0: org.apache.cxf.jaxrs.client.Client;

        z0 := @parameter1: boolean;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.ClientState getClientState(org.apache.cxf.jaxrs.client.Client)>(r0);

        if $r1 != null goto label1;

        $r5 = interfaceinvoke r0.<org.apache.cxf.jaxrs.client.Client: java.net.URI getCurrentURI()>();

        $r6 = staticinvoke <org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.WebClient create(java.net.URI)>($r5);

        r8 = $r6;

        if z0 == 0 goto label4;

        $r7 = interfaceinvoke r0.<org.apache.cxf.jaxrs.client.Client: javax.ws.rs.core.MultivaluedMap getHeaders()>();

        virtualinvoke $r6.<org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.WebClient headers(javax.ws.rs.core.MultivaluedMap)>($r7);

        goto label4;

     label1:
        if z0 == 0 goto label2;

        $r9 = interfaceinvoke r0.<org.apache.cxf.jaxrs.client.Client: javax.ws.rs.core.MultivaluedMap getHeaders()>();

        goto label3;

     label2:
        $r9 = null;

     label3:
        $r2 = new org.apache.cxf.jaxrs.client.WebClient;

        $r3 = interfaceinvoke r0.<org.apache.cxf.jaxrs.client.Client: java.net.URI getCurrentURI()>();

        $r4 = interfaceinvoke $r1.<org.apache.cxf.jaxrs.client.ClientState: org.apache.cxf.jaxrs.client.ClientState newState(java.net.URI,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap)>($r3, $r9, null);

        specialinvoke $r2.<org.apache.cxf.jaxrs.client.WebClient: void <init>(org.apache.cxf.jaxrs.client.ClientState)>($r4);

        r8 = $r2;

     label4:
        staticinvoke <org.apache.cxf.jaxrs.client.WebClient: void copyProperties(org.apache.cxf.jaxrs.client.Client,org.apache.cxf.jaxrs.client.Client)>(r8, r0);

        return r8;
    }

    public static org.apache.cxf.jaxrs.client.Client client(java.lang.Object)
    {
        java.lang.Object r0;
        org.apache.cxf.jaxrs.client.Client $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.cxf.jaxrs.client.Client;

        if $z0 == 0 goto label1;

        $r1 = (org.apache.cxf.jaxrs.client.Client) r0;

        return $r1;

     label1:
        return null;
    }

    public static org.apache.cxf.jaxrs.client.ClientConfiguration getConfig(java.lang.Object)
    {
        org.apache.cxf.jaxrs.client.AbstractClient $r4, $r6;
        org.apache.cxf.jaxrs.client.InvocationHandlerAware $r2;
        java.lang.IllegalArgumentException $r1;
        org.apache.cxf.jaxrs.client.ClientConfiguration $r5, $r7;
        java.lang.Object r0, $r3;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.cxf.jaxrs.client.Client;

        if $z0 == 0 goto label2;

        $z1 = r0 instanceof org.apache.cxf.jaxrs.client.WebClient;

        if $z1 == 0 goto label1;

        $r6 = (org.apache.cxf.jaxrs.client.AbstractClient) r0;

        $r7 = virtualinvoke $r6.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientConfiguration getConfiguration()>();

        return $r7;

     label1:
        $z2 = r0 instanceof org.apache.cxf.jaxrs.client.InvocationHandlerAware;

        if $z2 == 0 goto label2;

        $r2 = (org.apache.cxf.jaxrs.client.InvocationHandlerAware) r0;

        $r3 = interfaceinvoke $r2.<org.apache.cxf.jaxrs.client.InvocationHandlerAware: java.lang.Object getInvocationHandler()>();

        $r4 = (org.apache.cxf.jaxrs.client.AbstractClient) $r3;

        $r5 = virtualinvoke $r4.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientConfiguration getConfiguration()>();

        return $r5;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Not a valid Client");

        throw $r1;
    }

    public javax.ws.rs.core.Response invoke(java.lang.String, java.lang.Object)
    {
        javax.ws.rs.core.Response $r3;
        org.apache.cxf.jaxrs.client.WebClient r0;
        java.lang.Object r2;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.Response doInvoke(java.lang.String,java.lang.Object,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)>(r1, r2, null, class "Ljavax/ws/rs/core/Response;", class "Ljavax/ws/rs/core/Response;");

        return $r3;
    }

    public javax.ws.rs.core.Response post(java.lang.Object)
    {
        java.lang.Object r1;
        javax.ws.rs.core.Response $r2;
        org.apache.cxf.jaxrs.client.WebClient r0;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.Response invoke(java.lang.String,java.lang.Object)>("POST", r1);

        return $r2;
    }

    public javax.ws.rs.core.Response put(java.lang.Object)
    {
        java.lang.Object r1;
        javax.ws.rs.core.Response $r2;
        org.apache.cxf.jaxrs.client.WebClient r0;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.Response invoke(java.lang.String,java.lang.Object)>("PUT", r1);

        return $r2;
    }

    public javax.ws.rs.core.Response get()
    {
        javax.ws.rs.core.Response $r1;
        org.apache.cxf.jaxrs.client.WebClient r0;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.Response invoke(java.lang.String,java.lang.Object)>("GET", null);

        return $r1;
    }

    public javax.ws.rs.core.Response head()
    {
        javax.ws.rs.core.Response $r1;
        org.apache.cxf.jaxrs.client.WebClient r0;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.Response invoke(java.lang.String,java.lang.Object)>("HEAD", null);

        return $r1;
    }

    public javax.ws.rs.core.Response options()
    {
        javax.ws.rs.core.Response $r1;
        org.apache.cxf.jaxrs.client.WebClient r0;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.Response invoke(java.lang.String,java.lang.Object)>("OPTIONS", null);

        return $r1;
    }

    public javax.ws.rs.core.Response delete()
    {
        javax.ws.rs.core.Response $r1;
        org.apache.cxf.jaxrs.client.WebClient r0;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.Response invoke(java.lang.String,java.lang.Object)>("DELETE", null);

        return $r1;
    }

    public javax.ws.rs.core.Response form(java.util.Map)
    {
        javax.ws.rs.core.Response $r2;
        org.apache.cxf.jaxrs.client.WebClient r0;
        java.util.Map r1;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.util.Map;

        virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.WebClient type(java.lang.String)>("application/x-www-form-urlencoded");

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.Response doInvoke(java.lang.String,java.lang.Object,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)>("POST", r1, null, class "Ljavax/ws/rs/core/Response;", class "Ljavax/ws/rs/core/Response;");

        return $r2;
    }

    public javax.ws.rs.core.Response form(org.apache.cxf.jaxrs.ext.form.Form)
    {
        javax.ws.rs.core.MultivaluedMap $r2;
        javax.ws.rs.core.Response $r3;
        org.apache.cxf.jaxrs.client.WebClient r0;
        org.apache.cxf.jaxrs.ext.form.Form r1;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: org.apache.cxf.jaxrs.ext.form.Form;

        virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.WebClient type(java.lang.String)>("application/x-www-form-urlencoded");

        $r2 = virtualinvoke r1.<org.apache.cxf.jaxrs.ext.form.Form: javax.ws.rs.core.MultivaluedMap getData()>();

        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.Response doInvoke(java.lang.String,java.lang.Object,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)>("POST", $r2, null, class "Ljavax/ws/rs/core/Response;", class "Ljavax/ws/rs/core/Response;");

        return $r3;
    }

    public java.lang.Object invoke(java.lang.String, java.lang.Object, javax.ws.rs.core.GenericType)
    {
        org.apache.cxf.jaxrs.client.WebClient r2;
        javax.ws.rs.core.GenericType r0;
        javax.ws.rs.core.Response $r6;
        java.lang.reflect.Type $r5;
        java.lang.Class $r1;
        java.lang.Object r4, $r7, $r8;
        java.lang.String r3;

        r2 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Object;

        r0 := @parameter2: javax.ws.rs.core.GenericType;

        $r1 = virtualinvoke r0.<javax.ws.rs.core.GenericType: java.lang.Class getRawType()>();

        $r5 = virtualinvoke r0.<javax.ws.rs.core.GenericType: java.lang.reflect.Type getType()>();

        $r6 = virtualinvoke r2.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.Response doInvoke(java.lang.String,java.lang.Object,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)>(r3, r4, null, $r1, $r5);

        if $r1 != class "Ljavax/ws/rs/core/Response;" goto label1;

        $r8 = $r6;

        goto label2;

     label1:
        $r8 = virtualinvoke $r6.<javax.ws.rs.core.Response: java.lang.Object getEntity()>();

     label2:
        $r7 = virtualinvoke $r1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r8);

        return $r7;
    }

    public java.lang.Object invoke(java.lang.String, java.lang.Object, java.lang.Class)
    {
        javax.ws.rs.core.Response $r4;
        org.apache.cxf.jaxrs.client.WebClient r0;
        java.lang.Object r2, $r5, $r6;
        java.lang.Class r3;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Class;

        $r4 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.Response doInvoke(java.lang.String,java.lang.Object,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)>(r1, r2, null, r3, r3);

        if r3 != class "Ljavax/ws/rs/core/Response;" goto label1;

        $r6 = $r4;

        goto label2;

     label1:
        $r6 = virtualinvoke $r4.<javax.ws.rs.core.Response: java.lang.Object getEntity()>();

     label2:
        $r5 = virtualinvoke r3.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r6);

        return $r5;
    }

    public java.lang.Object invoke(java.lang.String, java.lang.Object, java.lang.Class, java.lang.Class)
    {
        org.apache.cxf.jaxrs.client.WebClient r0;
        javax.ws.rs.core.Response $r5;
        java.lang.Object r2, $r6, $r7;
        java.lang.Class r3, r4;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Class;

        r4 := @parameter3: java.lang.Class;

        $r5 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.Response doInvoke(java.lang.String,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)>(r1, r2, r3, null, r4, r4);

        if r4 != class "Ljavax/ws/rs/core/Response;" goto label1;

        $r7 = $r5;

        goto label2;

     label1:
        $r7 = virtualinvoke $r5.<javax.ws.rs.core.Response: java.lang.Object getEntity()>();

     label2:
        $r6 = virtualinvoke r4.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r7);

        return $r6;
    }

    public java.lang.Object post(java.lang.Object, java.lang.Class)
    {
        org.apache.cxf.jaxrs.client.WebClient r0;
        java.lang.Object r1, $r3;
        java.lang.Class r2;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: java.lang.Object invoke(java.lang.String,java.lang.Object,java.lang.Class)>("POST", r1, r2);

        return $r3;
    }

    public java.lang.Object post(java.lang.Object, javax.ws.rs.core.GenericType)
    {
        javax.ws.rs.core.GenericType r2;
        org.apache.cxf.jaxrs.client.WebClient r0;
        java.lang.Object r1, $r3;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: javax.ws.rs.core.GenericType;

        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: java.lang.Object invoke(java.lang.String,java.lang.Object,javax.ws.rs.core.GenericType)>("POST", r1, r2);

        return $r3;
    }

    public java.util.concurrent.Future post(java.lang.Object, javax.ws.rs.client.InvocationCallback)
    {
        java.util.concurrent.Future $r4;
        org.apache.cxf.jaxrs.client.WebClient r0;
        javax.ws.rs.client.InvocationCallback r3;
        java.lang.Object r1;
        java.lang.Class $r2;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: javax.ws.rs.client.InvocationCallback;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: java.util.concurrent.Future doInvokeAsyncCallback(java.lang.String,java.lang.Object,java.lang.Class,java.lang.reflect.Type,javax.ws.rs.client.InvocationCallback)>("POST", r1, $r2, null, r3);

        return $r4;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Class)
    {
        org.apache.cxf.jaxrs.client.WebClient r0;
        java.lang.Object r1, $r3;
        java.lang.Class r2;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: java.lang.Object invoke(java.lang.String,java.lang.Object,java.lang.Class)>("PUT", r1, r2);

        return $r3;
    }

    public java.lang.Object put(java.lang.Object, javax.ws.rs.core.GenericType)
    {
        javax.ws.rs.core.GenericType r2;
        org.apache.cxf.jaxrs.client.WebClient r0;
        java.lang.Object r1, $r3;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: javax.ws.rs.core.GenericType;

        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: java.lang.Object invoke(java.lang.String,java.lang.Object,javax.ws.rs.core.GenericType)>("PUT", r1, r2);

        return $r3;
    }

    public java.util.concurrent.Future put(java.lang.Object, javax.ws.rs.client.InvocationCallback)
    {
        java.util.concurrent.Future $r4;
        org.apache.cxf.jaxrs.client.WebClient r0;
        javax.ws.rs.client.InvocationCallback r3;
        java.lang.Object r1;
        java.lang.Class $r2;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: javax.ws.rs.client.InvocationCallback;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: java.util.concurrent.Future doInvokeAsyncCallback(java.lang.String,java.lang.Object,java.lang.Class,java.lang.reflect.Type,javax.ws.rs.client.InvocationCallback)>("PUT", r1, $r2, null, r3);

        return $r4;
    }

    public java.util.Collection invokeAndGetCollection(java.lang.String, java.lang.Object, java.lang.Class)
    {
        org.apache.cxf.jaxrs.client.WebClient r0;
        java.util.Collection $r7, $r8;
        org.apache.cxf.jaxrs.utils.ParameterizedCollectionType $r3;
        javax.ws.rs.core.Response $r5;
        java.lang.Object r2, $r6;
        java.lang.Class r4;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r4 := @parameter2: java.lang.Class;

        $r3 = new org.apache.cxf.jaxrs.utils.ParameterizedCollectionType;

        specialinvoke $r3.<org.apache.cxf.jaxrs.utils.ParameterizedCollectionType: void <init>(java.lang.Class)>(r4);

        $r5 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.Response doInvoke(java.lang.String,java.lang.Object,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)>(r1, r2, null, class "Ljava/util/Collection;", $r3);

        $r6 = virtualinvoke $r5.<javax.ws.rs.core.Response: java.lang.Object getEntity()>();

        $r7 = (java.util.Collection) $r6;

        $r8 = staticinvoke <org.apache.cxf.helpers.CastUtils: java.util.Collection cast(java.util.Collection,java.lang.Class)>($r7, r4);

        return $r8;
    }

    public javax.ws.rs.core.Response postCollection(java.lang.Object, java.lang.Class)
    {
        javax.ws.rs.core.Response $r4;
        org.apache.cxf.jaxrs.client.WebClient r0;
        java.lang.Object r1;
        java.lang.Class r3;
        org.apache.cxf.jaxrs.utils.ParameterizedCollectionType $r2;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Class;

        $r2 = new org.apache.cxf.jaxrs.utils.ParameterizedCollectionType;

        specialinvoke $r2.<org.apache.cxf.jaxrs.utils.ParameterizedCollectionType: void <init>(java.lang.Class)>(r3);

        $r4 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.Response doInvoke(java.lang.String,java.lang.Object,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)>("POST", r1, $r2, class "Ljavax/ws/rs/core/Response;", class "Ljavax/ws/rs/core/Response;");

        return $r4;
    }

    public java.lang.Object postCollection(java.lang.Object, java.lang.Class, java.lang.Class)
    {
        org.apache.cxf.jaxrs.client.WebClient r0;
        org.apache.cxf.jaxrs.utils.ParameterizedCollectionType $r2;
        javax.ws.rs.core.Response $r5;
        java.lang.Object r1, $r6, $r7;
        java.lang.Class r3, r4;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Class;

        r4 := @parameter2: java.lang.Class;

        $r2 = new org.apache.cxf.jaxrs.utils.ParameterizedCollectionType;

        specialinvoke $r2.<org.apache.cxf.jaxrs.utils.ParameterizedCollectionType: void <init>(java.lang.Class)>(r3);

        $r5 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.Response doInvoke(java.lang.String,java.lang.Object,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)>("POST", r1, $r2, r4, r4);

        if r4 != class "Ljavax/ws/rs/core/Response;" goto label1;

        $r7 = $r5;

        goto label2;

     label1:
        $r7 = virtualinvoke $r5.<javax.ws.rs.core.Response: java.lang.Object getEntity()>();

     label2:
        $r6 = virtualinvoke r4.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r7);

        return $r6;
    }

    public java.util.Collection postAndGetCollection(java.lang.Object, java.lang.Class, java.lang.Class)
    {
        org.apache.cxf.jaxrs.client.WebClient r0;
        java.util.Collection $r8, $r9;
        org.apache.cxf.jaxrs.utils.ParameterizedCollectionType $r2, $r4;
        javax.ws.rs.core.Response $r6;
        java.lang.Object r1, $r7;
        java.lang.Class r3, r5;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Class;

        r5 := @parameter2: java.lang.Class;

        $r2 = new org.apache.cxf.jaxrs.utils.ParameterizedCollectionType;

        specialinvoke $r2.<org.apache.cxf.jaxrs.utils.ParameterizedCollectionType: void <init>(java.lang.Class)>(r3);

        $r4 = new org.apache.cxf.jaxrs.utils.ParameterizedCollectionType;

        specialinvoke $r4.<org.apache.cxf.jaxrs.utils.ParameterizedCollectionType: void <init>(java.lang.Class)>(r5);

        $r6 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.Response doInvoke(java.lang.String,java.lang.Object,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)>("POST", r1, $r2, class "Ljava/util/Collection;", $r4);

        $r7 = virtualinvoke $r6.<javax.ws.rs.core.Response: java.lang.Object getEntity()>();

        $r8 = (java.util.Collection) $r7;

        $r9 = staticinvoke <org.apache.cxf.helpers.CastUtils: java.util.Collection cast(java.util.Collection,java.lang.Class)>($r8, r5);

        return $r9;
    }

    public java.util.Collection postObjectGetCollection(java.lang.Object, java.lang.Class)
    {
        org.apache.cxf.jaxrs.client.WebClient r0;
        java.util.Collection $r6, $r7;
        org.apache.cxf.jaxrs.utils.ParameterizedCollectionType $r2;
        javax.ws.rs.core.Response $r4;
        java.lang.Object r1, $r5;
        java.lang.Class r3;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Class;

        $r2 = new org.apache.cxf.jaxrs.utils.ParameterizedCollectionType;

        specialinvoke $r2.<org.apache.cxf.jaxrs.utils.ParameterizedCollectionType: void <init>(java.lang.Class)>(r3);

        $r4 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.Response doInvoke(java.lang.String,java.lang.Object,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)>("POST", r1, null, class "Ljava/util/Collection;", $r2);

        $r5 = virtualinvoke $r4.<javax.ws.rs.core.Response: java.lang.Object getEntity()>();

        $r6 = (java.util.Collection) $r5;

        $r7 = staticinvoke <org.apache.cxf.helpers.CastUtils: java.util.Collection cast(java.util.Collection,java.lang.Class)>($r6, r3);

        return $r7;
    }

    public java.util.Collection postAndGetCollection(java.lang.Object, java.lang.Class)
    {
        org.apache.cxf.jaxrs.client.WebClient r0;
        java.util.Collection $r3;
        java.lang.Object r1;
        java.lang.Class r2;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: java.util.Collection invokeAndGetCollection(java.lang.String,java.lang.Object,java.lang.Class)>("POST", r1, r2);

        return $r3;
    }

    public java.util.Collection getCollection(java.lang.Class)
    {
        java.lang.Class r1;
        org.apache.cxf.jaxrs.client.WebClient r0;
        java.util.Collection $r2;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: java.util.Collection invokeAndGetCollection(java.lang.String,java.lang.Object,java.lang.Class)>("GET", null, r1);

        return $r2;
    }

    public java.lang.Object get(java.lang.Class)
    {
        java.lang.Class r1;
        java.lang.Object $r2;
        org.apache.cxf.jaxrs.client.WebClient r0;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: java.lang.Object invoke(java.lang.String,java.lang.Object,java.lang.Class)>("GET", null, r1);

        return $r2;
    }

    public java.lang.Object get(javax.ws.rs.core.GenericType)
    {
        javax.ws.rs.core.GenericType r1;
        java.lang.Object $r2;
        org.apache.cxf.jaxrs.client.WebClient r0;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: javax.ws.rs.core.GenericType;

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: java.lang.Object invoke(java.lang.String,java.lang.Object,javax.ws.rs.core.GenericType)>("GET", null, r1);

        return $r2;
    }

    public java.util.concurrent.Future get(javax.ws.rs.client.InvocationCallback)
    {
        javax.ws.rs.client.InvocationCallback r1;
        java.util.concurrent.Future $r2;
        org.apache.cxf.jaxrs.client.WebClient r0;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: javax.ws.rs.client.InvocationCallback;

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: java.util.concurrent.Future doInvokeAsyncCallback(java.lang.String,java.lang.Object,java.lang.Class,java.lang.reflect.Type,javax.ws.rs.client.InvocationCallback)>("GET", null, null, null, r1);

        return $r2;
    }

    public org.apache.cxf.jaxrs.client.WebClient path(java.lang.Object)
    {
        org.apache.cxf.jaxrs.client.WebClient r0;
        javax.ws.rs.core.UriBuilder $r1;
        java.lang.Object r2;
        java.lang.String $r3;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.UriBuilder getCurrentBuilder()>();

        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: java.lang.String convertParamValue(java.lang.Object)>(r2);

        virtualinvoke $r1.<javax.ws.rs.core.UriBuilder: javax.ws.rs.core.UriBuilder path(java.lang.String)>($r3);

        return r0;
    }

    public transient org.apache.cxf.jaxrs.client.WebClient path(java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r5;
        org.apache.cxf.jaxrs.model.URITemplate $r9;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl $r0;
        org.apache.cxf.jaxrs.client.WebClient r7, $r13;
        org.apache.cxf.jaxrs.client.ClientState $r8;
        javax.ws.rs.core.MultivaluedMap $r11;
        java.util.List $r10;
        javax.ws.rs.core.UriBuilder $r2, $r4;
        java.net.URI $r1, $r6;
        java.lang.String r3, $r12;

        r7 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r3 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Object[];

        $r0 = new org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        specialinvoke $r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: void <init>()>();

        $r1 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>("http://tempuri");

        $r2 = virtualinvoke $r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.UriBuilder uri(java.net.URI)>($r1);

        $r4 = virtualinvoke $r2.<javax.ws.rs.core.UriBuilder: javax.ws.rs.core.UriBuilder path(java.lang.String)>(r3);

        $r6 = virtualinvoke $r4.<javax.ws.rs.core.UriBuilder: java.net.URI buildFromEncoded(java.lang.Object[])>(r5);

        $r8 = virtualinvoke r7.<org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.ClientState getState()>();

        $r9 = new org.apache.cxf.jaxrs.model.URITemplate;

        specialinvoke $r9.<org.apache.cxf.jaxrs.model.URITemplate: void <init>(java.lang.String)>(r3);

        $r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r5);

        $r11 = virtualinvoke r7.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.MultivaluedMap getTemplateParametersMap(org.apache.cxf.jaxrs.model.URITemplate,java.util.List)>($r9, $r10);

        interfaceinvoke $r8.<org.apache.cxf.jaxrs.client.ClientState: void setTemplates(javax.ws.rs.core.MultivaluedMap)>($r11);

        $r12 = virtualinvoke $r6.<java.net.URI: java.lang.String getRawPath()>();

        $r13 = virtualinvoke r7.<org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.WebClient path(java.lang.Object)>($r12);

        return $r13;
    }

    public transient org.apache.cxf.jaxrs.client.WebClient query(java.lang.String, java.lang.Object[])
    {
        org.apache.cxf.jaxrs.model.ParameterType $r4;
        java.lang.Object[] r3;
        org.apache.cxf.jaxrs.client.WebClient r0;
        javax.ws.rs.core.UriBuilder $r1;
        java.lang.String r2;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object[];

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.UriBuilder getCurrentBuilder()>();

        $r4 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType QUERY>;

        virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: void addMatrixQueryParamsToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,org.apache.cxf.jaxrs.model.ParameterType,java.lang.Object[])>($r1, r2, $r4, r3);

        return r0;
    }

    public transient org.apache.cxf.jaxrs.client.WebClient matrix(java.lang.String, java.lang.Object[])
    {
        org.apache.cxf.jaxrs.model.ParameterType $r4;
        java.lang.Object[] r3;
        org.apache.cxf.jaxrs.client.WebClient r0;
        javax.ws.rs.core.UriBuilder $r1;
        java.lang.String r2;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object[];

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.UriBuilder getCurrentBuilder()>();

        $r4 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType MATRIX>;

        virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: void addMatrixQueryParamsToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,org.apache.cxf.jaxrs.model.ParameterType,java.lang.Object[])>($r1, r2, $r4, r3);

        return r0;
    }

    public org.apache.cxf.jaxrs.client.WebClient fragment(java.lang.String)
    {
        javax.ws.rs.core.UriBuilder $r1;
        java.lang.String r2;
        org.apache.cxf.jaxrs.client.WebClient r0;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.UriBuilder getCurrentBuilder()>();

        virtualinvoke $r1.<javax.ws.rs.core.UriBuilder: javax.ws.rs.core.UriBuilder fragment(java.lang.String)>(r2);

        return r0;
    }

    public org.apache.cxf.jaxrs.client.WebClient 'to'(java.lang.String, boolean)
    {
        org.apache.cxf.jaxrs.client.WebClient r0;
        java.lang.IllegalArgumentException $r7;
        org.apache.cxf.jaxrs.client.ClientState $r1;
        java.lang.String r2, $r5;
        java.net.URI $r3, $r4, $r6;
        boolean z0, $z1;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r2 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.ClientState getState()>();

        interfaceinvoke $r1.<org.apache.cxf.jaxrs.client.ClientState: void setTemplates(javax.ws.rs.core.MultivaluedMap)>(null);

        if z0 == 0 goto label2;

        $r4 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: java.net.URI getBaseURI()>();

        $r5 = virtualinvoke $r4.<java.net.URI: java.lang.String toString()>();

        $z1 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>($r5);

        if $z1 != 0 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Base address can not be preserved");

        throw $r7;

     label1:
        $r6 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(r2);

        virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: void resetCurrentBuilder(java.net.URI)>($r6);

        goto label3;

     label2:
        $r3 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(r2);

        virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: void resetBaseAddress(java.net.URI)>($r3);

     label3:
        return r0;
    }

    public org.apache.cxf.jaxrs.client.WebClient back(boolean)
    {
        org.apache.cxf.jaxrs.client.ClientState $r1;
        int $i0, $i1, i2;
        javax.ws.rs.core.UriBuilder $r6, $r7, $r11;
        java.net.URI $r2, $r3, $r12;
        java.lang.String $r4, $r10, $r13;
        boolean z0;
        javax.ws.rs.core.PathSegment $r9;
        org.apache.cxf.jaxrs.client.WebClient r0;
        java.util.List $r5;
        java.lang.Object $r8;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.ClientState getState()>();

        interfaceinvoke $r1.<org.apache.cxf.jaxrs.client.ClientState: void setTemplates(javax.ws.rs.core.MultivaluedMap)>(null);

        if z0 == 0 goto label1;

        $r11 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.UriBuilder getCurrentBuilder()>();

        $r12 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: java.net.URI getBaseURI()>();

        $r13 = virtualinvoke $r12.<java.net.URI: java.lang.String getPath()>();

        virtualinvoke $r11.<javax.ws.rs.core.UriBuilder: javax.ws.rs.core.UriBuilder replacePath(java.lang.String)>($r13);

        goto label4;

     label1:
        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: java.net.URI getCurrentURI()>();

        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: java.net.URI getBaseURI()>();

        if $r2 != $r3 goto label2;

        return r0;

     label2:
        $r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getPath()>();

        $r5 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List getPathSegments(java.lang.String,boolean)>($r4, 0);

        $r6 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.UriBuilder getCurrentBuilder()>();

        virtualinvoke $r6.<javax.ws.rs.core.UriBuilder: javax.ws.rs.core.UriBuilder replacePath(java.lang.String)>(null);

        i2 = 0;

     label3:
        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        if i2 >= $i1 goto label4;

        $r7 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.UriBuilder getCurrentBuilder()>();

        $r8 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i2);

        $r9 = (javax.ws.rs.core.PathSegment) $r8;

        $r10 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String fromPathSegment(javax.ws.rs.core.PathSegment)>($r9);

        virtualinvoke $r7.<javax.ws.rs.core.UriBuilder: javax.ws.rs.core.UriBuilder path(java.lang.String)>($r10);

        i2 = i2 + 1;

        goto label3;

     label4:
        return r0;
    }

    public org.apache.cxf.jaxrs.client.WebClient replacePath(java.lang.String)
    {
        org.apache.cxf.jaxrs.client.WebClient r1, $r2, $r3;
        java.lang.String r0;
        boolean $z0, $z1;

        r1 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r3 = virtualinvoke r1.<org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.WebClient back(boolean)>(1);

        return $r3;

     label1:
        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 == 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        virtualinvoke r1.<org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.WebClient back(boolean)>($z1);

        $r2 = virtualinvoke r1.<org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.WebClient path(java.lang.Object)>(r0);

        return $r2;
    }

    public org.apache.cxf.jaxrs.client.WebClient resetQuery()
    {
        org.apache.cxf.jaxrs.client.WebClient r0, $r1;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.WebClient replaceQuery(java.lang.String)>(null);

        return $r1;
    }

    public org.apache.cxf.jaxrs.client.WebClient replaceQuery(java.lang.String)
    {
        javax.ws.rs.core.UriBuilder $r1;
        java.lang.String r2;
        org.apache.cxf.jaxrs.client.WebClient r0;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.UriBuilder getCurrentBuilder()>();

        virtualinvoke $r1.<javax.ws.rs.core.UriBuilder: javax.ws.rs.core.UriBuilder replaceQuery(java.lang.String)>(r2);

        return r0;
    }

    public org.apache.cxf.jaxrs.client.WebClient replaceHeader(java.lang.String, java.lang.String)
    {
        javax.ws.rs.core.MultivaluedMap $r2;
        org.apache.cxf.jaxrs.client.WebClient r0;
        java.lang.String r3, r4;
        org.apache.cxf.jaxrs.client.ClientState $r1;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.ClientState getState()>();

        $r2 = interfaceinvoke $r1.<org.apache.cxf.jaxrs.client.ClientState: javax.ws.rs.core.MultivaluedMap getRequestHeaders()>();

        interfaceinvoke $r2.<javax.ws.rs.core.MultivaluedMap: java.lang.Object remove(java.lang.Object)>(r3);

        if r4 == null goto label1;

        interfaceinvoke $r2.<javax.ws.rs.core.MultivaluedMap: void add(java.lang.Object,java.lang.Object)>(r3, r4);

     label1:
        return r0;
    }

    public transient org.apache.cxf.jaxrs.client.WebClient replaceQueryParam(java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r3;
        org.apache.cxf.jaxrs.client.WebClient r0;
        javax.ws.rs.core.UriBuilder $r1;
        java.lang.String r2;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object[];

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.UriBuilder getCurrentBuilder()>();

        virtualinvoke $r1.<javax.ws.rs.core.UriBuilder: javax.ws.rs.core.UriBuilder replaceQueryParam(java.lang.String,java.lang.Object[])>(r2, r3);

        return r0;
    }

    public org.apache.cxf.jaxrs.client.WebClient type(javax.ws.rs.core.MediaType)
    {
        javax.ws.rs.core.MediaType r1;
        org.apache.cxf.jaxrs.client.WebClient r0, $r3;
        org.apache.cxf.jaxrs.client.Client $r2;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: javax.ws.rs.core.MediaType;

        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.Client type(javax.ws.rs.core.MediaType)>(r1);

        $r3 = (org.apache.cxf.jaxrs.client.WebClient) $r2;

        return $r3;
    }

    public org.apache.cxf.jaxrs.client.WebClient type(java.lang.String)
    {
        org.apache.cxf.jaxrs.client.WebClient r0, $r3;
        org.apache.cxf.jaxrs.client.Client $r2;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.Client type(java.lang.String)>(r1);

        $r3 = (org.apache.cxf.jaxrs.client.WebClient) $r2;

        return $r3;
    }

    public transient org.apache.cxf.jaxrs.client.WebClient accept(javax.ws.rs.core.MediaType[])
    {
        org.apache.cxf.jaxrs.client.WebClient r0, $r3;
        org.apache.cxf.jaxrs.client.Client $r2;
        javax.ws.rs.core.MediaType[] r1;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: javax.ws.rs.core.MediaType[];

        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.Client accept(javax.ws.rs.core.MediaType[])>(r1);

        $r3 = (org.apache.cxf.jaxrs.client.WebClient) $r2;

        return $r3;
    }

    public transient org.apache.cxf.jaxrs.client.WebClient accept(java.lang.String[])
    {
        org.apache.cxf.jaxrs.client.WebClient r0, $r3;
        java.lang.String[] r1;
        org.apache.cxf.jaxrs.client.Client $r2;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.String[];

        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.Client accept(java.lang.String[])>(r1);

        $r3 = (org.apache.cxf.jaxrs.client.WebClient) $r2;

        return $r3;
    }

    public org.apache.cxf.jaxrs.client.WebClient language(java.lang.String)
    {
        org.apache.cxf.jaxrs.client.WebClient r0, $r3;
        org.apache.cxf.jaxrs.client.Client $r2;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.Client language(java.lang.String)>(r1);

        $r3 = (org.apache.cxf.jaxrs.client.WebClient) $r2;

        return $r3;
    }

    public transient org.apache.cxf.jaxrs.client.WebClient acceptLanguage(java.lang.String[])
    {
        org.apache.cxf.jaxrs.client.WebClient r0, $r3;
        java.lang.String[] r1;
        org.apache.cxf.jaxrs.client.Client $r2;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.String[];

        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.Client acceptLanguage(java.lang.String[])>(r1);

        $r3 = (org.apache.cxf.jaxrs.client.WebClient) $r2;

        return $r3;
    }

    public org.apache.cxf.jaxrs.client.WebClient encoding(java.lang.String)
    {
        org.apache.cxf.jaxrs.client.WebClient r0, $r3;
        org.apache.cxf.jaxrs.client.Client $r2;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.Client encoding(java.lang.String)>(r1);

        $r3 = (org.apache.cxf.jaxrs.client.WebClient) $r2;

        return $r3;
    }

    public transient org.apache.cxf.jaxrs.client.WebClient acceptEncoding(java.lang.String[])
    {
        org.apache.cxf.jaxrs.client.WebClient r0, $r3;
        java.lang.String[] r1;
        org.apache.cxf.jaxrs.client.Client $r2;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.String[];

        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.Client acceptEncoding(java.lang.String[])>(r1);

        $r3 = (org.apache.cxf.jaxrs.client.WebClient) $r2;

        return $r3;
    }

    public org.apache.cxf.jaxrs.client.WebClient match(javax.ws.rs.core.EntityTag, boolean)
    {
        org.apache.cxf.jaxrs.client.WebClient r0, $r3;
        org.apache.cxf.jaxrs.client.Client $r2;
        javax.ws.rs.core.EntityTag r1;
        boolean z0;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: javax.ws.rs.core.EntityTag;

        z0 := @parameter1: boolean;

        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.Client match(javax.ws.rs.core.EntityTag,boolean)>(r1, z0);

        $r3 = (org.apache.cxf.jaxrs.client.WebClient) $r2;

        return $r3;
    }

    public org.apache.cxf.jaxrs.client.WebClient modified(java.util.Date, boolean)
    {
        org.apache.cxf.jaxrs.client.WebClient r0, $r3;
        java.util.Date r1;
        org.apache.cxf.jaxrs.client.Client $r2;
        boolean z0;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.util.Date;

        z0 := @parameter1: boolean;

        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.Client modified(java.util.Date,boolean)>(r1, z0);

        $r3 = (org.apache.cxf.jaxrs.client.WebClient) $r2;

        return $r3;
    }

    public org.apache.cxf.jaxrs.client.WebClient cookie(javax.ws.rs.core.Cookie)
    {
        org.apache.cxf.jaxrs.client.WebClient r0, $r3;
        org.apache.cxf.jaxrs.client.Client $r2;
        javax.ws.rs.core.Cookie r1;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: javax.ws.rs.core.Cookie;

        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.Client cookie(javax.ws.rs.core.Cookie)>(r1);

        $r3 = (org.apache.cxf.jaxrs.client.WebClient) $r2;

        return $r3;
    }

    public transient org.apache.cxf.jaxrs.client.WebClient header(java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r2;
        org.apache.cxf.jaxrs.client.WebClient r0, $r4;
        org.apache.cxf.jaxrs.client.Client $r3;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r3 = specialinvoke r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.Client header(java.lang.String,java.lang.Object[])>(r1, r2);

        $r4 = (org.apache.cxf.jaxrs.client.WebClient) $r3;

        return $r4;
    }

    public org.apache.cxf.jaxrs.client.WebClient headers(javax.ws.rs.core.MultivaluedMap)
    {
        javax.ws.rs.core.MultivaluedMap r1;
        org.apache.cxf.jaxrs.client.WebClient r0, $r3;
        org.apache.cxf.jaxrs.client.Client $r2;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: javax.ws.rs.core.MultivaluedMap;

        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.Client headers(javax.ws.rs.core.MultivaluedMap)>(r1);

        $r3 = (org.apache.cxf.jaxrs.client.WebClient) $r2;

        return $r3;
    }

    public org.apache.cxf.jaxrs.client.WebClient reset()
    {
        org.apache.cxf.jaxrs.client.Client $r1;
        org.apache.cxf.jaxrs.client.WebClient r0, $r2;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        $r1 = specialinvoke r0.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.Client reset()>();

        $r2 = (org.apache.cxf.jaxrs.client.WebClient) $r1;

        return $r2;
    }

    protected javax.ws.rs.core.Response doInvoke(java.lang.String, java.lang.Object, java.lang.reflect.Type, java.lang.Class, java.lang.reflect.Type)
    {
        org.apache.cxf.jaxrs.client.WebClient r0;
        javax.ws.rs.core.Response $r6;
        java.lang.reflect.Type r3, r5;
        java.lang.Object r2;
        java.lang.Class r4, $r7;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.reflect.Type;

        r4 := @parameter3: java.lang.Class;

        r5 := @parameter4: java.lang.reflect.Type;

        if r2 != null goto label1;

        $r7 = null;

        goto label2;

     label1:
        $r7 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

     label2:
        $r6 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.Response doInvoke(java.lang.String,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)>(r1, r2, $r7, r3, r4, r5);

        return $r6;
    }

    private static java.lang.reflect.Type getGenericEntityType(javax.ws.rs.core.GenericEntity, java.lang.reflect.Type)
    {
        java.lang.reflect.Type r0, $r2, $r3;
        javax.ws.rs.core.GenericEntity r1;
        java.lang.IllegalArgumentException $r4;

        r1 := @parameter0: javax.ws.rs.core.GenericEntity;

        r0 := @parameter1: java.lang.reflect.Type;

        if r0 == null goto label1;

        $r3 = virtualinvoke r1.<javax.ws.rs.core.GenericEntity: java.lang.reflect.Type getType()>();

        if $r3 == r0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal type");

        throw $r4;

     label1:
        $r2 = virtualinvoke r1.<javax.ws.rs.core.GenericEntity: java.lang.reflect.Type getType()>();

        return $r2;
    }

    protected javax.ws.rs.core.Response doInvoke(java.lang.String, java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.Class, java.lang.reflect.Type)
    {
        org.apache.cxf.jaxrs.client.WebClient r0;
        javax.ws.rs.core.GenericEntity r10;
        javax.ws.rs.core.MultivaluedMap $r2;
        javax.ws.rs.core.Response $r5;
        java.lang.reflect.Type r4, r9;
        int $i0;
        javax.ws.rs.WebApplicationException $r6;
        java.lang.Class r1, r8;
        java.lang.Object r7;
        java.lang.String r3;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r3 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.Object;

        r8 := @parameter2: java.lang.Class;

        r9 := @parameter3: java.lang.reflect.Type;

        r1 := @parameter4: java.lang.Class;

        r4 := @parameter5: java.lang.reflect.Type;

        $z0 = r7 instanceof javax.ws.rs.core.GenericEntity;

        if $z0 == 0 goto label1;

        r10 = (javax.ws.rs.core.GenericEntity) r7;

        r7 = virtualinvoke r10.<javax.ws.rs.core.GenericEntity: java.lang.Object getEntity()>();

        r8 = virtualinvoke r10.<javax.ws.rs.core.GenericEntity: java.lang.Class getRawType()>();

        r9 = staticinvoke <org.apache.cxf.jaxrs.client.WebClient: java.lang.reflect.Type getGenericEntityType(javax.ws.rs.core.GenericEntity,java.lang.reflect.Type)>(r10, r9);

     label1:
        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.MultivaluedMap prepareHeaders(java.lang.Class,java.lang.Object)>(r1, r7);

        virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: void resetResponse()>();

        $r5 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.Response doChainedInvocation(java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Exchange,java.util.Map)>(r3, $r2, r7, r8, r9, r1, r4, null, null);

        $i0 = virtualinvoke $r5.<javax.ws.rs.core.Response: int getStatus()>();

        if $i0 < 300 goto label2;

        if r1 == class "Ljavax/ws/rs/core/Response;" goto label2;

        $r6 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.WebApplicationException convertToWebApplicationException(javax.ws.rs.core.Response)>($r5);

        throw $r6;

     label2:
        return $r5;
    }

    private java.lang.reflect.ParameterizedType findCallbackType(java.lang.Class)
    {
        org.apache.cxf.jaxrs.client.WebClient r2;
        java.lang.reflect.ParameterizedType $r4, r6;
        java.lang.reflect.Type r5, $r8;
        java.lang.reflect.Type[] $r1;
        int i0, i1;
        java.lang.Class r0, $r3, $r7;
        boolean $z0, $z1;

        r2 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r0 := @parameter0: java.lang.Class;

        if r0 == null goto label1;

        if r0 != class "Ljava/lang/Object;" goto label2;

     label1:
        return null;

     label2:
        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Type[] getGenericInterfaces()>();

        i0 = lengthof $r1;

        i1 = 0;

     label3:
        if i1 >= i0 goto label5;

        r5 = $r1[i1];

        $z0 = r5 instanceof java.lang.reflect.ParameterizedType;

        if $z0 == 0 goto label4;

        r6 = (java.lang.reflect.ParameterizedType) r5;

        $r7 = class "Ljavax/ws/rs/client/InvocationCallback;";

        $r8 = interfaceinvoke r6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();

        $z1 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label4;

        return r6;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        $r3 = virtualinvoke r0.<java.lang.Class: java.lang.Class getSuperclass()>();

        $r4 = specialinvoke r2.<org.apache.cxf.jaxrs.client.WebClient: java.lang.reflect.ParameterizedType findCallbackType(java.lang.Class)>($r3);

        return $r4;
    }

    private java.lang.reflect.Type getCallbackType(javax.ws.rs.client.InvocationCallback)
    {
        java.lang.reflect.ParameterizedType $r3;
        java.lang.reflect.Type r5;
        org.apache.cxf.jaxrs.client.WebClient r2;
        javax.ws.rs.client.InvocationCallback r0;
        java.lang.reflect.Type[] $r4;
        int i0;
        java.lang.Class $r1;

        r2 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r0 := @parameter0: javax.ws.rs.client.InvocationCallback;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = specialinvoke r2.<org.apache.cxf.jaxrs.client.WebClient: java.lang.reflect.ParameterizedType findCallbackType(java.lang.Class)>($r1);

        $r4 = interfaceinvoke $r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        i0 = lengthof $r4;

        if 0 >= i0 goto label1;

        r5 = $r4[0];

        return r5;

     label1:
        return null;
    }

    protected java.util.concurrent.Future doInvokeAsyncCallback(java.lang.String, java.lang.Object, java.lang.Class, java.lang.reflect.Type, javax.ws.rs.client.InvocationCallback)
    {
        java.util.concurrent.Future $r12;
        javax.ws.rs.client.InvocationCallback r1;
        java.lang.String r3;
        boolean $z0, $z1, $z2;
        org.apache.cxf.jaxrs.client.WebClient r0;
        java.lang.reflect.ParameterizedType r7;
        java.lang.reflect.Type $r2, r6, $r8, $r9, r10;
        java.lang.Object r4;
        java.lang.Class r5, r11;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Object;

        r5 := @parameter2: java.lang.Class;

        r6 := @parameter3: java.lang.reflect.Type;

        r1 := @parameter4: javax.ws.rs.client.InvocationCallback;

        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: java.lang.reflect.Type getCallbackType(javax.ws.rs.client.InvocationCallback)>(r1);

        r10 = $r2;

        r11 = null;

        $z0 = $r2 instanceof java.lang.Class;

        if $z0 == 0 goto label1;

        r11 = (java.lang.Class) $r2;

        goto label2;

     label1:
        $z1 = $r2 instanceof java.lang.reflect.ParameterizedType;

        if $z1 == 0 goto label2;

        r7 = (java.lang.reflect.ParameterizedType) $r2;

        $r8 = interfaceinvoke r7.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();

        $z2 = $r8 instanceof java.lang.Class;

        if $z2 == 0 goto label2;

        $r9 = interfaceinvoke r7.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();

        r11 = (java.lang.Class) $r9;

        r10 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: java.lang.Class getActualType(java.lang.reflect.Type)>(r7);

     label2:
        $r12 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: java.util.concurrent.Future doInvokeAsync(java.lang.String,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,javax.ws.rs.client.InvocationCallback)>(r3, r4, r5, r6, r11, r10, r1);

        return $r12;
    }

    protected java.util.concurrent.Future doInvokeAsync(java.lang.String, java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.Class, java.lang.reflect.Type, javax.ws.rs.client.InvocationCallback)
    {
        java.lang.Throwable r19;
        java.util.concurrent.Future $r10;
        javax.ws.rs.client.InvocationCallback r8;
        java.lang.String r3;
        boolean $z0, $z1;
        org.apache.cxf.jaxrs.client.WebClient r0;
        org.apache.cxf.message.Message $r5;
        javax.ws.rs.core.GenericEntity r18;
        org.apache.cxf.message.Exchange $r6, $r9, $r11, $r13;
        javax.ws.rs.core.MultivaluedMap $r2;
        java.lang.reflect.Type r4, r17;
        java.lang.Class r1, r16;
        java.lang.Object $r12, $r14, r15;
        org.apache.cxf.jaxrs.client.JaxrsClientCallback $r7;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r3 := @parameter0: java.lang.String;

        r15 := @parameter1: java.lang.Object;

        r16 := @parameter2: java.lang.Class;

        r17 := @parameter3: java.lang.reflect.Type;

        r1 := @parameter4: java.lang.Class;

        r4 := @parameter5: java.lang.reflect.Type;

        r8 := @parameter6: javax.ws.rs.client.InvocationCallback;

        $z0 = r15 instanceof javax.ws.rs.core.GenericEntity;

        if $z0 == 0 goto label1;

        r18 = (javax.ws.rs.core.GenericEntity) r15;

        r15 = virtualinvoke r18.<javax.ws.rs.core.GenericEntity: java.lang.Object getEntity()>();

        r16 = virtualinvoke r18.<javax.ws.rs.core.GenericEntity: java.lang.Class getRawType()>();

        r17 = staticinvoke <org.apache.cxf.jaxrs.client.WebClient: java.lang.reflect.Type getGenericEntityType(javax.ws.rs.core.GenericEntity,java.lang.reflect.Type)>(r18, r17);

     label1:
        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.MultivaluedMap prepareHeaders(java.lang.Class,java.lang.Object)>(r1, r15);

        virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: void resetResponse()>();

        $r5 = specialinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.message.Message finalizeMessage(java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Exchange,java.util.Map)>(r3, $r2, r15, r16, r17, r1, r4, null, null);

        $r6 = interfaceinvoke $r5.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        interfaceinvoke $r6.<org.apache.cxf.message.Exchange: void setSynchronous(boolean)>(0);

        $r7 = new org.apache.cxf.jaxrs.client.JaxrsClientCallback;

        specialinvoke $r7.<org.apache.cxf.jaxrs.client.JaxrsClientCallback: void <init>(javax.ws.rs.client.InvocationCallback,java.lang.Class,java.lang.reflect.Type)>(r8, r1, r4);

        $r9 = interfaceinvoke $r5.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        interfaceinvoke $r9.<org.apache.cxf.message.Exchange: void put(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/jaxrs/client/JaxrsClientCallback;", $r7);

        virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: void doRunInterceptorChain(org.apache.cxf.message.Message)>($r5);

        $r10 = virtualinvoke $r7.<org.apache.cxf.jaxrs.client.JaxrsClientCallback: java.util.concurrent.Future createFuture()>();

        $r11 = interfaceinvoke $r5.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r12 = interfaceinvoke $r11.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Ljava/lang/Exception;");

        if $r12 == null goto label3;

        $r13 = interfaceinvoke $r5.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r14 = interfaceinvoke $r13.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Ljava/lang/Exception;");

        r19 = (java.lang.Throwable) $r14;

        $z1 = r19 instanceof org.apache.cxf.interceptor.Fault;

        if $z1 == 0 goto label2;

        r19 = virtualinvoke r19.<java.lang.Throwable: java.lang.Throwable getCause()>();

     label2:
        virtualinvoke $r7.<org.apache.cxf.jaxrs.client.JaxrsClientCallback: void handleException(java.util.Map,java.lang.Throwable)>($r5, r19);

     label3:
        return $r10;
    }

    private javax.ws.rs.core.MultivaluedMap prepareHeaders(java.lang.Class, java.lang.Object)
    {
        org.apache.cxf.jaxrs.client.WebClient r0;
        java.lang.String[] $r5;
        javax.ws.rs.core.MultivaluedMap $r1;
        javax.ws.rs.core.MediaType $r6;
        java.lang.Object $r2, $r4, r8;
        java.lang.Class r3;
        java.lang.String $r7, r9, $r10;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r3 := @parameter0: java.lang.Class;

        r8 := @parameter1: java.lang.Object;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.MultivaluedMap getHeaders()>();

        $r2 = interfaceinvoke $r1.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("Content-Type");

        if $r2 != null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == 0 goto label6;

        r9 = "*/*";

        if r8 == null goto label5;

        $z0 = r8 instanceof org.apache.cxf.jaxrs.ext.form.Form;

        if $z0 == 0 goto label3;

        $r10 = "application/x-www-form-urlencoded";

        goto label4;

     label3:
        $r10 = "application/xml";

     label4:
        r9 = $r10;

     label5:
        interfaceinvoke $r1.<javax.ws.rs.core.MultivaluedMap: void putSingle(java.lang.Object,java.lang.Object)>("Content-Type", r9);

     label6:
        if r3 == null goto label7;

        if r3 == class "Ljavax/ws/rs/core/Response;" goto label7;

        $r4 = interfaceinvoke $r1.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("Accept");

        if $r4 != null goto label7;

        $r6 = <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType APPLICATION_XML_TYPE>;

        $r5 = newarray (java.lang.String)[0];

        $r7 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String mediaTypeToString(javax.ws.rs.core.MediaType,java.lang.String[])>($r6, $r5);

        interfaceinvoke $r1.<javax.ws.rs.core.MultivaluedMap: void putSingle(java.lang.Object,java.lang.Object)>("Accept", $r7);

     label7:
        return $r1;
    }

    private void handleAsyncResponse(org.apache.cxf.message.Message)
    {
        java.lang.Throwable $r18;
        java.lang.Object[] $r5, $r7, $r10;
        int $i0, $i1;
        boolean $z0, $z1, $z2;
        org.apache.cxf.message.Message r0, $r14;
        org.apache.cxf.jaxrs.client.WebClient r4;
        java.lang.RuntimeException $r21;
        javax.ws.rs.client.ClientException $r22;
        org.apache.cxf.message.Exchange $r1, $r13;
        java.lang.Exception $r19;
        javax.ws.rs.core.Response r20;
        java.lang.reflect.Type $r16;
        javax.ws.rs.WebApplicationException $r12;
        java.lang.Object $r2, $r11, $r17;
        java.lang.Class $r6, $r8, $r9, $r15;
        org.apache.cxf.jaxrs.client.JaxrsClientCallback r3;

        r4 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r2 = interfaceinvoke $r1.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/client/JaxrsClientCallback;");

        r3 = (org.apache.cxf.jaxrs.client.JaxrsClientCallback) $r2;

        r20 = null;

     label01:
        $r5 = virtualinvoke r4.<org.apache.cxf.jaxrs.client.WebClient: java.lang.Object[] preProcessResult(org.apache.cxf.message.Message)>(r0);

        if $r5 == null goto label02;

        $i1 = lengthof $r5;

        if $i1 != 1 goto label02;

        $r17 = $r5[0];

        r20 = (javax.ws.rs.core.Response) $r17;

     label02:
        goto label07;

     label03:
        $r19 := @caughtexception;

        $z1 = $r19 instanceof javax.ws.rs.WebApplicationException;

        if $z1 == 0 goto label04;

        $r21 = (javax.ws.rs.WebApplicationException) $r19;

        goto label06;

     label04:
        $z2 = $r19 instanceof javax.ws.rs.client.ClientException;

        if $z2 == 0 goto label05;

        $r21 = (javax.ws.rs.client.ClientException) $r19;

        goto label06;

     label05:
        $r22 = new javax.ws.rs.client.ClientException;

        $r21 = $r22;

        specialinvoke $r22.<javax.ws.rs.client.ClientException: void <init>(java.lang.Throwable)>($r19);

     label06:
        virtualinvoke r3.<org.apache.cxf.jaxrs.client.JaxrsClientCallback: void handleException(java.util.Map,java.lang.Throwable)>(r0, $r21);

        return;

     label07:
        if r20 != null goto label11;

     label08:
        $r13 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r14 = interfaceinvoke $r13.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getOutMessage()>();

        $r15 = virtualinvoke r3.<org.apache.cxf.jaxrs.client.JaxrsClientCallback: java.lang.Class getResponseClass()>();

        $r16 = virtualinvoke r3.<org.apache.cxf.jaxrs.client.JaxrsClientCallback: java.lang.reflect.Type getOutGenericType()>();

        r20 = virtualinvoke r4.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.Response handleResponse(org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type)>($r14, $r15, $r16);

     label09:
        goto label11;

     label10:
        $r18 := @caughtexception;

        virtualinvoke r3.<org.apache.cxf.jaxrs.client.JaxrsClientCallback: void handleException(java.util.Map,java.lang.Throwable)>(r0, $r18);

        return;

     label11:
        $r6 = virtualinvoke r3.<org.apache.cxf.jaxrs.client.JaxrsClientCallback: java.lang.Class getResponseClass()>();

        if $r6 == null goto label12;

        $r8 = class "Ljavax/ws/rs/core/Response;";

        $r9 = virtualinvoke r3.<org.apache.cxf.jaxrs.client.JaxrsClientCallback: java.lang.Class getResponseClass()>();

        $z0 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label13;

     label12:
        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r20;

        virtualinvoke r3.<org.apache.cxf.jaxrs.client.JaxrsClientCallback: void handleResponse(java.util.Map,java.lang.Object[])>(r0, $r7);

        goto label15;

     label13:
        $i0 = virtualinvoke r20.<javax.ws.rs.core.Response: int getStatus()>();

        if $i0 < 300 goto label14;

        $r12 = virtualinvoke r4.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.WebApplicationException convertToWebApplicationException(javax.ws.rs.core.Response)>(r20);

        virtualinvoke r3.<org.apache.cxf.jaxrs.client.JaxrsClientCallback: void handleException(java.util.Map,java.lang.Throwable)>(r0, $r12);

        goto label15;

     label14:
        $r10 = newarray (java.lang.Object)[1];

        $r11 = virtualinvoke r20.<javax.ws.rs.core.Response: java.lang.Object getEntity()>();

        $r10[0] = $r11;

        virtualinvoke r3.<org.apache.cxf.jaxrs.client.JaxrsClientCallback: void handleResponse(java.util.Map,java.lang.Object[])>(r0, $r10);

        specialinvoke r4.<org.apache.cxf.jaxrs.client.WebClient: void closeAsyncResponseIfPossible(javax.ws.rs.core.Response,org.apache.cxf.message.Message,org.apache.cxf.jaxrs.client.JaxrsClientCallback)>(r20, r0, r3);

     label15:
        return;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    private void handleAsyncFault(org.apache.cxf.message.Message)
    {
        org.apache.cxf.jaxrs.client.WebClient r0;
        org.apache.cxf.message.Message r1;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: org.apache.cxf.message.Message;

        return;
    }

    private void closeAsyncResponseIfPossible(javax.ws.rs.core.Response, org.apache.cxf.message.Message, org.apache.cxf.jaxrs.client.JaxrsClientCallback)
    {
        javax.ws.rs.core.Response r4;
        org.apache.cxf.jaxrs.client.WebClient r0;
        org.apache.cxf.message.Message r1;
        java.lang.Class $r3;
        org.apache.cxf.jaxrs.client.JaxrsClientCallback r2;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r4 := @parameter0: javax.ws.rs.core.Response;

        r1 := @parameter1: org.apache.cxf.message.Message;

        r2 := @parameter2: org.apache.cxf.jaxrs.client.JaxrsClientCallback;

        $r3 = virtualinvoke r2.<org.apache.cxf.jaxrs.client.JaxrsClientCallback: java.lang.Class getResponseClass()>();

        $z0 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: boolean responseStreamCanBeClosed(org.apache.cxf.message.Message,java.lang.Class)>(r1, $r3);

        if $z0 == 0 goto label1;

        virtualinvoke r4.<javax.ws.rs.core.Response: void close()>();

     label1:
        return;
    }

    protected java.lang.Object retryInvoke(java.net.URI, javax.ws.rs.core.MultivaluedMap, java.lang.Object, org.apache.cxf.message.Exchange, java.util.Map) throws java.lang.Throwable
    {
        java.util.Map r0, $r2, $r3;
        java.lang.String r5;
        java.net.URI r19;
        org.apache.cxf.jaxrs.client.WebClient r14;
        org.apache.cxf.message.Exchange r17;
        javax.ws.rs.core.MultivaluedMap r15;
        javax.ws.rs.core.Response $r18;
        java.lang.reflect.Type r9, r13;
        java.lang.Object $r1, $r4, $r6, $r8, $r10, $r12, r16;
        java.lang.Class r7, r11;

        r14 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r19 := @parameter0: java.net.URI;

        r15 := @parameter1: javax.ws.rs.core.MultivaluedMap;

        r16 := @parameter2: java.lang.Object;

        r17 := @parameter3: org.apache.cxf.message.Exchange;

        r0 := @parameter4: java.util.Map;

        $r1 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("RequestContext");

        $r2 = (java.util.Map) $r1;

        $r3 = staticinvoke <org.apache.cxf.helpers.CastUtils: java.util.Map cast(java.util.Map)>($r2);

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("org.apache.cxf.request.method");

        r5 = (java.lang.String) $r4;

        $r6 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("request.class");

        r7 = (java.lang.Class) $r6;

        $r8 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("request.type");

        r9 = (java.lang.reflect.Type) $r8;

        $r10 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("response.class");

        r11 = (java.lang.Class) $r10;

        $r12 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("response.type");

        r13 = (java.lang.reflect.Type) $r12;

        $r18 = virtualinvoke r14.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.Response doChainedInvocation(java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Exchange,java.util.Map)>(r5, r15, r16, r7, r9, r11, r13, r17, r0);

        return $r18;
    }

    protected javax.ws.rs.core.Response doChainedInvocation(java.lang.String, javax.ws.rs.core.MultivaluedMap, java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.Class, java.lang.reflect.Type, org.apache.cxf.message.Exchange, java.util.Map)
    {
        org.apache.cxf.jaxrs.client.WebClient r0;
        org.apache.cxf.message.Message $r10;
        org.apache.cxf.message.Exchange r8;
        javax.ws.rs.core.MultivaluedMap r2;
        javax.ws.rs.core.Response $r11;
        java.lang.reflect.Type r5, r7;
        java.util.Map r9;
        java.lang.Object r3;
        java.lang.Class r4, r6;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.ws.rs.core.MultivaluedMap;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Class;

        r5 := @parameter4: java.lang.reflect.Type;

        r6 := @parameter5: java.lang.Class;

        r7 := @parameter6: java.lang.reflect.Type;

        r8 := @parameter7: org.apache.cxf.message.Exchange;

        r9 := @parameter8: java.util.Map;

        $r10 = specialinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.message.Message finalizeMessage(java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Exchange,java.util.Map)>(r1, r2, r3, r4, r5, r6, r7, r8, r9);

        virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: void doRunInterceptorChain(org.apache.cxf.message.Message)>($r10);

        $r11 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.Response doResponse(org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type)>($r10, r6, r7);

        return $r11;
    }

    private org.apache.cxf.message.Message finalizeMessage(java.lang.String, javax.ws.rs.core.MultivaluedMap, java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.Class, java.lang.reflect.Type, org.apache.cxf.message.Exchange, java.util.Map)
    {
        org.apache.cxf.jaxrs.client.WebClient$BodyWriter $r20;
        org.apache.cxf.interceptor.InterceptorChain $r19;
        java.util.Map r6, $r8;
        java.net.URI $r1;
        java.lang.String r3, $r16, $r18;
        org.apache.cxf.jaxrs.client.WebClient r0;
        org.apache.cxf.message.Message $r7;
        org.apache.cxf.message.Exchange r5;
        javax.ws.rs.core.MultivaluedMap r4;
        java.lang.reflect.Type r10, r12;
        java.lang.Object r2;
        java.lang.Class r9, r11;
        java.lang.StringBuilder $r13, $r14, $r15, $r17;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: javax.ws.rs.core.MultivaluedMap;

        r2 := @parameter2: java.lang.Object;

        r9 := @parameter3: java.lang.Class;

        r10 := @parameter4: java.lang.reflect.Type;

        r11 := @parameter5: java.lang.Class;

        r12 := @parameter6: java.lang.reflect.Type;

        r5 := @parameter7: org.apache.cxf.message.Exchange;

        r6 := @parameter8: java.util.Map;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: java.net.URI getCurrentURI()>();

        $r7 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.message.Message createMessage(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.net.URI,org.apache.cxf.message.Exchange,java.util.Map,boolean)>(r2, r3, r4, $r1, r5, r6, 0);

        $r8 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: java.util.Map getRequestContext(org.apache.cxf.message.Message)>($r7);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.cxf.request.method", r3);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("request.class", r9);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("request.type", r10);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("response.class", r11);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("response.type", r12);

        if r2 == null goto label1;

        $r19 = interfaceinvoke $r7.<org.apache.cxf.message.Message: org.apache.cxf.interceptor.InterceptorChain getInterceptorChain()>();

        $r20 = new org.apache.cxf.jaxrs.client.WebClient$BodyWriter;

        specialinvoke $r20.<org.apache.cxf.jaxrs.client.WebClient$BodyWriter: void <init>(org.apache.cxf.jaxrs.client.WebClient,org.apache.cxf.jaxrs.client.WebClient$1)>(r0, null);

        interfaceinvoke $r19.<org.apache.cxf.interceptor.InterceptorChain: void add(org.apache.cxf.interceptor.Interceptor)>($r20);

     label1:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r16 = virtualinvoke $r1.<java.net.URI: java.lang.String toString()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: void setPlainOperationNameProperty(org.apache.cxf.message.Message,java.lang.String)>($r7, $r18);

        return $r7;
    }

    protected javax.ws.rs.core.Response doResponse(org.apache.cxf.message.Message, java.lang.Class, java.lang.reflect.Type)
    {
        java.lang.Throwable $r10;
        java.lang.Object[] $r2;
        int $i0;
        boolean $z0, $z1;
        org.apache.cxf.jaxrs.client.WebClient r0;
        org.apache.cxf.message.Message r1;
        java.lang.RuntimeException $r12, $r14, $r17;
        javax.ws.rs.client.ClientException $r16;
        org.apache.cxf.message.Exchange $r7, $r11;
        java.lang.Exception $r13;
        javax.ws.rs.core.Response $r5, $r9;
        java.lang.reflect.Type r4;
        java.lang.Class r3;
        java.lang.Object $r6, $r8, r15;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: org.apache.cxf.message.Message;

        r3 := @parameter1: java.lang.Class;

        r4 := @parameter2: java.lang.reflect.Type;

     label01:
        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: java.lang.Object[] preProcessResult(org.apache.cxf.message.Message)>(r1);

        if $r2 == null goto label03;

        $i0 = lengthof $r2;

        if $i0 != 1 goto label03;

        $r8 = $r2[0];

        $r9 = (javax.ws.rs.core.Response) $r8;

     label02:
        return $r9;

     label03:
        goto label08;

     label04:
        $r13 := @caughtexception;

        $z0 = $r13 instanceof javax.ws.rs.WebApplicationException;

        if $z0 == 0 goto label05;

        $r14 = (javax.ws.rs.WebApplicationException) $r13;

        goto label07;

     label05:
        $z1 = $r13 instanceof javax.ws.rs.client.ClientException;

        if $z1 == 0 goto label06;

        $r16 = new javax.ws.rs.client.ClientException;

        $r14 = $r16;

        specialinvoke $r16.<javax.ws.rs.client.ClientException: void <init>(java.lang.Throwable)>($r13);

        goto label07;

     label06:
        $r17 = new java.lang.RuntimeException;

        $r14 = $r17;

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r13);

     label07:
        throw $r14;

     label08:
        r15 = null;

     label09:
        $r5 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.Response handleResponse(org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type)>(r1, r3, r4);

        $r6 = virtualinvoke $r5.<javax.ws.rs.core.Response: java.lang.Object getEntity()>();

        r15 = $r6;

     label10:
        $r7 = interfaceinvoke r1.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: void completeExchange(java.lang.Object,org.apache.cxf.message.Exchange,boolean)>($r6, $r7, 0);

        return $r5;

     label11:
        $r12 := @caughtexception;

        r15 = $r12;

        throw $r12;

     label12:
        $r10 := @caughtexception;

     label13:
        $r11 = interfaceinvoke r1.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: void completeExchange(java.lang.Object,org.apache.cxf.message.Exchange,boolean)>(r15, $r11, 0);

        throw $r10;

        catch java.lang.Exception from label01 to label02 with label04;
        catch java.lang.RuntimeException from label09 to label10 with label11;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label11 to label13 with label12;
    }

    protected javax.ws.rs.core.Response handleResponse(org.apache.cxf.message.Message, java.lang.Class, java.lang.reflect.Type)
    {
        java.lang.Throwable $r15, $r17;
        java.lang.'annotation'.Annotation[] $r8;
        org.apache.cxf.jaxrs.provider.ProviderFactory $r13, $r16;
        org.apache.cxf.jaxrs.client.ClientState $r12;
        int $i0;
        boolean $z0, $z1;
        org.apache.cxf.jaxrs.client.WebClient r0;
        org.apache.cxf.message.Message r1;
        javax.ws.rs.client.ClientException $r21;
        org.apache.cxf.message.Exchange $r2;
        javax.ws.rs.core.Response $r5, $r10, $r14;
        java.lang.reflect.Type r7;
        javax.ws.rs.core.Response$ResponseBuilder $r3, $r4, $r19;
        java.lang.Class r6;
        java.lang.Object $r9, r18, $r20;
        org.apache.cxf.jaxrs.impl.ResponseImpl $r11;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: org.apache.cxf.message.Message;

        r6 := @parameter1: java.lang.Class;

        r7 := @parameter2: java.lang.reflect.Type;

     label01:
        $r2 = interfaceinvoke r1.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: javax.ws.rs.core.Response$ResponseBuilder setResponseBuilder(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange)>(r1, $r2);

        $r4 = virtualinvoke $r3.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder clone()>();

        $r5 = virtualinvoke $r4.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>();

        $r8 = newarray (java.lang.'annotation'.Annotation)[0];

        $r9 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])>($r5, r1, r6, r7, $r8);

        r18 = $r9;

        if $r9 != null goto label02;

        $i0 = virtualinvoke $r5.<javax.ws.rs.core.Response: int getStatus()>();

        if $i0 < 400 goto label02;

        r18 = virtualinvoke $r5.<javax.ws.rs.core.Response: java.lang.Object getEntity()>();

     label02:
        $r19 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.Response$ResponseBuilder fromResponse(javax.ws.rs.core.Response)>($r5);

        $z1 = r18 instanceof javax.ws.rs.core.Response;

        if $z1 == 0 goto label03;

        $r14 = (javax.ws.rs.core.Response) r18;

        $r20 = virtualinvoke $r14.<javax.ws.rs.core.Response: java.lang.Object getEntity()>();

        goto label04;

     label03:
        $r20 = r18;

     label04:
        virtualinvoke $r19.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder entity(java.lang.Object)>($r20);

        $r10 = virtualinvoke $r19.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>();

        $r11 = (org.apache.cxf.jaxrs.impl.ResponseImpl) $r10;

        virtualinvoke $r11.<org.apache.cxf.jaxrs.impl.ResponseImpl: void setMessage(org.apache.cxf.message.Message)>(r1);

        $r12 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.ClientState getState()>();

        interfaceinvoke $r12.<org.apache.cxf.jaxrs.client.ClientState: void setResponse(javax.ws.rs.core.Response)>($r10);

     label05:
        $r13 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.message.Message)>(r1);

        virtualinvoke $r13.<org.apache.cxf.jaxrs.provider.ProviderFactory: void clearThreadLocalProxies()>();

        return $r10;

     label06:
        $r17 := @caughtexception;

        $z0 = $r17 instanceof javax.ws.rs.client.ClientException;

        if $z0 == 0 goto label07;

        $r21 = (javax.ws.rs.client.ClientException) $r17;

        goto label08;

     label07:
        $r21 = new javax.ws.rs.client.ClientException;

        specialinvoke $r21.<javax.ws.rs.client.ClientException: void <init>(java.lang.Throwable)>($r17);

     label08:
        throw $r21;

     label09:
        $r15 := @caughtexception;

     label10:
        $r16 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.message.Message)>(r1);

        virtualinvoke $r16.<org.apache.cxf.jaxrs.provider.ProviderFactory: void clearThreadLocalProxies()>();

        throw $r15;

        catch java.lang.Throwable from label01 to label05 with label06;
        catch java.lang.Throwable from label06 to label10 with label09;
    }

    static void copyProperties(org.apache.cxf.jaxrs.client.Client, org.apache.cxf.jaxrs.client.Client)
    {
        org.apache.cxf.jaxrs.client.AbstractClient $r1, $r3;
        org.apache.cxf.jaxrs.client.Client r0, r2;
        org.apache.cxf.jaxrs.client.ClientConfiguration $r4;

        r0 := @parameter0: org.apache.cxf.jaxrs.client.Client;

        r2 := @parameter1: org.apache.cxf.jaxrs.client.Client;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.AbstractClient toAbstractClient(java.lang.Object)>(r0);

        $r3 = staticinvoke <org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.AbstractClient toAbstractClient(java.lang.Object)>(r2);

        $r4 = virtualinvoke $r3.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientConfiguration getConfiguration()>();

        virtualinvoke $r1.<org.apache.cxf.jaxrs.client.AbstractClient: void setConfiguration(org.apache.cxf.jaxrs.client.ClientConfiguration)>($r4);

        return;
    }

    private static org.apache.cxf.jaxrs.client.AbstractClient toAbstractClient(java.lang.Object)
    {
        org.apache.cxf.jaxrs.client.AbstractClient $r3, $r4;
        org.apache.cxf.jaxrs.client.InvocationHandlerAware $r1;
        java.lang.Object r0, $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.cxf.jaxrs.client.AbstractClient;

        if $z0 == 0 goto label1;

        $r4 = (org.apache.cxf.jaxrs.client.AbstractClient) r0;

        return $r4;

     label1:
        $r1 = (org.apache.cxf.jaxrs.client.InvocationHandlerAware) r0;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.jaxrs.client.InvocationHandlerAware: java.lang.Object getInvocationHandler()>();

        $r3 = (org.apache.cxf.jaxrs.client.AbstractClient) $r2;

        return $r3;
    }

    static org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean getBean(java.lang.String, java.lang.String)
    {
        org.apache.cxf.Bus $r4;
        java.lang.String r1, r2;
        org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean $r0;
        org.apache.cxf.bus.spring.SpringBusFactory $r3;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r0 = new org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean;

        specialinvoke $r0.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void <init>()>();

        if r1 == null goto label1;

        $r3 = new org.apache.cxf.bus.spring.SpringBusFactory;

        specialinvoke $r3.<org.apache.cxf.bus.spring.SpringBusFactory: void <init>()>();

        $r4 = virtualinvoke $r3.<org.apache.cxf.bus.spring.SpringBusFactory: org.apache.cxf.Bus createBus(java.lang.String)>(r1);

        virtualinvoke $r0.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setBus(org.apache.cxf.Bus)>($r4);

     label1:
        virtualinvoke $r0.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setAddress(java.lang.String)>(r2);

        return $r0;
    }

    static org.apache.cxf.jaxrs.client.ClientState getClientState(org.apache.cxf.jaxrs.client.Client)
    {
        org.apache.cxf.jaxrs.client.AbstractClient $r3, $r4;
        org.apache.cxf.jaxrs.client.InvocationHandlerAware $r1;
        org.apache.cxf.jaxrs.client.Client r0;
        org.apache.cxf.jaxrs.client.ClientState r5;
        java.lang.Object $r2;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.cxf.jaxrs.client.Client;

        r5 = null;

        $z0 = r0 instanceof org.apache.cxf.jaxrs.client.WebClient;

        if $z0 == 0 goto label1;

        $r4 = (org.apache.cxf.jaxrs.client.AbstractClient) r0;

        r5 = virtualinvoke $r4.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientState getState()>();

        goto label2;

     label1:
        $z1 = r0 instanceof org.apache.cxf.jaxrs.client.InvocationHandlerAware;

        if $z1 == 0 goto label2;

        $r1 = (org.apache.cxf.jaxrs.client.InvocationHandlerAware) r0;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.jaxrs.client.InvocationHandlerAware: java.lang.Object getInvocationHandler()>();

        $r3 = (org.apache.cxf.jaxrs.client.AbstractClient) $r2;

        r5 = virtualinvoke $r3.<org.apache.cxf.jaxrs.client.AbstractClient: org.apache.cxf.jaxrs.client.ClientState getState()>();

     label2:
        return r5;
    }

    static java.net.URI convertStringToURI(java.lang.String)
    {
        java.lang.Object[] $r5;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl $r3;
        java.lang.RuntimeException $r2;
        javax.ws.rs.core.UriBuilder $r4;
        java.lang.String r0;
        java.net.URI $r1, $r6;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("http");

        if $z0 == 0 goto label4;

        $r3 = new org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        specialinvoke $r3.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: void <init>()>();

        $r4 = virtualinvoke $r3.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.UriBuilder uriAsTemplate(java.lang.String)>(r0);

        $r5 = newarray (java.lang.Object)[0];

        $r6 = virtualinvoke $r4.<javax.ws.rs.core.UriBuilder: java.net.URI build(java.lang.Object[])>($r5);

        return $r6;

     label4:
        throw $r2;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public javax.ws.rs.client.AsyncInvoker async()
    {
        org.apache.cxf.jaxrs.client.WebClient$AsyncInvokerImpl $r0;
        org.apache.cxf.jaxrs.client.WebClient r1;

        r1 := @this: org.apache.cxf.jaxrs.client.WebClient;

        $r0 = new org.apache.cxf.jaxrs.client.WebClient$AsyncInvokerImpl;

        specialinvoke $r0.<org.apache.cxf.jaxrs.client.WebClient$AsyncInvokerImpl: void <init>(org.apache.cxf.jaxrs.client.WebClient)>(r1);

        return $r0;
    }

    public javax.ws.rs.client.SyncInvoker sync()
    {
        org.apache.cxf.jaxrs.client.WebClient$SyncInvokerImpl $r0;
        org.apache.cxf.jaxrs.client.WebClient r1;

        r1 := @this: org.apache.cxf.jaxrs.client.WebClient;

        $r0 = new org.apache.cxf.jaxrs.client.WebClient$SyncInvokerImpl;

        specialinvoke $r0.<org.apache.cxf.jaxrs.client.WebClient$SyncInvokerImpl: void <init>(org.apache.cxf.jaxrs.client.WebClient)>(r1);

        return $r0;
    }

    private void setEntityHeaders(javax.ws.rs.client.Entity)
    {
        org.apache.cxf.jaxrs.client.WebClient r0;
        javax.ws.rs.client.Entity r1;
        javax.ws.rs.core.MediaType $r2;
        java.util.Locale $r3, $r6;
        java.lang.String $r4, $r5, $r7;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: javax.ws.rs.client.Entity;

        $r2 = virtualinvoke r1.<javax.ws.rs.client.Entity: javax.ws.rs.core.MediaType getMediaType()>();

        virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.WebClient type(javax.ws.rs.core.MediaType)>($r2);

        $r3 = virtualinvoke r1.<javax.ws.rs.client.Entity: java.util.Locale getLanguage()>();

        if $r3 == null goto label1;

        $r6 = virtualinvoke r1.<javax.ws.rs.client.Entity: java.util.Locale getLanguage()>();

        $r7 = virtualinvoke $r6.<java.util.Locale: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.WebClient language(java.lang.String)>($r7);

     label1:
        $r4 = virtualinvoke r1.<javax.ws.rs.client.Entity: java.lang.String getEncoding()>();

        if $r4 == null goto label2;

        $r5 = virtualinvoke r1.<javax.ws.rs.client.Entity: java.lang.String getEncoding()>();

        virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.WebClient encoding(java.lang.String)>($r5);

     label2:
        return;
    }

    public volatile org.apache.cxf.jaxrs.client.Client reset()
    {
        org.apache.cxf.jaxrs.client.WebClient r0, $r1;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.WebClient reset()>();

        return $r1;
    }

    public volatile org.apache.cxf.jaxrs.client.Client encoding(java.lang.String)
    {
        java.lang.String r1;
        org.apache.cxf.jaxrs.client.WebClient r0, $r2;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.WebClient encoding(java.lang.String)>(r1);

        return $r2;
    }

    public volatile org.apache.cxf.jaxrs.client.Client acceptEncoding(java.lang.String[])
    {
        java.lang.String[] r1;
        org.apache.cxf.jaxrs.client.WebClient r0, $r2;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.String[];

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.WebClient acceptEncoding(java.lang.String[])>(r1);

        return $r2;
    }

    public volatile org.apache.cxf.jaxrs.client.Client acceptLanguage(java.lang.String[])
    {
        java.lang.String[] r1;
        org.apache.cxf.jaxrs.client.WebClient r0, $r2;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.String[];

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.WebClient acceptLanguage(java.lang.String[])>(r1);

        return $r2;
    }

    public volatile org.apache.cxf.jaxrs.client.Client match(javax.ws.rs.core.EntityTag, boolean)
    {
        org.apache.cxf.jaxrs.client.WebClient r0, $r2;
        javax.ws.rs.core.EntityTag r1;
        boolean z0;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: javax.ws.rs.core.EntityTag;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.WebClient match(javax.ws.rs.core.EntityTag,boolean)>(r1, z0);

        return $r2;
    }

    public volatile org.apache.cxf.jaxrs.client.Client language(java.lang.String)
    {
        java.lang.String r1;
        org.apache.cxf.jaxrs.client.WebClient r0, $r2;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.WebClient language(java.lang.String)>(r1);

        return $r2;
    }

    public volatile org.apache.cxf.jaxrs.client.Client modified(java.util.Date, boolean)
    {
        org.apache.cxf.jaxrs.client.WebClient r0, $r2;
        java.util.Date r1;
        boolean z0;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.util.Date;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.WebClient modified(java.util.Date,boolean)>(r1, z0);

        return $r2;
    }

    public volatile org.apache.cxf.jaxrs.client.Client cookie(javax.ws.rs.core.Cookie)
    {
        org.apache.cxf.jaxrs.client.WebClient r0, $r2;
        javax.ws.rs.core.Cookie r1;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: javax.ws.rs.core.Cookie;

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.WebClient cookie(javax.ws.rs.core.Cookie)>(r1);

        return $r2;
    }

    public volatile org.apache.cxf.jaxrs.client.Client accept(java.lang.String[])
    {
        java.lang.String[] r1;
        org.apache.cxf.jaxrs.client.WebClient r0, $r2;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.String[];

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.WebClient accept(java.lang.String[])>(r1);

        return $r2;
    }

    public volatile org.apache.cxf.jaxrs.client.Client type(java.lang.String)
    {
        java.lang.String r1;
        org.apache.cxf.jaxrs.client.WebClient r0, $r2;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.WebClient type(java.lang.String)>(r1);

        return $r2;
    }

    public volatile org.apache.cxf.jaxrs.client.Client type(javax.ws.rs.core.MediaType)
    {
        javax.ws.rs.core.MediaType r1;
        org.apache.cxf.jaxrs.client.WebClient r0, $r2;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: javax.ws.rs.core.MediaType;

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.WebClient type(javax.ws.rs.core.MediaType)>(r1);

        return $r2;
    }

    public volatile org.apache.cxf.jaxrs.client.Client accept(javax.ws.rs.core.MediaType[])
    {
        javax.ws.rs.core.MediaType[] r1;
        org.apache.cxf.jaxrs.client.WebClient r0, $r2;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: javax.ws.rs.core.MediaType[];

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.WebClient accept(javax.ws.rs.core.MediaType[])>(r1);

        return $r2;
    }

    public volatile org.apache.cxf.jaxrs.client.Client headers(javax.ws.rs.core.MultivaluedMap)
    {
        javax.ws.rs.core.MultivaluedMap r1;
        org.apache.cxf.jaxrs.client.WebClient r0, $r2;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: javax.ws.rs.core.MultivaluedMap;

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.WebClient headers(javax.ws.rs.core.MultivaluedMap)>(r1);

        return $r2;
    }

    public volatile org.apache.cxf.jaxrs.client.Client header(java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r2;
        org.apache.cxf.jaxrs.client.WebClient r0, $r3;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.WebClient header(java.lang.String,java.lang.Object[])>(r1, r2);

        return $r3;
    }

    static void access$100(org.apache.cxf.jaxrs.client.WebClient, org.apache.cxf.message.Message)
    {
        org.apache.cxf.jaxrs.client.WebClient r0;
        org.apache.cxf.message.Message r1;

        r0 := @parameter0: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter1: org.apache.cxf.message.Message;

        specialinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: void handleAsyncResponse(org.apache.cxf.message.Message)>(r1);

        return;
    }

    static void access$200(org.apache.cxf.jaxrs.client.WebClient, org.apache.cxf.message.Message)
    {
        org.apache.cxf.jaxrs.client.WebClient r0;
        org.apache.cxf.message.Message r1;

        r0 := @parameter0: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter1: org.apache.cxf.message.Message;

        specialinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: void handleAsyncFault(org.apache.cxf.message.Message)>(r1);

        return;
    }

    static void access$300(org.apache.cxf.jaxrs.client.WebClient, javax.ws.rs.client.Entity)
    {
        javax.ws.rs.client.Entity r1;
        org.apache.cxf.jaxrs.client.WebClient r0;

        r0 := @parameter0: org.apache.cxf.jaxrs.client.WebClient;

        r1 := @parameter1: javax.ws.rs.client.Entity;

        specialinvoke r0.<org.apache.cxf.jaxrs.client.WebClient: void setEntityHeaders(javax.ws.rs.client.Entity)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.cxf.jaxrs.client.WebClient: java.lang.String RESPONSE_TYPE> = "response.type";

        <org.apache.cxf.jaxrs.client.WebClient: java.lang.String RESPONSE_CLASS> = "response.class";

        <org.apache.cxf.jaxrs.client.WebClient: java.lang.String REQUEST_TYPE> = "request.type";

        <org.apache.cxf.jaxrs.client.WebClient: java.lang.String REQUEST_CLASS> = "request.class";

        return;
    }
}
