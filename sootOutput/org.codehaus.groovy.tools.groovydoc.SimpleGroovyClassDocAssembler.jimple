public class org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler extends org.codehaus.groovy.antlr.treewalker.VisitorAdapter
{
    private java.util.Stack stack;
    private java.util.Map classDocs;
    private org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc currentClassDoc;
    private org.codehaus.groovy.tools.groovydoc.SimpleGroovyConstructorDoc currentConstructorDoc;
    private org.codehaus.groovy.tools.groovydoc.SimpleGroovyMethodDoc currentMethodDoc;
    private org.codehaus.groovy.antlr.SourceBuffer sourceBuffer;
    private java.lang.String packagePath;
    private java.util.regex.Pattern previousJavaDocCommentPattern;
    private static final java.lang.String FS;
    private java.util.List importedClassesAndPackages;
    private java.util.List links;

    public void <init>(java.lang.String, java.lang.String, org.codehaus.groovy.antlr.SourceBuffer, java.util.List)
    {
        java.util.HashMap $r5;
        java.util.Stack $r4;
        java.util.ArrayList $r7;
        java.lang.StringBuffer $r8, $r10, $r11, $r17, $r19, $r20, $r21;
        java.util.Map $r24;
        int $i0;
        java.lang.String r2, r6, $r12, $r22, $r25, r28;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc $r15, $r18, $r23, $r26;
        org.codehaus.groovy.antlr.SourceBuffer r1;
        java.util.List r3, $r9, $r13, $r14, $r16;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler r0;
        java.util.regex.Pattern $r27;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler;

        r2 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        r1 := @parameter2: org.codehaus.groovy.antlr.SourceBuffer;

        r3 := @parameter3: java.util.List;

        specialinvoke r0.<org.codehaus.groovy.antlr.treewalker.VisitorAdapter: void <init>()>();

        r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: org.codehaus.groovy.antlr.SourceBuffer sourceBuffer> = r1;

        r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.lang.String packagePath> = r2;

        r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.util.List links> = r3;

        $r4 = new java.util.Stack;

        specialinvoke $r4.<java.util.Stack: void <init>()>();

        r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.util.Stack stack> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.util.Map classDocs> = $r5;

        r28 = r6;

        if r6 == null goto label1;

        $i0 = virtualinvoke r6.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

        r28 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label1:
        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.util.List importedClassesAndPackages> = $r7;

        $r9 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.util.List importedClassesAndPackages>;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/*");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r13 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.util.List importedClassesAndPackages>;

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>("groovy/lang/*");

        $r14 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.util.List importedClassesAndPackages>;

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>("groovy/util/*");

        $r15 = new org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        $r16 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.util.List importedClassesAndPackages>;

        specialinvoke $r15.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: void <init>(java.util.List,java.lang.String,java.util.List)>($r16, r28, r3);

        r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc currentClassDoc> = $r15;

        $r18 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc currentClassDoc>;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r28);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r18.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: void setFullPathName(java.lang.String)>($r22);

        $r24 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.util.Map classDocs>;

        $r23 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc currentClassDoc>;

        $r25 = virtualinvoke $r23.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: java.lang.String getFullPathName()>();

        $r26 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc currentClassDoc>;

        interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r25, $r26);

        $r27 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(?s)/\\*\\*(.*?)\\*/");

        r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.util.regex.Pattern previousJavaDocCommentPattern> = $r27;

        return;
    }

    public java.util.Map getGroovyClassDocs()
    {
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler r0;
        java.util.Map $r1;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler;

        specialinvoke r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: void postProcessClassDocs()>();

        $r1 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.util.Map classDocs>;

        return $r1;
    }

    private void postProcessClassDocs()
    {
        java.util.Iterator $r3;
        java.util.Collection $r2;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc r5;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyConstructorDoc $r7;
        org.codehaus.groovy.groovydoc.GroovyConstructorDoc[] $r6;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler r0;
        java.util.Map $r1;
        int $i0;
        java.lang.Object $r4;
        java.lang.String $r8;
        boolean $z0, $z1;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler;

        $r1 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.util.Map classDocs>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc) $r4;

        $z1 = virtualinvoke r5.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: boolean isClass()>();

        if $z1 == 0 goto label2;

        $r6 = virtualinvoke r5.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: org.codehaus.groovy.groovydoc.GroovyConstructorDoc[] constructors()>();

        if $r6 == null goto label2;

        $i0 = lengthof $r6;

        if $i0 != 0 goto label2;

        $r7 = new org.codehaus.groovy.tools.groovydoc.SimpleGroovyConstructorDoc;

        $r8 = virtualinvoke r5.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: java.lang.String name()>();

        specialinvoke $r7.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyConstructorDoc: void <init>(java.lang.String)>($r8);

        virtualinvoke r5.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: boolean add(org.codehaus.groovy.groovydoc.GroovyConstructorDoc)>($r7);

     label2:
        goto label1;

     label3:
        return;
    }

    public void visitInterfaceDef(org.codehaus.groovy.antlr.GroovySourceAST, int)
    {
        org.codehaus.groovy.antlr.GroovySourceAST r2;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler r0;
        int i0;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc $r1;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler;

        r2 := @parameter0: org.codehaus.groovy.antlr.GroovySourceAST;

        i0 := @parameter1: int;

        $r1 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc currentClassDoc>;

        virtualinvoke $r1.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: void setAsInterfaceDefinition()>();

        return;
    }

    public void visitImport(org.codehaus.groovy.antlr.GroovySourceAST, int)
    {
        org.codehaus.groovy.antlr.GroovySourceAST r0, $r1, r5;
        java.util.List $r4;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler r2;
        int i0;
        java.lang.String $r3;

        r2 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler;

        r0 := @parameter0: org.codehaus.groovy.antlr.GroovySourceAST;

        i0 := @parameter1: int;

        if i0 != 1 goto label2;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.antlr.GroovySourceAST: org.codehaus.groovy.antlr.GroovySourceAST childOfType(int)>(87);

        r5 = $r1;

        if $r1 != null goto label1;

        r5 = virtualinvoke r0.<org.codehaus.groovy.antlr.GroovySourceAST: org.codehaus.groovy.antlr.GroovySourceAST childOfType(int)>(84);

     label1:
        $r3 = virtualinvoke r2.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.lang.String recurseDownImportBranch(org.codehaus.groovy.antlr.GroovySourceAST)>(r5);

        $r4 = r2.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.util.List importedClassesAndPackages>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r3);

     label2:
        return;
    }

    public java.lang.String recurseDownImportBranch(org.codehaus.groovy.antlr.GroovySourceAST)
    {
        java.lang.StringBuffer $r7, $r10, $r11, $r13;
        int $i0, $i1, $i2;
        java.lang.String $r1, $r2, $r9, $r12, $r14;
        org.codehaus.groovy.antlr.GroovySourceAST r0, r4, r6;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler r8;
        groovyjarjarantlr.collections.AST $r3, $r5;

        r8 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler;

        r0 := @parameter0: org.codehaus.groovy.antlr.GroovySourceAST;

        if r0 == null goto label3;

        $i0 = virtualinvoke r0.<org.codehaus.groovy.antlr.GroovySourceAST: int getType()>();

        if $i0 != 87 goto label1;

        $r3 = virtualinvoke r0.<org.codehaus.groovy.antlr.GroovySourceAST: groovyjarjarantlr.collections.AST getFirstChild()>();

        r4 = (org.codehaus.groovy.antlr.GroovySourceAST) $r3;

        $r5 = virtualinvoke r4.<org.codehaus.groovy.antlr.GroovySourceAST: groovyjarjarantlr.collections.AST getNextSibling()>();

        r6 = (org.codehaus.groovy.antlr.GroovySourceAST) $r5;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke r8.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.lang.String recurseDownImportBranch(org.codehaus.groovy.antlr.GroovySourceAST)>(r4);

        $r10 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r12 = virtualinvoke r8.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.lang.String recurseDownImportBranch(org.codehaus.groovy.antlr.GroovySourceAST)>(r6);

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r14;

     label1:
        $i1 = virtualinvoke r0.<org.codehaus.groovy.antlr.GroovySourceAST: int getType()>();

        if $i1 != 84 goto label2;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.GroovySourceAST: java.lang.String getText()>();

        return $r2;

     label2:
        $i2 = virtualinvoke r0.<org.codehaus.groovy.antlr.GroovySourceAST: int getType()>();

        if $i2 != 109 goto label3;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.antlr.GroovySourceAST: java.lang.String getText()>();

        return $r1;

     label3:
        return "";
    }

    public void visitExtendsClause(org.codehaus.groovy.antlr.GroovySourceAST, int)
    {
        org.codehaus.groovy.antlr.GroovySourceAST r0, $r1;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler r3;
        int i0;
        java.lang.String $r2;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc $r4;

        r3 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler;

        r0 := @parameter0: org.codehaus.groovy.antlr.GroovySourceAST;

        i0 := @parameter1: int;

        if i0 != 1 goto label1;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.antlr.GroovySourceAST: org.codehaus.groovy.antlr.GroovySourceAST childOfType(int)>(84);

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<org.codehaus.groovy.antlr.GroovySourceAST: java.lang.String getText()>();

        $r4 = r3.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc currentClassDoc>;

        virtualinvoke $r4.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: void setSuperClassName(java.lang.String)>($r2);

     label1:
        return;
    }

    public void visitClassDef(org.codehaus.groovy.antlr.GroovySourceAST, int)
    {
        java.util.Map $r5, $r26;
        org.codehaus.groovy.antlr.GroovySourceAST r0, $r1;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc $r12, $r13, $r15, $r17, $r21, $r25, $r28, $r29;
        java.util.List $r30, $r31;
        java.lang.StringBuffer $r4, $r7, $r8, $r9, $r16, $r19, $r20, $r23;
        int i0;
        java.lang.String $r2, $r6, $r10, $r14, $r18, $r22, $r24, $r27;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler r3;
        java.lang.Object $r11;

        r3 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler;

        r0 := @parameter0: org.codehaus.groovy.antlr.GroovySourceAST;

        i0 := @parameter1: int;

        if i0 != 1 goto label2;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.antlr.GroovySourceAST: org.codehaus.groovy.antlr.GroovySourceAST childOfType(int)>(84);

        $r2 = virtualinvoke $r1.<org.codehaus.groovy.antlr.GroovySourceAST: java.lang.String getText()>();

        $r5 = r3.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.util.Map classDocs>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r6 = r3.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.lang.String packagePath>;

        $r7 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        $r11 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        $r12 = (org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc) $r11;

        r3.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc currentClassDoc> = $r12;

        $r13 = r3.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc currentClassDoc>;

        if $r13 != null goto label1;

        $r29 = new org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc;

        $r31 = r3.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.util.List importedClassesAndPackages>;

        $r30 = r3.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.util.List importedClassesAndPackages>;

        specialinvoke $r29.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: void <init>(java.util.List,java.lang.String,java.util.List)>($r31, $r2, $r30);

        r3.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc currentClassDoc> = $r29;

     label1:
        $r14 = specialinvoke r3.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.lang.String getJavaDocCommentsBeforeNode(org.codehaus.groovy.antlr.GroovySourceAST)>(r0);

        $r15 = r3.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc currentClassDoc>;

        virtualinvoke $r15.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: void setRawCommentText(java.lang.String)>($r14);

        $r17 = r3.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc currentClassDoc>;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r18 = r3.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.lang.String packagePath>;

        $r19 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r21 = r3.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc currentClassDoc>;

        $r22 = virtualinvoke $r21.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: java.lang.String name()>();

        $r23 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r17.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: void setFullPathName(java.lang.String)>($r24);

        $r26 = r3.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.util.Map classDocs>;

        $r25 = r3.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc currentClassDoc>;

        $r27 = virtualinvoke $r25.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: java.lang.String getFullPathName()>();

        $r28 = r3.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc currentClassDoc>;

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, $r28);

     label2:
        return;
    }

    public void visitCtorIdent(org.codehaus.groovy.antlr.GroovySourceAST, int)
    {
        org.codehaus.groovy.antlr.GroovySourceAST r4;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc $r2, $r10;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyConstructorDoc $r1, $r6, $r7, $r8, $r9;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler r0;
        int i0;
        java.lang.String $r3, $r5;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler;

        r4 := @parameter0: org.codehaus.groovy.antlr.GroovySourceAST;

        i0 := @parameter1: int;

        if i0 != 1 goto label1;

        $z0 = specialinvoke r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: boolean insideAnonymousInnerClass()>();

        if $z0 != 0 goto label1;

        $r1 = new org.codehaus.groovy.tools.groovydoc.SimpleGroovyConstructorDoc;

        $r2 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc currentClassDoc>;

        $r3 = virtualinvoke $r2.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: java.lang.String name()>();

        specialinvoke $r1.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyConstructorDoc: void <init>(java.lang.String)>($r3);

        r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: org.codehaus.groovy.tools.groovydoc.SimpleGroovyConstructorDoc currentConstructorDoc> = $r1;

        $r5 = specialinvoke r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.lang.String getJavaDocCommentsBeforeNode(org.codehaus.groovy.antlr.GroovySourceAST)>(r4);

        $r6 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: org.codehaus.groovy.tools.groovydoc.SimpleGroovyConstructorDoc currentConstructorDoc>;

        virtualinvoke $r6.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyConstructorDoc: void setRawCommentText(java.lang.String)>($r5);

        $r7 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: org.codehaus.groovy.tools.groovydoc.SimpleGroovyConstructorDoc currentConstructorDoc>;

        specialinvoke r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: void processModifiers(org.codehaus.groovy.antlr.GroovySourceAST,org.codehaus.groovy.tools.groovydoc.SimpleGroovyProgramElementDoc)>(r4, $r7);

        $r8 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: org.codehaus.groovy.tools.groovydoc.SimpleGroovyConstructorDoc currentConstructorDoc>;

        specialinvoke r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: void addParametersTo(org.codehaus.groovy.tools.groovydoc.SimpleGroovyExecutableMemberDoc,org.codehaus.groovy.antlr.GroovySourceAST,int)>($r8, r4, i0);

        $r10 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc currentClassDoc>;

        $r9 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: org.codehaus.groovy.tools.groovydoc.SimpleGroovyConstructorDoc currentConstructorDoc>;

        virtualinvoke $r10.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: boolean add(org.codehaus.groovy.groovydoc.GroovyConstructorDoc)>($r9);

     label1:
        return;
    }

    public void visitMethodDef(org.codehaus.groovy.antlr.GroovySourceAST, int)
    {
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyMethodDoc $r4, $r7, $r8, $r12, $r13, $r14;
        int i0;
        java.lang.String $r3, $r6, $r10;
        boolean $z0;
        org.codehaus.groovy.antlr.GroovySourceAST r1, $r2, $r9;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc $r15;
        java.util.List $r5;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyType $r11;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler;

        r1 := @parameter0: org.codehaus.groovy.antlr.GroovySourceAST;

        i0 := @parameter1: int;

        if i0 != 1 goto label1;

        $z0 = specialinvoke r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: boolean insideAnonymousInnerClass()>();

        if $z0 != 0 goto label1;

        $r2 = virtualinvoke r1.<org.codehaus.groovy.antlr.GroovySourceAST: org.codehaus.groovy.antlr.GroovySourceAST childOfType(int)>(84);

        $r3 = virtualinvoke $r2.<org.codehaus.groovy.antlr.GroovySourceAST: java.lang.String getText()>();

        $r4 = new org.codehaus.groovy.tools.groovydoc.SimpleGroovyMethodDoc;

        $r5 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.util.List links>;

        specialinvoke $r4.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyMethodDoc: void <init>(java.lang.String,java.util.List)>($r3, $r5);

        r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: org.codehaus.groovy.tools.groovydoc.SimpleGroovyMethodDoc currentMethodDoc> = $r4;

        $r6 = specialinvoke r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.lang.String getJavaDocCommentsBeforeNode(org.codehaus.groovy.antlr.GroovySourceAST)>(r1);

        $r7 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: org.codehaus.groovy.tools.groovydoc.SimpleGroovyMethodDoc currentMethodDoc>;

        virtualinvoke $r7.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyMethodDoc: void setRawCommentText(java.lang.String)>($r6);

        $r8 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: org.codehaus.groovy.tools.groovydoc.SimpleGroovyMethodDoc currentMethodDoc>;

        specialinvoke r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: void processModifiers(org.codehaus.groovy.antlr.GroovySourceAST,org.codehaus.groovy.tools.groovydoc.SimpleGroovyProgramElementDoc)>(r1, $r8);

        $r9 = virtualinvoke r1.<org.codehaus.groovy.antlr.GroovySourceAST: org.codehaus.groovy.antlr.GroovySourceAST childOfType(int)>(12);

        $r10 = specialinvoke r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.lang.String getTypeNodeAsText(org.codehaus.groovy.antlr.GroovySourceAST,java.lang.String)>($r9, "def");

        $r11 = new org.codehaus.groovy.tools.groovydoc.SimpleGroovyType;

        specialinvoke $r11.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyType: void <init>(java.lang.String)>($r10);

        $r12 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: org.codehaus.groovy.tools.groovydoc.SimpleGroovyMethodDoc currentMethodDoc>;

        virtualinvoke $r12.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyMethodDoc: void setReturnType(org.codehaus.groovy.groovydoc.GroovyType)>($r11);

        $r13 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: org.codehaus.groovy.tools.groovydoc.SimpleGroovyMethodDoc currentMethodDoc>;

        specialinvoke r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: void addParametersTo(org.codehaus.groovy.tools.groovydoc.SimpleGroovyExecutableMemberDoc,org.codehaus.groovy.antlr.GroovySourceAST,int)>($r13, r1, i0);

        $r15 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc currentClassDoc>;

        $r14 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: org.codehaus.groovy.tools.groovydoc.SimpleGroovyMethodDoc currentMethodDoc>;

        virtualinvoke $r15.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: boolean add(org.codehaus.groovy.groovydoc.GroovyMethodDoc)>($r14);

     label1:
        return;
    }

    public void visitVariableDef(org.codehaus.groovy.antlr.GroovySourceAST, int)
    {
        org.codehaus.groovy.antlr.GroovySourceAST $r1, r2, $r3, $r7;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyFieldDoc $r5;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc $r10;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyType $r9;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler r0;
        int i0, $i1;
        java.lang.String $r4, $r6, $r8;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler;

        r2 := @parameter0: org.codehaus.groovy.antlr.GroovySourceAST;

        i0 := @parameter1: int;

        if i0 != 1 goto label1;

        $z0 = specialinvoke r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: boolean insideAnonymousInnerClass()>();

        if $z0 != 0 goto label1;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: org.codehaus.groovy.antlr.GroovySourceAST getParentNode()>();

        if $r1 == null goto label1;

        $i1 = virtualinvoke $r1.<org.codehaus.groovy.antlr.GroovySourceAST: int getType()>();

        if $i1 != 6 goto label1;

        $r3 = virtualinvoke r2.<org.codehaus.groovy.antlr.GroovySourceAST: org.codehaus.groovy.antlr.GroovySourceAST childOfType(int)>(84);

        $r4 = virtualinvoke $r3.<org.codehaus.groovy.antlr.GroovySourceAST: java.lang.String getText()>();

        $r5 = new org.codehaus.groovy.tools.groovydoc.SimpleGroovyFieldDoc;

        specialinvoke $r5.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyFieldDoc: void <init>(java.lang.String)>($r4);

        $r6 = specialinvoke r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.lang.String getJavaDocCommentsBeforeNode(org.codehaus.groovy.antlr.GroovySourceAST)>(r2);

        virtualinvoke $r5.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyFieldDoc: void setRawCommentText(java.lang.String)>($r6);

        specialinvoke r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: void processModifiers(org.codehaus.groovy.antlr.GroovySourceAST,org.codehaus.groovy.tools.groovydoc.SimpleGroovyProgramElementDoc)>(r2, $r5);

        $r7 = virtualinvoke r2.<org.codehaus.groovy.antlr.GroovySourceAST: org.codehaus.groovy.antlr.GroovySourceAST childOfType(int)>(12);

        $r8 = specialinvoke r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.lang.String getTypeNodeAsText(org.codehaus.groovy.antlr.GroovySourceAST,java.lang.String)>($r7, "def");

        $r9 = new org.codehaus.groovy.tools.groovydoc.SimpleGroovyType;

        specialinvoke $r9.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyType: void <init>(java.lang.String)>($r8);

        virtualinvoke $r5.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyFieldDoc: void setType(org.codehaus.groovy.tools.groovydoc.SimpleGroovyType)>($r9);

        $r10 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc currentClassDoc>;

        virtualinvoke $r10.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDoc: boolean add(org.codehaus.groovy.groovydoc.GroovyFieldDoc)>($r5);

     label1:
        return;
    }

    private boolean insideAnonymousInnerClass()
    {
        int $i0;
        org.codehaus.groovy.antlr.GroovySourceAST $r1;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: org.codehaus.groovy.antlr.GroovySourceAST getGrandParentNode()>();

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<org.codehaus.groovy.antlr.GroovySourceAST: int getType()>();

        if $i0 != 190 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void processModifiers(org.codehaus.groovy.antlr.GroovySourceAST, org.codehaus.groovy.tools.groovydoc.SimpleGroovyProgramElementDoc)
    {
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyProgramElementDoc r2;
        org.codehaus.groovy.antlr.GroovySourceAST r0, $r1;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler r3;
        int $i0;
        groovyjarjarantlr.collections.AST r4;
        boolean z0;

        r3 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler;

        r0 := @parameter0: org.codehaus.groovy.antlr.GroovySourceAST;

        r2 := @parameter1: org.codehaus.groovy.tools.groovydoc.SimpleGroovyProgramElementDoc;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.antlr.GroovySourceAST: org.codehaus.groovy.antlr.GroovySourceAST childOfType(int)>(5);

        if $r1 == null goto label6;

        r4 = virtualinvoke $r1.<org.codehaus.groovy.antlr.GroovySourceAST: groovyjarjarantlr.collections.AST getFirstChild()>();

        z0 = 0;

     label1:
        if r4 == null goto label5;

        $i0 = interfaceinvoke r4.<groovyjarjarantlr.collections.AST: int getType()>();

        lookupswitch($i0)
        {
            case 80: goto label3;
            case 111: goto label2;
            case 113: goto label2;
            default: goto label4;
        };

     label2:
        z0 = 1;

        goto label4;

     label3:
        virtualinvoke r2.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyProgramElementDoc: void setStatic(boolean)>(1);

     label4:
        r4 = interfaceinvoke r4.<groovyjarjarantlr.collections.AST: groovyjarjarantlr.collections.AST getNextSibling()>();

        goto label1;

     label5:
        if z0 != 0 goto label6;

        virtualinvoke r2.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyProgramElementDoc: void setPublic(boolean)>(1);

     label6:
        return;
    }

    private java.lang.String getJavaDocCommentsBeforeNode(org.codehaus.groovy.antlr.GroovySourceAST)
    {
        java.util.regex.Matcher $r7;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r5, r8, r9;
        boolean $z0;
        org.codehaus.groovy.antlr.GroovySourceAST r4;
        org.codehaus.groovy.antlr.SourceBuffer $r2;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler r0;
        org.codehaus.groovy.antlr.LineColumn $r1, $r3;
        java.util.regex.Pattern $r6;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler;

        r4 := @parameter0: org.codehaus.groovy.antlr.GroovySourceAST;

        r8 = "";

        $r2 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: org.codehaus.groovy.antlr.SourceBuffer sourceBuffer>;

        $r1 = new org.codehaus.groovy.antlr.LineColumn;

        specialinvoke $r1.<org.codehaus.groovy.antlr.LineColumn: void <init>(int,int)>(1, 1);

        $r3 = new org.codehaus.groovy.antlr.LineColumn;

        $i0 = virtualinvoke r4.<org.codehaus.groovy.antlr.GroovySourceAST: int getLine()>();

        $i1 = virtualinvoke r4.<org.codehaus.groovy.antlr.GroovySourceAST: int getColumn()>();

        specialinvoke $r3.<org.codehaus.groovy.antlr.LineColumn: void <init>(int,int)>($i0, $i1);

        $r5 = virtualinvoke $r2.<org.codehaus.groovy.antlr.SourceBuffer: java.lang.String getSnippet(org.codehaus.groovy.antlr.LineColumn,org.codehaus.groovy.antlr.LineColumn)>($r1, $r3);

        r9 = $r5;

        if $r5 == null goto label2;

        $i2 = virtualinvoke $r5.<java.lang.String: int lastIndexOf(java.lang.String)>("{");

        $i3 = virtualinvoke $r5.<java.lang.String: int lastIndexOf(java.lang.String)>("}");

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i3);

        if $i4 <= 0 goto label1;

        r9 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int)>($i4);

     label1:
        $r6 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.util.regex.Pattern previousJavaDocCommentPattern>;

        $r7 = virtualinvoke $r6.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r9);

        $z0 = virtualinvoke $r7.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label2;

        r8 = virtualinvoke $r7.<java.util.regex.Matcher: java.lang.String group(int)>(1);

     label2:
        return r8;
    }

    private java.lang.String getText(org.codehaus.groovy.antlr.GroovySourceAST)
    {
        org.codehaus.groovy.antlr.GroovySourceAST r0;
        java.lang.String r2;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler r1;

        r1 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler;

        r0 := @parameter0: org.codehaus.groovy.antlr.GroovySourceAST;

        r2 = null;

        if r0 == null goto label1;

        r2 = virtualinvoke r0.<org.codehaus.groovy.antlr.GroovySourceAST: java.lang.String getText()>();

     label1:
        return r2;
    }

    private java.lang.String getTypeNodeAsText(org.codehaus.groovy.antlr.GroovySourceAST, java.lang.String)
    {
        org.codehaus.groovy.antlr.GroovySourceAST r1, r3;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler r4;
        int $i0, $i1, $i2;
        java.lang.String r0, r5;
        groovyjarjarantlr.collections.AST $r2;

        r4 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler;

        r1 := @parameter0: org.codehaus.groovy.antlr.GroovySourceAST;

        r0 := @parameter1: java.lang.String;

        r5 = r0;

        if r1 == null goto label11;

        $i0 = virtualinvoke r1.<org.codehaus.groovy.antlr.GroovySourceAST: int getType()>();

        if $i0 != 12 goto label11;

        $i1 = virtualinvoke r1.<org.codehaus.groovy.antlr.GroovySourceAST: int getNumberOfChildren()>();

        if $i1 <= 0 goto label11;

        $r2 = virtualinvoke r1.<org.codehaus.groovy.antlr.GroovySourceAST: groovyjarjarantlr.collections.AST getFirstChild()>();

        r3 = (org.codehaus.groovy.antlr.GroovySourceAST) $r2;

        $i2 = virtualinvoke r3.<org.codehaus.groovy.antlr.GroovySourceAST: int getType()>();

        tableswitch($i2)
        {
            case 84: goto label10;
            case 85: goto label11;
            case 86: goto label11;
            case 87: goto label11;
            case 88: goto label11;
            case 89: goto label11;
            case 90: goto label11;
            case 91: goto label11;
            case 92: goto label11;
            case 93: goto label11;
            case 94: goto label11;
            case 95: goto label11;
            case 96: goto label11;
            case 97: goto label11;
            case 98: goto label11;
            case 99: goto label11;
            case 100: goto label09;
            case 101: goto label01;
            case 102: goto label02;
            case 103: goto label03;
            case 104: goto label08;
            case 105: goto label06;
            case 106: goto label05;
            case 107: goto label07;
            case 108: goto label04;
            default: goto label11;
        };

     label01:
        r5 = "boolean";

        goto label11;

     label02:
        r5 = "byte";

        goto label11;

     label03:
        r5 = "char";

        goto label11;

     label04:
        r5 = "double";

        goto label11;

     label05:
        r5 = "float";

        goto label11;

     label06:
        r5 = "int";

        goto label11;

     label07:
        r5 = "long";

        goto label11;

     label08:
        r5 = "short";

        goto label11;

     label09:
        r5 = "void";

        goto label11;

     label10:
        r5 = virtualinvoke r3.<org.codehaus.groovy.antlr.GroovySourceAST: java.lang.String getText()>();

     label11:
        return r5;
    }

    private void addParametersTo(org.codehaus.groovy.tools.groovydoc.SimpleGroovyExecutableMemberDoc, org.codehaus.groovy.antlr.GroovySourceAST, int)
    {
        org.codehaus.groovy.antlr.GroovySourceAST r0, $r1, $r4, $r6, r11;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter $r8;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler r3;
        int $i0, i1;
        java.lang.String $r5, $r7;
        groovyjarjarantlr.collections.AST $r2, $r10;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyExecutableMemberDoc r9;

        r3 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler;

        r9 := @parameter0: org.codehaus.groovy.tools.groovydoc.SimpleGroovyExecutableMemberDoc;

        r0 := @parameter1: org.codehaus.groovy.antlr.GroovySourceAST;

        i1 := @parameter2: int;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.antlr.GroovySourceAST: org.codehaus.groovy.antlr.GroovySourceAST childOfType(int)>(19);

        if $r1 == null goto label2;

        $i0 = virtualinvoke $r1.<org.codehaus.groovy.antlr.GroovySourceAST: int getNumberOfChildren()>();

        if $i0 <= 0 goto label2;

        $r2 = virtualinvoke $r1.<org.codehaus.groovy.antlr.GroovySourceAST: groovyjarjarantlr.collections.AST getFirstChild()>();

        r11 = (org.codehaus.groovy.antlr.GroovySourceAST) $r2;

     label1:
        if r11 == null goto label2;

        $r4 = virtualinvoke r11.<org.codehaus.groovy.antlr.GroovySourceAST: org.codehaus.groovy.antlr.GroovySourceAST childOfType(int)>(12);

        $r5 = specialinvoke r3.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.lang.String getTypeNodeAsText(org.codehaus.groovy.antlr.GroovySourceAST,java.lang.String)>($r4, "def");

        $r6 = virtualinvoke r11.<org.codehaus.groovy.antlr.GroovySourceAST: org.codehaus.groovy.antlr.GroovySourceAST childOfType(int)>(84);

        $r7 = specialinvoke r3.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.lang.String getText(org.codehaus.groovy.antlr.GroovySourceAST)>($r6);

        $r8 = new org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter;

        specialinvoke $r8.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter: void <init>(java.lang.String)>($r7);

        virtualinvoke $r8.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter: void setTypeName(java.lang.String)>($r5);

        virtualinvoke r9.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyExecutableMemberDoc: void add(org.codehaus.groovy.groovydoc.GroovyParameter)>($r8);

        $r10 = virtualinvoke r11.<org.codehaus.groovy.antlr.GroovySourceAST: groovyjarjarantlr.collections.AST getNextSibling()>();

        r11 = (org.codehaus.groovy.antlr.GroovySourceAST) $r10;

        goto label1;

     label2:
        return;
    }

    public void push(org.codehaus.groovy.antlr.GroovySourceAST)
    {
        org.codehaus.groovy.antlr.GroovySourceAST r1;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler r0;
        java.util.Stack $r2;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler;

        r1 := @parameter0: org.codehaus.groovy.antlr.GroovySourceAST;

        $r2 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.util.Stack stack>;

        virtualinvoke $r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r1);

        return;
    }

    public org.codehaus.groovy.antlr.GroovySourceAST pop()
    {
        org.codehaus.groovy.antlr.GroovySourceAST $r4;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler r0;
        java.lang.Object $r3;
        java.util.Stack $r1, $r2;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler;

        $r1 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.util.Stack stack>;

        $z0 = virtualinvoke $r1.<java.util.Stack: boolean empty()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.util.Stack stack>;

        $r3 = virtualinvoke $r2.<java.util.Stack: java.lang.Object pop()>();

        $r4 = (org.codehaus.groovy.antlr.GroovySourceAST) $r3;

        return $r4;

     label1:
        return null;
    }

    private org.codehaus.groovy.antlr.GroovySourceAST getParentNode()
    {
        org.codehaus.groovy.antlr.GroovySourceAST $r5;
        java.util.Stack $r1, $r3, $r4, $r6;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler r0;
        java.lang.Object $r2, r7;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler;

        r7 = null;

        $r1 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.util.Stack stack>;

        $r2 = virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        $r3 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.util.Stack stack>;

        $z0 = virtualinvoke $r3.<java.util.Stack: boolean empty()>();

        if $z0 != 0 goto label1;

        $r6 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.util.Stack stack>;

        r7 = virtualinvoke $r6.<java.util.Stack: java.lang.Object peek()>();

     label1:
        $r4 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.util.Stack stack>;

        virtualinvoke $r4.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r2);

        $r5 = (org.codehaus.groovy.antlr.GroovySourceAST) r7;

        return $r5;
    }

    private org.codehaus.groovy.antlr.GroovySourceAST getGrandParentNode()
    {
        org.codehaus.groovy.antlr.GroovySourceAST $r11;
        java.util.Stack $r1, $r3, $r4, $r6, $r7, $r8, $r10;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler r0;
        java.lang.Object $r2, $r5, r9;
        boolean $z0, $z1;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler;

        r9 = null;

        $r1 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.util.Stack stack>;

        $r2 = virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        $r3 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.util.Stack stack>;

        $z0 = virtualinvoke $r3.<java.util.Stack: boolean empty()>();

        if $z0 != 0 goto label2;

        $r4 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.util.Stack stack>;

        $r5 = virtualinvoke $r4.<java.util.Stack: java.lang.Object pop()>();

        $r6 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.util.Stack stack>;

        $z1 = virtualinvoke $r6.<java.util.Stack: boolean empty()>();

        if $z1 != 0 goto label1;

        $r8 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.util.Stack stack>;

        r9 = virtualinvoke $r8.<java.util.Stack: java.lang.Object peek()>();

     label1:
        $r7 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.util.Stack stack>;

        virtualinvoke $r7.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r5);

     label2:
        $r10 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.util.Stack stack>;

        virtualinvoke $r10.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r2);

        $r11 = (org.codehaus.groovy.antlr.GroovySourceAST) r9;

        return $r11;
    }

    public static void <clinit>()
    {
        <org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.lang.String FS> = "/";

        return;
    }
}
