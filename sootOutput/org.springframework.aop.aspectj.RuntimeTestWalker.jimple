class org.springframework.aop.aspectj.RuntimeTestWalker extends java.lang.Object
{
    private final org.aspectj.weaver.ast.Test runtimeTest;

    public void <init>(org.aspectj.weaver.tools.ShadowMatch)
    {
        java.lang.IllegalStateException $r8, $r10;
        java.lang.IllegalAccessException $r7;
        org.aspectj.weaver.ast.Test $r6;
        java.lang.reflect.Field $r4;
        org.aspectj.weaver.tools.ShadowMatch r1;
        java.lang.NoSuchFieldException $r9;
        org.springframework.aop.aspectj.RuntimeTestWalker r0;
        java.lang.Class $r3;
        java.lang.Object $r5;
        org.aspectj.weaver.reflect.ShadowMatchImpl r2;

        r0 := @this: org.springframework.aop.aspectj.RuntimeTestWalker;

        r1 := @parameter0: org.aspectj.weaver.tools.ShadowMatch;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r2 = (org.aspectj.weaver.reflect.ShadowMatchImpl) r1;

     label1:
        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("residualTest");

        staticinvoke <org.springframework.util.ReflectionUtils: void makeAccessible(java.lang.reflect.Field)>($r4);

        $r5 = virtualinvoke $r4.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r1);

        $r6 = (org.aspectj.weaver.ast.Test) $r5;

        r0.<org.springframework.aop.aspectj.RuntimeTestWalker: org.aspectj.weaver.ast.Test runtimeTest> = $r6;

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The version of aspectjtools.jar / aspectjweaver.jar on the classpath is incompatible with this version of Spring: Expected field \'runtimeTest\' is not present on ShadowMatchImpl class.");

        throw $r10;

     label4:
        $r7 := @caughtexception;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unable to access ShadowMatchImpl.residualTest field");

        throw $r8;

     label5:
        return;

        catch java.lang.NoSuchFieldException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
    }

    public boolean testsSubtypeSensitiveVars()
    {
        org.springframework.aop.aspectj.RuntimeTestWalker$SubtypeSensitiveVarTypeTestVisitor $r2;
        org.aspectj.weaver.ast.Test $r1, $r3;
        org.springframework.aop.aspectj.RuntimeTestWalker r0;
        boolean $z0;

        r0 := @this: org.springframework.aop.aspectj.RuntimeTestWalker;

        $r1 = r0.<org.springframework.aop.aspectj.RuntimeTestWalker: org.aspectj.weaver.ast.Test runtimeTest>;

        if $r1 == null goto label1;

        $r2 = new org.springframework.aop.aspectj.RuntimeTestWalker$SubtypeSensitiveVarTypeTestVisitor;

        specialinvoke $r2.<org.springframework.aop.aspectj.RuntimeTestWalker$SubtypeSensitiveVarTypeTestVisitor: void <init>(org.springframework.aop.aspectj.RuntimeTestWalker$SubtypeSensitiveVarTypeTestVisitor)>(null);

        $r3 = r0.<org.springframework.aop.aspectj.RuntimeTestWalker: org.aspectj.weaver.ast.Test runtimeTest>;

        $z0 = virtualinvoke $r2.<org.springframework.aop.aspectj.RuntimeTestWalker$SubtypeSensitiveVarTypeTestVisitor: boolean testsSubtypeSensitiveVars(org.aspectj.weaver.ast.Test)>($r3);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean testThisInstanceOfResidue(java.lang.Class)
    {
        org.aspectj.weaver.ast.Test $r1, $r4;
        org.springframework.aop.aspectj.RuntimeTestWalker r0;
        org.springframework.aop.aspectj.RuntimeTestWalker$ThisInstanceOfResidueTestVisitor $r2;
        java.lang.Class r3;
        boolean $z0;

        r0 := @this: org.springframework.aop.aspectj.RuntimeTestWalker;

        r3 := @parameter0: java.lang.Class;

        $r1 = r0.<org.springframework.aop.aspectj.RuntimeTestWalker: org.aspectj.weaver.ast.Test runtimeTest>;

        if $r1 == null goto label1;

        $r2 = new org.springframework.aop.aspectj.RuntimeTestWalker$ThisInstanceOfResidueTestVisitor;

        specialinvoke $r2.<org.springframework.aop.aspectj.RuntimeTestWalker$ThisInstanceOfResidueTestVisitor: void <init>(java.lang.Class)>(r3);

        $r4 = r0.<org.springframework.aop.aspectj.RuntimeTestWalker: org.aspectj.weaver.ast.Test runtimeTest>;

        $z0 = virtualinvoke $r2.<org.springframework.aop.aspectj.RuntimeTestWalker$ThisInstanceOfResidueTestVisitor: boolean thisInstanceOfMatches(org.aspectj.weaver.ast.Test)>($r4);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean testTargetInstanceOfResidue(java.lang.Class)
    {
        org.springframework.aop.aspectj.RuntimeTestWalker$TargetInstanceOfResidueTestVisitor $r2;
        org.aspectj.weaver.ast.Test $r1, $r4;
        org.springframework.aop.aspectj.RuntimeTestWalker r0;
        java.lang.Class r3;
        boolean $z0;

        r0 := @this: org.springframework.aop.aspectj.RuntimeTestWalker;

        r3 := @parameter0: java.lang.Class;

        $r1 = r0.<org.springframework.aop.aspectj.RuntimeTestWalker: org.aspectj.weaver.ast.Test runtimeTest>;

        if $r1 == null goto label1;

        $r2 = new org.springframework.aop.aspectj.RuntimeTestWalker$TargetInstanceOfResidueTestVisitor;

        specialinvoke $r2.<org.springframework.aop.aspectj.RuntimeTestWalker$TargetInstanceOfResidueTestVisitor: void <init>(java.lang.Class)>(r3);

        $r4 = r0.<org.springframework.aop.aspectj.RuntimeTestWalker: org.aspectj.weaver.ast.Test runtimeTest>;

        $z0 = virtualinvoke $r2.<org.springframework.aop.aspectj.RuntimeTestWalker$TargetInstanceOfResidueTestVisitor: boolean targetInstanceOfMatches(org.aspectj.weaver.ast.Test)>($r4);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
}
