class org.waveprotocol.box.server.waveserver.CertificateManagerImpl$1 extends java.lang.Object implements org.waveprotocol.wave.federation.WaveletFederationProvider$DeltaSignerInfoResponseListener
{
    final com.google.protobuf.ByteString val$signerId;
    final java.lang.String val$domain;
    final org.waveprotocol.box.server.waveserver.CertificateManagerImpl this$0;

    void <init>(org.waveprotocol.box.server.waveserver.CertificateManagerImpl, com.google.protobuf.ByteString, java.lang.String)
    {
        com.google.protobuf.ByteString r2;
        org.waveprotocol.box.server.waveserver.CertificateManagerImpl r1;
        java.lang.String r3;
        org.waveprotocol.box.server.waveserver.CertificateManagerImpl$1 r0;

        r0 := @this: org.waveprotocol.box.server.waveserver.CertificateManagerImpl$1;

        r1 := @parameter0: org.waveprotocol.box.server.waveserver.CertificateManagerImpl;

        r2 := @parameter1: com.google.protobuf.ByteString;

        r3 := @parameter2: java.lang.String;

        r0.<org.waveprotocol.box.server.waveserver.CertificateManagerImpl$1: org.waveprotocol.box.server.waveserver.CertificateManagerImpl this$0> = r1;

        r0.<org.waveprotocol.box.server.waveserver.CertificateManagerImpl$1: com.google.protobuf.ByteString val$signerId> = r2;

        r0.<org.waveprotocol.box.server.waveserver.CertificateManagerImpl$1: java.lang.String val$domain> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onFailure(org.waveprotocol.wave.federation.FederationErrorProto$FederationError)
    {
        org.waveprotocol.wave.federation.FederationErrorProto$FederationError r3;
        com.google.protobuf.ByteString $r8;
        org.waveprotocol.box.server.waveserver.CertificateManagerImpl $r9;
        org.waveprotocol.wave.util.logging.Log $r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r5, $r7;
        org.waveprotocol.box.server.waveserver.CertificateManagerImpl$1 r6;

        r6 := @this: org.waveprotocol.box.server.waveserver.CertificateManagerImpl$1;

        r3 := @parameter0: org.waveprotocol.wave.federation.FederationErrorProto$FederationError;

        $r0 = staticinvoke <org.waveprotocol.box.server.waveserver.CertificateManagerImpl: org.waveprotocol.wave.util.logging.Log access$000()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getDeltaSignerInfo failed: ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<org.waveprotocol.wave.util.logging.Log: void warning(java.lang.String)>($r5);

        $r9 = r6.<org.waveprotocol.box.server.waveserver.CertificateManagerImpl$1: org.waveprotocol.box.server.waveserver.CertificateManagerImpl this$0>;

        $r8 = r6.<org.waveprotocol.box.server.waveserver.CertificateManagerImpl$1: com.google.protobuf.ByteString val$signerId>;

        $r7 = r6.<org.waveprotocol.box.server.waveserver.CertificateManagerImpl$1: java.lang.String val$domain>;

        staticinvoke <org.waveprotocol.box.server.waveserver.CertificateManagerImpl: void access$100(org.waveprotocol.box.server.waveserver.CertificateManagerImpl,com.google.protobuf.ByteString,org.waveprotocol.wave.federation.FederationErrorProto$FederationError,java.lang.String)>($r9, $r8, r3, $r7);

        return;
    }

    public void onSuccess(org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo)
    {
        org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo r1;
        org.waveprotocol.wave.federation.FederationErrorProto$FederationError $r10;
        com.google.protobuf.ByteString $r3, $r8;
        org.waveprotocol.box.server.waveserver.CertificateManagerImpl $r2, $r4, $r7;
        org.waveprotocol.wave.crypto.SignatureException $r5;
        org.waveprotocol.wave.util.logging.Log $r6;
        java.lang.String $r9;
        org.waveprotocol.box.server.waveserver.CertificateManagerImpl$1 r0;

        r0 := @this: org.waveprotocol.box.server.waveserver.CertificateManagerImpl$1;

        r1 := @parameter0: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo;

     label1:
        $r2 = r0.<org.waveprotocol.box.server.waveserver.CertificateManagerImpl$1: org.waveprotocol.box.server.waveserver.CertificateManagerImpl this$0>;

        virtualinvoke $r2.<org.waveprotocol.box.server.waveserver.CertificateManagerImpl: void storeSignerInfo(org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo)>(r1);

        $r4 = r0.<org.waveprotocol.box.server.waveserver.CertificateManagerImpl$1: org.waveprotocol.box.server.waveserver.CertificateManagerImpl this$0>;

        $r3 = r0.<org.waveprotocol.box.server.waveserver.CertificateManagerImpl$1: com.google.protobuf.ByteString val$signerId>;

        staticinvoke <org.waveprotocol.box.server.waveserver.CertificateManagerImpl: void access$200(org.waveprotocol.box.server.waveserver.CertificateManagerImpl,com.google.protobuf.ByteString,org.waveprotocol.wave.federation.FederationErrorProto$FederationError)>($r4, $r3, null);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = staticinvoke <org.waveprotocol.box.server.waveserver.CertificateManagerImpl: org.waveprotocol.wave.util.logging.Log access$000()>();

        virtualinvoke $r6.<org.waveprotocol.wave.util.logging.Log: void warning(java.lang.String,java.lang.Throwable)>("Failed to verify signer info", $r5);

        $r7 = r0.<org.waveprotocol.box.server.waveserver.CertificateManagerImpl$1: org.waveprotocol.box.server.waveserver.CertificateManagerImpl this$0>;

        $r8 = r0.<org.waveprotocol.box.server.waveserver.CertificateManagerImpl$1: com.google.protobuf.ByteString val$signerId>;

        $r9 = virtualinvoke $r5.<org.waveprotocol.wave.crypto.SignatureException: java.lang.String toString()>();

        $r10 = staticinvoke <org.waveprotocol.wave.federation.FederationErrors: org.waveprotocol.wave.federation.FederationErrorProto$FederationError badRequest(java.lang.String)>($r9);

        staticinvoke <org.waveprotocol.box.server.waveserver.CertificateManagerImpl: void access$200(org.waveprotocol.box.server.waveserver.CertificateManagerImpl,com.google.protobuf.ByteString,org.waveprotocol.wave.federation.FederationErrorProto$FederationError)>($r7, $r8, $r10);

     label4:
        return;

        catch org.waveprotocol.wave.crypto.SignatureException from label1 to label2 with label3;
    }
}
