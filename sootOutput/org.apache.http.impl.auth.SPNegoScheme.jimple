public class org.apache.http.impl.auth.SPNegoScheme extends org.apache.http.impl.auth.GGSSchemeBase
{
    private static final java.lang.String SPNEGO_OID;

    public void <init>(boolean)
    {
        org.apache.http.impl.auth.SPNegoScheme r0;
        boolean z0;

        r0 := @this: org.apache.http.impl.auth.SPNegoScheme;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.http.impl.auth.GGSSchemeBase: void <init>(boolean)>(z0);

        return;
    }

    public void <init>()
    {
        org.apache.http.impl.auth.SPNegoScheme r0;

        r0 := @this: org.apache.http.impl.auth.SPNegoScheme;

        specialinvoke r0.<org.apache.http.impl.auth.GGSSchemeBase: void <init>(boolean)>(0);

        return;
    }

    public java.lang.String getSchemeName()
    {
        org.apache.http.impl.auth.SPNegoScheme r0;

        r0 := @this: org.apache.http.impl.auth.SPNegoScheme;

        return "Negotiate";
    }

    public org.apache.http.Header authenticate(org.apache.http.auth.Credentials, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.auth.AuthenticationException
    {
        org.apache.http.auth.Credentials r1;
        org.apache.http.protocol.HttpContext r3;
        org.apache.http.impl.auth.SPNegoScheme r0;
        org.apache.http.HttpRequest r2;
        org.apache.http.Header $r4;

        r0 := @this: org.apache.http.impl.auth.SPNegoScheme;

        r1 := @parameter0: org.apache.http.auth.Credentials;

        r2 := @parameter1: org.apache.http.HttpRequest;

        r3 := @parameter2: org.apache.http.protocol.HttpContext;

        $r4 = specialinvoke r0.<org.apache.http.impl.auth.GGSSchemeBase: org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>(r1, r2, r3);

        return $r4;
    }

    protected byte[] generateToken(byte[], java.lang.String) throws org.ietf.jgss.GSSException
    {
        byte[] r1, $r4;
        org.ietf.jgss.Oid $r2;
        org.apache.http.impl.auth.SPNegoScheme r0;
        java.lang.String r3;

        r0 := @this: org.apache.http.impl.auth.SPNegoScheme;

        r1 := @parameter0: byte[];

        r3 := @parameter1: java.lang.String;

        $r2 = new org.ietf.jgss.Oid;

        specialinvoke $r2.<org.ietf.jgss.Oid: void <init>(java.lang.String)>("1.3.6.1.5.5.2");

        $r4 = virtualinvoke r0.<org.apache.http.impl.auth.SPNegoScheme: byte[] generateGSSToken(byte[],org.ietf.jgss.Oid,java.lang.String)>(r1, $r2, r3);

        return $r4;
    }

    public java.lang.String getParameter(java.lang.String)
    {
        org.apache.http.impl.auth.SPNegoScheme r2;
        java.lang.String r0;
        java.lang.IllegalArgumentException $r1;

        r2 := @this: org.apache.http.impl.auth.SPNegoScheme;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameter name may not be null");

        throw $r1;

     label1:
        return null;
    }

    public java.lang.String getRealm()
    {
        org.apache.http.impl.auth.SPNegoScheme r0;

        r0 := @this: org.apache.http.impl.auth.SPNegoScheme;

        return null;
    }

    public boolean isConnectionBased()
    {
        org.apache.http.impl.auth.SPNegoScheme r0;

        r0 := @this: org.apache.http.impl.auth.SPNegoScheme;

        return 1;
    }

    public static void <clinit>()
    {
        <org.apache.http.impl.auth.SPNegoScheme: java.lang.String SPNEGO_OID> = "1.3.6.1.5.5.2";

        return;
    }
}
