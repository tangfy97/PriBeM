public abstract class org.apache.poi.poifs.property.PropertyTableBase extends java.lang.Object implements org.apache.poi.poifs.filesystem.BATManaged
{
    private final org.apache.poi.poifs.storage.HeaderBlock _header_block;
    protected final java.util.List _properties;

    public void <init>(org.apache.poi.poifs.storage.HeaderBlock)
    {
        org.apache.poi.poifs.property.PropertyTableBase r0;
        org.apache.poi.poifs.storage.HeaderBlock r1;
        java.util.ArrayList $r2;
        org.apache.poi.poifs.property.RootProperty $r3;

        r0 := @this: org.apache.poi.poifs.property.PropertyTableBase;

        r1 := @parameter0: org.apache.poi.poifs.storage.HeaderBlock;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.poifs.property.PropertyTableBase: org.apache.poi.poifs.storage.HeaderBlock _header_block> = r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.poifs.property.PropertyTableBase: java.util.List _properties> = $r2;

        $r3 = new org.apache.poi.poifs.property.RootProperty;

        specialinvoke $r3.<org.apache.poi.poifs.property.RootProperty: void <init>()>();

        virtualinvoke r0.<org.apache.poi.poifs.property.PropertyTableBase: void addProperty(org.apache.poi.poifs.property.Property)>($r3);

        return;
    }

    public void <init>(org.apache.poi.poifs.storage.HeaderBlock, java.util.List) throws java.io.IOException
    {
        java.util.List r2, $r3;
        org.apache.poi.poifs.property.DirectoryProperty $r5;
        org.apache.poi.poifs.property.PropertyTableBase r0;
        java.lang.Object $r4;
        org.apache.poi.poifs.storage.HeaderBlock r1;

        r0 := @this: org.apache.poi.poifs.property.PropertyTableBase;

        r1 := @parameter0: org.apache.poi.poifs.storage.HeaderBlock;

        r2 := @parameter1: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.poifs.property.PropertyTableBase: org.apache.poi.poifs.storage.HeaderBlock _header_block> = r1;

        r0.<org.apache.poi.poifs.property.PropertyTableBase: java.util.List _properties> = r2;

        $r3 = r0.<org.apache.poi.poifs.property.PropertyTableBase: java.util.List _properties>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (org.apache.poi.poifs.property.DirectoryProperty) $r4;

        specialinvoke r0.<org.apache.poi.poifs.property.PropertyTableBase: void populatePropertyTree(org.apache.poi.poifs.property.DirectoryProperty)>($r5);

        return;
    }

    public void addProperty(org.apache.poi.poifs.property.Property)
    {
        org.apache.poi.poifs.property.PropertyTableBase r0;
        java.util.List $r2;
        org.apache.poi.poifs.property.Property r1;

        r0 := @this: org.apache.poi.poifs.property.PropertyTableBase;

        r1 := @parameter0: org.apache.poi.poifs.property.Property;

        $r2 = r0.<org.apache.poi.poifs.property.PropertyTableBase: java.util.List _properties>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void removeProperty(org.apache.poi.poifs.property.Property)
    {
        org.apache.poi.poifs.property.PropertyTableBase r0;
        java.util.List $r2;
        org.apache.poi.poifs.property.Property r1;

        r0 := @this: org.apache.poi.poifs.property.PropertyTableBase;

        r1 := @parameter0: org.apache.poi.poifs.property.Property;

        $r2 = r0.<org.apache.poi.poifs.property.PropertyTableBase: java.util.List _properties>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public org.apache.poi.poifs.property.RootProperty getRoot()
    {
        java.util.List $r1;
        org.apache.poi.poifs.property.PropertyTableBase r0;
        java.lang.Object $r2;
        org.apache.poi.poifs.property.RootProperty $r3;

        r0 := @this: org.apache.poi.poifs.property.PropertyTableBase;

        $r1 = r0.<org.apache.poi.poifs.property.PropertyTableBase: java.util.List _properties>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (org.apache.poi.poifs.property.RootProperty) $r2;

        return $r3;
    }

    private void populatePropertyTree(org.apache.poi.poifs.property.DirectoryProperty) throws java.io.IOException
    {
        org.apache.poi.poifs.property.Property r6;
        java.util.Stack $r1;
        org.apache.poi.poifs.property.DirectoryProperty r0, $r11;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.List $r3, $r7, $r9;
        org.apache.poi.poifs.property.PropertyTableBase r2;
        java.lang.Object $r4, $r5, $r8, $r10;

        r2 := @this: org.apache.poi.poifs.property.PropertyTableBase;

        r0 := @parameter0: org.apache.poi.poifs.property.DirectoryProperty;

        $i0 = virtualinvoke r0.<org.apache.poi.poifs.property.DirectoryProperty: int getChildIndex()>();

        $z0 = staticinvoke <org.apache.poi.poifs.property.Property: boolean isValidIndex(int)>($i0);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = new java.util.Stack;

        specialinvoke $r1.<java.util.Stack: void <init>()>();

        $r3 = r2.<org.apache.poi.poifs.property.PropertyTableBase: java.util.List _properties>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i0);

        virtualinvoke $r1.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r4);

     label2:
        $z1 = virtualinvoke $r1.<java.util.Stack: boolean empty()>();

        if $z1 != 0 goto label6;

        $r5 = virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        r6 = (org.apache.poi.poifs.property.Property) $r5;

        virtualinvoke r0.<org.apache.poi.poifs.property.DirectoryProperty: void addChild(org.apache.poi.poifs.property.Property)>(r6);

        $z2 = virtualinvoke r6.<org.apache.poi.poifs.property.Property: boolean isDirectory()>();

        if $z2 == 0 goto label3;

        $r11 = (org.apache.poi.poifs.property.DirectoryProperty) r6;

        specialinvoke r2.<org.apache.poi.poifs.property.PropertyTableBase: void populatePropertyTree(org.apache.poi.poifs.property.DirectoryProperty)>($r11);

     label3:
        $i1 = virtualinvoke r6.<org.apache.poi.poifs.property.Property: int getPreviousChildIndex()>();

        $z3 = staticinvoke <org.apache.poi.poifs.property.Property: boolean isValidIndex(int)>($i1);

        if $z3 == 0 goto label4;

        $r9 = r2.<org.apache.poi.poifs.property.PropertyTableBase: java.util.List _properties>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i1);

        virtualinvoke $r1.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r10);

     label4:
        $i2 = virtualinvoke r6.<org.apache.poi.poifs.property.Property: int getNextChildIndex()>();

        $z4 = staticinvoke <org.apache.poi.poifs.property.Property: boolean isValidIndex(int)>($i2);

        if $z4 == 0 goto label5;

        $r7 = r2.<org.apache.poi.poifs.property.PropertyTableBase: java.util.List _properties>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i2);

        virtualinvoke $r1.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r8);

     label5:
        goto label2;

     label6:
        return;
    }

    public int getStartBlock()
    {
        int $i0;
        org.apache.poi.poifs.property.PropertyTableBase r0;
        org.apache.poi.poifs.storage.HeaderBlock $r1;

        r0 := @this: org.apache.poi.poifs.property.PropertyTableBase;

        $r1 = r0.<org.apache.poi.poifs.property.PropertyTableBase: org.apache.poi.poifs.storage.HeaderBlock _header_block>;

        $i0 = virtualinvoke $r1.<org.apache.poi.poifs.storage.HeaderBlock: int getPropertyStart()>();

        return $i0;
    }

    public void setStartBlock(int)
    {
        int i0;
        org.apache.poi.poifs.property.PropertyTableBase r0;
        org.apache.poi.poifs.storage.HeaderBlock $r1;

        r0 := @this: org.apache.poi.poifs.property.PropertyTableBase;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.poifs.property.PropertyTableBase: org.apache.poi.poifs.storage.HeaderBlock _header_block>;

        virtualinvoke $r1.<org.apache.poi.poifs.storage.HeaderBlock: void setPropertyStart(int)>(i0);

        return;
    }
}
