public class org.apache.velocity.util.ExceptionUtils extends java.lang.Object
{
    private static boolean causesAllowed;
    static java.lang.Class class$java$lang$RuntimeException;
    static java.lang.Class class$java$lang$String;
    static java.lang.Class class$java$lang$Throwable;

    public void <init>()
    {
        org.apache.velocity.util.ExceptionUtils r0;

        r0 := @this: org.apache.velocity.util.ExceptionUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.RuntimeException createRuntimeException(java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r2, $r3;
        java.lang.Class $r0, $r5;
        java.lang.String r1;
        java.lang.RuntimeException $r4;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        $r0 = <org.apache.velocity.util.ExceptionUtils: java.lang.Class class$java$lang$RuntimeException>;

        if $r0 != null goto label1;

        $r5 = staticinvoke <org.apache.velocity.util.ExceptionUtils: java.lang.Class class$(java.lang.String)>("java.lang.RuntimeException");

        <org.apache.velocity.util.ExceptionUtils: java.lang.Class class$java$lang$RuntimeException> = $r5;

        goto label2;

     label1:
        $r5 = <org.apache.velocity.util.ExceptionUtils: java.lang.Class class$java$lang$RuntimeException>;

     label2:
        $r3 = staticinvoke <org.apache.velocity.util.ExceptionUtils: java.lang.Throwable createWithCause(java.lang.Class,java.lang.String,java.lang.Throwable)>($r5, r1, r2);

        $r4 = (java.lang.RuntimeException) $r3;

        return $r4;
    }

    public static java.lang.Throwable createWithCause(java.lang.Class, java.lang.String, java.lang.Throwable)
    {
        boolean $z0;
        java.lang.Exception $r19, $r26;
        java.lang.Throwable r9, r28;
        java.lang.Object[] $r4, $r17;
        java.lang.reflect.Constructor $r3, $r16;
        java.lang.StringBuffer $r5, $r7, $r8, $r10, $r21, $r22, $r23;
        java.lang.String r6, $r11, $r24;
        java.lang.Class[] $r1, $r13;
        java.lang.RuntimeException $r20, $r25, $r27;
        java.lang.Class r0, $r2, $r14, $r15, $r29, $r30, $r31;
        java.lang.Object $r12, $r18;

        r0 := @parameter0: java.lang.Class;

        r6 := @parameter1: java.lang.String;

        r9 := @parameter2: java.lang.Throwable;

        r28 = null;

        $z0 = <org.apache.velocity.util.ExceptionUtils: boolean causesAllowed>;

        if $z0 == 0 goto label09;

     label01:
        $r13 = newarray (java.lang.Class)[2];

        $r14 = <org.apache.velocity.util.ExceptionUtils: java.lang.Class class$java$lang$String>;

        if $r14 != null goto label02;

        $r29 = staticinvoke <org.apache.velocity.util.ExceptionUtils: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.velocity.util.ExceptionUtils: java.lang.Class class$java$lang$String> = $r29;

        goto label03;

     label02:
        $r29 = <org.apache.velocity.util.ExceptionUtils: java.lang.Class class$java$lang$String>;

     label03:
        $r13[0] = $r29;

        $r15 = <org.apache.velocity.util.ExceptionUtils: java.lang.Class class$java$lang$Throwable>;

        if $r15 != null goto label04;

        $r30 = staticinvoke <org.apache.velocity.util.ExceptionUtils: java.lang.Class class$(java.lang.String)>("java.lang.Throwable");

        <org.apache.velocity.util.ExceptionUtils: java.lang.Class class$java$lang$Throwable> = $r30;

        goto label05;

     label04:
        $r30 = <org.apache.velocity.util.ExceptionUtils: java.lang.Class class$java$lang$Throwable>;

     label05:
        $r13[1] = $r30;

        $r16 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r13);

        $r17 = newarray (java.lang.Object)[2];

        $r17[0] = r6;

        $r17[1] = r9;

        $r18 = virtualinvoke $r16.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r17);

        r28 = (java.lang.Throwable) $r18;

     label06:
        goto label09;

     label07:
        $r27 := @caughtexception;

        throw $r27;

     label08:
        $r26 := @caughtexception;

        <org.apache.velocity.util.ExceptionUtils: boolean causesAllowed> = 0;

     label09:
        if r28 != null goto label16;

     label10:
        $r1 = newarray (java.lang.Class)[1];

        $r2 = <org.apache.velocity.util.ExceptionUtils: java.lang.Class class$java$lang$String>;

        if $r2 != null goto label11;

        $r31 = staticinvoke <org.apache.velocity.util.ExceptionUtils: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.velocity.util.ExceptionUtils: java.lang.Class class$java$lang$String> = $r31;

        goto label12;

     label11:
        $r31 = <org.apache.velocity.util.ExceptionUtils: java.lang.Class class$java$lang$String>;

     label12:
        $r1[0] = $r31;

        $r3 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r1);

        $r4 = newarray (java.lang.Object)[1];

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" caused by ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        $r4[0] = $r11;

        $r12 = virtualinvoke $r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r4);

        r28 = (java.lang.Throwable) $r12;

     label13:
        goto label16;

     label14:
        $r25 := @caughtexception;

        throw $r25;

     label15:
        $r19 := @caughtexception;

        $r20 = new java.lang.RuntimeException;

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error caused ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r19);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String)>($r24);

        throw $r20;

     label16:
        return r28;

        catch java.lang.RuntimeException from label01 to label06 with label07;
        catch java.lang.Exception from label01 to label06 with label08;
        catch java.lang.RuntimeException from label10 to label13 with label14;
        catch java.lang.Exception from label10 to label13 with label15;
    }

    public static void setCause(java.lang.Throwable, java.lang.Throwable)
    {
        java.lang.Throwable r0, r6;
        java.lang.Object[] $r5;
        java.lang.Class[] $r2;
        java.lang.RuntimeException $r8;
        java.lang.Exception $r7;
        java.lang.Class $r1, $r3, $r9;
        java.lang.reflect.Method $r4;
        boolean $z0;

        r0 := @parameter0: java.lang.Throwable;

        r6 := @parameter1: java.lang.Throwable;

        $z0 = <org.apache.velocity.util.ExceptionUtils: boolean causesAllowed>;

        if $z0 == 0 goto label7;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = newarray (java.lang.Class)[1];

        $r3 = <org.apache.velocity.util.ExceptionUtils: java.lang.Class class$java$lang$Throwable>;

        if $r3 != null goto label2;

        $r9 = staticinvoke <org.apache.velocity.util.ExceptionUtils: java.lang.Class class$(java.lang.String)>("java.lang.Throwable");

        <org.apache.velocity.util.ExceptionUtils: java.lang.Class class$java$lang$Throwable> = $r9;

        goto label3;

     label2:
        $r9 = <org.apache.velocity.util.ExceptionUtils: java.lang.Class class$java$lang$Throwable>;

     label3:
        $r2[0] = $r9;

        $r4 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("initCause", $r2);

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r6;

        virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r5);

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        throw $r8;

     label6:
        $r7 := @caughtexception;

        <org.apache.velocity.util.ExceptionUtils: boolean causesAllowed> = 0;

     label7:
        return;

        catch java.lang.RuntimeException from label1 to label4 with label5;
        catch java.lang.Exception from label1 to label4 with label6;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        <org.apache.velocity.util.ExceptionUtils: boolean causesAllowed> = 1;

        return;
    }
}
