class org.waveprotocol.wave.model.account.DocumentBasedRoles$2 extends java.lang.Object implements org.waveprotocol.wave.model.adt.ObservableElementList$Listener
{
    final org.waveprotocol.wave.model.account.DocumentBasedRoles this$0;

    void <init>(org.waveprotocol.wave.model.account.DocumentBasedRoles)
    {
        org.waveprotocol.wave.model.account.DocumentBasedRoles r1;
        org.waveprotocol.wave.model.account.DocumentBasedRoles$2 r0;

        r0 := @this: org.waveprotocol.wave.model.account.DocumentBasedRoles$2;

        r1 := @parameter0: org.waveprotocol.wave.model.account.DocumentBasedRoles;

        r0.<org.waveprotocol.wave.model.account.DocumentBasedRoles$2: org.waveprotocol.wave.model.account.DocumentBasedRoles this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onValueAdded(org.waveprotocol.wave.model.account.ObservableAssignment)
    {
        org.waveprotocol.wave.model.account.ObservableAssignment r0;
        org.waveprotocol.wave.model.account.DocumentBasedRoles $r2, $r4;
        org.waveprotocol.wave.model.account.ObservableAssignment$Listener $r3;
        org.waveprotocol.wave.model.account.DocumentBasedRoles$2 r1;

        r1 := @this: org.waveprotocol.wave.model.account.DocumentBasedRoles$2;

        r0 := @parameter0: org.waveprotocol.wave.model.account.ObservableAssignment;

        $r2 = r1.<org.waveprotocol.wave.model.account.DocumentBasedRoles$2: org.waveprotocol.wave.model.account.DocumentBasedRoles this$0>;

        $r3 = staticinvoke <org.waveprotocol.wave.model.account.DocumentBasedRoles: org.waveprotocol.wave.model.account.ObservableAssignment$Listener access$100(org.waveprotocol.wave.model.account.DocumentBasedRoles)>($r2);

        interfaceinvoke r0.<org.waveprotocol.wave.model.account.ObservableAssignment: void addListener(java.lang.Object)>($r3);

        $r4 = r1.<org.waveprotocol.wave.model.account.DocumentBasedRoles$2: org.waveprotocol.wave.model.account.DocumentBasedRoles this$0>;

        staticinvoke <org.waveprotocol.wave.model.account.DocumentBasedRoles: void access$000(org.waveprotocol.wave.model.account.DocumentBasedRoles)>($r4);

        return;
    }

    public void onValueRemoved(org.waveprotocol.wave.model.account.ObservableAssignment)
    {
        org.waveprotocol.wave.model.account.ObservableAssignment r0;
        org.waveprotocol.wave.model.account.DocumentBasedRoles $r2, $r4;
        org.waveprotocol.wave.model.account.ObservableAssignment$Listener $r3;
        org.waveprotocol.wave.model.account.DocumentBasedRoles$2 r1;

        r1 := @this: org.waveprotocol.wave.model.account.DocumentBasedRoles$2;

        r0 := @parameter0: org.waveprotocol.wave.model.account.ObservableAssignment;

        $r2 = r1.<org.waveprotocol.wave.model.account.DocumentBasedRoles$2: org.waveprotocol.wave.model.account.DocumentBasedRoles this$0>;

        $r3 = staticinvoke <org.waveprotocol.wave.model.account.DocumentBasedRoles: org.waveprotocol.wave.model.account.ObservableAssignment$Listener access$100(org.waveprotocol.wave.model.account.DocumentBasedRoles)>($r2);

        interfaceinvoke r0.<org.waveprotocol.wave.model.account.ObservableAssignment: void removeListener(java.lang.Object)>($r3);

        $r4 = r1.<org.waveprotocol.wave.model.account.DocumentBasedRoles$2: org.waveprotocol.wave.model.account.DocumentBasedRoles this$0>;

        staticinvoke <org.waveprotocol.wave.model.account.DocumentBasedRoles: void access$000(org.waveprotocol.wave.model.account.DocumentBasedRoles)>($r4);

        return;
    }

    public volatile void onValueRemoved(java.lang.Object)
    {
        java.lang.Object r1;
        org.waveprotocol.wave.model.account.DocumentBasedRoles$2 r0;
        org.waveprotocol.wave.model.account.ObservableAssignment $r2;

        r0 := @this: org.waveprotocol.wave.model.account.DocumentBasedRoles$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.account.ObservableAssignment) r1;

        virtualinvoke r0.<org.waveprotocol.wave.model.account.DocumentBasedRoles$2: void onValueRemoved(org.waveprotocol.wave.model.account.ObservableAssignment)>($r2);

        return;
    }

    public volatile void onValueAdded(java.lang.Object)
    {
        java.lang.Object r1;
        org.waveprotocol.wave.model.account.DocumentBasedRoles$2 r0;
        org.waveprotocol.wave.model.account.ObservableAssignment $r2;

        r0 := @this: org.waveprotocol.wave.model.account.DocumentBasedRoles$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.account.ObservableAssignment) r1;

        virtualinvoke r0.<org.waveprotocol.wave.model.account.DocumentBasedRoles$2: void onValueAdded(org.waveprotocol.wave.model.account.ObservableAssignment)>($r2);

        return;
    }
}
