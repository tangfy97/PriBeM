public class com.google.gxp.compiler.base.CppFileImport extends com.google.gxp.compiler.base.Import
{
    private final java.lang.String fileName;

    public void <init>(com.google.gxp.compiler.base.Node, java.lang.String)
    {
        com.google.gxp.compiler.base.Node r1;
        com.google.gxp.compiler.base.CppFileImport r0;
        java.lang.Object $r3;
        java.lang.String r2, $r4;

        r0 := @this: com.google.gxp.compiler.base.CppFileImport;

        r1 := @parameter0: com.google.gxp.compiler.base.Node;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.google.gxp.compiler.base.Import: void <init>(com.google.gxp.compiler.base.Node)>(r1);

        $r3 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r4 = (java.lang.String) $r3;

        r0.<com.google.gxp.compiler.base.CppFileImport: java.lang.String fileName> = $r4;

        return;
    }

    public java.lang.String getFileName()
    {
        com.google.gxp.compiler.base.CppFileImport r0;
        java.lang.String $r1;

        r0 := @this: com.google.gxp.compiler.base.CppFileImport;

        $r1 = r0.<com.google.gxp.compiler.base.CppFileImport: java.lang.String fileName>;

        return $r1;
    }

    public java.lang.Object acceptVisitor(com.google.gxp.compiler.base.ImportVisitor)
    {
        com.google.gxp.compiler.base.CppFileImport r1;
        java.lang.Object $r2;
        com.google.gxp.compiler.base.ImportVisitor r0;

        r1 := @this: com.google.gxp.compiler.base.CppFileImport;

        r0 := @parameter0: com.google.gxp.compiler.base.ImportVisitor;

        $r2 = interfaceinvoke r0.<com.google.gxp.compiler.base.ImportVisitor: java.lang.Object visitCppFileImport(com.google.gxp.compiler.base.CppFileImport)>(r1);

        return $r2;
    }

    public java.lang.String getTarget()
    {
        java.lang.Object[] $r0;
        com.google.gxp.compiler.base.CppFileImport r1;
        java.lang.String $r2, $r3;

        r1 := @this: com.google.gxp.compiler.base.CppFileImport;

        $r0 = newarray (java.lang.Object)[1];

        $r2 = virtualinvoke r1.<com.google.gxp.compiler.base.CppFileImport: java.lang.String getFileName()>();

        $r0[0] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\"%s.h\"", $r0);

        return $r3;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.gxp.compiler.base.CppFileImport r1, $r2;
        java.lang.Object r0;
        boolean $z0, $z1, $z2;

        r1 := @this: com.google.gxp.compiler.base.CppFileImport;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof com.google.gxp.compiler.base.CppFileImport;

        if $z0 == 0 goto label1;

        $r2 = (com.google.gxp.compiler.base.CppFileImport) r0;

        $z1 = virtualinvoke r1.<com.google.gxp.compiler.base.CppFileImport: boolean equals(com.google.gxp.compiler.base.CppFileImport)>($r2);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean equals(com.google.gxp.compiler.base.CppFileImport)
    {
        com.google.gxp.compiler.base.CppFileImport r0, r2;
        java.lang.String $r1, $r3;
        boolean $z0;

        r0 := @this: com.google.gxp.compiler.base.CppFileImport;

        r2 := @parameter0: com.google.gxp.compiler.base.CppFileImport;

        $r1 = virtualinvoke r0.<com.google.gxp.compiler.base.CppFileImport: java.lang.String getFileName()>();

        $r3 = virtualinvoke r2.<com.google.gxp.compiler.base.CppFileImport: java.lang.String getFileName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }
}
