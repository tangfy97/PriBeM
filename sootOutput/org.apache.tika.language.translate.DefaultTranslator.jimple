public class org.apache.tika.language.translate.DefaultTranslator extends java.lang.Object implements org.apache.tika.language.translate.Translator
{
    private final transient org.apache.tika.config.ServiceLoader loader;

    public void <init>(org.apache.tika.config.ServiceLoader)
    {
        org.apache.tika.config.ServiceLoader r1;
        org.apache.tika.language.translate.DefaultTranslator r0;

        r0 := @this: org.apache.tika.language.translate.DefaultTranslator;

        r1 := @parameter0: org.apache.tika.config.ServiceLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.tika.language.translate.DefaultTranslator: org.apache.tika.config.ServiceLoader loader> = r1;

        return;
    }

    private static java.util.List getDefaultTranslators(org.apache.tika.config.ServiceLoader)
    {
        org.apache.tika.config.ServiceLoader r0;
        java.util.List $r1;
        org.apache.tika.language.translate.DefaultTranslator$1 $r2;

        r0 := @parameter0: org.apache.tika.config.ServiceLoader;

        $r1 = virtualinvoke r0.<org.apache.tika.config.ServiceLoader: java.util.List loadStaticServiceProviders(java.lang.Class)>(class "Lorg/apache/tika/language/translate/Translator;");

        $r2 = new org.apache.tika.language.translate.DefaultTranslator$1;

        specialinvoke $r2.<org.apache.tika.language.translate.DefaultTranslator$1: void <init>()>();

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r1, $r2);

        return $r1;
    }

    public java.lang.String translate(java.lang.String, java.lang.String, java.lang.String) throws java.lang.Exception
    {
        org.apache.tika.config.ServiceLoader $r1;
        java.util.List $r2;
        org.apache.tika.language.translate.Translator $r7;
        org.apache.tika.language.translate.DefaultTranslator r0;
        java.lang.Object $r3;
        java.lang.String r4, r5, r6, $r8;

        r0 := @this: org.apache.tika.language.translate.DefaultTranslator;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.String;

        $r1 = r0.<org.apache.tika.language.translate.DefaultTranslator: org.apache.tika.config.ServiceLoader loader>;

        $r2 = staticinvoke <org.apache.tika.language.translate.DefaultTranslator: java.util.List getDefaultTranslators(org.apache.tika.config.ServiceLoader)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (org.apache.tika.language.translate.Translator) $r3;

        $r8 = interfaceinvoke $r7.<org.apache.tika.language.translate.Translator: java.lang.String translate(java.lang.String,java.lang.String,java.lang.String)>(r4, r5, r6);

        return $r8;
    }

    public java.lang.String translate(java.lang.String, java.lang.String) throws java.lang.Exception
    {
        org.apache.tika.config.ServiceLoader $r1;
        java.util.List $r2;
        org.apache.tika.language.translate.Translator $r6;
        org.apache.tika.language.translate.DefaultTranslator r0;
        java.lang.Object $r3;
        java.lang.String r4, r5, $r7;

        r0 := @this: org.apache.tika.language.translate.DefaultTranslator;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        $r1 = r0.<org.apache.tika.language.translate.DefaultTranslator: org.apache.tika.config.ServiceLoader loader>;

        $r2 = staticinvoke <org.apache.tika.language.translate.DefaultTranslator: java.util.List getDefaultTranslators(org.apache.tika.config.ServiceLoader)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (org.apache.tika.language.translate.Translator) $r3;

        $r7 = interfaceinvoke $r6.<org.apache.tika.language.translate.Translator: java.lang.String translate(java.lang.String,java.lang.String)>(r4, r5);

        return $r7;
    }

    public boolean isAvailable()
    {
        org.apache.tika.config.ServiceLoader $r1;
        java.util.List $r2;
        org.apache.tika.language.translate.Translator $r4;
        org.apache.tika.language.translate.DefaultTranslator r0;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.apache.tika.language.translate.DefaultTranslator;

        $r1 = r0.<org.apache.tika.language.translate.DefaultTranslator: org.apache.tika.config.ServiceLoader loader>;

        $r2 = staticinvoke <org.apache.tika.language.translate.DefaultTranslator: java.util.List getDefaultTranslators(org.apache.tika.config.ServiceLoader)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (org.apache.tika.language.translate.Translator) $r3;

        $z0 = interfaceinvoke $r4.<org.apache.tika.language.translate.Translator: boolean isAvailable()>();

        return $z0;
    }
}
