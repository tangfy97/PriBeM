public class org.springframework.beans.factory.config.CustomEditorConfigurer extends java.lang.Object implements org.springframework.beans.factory.config.BeanFactoryPostProcessor, org.springframework.beans.factory.BeanClassLoaderAware, org.springframework.core.Ordered
{
    protected final org.apache.commons.logging.Log logger;
    private int order;
    private org.springframework.beans.PropertyEditorRegistrar[] propertyEditorRegistrars;
    private java.util.Map customEditors;
    private boolean ignoreUnresolvableEditors;
    private java.lang.ClassLoader beanClassLoader;

    public void <init>()
    {
        java.lang.Class $r1;
        org.apache.commons.logging.Log $r2;
        java.lang.ClassLoader $r3;
        org.springframework.beans.factory.config.CustomEditorConfigurer r0;

        r0 := @this: org.springframework.beans.factory.config.CustomEditorConfigurer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        r0.<org.springframework.beans.factory.config.CustomEditorConfigurer: org.apache.commons.logging.Log logger> = $r2;

        r0.<org.springframework.beans.factory.config.CustomEditorConfigurer: int order> = 2147483647;

        r0.<org.springframework.beans.factory.config.CustomEditorConfigurer: boolean ignoreUnresolvableEditors> = 0;

        $r3 = staticinvoke <org.springframework.util.ClassUtils: java.lang.ClassLoader getDefaultClassLoader()>();

        r0.<org.springframework.beans.factory.config.CustomEditorConfigurer: java.lang.ClassLoader beanClassLoader> = $r3;

        return;
    }

    public void setOrder(int)
    {
        int i0;
        org.springframework.beans.factory.config.CustomEditorConfigurer r0;

        r0 := @this: org.springframework.beans.factory.config.CustomEditorConfigurer;

        i0 := @parameter0: int;

        r0.<org.springframework.beans.factory.config.CustomEditorConfigurer: int order> = i0;

        return;
    }

    public int getOrder()
    {
        int $i0;
        org.springframework.beans.factory.config.CustomEditorConfigurer r0;

        r0 := @this: org.springframework.beans.factory.config.CustomEditorConfigurer;

        $i0 = r0.<org.springframework.beans.factory.config.CustomEditorConfigurer: int order>;

        return $i0;
    }

    public void setPropertyEditorRegistrars(org.springframework.beans.PropertyEditorRegistrar[])
    {
        org.springframework.beans.PropertyEditorRegistrar[] r1;
        org.springframework.beans.factory.config.CustomEditorConfigurer r0;

        r0 := @this: org.springframework.beans.factory.config.CustomEditorConfigurer;

        r1 := @parameter0: org.springframework.beans.PropertyEditorRegistrar[];

        r0.<org.springframework.beans.factory.config.CustomEditorConfigurer: org.springframework.beans.PropertyEditorRegistrar[] propertyEditorRegistrars> = r1;

        return;
    }

    public void setCustomEditors(java.util.Map)
    {
        org.springframework.beans.factory.config.CustomEditorConfigurer r0;
        java.util.Map r1;

        r0 := @this: org.springframework.beans.factory.config.CustomEditorConfigurer;

        r1 := @parameter0: java.util.Map;

        r0.<org.springframework.beans.factory.config.CustomEditorConfigurer: java.util.Map customEditors> = r1;

        return;
    }

    public void setIgnoreUnresolvableEditors(boolean)
    {
        org.springframework.beans.factory.config.CustomEditorConfigurer r0;
        boolean z0;

        r0 := @this: org.springframework.beans.factory.config.CustomEditorConfigurer;

        z0 := @parameter0: boolean;

        r0.<org.springframework.beans.factory.config.CustomEditorConfigurer: boolean ignoreUnresolvableEditors> = z0;

        return;
    }

    public void setBeanClassLoader(java.lang.ClassLoader)
    {
        java.lang.ClassLoader r1;
        org.springframework.beans.factory.config.CustomEditorConfigurer r0;

        r0 := @this: org.springframework.beans.factory.config.CustomEditorConfigurer;

        r1 := @parameter0: java.lang.ClassLoader;

        r0.<org.springframework.beans.factory.config.CustomEditorConfigurer: java.lang.ClassLoader beanClassLoader> = r1;

        return;
    }

    public void postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory) throws org.springframework.beans.BeansException
    {
        java.util.Map $r2, $r3;
        java.util.Set $r4;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r16, $r19, $r20, $r30, $r32, $r33, $r34, $r39, $r41, $r43, $r45, $r46, $r47, $r48, $r49, $r50;
        java.lang.ClassLoader $r9, $r22;
        java.lang.String $r18, $r21, $r23, $r35, $r40, $r42, $r51, r54, $r56, $r57;
        java.util.Map$Entry r53;
        java.lang.ClassNotFoundException $r37;
        org.springframework.beans.factory.config.ConfigurableListableBeanFactory r25;
        org.springframework.beans.PropertyEditorRegistrar r52;
        org.springframework.beans.factory.config.CustomEditorConfigurer r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.springframework.beans.PropertyEditorRegistrar[] $r1, $r36;
        org.springframework.beans.factory.config.CustomEditorConfigurer$SharedPropertyEditorRegistrar $r28;
        int i0, i1;
        java.beans.PropertyEditor $r29;
        java.util.Iterator $r5;
        org.springframework.beans.FatalBeanException $r38;
        java.lang.IllegalArgumentException $r11;
        java.lang.Object $r6, $r7, $r8;
        java.lang.Class $r10, $r17, $r24, $r26, r55;
        org.apache.commons.logging.Log $r27, $r31, $r44;

        r0 := @this: org.springframework.beans.factory.config.CustomEditorConfigurer;

        r25 := @parameter0: org.springframework.beans.factory.config.ConfigurableListableBeanFactory;

        $r1 = r0.<org.springframework.beans.factory.config.CustomEditorConfigurer: org.springframework.beans.PropertyEditorRegistrar[] propertyEditorRegistrars>;

        if $r1 == null goto label03;

        $r36 = r0.<org.springframework.beans.factory.config.CustomEditorConfigurer: org.springframework.beans.PropertyEditorRegistrar[] propertyEditorRegistrars>;

        i0 = lengthof $r36;

        i1 = 0;

        goto label02;

     label01:
        r52 = $r36[i1];

        interfaceinvoke r25.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: void addPropertyEditorRegistrar(org.springframework.beans.PropertyEditorRegistrar)>(r52);

        i1 = i1 + 1;

     label02:
        if i1 < i0 goto label01;

     label03:
        $r2 = r0.<org.springframework.beans.factory.config.CustomEditorConfigurer: java.util.Map customEditors>;

        if $r2 == null goto label17;

        $r3 = r0.<org.springframework.beans.factory.config.CustomEditorConfigurer: java.util.Map customEditors>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        goto label16;

     label04:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r53 = (java.util.Map$Entry) $r6;

        $r7 = interfaceinvoke r53.<java.util.Map$Entry: java.lang.Object getKey()>();

        r54 = (java.lang.String) $r7;

        $r8 = interfaceinvoke r53.<java.util.Map$Entry: java.lang.Object getValue()>();

        r55 = null;

     label05:
        $r9 = r0.<org.springframework.beans.factory.config.CustomEditorConfigurer: java.lang.ClassLoader beanClassLoader>;

        $r10 = staticinvoke <org.springframework.util.ClassUtils: java.lang.Class forName(java.lang.String,java.lang.ClassLoader)>(r54, $r9);

        r55 = $r10;

        $z0 = $r8 instanceof java.beans.PropertyEditor;

        if $z0 == 0 goto label07;

        $r27 = r0.<org.springframework.beans.factory.config.CustomEditorConfigurer: org.apache.commons.logging.Log logger>;

        $z3 = interfaceinvoke $r27.<org.apache.commons.logging.Log: boolean isWarnEnabled()>();

        if $z3 == 0 goto label06;

        $r31 = r0.<org.springframework.beans.factory.config.CustomEditorConfigurer: org.apache.commons.logging.Log logger>;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>("Passing PropertyEditor instances into CustomEditorConfigurer is deprecated: use PropertyEditorRegistrars or PropertyEditor class names instead. Offending key [");

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r54);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; offending editor instance: ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r31.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r35);

     label06:
        $r28 = new org.springframework.beans.factory.config.CustomEditorConfigurer$SharedPropertyEditorRegistrar;

        $r29 = (java.beans.PropertyEditor) $r8;

        specialinvoke $r28.<org.springframework.beans.factory.config.CustomEditorConfigurer$SharedPropertyEditorRegistrar: void <init>(java.lang.Class,java.beans.PropertyEditor)>($r10, $r29);

        interfaceinvoke r25.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: void addPropertyEditorRegistrar(org.springframework.beans.PropertyEditorRegistrar)>($r28);

        goto label16;

     label07:
        $z1 = $r8 instanceof java.lang.Class;

        if $z1 == 0 goto label08;

        $r26 = (java.lang.Class) $r8;

        interfaceinvoke r25.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: void registerCustomEditor(java.lang.Class,java.lang.Class)>($r10, $r26);

        goto label16;

     label08:
        $z2 = $r8 instanceof java.lang.String;

        if $z2 == 0 goto label09;

        $r23 = (java.lang.String) $r8;

        $r22 = r0.<org.springframework.beans.factory.config.CustomEditorConfigurer: java.lang.ClassLoader beanClassLoader>;

        $r24 = staticinvoke <org.springframework.util.ClassUtils: java.lang.Class forName(java.lang.String,java.lang.ClassLoader)>($r23, $r22);

        staticinvoke <org.springframework.util.Assert: void isAssignable(java.lang.Class,java.lang.Class)>(class "Ljava/beans/PropertyEditor;", $r24);

        interfaceinvoke r25.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: void registerCustomEditor(java.lang.Class,java.lang.Class)>($r10, $r24);

        goto label16;

     label09:
        $r11 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Mapped value [");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] for custom editor key [");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r54);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] is not of required type [");

        $r17 = class "Ljava/beans/PropertyEditor;";

        $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] or a corresponding Class or String value indicating a PropertyEditor implementation");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw $r11;

     label10:
        $r37 := @caughtexception;

        $z4 = r0.<org.springframework.beans.factory.config.CustomEditorConfigurer: boolean ignoreUnresolvableEditors>;

        if $z4 == 0 goto label13;

        $r44 = r0.<org.springframework.beans.factory.config.CustomEditorConfigurer: org.apache.commons.logging.Log logger>;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>(java.lang.String)>("Skipping editor [");

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] for required type [");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r54);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        if r55 == null goto label11;

        $r56 = "editor";

        goto label12;

     label11:
        $r56 = "required type";

     label12:
        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" class not found.");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r44.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r51);

        goto label16;

     label13:
        $r38 = new org.springframework.beans.FatalBeanException;

        $r39 = new java.lang.StringBuilder;

        if r55 == null goto label14;

        $r57 = "Editor";

        goto label15;

     label14:
        $r57 = "Required type";

     label15:
        $r40 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r57);

        specialinvoke $r39.<java.lang.StringBuilder: void <init>(java.lang.String)>($r40);

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" class not found");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r38.<org.springframework.beans.FatalBeanException: void <init>(java.lang.String,java.lang.Throwable)>($r42, $r37);

        throw $r38;

     label16:
        $z5 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z5 != 0 goto label04;

     label17:
        return;

        catch java.lang.ClassNotFoundException from label05 to label10 with label10;
    }
}
