public class javax.activation.MailcapCommandMap extends javax.activation.CommandMap
{
    private final java.util.Map mimeTypes;
    private final java.util.Map preferredCommands;
    private final java.util.Map allCommands;
    private final java.util.Map nativeCommands;
    private final java.util.Map fallbackCommands;
    private java.net.URL url;

    public void <init>()
    {
        java.util.Enumeration $r10;
        java.net.URL $r12, $r13;
        java.lang.Thread $r6;
        java.lang.SecurityException $r16, $r19, $r22;
        boolean $z0;
        java.lang.ClassLoader $r7;
        java.lang.Throwable $r17, $r20, $r24, $r26;
        java.util.HashMap $r1, $r2, $r3, $r4, $r5;
        java.lang.String $r28, $r31;
        javax.activation.MailcapCommandMap r0;
        java.io.IOException $r15, $r18, $r21, $r23, $r25;
        java.io.FileInputStream $r29, $r32;
        java.io.File $r27, $r30;
        java.lang.Class $r8;
        java.lang.Object $r11;
        java.io.InputStream $r9, $r14;

        r0 := @this: javax.activation.MailcapCommandMap;

        specialinvoke r0.<javax.activation.CommandMap: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<javax.activation.MailcapCommandMap: java.util.Map mimeTypes> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<javax.activation.MailcapCommandMap: java.util.Map preferredCommands> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<javax.activation.MailcapCommandMap: java.util.Map allCommands> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<javax.activation.MailcapCommandMap: java.util.Map nativeCommands> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<javax.activation.MailcapCommandMap: java.util.Map fallbackCommands> = $r5;

        $r6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r7 = virtualinvoke $r6.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

     label01:
        $r8 = class "Ljavax/activation/MailcapCommandMap;";

        $r9 = virtualinvoke $r8.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("/META-INF/mailcap.default");

        if $r9 == null goto label06;

     label02:
        specialinvoke r0.<javax.activation.MailcapCommandMap: void parseMailcap(java.io.InputStream)>($r9);

     label03:
        virtualinvoke $r9.<java.io.InputStream: void close()>();

        goto label06;

     label04:
        $r26 := @caughtexception;

     label05:
        virtualinvoke $r9.<java.io.InputStream: void close()>();

        throw $r26;

     label06:
        goto label08;

     label07:
        $r25 := @caughtexception;

     label08:
        $r10 = virtualinvoke $r7.<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>("META-INF/mailcap");

     label09:
        $z0 = interfaceinvoke $r10.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label17;

        $r11 = interfaceinvoke $r10.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r12 = (java.net.URL) $r11;

        r0.<javax.activation.MailcapCommandMap: java.net.URL url> = $r12;

     label10:
        $r13 = r0.<javax.activation.MailcapCommandMap: java.net.URL url>;

        $r14 = virtualinvoke $r13.<java.net.URL: java.io.InputStream openStream()>();

     label11:
        specialinvoke r0.<javax.activation.MailcapCommandMap: void parseMailcap(java.io.InputStream)>($r14);

     label12:
        virtualinvoke $r14.<java.io.InputStream: void close()>();

        goto label15;

     label13:
        $r24 := @caughtexception;

     label14:
        virtualinvoke $r14.<java.io.InputStream: void close()>();

        throw $r24;

     label15:
        goto label09;

     label16:
        $r23 := @caughtexception;

        goto label09;

     label17:
        goto label20;

     label18:
        $r22 := @caughtexception;

        goto label20;

     label19:
        $r21 := @caughtexception;

     label20:
        $r27 = new java.io.File;

        $r28 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.home");

        specialinvoke $r27.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r28, "lib/mailcap");

        $r29 = new java.io.FileInputStream;

        specialinvoke $r29.<java.io.FileInputStream: void <init>(java.io.File)>($r27);

     label21:
        specialinvoke r0.<javax.activation.MailcapCommandMap: void parseMailcap(java.io.InputStream)>($r29);

     label22:
        virtualinvoke $r29.<java.io.InputStream: void close()>();

        goto label25;

     label23:
        $r20 := @caughtexception;

     label24:
        virtualinvoke $r29.<java.io.InputStream: void close()>();

        throw $r20;

     label25:
        goto label28;

     label26:
        $r19 := @caughtexception;

        goto label28;

     label27:
        $r18 := @caughtexception;

     label28:
        $r30 = new java.io.File;

        $r31 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.home");

        specialinvoke $r30.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r31, ".mailcap");

        $r32 = new java.io.FileInputStream;

        specialinvoke $r32.<java.io.FileInputStream: void <init>(java.io.File)>($r30);

     label29:
        specialinvoke r0.<javax.activation.MailcapCommandMap: void parseMailcap(java.io.InputStream)>($r32);

     label30:
        virtualinvoke $r32.<java.io.InputStream: void close()>();

        goto label33;

     label31:
        $r17 := @caughtexception;

     label32:
        virtualinvoke $r32.<java.io.InputStream: void close()>();

        throw $r17;

     label33:
        goto label36;

     label34:
        $r16 := @caughtexception;

        goto label36;

     label35:
        $r15 := @caughtexception;

     label36:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.io.IOException from label01 to label06 with label07;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
        catch java.io.IOException from label10 to label15 with label16;
        catch java.lang.SecurityException from label08 to label17 with label18;
        catch java.io.IOException from label08 to label17 with label19;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch java.lang.Throwable from label23 to label24 with label23;
        catch java.lang.SecurityException from label20 to label25 with label26;
        catch java.io.IOException from label20 to label25 with label27;
        catch java.lang.Throwable from label29 to label30 with label31;
        catch java.lang.Throwable from label31 to label32 with label31;
        catch java.lang.SecurityException from label28 to label33 with label34;
        catch java.io.IOException from label28 to label33 with label35;
    }

    public void <init>(java.lang.String) throws java.io.IOException
    {
        java.lang.Throwable $r3;
        javax.activation.MailcapCommandMap r0;
        java.io.FileReader $r1;
        java.lang.String r2;

        r0 := @this: javax.activation.MailcapCommandMap;

        r2 := @parameter0: java.lang.String;

        specialinvoke r0.<javax.activation.MailcapCommandMap: void <init>()>();

        $r1 = new java.io.FileReader;

        specialinvoke $r1.<java.io.FileReader: void <init>(java.lang.String)>(r2);

     label1:
        virtualinvoke r0.<javax.activation.MailcapCommandMap: void parseMailcap(java.io.Reader)>($r1);

     label2:
        virtualinvoke $r1.<java.io.FileReader: void close()>();

        goto label5;

     label3:
        $r3 := @caughtexception;

     label4:
        virtualinvoke $r1.<java.io.FileReader: void close()>();

        throw $r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void <init>(java.io.InputStream)
    {
        javax.activation.MailcapCommandMap r0;
        java.io.InputStream r1;

        r0 := @this: javax.activation.MailcapCommandMap;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<javax.activation.MailcapCommandMap: void <init>()>();

        specialinvoke r0.<javax.activation.MailcapCommandMap: void parseMailcap(java.io.InputStream)>(r1);

        return;
    }

    private void parseMailcap(java.io.InputStream)
    {
        javax.activation.MailcapCommandMap r0;
        java.io.IOException $r3;
        java.io.InputStreamReader $r1;
        java.io.InputStream r2;

        r0 := @this: javax.activation.MailcapCommandMap;

        r2 := @parameter0: java.io.InputStream;

     label1:
        $r1 = new java.io.InputStreamReader;

        specialinvoke $r1.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r2);

        virtualinvoke r0.<javax.activation.MailcapCommandMap: void parseMailcap(java.io.Reader)>($r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    void parseMailcap(java.io.Reader) throws java.io.IOException
    {
        javax.activation.MailcapCommandMap r3;
        java.io.BufferedReader $r0;
        java.io.Reader r1;
        java.lang.String $r2;

        r3 := @this: javax.activation.MailcapCommandMap;

        r1 := @parameter0: java.io.Reader;

        $r0 = new java.io.BufferedReader;

        specialinvoke $r0.<java.io.BufferedReader: void <init>(java.io.Reader)>(r1);

     label1:
        $r2 = virtualinvoke $r0.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r2 == null goto label2;

        virtualinvoke r3.<javax.activation.MailcapCommandMap: void addMailcap(java.lang.String)>($r2);

        goto label1;

     label2:
        return;
    }

    public synchronized void addMailcap(java.lang.String)
    {
        java.util.Map $r7, $r16;
        javax.activation.CommandInfo $r30;
        java.lang.StringBuilder $r4, $r5, $r19, $r20, $r22, $r26, $r27;
        java.util.ArrayList $r17, r24, $r28, $r29;
        java.lang.String r1, $r2, $r6, $r9, $r10, $r11, $r12, $r13, $r21, r23;
        boolean $z0, $z1, $z2, z3;
        int $i0, $i1, $i3, $i4, $i5, $i8, $i9, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19, $i21, $i22, $i23, $i24, $i26, $i27, i28, i29, i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38;
        javax.activation.MailcapCommandMap r0;
        char $c2, $c6, $c7, $c10, $c14, $c20, $c25;
        java.lang.Object $r8;

        r0 := @this: javax.activation.MailcapCommandMap;

        r1 := @parameter0: java.lang.String;

        $i0 = specialinvoke r0.<javax.activation.MailcapCommandMap: int skipSpace(java.lang.String,int)>(r1, 0);

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 == $i1 goto label01;

        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i0);

        $i32 = (int) $c2;

        if $i32 != 35 goto label02;

     label01:
        return;

     label02:
        $i3 = specialinvoke r0.<javax.activation.MailcapCommandMap: int getToken(java.lang.String,int)>(r1, $i0);

        if $i0 != $i3 goto label03;

        return;

     label03:
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i3);

        $i4 = specialinvoke r0.<javax.activation.MailcapCommandMap: int skipSpace(java.lang.String,int)>(r1, $i3);

        i28 = $i4;

        $i5 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i4 == $i5 goto label04;

        $c6 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i4);

        $i33 = (int) $c6;

        if $i33 != 35 goto label05;

     label04:
        return;

     label05:
        $c7 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i4);

        $i34 = (int) $c7;

        if $i34 != 47 goto label06;

        i29 = $i4 + 1;

        $i26 = specialinvoke r0.<javax.activation.MailcapCommandMap: int skipSpace(java.lang.String,int)>(r1, i29);

        $i27 = specialinvoke r0.<javax.activation.MailcapCommandMap: int getToken(java.lang.String,int)>(r1, $i26);

        i28 = $i27;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r21 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i26, $i27);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label07;

     label06:
        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/*");

        r23 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
        $r6 = virtualinvoke r23.<java.lang.String: java.lang.String toLowerCase()>();

        $i8 = specialinvoke r0.<javax.activation.MailcapCommandMap: int skipSpace(java.lang.String,int)>(r1, i28);

        $i9 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i8 == $i9 goto label08;

        $c10 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i8);

        $i35 = (int) $c10;

        if $i35 == 59 goto label09;

     label08:
        return;

     label09:
        $i11 = $i8 + 1;

        $i12 = specialinvoke r0.<javax.activation.MailcapCommandMap: int skipSpace(java.lang.String,int)>(r1, $i11);

        i30 = $i12;

        $i13 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i12 == $i13 goto label10;

        $c25 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i12);

        $i36 = (int) $c25;

        if $i36 == 59 goto label12;

     label10:
        $r7 = r0.<javax.activation.MailcapCommandMap: java.util.Map nativeCommands>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r17 = (java.util.ArrayList) $r8;

        r24 = $r17;

        if $r17 != null goto label11;

        $r28 = new java.util.ArrayList;

        specialinvoke $r28.<java.util.ArrayList: void <init>()>();

        r24 = $r28;

        $r16 = r0.<javax.activation.MailcapCommandMap: java.util.Map nativeCommands>;

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r28);

     label11:
        virtualinvoke r24.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        i30 = specialinvoke r0.<javax.activation.MailcapCommandMap: int getMText(java.lang.String,int)>(r1, $i12);

     label12:
        $r29 = new java.util.ArrayList;

        specialinvoke $r29.<java.util.ArrayList: void <init>()>();

        z3 = 0;

     label13:
        $i31 = virtualinvoke r1.<java.lang.String: int length()>();

        if i30 >= $i31 goto label16;

        $c14 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i30);

        $i37 = (int) $c14;

        if $i37 != 59 goto label16;

        $i15 = i30 + 1;

        $i16 = specialinvoke r0.<javax.activation.MailcapCommandMap: int skipSpace(java.lang.String,int)>(r1, $i15);

        $i17 = specialinvoke r0.<javax.activation.MailcapCommandMap: int getToken(java.lang.String,int)>(r1, $i16);

        $r9 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i16, $i17);

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String toLowerCase()>();

        $i18 = specialinvoke r0.<javax.activation.MailcapCommandMap: int skipSpace(java.lang.String,int)>(r1, $i17);

        i30 = $i18;

        $i19 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i18 >= $i19 goto label15;

        $c20 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i18);

        $i38 = (int) $c20;

        if $i38 != 61 goto label15;

        $i21 = $i18 + 1;

        $i22 = specialinvoke r0.<javax.activation.MailcapCommandMap: int skipSpace(java.lang.String,int)>(r1, $i21);

        $i23 = specialinvoke r0.<javax.activation.MailcapCommandMap: int getMText(java.lang.String,int)>(r1, $i22);

        $r11 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i22, $i23);

        i30 = specialinvoke r0.<javax.activation.MailcapCommandMap: int skipSpace(java.lang.String,int)>(r1, $i23);

        $z0 = virtualinvoke $r10.<java.lang.String: boolean startsWith(java.lang.String)>("x-java-");

        if $z0 == 0 goto label15;

        $i24 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i24 <= 7 goto label15;

        $r12 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int)>(7);

        $r13 = virtualinvoke $r11.<java.lang.String: java.lang.String trim()>();

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("fallback-entry");

        if $z1 == 0 goto label14;

        $z2 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("true");

        if $z2 == 0 goto label15;

        z3 = 1;

        goto label15;

     label14:
        $r30 = new javax.activation.CommandInfo;

        specialinvoke $r30.<javax.activation.CommandInfo: void <init>(java.lang.String,java.lang.String)>($r12, $r13);

        interfaceinvoke $r29.<java.util.List: boolean add(java.lang.Object)>($r30);

     label15:
        goto label13;

     label16:
        specialinvoke r0.<javax.activation.MailcapCommandMap: void addCommands(java.lang.String,java.util.List,boolean)>($r6, $r29, z3);

        return;
    }

    private void addCommands(java.lang.String, java.util.List, boolean)
    {
        java.util.ArrayList $r10;
        java.util.Map $r2, r3, $r8, $r11, $r12;
        java.lang.String r1;
        boolean z0, $z1;
        javax.activation.MailcapCommandMap r0;
        java.util.Iterator $r5;
        java.util.List r4, r13;
        javax.activation.CommandInfo r7;
        java.lang.Object $r6, $r9;

        r0 := @this: javax.activation.MailcapCommandMap;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.util.List;

        z0 := @parameter2: boolean;

        $r2 = r0.<javax.activation.MailcapCommandMap: java.util.Map mimeTypes>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r1);

        if z0 == 0 goto label1;

        $r12 = r0.<javax.activation.MailcapCommandMap: java.util.Map fallbackCommands>;

        goto label2;

     label1:
        $r12 = r0.<javax.activation.MailcapCommandMap: java.util.Map preferredCommands>;

     label2:
        r3 = $r12;

        $r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (javax.activation.CommandInfo) $r6;

        specialinvoke r0.<javax.activation.MailcapCommandMap: void addCommand(java.util.Map,java.lang.String,javax.activation.CommandInfo)>(r3, r1, r7);

        if z0 != 0 goto label5;

        $r8 = r0.<javax.activation.MailcapCommandMap: java.util.Map allCommands>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r13 = (java.util.List) $r9;

        if r13 != null goto label4;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r13 = $r10;

        $r11 = r0.<javax.activation.MailcapCommandMap: java.util.Map allCommands>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10);

     label4:
        interfaceinvoke r13.<java.util.List: boolean add(java.lang.Object)>(r7);

     label5:
        goto label3;

     label6:
        return;
    }

    private void addCommand(java.util.Map, java.lang.String, javax.activation.CommandInfo)
    {
        javax.activation.MailcapCommandMap r6;
        java.util.HashMap $r5;
        javax.activation.CommandInfo r3;
        java.util.Map r0, r7;
        java.lang.Object $r2;
        java.lang.String r1, $r4;

        r6 := @this: javax.activation.MailcapCommandMap;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: javax.activation.CommandInfo;

        $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r7 = (java.util.Map) $r2;

        if r7 != null goto label1;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r7 = $r5;

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

     label1:
        $r4 = virtualinvoke r3.<javax.activation.CommandInfo: java.lang.String getCommandName()>();

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r3);

        return;
    }

    private int skipSpace(java.lang.String, int)
    {
        javax.activation.MailcapCommandMap r1;
        int $i0, i2;
        char $c1;
        java.lang.String r0;
        boolean $z0;

        r1 := @this: javax.activation.MailcapCommandMap;

        r0 := @parameter0: java.lang.String;

        i2 := @parameter1: int;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i2 >= $i0 goto label2;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c1);

        if $z0 == 0 goto label2;

        i2 = i2 + 1;

        goto label1;

     label2:
        return i2;
    }

    private int getToken(java.lang.String, int)
    {
        javax.activation.MailcapCommandMap r1;
        char $c1, $c2;
        int $i0, i3, $i4;
        java.lang.String r0;
        boolean $z0;

        r1 := @this: javax.activation.MailcapCommandMap;

        r0 := @parameter0: java.lang.String;

        i3 := @parameter1: int;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i3 >= $i0 goto label2;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $i4 = (int) $c1;

        if $i4 == 35 goto label2;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $z0 = staticinvoke <javax.activation.MimeType: boolean isSpecial(char)>($c2);

        if $z0 != 0 goto label2;

        i3 = i3 + 1;

        goto label1;

     label2:
        return i3;
    }

    private int getMText(java.lang.String, int)
    {
        javax.activation.MailcapCommandMap r1;
        char $c1;
        int $i0, $i2, i3, $i4, $i5, $i6;
        java.lang.String r0;
        boolean $z0;

        r1 := @this: javax.activation.MailcapCommandMap;

        r0 := @parameter0: java.lang.String;

        i3 := @parameter1: int;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i3 >= $i0 goto label5;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $i4 = (int) $c1;

        if $i4 == 35 goto label2;

        $i5 = (int) $c1;

        if $i5 == 59 goto label2;

        $z0 = staticinvoke <java.lang.Character: boolean isISOControl(char)>($c1);

        if $z0 == 0 goto label3;

     label2:
        return i3;

     label3:
        $i6 = (int) $c1;

        if $i6 != 92 goto label4;

        i3 = i3 + 1;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if i3 != $i2 goto label4;

        return i3;

     label4:
        i3 = i3 + 1;

        goto label1;

     label5:
        return i3;
    }

    public synchronized javax.activation.CommandInfo[] getPreferredCommands(java.lang.String)
    {
        javax.activation.CommandInfo[] $r6, $r8, $r9, $r10;
        java.lang.Object[] $r7;
        java.util.Map $r2, $r4, $r11, r15;
        int $i0;
        java.lang.String $r0, $r12, r14;
        javax.activation.MailcapCommandMap r1;
        java.util.Collection $r5;
        java.lang.Object $r3, $r13;

        r1 := @this: javax.activation.MailcapCommandMap;

        r14 := @parameter0: java.lang.String;

        $r0 = virtualinvoke r14.<java.lang.String: java.lang.String toLowerCase()>();

        $r2 = r1.<javax.activation.MailcapCommandMap: java.util.Map preferredCommands>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        r15 = (java.util.Map) $r3;

        if r15 != null goto label1;

        $r11 = r1.<javax.activation.MailcapCommandMap: java.util.Map preferredCommands>;

        $r12 = specialinvoke r1.<javax.activation.MailcapCommandMap: java.lang.String getWildcardMimeType(java.lang.String)>($r0);

        $r13 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r12);

        r15 = (java.util.Map) $r13;

     label1:
        $r4 = specialinvoke r1.<javax.activation.MailcapCommandMap: java.util.Map getFallbackCommands(java.lang.String)>($r0);

        if $r4 == null goto label3;

        if r15 != null goto label2;

        r15 = $r4;

        goto label3;

     label2:
        r15 = specialinvoke r1.<javax.activation.MailcapCommandMap: java.util.Map mergeCommandMaps(java.util.Map,java.util.Map)>(r15, $r4);

     label3:
        if r15 != null goto label4;

        $r10 = newarray (javax.activation.CommandInfo)[0];

        return $r10;

     label4:
        $r5 = interfaceinvoke r15.<java.util.Map: java.util.Collection values()>();

        $i0 = interfaceinvoke r15.<java.util.Map: int size()>();

        $r6 = newarray (javax.activation.CommandInfo)[$i0];

        $r7 = interfaceinvoke $r5.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r8 = (javax.activation.CommandInfo[]) $r7;

        $r9 = (javax.activation.CommandInfo[]) $r8;

        return $r9;
    }

    private java.util.Map getFallbackCommands(java.lang.String)
    {
        javax.activation.MailcapCommandMap r0;
        java.util.Map $r2, r4, $r5, r8, $r9;
        java.lang.Object $r3, $r7;
        java.lang.String r1, $r6;

        r0 := @this: javax.activation.MailcapCommandMap;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<javax.activation.MailcapCommandMap: java.util.Map fallbackCommands>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.Map) $r3;

        $r5 = r0.<javax.activation.MailcapCommandMap: java.util.Map fallbackCommands>;

        $r6 = specialinvoke r0.<javax.activation.MailcapCommandMap: java.lang.String getWildcardMimeType(java.lang.String)>(r1);

        $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        r8 = (java.util.Map) $r7;

        if r8 != null goto label1;

        return r4;

     label1:
        $r9 = specialinvoke r0.<javax.activation.MailcapCommandMap: java.util.Map mergeCommandMaps(java.util.Map,java.util.Map)>(r4, r8);

        return $r9;
    }

    private java.util.Map mergeCommandMaps(java.util.Map, java.util.Map)
    {
        javax.activation.MailcapCommandMap r3;
        java.util.Map r1, r2;
        java.util.HashMap $r0;

        r3 := @this: javax.activation.MailcapCommandMap;

        r2 := @parameter0: java.util.Map;

        r1 := @parameter1: java.util.Map;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>(java.util.Map)>(r1);

        interfaceinvoke $r0.<java.util.Map: void putAll(java.util.Map)>(r2);

        return $r0;
    }

    public synchronized javax.activation.CommandInfo[] getAllCommands(java.lang.String)
    {
        java.util.Map $r2, $r4, $r7, r23;
        boolean $z0;
        java.util.Set $r8;
        java.util.List $r19, r21, r22;
        javax.activation.CommandInfo $r13, $r15, $r17;
        javax.activation.CommandInfo[] $r18;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, $i11, i12;
        java.lang.String $r0, $r5, $r11, r20;
        javax.activation.MailcapCommandMap r1;
        java.util.Iterator $r9;
        java.lang.Object $r3, $r6, $r10, $r12, $r14, $r16;

        r1 := @this: javax.activation.MailcapCommandMap;

        r20 := @parameter0: java.lang.String;

        $r0 = virtualinvoke r20.<java.lang.String: java.lang.String toLowerCase()>();

        $r2 = r1.<javax.activation.MailcapCommandMap: java.util.Map allCommands>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        r21 = (java.util.List) $r3;

        if r21 != null goto label1;

        r21 = <java.util.Collections: java.util.List EMPTY_LIST>;

     label1:
        $r4 = r1.<javax.activation.MailcapCommandMap: java.util.Map allCommands>;

        $r5 = specialinvoke r1.<javax.activation.MailcapCommandMap: java.lang.String getWildcardMimeType(java.lang.String)>($r0);

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r19 = (java.util.List) $r6;

        r22 = $r19;

        if $r19 != null goto label2;

        r22 = <java.util.Collections: java.util.List EMPTY_LIST>;

     label2:
        $r7 = specialinvoke r1.<javax.activation.MailcapCommandMap: java.util.Map getFallbackCommands(java.lang.String)>($r0);

        r23 = $r7;

        if $r7 != null goto label3;

        r23 = <java.util.Collections: java.util.Map EMPTY_MAP>;

     label3:
        $i0 = interfaceinvoke r21.<java.util.List: int size()>();

        $i1 = interfaceinvoke r22.<java.util.List: int size()>();

        $i2 = $i0 + $i1;

        $i3 = interfaceinvoke r23.<java.util.Map: int size()>();

        $i4 = $i2 + $i3;

        $r18 = newarray (javax.activation.CommandInfo)[$i4];

        i9 = 0;

        i10 = 0;

     label4:
        $i11 = interfaceinvoke r21.<java.util.List: int size()>();

        if i10 >= $i11 goto label5;

        $i8 = i9;

        i9 = i9 + 1;

        $r16 = interfaceinvoke r21.<java.util.List: java.lang.Object get(int)>(i10);

        $r17 = (javax.activation.CommandInfo) $r16;

        $r18[$i8] = $r17;

        i10 = i10 + 1;

        goto label4;

     label5:
        i12 = 0;

     label6:
        $i5 = interfaceinvoke r22.<java.util.List: int size()>();

        if i12 >= $i5 goto label7;

        $i7 = i9;

        i9 = i9 + 1;

        $r14 = interfaceinvoke r22.<java.util.List: java.lang.Object get(int)>(i12);

        $r15 = (javax.activation.CommandInfo) $r14;

        $r18[$i7] = $r15;

        i12 = i12 + 1;

        goto label6;

     label7:
        $r8 = interfaceinvoke r23.<java.util.Map: java.util.Set keySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label8:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $i6 = i9;

        i9 = i9 + 1;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (java.lang.String) $r10;

        $r12 = interfaceinvoke r23.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);

        $r13 = (javax.activation.CommandInfo) $r12;

        $r18[$i6] = $r13;

        goto label8;

     label9:
        return $r18;
    }

    public synchronized javax.activation.CommandInfo getCommand(java.lang.String, java.lang.String)
    {
        java.util.Map $r2, $r5, $r8, $r10, $r14, r17;
        int $i0, $i2;
        java.lang.String $r0, r4, $r6, $r11, $r13, r15, r16, $r18;
        javax.activation.MailcapCommandMap r1;
        javax.activation.CommandInfo $r20;
        java.lang.Object $r3, $r7, $r9, $r12, $r19;

        r1 := @this: javax.activation.MailcapCommandMap;

        r15 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r0 = virtualinvoke r15.<java.lang.String: java.lang.String toLowerCase()>();

        r16 = $r0;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(59);

        $i2 = (int) -1;

        if $i0 == $i2 goto label1;

        $r13 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        r16 = virtualinvoke $r13.<java.lang.String: java.lang.String trim()>();

     label1:
        $r2 = r1.<javax.activation.MailcapCommandMap: java.util.Map preferredCommands>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r16);

        $r14 = (java.util.Map) $r3;

        r17 = $r14;

        if $r14 != null goto label3;

        $r5 = r1.<javax.activation.MailcapCommandMap: java.util.Map preferredCommands>;

        $r6 = specialinvoke r1.<javax.activation.MailcapCommandMap: java.lang.String getWildcardMimeType(java.lang.String)>(r16);

        $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        r17 = (java.util.Map) $r7;

        if r17 != null goto label3;

        $r8 = r1.<javax.activation.MailcapCommandMap: java.util.Map fallbackCommands>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r16);

        r17 = (java.util.Map) $r9;

        if r17 != null goto label2;

        $r10 = r1.<javax.activation.MailcapCommandMap: java.util.Map fallbackCommands>;

        $r11 = specialinvoke r1.<javax.activation.MailcapCommandMap: java.lang.String getWildcardMimeType(java.lang.String)>(r16);

        $r12 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);

        r17 = (java.util.Map) $r12;

     label2:
        if r17 != null goto label3;

        return null;

     label3:
        $r18 = virtualinvoke r4.<java.lang.String: java.lang.String toLowerCase()>();

        $r19 = interfaceinvoke r17.<java.util.Map: java.lang.Object get(java.lang.Object)>($r18);

        $r20 = (javax.activation.CommandInfo) $r19;

        return $r20;
    }

    private java.lang.String getWildcardMimeType(java.lang.String)
    {
        javax.activation.MailcapCommandMap r10;
        int $i0, $i1, $i3;
        java.lang.StringBuilder $r3, $r4, $r7, $r8, $r11, $r12;
        java.lang.String r0, $r2, $r5, $r9;

        r10 := @this: javax.activation.MailcapCommandMap;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(47);

        $i3 = (int) -1;

        if $i0 != $i3 goto label1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/*");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;

     label1:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $i1 = $i0 + 1;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $r3 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public synchronized javax.activation.DataContentHandler createDataContentHandler(java.lang.String)
    {
        javax.activation.MailcapCommandMap r0;
        java.lang.IllegalAccessException $r12;
        javax.activation.CommandInfo $r2;
        java.lang.Thread $r3;
        java.lang.InstantiationException $r11;
        java.lang.Class $r6, $r7, $r10;
        java.lang.Object $r8;
        java.lang.ClassNotFoundException $r13;
        java.lang.String r1, $r5;
        java.lang.ClassLoader $r4, r14;
        javax.activation.DataContentHandler $r9;

        r0 := @this: javax.activation.MailcapCommandMap;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<javax.activation.MailcapCommandMap: javax.activation.CommandInfo getCommand(java.lang.String,java.lang.String)>(r1, "content-handler");

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r4 = virtualinvoke $r3.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        r14 = $r4;

        if $r4 != null goto label2;

        $r10 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r14 = virtualinvoke $r10.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label2:
        $r5 = virtualinvoke $r2.<javax.activation.CommandInfo: java.lang.String getCommandClass()>();

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = staticinvoke <org.apache.geronimo.osgi.locator.ProviderLocator: java.lang.Class loadClass(java.lang.String,java.lang.Class,java.lang.ClassLoader)>($r5, $r6, r14);

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.Object newInstance()>();

        $r9 = (javax.activation.DataContentHandler) $r8;

     label3:
        return $r9;

     label4:
        $r13 := @caughtexception;

        return null;

     label5:
        $r12 := @caughtexception;

        return null;

     label6:
        $r11 := @caughtexception;

        return null;

        catch java.lang.ClassNotFoundException from label2 to label3 with label4;
        catch java.lang.IllegalAccessException from label2 to label3 with label5;
        catch java.lang.InstantiationException from label2 to label3 with label6;
    }

    public synchronized java.lang.String[] getMimeTypes()
    {
        javax.activation.MailcapCommandMap r1;
        java.lang.Object[] $r5;
        java.util.Collection $r3;
        java.lang.String[] $r4, $r6, $r7;
        java.util.ArrayList $r0;
        java.util.Map $r2;
        int $i0;

        r1 := @this: javax.activation.MailcapCommandMap;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<javax.activation.MailcapCommandMap: java.util.Map mimeTypes>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        $i0 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        $r4 = newarray (java.lang.String)[$i0];

        $r5 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (java.lang.String[]) $r5;

        $r7 = (java.lang.String[]) $r6;

        return $r7;
    }

    public synchronized java.lang.String[] getNativeCommands(java.lang.String)
    {
        javax.activation.MailcapCommandMap r0;
        java.lang.Object[] $r7;
        java.lang.String[] $r6, $r8, $r9, $r10;
        java.util.ArrayList r5;
        java.util.Map $r2;
        int $i0;
        java.lang.Object $r4;
        java.lang.String r1, $r3;

        r0 := @this: javax.activation.MailcapCommandMap;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<javax.activation.MailcapCommandMap: java.util.Map nativeCommands>;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r5 = (java.util.ArrayList) $r4;

        if r5 != null goto label1;

        $r10 = newarray (java.lang.String)[0];

        return $r10;

     label1:
        $i0 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        $r6 = newarray (java.lang.String)[$i0];

        $r7 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r8 = (java.lang.String[]) $r7;

        $r9 = (java.lang.String[]) $r8;

        return $r9;
    }
}
