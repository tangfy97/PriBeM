public class org.jdesktop.swingx.painter.RectanglePainter extends org.jdesktop.swingx.painter.AbstractAreaPainter
{
    private boolean rounded;
    private int roundWidth;
    private int roundHeight;
    private int width;
    private int height;

    public void <init>()
    {
        java.awt.Color $r1, $r2;
        org.jdesktop.swingx.painter.RectanglePainter r0;

        r0 := @this: org.jdesktop.swingx.painter.RectanglePainter;

        $r2 = <java.awt.Color: java.awt.Color RED>;

        $r1 = <java.awt.Color: java.awt.Color BLACK>;

        specialinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: void <init>(int,int,int,int,int,int,boolean,java.awt.Paint,float,java.awt.Paint)>(0, 0, 0, 0, 0, 0, 0, $r2, 1.0F, $r1);

        return;
    }

    public void <init>(java.awt.Color, java.awt.Color)
    {
        java.awt.Color r1, r2;
        org.jdesktop.swingx.painter.RectanglePainter r0;

        r0 := @this: org.jdesktop.swingx.painter.RectanglePainter;

        r1 := @parameter0: java.awt.Color;

        r2 := @parameter1: java.awt.Color;

        specialinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: void <init>(int,int,int,int,int,int,boolean,java.awt.Paint,float,java.awt.Paint)>(0, 0, 0, 0, 0, 0, 0, r1, 1.0F, r2);

        return;
    }

    public void <init>(java.awt.Paint, java.awt.Paint, float, org.jdesktop.swingx.painter.AbstractAreaPainter$Style)
    {
        org.jdesktop.swingx.painter.RectanglePainter r0;
        java.awt.Paint r1, r2;
        float f0;
        org.jdesktop.swingx.painter.AbstractAreaPainter$Style r3;

        r0 := @this: org.jdesktop.swingx.painter.RectanglePainter;

        r1 := @parameter0: java.awt.Paint;

        r2 := @parameter1: java.awt.Paint;

        f0 := @parameter2: float;

        r3 := @parameter3: org.jdesktop.swingx.painter.AbstractAreaPainter$Style;

        specialinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: void <init>()>();

        virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: void setFillPaint(java.awt.Paint)>(r1);

        virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: void setBorderPaint(java.awt.Paint)>(r2);

        virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: void setBorderWidth(float)>(f0);

        virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: void setStyle(org.jdesktop.swingx.painter.AbstractAreaPainter$Style)>(r3);

        return;
    }

    public void <init>(int, int, int, int)
    {
        java.awt.Color $r1, $r2;
        org.jdesktop.swingx.painter.RectanglePainter r0;
        int i0, i1, i2, i3;

        r0 := @this: org.jdesktop.swingx.painter.RectanglePainter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r2 = <java.awt.Color: java.awt.Color RED>;

        $r1 = <java.awt.Color: java.awt.Color BLACK>;

        specialinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: void <init>(int,int,int,int,int,int,boolean,java.awt.Paint,float,java.awt.Paint)>(i0, i1, i2, i3, 0, 0, 0, $r2, 1.0F, $r1);

        return;
    }

    public void <init>(int, int, int, int, int, int)
    {
        java.awt.Color $r1, $r2;
        org.jdesktop.swingx.painter.RectanglePainter r0;
        int i0, i1, i2, i3, i4, i5;

        r0 := @this: org.jdesktop.swingx.painter.RectanglePainter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        $r2 = <java.awt.Color: java.awt.Color RED>;

        $r1 = <java.awt.Color: java.awt.Color BLACK>;

        specialinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: void <init>(int,int,int,int,int,int,boolean,java.awt.Paint,float,java.awt.Paint)>(i0, i1, i2, i3, i4, i5, 1, $r2, 1.0F, $r1);

        return;
    }

    public void <init>(int, int, int, java.awt.Paint)
    {
        java.awt.Color $r3;
        org.jdesktop.swingx.painter.RectanglePainter r0;
        java.awt.Insets $r1;
        java.awt.Paint r2;
        int i0, i1, i2;

        r0 := @this: org.jdesktop.swingx.painter.RectanglePainter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r2 := @parameter3: java.awt.Paint;

        $r1 = new java.awt.Insets;

        specialinvoke $r1.<java.awt.Insets: void <init>(int,int,int,int)>(0, 0, 0, 0);

        $r3 = <java.awt.Color: java.awt.Color BLACK>;

        specialinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: void <init>(java.awt.Insets,int,int,int,int,boolean,java.awt.Paint,float,java.awt.Paint)>($r1, i0, i1, i2, i2, 1, r2, 1.0F, $r3);

        return;
    }

    public void <init>(java.awt.Insets, int, int, int, int, boolean, java.awt.Paint, float, java.awt.Paint)
    {
        org.jdesktop.swingx.painter.RectanglePainter r0;
        java.awt.Insets r1;
        java.awt.Paint r2, r3;
        int i0, i1, i2, i3, $i5, $i7;
        float f0;
        boolean z0;

        r0 := @this: org.jdesktop.swingx.painter.RectanglePainter;

        r1 := @parameter0: java.awt.Insets;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        z0 := @parameter5: boolean;

        r2 := @parameter6: java.awt.Paint;

        f0 := @parameter7: float;

        r3 := @parameter8: java.awt.Paint;

        specialinvoke r0.<org.jdesktop.swingx.painter.AbstractAreaPainter: void <init>()>();

        r0.<org.jdesktop.swingx.painter.RectanglePainter: boolean rounded> = 0;

        r0.<org.jdesktop.swingx.painter.RectanglePainter: int roundWidth> = 20;

        r0.<org.jdesktop.swingx.painter.RectanglePainter: int roundHeight> = 20;

        $i5 = (int) -1;

        r0.<org.jdesktop.swingx.painter.RectanglePainter: int width> = $i5;

        $i7 = (int) -1;

        r0.<org.jdesktop.swingx.painter.RectanglePainter: int height> = $i7;

        r0.<org.jdesktop.swingx.painter.RectanglePainter: int width> = i0;

        r0.<org.jdesktop.swingx.painter.RectanglePainter: int height> = i1;

        virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: void setFillHorizontal(boolean)>(0);

        virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: void setFillVertical(boolean)>(0);

        virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: void setInsets(java.awt.Insets)>(r1);

        r0.<org.jdesktop.swingx.painter.RectanglePainter: int roundWidth> = i2;

        r0.<org.jdesktop.swingx.painter.RectanglePainter: int roundHeight> = i3;

        r0.<org.jdesktop.swingx.painter.RectanglePainter: boolean rounded> = z0;

        virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: void setFillPaint(java.awt.Paint)>(r2);

        virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: void setBorderWidth(float)>(f0);

        virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: void setBorderPaint(java.awt.Paint)>(r3);

        return;
    }

    public void <init>(int, int, int, int, int, int, boolean, java.awt.Paint, float, java.awt.Paint)
    {
        org.jdesktop.swingx.painter.RectanglePainter r0;
        java.awt.Insets $r4;
        java.awt.Paint r2, r3;
        int i0, i1, i2, i3, i4, i5, $i7, $i9;
        float f0;
        boolean z0;

        r0 := @this: org.jdesktop.swingx.painter.RectanglePainter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        z0 := @parameter6: boolean;

        r2 := @parameter7: java.awt.Paint;

        f0 := @parameter8: float;

        r3 := @parameter9: java.awt.Paint;

        specialinvoke r0.<org.jdesktop.swingx.painter.AbstractAreaPainter: void <init>()>();

        r0.<org.jdesktop.swingx.painter.RectanglePainter: boolean rounded> = 0;

        r0.<org.jdesktop.swingx.painter.RectanglePainter: int roundWidth> = 20;

        r0.<org.jdesktop.swingx.painter.RectanglePainter: int roundHeight> = 20;

        $i7 = (int) -1;

        r0.<org.jdesktop.swingx.painter.RectanglePainter: int width> = $i7;

        $i9 = (int) -1;

        r0.<org.jdesktop.swingx.painter.RectanglePainter: int height> = $i9;

        $r4 = new java.awt.Insets;

        specialinvoke $r4.<java.awt.Insets: void <init>(int,int,int,int)>(i0, i1, i2, i3);

        virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: void setInsets(java.awt.Insets)>($r4);

        virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: void setFillVertical(boolean)>(1);

        virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: void setFillHorizontal(boolean)>(1);

        r0.<org.jdesktop.swingx.painter.RectanglePainter: int roundWidth> = i4;

        r0.<org.jdesktop.swingx.painter.RectanglePainter: int roundHeight> = i5;

        r0.<org.jdesktop.swingx.painter.RectanglePainter: boolean rounded> = z0;

        virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: void setFillPaint(java.awt.Paint)>(r2);

        virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: void setBorderWidth(float)>(f0);

        virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: void setBorderPaint(java.awt.Paint)>(r3);

        return;
    }

    public boolean isRounded()
    {
        org.jdesktop.swingx.painter.RectanglePainter r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.painter.RectanglePainter;

        $z0 = r0.<org.jdesktop.swingx.painter.RectanglePainter: boolean rounded>;

        return $z0;
    }

    public void setRounded(boolean)
    {
        org.jdesktop.swingx.painter.RectanglePainter r0;
        java.lang.Boolean $r1, $r2;
        boolean $z0, z1;

        r0 := @this: org.jdesktop.swingx.painter.RectanglePainter;

        z1 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: boolean isRounded()>();

        r0.<org.jdesktop.swingx.painter.RectanglePainter: boolean rounded> = z1;

        virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: void setDirty(boolean)>(1);

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("rounded", $r1, $r2);

        return;
    }

    public int getRoundWidth()
    {
        int $i0;
        org.jdesktop.swingx.painter.RectanglePainter r0;

        r0 := @this: org.jdesktop.swingx.painter.RectanglePainter;

        $i0 = r0.<org.jdesktop.swingx.painter.RectanglePainter: int roundWidth>;

        return $i0;
    }

    public void setRoundWidth(int)
    {
        org.jdesktop.swingx.painter.RectanglePainter r0;
        int $i0, i1;
        java.lang.Integer $r1, $r2;

        r0 := @this: org.jdesktop.swingx.painter.RectanglePainter;

        i1 := @parameter0: int;

        $i0 = virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: int getRoundWidth()>();

        r0.<org.jdesktop.swingx.painter.RectanglePainter: int roundWidth> = i1;

        virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: void setDirty(boolean)>(1);

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("roundWidth", $r1, $r2);

        return;
    }

    public int getRoundHeight()
    {
        int $i0;
        org.jdesktop.swingx.painter.RectanglePainter r0;

        r0 := @this: org.jdesktop.swingx.painter.RectanglePainter;

        $i0 = r0.<org.jdesktop.swingx.painter.RectanglePainter: int roundHeight>;

        return $i0;
    }

    public void setRoundHeight(int)
    {
        org.jdesktop.swingx.painter.RectanglePainter r0;
        int $i0, i1;
        java.lang.Integer $r1, $r2;

        r0 := @this: org.jdesktop.swingx.painter.RectanglePainter;

        i1 := @parameter0: int;

        $i0 = virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: int getRoundHeight()>();

        r0.<org.jdesktop.swingx.painter.RectanglePainter: int roundHeight> = i1;

        virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: void setDirty(boolean)>(1);

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("roundHeight", $r1, $r2);

        return;
    }

    protected java.awt.geom.RectangularShape calculateShape(int, int)
    {
        org.jdesktop.swingx.painter.RectanglePainter r0;
        java.awt.geom.RoundRectangle2D$Double $r7;
        java.awt.geom.Rectangle2D$Double $r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.awt.geom.RectangularShape r5;
        java.awt.Rectangle $r2;
        java.awt.Insets $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, $i15, $i17, $i19;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;

        r0 := @this: org.jdesktop.swingx.painter.RectanglePainter;

        i11 := @parameter0: int;

        i12 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: java.awt.Insets getInsets()>();

        i13 = $r1.<java.awt.Insets: int left>;

        i14 = $r1.<java.awt.Insets: int top>;

        $i1 = r0.<org.jdesktop.swingx.painter.RectanglePainter: int width>;

        $i0 = r0.<org.jdesktop.swingx.painter.RectanglePainter: int height>;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: java.awt.Rectangle calculateLayout(int,int,int,int)>($i1, $i0, i11, i12);

        $i2 = r0.<org.jdesktop.swingx.painter.RectanglePainter: int width>;

        $i17 = (int) -1;

        if $i2 == $i17 goto label1;

        $z3 = virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: boolean isFillHorizontal()>();

        if $z3 != 0 goto label1;

        i11 = r0.<org.jdesktop.swingx.painter.RectanglePainter: int width>;

        i13 = $r2.<java.awt.Rectangle: int x>;

     label1:
        $i15 = r0.<org.jdesktop.swingx.painter.RectanglePainter: int height>;

        $i19 = (int) -1;

        if $i15 == $i19 goto label2;

        $z2 = virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: boolean isFillVertical()>();

        if $z2 != 0 goto label2;

        i12 = r0.<org.jdesktop.swingx.painter.RectanglePainter: int height>;

        i14 = $r2.<java.awt.Rectangle: int y>;

     label2:
        $z4 = virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: boolean isFillHorizontal()>();

        if $z4 == 0 goto label3;

        $i8 = $r1.<java.awt.Insets: int left>;

        $i10 = i11 - $i8;

        $i9 = $r1.<java.awt.Insets: int right>;

        i11 = $i10 - $i9;

     label3:
        $z0 = virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: boolean isFillVertical()>();

        if $z0 == 0 goto label4;

        $i5 = $r1.<java.awt.Insets: int top>;

        $i7 = i12 - $i5;

        $i6 = $r1.<java.awt.Insets: int bottom>;

        i12 = $i7 - $i6;

     label4:
        $r6 = new java.awt.geom.Rectangle2D$Double;

        $d3 = (double) i13;

        $d2 = (double) i14;

        $d1 = (double) i11;

        $d0 = (double) i12;

        specialinvoke $r6.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d3, $d2, $d1, $d0);

        r5 = $r6;

        $z1 = r0.<org.jdesktop.swingx.painter.RectanglePainter: boolean rounded>;

        if $z1 == 0 goto label5;

        $r7 = new java.awt.geom.RoundRectangle2D$Double;

        $d9 = (double) i13;

        $d8 = (double) i14;

        $d7 = (double) i11;

        $d6 = (double) i12;

        $i3 = r0.<org.jdesktop.swingx.painter.RectanglePainter: int roundWidth>;

        $d5 = (double) $i3;

        $i4 = r0.<org.jdesktop.swingx.painter.RectanglePainter: int roundHeight>;

        $d4 = (double) $i4;

        specialinvoke $r7.<java.awt.geom.RoundRectangle2D$Double: void <init>(double,double,double,double,double,double)>($d9, $d8, $d7, $d6, $d5, $d4);

        r5 = $r7;

     label5:
        return r5;
    }

    protected void doPaint(java.awt.Graphics2D, java.lang.Object, int, int)
    {
        java.awt.Shape $r3;
        org.jdesktop.swingx.painter.RectanglePainter r0;
        java.awt.Graphics2D r1;
        int[] $r4;
        int i0, i1, $i2, $i3;
        org.jdesktop.swingx.painter.AbstractAreaPainter$Style $r5;
        java.lang.Object r2;

        r0 := @this: org.jdesktop.swingx.painter.RectanglePainter;

        r1 := @parameter0: java.awt.Graphics2D;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: java.awt.Shape provideShape(java.awt.Graphics2D,java.lang.Object,int,int)>(r1, r2, i0, i1);

        $r4 = <org.jdesktop.swingx.painter.RectanglePainter$1: int[] $SwitchMap$org$jdesktop$swingx$painter$AbstractAreaPainter$Style>;

        $r5 = virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: org.jdesktop.swingx.painter.AbstractAreaPainter$Style getStyle()>();

        $i2 = virtualinvoke $r5.<org.jdesktop.swingx.painter.AbstractAreaPainter$Style: int ordinal()>();

        $i3 = $r4[$i2];

        tableswitch($i3)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            default: goto label4;
        };

     label1:
        specialinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: void drawBackground(java.awt.Graphics2D,java.awt.Shape,int,int)>(r1, $r3, i0, i1);

        specialinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: void drawBorder(java.awt.Graphics2D,java.awt.Shape,int,int)>(r1, $r3, i0, i1);

        goto label4;

     label2:
        specialinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: void drawBackground(java.awt.Graphics2D,java.awt.Shape,int,int)>(r1, $r3, i0, i1);

        goto label4;

     label3:
        specialinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: void drawBorder(java.awt.Graphics2D,java.awt.Shape,int,int)>(r1, $r3, i0, i1);

        goto label4;

     label4:
        staticinvoke <org.jdesktop.swingx.graphics.GraphicsUtilities: java.awt.Shape mergeClip(java.awt.Graphics,java.awt.Shape)>(r1, $r3);

        return;
    }

    private void drawBorder(java.awt.Graphics2D, java.awt.Shape, int, int)
    {
        org.jdesktop.swingx.painter.RectanglePainter r0;
        java.awt.geom.RoundRectangle2D$Double $r5;
        java.awt.geom.Rectangle2D r8;
        java.awt.Graphics2D r2;
        int i0, i1;
        java.awt.geom.Rectangle2D$Double $r6;
        boolean $z0, $z1, $z2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        java.awt.Shape r4;
        java.awt.geom.RoundRectangle2D r9;
        java.awt.Paint $r1, r7;
        float $f0;
        java.awt.BasicStroke $r3;

        r0 := @this: org.jdesktop.swingx.painter.RectanglePainter;

        r2 := @parameter0: java.awt.Graphics2D;

        r4 := @parameter1: java.awt.Shape;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: java.awt.Paint getBorderPaint()>();

        r7 = $r1;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: boolean isPaintStretched()>();

        if $z0 == 0 goto label1;

        r7 = virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: java.awt.Paint calculateSnappedPaint(java.awt.Paint,int,int)>($r1, i0, i1);

     label1:
        virtualinvoke r2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r7);

        $r3 = new java.awt.BasicStroke;

        $f0 = virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: float getBorderWidth()>();

        specialinvoke $r3.<java.awt.BasicStroke: void <init>(float)>($f0);

        virtualinvoke r2.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r3);

        $z1 = r4 instanceof java.awt.geom.Rectangle2D;

        if $z1 == 0 goto label2;

        r8 = (java.awt.geom.Rectangle2D) r4;

        $r6 = new java.awt.geom.Rectangle2D$Double;

        $d8 = virtualinvoke r8.<java.awt.geom.Rectangle2D: double getX()>();

        $d9 = virtualinvoke r8.<java.awt.geom.Rectangle2D: double getY()>();

        $d10 = virtualinvoke r8.<java.awt.geom.Rectangle2D: double getWidth()>();

        $d11 = $d10 - 1.0;

        $d12 = virtualinvoke r8.<java.awt.geom.Rectangle2D: double getHeight()>();

        $d13 = $d12 - 1.0;

        specialinvoke $r6.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d8, $d9, $d11, $d13);

        virtualinvoke r2.<java.awt.Graphics2D: void draw(java.awt.Shape)>($r6);

        goto label4;

     label2:
        $z2 = r4 instanceof java.awt.geom.RoundRectangle2D;

        if $z2 == 0 goto label3;

        r9 = (java.awt.geom.RoundRectangle2D) r4;

        $r5 = new java.awt.geom.RoundRectangle2D$Double;

        $d0 = virtualinvoke r9.<java.awt.geom.RoundRectangle2D: double getX()>();

        $d1 = virtualinvoke r9.<java.awt.geom.RoundRectangle2D: double getY()>();

        $d2 = virtualinvoke r9.<java.awt.geom.RoundRectangle2D: double getWidth()>();

        $d3 = $d2 - 1.0;

        $d4 = virtualinvoke r9.<java.awt.geom.RoundRectangle2D: double getHeight()>();

        $d5 = $d4 - 1.0;

        $d6 = virtualinvoke r9.<java.awt.geom.RoundRectangle2D: double getArcWidth()>();

        $d7 = virtualinvoke r9.<java.awt.geom.RoundRectangle2D: double getArcHeight()>();

        specialinvoke $r5.<java.awt.geom.RoundRectangle2D$Double: void <init>(double,double,double,double,double,double)>($d0, $d1, $d3, $d5, $d6, $d7);

        virtualinvoke r2.<java.awt.Graphics2D: void draw(java.awt.Shape)>($r5);

        goto label4;

     label3:
        virtualinvoke r2.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r4);

     label4:
        return;
    }

    private void drawBackground(java.awt.Graphics2D, java.awt.Shape, int, int)
    {
        java.awt.Shape r3;
        org.jdesktop.swingx.painter.RectanglePainter r0;
        org.jdesktop.swingx.painter.effects.AreaEffect[] $r4, $r5;
        org.jdesktop.swingx.painter.effects.AreaEffect r6;
        java.awt.Paint $r1, r7;
        java.awt.Graphics2D r2;
        int i0, i1, i2, i3;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.painter.RectanglePainter;

        r2 := @parameter0: java.awt.Graphics2D;

        r3 := @parameter1: java.awt.Shape;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: java.awt.Paint getFillPaint()>();

        r7 = $r1;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: boolean isPaintStretched()>();

        if $z0 == 0 goto label1;

        r7 = virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: java.awt.Paint calculateSnappedPaint(java.awt.Paint,int,int)>($r1, i1, i2);

     label1:
        virtualinvoke r2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r7);

        virtualinvoke r2.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r3);

        $r4 = virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: org.jdesktop.swingx.painter.effects.AreaEffect[] getAreaEffects()>();

        if $r4 == null goto label3;

        $r5 = virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: org.jdesktop.swingx.painter.effects.AreaEffect[] getAreaEffects()>();

        i0 = lengthof $r5;

        i3 = 0;

     label2:
        if i3 >= i0 goto label3;

        r6 = $r5[i3];

        interfaceinvoke r6.<org.jdesktop.swingx.painter.effects.AreaEffect: void apply(java.awt.Graphics2D,java.awt.Shape,int,int)>(r2, r3, i1, i2);

        i3 = i3 + 1;

        goto label2;

     label3:
        return;
    }

    protected java.awt.Shape provideShape(java.awt.Graphics2D, java.lang.Object, int, int)
    {
        org.jdesktop.swingx.painter.RectanglePainter r0;
        java.awt.geom.RectangularShape $r1;
        java.awt.Graphics2D r2;
        int i0, i1;
        java.lang.Object r3;

        r0 := @this: org.jdesktop.swingx.painter.RectanglePainter;

        r2 := @parameter0: java.awt.Graphics2D;

        r3 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.painter.RectanglePainter: java.awt.geom.RectangularShape calculateShape(int,int)>(i0, i1);

        return $r1;
    }
}
