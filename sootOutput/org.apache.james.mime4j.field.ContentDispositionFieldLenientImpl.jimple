public class org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl extends org.apache.james.mime4j.field.AbstractField implements org.apache.james.mime4j.dom.field.ContentDispositionField
{
    private static final java.lang.String DEFAULT_DATE_FORMAT;
    private final java.util.List datePatterns;
    private boolean parsed;
    private java.lang.String dispositionType;
    private java.util.Map parameters;
    private boolean creationDateParsed;
    private java.util.Date creationDate;
    private boolean modificationDateParsed;
    private java.util.Date modificationDate;
    private boolean readDateParsed;
    private java.util.Date readDate;
    public static final org.apache.james.mime4j.dom.FieldParser PARSER;

    void <init>(org.apache.james.mime4j.stream.Field, java.util.Collection, org.apache.james.mime4j.codec.DecodeMonitor)
    {
        java.util.Collection r5;
        java.util.HashMap $r3;
        org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl r0;
        org.apache.james.mime4j.stream.Field r1;
        java.util.ArrayList $r4;
        java.util.List $r6, $r7;
        org.apache.james.mime4j.codec.DecodeMonitor r2;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl;

        r1 := @parameter0: org.apache.james.mime4j.stream.Field;

        r5 := @parameter1: java.util.Collection;

        r2 := @parameter2: org.apache.james.mime4j.codec.DecodeMonitor;

        specialinvoke r0.<org.apache.james.mime4j.field.AbstractField: void <init>(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor)>(r1, r2);

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: boolean parsed> = 0;

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.lang.String dispositionType> = "";

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.Map parameters> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.List datePatterns> = $r4;

        if r5 == null goto label1;

        $r7 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.List datePatterns>;

        interfaceinvoke $r7.<java.util.List: boolean addAll(java.util.Collection)>(r5);

        goto label2;

     label1:
        $r6 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.List datePatterns>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>("EEE, dd MMM yyyy hh:mm:ss ZZZZ");

     label2:
        return;
    }

    public java.lang.String getDispositionType()
    {
        java.lang.String $r1;
        org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: void parse()>();

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.lang.String dispositionType>;

        return $r1;
    }

    public java.lang.String getParameter(java.lang.String)
    {
        java.util.Map $r2;
        java.lang.Object $r4;
        java.lang.String r1, $r3, $r5;
        org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: void parse()>();

     label1:
        $r2 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.Map parameters>;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (java.lang.String) $r4;

        return $r5;
    }

    public java.util.Map getParameters()
    {
        java.util.Map $r1, $r2;
        org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: void parse()>();

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.Map parameters>;

        $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        return $r2;
    }

    public boolean isDispositionType(java.lang.String)
    {
        java.lang.String r1, $r2;
        org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: void parse()>();

     label1:
        $r2 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.lang.String dispositionType>;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        return $z1;
    }

    public boolean isInline()
    {
        java.lang.String $r1;
        org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: void parse()>();

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.lang.String dispositionType>;

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("inline");

        return $z1;
    }

    public boolean isAttachment()
    {
        java.lang.String $r1;
        org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: void parse()>();

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.lang.String dispositionType>;

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("attachment");

        return $z1;
    }

    public java.lang.String getFilename()
    {
        java.lang.String $r1;
        org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl r0;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.lang.String getParameter(java.lang.String)>("filename");

        return $r1;
    }

    public java.util.Date getCreationDate()
    {
        java.util.Date $r1, $r2;
        org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: boolean creationDateParsed>;

        if $z0 != 0 goto label1;

        $r2 = specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.Date parseDate(java.lang.String)>("creation-date");

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.Date creationDate> = $r2;

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: boolean creationDateParsed> = 1;

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.Date creationDate>;

        return $r1;
    }

    public java.util.Date getModificationDate()
    {
        java.util.Date $r1, $r2;
        org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: boolean modificationDateParsed>;

        if $z0 != 0 goto label1;

        $r2 = specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.Date parseDate(java.lang.String)>("modification-date");

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.Date modificationDate> = $r2;

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: boolean modificationDateParsed> = 1;

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.Date modificationDate>;

        return $r1;
    }

    public java.util.Date getReadDate()
    {
        java.util.Date $r1, $r2;
        org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: boolean readDateParsed>;

        if $z0 != 0 goto label1;

        $r2 = specialinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.Date parseDate(java.lang.String)>("read-date");

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.Date readDate> = $r2;

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: boolean readDateParsed> = 1;

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.Date readDate>;

        return $r1;
    }

    public long getSize()
    {
        byte $b1;
        int $i3;
        long $l0, $l2;
        java.lang.NumberFormatException $r2;
        java.lang.String $r1;
        org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl r0;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.lang.String getParameter(java.lang.String)>("size");

        if $r1 != null goto label1;

        return -1L;

     label1:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r1);

        $b1 = $l0 cmp 0L;

        $i3 = (int) $b1;

        if $i3 >= 0 goto label2;

        $l2 = -1L;

        goto label3;

     label2:
        $l2 = $l0;

     label3:
        return $l2;

     label4:
        $r2 := @caughtexception;

        return -1L;

        catch java.lang.NumberFormatException from label1 to label3 with label4;
    }

    private void parse()
    {
        org.apache.james.mime4j.stream.RawField $r1;
        org.apache.james.mime4j.stream.RawBody $r3;
        java.util.Locale $r11, $r15;
        java.util.Map $r5, $r13;
        java.lang.String $r4, $r10, $r12, $r14, $r16;
        boolean $z0;
        org.apache.james.mime4j.stream.RawFieldParser $r2;
        java.util.Iterator $r7;
        org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl r0;
        java.util.List $r6;
        org.apache.james.mime4j.stream.NameValuePair r9;
        java.lang.Object $r8;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl;

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: boolean parsed> = 1;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: org.apache.james.mime4j.stream.RawField getRawField()>();

        $r2 = <org.apache.james.mime4j.stream.RawFieldParser: org.apache.james.mime4j.stream.RawFieldParser DEFAULT>;

        $r3 = virtualinvoke $r2.<org.apache.james.mime4j.stream.RawFieldParser: org.apache.james.mime4j.stream.RawBody parseRawBody(org.apache.james.mime4j.stream.RawField)>($r1);

        $r4 = virtualinvoke $r3.<org.apache.james.mime4j.stream.RawBody: java.lang.String getValue()>();

        if $r4 == null goto label1;

        $r15 = <java.util.Locale: java.util.Locale US>;

        $r16 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r15);

        r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.lang.String dispositionType> = $r16;

        goto label2;

     label1:
        r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.lang.String dispositionType> = null;

     label2:
        $r5 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.Map parameters>;

        interfaceinvoke $r5.<java.util.Map: void clear()>();

        $r6 = virtualinvoke $r3.<org.apache.james.mime4j.stream.RawBody: java.util.List getParams()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.apache.james.mime4j.stream.NameValuePair) $r8;

        $r10 = virtualinvoke r9.<org.apache.james.mime4j.stream.NameValuePair: java.lang.String getName()>();

        $r11 = <java.util.Locale: java.util.Locale US>;

        $r12 = virtualinvoke $r10.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r11);

        $r13 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.Map parameters>;

        $r14 = virtualinvoke r9.<org.apache.james.mime4j.stream.NameValuePair: java.lang.String getValue()>();

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r14);

        goto label3;

     label4:
        return;
    }

    private java.util.Date parseDate(java.lang.String)
    {
        java.util.Date $r21;
        java.text.SimpleDateFormat $r18;
        java.util.Locale $r19;
        java.lang.String r1, $r2, $r11, $r15, r17;
        java.text.ParseException $r22;
        boolean $z0, $z1;
        java.util.Iterator $r4;
        java.util.TimeZone $r20;
        org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl r0;
        java.util.List $r3;
        org.apache.james.mime4j.codec.DecodeMonitor $r5, $r7;
        java.lang.StringBuilder $r6, $r8, $r9, $r10, $r12, $r13, $r14;
        java.lang.Object $r16;

        r0 := @this: org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.lang.String getParameter(java.lang.String)>(r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.util.List datePatterns>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r16 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r17 = (java.lang.String) $r16;

     label3:
        $r18 = new java.text.SimpleDateFormat;

        $r19 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r18.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>(r17, $r19);

        $r20 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        virtualinvoke $r18.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r20);

        virtualinvoke $r18.<java.text.SimpleDateFormat: void setLenient(boolean)>(1);

        $r21 = virtualinvoke $r18.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r2);

     label4:
        return $r21;

     label5:
        $r22 := @caughtexception;

        goto label2;

     label6:
        $r5 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: org.apache.james.mime4j.codec.DecodeMonitor monitor>;

        $z1 = virtualinvoke $r5.<org.apache.james.mime4j.codec.DecodeMonitor: boolean isListening()>();

        if $z1 == 0 goto label7;

        $r7 = r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: org.apache.james.mime4j.codec.DecodeMonitor monitor>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" parameter is invalid: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" parameter is ignored");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<org.apache.james.mime4j.codec.DecodeMonitor: boolean warn(java.lang.String,java.lang.String)>($r11, $r15);

     label7:
        return null;

        catch java.text.ParseException from label3 to label4 with label5;
    }

    static void <clinit>()
    {
        org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl$1 $r0;

        <org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: java.lang.String DEFAULT_DATE_FORMAT> = "EEE, dd MMM yyyy hh:mm:ss ZZZZ";

        $r0 = new org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl$1;

        specialinvoke $r0.<org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl$1: void <init>()>();

        <org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl: org.apache.james.mime4j.dom.FieldParser PARSER> = $r0;

        return;
    }
}
