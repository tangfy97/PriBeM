public abstract class org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext extends java.lang.Object implements java.awt.PaintContext
{
    private static final org.apache.commons.logging.Log LOG;
    private java.awt.image.ColorModel outputColorModel;
    private org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace colorSpace;
    protected int numberOfColorComponents;
    protected java.util.ArrayList triangleList;
    protected int bitsPerCoordinate;
    protected int bitsPerColorComponent;
    protected float[] background;
    private java.awt.color.ColorSpace shadingColorSpace;
    private org.apache.pdfbox.pdmodel.common.function.PDFunction shadingTinttransform;
    private final boolean hasFunction;
    private final org.apache.pdfbox.pdmodel.graphics.shading.PDShadingResources gouraudShadingType;

    protected void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingResources, java.awt.image.ColorModel, java.awt.geom.AffineTransform, org.apache.pdfbox.util.Matrix, int) throws java.io.IOException
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.awt.geom.AffineTransform r1;
        java.awt.image.ComponentColorModel $r36;
        org.apache.pdfbox.pdmodel.graphics.shading.PDShadingResources r2;
        org.apache.pdfbox.pdmodel.common.function.PDFunction $r11, $r44, $r47;
        java.lang.StringBuilder $r5, $r7, $r9, $r12, $r14, $r15, $r18, $r20, $r21, $r23, $r25, $r27, $r29, $r31, $r33;
        org.apache.pdfbox.cos.COSArray $r32;
        org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext r0;
        java.awt.color.ColorSpace $r35, $r39;
        java.util.ArrayList $r3;
        org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN $r46;
        int i0, $i1, $i2, $i3;
        java.lang.String $r10, $r16, $r22, $r28, $r34;
        double $d0;
        java.io.IOException $r48;
        org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace $r4, $r8, $r17, $r37, $r38, $r40, $r41, $r42, $r45;
        org.apache.pdfbox.pdmodel.common.PDRectangle $r26;
        org.apache.pdfbox.pdmodel.graphics.color.PDSeparation $r43;
        java.awt.image.ColorModel r50;
        org.apache.pdfbox.util.Matrix r51;
        org.apache.commons.logging.Log $r6, $r13, $r19, $r24, $r30, $r49;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext;

        r2 := @parameter0: org.apache.pdfbox.pdmodel.graphics.shading.PDShadingResources;

        r50 := @parameter1: java.awt.image.ColorModel;

        r1 := @parameter2: java.awt.geom.AffineTransform;

        r51 := @parameter3: org.apache.pdfbox.util.Matrix;

        i0 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r1.<java.awt.geom.AffineTransform: void scale(double,double)>(1.0, -1.0);

        $i1 = neg i0;

        $d0 = (double) $i1;

        virtualinvoke r1.<java.awt.geom.AffineTransform: void translate(double,double)>(0.0, $d0);

        r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: org.apache.pdfbox.pdmodel.graphics.shading.PDShadingResources gouraudShadingType> = r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: java.util.ArrayList triangleList> = $r3;

        $r4 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.shading.PDShadingResources: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()>();

        r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace colorSpace> = $r4;

        $r6 = <org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: org.apache.commons.logging.Log LOG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("colorSpace: ");

        $r8 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace colorSpace>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r10);

        $r11 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.shading.PDShadingResources: org.apache.pdfbox.pdmodel.common.function.PDFunction getFunction()>();

        if $r11 == null goto label1;

        $z5 = 1;

        goto label2;

     label1:
        $z5 = 0;

     label2:
        r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: boolean hasFunction> = $z5;

        $r13 = <org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: org.apache.commons.logging.Log LOG>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hasFunction: ");

        $z0 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: boolean hasFunction>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r16);

        $z1 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: boolean hasFunction>;

        if $z1 == 0 goto label3;

        $i3 = 1;

        goto label4;

     label3:
        $r17 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace colorSpace>;

        $i3 = virtualinvoke $r17.<org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace: int getNumberOfComponents()>();

     label4:
        r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: int numberOfColorComponents> = $i3;

        $r19 = <org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: org.apache.commons.logging.Log LOG>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("numberOfColorComponents: ");

        $i2 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: int numberOfColorComponents>;

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r19.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r22);

        $r24 = <org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: org.apache.commons.logging.Log LOG>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BBox: ");

        $r26 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.shading.PDShadingResources: org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r24.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r28);

        $r30 = <org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: org.apache.commons.logging.Log LOG>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Background: ");

        $r32 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.shading.PDShadingResources: org.apache.pdfbox.cos.COSArray getBackground()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r30.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r34);

        $r35 = staticinvoke <java.awt.color.ColorSpace: java.awt.color.ColorSpace getInstance(int)>(1000);

        $r36 = new java.awt.image.ComponentColorModel;

        specialinvoke $r36.<java.awt.image.ComponentColorModel: void <init>(java.awt.color.ColorSpace,boolean,boolean,int,int)>($r35, 1, 0, 3, 0);

        r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: java.awt.image.ColorModel outputColorModel> = $r36;

     label5:
        $r37 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace colorSpace>;

        $z2 = $r37 instanceof org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB;

        if $z2 != 0 goto label7;

        $r38 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace colorSpace>;

        $r39 = virtualinvoke $r38.<org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace: java.awt.color.ColorSpace getJavaColorSpace()>();

        r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: java.awt.color.ColorSpace shadingColorSpace> = $r39;

        $r40 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace colorSpace>;

        $z3 = $r40 instanceof org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN;

        if $z3 == 0 goto label6;

        $r45 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace colorSpace>;

        $r46 = (org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN) $r45;

        $r47 = virtualinvoke $r46.<org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN: org.apache.pdfbox.pdmodel.common.function.PDFunction getTintTransform()>();

        r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: org.apache.pdfbox.pdmodel.common.function.PDFunction shadingTinttransform> = $r47;

        goto label7;

     label6:
        $r41 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace colorSpace>;

        $z4 = $r41 instanceof org.apache.pdfbox.pdmodel.graphics.color.PDSeparation;

        if $z4 == 0 goto label7;

        $r42 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace colorSpace>;

        $r43 = (org.apache.pdfbox.pdmodel.graphics.color.PDSeparation) $r42;

        $r44 = virtualinvoke $r43.<org.apache.pdfbox.pdmodel.graphics.color.PDSeparation: org.apache.pdfbox.pdmodel.common.function.PDFunction getTintTransform()>();

        r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: org.apache.pdfbox.pdmodel.common.function.PDFunction shadingTinttransform> = $r44;

     label7:
        goto label9;

     label8:
        $r48 := @caughtexception;

        $r49 = <org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r49.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("error while creating colorSpace", $r48);

     label9:
        return;

        catch java.io.IOException from label5 to label7 with label8;
    }

    protected org.apache.pdfbox.pdmodel.graphics.shading.Vertex readVertex(javax.imageio.stream.ImageInputStream, byte, long, long, org.apache.pdfbox.pdmodel.common.PDRange, org.apache.pdfbox.pdmodel.common.PDRange, org.apache.pdfbox.pdmodel.common.PDRange[]) throws java.io.IOException
    {
        java.lang.Integer $r29;
        org.apache.pdfbox.pdmodel.graphics.shading.Vertex $r16;
        byte b7;
        java.lang.Long $r9, $r10;
        org.apache.pdfbox.pdmodel.common.PDRange r3, r4, $r19, $r20;
        javax.imageio.stream.ImageInputStream r2;
        java.lang.StringBuilder $r5, $r7, $r14, $r21, $r23, $r24, $r25, $r26, $r27, $r31, $r32, $r33, $r34, $r35;
        org.apache.pdfbox.pdmodel.common.PDRange[] r18;
        java.lang.Object[] $r8, $r28;
        java.lang.Double $r11, $r12;
        org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext r0;
        float[] r1;
        long $l2, $l4, l5, $l9, l11;
        java.awt.geom.Point2D$Double $r17;
        java.lang.String $r13, $r15, $r30, $r36;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;
        int $i0, $i1, $i3, $i6, $i8, i10, i12;
        double d0, d1;
        org.apache.commons.logging.Log $r6, $r22;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext;

        r2 := @parameter0: javax.imageio.stream.ImageInputStream;

        b7 := @parameter1: byte;

        l5 := @parameter2: long;

        l11 := @parameter3: long;

        r3 := @parameter4: org.apache.pdfbox.pdmodel.common.PDRange;

        r4 := @parameter5: org.apache.pdfbox.pdmodel.common.PDRange;

        r18 := @parameter6: org.apache.pdfbox.pdmodel.common.PDRange[];

        $i0 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: int numberOfColorComponents>;

        r1 = newarray (float)[$i0];

        $i1 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: int bitsPerCoordinate>;

        $l2 = interfaceinvoke r2.<javax.imageio.stream.ImageInputStream: long readBits(int)>($i1);

        $i3 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: int bitsPerCoordinate>;

        $l4 = interfaceinvoke r2.<javax.imageio.stream.ImageInputStream: long readBits(int)>($i3);

        $f0 = (float) $l2;

        $f1 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.common.PDRange: float getMin()>();

        $f2 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.common.PDRange: float getMax()>();

        $f3 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: float interpolate(float,long,float,float)>($f0, l5, $f1, $f2);

        d0 = (double) $f3;

        $f4 = (float) $l4;

        $f5 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.common.PDRange: float getMin()>();

        $f6 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.common.PDRange: float getMax()>();

        $f7 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: float interpolate(float,long,float,float)>($f4, l5, $f5, $f6);

        d1 = (double) $f7;

        $r6 = <org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: org.apache.commons.logging.Log LOG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("coord: ");

        $r8 = newarray (java.lang.Object)[4];

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r8[0] = $r9;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        $r8[1] = $r10;

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r8[2] = $r11;

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r8[3] = $r12;

        $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%06X,%06X] -> [%f,%f]", $r8);

        $r14 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r15);

        i12 = 0;

     label1:
        $i6 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: int numberOfColorComponents>;

        if i12 >= $i6 goto label2;

        $i8 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: int bitsPerColorComponent>;

        $l9 = interfaceinvoke r2.<javax.imageio.stream.ImageInputStream: long readBits(int)>($i8);

        i10 = (int) $l9;

        $f8 = (float) i10;

        $r19 = r18[i12];

        $f9 = virtualinvoke $r19.<org.apache.pdfbox.pdmodel.common.PDRange: float getMin()>();

        $r20 = r18[i12];

        $f10 = virtualinvoke $r20.<org.apache.pdfbox.pdmodel.common.PDRange: float getMax()>();

        $f11 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: float interpolate(float,long,float,float)>($f8, l11, $f9, $f10);

        r1[i12] = $f11;

        $r22 = <org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: org.apache.commons.logging.Log LOG>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("color[");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i12);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r28 = newarray (java.lang.Object)[1];

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i10);

        $r28[0] = $r29;

        $r30 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%02x", $r28);

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-> color[");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i12);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $f12 = r1[i12];

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f12);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r22.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r36);

        i12 = i12 + 1;

        goto label1;

     label2:
        $r16 = new org.apache.pdfbox.pdmodel.graphics.shading.Vertex;

        $r17 = new java.awt.geom.Point2D$Double;

        specialinvoke $r17.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d0, d1);

        specialinvoke $r16.<org.apache.pdfbox.pdmodel.graphics.shading.Vertex: void <init>(byte,java.awt.geom.Point2D,float[])>(b7, $r17, r1);

        return $r16;
    }

    protected void transformVertices(java.util.ArrayList, org.apache.pdfbox.util.Matrix, java.awt.geom.AffineTransform, int)
    {
        java.awt.geom.Point2D $r7, $r9, $r12, $r13, $r14, $r15;
        org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext r16;
        java.util.ArrayList r0;
        java.awt.geom.Point2D$Double $r6;
        org.apache.pdfbox.pdmodel.graphics.shading.Vertex r3;
        int i0;
        boolean $z0;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        java.util.Iterator $r1;
        java.awt.geom.AffineTransform r8, $r11;
        org.apache.pdfbox.util.Matrix r5;
        java.lang.Object $r2;
        org.apache.commons.logging.Log $r4, $r10;

        r16 := @this: org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext;

        r0 := @parameter0: java.util.ArrayList;

        r5 := @parameter1: org.apache.pdfbox.util.Matrix;

        r8 := @parameter2: java.awt.geom.AffineTransform;

        i0 := @parameter3: int;

        $r1 = virtualinvoke r0.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.pdfbox.pdmodel.graphics.shading.Vertex) $r2;

        $r4 = <org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r4.<org.apache.commons.logging.Log: void debug(java.lang.Object)>(r3);

        if r5 == null goto label2;

        $r11 = virtualinvoke r5.<org.apache.pdfbox.util.Matrix: java.awt.geom.AffineTransform createAffineTransform()>();

        $r13 = r3.<org.apache.pdfbox.pdmodel.graphics.shading.Vertex: java.awt.geom.Point2D point>;

        $r12 = r3.<org.apache.pdfbox.pdmodel.graphics.shading.Vertex: java.awt.geom.Point2D point>;

        virtualinvoke $r11.<java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>($r13, $r12);

        $r15 = r3.<org.apache.pdfbox.pdmodel.graphics.shading.Vertex: java.awt.geom.Point2D point>;

        $r14 = r3.<org.apache.pdfbox.pdmodel.graphics.shading.Vertex: java.awt.geom.Point2D point>;

        virtualinvoke r8.<java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>($r15, $r14);

        goto label3;

     label2:
        $r6 = new java.awt.geom.Point2D$Double;

        $r7 = r3.<org.apache.pdfbox.pdmodel.graphics.shading.Vertex: java.awt.geom.Point2D point>;

        $d0 = virtualinvoke $r7.<java.awt.geom.Point2D: double getX()>();

        $d1 = (double) i0;

        $d2 = virtualinvoke r8.<java.awt.geom.AffineTransform: double getTranslateY()>();

        $d3 = $d1 + $d2;

        $r9 = r3.<org.apache.pdfbox.pdmodel.graphics.shading.Vertex: java.awt.geom.Point2D point>;

        $d4 = virtualinvoke $r9.<java.awt.geom.Point2D: double getY()>();

        $d5 = $d3 - $d4;

        specialinvoke $r6.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d0, $d5);

        r3.<org.apache.pdfbox.pdmodel.graphics.shading.Vertex: java.awt.geom.Point2D point> = $r6;

     label3:
        $r10 = <org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r10.<org.apache.commons.logging.Log: void debug(java.lang.Object)>(r3);

        goto label1;

     label4:
        return;
    }

    public void dispose()
    {
        org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext r0;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext;

        r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: java.util.ArrayList triangleList> = null;

        r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: java.awt.image.ColorModel outputColorModel> = null;

        r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace colorSpace> = null;

        r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: java.awt.color.ColorSpace shadingColorSpace> = null;

        r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: org.apache.pdfbox.pdmodel.common.function.PDFunction shadingTinttransform> = null;

        return;
    }

    public final java.awt.image.ColorModel getColorModel()
    {
        org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext r0;
        java.awt.image.ColorModel $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext;

        $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: java.awt.image.ColorModel outputColorModel>;

        return $r1;
    }

    private float interpolate(float, long, float, float)
    {
        org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext r0;
        long l0;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext;

        f1 := @parameter0: float;

        l0 := @parameter1: long;

        f0 := @parameter2: float;

        f2 := @parameter3: float;

        $f3 = f2 - f0;

        $f5 = f1 * $f3;

        $f4 = (float) l0;

        $f6 = $f5 / $f4;

        $f7 = f0 + $f6;

        return $f7;
    }

    public final java.awt.image.Raster getRaster(int, int, int, int)
    {
        org.apache.pdfbox.pdmodel.common.function.PDFunction $r9, $r10;
        org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext r0;
        double[] $r12;
        float[] $r8, $r13, $r14, $r15, $r17, r24;
        java.util.ArrayList $r4, $r6;
        java.io.IOException $r18, $r20;
        java.awt.Point $r5;
        int[] r3;
        boolean $z0, $z1, $z2, $z3;
        org.apache.pdfbox.pdmodel.graphics.shading.PDShadingResources $r11;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        java.awt.color.ColorSpace $r25, $r26;
        int i0, i1, $i2, $i3, i4, i5, $i6, $i7, $i8, $i9, i10, i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        java.util.Iterator $r7;
        org.apache.pdfbox.pdmodel.graphics.shading.GouraudTriangle r22, r23;
        java.awt.image.ColorModel $r1;
        java.awt.image.WritableRaster $r2;
        java.lang.Object $r16;
        org.apache.commons.logging.Log $r19, $r21;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext;

        i4 := @parameter0: int;

        i5 := @parameter1: int;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: java.awt.image.ColorModel getColorModel()>();

        $r2 = virtualinvoke $r1.<java.awt.image.ColorModel: java.awt.image.WritableRaster createCompatibleWritableRaster(int,int)>(i0, i1);

        $i2 = i0 * i1;

        $i3 = $i2 * 4;

        r3 = newarray (int)[$i3];

        $r4 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: java.util.ArrayList triangleList>;

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label01;

        $r17 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: float[] background>;

        if $r17 == null goto label22;

     label01:
        i10 = 0;

     label02:
        if i10 >= i1 goto label22;

        i11 = 0;

     label03:
        if i11 >= i0 goto label21;

        $r5 = new java.awt.Point;

        $i7 = i4 + i11;

        $i6 = i5 + i10;

        specialinvoke $r5.<java.awt.Point: void <init>(int,int)>($i7, $i6);

        r22 = null;

        $r6 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: java.util.ArrayList triangleList>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        $r16 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r23 = (org.apache.pdfbox.pdmodel.graphics.shading.GouraudTriangle) $r16;

        $z3 = virtualinvoke r23.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudTriangle: boolean contains(java.awt.geom.Point2D)>($r5);

        if $z3 == 0 goto label05;

        r22 = r23;

        goto label06;

     label05:
        goto label04;

     label06:
        if r22 == null goto label09;

        $r12 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudTriangle: double[] getWeights(java.awt.geom.Point2D)>($r5);

        $i8 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: int numberOfColorComponents>;

        r24 = newarray (float)[$i8];

        i12 = 0;

     label07:
        $i9 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: int numberOfColorComponents>;

        if i12 >= $i9 goto label08;

        $r13 = r22.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudTriangle: float[] colorA>;

        $f0 = $r13[i12];

        $d1 = (double) $f0;

        $d0 = $r12[0];

        $d5 = $d1 * $d0;

        $r14 = r22.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudTriangle: float[] colorB>;

        $f1 = $r14[i12];

        $d3 = (double) $f1;

        $d2 = $r12[1];

        $d4 = $d3 * $d2;

        $d9 = $d5 + $d4;

        $r15 = r22.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudTriangle: float[] colorC>;

        $f2 = $r15[i12];

        $d7 = (double) $f2;

        $d6 = $r12[2];

        $d8 = $d7 * $d6;

        $d10 = $d9 + $d8;

        $f3 = (float) $d10;

        r24[i12] = $f3;

        i12 = i12 + 1;

        goto label07;

     label08:
        goto label10;

     label09:
        $r8 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: float[] background>;

        if $r8 == null goto label20;

        r24 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: float[] background>;

     label10:
        $z2 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: boolean hasFunction>;

        if $z2 == 0 goto label14;

     label11:
        $r11 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: org.apache.pdfbox.pdmodel.graphics.shading.PDShadingResources gouraudShadingType>;

        r24 = virtualinvoke $r11.<org.apache.pdfbox.pdmodel.graphics.shading.PDShadingResources: float[] evalFunction(float[])>(r24);

     label12:
        goto label14;

     label13:
        $r20 := @caughtexception;

        $r21 = <org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r21.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("error while processing a function", $r20);

     label14:
        $r25 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: java.awt.color.ColorSpace shadingColorSpace>;

        if $r25 == null goto label19;

        $r9 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: org.apache.pdfbox.pdmodel.common.function.PDFunction shadingTinttransform>;

        if $r9 == null goto label18;

     label15:
        $r10 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: org.apache.pdfbox.pdmodel.common.function.PDFunction shadingTinttransform>;

        r24 = virtualinvoke $r10.<org.apache.pdfbox.pdmodel.common.function.PDFunction: float[] eval(float[])>(r24);

     label16:
        goto label18;

     label17:
        $r18 := @caughtexception;

        $r19 = <org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r19.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("error while processing a function", $r18);

     label18:
        $r26 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: java.awt.color.ColorSpace shadingColorSpace>;

        r24 = virtualinvoke $r26.<java.awt.color.ColorSpace: float[] toRGB(float[])>(r24);

     label19:
        $i13 = i10 * i0;

        $i14 = $i13 + i11;

        $i15 = $i14 * 4;

        $f4 = r24[0];

        $f5 = $f4 * 255.0F;

        $i16 = (int) $f5;

        r3[$i15] = $i16;

        $i17 = $i15 + 1;

        $f6 = r24[1];

        $f7 = $f6 * 255.0F;

        $i18 = (int) $f7;

        r3[$i17] = $i18;

        $i19 = $i15 + 2;

        $f8 = r24[2];

        $f9 = $f8 * 255.0F;

        $i20 = (int) $f9;

        r3[$i19] = $i20;

        $i21 = $i15 + 3;

        r3[$i21] = 255;

     label20:
        i11 = i11 + 1;

        goto label03;

     label21:
        i10 = i10 + 1;

        goto label02;

     label22:
        virtualinvoke $r2.<java.awt.image.WritableRaster: void setPixels(int,int,int,int,int[])>(0, 0, i0, i1, r3);

        return $r2;

        catch java.io.IOException from label11 to label12 with label13;
        catch java.io.IOException from label15 to label16 with label17;
    }

    static void <clinit>()
    {
        org.apache.commons.logging.Log $r0;

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/apache/pdfbox/pdmodel/graphics/shading/GouraudShadingContext;");

        <org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: org.apache.commons.logging.Log LOG> = $r0;

        return;
    }
}
