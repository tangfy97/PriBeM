class org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool extends java.lang.Object
{
    private java.util.List mFailures;
    private int mCount;
    private java.io.PrintWriter mOut;
    private long mStartTime;

    void <init>()
    {
        java.io.PrintWriter $r2;
        java.io.PrintStream $r3;
        org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool r0;
        long $l0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool: java.util.List mFailures> = $r1;

        r0.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool: int mCount> = 0;

        $r2 = new java.io.PrintWriter;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r2.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r3);

        r0.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool: java.io.PrintWriter mOut> = $r2;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool: long mStartTime> = $l0;

        return;
    }

    public void process(java.lang.String[])
    {
        org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder $r31;
        java.io.PrintWriter $r2, $r5, $r15, $r20, $r23, $r25;
        java.lang.Exception $r32;
        java.util.List $r3, $r24;
        java.lang.String[] r0;
        long $l10, $l11, $l12, $l13;
        java.lang.StringBuffer $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r14, $r16, $r17, $r18;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i14, i15;
        java.lang.String $r13, $r19, $r28, $r30;
        java.io.PrintStream $r21, $r22;
        java.io.File $r27, $r29;
        org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool r1;
        java.lang.Object $r26;

        r1 := @this: org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool;

        r0 := @parameter0: java.lang.String[];

     label1:
        i14 = 0;

     label2:
        $i0 = lengthof r0;

        if i14 >= $i0 goto label3;

        $r29 = new java.io.File;

        $r30 = r0[i14];

        specialinvoke $r29.<java.io.File: void <init>(java.lang.String)>($r30);

        $r31 = new org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder;

        specialinvoke $r31.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder: void <init>(org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$1)>(null);

        specialinvoke r1.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool: void parse(org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder,java.io.File)>($r31, $r29);

        i14 = i14 + 1;

        goto label2;

     label3:
        goto label5;

     label4:
        $r32 := @caughtexception;

        virtualinvoke $r32.<java.lang.Exception: void printStackTrace()>();

     label5:
        $r2 = r1.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool: java.io.PrintWriter mOut>;

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>("\n\n\n");

        $r3 = r1.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool: java.util.List mFailures>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i1 == 0 goto label7;

        $r23 = r1.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool: java.io.PrintWriter mOut>;

        virtualinvoke $r23.<java.io.PrintWriter: void println(java.lang.String)>("The following files failed to parse:");

        i15 = 0;

     label6:
        if i15 >= $i1 goto label7;

        $r25 = r1.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool: java.io.PrintWriter mOut>;

        $r24 = r1.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool: java.util.List mFailures>;

        $r26 = interfaceinvoke $r24.<java.util.List: java.lang.Object get(int)>(i15);

        $r27 = (java.io.File) $r26;

        $r28 = virtualinvoke $r27.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke $r25.<java.io.PrintWriter: void println(java.lang.String)>($r28);

        i15 = i15 + 1;

        goto label6;

     label7:
        $r5 = r1.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool: java.io.PrintWriter mOut>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $i2 = r1.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool: int mCount>;

        $i3 = $i2 - $i1;

        $i5 = $i3 * 100;

        $i4 = r1.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool: int mCount>;

        $i6 = $i5 / $i4;

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i6);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("% (");

        $i7 = r1.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool: int mCount>;

        $i8 = $i7 - $i1;

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i8);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $i9 = r1.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool: int mCount>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("of input java files successfully parsed.");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintWriter: void println(java.lang.String)>($r13);

        $r15 = r1.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool: java.io.PrintWriter mOut>;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Total time: ");

        $l10 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l11 = r1.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool: long mStartTime>;

        $l12 = $l10 - $l11;

        $l13 = $l12 / 1000L;

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l13);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" seconds.");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintWriter: void println(java.lang.String)>($r19);

        $r20 = r1.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool: java.io.PrintWriter mOut>;

        virtualinvoke $r20.<java.io.PrintWriter: void flush()>();

        $r21 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r21.<java.io.PrintStream: void flush()>();

        $r22 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r22.<java.io.PrintStream: void flush()>();

        return;

        catch java.lang.Exception from label1 to label3 with label4;
    }

    private void parse(org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder, java.io.File) throws java.lang.Exception
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder r3;
        int $i0, $i1, $i2, i3;
        java.lang.String $r1;
        boolean $z0, $z1;
        java.io.PrintWriter $r6, $r10;
        java.io.File r0, $r8;
        org.apache.xmlbeans.impl.jam.mutable.MClass[] $r5;
        org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool r2;
        java.io.FileReader $r4;
        java.io.File[] $r7;

        r2 := @this: org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool;

        r3 := @parameter0: org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder;

        r0 := @parameter1: java.io.File;

        staticinvoke <java.lang.System: void gc()>();

        $z0 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label3;

        $r7 = virtualinvoke r0.<java.io.File: java.io.File[] listFiles()>();

        i3 = 0;

     label1:
        $i2 = lengthof $r7;

        if i3 >= $i2 goto label2;

        $r8 = $r7[i3];

        specialinvoke r2.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool: void parse(org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder,java.io.File)>(r3, $r8);

        i3 = i3 + 1;

        goto label1;

     label2:
        goto label8;

     label3:
        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getName()>();

        $z1 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>(".java");

        if $z1 != 0 goto label4;

        return;

     label4:
        $i0 = r2.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool: int mCount>;

        $i1 = $i0 + 1;

        r2.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool: int mCount> = $i1;

     label5:
        $r4 = new java.io.FileReader;

        specialinvoke $r4.<java.io.FileReader: void <init>(java.io.File)>(r0);

        $r5 = staticinvoke <org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder: org.apache.xmlbeans.impl.jam.mutable.MClass[] access$100(java.io.Reader,org.apache.xmlbeans.impl.jam.JamClassLoader)>($r4, null);

        if $r5 != null goto label6;

        $r6 = r2.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool: java.io.PrintWriter mOut>;

        virtualinvoke $r6.<java.io.PrintWriter: void println(java.lang.String)>("[error, parser result is null]");

        specialinvoke r2.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool: void addFailure(java.io.File)>(r0);

     label6:
        goto label8;

     label7:
        $r9 := @caughtexception;

        $r10 = r2.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool: java.io.PrintWriter mOut>;

        virtualinvoke $r9.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>($r10);

        specialinvoke r2.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool: void addFailure(java.io.File)>(r0);

     label8:
        return;

        catch java.lang.Throwable from label5 to label6 with label7;
    }

    private void addFailure(java.io.File)
    {
        org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool r0;
        java.util.List $r2;
        java.io.File r1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool;

        r1 := @parameter0: java.io.File;

        $r2 = r0.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool: java.util.List mFailures>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }
}
