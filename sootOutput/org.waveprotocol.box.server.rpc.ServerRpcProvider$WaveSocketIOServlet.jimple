public class org.waveprotocol.box.server.rpc.ServerRpcProvider$WaveSocketIOServlet extends javax.servlet.http.HttpServlet
{
    org.waveprotocol.box.server.rpc.ServerRpcProvider provider;
    org.waveprotocol.box.server.rpc.AbstractWaveSocketIOServlet socketIOServlet;

    public void <init>(org.waveprotocol.box.server.rpc.ServerRpcProvider)
    {
        com.glines.socketio.server.transport.XHRPollingTransport $r4;
        org.waveprotocol.box.server.rpc.ServerRpcProvider$WaveSocketIOServlet r0;
        com.glines.socketio.server.transport.FlashSocketTransport $r5;
        com.glines.socketio.server.transport.jetty.JettyWebSocketTransport $r6;
        org.waveprotocol.box.server.rpc.ServerRpcProvider$WaveSocketIOServlet$1 $r1;
        com.glines.socketio.server.Transport[] $r2;
        com.glines.socketio.server.transport.JSONPPollingTransport $r7;
        org.waveprotocol.box.server.rpc.ServerRpcProvider r9;
        com.glines.socketio.server.transport.XHRMultipartTransport $r3;
        com.glines.socketio.server.transport.HTMLFileTransport $r8;

        r0 := @this: org.waveprotocol.box.server.rpc.ServerRpcProvider$WaveSocketIOServlet;

        r9 := @parameter0: org.waveprotocol.box.server.rpc.ServerRpcProvider;

        specialinvoke r0.<javax.servlet.http.HttpServlet: void <init>()>();

        $r1 = new org.waveprotocol.box.server.rpc.ServerRpcProvider$WaveSocketIOServlet$1;

        $r2 = newarray (com.glines.socketio.server.Transport)[6];

        $r3 = new com.glines.socketio.server.transport.XHRMultipartTransport;

        specialinvoke $r3.<com.glines.socketio.server.transport.XHRMultipartTransport: void <init>()>();

        $r2[0] = $r3;

        $r4 = new com.glines.socketio.server.transport.XHRPollingTransport;

        specialinvoke $r4.<com.glines.socketio.server.transport.XHRPollingTransport: void <init>()>();

        $r2[1] = $r4;

        $r5 = new com.glines.socketio.server.transport.FlashSocketTransport;

        specialinvoke $r5.<com.glines.socketio.server.transport.FlashSocketTransport: void <init>()>();

        $r2[2] = $r5;

        $r6 = new com.glines.socketio.server.transport.jetty.JettyWebSocketTransport;

        specialinvoke $r6.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransport: void <init>()>();

        $r2[3] = $r6;

        $r7 = new com.glines.socketio.server.transport.JSONPPollingTransport;

        specialinvoke $r7.<com.glines.socketio.server.transport.JSONPPollingTransport: void <init>()>();

        $r2[4] = $r7;

        $r8 = new com.glines.socketio.server.transport.HTMLFileTransport;

        specialinvoke $r8.<com.glines.socketio.server.transport.HTMLFileTransport: void <init>()>();

        $r2[5] = $r8;

        specialinvoke $r1.<org.waveprotocol.box.server.rpc.ServerRpcProvider$WaveSocketIOServlet$1: void <init>(org.waveprotocol.box.server.rpc.ServerRpcProvider$WaveSocketIOServlet,com.glines.socketio.server.Transport[])>(r0, $r2);

        r0.<org.waveprotocol.box.server.rpc.ServerRpcProvider$WaveSocketIOServlet: org.waveprotocol.box.server.rpc.AbstractWaveSocketIOServlet socketIOServlet> = $r1;

        r0.<org.waveprotocol.box.server.rpc.ServerRpcProvider$WaveSocketIOServlet: org.waveprotocol.box.server.rpc.ServerRpcProvider provider> = r9;

        return;
    }

    public void init(javax.servlet.ServletConfig) throws javax.servlet.ServletException
    {
        org.waveprotocol.box.server.rpc.ServerRpcProvider$WaveSocketIOServlet r0;
        javax.servlet.ServletConfig r1;
        org.waveprotocol.box.server.rpc.AbstractWaveSocketIOServlet $r2;

        r0 := @this: org.waveprotocol.box.server.rpc.ServerRpcProvider$WaveSocketIOServlet;

        r1 := @parameter0: javax.servlet.ServletConfig;

        $r2 = r0.<org.waveprotocol.box.server.rpc.ServerRpcProvider$WaveSocketIOServlet: org.waveprotocol.box.server.rpc.AbstractWaveSocketIOServlet socketIOServlet>;

        virtualinvoke $r2.<org.waveprotocol.box.server.rpc.AbstractWaveSocketIOServlet: void init(javax.servlet.ServletConfig)>(r1);

        return;
    }

    protected void service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException, java.io.IOException
    {
        javax.servlet.http.HttpServletRequest r1;
        org.waveprotocol.box.server.rpc.AbstractWaveSocketIOServlet $r3;
        javax.servlet.http.HttpServletResponse r2;
        org.waveprotocol.box.server.rpc.ServerRpcProvider$WaveSocketIOServlet r0;

        r0 := @this: org.waveprotocol.box.server.rpc.ServerRpcProvider$WaveSocketIOServlet;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: javax.servlet.http.HttpServletResponse;

        $r3 = r0.<org.waveprotocol.box.server.rpc.ServerRpcProvider$WaveSocketIOServlet: org.waveprotocol.box.server.rpc.AbstractWaveSocketIOServlet socketIOServlet>;

        virtualinvoke $r3.<org.waveprotocol.box.server.rpc.AbstractWaveSocketIOServlet: void service(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r1, r2);

        return;
    }

    public void service(javax.servlet.ServletRequest, javax.servlet.ServletResponse) throws javax.servlet.ServletException, java.io.IOException
    {
        javax.servlet.ServletRequest r1;
        org.waveprotocol.box.server.rpc.AbstractWaveSocketIOServlet $r3;
        javax.servlet.ServletResponse r2;
        org.waveprotocol.box.server.rpc.ServerRpcProvider$WaveSocketIOServlet r0;

        r0 := @this: org.waveprotocol.box.server.rpc.ServerRpcProvider$WaveSocketIOServlet;

        r1 := @parameter0: javax.servlet.ServletRequest;

        r2 := @parameter1: javax.servlet.ServletResponse;

        $r3 = r0.<org.waveprotocol.box.server.rpc.ServerRpcProvider$WaveSocketIOServlet: org.waveprotocol.box.server.rpc.AbstractWaveSocketIOServlet socketIOServlet>;

        virtualinvoke $r3.<org.waveprotocol.box.server.rpc.AbstractWaveSocketIOServlet: void service(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r1, r2);

        return;
    }
}
