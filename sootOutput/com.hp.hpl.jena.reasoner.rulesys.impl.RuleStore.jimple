public class com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore extends java.lang.Object
{
    protected com.hp.hpl.jena.util.OneToManyMap goalMap;
    protected java.util.List allRules;
    protected java.util.Set ruleIndex;

    public void <init>()
    {
        java.util.HashSet $r2;
        com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore r0;
        com.hp.hpl.jena.util.OneToManyMap $r1;
        java.util.ArrayList $r3;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.hp.hpl.jena.util.OneToManyMap;

        specialinvoke $r1.<com.hp.hpl.jena.util.OneToManyMap: void <init>()>();

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore: com.hp.hpl.jena.util.OneToManyMap goalMap> = $r1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore: java.util.Set ruleIndex> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore: java.util.List allRules> = $r3;

        return;
    }

    public void <init>(java.util.List)
    {
        java.util.Iterator $r4;
        com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore r0;
        com.hp.hpl.jena.util.OneToManyMap $r1;
        java.util.HashSet $r2;
        java.util.List r3;
        com.hp.hpl.jena.reasoner.rulesys.Rule $r6;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore;

        r3 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.hp.hpl.jena.util.OneToManyMap;

        specialinvoke $r1.<com.hp.hpl.jena.util.OneToManyMap: void <init>()>();

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore: com.hp.hpl.jena.util.OneToManyMap goalMap> = $r1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore: java.util.Set ruleIndex> = $r2;

        $r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.hp.hpl.jena.reasoner.rulesys.Rule) $r5;

        virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore: void addRule(com.hp.hpl.jena.reasoner.rulesys.Rule)>($r6);

        goto label1;

     label2:
        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore: java.util.List allRules> = r3;

        return;
    }

    public void addAll(com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore)
    {
        java.util.List $r1;
        com.hp.hpl.jena.reasoner.rulesys.Rule $r5;
        java.util.Iterator $r2;
        com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore r0, r3;
        java.lang.Object $r4;
        boolean $z0;

        r3 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore;

        r0 := @parameter0: com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore: java.util.List getAllRules()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.hp.hpl.jena.reasoner.rulesys.Rule) $r4;

        virtualinvoke r3.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore: void addRule(com.hp.hpl.jena.reasoner.rulesys.Rule)>($r5);

        goto label1;

     label2:
        return;
    }

    public void addRule(com.hp.hpl.jena.reasoner.rulesys.Rule)
    {
        com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore r0;
        com.hp.hpl.jena.reasoner.rulesys.Rule r1;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore;

        r1 := @parameter0: com.hp.hpl.jena.reasoner.rulesys.Rule;

        specialinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore: void addRemoveRule(com.hp.hpl.jena.reasoner.rulesys.Rule,boolean)>(r1, 1);

        return;
    }

    public void deleteRule(com.hp.hpl.jena.reasoner.rulesys.Rule)
    {
        com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore r0;
        com.hp.hpl.jena.reasoner.rulesys.Rule r1;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore;

        r1 := @parameter0: com.hp.hpl.jena.reasoner.rulesys.Rule;

        specialinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore: void addRemoveRule(com.hp.hpl.jena.reasoner.rulesys.Rule,boolean)>(r1, 0);

        return;
    }

    private void addRemoveRule(com.hp.hpl.jena.reasoner.rulesys.Rule, boolean)
    {
        com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore r1;
        com.hp.hpl.jena.reasoner.rulesys.Rule r0, $r2;
        com.hp.hpl.jena.reasoner.rulesys.ClauseEntry $r5;
        int $i0, $i1, $i2, i3;
        com.hp.hpl.jena.reasoner.rulesys.ClauseEntry[] $r4, $r6;
        java.lang.String $r3;
        boolean z0;

        r1 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore;

        r0 := @parameter0: com.hp.hpl.jena.reasoner.rulesys.Rule;

        z0 := @parameter1: boolean;

        $i0 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.Rule: int headLength()>();

        if $i0 == 1 goto label3;

        i3 = 0;

     label1:
        $i1 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.Rule: int headLength()>();

        if i3 >= $i1 goto label2;

        $r2 = new com.hp.hpl.jena.reasoner.rulesys.Rule;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.Rule: java.lang.String getName()>();

        $r4 = newarray (com.hp.hpl.jena.reasoner.rulesys.ClauseEntry)[1];

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.Rule: com.hp.hpl.jena.reasoner.rulesys.ClauseEntry getHeadElement(int)>(i3);

        $r4[0] = $r5;

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.Rule: com.hp.hpl.jena.reasoner.rulesys.ClauseEntry[] getBody()>();

        specialinvoke $r2.<com.hp.hpl.jena.reasoner.rulesys.Rule: void <init>(java.lang.String,com.hp.hpl.jena.reasoner.rulesys.ClauseEntry[],com.hp.hpl.jena.reasoner.rulesys.ClauseEntry[])>($r3, $r4, $r6);

        $i2 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.Rule: int getNumVars()>();

        virtualinvoke $r2.<com.hp.hpl.jena.reasoner.rulesys.Rule: void setNumVars(int)>($i2);

        virtualinvoke r1.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore: void doAddRemoveRule(com.hp.hpl.jena.reasoner.rulesys.Rule,boolean)>($r2, z0);

        i3 = i3 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        virtualinvoke r1.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore: void doAddRemoveRule(com.hp.hpl.jena.reasoner.rulesys.Rule,boolean)>(r0, z0);

     label4:
        return;
    }

    protected void doAddRemoveRule(com.hp.hpl.jena.reasoner.rulesys.Rule, boolean)
    {
        com.hp.hpl.jena.graph.Node $r5, $r8, $r10;
        com.hp.hpl.jena.util.OneToManyMap $r6, $r7, $r9, $r11;
        com.hp.hpl.jena.reasoner.rulesys.ClauseEntry $r17;
        boolean z0, $z1, $z2, $z3;
        com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore r0;
        java.util.Set $r2, $r13, $r16;
        com.hp.hpl.jena.reasoner.rulesys.Rule r1;
        java.util.List $r3, $r12, $r14, $r15;
        com.hp.hpl.jena.reasoner.TriplePattern r4;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore;

        r1 := @parameter0: com.hp.hpl.jena.reasoner.rulesys.Rule;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r16 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore: java.util.Set ruleIndex>;

        $z2 = interfaceinvoke $r16.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z2 == 0 goto label1;

        return;

     label1:
        if z0 == 0 goto label2;

        $r13 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore: java.util.Set ruleIndex>;

        interfaceinvoke $r13.<java.util.Set: boolean add(java.lang.Object)>(r1);

        $r14 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore: java.util.List allRules>;

        if $r14 == null goto label3;

        $r15 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore: java.util.List allRules>;

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(r1);

        goto label3;

     label2:
        $r2 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore: java.util.Set ruleIndex>;

        interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>(r1);

        $r3 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore: java.util.List allRules>;

        if $r3 == null goto label3;

        $r12 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore: java.util.List allRules>;

        interfaceinvoke $r12.<java.util.List: boolean remove(java.lang.Object)>(r1);

     label3:
        $r17 = virtualinvoke r1.<com.hp.hpl.jena.reasoner.rulesys.Rule: com.hp.hpl.jena.reasoner.rulesys.ClauseEntry getHeadElement(int)>(0);

        $z3 = $r17 instanceof com.hp.hpl.jena.reasoner.TriplePattern;

        if $z3 == 0 goto label7;

        r4 = (com.hp.hpl.jena.reasoner.TriplePattern) $r17;

        $r5 = virtualinvoke r4.<com.hp.hpl.jena.reasoner.TriplePattern: com.hp.hpl.jena.graph.Node getPredicate()>();

        $z1 = virtualinvoke $r5.<com.hp.hpl.jena.graph.Node: boolean isVariable()>();

        if $z1 == 0 goto label5;

        if z0 == 0 goto label4;

        $r11 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore: com.hp.hpl.jena.util.OneToManyMap goalMap>;

        $r10 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        virtualinvoke $r11.<com.hp.hpl.jena.util.OneToManyMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, r1);

        goto label7;

     label4:
        $r9 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore: com.hp.hpl.jena.util.OneToManyMap goalMap>;

        $r8 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        virtualinvoke $r9.<com.hp.hpl.jena.util.OneToManyMap: void remove(java.lang.Object,java.lang.Object)>($r8, r1);

        goto label7;

     label5:
        if z0 == 0 goto label6;

        $r7 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore: com.hp.hpl.jena.util.OneToManyMap goalMap>;

        virtualinvoke $r7.<com.hp.hpl.jena.util.OneToManyMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r1);

        goto label7;

     label6:
        $r6 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore: com.hp.hpl.jena.util.OneToManyMap goalMap>;

        virtualinvoke $r6.<com.hp.hpl.jena.util.OneToManyMap: void remove(java.lang.Object,java.lang.Object)>($r5, r1);

     label7:
        return;
    }

    public java.util.List rulesFor(com.hp.hpl.jena.reasoner.TriplePattern)
    {
        java.util.Iterator $r6, $r9, $r12;
        java.util.Collection $r11;
        com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore r3;
        com.hp.hpl.jena.graph.Node $r2, $r5, $r7;
        com.hp.hpl.jena.util.OneToManyMap $r4, $r8, $r10;
        java.util.ArrayList $r0;
        com.hp.hpl.jena.reasoner.TriplePattern r1;
        boolean $z0;

        r3 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore;

        r1 := @parameter0: com.hp.hpl.jena.reasoner.TriplePattern;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.reasoner.TriplePattern: com.hp.hpl.jena.graph.Node getPredicate()>();

        $z0 = virtualinvoke $r2.<com.hp.hpl.jena.graph.Node: boolean isVariable()>();

        if $z0 == 0 goto label1;

        $r10 = r3.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore: com.hp.hpl.jena.util.OneToManyMap goalMap>;

        $r11 = virtualinvoke $r10.<com.hp.hpl.jena.util.OneToManyMap: java.util.Collection values()>();

        $r12 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();

        specialinvoke r3.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore: void checkAll(java.util.Iterator,com.hp.hpl.jena.reasoner.TriplePattern,java.util.List)>($r12, r1, $r0);

        goto label2;

     label1:
        $r4 = r3.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore: com.hp.hpl.jena.util.OneToManyMap goalMap>;

        $r5 = virtualinvoke r1.<com.hp.hpl.jena.reasoner.TriplePattern: com.hp.hpl.jena.graph.Node getPredicate()>();

        $r6 = virtualinvoke $r4.<com.hp.hpl.jena.util.OneToManyMap: java.util.Iterator getAll(java.lang.Object)>($r5);

        specialinvoke r3.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore: void checkAll(java.util.Iterator,com.hp.hpl.jena.reasoner.TriplePattern,java.util.List)>($r6, r1, $r0);

        $r8 = r3.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore: com.hp.hpl.jena.util.OneToManyMap goalMap>;

        $r7 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $r9 = virtualinvoke $r8.<com.hp.hpl.jena.util.OneToManyMap: java.util.Iterator getAll(java.lang.Object)>($r7);

        specialinvoke r3.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore: void checkAll(java.util.Iterator,com.hp.hpl.jena.reasoner.TriplePattern,java.util.List)>($r9, r1, $r0);

     label2:
        return $r0;
    }

    public java.util.List getAllRules()
    {
        com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore r0;
        java.util.List $r1;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore;

        $r1 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore: java.util.List allRules>;

        return $r1;
    }

    public void deleteAllRules()
    {
        java.util.List $r1;
        com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore r0;
        java.util.Set $r3;
        com.hp.hpl.jena.util.OneToManyMap $r2;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore;

        $r1 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore: java.util.List allRules>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r2 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore: com.hp.hpl.jena.util.OneToManyMap goalMap>;

        virtualinvoke $r2.<com.hp.hpl.jena.util.OneToManyMap: void clear()>();

        $r3 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore: java.util.Set ruleIndex>;

        interfaceinvoke $r3.<java.util.Set: void clear()>();

        return;
    }

    private void checkAll(java.util.Iterator, com.hp.hpl.jena.reasoner.TriplePattern, java.util.List)
    {
        java.util.Iterator r0;
        com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore r7;
        com.hp.hpl.jena.reasoner.rulesys.Rule r2;
        java.util.List r6;
        com.hp.hpl.jena.reasoner.TriplePattern r4, $r5;
        com.hp.hpl.jena.reasoner.rulesys.ClauseEntry $r3;
        java.lang.Object $r1;
        boolean $z0, $z1;

        r7 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore;

        r0 := @parameter0: java.util.Iterator;

        r4 := @parameter1: com.hp.hpl.jena.reasoner.TriplePattern;

        r6 := @parameter2: java.util.List;

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r1 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.hp.hpl.jena.reasoner.rulesys.Rule) $r1;

        $r3 = virtualinvoke r2.<com.hp.hpl.jena.reasoner.rulesys.Rule: com.hp.hpl.jena.reasoner.rulesys.ClauseEntry getHeadElement(int)>(0);

        $r5 = (com.hp.hpl.jena.reasoner.TriplePattern) $r3;

        $z1 = virtualinvoke $r5.<com.hp.hpl.jena.reasoner.TriplePattern: boolean compatibleWith(com.hp.hpl.jena.reasoner.TriplePattern)>(r4);

        if $z1 == 0 goto label2;

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r2);

     label2:
        goto label1;

     label3:
        return;
    }
}
