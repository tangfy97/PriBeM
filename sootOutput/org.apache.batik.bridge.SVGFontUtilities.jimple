public abstract class org.apache.batik.bridge.SVGFontUtilities extends java.lang.Object implements org.apache.batik.util.SVGConstants
{

    public void <init>()
    {
        org.apache.batik.bridge.SVGFontUtilities r0;

        r0 := @this: org.apache.batik.bridge.SVGFontUtilities;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.List getFontFaces(org.w3c.dom.Document, org.apache.batik.bridge.BridgeContext)
    {
        org.apache.batik.css.engine.CSSEngine $r11;
        org.w3c.dom.Document r2;
        java.util.Map $r1;
        org.w3c.dom.Node $r8;
        int $i0, i1;
        java.util.LinkedList $r4;
        boolean $z0;
        org.apache.batik.bridge.SVGFontFaceElementBridge r7;
        org.w3c.dom.NodeList $r5;
        java.util.Iterator $r13;
        org.apache.batik.css.engine.FontFaceRule r15;
        org.apache.batik.bridge.BridgeContext r0;
        org.apache.batik.bridge.SVGFontFace $r9;
        org.apache.batik.dom.svg.SVGOMDocument $r10;
        org.apache.batik.bridge.Bridge $r6;
        java.util.List $r12, r17;
        org.w3c.dom.Element r18;
        org.apache.batik.bridge.CSSFontFace $r16;
        java.lang.Object $r3, $r14;

        r2 := @parameter0: org.w3c.dom.Document;

        r0 := @parameter1: org.apache.batik.bridge.BridgeContext;

        $r1 = virtualinvoke r0.<org.apache.batik.bridge.BridgeContext: java.util.Map getFontFamilyMap()>();

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r17 = (java.util.List) $r3;

        if r17 == null goto label1;

        return r17;

     label1:
        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        $r5 = interfaceinvoke r2.<org.w3c.dom.Document: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "font-face");

        $r6 = virtualinvoke r0.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.Bridge getBridge(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "font-face");

        r7 = (org.apache.batik.bridge.SVGFontFaceElementBridge) $r6;

        i1 = 0;

        goto label3;

     label2:
        $r8 = interfaceinvoke $r5.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i1);

        r18 = (org.w3c.dom.Element) $r8;

        $r9 = virtualinvoke r7.<org.apache.batik.bridge.SVGFontFaceElementBridge: org.apache.batik.bridge.SVGFontFace createFontFace(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)>(r0, r18);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r9);

        i1 = i1 + 1;

     label3:
        $i0 = interfaceinvoke $r5.<org.w3c.dom.NodeList: int getLength()>();

        if i1 < $i0 goto label2;

        $r10 = (org.apache.batik.dom.svg.SVGOMDocument) r2;

        $r11 = virtualinvoke $r10.<org.apache.batik.dom.AbstractStylableDocument: org.apache.batik.css.engine.CSSEngine getCSSEngine()>();

        $r12 = virtualinvoke $r11.<org.apache.batik.css.engine.CSSEngine: java.util.List getFontFaces()>();

        $r13 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

        goto label5;

     label4:
        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r15 = (org.apache.batik.css.engine.FontFaceRule) $r14;

        $r16 = staticinvoke <org.apache.batik.bridge.CSSFontFace: org.apache.batik.bridge.CSSFontFace createCSSFontFace(org.apache.batik.css.engine.CSSEngine,org.apache.batik.css.engine.FontFaceRule)>($r11, r15);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r16);

     label5:
        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label4;

        return $r4;
    }

    public static org.apache.batik.gvt.font.GVTFontFamily getFontFamily(org.w3c.dom.Element, org.apache.batik.bridge.BridgeContext, java.lang.String, java.lang.String, java.lang.String)
    {
        org.w3c.dom.Document $r16;
        java.util.Map $r12;
        org.apache.batik.bridge.FontFace r55;
        org.apache.batik.bridge.BridgeContext r11;
        java.util.ArrayList $r60, $r61;
        java.lang.StringBuffer $r3, $r4, $r6, $r7, $r9, $r39, $r40, $r41, $r58, $r63;
        java.util.StringTokenizer $r62;
        java.lang.String r1, $r2, r5, r8, $r10, $r21, $r24, $r30, $r31, $r33, $r36, $r42, r56, r57;
        boolean $z0, $z1, $z2, $z3, z4, $z5;
        java.util.List $r53, r54;
        org.apache.batik.gvt.font.GVTFontFace $r29;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, i15, $i17, $i19, $i21;
        org.apache.batik.gvt.font.UnresolvedFontFamily $r64;
        java.util.LinkedList $r59;
        java.util.Iterator $r18, $r26;
        org.apache.batik.gvt.font.GVTFontFamily r14, $r22, $r28, $r46, $r49, $r52;
        org.w3c.dom.Element r15;
        java.lang.Object $r13, $r17, $r20, $r27, $r34, $r38, $r43, $r44, $r45, $r47, $r48, $r50, $r51;

        r15 := @parameter0: org.w3c.dom.Element;

        r11 := @parameter1: org.apache.batik.bridge.BridgeContext;

        r1 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.String;

        r8 := @parameter4: java.lang.String;

        $r58 = new java.lang.StringBuffer;

        specialinvoke $r58.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r3 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        $r12 = virtualinvoke r11.<org.apache.batik.bridge.BridgeContext: java.util.Map getFontFamilyMap()>();

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        r14 = (org.apache.batik.gvt.font.GVTFontFamily) $r13;

        if r14 == null goto label01;

        return r14;

     label01:
        $r16 = interfaceinvoke r15.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        $r17 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>($r16);

        r54 = (java.util.List) $r17;

        if r54 != null goto label02;

        $r53 = staticinvoke <org.apache.batik.bridge.SVGFontUtilities: java.util.List getFontFaces(org.w3c.dom.Document,org.apache.batik.bridge.BridgeContext)>($r16, r11);

        r54 = $r53;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r53);

     label02:
        $r18 = interfaceinvoke r54.<java.util.List: java.util.Iterator iterator()>();

        $r59 = new java.util.LinkedList;

        specialinvoke $r59.<java.util.LinkedList: void <init>()>();

        goto label06;

     label03:
        $r20 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r55 = (org.apache.batik.bridge.FontFace) $r20;

        $z0 = virtualinvoke r55.<org.apache.batik.gvt.font.GVTFontFace: boolean hasFamilyName(java.lang.String)>(r1);

        if $z0 != 0 goto label04;

        goto label06;

     label04:
        $r21 = virtualinvoke r55.<org.apache.batik.gvt.font.GVTFontFace: java.lang.String getFontStyle()>();

        $z1 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>("all");

        if $z1 != 0 goto label05;

        $i0 = virtualinvoke $r21.<java.lang.String: int indexOf(java.lang.String)>(r8);

        $i17 = (int) -1;

        if $i0 == $i17 goto label06;

     label05:
        $r22 = virtualinvoke r55.<org.apache.batik.bridge.FontFace: org.apache.batik.gvt.font.GVTFontFamily getFontFamily(org.apache.batik.bridge.BridgeContext)>(r11);

        if $r22 == null goto label06;

        interfaceinvoke $r59.<java.util.List: boolean add(java.lang.Object)>($r22);

     label06:
        $z3 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label03;

        $i1 = interfaceinvoke $r59.<java.util.List: int size()>();

        if $i1 != 1 goto label07;

        $r50 = interfaceinvoke $r59.<java.util.List: java.lang.Object get(int)>(0);

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r50);

        $r51 = interfaceinvoke $r59.<java.util.List: java.lang.Object get(int)>(0);

        $r52 = (org.apache.batik.gvt.font.GVTFontFamily) $r51;

        return $r52;

     label07:
        $i2 = interfaceinvoke $r59.<java.util.List: int size()>();

        if $i2 <= 1 goto label22;

        $r24 = staticinvoke <org.apache.batik.bridge.SVGFontUtilities: java.lang.String getFontWeightNumberString(java.lang.String)>(r5);

        $r60 = new java.util.ArrayList;

        $i3 = interfaceinvoke $r59.<java.util.List: int size()>();

        specialinvoke $r60.<java.util.ArrayList: void <init>(int)>($i3);

        $r26 = interfaceinvoke $r59.<java.util.List: java.util.Iterator iterator()>();

        goto label09;

     label08:
        $r27 = interfaceinvoke $r26.<java.util.Iterator: java.lang.Object next()>();

        $r28 = (org.apache.batik.gvt.font.GVTFontFamily) $r27;

        $r29 = interfaceinvoke $r28.<org.apache.batik.gvt.font.GVTFontFamily: org.apache.batik.gvt.font.GVTFontFace getFontFace()>();

        $r30 = virtualinvoke $r29.<org.apache.batik.gvt.font.GVTFontFace: java.lang.String getFontWeight()>();

        $r31 = staticinvoke <org.apache.batik.bridge.SVGFontUtilities: java.lang.String getFontWeightNumberString(java.lang.String)>($r30);

        interfaceinvoke $r60.<java.util.List: boolean add(java.lang.Object)>($r31);

     label09:
        $z2 = interfaceinvoke $r26.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label08;

        $r61 = new java.util.ArrayList;

        specialinvoke $r61.<java.util.ArrayList: void <init>(java.util.Collection)>($r60);

        i11 = 100;

        goto label18;

     label10:
        $r33 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i11);

        z4 = 0;

        i12 = 1000;

        i13 = 0;

        i14 = 0;

        goto label15;

     label11:
        $r34 = interfaceinvoke $r60.<java.util.List: java.lang.Object get(int)>(i14);

        r56 = (java.lang.String) $r34;

        $i5 = virtualinvoke r56.<java.lang.String: int indexOf(java.lang.String)>($r33);

        $i19 = (int) -1;

        if $i5 <= $i19 goto label12;

        z4 = 1;

        goto label16;

     label12:
        $r62 = new java.util.StringTokenizer;

        specialinvoke $r62.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r56, " ,");

        goto label14;

     label13:
        $r36 = virtualinvoke $r62.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r36);

        $i7 = $i6 - i11;

        $i8 = staticinvoke <java.lang.Math: int abs(int)>($i7);

        if $i8 >= i12 goto label14;

        i12 = $i8;

        i13 = i14;

     label14:
        $z5 = virtualinvoke $r62.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z5 != 0 goto label13;

        i14 = i14 + 1;

     label15:
        $i4 = interfaceinvoke $r60.<java.util.List: int size()>();

        if i14 < $i4 goto label11;

     label16:
        if z4 != 0 goto label17;

        $r63 = new java.lang.StringBuffer;

        specialinvoke $r63.<java.lang.StringBuffer: void <init>()>();

        $r38 = interfaceinvoke $r61.<java.util.List: java.lang.Object get(int)>(i13);

        $r39 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r33);

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r61.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i13, $r42);

     label17:
        i11 = i11 + 100;

     label18:
        if i11 <= 900 goto label10;

        i15 = 0;

        goto label21;

     label19:
        $r43 = interfaceinvoke $r61.<java.util.List: java.lang.Object get(int)>(i15);

        r57 = (java.lang.String) $r43;

        $i10 = virtualinvoke r57.<java.lang.String: int indexOf(java.lang.String)>($r24);

        $i21 = (int) -1;

        if $i10 <= $i21 goto label20;

        $r44 = interfaceinvoke $r59.<java.util.List: java.lang.Object get(int)>(i15);

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r44);

        $r45 = interfaceinvoke $r59.<java.util.List: java.lang.Object get(int)>(i15);

        $r46 = (org.apache.batik.gvt.font.GVTFontFamily) $r45;

        return $r46;

     label20:
        i15 = i15 + 1;

     label21:
        $i9 = interfaceinvoke $r59.<java.util.List: int size()>();

        if i15 < $i9 goto label19;

        $r47 = interfaceinvoke $r59.<java.util.List: java.lang.Object get(int)>(0);

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r47);

        $r48 = interfaceinvoke $r59.<java.util.List: java.lang.Object get(int)>(0);

        $r49 = (org.apache.batik.gvt.font.GVTFontFamily) $r48;

        return $r49;

     label22:
        $r64 = new org.apache.batik.gvt.font.UnresolvedFontFamily;

        specialinvoke $r64.<org.apache.batik.gvt.font.UnresolvedFontFamily: void <init>(java.lang.String)>(r1);

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r64);

        return $r64;
    }

    protected static java.lang.String getFontWeightNumberString(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("normal");

        if $z0 == 0 goto label1;

        return "400";

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("bold");

        if $z1 == 0 goto label2;

        return "700";

     label2:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("all");

        if $z2 == 0 goto label3;

        return "100, 200, 300, 400, 500, 600, 700, 800, 900";

     label3:
        return r0;
    }
}
