public class org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar extends org.eclipse.jdt.internal.compiler.batch.ClasspathJar
{
    private java.lang.String encoding;

    public void <init>(java.io.File, boolean, org.eclipse.jdt.internal.compiler.env.AccessRuleSet, java.lang.String, java.lang.String)
    {
        org.eclipse.jdt.internal.compiler.env.AccessRuleSet r2;
        org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar r0;
        java.lang.String r3, r4;
        java.io.File r1;
        boolean z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar;

        r1 := @parameter0: java.io.File;

        z0 := @parameter1: boolean;

        r2 := @parameter2: org.eclipse.jdt.internal.compiler.env.AccessRuleSet;

        r4 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.batch.ClasspathJar: void <init>(java.io.File,boolean,org.eclipse.jdt.internal.compiler.env.AccessRuleSet,java.lang.String)>(r1, z0, r2, r3);

        r0.<org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar: java.lang.String encoding> = r4;

        return;
    }

    public org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer findClass(char[], java.lang.String, java.lang.String, boolean)
    {
        org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer $r29;
        java.util.zip.ZipFile $r4, $r12;
        java.util.zip.ZipEntry $r9;
        boolean $z0, z1;
        org.eclipse.jdt.internal.compiler.env.AccessRestriction $r23;
        java.lang.StringBuffer $r7, $r19, $r26, $r27;
        int $i0, $i1, $i2, $i3, $i5;
        org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar r0;
        java.lang.String r1, r3, $r5, $r6, $r8, $r14, $r17, $r18, $r20, $r21, $r22;
        java.io.IOException $r24;
        org.eclipse.jdt.internal.compiler.batch.CompilationUnit $r28;
        char[] $r15, r25;
        java.io.InputStream $r13;

        r0 := @this: org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar;

        r25 := @parameter0: char[];

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        z1 := @parameter3: boolean;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar: boolean isPackage(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar: java.util.zip.ZipFile zipFile>;

        $r26 = new java.lang.StringBuffer;

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        $i1 = $i0 - 6;

        $r5 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r26.<java.lang.StringBuffer: void <init>(java.lang.String)>($r6);

        $r7 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".java");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        $r9 = virtualinvoke $r4.<java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)>($r8);

        if $r9 == null goto label5;

     label2:
        $r29 = new org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer;

        $r28 = new org.eclipse.jdt.internal.compiler.batch.CompilationUnit;

        $r12 = r0.<org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar: java.util.zip.ZipFile zipFile>;

        $r13 = virtualinvoke $r12.<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>($r9);

        $r14 = r0.<org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar: java.lang.String encoding>;

        $i5 = (int) -1;

        $r15 = staticinvoke <org.eclipse.jdt.internal.compiler.util.Util: char[] getInputStreamAsCharArray(java.io.InputStream,int,java.lang.String)>($r13, $i5, $r14);

        $r27 = new java.lang.StringBuffer;

        $i2 = virtualinvoke r3.<java.lang.String: int length()>();

        $i3 = $i2 - 6;

        $r17 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        $r18 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r17);

        specialinvoke $r27.<java.lang.StringBuffer: void <init>(java.lang.String)>($r18);

        $r19 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".java");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        $r22 = r0.<org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar: java.lang.String encoding>;

        $r21 = r0.<org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar: java.lang.String destinationPath>;

        specialinvoke $r28.<org.eclipse.jdt.internal.compiler.batch.CompilationUnit: void <init>(char[],java.lang.String,java.lang.String,java.lang.String)>($r15, $r20, $r22, $r21);

        $r23 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar: org.eclipse.jdt.internal.compiler.env.AccessRestriction fetchAccessRestriction(java.lang.String)>(r3);

        specialinvoke $r29.<org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer: void <init>(org.eclipse.jdt.internal.compiler.env.ICompilationUnit,org.eclipse.jdt.internal.compiler.env.AccessRestriction)>($r28, $r23);

     label3:
        return $r29;

     label4:
        $r24 := @caughtexception;

     label5:
        return null;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer findClass(char[], java.lang.String, java.lang.String)
    {
        org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer $r4;
        char[] r1;
        org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar r0;
        java.lang.String r2, r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar;

        r1 := @parameter0: char[];

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar: org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer findClass(char[],java.lang.String,java.lang.String,boolean)>(r1, r2, r3, 0);

        return $r4;
    }
}
