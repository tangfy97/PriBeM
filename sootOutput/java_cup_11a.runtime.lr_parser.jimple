public abstract class java_cup_11a.runtime.lr_parser extends java.lang.Object
{
    public java_cup_11a.runtime.SymbolFactory symbolFactory;
    protected static final int _error_sync_size;
    protected boolean _done_parsing;
    protected int tos;
    protected java_cup_11a.runtime.Symbol cur_token;
    protected java.util.Stack stack;
    protected short[][] production_tab;
    protected short[][] action_tab;
    protected short[][] reduce_tab;
    private java_cup_11a.runtime.Scanner _scanner;

    public void <init>()
    {
        java_cup_11a.runtime.lr_parser r0;
        java.util.Stack $r1;

        r0 := @this: java_cup_11a.runtime.lr_parser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java_cup_11a.runtime.lr_parser: boolean _done_parsing> = 0;

        $r1 = new java.util.Stack;

        specialinvoke $r1.<java.util.Stack: void <init>()>();

        r0.<java_cup_11a.runtime.lr_parser: java.util.Stack stack> = $r1;

        return;
    }

    public void <init>(java_cup_11a.runtime.Scanner)
    {
        java_cup_11a.runtime.SymbolFactory $r2;
        java_cup_11a.runtime.lr_parser r0;
        java_cup_11a.runtime.Scanner r1;

        r0 := @this: java_cup_11a.runtime.lr_parser;

        r1 := @parameter0: java_cup_11a.runtime.Scanner;

        $r2 = new java_cup_11a.runtime.SymbolFactory;

        specialinvoke $r2.<java_cup_11a.runtime.SymbolFactory: void <init>()>();

        specialinvoke r0.<java_cup_11a.runtime.lr_parser: void <init>(java_cup_11a.runtime.Scanner,java_cup_11a.runtime.SymbolFactory)>(r1, $r2);

        return;
    }

    public void <init>(java_cup_11a.runtime.Scanner, java_cup_11a.runtime.SymbolFactory)
    {
        java_cup_11a.runtime.SymbolFactory r1;
        java_cup_11a.runtime.lr_parser r0;
        java_cup_11a.runtime.Scanner r2;

        r0 := @this: java_cup_11a.runtime.lr_parser;

        r2 := @parameter0: java_cup_11a.runtime.Scanner;

        r1 := @parameter1: java_cup_11a.runtime.SymbolFactory;

        specialinvoke r0.<java_cup_11a.runtime.lr_parser: void <init>()>();

        r0.<java_cup_11a.runtime.lr_parser: java_cup_11a.runtime.SymbolFactory symbolFactory> = r1;

        virtualinvoke r0.<java_cup_11a.runtime.lr_parser: void setScanner(java_cup_11a.runtime.Scanner)>(r2);

        return;
    }

    public java_cup_11a.runtime.SymbolFactory getSymbolFactory()
    {
        java_cup_11a.runtime.SymbolFactory $r1;
        java_cup_11a.runtime.lr_parser r0;

        r0 := @this: java_cup_11a.runtime.lr_parser;

        $r1 = r0.<java_cup_11a.runtime.lr_parser: java_cup_11a.runtime.SymbolFactory symbolFactory>;

        return $r1;
    }

    protected int error_sync_size()
    {
        java_cup_11a.runtime.lr_parser r0;

        r0 := @this: java_cup_11a.runtime.lr_parser;

        return 3;
    }

    public abstract short[][] production_table();

    public abstract short[][] action_table();

    public abstract short[][] reduce_table();

    public abstract int start_state();

    public abstract int start_production();

    public abstract int EOF_sym();

    public abstract int error_sym();

    public void done_parsing()
    {
        java_cup_11a.runtime.lr_parser r0;

        r0 := @this: java_cup_11a.runtime.lr_parser;

        r0.<java_cup_11a.runtime.lr_parser: boolean _done_parsing> = 1;

        return;
    }

    public void setScanner(java_cup_11a.runtime.Scanner)
    {
        java_cup_11a.runtime.lr_parser r0;
        java_cup_11a.runtime.Scanner r1;

        r0 := @this: java_cup_11a.runtime.lr_parser;

        r1 := @parameter0: java_cup_11a.runtime.Scanner;

        r0.<java_cup_11a.runtime.lr_parser: java_cup_11a.runtime.Scanner _scanner> = r1;

        return;
    }

    public java_cup_11a.runtime.Scanner getScanner()
    {
        java_cup_11a.runtime.lr_parser r0;
        java_cup_11a.runtime.Scanner $r1;

        r0 := @this: java_cup_11a.runtime.lr_parser;

        $r1 = r0.<java_cup_11a.runtime.lr_parser: java_cup_11a.runtime.Scanner _scanner>;

        return $r1;
    }

    public abstract java_cup_11a.runtime.Symbol do_action(int, java_cup_11a.runtime.lr_parser, java.util.Stack, int) throws java.lang.Exception;

    public void user_init() throws java.lang.Exception
    {
        java_cup_11a.runtime.lr_parser r0;

        r0 := @this: java_cup_11a.runtime.lr_parser;

        return;
    }

    protected abstract void init_actions() throws java.lang.Exception;

    public java_cup_11a.runtime.Symbol scan() throws java.lang.Exception
    {
        java_cup_11a.runtime.Scanner $r1;
        java_cup_11a.runtime.SymbolFactory $r3;
        int $i0;
        java_cup_11a.runtime.lr_parser r0;
        java_cup_11a.runtime.Symbol $r2, $r4;

        r0 := @this: java_cup_11a.runtime.lr_parser;

        $r1 = virtualinvoke r0.<java_cup_11a.runtime.lr_parser: java_cup_11a.runtime.Scanner getScanner()>();

        $r2 = interfaceinvoke $r1.<java_cup_11a.runtime.Scanner: java_cup_11a.runtime.Symbol next_token()>();

        if $r2 == null goto label1;

        $r4 = $r2;

        goto label2;

     label1:
        $r3 = virtualinvoke r0.<java_cup_11a.runtime.lr_parser: java_cup_11a.runtime.SymbolFactory getSymbolFactory()>();

        $i0 = virtualinvoke r0.<java_cup_11a.runtime.lr_parser: int EOF_sym()>();

        $r4 = virtualinvoke $r3.<java_cup_11a.runtime.SymbolFactory: java_cup_11a.runtime.Symbol newSymbol(java.lang.String,int,java.lang.Object)>("END_OF_FILE", $i0, null);

     label2:
        return $r4;
    }

    public void syntax_error(java_cup_11a.runtime.Symbol) throws java.lang.Exception
    {
        java_cup_11a.runtime.lr_parser r0;
        java_cup_11a.runtime.Symbol r1;

        r0 := @this: java_cup_11a.runtime.lr_parser;

        r1 := @parameter0: java_cup_11a.runtime.Symbol;

        return;
    }

    public void unrecovered_syntax_error(java_cup_11a.runtime.Symbol) throws java.lang.Exception
    {
        java_cup_11a.runtime.lr_parser r0;
        java_cup_11a.runtime.Symbol r1;

        r0 := @this: java_cup_11a.runtime.lr_parser;

        r1 := @parameter0: java_cup_11a.runtime.Symbol;

        return;
    }

    protected final short get_action(int, int)
    {
        short[][] $r1;
        java_cup_11a.runtime.lr_parser r0;
        short[] r2;
        short $s7, $s11, $s13, $s16, s18, $s19;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, i9, $i10, $i12, $i14, $i15, $i17, i20, i21, i22, i23, i24, $i25, $i26, $i28, $i29, $i30;

        r0 := @this: java_cup_11a.runtime.lr_parser;

        i0 := @parameter0: int;

        i9 := @parameter1: int;

        $r1 = r0.<java_cup_11a.runtime.lr_parser: short[][] action_tab>;

        r2 = $r1[i0];

        $i1 = lengthof r2;

        if $i1 >= 20 goto label4;

        i20 = 0;

     label1:
        $i17 = lengthof r2;

        if i20 >= $i17 goto label9;

        i21 = i20 + 1;

        s18 = r2[i20];

        $i25 = (int) s18;

        if $i25 == i9 goto label2;

        $i26 = (int) s18;

        $i28 = (int) -1;

        if $i26 != $i28 goto label3;

     label2:
        $s19 = r2[i21];

        return $s19;

     label3:
        i20 = i21 + 1;

        goto label1;

     label4:
        i22 = 0;

        $i2 = lengthof r2;

        $i3 = $i2 - 1;

        $i4 = $i3 / 2;

        i23 = $i4 - 1;

     label5:
        if i22 > i23 goto label8;

        $i8 = i22 + i23;

        i24 = $i8 / 2;

        $i10 = i24 * 2;

        $s11 = r2[$i10];

        $i29 = (int) $s11;

        if i9 != $i29 goto label6;

        $i14 = i24 * 2;

        $i15 = $i14 + 1;

        $s16 = r2[$i15];

        return $s16;

     label6:
        $i12 = i24 * 2;

        $s13 = r2[$i12];

        $i30 = (int) $s13;

        if i9 <= $i30 goto label7;

        i22 = i24 + 1;

        goto label5;

     label7:
        i23 = i24 - 1;

        goto label5;

     label8:
        $i5 = lengthof r2;

        $i6 = $i5 - 1;

        $s7 = r2[$i6];

        return $s7;

     label9:
        return 0;
    }

    protected final short get_reduce(int, int)
    {
        short[][] $r1;
        java_cup_11a.runtime.lr_parser r0;
        short s2, $s4, $s8, $s14;
        int i0, $i1, i3, i5, i6, $i9, $i10, $i12;
        short[] r2;

        r0 := @this: java_cup_11a.runtime.lr_parser;

        i0 := @parameter0: int;

        i3 := @parameter1: int;

        $r1 = r0.<java_cup_11a.runtime.lr_parser: short[][] reduce_tab>;

        r2 = $r1[i0];

        if r2 != null goto label1;

        $s8 = (short) -1;

        return $s8;

     label1:
        i5 = 0;

     label2:
        $i1 = lengthof r2;

        if i5 >= $i1 goto label5;

        i6 = i5 + 1;

        s2 = r2[i5];

        $i9 = (int) s2;

        if $i9 == i3 goto label3;

        $i10 = (int) s2;

        $i12 = (int) -1;

        if $i10 != $i12 goto label4;

     label3:
        $s4 = r2[i6];

        return $s4;

     label4:
        i5 = i6 + 1;

        goto label2;

     label5:
        $s14 = (short) -1;

        return $s14;
    }

    public java_cup_11a.runtime.Symbol parse() throws java.lang.Exception
    {
        java_cup_11a.runtime.SymbolFactory $r7;
        java.lang.Error $r33;
        short $s3, s9, s12, $s14;
        short[][] $r1, $r2, $r3, $r17, $r19;
        java_cup_11a.runtime.lr_parser r0;
        boolean $z0, $z1;
        short[] $r18, $r20;
        java_cup_11a.runtime.Symbol $r4, $r8, $r9, $r12, $r13, $r14, $r16, $r23, $r26, $r27, $r28, $r30, r32;
        java.util.Stack $r5, $r6, $r10, $r15, $r21, $r24, $r25, $r29;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31;
        java.lang.Object $r11, $r22;

        r0 := @this: java_cup_11a.runtime.lr_parser;

        r32 = null;

        $r1 = virtualinvoke r0.<java_cup_11a.runtime.lr_parser: short[][] production_table()>();

        r0.<java_cup_11a.runtime.lr_parser: short[][] production_tab> = $r1;

        $r2 = virtualinvoke r0.<java_cup_11a.runtime.lr_parser: short[][] action_table()>();

        r0.<java_cup_11a.runtime.lr_parser: short[][] action_tab> = $r2;

        $r3 = virtualinvoke r0.<java_cup_11a.runtime.lr_parser: short[][] reduce_table()>();

        r0.<java_cup_11a.runtime.lr_parser: short[][] reduce_tab> = $r3;

        virtualinvoke r0.<java_cup_11a.runtime.lr_parser: void init_actions()>();

        virtualinvoke r0.<java_cup_11a.runtime.lr_parser: void user_init()>();

        $r4 = virtualinvoke r0.<java_cup_11a.runtime.lr_parser: java_cup_11a.runtime.Symbol scan()>();

        r0.<java_cup_11a.runtime.lr_parser: java_cup_11a.runtime.Symbol cur_token> = $r4;

        $r5 = r0.<java_cup_11a.runtime.lr_parser: java.util.Stack stack>;

        virtualinvoke $r5.<java.util.Stack: void removeAllElements()>();

        $r6 = r0.<java_cup_11a.runtime.lr_parser: java.util.Stack stack>;

        $r7 = virtualinvoke r0.<java_cup_11a.runtime.lr_parser: java_cup_11a.runtime.SymbolFactory getSymbolFactory()>();

        $i0 = virtualinvoke r0.<java_cup_11a.runtime.lr_parser: int start_state()>();

        $r8 = virtualinvoke $r7.<java_cup_11a.runtime.SymbolFactory: java_cup_11a.runtime.Symbol startSymbol(java.lang.String,int,int)>("START", 0, $i0);

        virtualinvoke $r6.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r8);

        r0.<java_cup_11a.runtime.lr_parser: int tos> = 0;

        r0.<java_cup_11a.runtime.lr_parser: boolean _done_parsing> = 0;

     label1:
        $z1 = r0.<java_cup_11a.runtime.lr_parser: boolean _done_parsing>;

        if $z1 != 0 goto label7;

        $r9 = r0.<java_cup_11a.runtime.lr_parser: java_cup_11a.runtime.Symbol cur_token>;

        $z0 = $r9.<java_cup_11a.runtime.Symbol: boolean used_by_parser>;

        if $z0 == 0 goto label2;

        $r33 = new java.lang.Error;

        specialinvoke $r33.<java.lang.Error: void <init>(java.lang.String)>("Symbol recycling detected (fix your scanner).");

        throw $r33;

     label2:
        $r10 = r0.<java_cup_11a.runtime.lr_parser: java.util.Stack stack>;

        $r11 = virtualinvoke $r10.<java.util.Stack: java.lang.Object peek()>();

        $r12 = (java_cup_11a.runtime.Symbol) $r11;

        $i2 = $r12.<java_cup_11a.runtime.Symbol: int parse_state>;

        $r13 = r0.<java_cup_11a.runtime.lr_parser: java_cup_11a.runtime.Symbol cur_token>;

        $i1 = $r13.<java_cup_11a.runtime.Symbol: int sym>;

        $s3 = virtualinvoke r0.<java_cup_11a.runtime.lr_parser: short get_action(int,int)>($i2, $i1);

        $i23 = (int) $s3;

        if $i23 <= 0 goto label3;

        $r26 = r0.<java_cup_11a.runtime.lr_parser: java_cup_11a.runtime.Symbol cur_token>;

        $i24 = (int) $s3;

        $i19 = $i24 - 1;

        $r26.<java_cup_11a.runtime.Symbol: int parse_state> = $i19;

        $r27 = r0.<java_cup_11a.runtime.lr_parser: java_cup_11a.runtime.Symbol cur_token>;

        $r27.<java_cup_11a.runtime.Symbol: boolean used_by_parser> = 1;

        $r29 = r0.<java_cup_11a.runtime.lr_parser: java.util.Stack stack>;

        $r28 = r0.<java_cup_11a.runtime.lr_parser: java_cup_11a.runtime.Symbol cur_token>;

        virtualinvoke $r29.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r28);

        $i20 = r0.<java_cup_11a.runtime.lr_parser: int tos>;

        $i21 = $i20 + 1;

        r0.<java_cup_11a.runtime.lr_parser: int tos> = $i21;

        $r30 = virtualinvoke r0.<java_cup_11a.runtime.lr_parser: java_cup_11a.runtime.Symbol scan()>();

        r0.<java_cup_11a.runtime.lr_parser: java_cup_11a.runtime.Symbol cur_token> = $r30;

        goto label1;

     label3:
        $i25 = (int) $s3;

        if $i25 >= 0 goto label6;

        $i26 = (int) $s3;

        $i4 = neg $i26;

        $i6 = $i4 - 1;

        $r15 = r0.<java_cup_11a.runtime.lr_parser: java.util.Stack stack>;

        $i5 = r0.<java_cup_11a.runtime.lr_parser: int tos>;

        $r16 = virtualinvoke r0.<java_cup_11a.runtime.lr_parser: java_cup_11a.runtime.Symbol do_action(int,java_cup_11a.runtime.lr_parser,java.util.Stack,int)>($i6, r0, $r15, $i5);

        r32 = $r16;

        $r17 = r0.<java_cup_11a.runtime.lr_parser: short[][] production_tab>;

        $i27 = (int) $s3;

        $i7 = neg $i27;

        $i8 = $i7 - 1;

        $r18 = $r17[$i8];

        s9 = $r18[0];

        $r19 = r0.<java_cup_11a.runtime.lr_parser: short[][] production_tab>;

        $i28 = (int) $s3;

        $i10 = neg $i28;

        $i11 = $i10 - 1;

        $r20 = $r19[$i11];

        s12 = $r20[1];

        i22 = 0;

     label4:
        $i29 = (int) s12;

        if i22 >= $i29 goto label5;

        $r25 = r0.<java_cup_11a.runtime.lr_parser: java.util.Stack stack>;

        virtualinvoke $r25.<java.util.Stack: java.lang.Object pop()>();

        $i17 = r0.<java_cup_11a.runtime.lr_parser: int tos>;

        $i18 = $i17 - 1;

        r0.<java_cup_11a.runtime.lr_parser: int tos> = $i18;

        i22 = i22 + 1;

        goto label4;

     label5:
        $r21 = r0.<java_cup_11a.runtime.lr_parser: java.util.Stack stack>;

        $r22 = virtualinvoke $r21.<java.util.Stack: java.lang.Object peek()>();

        $r23 = (java_cup_11a.runtime.Symbol) $r22;

        $i13 = $r23.<java_cup_11a.runtime.Symbol: int parse_state>;

        $i30 = (int) s9;

        $s14 = virtualinvoke r0.<java_cup_11a.runtime.lr_parser: short get_reduce(int,int)>($i13, $i30);

        $i31 = (int) $s14;

        $r16.<java_cup_11a.runtime.Symbol: int parse_state> = $i31;

        $r16.<java_cup_11a.runtime.Symbol: boolean used_by_parser> = 1;

        $r24 = r0.<java_cup_11a.runtime.lr_parser: java.util.Stack stack>;

        virtualinvoke $r24.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r16);

        $i15 = r0.<java_cup_11a.runtime.lr_parser: int tos>;

        $i16 = $i15 + 1;

        r0.<java_cup_11a.runtime.lr_parser: int tos> = $i16;

        goto label1;

     label6:
        if $s3 != 0 goto label1;

        $r14 = r0.<java_cup_11a.runtime.lr_parser: java_cup_11a.runtime.Symbol cur_token>;

        virtualinvoke r0.<java_cup_11a.runtime.lr_parser: void syntax_error(java_cup_11a.runtime.Symbol)>($r14);

        virtualinvoke r0.<java_cup_11a.runtime.lr_parser: void done_parsing()>();

        goto label1;

     label7:
        return r32;
    }

    protected static short[][] unpackFromStrings(java.lang.String[])
    {
        short[][] r3;
        java.lang.String[] r1;
        short $s13;
        java.lang.StringBuffer $r7;
        int $i0, $i2, i4, $i6, $i7, i9, $i10, $i12, i14, i15, i16, i17, $i18, $i19, $i20, $i21, $i22;
        java.lang.String $r2, $r6;
        char $c1, $c3, $c5, $c8, $c11;
        short[] $r4, $r5;

        r1 := @parameter0: java.lang.String[];

        $r7 = new java.lang.StringBuffer;

        $r2 = r1[0];

        specialinvoke $r7.<java.lang.StringBuffer: void <init>(java.lang.String)>($r2);

        i14 = 1;

     label1:
        $i0 = lengthof r1;

        if i14 >= $i0 goto label2;

        $r6 = r1[i14];

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        i14 = i14 + 1;

        goto label1;

     label2:
        $c1 = virtualinvoke $r7.<java.lang.StringBuffer: char charAt(int)>(0);

        $i18 = (int) $c1;

        $i2 = $i18 << 16;

        $c3 = virtualinvoke $r7.<java.lang.StringBuffer: char charAt(int)>(1);

        $i19 = (int) $c3;

        i4 = $i2 | $i19;

        i15 = 2;

        r3 = newarray (short[])[i4];

        i16 = 0;

     label3:
        if i16 >= i4 goto label6;

        $c5 = virtualinvoke $r7.<java.lang.StringBuffer: char charAt(int)>(i15);

        $i20 = (int) $c5;

        $i7 = $i20 << 16;

        $i6 = i15 + 1;

        $c8 = virtualinvoke $r7.<java.lang.StringBuffer: char charAt(int)>($i6);

        $i21 = (int) $c8;

        i9 = $i7 | $i21;

        i15 = i15 + 2;

        $r4 = newarray (short)[i9];

        r3[i16] = $r4;

        i17 = 0;

     label4:
        if i17 >= i9 goto label5;

        $r5 = r3[i16];

        $i10 = i15;

        i15 = i15 + 1;

        $c11 = virtualinvoke $r7.<java.lang.StringBuffer: char charAt(int)>($i10);

        $i22 = (int) $c11;

        $i12 = $i22 - 2;

        $s13 = (short) $i12;

        $r5[i17] = $s13;

        i17 = i17 + 1;

        goto label4;

     label5:
        i16 = i16 + 1;

        goto label3;

     label6:
        return r3;
    }

    public static void <clinit>()
    {
        <java_cup_11a.runtime.lr_parser: int _error_sync_size> = 3;

        return;
    }
}
