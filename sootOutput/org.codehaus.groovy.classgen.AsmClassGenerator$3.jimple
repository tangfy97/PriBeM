class org.codehaus.groovy.classgen.AsmClassGenerator$3 extends java.lang.Object implements java.lang.Runnable
{
    private final org.codehaus.groovy.ast.stmt.Statement val$finallyStatement;
    private final org.codehaus.groovy.classgen.AsmClassGenerator this$0;

    void <init>(org.codehaus.groovy.classgen.AsmClassGenerator, org.codehaus.groovy.ast.stmt.Statement)
    {
        org.codehaus.groovy.classgen.AsmClassGenerator r1;
        org.codehaus.groovy.ast.stmt.Statement r2;
        org.codehaus.groovy.classgen.AsmClassGenerator$3 r0;

        r0 := @this: org.codehaus.groovy.classgen.AsmClassGenerator$3;

        r1 := @parameter0: org.codehaus.groovy.classgen.AsmClassGenerator;

        r2 := @parameter1: org.codehaus.groovy.ast.stmt.Statement;

        r0.<org.codehaus.groovy.classgen.AsmClassGenerator$3: org.codehaus.groovy.classgen.AsmClassGenerator this$0> = r1;

        r0.<org.codehaus.groovy.classgen.AsmClassGenerator$3: org.codehaus.groovy.ast.stmt.Statement val$finallyStatement> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        org.codehaus.groovy.classgen.CompileStack $r2, $r6;
        org.codehaus.groovy.ast.stmt.Statement $r4;
        org.codehaus.groovy.classgen.AsmClassGenerator $r1, $r3, $r5;
        org.codehaus.groovy.classgen.AsmClassGenerator$3 r0;

        r0 := @this: org.codehaus.groovy.classgen.AsmClassGenerator$3;

        $r1 = r0.<org.codehaus.groovy.classgen.AsmClassGenerator$3: org.codehaus.groovy.classgen.AsmClassGenerator this$0>;

        $r2 = staticinvoke <org.codehaus.groovy.classgen.AsmClassGenerator: org.codehaus.groovy.classgen.CompileStack access$200(org.codehaus.groovy.classgen.AsmClassGenerator)>($r1);

        virtualinvoke $r2.<org.codehaus.groovy.classgen.CompileStack: void pushFinallyBlockVisit(java.lang.Runnable)>(r0);

        $r4 = r0.<org.codehaus.groovy.classgen.AsmClassGenerator$3: org.codehaus.groovy.ast.stmt.Statement val$finallyStatement>;

        $r3 = r0.<org.codehaus.groovy.classgen.AsmClassGenerator$3: org.codehaus.groovy.classgen.AsmClassGenerator this$0>;

        virtualinvoke $r4.<org.codehaus.groovy.ast.stmt.Statement: void visit(org.codehaus.groovy.ast.GroovyCodeVisitor)>($r3);

        $r5 = r0.<org.codehaus.groovy.classgen.AsmClassGenerator$3: org.codehaus.groovy.classgen.AsmClassGenerator this$0>;

        $r6 = staticinvoke <org.codehaus.groovy.classgen.AsmClassGenerator: org.codehaus.groovy.classgen.CompileStack access$200(org.codehaus.groovy.classgen.AsmClassGenerator)>($r5);

        virtualinvoke $r6.<org.codehaus.groovy.classgen.CompileStack: void popFinallyBlockVisit(java.lang.Runnable)>(r0);

        return;
    }
}
