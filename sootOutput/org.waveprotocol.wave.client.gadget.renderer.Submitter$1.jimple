class org.waveprotocol.wave.client.gadget.renderer.Submitter$1 extends org.waveprotocol.wave.client.scheduler.ScheduleTimer
{
    final org.waveprotocol.wave.client.gadget.renderer.Submitter this$0;

    void <init>(org.waveprotocol.wave.client.gadget.renderer.Submitter)
    {
        org.waveprotocol.wave.client.gadget.renderer.Submitter$1 r0;
        org.waveprotocol.wave.client.gadget.renderer.Submitter r1;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.Submitter$1;

        r1 := @parameter0: org.waveprotocol.wave.client.gadget.renderer.Submitter;

        r0.<org.waveprotocol.wave.client.gadget.renderer.Submitter$1: org.waveprotocol.wave.client.gadget.renderer.Submitter this$0> = r1;

        specialinvoke r0.<org.waveprotocol.wave.client.scheduler.ScheduleTimer: void <init>()>();

        return;
    }

    public void run()
    {
        org.waveprotocol.wave.client.gadget.renderer.Submitter$1 r0;
        org.waveprotocol.wave.client.gadget.renderer.Submitter $r1;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.Submitter$1;

        $r1 = r0.<org.waveprotocol.wave.client.gadget.renderer.Submitter$1: org.waveprotocol.wave.client.gadget.renderer.Submitter this$0>;

        staticinvoke <org.waveprotocol.wave.client.gadget.renderer.Submitter: void access$000(org.waveprotocol.wave.client.gadget.renderer.Submitter)>($r1);

        return;
    }
}
