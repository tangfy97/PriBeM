public class org.jdesktop.swingx.JXImagePanel extends org.jdesktop.swingx.JXPanel
{
    private static final java.util.logging.Logger LOG;
    private static final java.lang.String TEXT;
    private java.lang.ref.SoftReference img;
    private boolean editable;
    private org.jdesktop.swingx.JXImagePanel$MouseHandler mhandler;
    private org.jdesktop.swingx.JXImagePanel$Style style;
    private java.awt.Image defaultImage;
    private java.util.concurrent.Callable imageLoader;
    private static final java.util.concurrent.ExecutorService service;

    public void <init>()
    {
        java.lang.ref.SoftReference $r1;
        org.jdesktop.swingx.JXImagePanel r0;
        org.jdesktop.swingx.JXImagePanel$MouseHandler $r2;
        org.jdesktop.swingx.JXImagePanel$Style $r3;

        r0 := @this: org.jdesktop.swingx.JXImagePanel;

        specialinvoke r0.<org.jdesktop.swingx.JXPanel: void <init>()>();

        $r1 = new java.lang.ref.SoftReference;

        specialinvoke $r1.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>(null);

        r0.<org.jdesktop.swingx.JXImagePanel: java.lang.ref.SoftReference img> = $r1;

        r0.<org.jdesktop.swingx.JXImagePanel: boolean editable> = 0;

        $r2 = new org.jdesktop.swingx.JXImagePanel$MouseHandler;

        specialinvoke $r2.<org.jdesktop.swingx.JXImagePanel$MouseHandler: void <init>(org.jdesktop.swingx.JXImagePanel,org.jdesktop.swingx.JXImagePanel$1)>(r0, null);

        r0.<org.jdesktop.swingx.JXImagePanel: org.jdesktop.swingx.JXImagePanel$MouseHandler mhandler> = $r2;

        $r3 = <org.jdesktop.swingx.JXImagePanel$Style: org.jdesktop.swingx.JXImagePanel$Style CENTERED>;

        r0.<org.jdesktop.swingx.JXImagePanel: org.jdesktop.swingx.JXImagePanel$Style style> = $r3;

        return;
    }

    public void <init>(java.net.URL)
    {
        java.awt.image.BufferedImage $r5;
        java.net.URL r4;
        java.util.logging.Logger $r8;
        org.jdesktop.swingx.JXImagePanel r0;
        java.lang.Exception $r6;
        org.jdesktop.swingx.JXImagePanel$Style $r3;
        java.util.logging.Level $r7;
        java.lang.ref.SoftReference $r1;
        org.jdesktop.swingx.JXImagePanel$MouseHandler $r2;

        r0 := @this: org.jdesktop.swingx.JXImagePanel;

        r4 := @parameter0: java.net.URL;

        specialinvoke r0.<org.jdesktop.swingx.JXPanel: void <init>()>();

        $r1 = new java.lang.ref.SoftReference;

        specialinvoke $r1.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>(null);

        r0.<org.jdesktop.swingx.JXImagePanel: java.lang.ref.SoftReference img> = $r1;

        r0.<org.jdesktop.swingx.JXImagePanel: boolean editable> = 0;

        $r2 = new org.jdesktop.swingx.JXImagePanel$MouseHandler;

        specialinvoke $r2.<org.jdesktop.swingx.JXImagePanel$MouseHandler: void <init>(org.jdesktop.swingx.JXImagePanel,org.jdesktop.swingx.JXImagePanel$1)>(r0, null);

        r0.<org.jdesktop.swingx.JXImagePanel: org.jdesktop.swingx.JXImagePanel$MouseHandler mhandler> = $r2;

        $r3 = <org.jdesktop.swingx.JXImagePanel$Style: org.jdesktop.swingx.JXImagePanel$Style CENTERED>;

        r0.<org.jdesktop.swingx.JXImagePanel: org.jdesktop.swingx.JXImagePanel$Style style> = $r3;

     label1:
        $r5 = staticinvoke <javax.imageio.ImageIO: java.awt.image.BufferedImage read(java.net.URL)>(r4);

        virtualinvoke r0.<org.jdesktop.swingx.JXImagePanel: void setImage(java.awt.Image)>($r5);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r8 = <org.jdesktop.swingx.JXImagePanel: java.util.logging.Logger LOG>;

        $r7 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        virtualinvoke $r8.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r7, "", $r6);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void setImage(java.awt.Image)
    {
        java.awt.Image r0, r6;
        org.jdesktop.swingx.JXImagePanel r1;
        java.lang.Object $r3, $r5;
        java.lang.ref.SoftReference $r2, $r4, $r7, $r8;

        r1 := @this: org.jdesktop.swingx.JXImagePanel;

        r0 := @parameter0: java.awt.Image;

        $r2 = r1.<org.jdesktop.swingx.JXImagePanel: java.lang.ref.SoftReference img>;

        $r3 = virtualinvoke $r2.<java.lang.ref.SoftReference: java.lang.Object get()>();

        if r0 == $r3 goto label1;

        $r4 = r1.<org.jdesktop.swingx.JXImagePanel: java.lang.ref.SoftReference img>;

        $r5 = virtualinvoke $r4.<java.lang.ref.SoftReference: java.lang.Object get()>();

        r6 = (java.awt.Image) $r5;

        $r7 = new java.lang.ref.SoftReference;

        specialinvoke $r7.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>(r0);

        r1.<org.jdesktop.swingx.JXImagePanel: java.lang.ref.SoftReference img> = $r7;

        $r8 = r1.<org.jdesktop.swingx.JXImagePanel: java.lang.ref.SoftReference img>;

        virtualinvoke r1.<org.jdesktop.swingx.JXImagePanel: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("image", r6, $r8);

        virtualinvoke r1.<org.jdesktop.swingx.JXImagePanel: void invalidate()>();

        virtualinvoke r1.<org.jdesktop.swingx.JXImagePanel: void repaint()>();

     label1:
        return;
    }

    public java.awt.Image getImage()
    {
        java.awt.Image r10;
        java.util.concurrent.Callable $r3, $r4;
        java.util.logging.Logger $r9;
        org.jdesktop.swingx.JXImagePanel r0;
        java.lang.Exception $r7;
        java.util.logging.Level $r8;
        java.lang.Object $r2, $r5;
        java.lang.ref.SoftReference $r1, $r6;

        r0 := @this: org.jdesktop.swingx.JXImagePanel;

        $r1 = r0.<org.jdesktop.swingx.JXImagePanel: java.lang.ref.SoftReference img>;

        $r2 = virtualinvoke $r1.<java.lang.ref.SoftReference: java.lang.Object get()>();

        r10 = (java.awt.Image) $r2;

        if r10 != null goto label4;

        $r3 = r0.<org.jdesktop.swingx.JXImagePanel: java.util.concurrent.Callable imageLoader>;

        if $r3 == null goto label4;

     label1:
        $r4 = r0.<org.jdesktop.swingx.JXImagePanel: java.util.concurrent.Callable imageLoader>;

        $r5 = interfaceinvoke $r4.<java.util.concurrent.Callable: java.lang.Object call()>();

        r10 = (java.awt.Image) $r5;

        $r6 = new java.lang.ref.SoftReference;

        specialinvoke $r6.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>(r10);

        r0.<org.jdesktop.swingx.JXImagePanel: java.lang.ref.SoftReference img> = $r6;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r9 = <org.jdesktop.swingx.JXImagePanel: java.util.logging.Logger LOG>;

        $r8 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        virtualinvoke $r9.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r8, "", $r7);

     label4:
        return r10;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void setEditable(boolean)
    {
        org.jdesktop.swingx.JXImagePanel r0;
        java.lang.String $r3;
        boolean z0, $z1, $z2, $z3, $z4;
        org.jdesktop.swingx.JXImagePanel$MouseHandler $r1, $r2;

        r0 := @this: org.jdesktop.swingx.JXImagePanel;

        z0 := @parameter0: boolean;

        $z1 = r0.<org.jdesktop.swingx.JXImagePanel: boolean editable>;

        if z0 == $z1 goto label7;

        $z2 = r0.<org.jdesktop.swingx.JXImagePanel: boolean editable>;

        if $z2 == 0 goto label1;

        $r2 = r0.<org.jdesktop.swingx.JXImagePanel: org.jdesktop.swingx.JXImagePanel$MouseHandler mhandler>;

        virtualinvoke r0.<org.jdesktop.swingx.JXImagePanel: void removeMouseListener(java.awt.event.MouseListener)>($r2);

     label1:
        r0.<org.jdesktop.swingx.JXImagePanel: boolean editable> = z0;

        $z3 = r0.<org.jdesktop.swingx.JXImagePanel: boolean editable>;

        if $z3 == 0 goto label2;

        $r1 = r0.<org.jdesktop.swingx.JXImagePanel: org.jdesktop.swingx.JXImagePanel$MouseHandler mhandler>;

        virtualinvoke r0.<org.jdesktop.swingx.JXImagePanel: void addMouseListener(java.awt.event.MouseListener)>($r1);

     label2:
        if z0 == 0 goto label3;

        $r3 = "<html><i><b>Click here<br>to set the image</b></i></html>";

        goto label4;

     label3:
        $r3 = "";

     label4:
        virtualinvoke r0.<org.jdesktop.swingx.JXImagePanel: void setToolTipText(java.lang.String)>($r3);

        if z0 != 0 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        virtualinvoke r0.<org.jdesktop.swingx.JXImagePanel: void firePropertyChange(java.lang.String,boolean,boolean)>("editable", $z4, z0);

        virtualinvoke r0.<org.jdesktop.swingx.JXImagePanel: void repaint()>();

     label7:
        return;
    }

    public boolean isEditable()
    {
        org.jdesktop.swingx.JXImagePanel r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXImagePanel;

        $z0 = r0.<org.jdesktop.swingx.JXImagePanel: boolean editable>;

        return $z0;
    }

    public void setStyle(org.jdesktop.swingx.JXImagePanel$Style)
    {
        org.jdesktop.swingx.JXImagePanel r0;
        org.jdesktop.swingx.JXImagePanel$Style r1, $r2, r3;

        r0 := @this: org.jdesktop.swingx.JXImagePanel;

        r1 := @parameter0: org.jdesktop.swingx.JXImagePanel$Style;

        $r2 = r0.<org.jdesktop.swingx.JXImagePanel: org.jdesktop.swingx.JXImagePanel$Style style>;

        if $r2 == r1 goto label1;

        r3 = r0.<org.jdesktop.swingx.JXImagePanel: org.jdesktop.swingx.JXImagePanel$Style style>;

        r0.<org.jdesktop.swingx.JXImagePanel: org.jdesktop.swingx.JXImagePanel$Style style> = r1;

        virtualinvoke r0.<org.jdesktop.swingx.JXImagePanel: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("style", r3, r1);

        virtualinvoke r0.<org.jdesktop.swingx.JXImagePanel: void repaint()>();

     label1:
        return;
    }

    public org.jdesktop.swingx.JXImagePanel$Style getStyle()
    {
        org.jdesktop.swingx.JXImagePanel r0;
        org.jdesktop.swingx.JXImagePanel$Style $r1;

        r0 := @this: org.jdesktop.swingx.JXImagePanel;

        $r1 = r0.<org.jdesktop.swingx.JXImagePanel: org.jdesktop.swingx.JXImagePanel$Style style>;

        return $r1;
    }

    public java.awt.Dimension getPreferredSize()
    {
        java.awt.Insets $r6;
        org.jdesktop.swingx.JXImagePanel r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, $i11, $i13;
        java.lang.ref.SoftReference $r1, $r2;
        boolean $z0;
        java.awt.Image r4;
        java.awt.Dimension $r5, $r8, $r9;
        java.lang.Object $r3;

        r0 := @this: org.jdesktop.swingx.JXImagePanel;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXImagePanel: boolean isPreferredSizeSet()>();

        if $z0 != 0 goto label3;

        $r1 = r0.<org.jdesktop.swingx.JXImagePanel: java.lang.ref.SoftReference img>;

        if $r1 == null goto label3;

        $r2 = r0.<org.jdesktop.swingx.JXImagePanel: java.lang.ref.SoftReference img>;

        $r3 = virtualinvoke $r2.<java.lang.ref.SoftReference: java.lang.Object get()>();

        r4 = (java.awt.Image) $r3;

        if r4 == null goto label3;

        $i0 = virtualinvoke r4.<java.awt.Image: int getWidth(java.awt.image.ImageObserver)>(null);

        $i1 = virtualinvoke r4.<java.awt.Image: int getHeight(java.awt.image.ImageObserver)>(null);

        $i11 = (int) -1;

        if $i0 == $i11 goto label1;

        $i13 = (int) -1;

        if $i1 != $i13 goto label2;

     label1:
        $r5 = specialinvoke r0.<org.jdesktop.swingx.JXPanel: java.awt.Dimension getPreferredSize()>();

        return $r5;

     label2:
        $r6 = virtualinvoke r0.<org.jdesktop.swingx.JXImagePanel: java.awt.Insets getInsets()>();

        $i3 = $r6.<java.awt.Insets: int left>;

        $i2 = $r6.<java.awt.Insets: int right>;

        $i4 = $i3 + $i2;

        i8 = $i0 + $i4;

        $i6 = $r6.<java.awt.Insets: int top>;

        $i5 = $r6.<java.awt.Insets: int bottom>;

        $i7 = $i6 + $i5;

        i9 = $i1 + $i7;

        $r9 = new java.awt.Dimension;

        specialinvoke $r9.<java.awt.Dimension: void <init>(int,int)>(i8, i9);

        return $r9;

     label3:
        $r8 = specialinvoke r0.<org.jdesktop.swingx.JXPanel: java.awt.Dimension getPreferredSize()>();

        return $r8;
    }

    protected void paintComponent(java.awt.Graphics)
    {
        org.jdesktop.swingx.JXImagePanel$Style $r6;
        byte $b14;
        java.util.concurrent.Callable $r12, $r14;
        org.jdesktop.swingx.JXImagePanel r0;
        java.lang.ref.SoftReference $r3;
        int[] $r7;
        java.awt.Image r16;
        org.jdesktop.swingx.JXImagePanel$1 $r17;
        java.util.logging.Logger $r11;
        java.awt.Graphics r1;
        float $f0, $f1, f2, $f3, $f4, f5, $f6, $f7, $f8, $f9;
        java.awt.Rectangle $r8, $r9, $r10;
        java.awt.Insets $r5;
        java.awt.Graphics2D r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, $i9, $i10, i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, i36, $i37, $i38, $i39, i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, i63, i64, i65, i66, $i68, $i70, $i71;
        java.util.concurrent.ExecutorService $r15;
        java.lang.Object $r4;

        r0 := @this: org.jdesktop.swingx.JXImagePanel;

        r1 := @parameter0: java.awt.Graphics;

        specialinvoke r0.<org.jdesktop.swingx.JXPanel: void paintComponent(java.awt.Graphics)>(r1);

        r2 = (java.awt.Graphics2D) r1;

        $r3 = r0.<org.jdesktop.swingx.JXImagePanel: java.lang.ref.SoftReference img>;

        $r4 = virtualinvoke $r3.<java.lang.ref.SoftReference: java.lang.Object get()>();

        r16 = (java.awt.Image) $r4;

        if r16 != null goto label01;

        $r12 = r0.<org.jdesktop.swingx.JXImagePanel: java.util.concurrent.Callable imageLoader>;

        if $r12 == null goto label01;

        $r15 = <org.jdesktop.swingx.JXImagePanel: java.util.concurrent.ExecutorService service>;

        $r17 = new org.jdesktop.swingx.JXImagePanel$1;

        $r14 = r0.<org.jdesktop.swingx.JXImagePanel: java.util.concurrent.Callable imageLoader>;

        specialinvoke $r17.<org.jdesktop.swingx.JXImagePanel$1: void <init>(org.jdesktop.swingx.JXImagePanel,java.util.concurrent.Callable)>(r0, $r14);

        interfaceinvoke $r15.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r17);

        r16 = r0.<org.jdesktop.swingx.JXImagePanel: java.awt.Image defaultImage>;

     label01:
        if r16 == null goto label17;

        $i0 = virtualinvoke r16.<java.awt.Image: int getWidth(java.awt.image.ImageObserver)>(null);

        $i1 = virtualinvoke r16.<java.awt.Image: int getHeight(java.awt.image.ImageObserver)>(null);

        $i68 = (int) -1;

        if $i0 == $i68 goto label02;

        $i70 = (int) -1;

        if $i1 != $i70 goto label03;

     label02:
        return;

     label03:
        $r5 = virtualinvoke r0.<org.jdesktop.swingx.JXImagePanel: java.awt.Insets getInsets()>();

        $i2 = virtualinvoke r0.<org.jdesktop.swingx.JXImagePanel: int getWidth()>();

        $i3 = $r5.<java.awt.Insets: int left>;

        $i5 = $i2 - $i3;

        $i4 = $r5.<java.awt.Insets: int right>;

        i6 = $i5 - $i4;

        $i7 = virtualinvoke r0.<org.jdesktop.swingx.JXImagePanel: int getHeight()>();

        $i8 = $r5.<java.awt.Insets: int top>;

        $i10 = $i7 - $i8;

        $i9 = $r5.<java.awt.Insets: int bottom>;

        i11 = $i10 - $i9;

        $r7 = <org.jdesktop.swingx.JXImagePanel$2: int[] $SwitchMap$org$jdesktop$swingx$JXImagePanel$Style>;

        $r6 = r0.<org.jdesktop.swingx.JXImagePanel: org.jdesktop.swingx.JXImagePanel$Style style>;

        $i12 = virtualinvoke $r6.<org.jdesktop.swingx.JXImagePanel$Style: int ordinal()>();

        $i13 = $r7[$i12];

        tableswitch($i13)
        {
            case 1: goto label04;
            case 2: goto label07;
            case 3: goto label12;
            case 4: goto label13;
            default: goto label16;
        };

     label04:
        $r9 = virtualinvoke r2.<java.awt.Graphics2D: java.awt.Rectangle getClipBounds()>();

        $i33 = i6 - $i0;

        $i35 = $i33 / 2;

        $i34 = $r5.<java.awt.Insets: int left>;

        i36 = $i35 + $i34;

        $i37 = i11 - $i1;

        $i39 = $i37 / 2;

        $i38 = $r5.<java.awt.Insets: int top>;

        i40 = $i39 + $i38;

        $r10 = staticinvoke <javax.swing.SwingUtilities: java.awt.Rectangle computeIntersection(int,int,int,int,java.awt.Rectangle)>(i36, i40, $i0, $i1, $r9);

        $i41 = $r10.<java.awt.Rectangle: int x>;

        if $i41 != 0 goto label06;

        $i42 = $r10.<java.awt.Rectangle: int y>;

        if $i42 != 0 goto label06;

        $i43 = $r10.<java.awt.Rectangle: int width>;

        if $i43 == 0 goto label05;

        $i44 = $r10.<java.awt.Rectangle: int height>;

        if $i44 != 0 goto label06;

     label05:
        return;

     label06:
        $i47 = $r10.<java.awt.Rectangle: int x>;

        $i48 = $i47 - i36;

        $i49 = $r10.<java.awt.Rectangle: int y>;

        $i50 = $i49 - i40;

        $i51 = $r10.<java.awt.Rectangle: int width>;

        $i52 = $r10.<java.awt.Rectangle: int height>;

        $i53 = $r10.<java.awt.Rectangle: int x>;

        $i54 = $r10.<java.awt.Rectangle: int y>;

        $i55 = $r10.<java.awt.Rectangle: int x>;

        $i56 = $r10.<java.awt.Rectangle: int width>;

        $i57 = $i55 + $i56;

        $i58 = $r10.<java.awt.Rectangle: int y>;

        $i59 = $r10.<java.awt.Rectangle: int height>;

        $i60 = $i58 + $i59;

        $i61 = $i48 + $i51;

        $i62 = $i50 + $i52;

        virtualinvoke r2.<java.awt.Graphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>(r16, $i53, $i54, $i57, $i60, $i48, $i50, $i61, $i62, null);

        goto label17;

     label07:
        $i26 = $r5.<java.awt.Insets: int left>;

        $i25 = $r5.<java.awt.Insets: int top>;

        virtualinvoke r2.<java.awt.Graphics2D: void translate(int,int)>($i26, $i25);

        $r8 = virtualinvoke r2.<java.awt.Graphics2D: java.awt.Rectangle getClipBounds()>();

        virtualinvoke r2.<java.awt.Graphics2D: void setClip(int,int,int,int)>(0, 0, i6, i11);

        i63 = 0;

     label08:
        if i63 >= i11 goto label11;

        i64 = 0;

     label09:
        if i64 >= i6 goto label10;

        virtualinvoke r2.<java.awt.Graphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>(r16, i64, i63, null);

        $i32 = virtualinvoke r16.<java.awt.Image: int getWidth(java.awt.image.ImageObserver)>(null);

        i64 = i64 + $i32;

        goto label09;

     label10:
        $i31 = virtualinvoke r16.<java.awt.Image: int getHeight(java.awt.image.ImageObserver)>(null);

        i63 = i63 + $i31;

        goto label08;

     label11:
        virtualinvoke r2.<java.awt.Graphics2D: void setClip(java.awt.Shape)>($r8);

        $i27 = $r5.<java.awt.Insets: int left>;

        $i30 = neg $i27;

        $i28 = $r5.<java.awt.Insets: int top>;

        $i29 = neg $i28;

        virtualinvoke r2.<java.awt.Graphics2D: void translate(int,int)>($i30, $i29);

        goto label17;

     label12:
        $i24 = $r5.<java.awt.Insets: int left>;

        $i23 = $r5.<java.awt.Insets: int top>;

        virtualinvoke r2.<java.awt.Graphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>(r16, $i24, $i23, i6, i11, null);

        goto label17;

     label13:
        i65 = i6;

        i66 = i11;

        $f1 = (float) i6;

        $f0 = (float) $i0;

        f2 = $f1 / $f0;

        $f4 = (float) i11;

        $f3 = (float) $i1;

        f5 = $f4 / $f3;

        $b14 = f2 cmpg f5;

        $i71 = (int) $b14;

        if $i71 >= 0 goto label14;

        $f8 = (float) $i1;

        $f9 = $f8 * f2;

        i66 = (int) $f9;

        goto label15;

     label14:
        $f6 = (float) $i0;

        $f7 = $f6 * f5;

        i65 = (int) $f7;

     label15:
        $i15 = i6 - i65;

        $i17 = $i15 / 2;

        $i16 = $r5.<java.awt.Insets: int left>;

        $i21 = $i17 + $i16;

        $i18 = i11 - i66;

        $i20 = $i18 / 2;

        $i19 = $r5.<java.awt.Insets: int top>;

        $i22 = $i20 + $i19;

        virtualinvoke r2.<java.awt.Graphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>(r16, $i21, $i22, i65, i66, null);

        goto label17;

     label16:
        $r11 = <org.jdesktop.swingx.JXImagePanel: java.util.logging.Logger LOG>;

        virtualinvoke $r11.<java.util.logging.Logger: void fine(java.lang.String)>("unimplemented");

        $i46 = $r5.<java.awt.Insets: int left>;

        $i45 = $r5.<java.awt.Insets: int top>;

        virtualinvoke r2.<java.awt.Graphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>(r16, $i46, $i45, r0);

     label17:
        return;
    }

    public void setDefaultImage(java.awt.Image)
    {
        java.awt.Image r1;
        org.jdesktop.swingx.JXImagePanel r0;

        r0 := @this: org.jdesktop.swingx.JXImagePanel;

        r1 := @parameter0: java.awt.Image;

        r0.<org.jdesktop.swingx.JXImagePanel: java.awt.Image defaultImage> = r1;

        return;
    }

    public void setImageLoader(java.util.concurrent.Callable)
    {
        java.util.concurrent.Callable r1;
        org.jdesktop.swingx.JXImagePanel r0;

        r0 := @this: org.jdesktop.swingx.JXImagePanel;

        r1 := @parameter0: java.util.concurrent.Callable;

        r0.<org.jdesktop.swingx.JXImagePanel: java.util.concurrent.Callable imageLoader> = r1;

        return;
    }

    static java.util.logging.Logger access$100()
    {
        java.util.logging.Logger $r0;

        $r0 = <org.jdesktop.swingx.JXImagePanel: java.util.logging.Logger LOG>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;
        java.util.concurrent.ExecutorService $r3;

        <org.jdesktop.swingx.JXImagePanel: java.lang.String TEXT> = "<html><i><b>Click here<br>to set the image</b></i></html>";

        $r0 = class "Lorg/jdesktop/swingx/JXImagePanel;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <org.jdesktop.swingx.JXImagePanel: java.util.logging.Logger LOG> = $r2;

        $r3 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int)>(5);

        <org.jdesktop.swingx.JXImagePanel: java.util.concurrent.ExecutorService service> = $r3;

        return;
    }
}
