final class com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl$IntercepterLoader extends com.sun.xml.bind.v2.runtime.unmarshaller.Loader implements com.sun.xml.bind.v2.runtime.unmarshaller.Intercepter
{
    private final com.sun.xml.bind.v2.runtime.unmarshaller.Loader core;
    final com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl this$0;

    public void <init>(com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl, com.sun.xml.bind.v2.runtime.unmarshaller.Loader)
    {
        com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl r1;
        com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl$IntercepterLoader r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.Loader r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl$IntercepterLoader;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl;

        r2 := @parameter1: com.sun.xml.bind.v2.runtime.unmarshaller.Loader;

        r0.<com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl$IntercepterLoader: com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl this$0> = r1;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Loader: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl$IntercepterLoader: com.sun.xml.bind.v2.runtime.unmarshaller.Loader core> = r2;

        return;
    }

    public final void startElement(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State, com.sun.xml.bind.v2.runtime.unmarshaller.TagName) throws org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.TagName r7;
        com.sun.xml.bind.v2.runtime.unmarshaller.Loader $r2, $r8;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext $r3;
        javax.xml.bind.JAXBElement $r11;
        com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl$IntercepterLoader r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State r0, $r10;
        com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl $r5, $r9, $r12, $r13;
        java.lang.Object $r4, $r6, r16;
        java.lang.Class $r14, $r15;

        r1 := @this: com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl$IntercepterLoader;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State;

        r7 := @parameter1: com.sun.xml.bind.v2.runtime.unmarshaller.TagName;

        $r2 = r1.<com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl$IntercepterLoader: com.sun.xml.bind.v2.runtime.unmarshaller.Loader core>;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.Loader loader> = $r2;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.Intercepter intercepter> = r1;

        $r3 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext getContext()>();

        $r4 = virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.Object getOuterPeer()>();

        r16 = $r4;

        if $r4 == null goto label1;

        $r13 = r1.<com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl$IntercepterLoader: com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl this$0>;

        $r14 = $r13.<com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl: java.lang.Class jaxbType>;

        $r15 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        if $r14 == $r15 goto label1;

        r16 = null;

     label1:
        if r16 == null goto label2;

        $r12 = r1.<com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl$IntercepterLoader: com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl this$0>;

        $r11 = (javax.xml.bind.JAXBElement) r16;

        virtualinvoke $r12.<com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl: boolean reset(javax.xml.bind.JAXBElement,com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext)>($r11, $r3);

     label2:
        if r16 != null goto label3;

        $r9 = r1.<com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl$IntercepterLoader: com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl this$0>;

        r16 = virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.Object createInstance(com.sun.xml.bind.v2.runtime.JaxBeanInfo)>($r9);

     label3:
        $r5 = r1.<com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl$IntercepterLoader: com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl this$0>;

        virtualinvoke r1.<com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl$IntercepterLoader: void fireBeforeUnmarshal(com.sun.xml.bind.v2.runtime.JaxBeanInfo,java.lang.Object,com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State)>($r5, r16, r0);

        virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: void recordOuterPeer(java.lang.Object)>(r16);

        $r10 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State prev>;

        $r6 = $r10.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: java.lang.Object target>;

        $r10.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: java.lang.Object backup> = $r6;

        $r10.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: java.lang.Object target> = r16;

        $r8 = r1.<com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl$IntercepterLoader: com.sun.xml.bind.v2.runtime.unmarshaller.Loader core>;

        virtualinvoke $r8.<com.sun.xml.bind.v2.runtime.unmarshaller.Loader: void startElement(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State,com.sun.xml.bind.v2.runtime.unmarshaller.TagName)>(r0, r7);

        return;
    }

    public java.lang.Object intercept(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State, java.lang.Object) throws org.xml.sax.SAXException
    {
        javax.xml.bind.JAXBElement r2;
        com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl$IntercepterLoader r5;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State r0;
        com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl $r6;
        java.lang.Object $r1, $r3, r4;
        boolean $z0;

        r5 := @this: com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl$IntercepterLoader;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State;

        r4 := @parameter1: java.lang.Object;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: java.lang.Object target>;

        r2 = (javax.xml.bind.JAXBElement) $r1;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: java.lang.Object backup>;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: java.lang.Object target> = $r3;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: java.lang.Object backup> = null;

        $z0 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: boolean nil>;

        if $z0 == 0 goto label1;

        virtualinvoke r2.<javax.xml.bind.JAXBElement: void setNil(boolean)>(1);

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: boolean nil> = 0;

     label1:
        if r4 == null goto label2;

        virtualinvoke r2.<javax.xml.bind.JAXBElement: void setValue(java.lang.Object)>(r4);

     label2:
        $r6 = r5.<com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl$IntercepterLoader: com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl this$0>;

        virtualinvoke r5.<com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl$IntercepterLoader: void fireAfterUnmarshal(com.sun.xml.bind.v2.runtime.JaxBeanInfo,java.lang.Object,com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State)>($r6, r2, r0);

        return r2;
    }
}
