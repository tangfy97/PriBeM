public class org.codehaus.groovy.control.ErrorCollector extends java.lang.Object
{
    protected java.util.LinkedList warnings;
    protected java.util.LinkedList errors;
    protected org.codehaus.groovy.control.CompilerConfiguration configuration;

    public void <init>(org.codehaus.groovy.control.CompilerConfiguration)
    {
        org.codehaus.groovy.control.ErrorCollector r0;
        org.codehaus.groovy.control.CompilerConfiguration r1;

        r0 := @this: org.codehaus.groovy.control.ErrorCollector;

        r1 := @parameter0: org.codehaus.groovy.control.CompilerConfiguration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.groovy.control.ErrorCollector: java.util.LinkedList warnings> = null;

        r0.<org.codehaus.groovy.control.ErrorCollector: java.util.LinkedList errors> = null;

        r0.<org.codehaus.groovy.control.ErrorCollector: org.codehaus.groovy.control.CompilerConfiguration configuration> = r1;

        return;
    }

    public void addCollectorContents(org.codehaus.groovy.control.ErrorCollector)
    {
        org.codehaus.groovy.control.ErrorCollector r0, r2;
        java.util.LinkedList $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        r2 := @this: org.codehaus.groovy.control.ErrorCollector;

        r0 := @parameter0: org.codehaus.groovy.control.ErrorCollector;

        $r1 = r0.<org.codehaus.groovy.control.ErrorCollector: java.util.LinkedList errors>;

        if $r1 == null goto label2;

        $r7 = r2.<org.codehaus.groovy.control.ErrorCollector: java.util.LinkedList errors>;

        if $r7 != null goto label1;

        $r10 = r0.<org.codehaus.groovy.control.ErrorCollector: java.util.LinkedList errors>;

        r2.<org.codehaus.groovy.control.ErrorCollector: java.util.LinkedList errors> = $r10;

        goto label2;

     label1:
        $r9 = r2.<org.codehaus.groovy.control.ErrorCollector: java.util.LinkedList errors>;

        $r8 = r0.<org.codehaus.groovy.control.ErrorCollector: java.util.LinkedList errors>;

        virtualinvoke $r9.<java.util.LinkedList: boolean addAll(java.util.Collection)>($r8);

     label2:
        $r11 = r0.<org.codehaus.groovy.control.ErrorCollector: java.util.LinkedList warnings>;

        if $r11 == null goto label4;

        $r3 = r2.<org.codehaus.groovy.control.ErrorCollector: java.util.LinkedList warnings>;

        if $r3 != null goto label3;

        $r6 = r0.<org.codehaus.groovy.control.ErrorCollector: java.util.LinkedList warnings>;

        r2.<org.codehaus.groovy.control.ErrorCollector: java.util.LinkedList warnings> = $r6;

        goto label4;

     label3:
        $r5 = r2.<org.codehaus.groovy.control.ErrorCollector: java.util.LinkedList warnings>;

        $r4 = r0.<org.codehaus.groovy.control.ErrorCollector: java.util.LinkedList warnings>;

        virtualinvoke $r5.<java.util.LinkedList: boolean addAll(java.util.Collection)>($r4);

     label4:
        return;
    }

    public void addErrorAndContinue(org.codehaus.groovy.control.messages.Message)
    {
        org.codehaus.groovy.control.ErrorCollector r0;
        org.codehaus.groovy.control.messages.Message r2;
        java.util.LinkedList $r1, $r3, $r4;

        r0 := @this: org.codehaus.groovy.control.ErrorCollector;

        r2 := @parameter0: org.codehaus.groovy.control.messages.Message;

        $r1 = r0.<org.codehaus.groovy.control.ErrorCollector: java.util.LinkedList errors>;

        if $r1 != null goto label1;

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        r0.<org.codehaus.groovy.control.ErrorCollector: java.util.LinkedList errors> = $r4;

     label1:
        $r3 = r0.<org.codehaus.groovy.control.ErrorCollector: java.util.LinkedList errors>;

        virtualinvoke $r3.<java.util.LinkedList: boolean add(java.lang.Object)>(r2);

        return;
    }

    public void addError(org.codehaus.groovy.control.messages.Message) throws org.codehaus.groovy.control.CompilationFailedException
    {
        org.codehaus.groovy.control.ErrorCollector r0;
        org.codehaus.groovy.control.messages.Message r1;
        int $i0, $i1;
        java.util.LinkedList $r2, $r3;
        org.codehaus.groovy.control.CompilerConfiguration $r4;

        r0 := @this: org.codehaus.groovy.control.ErrorCollector;

        r1 := @parameter0: org.codehaus.groovy.control.messages.Message;

        virtualinvoke r0.<org.codehaus.groovy.control.ErrorCollector: void addErrorAndContinue(org.codehaus.groovy.control.messages.Message)>(r1);

        $r2 = r0.<org.codehaus.groovy.control.ErrorCollector: java.util.LinkedList errors>;

        if $r2 == null goto label1;

        $r3 = r0.<org.codehaus.groovy.control.ErrorCollector: java.util.LinkedList errors>;

        $i0 = virtualinvoke $r3.<java.util.LinkedList: int size()>();

        $r4 = r0.<org.codehaus.groovy.control.ErrorCollector: org.codehaus.groovy.control.CompilerConfiguration configuration>;

        $i1 = virtualinvoke $r4.<org.codehaus.groovy.control.CompilerConfiguration: int getTolerance()>();

        if $i0 < $i1 goto label1;

        virtualinvoke r0.<org.codehaus.groovy.control.ErrorCollector: void failIfErrors()>();

     label1:
        return;
    }

    public void addError(org.codehaus.groovy.control.messages.Message, boolean) throws org.codehaus.groovy.control.CompilationFailedException
    {
        org.codehaus.groovy.control.ErrorCollector r0;
        org.codehaus.groovy.control.messages.Message r1;
        boolean z0;

        r0 := @this: org.codehaus.groovy.control.ErrorCollector;

        r1 := @parameter0: org.codehaus.groovy.control.messages.Message;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        virtualinvoke r0.<org.codehaus.groovy.control.ErrorCollector: void addFatalError(org.codehaus.groovy.control.messages.Message)>(r1);

        goto label2;

     label1:
        virtualinvoke r0.<org.codehaus.groovy.control.ErrorCollector: void addError(org.codehaus.groovy.control.messages.Message)>(r1);

     label2:
        return;
    }

    public void addError(org.codehaus.groovy.syntax.SyntaxException, org.codehaus.groovy.control.SourceUnit) throws org.codehaus.groovy.control.CompilationFailedException
    {
        org.codehaus.groovy.control.ErrorCollector r0;
        org.codehaus.groovy.control.SourceUnit r2;
        org.codehaus.groovy.control.messages.Message $r3;
        org.codehaus.groovy.syntax.SyntaxException r1;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.control.ErrorCollector;

        r1 := @parameter0: org.codehaus.groovy.syntax.SyntaxException;

        r2 := @parameter1: org.codehaus.groovy.control.SourceUnit;

        $r3 = staticinvoke <org.codehaus.groovy.control.messages.Message: org.codehaus.groovy.control.messages.Message create(org.codehaus.groovy.syntax.SyntaxException,org.codehaus.groovy.control.SourceUnit)>(r1, r2);

        $z0 = virtualinvoke r1.<org.codehaus.groovy.syntax.SyntaxException: boolean isFatal()>();

        virtualinvoke r0.<org.codehaus.groovy.control.ErrorCollector: void addError(org.codehaus.groovy.control.messages.Message,boolean)>($r3, $z0);

        return;
    }

    public void addError(java.lang.String, org.codehaus.groovy.syntax.CSTNode, org.codehaus.groovy.control.SourceUnit) throws org.codehaus.groovy.control.CompilationFailedException
    {
        org.codehaus.groovy.control.ErrorCollector r0;
        org.codehaus.groovy.control.messages.LocatedMessage $r1;
        org.codehaus.groovy.control.SourceUnit r4;
        java.lang.String r2;
        org.codehaus.groovy.syntax.CSTNode r3;

        r0 := @this: org.codehaus.groovy.control.ErrorCollector;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: org.codehaus.groovy.syntax.CSTNode;

        r4 := @parameter2: org.codehaus.groovy.control.SourceUnit;

        $r1 = new org.codehaus.groovy.control.messages.LocatedMessage;

        specialinvoke $r1.<org.codehaus.groovy.control.messages.LocatedMessage: void <init>(java.lang.String,org.codehaus.groovy.syntax.CSTNode,org.codehaus.groovy.control.SourceUnit)>(r2, r3, r4);

        virtualinvoke r0.<org.codehaus.groovy.control.ErrorCollector: void addError(org.codehaus.groovy.control.messages.Message)>($r1);

        return;
    }

    public void addFatalError(org.codehaus.groovy.control.messages.Message) throws org.codehaus.groovy.control.CompilationFailedException
    {
        org.codehaus.groovy.control.ErrorCollector r0;
        org.codehaus.groovy.control.messages.Message r1;

        r0 := @this: org.codehaus.groovy.control.ErrorCollector;

        r1 := @parameter0: org.codehaus.groovy.control.messages.Message;

        virtualinvoke r0.<org.codehaus.groovy.control.ErrorCollector: void addError(org.codehaus.groovy.control.messages.Message)>(r1);

        virtualinvoke r0.<org.codehaus.groovy.control.ErrorCollector: void failIfErrors()>();

        return;
    }

    public void addException(java.lang.Exception, org.codehaus.groovy.control.SourceUnit) throws org.codehaus.groovy.control.CompilationFailedException
    {
        org.codehaus.groovy.control.ErrorCollector r0;
        org.codehaus.groovy.control.SourceUnit r4;
        org.codehaus.groovy.control.CompilerConfiguration $r3;
        java.lang.Exception r2;
        org.codehaus.groovy.control.messages.ExceptionMessage $r1;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.control.ErrorCollector;

        r2 := @parameter0: java.lang.Exception;

        r4 := @parameter1: org.codehaus.groovy.control.SourceUnit;

        $r1 = new org.codehaus.groovy.control.messages.ExceptionMessage;

        $r3 = r0.<org.codehaus.groovy.control.ErrorCollector: org.codehaus.groovy.control.CompilerConfiguration configuration>;

        $z0 = virtualinvoke $r3.<org.codehaus.groovy.control.CompilerConfiguration: boolean getDebug()>();

        specialinvoke $r1.<org.codehaus.groovy.control.messages.ExceptionMessage: void <init>(java.lang.Exception,boolean,org.codehaus.groovy.control.ProcessingUnit)>(r2, $z0, r4);

        virtualinvoke r0.<org.codehaus.groovy.control.ErrorCollector: void addError(org.codehaus.groovy.control.messages.Message)>($r1);

        virtualinvoke r0.<org.codehaus.groovy.control.ErrorCollector: void failIfErrors()>();

        return;
    }

    public boolean hasErrors()
    {
        org.codehaus.groovy.control.ErrorCollector r0;
        java.util.LinkedList $r1;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.control.ErrorCollector;

        $r1 = r0.<org.codehaus.groovy.control.ErrorCollector: java.util.LinkedList errors>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasWarnings()
    {
        org.codehaus.groovy.control.ErrorCollector r0;
        java.util.LinkedList $r1;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.control.ErrorCollector;

        $r1 = r0.<org.codehaus.groovy.control.ErrorCollector: java.util.LinkedList warnings>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.util.List getWarnings()
    {
        org.codehaus.groovy.control.ErrorCollector r0;
        java.util.LinkedList $r1;

        r0 := @this: org.codehaus.groovy.control.ErrorCollector;

        $r1 = r0.<org.codehaus.groovy.control.ErrorCollector: java.util.LinkedList warnings>;

        return $r1;
    }

    public java.util.List getErrors()
    {
        org.codehaus.groovy.control.ErrorCollector r0;
        java.util.LinkedList $r1;

        r0 := @this: org.codehaus.groovy.control.ErrorCollector;

        $r1 = r0.<org.codehaus.groovy.control.ErrorCollector: java.util.LinkedList errors>;

        return $r1;
    }

    public int getWarningCount()
    {
        org.codehaus.groovy.control.ErrorCollector r0;
        int $i0;
        java.util.LinkedList $r1, $r2;

        r0 := @this: org.codehaus.groovy.control.ErrorCollector;

        $r1 = r0.<org.codehaus.groovy.control.ErrorCollector: java.util.LinkedList warnings>;

        if $r1 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.codehaus.groovy.control.ErrorCollector: java.util.LinkedList warnings>;

        $i0 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

     label2:
        return $i0;
    }

    public int getErrorCount()
    {
        org.codehaus.groovy.control.ErrorCollector r0;
        int $i0;
        java.util.LinkedList $r1, $r2;

        r0 := @this: org.codehaus.groovy.control.ErrorCollector;

        $r1 = r0.<org.codehaus.groovy.control.ErrorCollector: java.util.LinkedList errors>;

        if $r1 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.codehaus.groovy.control.ErrorCollector: java.util.LinkedList errors>;

        $i0 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

     label2:
        return $i0;
    }

    public org.codehaus.groovy.control.messages.WarningMessage getWarning(int)
    {
        org.codehaus.groovy.control.ErrorCollector r0;
        org.codehaus.groovy.control.messages.WarningMessage $r3;
        int i0, $i1;
        java.lang.Object $r2;
        java.util.LinkedList $r1;

        r0 := @this: org.codehaus.groovy.control.ErrorCollector;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.codehaus.groovy.control.ErrorCollector: int getWarningCount()>();

        if i0 >= $i1 goto label1;

        $r1 = r0.<org.codehaus.groovy.control.ErrorCollector: java.util.LinkedList warnings>;

        $r2 = virtualinvoke $r1.<java.util.LinkedList: java.lang.Object get(int)>(i0);

        $r3 = (org.codehaus.groovy.control.messages.WarningMessage) $r2;

        return $r3;

     label1:
        return null;
    }

    public org.codehaus.groovy.control.messages.Message getError(int)
    {
        org.codehaus.groovy.control.ErrorCollector r0;
        org.codehaus.groovy.control.messages.Message $r3;
        int i0, $i1;
        java.lang.Object $r2;
        java.util.LinkedList $r1;

        r0 := @this: org.codehaus.groovy.control.ErrorCollector;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.codehaus.groovy.control.ErrorCollector: int getErrorCount()>();

        if i0 >= $i1 goto label1;

        $r1 = r0.<org.codehaus.groovy.control.ErrorCollector: java.util.LinkedList errors>;

        $r2 = virtualinvoke $r1.<java.util.LinkedList: java.lang.Object get(int)>(i0);

        $r3 = (org.codehaus.groovy.control.messages.Message) $r2;

        return $r3;

     label1:
        return null;
    }

    public org.codehaus.groovy.control.messages.Message getLastError()
    {
        org.codehaus.groovy.control.ErrorCollector r0;
        org.codehaus.groovy.control.messages.Message $r3;
        java.lang.Object $r2;
        java.util.LinkedList $r1;

        r0 := @this: org.codehaus.groovy.control.ErrorCollector;

        $r1 = r0.<org.codehaus.groovy.control.ErrorCollector: java.util.LinkedList errors>;

        $r2 = virtualinvoke $r1.<java.util.LinkedList: java.lang.Object getLast()>();

        $r3 = (org.codehaus.groovy.control.messages.Message) $r2;

        return $r3;
    }

    public org.codehaus.groovy.syntax.SyntaxException getSyntaxError(int)
    {
        org.codehaus.groovy.control.ErrorCollector r0;
        org.codehaus.groovy.control.messages.Message $r1;
        int i0;
        org.codehaus.groovy.control.messages.SyntaxErrorMessage $r2;
        org.codehaus.groovy.syntax.SyntaxException r3;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.control.ErrorCollector;

        i0 := @parameter0: int;

        r3 = null;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.control.ErrorCollector: org.codehaus.groovy.control.messages.Message getError(int)>(i0);

        if $r1 == null goto label1;

        $z0 = $r1 instanceof org.codehaus.groovy.control.messages.SyntaxErrorMessage;

        if $z0 == 0 goto label1;

        $r2 = (org.codehaus.groovy.control.messages.SyntaxErrorMessage) $r1;

        r3 = virtualinvoke $r2.<org.codehaus.groovy.control.messages.SyntaxErrorMessage: org.codehaus.groovy.syntax.SyntaxException getCause()>();

     label1:
        return r3;
    }

    public java.lang.Exception getException(int)
    {
        org.codehaus.groovy.control.ErrorCollector r0;
        org.codehaus.groovy.control.messages.Message $r1;
        org.codehaus.groovy.control.messages.SyntaxErrorMessage $r2;
        java.lang.Exception r4;
        int i0;
        boolean $z0, $z1;
        org.codehaus.groovy.control.messages.ExceptionMessage $r3;

        r0 := @this: org.codehaus.groovy.control.ErrorCollector;

        i0 := @parameter0: int;

        r4 = null;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.control.ErrorCollector: org.codehaus.groovy.control.messages.Message getError(int)>(i0);

        if $r1 == null goto label2;

        $z0 = $r1 instanceof org.codehaus.groovy.control.messages.ExceptionMessage;

        if $z0 == 0 goto label1;

        $r3 = (org.codehaus.groovy.control.messages.ExceptionMessage) $r1;

        r4 = virtualinvoke $r3.<org.codehaus.groovy.control.messages.ExceptionMessage: java.lang.Exception getCause()>();

        goto label2;

     label1:
        $z1 = $r1 instanceof org.codehaus.groovy.control.messages.SyntaxErrorMessage;

        if $z1 == 0 goto label2;

        $r2 = (org.codehaus.groovy.control.messages.SyntaxErrorMessage) $r1;

        r4 = virtualinvoke $r2.<org.codehaus.groovy.control.messages.SyntaxErrorMessage: org.codehaus.groovy.syntax.SyntaxException getCause()>();

     label2:
        return r4;
    }

    public void addWarning(org.codehaus.groovy.control.messages.WarningMessage)
    {
        org.codehaus.groovy.control.ErrorCollector r1;
        org.codehaus.groovy.control.CompilerConfiguration $r2;
        org.codehaus.groovy.control.messages.WarningMessage r0;
        int $i0;
        java.util.LinkedList $r3, $r4, $r5;
        boolean $z0;

        r1 := @this: org.codehaus.groovy.control.ErrorCollector;

        r0 := @parameter0: org.codehaus.groovy.control.messages.WarningMessage;

        $r2 = r1.<org.codehaus.groovy.control.ErrorCollector: org.codehaus.groovy.control.CompilerConfiguration configuration>;

        $i0 = virtualinvoke $r2.<org.codehaus.groovy.control.CompilerConfiguration: int getWarningLevel()>();

        $z0 = virtualinvoke r0.<org.codehaus.groovy.control.messages.WarningMessage: boolean isRelevant(int)>($i0);

        if $z0 == 0 goto label2;

        $r3 = r1.<org.codehaus.groovy.control.ErrorCollector: java.util.LinkedList warnings>;

        if $r3 != null goto label1;

        $r5 = new java.util.LinkedList;

        specialinvoke $r5.<java.util.LinkedList: void <init>()>();

        r1.<org.codehaus.groovy.control.ErrorCollector: java.util.LinkedList warnings> = $r5;

     label1:
        $r4 = r1.<org.codehaus.groovy.control.ErrorCollector: java.util.LinkedList warnings>;

        virtualinvoke $r4.<java.util.LinkedList: boolean add(java.lang.Object)>(r0);

     label2:
        return;
    }

    public void addWarning(int, java.lang.String, org.codehaus.groovy.syntax.CSTNode, org.codehaus.groovy.control.SourceUnit)
    {
        org.codehaus.groovy.control.ErrorCollector r0;
        org.codehaus.groovy.control.SourceUnit r5;
        org.codehaus.groovy.control.CompilerConfiguration $r1;
        org.codehaus.groovy.syntax.CSTNode r4;
        org.codehaus.groovy.control.messages.WarningMessage $r2;
        int i0, $i1;
        java.lang.String r3;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.control.ErrorCollector;

        i0 := @parameter0: int;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: org.codehaus.groovy.syntax.CSTNode;

        r5 := @parameter3: org.codehaus.groovy.control.SourceUnit;

        $r1 = r0.<org.codehaus.groovy.control.ErrorCollector: org.codehaus.groovy.control.CompilerConfiguration configuration>;

        $i1 = virtualinvoke $r1.<org.codehaus.groovy.control.CompilerConfiguration: int getWarningLevel()>();

        $z0 = staticinvoke <org.codehaus.groovy.control.messages.WarningMessage: boolean isRelevant(int,int)>(i0, $i1);

        if $z0 == 0 goto label1;

        $r2 = new org.codehaus.groovy.control.messages.WarningMessage;

        specialinvoke $r2.<org.codehaus.groovy.control.messages.WarningMessage: void <init>(int,java.lang.String,org.codehaus.groovy.syntax.CSTNode,org.codehaus.groovy.control.SourceUnit)>(i0, r3, r4, r5);

        virtualinvoke r0.<org.codehaus.groovy.control.ErrorCollector: void addWarning(org.codehaus.groovy.control.messages.WarningMessage)>($r2);

     label1:
        return;
    }

    public void addWarning(int, java.lang.String, java.lang.Object, org.codehaus.groovy.syntax.CSTNode, org.codehaus.groovy.control.SourceUnit)
    {
        org.codehaus.groovy.control.ErrorCollector r0;
        org.codehaus.groovy.control.SourceUnit r6;
        org.codehaus.groovy.control.CompilerConfiguration $r1;
        org.codehaus.groovy.syntax.CSTNode r5;
        org.codehaus.groovy.control.messages.WarningMessage $r2;
        int i0, $i1;
        java.lang.Object r4;
        java.lang.String r3;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.control.ErrorCollector;

        i0 := @parameter0: int;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.Object;

        r5 := @parameter3: org.codehaus.groovy.syntax.CSTNode;

        r6 := @parameter4: org.codehaus.groovy.control.SourceUnit;

        $r1 = r0.<org.codehaus.groovy.control.ErrorCollector: org.codehaus.groovy.control.CompilerConfiguration configuration>;

        $i1 = virtualinvoke $r1.<org.codehaus.groovy.control.CompilerConfiguration: int getWarningLevel()>();

        $z0 = staticinvoke <org.codehaus.groovy.control.messages.WarningMessage: boolean isRelevant(int,int)>(i0, $i1);

        if $z0 == 0 goto label1;

        $r2 = new org.codehaus.groovy.control.messages.WarningMessage;

        specialinvoke $r2.<org.codehaus.groovy.control.messages.WarningMessage: void <init>(int,java.lang.String,java.lang.Object,org.codehaus.groovy.syntax.CSTNode,org.codehaus.groovy.control.SourceUnit)>(i0, r3, r4, r5, r6);

        virtualinvoke r0.<org.codehaus.groovy.control.ErrorCollector: void addWarning(org.codehaus.groovy.control.messages.WarningMessage)>($r2);

     label1:
        return;
    }

    protected void failIfErrors() throws org.codehaus.groovy.control.CompilationFailedException
    {
        org.codehaus.groovy.control.ErrorCollector r0;
        org.codehaus.groovy.control.MultipleCompilationErrorsException $r1;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.control.ErrorCollector;

        $z0 = virtualinvoke r0.<org.codehaus.groovy.control.ErrorCollector: boolean hasErrors()>();

        if $z0 == 0 goto label1;

        $r1 = new org.codehaus.groovy.control.MultipleCompilationErrorsException;

        specialinvoke $r1.<org.codehaus.groovy.control.MultipleCompilationErrorsException: void <init>(org.codehaus.groovy.control.ErrorCollector)>(r0);

        throw $r1;

     label1:
        return;
    }

    private void write(java.io.PrintWriter, org.codehaus.groovy.control.Janitor, java.util.List, java.lang.String)
    {
        org.codehaus.groovy.control.Janitor r10;
        java.lang.StringBuffer $r3, $r4, $r6;
        int $i0, $i1, $i2;
        java.lang.String r5, $r7;
        boolean $z0, $z1, $z2;
        java.io.PrintWriter r2;
        org.codehaus.groovy.control.ErrorCollector r11;
        java.util.Iterator $r1;
        org.codehaus.groovy.control.messages.Message r9;
        org.codehaus.groovy.control.messages.SyntaxErrorMessage r13;
        org.codehaus.groovy.control.CompilerConfiguration $r12;
        java.util.List r0;
        java.lang.Object $r8;
        org.codehaus.groovy.syntax.SyntaxException $r14;

        r11 := @this: org.codehaus.groovy.control.ErrorCollector;

        r2 := @parameter0: java.io.PrintWriter;

        r10 := @parameter1: org.codehaus.groovy.control.Janitor;

        r0 := @parameter2: java.util.List;

        r5 := @parameter3: java.lang.String;

        if r0 == null goto label1;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 != 0 goto label2;

     label1:
        return;

     label2:
        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r8 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.codehaus.groovy.control.messages.Message) $r8;

        virtualinvoke r9.<org.codehaus.groovy.control.messages.Message: void write(java.io.PrintWriter,org.codehaus.groovy.control.Janitor)>(r2, r10);

        $r12 = r11.<org.codehaus.groovy.control.ErrorCollector: org.codehaus.groovy.control.CompilerConfiguration configuration>;

        $z1 = virtualinvoke $r12.<org.codehaus.groovy.control.CompilerConfiguration: boolean getDebug()>();

        if $z1 == 0 goto label4;

        $z2 = r9 instanceof org.codehaus.groovy.control.messages.SyntaxErrorMessage;

        if $z2 == 0 goto label4;

        r13 = (org.codehaus.groovy.control.messages.SyntaxErrorMessage) r9;

        $r14 = virtualinvoke r13.<org.codehaus.groovy.control.messages.SyntaxErrorMessage: org.codehaus.groovy.syntax.SyntaxException getCause()>();

        virtualinvoke $r14.<org.codehaus.groovy.syntax.SyntaxException: void printStackTrace(java.io.PrintWriter)>(r2);

     label4:
        goto label3;

     label5:
        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i1);

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r7);

        $i2 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i2 <= 1 goto label6;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("s");

     label6:
        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        return;
    }

    public void write(java.io.PrintWriter, org.codehaus.groovy.control.Janitor)
    {
        java.io.PrintWriter r1;
        org.codehaus.groovy.control.ErrorCollector r0;
        org.codehaus.groovy.control.Janitor r2;
        java.util.LinkedList $r3, $r4;

        r0 := @this: org.codehaus.groovy.control.ErrorCollector;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: org.codehaus.groovy.control.Janitor;

        $r3 = r0.<org.codehaus.groovy.control.ErrorCollector: java.util.LinkedList warnings>;

        specialinvoke r0.<org.codehaus.groovy.control.ErrorCollector: void write(java.io.PrintWriter,org.codehaus.groovy.control.Janitor,java.util.List,java.lang.String)>(r1, r2, $r3, "warning");

        $r4 = r0.<org.codehaus.groovy.control.ErrorCollector: java.util.LinkedList errors>;

        specialinvoke r0.<org.codehaus.groovy.control.ErrorCollector: void write(java.io.PrintWriter,org.codehaus.groovy.control.Janitor,java.util.List,java.lang.String)>(r1, r2, $r4, "error");

        return;
    }
}
