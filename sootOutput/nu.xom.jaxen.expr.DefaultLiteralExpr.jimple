class nu.xom.jaxen.expr.DefaultLiteralExpr extends nu.xom.jaxen.expr.DefaultExpr implements nu.xom.jaxen.expr.LiteralExpr
{
    private static final long serialVersionUID;
    private java.lang.String literal;

    void <init>(java.lang.String)
    {
        java.lang.String r1;
        nu.xom.jaxen.expr.DefaultLiteralExpr r0;

        r0 := @this: nu.xom.jaxen.expr.DefaultLiteralExpr;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<nu.xom.jaxen.expr.DefaultExpr: void <init>()>();

        r0.<nu.xom.jaxen.expr.DefaultLiteralExpr: java.lang.String literal> = r1;

        return;
    }

    public java.lang.String getLiteral()
    {
        java.lang.String $r1;
        nu.xom.jaxen.expr.DefaultLiteralExpr r0;

        r0 := @this: nu.xom.jaxen.expr.DefaultLiteralExpr;

        $r1 = r0.<nu.xom.jaxen.expr.DefaultLiteralExpr: java.lang.String literal>;

        return $r1;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r0, $r1, $r4, $r5;
        nu.xom.jaxen.expr.DefaultLiteralExpr r2;
        java.lang.String $r3, $r6;

        r2 := @this: nu.xom.jaxen.expr.DefaultLiteralExpr;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[(DefaultLiteralExpr): ");

        $r3 = virtualinvoke r2.<nu.xom.jaxen.expr.DefaultLiteralExpr: java.lang.String getLiteral()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    public java.lang.String getText()
    {
        java.lang.StringBuffer $r3, $r5, $r6, $r9, $r11, $r12, $r14, $r15;
        int $i0, $i2;
        java.lang.String $r1, $r4, $r7, $r10, $r13;
        nu.xom.jaxen.expr.DefaultLiteralExpr r0;

        r0 := @this: nu.xom.jaxen.expr.DefaultLiteralExpr;

        $r1 = r0.<nu.xom.jaxen.expr.DefaultLiteralExpr: java.lang.String literal>;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(34);

        $i2 = (int) -1;

        if $i0 != $i2 goto label1;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r10 = virtualinvoke r0.<nu.xom.jaxen.expr.DefaultLiteralExpr: java.lang.String getLiteral()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r13;

     label1:
        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r4 = virtualinvoke r0.<nu.xom.jaxen.expr.DefaultLiteralExpr: java.lang.String getLiteral()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }

    public java.lang.Object evaluate(nu.xom.jaxen.Context)
    {
        java.lang.String $r1;
        nu.xom.jaxen.Context r2;
        nu.xom.jaxen.expr.DefaultLiteralExpr r0;

        r0 := @this: nu.xom.jaxen.expr.DefaultLiteralExpr;

        r2 := @parameter0: nu.xom.jaxen.Context;

        $r1 = virtualinvoke r0.<nu.xom.jaxen.expr.DefaultLiteralExpr: java.lang.String getLiteral()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <nu.xom.jaxen.expr.DefaultLiteralExpr: long serialVersionUID> = -953829179036273338L;

        return;
    }
}
