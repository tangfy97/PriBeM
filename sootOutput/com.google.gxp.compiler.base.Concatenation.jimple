public class com.google.gxp.compiler.base.Concatenation extends com.google.gxp.compiler.base.Expression
{
    private final com.google.gxp.com.google.common.collect.ImmutableList values;

    private void <init>(com.google.gxp.compiler.base.Node, com.google.gxp.compiler.schema.Schema, java.util.List)
    {
        com.google.gxp.compiler.schema.Schema r2;
        com.google.gxp.com.google.common.collect.ImmutableList $r4;
        com.google.gxp.compiler.base.Concatenation r0;
        java.lang.IllegalArgumentException $r5;
        java.util.List r3;
        com.google.gxp.compiler.base.Node r1;
        int $i0, $i1;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: com.google.gxp.compiler.base.Concatenation;

        r1 := @parameter0: com.google.gxp.compiler.base.Node;

        r2 := @parameter1: com.google.gxp.compiler.schema.Schema;

        r3 := @parameter2: java.util.List;

        specialinvoke r0.<com.google.gxp.compiler.base.Expression: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema)>(r1, r2);

        $r4 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableList: com.google.gxp.com.google.common.collect.ImmutableList copyOf(java.lang.Iterable)>(r3);

        r0.<com.google.gxp.compiler.base.Concatenation: com.google.gxp.com.google.common.collect.ImmutableList values> = $r4;

        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i0 >= 2 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Concatenation cannot have only ");

        $i1 = interfaceinvoke r3.<java.util.List: int size()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" values.");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label1:
        return;
    }

    public static com.google.gxp.compiler.base.Expression create(com.google.gxp.compiler.alerts.SourcePosition, com.google.gxp.compiler.schema.Schema, java.util.List)
    {
        com.google.gxp.compiler.alerts.SourcePosition r8;
        com.google.gxp.compiler.base.Expression $r6;
        com.google.gxp.compiler.schema.Schema r0;
        com.google.gxp.compiler.base.Concatenation $r2;
        com.google.gxp.compiler.base.StringConstant $r7;
        java.util.List $r1, r9;
        com.google.gxp.compiler.base.Node $r4;
        int $i0;
        java.lang.Object $r3, $r5;

        r8 := @parameter0: com.google.gxp.compiler.alerts.SourcePosition;

        r0 := @parameter1: com.google.gxp.compiler.schema.Schema;

        r9 := @parameter2: java.util.List;

        $r1 = staticinvoke <com.google.gxp.compiler.base.Concatenation: java.util.List simplify(com.google.gxp.compiler.schema.Schema,java.util.List)>(r0, r9);

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r7 = new com.google.gxp.compiler.base.StringConstant;

        specialinvoke $r7.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.alerts.SourcePosition,com.google.gxp.compiler.schema.Schema,java.lang.String)>(r8, r0, "");

        return $r7;

     label1:
        if $i0 != 1 goto label2;

        $r5 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (com.google.gxp.compiler.base.Expression) $r5;

        return $r6;

     label2:
        $r2 = new com.google.gxp.compiler.base.Concatenation;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (com.google.gxp.compiler.base.Node) $r3;

        specialinvoke $r2.<com.google.gxp.compiler.base.Concatenation: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.util.List)>($r4, r0, $r1);

        return $r2;
    }

    public java.util.List getValues()
    {
        com.google.gxp.com.google.common.collect.ImmutableList $r1;
        com.google.gxp.compiler.base.Concatenation r0;

        r0 := @this: com.google.gxp.compiler.base.Concatenation;

        $r1 = r0.<com.google.gxp.compiler.base.Concatenation: com.google.gxp.com.google.common.collect.ImmutableList values>;

        return $r1;
    }

    public com.google.gxp.compiler.base.Expression withValues(java.util.List)
    {
        com.google.gxp.compiler.alerts.SourcePosition $r3;
        java.util.List r0;
        com.google.gxp.compiler.base.Expression $r5;
        com.google.gxp.com.google.common.collect.ImmutableList $r2;
        com.google.gxp.compiler.schema.Schema $r4;
        com.google.gxp.compiler.base.Concatenation r1;
        boolean $z0;

        r1 := @this: com.google.gxp.compiler.base.Concatenation;

        r0 := @parameter0: java.util.List;

        $r2 = r1.<com.google.gxp.compiler.base.Concatenation: com.google.gxp.com.google.common.collect.ImmutableList values>;

        $z0 = staticinvoke <com.google.gxp.com.google.common.collect.Iterables: boolean elementsEqual(java.lang.Iterable,java.lang.Iterable)>(r0, $r2);

        if $z0 == 0 goto label1;

        $r5 = r1;

        goto label2;

     label1:
        $r3 = virtualinvoke r1.<com.google.gxp.compiler.base.Concatenation: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r4 = virtualinvoke r1.<com.google.gxp.compiler.base.Concatenation: com.google.gxp.compiler.schema.Schema getSchema()>();

        $r5 = staticinvoke <com.google.gxp.compiler.base.Concatenation: com.google.gxp.compiler.base.Expression create(com.google.gxp.compiler.alerts.SourcePosition,com.google.gxp.compiler.schema.Schema,java.util.List)>($r3, $r4, r0);

     label2:
        return $r5;
    }

    public java.lang.Object acceptVisitor(com.google.gxp.compiler.base.ExpressionVisitor)
    {
        java.lang.Object $r2;
        com.google.gxp.compiler.base.ExpressionVisitor r0;
        com.google.gxp.compiler.base.Concatenation r1;

        r1 := @this: com.google.gxp.compiler.base.Concatenation;

        r0 := @parameter0: com.google.gxp.compiler.base.ExpressionVisitor;

        $r2 = interfaceinvoke r0.<com.google.gxp.compiler.base.ExpressionVisitor: java.lang.Object visitConcatenation(com.google.gxp.compiler.base.Concatenation)>(r1);

        return $r2;
    }

    private static final java.util.List simplify(com.google.gxp.compiler.schema.Schema, java.util.List)
    {
        com.google.gxp.compiler.schema.Schema r2;
        java.util.ArrayList $r0;
        com.google.gxp.compiler.base.StringConstant $r5;
        java.util.List r3;
        com.google.gxp.compiler.base.Node $r4;
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r6;

        r2 := @parameter0: com.google.gxp.compiler.schema.Schema;

        r3 := @parameter1: java.util.List;

        $r0 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r4 = staticinvoke <com.google.gxp.compiler.base.Concatenation: com.google.gxp.compiler.base.Node simplifyHelper(com.google.gxp.compiler.schema.Schema,java.util.List,java.util.List,com.google.gxp.compiler.base.Node,java.lang.StringBuilder)>(r2, r3, $r0, null, $r1);

        if $r4 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label1;

        $r5 = new com.google.gxp.compiler.base.StringConstant;

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String)>($r4, r2, $r6);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r5);

     label1:
        return $r0;
    }

    private static final com.google.gxp.compiler.base.Node simplifyHelper(com.google.gxp.compiler.schema.Schema, java.util.List, java.util.List, com.google.gxp.compiler.base.Node, java.lang.StringBuilder)
    {
        com.google.gxp.compiler.base.Expression r13, r14;
        com.google.gxp.compiler.schema.Schema r7;
        com.google.gxp.compiler.base.Node r12;
        int $i0;
        java.lang.String $r8, $r10;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r1;
        com.google.gxp.com.google.common.collect.ImmutableList $r9;
        com.google.gxp.compiler.base.Concatenation r15;
        com.google.gxp.compiler.base.StringConstant $r6, $r11;
        java.util.List r0, r4;
        java.lang.Object $r2, $r3;
        java.lang.StringBuilder r5;

        r7 := @parameter0: com.google.gxp.compiler.schema.Schema;

        r0 := @parameter1: java.util.List;

        r4 := @parameter2: java.util.List;

        r12 := @parameter3: com.google.gxp.compiler.base.Node;

        r5 := @parameter4: java.lang.StringBuilder;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r13 = (com.google.gxp.compiler.base.Expression) $r2;

        $r3 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r13);

        r14 = (com.google.gxp.compiler.base.Expression) $r3;

        $z1 = r14 instanceof com.google.gxp.compiler.base.StringConstant;

        if $z1 == 0 goto label3;

        if r12 != null goto label2;

        r12 = r14;

     label2:
        $r11 = (com.google.gxp.compiler.base.StringConstant) r14;

        $r10 = virtualinvoke $r11.<com.google.gxp.compiler.base.StringConstant: java.lang.String evaluate()>();

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        goto label7;

     label3:
        $z2 = r14 instanceof com.google.gxp.compiler.base.Concatenation;

        if $z2 == 0 goto label4;

        r15 = (com.google.gxp.compiler.base.Concatenation) r14;

        $r9 = r15.<com.google.gxp.compiler.base.Concatenation: com.google.gxp.com.google.common.collect.ImmutableList values>;

        r12 = staticinvoke <com.google.gxp.compiler.base.Concatenation: com.google.gxp.compiler.base.Node simplifyHelper(com.google.gxp.compiler.schema.Schema,java.util.List,java.util.List,com.google.gxp.compiler.base.Node,java.lang.StringBuilder)>(r7, $r9, r4, r12, r5);

        goto label7;

     label4:
        if r12 == null goto label6;

        $i0 = virtualinvoke r5.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label5;

        $r6 = new com.google.gxp.compiler.base.StringConstant;

        $r8 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String)>(r12, r7, $r8);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r6);

        virtualinvoke r5.<java.lang.StringBuilder: void setLength(int)>(0);

     label5:
        r12 = null;

     label6:
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r14);

     label7:
        goto label1;

     label8:
        return r12;
    }

    public boolean hasStaticString()
    {
        java.util.List $r1;
        com.google.gxp.compiler.base.Expression r4;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        com.google.gxp.compiler.base.Concatenation r0;
        boolean $z0, $z1;

        r0 := @this: com.google.gxp.compiler.base.Concatenation;

        $r1 = virtualinvoke r0.<com.google.gxp.compiler.base.Concatenation: java.util.List getValues()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.google.gxp.compiler.base.Expression) $r3;

        $z1 = virtualinvoke r4.<com.google.gxp.compiler.base.Expression: boolean hasStaticString()>();

        if $z1 != 0 goto label2;

        return 0;

     label2:
        goto label1;

     label3:
        return 1;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        com.google.gxp.compiler.base.Concatenation r1, $r2;
        boolean $z0, $z1, $z2;

        r1 := @this: com.google.gxp.compiler.base.Concatenation;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof com.google.gxp.compiler.base.Concatenation;

        if $z0 == 0 goto label1;

        $r2 = (com.google.gxp.compiler.base.Concatenation) r0;

        $z1 = virtualinvoke r1.<com.google.gxp.compiler.base.Concatenation: boolean equals(com.google.gxp.compiler.base.Concatenation)>($r2);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean equals(com.google.gxp.compiler.base.Concatenation)
    {
        com.google.gxp.com.google.common.collect.ImmutableList $r2, $r3;
        com.google.gxp.compiler.base.Concatenation r0, r1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.google.gxp.compiler.base.Concatenation;

        r1 := @parameter0: com.google.gxp.compiler.base.Concatenation;

        $z0 = virtualinvoke r0.<com.google.gxp.compiler.base.Concatenation: boolean equalsExpression(com.google.gxp.compiler.base.Expression)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.google.gxp.compiler.base.Concatenation: com.google.gxp.com.google.common.collect.ImmutableList values>;

        $r2 = r1.<com.google.gxp.compiler.base.Concatenation: com.google.gxp.com.google.common.collect.ImmutableList values>;

        $z1 = staticinvoke <com.google.gxp.com.google.common.collect.Iterables: boolean elementsEqual(java.lang.Iterable,java.lang.Iterable)>($r3, $r2);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public int hashCode()
    {
        java.lang.Object[] $r0;
        int $i0, $i1;
        com.google.gxp.com.google.common.collect.ImmutableList $r3;
        com.google.gxp.compiler.base.Concatenation r1;
        java.lang.Integer $r2;

        r1 := @this: com.google.gxp.compiler.base.Concatenation;

        $r0 = newarray (java.lang.Object)[2];

        $i0 = virtualinvoke r1.<com.google.gxp.compiler.base.Concatenation: int expressionHashCode()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r0[0] = $r2;

        $r3 = r1.<com.google.gxp.compiler.base.Concatenation: com.google.gxp.com.google.common.collect.ImmutableList values>;

        $r0[1] = $r3;

        $i1 = staticinvoke <com.google.gxp.com.google.common.base.Objects: int hashCode(java.lang.Object[])>($r0);

        return $i1;
    }

    public java.util.List separate()
    {
        java.util.List $r1;
        com.google.gxp.compiler.base.Concatenation r0;

        r0 := @this: com.google.gxp.compiler.base.Concatenation;

        $r1 = virtualinvoke r0.<com.google.gxp.compiler.base.Concatenation: java.util.List getValues()>();

        return $r1;
    }
}
