public class org.apache.solr.common.util.ContentStreamBase$FileStream extends org.apache.solr.common.util.ContentStreamBase
{
    private final java.io.File file;

    public void <init>(java.io.File)
    {
        long $l0;
        java.io.File r1, $r2, $r4, $r6;
        org.apache.solr.common.util.ContentStreamBase$FileStream r0;
        java.lang.Long $r5;
        java.lang.String $r3, $r8;
        java.net.URI $r7;

        r0 := @this: org.apache.solr.common.util.ContentStreamBase$FileStream;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<org.apache.solr.common.util.ContentStreamBase: void <init>()>();

        r0.<org.apache.solr.common.util.ContentStreamBase$FileStream: java.io.File file> = r1;

        r0.<org.apache.solr.common.util.ContentStreamBase$FileStream: java.lang.String contentType> = null;

        $r2 = r0.<org.apache.solr.common.util.ContentStreamBase$FileStream: java.io.File file>;

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getName()>();

        r0.<org.apache.solr.common.util.ContentStreamBase$FileStream: java.lang.String name> = $r3;

        $r4 = r0.<org.apache.solr.common.util.ContentStreamBase$FileStream: java.io.File file>;

        $l0 = virtualinvoke $r4.<java.io.File: long length()>();

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        r0.<org.apache.solr.common.util.ContentStreamBase$FileStream: java.lang.Long size> = $r5;

        $r6 = r0.<org.apache.solr.common.util.ContentStreamBase$FileStream: java.io.File file>;

        $r7 = virtualinvoke $r6.<java.io.File: java.net.URI toURI()>();

        $r8 = virtualinvoke $r7.<java.net.URI: java.lang.String toString()>();

        r0.<org.apache.solr.common.util.ContentStreamBase$FileStream: java.lang.String sourceInfo> = $r8;

        return;
    }

    public java.lang.String getContentType()
    {
        java.lang.Throwable $r5;
        int $i0, $i2, $i3;
        java.lang.String $r1, $r12;
        java.io.IOException $r4, $r6, $r8, $r9, $r10;
        char c1;
        java.io.FileInputStream r11, $r13;
        java.io.File $r3;
        java.lang.Exception $r7;
        org.apache.solr.common.util.ContentStreamBase$FileStream r0;

        r0 := @this: org.apache.solr.common.util.ContentStreamBase$FileStream;

        $r1 = r0.<org.apache.solr.common.util.ContentStreamBase$FileStream: java.lang.String contentType>;

        if $r1 != null goto label28;

        r11 = null;

     label01:
        $r13 = new java.io.FileInputStream;

        $r3 = r0.<org.apache.solr.common.util.ContentStreamBase$FileStream: java.io.File file>;

        specialinvoke $r13.<java.io.FileInputStream: void <init>(java.io.File)>($r3);

        r11 = $r13;

        $i0 = virtualinvoke $r13.<java.io.InputStream: int read()>();

        c1 = (char) $i0;

        $i2 = (int) c1;

        if $i2 != 60 goto label07;

     label02:
        if $r13 == null goto label06;

     label03:
        virtualinvoke $r13.<java.io.InputStream: void close()>();

     label04:
        goto label06;

     label05:
        $r10 := @caughtexception;

     label06:
        return "application/xml";

     label07:
        $i3 = (int) c1;

        if $i3 != 123 goto label13;

     label08:
        if $r13 == null goto label12;

     label09:
        virtualinvoke $r13.<java.io.InputStream: void close()>();

     label10:
        goto label12;

     label11:
        $r9 := @caughtexception;

     label12:
        return "application/json";

     label13:
        if $r13 == null goto label28;

     label14:
        virtualinvoke $r13.<java.io.InputStream: void close()>();

     label15:
        goto label28;

     label16:
        $r8 := @caughtexception;

        goto label28;

     label17:
        $r7 := @caughtexception;

     label18:
        if r11 == null goto label28;

     label19:
        virtualinvoke r11.<java.io.InputStream: void close()>();

     label20:
        goto label28;

     label21:
        $r6 := @caughtexception;

        goto label28;

     label22:
        $r5 := @caughtexception;

     label23:
        if r11 == null goto label27;

     label24:
        virtualinvoke r11.<java.io.InputStream: void close()>();

     label25:
        goto label27;

     label26:
        $r4 := @caughtexception;

     label27:
        throw $r5;

     label28:
        $r12 = r0.<org.apache.solr.common.util.ContentStreamBase$FileStream: java.lang.String contentType>;

        return $r12;

        catch java.io.IOException from label03 to label04 with label05;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.lang.Exception from label01 to label02 with label17;
        catch java.lang.Exception from label07 to label08 with label17;
        catch java.io.IOException from label19 to label20 with label21;
        catch java.lang.Throwable from label01 to label02 with label22;
        catch java.lang.Throwable from label07 to label08 with label22;
        catch java.lang.Throwable from label17 to label18 with label22;
        catch java.io.IOException from label24 to label25 with label26;
        catch java.lang.Throwable from label22 to label23 with label22;
    }

    public java.io.InputStream getStream() throws java.io.IOException
    {
        java.io.FileInputStream $r0;
        java.io.File $r2;
        org.apache.solr.common.util.ContentStreamBase$FileStream r1;

        r1 := @this: org.apache.solr.common.util.ContentStreamBase$FileStream;

        $r0 = new java.io.FileInputStream;

        $r2 = r1.<org.apache.solr.common.util.ContentStreamBase$FileStream: java.io.File file>;

        specialinvoke $r0.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

        return $r0;
    }
}
