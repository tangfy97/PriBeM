public final class org.apache.poi.hwpf.usermodel.Picture extends java.lang.Object
{
    public static final byte[] BMP;
    public static final byte[] COMPRESSED1;
    public static final byte[] COMPRESSED2;
    public static final byte[] EMF;
    public static final byte[] GIF;
    public static final byte[] IHDR;
    public static final byte[] JPG;
    private static final org.apache.poi.util.POILogger log;
    public static final byte[] PNG;
    public static final byte[] TIFF;
    public static final byte[] TIFF1;
    public static final byte[] WMF1;
    public static final byte[] WMF2;
    private org.apache.poi.hwpf.model.PICF _picf;
    private org.apache.poi.hwpf.model.PICFAndOfficeArtData _picfAndOfficeArtData;
    private java.util.List _blipRecords;
    private byte[] content;
    private int dataBlockStartOfsset;
    private int height;
    private int width;

    private static int getBigEndianInt(byte[], int)
    {
        byte[] r0;
        short $s2, $s5, $s10, $s15, $s18, $s20, $s22, $s24;
        byte $b1, $b4, $b9, $b14;
        int i0, $i3, $i6, $i7, $i8, $i11, $i12, $i13, $i16, $i17, $i19, $i21, $i23, $i25;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $b1 = r0[i0];

        $s18 = (short) $b1;

        $s2 = $s18 & 255;

        $i19 = (int) $s2;

        $i7 = $i19 << 24;

        $i3 = i0 + 1;

        $b4 = r0[$i3];

        $s20 = (short) $b4;

        $s5 = $s20 & 255;

        $i21 = (int) $s5;

        $i6 = $i21 << 16;

        $i12 = $i7 + $i6;

        $i8 = i0 + 2;

        $b9 = r0[$i8];

        $s22 = (short) $b9;

        $s10 = $s22 & 255;

        $i23 = (int) $s10;

        $i11 = $i23 << 8;

        $i16 = $i12 + $i11;

        $i13 = i0 + 3;

        $b14 = r0[$i13];

        $s24 = (short) $b14;

        $s15 = $s24 & 255;

        $i25 = (int) $s15;

        $i17 = $i16 + $i25;

        return $i17;
    }

    private static int getBigEndianShort(byte[], int)
    {
        byte[] r0;
        short $s2, $s5, $s8, $s10;
        byte $b1, $b4;
        int i0, $i3, $i6, $i7, $i9, $i11;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $b1 = r0[i0];

        $s8 = (short) $b1;

        $s2 = $s8 & 255;

        $i9 = (int) $s2;

        $i6 = $i9 << 8;

        $i3 = i0 + 1;

        $b4 = r0[$i3];

        $s10 = (short) $b4;

        $s5 = $s10 & 255;

        $i11 = (int) $s5;

        $i7 = $i6 + $i11;

        return $i7;
    }

    private static boolean matchSignature(byte[], byte[], int)
    {
        byte[] r0, r1;
        byte $b4, $b5;
        int i0, $i1, $i2, $i3, i6, $i7, $i8, $i9, $i10;
        boolean $z0, z1;

        r0 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        i0 := @parameter2: int;

        $i1 = lengthof r0;

        if i0 >= $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        z1 = $z0;

        i6 = 0;

     label3:
        $i7 = i6 + i0;

        $i8 = lengthof r0;

        if $i7 >= $i8 goto label5;

        $i2 = lengthof r1;

        if i6 >= $i2 goto label5;

        $i3 = i6 + i0;

        $b5 = r0[$i3];

        $b4 = r1[i6];

        $i9 = (int) $b5;

        $i10 = (int) $b4;

        if $i9 == $i10 goto label4;

        z1 = 0;

        goto label5;

     label4:
        i6 = i6 + 1;

        goto label3;

     label5:
        return z1;
    }

    public void <init>(org.apache.poi.ddf.EscherBlipRecord)
    {
        java.util.List $r3;
        org.apache.poi.hwpf.usermodel.Picture r0;
        org.apache.poi.ddf.EscherBlipRecord r2;
        int $i1, $i3;
        org.apache.poi.ddf.EscherBlipRecord[] $r1;

        r0 := @this: org.apache.poi.hwpf.usermodel.Picture;

        r2 := @parameter0: org.apache.poi.ddf.EscherBlipRecord;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = (int) -1;

        r0.<org.apache.poi.hwpf.usermodel.Picture: int height> = $i1;

        $i3 = (int) -1;

        r0.<org.apache.poi.hwpf.usermodel.Picture: int width> = $i3;

        $r1 = newarray (org.apache.poi.ddf.EscherBlipRecord)[1];

        $r1[0] = r2;

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        r0.<org.apache.poi.hwpf.usermodel.Picture: java.util.List _blipRecords> = $r3;

        return;
    }

    public void <init>(int, byte[], boolean)
    {
        byte[] r2;
        org.apache.poi.hwpf.model.PICFAndOfficeArtData $r3, $r5, $r6, $r8, $r10;
        java.util.List $r7, $r9;
        org.apache.poi.hwpf.usermodel.Picture r0;
        int i0, $i2, $i4;
        org.apache.poi.hwpf.model.PICF $r4;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.usermodel.Picture;

        i0 := @parameter0: int;

        r2 := @parameter1: byte[];

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i2 = (int) -1;

        r0.<org.apache.poi.hwpf.usermodel.Picture: int height> = $i2;

        $i4 = (int) -1;

        r0.<org.apache.poi.hwpf.usermodel.Picture: int width> = $i4;

        $r10 = new org.apache.poi.hwpf.model.PICFAndOfficeArtData;

        specialinvoke $r10.<org.apache.poi.hwpf.model.PICFAndOfficeArtData: void <init>(byte[],int)>(r2, i0);

        r0.<org.apache.poi.hwpf.usermodel.Picture: org.apache.poi.hwpf.model.PICFAndOfficeArtData _picfAndOfficeArtData> = $r10;

        $r3 = r0.<org.apache.poi.hwpf.usermodel.Picture: org.apache.poi.hwpf.model.PICFAndOfficeArtData _picfAndOfficeArtData>;

        $r4 = virtualinvoke $r3.<org.apache.poi.hwpf.model.PICFAndOfficeArtData: org.apache.poi.hwpf.model.PICF getPicf()>();

        r0.<org.apache.poi.hwpf.usermodel.Picture: org.apache.poi.hwpf.model.PICF _picf> = $r4;

        r0.<org.apache.poi.hwpf.usermodel.Picture: int dataBlockStartOfsset> = i0;

        $r5 = r0.<org.apache.poi.hwpf.usermodel.Picture: org.apache.poi.hwpf.model.PICFAndOfficeArtData _picfAndOfficeArtData>;

        if $r5 == null goto label1;

        $r6 = r0.<org.apache.poi.hwpf.usermodel.Picture: org.apache.poi.hwpf.model.PICFAndOfficeArtData _picfAndOfficeArtData>;

        $r7 = virtualinvoke $r6.<org.apache.poi.hwpf.model.PICFAndOfficeArtData: java.util.List getBlipRecords()>();

        if $r7 == null goto label1;

        $r8 = r0.<org.apache.poi.hwpf.usermodel.Picture: org.apache.poi.hwpf.model.PICFAndOfficeArtData _picfAndOfficeArtData>;

        $r9 = virtualinvoke $r8.<org.apache.poi.hwpf.model.PICFAndOfficeArtData: java.util.List getBlipRecords()>();

        r0.<org.apache.poi.hwpf.usermodel.Picture: java.util.List _blipRecords> = $r9;

     label1:
        if z0 == 0 goto label2;

        specialinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: void fillImageContent()>();

     label2:
        return;
    }

    private void fillImageContent()
    {
        byte[] $r1, $r2, $r3, $r7, $r8, $r9, $r10, $r11, $r12, $r13, r16;
        java.io.ByteArrayOutputStream $r6;
        java.util.zip.InflaterInputStream $r4;
        java.io.ByteArrayInputStream $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0, $z1, $z2;
        java.io.IOException $r14;
        org.apache.poi.util.POILogger $r15;
        org.apache.poi.hwpf.usermodel.Picture r0;

        r0 := @this: org.apache.poi.hwpf.usermodel.Picture;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.Picture: byte[] content>;

        if $r1 == null goto label1;

        $r13 = r0.<org.apache.poi.hwpf.usermodel.Picture: byte[] content>;

        $i5 = lengthof $r13;

        if $i5 <= 0 goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: byte[] getRawContent()>();

        $r3 = <org.apache.poi.hwpf.usermodel.Picture: byte[] COMPRESSED1>;

        $z0 = staticinvoke <org.apache.poi.hwpf.usermodel.Picture: boolean matchSignature(byte[],byte[],int)>($r2, $r3, 32);

        if $z0 != 0 goto label2;

        $r8 = <org.apache.poi.hwpf.usermodel.Picture: byte[] COMPRESSED2>;

        $z1 = staticinvoke <org.apache.poi.hwpf.usermodel.Picture: boolean matchSignature(byte[],byte[],int)>($r2, $r8, 32);

        if $z1 == 0 goto label7;

     label2:
        $r4 = new java.util.zip.InflaterInputStream;

        $r5 = new java.io.ByteArrayInputStream;

        $i0 = lengthof $r2;

        $i1 = $i0 - 33;

        specialinvoke $r5.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>($r2, 33, $i1);

        specialinvoke $r4.<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream)>($r5);

        $r6 = new java.io.ByteArrayOutputStream;

        specialinvoke $r6.<java.io.ByteArrayOutputStream: void <init>()>();

        $r12 = newarray (byte)[4096];

     label3:
        $i6 = virtualinvoke $r4.<java.util.zip.InflaterInputStream: int read(byte[])>($r12);

        if $i6 <= 0 goto label4;

        virtualinvoke $r6.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r12, 0, $i6);

        goto label3;

     label4:
        $r7 = virtualinvoke $r6.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        r0.<org.apache.poi.hwpf.usermodel.Picture: byte[] content> = $r7;

     label5:
        goto label8;

     label6:
        $r14 := @caughtexception;

        $r15 = <org.apache.poi.hwpf.usermodel.Picture: org.apache.poi.util.POILogger log>;

        virtualinvoke $r15.<org.apache.poi.util.POILogger: void log(int,java.lang.Object,java.lang.Throwable)>(3, "Possibly corrupt compression or non-compressed data", $r14);

        goto label8;

     label7:
        r0.<org.apache.poi.hwpf.usermodel.Picture: byte[] content> = $r2;

        $r9 = r0.<org.apache.poi.hwpf.usermodel.Picture: byte[] content>;

        $z2 = staticinvoke <org.apache.poi.util.PngUtils: boolean matchesPngHeader(byte[],int)>($r9, 16);

        if $z2 == 0 goto label8;

        $r10 = r0.<org.apache.poi.hwpf.usermodel.Picture: byte[] content>;

        $i2 = lengthof $r10;

        $i3 = $i2 - 16;

        r16 = newarray (byte)[$i3];

        $r11 = r0.<org.apache.poi.hwpf.usermodel.Picture: byte[] content>;

        $i4 = lengthof r16;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, 16, r16, 0, $i4);

        r0.<org.apache.poi.hwpf.usermodel.Picture: byte[] content> = r16;

     label8:
        return;

        catch java.io.IOException from label2 to label5 with label6;
    }

    private void fillJPGWidthHeight()
    {
        byte[] $r1;
        byte $b8, $b9, b11, b12;
        org.apache.poi.hwpf.usermodel.Picture r0;
        short $s3, $s30;
        int i0, $i1, $i2, $i4, $i5, $i6, $i7, i10, $i13, i14, i15, i16, $i17, $i18, $i20, $i21, $i23, $i24, $i26, $i27, $i29, $i31, $i32, $i34, $i35, $i37, $i38, $i40;

        r0 := @this: org.apache.poi.hwpf.usermodel.Picture;

        $r1 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: byte[] getContent()>();

        i10 = 2;

        b11 = $r1[2];

        b12 = $r1[3];

        i0 = lengthof $r1;

     label1:
        $i13 = i0 - 1;

        if i10 >= $i13 goto label7;

     label2:
        $b8 = $r1[i10];

        $i1 = i10 + 1;

        $b9 = $r1[$i1];

        i10 = i10 + 2;

        $i18 = (int) $b8;

        $i20 = (int) -1;

        if $i18 == $i20 goto label3;

        $i7 = i0 - 1;

        if i10 < $i7 goto label2;

     label3:
        $i21 = (int) $b8;

        $i23 = (int) -1;

        if $i21 != $i23 goto label6;

        $i2 = i0 - 1;

        if i10 >= $i2 goto label6;

        $i24 = (int) $b9;

        $i26 = (int) -39;

        if $i24 == $i26 goto label7;

        $i27 = (int) $b9;

        $i29 = (int) -38;

        if $i27 != $i29 goto label4;

        goto label7;

     label4:
        $s30 = (short) $b9;

        $s3 = $s30 & 240;

        $i31 = (int) $s3;

        if $i31 != 192 goto label5;

        $i32 = (int) $b9;

        $i34 = (int) -60;

        if $i32 == $i34 goto label5;

        $i35 = (int) $b9;

        $i37 = (int) -56;

        if $i35 == $i37 goto label5;

        $i38 = (int) $b9;

        $i40 = (int) -52;

        if $i38 == $i40 goto label5;

        i14 = i10 + 5;

        $i4 = staticinvoke <org.apache.poi.hwpf.usermodel.Picture: int getBigEndianShort(byte[],int)>($r1, i14);

        r0.<org.apache.poi.hwpf.usermodel.Picture: int height> = $i4;

        $i5 = i14 + 2;

        $i6 = staticinvoke <org.apache.poi.hwpf.usermodel.Picture: int getBigEndianShort(byte[],int)>($r1, $i5);

        r0.<org.apache.poi.hwpf.usermodel.Picture: int width> = $i6;

        goto label7;

     label5:
        i15 = i10 + 1;

        i16 = i15 + 1;

        $i17 = staticinvoke <org.apache.poi.hwpf.usermodel.Picture: int getBigEndianShort(byte[],int)>($r1, i16);

        i10 = i16 + $i17;

        goto label1;

     label6:
        i10 = i10 + 1;

        goto label1;

     label7:
        return;
    }

    void fillPNGWidthHeight()
    {
        byte[] $r1, $r2, $r3;
        org.apache.poi.hwpf.usermodel.Picture r0;
        int $i0, i1, i2, $i3, $i4, $i5;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.usermodel.Picture;

        $r1 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: byte[] getContent()>();

        $r2 = <org.apache.poi.hwpf.usermodel.Picture: byte[] PNG>;

        $i0 = lengthof $r2;

        i1 = $i0 + 4;

        $r3 = <org.apache.poi.hwpf.usermodel.Picture: byte[] IHDR>;

        $z0 = staticinvoke <org.apache.poi.hwpf.usermodel.Picture: boolean matchSignature(byte[],byte[],int)>($r1, $r3, i1);

        if $z0 == 0 goto label1;

        i2 = i1 + 4;

        $i3 = staticinvoke <org.apache.poi.hwpf.usermodel.Picture: int getBigEndianInt(byte[],int)>($r1, i2);

        r0.<org.apache.poi.hwpf.usermodel.Picture: int width> = $i3;

        $i4 = i2 + 4;

        $i5 = staticinvoke <org.apache.poi.hwpf.usermodel.Picture: int getBigEndianInt(byte[],int)>($r1, $i4);

        r0.<org.apache.poi.hwpf.usermodel.Picture: int height> = $i5;

     label1:
        return;
    }

    private void fillWidthHeight()
    {
        org.apache.poi.hwpf.usermodel.Picture r0;
        int[] $r2;
        int $i0, $i1;
        org.apache.poi.hwpf.usermodel.PictureType $r1;

        r0 := @this: org.apache.poi.hwpf.usermodel.Picture;

        $r1 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: org.apache.poi.hwpf.usermodel.PictureType suggestPictureType()>();

        $r2 = <org.apache.poi.hwpf.usermodel.Picture$1: int[] $SwitchMap$org$apache$poi$hwpf$usermodel$PictureType>;

        $i0 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.PictureType: int ordinal()>();

        $i1 = $r2[$i0];

        lookupswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        specialinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: void fillJPGWidthHeight()>();

        goto label3;

     label2:
        virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: void fillPNGWidthHeight()>();

        goto label3;

     label3:
        return;
    }

    public int getAspectRatioX()
    {
        org.apache.poi.hwpf.usermodel.Picture r0;
        int $i0, $i1;
        org.apache.poi.hwpf.model.PICF $r1;

        r0 := @this: org.apache.poi.hwpf.usermodel.Picture;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.Picture: org.apache.poi.hwpf.model.PICF _picf>;

        $i0 = virtualinvoke $r1.<org.apache.poi.hwpf.model.PICF: int getMx()>();

        $i1 = $i0 / 10;

        return $i1;
    }

    public int getAspectRatioY()
    {
        org.apache.poi.hwpf.usermodel.Picture r0;
        int $i0, $i1;
        org.apache.poi.hwpf.model.PICF $r1;

        r0 := @this: org.apache.poi.hwpf.usermodel.Picture;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.Picture: org.apache.poi.hwpf.model.PICF _picf>;

        $i0 = virtualinvoke $r1.<org.apache.poi.hwpf.model.PICF: int getMy()>();

        $i1 = $i0 / 10;

        return $i1;
    }

    public byte[] getContent()
    {
        byte[] $r1;
        org.apache.poi.hwpf.usermodel.Picture r0;

        r0 := @this: org.apache.poi.hwpf.usermodel.Picture;

        specialinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: void fillImageContent()>();

        $r1 = r0.<org.apache.poi.hwpf.usermodel.Picture: byte[] content>;

        return $r1;
    }

    public int getDxaCropLeft()
    {
        short $s0;
        org.apache.poi.hwpf.usermodel.Picture r0;
        int $i1;
        org.apache.poi.hwpf.model.PICF $r1;

        r0 := @this: org.apache.poi.hwpf.usermodel.Picture;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.Picture: org.apache.poi.hwpf.model.PICF _picf>;

        $s0 = virtualinvoke $r1.<org.apache.poi.hwpf.model.PICF: short getDxaReserved1()>();

        $i1 = (int) $s0;

        return $i1;
    }

    public int getDxaCropRight()
    {
        short $s0;
        org.apache.poi.hwpf.usermodel.Picture r0;
        int $i1;
        org.apache.poi.hwpf.model.PICF $r1;

        r0 := @this: org.apache.poi.hwpf.usermodel.Picture;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.Picture: org.apache.poi.hwpf.model.PICF _picf>;

        $s0 = virtualinvoke $r1.<org.apache.poi.hwpf.model.PICF: short getDxaReserved2()>();

        $i1 = (int) $s0;

        return $i1;
    }

    public int getDxaGoal()
    {
        short $s0;
        org.apache.poi.hwpf.usermodel.Picture r0;
        int $i1;
        org.apache.poi.hwpf.model.PICF $r1;

        r0 := @this: org.apache.poi.hwpf.usermodel.Picture;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.Picture: org.apache.poi.hwpf.model.PICF _picf>;

        $s0 = virtualinvoke $r1.<org.apache.poi.hwpf.model.PICF: short getDxaGoal()>();

        $i1 = (int) $s0;

        return $i1;
    }

    public int getDyaCropBottom()
    {
        short $s0;
        org.apache.poi.hwpf.usermodel.Picture r0;
        int $i1;
        org.apache.poi.hwpf.model.PICF $r1;

        r0 := @this: org.apache.poi.hwpf.usermodel.Picture;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.Picture: org.apache.poi.hwpf.model.PICF _picf>;

        $s0 = virtualinvoke $r1.<org.apache.poi.hwpf.model.PICF: short getDyaReserved2()>();

        $i1 = (int) $s0;

        return $i1;
    }

    public int getDyaCropTop()
    {
        short $s0;
        org.apache.poi.hwpf.usermodel.Picture r0;
        int $i1;
        org.apache.poi.hwpf.model.PICF $r1;

        r0 := @this: org.apache.poi.hwpf.usermodel.Picture;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.Picture: org.apache.poi.hwpf.model.PICF _picf>;

        $s0 = virtualinvoke $r1.<org.apache.poi.hwpf.model.PICF: short getDyaReserved1()>();

        $i1 = (int) $s0;

        return $i1;
    }

    public int getDyaGoal()
    {
        short $s0;
        org.apache.poi.hwpf.usermodel.Picture r0;
        int $i1;
        org.apache.poi.hwpf.model.PICF $r1;

        r0 := @this: org.apache.poi.hwpf.usermodel.Picture;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.Picture: org.apache.poi.hwpf.model.PICF _picf>;

        $s0 = virtualinvoke $r1.<org.apache.poi.hwpf.model.PICF: short getDyaGoal()>();

        $i1 = (int) $s0;

        return $i1;
    }

    public int getHeight()
    {
        org.apache.poi.hwpf.usermodel.Picture r0;
        int $i0, $i1, $i3;

        r0 := @this: org.apache.poi.hwpf.usermodel.Picture;

        $i0 = r0.<org.apache.poi.hwpf.usermodel.Picture: int height>;

        $i3 = (int) -1;

        if $i0 != $i3 goto label1;

        specialinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: void fillWidthHeight()>();

     label1:
        $i1 = r0.<org.apache.poi.hwpf.usermodel.Picture: int height>;

        return $i1;
    }

    public int getHorizontalScalingFactor()
    {
        int $i0;
        org.apache.poi.hwpf.usermodel.Picture r0;
        org.apache.poi.hwpf.model.PICF $r1;

        r0 := @this: org.apache.poi.hwpf.usermodel.Picture;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.Picture: org.apache.poi.hwpf.model.PICF _picf>;

        $i0 = virtualinvoke $r1.<org.apache.poi.hwpf.model.PICF: int getMx()>();

        return $i0;
    }

    public java.lang.String getMimeType()
    {
        org.apache.poi.hwpf.usermodel.Picture r0;
        java.lang.String $r2;
        org.apache.poi.hwpf.usermodel.PictureType $r1;

        r0 := @this: org.apache.poi.hwpf.usermodel.Picture;

        $r1 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: org.apache.poi.hwpf.usermodel.PictureType suggestPictureType()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.PictureType: java.lang.String getMime()>();

        return $r2;
    }

    public byte[] getRawContent()
    {
        byte[] $r2, $r7, $r10, $r12;
        org.apache.poi.ddf.EscherRecord r6;
        int $i0;
        boolean $z0, $z1;
        org.apache.poi.ddf.EscherBSERecord $r8;
        java.util.List $r1, $r3, $r4;
        org.apache.poi.hwpf.usermodel.Picture r0;
        org.apache.poi.ddf.EscherBlipRecord $r9, $r11;
        java.lang.Object $r5;

        r0 := @this: org.apache.poi.hwpf.usermodel.Picture;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.Picture: java.util.List _blipRecords>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.poi.hwpf.usermodel.Picture: java.util.List _blipRecords>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 == 1 goto label2;

     label1:
        $r2 = newarray (byte)[0];

        return $r2;

     label2:
        $r4 = r0.<org.apache.poi.hwpf.usermodel.Picture: java.util.List _blipRecords>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        r6 = (org.apache.poi.ddf.EscherRecord) $r5;

        $z0 = r6 instanceof org.apache.poi.ddf.EscherBlipRecord;

        if $z0 == 0 goto label3;

        $r11 = (org.apache.poi.ddf.EscherBlipRecord) r6;

        $r12 = virtualinvoke $r11.<org.apache.poi.ddf.EscherBlipRecord: byte[] getPicturedata()>();

        return $r12;

     label3:
        $z1 = r6 instanceof org.apache.poi.ddf.EscherBSERecord;

        if $z1 == 0 goto label4;

        $r8 = (org.apache.poi.ddf.EscherBSERecord) r6;

        $r9 = virtualinvoke $r8.<org.apache.poi.ddf.EscherBSERecord: org.apache.poi.ddf.EscherBlipRecord getBlipRecord()>();

        $r10 = virtualinvoke $r9.<org.apache.poi.ddf.EscherBlipRecord: byte[] getPicturedata()>();

        return $r10;

     label4:
        $r7 = newarray (byte)[0];

        return $r7;
    }

    public int getSize()
    {
        int $i0;
        byte[] $r1;
        org.apache.poi.hwpf.usermodel.Picture r0;

        r0 := @this: org.apache.poi.hwpf.usermodel.Picture;

        $r1 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: byte[] getContent()>();

        $i0 = lengthof $r1;

        return $i0;
    }

    public int getStartOffset()
    {
        int $i0;
        org.apache.poi.hwpf.usermodel.Picture r0;

        r0 := @this: org.apache.poi.hwpf.usermodel.Picture;

        $i0 = r0.<org.apache.poi.hwpf.usermodel.Picture: int dataBlockStartOfsset>;

        return $i0;
    }

    public int getVerticalScalingFactor()
    {
        int $i0;
        org.apache.poi.hwpf.usermodel.Picture r0;
        org.apache.poi.hwpf.model.PICF $r1;

        r0 := @this: org.apache.poi.hwpf.usermodel.Picture;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.Picture: org.apache.poi.hwpf.model.PICF _picf>;

        $i0 = virtualinvoke $r1.<org.apache.poi.hwpf.model.PICF: int getMy()>();

        return $i0;
    }

    public int getWidth()
    {
        org.apache.poi.hwpf.usermodel.Picture r0;
        int $i0, $i1, $i3;

        r0 := @this: org.apache.poi.hwpf.usermodel.Picture;

        $i0 = r0.<org.apache.poi.hwpf.usermodel.Picture: int width>;

        $i3 = (int) -1;

        if $i0 != $i3 goto label1;

        specialinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: void fillWidthHeight()>();

     label1:
        $i1 = r0.<org.apache.poi.hwpf.usermodel.Picture: int width>;

        return $i1;
    }

    public java.lang.String getDescription()
    {
        byte[] $r13;
        org.apache.poi.ddf.EscherRecord r6;
        short $s0;
        int $i1, $i2, $i3, $i4;
        java.lang.String $r14;
        boolean $z0, $z1, $z2;
        org.apache.poi.ddf.EscherOptRecord r7;
        java.util.Iterator $r4, $r9;
        org.apache.poi.ddf.EscherContainerRecord $r2;
        org.apache.poi.ddf.EscherComplexProperty $r12;
        org.apache.poi.hwpf.model.PICFAndOfficeArtData $r1;
        org.apache.poi.ddf.EscherProperty r11;
        java.util.List $r3, $r8;
        org.apache.poi.hwpf.usermodel.Picture r0;
        java.lang.Object $r5, $r10;

        r0 := @this: org.apache.poi.hwpf.usermodel.Picture;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.Picture: org.apache.poi.hwpf.model.PICFAndOfficeArtData _picfAndOfficeArtData>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hwpf.model.PICFAndOfficeArtData: org.apache.poi.ddf.EscherContainerRecord getShape()>();

        $r3 = virtualinvoke $r2.<org.apache.poi.ddf.EscherContainerRecord: java.util.List getChildRecords()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.poi.ddf.EscherRecord) $r5;

        $z1 = r6 instanceof org.apache.poi.ddf.EscherOptRecord;

        if $z1 == 0 goto label4;

        r7 = (org.apache.poi.ddf.EscherOptRecord) r6;

        $r8 = virtualinvoke r7.<org.apache.poi.ddf.EscherOptRecord: java.util.List getEscherProperties()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (org.apache.poi.ddf.EscherProperty) $r10;

        $s0 = virtualinvoke r11.<org.apache.poi.ddf.EscherProperty: short getPropertyNumber()>();

        $i4 = (int) $s0;

        if 897 != $i4 goto label3;

        $r12 = (org.apache.poi.ddf.EscherComplexProperty) r11;

        $r13 = virtualinvoke $r12.<org.apache.poi.ddf.EscherComplexProperty: byte[] getComplexData()>();

        $i1 = lengthof $r13;

        $i2 = $i1 / 2;

        $i3 = $i2 - 1;

        $r14 = staticinvoke <org.apache.poi.util.StringUtil: java.lang.String getFromUnicodeLE(byte[],int,int)>($r13, 0, $i3);

        return $r14;

     label3:
        goto label2;

     label4:
        goto label1;

     label5:
        return null;
    }

    public java.lang.String suggestFileExtension()
    {
        org.apache.poi.hwpf.usermodel.Picture r0;
        java.lang.String $r2;
        org.apache.poi.hwpf.usermodel.PictureType $r1;

        r0 := @this: org.apache.poi.hwpf.usermodel.Picture;

        $r1 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: org.apache.poi.hwpf.usermodel.PictureType suggestPictureType()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.hwpf.usermodel.PictureType: java.lang.String getExtension()>();

        return $r2;
    }

    public java.lang.String suggestFullFileName()
    {
        org.apache.poi.hwpf.usermodel.Picture r0;
        int $i0, $i1;
        java.lang.StringBuilder $r2, $r4, $r5, $r7, $r8, $r9;
        java.lang.String $r1, $r3, $r6, $r10;

        r0 := @this: org.apache.poi.hwpf.usermodel.Picture;

        $r1 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: java.lang.String suggestFileExtension()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $i0 = r0.<org.apache.poi.hwpf.usermodel.Picture: int dataBlockStartOfsset>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 <= 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r10 = "";

     label2:
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public org.apache.poi.hwpf.usermodel.PictureType suggestPictureType()
    {
        byte $b2;
        org.apache.poi.ddf.EscherBSERecord r15;
        java.util.List $r1, $r3, $r4;
        org.apache.poi.hwpf.usermodel.Picture r0;
        org.apache.poi.ddf.EscherRecord r6;
        short $s1;
        int $i0, $i3, $i4;
        org.apache.poi.hwpf.usermodel.PictureType $r2, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27;
        java.lang.Object $r5;

        r0 := @this: org.apache.poi.hwpf.usermodel.Picture;

        $r1 = r0.<org.apache.poi.hwpf.usermodel.Picture: java.util.List _blipRecords>;

        if $r1 == null goto label01;

        $r3 = r0.<org.apache.poi.hwpf.usermodel.Picture: java.util.List _blipRecords>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 == 1 goto label02;

     label01:
        $r2 = <org.apache.poi.hwpf.usermodel.PictureType: org.apache.poi.hwpf.usermodel.PictureType UNKNOWN>;

        return $r2;

     label02:
        $r4 = r0.<org.apache.poi.hwpf.usermodel.Picture: java.util.List _blipRecords>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        r6 = (org.apache.poi.ddf.EscherRecord) $r5;

        $s1 = virtualinvoke r6.<org.apache.poi.ddf.EscherRecord: short getRecordId()>();

        $i3 = (int) $s1;

        lookupswitch($i3)
        {
            case -4089: goto label03;
            case -4070: goto label15;
            case -4069: goto label16;
            case -4068: goto label17;
            case -4067: goto label18;
            case -4066: goto label19;
            case -4065: goto label20;
            case -4055: goto label21;
            case -4054: goto label22;
            default: goto label23;
        };

     label03:
        r15 = (org.apache.poi.ddf.EscherBSERecord) r6;

        $b2 = virtualinvoke r15.<org.apache.poi.ddf.EscherBSERecord: byte getBlipTypeWin32()>();

        $i4 = (int) $b2;

        tableswitch($i4)
        {
            case 0: goto label04;
            case 1: goto label05;
            case 2: goto label06;
            case 3: goto label07;
            case 4: goto label08;
            case 5: goto label09;
            case 6: goto label10;
            case 7: goto label11;
            case 8: goto label14;
            case 9: goto label14;
            case 10: goto label14;
            case 11: goto label14;
            case 12: goto label14;
            case 13: goto label14;
            case 14: goto label14;
            case 15: goto label14;
            case 16: goto label14;
            case 17: goto label12;
            case 18: goto label13;
            default: goto label14;
        };

     label04:
        $r25 = <org.apache.poi.hwpf.usermodel.PictureType: org.apache.poi.hwpf.usermodel.PictureType UNKNOWN>;

        return $r25;

     label05:
        $r24 = <org.apache.poi.hwpf.usermodel.PictureType: org.apache.poi.hwpf.usermodel.PictureType UNKNOWN>;

        return $r24;

     label06:
        $r23 = <org.apache.poi.hwpf.usermodel.PictureType: org.apache.poi.hwpf.usermodel.PictureType EMF>;

        return $r23;

     label07:
        $r22 = <org.apache.poi.hwpf.usermodel.PictureType: org.apache.poi.hwpf.usermodel.PictureType WMF>;

        return $r22;

     label08:
        $r21 = <org.apache.poi.hwpf.usermodel.PictureType: org.apache.poi.hwpf.usermodel.PictureType PICT>;

        return $r21;

     label09:
        $r20 = <org.apache.poi.hwpf.usermodel.PictureType: org.apache.poi.hwpf.usermodel.PictureType JPEG>;

        return $r20;

     label10:
        $r19 = <org.apache.poi.hwpf.usermodel.PictureType: org.apache.poi.hwpf.usermodel.PictureType PNG>;

        return $r19;

     label11:
        $r18 = <org.apache.poi.hwpf.usermodel.PictureType: org.apache.poi.hwpf.usermodel.PictureType BMP>;

        return $r18;

     label12:
        $r17 = <org.apache.poi.hwpf.usermodel.PictureType: org.apache.poi.hwpf.usermodel.PictureType TIFF>;

        return $r17;

     label13:
        $r16 = <org.apache.poi.hwpf.usermodel.PictureType: org.apache.poi.hwpf.usermodel.PictureType JPEG>;

        return $r16;

     label14:
        $r26 = <org.apache.poi.hwpf.usermodel.PictureType: org.apache.poi.hwpf.usermodel.PictureType UNKNOWN>;

        return $r26;

     label15:
        $r14 = <org.apache.poi.hwpf.usermodel.PictureType: org.apache.poi.hwpf.usermodel.PictureType EMF>;

        return $r14;

     label16:
        $r13 = <org.apache.poi.hwpf.usermodel.PictureType: org.apache.poi.hwpf.usermodel.PictureType WMF>;

        return $r13;

     label17:
        $r12 = <org.apache.poi.hwpf.usermodel.PictureType: org.apache.poi.hwpf.usermodel.PictureType PICT>;

        return $r12;

     label18:
        $r11 = <org.apache.poi.hwpf.usermodel.PictureType: org.apache.poi.hwpf.usermodel.PictureType JPEG>;

        return $r11;

     label19:
        $r10 = <org.apache.poi.hwpf.usermodel.PictureType: org.apache.poi.hwpf.usermodel.PictureType PNG>;

        return $r10;

     label20:
        $r9 = <org.apache.poi.hwpf.usermodel.PictureType: org.apache.poi.hwpf.usermodel.PictureType BMP>;

        return $r9;

     label21:
        $r8 = <org.apache.poi.hwpf.usermodel.PictureType: org.apache.poi.hwpf.usermodel.PictureType TIFF>;

        return $r8;

     label22:
        $r7 = <org.apache.poi.hwpf.usermodel.PictureType: org.apache.poi.hwpf.usermodel.PictureType JPEG>;

        return $r7;

     label23:
        $r27 = <org.apache.poi.hwpf.usermodel.PictureType: org.apache.poi.hwpf.usermodel.PictureType UNKNOWN>;

        return $r27;
    }

    public void writeImageContent(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r2;
        byte[] $r1;
        org.apache.poi.hwpf.usermodel.Picture r0;
        int $i0, $i1;

        r0 := @this: org.apache.poi.hwpf.usermodel.Picture;

        r2 := @parameter0: java.io.OutputStream;

        $r1 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: byte[] getContent()>();

        if $r1 == null goto label1;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        $i1 = lengthof $r1;

        virtualinvoke r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i1);

     label1:
        return;
    }

    static void <clinit>()
    {
        byte[] $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r12;
        org.apache.poi.util.POILogger $r7;

        $r0 = newarray (byte)[2];

        $r0[0] = 66;

        $r0[1] = 77;

        <org.apache.poi.hwpf.usermodel.Picture: byte[] BMP> = $r0;

        $r1 = newarray (byte)[3];

        $r1[0] = -2;

        $r1[1] = 120;

        $r1[2] = -38;

        <org.apache.poi.hwpf.usermodel.Picture: byte[] COMPRESSED1> = $r1;

        $r2 = newarray (byte)[3];

        $r2[0] = -2;

        $r2[1] = 120;

        $r2[2] = -100;

        <org.apache.poi.hwpf.usermodel.Picture: byte[] COMPRESSED2> = $r2;

        $r3 = newarray (byte)[4];

        $r3[0] = 1;

        $r3[1] = 0;

        $r3[2] = 0;

        $r3[3] = 0;

        <org.apache.poi.hwpf.usermodel.Picture: byte[] EMF> = $r3;

        $r4 = newarray (byte)[3];

        $r4[0] = 71;

        $r4[1] = 73;

        $r4[2] = 70;

        <org.apache.poi.hwpf.usermodel.Picture: byte[] GIF> = $r4;

        $r5 = newarray (byte)[4];

        $r5[0] = 73;

        $r5[1] = 72;

        $r5[2] = 68;

        $r5[3] = 82;

        <org.apache.poi.hwpf.usermodel.Picture: byte[] IHDR> = $r5;

        $r6 = newarray (byte)[2];

        $r6[0] = -1;

        $r6[1] = -40;

        <org.apache.poi.hwpf.usermodel.Picture: byte[] JPG> = $r6;

        $r7 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/hwpf/usermodel/Picture;");

        <org.apache.poi.hwpf.usermodel.Picture: org.apache.poi.util.POILogger log> = $r7;

        $r8 = newarray (byte)[8];

        $r8[0] = -119;

        $r8[1] = 80;

        $r8[2] = 78;

        $r8[3] = 71;

        $r8[4] = 13;

        $r8[5] = 10;

        $r8[6] = 26;

        $r8[7] = 10;

        <org.apache.poi.hwpf.usermodel.Picture: byte[] PNG> = $r8;

        $r9 = newarray (byte)[4];

        $r9[0] = 73;

        $r9[1] = 73;

        $r9[2] = 42;

        $r9[3] = 0;

        <org.apache.poi.hwpf.usermodel.Picture: byte[] TIFF> = $r9;

        $r10 = newarray (byte)[4];

        $r10[0] = 77;

        $r10[1] = 77;

        $r10[2] = 0;

        $r10[3] = 42;

        <org.apache.poi.hwpf.usermodel.Picture: byte[] TIFF1> = $r10;

        $r11 = newarray (byte)[6];

        $r11[0] = -41;

        $r11[1] = -51;

        $r11[2] = -58;

        $r11[3] = -102;

        $r11[4] = 0;

        $r11[5] = 0;

        <org.apache.poi.hwpf.usermodel.Picture: byte[] WMF1> = $r11;

        $r12 = newarray (byte)[6];

        $r12[0] = 1;

        $r12[1] = 0;

        $r12[2] = 9;

        $r12[3] = 0;

        $r12[4] = 0;

        $r12[5] = 3;

        <org.apache.poi.hwpf.usermodel.Picture: byte[] WMF2> = $r12;

        return;
    }
}
