public final class org.apache.cxf.jaxrs.impl.ResponseImpl extends javax.ws.rs.core.Response
{
    private int status;
    private java.lang.Object entity;
    private java.lang.'annotation'.Annotation[] entityAnnotations;
    private javax.ws.rs.core.MultivaluedMap metadata;
    private org.apache.cxf.message.Message responseMessage;
    private boolean entityClosed;
    private boolean entityBufferred;
    private java.lang.Object lastEntity;

    void <init>(int)
    {
        int i0;
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        i0 := @parameter0: int;

        specialinvoke r0.<javax.ws.rs.core.Response: void <init>()>();

        r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: int status> = i0;

        return;
    }

    void <init>(int, java.lang.Object)
    {
        int i0;
        java.lang.Object r1;
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        specialinvoke r0.<javax.ws.rs.core.Response: void <init>()>();

        r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: int status> = i0;

        r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.Object entity> = r1;

        return;
    }

    void addMetadata(javax.ws.rs.core.MultivaluedMap)
    {
        javax.ws.rs.core.MultivaluedMap r1;
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        r1 := @parameter0: javax.ws.rs.core.MultivaluedMap;

        r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: javax.ws.rs.core.MultivaluedMap metadata> = r1;

        return;
    }

    public void setStatus(int)
    {
        int i0;
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        i0 := @parameter0: int;

        r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: int status> = i0;

        return;
    }

    public void setEntity(java.lang.Object, java.lang.'annotation'.Annotation[])
    {
        java.lang.Object r1;
        java.lang.'annotation'.Annotation[] r2;
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.'annotation'.Annotation[];

        r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.Object entity> = r1;

        r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.'annotation'.Annotation[] entityAnnotations> = r2;

        return;
    }

    public void setEntityAnnotations(java.lang.'annotation'.Annotation[])
    {
        java.lang.'annotation'.Annotation[] r1;
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        r1 := @parameter0: java.lang.'annotation'.Annotation[];

        r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.'annotation'.Annotation[] entityAnnotations> = r1;

        return;
    }

    public java.lang.'annotation'.Annotation[] getEntityAnnotations()
    {
        java.lang.'annotation'.Annotation[] $r1;
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        $r1 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.'annotation'.Annotation[] entityAnnotations>;

        return $r1;
    }

    public void setMessage(org.apache.cxf.message.Message)
    {
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;
        org.apache.cxf.message.Message r1;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        r1 := @parameter0: org.apache.cxf.message.Message;

        r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: org.apache.cxf.message.Message responseMessage> = r1;

        return;
    }

    public int getStatus()
    {
        int $i0;
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        $i0 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: int status>;

        return $i0;
    }

    public javax.ws.rs.core.Response$StatusType getStatusInfo()
    {
        org.apache.cxf.jaxrs.impl.ResponseImpl$1 $r0;
        org.apache.cxf.jaxrs.impl.ResponseImpl r1;

        r1 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        $r0 = new org.apache.cxf.jaxrs.impl.ResponseImpl$1;

        specialinvoke $r0.<org.apache.cxf.jaxrs.impl.ResponseImpl$1: void <init>(org.apache.cxf.jaxrs.impl.ResponseImpl)>(r1);

        return $r0;
    }

    public java.lang.Object getEntity()
    {
        java.lang.Object $r1, $r2;
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        $r1 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.Object lastEntity>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.Object lastEntity>;

        goto label2;

     label1:
        $r2 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.Object entity>;

     label2:
        return $r2;
    }

    public boolean hasEntity()
    {
        java.lang.Object $r1;
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.Object getEntity()>();

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public javax.ws.rs.core.MultivaluedMap getMetadata()
    {
        javax.ws.rs.core.MultivaluedMap $r1;
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: javax.ws.rs.core.MultivaluedMap getHeaders()>();

        return $r1;
    }

    public javax.ws.rs.core.MultivaluedMap getHeaders()
    {
        javax.ws.rs.core.MultivaluedMap $r1;
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        $r1 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: javax.ws.rs.core.MultivaluedMap metadata>;

        return $r1;
    }

    public javax.ws.rs.core.MultivaluedMap getStringHeaders()
    {
        java.util.Map$Entry r7;
        java.util.Iterator $r5;
        org.apache.cxf.jaxrs.impl.MetadataMap $r0;
        java.util.Set $r4;
        javax.ws.rs.core.MultivaluedMap $r2, $r3;
        java.util.List $r10, $r11;
        int $i0;
        java.lang.Object $r6, $r8, $r9;
        org.apache.cxf.jaxrs.impl.ResponseImpl r1;
        boolean $z0;

        r1 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        $r0 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        $r2 = r1.<org.apache.cxf.jaxrs.impl.ResponseImpl: javax.ws.rs.core.MultivaluedMap metadata>;

        $i0 = interfaceinvoke $r2.<javax.ws.rs.core.MultivaluedMap: int size()>();

        specialinvoke $r0.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>(int)>($i0);

        $r3 = r1.<org.apache.cxf.jaxrs.impl.ResponseImpl: javax.ws.rs.core.MultivaluedMap metadata>;

        $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (java.util.List) $r9;

        $r11 = specialinvoke r1.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.util.List toListOfStrings(java.util.List)>($r10);

        virtualinvoke $r0.<org.apache.cxf.jaxrs.impl.MetadataMap: java.util.List put(java.lang.Object,java.util.List)>($r8, $r11);

        goto label1;

     label2:
        return $r0;
    }

    private java.lang.String getHeader(java.lang.String)
    {
        javax.ws.rs.core.MultivaluedMap $r2;
        java.lang.Object $r3;
        java.lang.String r1, $r4;
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: javax.ws.rs.core.MultivaluedMap metadata>;

        $r3 = interfaceinvoke $r2.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>(r1);

        if $r3 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

     label2:
        return $r4;
    }

    public java.lang.String getHeaderString(java.lang.String)
    {
        javax.ws.rs.core.MultivaluedMap $r2;
        java.util.List r4, $r5;
        java.lang.Object $r3;
        java.lang.String r1, $r6;
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: javax.ws.rs.core.MultivaluedMap metadata>;

        $r3 = interfaceinvoke $r2.<javax.ws.rs.core.MultivaluedMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.List) $r3;

        $r5 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.util.List toListOfStrings(java.util.List)>(r4);

        $r6 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String getHeaderString(java.util.List)>($r5);

        return $r6;
    }

    private java.util.List toListOfStrings(java.util.List)
    {
        java.util.Iterator $r2;
        java.util.ArrayList $r1;
        java.util.List r0;
        int $i0;
        java.lang.Object $r3;
        java.lang.String $r4;
        org.apache.cxf.jaxrs.impl.ResponseImpl r5;
        boolean $z0;

        r5 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        r0 := @parameter0: java.util.List;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new java.util.ArrayList;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0);

        $r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label2;

     label3:
        return $r1;
    }

    public java.util.Set getAllowedMethods()
    {
        java.util.Iterator $r5;
        java.util.Set $r8;
        javax.ws.rs.core.MultivaluedMap $r1;
        java.util.HashSet $r4;
        java.util.List r3;
        java.lang.Object $r2, $r6;
        java.lang.String $r7;
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        $r1 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: javax.ws.rs.core.MultivaluedMap metadata>;

        $r2 = interfaceinvoke $r1.<javax.ws.rs.core.MultivaluedMap: java.lang.Object get(java.lang.Object)>("Allow");

        r3 = (java.util.List) $r2;

        if r3 != null goto label1;

        $r8 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        return $r8;

     label1:
        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        $r5 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r7);

        goto label2;

     label3:
        return $r4;
    }

    public java.util.Map getCookies()
    {
        java.util.Iterator $r5;
        java.util.HashMap $r4;
        javax.ws.rs.core.NewCookie $r8;
        javax.ws.rs.core.MultivaluedMap $r1;
        java.util.List r3;
        java.util.Map $r10;
        java.lang.Object $r2, $r6;
        java.lang.String $r7, $r9;
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        $r1 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: javax.ws.rs.core.MultivaluedMap metadata>;

        $r2 = interfaceinvoke $r1.<javax.ws.rs.core.MultivaluedMap: java.lang.Object get(java.lang.Object)>("Set-Cookie");

        r3 = (java.util.List) $r2;

        if r3 != null goto label1;

        $r10 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r10;

     label1:
        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r5 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        $r8 = staticinvoke <javax.ws.rs.core.NewCookie: javax.ws.rs.core.NewCookie valueOf(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<javax.ws.rs.core.NewCookie: java.lang.String getName()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r8);

        goto label2;

     label3:
        return $r4;
    }

    public java.util.Date getDate()
    {
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;
        java.util.Date $r1;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        $r1 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.util.Date doGetDate(java.lang.String)>("Date");

        return $r1;
    }

    private java.util.Date doGetDate(java.lang.String)
    {
        java.util.Date $r3;
        java.lang.String r1, $r2;
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.String getHeader(java.lang.String)>(r1);

        $r3 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.util.Date getHttpDate(java.lang.String)>($r2);

        return $r3;
    }

    public javax.ws.rs.core.EntityTag getEntityTag()
    {
        java.lang.String $r1;
        javax.ws.rs.core.EntityTag $r2;
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        $r1 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.String getHeader(java.lang.String)>("ETag");

        if $r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = staticinvoke <javax.ws.rs.core.EntityTag: javax.ws.rs.core.EntityTag valueOf(java.lang.String)>($r1);

     label2:
        return $r2;
    }

    public java.util.Locale getLanguage()
    {
        java.lang.String $r1;
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;
        java.util.Locale $r2;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        $r1 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.String getHeader(java.lang.String)>("Content-Language");

        $r2 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.util.Locale getLocale(java.lang.String)>($r1);

        return $r2;
    }

    public java.util.Date getLastModified()
    {
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;
        java.util.Date $r1;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        $r1 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.util.Date doGetDate(java.lang.String)>("Last-Modified");

        return $r1;
    }

    public int getLength()
    {
        int $i0;
        java.lang.String $r1;
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        $r1 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.String getHeader(java.lang.String)>("Content-Length");

        $i0 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: int getContentLength(java.lang.String)>($r1);

        return $i0;
    }

    public java.net.URI getLocation()
    {
        java.lang.String $r1;
        java.net.URI $r2;
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        $r1 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.String getHeader(java.lang.String)>("Location");

        if $r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1);

     label2:
        return $r2;
    }

    public javax.ws.rs.core.MediaType getMediaType()
    {
        javax.ws.rs.core.MediaType $r2;
        java.lang.String $r1;
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        $r1 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.String getHeader(java.lang.String)>("Content-Type");

        if $r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.MediaType toMediaType(java.lang.String)>($r1);

     label2:
        return $r2;
    }

    public boolean hasLink(java.lang.String)
    {
        java.lang.String r1;
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;
        javax.ws.rs.core.Link $r2;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: javax.ws.rs.core.Link getLink(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public javax.ws.rs.core.Link getLink(java.lang.String)
    {
        java.util.Map$Entry r5;
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.util.Map $r1;
        java.lang.Object $r4, $r6, $r9;
        java.lang.String r7, $r8;
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;
        javax.ws.rs.core.Link $r10;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        r7 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.util.Map getAllLinks()>();

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r6 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.String) $r6;

        $z1 = virtualinvoke $r8.<java.lang.String: boolean contains(java.lang.CharSequence)>(r7);

        if $z1 == 0 goto label2;

        $r9 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (javax.ws.rs.core.Link) $r9;

        return $r10;

     label2:
        goto label1;

     label3:
        return null;
    }

    public javax.ws.rs.core.Link$Builder getLinkBuilder(java.lang.String)
    {
        javax.ws.rs.core.Link$Builder $r3;
        java.lang.String r1;
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;
        javax.ws.rs.core.Link $r2;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: javax.ws.rs.core.Link getLink(java.lang.String)>(r1);

        $r3 = staticinvoke <javax.ws.rs.core.Link: javax.ws.rs.core.Link$Builder fromLink(javax.ws.rs.core.Link)>($r2);

        return $r3;
    }

    public java.util.Set getLinks()
    {
        java.util.HashSet $r0;
        java.util.Map $r2;
        java.util.Collection $r3;
        org.apache.cxf.jaxrs.impl.ResponseImpl r1;

        r1 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        $r0 = new java.util.HashSet;

        $r2 = specialinvoke r1.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.util.Map getAllLinks()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        specialinvoke $r0.<java.util.HashSet: void <init>(java.util.Collection)>($r3);

        return $r0;
    }

    private java.util.Map getAllLinks()
    {
        java.util.Iterator $r5;
        java.util.HashMap $r4;
        javax.ws.rs.core.MultivaluedMap $r1;
        java.util.List r3;
        java.util.Map $r10;
        java.lang.Object $r2, $r6;
        java.lang.String $r7, $r9;
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;
        javax.ws.rs.core.Link $r8;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        $r1 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: javax.ws.rs.core.MultivaluedMap metadata>;

        $r2 = interfaceinvoke $r1.<javax.ws.rs.core.MultivaluedMap: java.lang.Object get(java.lang.Object)>("Link");

        r3 = (java.util.List) $r2;

        if r3 != null goto label1;

        $r10 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r10;

     label1:
        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r5 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        $r8 = staticinvoke <javax.ws.rs.core.Link: javax.ws.rs.core.Link valueOf(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<javax.ws.rs.core.Link: java.lang.String getRel()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r8);

        goto label2;

     label3:
        return $r4;
    }

    public java.lang.Object readEntity(java.lang.Class) throws javax.ws.rs.MessageProcessingException, java.lang.IllegalStateException
    {
        java.lang.Class r1;
        java.lang.Object $r3;
        java.lang.'annotation'.Annotation[] $r2;
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        r1 := @parameter0: java.lang.Class;

        $r2 = newarray (java.lang.'annotation'.Annotation)[0];

        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.Object readEntity(java.lang.Class,java.lang.'annotation'.Annotation[])>(r1, $r2);

        return $r3;
    }

    public java.lang.Object readEntity(javax.ws.rs.core.GenericType) throws javax.ws.rs.MessageProcessingException, java.lang.IllegalStateException
    {
        javax.ws.rs.core.GenericType r1;
        java.lang.Object $r3;
        java.lang.'annotation'.Annotation[] $r2;
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        r1 := @parameter0: javax.ws.rs.core.GenericType;

        $r2 = newarray (java.lang.'annotation'.Annotation)[0];

        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.Object readEntity(javax.ws.rs.core.GenericType,java.lang.'annotation'.Annotation[])>(r1, $r2);

        return $r3;
    }

    public java.lang.Object readEntity(java.lang.Class, java.lang.'annotation'.Annotation[]) throws javax.ws.rs.MessageProcessingException, java.lang.IllegalStateException
    {
        java.lang.Class r1;
        java.lang.Object $r3;
        java.lang.'annotation'.Annotation[] r2;
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.'annotation'.Annotation[];

        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.Object doReadEntity(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])>(r1, r1, r2);

        return $r3;
    }

    public java.lang.Object readEntity(javax.ws.rs.core.GenericType, java.lang.'annotation'.Annotation[]) throws javax.ws.rs.MessageProcessingException, java.lang.IllegalStateException
    {
        javax.ws.rs.core.GenericType r1;
        java.lang.reflect.Type $r3;
        java.lang.Class $r2;
        java.lang.Object $r5;
        java.lang.'annotation'.Annotation[] r4;
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        r1 := @parameter0: javax.ws.rs.core.GenericType;

        r4 := @parameter1: java.lang.'annotation'.Annotation[];

        $r2 = virtualinvoke r1.<javax.ws.rs.core.GenericType: java.lang.Class getRawType()>();

        $r3 = virtualinvoke r1.<javax.ws.rs.core.GenericType: java.lang.reflect.Type getType()>();

        $r5 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.Object doReadEntity(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])>($r2, $r3, r4);

        return $r5;
    }

    public java.lang.Object doReadEntity(java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[]) throws javax.ws.rs.MessageProcessingException, java.lang.IllegalStateException
    {
        javax.ws.rs.core.MediaType $r17, r56;
        java.lang.Exception $r53;
        java.lang.StringBuilder $r4, $r5, $r7, $r27, $r28, $r29;
        java.lang.String $r8, $r30, $r32, $r59;
        org.apache.cxf.message.Exchange $r23;
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;
        java.lang.IllegalStateException $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        javax.ws.rs.MessageProcessingException $r26, $r54;
        java.util.List $r25;
        java.lang.reflect.Type r20;
        org.apache.cxf.jaxrs.provider.ProviderFactory $r19;
        java.lang.'annotation'.Annotation[] r21;
        org.apache.cxf.message.Message $r18, $r22, $r24, $r31, $r37;
        javax.ws.rs.core.MultivaluedMap $r33;
        java.lang.Object $r1, $r2, $r6, $r9, $r12, $r14, $r15, $r16, $r34, $r36, $r39, $r40, $r42, $r44, $r46, $r48, $r50, $r51, $r52, $r55, $r57, $r58;
        java.lang.Class $r10, r11, $r13, $r35, $r41, $r45, $r49;
        java.io.InputStream $r38, $r43, $r47;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        r11 := @parameter0: java.lang.Class;

        r20 := @parameter1: java.lang.reflect.Type;

        r21 := @parameter2: java.lang.'annotation'.Annotation[];

        specialinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: void checkEntityIsClosed()>();

        $r1 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.Object lastEntity>;

        if $r1 == null goto label01;

        $r48 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.Object lastEntity>;

        $r49 = virtualinvoke $r48.<java.lang.Object: java.lang.Class getClass()>();

        $z4 = virtualinvoke r11.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r49);

        if $z4 == 0 goto label01;

        $r50 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.Object lastEntity>;

        $z5 = $r50 instanceof java.io.InputStream;

        if $z5 != 0 goto label01;

        $r51 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.Object lastEntity>;

        $r52 = virtualinvoke r11.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r51);

        return $r52;

     label01:
        $r55 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.Object entity>;

        $z6 = $r55 instanceof java.io.InputStream;

        if $z6 == 0 goto label09;

        $r17 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: javax.ws.rs.core.MediaType getMediaType()>();

        r56 = $r17;

        if $r17 != null goto label02;

        r56 = <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType WILDCARD_TYPE>;

     label02:
        $r18 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: org.apache.cxf.message.Message responseMessage>;

        $r19 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.message.Message)>($r18);

        $r22 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: org.apache.cxf.message.Message responseMessage>;

        $r23 = interfaceinvoke $r22.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r24 = interfaceinvoke $r23.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getOutMessage()>();

        $r25 = virtualinvoke $r19.<org.apache.cxf.jaxrs.provider.ProviderFactory: java.util.List createMessageBodyReaderInterceptor(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)>(r11, r20, r21, r56, $r24);

        if $r25 == null goto label08;

     label03:
        $z1 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: boolean entityBufferred>;

        if $z1 == 0 goto label04;

        $r45 = class "Ljava/io/InputStream;";

        $r44 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.Object entity>;

        $r46 = virtualinvoke $r45.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r44);

        $r47 = (java.io.InputStream) $r46;

        virtualinvoke $r47.<java.io.InputStream: void reset()>();

     label04:
        $r31 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: org.apache.cxf.message.Message responseMessage>;

        $r32 = <org.apache.cxf.message.Message: java.lang.String PROTOCOL_HEADERS>;

        $r33 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: javax.ws.rs.core.MultivaluedMap getMetadata()>();

        interfaceinvoke $r31.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>($r32, $r33);

        $r35 = class "Ljava/io/InputStream;";

        $r34 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.Object entity>;

        $r36 = virtualinvoke $r35.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r34);

        $r38 = (java.io.InputStream) $r36;

        $r37 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: org.apache.cxf.message.Message responseMessage>;

        $r39 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.Object readFromMessageBodyReader(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)>($r25, r11, r20, r21, $r38, r56, $r37);

        r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.Object lastEntity> = $r39;

        $z2 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: boolean entityBufferred>;

        if $z2 != 0 goto label05;

        $z3 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: boolean responseStreamCanBeClosed(java.lang.Class)>(r11);

        if $z3 == 0 goto label05;

        $r41 = class "Ljava/io/InputStream;";

        $r40 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.Object entity>;

        $r42 = virtualinvoke $r41.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r40);

        $r43 = (java.io.InputStream) $r42;

        virtualinvoke $r43.<java.io.InputStream: void close()>();

        r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.Object entity> = null;

     label05:
        $r57 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.Object lastEntity>;

        $r58 = virtualinvoke r11.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r57);

     label06:
        return $r58;

     label07:
        $r53 := @caughtexception;

        $r54 = new javax.ws.rs.MessageProcessingException;

        specialinvoke $r54.<javax.ws.rs.MessageProcessingException: void <init>(java.lang.Throwable)>($r53);

        throw $r54;

     label08:
        $r26 = new javax.ws.rs.MessageProcessingException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No message body reader for class: ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<javax.ws.rs.MessageProcessingException: void <init>(java.lang.String)>($r30);

        throw $r26;

     label09:
        $r2 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.Object entity>;

        if $r2 == null goto label10;

        $r12 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.Object entity>;

        $r13 = virtualinvoke $r12.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke r11.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r13);

        if $z0 == 0 goto label10;

        $r14 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.Object entity>;

        r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.Object lastEntity> = $r14;

        $r15 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.Object lastEntity>;

        $r16 = virtualinvoke r11.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r15);

        return $r16;

     label10:
        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The entity is not backed by an input stream, entity class is : ");

        $r6 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.Object entity>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        if $r8 == null goto label11;

        $r9 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.Object entity>;

        $r10 = virtualinvoke $r9.<java.lang.Object: java.lang.Class getClass()>();

        $r59 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

        goto label12;

     label11:
        $r59 = null;

     label12:
        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r59);

        throw $r3;

        catch java.lang.Exception from label03 to label06 with label07;
    }

    protected boolean responseStreamCanBeClosed(java.lang.Class)
    {
        org.apache.cxf.message.Message $r2;
        java.lang.Class r0;
        java.lang.Object $r3;
        org.apache.cxf.jaxrs.impl.ResponseImpl r1;
        boolean $z0, $z1;

        r1 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        r0 := @parameter0: java.lang.Class;

        if r0 == class "Ljava/io/InputStream;" goto label1;

        $r2 = r1.<org.apache.cxf.jaxrs.impl.ResponseImpl: org.apache.cxf.message.Message responseMessage>;

        $r3 = interfaceinvoke $r2.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>("response.stream.auto.close");

        $z0 = staticinvoke <org.apache.cxf.message.MessageUtils: boolean isTrue(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean bufferEntity() throws javax.ws.rs.MessageProcessingException
    {
        java.io.IOException $r4;
        javax.ws.rs.MessageProcessingException $r5;
        java.io.ByteArrayInputStream $r3;
        java.lang.Object $r1, $r2;
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;
        boolean $z0, $z1, $z2;
        java.io.InputStream r6;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        specialinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: void checkEntityIsClosed()>();

        $z0 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: boolean entityBufferred>;

        if $z0 != 0 goto label4;

        $r1 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.Object entity>;

        $z1 = $r1 instanceof java.io.InputStream;

        if $z1 == 0 goto label4;

     label1:
        $r2 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.Object entity>;

        r6 = (java.io.InputStream) $r2;

        $r3 = staticinvoke <org.apache.cxf.helpers.IOUtils: java.io.ByteArrayInputStream loadIntoBAIS(java.io.InputStream)>(r6);

        r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.Object entity> = $r3;

        virtualinvoke r6.<java.io.InputStream: void close()>();

        r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: boolean entityBufferred> = 1;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new javax.ws.rs.MessageProcessingException;

        specialinvoke $r5.<javax.ws.rs.MessageProcessingException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

     label4:
        $z2 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: boolean entityBufferred>;

        return $z2;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void close() throws javax.ws.rs.MessageProcessingException
    {
        java.io.IOException $r4;
        javax.ws.rs.MessageProcessingException $r5;
        java.lang.Object $r1, $r2;
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;
        boolean $z0, $z1, $z2;
        java.io.InputStream $r3;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        $z0 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: boolean entityClosed>;

        if $z0 != 0 goto label5;

        $z1 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: boolean entityBufferred>;

        if $z1 != 0 goto label4;

        $r1 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.Object entity>;

        $z2 = $r1 instanceof java.io.InputStream;

        if $z2 == 0 goto label4;

     label1:
        $r2 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.Object entity>;

        $r3 = (java.io.InputStream) $r2;

        virtualinvoke $r3.<java.io.InputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new javax.ws.rs.MessageProcessingException;

        specialinvoke $r5.<javax.ws.rs.MessageProcessingException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

     label4:
        r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.Object entity> = null;

        r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: boolean entityClosed> = 1;

     label5:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private void checkEntityIsClosed()
    {
        java.lang.IllegalStateException $r1;
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseImpl;

        $z0 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: boolean entityClosed>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Entity is not available");

        throw $r1;

     label1:
        return;
    }

    static int access$000(org.apache.cxf.jaxrs.impl.ResponseImpl)
    {
        int $i0;
        org.apache.cxf.jaxrs.impl.ResponseImpl r0;

        r0 := @parameter0: org.apache.cxf.jaxrs.impl.ResponseImpl;

        $i0 = r0.<org.apache.cxf.jaxrs.impl.ResponseImpl: int status>;

        return $i0;
    }
}
