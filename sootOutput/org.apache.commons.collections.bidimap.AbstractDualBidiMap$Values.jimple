public class org.apache.commons.collections.bidimap.AbstractDualBidiMap$Values extends org.apache.commons.collections.bidimap.AbstractDualBidiMap$View implements java.util.Set
{

    protected void <init>(org.apache.commons.collections.bidimap.AbstractDualBidiMap)
    {
        java.util.Map[] $r2;
        org.apache.commons.collections.bidimap.AbstractDualBidiMap$Values r0;
        java.util.Map $r3;
        java.util.Collection $r4;
        org.apache.commons.collections.bidimap.AbstractDualBidiMap r1;

        r0 := @this: org.apache.commons.collections.bidimap.AbstractDualBidiMap$Values;

        r1 := @parameter0: org.apache.commons.collections.bidimap.AbstractDualBidiMap;

        $r2 = r1.<org.apache.commons.collections.bidimap.AbstractDualBidiMap: java.util.Map[] maps>;

        $r3 = $r2[0];

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

        specialinvoke r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$View: void <init>(java.util.Collection,org.apache.commons.collections.bidimap.AbstractDualBidiMap)>($r4, r1);

        return;
    }

    public java.util.Iterator iterator()
    {
        java.util.Iterator $r2, $r3;
        org.apache.commons.collections.bidimap.AbstractDualBidiMap$Values r0;
        org.apache.commons.collections.bidimap.AbstractDualBidiMap $r1;

        r0 := @this: org.apache.commons.collections.bidimap.AbstractDualBidiMap$Values;

        $r1 = r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$Values: org.apache.commons.collections.bidimap.AbstractDualBidiMap parent>;

        $r2 = specialinvoke r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$View: java.util.Iterator iterator()>();

        $r3 = virtualinvoke $r1.<org.apache.commons.collections.bidimap.AbstractDualBidiMap: java.util.Iterator createValuesIterator(java.util.Iterator)>($r2);

        return $r3;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.Map[] $r2;
        org.apache.commons.collections.bidimap.AbstractDualBidiMap$Values r0;
        java.util.Map $r4;
        java.lang.Object r3;
        org.apache.commons.collections.bidimap.AbstractDualBidiMap $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.bidimap.AbstractDualBidiMap$Values;

        r3 := @parameter0: java.lang.Object;

        $r1 = r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$Values: org.apache.commons.collections.bidimap.AbstractDualBidiMap parent>;

        $r2 = $r1.<org.apache.commons.collections.bidimap.AbstractDualBidiMap: java.util.Map[] maps>;

        $r4 = $r2[1];

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r3);

        return $z0;
    }

    public boolean remove(java.lang.Object)
    {
        java.util.Map[] $r2, $r6, $r10;
        org.apache.commons.collections.bidimap.AbstractDualBidiMap$Values r0;
        java.util.Map $r4, $r7, $r11;
        java.lang.Object r3, $r8;
        org.apache.commons.collections.bidimap.AbstractDualBidiMap $r1, $r5, $r9;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.bidimap.AbstractDualBidiMap$Values;

        r3 := @parameter0: java.lang.Object;

        $r1 = r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$Values: org.apache.commons.collections.bidimap.AbstractDualBidiMap parent>;

        $r2 = $r1.<org.apache.commons.collections.bidimap.AbstractDualBidiMap: java.util.Map[] maps>;

        $r4 = $r2[1];

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r3);

        if $z0 == 0 goto label1;

        $r5 = r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$Values: org.apache.commons.collections.bidimap.AbstractDualBidiMap parent>;

        $r6 = $r5.<org.apache.commons.collections.bidimap.AbstractDualBidiMap: java.util.Map[] maps>;

        $r7 = $r6[1];

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r3);

        $r9 = r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$Values: org.apache.commons.collections.bidimap.AbstractDualBidiMap parent>;

        $r10 = $r9.<org.apache.commons.collections.bidimap.AbstractDualBidiMap: java.util.Map[] maps>;

        $r11 = $r10[0];

        interfaceinvoke $r11.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r8);

        return 1;

     label1:
        return 0;
    }
}
