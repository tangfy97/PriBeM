public class org.fife.ui.rtextarea.RTextAreaEditorKit$LineMoveAction extends org.fife.ui.rtextarea.RecordableTextAction
{
    private int moveAmt;

    public void <init>(java.lang.String, int)
    {
        int i0;
        java.lang.String r1;
        org.fife.ui.rtextarea.RTextAreaEditorKit$LineMoveAction r0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaEditorKit$LineMoveAction;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<org.fife.ui.rtextarea.RecordableTextAction: void <init>(java.lang.String)>(r1);

        r0.<org.fife.ui.rtextarea.RTextAreaEditorKit$LineMoveAction: int moveAmt> = i0;

        return;
    }

    public void actionPerformedImpl(java.awt.event.ActionEvent, org.fife.ui.rtextarea.RTextArea)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;
        org.fife.ui.rtextarea.RTextAreaEditorKit$LineMoveAction r4;
        boolean $z0, $z1;
        org.fife.ui.rtextarea.RTextArea r0;
        javax.swing.LookAndFeel $r1, $r5, $r7;
        javax.swing.text.BadLocationException $r6;
        java.awt.event.ActionEvent r8;
        javax.swing.text.Document $r2;
        javax.swing.text.Element $r3;

        r4 := @this: org.fife.ui.rtextarea.RTextAreaEditorKit$LineMoveAction;

        r8 := @parameter0: java.awt.event.ActionEvent;

        r0 := @parameter1: org.fife.ui.rtextarea.RTextArea;

        $z0 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: boolean isEditable()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: boolean isEnabled()>();

        if $z1 != 0 goto label2;

     label1:
        $r1 = staticinvoke <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>();

        virtualinvoke $r1.<javax.swing.LookAndFeel: void provideErrorFeedback(java.awt.Component)>(r0);

        return;

     label2:
        $i0 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: int getCaretPosition()>();

        $r2 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: javax.swing.text.Document getDocument()>();

        $r3 = interfaceinvoke $r2.<javax.swing.text.Document: javax.swing.text.Element getDefaultRootElement()>();

        $i1 = interfaceinvoke $r3.<javax.swing.text.Element: int getElementIndex(int)>($i0);

        $i2 = r4.<org.fife.ui.rtextarea.RTextAreaEditorKit$LineMoveAction: int moveAmt>;

        $i7 = (int) -1;

        if $i2 != $i7 goto label3;

        if $i1 <= 0 goto label3;

        specialinvoke r4.<org.fife.ui.rtextarea.RTextAreaEditorKit$LineMoveAction: void moveLineUp(org.fife.ui.rtextarea.RTextArea,int)>(r0, $i1);

        goto label6;

     label3:
        $i3 = r4.<org.fife.ui.rtextarea.RTextAreaEditorKit$LineMoveAction: int moveAmt>;

        if $i3 != 1 goto label4;

        $i4 = interfaceinvoke $r3.<javax.swing.text.Element: int getElementCount()>();

        $i5 = $i4 - 1;

        if $i1 >= $i5 goto label4;

        specialinvoke r4.<org.fife.ui.rtextarea.RTextAreaEditorKit$LineMoveAction: void moveLineDown(org.fife.ui.rtextarea.RTextArea,int)>(r0, $i1);

        goto label6;

     label4:
        $r5 = staticinvoke <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>();

        virtualinvoke $r5.<javax.swing.LookAndFeel: void provideErrorFeedback(java.awt.Component)>(r0);

     label5:
        return;

     label6:
        goto label8;

     label7:
        $r6 := @caughtexception;

        virtualinvoke $r6.<javax.swing.text.BadLocationException: void printStackTrace()>();

        $r7 = staticinvoke <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>();

        virtualinvoke $r7.<javax.swing.LookAndFeel: void provideErrorFeedback(java.awt.Component)>(r0);

        return;

     label8:
        return;

        catch javax.swing.text.BadLocationException from label2 to label5 with label7;
    }

    public final java.lang.String getMacroID()
    {
        java.lang.String $r1;
        org.fife.ui.rtextarea.RTextAreaEditorKit$LineMoveAction r0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaEditorKit$LineMoveAction;

        $r1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaEditorKit$LineMoveAction: java.lang.String getName()>();

        return $r1;
    }

    private final void moveLineDown(org.fife.ui.rtextarea.RTextArea, int) throws javax.swing.text.BadLocationException
    {
        int i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.String $r4;
        org.fife.ui.rtextarea.RTextAreaEditorKit$LineMoveAction r7;
        org.fife.ui.rtextarea.RTextArea r0;
        javax.swing.text.Document $r1;
        javax.swing.text.Element $r2, $r3, $r5, $r6;

        r7 := @this: org.fife.ui.rtextarea.RTextAreaEditorKit$LineMoveAction;

        r0 := @parameter0: org.fife.ui.rtextarea.RTextArea;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: javax.swing.text.Document getDocument()>();

        $r2 = interfaceinvoke $r1.<javax.swing.text.Document: javax.swing.text.Element getDefaultRootElement()>();

        $r3 = interfaceinvoke $r2.<javax.swing.text.Element: javax.swing.text.Element getElement(int)>(i0);

        $i1 = interfaceinvoke $r3.<javax.swing.text.Element: int getStartOffset()>();

        $i2 = interfaceinvoke $r3.<javax.swing.text.Element: int getEndOffset()>();

        $i3 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: int getCaretPosition()>();

        i4 = $i3 - $i1;

        $i5 = $i2 - $i1;

        $r4 = interfaceinvoke $r1.<javax.swing.text.Document: java.lang.String getText(int,int)>($i1, $i5);

        $i6 = $i2 - $i1;

        interfaceinvoke $r1.<javax.swing.text.Document: void remove(int,int)>($i1, $i6);

        $r5 = interfaceinvoke $r2.<javax.swing.text.Element: javax.swing.text.Element getElement(int)>(i0);

        $i7 = interfaceinvoke $r5.<javax.swing.text.Element: int getEndOffset()>();

        interfaceinvoke $r1.<javax.swing.text.Document: void insertString(int,java.lang.String,javax.swing.text.AttributeSet)>($i7, $r4, null);

        $i8 = i0 + 1;

        $r6 = interfaceinvoke $r2.<javax.swing.text.Element: javax.swing.text.Element getElement(int)>($i8);

        $i9 = interfaceinvoke $r6.<javax.swing.text.Element: int getStartOffset()>();

        $i10 = $i9 + i4;

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: void setCaretPosition(int)>($i10);

        return;
    }

    private final void moveLineUp(org.fife.ui.rtextarea.RTextArea, int) throws javax.swing.text.BadLocationException
    {
        java.lang.StringBuffer $r7, $r8, $r11;
        int $i0, i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, $i16, $i18;
        java.lang.String $r4, r10;
        org.fife.ui.rtextarea.RTextAreaEditorKit$LineMoveAction r9;
        org.fife.ui.rtextarea.RTextArea r0;
        javax.swing.text.Document $r1;
        javax.swing.text.Element $r2, $r3, $r5;

        r9 := @this: org.fife.ui.rtextarea.RTextAreaEditorKit$LineMoveAction;

        r0 := @parameter0: org.fife.ui.rtextarea.RTextArea;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: javax.swing.text.Document getDocument()>();

        $r2 = interfaceinvoke $r1.<javax.swing.text.Document: javax.swing.text.Element getDefaultRootElement()>();

        $i0 = interfaceinvoke $r2.<javax.swing.text.Element: int getElementCount()>();

        $r3 = interfaceinvoke $r2.<javax.swing.text.Element: javax.swing.text.Element getElement(int)>(i1);

        $i2 = interfaceinvoke $r3.<javax.swing.text.Element: int getStartOffset()>();

        i15 = $i2;

        $i3 = $i0 - 1;

        if i1 != $i3 goto label1;

        $i13 = interfaceinvoke $r3.<javax.swing.text.Element: int getEndOffset()>();

        $i16 = $i13 - 1;

        goto label2;

     label1:
        $i16 = interfaceinvoke $r3.<javax.swing.text.Element: int getEndOffset()>();

     label2:
        i4 = $i16;

        $i5 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: int getCaretPosition()>();

        $i14 = $i5 - $i2;

        $i6 = $i16 - $i2;

        $r4 = interfaceinvoke $r1.<javax.swing.text.Document: java.lang.String getText(int,int)>($i2, $i6);

        r10 = $r4;

        $i7 = $i0 - 1;

        if i1 != $i7 goto label3;

        $i18 = (int) -1;

        i15 = $i2 + $i18;

     label3:
        $i8 = i4 - i15;

        interfaceinvoke $r1.<javax.swing.text.Document: void remove(int,int)>(i15, $i8);

        $i9 = i1 - 1;

        $r5 = interfaceinvoke $r2.<javax.swing.text.Element: javax.swing.text.Element getElement(int)>($i9);

        $i10 = interfaceinvoke $r5.<javax.swing.text.Element: int getStartOffset()>();

        $i11 = $i0 - 1;

        if i1 != $i11 goto label4;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

     label4:
        interfaceinvoke $r1.<javax.swing.text.Document: void insertString(int,java.lang.String,javax.swing.text.AttributeSet)>($i10, r10, null);

        $i12 = $i10 + $i14;

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: void setCaretPosition(int)>($i12);

        return;
    }
}
