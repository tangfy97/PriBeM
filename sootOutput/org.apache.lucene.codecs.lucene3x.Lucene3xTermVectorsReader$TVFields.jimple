class org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields extends org.apache.lucene.index.Fields
{
    private final int[] fieldNumbers;
    private final long[] fieldFPs;
    private final java.util.Map fieldNumberToIndex;
    static final boolean $assertionsDisabled;
    final org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader this$0;

    public void <init>(org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader, int) throws java.io.IOException
    {
        java.util.HashMap $r2;
        long $l1, $l3, $l4, l7;
        java.lang.AssertionError $r17;
        java.lang.Integer $r15, $r16;
        long[] $r7, $r9, $r11;
        int[] $r6, $r13;
        java.util.Map $r14;
        int i0, $i2, $i5, i6, i8;
        boolean $z0;
        org.apache.lucene.store.IndexInput $r3, $r4, $r5, $r8, $r10, $r12;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields r0;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader r1;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields;

        r1 := @parameter0: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader;

        i0 := @parameter1: int;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader this$0> = r1;

        specialinvoke r0.<org.apache.lucene.index.Fields: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields: java.util.Map fieldNumberToIndex> = $r2;

        virtualinvoke r1.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: void seekTvx(int)>(i0);

        $r3 = staticinvoke <org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.store.IndexInput access$100(org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader)>(r1);

        $r4 = staticinvoke <org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.store.IndexInput access$000(org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader)>(r1);

        $l1 = virtualinvoke $r4.<org.apache.lucene.store.IndexInput: long readLong()>();

        virtualinvoke $r3.<org.apache.lucene.store.IndexInput: void seek(long)>($l1);

        $r5 = staticinvoke <org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.store.IndexInput access$100(org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader)>(r1);

        $i2 = virtualinvoke $r5.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $z0 = <org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if $i2 >= 0 goto label1;

        $r17 = new java.lang.AssertionError;

        specialinvoke $r17.<java.lang.AssertionError: void <init>()>();

        throw $r17;

     label1:
        if $i2 == 0 goto label6;

        $r6 = newarray (int)[$i2];

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields: int[] fieldNumbers> = $r6;

        $r7 = newarray (long)[$i2];

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields: long[] fieldFPs> = $r7;

        i6 = 0;

     label2:
        if i6 >= $i2 goto label3;

        $r12 = staticinvoke <org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.store.IndexInput access$100(org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader)>(r1);

        $i5 = virtualinvoke $r12.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $r13 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields: int[] fieldNumbers>;

        $r13[i6] = $i5;

        $r14 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields: java.util.Map fieldNumberToIndex>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r16);

        i6 = i6 + 1;

        goto label2;

     label3:
        $r8 = staticinvoke <org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.store.IndexInput access$000(org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader)>(r1);

        $l3 = virtualinvoke $r8.<org.apache.lucene.store.IndexInput: long readLong()>();

        l7 = $l3;

        $r9 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields: long[] fieldFPs>;

        $r9[0] = $l3;

        i8 = 1;

     label4:
        if i8 >= $i2 goto label5;

        $r10 = staticinvoke <org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.store.IndexInput access$100(org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader)>(r1);

        $l4 = virtualinvoke $r10.<org.apache.lucene.store.IndexInput: long readVLong()>();

        l7 = l7 + $l4;

        $r11 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields: long[] fieldFPs>;

        $r11[i8] = l7;

        i8 = i8 + 1;

        goto label4;

     label5:
        goto label7;

     label6:
        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields: int[] fieldNumbers> = null;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields: long[] fieldFPs> = null;

     label7:
        return;
    }

    public java.util.Iterator iterator()
    {
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields r1;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields$1 $r0;

        r1 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields;

        $r0 = new org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields$1;

        specialinvoke $r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields$1: void <init>(org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields)>(r1);

        return $r0;
    }

    public org.apache.lucene.index.Terms terms(java.lang.String) throws java.io.IOException
    {
        long $l2;
        java.lang.Integer $r6, r8;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields r0;
        long[] $r11;
        java.util.Map $r5;
        int $i0, $i1;
        org.apache.lucene.index.FieldInfo $r4;
        java.lang.Object $r7;
        java.lang.String r3;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTerms $r9;
        org.apache.lucene.index.FieldInfos $r2;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader $r1, $r10;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader this$0>;

        $r2 = staticinvoke <org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.index.FieldInfos access$300(org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader)>($r1);

        $r4 = virtualinvoke $r2.<org.apache.lucene.index.FieldInfos: org.apache.lucene.index.FieldInfo fieldInfo(java.lang.String)>(r3);

        if $r4 != null goto label1;

        return null;

     label1:
        $r5 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields: java.util.Map fieldNumberToIndex>;

        $i0 = $r4.<org.apache.lucene.index.FieldInfo: int number>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        r8 = (java.lang.Integer) $r7;

        if r8 != null goto label2;

        return null;

     label2:
        $r9 = new org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTerms;

        $r10 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader this$0>;

        $r11 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields: long[] fieldFPs>;

        $i1 = virtualinvoke r8.<java.lang.Integer: int intValue()>();

        $l2 = $r11[$i1];

        specialinvoke $r9.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTerms: void <init>(org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader,long)>($r10, $l2);

        return $r9;
    }

    public int size()
    {
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields r0;
        int[] $r1, $r2;
        int $i0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields: int[] fieldNumbers>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields: int[] fieldNumbers>;

        $i0 = lengthof $r2;

        return $i0;
    }

    static int[] access$200(org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields)
    {
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields r0;
        int[] $r1;

        r0 := @parameter0: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields: int[] fieldNumbers>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVFields: boolean $assertionsDisabled> = $z1;

        return;
    }
}
