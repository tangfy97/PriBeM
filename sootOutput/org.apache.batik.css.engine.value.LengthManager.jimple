public abstract class org.apache.batik.css.engine.value.LengthManager extends org.apache.batik.css.engine.value.AbstractValueManager
{
    static final double SQRT2;
    protected static final int HORIZONTAL_ORIENTATION;
    protected static final int VERTICAL_ORIENTATION;
    protected static final int BOTH_ORIENTATION;

    public void <init>()
    {
        org.apache.batik.css.engine.value.LengthManager r0;

        r0 := @this: org.apache.batik.css.engine.value.LengthManager;

        specialinvoke r0.<org.apache.batik.css.engine.value.AbstractValueManager: void <init>()>();

        return;
    }

    public org.apache.batik.css.engine.value.Value createValue(org.w3c.css.sac.LexicalUnit, org.apache.batik.css.engine.CSSEngine) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.engine.CSSEngine r14;
        short $s0, $s2;
        org.w3c.dom.DOMException $r13;
        org.w3c.css.sac.LexicalUnit r0;
        int $i1, $i3;
        org.apache.batik.css.engine.value.FloatValue $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25;
        org.apache.batik.css.engine.value.LengthManager r12;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;

        r12 := @this: org.apache.batik.css.engine.value.LengthManager;

        r0 := @parameter0: org.w3c.css.sac.LexicalUnit;

        r14 := @parameter1: org.apache.batik.css.engine.CSSEngine;

        $s0 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: short getLexicalUnitType()>();

        $i3 = (int) $s0;

        tableswitch($i3)
        {
            case 13: goto label09;
            case 14: goto label10;
            case 15: goto label01;
            case 16: goto label02;
            case 17: goto label03;
            case 18: goto label06;
            case 19: goto label04;
            case 20: goto label05;
            case 21: goto label07;
            case 22: goto label08;
            case 23: goto label11;
            default: goto label12;
        };

     label01:
        $r15 = new org.apache.batik.css.engine.value.FloatValue;

        $f8 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: float getFloatValue()>();

        specialinvoke $r15.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(3, $f8);

        return $r15;

     label02:
        $r16 = new org.apache.batik.css.engine.value.FloatValue;

        $f7 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: float getFloatValue()>();

        specialinvoke $r16.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(4, $f7);

        return $r16;

     label03:
        $r17 = new org.apache.batik.css.engine.value.FloatValue;

        $f6 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: float getFloatValue()>();

        specialinvoke $r17.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(5, $f6);

        return $r17;

     label04:
        $r18 = new org.apache.batik.css.engine.value.FloatValue;

        $f4 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: float getFloatValue()>();

        specialinvoke $r18.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(6, $f4);

        return $r18;

     label05:
        $r19 = new org.apache.batik.css.engine.value.FloatValue;

        $f3 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: float getFloatValue()>();

        specialinvoke $r19.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(7, $f3);

        return $r19;

     label06:
        $r20 = new org.apache.batik.css.engine.value.FloatValue;

        $f5 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: float getFloatValue()>();

        specialinvoke $r20.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(8, $f5);

        return $r20;

     label07:
        $r21 = new org.apache.batik.css.engine.value.FloatValue;

        $f2 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: float getFloatValue()>();

        specialinvoke $r21.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(9, $f2);

        return $r21;

     label08:
        $r22 = new org.apache.batik.css.engine.value.FloatValue;

        $f1 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: float getFloatValue()>();

        specialinvoke $r22.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(10, $f1);

        return $r22;

     label09:
        $r23 = new org.apache.batik.css.engine.value.FloatValue;

        $i1 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: int getIntegerValue()>();

        $f10 = (float) $i1;

        specialinvoke $r23.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(1, $f10);

        return $r23;

     label10:
        $r24 = new org.apache.batik.css.engine.value.FloatValue;

        $f9 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: float getFloatValue()>();

        specialinvoke $r24.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(1, $f9);

        return $r24;

     label11:
        $r25 = new org.apache.batik.css.engine.value.FloatValue;

        $f0 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: float getFloatValue()>();

        specialinvoke $r25.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(2, $f0);

        return $r25;

     label12:
        $s2 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: short getLexicalUnitType()>();

        $r13 = virtualinvoke r12.<org.apache.batik.css.engine.value.AbstractValueFactory: org.w3c.dom.DOMException createInvalidLexicalUnitDOMException(short)>($s2);

        throw $r13;
    }

    public org.apache.batik.css.engine.value.Value createFloatValue(short, float) throws org.w3c.dom.DOMException
    {
        short s0;
        org.apache.batik.css.engine.value.FloatValue $r3;
        org.apache.batik.css.engine.value.LengthManager r1;
        org.w3c.dom.DOMException $r2;
        int $i1;
        float f0;

        r1 := @this: org.apache.batik.css.engine.value.LengthManager;

        s0 := @parameter0: short;

        f0 := @parameter1: float;

        $i1 = (int) s0;

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label1;
            case 5: goto label1;
            case 6: goto label1;
            case 7: goto label1;
            case 8: goto label1;
            case 9: goto label1;
            case 10: goto label1;
            default: goto label2;
        };

     label1:
        $r3 = new org.apache.batik.css.engine.value.FloatValue;

        specialinvoke $r3.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(s0, f0);

        return $r3;

     label2:
        $r2 = virtualinvoke r1.<org.apache.batik.css.engine.value.AbstractValueFactory: org.w3c.dom.DOMException createInvalidFloatTypeDOMException(short)>(s0);

        throw $r2;
    }

    public org.apache.batik.css.engine.value.Value computeValue(org.apache.batik.css.engine.CSSStylableElement, java.lang.String, org.apache.batik.css.engine.CSSEngine, int, org.apache.batik.css.engine.StyleMap, org.apache.batik.css.engine.value.Value)
    {
        org.apache.batik.css.engine.CSSStylableElement r13;
        org.apache.batik.css.engine.value.FloatValue $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29;
        short $s0, $s1;
        java.lang.String r14;
        org.apache.batik.css.engine.value.Value r0, $r15, $r17;
        org.apache.batik.css.engine.CSSContext $r2, $r4, $r6, $r8, $r10, $r19;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, f37;
        org.apache.batik.css.engine.CSSEngine r1;
        org.apache.batik.css.engine.StyleMap r12;
        int i2, $i3, $i4, $i5, $i6;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        org.apache.batik.css.engine.value.LengthManager r20;

        r20 := @this: org.apache.batik.css.engine.value.LengthManager;

        r13 := @parameter0: org.apache.batik.css.engine.CSSStylableElement;

        r14 := @parameter1: java.lang.String;

        r1 := @parameter2: org.apache.batik.css.engine.CSSEngine;

        i2 := @parameter3: int;

        r12 := @parameter4: org.apache.batik.css.engine.StyleMap;

        r0 := @parameter5: org.apache.batik.css.engine.value.Value;

        $s0 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: short getCssValueType()>();

        if $s0 == 1 goto label01;

        return r0;

     label01:
        $s1 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: short getPrimitiveType()>();

        $i6 = (int) $s1;

        tableswitch($i6)
        {
            case 1: goto label02;
            case 2: goto label10;
            case 3: goto label08;
            case 4: goto label09;
            case 5: goto label02;
            case 6: goto label04;
            case 7: goto label03;
            case 8: goto label05;
            case 9: goto label06;
            case 10: goto label07;
            default: goto label15;
        };

     label02:
        return r0;

     label03:
        $r8 = virtualinvoke r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSContext getCSSContext()>();

        $f14 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $r22 = new org.apache.batik.css.engine.value.FloatValue;

        $f15 = interfaceinvoke $r8.<org.apache.batik.css.engine.CSSContext: float getPixelUnitToMillimeter()>();

        $f16 = $f14 / $f15;

        specialinvoke $r22.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(1, $f16);

        return $r22;

     label04:
        $r10 = virtualinvoke r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSContext getCSSContext()>();

        $f17 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $r23 = new org.apache.batik.css.engine.value.FloatValue;

        $f18 = $f17 * 10.0F;

        $f19 = interfaceinvoke $r10.<org.apache.batik.css.engine.CSSContext: float getPixelUnitToMillimeter()>();

        $f20 = $f18 / $f19;

        specialinvoke $r23.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(1, $f20);

        return $r23;

     label05:
        $r6 = virtualinvoke r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSContext getCSSContext()>();

        $f10 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $r24 = new org.apache.batik.css.engine.value.FloatValue;

        $f11 = $f10 * 25.4F;

        $f12 = interfaceinvoke $r6.<org.apache.batik.css.engine.CSSContext: float getPixelUnitToMillimeter()>();

        $f13 = $f11 / $f12;

        specialinvoke $r24.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(1, $f13);

        return $r24;

     label06:
        $r4 = virtualinvoke r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSContext getCSSContext()>();

        $f5 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $r25 = new org.apache.batik.css.engine.value.FloatValue;

        $f6 = $f5 * 25.4F;

        $f7 = interfaceinvoke $r4.<org.apache.batik.css.engine.CSSContext: float getPixelUnitToMillimeter()>();

        $f8 = 72.0F * $f7;

        $f9 = $f6 / $f8;

        specialinvoke $r25.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(1, $f9);

        return $r25;

     label07:
        $r2 = virtualinvoke r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSContext getCSSContext()>();

        $f0 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $r26 = new org.apache.batik.css.engine.value.FloatValue;

        $f1 = $f0 * 25.4F;

        $f2 = interfaceinvoke $r2.<org.apache.batik.css.engine.CSSContext: float getPixelUnitToMillimeter()>();

        $f3 = 6.0F * $f2;

        $f4 = $f1 / $f3;

        specialinvoke $r26.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(1, $f4);

        return $r26;

     label08:
        virtualinvoke r12.<org.apache.batik.css.engine.StyleMap: void putFontSizeRelative(int,boolean)>(i2, 1);

        $f25 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $i4 = virtualinvoke r1.<org.apache.batik.css.engine.CSSEngine: int getFontSizeIndex()>();

        $r17 = virtualinvoke r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.value.Value getComputedStyle(org.apache.batik.css.engine.CSSStylableElement,java.lang.String,int)>(r13, r14, $i4);

        $f26 = interfaceinvoke $r17.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $r27 = new org.apache.batik.css.engine.value.FloatValue;

        $f27 = $f25 * $f26;

        specialinvoke $r27.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(1, $f27);

        return $r27;

     label09:
        virtualinvoke r12.<org.apache.batik.css.engine.StyleMap: void putFontSizeRelative(int,boolean)>(i2, 1);

        $f21 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $i3 = virtualinvoke r1.<org.apache.batik.css.engine.CSSEngine: int getFontSizeIndex()>();

        $r15 = virtualinvoke r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.value.Value getComputedStyle(org.apache.batik.css.engine.CSSStylableElement,java.lang.String,int)>(r13, r14, $i3);

        $f22 = interfaceinvoke $r15.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $r28 = new org.apache.batik.css.engine.value.FloatValue;

        $f23 = $f21 * $f22;

        $f24 = $f23 * 0.5F;

        specialinvoke $r28.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(1, $f24);

        return $r28;

     label10:
        $r19 = virtualinvoke r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSContext getCSSContext()>();

        $i5 = virtualinvoke r20.<org.apache.batik.css.engine.value.LengthManager: int getOrientation()>();

        lookupswitch($i5)
        {
            case 0: goto label11;
            case 1: goto label12;
            default: goto label13;
        };

     label11:
        virtualinvoke r12.<org.apache.batik.css.engine.StyleMap: void putBlockWidthRelative(int,boolean)>(i2, 1);

        $f31 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $f32 = interfaceinvoke $r19.<org.apache.batik.css.engine.CSSContext: float getBlockWidth(org.w3c.dom.Element)>(r13);

        $f33 = $f31 * $f32;

        f37 = $f33 / 100.0F;

        goto label14;

     label12:
        virtualinvoke r12.<org.apache.batik.css.engine.StyleMap: void putBlockHeightRelative(int,boolean)>(i2, 1);

        $f28 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $f29 = interfaceinvoke $r19.<org.apache.batik.css.engine.CSSContext: float getBlockHeight(org.w3c.dom.Element)>(r13);

        $f30 = $f28 * $f29;

        f37 = $f30 / 100.0F;

        goto label14;

     label13:
        virtualinvoke r12.<org.apache.batik.css.engine.StyleMap: void putBlockWidthRelative(int,boolean)>(i2, 1);

        virtualinvoke r12.<org.apache.batik.css.engine.StyleMap: void putBlockHeightRelative(int,boolean)>(i2, 1);

        $f34 = interfaceinvoke $r19.<org.apache.batik.css.engine.CSSContext: float getBlockWidth(org.w3c.dom.Element)>(r13);

        d0 = (double) $f34;

        $f35 = interfaceinvoke $r19.<org.apache.batik.css.engine.CSSContext: float getBlockHeight(org.w3c.dom.Element)>(r13);

        d1 = (double) $f35;

        $f36 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $d5 = (double) $f36;

        $d3 = d0 * d0;

        $d2 = d1 * d1;

        $d4 = $d3 + $d2;

        $d6 = staticinvoke <java.lang.Math: double sqrt(double)>($d4);

        $d7 = <org.apache.batik.css.engine.value.LengthManager: double SQRT2>;

        $d8 = $d6 / $d7;

        $d9 = $d5 * $d8;

        $d10 = $d9 / 100.0;

        f37 = (float) $d10;

     label14:
        $r29 = new org.apache.batik.css.engine.value.FloatValue;

        specialinvoke $r29.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(1, f37);

        return $r29;

     label15:
        return r0;
    }

    protected abstract int getOrientation();

    static void <clinit>()
    {
        double $d0;

        <org.apache.batik.css.engine.value.LengthManager: int BOTH_ORIENTATION> = 2;

        <org.apache.batik.css.engine.value.LengthManager: int VERTICAL_ORIENTATION> = 1;

        <org.apache.batik.css.engine.value.LengthManager: int HORIZONTAL_ORIENTATION> = 0;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>(2.0);

        <org.apache.batik.css.engine.value.LengthManager: double SQRT2> = $d0;

        return;
    }
}
