public class com.sun.lwuit.plaf.DefaultLookAndFeel extends com.sun.lwuit.plaf.LookAndFeel implements com.sun.lwuit.events.FocusListener
{
    private com.sun.lwuit.Image[] chkBoxImages;
    private com.sun.lwuit.Image comboImage;
    private com.sun.lwuit.Image[] rButtonImages;
    private boolean tickWhenFocused;

    public void <init>()
    {
        com.sun.lwuit.plaf.DefaultLookAndFeel r0;

        r0 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        specialinvoke r0.<com.sun.lwuit.plaf.LookAndFeel: void <init>()>();

        r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: com.sun.lwuit.Image[] chkBoxImages> = null;

        r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: com.sun.lwuit.Image comboImage> = null;

        r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: com.sun.lwuit.Image[] rButtonImages> = null;

        r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: boolean tickWhenFocused> = 1;

        return;
    }

    public void bind(com.sun.lwuit.Component)
    {
        com.sun.lwuit.Component r1;
        com.sun.lwuit.plaf.DefaultLookAndFeel r0;
        com.sun.lwuit.Label $r2;
        boolean $z0, $z1;

        r0 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r1 := @parameter0: com.sun.lwuit.Component;

        $z0 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: boolean tickWhenFocused>;

        if $z0 == 0 goto label1;

        $z1 = r1 instanceof com.sun.lwuit.Label;

        if $z1 == 0 goto label1;

        $r2 = (com.sun.lwuit.Label) r1;

        virtualinvoke $r2.<com.sun.lwuit.Label: void addFocusListener(com.sun.lwuit.events.FocusListener)>(r0);

     label1:
        return;
    }

    public void setTickWhenFocused(boolean)
    {
        com.sun.lwuit.plaf.DefaultLookAndFeel r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: boolean tickWhenFocused> = z0;

        return;
    }

    public void setCheckBoxImages(com.sun.lwuit.Image, com.sun.lwuit.Image)
    {
        com.sun.lwuit.plaf.DefaultLookAndFeel r1;
        com.sun.lwuit.Image[] $r3;
        com.sun.lwuit.Image r0, r2;

        r1 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r0 := @parameter0: com.sun.lwuit.Image;

        r2 := @parameter1: com.sun.lwuit.Image;

        if r0 == null goto label1;

        if r2 != null goto label2;

     label1:
        r1.<com.sun.lwuit.plaf.DefaultLookAndFeel: com.sun.lwuit.Image[] chkBoxImages> = null;

        goto label3;

     label2:
        $r3 = newarray (com.sun.lwuit.Image)[2];

        $r3[0] = r2;

        $r3[1] = r0;

        r1.<com.sun.lwuit.plaf.DefaultLookAndFeel: com.sun.lwuit.Image[] chkBoxImages> = $r3;

     label3:
        return;
    }

    public void setComboBoxImage(com.sun.lwuit.Image)
    {
        com.sun.lwuit.Image r1;
        com.sun.lwuit.plaf.DefaultLookAndFeel r0;

        r0 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r1 := @parameter0: com.sun.lwuit.Image;

        r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: com.sun.lwuit.Image comboImage> = r1;

        return;
    }

    public void setRadioButtonImages(com.sun.lwuit.Image, com.sun.lwuit.Image)
    {
        com.sun.lwuit.plaf.DefaultLookAndFeel r1;
        com.sun.lwuit.Image[] $r3;
        com.sun.lwuit.Image r0, r2;

        r1 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r0 := @parameter0: com.sun.lwuit.Image;

        r2 := @parameter1: com.sun.lwuit.Image;

        if r0 == null goto label1;

        if r2 != null goto label2;

     label1:
        r1.<com.sun.lwuit.plaf.DefaultLookAndFeel: com.sun.lwuit.Image[] rButtonImages> = null;

        goto label3;

     label2:
        $r3 = newarray (com.sun.lwuit.Image)[2];

        $r3[0] = r2;

        $r3[1] = r0;

        r1.<com.sun.lwuit.plaf.DefaultLookAndFeel: com.sun.lwuit.Image[] rButtonImages> = $r3;

     label3:
        return;
    }

    public com.sun.lwuit.Image[] getRadioButtonImages()
    {
        com.sun.lwuit.Image[] $r1;
        com.sun.lwuit.plaf.DefaultLookAndFeel r0;

        r0 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        $r1 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: com.sun.lwuit.Image[] rButtonImages>;

        return $r1;
    }

    public com.sun.lwuit.Image[] getCheckBoxImages()
    {
        com.sun.lwuit.Image[] $r1;
        com.sun.lwuit.plaf.DefaultLookAndFeel r0;

        r0 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        $r1 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: com.sun.lwuit.Image[] chkBoxImages>;

        return $r1;
    }

    public void drawButton(com.sun.lwuit.Graphics, com.sun.lwuit.Button)
    {
        com.sun.lwuit.plaf.DefaultLookAndFeel r0;
        com.sun.lwuit.Graphics r1;
        com.sun.lwuit.Button r2;
        com.sun.lwuit.Image $r3;

        r0 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r1 := @parameter0: com.sun.lwuit.Graphics;

        r2 := @parameter1: com.sun.lwuit.Button;

        $r3 = virtualinvoke r2.<com.sun.lwuit.Button: com.sun.lwuit.Image getIconFromState()>();

        specialinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: void drawComponent(com.sun.lwuit.Graphics,com.sun.lwuit.Label,com.sun.lwuit.Image,com.sun.lwuit.Image,int)>(r1, r2, $r3, null, 0);

        return;
    }

    public void drawCheckBox(com.sun.lwuit.Graphics, com.sun.lwuit.Button)
    {
        com.sun.lwuit.plaf.Style $r3, $r4;
        byte $b33;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.sun.lwuit.Graphics r6;
        com.sun.lwuit.Button r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, i34, $i36;
        com.sun.lwuit.Image $r7, $r8, $r10;
        com.sun.lwuit.plaf.DefaultLookAndFeel r0;
        com.sun.lwuit.Image[] $r1, $r9;
        com.sun.lwuit.Font $r5;

        r0 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r6 := @parameter0: com.sun.lwuit.Graphics;

        r2 := @parameter1: com.sun.lwuit.Button;

        $r1 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: com.sun.lwuit.Image[] chkBoxImages>;

        if $r1 == null goto label3;

        $r8 = virtualinvoke r2.<com.sun.lwuit.Button: com.sun.lwuit.Image getIconFromState()>();

        $r9 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: com.sun.lwuit.Image[] chkBoxImages>;

        $z4 = virtualinvoke r2.<com.sun.lwuit.Button: boolean isSelected()>();

        if $z4 == 0 goto label1;

        $b33 = 1;

        goto label2;

     label1:
        $b33 = 0;

     label2:
        $r10 = $r9[$b33];

        specialinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: void drawComponent(com.sun.lwuit.Graphics,com.sun.lwuit.Label,com.sun.lwuit.Image,com.sun.lwuit.Image,int)>(r6, r2, $r8, $r10, 0);

        goto label7;

     label3:
        $r3 = virtualinvoke r2.<com.sun.lwuit.Button: com.sun.lwuit.plaf.Style getStyle()>();

        $r4 = virtualinvoke r2.<com.sun.lwuit.Button: com.sun.lwuit.plaf.Style getStyle()>();

        $r5 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Font getFont()>();

        $i0 = virtualinvoke $r5.<com.sun.lwuit.Font: int getHeight()>();

        $r7 = virtualinvoke r2.<com.sun.lwuit.Button: com.sun.lwuit.Image getIconFromState()>();

        specialinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: void drawComponent(com.sun.lwuit.Graphics,com.sun.lwuit.Label,com.sun.lwuit.Image,com.sun.lwuit.Image,int)>(r6, r2, $r7, null, $i0);

        $i1 = virtualinvoke $r3.<com.sun.lwuit.plaf.Style: int getFgColor()>();

        virtualinvoke r6.<com.sun.lwuit.Graphics: void setColor(int)>($i1);

        $i2 = virtualinvoke $r3.<com.sun.lwuit.plaf.Style: int getBgColor()>();

        $i3 = staticinvoke <com.sun.lwuit.plaf.DefaultLookAndFeel: int scaleCoordinate(float,float,int)>(12.0F, 16.0F, $i0);

        $i4 = virtualinvoke r2.<com.sun.lwuit.Button: int getX()>();

        $z0 = virtualinvoke r2.<com.sun.lwuit.Button: boolean isRTL()>();

        if $z0 == 0 goto label4;

        $i28 = virtualinvoke r2.<com.sun.lwuit.Button: int getWidth()>();

        $i29 = $i4 + $i28;

        $z3 = virtualinvoke r2.<com.sun.lwuit.Button: boolean isRTL()>();

        $i30 = virtualinvoke $r3.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z3, 1);

        $i31 = $i29 - $i30;

        i34 = $i31 - $i3;

        goto label5;

     label4:
        $z1 = virtualinvoke r2.<com.sun.lwuit.Button: boolean isRTL()>();

        $i5 = virtualinvoke $r3.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z1, 1);

        i34 = $i4 + $i5;

     label5:
        $i6 = virtualinvoke r2.<com.sun.lwuit.Button: int getY()>();

        $i7 = virtualinvoke $r3.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 0);

        $i8 = $i6 + $i7;

        $i9 = virtualinvoke r2.<com.sun.lwuit.Button: int getHeight()>();

        $i10 = virtualinvoke $r3.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 0);

        $i11 = $i9 - $i10;

        $i12 = virtualinvoke $r3.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 2);

        $i13 = $i11 - $i12;

        $i14 = $i13 / 2;

        $i16 = $i8 + $i14;

        $i15 = $i0 / 2;

        $i32 = $i16 - $i15;

        virtualinvoke r6.<com.sun.lwuit.Graphics: void translate(int,int)>(i34, $i32);

        $i17 = staticinvoke <com.sun.lwuit.plaf.DefaultLookAndFeel: int scaleCoordinate(float,float,int)>(1.04F, 16.0F, $i0);

        $i18 = staticinvoke <com.sun.lwuit.plaf.DefaultLookAndFeel: int scaleCoordinate(float,float,int)>(4.0F, 16.0F, $i0);

        $i19 = staticinvoke <com.sun.lwuit.plaf.DefaultLookAndFeel: int scaleCoordinate(float,float,int)>(12.0F, 16.0F, $i0);

        $i20 = specialinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: int findDestColor(int)>($i2);

        $i24 = $i17 + 1;

        $i23 = $i18 + 1;

        $i22 = $i3 - 2;

        $i21 = $i19 - 1;

        virtualinvoke r6.<com.sun.lwuit.Graphics: void fillLinearGradient(int,int,int,int,int,int,boolean)>($i2, $i20, $i24, $i23, $i22, $i21, 0);

        virtualinvoke r6.<com.sun.lwuit.Graphics: void drawRoundRect(int,int,int,int,int,int)>($i17, $i18, $i3, $i19, 5, 5);

        $z2 = virtualinvoke r2.<com.sun.lwuit.Button: boolean isSelected()>();

        if $z2 == 0 goto label6;

        $i27 = virtualinvoke r6.<com.sun.lwuit.Graphics: int getColor()>();

        virtualinvoke r6.<com.sun.lwuit.Graphics: void setColor(int)>(1118481);

        virtualinvoke r6.<com.sun.lwuit.Graphics: void translate(int,int)>(0, 1);

        staticinvoke <com.sun.lwuit.plaf.DefaultLookAndFeel: void fillCheckbox(com.sun.lwuit.Graphics,int,int)>(r6, $i0, $i0);

        virtualinvoke r6.<com.sun.lwuit.Graphics: void setColor(int)>($i27);

        $i36 = (int) -1;

        virtualinvoke r6.<com.sun.lwuit.Graphics: void translate(int,int)>(0, $i36);

        staticinvoke <com.sun.lwuit.plaf.DefaultLookAndFeel: void fillCheckbox(com.sun.lwuit.Graphics,int,int)>(r6, $i0, $i0);

     label6:
        $i26 = neg i34;

        $i25 = neg $i32;

        virtualinvoke r6.<com.sun.lwuit.Graphics: void translate(int,int)>($i26, $i25);

     label7:
        return;
    }

    private static void fillCheckbox(com.sun.lwuit.Graphics, int, int)
    {
        com.sun.lwuit.Graphics r0;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        r0 := @parameter0: com.sun.lwuit.Graphics;

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        $i1 = staticinvoke <com.sun.lwuit.plaf.DefaultLookAndFeel: int scaleCoordinate(float,float,int)>(2.0450494F, 16.0F, i0);

        $i3 = staticinvoke <com.sun.lwuit.plaf.DefaultLookAndFeel: int scaleCoordinate(float,float,int)>(9.422772F, 16.0F, i2);

        $i4 = staticinvoke <com.sun.lwuit.plaf.DefaultLookAndFeel: int scaleCoordinate(float,float,int)>(5.8675723F, 16.0F, i0);

        $i5 = staticinvoke <com.sun.lwuit.plaf.DefaultLookAndFeel: int scaleCoordinate(float,float,int)>(13.921746F, 16.0F, i2);

        $i6 = staticinvoke <com.sun.lwuit.plaf.DefaultLookAndFeel: int scaleCoordinate(float,float,int)>(5.8675723F, 16.0F, i0);

        $i7 = staticinvoke <com.sun.lwuit.plaf.DefaultLookAndFeel: int scaleCoordinate(float,float,int)>(11.0F, 16.0F, i2);

        virtualinvoke r0.<com.sun.lwuit.Graphics: void fillTriangle(int,int,int,int,int,int)>($i1, $i3, $i4, $i5, $i6, $i7);

        $i8 = staticinvoke <com.sun.lwuit.plaf.DefaultLookAndFeel: int scaleCoordinate(float,float,int)>(14.38995F, 16.0F, i0);

        $i9 = staticinvoke <com.sun.lwuit.plaf.DefaultLookAndFeel: int scaleCoordinate(float,float,int)>(0.0F, 16.0F, i2);

        virtualinvoke r0.<com.sun.lwuit.Graphics: void fillTriangle(int,int,int,int,int,int)>($i8, $i9, $i4, $i5, $i6, $i7);

        return;
    }

    private static int round(float)
    {
        byte $b1;
        int i0, $i2, $i3;
        float f0, $f1, $f2;

        f0 := @parameter0: float;

        i0 = (int) f0;

        $f1 = (float) i0;

        $f2 = f0 - $f1;

        $b1 = $f2 cmpl 0.5F;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label1;

        $i2 = i0 + 1;

        return $i2;

     label1:
        return i0;
    }

    private static int scaleCoordinate(float, float, int)
    {
        int i0, $i1;
        float f0, f1, $f2, $f3, $f4;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        i0 := @parameter2: int;

        $f3 = f0 / f1;

        $f2 = (float) i0;

        $f4 = $f3 * $f2;

        $i1 = staticinvoke <com.sun.lwuit.plaf.DefaultLookAndFeel: int round(float)>($f4);

        return $i1;
    }

    public void drawLabel(com.sun.lwuit.Graphics, com.sun.lwuit.Label)
    {
        com.sun.lwuit.plaf.DefaultLookAndFeel r0;
        com.sun.lwuit.Label r2;
        com.sun.lwuit.Graphics r1;
        com.sun.lwuit.Image $r3;

        r0 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r1 := @parameter0: com.sun.lwuit.Graphics;

        r2 := @parameter1: com.sun.lwuit.Label;

        $r3 = virtualinvoke r2.<com.sun.lwuit.Label: com.sun.lwuit.Image getIcon()>();

        specialinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: void drawComponent(com.sun.lwuit.Graphics,com.sun.lwuit.Label,com.sun.lwuit.Image,com.sun.lwuit.Image,int)>(r1, r2, $r3, null, 0);

        return;
    }

    public void drawRadioButton(com.sun.lwuit.Graphics, com.sun.lwuit.Button)
    {
        com.sun.lwuit.plaf.Style $r3, $r4;
        byte $b23;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.sun.lwuit.Graphics r6;
        com.sun.lwuit.Button r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i24;
        com.sun.lwuit.Image $r7, $r8, $r10;
        com.sun.lwuit.plaf.DefaultLookAndFeel r0;
        com.sun.lwuit.Image[] $r1, $r9;
        com.sun.lwuit.Font $r5;

        r0 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r6 := @parameter0: com.sun.lwuit.Graphics;

        r2 := @parameter1: com.sun.lwuit.Button;

        $r1 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: com.sun.lwuit.Image[] rButtonImages>;

        if $r1 == null goto label3;

        $r8 = virtualinvoke r2.<com.sun.lwuit.Button: com.sun.lwuit.Image getIconFromState()>();

        $r9 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: com.sun.lwuit.Image[] rButtonImages>;

        $z4 = virtualinvoke r2.<com.sun.lwuit.Button: boolean isSelected()>();

        if $z4 == 0 goto label1;

        $b23 = 1;

        goto label2;

     label1:
        $b23 = 0;

     label2:
        $r10 = $r9[$b23];

        specialinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: void drawComponent(com.sun.lwuit.Graphics,com.sun.lwuit.Label,com.sun.lwuit.Image,com.sun.lwuit.Image,int)>(r6, r2, $r8, $r10, 0);

        goto label6;

     label3:
        $r3 = virtualinvoke r2.<com.sun.lwuit.Button: com.sun.lwuit.plaf.Style getStyle()>();

        $r4 = virtualinvoke r2.<com.sun.lwuit.Button: com.sun.lwuit.plaf.Style getStyle()>();

        $r5 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Font getFont()>();

        $i0 = virtualinvoke $r5.<com.sun.lwuit.Font: int getHeight()>();

        $r7 = virtualinvoke r2.<com.sun.lwuit.Button: com.sun.lwuit.Image getIconFromState()>();

        $i1 = virtualinvoke r2.<com.sun.lwuit.Button: int getGap()>();

        $i2 = $i0 + $i1;

        specialinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: void drawComponent(com.sun.lwuit.Graphics,com.sun.lwuit.Label,com.sun.lwuit.Image,com.sun.lwuit.Image,int)>(r6, r2, $r7, null, $i2);

        $i3 = virtualinvoke $r3.<com.sun.lwuit.plaf.Style: int getFgColor()>();

        virtualinvoke r6.<com.sun.lwuit.Graphics: void setColor(int)>($i3);

        $i4 = virtualinvoke r2.<com.sun.lwuit.Button: int getX()>();

        $z0 = virtualinvoke r2.<com.sun.lwuit.Button: boolean isRTL()>();

        if $z0 == 0 goto label4;

        $i18 = virtualinvoke r2.<com.sun.lwuit.Button: int getWidth()>();

        $i19 = $i4 + $i18;

        $z3 = virtualinvoke r2.<com.sun.lwuit.Button: boolean isRTL()>();

        $i20 = virtualinvoke $r3.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z3, 1);

        $i21 = $i19 - $i20;

        i24 = $i21 - $i0;

        goto label5;

     label4:
        $z1 = virtualinvoke r2.<com.sun.lwuit.Button: boolean isRTL()>();

        $i5 = virtualinvoke $r3.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z1, 1);

        i24 = $i4 + $i5;

     label5:
        $i6 = virtualinvoke r2.<com.sun.lwuit.Button: int getY()>();

        $i7 = virtualinvoke r2.<com.sun.lwuit.Button: int getHeight()>();

        $i9 = $i7 / 2;

        $i8 = $i0 / 2;

        $i10 = $i9 - $i8;

        $i11 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i10);

        $i22 = $i6 + $i11;

        virtualinvoke r6.<com.sun.lwuit.Graphics: void drawArc(int,int,int,int,int,int)>(i24, $i22, $i0, $i0, 0, 360);

        $z2 = virtualinvoke r2.<com.sun.lwuit.Button: boolean isSelected()>();

        if $z2 == 0 goto label6;

        $i12 = virtualinvoke r6.<com.sun.lwuit.Graphics: int getColor()>();

        $i13 = specialinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: int findDestColor(int)>($i12);

        $i17 = i24 + 3;

        $i16 = $i22 + 3;

        $i15 = $i0 - 5;

        $i14 = $i0 - 5;

        virtualinvoke r6.<com.sun.lwuit.Graphics: void fillRadialGradient(int,int,int,int,int,int)>($i12, $i13, $i17, $i16, $i15, $i14);

     label6:
        return;
    }

    public void drawComboBox(com.sun.lwuit.Graphics, com.sun.lwuit.List)
    {
        com.sun.lwuit.plaf.Style $r1;
        com.sun.lwuit.list.ListCellRenderer $r5;
        com.sun.lwuit.list.ListModel $r4;
        com.sun.lwuit.Graphics r3;
        com.sun.lwuit.List r0;
        com.sun.lwuit.plaf.DefaultLookAndFeel r2;
        com.sun.lwuit.Component $r12;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, i48, i49, i50, i51, i52, $i54, $i56, $i58, $i60;
        com.sun.lwuit.Image $r7, $r9, $r10, $r11, $r13;
        java.lang.Object $r6;
        com.sun.lwuit.Font $r8;

        r2 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r3 := @parameter0: com.sun.lwuit.Graphics;

        r0 := @parameter1: com.sun.lwuit.List;

        $r1 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.plaf.Style getStyle()>();

        $z0 = virtualinvoke r0.<com.sun.lwuit.List: boolean isRTL()>();

        $i0 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z0, 1);

        $z1 = virtualinvoke r0.<com.sun.lwuit.List: boolean isRTL()>();

        $i1 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z1, 3);

        virtualinvoke r2.<com.sun.lwuit.plaf.DefaultLookAndFeel: void setFG(com.sun.lwuit.Graphics,com.sun.lwuit.Component)>(r3, r0);

        $r4 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel getModel()>();

        $r5 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListCellRenderer getRenderer()>();

        $i2 = interfaceinvoke $r4.<com.sun.lwuit.list.ListModel: int getSelectedIndex()>();

        $r6 = interfaceinvoke $r4.<com.sun.lwuit.list.ListModel: java.lang.Object getItemAt(int)>($i2);

        $r7 = r2.<com.sun.lwuit.plaf.DefaultLookAndFeel: com.sun.lwuit.Image comboImage>;

        if $r7 == null goto label1;

        $r13 = r2.<com.sun.lwuit.plaf.DefaultLookAndFeel: com.sun.lwuit.Image comboImage>;

        i48 = virtualinvoke $r13.<com.sun.lwuit.Image: int getWidth()>();

        goto label2;

     label1:
        $r8 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Font getFont()>();

        i48 = virtualinvoke $r8.<com.sun.lwuit.Font: int getHeight()>();

     label2:
        $i3 = virtualinvoke r0.<com.sun.lwuit.List: int getX()>();

        $i4 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 0);

        $i47 = $i3 + $i4;

        i49 = $i47;

        $z2 = virtualinvoke r0.<com.sun.lwuit.List: boolean isRTL()>();

        if $z2 == 0 goto label3;

        i49 = $i47 + i48;

     label3:
        $i5 = interfaceinvoke $r4.<com.sun.lwuit.list.ListModel: int getSize()>();

        if $i5 <= 0 goto label4;

        $i32 = interfaceinvoke $r4.<com.sun.lwuit.list.ListModel: int getSelectedIndex()>();

        $z4 = virtualinvoke r0.<com.sun.lwuit.List: boolean hasFocus()>();

        $r12 = interfaceinvoke $r5.<com.sun.lwuit.list.ListCellRenderer: com.sun.lwuit.Component getListCellRendererComponent(com.sun.lwuit.List,java.lang.Object,int,boolean)>(r0, $r6, $i32, $z4);

        virtualinvoke $r12.<com.sun.lwuit.Component: void setX(int)>(i49);

        $i33 = virtualinvoke r0.<com.sun.lwuit.List: int getY()>();

        $i34 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 0);

        $i35 = $i33 + $i34;

        virtualinvoke $r12.<com.sun.lwuit.Component: void setY(int)>($i35);

        $i36 = virtualinvoke r0.<com.sun.lwuit.List: int getWidth()>();

        $i38 = $i36 - i48;

        $i37 = 2 * $i1;

        $i39 = $i38 - $i37;

        $i40 = $i39 - $i0;

        virtualinvoke $r12.<com.sun.lwuit.Component: void setWidth(int)>($i40);

        $i41 = virtualinvoke r0.<com.sun.lwuit.List: int getHeight()>();

        $i42 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 0);

        $i43 = $i41 - $i42;

        $i44 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 2);

        $i45 = $i43 - $i44;

        virtualinvoke $r12.<com.sun.lwuit.Component: void setHeight(int)>($i45);

        virtualinvoke $r12.<com.sun.lwuit.Component: void paint(com.sun.lwuit.Graphics)>(r3);

     label4:
        $i6 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getBgColor()>();

        virtualinvoke r3.<com.sun.lwuit.Graphics: void setColor(int)>($i6);

        $i7 = virtualinvoke r0.<com.sun.lwuit.List: int getY()>();

        $i8 = virtualinvoke r0.<com.sun.lwuit.List: int getHeight()>();

        $i46 = i48 + 2;

        $i9 = virtualinvoke r0.<com.sun.lwuit.List: int getX()>();

        $z3 = virtualinvoke r0.<com.sun.lwuit.List: boolean isRTL()>();

        if $z3 == 0 goto label5;

        i50 = $i9 + $i0;

        goto label6;

     label5:
        $i10 = virtualinvoke r0.<com.sun.lwuit.List: int getWidth()>();

        $i11 = $i10 - i48;

        $i12 = $i11 - $i1;

        i50 = $i9 + $i12;

     label6:
        $r9 = r2.<com.sun.lwuit.plaf.DefaultLookAndFeel: com.sun.lwuit.Image comboImage>;

        if $r9 == null goto label7;

        $r11 = r2.<com.sun.lwuit.plaf.DefaultLookAndFeel: com.sun.lwuit.Image comboImage>;

        $i27 = $i8 / 2;

        $i28 = $i7 + $i27;

        $r10 = r2.<com.sun.lwuit.plaf.DefaultLookAndFeel: com.sun.lwuit.Image comboImage>;

        $i29 = virtualinvoke $r10.<com.sun.lwuit.Image: int getHeight()>();

        $i30 = $i29 / 2;

        $i31 = $i28 - $i30;

        virtualinvoke r3.<com.sun.lwuit.Graphics: void drawImage(com.sun.lwuit.Image,int,int)>($r11, i50, $i31);

        goto label8;

     label7:
        $i13 = virtualinvoke r3.<com.sun.lwuit.Graphics: int getColor()>();

        $i14 = specialinvoke r2.<com.sun.lwuit.plaf.DefaultLookAndFeel: int findDestColor(int)>($i13);

        $i15 = virtualinvoke r3.<com.sun.lwuit.Graphics: int getColor()>();

        virtualinvoke r3.<com.sun.lwuit.Graphics: void fillLinearGradient(int,int,int,int,int,int,boolean)>($i15, $i14, i50, $i7, $i46, $i8, 0);

        virtualinvoke r3.<com.sun.lwuit.Graphics: void setColor(int)>($i13);

        $i16 = $i8 - 1;

        virtualinvoke r3.<com.sun.lwuit.Graphics: void drawRect(int,int,int,int)>(i50, $i7, $i46, $i16);

        $i54 = (int) -1;

        i51 = $i46 + $i54;

        $i56 = (int) -1;

        i52 = $i8 + $i56;

        $i18 = i50 + 1;

        $i17 = $i7 + 1;

        virtualinvoke r3.<com.sun.lwuit.Graphics: void translate(int,int)>($i18, $i17);

        virtualinvoke r3.<com.sun.lwuit.Graphics: void setColor(int)>(1118481);

        $i19 = staticinvoke <com.sun.lwuit.plaf.DefaultLookAndFeel: int scaleCoordinate(float,float,int)>(2.5652082F, 16.0F, i51);

        $i20 = staticinvoke <com.sun.lwuit.plaf.DefaultLookAndFeel: int scaleCoordinate(float,float,int)>(4.4753666F, 16.0F, i52);

        $i21 = staticinvoke <com.sun.lwuit.plaf.DefaultLookAndFeel: int scaleCoordinate(float,float,int)>(8.287269F, 16.0F, i51);

        $i22 = staticinvoke <com.sun.lwuit.plaf.DefaultLookAndFeel: int scaleCoordinate(float,float,int)>(10.0F, 16.0F, i52);

        $i23 = staticinvoke <com.sun.lwuit.plaf.DefaultLookAndFeel: int scaleCoordinate(float,float,int)>(13.516078F, 16.0F, i51);

        virtualinvoke r3.<com.sun.lwuit.Graphics: void fillTriangle(int,int,int,int,int,int)>($i19, $i20, $i21, $i22, $i23, $i20);

        $i58 = (int) -1;

        $i60 = (int) -1;

        virtualinvoke r3.<com.sun.lwuit.Graphics: void translate(int,int)>($i58, $i60);

        $i24 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getFgColor()>();

        virtualinvoke r3.<com.sun.lwuit.Graphics: void setColor(int)>($i24);

        virtualinvoke r3.<com.sun.lwuit.Graphics: void fillTriangle(int,int,int,int,int,int)>($i19, $i20, $i21, $i22, $i23, $i20);

        $i26 = neg i50;

        $i25 = neg $i7;

        virtualinvoke r3.<com.sun.lwuit.Graphics: void translate(int,int)>($i26, $i25);

     label8:
        return;
    }

    private int findDestColor(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18, i19, i20, i21, $i23;
        com.sun.lwuit.plaf.DefaultLookAndFeel r0;

        r0 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        i0 := @parameter0: int;

        $i1 = i0 >> 16;

        i16 = $i1 & 255;

        $i2 = i0 >> 8;

        i17 = $i2 & 255;

        i18 = i0 & 255;

        if i16 <= 128 goto label1;

        if i17 <= 128 goto label1;

        if i18 <= 128 goto label1;

        $i13 = i16 >> 1;

        i19 = staticinvoke <java.lang.Math: int max(int,int)>($i13, 0);

        $i14 = i17 >> 1;

        i20 = staticinvoke <java.lang.Math: int max(int,int)>($i14, 0);

        $i15 = i18 >> 1;

        i21 = staticinvoke <java.lang.Math: int max(int,int)>($i15, 0);

        goto label3;

     label1:
        if i0 != 0 goto label2;

        return 2236962;

     label2:
        $i3 = i16 << 1;

        i19 = staticinvoke <java.lang.Math: int min(int,int)>($i3, 255);

        $i4 = i17 << 1;

        i20 = staticinvoke <java.lang.Math: int min(int,int)>($i4, 255);

        $i5 = i18 << 1;

        i21 = staticinvoke <java.lang.Math: int min(int,int)>($i5, 255);

     label3:
        $i6 = i19 << 16;

        $i9 = $i6 & 16711680;

        $i7 = i20 << 8;

        $i23 = (int) 65280;

        $i8 = $i7 & $i23;

        $i11 = $i9 | $i8;

        $i10 = i21 & 255;

        $i12 = $i11 | $i10;

        return $i12;
    }

    public void drawList(com.sun.lwuit.Graphics, com.sun.lwuit.List)
    {
        com.sun.lwuit.Graphics r1;
        com.sun.lwuit.List r2;
        com.sun.lwuit.plaf.DefaultLookAndFeel r0;

        r0 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r1 := @parameter0: com.sun.lwuit.Graphics;

        r2 := @parameter1: com.sun.lwuit.List;

        return;
    }

    public void drawTextArea(com.sun.lwuit.Graphics, com.sun.lwuit.TextArea)
    {
        com.sun.lwuit.plaf.Style $r3, $r5, $r6, $r7;
        com.sun.lwuit.TextArea r2;
        boolean $z0, $z1, $z2, z3;
        java.lang.StringBuilder $r9, $r10, $r11;
        com.sun.lwuit.Graphics r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, i32, i33, i34;
        java.lang.String $r8, r12;
        com.sun.lwuit.plaf.DefaultLookAndFeel r0;
        com.sun.lwuit.Font $r4;

        r0 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r1 := @parameter0: com.sun.lwuit.Graphics;

        r2 := @parameter1: com.sun.lwuit.TextArea;

        virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: void setFG(com.sun.lwuit.Graphics,com.sun.lwuit.Component)>(r1, r2);

        $i0 = virtualinvoke r2.<com.sun.lwuit.TextArea: int getLines()>();

        $i1 = virtualinvoke r1.<com.sun.lwuit.Graphics: int getClipX()>();

        $i2 = virtualinvoke r1.<com.sun.lwuit.Graphics: int getClipY()>();

        $i3 = virtualinvoke r1.<com.sun.lwuit.Graphics: int getClipWidth()>();

        $i4 = virtualinvoke r1.<com.sun.lwuit.Graphics: int getClipHeight()>();

        $r3 = virtualinvoke r2.<com.sun.lwuit.TextArea: com.sun.lwuit.plaf.Style getStyle()>();

        $r4 = virtualinvoke $r3.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Font getFont()>();

        $i5 = virtualinvoke $r4.<com.sun.lwuit.Font: int getHeight()>();

        $i6 = virtualinvoke r2.<com.sun.lwuit.TextArea: int getAbsoluteAlignment()>();

        $r5 = virtualinvoke r2.<com.sun.lwuit.TextArea: com.sun.lwuit.plaf.Style getStyle()>();

        $z0 = virtualinvoke r2.<com.sun.lwuit.TextArea: boolean isRTL()>();

        $i7 = virtualinvoke $r5.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z0, 1);

        $r6 = virtualinvoke r2.<com.sun.lwuit.TextArea: com.sun.lwuit.plaf.Style getStyle()>();

        $z1 = virtualinvoke r2.<com.sun.lwuit.TextArea: boolean isRTL()>();

        $i8 = virtualinvoke $r6.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z1, 3);

        $r7 = virtualinvoke r2.<com.sun.lwuit.TextArea: com.sun.lwuit.plaf.Style getStyle()>();

        $i9 = virtualinvoke $r7.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 0);

        z3 = 0;

        i32 = 0;

     label01:
        if i32 >= $i0 goto label11;

        $i10 = virtualinvoke r2.<com.sun.lwuit.TextArea: int getX()>();

        i33 = $i10 + $i7;

        $i11 = virtualinvoke r2.<com.sun.lwuit.TextArea: int getY()>();

        $i12 = $i11 + $i9;

        $i13 = virtualinvoke r2.<com.sun.lwuit.TextArea: int getRowsGap()>();

        $i14 = $i13 + $i5;

        $i15 = $i14 * i32;

        i16 = $i12 + $i15;

        $i17 = virtualinvoke r2.<com.sun.lwuit.TextArea: int getWidth()>();

        $z2 = staticinvoke <com.sun.lwuit.geom.Rectangle: boolean intersects(int,int,int,int,int,int,int,int)>(i33, i16, $i17, $i5, $i1, $i2, $i3, $i4);

        if $z2 == 0 goto label09;

        $r8 = virtualinvoke r2.<com.sun.lwuit.TextArea: java.lang.String getTextAt(int)>(i32);

        r12 = "";

        $i18 = virtualinvoke r2.<com.sun.lwuit.TextArea: int getConstraint()>();

        $i19 = $i18 & 65536;

        if $i19 == 0 goto label04;

        i34 = 0;

     label02:
        $i31 = virtualinvoke $r8.<java.lang.String: int length()>();

        if i34 >= $i31 goto label03;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");

        r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        i34 = i34 + 1;

        goto label02;

     label03:
        goto label05;

     label04:
        r12 = $r8;

     label05:
        lookupswitch($i6)
        {
            case 3: goto label06;
            case 4: goto label07;
            default: goto label08;
        };

     label06:
        $i26 = virtualinvoke r2.<com.sun.lwuit.TextArea: int getX()>();

        $i27 = virtualinvoke r2.<com.sun.lwuit.TextArea: int getWidth()>();

        $i28 = $i26 + $i27;

        $i29 = $i28 - $i8;

        $i30 = virtualinvoke $r4.<com.sun.lwuit.Font: int stringWidth(java.lang.String)>(r12);

        i33 = $i29 - $i30;

        goto label08;

     label07:
        $i20 = virtualinvoke r2.<com.sun.lwuit.TextArea: int getWidth()>();

        $i21 = $i20 - $i7;

        $i22 = $i21 - $i8;

        $i23 = virtualinvoke $r4.<com.sun.lwuit.Font: int stringWidth(java.lang.String)>(r12);

        $i24 = $i22 - $i23;

        $i25 = $i24 / 2;

        i33 = i33 + $i25;

     label08:
        virtualinvoke r1.<com.sun.lwuit.Graphics: void drawString(java.lang.String,int,int)>(r12, i33, i16);

        z3 = 1;

        goto label10;

     label09:
        if z3 == 0 goto label10;

        goto label11;

     label10:
        i32 = i32 + 1;

        goto label01;

     label11:
        return;
    }

    public com.sun.lwuit.geom.Dimension getButtonPreferredSize(com.sun.lwuit.Button)
    {
        com.sun.lwuit.geom.Dimension $r6;
        com.sun.lwuit.plaf.DefaultLookAndFeel r0;
        com.sun.lwuit.Image[] $r2;
        com.sun.lwuit.Button r1;
        com.sun.lwuit.Image $r3, $r4, $r5;

        r0 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r1 := @parameter0: com.sun.lwuit.Button;

        $r2 = newarray (com.sun.lwuit.Image)[3];

        $r3 = virtualinvoke r1.<com.sun.lwuit.Button: com.sun.lwuit.Image getIcon()>();

        $r2[0] = $r3;

        $r4 = virtualinvoke r1.<com.sun.lwuit.Button: com.sun.lwuit.Image getRolloverIcon()>();

        $r2[1] = $r4;

        $r5 = virtualinvoke r1.<com.sun.lwuit.Button: com.sun.lwuit.Image getPressedIcon()>();

        $r2[2] = $r5;

        $r6 = specialinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: com.sun.lwuit.geom.Dimension getPreferredSize(com.sun.lwuit.Label,com.sun.lwuit.Image[],com.sun.lwuit.Image)>(r1, $r2, null);

        return $r6;
    }

    public com.sun.lwuit.geom.Dimension getCheckBoxPreferredSize(com.sun.lwuit.Button)
    {
        com.sun.lwuit.Button r2;
        com.sun.lwuit.plaf.Style $r8;
        com.sun.lwuit.geom.Dimension $r7, $r16;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        com.sun.lwuit.Image $r4, $r5, $r6, $r11, $r12, $r13, $r15;
        com.sun.lwuit.plaf.DefaultLookAndFeel r0;
        com.sun.lwuit.Image[] $r1, $r3, $r10, $r14;
        com.sun.lwuit.Font $r9;

        r0 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r2 := @parameter0: com.sun.lwuit.Button;

        $r1 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: com.sun.lwuit.Image[] chkBoxImages>;

        if $r1 == null goto label1;

        $r10 = newarray (com.sun.lwuit.Image)[3];

        $r11 = virtualinvoke r2.<com.sun.lwuit.Button: com.sun.lwuit.Image getIcon()>();

        $r10[0] = $r11;

        $r12 = virtualinvoke r2.<com.sun.lwuit.Button: com.sun.lwuit.Image getRolloverIcon()>();

        $r10[1] = $r12;

        $r13 = virtualinvoke r2.<com.sun.lwuit.Button: com.sun.lwuit.Image getPressedIcon()>();

        $r10[2] = $r13;

        $r14 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: com.sun.lwuit.Image[] chkBoxImages>;

        $r15 = $r14[0];

        $r16 = specialinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: com.sun.lwuit.geom.Dimension getPreferredSize(com.sun.lwuit.Label,com.sun.lwuit.Image[],com.sun.lwuit.Image)>(r2, $r10, $r15);

        return $r16;

     label1:
        $r3 = newarray (com.sun.lwuit.Image)[3];

        $r4 = virtualinvoke r2.<com.sun.lwuit.Button: com.sun.lwuit.Image getIcon()>();

        $r3[0] = $r4;

        $r5 = virtualinvoke r2.<com.sun.lwuit.Button: com.sun.lwuit.Image getRolloverIcon()>();

        $r3[1] = $r5;

        $r6 = virtualinvoke r2.<com.sun.lwuit.Button: com.sun.lwuit.Image getPressedIcon()>();

        $r3[2] = $r6;

        $r7 = specialinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: com.sun.lwuit.geom.Dimension getPreferredSize(com.sun.lwuit.Label,com.sun.lwuit.Image[],com.sun.lwuit.Image)>(r2, $r3, null);

        $r8 = virtualinvoke r2.<com.sun.lwuit.Button: com.sun.lwuit.plaf.Style getStyle()>();

        $r9 = virtualinvoke $r8.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Font getFont()>();

        $i0 = virtualinvoke $r9.<com.sun.lwuit.Font: int getHeight()>();

        $i1 = virtualinvoke $r7.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        virtualinvoke $r7.<com.sun.lwuit.geom.Dimension: void setHeight(int)>($i2);

        $i3 = virtualinvoke $r7.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i4 = $i3 + $i0;

        $i5 = virtualinvoke r2.<com.sun.lwuit.Button: int getGap()>();

        $i6 = $i4 + $i5;

        virtualinvoke $r7.<com.sun.lwuit.geom.Dimension: void setWidth(int)>($i6);

        return $r7;
    }

    public com.sun.lwuit.geom.Dimension getLabelPreferredSize(com.sun.lwuit.Label)
    {
        com.sun.lwuit.geom.Dimension $r4;
        com.sun.lwuit.plaf.DefaultLookAndFeel r0;
        com.sun.lwuit.Label r1;
        com.sun.lwuit.Image[] $r2;
        com.sun.lwuit.Image $r3;

        r0 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r1 := @parameter0: com.sun.lwuit.Label;

        $r2 = newarray (com.sun.lwuit.Image)[1];

        $r3 = virtualinvoke r1.<com.sun.lwuit.Label: com.sun.lwuit.Image getIcon()>();

        $r2[0] = $r3;

        $r4 = specialinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: com.sun.lwuit.geom.Dimension getPreferredSize(com.sun.lwuit.Label,com.sun.lwuit.Image[],com.sun.lwuit.Image)>(r1, $r2, null);

        return $r4;
    }

    private com.sun.lwuit.geom.Dimension getPreferredSize(com.sun.lwuit.Label, com.sun.lwuit.Image[], com.sun.lwuit.Image)
    {
        com.sun.lwuit.plaf.Style $r1;
        boolean $z0, $z1;
        java.lang.StringBuilder $r8, $r10, $r11;
        com.sun.lwuit.Label r0;
        com.sun.lwuit.geom.Dimension $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22, i23;
        java.lang.String $r3, $r12;
        java.io.PrintStream $r9;
        com.sun.lwuit.Image r5, $r6, r14;
        com.sun.lwuit.plaf.DefaultLookAndFeel r13;
        com.sun.lwuit.Image[] r2;
        com.sun.lwuit.Font $r4, r15;

        r13 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r0 := @parameter0: com.sun.lwuit.Label;

        r2 := @parameter1: com.sun.lwuit.Image[];

        r5 := @parameter2: com.sun.lwuit.Image;

        i21 = 0;

        i22 = 0;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Label: com.sun.lwuit.plaf.Style getStyle()>();

        $i0 = virtualinvoke r0.<com.sun.lwuit.Label: int getGap()>();

        i23 = 0;

     label01:
        $i1 = lengthof r2;

        if i23 >= $i1 goto label03;

        r14 = r2[i23];

        if r14 == null goto label02;

        $i19 = virtualinvoke r14.<com.sun.lwuit.Image: int getWidth()>();

        i21 = staticinvoke <java.lang.Math: int max(int,int)>(i21, $i19);

        $i20 = virtualinvoke r14.<com.sun.lwuit.Image: int getHeight()>();

        i22 = staticinvoke <java.lang.Math: int max(int,int)>(i22, $i20);

     label02:
        i23 = i23 + 1;

        goto label01;

     label03:
        $r3 = virtualinvoke r0.<com.sun.lwuit.Label: java.lang.String getText()>();

        $r4 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Font getFont()>();

        r15 = $r4;

        if $r4 != null goto label04;

        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing font for ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r12);

        r15 = staticinvoke <com.sun.lwuit.Font: com.sun.lwuit.Font getDefaultFont()>();

     label04:
        if $r3 == null goto label07;

        $i13 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i13 <= 0 goto label07;

        $i14 = virtualinvoke r0.<com.sun.lwuit.Label: int getTextPosition()>();

        tableswitch($i14)
        {
            case 0: goto label06;
            case 1: goto label05;
            case 2: goto label06;
            case 3: goto label05;
            default: goto label07;
        };

     label05:
        $i15 = virtualinvoke r15.<com.sun.lwuit.Font: int stringWidth(java.lang.String)>($r3);

        i21 = i21 + $i15;

        $i16 = virtualinvoke r15.<com.sun.lwuit.Font: int getHeight()>();

        i22 = staticinvoke <java.lang.Math: int max(int,int)>(i22, $i16);

        goto label07;

     label06:
        $i17 = virtualinvoke r15.<com.sun.lwuit.Font: int stringWidth(java.lang.String)>($r3);

        i21 = staticinvoke <java.lang.Math: int max(int,int)>(i21, $i17);

        $i18 = virtualinvoke r15.<com.sun.lwuit.Font: int getHeight()>();

        i22 = i22 + $i18;

     label07:
        if r5 == null goto label08;

        $i10 = virtualinvoke r5.<com.sun.lwuit.Image: int getWidth()>();

        $i11 = $i10 + $i0;

        i21 = i21 + $i11;

        $i12 = virtualinvoke r5.<com.sun.lwuit.Image: int getHeight()>();

        i22 = staticinvoke <java.lang.Math: int max(int,int)>(i22, $i12);

     label08:
        $r6 = r2[0];

        if $r6 == null goto label11;

        if $r3 == null goto label11;

        $i8 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i8 <= 0 goto label11;

        $i9 = virtualinvoke r0.<com.sun.lwuit.Label: int getTextPosition()>();

        tableswitch($i9)
        {
            case 0: goto label10;
            case 1: goto label09;
            case 2: goto label10;
            case 3: goto label09;
            default: goto label11;
        };

     label09:
        i21 = i21 + $i0;

        goto label11;

     label10:
        i22 = i22 + $i0;

     label11:
        if i22 == 0 goto label12;

        $i5 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 0);

        $i6 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 2);

        $i7 = $i5 + $i6;

        i22 = i22 + $i7;

     label12:
        if i21 == 0 goto label13;

        $z0 = virtualinvoke r0.<com.sun.lwuit.Label: boolean isRTL()>();

        $i2 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z0, 3);

        $z1 = virtualinvoke r0.<com.sun.lwuit.Label: boolean isRTL()>();

        $i3 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z1, 1);

        $i4 = $i2 + $i3;

        i21 = i21 + $i4;

     label13:
        $r7 = new com.sun.lwuit.geom.Dimension;

        specialinvoke $r7.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>(i21, i22);

        return $r7;
    }

    public com.sun.lwuit.geom.Dimension getListPreferredSize(com.sun.lwuit.List)
    {
        com.sun.lwuit.plaf.Style $r4, $r7, r18, r19;
        com.sun.lwuit.list.ListCellRenderer $r14, $r21;
        com.sun.lwuit.list.ListModel $r1;
        com.sun.lwuit.List r0;
        com.sun.lwuit.plaf.DefaultLookAndFeel r17;
        com.sun.lwuit.Component $r12, $r13, $r15, $r16;
        com.sun.lwuit.geom.Dimension $r5, $r6, $r9, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, i53, i54, i55, i56, i57, i58;
        java.lang.Object $r2, $r3, $r11, r20, r22;
        com.sun.lwuit.Font $r8;

        r17 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r0 := @parameter0: com.sun.lwuit.List;

        i53 = 0;

        i54 = 0;

        $r1 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel getModel()>();

        $i0 = interfaceinvoke $r1.<com.sun.lwuit.list.ListModel: int getSize()>();

        $i1 = virtualinvoke r0.<com.sun.lwuit.List: int getMinElementHeight()>();

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        $r2 = virtualinvoke r0.<com.sun.lwuit.List: java.lang.Object getRenderingPrototype()>();

        r18 = null;

        if $r2 == null goto label01;

        $r14 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListCellRenderer getRenderer()>();

        $r15 = interfaceinvoke $r14.<com.sun.lwuit.list.ListCellRenderer: com.sun.lwuit.Component getListCellRendererComponent(com.sun.lwuit.List,java.lang.Object,int,boolean)>(r0, $r2, 0, 0);

        $i49 = virtualinvoke $r15.<com.sun.lwuit.Component: int getPreferredH()>();

        i54 = $i49;

        $i50 = virtualinvoke $r15.<com.sun.lwuit.Component: int getPreferredW()>();

        i53 = $i50;

        r18 = virtualinvoke $r15.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

        $r16 = interfaceinvoke $r14.<com.sun.lwuit.list.ListCellRenderer: com.sun.lwuit.Component getListCellRendererComponent(com.sun.lwuit.List,java.lang.Object,int,boolean)>(r0, $r2, 0, 1);

        r19 = virtualinvoke $r16.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

        $i51 = virtualinvoke $r16.<com.sun.lwuit.Component: int getPreferredH()>();

        i55 = staticinvoke <java.lang.Math: int max(int,int)>($i49, $i51);

        $i52 = virtualinvoke $r16.<com.sun.lwuit.Component: int getPreferredW()>();

        i56 = staticinvoke <java.lang.Math: int max(int,int)>($i50, $i52);

        goto label07;

     label01:
        $i3 = staticinvoke <java.lang.Math: int min(int,int)>(5, $i2);

        $r3 = virtualinvoke r0.<com.sun.lwuit.List: java.lang.Object getRenderingPrototype()>();

        r20 = $r3;

        $i4 = interfaceinvoke $r1.<com.sun.lwuit.list.ListModel: int getSize()>();

        if $i4 <= 0 goto label02;

        if $r3 != null goto label02;

        r20 = interfaceinvoke $r1.<com.sun.lwuit.list.ListModel: java.lang.Object getItemAt(int)>(0);

     label02:
        $r21 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListCellRenderer getRenderer()>();

        i57 = 0;

     label03:
        if i57 >= $i3 goto label06;

        $i46 = interfaceinvoke $r1.<com.sun.lwuit.list.ListModel: int getSize()>();

        if i57 >= $i46 goto label04;

        r22 = interfaceinvoke $r1.<com.sun.lwuit.list.ListModel: java.lang.Object getItemAt(int)>(i57);

        goto label05;

     label04:
        r22 = r20;

     label05:
        $r13 = interfaceinvoke $r21.<com.sun.lwuit.list.ListCellRenderer: com.sun.lwuit.Component getListCellRendererComponent(com.sun.lwuit.List,java.lang.Object,int,boolean)>(r0, r22, i57, 0);

        r18 = virtualinvoke $r13.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

        $i47 = virtualinvoke $r13.<com.sun.lwuit.Component: int getPreferredH()>();

        i54 = staticinvoke <java.lang.Math: int max(int,int)>(i54, $i47);

        $i48 = virtualinvoke $r13.<com.sun.lwuit.Component: int getPreferredW()>();

        i53 = staticinvoke <java.lang.Math: int max(int,int)>(i53, $i48);

        i57 = i57 + 1;

        goto label03;

     label06:
        r19 = r18;

        i55 = i54;

        i56 = i53;

        $i5 = interfaceinvoke $r1.<com.sun.lwuit.list.ListModel: int getSize()>();

        if $i5 <= 0 goto label07;

        $r11 = interfaceinvoke $r1.<com.sun.lwuit.list.ListModel: java.lang.Object getItemAt(int)>(0);

        $r12 = interfaceinvoke $r21.<com.sun.lwuit.list.ListCellRenderer: com.sun.lwuit.Component getListCellRendererComponent(com.sun.lwuit.List,java.lang.Object,int,boolean)>(r0, $r11, 0, 1);

        $i44 = virtualinvoke $r12.<com.sun.lwuit.Component: int getPreferredH()>();

        i55 = staticinvoke <java.lang.Math: int max(int,int)>(i54, $i44);

        $i45 = virtualinvoke $r12.<com.sun.lwuit.Component: int getPreferredW()>();

        i56 = staticinvoke <java.lang.Math: int max(int,int)>(i53, $i45);

        r19 = virtualinvoke $r12.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

     label07:
        if r18 == null goto label08;

        $i30 = virtualinvoke r19.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>(0, 1);

        $i31 = virtualinvoke r19.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>(0, 3);

        $i32 = $i30 + $i31;

        i56 = i56 + $i32;

        $i33 = virtualinvoke r19.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>(0, 0);

        $i34 = virtualinvoke r19.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>(0, 2);

        $i35 = $i33 + $i34;

        i55 = i55 + $i35;

        $i36 = virtualinvoke r18.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>(0, 1);

        $i37 = virtualinvoke r18.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>(0, 3);

        $i38 = $i36 + $i37;

        i53 = i53 + $i38;

        $i39 = virtualinvoke r18.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>(0, 0);

        $i40 = virtualinvoke r18.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>(0, 2);

        $i41 = $i39 + $i40;

        i54 = i54 + $i41;

     label08:
        $r4 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.plaf.Style getStyle()>();

        $i6 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 0);

        $i7 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 2);

        $i42 = $i6 + $i7;

        $i8 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 3);

        $i9 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 1);

        $i43 = $i8 + $i9;

        if $i2 != 0 goto label09;

        $r10 = new com.sun.lwuit.geom.Dimension;

        specialinvoke $r10.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>($i43, $i42);

        return $r10;

     label09:
        $i10 = virtualinvoke r0.<com.sun.lwuit.List: int getOrientation()>();

        if $i10 <= 1 goto label10;

        $r7 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.plaf.Style getStyle()>();

        $r8 = virtualinvoke $r7.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Font getFont()>();

        $i26 = virtualinvoke $r8.<com.sun.lwuit.Font: int getHeight()>();

        i58 = $i26 + 2;

        $r9 = new com.sun.lwuit.geom.Dimension;

        $i27 = i58 + i56;

        $i29 = $i27 + $i43;

        $i28 = i55 + $i42;

        specialinvoke $r9.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>($i29, $i28);

        return $r9;

     label10:
        $i11 = virtualinvoke r0.<com.sun.lwuit.List: int getOrientation()>();

        if $i11 != 0 goto label11;

        $r6 = new com.sun.lwuit.geom.Dimension;

        $i19 = i56 + $i43;

        $i20 = virtualinvoke r0.<com.sun.lwuit.List: int getItemGap()>();

        $i22 = i54 + $i20;

        $i21 = $i2 - 1;

        $i23 = $i22 * $i21;

        $i24 = i55 + $i23;

        $i25 = $i24 + $i42;

        specialinvoke $r6.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>($i19, $i25);

        return $r6;

     label11:
        $r5 = new com.sun.lwuit.geom.Dimension;

        $i12 = virtualinvoke r0.<com.sun.lwuit.List: int getItemGap()>();

        $i14 = i53 + $i12;

        $i13 = $i2 - 1;

        $i15 = $i14 * $i13;

        $i16 = i56 + $i15;

        $i18 = $i16 + $i43;

        $i17 = i55 + $i42;

        specialinvoke $r5.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>($i18, $i17);

        return $r5;
    }

    public com.sun.lwuit.geom.Dimension getRadioButtonPreferredSize(com.sun.lwuit.Button)
    {
        com.sun.lwuit.Button r2;
        com.sun.lwuit.plaf.Style $r8;
        com.sun.lwuit.geom.Dimension $r7, $r16;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        com.sun.lwuit.Image $r4, $r5, $r6, $r11, $r12, $r13, $r15;
        com.sun.lwuit.plaf.DefaultLookAndFeel r0;
        com.sun.lwuit.Image[] $r1, $r3, $r10, $r14;
        com.sun.lwuit.Font $r9;

        r0 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r2 := @parameter0: com.sun.lwuit.Button;

        $r1 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: com.sun.lwuit.Image[] rButtonImages>;

        if $r1 == null goto label1;

        $r10 = newarray (com.sun.lwuit.Image)[3];

        $r11 = virtualinvoke r2.<com.sun.lwuit.Button: com.sun.lwuit.Image getIcon()>();

        $r10[0] = $r11;

        $r12 = virtualinvoke r2.<com.sun.lwuit.Button: com.sun.lwuit.Image getRolloverIcon()>();

        $r10[1] = $r12;

        $r13 = virtualinvoke r2.<com.sun.lwuit.Button: com.sun.lwuit.Image getPressedIcon()>();

        $r10[2] = $r13;

        $r14 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: com.sun.lwuit.Image[] rButtonImages>;

        $r15 = $r14[0];

        $r16 = specialinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: com.sun.lwuit.geom.Dimension getPreferredSize(com.sun.lwuit.Label,com.sun.lwuit.Image[],com.sun.lwuit.Image)>(r2, $r10, $r15);

        return $r16;

     label1:
        $r3 = newarray (com.sun.lwuit.Image)[3];

        $r4 = virtualinvoke r2.<com.sun.lwuit.Button: com.sun.lwuit.Image getIcon()>();

        $r3[0] = $r4;

        $r5 = virtualinvoke r2.<com.sun.lwuit.Button: com.sun.lwuit.Image getRolloverIcon()>();

        $r3[1] = $r5;

        $r6 = virtualinvoke r2.<com.sun.lwuit.Button: com.sun.lwuit.Image getPressedIcon()>();

        $r3[2] = $r6;

        $r7 = specialinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: com.sun.lwuit.geom.Dimension getPreferredSize(com.sun.lwuit.Label,com.sun.lwuit.Image[],com.sun.lwuit.Image)>(r2, $r3, null);

        $r8 = virtualinvoke r2.<com.sun.lwuit.Button: com.sun.lwuit.plaf.Style getStyle()>();

        $r9 = virtualinvoke $r8.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Font getFont()>();

        $i0 = virtualinvoke $r9.<com.sun.lwuit.Font: int getHeight()>();

        $i1 = virtualinvoke $r7.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        virtualinvoke $r7.<com.sun.lwuit.geom.Dimension: void setHeight(int)>($i2);

        $i3 = virtualinvoke $r7.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i4 = $i3 + $i0;

        $i5 = virtualinvoke r2.<com.sun.lwuit.Button: int getGap()>();

        $i6 = $i4 + $i5;

        virtualinvoke $r7.<com.sun.lwuit.geom.Dimension: void setWidth(int)>($i6);

        return $r7;
    }

    public com.sun.lwuit.geom.Dimension getTextAreaSize(com.sun.lwuit.TextArea, boolean)
    {
        com.sun.lwuit.plaf.Style $r1, $r4, $r5, $r6, $r7;
        com.sun.lwuit.TextArea r0;
        boolean z0;
        java.lang.StringBuilder $r8, $r9, $r10;
        com.sun.lwuit.geom.Dimension $r3;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i21, i22, i23, i24;
        java.lang.String $r11, r13;
        char $c1, $c20;
        com.sun.lwuit.plaf.DefaultLookAndFeel r12;
        com.sun.lwuit.Font $r2;

        r12 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r0 := @parameter0: com.sun.lwuit.TextArea;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<com.sun.lwuit.TextArea: com.sun.lwuit.plaf.Style getStyle()>();

        $r2 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Font getFont()>();

        $i0 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getRows()>();

        if $i0 != 1 goto label1;

        $r11 = virtualinvoke r0.<com.sun.lwuit.TextArea: java.lang.String getText()>();

        i22 = virtualinvoke $r2.<com.sun.lwuit.Font: int stringWidth(java.lang.String)>($r11);

        goto label2;

     label1:
        $c1 = staticinvoke <com.sun.lwuit.TextArea: char getWidestChar()>();

        $i2 = virtualinvoke $r2.<com.sun.lwuit.Font: int charWidth(char)>($c1);

        $i3 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getColumns()>();

        i22 = $i2 * $i3;

     label2:
        if z0 == 0 goto label3;

        i23 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getActualRows()>();

        goto label4;

     label3:
        i23 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getLines()>();

     label4:
        $i4 = virtualinvoke $r2.<com.sun.lwuit.Font: int getHeight()>();

        $i5 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getRowsGap()>();

        $i6 = $i4 + $i5;

        $i21 = $i6 * i23;

        $i7 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getColumns()>();

        r13 = "";

        i24 = 0;

     label5:
        if i24 >= $i7 goto label6;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $c20 = staticinvoke <com.sun.lwuit.TextArea: char getWidestChar()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c20);

        r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        i24 = i24 + 1;

        goto label5;

     label6:
        if $i7 <= 0 goto label7;

        $i19 = virtualinvoke $r2.<com.sun.lwuit.Font: int stringWidth(java.lang.String)>(r13);

        i22 = staticinvoke <java.lang.Math: int max(int,int)>(i22, $i19);

     label7:
        $i8 = virtualinvoke $r2.<com.sun.lwuit.Font: int getHeight()>();

        $i9 = i23 * $i8;

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>($i21, $i9);

        $r3 = new com.sun.lwuit.geom.Dimension;

        $r4 = virtualinvoke r0.<com.sun.lwuit.TextArea: com.sun.lwuit.plaf.Style getStyle()>();

        $i11 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 3);

        $i12 = i22 + $i11;

        $r5 = virtualinvoke r0.<com.sun.lwuit.TextArea: com.sun.lwuit.plaf.Style getStyle()>();

        $i13 = virtualinvoke $r5.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 1);

        $i14 = $i12 + $i13;

        $r6 = virtualinvoke r0.<com.sun.lwuit.TextArea: com.sun.lwuit.plaf.Style getStyle()>();

        $i15 = virtualinvoke $r6.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 0);

        $i16 = $i10 + $i15;

        $r7 = virtualinvoke r0.<com.sun.lwuit.TextArea: com.sun.lwuit.plaf.Style getStyle()>();

        $i17 = virtualinvoke $r7.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 2);

        $i18 = $i16 + $i17;

        specialinvoke $r3.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>($i14, $i18);

        return $r3;
    }

    private int reverseAlignForBidi(com.sun.lwuit.Component, int)
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.plaf.DefaultLookAndFeel r1;
        int i0;
        boolean $z0;

        r1 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r0 := @parameter0: com.sun.lwuit.Component;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isRTL()>();

        if $z0 == 0 goto label3;

        lookupswitch(i0)
        {
            case 1: goto label2;
            case 3: goto label1;
            default: goto label3;
        };

     label1:
        return 1;

     label2:
        return 3;

     label3:
        return i0;
    }

    private void drawComponent(com.sun.lwuit.Graphics, com.sun.lwuit.Label, com.sun.lwuit.Image, com.sun.lwuit.Image, int)
    {
        com.sun.lwuit.plaf.Style $r4, $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r19;
        com.sun.lwuit.Label r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i164, i165, i166, i167, i168, $i169, $i170, $i171, $i172, i173, $i174, $i175, $i176, i177, $i178, $i179, $i180, $i181, $i182, $i183, $i184, $i185, $i186, $i187, $i188, $i189, $i190, $i191, $i192, $i193, $i194, $i195, $i196, i197, i198, i199, i200, i201, i202, i203, i204, i205, i206;
        com.sun.lwuit.Image r6, r7;
        com.sun.lwuit.Font $r5, $r9;
        com.sun.lwuit.Graphics r1;
        java.lang.String $r3, r17;
        com.sun.lwuit.plaf.DefaultLookAndFeel r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r1 := @parameter0: com.sun.lwuit.Graphics;

        r2 := @parameter1: com.sun.lwuit.Label;

        r7 := @parameter2: com.sun.lwuit.Image;

        r6 := @parameter3: com.sun.lwuit.Image;

        i165 := @parameter4: int;

        virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: void setFG(com.sun.lwuit.Graphics,com.sun.lwuit.Component)>(r1, r2);

        $i0 = virtualinvoke r2.<com.sun.lwuit.Label: int getGap()>();

        $r3 = virtualinvoke r2.<com.sun.lwuit.Label: java.lang.String getText()>();

        r17 = $r3;

        $r4 = virtualinvoke r2.<com.sun.lwuit.Label: com.sun.lwuit.plaf.Style getStyle()>();

        $z0 = virtualinvoke r2.<com.sun.lwuit.Label: boolean isRTL()>();

        $i1 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z0, 1);

        $z1 = virtualinvoke r2.<com.sun.lwuit.Label: boolean isRTL()>();

        $i2 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z1, 3);

        $r5 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Font getFont()>();

        i166 = 0;

        if $r3 != null goto label01;

        r17 = "";

     label01:
        $i3 = virtualinvoke r17.<java.lang.String: int length()>();

        if $i3 <= 0 goto label02;

        i166 = virtualinvoke $r5.<com.sun.lwuit.Font: int getHeight()>();

     label02:
        if r6 == null goto label05;

        $i146 = virtualinvoke r6.<com.sun.lwuit.Image: int getWidth()>();

        $i147 = virtualinvoke r2.<com.sun.lwuit.Label: int getY()>();

        $r14 = virtualinvoke r2.<com.sun.lwuit.Label: com.sun.lwuit.plaf.Style getStyle()>();

        $i148 = virtualinvoke $r14.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 0);

        $i149 = $i147 + $i148;

        $i150 = virtualinvoke r2.<com.sun.lwuit.Label: int getHeight()>();

        $r15 = virtualinvoke r2.<com.sun.lwuit.Label: com.sun.lwuit.plaf.Style getStyle()>();

        $i151 = virtualinvoke $r15.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 0);

        $i152 = $i150 - $i151;

        $r16 = virtualinvoke r2.<com.sun.lwuit.Label: com.sun.lwuit.plaf.Style getStyle()>();

        $i153 = virtualinvoke $r16.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 2);

        $i154 = $i152 - $i153;

        $i155 = $i154 / 2;

        $i157 = $i149 + $i155;

        $i156 = $i146 / 2;

        i167 = $i157 - $i156;

        i165 = $i146 + $i0;

        $i158 = virtualinvoke r2.<com.sun.lwuit.Label: int getX()>();

        $z3 = virtualinvoke r2.<com.sun.lwuit.Label: boolean isRTL()>();

        if $z3 == 0 goto label03;

        $i160 = virtualinvoke r2.<com.sun.lwuit.Label: int getWidth()>();

        $i161 = $i158 + $i160;

        $z5 = virtualinvoke r2.<com.sun.lwuit.Label: boolean isRTL()>();

        $i162 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z5, 1);

        $i163 = $i161 - $i162;

        $i164 = virtualinvoke r6.<com.sun.lwuit.Image: int getWidth()>();

        i168 = $i163 - $i164;

        goto label04;

     label03:
        $z4 = virtualinvoke r2.<com.sun.lwuit.Label: boolean isRTL()>();

        $i159 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z4, 1);

        i168 = $i158 + $i159;

     label04:
        virtualinvoke r1.<com.sun.lwuit.Graphics: void drawImage(com.sun.lwuit.Image,int,int)>(r6, i168, i167);

     label05:
        $i169 = virtualinvoke r2.<com.sun.lwuit.Label: int getX()>();

        $r18 = virtualinvoke r2.<com.sun.lwuit.Label: com.sun.lwuit.plaf.Style getStyle()>();

        $z6 = virtualinvoke r2.<com.sun.lwuit.Label: boolean isRTL()>();

        $i170 = virtualinvoke $r18.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z6, 1);

        $i171 = $i169 + $i170;

        $i172 = $i171 + i165;

        i173 = $i172;

        $i174 = virtualinvoke r2.<com.sun.lwuit.Label: int getY()>();

        $r19 = virtualinvoke r2.<com.sun.lwuit.Label: com.sun.lwuit.plaf.Style getStyle()>();

        $i175 = virtualinvoke $r19.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 0);

        $i176 = $i174 + $i175;

        i177 = $i176;

        $i178 = virtualinvoke r2.<com.sun.lwuit.Label: int getAlignment()>();

        $i179 = specialinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: int reverseAlignForBidi(com.sun.lwuit.Component,int)>(r2, $i178);

        $i180 = virtualinvoke r2.<com.sun.lwuit.Label: int getTextPosition()>();

        $i181 = specialinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: int reverseAlignForBidi(com.sun.lwuit.Component,int)>(r2, $i180);

        if $i179 != 1 goto label13;

        tableswitch($i181)
        {
            case 0: goto label09;
            case 1: goto label06;
            case 2: goto label09;
            case 3: goto label06;
            default: goto label12;
        };

     label06:
        $i129 = virtualinvoke r2.<com.sun.lwuit.Label: int getHeight()>();

        $r10 = virtualinvoke r2.<com.sun.lwuit.Label: com.sun.lwuit.plaf.Style getStyle()>();

        $i130 = virtualinvoke $r10.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 0);

        $r11 = virtualinvoke r2.<com.sun.lwuit.Label: com.sun.lwuit.plaf.Style getStyle()>();

        $i131 = virtualinvoke $r11.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 2);

        $i132 = $i130 + $i131;

        if r7 == null goto label07;

        $i182 = virtualinvoke r7.<com.sun.lwuit.Image: int getHeight()>();

        goto label08;

     label07:
        $i182 = 0;

     label08:
        $i133 = staticinvoke <java.lang.Math: int max(int,int)>($i182, i166);

        $i134 = $i132 + $i133;

        $i135 = $i129 - $i134;

        $i136 = $i135 / 2;

        i177 = $i176 + $i136;

        goto label12;

     label09:
        $i137 = virtualinvoke r2.<com.sun.lwuit.Label: int getHeight()>();

        $r12 = virtualinvoke r2.<com.sun.lwuit.Label: com.sun.lwuit.plaf.Style getStyle()>();

        $i138 = virtualinvoke $r12.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 0);

        $r13 = virtualinvoke r2.<com.sun.lwuit.Label: com.sun.lwuit.plaf.Style getStyle()>();

        $i139 = virtualinvoke $r13.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 2);

        $i140 = $i138 + $i139;

        if r7 == null goto label10;

        $i145 = virtualinvoke r7.<com.sun.lwuit.Image: int getHeight()>();

        $i183 = $i145 + $i0;

        goto label11;

     label10:
        $i183 = 0;

     label11:
        $i141 = $i140 + $i183;

        $i142 = $i141 + i166;

        $i143 = $i137 - $i142;

        $i144 = $i143 / 2;

        i177 = $i176 + $i144;

     label12:
        goto label38;

     label13:
        if $i179 != 4 goto label25;

        tableswitch($i181)
        {
            case 0: goto label19;
            case 1: goto label14;
            case 2: goto label19;
            case 3: goto label14;
            default: goto label24;
        };

     label14:
        $i84 = virtualinvoke r2.<com.sun.lwuit.Label: int getWidth()>();

        $i85 = i165 + $i1;

        $i86 = $i85 + $i2;

        if r7 == null goto label15;

        $i103 = virtualinvoke r7.<com.sun.lwuit.Image: int getWidth()>();

        $i104 = virtualinvoke r2.<com.sun.lwuit.Label: int getGap()>();

        $i184 = $i103 + $i104;

        goto label16;

     label15:
        $i184 = 0;

     label16:
        $i87 = $i86 + $i184;

        $i88 = virtualinvoke $r5.<com.sun.lwuit.Font: int stringWidth(java.lang.String)>(r17);

        $i89 = $i87 + $i88;

        $i90 = $i84 - $i89;

        $i91 = $i90 / 2;

        $i105 = $i172 + $i91;

        $i92 = virtualinvoke r2.<com.sun.lwuit.Label: int getX()>();

        $i93 = $i92 + $i1;

        $i94 = $i93 + i165;

        i173 = staticinvoke <java.lang.Math: int max(int,int)>($i105, $i94);

        $i95 = virtualinvoke r2.<com.sun.lwuit.Label: int getHeight()>();

        $i96 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 0);

        $i97 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 2);

        $i98 = $i96 + $i97;

        if r7 == null goto label17;

        $i185 = virtualinvoke r7.<com.sun.lwuit.Image: int getHeight()>();

        goto label18;

     label17:
        $i185 = 0;

     label18:
        $i99 = staticinvoke <java.lang.Math: int max(int,int)>($i185, i166);

        $i100 = $i98 + $i99;

        $i101 = $i95 - $i100;

        $i102 = $i101 / 2;

        i177 = $i176 + $i102;

        goto label24;

     label19:
        $i106 = virtualinvoke r2.<com.sun.lwuit.Label: int getWidth()>();

        $i107 = i165 + $i1;

        $i108 = $i107 + $i2;

        if r7 == null goto label20;

        $i126 = virtualinvoke r7.<com.sun.lwuit.Image: int getWidth()>();

        $i127 = virtualinvoke r2.<com.sun.lwuit.Label: int getGap()>();

        $i186 = $i126 + $i127;

        goto label21;

     label20:
        $i186 = 0;

     label21:
        $i109 = virtualinvoke $r5.<com.sun.lwuit.Font: int stringWidth(java.lang.String)>(r17);

        $i110 = staticinvoke <java.lang.Math: int max(int,int)>($i186, $i109);

        $i111 = $i108 + $i110;

        $i112 = $i106 - $i111;

        $i113 = $i112 / 2;

        $i128 = $i172 + $i113;

        $i114 = virtualinvoke r2.<com.sun.lwuit.Label: int getX()>();

        $i115 = $i114 + $i1;

        $i116 = $i115 + i165;

        i173 = staticinvoke <java.lang.Math: int max(int,int)>($i128, $i116);

        $i117 = virtualinvoke r2.<com.sun.lwuit.Label: int getHeight()>();

        $i118 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 0);

        $i119 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 2);

        $i120 = $i118 + $i119;

        if r7 == null goto label22;

        $i125 = virtualinvoke r7.<com.sun.lwuit.Image: int getHeight()>();

        $i187 = $i125 + $i0;

        goto label23;

     label22:
        $i187 = 0;

     label23:
        $i121 = $i120 + $i187;

        $i122 = $i121 + i166;

        $i123 = $i117 - $i122;

        $i124 = $i123 / 2;

        i177 = $i176 + $i124;

     label24:
        goto label38;

     label25:
        if $i179 != 3 goto label38;

        tableswitch($i181)
        {
            case 0: goto label33;
            case 1: goto label26;
            case 2: goto label33;
            case 3: goto label26;
            default: goto label38;
        };

     label26:
        $i43 = virtualinvoke r2.<com.sun.lwuit.Label: int getX()>();

        $i44 = virtualinvoke r2.<com.sun.lwuit.Label: int getWidth()>();

        $i45 = $i43 + $i44;

        $i46 = $i45 - $i2;

        if r7 == null goto label27;

        $i63 = virtualinvoke r7.<com.sun.lwuit.Image: int getWidth()>();

        $i188 = $i63 + $i0;

        goto label28;

     label27:
        $i188 = 0;

     label28:
        $i47 = virtualinvoke $r5.<com.sun.lwuit.Font: int stringWidth(java.lang.String)>(r17);

        $i48 = $i188 + $i47;

        $i64 = $i46 - $i48;

        $z2 = virtualinvoke r2.<com.sun.lwuit.Label: boolean isRTL()>();

        if $z2 == 0 goto label29;

        $i60 = $i64 - i165;

        $i61 = virtualinvoke r2.<com.sun.lwuit.Label: int getX()>();

        $i62 = $i61 + $i1;

        i173 = staticinvoke <java.lang.Math: int max(int,int)>($i60, $i62);

        goto label30;

     label29:
        $i49 = virtualinvoke r2.<com.sun.lwuit.Label: int getX()>();

        $i50 = $i49 + $i1;

        $i51 = $i50 + i165;

        i173 = staticinvoke <java.lang.Math: int max(int,int)>($i64, $i51);

     label30:
        $i52 = virtualinvoke r2.<com.sun.lwuit.Label: int getHeight()>();

        $i53 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 0);

        $i54 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 2);

        $i55 = $i53 + $i54;

        if r7 == null goto label31;

        $i189 = virtualinvoke r7.<com.sun.lwuit.Image: int getHeight()>();

        goto label32;

     label31:
        $i189 = 0;

     label32:
        $i56 = staticinvoke <java.lang.Math: int max(int,int)>($i189, i166);

        $i57 = $i55 + $i56;

        $i58 = $i52 - $i57;

        $i59 = $i58 / 2;

        i177 = $i176 + $i59;

        goto label38;

     label33:
        $i65 = virtualinvoke r2.<com.sun.lwuit.Label: int getX()>();

        $i66 = virtualinvoke r2.<com.sun.lwuit.Label: int getWidth()>();

        $i67 = $i65 + $i66;

        $i68 = $i67 - $i2;

        if r7 == null goto label34;

        $i190 = virtualinvoke r7.<com.sun.lwuit.Image: int getWidth()>();

        goto label35;

     label34:
        $i190 = 0;

     label35:
        $i69 = virtualinvoke $r5.<com.sun.lwuit.Font: int stringWidth(java.lang.String)>(r17);

        $i70 = staticinvoke <java.lang.Math: int max(int,int)>($i190, $i69);

        $i83 = $i68 - $i70;

        $i71 = virtualinvoke r2.<com.sun.lwuit.Label: int getX()>();

        $i72 = $i71 + $i1;

        $i73 = $i72 + i165;

        i173 = staticinvoke <java.lang.Math: int max(int,int)>($i83, $i73);

        $i74 = virtualinvoke r2.<com.sun.lwuit.Label: int getHeight()>();

        $i75 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 0);

        $i76 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 2);

        $i77 = $i75 + $i76;

        if r7 == null goto label36;

        $i82 = virtualinvoke r7.<com.sun.lwuit.Image: int getHeight()>();

        $i191 = $i82 + $i0;

        goto label37;

     label36:
        $i191 = 0;

     label37:
        $i78 = $i77 + $i191;

        $i79 = $i78 + i166;

        $i80 = $i74 - $i79;

        $i81 = $i80 / 2;

        i177 = $i176 + $i81;

     label38:
        $i192 = virtualinvoke r2.<com.sun.lwuit.Label: int getWidth()>();

        $i193 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 3);

        $i194 = $i192 - $i193;

        $i195 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 1);

        $i196 = $i194 - $i195;

        i197 = $i196;

        if r7 == null goto label40;

        if $i181 == 3 goto label39;

        if $i181 != 1 goto label40;

     label39:
        $i42 = virtualinvoke r7.<com.sun.lwuit.Image: int getWidth()>();

        i197 = $i196 - $i42;

     label40:
        if r6 == null goto label41;

        $i41 = virtualinvoke r6.<com.sun.lwuit.Image: int getWidth()>();

        i198 = i197 - $i41;

        goto label42;

     label41:
        i198 = i197 - i165;

     label42:
        if r7 != null goto label43;

        specialinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: int drawLabelString(com.sun.lwuit.Graphics,com.sun.lwuit.Label,java.lang.String,int,int,int,int)>(r1, r2, r17, i173, i177, i198, i165);

        goto label52;

     label43:
        $r8 = virtualinvoke r2.<com.sun.lwuit.Label: com.sun.lwuit.plaf.Style getStyle()>();

        $r9 = virtualinvoke $r8.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Font getFont()>();

        $i4 = virtualinvoke $r9.<com.sun.lwuit.Font: int stringWidth(java.lang.String)>(r17);

        $i5 = virtualinvoke r7.<com.sun.lwuit.Image: int getWidth()>();

        $i6 = virtualinvoke r7.<com.sun.lwuit.Image: int getHeight()>();

        tableswitch($i181)
        {
            case 0: goto label50;
            case 1: goto label44;
            case 2: goto label48;
            case 3: goto label46;
            default: goto label52;
        };

     label44:
        if $i6 <= i166 goto label45;

        $i28 = $i6 - i166;

        i199 = $i28 / 2;

        $i29 = specialinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: int drawLabelStringValign(com.sun.lwuit.Graphics,com.sun.lwuit.Label,java.lang.String,int,int,int,int,int,int,int)>(r1, r2, r17, i173, i177, i199, $i6, i198, i166, i165);

        $i30 = i173 + $i29;

        $i31 = $i30 + $i0;

        virtualinvoke r1.<com.sun.lwuit.Graphics: void drawImage(com.sun.lwuit.Image,int,int)>(r7, $i31, i177);

        goto label52;

     label45:
        $i23 = i166 - $i6;

        i200 = $i23 / 2;

        $i24 = specialinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: int drawLabelString(com.sun.lwuit.Graphics,com.sun.lwuit.Label,java.lang.String,int,int,int,int)>(r1, r2, r17, i173, i177, i198, i165);

        $i25 = i173 + $i24;

        $i27 = $i25 + $i0;

        $i26 = i177 + i200;

        virtualinvoke r1.<com.sun.lwuit.Graphics: void drawImage(com.sun.lwuit.Image,int,int)>(r7, $i27, $i26);

        goto label52;

     label46:
        if $i6 <= i166 goto label47;

        $i11 = $i6 - i166;

        i201 = $i11 / 2;

        virtualinvoke r1.<com.sun.lwuit.Graphics: void drawImage(com.sun.lwuit.Image,int,int)>(r7, i173, i177);

        $i12 = i173 + $i5;

        $i13 = $i12 + $i0;

        specialinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: int drawLabelStringValign(com.sun.lwuit.Graphics,com.sun.lwuit.Label,java.lang.String,int,int,int,int,int,int,int)>(r1, r2, r17, $i13, i177, i201, $i6, i198, i166, i165);

        goto label52;

     label47:
        $i7 = i166 - $i6;

        i202 = $i7 / 2;

        $i8 = i177 + i202;

        virtualinvoke r1.<com.sun.lwuit.Graphics: void drawImage(com.sun.lwuit.Image,int,int)>(r7, i173, $i8);

        $i9 = i173 + $i5;

        $i10 = $i9 + $i0;

        specialinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: int drawLabelString(com.sun.lwuit.Graphics,com.sun.lwuit.Label,java.lang.String,int,int,int,int)>(r1, r2, r17, $i10, i177, i198, i165);

        goto label52;

     label48:
        if $i5 <= $i4 goto label49;

        $i19 = $i5 - $i4;

        i203 = $i19 / 2;

        virtualinvoke r1.<com.sun.lwuit.Graphics: void drawImage(com.sun.lwuit.Image,int,int)>(r7, i173, i177);

        $i22 = i173 + i203;

        $i20 = i177 + $i6;

        $i21 = $i20 + $i0;

        specialinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: int drawLabelString(com.sun.lwuit.Graphics,com.sun.lwuit.Label,java.lang.String,int,int,int,int)>(r1, r2, r17, $i22, $i21, i198, i165);

        goto label52;

     label49:
        $i14 = staticinvoke <java.lang.Math: int min(int,int)>($i4, i198);

        $i15 = $i14 - $i5;

        i204 = $i15 / 2;

        $i16 = i173 + i204;

        virtualinvoke r1.<com.sun.lwuit.Graphics: void drawImage(com.sun.lwuit.Image,int,int)>(r7, $i16, i177);

        $i17 = i177 + $i6;

        $i18 = $i17 + $i0;

        specialinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: int drawLabelString(com.sun.lwuit.Graphics,com.sun.lwuit.Label,java.lang.String,int,int,int,int)>(r1, r2, r17, i173, $i18, i198, i165);

        goto label52;

     label50:
        if $i5 <= $i4 goto label51;

        $i37 = $i5 - $i4;

        i205 = $i37 / 2;

        $i38 = i173 + i205;

        specialinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: int drawLabelString(com.sun.lwuit.Graphics,com.sun.lwuit.Label,java.lang.String,int,int,int,int)>(r1, r2, r17, $i38, i177, i198, i165);

        $i39 = i177 + i166;

        $i40 = $i39 + $i0;

        virtualinvoke r1.<com.sun.lwuit.Graphics: void drawImage(com.sun.lwuit.Image,int,int)>(r7, i173, $i40);

        goto label52;

     label51:
        $i32 = staticinvoke <java.lang.Math: int min(int,int)>($i4, i198);

        $i33 = $i32 - $i5;

        i206 = $i33 / 2;

        specialinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: int drawLabelString(com.sun.lwuit.Graphics,com.sun.lwuit.Label,java.lang.String,int,int,int,int)>(r1, r2, r17, i173, i177, i198, i165);

        $i36 = i173 + i206;

        $i34 = i177 + i166;

        $i35 = $i34 + $i0;

        virtualinvoke r1.<com.sun.lwuit.Graphics: void drawImage(com.sun.lwuit.Image,int,int)>(r7, $i36, $i35);

     label52:
        return;
    }

    private int drawLabelStringValign(com.sun.lwuit.Graphics, com.sun.lwuit.Label, java.lang.String, int, int, int, int, int, int, int)
    {
        com.sun.lwuit.Label r0;
        com.sun.lwuit.Graphics r2;
        int $i0, i1, i2, i3, $i4, i5, $i6, $i7, i8, i9, $i10, $i11, $i12, i13, $i14, $i15;
        java.lang.String r3;
        com.sun.lwuit.plaf.DefaultLookAndFeel r1;

        r1 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r2 := @parameter0: com.sun.lwuit.Graphics;

        r0 := @parameter1: com.sun.lwuit.Label;

        r3 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i13 := @parameter5: int;

        i3 := @parameter6: int;

        i8 := @parameter7: int;

        i5 := @parameter8: int;

        i9 := @parameter9: int;

        $i0 = virtualinvoke r0.<com.sun.lwuit.Label: int getVerticalAlignment()>();

        lookupswitch($i0)
        {
            case 0: goto label1;
            case 4: goto label2;
            default: goto label3;
        };

     label1:
        $i12 = specialinvoke r1.<com.sun.lwuit.plaf.DefaultLookAndFeel: int drawLabelString(com.sun.lwuit.Graphics,com.sun.lwuit.Label,java.lang.String,int,int,int,int)>(r2, r0, r3, i1, i2, i8, i9);

        return $i12;

     label2:
        $i4 = i3 / 2;

        $i7 = i2 + $i4;

        $i6 = i5 / 2;

        $i10 = $i7 - $i6;

        $i11 = specialinvoke r1.<com.sun.lwuit.plaf.DefaultLookAndFeel: int drawLabelString(com.sun.lwuit.Graphics,com.sun.lwuit.Label,java.lang.String,int,int,int,int)>(r2, r0, r3, i1, $i10, i8, i9);

        return $i11;

     label3:
        $i14 = i2 + i13;

        $i15 = specialinvoke r1.<com.sun.lwuit.plaf.DefaultLookAndFeel: int drawLabelString(com.sun.lwuit.Graphics,com.sun.lwuit.Label,java.lang.String,int,int,int,int)>(r2, r0, r3, i1, $i14, i8, i9);

        return $i15;
    }

    private int drawLabelString(com.sun.lwuit.Graphics, com.sun.lwuit.Label, java.lang.String, int, int, int, int)
    {
        com.sun.lwuit.Label r0;
        com.sun.lwuit.Graphics r2;
        com.sun.lwuit.plaf.Style $r1;
        int $i0, $i1, $i2, $i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, $i17;
        java.lang.String r4;
        boolean $z0;
        com.sun.lwuit.plaf.DefaultLookAndFeel r3;
        com.sun.lwuit.Font $r5, $r6;

        r3 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r2 := @parameter0: com.sun.lwuit.Graphics;

        r0 := @parameter1: com.sun.lwuit.Label;

        r4 := @parameter2: java.lang.String;

        i4 := @parameter3: int;

        i6 := @parameter4: int;

        i5 := @parameter5: int;

        i16 := @parameter6: int;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Label: com.sun.lwuit.plaf.Style getStyle()>();

        $i0 = virtualinvoke r2.<com.sun.lwuit.Graphics: int getClipX()>();

        $i1 = virtualinvoke r2.<com.sun.lwuit.Graphics: int getClipY()>();

        $i2 = virtualinvoke r2.<com.sun.lwuit.Graphics: int getClipWidth()>();

        $i3 = virtualinvoke r2.<com.sun.lwuit.Graphics: int getClipHeight()>();

        virtualinvoke r2.<com.sun.lwuit.Graphics: void clipRect(int,int,int,int)>(i4, $i1, i5, $i3);

        $z0 = virtualinvoke r0.<com.sun.lwuit.Label: boolean isTickerRunning()>();

        if $z0 == 0 goto label2;

        $i7 = virtualinvoke r0.<com.sun.lwuit.Label: int getShiftText()>();

        if $i7 <= 0 goto label1;

        $i11 = virtualinvoke r0.<com.sun.lwuit.Label: int getShiftText()>();

        if $i11 <= i5 goto label2;

        $i12 = virtualinvoke r0.<com.sun.lwuit.Label: int getX()>();

        $i13 = i4 - $i12;

        $r6 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Font getFont()>();

        $i14 = virtualinvoke $r6.<com.sun.lwuit.Font: int stringWidth(java.lang.String)>(r4);

        $i15 = $i13 - $i14;

        virtualinvoke r0.<com.sun.lwuit.Label: void setShiftText(int)>($i15);

        goto label2;

     label1:
        $i8 = virtualinvoke r0.<com.sun.lwuit.Label: int getShiftText()>();

        $r5 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Font getFont()>();

        $i9 = virtualinvoke $r5.<com.sun.lwuit.Font: int stringWidth(java.lang.String)>(r4);

        $i10 = $i8 + $i9;

        if $i10 >= 0 goto label2;

        virtualinvoke r0.<com.sun.lwuit.Label: void setShiftText(int)>(i5);

     label2:
        $i17 = virtualinvoke r3.<com.sun.lwuit.plaf.DefaultLookAndFeel: int drawLabelText(com.sun.lwuit.Graphics,com.sun.lwuit.Label,java.lang.String,int,int,int)>(r2, r0, r4, i4, i6, i5);

        virtualinvoke r2.<com.sun.lwuit.Graphics: void setClip(int,int,int,int)>($i0, $i1, $i2, $i3);

        return $i17;
    }

    protected int drawLabelText(com.sun.lwuit.Graphics, com.sun.lwuit.Label, java.lang.String, int, int, int)
    {
        com.sun.lwuit.plaf.Style $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.StringBuilder $r5, $r7, $r8;
        com.sun.lwuit.Label r0;
        com.sun.lwuit.Graphics r3;
        int $i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, $i16, i17, $i18, $i19, $i20, $i21;
        java.lang.String $r6, r9;
        com.sun.lwuit.plaf.DefaultLookAndFeel r4;
        com.sun.lwuit.Font $r2;

        r4 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r3 := @parameter0: com.sun.lwuit.Graphics;

        r0 := @parameter1: com.sun.lwuit.Label;

        r9 := @parameter2: java.lang.String;

        i15 := @parameter3: int;

        i2 := @parameter4: int;

        i1 := @parameter5: int;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Label: com.sun.lwuit.plaf.Style getStyle()>();

        $r2 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Font getFont()>();

        $z0 = virtualinvoke r0.<com.sun.lwuit.Label: boolean isTickerRunning()>();

        if $z0 == 0 goto label1;

        $z6 = virtualinvoke r0.<com.sun.lwuit.Label: boolean isRTL()>();

        if $z6 == 0 goto label6;

     label1:
        $i0 = virtualinvoke $r2.<com.sun.lwuit.Font: int stringWidth(java.lang.String)>(r9);

        if $i0 <= i1 goto label6;

        if i1 <= 0 goto label6;

        $z1 = virtualinvoke r0.<com.sun.lwuit.Label: boolean isRTL()>();

        if $z1 == 0 goto label3;

        $z4 = virtualinvoke r0.<com.sun.lwuit.Label: boolean isTickerRunning()>();

        if $z4 != 0 goto label2;

        $z5 = virtualinvoke r0.<com.sun.lwuit.Label: boolean isEndsWith3Points()>();

        if $z5 == 0 goto label2;

        $i7 = virtualinvoke $r2.<com.sun.lwuit.Font: int stringWidth(java.lang.String)>("...");

        $i8 = virtualinvoke r0.<com.sun.lwuit.Label: int getShiftText()>();

        $i9 = $i8 + i15;

        virtualinvoke r3.<com.sun.lwuit.Graphics: void drawString(java.lang.String,int,int)>("...", $i9, i2);

        $i10 = virtualinvoke r0.<com.sun.lwuit.Label: int getShiftText()>();

        $i11 = $i7 + $i10;

        $i12 = $i11 + i15;

        $i13 = i1 - $i7;

        $i14 = virtualinvoke $r2.<com.sun.lwuit.Font: int getHeight()>();

        virtualinvoke r3.<com.sun.lwuit.Graphics: void clipRect(int,int,int,int)>($i12, i2, $i13, $i14);

     label2:
        $i16 = i15 - $i0;

        i15 = $i16 + i1;

        goto label6;

     label3:
        $z2 = virtualinvoke r0.<com.sun.lwuit.Label: boolean isEndsWith3Points()>();

        if $z2 == 0 goto label6;

        i17 = 1;

        $i3 = virtualinvoke $r2.<com.sun.lwuit.Font: int charWidth(char)>(87);

        $i4 = virtualinvoke $r2.<com.sun.lwuit.Font: int stringWidth(java.lang.String)>("...");

     label4:
        $i5 = i1 - $i4;

        $z3 = specialinvoke r4.<com.sun.lwuit.plaf.DefaultLookAndFeel: boolean fastCharWidthCheck(java.lang.String,int,int,int,com.sun.lwuit.Font)>(r9, i17, $i5, $i3, $r2);

        if $z3 == 0 goto label5;

        i17 = i17 + 1;

        goto label4;

     label5:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $i6 = i17 - 1;

        $r6 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int,int)>(0, $i6);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...");

        r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label6:
        $i18 = virtualinvoke r0.<com.sun.lwuit.Label: int getShiftText()>();

        $i19 = $i18 + i15;

        virtualinvoke r3.<com.sun.lwuit.Graphics: void drawString(java.lang.String,int,int)>(r9, $i19, i2);

        $i20 = virtualinvoke $r2.<com.sun.lwuit.Font: int stringWidth(java.lang.String)>(r9);

        $i21 = staticinvoke <java.lang.Math: int min(int,int)>($i20, i1);

        return $i21;
    }

    private boolean fastCharWidthCheck(java.lang.String, int, int, int, com.sun.lwuit.Font)
    {
        com.sun.lwuit.plaf.DefaultLookAndFeel r2;
        int i0, i1, $i2, $i3, $i4, $i5, i6;
        java.lang.String r0;
        com.sun.lwuit.Font r1;
        boolean $z0;

        r2 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r0 := @parameter0: java.lang.String;

        i6 := @parameter1: int;

        i1 := @parameter2: int;

        i0 := @parameter3: int;

        r1 := @parameter4: com.sun.lwuit.Font;

        $i2 = i6 * i0;

        if $i2 >= i1 goto label1;

        return 1;

     label1:
        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i3, i6);

        $i5 = virtualinvoke r1.<com.sun.lwuit.Font: int substringWidth(java.lang.String,int,int)>(r0, 0, $i4);

        if $i5 >= i1 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public com.sun.lwuit.geom.Dimension getComboBoxPreferredSize(com.sun.lwuit.List)
    {
        com.sun.lwuit.List r1;
        com.sun.lwuit.geom.Dimension $r2;
        com.sun.lwuit.plaf.DefaultLookAndFeel r0;

        r0 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r1 := @parameter0: com.sun.lwuit.List;

        $r2 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: com.sun.lwuit.geom.Dimension getListPreferredSize(com.sun.lwuit.List)>(r1);

        return $r2;
    }

    public void drawTabbedPane(com.sun.lwuit.Graphics, com.sun.lwuit.TabbedPane)
    {
        com.sun.lwuit.Graphics r1;
        com.sun.lwuit.TabbedPane r2;
        com.sun.lwuit.plaf.DefaultLookAndFeel r0;

        r0 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r1 := @parameter0: com.sun.lwuit.Graphics;

        r2 := @parameter1: com.sun.lwuit.TabbedPane;

        return;
    }

    public com.sun.lwuit.Component getTabbedPaneCell(com.sun.lwuit.TabbedPane, java.lang.String, com.sun.lwuit.Image, boolean, boolean, com.sun.lwuit.plaf.Style, com.sun.lwuit.plaf.Style, com.sun.lwuit.plaf.Style, int, int, com.sun.lwuit.geom.Dimension, com.sun.lwuit.geom.Dimension)
    {
        com.sun.lwuit.plaf.Style r4, r5, r6, $r9, $r10;
        com.sun.lwuit.geom.Dimension r7, r8;
        int i0, i1, $i2;
        com.sun.lwuit.plaf.DefaultLookAndFeel$1 $r0;
        com.sun.lwuit.TabbedPane r3;
        java.lang.String r2;
        boolean z0, z1;
        com.sun.lwuit.Image r11;
        com.sun.lwuit.plaf.DefaultLookAndFeel r1;

        r1 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r3 := @parameter0: com.sun.lwuit.TabbedPane;

        r2 := @parameter1: java.lang.String;

        r11 := @parameter2: com.sun.lwuit.Image;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        r5 := @parameter5: com.sun.lwuit.plaf.Style;

        r4 := @parameter6: com.sun.lwuit.plaf.Style;

        r6 := @parameter7: com.sun.lwuit.plaf.Style;

        i0 := @parameter8: int;

        i1 := @parameter9: int;

        r8 := @parameter10: com.sun.lwuit.geom.Dimension;

        r7 := @parameter11: com.sun.lwuit.geom.Dimension;

        $r0 = new com.sun.lwuit.plaf.DefaultLookAndFeel$1;

        specialinvoke $r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: void <init>(com.sun.lwuit.plaf.DefaultLookAndFeel,java.lang.String,com.sun.lwuit.TabbedPane,boolean,boolean,com.sun.lwuit.plaf.Style,com.sun.lwuit.plaf.Style,com.sun.lwuit.plaf.Style,int,com.sun.lwuit.geom.Dimension,com.sun.lwuit.geom.Dimension,int)>(r1, r2, r3, z0, z1, r4, r5, r6, i0, r7, r8, i1);

        virtualinvoke $r0.<com.sun.lwuit.Label: void setUIID(java.lang.String)>("Tab");

        virtualinvoke $r0.<com.sun.lwuit.Label: void setCellRenderer(boolean)>(1);

        $r9 = virtualinvoke $r0.<com.sun.lwuit.Label: com.sun.lwuit.plaf.Style getStyle()>();

        virtualinvoke $r9.<com.sun.lwuit.plaf.Style: void setBorder(com.sun.lwuit.plaf.Border)>(null);

        $r10 = virtualinvoke $r0.<com.sun.lwuit.Label: com.sun.lwuit.plaf.Style getStyle()>();

        virtualinvoke $r10.<com.sun.lwuit.plaf.Style: void setMargin(int,int,int,int)>(0, 0, 0, 0);

        virtualinvoke $r0.<com.sun.lwuit.Label: void setIcon(com.sun.lwuit.Image)>(r11);

        specialinvoke r1.<com.sun.lwuit.plaf.DefaultLookAndFeel: void updateCellLook(com.sun.lwuit.TabbedPane,com.sun.lwuit.Component,boolean)>(r3, $r0, z0);

        if z0 == 0 goto label1;

        $i2 = virtualinvoke r5.<com.sun.lwuit.plaf.Style: int getBgColor()>();

        virtualinvoke r5.<com.sun.lwuit.plaf.Style: void setBgColor(int)>($i2);

     label1:
        virtualinvoke $r0.<com.sun.lwuit.Label: void setAlignment(int)>(4);

        return $r0;
    }

    private void updateCellLook(com.sun.lwuit.TabbedPane, com.sun.lwuit.Component, boolean)
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.plaf.Style $r1, $r3, $r4, $r5, $r6, $r7;
        byte $b1;
        com.sun.lwuit.plaf.DefaultLookAndFeel r9;
        int $i0;
        com.sun.lwuit.TabbedPane r2;
        com.sun.lwuit.Font $r8;
        boolean z0;

        r9 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r2 := @parameter0: com.sun.lwuit.TabbedPane;

        r0 := @parameter1: com.sun.lwuit.Component;

        z0 := @parameter2: boolean;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

        $r3 = virtualinvoke r2.<com.sun.lwuit.TabbedPane: com.sun.lwuit.plaf.Style getStyle()>();

        $i0 = virtualinvoke $r3.<com.sun.lwuit.plaf.Style: int getFgColor()>();

        virtualinvoke $r1.<com.sun.lwuit.plaf.Style: void setFgColor(int)>($i0);

        $r4 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

        $r5 = virtualinvoke r2.<com.sun.lwuit.TabbedPane: com.sun.lwuit.plaf.Style getStyle()>();

        $b1 = virtualinvoke $r5.<com.sun.lwuit.plaf.Style: byte getBgTransparency()>();

        virtualinvoke $r4.<com.sun.lwuit.plaf.Style: void setBgTransparency(byte)>($b1);

        $r6 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

        $r7 = virtualinvoke r2.<com.sun.lwuit.TabbedPane: com.sun.lwuit.plaf.Style getStyle()>();

        $r8 = virtualinvoke $r7.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Font getFont()>();

        virtualinvoke $r6.<com.sun.lwuit.plaf.Style: void setFont(com.sun.lwuit.Font)>($r8);

        return;
    }

    public void drawTabbedPaneContentPane(com.sun.lwuit.TabbedPane, com.sun.lwuit.Graphics, com.sun.lwuit.geom.Rectangle, com.sun.lwuit.geom.Dimension, int, int, com.sun.lwuit.geom.Dimension, int, int)
    {
        com.sun.lwuit.plaf.Style $r7, $r8, $r9;
        byte $b10;
        com.sun.lwuit.Graphics r6;
        com.sun.lwuit.TabbedPane r0;
        com.sun.lwuit.plaf.DefaultLookAndFeel r10;
        boolean $z0, $z1, $z2;
        com.sun.lwuit.geom.Rectangle r1;
        com.sun.lwuit.geom.Dimension $r2, $r3, r4, r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18, i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, i54, i55, i56, i57, i58, i59;

        r10 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r0 := @parameter0: com.sun.lwuit.TabbedPane;

        r6 := @parameter1: com.sun.lwuit.Graphics;

        r1 := @parameter2: com.sun.lwuit.geom.Rectangle;

        r4 := @parameter3: com.sun.lwuit.geom.Dimension;

        i17 := @parameter4: int;

        i18 := @parameter5: int;

        r5 := @parameter6: com.sun.lwuit.geom.Dimension;

        i19 := @parameter7: int;

        i44 := @parameter8: int;

        $i0 = virtualinvoke r0.<com.sun.lwuit.TabbedPane: int getTabbedPaneBorderWidth()>();

        if $i0 >= 1 goto label01;

        return;

     label01:
        $i1 = virtualinvoke r1.<com.sun.lwuit.geom.Rectangle: int getX()>();

        $i2 = virtualinvoke r1.<com.sun.lwuit.geom.Rectangle: int getY()>();

        $r2 = virtualinvoke r1.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i3 = virtualinvoke $r2.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $r3 = virtualinvoke r1.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i4 = virtualinvoke $r3.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i5 = virtualinvoke r4.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i6 = virtualinvoke r4.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i7 = virtualinvoke r5.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i8 = virtualinvoke r5.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $r7 = virtualinvoke r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.plaf.Style getStyle()>();

        $i9 = virtualinvoke $r7.<com.sun.lwuit.plaf.Style: int getBgColor()>();

        virtualinvoke r6.<com.sun.lwuit.Graphics: void setColor(int)>($i9);

        $r8 = virtualinvoke r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.plaf.Style getStyle()>();

        $b10 = virtualinvoke $r8.<com.sun.lwuit.plaf.Style: byte getBgTransparency()>();

        virtualinvoke r6.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int,byte)>($i1, $i2, $i3, $i4, $b10);

        $r9 = virtualinvoke r0.<com.sun.lwuit.TabbedPane: com.sun.lwuit.plaf.Style getStyle()>();

        $i11 = virtualinvoke $r9.<com.sun.lwuit.plaf.Style: int getFgColor()>();

        virtualinvoke r6.<com.sun.lwuit.Graphics: void setColor(int)>($i11);

        $i12 = virtualinvoke r0.<com.sun.lwuit.TabbedPane: int getTabPlacement()>();

        if $i12 == 0 goto label02;

        if $i12 != 2 goto label17;

     label02:
        virtualinvoke r6.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int)>($i1, $i2, $i0, $i4);

        $i13 = $i1 + $i3;

        $i14 = $i13 - $i0;

        virtualinvoke r6.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int)>($i14, $i2, $i0, $i4);

        i54 = $i2;

        if $i12 != 2 goto label03;

        $i39 = $i2 + $i4;

        i54 = $i39 - $i0;

        virtualinvoke r6.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int)>($i1, $i2, $i3, $i0);

        goto label04;

     label03:
        $i15 = $i2 + $i4;

        $i16 = $i15 - $i0;

        virtualinvoke r6.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int)>($i1, $i16, $i3, $i0);

     label04:
        $z0 = virtualinvoke r0.<com.sun.lwuit.TabbedPane: boolean isRTL()>();

        if $z0 == 0 goto label12;

        if $i5 >= $i3 goto label08;

        $i32 = $i3 - $i5;

        virtualinvoke r6.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int)>($i1, i54, $i32, $i0);

        i55 = 0;

     label05:
        if i55 >= i17 goto label07;

        if i55 == i18 goto label06;

        $i33 = $i1 - i19;

        $i36 = $i33 + $i3;

        $i34 = i55 + 1;

        $i35 = $i7 * $i34;

        $i38 = $i36 - $i35;

        $i37 = $i7 + $i0;

        virtualinvoke r6.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int)>($i38, i54, $i37, $i0);

     label06:
        i55 = i55 + 1;

        goto label05;

     label07:
        goto label16;

     label08:
        i56 = 0;

     label09:
        if i56 >= i17 goto label11;

        $i26 = i17 - 1;

        $i27 = $i26 - i56;

        if $i27 == i18 goto label10;

        $i29 = $i1 - i19;

        $i28 = $i7 * i56;

        $i31 = $i29 + $i28;

        $i30 = $i7 + $i0;

        virtualinvoke r6.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int)>($i31, i54, $i30, $i0);

     label10:
        i56 = i56 + 1;

        goto label09;

     label11:
        goto label16;

     label12:
        if $i5 >= $i3 goto label13;

        $i25 = $i5 - $i0;

        $i24 = $i3 - $i5;

        virtualinvoke r6.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int)>($i25, i54, $i24, $i0);

     label13:
        i57 = 0;

     label14:
        if i57 >= i17 goto label16;

        if i57 == i18 goto label15;

        $i21 = $i1 - i19;

        $i20 = $i7 * i57;

        $i23 = $i21 + $i20;

        $i22 = $i7 + $i0;

        virtualinvoke r6.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int)>($i23, i54, $i22, $i0);

     label15:
        i57 = i57 + 1;

        goto label14;

     label16:
        goto label25;

     label17:
        virtualinvoke r6.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int)>($i1, $i2, $i3, $i0);

        $i40 = $i2 + $i4;

        $i41 = $i40 - $i0;

        virtualinvoke r6.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int)>($i1, $i41, $i3, $i0);

        i58 = $i1;

        $z1 = virtualinvoke r0.<com.sun.lwuit.TabbedPane: boolean isRTL()>();

        if $z1 != 0 goto label18;

        if $i12 == 3 goto label19;

     label18:
        $z2 = virtualinvoke r0.<com.sun.lwuit.TabbedPane: boolean isRTL()>();

        if $z2 == 0 goto label20;

        if $i12 != 1 goto label20;

     label19:
        virtualinvoke r6.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int)>($i1, $i2, $i0, $i4);

        $i53 = $i1 + $i3;

        i58 = $i53 - $i0;

        goto label21;

     label20:
        $i42 = $i1 + $i3;

        $i43 = $i42 - $i0;

        virtualinvoke r6.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int)>($i43, $i2, $i0, $i4);

     label21:
        if $i6 >= $i4 goto label22;

        $i49 = $i2 + $i6;

        $i52 = $i49 - $i0;

        $i50 = $i4 - $i6;

        $i51 = $i50 + $i0;

        virtualinvoke r6.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int)>(i58, $i52, $i0, $i51);

     label22:
        i59 = 0;

     label23:
        if i59 >= i17 goto label25;

        if i59 == i18 goto label24;

        $i46 = $i2 - i44;

        $i45 = $i8 * i59;

        $i48 = $i46 + $i45;

        $i47 = $i8 + $i0;

        virtualinvoke r6.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int)>(i58, $i48, $i0, $i47);

     label24:
        i59 = i59 + 1;

        goto label23;

     label25:
        return;
    }

    protected java.lang.String getTextFieldString(com.sun.lwuit.TextArea)
    {
        com.sun.lwuit.TextArea r0;
        boolean $z0, $z1;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14, $r16, $r17, $r21, $r22, $r23, $r24, $r25;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i16, $i17, i18, i19, $i20, $i21;
        java.lang.String $r1, $r2, r19, r20;
        char $c11, $c15;
        com.sun.lwuit.plaf.DefaultLookAndFeel r18;

        r18 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r0 := @parameter0: com.sun.lwuit.TextArea;

        $r1 = virtualinvoke r0.<com.sun.lwuit.TextArea: java.lang.String getText()>();

        $z0 = virtualinvoke r0.<com.sun.lwuit.TextArea: boolean isSingleLineTextArea()>();

        if $z0 == 0 goto label01;

        r19 = $r1;

        goto label03;

     label01:
        $i0 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getCursorY()>();

        $r2 = virtualinvoke r0.<com.sun.lwuit.TextArea: java.lang.String getTextAt(int)>($i0);

        r19 = $r2;

        $i1 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getCursorPosition()>();

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i3 = $i1 + $i2;

        $i4 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i3 >= $i4 goto label03;

        $i12 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getCursorPosition()>();

        $i13 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i14 = $i12 + $i13;

        $c15 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i14);

        $i20 = (int) $c15;

        if $i20 != 10 goto label02;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label03;

     label02:
        $i21 = (int) $c15;

        if $i21 != 32 goto label03;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

     label03:
        r20 = "";

        $i16 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getConstraint()>();

        $i17 = $i16 & 65536;

        if $i17 == 0 goto label09;

        $z1 = virtualinvoke r0.<com.sun.lwuit.TextArea: boolean isPendingCommit()>();

        if $z1 == 0 goto label06;

        $i6 = virtualinvoke r19.<java.lang.String: int length()>();

        if $i6 <= 0 goto label10;

        i18 = 0;

     label04:
        $i7 = virtualinvoke r19.<java.lang.String: int length()>();

        $i8 = $i7 - 1;

        if i18 >= $i8 goto label05;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");

        r20 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        i18 = i18 + 1;

        goto label04;

     label05:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $i9 = virtualinvoke r19.<java.lang.String: int length()>();

        $i10 = $i9 - 1;

        $c11 = virtualinvoke r19.<java.lang.String: char charAt(int)>($i10);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c11);

        r20 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label10;

     label06:
        i19 = 0;

     label07:
        $i5 = virtualinvoke r19.<java.lang.String: int length()>();

        if i19 >= $i5 goto label08;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");

        r20 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        i19 = i19 + 1;

        goto label07;

     label08:
        goto label10;

     label09:
        r20 = r19;

     label10:
        return r20;
    }

    public void drawTextField(com.sun.lwuit.Graphics, com.sun.lwuit.TextArea)
    {
        com.sun.lwuit.plaf.Style $r4, $r5;
        com.sun.lwuit.TextArea r2;
        com.sun.lwuit.Graphics r1;
        java.lang.String $r3, $r7, $r10, r14;
        com.sun.lwuit.Display $r13;
        com.sun.lwuit.plaf.DefaultLookAndFeel r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.lang.String[] $r8, $r9, $r11, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, i43, i44, i45, $i46, $i47, $i48, i49, i50, i51, i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i77;
        com.sun.lwuit.Font $r6;

        r0 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r1 := @parameter0: com.sun.lwuit.Graphics;

        r2 := @parameter1: com.sun.lwuit.TextArea;

        virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: void setFG(com.sun.lwuit.Graphics,com.sun.lwuit.Component)>(r1, r2);

        $r3 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: java.lang.String getTextFieldString(com.sun.lwuit.TextArea)>(r2);

        $r4 = virtualinvoke r2.<com.sun.lwuit.TextArea: com.sun.lwuit.plaf.Style getStyle()>();

        i43 = 0;

        $i0 = virtualinvoke r2.<com.sun.lwuit.TextArea: int getCursorPosition()>();

        $r5 = virtualinvoke r2.<com.sun.lwuit.TextArea: com.sun.lwuit.plaf.Style getStyle()>();

        $r6 = virtualinvoke $r5.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Font getFont()>();

        $i1 = virtualinvoke r2.<com.sun.lwuit.TextArea: int getAbsoluteAlignment()>();

        $r7 = virtualinvoke r2.<com.sun.lwuit.TextArea: java.lang.String getInputMode()>();

        r14 = $r7;

        i44 = virtualinvoke $r6.<com.sun.lwuit.Font: int stringWidth(java.lang.String)>($r7);

        $z0 = virtualinvoke r2.<com.sun.lwuit.TextArea: boolean isQwertyInput()>();

        if $z0 != 0 goto label01;

        $r13 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $z8 = virtualinvoke $r13.<com.sun.lwuit.Display: boolean isVirtualKeyboardShowing()>();

        if $z8 == 0 goto label02;

     label01:
        r14 = "";

        i44 = 0;

     label02:
        $z9 = virtualinvoke r2.<com.sun.lwuit.TextArea: boolean isSingleLineTextArea()>();

        if $z9 == 0 goto label10;

        if $i1 != 1 goto label06;

        if $i0 <= 0 goto label05;

        $i23 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i24 = staticinvoke <java.lang.Math: int min(int,int)>($i23, $i0);

        $r10 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i24);

        $i25 = virtualinvoke $r6.<com.sun.lwuit.Font: int stringWidth(java.lang.String)>($r10);

        $i26 = virtualinvoke r2.<com.sun.lwuit.TextArea: int getX()>();

        $z5 = virtualinvoke r2.<com.sun.lwuit.TextArea: boolean isRTL()>();

        $i27 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z5, 1);

        $i28 = $i26 + $i27;

        i45 = $i28 + $i25;

        if i44 <= 0 goto label03;

        $r11 = virtualinvoke r2.<com.sun.lwuit.TextArea: java.lang.String[] getInputModeOrder()>();

        if $r11 == null goto label03;

        $r12 = virtualinvoke r2.<com.sun.lwuit.TextArea: java.lang.String[] getInputModeOrder()>();

        $i42 = lengthof $r12;

        if $i42 != 1 goto label03;

        i44 = 0;

     label03:
        $z10 = virtualinvoke r2.<com.sun.lwuit.TextArea: boolean isEnableInputScroll()>();

        if $z10 == 0 goto label05;

        $i29 = virtualinvoke r2.<com.sun.lwuit.TextArea: int getWidth()>();

        $i30 = virtualinvoke $r6.<com.sun.lwuit.Font: int getHeight()>();

        $i31 = $i30 * 2;

        if $i29 <= $i31 goto label05;

        $i32 = virtualinvoke r2.<com.sun.lwuit.TextArea: int getWidth()>();

        $i33 = $i32 - i44;

        $z6 = virtualinvoke r2.<com.sun.lwuit.TextArea: boolean isRTL()>();

        $i34 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z6, 1);

        $i35 = $i33 - $i34;

        if i45 < $i35 goto label05;

     label04:
        $i36 = i43 + $i25;

        $i37 = virtualinvoke r2.<com.sun.lwuit.TextArea: int getWidth()>();

        $i38 = $i37 - i44;

        $z7 = virtualinvoke r2.<com.sun.lwuit.TextArea: boolean isRTL()>();

        $i39 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z7, 1);

        $i40 = $i39 * 2;

        $i41 = $i38 - $i40;

        if $i36 < $i41 goto label05;

        $i77 = (int) -1;

        i43 = i43 + $i77;

        goto label04;

     label05:
        $i46 = virtualinvoke r2.<com.sun.lwuit.TextArea: int getX()>();

        $i47 = $i46 + i43;

        $z11 = virtualinvoke r2.<com.sun.lwuit.TextArea: boolean isRTL()>();

        $i48 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z11, 1);

        i49 = $i47 + $i48;

        goto label09;

     label06:
        i50 = 0;

        $i15 = specialinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: int getTextFieldCursorX(com.sun.lwuit.TextArea)>(r2);

        $i16 = virtualinvoke r2.<com.sun.lwuit.TextArea: int getX()>();

        $i17 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 1);

        $i18 = $i16 + $i17;

        i51 = $i18 + i44;

        $i19 = virtualinvoke r2.<com.sun.lwuit.TextArea: int getX()>();

        $i20 = virtualinvoke r2.<com.sun.lwuit.TextArea: int getWidth()>();

        $i21 = $i19 + $i20;

        $i22 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 3);

        i52 = $i21 - $i22;

        if $i15 >= i51 goto label07;

        i50 = i51 - $i15;

        goto label08;

     label07:
        if $i15 <= i52 goto label08;

        i50 = i52 - $i15;

     label08:
        $i53 = virtualinvoke r2.<com.sun.lwuit.TextArea: int getX()>();

        $i54 = virtualinvoke r2.<com.sun.lwuit.TextArea: int getWidth()>();

        $i55 = $i53 + $i54;

        $i56 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 3);

        $i57 = $i55 - $i56;

        $i58 = virtualinvoke $r6.<com.sun.lwuit.Font: int stringWidth(java.lang.String)>($r3);

        $i59 = $i57 - $i58;

        i49 = $i59 + i50;

     label09:
        $i60 = virtualinvoke r2.<com.sun.lwuit.TextArea: int getY()>();

        $i61 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 0);

        $i62 = $i60 + $i61;

        virtualinvoke r1.<com.sun.lwuit.Graphics: void drawString(java.lang.String,int,int)>($r3, i49, $i62);

        goto label11;

     label10:
        virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: void drawTextArea(com.sun.lwuit.Graphics,com.sun.lwuit.TextArea)>(r1, r2);

     label11:
        if i44 <= 0 goto label15;

        $r8 = virtualinvoke r2.<com.sun.lwuit.TextArea: java.lang.String[] getInputModeOrder()>();

        if $r8 == null goto label15;

        $r9 = virtualinvoke r2.<com.sun.lwuit.TextArea: java.lang.String[] getInputModeOrder()>();

        $i2 = lengthof $r9;

        if $i2 <= 1 goto label15;

        $z1 = virtualinvoke r2.<com.sun.lwuit.TextArea: boolean handlesInput()>();

        if $z1 == 0 goto label15;

        $i3 = virtualinvoke r2.<com.sun.lwuit.TextArea: int getWidth()>();

        $i4 = $i3 / 2;

        if $i4 <= i44 goto label15;

        $i5 = virtualinvoke r2.<com.sun.lwuit.TextArea: int getX()>();

        $z2 = virtualinvoke r2.<com.sun.lwuit.TextArea: boolean isRTL()>();

        $i6 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z2, 1);

        i63 = $i5 + $i6;

        $z3 = virtualinvoke r2.<com.sun.lwuit.TextArea: boolean isRTL()>();

        if $z3 != 0 goto label12;

        $i14 = virtualinvoke r2.<com.sun.lwuit.TextArea: int getAlignment()>();

        if $i14 == 1 goto label13;

     label12:
        $z4 = virtualinvoke r2.<com.sun.lwuit.TextArea: boolean isRTL()>();

        if $z4 == 0 goto label14;

        $i7 = virtualinvoke r2.<com.sun.lwuit.TextArea: int getAlignment()>();

        if $i7 != 3 goto label14;

     label13:
        $i8 = virtualinvoke r2.<com.sun.lwuit.TextArea: int getWidth()>();

        $i9 = i63 + $i8;

        $i10 = $i9 - i44;

        $i11 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 3);

        $i12 = $i10 - $i11;

        $i13 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 1);

        i63 = $i12 - $i13;

     label14:
        $i64 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getFgColor()>();

        virtualinvoke r1.<com.sun.lwuit.Graphics: void setColor(int)>($i64);

        $i65 = virtualinvoke r2.<com.sun.lwuit.TextArea: int getY()>();

        $i66 = virtualinvoke r2.<com.sun.lwuit.TextArea: int getScrollY()>();

        $i67 = $i65 + $i66;

        $i68 = virtualinvoke r2.<com.sun.lwuit.TextArea: int getHeight()>();

        $i69 = $i67 + $i68;

        $i70 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 2);

        $i71 = $i69 - $i70;

        $i72 = virtualinvoke $r6.<com.sun.lwuit.Font: int getHeight()>();

        $i73 = $i71 - $i72;

        $i74 = virtualinvoke $r6.<com.sun.lwuit.Font: int getHeight()>();

        virtualinvoke r1.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int,byte)>(i63, $i73, i44, $i74, -116);

        $i75 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getBgColor()>();

        virtualinvoke r1.<com.sun.lwuit.Graphics: void setColor(int)>($i75);

        virtualinvoke r1.<com.sun.lwuit.Graphics: void drawString(java.lang.String,int,int)>(r14, i63, $i73);

     label15:
        return;
    }

    private boolean isRTLOrWhitespace(char)
    {
        com.sun.lwuit.plaf.DefaultLookAndFeel r1;
        int $i1;
        char c0;
        com.sun.lwuit.Display $r0;
        boolean $z0, $z1;

        r1 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        c0 := @parameter0: char;

        $r0 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $z0 = virtualinvoke $r0.<com.sun.lwuit.Display: boolean isRTL(char)>(c0);

        if $z0 != 0 goto label1;

        $i1 = (int) c0;

        if $i1 != 32 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    private int getTextFieldCursorX(com.sun.lwuit.TextArea)
    {
        com.sun.lwuit.plaf.Style $r1;
        com.sun.lwuit.TextArea r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i23, i24, $i25, i26, $i27, i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, i36, $i37, $i39, $i41;
        java.lang.String $r4, $r5, $r6, $r10, $r11, r13;
        com.sun.lwuit.Display $r7, $r8, $r9, $r12;
        char $c22;
        com.sun.lwuit.plaf.DefaultLookAndFeel r3;
        com.sun.lwuit.Font $r2;

        r3 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r0 := @parameter0: com.sun.lwuit.TextArea;

        $r1 = virtualinvoke r0.<com.sun.lwuit.TextArea: com.sun.lwuit.plaf.Style getStyle()>();

        $r2 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Font getFont()>();

        $r4 = virtualinvoke r3.<com.sun.lwuit.plaf.DefaultLookAndFeel: java.lang.String getTextFieldString(com.sun.lwuit.TextArea)>(r0);

        r13 = $r4;

        $r5 = virtualinvoke r0.<com.sun.lwuit.TextArea: java.lang.String getInputMode()>();

        i23 = virtualinvoke $r2.<com.sun.lwuit.Font: int stringWidth(java.lang.String)>($r5);

        $z0 = virtualinvoke r0.<com.sun.lwuit.TextArea: boolean isQwertyInput()>();

        if $z0 != 0 goto label1;

        $r12 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $z6 = virtualinvoke $r12.<com.sun.lwuit.Display: boolean isVirtualKeyboardShowing()>();

        if $z6 == 0 goto label2;

     label1:
        i23 = 0;

     label2:
        i24 = 0;

        $i25 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getCursorX()>();

        i26 = 0;

        $i27 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getAbsoluteAlignment()>();

        if $i27 != 3 goto label6;

        $r7 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $z4 = virtualinvoke $r7.<com.sun.lwuit.Display: boolean isBidiAlgorithm()>();

        if $z4 == 0 goto label5;

        $r8 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $i20 = $i25 - 1;

        $i21 = virtualinvoke $r8.<com.sun.lwuit.Display: int getCharLocation(java.lang.String,int)>($r4, $i20);

        i28 = $i21;

        $i39 = (int) -1;

        if $i21 != $i39 goto label3;

        i24 = virtualinvoke $r2.<com.sun.lwuit.Font: int stringWidth(java.lang.String)>($r4);

        goto label5;

     label3:
        $r9 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r10 = virtualinvoke $r9.<com.sun.lwuit.Display: java.lang.String convertBidiLogicalToVisual(java.lang.String)>($r4);

        r13 = $r10;

        $c22 = virtualinvoke $r10.<java.lang.String: char charAt(int)>($i21);

        $z5 = specialinvoke r3.<com.sun.lwuit.plaf.DefaultLookAndFeel: boolean isRTLOrWhitespace(char)>($c22);

        if $z5 != 0 goto label4;

        i28 = $i21 + 1;

     label4:
        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int,int)>(0, i28);

        i24 = virtualinvoke $r2.<com.sun.lwuit.Font: int stringWidth(java.lang.String)>($r11);

     label5:
        $i29 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getX()>();

        $i30 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getWidth()>();

        $i31 = $i29 + $i30;

        $z7 = virtualinvoke r0.<com.sun.lwuit.TextArea: boolean isRTL()>();

        $i32 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z7, 1);

        $i33 = $i31 - $i32;

        $i34 = virtualinvoke $r2.<com.sun.lwuit.Font: int stringWidth(java.lang.String)>(r13);

        $i35 = $i33 - $i34;

        i36 = $i35 + i24;

        i26 = 0;

        goto label9;

     label6:
        if $i25 <= 0 goto label7;

        $i17 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i18 = staticinvoke <java.lang.Math: int min(int,int)>($i17, $i25);

        $r6 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i18);

        i24 = virtualinvoke $r2.<com.sun.lwuit.Font: int stringWidth(java.lang.String)>($r6);

     label7:
        $i0 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getX()>();

        $z1 = virtualinvoke r0.<com.sun.lwuit.TextArea: boolean isRTL()>();

        $i1 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z1, 1);

        $i2 = $i0 + $i1;

        $i19 = $i2 + i24;

        i36 = $i19;

        $z2 = virtualinvoke r0.<com.sun.lwuit.TextArea: boolean isSingleLineTextArea()>();

        if $z2 == 0 goto label9;

        $i3 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getWidth()>();

        $i4 = virtualinvoke $r2.<com.sun.lwuit.Font: int getHeight()>();

        $i5 = $i4 * 2;

        if $i3 <= $i5 goto label9;

        $i6 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getWidth()>();

        $i7 = $i6 - i23;

        $z3 = virtualinvoke r0.<com.sun.lwuit.TextArea: boolean isRTL()>();

        $i8 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z3, 1);

        $i9 = $i7 - $i8;

        if $i19 < $i9 goto label9;

     label8:
        $i10 = i26 + i24;

        $i11 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getWidth()>();

        $i12 = $i11 - i23;

        $i13 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 1);

        $i14 = $i12 - $i13;

        $i15 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 3);

        $i16 = $i14 - $i15;

        if $i10 < $i16 goto label9;

        $i41 = (int) -1;

        i26 = i26 + $i41;

        goto label8;

     label9:
        $i37 = i36 + i26;

        return $i37;
    }

    public com.sun.lwuit.geom.Dimension getTextFieldPreferredSize(com.sun.lwuit.TextArea)
    {
        com.sun.lwuit.geom.Dimension $r2;
        com.sun.lwuit.TextArea r1;
        com.sun.lwuit.plaf.DefaultLookAndFeel r0;

        r0 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r1 := @parameter0: com.sun.lwuit.TextArea;

        $r2 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel: com.sun.lwuit.geom.Dimension getTextAreaSize(com.sun.lwuit.TextArea,boolean)>(r1, 1);

        return $r2;
    }

    public void drawTextFieldCursor(com.sun.lwuit.Graphics, com.sun.lwuit.TextArea)
    {
        com.sun.lwuit.Graphics r4;
        com.sun.lwuit.plaf.Style $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, $i17, $i18, $i19, $i20, $i21, $i22;
        java.lang.String $r5;
        com.sun.lwuit.TextArea r0;
        com.sun.lwuit.plaf.DefaultLookAndFeel r3;
        com.sun.lwuit.Font $r2;

        r3 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r4 := @parameter0: com.sun.lwuit.Graphics;

        r0 := @parameter1: com.sun.lwuit.TextArea;

        $r1 = virtualinvoke r0.<com.sun.lwuit.TextArea: com.sun.lwuit.plaf.Style getStyle()>();

        $r2 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Font getFont()>();

        $i0 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getY()>();

        $i1 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 0);

        $i2 = $i0 + $i1;

        $i3 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getCursorY()>();

        $i4 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getRowsGap()>();

        $i5 = virtualinvoke $r2.<com.sun.lwuit.Font: int getHeight()>();

        $i6 = $i4 + $i5;

        $i7 = $i3 * $i6;

        i8 = $i2 + $i7;

        $i9 = specialinvoke r3.<com.sun.lwuit.plaf.DefaultLookAndFeel: int getTextFieldCursorX(com.sun.lwuit.TextArea)>(r0);

        $i10 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getAbsoluteAlignment()>();

        i16 = 0;

        if $i10 != 3 goto label1;

        $r5 = virtualinvoke r0.<com.sun.lwuit.TextArea: java.lang.String getInputMode()>();

        $i11 = virtualinvoke $r2.<com.sun.lwuit.Font: int stringWidth(java.lang.String)>($r5);

        $i12 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getX()>();

        $i13 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 1);

        $i14 = $i12 + $i13;

        i15 = $i14 + $i11;

        if $i9 >= i15 goto label1;

        i16 = i15 - $i9;

     label1:
        $i17 = virtualinvoke r4.<com.sun.lwuit.Graphics: int getColor()>();

        $i18 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getFgColor()>();

        virtualinvoke r4.<com.sun.lwuit.Graphics: void setColor(int)>($i18);

        $i19 = $i9 + i16;

        $i20 = $i9 + i16;

        $i21 = virtualinvoke $r2.<com.sun.lwuit.Font: int getHeight()>();

        $i22 = i8 + $i21;

        virtualinvoke r4.<com.sun.lwuit.Graphics: void drawLine(int,int,int,int)>($i19, i8, $i20, $i22);

        virtualinvoke r4.<com.sun.lwuit.Graphics: void setColor(int)>($i17);

        return;
    }

    public void focusGained(com.sun.lwuit.Component)
    {
        com.sun.lwuit.Label r1, $r3;
        long $l0;
        com.sun.lwuit.Component r0;
        com.sun.lwuit.plaf.DefaultLookAndFeel r2;
        boolean $z0, $z1, $z2;

        r2 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r0 := @parameter0: com.sun.lwuit.Component;

        $z0 = r0 instanceof com.sun.lwuit.Label;

        if $z0 == 0 goto label1;

        r1 = (com.sun.lwuit.Label) r0;

        $z1 = virtualinvoke r1.<com.sun.lwuit.Label: boolean isTickerEnabled()>();

        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r1.<com.sun.lwuit.Label: boolean shouldTickerStart()>();

        if $z2 == 0 goto label1;

        $r3 = (com.sun.lwuit.Label) r0;

        $l0 = virtualinvoke r2.<com.sun.lwuit.plaf.DefaultLookAndFeel: long getTickerSpeed()>();

        virtualinvoke $r3.<com.sun.lwuit.Label: void startTicker(long,boolean)>($l0, 1);

     label1:
        return;
    }

    public void focusLost(com.sun.lwuit.Component)
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.plaf.DefaultLookAndFeel r2;
        com.sun.lwuit.Label r1;
        boolean $z0, $z1;

        r2 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r0 := @parameter0: com.sun.lwuit.Component;

        $z0 = r0 instanceof com.sun.lwuit.Label;

        if $z0 == 0 goto label1;

        r1 = (com.sun.lwuit.Label) r0;

        $z1 = virtualinvoke r1.<com.sun.lwuit.Label: boolean isTickerRunning()>();

        if $z1 == 0 goto label1;

        virtualinvoke r1.<com.sun.lwuit.Label: void stopTicker()>();

     label1:
        return;
    }
}
