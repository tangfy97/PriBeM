public class org.apache.solr.common.params.MapSolrParams extends org.apache.solr.common.params.SolrParams
{
    protected final java.util.Map map;

    public void <init>(java.util.Map)
    {
        org.apache.solr.common.params.MapSolrParams r0;
        java.util.Map r1;

        r0 := @this: org.apache.solr.common.params.MapSolrParams;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<org.apache.solr.common.params.SolrParams: void <init>()>();

        r0.<org.apache.solr.common.params.MapSolrParams: java.util.Map map> = r1;

        return;
    }

    public java.lang.String get(java.lang.String)
    {
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.solr.common.params.MapSolrParams r0;
        java.lang.String r1, $r4;

        r0 := @this: org.apache.solr.common.params.MapSolrParams;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.solr.common.params.MapSolrParams: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public java.lang.String[] getParams(java.lang.String)
    {
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String[] $r5;
        org.apache.solr.common.params.MapSolrParams r0;
        java.lang.String r1, r4;

        r0 := @this: org.apache.solr.common.params.MapSolrParams;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.solr.common.params.MapSolrParams: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.lang.String) $r3;

        if r4 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r5 = newarray (java.lang.String)[1];

        $r5[0] = r4;

     label2:
        return $r5;
    }

    public java.util.Iterator getParameterNamesIterator()
    {
        java.util.Iterator $r3;
        java.util.Map $r1;
        java.util.Set $r2;
        org.apache.solr.common.params.MapSolrParams r0;

        r0 := @this: org.apache.solr.common.params.MapSolrParams;

        $r1 = r0.<org.apache.solr.common.params.MapSolrParams: java.util.Map map>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        return $r3;
    }

    public java.util.Map getMap()
    {
        org.apache.solr.common.params.MapSolrParams r0;
        java.util.Map $r1;

        r0 := @this: org.apache.solr.common.params.MapSolrParams;

        $r1 = r0.<org.apache.solr.common.params.MapSolrParams: java.util.Map map>;

        return $r1;
    }

    public java.lang.String toString()
    {
        java.util.Map $r2;
        java.lang.String $r5, r9, r11, $r14;
        boolean $z0, z1;
        java.util.Map$Entry r7;
        java.util.Iterator $r4;
        java.util.Set $r3;
        java.io.IOException $r12;
        java.lang.RuntimeException $r13;
        java.lang.StringBuilder $r0;
        java.lang.Object $r6, $r8, $r10;
        org.apache.solr.common.params.MapSolrParams r1;

        r1 := @this: org.apache.solr.common.params.MapSolrParams;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>(128);

     label1:
        z1 = 1;

        $r2 = r1.<org.apache.solr.common.params.MapSolrParams: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        r9 = (java.lang.String) $r8;

        $r10 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        r11 = (java.lang.String) $r10;

        if z1 != 0 goto label3;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(38);

     label3:
        z1 = 0;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        if r11 != null goto label4;

        $r14 = "";

        goto label5;

     label4:
        $r14 = r11;

     label5:
        staticinvoke <org.apache.solr.common.util.StrUtils: void partialURLEncodeVal(java.lang.Appendable,java.lang.String)>($r0, $r14);

        goto label2;

     label6:
        goto label8;

     label7:
        $r12 := @caughtexception;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r12);

        throw $r13;

     label8:
        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

        catch java.io.IOException from label1 to label6 with label7;
    }
}
