public class org.eclipse.jetty.server.handler.IPAccessHandler extends org.eclipse.jetty.server.handler.HandlerWrapper
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    org.eclipse.jetty.util.IPAddressMap _white;
    org.eclipse.jetty.util.IPAddressMap _black;

    public void <init>()
    {
        org.eclipse.jetty.server.handler.IPAccessHandler r0;
        org.eclipse.jetty.util.IPAddressMap $r1, $r2;

        r0 := @this: org.eclipse.jetty.server.handler.IPAccessHandler;

        specialinvoke r0.<org.eclipse.jetty.server.handler.HandlerWrapper: void <init>()>();

        $r1 = new org.eclipse.jetty.util.IPAddressMap;

        specialinvoke $r1.<org.eclipse.jetty.util.IPAddressMap: void <init>()>();

        r0.<org.eclipse.jetty.server.handler.IPAccessHandler: org.eclipse.jetty.util.IPAddressMap _white> = $r1;

        $r2 = new org.eclipse.jetty.util.IPAddressMap;

        specialinvoke $r2.<org.eclipse.jetty.util.IPAddressMap: void <init>()>();

        r0.<org.eclipse.jetty.server.handler.IPAccessHandler: org.eclipse.jetty.util.IPAddressMap _black> = $r2;

        return;
    }

    public void <init>(java.lang.String[], java.lang.String[])
    {
        org.eclipse.jetty.server.handler.IPAccessHandler r0;
        org.eclipse.jetty.util.IPAddressMap $r1, $r2;
        int $i0, $i1;
        java.lang.String[] r3, r4;

        r0 := @this: org.eclipse.jetty.server.handler.IPAccessHandler;

        r3 := @parameter0: java.lang.String[];

        r4 := @parameter1: java.lang.String[];

        specialinvoke r0.<org.eclipse.jetty.server.handler.HandlerWrapper: void <init>()>();

        $r1 = new org.eclipse.jetty.util.IPAddressMap;

        specialinvoke $r1.<org.eclipse.jetty.util.IPAddressMap: void <init>()>();

        r0.<org.eclipse.jetty.server.handler.IPAccessHandler: org.eclipse.jetty.util.IPAddressMap _white> = $r1;

        $r2 = new org.eclipse.jetty.util.IPAddressMap;

        specialinvoke $r2.<org.eclipse.jetty.util.IPAddressMap: void <init>()>();

        r0.<org.eclipse.jetty.server.handler.IPAccessHandler: org.eclipse.jetty.util.IPAddressMap _black> = $r2;

        if r3 == null goto label1;

        $i1 = lengthof r3;

        if $i1 <= 0 goto label1;

        virtualinvoke r0.<org.eclipse.jetty.server.handler.IPAccessHandler: void setWhite(java.lang.String[])>(r3);

     label1:
        if r4 == null goto label2;

        $i0 = lengthof r4;

        if $i0 <= 0 goto label2;

        virtualinvoke r0.<org.eclipse.jetty.server.handler.IPAccessHandler: void setBlack(java.lang.String[])>(r4);

     label2:
        return;
    }

    public void addWhite(java.lang.String)
    {
        org.eclipse.jetty.server.handler.IPAccessHandler r0;
        java.lang.String r1;
        org.eclipse.jetty.util.IPAddressMap $r2;

        r0 := @this: org.eclipse.jetty.server.handler.IPAccessHandler;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.eclipse.jetty.server.handler.IPAccessHandler: org.eclipse.jetty.util.IPAddressMap _white>;

        virtualinvoke r0.<org.eclipse.jetty.server.handler.IPAccessHandler: void add(java.lang.String,org.eclipse.jetty.util.IPAddressMap)>(r1, $r2);

        return;
    }

    public void addBlack(java.lang.String)
    {
        org.eclipse.jetty.server.handler.IPAccessHandler r0;
        java.lang.String r1;
        org.eclipse.jetty.util.IPAddressMap $r2;

        r0 := @this: org.eclipse.jetty.server.handler.IPAccessHandler;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.eclipse.jetty.server.handler.IPAccessHandler: org.eclipse.jetty.util.IPAddressMap _black>;

        virtualinvoke r0.<org.eclipse.jetty.server.handler.IPAccessHandler: void add(java.lang.String,org.eclipse.jetty.util.IPAddressMap)>(r1, $r2);

        return;
    }

    public void setWhite(java.lang.String[])
    {
        org.eclipse.jetty.server.handler.IPAccessHandler r0;
        java.lang.String[] r1;
        org.eclipse.jetty.util.IPAddressMap $r2;

        r0 := @this: org.eclipse.jetty.server.handler.IPAccessHandler;

        r1 := @parameter0: java.lang.String[];

        $r2 = r0.<org.eclipse.jetty.server.handler.IPAccessHandler: org.eclipse.jetty.util.IPAddressMap _white>;

        virtualinvoke r0.<org.eclipse.jetty.server.handler.IPAccessHandler: void set(java.lang.String[],org.eclipse.jetty.util.IPAddressMap)>(r1, $r2);

        return;
    }

    public void setBlack(java.lang.String[])
    {
        org.eclipse.jetty.server.handler.IPAccessHandler r0;
        java.lang.String[] r1;
        org.eclipse.jetty.util.IPAddressMap $r2;

        r0 := @this: org.eclipse.jetty.server.handler.IPAccessHandler;

        r1 := @parameter0: java.lang.String[];

        $r2 = r0.<org.eclipse.jetty.server.handler.IPAccessHandler: org.eclipse.jetty.util.IPAddressMap _black>;

        virtualinvoke r0.<org.eclipse.jetty.server.handler.IPAccessHandler: void set(java.lang.String[],org.eclipse.jetty.util.IPAddressMap)>(r1, $r2);

        return;
    }

    public void handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.io.IOException, javax.servlet.ServletException
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.server.Handler $r9;
        org.eclipse.jetty.io.EndPoint $r6;
        org.eclipse.jetty.server.AbstractHttpConnection $r1;
        javax.servlet.http.HttpServletResponse r5;
        org.eclipse.jetty.server.handler.IPAccessHandler r2;
        javax.servlet.http.HttpServletRequest r4;
        java.lang.String r3, $r7, $r8;
        boolean $z0;

        r2 := @this: org.eclipse.jetty.server.handler.IPAccessHandler;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: org.eclipse.jetty.server.Request;

        r4 := @parameter2: javax.servlet.http.HttpServletRequest;

        r5 := @parameter3: javax.servlet.http.HttpServletResponse;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AbstractHttpConnection getConnection()>();

        if $r1 == null goto label1;

        $r6 = virtualinvoke $r1.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.io.EndPoint getEndPoint()>();

        if $r6 == null goto label1;

        $r7 = interfaceinvoke $r6.<org.eclipse.jetty.io.EndPoint: java.lang.String getRemoteAddr()>();

        if $r7 == null goto label1;

        $r8 = virtualinvoke r0.<org.eclipse.jetty.server.Request: java.lang.String getPathInfo()>();

        $z0 = virtualinvoke r2.<org.eclipse.jetty.server.handler.IPAccessHandler: boolean isAddrUriAllowed(java.lang.String,java.lang.String)>($r7, $r8);

        if $z0 != 0 goto label1;

        interfaceinvoke r5.<javax.servlet.http.HttpServletResponse: void sendError(int)>(403);

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setHandled(boolean)>(1);

        return;

     label1:
        $r9 = virtualinvoke r2.<org.eclipse.jetty.server.handler.IPAccessHandler: org.eclipse.jetty.server.Handler getHandler()>();

        interfaceinvoke $r9.<org.eclipse.jetty.server.Handler: void handle(java.lang.String,org.eclipse.jetty.server.Request,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r3, r0, r4, r5);

        return;
    }

    protected void add(java.lang.String, org.eclipse.jetty.util.IPAddressMap)
    {
        org.eclipse.jetty.util.IPAddressMap r2;
        java.lang.Object[] $r11;
        int $i0, $i1, $i2, i3;
        java.lang.String r0, r1, $r6, $r10, $r12, $r14, $r15, r16;
        org.eclipse.jetty.http.PathMap $r13, $r18, r19;
        boolean $z0, $z1, $z2, $z3, z4, $z5;
        org.eclipse.jetty.server.handler.IPAccessHandler r5;
        java.lang.StringBuilder $r3, $r7, $r8, $r9;
        java.lang.Object $r17;
        org.eclipse.jetty.util.log.Logger $r4;

        r5 := @this: org.eclipse.jetty.server.handler.IPAccessHandler;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: org.eclipse.jetty.util.IPAddressMap;

        if r0 == null goto label14;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label14;

        z4 = 0;

        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(124);

        if $i1 <= 0 goto label01;

        i3 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(124);

        goto label04;

     label01:
        $i2 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(47);

        i3 = $i2;

        if $i2 < 0 goto label02;

        $z5 = 1;

        goto label03;

     label02:
        $z5 = 0;

     label03:
        z4 = $z5;

     label04:
        if i3 <= 0 goto label05;

        $r14 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i3);

        goto label06;

     label05:
        $r14 = r0;

     label06:
        r1 = $r14;

        if i3 <= 0 goto label07;

        $r15 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i3);

        goto label08;

     label07:
        $r15 = "/*";

     label08:
        r16 = $r15;

        $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".");

        if $z0 == 0 goto label09;

        z4 = 1;

     label09:
        if r16 == null goto label11;

        $z2 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>("|");

        if $z2 != 0 goto label10;

        $z3 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String)>("/*.");

        if $z3 == 0 goto label11;

     label10:
        r16 = virtualinvoke r16.<java.lang.String: java.lang.String substring(int)>(1);

     label11:
        $r17 = virtualinvoke r2.<org.eclipse.jetty.util.IPAddressMap: java.lang.Object get(java.lang.Object)>(r1);

        $r18 = (org.eclipse.jetty.http.PathMap) $r17;

        r19 = $r18;

        if $r18 != null goto label12;

        $r13 = new org.eclipse.jetty.http.PathMap;

        specialinvoke $r13.<org.eclipse.jetty.http.PathMap: void <init>(boolean)>(1);

        r19 = $r13;

        virtualinvoke r2.<org.eclipse.jetty.util.IPAddressMap: java.lang.Object put(java.lang.String,java.lang.Object)>(r1, $r13);

     label12:
        if r16 == null goto label13;

        $r12 = "";

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r16);

        if $z1 != 0 goto label13;

        virtualinvoke r19.<org.eclipse.jetty.http.PathMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r16, r16);

     label13:
        if z4 == 0 goto label14;

        $r4 = <org.eclipse.jetty.server.handler.IPAccessHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - deprecated specification syntax: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = newarray (java.lang.Object)[0];

        interfaceinvoke $r4.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r10, $r11);

     label14:
        return;
    }

    protected void set(java.lang.String[], org.eclipse.jetty.util.IPAddressMap)
    {
        org.eclipse.jetty.server.handler.IPAccessHandler r3;
        org.eclipse.jetty.util.IPAddressMap r0;
        int $i0, i1, i2;
        java.lang.String[] r1;
        java.lang.String r2;

        r3 := @this: org.eclipse.jetty.server.handler.IPAccessHandler;

        r1 := @parameter0: java.lang.String[];

        r0 := @parameter1: org.eclipse.jetty.util.IPAddressMap;

        virtualinvoke r0.<org.eclipse.jetty.util.IPAddressMap: void clear()>();

        if r1 == null goto label2;

        $i0 = lengthof r1;

        if $i0 <= 0 goto label2;

        i1 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        r2 = r1[i2];

        virtualinvoke r3.<org.eclipse.jetty.server.handler.IPAccessHandler: void add(java.lang.String,org.eclipse.jetty.util.IPAddressMap)>(r2, r0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    protected boolean isAddrUriAllowed(java.lang.String, java.lang.String)
    {
        org.eclipse.jetty.util.IPAddressMap $r1, $r2, $r4, $r12;
        boolean $z0, $z1, z2, $z3, $z5, $z6, $z7;
        java.util.List $r20, $r21;
        int $i0, $i1, $i2, $i3;
        java.lang.String r3, r10;
        org.eclipse.jetty.http.PathMap r18, r22;
        java.util.Map$Entry $r8, $r16;
        java.util.Iterator $r6, $r14;
        org.eclipse.jetty.server.handler.IPAccessHandler r0;
        java.lang.Object $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19;

        r0 := @this: org.eclipse.jetty.server.handler.IPAccessHandler;

        r3 := @parameter0: java.lang.String;

        r10 := @parameter1: java.lang.String;

        $r1 = r0.<org.eclipse.jetty.server.handler.IPAccessHandler: org.eclipse.jetty.util.IPAddressMap _white>;

        $i0 = virtualinvoke $r1.<org.eclipse.jetty.util.IPAddressMap: int size()>();

        if $i0 <= 0 goto label09;

        z2 = 0;

        $r12 = r0.<org.eclipse.jetty.server.handler.IPAccessHandler: org.eclipse.jetty.util.IPAddressMap _white>;

        $r13 = virtualinvoke $r12.<org.eclipse.jetty.util.IPAddressMap: java.lang.Object getLazyMatches(java.lang.String)>(r3);

        if $r13 == null goto label08;

        $z1 = $r13 instanceof java.util.List;

        if $z1 == 0 goto label01;

        $r20 = (java.util.List) $r13;

        goto label02;

     label01:
        $r20 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r13);

     label02:
        $r14 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z3 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label08;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (java.util.Map$Entry) $r15;

        $r17 = interfaceinvoke $r16.<java.util.Map$Entry: java.lang.Object getValue()>();

        r18 = (org.eclipse.jetty.http.PathMap) $r17;

        if r18 == null goto label05;

        $i3 = virtualinvoke r18.<org.eclipse.jetty.http.PathMap: int size()>();

        if $i3 == 0 goto label04;

        $r19 = virtualinvoke r18.<org.eclipse.jetty.http.PathMap: java.lang.Object match(java.lang.String)>(r10);

        if $r19 == null goto label05;

     label04:
        $z7 = 1;

        $z6 = 1;

        goto label06;

     label05:
        $z7 = 0;

        $z6 = 0;

     label06:
        z2 = $z6;

        if $z7 == 0 goto label07;

        goto label08;

     label07:
        goto label03;

     label08:
        if z2 != 0 goto label09;

        return 0;

     label09:
        $r2 = r0.<org.eclipse.jetty.server.handler.IPAccessHandler: org.eclipse.jetty.util.IPAddressMap _black>;

        $i1 = virtualinvoke $r2.<org.eclipse.jetty.util.IPAddressMap: int size()>();

        if $i1 <= 0 goto label15;

        $r4 = r0.<org.eclipse.jetty.server.handler.IPAccessHandler: org.eclipse.jetty.util.IPAddressMap _black>;

        $r5 = virtualinvoke $r4.<org.eclipse.jetty.util.IPAddressMap: java.lang.Object getLazyMatches(java.lang.String)>(r3);

        if $r5 == null goto label15;

        $z0 = $r5 instanceof java.util.List;

        if $z0 == 0 goto label10;

        $r21 = (java.util.List) $r5;

        goto label11;

     label10:
        $r21 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r5);

     label11:
        $r6 = interfaceinvoke $r21.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $z5 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label15;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.util.Map$Entry) $r7;

        $r9 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        r22 = (org.eclipse.jetty.http.PathMap) $r9;

        if r22 == null goto label14;

        $i2 = virtualinvoke r22.<org.eclipse.jetty.http.PathMap: int size()>();

        if $i2 == 0 goto label13;

        $r11 = virtualinvoke r22.<org.eclipse.jetty.http.PathMap: java.lang.Object match(java.lang.String)>(r10);

        if $r11 == null goto label14;

     label13:
        return 0;

     label14:
        goto label12;

     label15:
        return 1;
    }

    protected void doStart() throws java.lang.Exception
    {
        org.eclipse.jetty.server.handler.IPAccessHandler r0;
        java.io.PrintStream $r2;
        org.eclipse.jetty.util.log.Logger $r1;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.handler.IPAccessHandler;

        specialinvoke r0.<org.eclipse.jetty.server.handler.HandlerWrapper: void doStart()>();

        $r1 = <org.eclipse.jetty.server.handler.IPAccessHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $z0 = interfaceinvoke $r1.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        $r3 = virtualinvoke r0.<org.eclipse.jetty.server.handler.IPAccessHandler: java.lang.String dump()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r3);

     label1:
        return;
    }

    public java.lang.String dump()
    {
        org.eclipse.jetty.server.handler.IPAccessHandler r1;
        org.eclipse.jetty.util.IPAddressMap $r3, $r5;
        java.lang.StringBuilder $r0;
        java.lang.String $r2, $r4, $r6;

        r1 := @this: org.eclipse.jetty.server.handler.IPAccessHandler;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHITELIST:\n");

        $r3 = r1.<org.eclipse.jetty.server.handler.IPAccessHandler: org.eclipse.jetty.util.IPAddressMap _white>;

        virtualinvoke r1.<org.eclipse.jetty.server.handler.IPAccessHandler: void dump(java.lang.StringBuilder,org.eclipse.jetty.util.IPAddressMap)>($r0, $r3);

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" BLACKLIST:\n");

        $r5 = r1.<org.eclipse.jetty.server.handler.IPAccessHandler: org.eclipse.jetty.util.IPAddressMap _black>;

        virtualinvoke r1.<org.eclipse.jetty.server.handler.IPAccessHandler: void dump(java.lang.StringBuilder,org.eclipse.jetty.util.IPAddressMap)>($r0, $r5);

        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    protected void dump(java.lang.StringBuilder, org.eclipse.jetty.util.IPAddressMap)
    {
        org.eclipse.jetty.util.IPAddressMap r0;
        java.util.Iterator $r2, $r8;
        java.util.Collection $r7;
        java.util.Set $r1;
        org.eclipse.jetty.server.handler.IPAccessHandler r11;
        java.lang.Object $r3, $r5, $r9;
        java.lang.StringBuilder r10;
        java.lang.String r4;
        org.eclipse.jetty.http.PathMap $r6;
        boolean $z0, $z1;

        r11 := @this: org.eclipse.jetty.server.handler.IPAccessHandler;

        r10 := @parameter0: java.lang.StringBuilder;

        r0 := @parameter1: org.eclipse.jetty.util.IPAddressMap;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.util.IPAddressMap: java.util.Set keySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r3;

        $r5 = virtualinvoke r0.<org.eclipse.jetty.util.IPAddressMap: java.lang.Object get(java.lang.Object)>(r4);

        $r6 = (org.eclipse.jetty.http.PathMap) $r5;

        $r7 = virtualinvoke $r6.<org.eclipse.jetty.http.PathMap: java.util.Collection values()>();

        $r8 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("# ");

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        goto label2;

     label3:
        goto label1;

     label4:
        return;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/server/handler/IPAccessHandler;");

        <org.eclipse.jetty.server.handler.IPAccessHandler: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
