public class org.mozilla.javascript.tools.idswitch.Main extends java.lang.Object
{
    private static final java.lang.String PROGRAM_NAME;
    private static final java.lang.String SWITCH_TAG_STR;
    private static final java.lang.String GENERATED_TAG_STR;
    private static final java.lang.String STRING_TAG_STR;
    private static final int NORMAL_LINE;
    private static final int SWITCH_TAG;
    private static final int GENERATED_TAG;
    private static final int STRING_TAG;
    private final java.util.Vector all_pairs;
    private org.mozilla.javascript.tools.ToolErrorReporter R;
    private org.mozilla.javascript.tools.idswitch.CodePrinter P;
    private org.mozilla.javascript.tools.idswitch.FileBody body;
    private java.lang.String source_file;
    private int tag_definition_end;
    private int tag_value_start;
    private int tag_value_end;

    public void <init>()
    {
        java.util.Vector $r1;
        org.mozilla.javascript.tools.idswitch.Main r0;

        r0 := @this: org.mozilla.javascript.tools.idswitch.Main;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        r0.<org.mozilla.javascript.tools.idswitch.Main: java.util.Vector all_pairs> = $r1;

        return;
    }

    private static boolean is_value_type(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 != 3 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static java.lang.String tag_name(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case -2: goto label4;
            case -1: goto label2;
            case 0: goto label5;
            case 1: goto label1;
            case 2: goto label3;
            default: goto label5;
        };

     label1:
        return "string_id_map";

     label2:
        return "/string_id_map";

     label3:
        return "generated";

     label4:
        return "/generated";

     label5:
        return "";
    }

    void process_file(java.lang.String) throws java.io.IOException
    {
        java.lang.Throwable $r10, $r11;
        org.mozilla.javascript.tools.idswitch.FileBody $r2, $r5, $r6, $r9;
        org.mozilla.javascript.tools.idswitch.Main r0;
        java.io.OutputStreamWriter $r8;
        java.lang.String r1;
        boolean $z0, $z1, $z2;
        java.io.OutputStream r13;
        java.io.FileOutputStream $r7;
        java.io.FileInputStream $r3;
        java.io.InputStreamReader $r4;
        java.io.InputStream r12;

        r0 := @this: org.mozilla.javascript.tools.idswitch.Main;

        r1 := @parameter0: java.lang.String;

        r0.<org.mozilla.javascript.tools.idswitch.Main: java.lang.String source_file> = r1;

        $r2 = new org.mozilla.javascript.tools.idswitch.FileBody;

        specialinvoke $r2.<org.mozilla.javascript.tools.idswitch.FileBody: void <init>()>();

        r0.<org.mozilla.javascript.tools.idswitch.Main: org.mozilla.javascript.tools.idswitch.FileBody body> = $r2;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("-");

        if $z0 == 0 goto label01;

        r12 = <java.lang.System: java.io.InputStream in>;

        goto label02;

     label01:
        $r3 = new java.io.FileInputStream;

        specialinvoke $r3.<java.io.FileInputStream: void <init>(java.lang.String)>(r1);

        r12 = $r3;

     label02:
        $r4 = new java.io.InputStreamReader;

        specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r12, "ASCII");

        $r5 = r0.<org.mozilla.javascript.tools.idswitch.Main: org.mozilla.javascript.tools.idswitch.FileBody body>;

        virtualinvoke $r5.<org.mozilla.javascript.tools.idswitch.FileBody: void readData(java.io.Reader)>($r4);

     label03:
        virtualinvoke r12.<java.io.InputStream: void close()>();

        goto label06;

     label04:
        $r11 := @caughtexception;

     label05:
        virtualinvoke r12.<java.io.InputStream: void close()>();

        throw $r11;

     label06:
        specialinvoke r0.<org.mozilla.javascript.tools.idswitch.Main: void process_file()>();

        $r6 = r0.<org.mozilla.javascript.tools.idswitch.Main: org.mozilla.javascript.tools.idswitch.FileBody body>;

        $z1 = virtualinvoke $r6.<org.mozilla.javascript.tools.idswitch.FileBody: boolean wasModified()>();

        if $z1 == 0 goto label12;

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("-");

        if $z2 == 0 goto label07;

        r13 = <java.lang.System: java.io.PrintStream out>;

        goto label08;

     label07:
        $r7 = new java.io.FileOutputStream;

        specialinvoke $r7.<java.io.FileOutputStream: void <init>(java.lang.String)>(r1);

        r13 = $r7;

     label08:
        $r8 = new java.io.OutputStreamWriter;

        specialinvoke $r8.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>(r13);

        $r9 = r0.<org.mozilla.javascript.tools.idswitch.Main: org.mozilla.javascript.tools.idswitch.FileBody body>;

        virtualinvoke $r9.<org.mozilla.javascript.tools.idswitch.FileBody: void writeData(java.io.Writer)>($r8);

        virtualinvoke $r8.<java.io.Writer: void flush()>();

     label09:
        virtualinvoke r13.<java.io.OutputStream: void close()>();

        goto label12;

     label10:
        $r10 := @caughtexception;

     label11:
        virtualinvoke r13.<java.io.OutputStream: void close()>();

        throw $r10;

     label12:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private void process_file() throws java.io.IOException
    {
        org.mozilla.javascript.tools.ToolErrorReporter $r8, $r16;
        java.util.Vector $r19, $r25;
        byte b5, b10, b11, b12;
        org.mozilla.javascript.tools.idswitch.CodePrinter $r20;
        boolean $z0, $z1, $z2, z3;
        org.mozilla.javascript.tools.idswitch.FileBody $r1, $r3, $r4, $r7, $r11, $r12, $r15, $r22, $r24;
        org.mozilla.javascript.tools.idswitch.Main r0;
        int $i0, $i1, $i2, $i3, $i4, i6, i7, i8, i9, $i14, $i16, $i18, $i20, $i22, $i24, $i26, $i28;
        java.lang.String $r5, $r6, $r9, $r13, $r14, $r17, $r21, $r23;
        org.mozilla.javascript.EvaluatorException $r10, $r18;
        char[] $r2;

        r0 := @this: org.mozilla.javascript.tools.idswitch.Main;

        b5 = 0;

        b12 = 0;

        b11 = 0;

        b10 = 0;

        $r1 = r0.<org.mozilla.javascript.tools.idswitch.Main: org.mozilla.javascript.tools.idswitch.FileBody body>;

        $r2 = virtualinvoke $r1.<org.mozilla.javascript.tools.idswitch.FileBody: char[] getBuffer()>();

        $i14 = (int) -1;

        i6 = $i14;

        $i16 = (int) -1;

        i7 = $i16;

        $i18 = (int) -1;

        i8 = $i18;

        $i20 = (int) -1;

        i9 = $i20;

        $r3 = r0.<org.mozilla.javascript.tools.idswitch.Main: org.mozilla.javascript.tools.idswitch.FileBody body>;

        virtualinvoke $r3.<org.mozilla.javascript.tools.idswitch.FileBody: void startLineLoop()>();

     label01:
        $r4 = r0.<org.mozilla.javascript.tools.idswitch.Main: org.mozilla.javascript.tools.idswitch.FileBody body>;

        $z0 = virtualinvoke $r4.<org.mozilla.javascript.tools.idswitch.FileBody: boolean nextLine()>();

        if $z0 == 0 goto label15;

        $r11 = r0.<org.mozilla.javascript.tools.idswitch.Main: org.mozilla.javascript.tools.idswitch.FileBody body>;

        $i1 = virtualinvoke $r11.<org.mozilla.javascript.tools.idswitch.FileBody: int getLineBegin()>();

        $r12 = r0.<org.mozilla.javascript.tools.idswitch.Main: org.mozilla.javascript.tools.idswitch.FileBody body>;

        $i2 = virtualinvoke $r12.<org.mozilla.javascript.tools.idswitch.FileBody: int getLineEnd()>();

        $i3 = specialinvoke r0.<org.mozilla.javascript.tools.idswitch.Main: int extract_line_tag_id(char[],int,int)>($r2, $i1, $i2);

        z3 = 0;

        tableswitch(b10)
        {
            case 0: goto label02;
            case 1: goto label04;
            case 2: goto label10;
            default: goto label14;
        };

     label02:
        if $i3 != 1 goto label03;

        b5 = 1;

        b12 = 1;

        b11 = 1;

        b10 = 1;

        $r25 = r0.<org.mozilla.javascript.tools.idswitch.Main: java.util.Vector all_pairs>;

        virtualinvoke $r25.<java.util.Vector: void removeAllElements()>();

        $i22 = (int) -1;

        i6 = $i22;

        goto label14;

     label03:
        $i24 = (int) -1;

        if $i3 != $i24 goto label14;

        z3 = 1;

        goto label14;

     label04:
        if $i3 != 0 goto label05;

        specialinvoke r0.<org.mozilla.javascript.tools.idswitch.Main: void look_for_id_definitions(char[],int,int,boolean)>($r2, $i1, $i2, 0);

        goto label14;

     label05:
        if $i3 != 3 goto label06;

        specialinvoke r0.<org.mozilla.javascript.tools.idswitch.Main: void look_for_id_definitions(char[],int,int,boolean)>($r2, $i1, $i2, 1);

        goto label14;

     label06:
        if $i3 != 2 goto label08;

        if i6 < 0 goto label07;

        z3 = 1;

        goto label14;

     label07:
        b5 = 2;

        b12 = 2;

        b11 = 2;

        b10 = 2;

        i8 = r0.<org.mozilla.javascript.tools.idswitch.Main: int tag_definition_end>;

        i9 = $i2;

        goto label14;

     label08:
        $i26 = (int) -1;

        if $i3 != $i26 goto label09;

        b5 = 0;

        b12 = 0;

        b11 = 0;

        b10 = 0;

        if i6 < 0 goto label14;

        $r19 = r0.<org.mozilla.javascript.tools.idswitch.Main: java.util.Vector all_pairs>;

        $z1 = virtualinvoke $r19.<java.util.Vector: boolean isEmpty()>();

        if $z1 != 0 goto label14;

        specialinvoke r0.<org.mozilla.javascript.tools.idswitch.Main: void generate_java_code()>();

        $r20 = r0.<org.mozilla.javascript.tools.idswitch.Main: org.mozilla.javascript.tools.idswitch.CodePrinter P>;

        $r21 = virtualinvoke $r20.<org.mozilla.javascript.tools.idswitch.CodePrinter: java.lang.String toString()>();

        $r22 = r0.<org.mozilla.javascript.tools.idswitch.Main: org.mozilla.javascript.tools.idswitch.FileBody body>;

        $z2 = virtualinvoke $r22.<org.mozilla.javascript.tools.idswitch.FileBody: boolean setReplacement(int,int,java.lang.String)>(i6, i7, $r21);

        if $z2 == 0 goto label14;

        $r23 = specialinvoke r0.<org.mozilla.javascript.tools.idswitch.Main: java.lang.String get_time_stamp()>();

        $r24 = r0.<org.mozilla.javascript.tools.idswitch.Main: org.mozilla.javascript.tools.idswitch.FileBody body>;

        virtualinvoke $r24.<org.mozilla.javascript.tools.idswitch.FileBody: boolean setReplacement(int,int,java.lang.String)>(i8, i9, $r23);

        goto label14;

     label09:
        z3 = 1;

        goto label14;

     label10:
        if $i3 != 0 goto label11;

        if i6 >= 0 goto label14;

        i6 = $i1;

        goto label14;

     label11:
        $i28 = (int) -2;

        if $i3 != $i28 goto label13;

        if i6 >= 0 goto label12;

        i6 = $i1;

     label12:
        b5 = 1;

        b12 = 1;

        b11 = 1;

        b10 = 1;

        i7 = $i1;

        goto label14;

     label13:
        z3 = 1;

     label14:
        if z3 == 0 goto label01;

        $r13 = staticinvoke <org.mozilla.javascript.tools.idswitch.Main: java.lang.String tag_name(int)>($i3);

        $r14 = staticinvoke <org.mozilla.javascript.tools.ToolErrorReporter: java.lang.String getMessage(java.lang.String,java.lang.String)>("msg.idswitch.bad_tag_order", $r13);

        $r16 = r0.<org.mozilla.javascript.tools.idswitch.Main: org.mozilla.javascript.tools.ToolErrorReporter R>;

        $r17 = r0.<org.mozilla.javascript.tools.idswitch.Main: java.lang.String source_file>;

        $r15 = r0.<org.mozilla.javascript.tools.idswitch.Main: org.mozilla.javascript.tools.idswitch.FileBody body>;

        $i4 = virtualinvoke $r15.<org.mozilla.javascript.tools.idswitch.FileBody: int getLineNumber()>();

        $r18 = virtualinvoke $r16.<org.mozilla.javascript.tools.ToolErrorReporter: org.mozilla.javascript.EvaluatorException runtimeError(java.lang.String,java.lang.String,int,java.lang.String,int)>($r14, $r17, $i4, null, 0);

        throw $r18;

     label15:
        if b12 == 0 goto label16;

        $r5 = staticinvoke <org.mozilla.javascript.tools.idswitch.Main: java.lang.String tag_name(int)>(b11);

        $r6 = staticinvoke <org.mozilla.javascript.tools.ToolErrorReporter: java.lang.String getMessage(java.lang.String,java.lang.String)>("msg.idswitch.file_end_in_switch", $r5);

        $r8 = r0.<org.mozilla.javascript.tools.idswitch.Main: org.mozilla.javascript.tools.ToolErrorReporter R>;

        $r9 = r0.<org.mozilla.javascript.tools.idswitch.Main: java.lang.String source_file>;

        $r7 = r0.<org.mozilla.javascript.tools.idswitch.Main: org.mozilla.javascript.tools.idswitch.FileBody body>;

        $i0 = virtualinvoke $r7.<org.mozilla.javascript.tools.idswitch.FileBody: int getLineNumber()>();

        $r10 = virtualinvoke $r8.<org.mozilla.javascript.tools.ToolErrorReporter: org.mozilla.javascript.EvaluatorException runtimeError(java.lang.String,java.lang.String,int,java.lang.String,int)>($r6, $r9, $i0, null, 0);

        throw $r10;

     label16:
        return;
    }

    private java.lang.String get_time_stamp()
    {
        org.mozilla.javascript.tools.idswitch.Main r4;
        java.util.Date $r1, $r2;
        java.text.SimpleDateFormat $r0;
        java.lang.String $r3;

        r4 := @this: org.mozilla.javascript.tools.idswitch.Main;

        $r0 = new java.text.SimpleDateFormat;

        specialinvoke $r0.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(" \'Last update:\' yyyy-MM-dd HH:mm:ss z");

        $r1 = new java.util.Date;

        specialinvoke $r1.<java.util.Date: void <init>()>();

        virtualinvoke $r0.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r1);

        $r2 = new java.util.Date;

        specialinvoke $r2.<java.util.Date: void <init>()>();

        $r3 = virtualinvoke $r0.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r2);

        return $r3;
    }

    private void generate_java_code()
    {
        org.mozilla.javascript.tools.idswitch.IdValuePair[] r3;
        org.mozilla.javascript.tools.ToolErrorReporter $r6;
        java.util.Vector $r2, $r4;
        org.mozilla.javascript.tools.idswitch.Main r0;
        org.mozilla.javascript.tools.idswitch.CodePrinter $r1, $r7;
        int $i0;
        org.mozilla.javascript.tools.idswitch.SwitchGenerator $r5;

        r0 := @this: org.mozilla.javascript.tools.idswitch.Main;

        $r1 = r0.<org.mozilla.javascript.tools.idswitch.Main: org.mozilla.javascript.tools.idswitch.CodePrinter P>;

        virtualinvoke $r1.<org.mozilla.javascript.tools.idswitch.CodePrinter: void clear()>();

        $r2 = r0.<org.mozilla.javascript.tools.idswitch.Main: java.util.Vector all_pairs>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        r3 = newarray (org.mozilla.javascript.tools.idswitch.IdValuePair)[$i0];

        $r4 = r0.<org.mozilla.javascript.tools.idswitch.Main: java.util.Vector all_pairs>;

        virtualinvoke $r4.<java.util.Vector: void copyInto(java.lang.Object[])>(r3);

        $r5 = new org.mozilla.javascript.tools.idswitch.SwitchGenerator;

        specialinvoke $r5.<org.mozilla.javascript.tools.idswitch.SwitchGenerator: void <init>()>();

        $r5.<org.mozilla.javascript.tools.idswitch.SwitchGenerator: int char_tail_test_threshold> = 2;

        $r6 = r0.<org.mozilla.javascript.tools.idswitch.Main: org.mozilla.javascript.tools.ToolErrorReporter R>;

        virtualinvoke $r5.<org.mozilla.javascript.tools.idswitch.SwitchGenerator: void setReporter(org.mozilla.javascript.tools.ToolErrorReporter)>($r6);

        $r7 = r0.<org.mozilla.javascript.tools.idswitch.Main: org.mozilla.javascript.tools.idswitch.CodePrinter P>;

        virtualinvoke $r5.<org.mozilla.javascript.tools.idswitch.SwitchGenerator: void setCodePrinter(org.mozilla.javascript.tools.idswitch.CodePrinter)>($r7);

        virtualinvoke $r5.<org.mozilla.javascript.tools.idswitch.SwitchGenerator: void generateSwitch(org.mozilla.javascript.tools.idswitch.IdValuePair[],java.lang.String)>(r3, "0");

        return;
    }

    private int extract_line_tag_id(char[], int, int)
    {
        org.mozilla.javascript.tools.ToolErrorReporter $r5;
        boolean z0, $z1, $z2, $z3, $z4, z5, z6, z7;
        org.mozilla.javascript.tools.idswitch.FileBody $r4;
        org.mozilla.javascript.tools.idswitch.Main r1;
        int i0, $i1, $i2, $i3, $i4, i6, $i7, $i9, $i10, i12, i13, i14, i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26;
        java.lang.String $r2, $r3, $r6, r8, r9, r10;
        org.mozilla.javascript.EvaluatorException $r7;
        char $c5, c8, $c11, c15;
        char[] r0;

        r1 := @this: org.mozilla.javascript.tools.idswitch.Main;

        r0 := @parameter0: char[];

        i12 := @parameter1: int;

        i0 := @parameter2: int;

        i13 = 0;

        $i1 = staticinvoke <org.mozilla.javascript.tools.idswitch.Main: int skip_white_space(char[],int,int)>(r0, i12, i0);

        $i2 = specialinvoke r1.<org.mozilla.javascript.tools.idswitch.Main: int look_for_slash_slash(char[],int,int)>(r0, $i1, i0);

        if $i2 == i0 goto label13;

        $i3 = $i1 + 2;

        if $i3 != $i2 goto label01;

        $z4 = 1;

        goto label02;

     label01:
        $z4 = 0;

     label02:
        z0 = $z4;

        $i4 = staticinvoke <org.mozilla.javascript.tools.idswitch.Main: int skip_white_space(char[],int,int)>(r0, $i2, i0);

        if $i4 == i0 goto label13;

        $c5 = r0[$i4];

        $i19 = (int) $c5;

        if $i19 != 35 goto label13;

        i14 = $i4 + 1;

        z5 = 0;

        z7 = 0;

        z6 = 0;

        if i14 == i0 goto label03;

        $c11 = r0[i14];

        $i20 = (int) $c11;

        if $i20 != 47 goto label03;

        i14 = i14 + 1;

        z5 = 1;

        z7 = 1;

        z6 = 1;

     label03:
        i6 = i14;

     label04:
        if i14 == i0 goto label06;

        c15 = r0[i14];

        $i21 = (int) c15;

        if $i21 == 35 goto label06;

        $i22 = (int) c15;

        if $i22 == 61 goto label06;

        $i23 = (int) c15;

        $z3 = staticinvoke <org.mozilla.javascript.tools.idswitch.Main: boolean is_white_space(int)>($i23);

        if $z3 == 0 goto label05;

        goto label06;

     label05:
        i14 = i14 + 1;

        goto label04;

     label06:
        if i14 == i0 goto label13;

        i16 = i14;

        $i7 = staticinvoke <org.mozilla.javascript.tools.idswitch.Main: int skip_white_space(char[],int,int)>(r0, i14, i0);

        if $i7 == i0 goto label13;

        c8 = r0[$i7];

        $i24 = (int) c8;

        if $i24 == 61 goto label07;

        $i25 = (int) c8;

        if $i25 != 35 goto label13;

     label07:
        $i9 = specialinvoke r1.<org.mozilla.javascript.tools.idswitch.Main: int get_tag_id(char[],int,int,boolean)>(r0, i6, i16, z0);

        i13 = $i9;

        if $i9 == 0 goto label13;

        r8 = null;

        r10 = null;

        r9 = null;

        $i26 = (int) c8;

        if $i26 != 35 goto label09;

        if z6 == 0 goto label08;

        i13 = neg $i9;

        $z2 = staticinvoke <org.mozilla.javascript.tools.idswitch.Main: boolean is_value_type(int)>(i13);

        if $z2 == 0 goto label08;

        r8 = "msg.idswitch.no_end_usage";

        r10 = "msg.idswitch.no_end_usage";

        r9 = "msg.idswitch.no_end_usage";

     label08:
        $i17 = $i7 + 1;

        r1.<org.mozilla.javascript.tools.idswitch.Main: int tag_definition_end> = $i17;

        goto label12;

     label09:
        if z7 == 0 goto label10;

        r8 = "msg.idswitch.no_end_with_value";

        r10 = "msg.idswitch.no_end_with_value";

        r9 = "msg.idswitch.no_end_with_value";

        goto label11;

     label10:
        $z1 = staticinvoke <org.mozilla.javascript.tools.idswitch.Main: boolean is_value_type(int)>($i9);

        if $z1 != 0 goto label11;

        r8 = "msg.idswitch.no_value_allowed";

        r10 = "msg.idswitch.no_value_allowed";

        r9 = "msg.idswitch.no_value_allowed";

     label11:
        $i18 = $i7 + 1;

        i13 = specialinvoke r1.<org.mozilla.javascript.tools.idswitch.Main: int extract_tag_value(char[],int,int,int)>(r0, $i18, i0, $i9);

     label12:
        if r10 == null goto label13;

        $r2 = staticinvoke <org.mozilla.javascript.tools.idswitch.Main: java.lang.String tag_name(int)>(i13);

        $r3 = staticinvoke <org.mozilla.javascript.tools.ToolErrorReporter: java.lang.String getMessage(java.lang.String,java.lang.String)>(r9, $r2);

        $r5 = r1.<org.mozilla.javascript.tools.idswitch.Main: org.mozilla.javascript.tools.ToolErrorReporter R>;

        $r6 = r1.<org.mozilla.javascript.tools.idswitch.Main: java.lang.String source_file>;

        $r4 = r1.<org.mozilla.javascript.tools.idswitch.Main: org.mozilla.javascript.tools.idswitch.FileBody body>;

        $i10 = virtualinvoke $r4.<org.mozilla.javascript.tools.idswitch.FileBody: int getLineNumber()>();

        $r7 = virtualinvoke $r5.<org.mozilla.javascript.tools.ToolErrorReporter: org.mozilla.javascript.EvaluatorException runtimeError(java.lang.String,java.lang.String,int,java.lang.String,int)>($r3, $r6, $i10, null, 0);

        throw $r7;

     label13:
        return i13;
    }

    private int look_for_slash_slash(char[], int, int)
    {
        char c5, c6;
        org.mozilla.javascript.tools.idswitch.Main r1;
        int i0, $i1, $i2, i3, $i4, $i7, $i8;
        char[] r0;

        r1 := @this: org.mozilla.javascript.tools.idswitch.Main;

        r0 := @parameter0: char[];

        i3 := @parameter1: int;

        i0 := @parameter2: int;

     label1:
        $i4 = i3 + 2;

        if $i4 > i0 goto label2;

        $i1 = i3;

        i3 = i3 + 1;

        c5 = r0[$i1];

        $i7 = (int) c5;

        if $i7 != 47 goto label1;

        $i2 = i3;

        i3 = i3 + 1;

        c6 = r0[$i2];

        $i8 = (int) c6;

        if $i8 != 47 goto label1;

        return i3;

     label2:
        return i0;
    }

    private int extract_tag_value(char[], int, int, int)
    {
        org.mozilla.javascript.tools.idswitch.Main r1;
        int i0, $i1, i2, $i3, $i5, $i6, i8, i9, i10, $i11, $i12, $i13, $i14;
        boolean $z0, z1;
        char c4, $c7;
        char[] r0;

        r1 := @this: org.mozilla.javascript.tools.idswitch.Main;

        r0 := @parameter0: char[];

        i8 := @parameter1: int;

        i0 := @parameter2: int;

        i2 := @parameter3: int;

        z1 = 0;

        $i1 = staticinvoke <org.mozilla.javascript.tools.idswitch.Main: int skip_white_space(char[],int,int)>(r0, i8, i0);

        i9 = $i1;

        if $i1 == i0 goto label6;

        i10 = $i1;

     label1:
        if i9 == i0 goto label5;

        c4 = r0[i9];

        $i12 = (int) c4;

        $z0 = staticinvoke <org.mozilla.javascript.tools.idswitch.Main: boolean is_white_space(int)>($i12);

        if $z0 == 0 goto label3;

        $i5 = i9 + 1;

        $i6 = staticinvoke <org.mozilla.javascript.tools.idswitch.Main: int skip_white_space(char[],int,int)>(r0, $i5, i0);

        if $i6 == i0 goto label2;

        $c7 = r0[$i6];

        $i13 = (int) $c7;

        if $i13 != 35 goto label2;

        i10 = i9;

        i9 = $i6;

        goto label5;

     label2:
        i9 = $i6 + 1;

        goto label1;

     label3:
        $i14 = (int) c4;

        if $i14 != 35 goto label4;

        i10 = i9;

        goto label5;

     label4:
        i9 = i9 + 1;

        goto label1;

     label5:
        if i9 == i0 goto label6;

        z1 = 1;

        r1.<org.mozilla.javascript.tools.idswitch.Main: int tag_value_start> = $i1;

        r1.<org.mozilla.javascript.tools.idswitch.Main: int tag_value_end> = i10;

        $i3 = i9 + 1;

        r1.<org.mozilla.javascript.tools.idswitch.Main: int tag_definition_end> = $i3;

     label6:
        if z1 == 0 goto label7;

        $i11 = i2;

        goto label8;

     label7:
        $i11 = 0;

     label8:
        return $i11;
    }

    private int get_tag_id(char[], int, int, boolean)
    {
        org.mozilla.javascript.tools.idswitch.Main r1;
        int i0, i1;
        char[] r0;
        boolean z0, $z1, $z2, $z3;

        r1 := @this: org.mozilla.javascript.tools.idswitch.Main;

        r0 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        if z0 == 0 goto label2;

        $z2 = staticinvoke <org.mozilla.javascript.tools.idswitch.Main: boolean equals(java.lang.String,char[],int,int)>("string_id_map", r0, i0, i1);

        if $z2 == 0 goto label1;

        return 1;

     label1:
        $z3 = staticinvoke <org.mozilla.javascript.tools.idswitch.Main: boolean equals(java.lang.String,char[],int,int)>("generated", r0, i0, i1);

        if $z3 == 0 goto label2;

        return 2;

     label2:
        $z1 = staticinvoke <org.mozilla.javascript.tools.idswitch.Main: boolean equals(java.lang.String,char[],int,int)>("string", r0, i0, i1);

        if $z1 == 0 goto label3;

        return 3;

     label3:
        return 0;
    }

    private void look_for_id_definitions(char[], int, int, boolean)
    {
        char $c6;
        org.mozilla.javascript.tools.idswitch.Main r1;
        int i0, i1, $i2, $i3, $i4, $i5, i7, i8, $i9;
        char[] r0;
        boolean z0;

        r1 := @this: org.mozilla.javascript.tools.idswitch.Main;

        r0 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        $i2 = staticinvoke <org.mozilla.javascript.tools.idswitch.Main: int skip_white_space(char[],int,int)>(r0, i0, i1);

        $i3 = staticinvoke <org.mozilla.javascript.tools.idswitch.Main: int skip_matched_prefix(java.lang.String,char[],int,int)>("Id_", r0, $i2, i1);

        i7 = $i3;

        if $i3 < 0 goto label2;

        $i4 = staticinvoke <org.mozilla.javascript.tools.idswitch.Main: int skip_name_char(char[],int,int)>(r0, $i3, i1);

        i8 = $i4;

        if $i3 == $i4 goto label2;

        $i5 = staticinvoke <org.mozilla.javascript.tools.idswitch.Main: int skip_white_space(char[],int,int)>(r0, $i4, i1);

        if $i5 == i1 goto label2;

        $c6 = r0[$i5];

        $i9 = (int) $c6;

        if $i9 != 61 goto label2;

        if z0 == 0 goto label1;

        i7 = r1.<org.mozilla.javascript.tools.idswitch.Main: int tag_value_start>;

        i8 = r1.<org.mozilla.javascript.tools.idswitch.Main: int tag_value_end>;

     label1:
        specialinvoke r1.<org.mozilla.javascript.tools.idswitch.Main: void add_id(char[],int,int,int,int)>(r0, $i2, $i4, i7, i8);

     label2:
        return;
    }

    private void add_id(char[], int, int, int, int)
    {
        org.mozilla.javascript.tools.idswitch.FileBody $r5;
        java.util.Vector $r6;
        org.mozilla.javascript.tools.idswitch.Main r4;
        int i0, i1, $i2, i3, i4, $i5, $i6;
        char[] r1;
        org.mozilla.javascript.tools.idswitch.IdValuePair $r3;
        java.lang.String $r0, $r2;

        r4 := @this: org.mozilla.javascript.tools.idswitch.Main;

        r1 := @parameter0: char[];

        i3 := @parameter1: int;

        i4 := @parameter2: int;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        $r0 = new java.lang.String;

        $i2 = i1 - i0;

        specialinvoke $r0.<java.lang.String: void <init>(char[],int,int)>(r1, i0, $i2);

        $r2 = new java.lang.String;

        $i5 = i4 - i3;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>(r1, i3, $i5);

        $r3 = new org.mozilla.javascript.tools.idswitch.IdValuePair;

        specialinvoke $r3.<org.mozilla.javascript.tools.idswitch.IdValuePair: void <init>(java.lang.String,java.lang.String)>($r0, $r2);

        $r5 = r4.<org.mozilla.javascript.tools.idswitch.Main: org.mozilla.javascript.tools.idswitch.FileBody body>;

        $i6 = virtualinvoke $r5.<org.mozilla.javascript.tools.idswitch.FileBody: int getLineNumber()>();

        virtualinvoke $r3.<org.mozilla.javascript.tools.idswitch.IdValuePair: void setLineNumber(int)>($i6);

        $r6 = r4.<org.mozilla.javascript.tools.idswitch.Main: java.util.Vector all_pairs>;

        virtualinvoke $r6.<java.util.Vector: void addElement(java.lang.Object)>($r3);

        return;
    }

    private static boolean is_white_space(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 == 32 goto label1;

        if i0 != 9 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private static int skip_white_space(char[], int, int)
    {
        int i0, i1, i3, $i4;
        char[] r0;
        char c2;
        boolean $z0;

        r0 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i3 = i0;

     label1:
        if i3 == i1 goto label3;

        c2 = r0[i3];

        $i4 = (int) c2;

        $z0 = staticinvoke <org.mozilla.javascript.tools.idswitch.Main: boolean is_white_space(int)>($i4);

        if $z0 != 0 goto label2;

        goto label3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return i3;
    }

    private static int skip_matched_prefix(java.lang.String, char[], int, int)
    {
        char $c4, $c5;
        int $i0, i1, i2, $i3, i6, i7, $i9, $i10, $i11, $i13;
        char[] r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: char[];

        i2 := @parameter2: int;

        i1 := @parameter3: int;

        $i9 = (int) -1;

        i6 = $i9;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i3 = i1 - i2;

        if $i0 > $i3 goto label3;

        i6 = i2;

        i7 = 0;

     label1:
        if i7 == $i0 goto label3;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i7);

        $c5 = r1[i6];

        $i10 = (int) $c4;

        $i11 = (int) $c5;

        if $i10 == $i11 goto label2;

        $i13 = (int) -1;

        i6 = $i13;

        goto label3;

     label2:
        i7 = i7 + 1;

        i6 = i6 + 1;

        goto label1;

     label3:
        return i6;
    }

    private static boolean equals(java.lang.String, char[], int, int)
    {
        char $c4, $c5;
        int $i0, i1, i2, $i3, i6, i7, $i8, $i9;
        char[] r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: char[];

        i2 := @parameter2: int;

        i1 := @parameter3: int;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i3 = i1 - i2;

        if $i0 != $i3 goto label4;

        i6 = i2;

        i7 = 0;

     label1:
        if i6 == i1 goto label3;

        $c4 = r1[i6];

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i7);

        $i8 = (int) $c4;

        $i9 = (int) $c5;

        if $i8 == $i9 goto label2;

        return 0;

     label2:
        i6 = i6 + 1;

        i7 = i7 + 1;

        goto label1;

     label3:
        return 1;

     label4:
        return 0;
    }

    private static int skip_name_char(char[], int, int)
    {
        char c2;
        int i0, i1, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        char[] r0;

        r0 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i3 = i0;

     label1:
        if i3 == i1 goto label6;

        c2 = r0[i3];

        $i4 = (int) c2;

        if 97 > $i4 goto label2;

        $i5 = (int) c2;

        if $i5 <= 122 goto label5;

     label2:
        $i6 = (int) c2;

        if 65 > $i6 goto label3;

        $i7 = (int) c2;

        if $i7 <= 90 goto label5;

     label3:
        $i8 = (int) c2;

        if 48 > $i8 goto label4;

        $i9 = (int) c2;

        if $i9 <= 57 goto label5;

     label4:
        $i10 = (int) c2;

        if $i10 == 95 goto label5;

        goto label6;

     label5:
        i3 = i3 + 1;

        goto label1;

     label6:
        return i3;
    }

    public static void main(java.lang.String[])
    {
        int $i0;
        java.lang.String[] r1;
        org.mozilla.javascript.tools.idswitch.Main $r0;

        r1 := @parameter0: java.lang.String[];

        $r0 = new org.mozilla.javascript.tools.idswitch.Main;

        specialinvoke $r0.<org.mozilla.javascript.tools.idswitch.Main: void <init>()>();

        $i0 = specialinvoke $r0.<org.mozilla.javascript.tools.idswitch.Main: int exec(java.lang.String[])>(r1);

        staticinvoke <java.lang.System: void exit(int)>($i0);

        return;
    }

    private int exec(java.lang.String[])
    {
        java.lang.String[] r3;
        org.mozilla.javascript.tools.ToolErrorReporter $r14;
        org.mozilla.javascript.tools.idswitch.Main r0;
        org.mozilla.javascript.tools.idswitch.CodePrinter $r5, $r6, $r15;
        int $i0, $i2, $i4, $i6, $i8;
        java.lang.String $r7, $r8, $r9, $r12, $r13;
        java.io.PrintStream $r2;
        org.mozilla.javascript.EvaluatorException $r10;
        java.io.IOException $r11;

        r0 := @this: org.mozilla.javascript.tools.idswitch.Main;

        r3 := @parameter0: java.lang.String[];

        $r14 = new org.mozilla.javascript.tools.ToolErrorReporter;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        specialinvoke $r14.<org.mozilla.javascript.tools.ToolErrorReporter: void <init>(boolean,java.io.PrintStream)>(1, $r2);

        r0.<org.mozilla.javascript.tools.idswitch.Main: org.mozilla.javascript.tools.ToolErrorReporter R> = $r14;

        $i0 = specialinvoke r0.<org.mozilla.javascript.tools.idswitch.Main: int process_options(java.lang.String[])>(r3);

        if $i0 != 0 goto label1;

        $r9 = staticinvoke <org.mozilla.javascript.tools.ToolErrorReporter: java.lang.String getMessage(java.lang.String)>("msg.idswitch.no_file_argument");

        specialinvoke r0.<org.mozilla.javascript.tools.idswitch.Main: void option_error(java.lang.String)>($r9);

        $i2 = (int) -1;

        return $i2;

     label1:
        if $i0 <= 1 goto label2;

        $r8 = staticinvoke <org.mozilla.javascript.tools.ToolErrorReporter: java.lang.String getMessage(java.lang.String)>("msg.idswitch.too_many_arguments");

        specialinvoke r0.<org.mozilla.javascript.tools.idswitch.Main: void option_error(java.lang.String)>($r8);

        $i4 = (int) -1;

        return $i4;

     label2:
        $r15 = new org.mozilla.javascript.tools.idswitch.CodePrinter;

        specialinvoke $r15.<org.mozilla.javascript.tools.idswitch.CodePrinter: void <init>()>();

        r0.<org.mozilla.javascript.tools.idswitch.Main: org.mozilla.javascript.tools.idswitch.CodePrinter P> = $r15;

        $r5 = r0.<org.mozilla.javascript.tools.idswitch.Main: org.mozilla.javascript.tools.idswitch.CodePrinter P>;

        virtualinvoke $r5.<org.mozilla.javascript.tools.idswitch.CodePrinter: void setIndentStep(int)>(4);

        $r6 = r0.<org.mozilla.javascript.tools.idswitch.Main: org.mozilla.javascript.tools.idswitch.CodePrinter P>;

        virtualinvoke $r6.<org.mozilla.javascript.tools.idswitch.CodePrinter: void setIndentTabSize(int)>(0);

     label3:
        $r7 = r3[0];

        virtualinvoke r0.<org.mozilla.javascript.tools.idswitch.Main: void process_file(java.lang.String)>($r7);

     label4:
        goto label7;

     label5:
        $r11 := @caughtexception;

        $r12 = virtualinvoke $r11.<java.io.IOException: java.lang.String toString()>();

        $r13 = staticinvoke <org.mozilla.javascript.tools.ToolErrorReporter: java.lang.String getMessage(java.lang.String,java.lang.String)>("msg.idswitch.io_error", $r12);

        specialinvoke r0.<org.mozilla.javascript.tools.idswitch.Main: void print_error(java.lang.String)>($r13);

        $i6 = (int) -1;

        return $i6;

     label6:
        $r10 := @caughtexception;

        $i8 = (int) -1;

        return $i8;

     label7:
        return 0;

        catch java.io.IOException from label3 to label4 with label5;
        catch org.mozilla.javascript.EvaluatorException from label3 to label4 with label6;
    }

    private int process_options(java.lang.String[])
    {
        java.lang.String[] r0;
        byte b6, b9, b10, b11;
        org.mozilla.javascript.tools.idswitch.Main r1;
        int i0, $i1, $i2, i7, i8, $i12, $i13, $i14;
        java.lang.String r2, $r3, $r4, $r5;
        boolean $z0, $z1, z2, z3;
        char $c3, $c4, $c5;

        r1 := @this: org.mozilla.javascript.tools.idswitch.Main;

        r0 := @parameter0: java.lang.String[];

        b6 = 1;

        b11 = 1;

        b10 = 1;

        b9 = 1;

        z2 = 0;

        z3 = 0;

        i0 = lengthof r0;

        i7 = 0;

     label01:
        if i7 == i0 goto label12;

        r2 = r0[i7];

        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i2 < 2 goto label11;

        $c3 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0);

        $i12 = (int) $c3;

        if $i12 != 45 goto label11;

        $c4 = virtualinvoke r2.<java.lang.String: char charAt(int)>(1);

        $i13 = (int) $c4;

        if $i13 != 45 goto label05;

        if $i2 != 2 goto label02;

        r0[i7] = null;

        goto label12;

     label02:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("--help");

        if $z0 == 0 goto label03;

        z2 = 1;

        goto label10;

     label03:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("--version");

        if $z1 == 0 goto label04;

        z3 = 1;

        goto label10;

     label04:
        $r5 = staticinvoke <org.mozilla.javascript.tools.ToolErrorReporter: java.lang.String getMessage(java.lang.String,java.lang.String)>("msg.idswitch.bad_option", r2);

        specialinvoke r1.<org.mozilla.javascript.tools.idswitch.Main: void option_error(java.lang.String)>($r5);

        b6 = -1;

        b11 = -1;

        b10 = -1;

        b9 = -1;

        goto label12;

     label05:
        i8 = 1;

     label06:
        if i8 == $i2 goto label10;

        $c5 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i8);

        $i14 = (int) $c5;

        lookupswitch($i14)
        {
            case 104: goto label07;
            default: goto label08;
        };

     label07:
        z2 = 1;

        goto label09;

     label08:
        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c5);

        $r4 = staticinvoke <org.mozilla.javascript.tools.ToolErrorReporter: java.lang.String getMessage(java.lang.String,java.lang.String)>("msg.idswitch.bad_option_char", $r3);

        specialinvoke r1.<org.mozilla.javascript.tools.idswitch.Main: void option_error(java.lang.String)>($r4);

        b6 = -1;

        b11 = -1;

        b10 = -1;

        b9 = -1;

        goto label12;

     label09:
        i8 = i8 + 1;

        goto label06;

     label10:
        r0[i7] = null;

     label11:
        i7 = i7 + 1;

        goto label01;

     label12:
        if b9 != 1 goto label14;

        if z2 == 0 goto label13;

        specialinvoke r1.<org.mozilla.javascript.tools.idswitch.Main: void show_usage()>();

        b6 = 0;

        b11 = 0;

        b10 = 0;

     label13:
        if z3 == 0 goto label14;

        specialinvoke r1.<org.mozilla.javascript.tools.idswitch.Main: void show_version()>();

        b6 = 0;

        b11 = 0;

        b10 = 0;

     label14:
        if b10 == 1 goto label15;

        staticinvoke <java.lang.System: void exit(int)>(b11);

     label15:
        $i1 = specialinvoke r1.<org.mozilla.javascript.tools.idswitch.Main: int remove_nulls(java.lang.String[])>(r0);

        return $i1;
    }

    private void show_usage()
    {
        java.io.PrintStream $r0, $r2;
        org.mozilla.javascript.tools.idswitch.Main r3;
        java.lang.String $r1;

        r3 := @this: org.mozilla.javascript.tools.idswitch.Main;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        $r1 = staticinvoke <org.mozilla.javascript.tools.ToolErrorReporter: java.lang.String getMessage(java.lang.String)>("msg.idswitch.usage");

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r1);

        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println()>();

        return;
    }

    private void show_version()
    {
        java.io.PrintStream $r0;
        java.lang.String $r1;
        org.mozilla.javascript.tools.idswitch.Main r2;

        r2 := @this: org.mozilla.javascript.tools.idswitch.Main;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        $r1 = staticinvoke <org.mozilla.javascript.tools.ToolErrorReporter: java.lang.String getMessage(java.lang.String)>("msg.idswitch.version");

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r1);

        return;
    }

    private void option_error(java.lang.String)
    {
        java.lang.String r1, $r2;
        org.mozilla.javascript.tools.idswitch.Main r0;

        r0 := @this: org.mozilla.javascript.tools.idswitch.Main;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.mozilla.javascript.tools.ToolErrorReporter: java.lang.String getMessage(java.lang.String,java.lang.String)>("msg.idswitch.bad_invocation", r1);

        specialinvoke r0.<org.mozilla.javascript.tools.idswitch.Main: void print_error(java.lang.String)>($r2);

        return;
    }

    private void print_error(java.lang.String)
    {
        java.io.PrintStream $r1;
        java.lang.String r0;
        org.mozilla.javascript.tools.idswitch.Main r2;

        r2 := @this: org.mozilla.javascript.tools.idswitch.Main;

        r0 := @parameter0: java.lang.String;

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(r0);

        return;
    }

    private int remove_nulls(java.lang.String[])
    {
        java.lang.String[] r0;
        org.mozilla.javascript.tools.idswitch.Main r3;
        int i0, i1, i2, i3;
        java.lang.String r1, $r2;

        r3 := @this: org.mozilla.javascript.tools.idswitch.Main;

        r0 := @parameter0: java.lang.String[];

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 == i0 goto label3;

        $r2 = r0[i1];

        if $r2 != null goto label2;

        goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        i2 = i1;

        if i1 == i0 goto label6;

        i3 = i1 + 1;

     label4:
        if i3 == i0 goto label6;

        r1 = r0[i3];

        if r1 == null goto label5;

        r0[i2] = r1;

        i2 = i2 + 1;

     label5:
        i3 = i3 + 1;

        goto label4;

     label6:
        return i2;
    }

    public static void <clinit>()
    {
        <org.mozilla.javascript.tools.idswitch.Main: int STRING_TAG> = 3;

        <org.mozilla.javascript.tools.idswitch.Main: int GENERATED_TAG> = 2;

        <org.mozilla.javascript.tools.idswitch.Main: int SWITCH_TAG> = 1;

        <org.mozilla.javascript.tools.idswitch.Main: int NORMAL_LINE> = 0;

        <org.mozilla.javascript.tools.idswitch.Main: java.lang.String STRING_TAG_STR> = "string";

        <org.mozilla.javascript.tools.idswitch.Main: java.lang.String GENERATED_TAG_STR> = "generated";

        <org.mozilla.javascript.tools.idswitch.Main: java.lang.String SWITCH_TAG_STR> = "string_id_map";

        <org.mozilla.javascript.tools.idswitch.Main: java.lang.String PROGRAM_NAME> = "Main";

        return;
    }
}
