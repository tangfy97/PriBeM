public class com.hp.hpl.jena.tdb.nodetable.NodeTableNative extends java.lang.Object implements com.hp.hpl.jena.tdb.nodetable.NodeTable
{
    protected com.hp.hpl.jena.tdb.base.objectfile.ObjectFile objects;
    protected com.hp.hpl.jena.tdb.index.Index nodeHashToId;
    private boolean syncNeeded;

    protected void <init>()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableNative r0;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableNative;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: boolean syncNeeded> = 0;

        return;
    }

    public void <init>(com.hp.hpl.jena.tdb.index.Index, com.hp.hpl.jena.tdb.base.objectfile.ObjectFile)
    {
        com.hp.hpl.jena.tdb.index.Index r1;
        com.hp.hpl.jena.tdb.nodetable.NodeTableNative r0;
        com.hp.hpl.jena.tdb.base.objectfile.ObjectFile r2;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableNative;

        r1 := @parameter0: com.hp.hpl.jena.tdb.index.Index;

        r2 := @parameter1: com.hp.hpl.jena.tdb.base.objectfile.ObjectFile;

        specialinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: void <init>()>();

        virtualinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: void init(com.hp.hpl.jena.tdb.index.Index,com.hp.hpl.jena.tdb.base.objectfile.ObjectFile)>(r1, r2);

        return;
    }

    protected void init(com.hp.hpl.jena.tdb.index.Index, com.hp.hpl.jena.tdb.base.objectfile.ObjectFile)
    {
        com.hp.hpl.jena.tdb.index.Index r1;
        com.hp.hpl.jena.tdb.nodetable.NodeTableNative r0;
        com.hp.hpl.jena.tdb.base.objectfile.ObjectFile r2;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableNative;

        r1 := @parameter0: com.hp.hpl.jena.tdb.index.Index;

        r2 := @parameter1: com.hp.hpl.jena.tdb.base.objectfile.ObjectFile;

        r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: com.hp.hpl.jena.tdb.index.Index nodeHashToId> = r1;

        r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: com.hp.hpl.jena.tdb.base.objectfile.ObjectFile objects> = r2;

        return;
    }

    public com.hp.hpl.jena.graph.Node getNodeForNodeId(com.hp.hpl.jena.tdb.store.NodeId)
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableNative r0;
        com.hp.hpl.jena.graph.Node $r2;
        com.hp.hpl.jena.tdb.store.NodeId r1;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableNative;

        r1 := @parameter0: com.hp.hpl.jena.tdb.store.NodeId;

        $r2 = specialinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: com.hp.hpl.jena.graph.Node _retrieveNodeByNodeId(com.hp.hpl.jena.tdb.store.NodeId)>(r1);

        return $r2;
    }

    public com.hp.hpl.jena.tdb.store.NodeId getNodeIdForNode(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableNative r0;
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.tdb.store.NodeId $r2;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableNative;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r2 = specialinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: com.hp.hpl.jena.tdb.store.NodeId _idForNode(com.hp.hpl.jena.graph.Node,boolean)>(r1, 0);

        return $r2;
    }

    public com.hp.hpl.jena.tdb.store.NodeId getAllocateNodeId(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableNative r0;
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.tdb.store.NodeId $r2;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableNative;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r2 = specialinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: com.hp.hpl.jena.tdb.store.NodeId _idForNode(com.hp.hpl.jena.graph.Node,boolean)>(r1, 1);

        return $r2;
    }

    private com.hp.hpl.jena.graph.Node _retrieveNodeByNodeId(com.hp.hpl.jena.tdb.store.NodeId)
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableNative r1;
        com.hp.hpl.jena.tdb.store.NodeId r0;
        com.hp.hpl.jena.graph.Node $r2;
        boolean $z0, $z1;

        r1 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableNative;

        r0 := @parameter0: com.hp.hpl.jena.tdb.store.NodeId;

        $z0 = staticinvoke <com.hp.hpl.jena.tdb.store.NodeId: boolean isDoesNotExist(com.hp.hpl.jena.tdb.store.NodeId)>(r0);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $z1 = staticinvoke <com.hp.hpl.jena.tdb.store.NodeId: boolean isAny(com.hp.hpl.jena.tdb.store.NodeId)>(r0);

        if $z1 == 0 goto label2;

        return null;

     label2:
        $r2 = specialinvoke r1.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: com.hp.hpl.jena.graph.Node readNodeFromTable(com.hp.hpl.jena.tdb.store.NodeId)>(r0);

        return $r2;
    }

    private com.hp.hpl.jena.tdb.store.NodeId _idForNode(com.hp.hpl.jena.graph.Node, boolean)
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableNative r2;
        com.hp.hpl.jena.tdb.store.NodeId $r3, $r4;
        com.hp.hpl.jena.graph.Node r0, $r1;
        boolean z0;

        r2 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableNative;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        z0 := @parameter1: boolean;

        $r1 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        if r0 != $r1 goto label1;

        $r4 = <com.hp.hpl.jena.tdb.store.NodeId: com.hp.hpl.jena.tdb.store.NodeId NodeIdAny>;

        return $r4;

     label1:
        $r3 = virtualinvoke r2.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: com.hp.hpl.jena.tdb.store.NodeId accessIndex(com.hp.hpl.jena.graph.Node,boolean)>(r0, z0);

        return $r3;
    }

    protected final com.hp.hpl.jena.tdb.store.NodeId accessIndex(com.hp.hpl.jena.graph.Node, boolean)
    {
        java.lang.Throwable $r18;
        byte[] $r5, $r12, $r16;
        com.hp.hpl.jena.tdb.store.Hash $r0;
        com.hp.hpl.jena.tdb.index.Index $r2, $r6, $r9, $r13;
        com.hp.hpl.jena.graph.Node r4;
        com.hp.hpl.jena.tdb.store.NodeId $r11, $r15, $r17;
        com.hp.hpl.jena.tdb.base.record.Record $r8, $r10;
        int $i0;
        boolean z0, $z1;
        com.hp.hpl.jena.tdb.TDBException $r14;
        com.hp.hpl.jena.tdb.nodetable.NodeTableNative r1;
        com.hp.hpl.jena.tdb.base.record.RecordFactory $r3, $r7;

        r1 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableNative;

        r4 := @parameter0: com.hp.hpl.jena.graph.Node;

        z0 := @parameter1: boolean;

        $r0 = new com.hp.hpl.jena.tdb.store.Hash;

        $r2 = r1.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: com.hp.hpl.jena.tdb.index.Index nodeHashToId>;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.tdb.index.Index: com.hp.hpl.jena.tdb.base.record.RecordFactory getRecordFactory()>();

        $i0 = virtualinvoke $r3.<com.hp.hpl.jena.tdb.base.record.RecordFactory: int keyLength()>();

        specialinvoke $r0.<com.hp.hpl.jena.tdb.store.Hash: void <init>(int)>($i0);

        staticinvoke <com.hp.hpl.jena.tdb.lib.NodeLib: void setHash(com.hp.hpl.jena.tdb.store.Hash,com.hp.hpl.jena.graph.Node)>($r0, r4);

        $r5 = virtualinvoke $r0.<com.hp.hpl.jena.tdb.store.Hash: byte[] getBytes()>();

        $r6 = r1.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: com.hp.hpl.jena.tdb.index.Index nodeHashToId>;

        $r7 = interfaceinvoke $r6.<com.hp.hpl.jena.tdb.index.Index: com.hp.hpl.jena.tdb.base.record.RecordFactory getRecordFactory()>();

        $r8 = virtualinvoke $r7.<com.hp.hpl.jena.tdb.base.record.RecordFactory: com.hp.hpl.jena.tdb.base.record.Record create(byte[])>($r5);

        entermonitor r1;

     label1:
        $r9 = r1.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: com.hp.hpl.jena.tdb.index.Index nodeHashToId>;

        $r10 = interfaceinvoke $r9.<com.hp.hpl.jena.tdb.index.Index: com.hp.hpl.jena.tdb.base.record.Record find(com.hp.hpl.jena.tdb.base.record.Record)>($r8);

        if $r10 == null goto label3;

        $r16 = virtualinvoke $r10.<com.hp.hpl.jena.tdb.base.record.Record: byte[] getValue()>();

        $r17 = staticinvoke <com.hp.hpl.jena.tdb.store.NodeId: com.hp.hpl.jena.tdb.store.NodeId create(byte[],int)>($r16, 0);

        exitmonitor r1;

     label2:
        return $r17;

     label3:
        if z0 != 0 goto label5;

        $r15 = <com.hp.hpl.jena.tdb.store.NodeId: com.hp.hpl.jena.tdb.store.NodeId NodeDoesNotExist>;

        exitmonitor r1;

     label4:
        return $r15;

     label5:
        $r11 = specialinvoke r1.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: com.hp.hpl.jena.tdb.store.NodeId writeNodeToTable(com.hp.hpl.jena.graph.Node)>(r4);

        $r12 = virtualinvoke $r8.<com.hp.hpl.jena.tdb.base.record.Record: byte[] getValue()>();

        virtualinvoke $r11.<com.hp.hpl.jena.tdb.store.NodeId: void toBytes(byte[],int)>($r12, 0);

        $r13 = r1.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: com.hp.hpl.jena.tdb.index.Index nodeHashToId>;

        $z1 = interfaceinvoke $r13.<com.hp.hpl.jena.tdb.index.Index: boolean add(com.hp.hpl.jena.tdb.base.record.Record)>($r8);

        if $z1 != 0 goto label6;

        $r14 = new com.hp.hpl.jena.tdb.TDBException;

        specialinvoke $r14.<com.hp.hpl.jena.tdb.TDBException: void <init>(java.lang.String)>("NodeTableBase::nodeToId - record mysteriously appeared");

        throw $r14;

     label6:
        exitmonitor r1;

     label7:
        return $r11;

     label8:
        $r18 := @caughtexception;

        exitmonitor r1;

     label9:
        throw $r18;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    private final com.hp.hpl.jena.tdb.store.NodeId writeNodeToTable(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableNative r0;
        com.hp.hpl.jena.tdb.base.objectfile.ObjectFile $r2;
        com.hp.hpl.jena.tdb.store.NodeId $r3;
        long $l0;
        com.hp.hpl.jena.graph.Node r1;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableNative;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: boolean syncNeeded> = 1;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: com.hp.hpl.jena.tdb.base.objectfile.ObjectFile getObjects()>();

        $l0 = staticinvoke <com.hp.hpl.jena.tdb.lib.NodeLib: long encodeStore(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.tdb.base.objectfile.ObjectFile)>(r1, $r2);

        $r3 = staticinvoke <com.hp.hpl.jena.tdb.store.NodeId: com.hp.hpl.jena.tdb.store.NodeId create(long)>($l0);

        return $r3;
    }

    private final com.hp.hpl.jena.graph.Node readNodeFromTable(com.hp.hpl.jena.tdb.store.NodeId)
    {
        java.lang.Throwable $r5;
        com.hp.hpl.jena.tdb.base.objectfile.ObjectFile $r2, $r3;
        long $l0, $l1, $l3;
        com.hp.hpl.jena.graph.Node $r4;
        com.hp.hpl.jena.tdb.nodetable.NodeTableNative r0;
        byte $b2;
        com.hp.hpl.jena.tdb.store.NodeId r1;
        int $i4;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableNative;

        r1 := @parameter0: com.hp.hpl.jena.tdb.store.NodeId;

        entermonitor r0;

     label1:
        $l0 = virtualinvoke r1.<com.hp.hpl.jena.tdb.store.NodeId: long getId()>();

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: com.hp.hpl.jena.tdb.base.objectfile.ObjectFile getObjects()>();

        $l1 = interfaceinvoke $r2.<com.hp.hpl.jena.tdb.base.objectfile.ObjectFile: long length()>();

        $b2 = $l0 cmp $l1;

        $i4 = (int) $b2;

        if $i4 < 0 goto label3;

        exitmonitor r0;

     label2:
        return null;

     label3:
        $l3 = virtualinvoke r1.<com.hp.hpl.jena.tdb.store.NodeId: long getId()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: com.hp.hpl.jena.tdb.base.objectfile.ObjectFile getObjects()>();

        $r4 = staticinvoke <com.hp.hpl.jena.tdb.lib.NodeLib: com.hp.hpl.jena.graph.Node fetchDecode(long,com.hp.hpl.jena.tdb.base.objectfile.ObjectFile)>($l3, $r3);

        exitmonitor r0;

     label4:
        return $r4;

     label5:
        $r5 := @caughtexception;

        exitmonitor r0;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public synchronized void close()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableNative r0;
        com.hp.hpl.jena.tdb.base.objectfile.ObjectFile $r2, $r3;
        com.hp.hpl.jena.tdb.index.Index $r1, $r4;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableNative;

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: com.hp.hpl.jena.tdb.index.Index nodeHashToId>;

        if $r1 == null goto label1;

        $r4 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: com.hp.hpl.jena.tdb.index.Index nodeHashToId>;

        interfaceinvoke $r4.<com.hp.hpl.jena.tdb.index.Index: void close()>();

        r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: com.hp.hpl.jena.tdb.index.Index nodeHashToId> = null;

     label1:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: com.hp.hpl.jena.tdb.base.objectfile.ObjectFile getObjects()>();

        if $r2 == null goto label2;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: com.hp.hpl.jena.tdb.base.objectfile.ObjectFile getObjects()>();

        interfaceinvoke $r3.<com.hp.hpl.jena.tdb.base.objectfile.ObjectFile: void close()>();

        r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: com.hp.hpl.jena.tdb.base.objectfile.ObjectFile objects> = null;

     label2:
        return;
    }

    public com.hp.hpl.jena.tdb.store.NodeId allocOffset()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableNative r0;
        com.hp.hpl.jena.tdb.base.objectfile.ObjectFile $r1;
        com.hp.hpl.jena.tdb.store.NodeId $r2;
        long $l0;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableNative;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: com.hp.hpl.jena.tdb.base.objectfile.ObjectFile getObjects()>();

        $l0 = interfaceinvoke $r1.<com.hp.hpl.jena.tdb.base.objectfile.ObjectFile: long length()>();

        $r2 = staticinvoke <com.hp.hpl.jena.tdb.store.NodeId: com.hp.hpl.jena.tdb.store.NodeId create(long)>($l0);

        return $r2;
    }

    public java.util.Iterator all()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableNative r0;
        java.util.Iterator $r1;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableNative;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: java.util.Iterator all2()>();

        return $r1;
    }

    private java.util.Iterator all1()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableNative r0;
        java.util.Iterator $r2, $r4;
        com.hp.hpl.jena.tdb.index.Index $r1;
        com.hp.hpl.jena.tdb.nodetable.NodeTableNative$1 $r3;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableNative;

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: com.hp.hpl.jena.tdb.index.Index nodeHashToId>;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.tdb.index.Index: java.util.Iterator iterator()>();

        $r3 = new com.hp.hpl.jena.tdb.nodetable.NodeTableNative$1;

        specialinvoke $r3.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative$1: void <init>(com.hp.hpl.jena.tdb.nodetable.NodeTableNative)>(r0);

        $r4 = staticinvoke <org.apache.jena.atlas.iterator.Iter: java.util.Iterator map(java.util.Iterator,org.apache.jena.atlas.iterator.Transform)>($r2, $r3);

        return $r4;
    }

    private java.util.Iterator all2()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableNative r0;
        java.util.Iterator $r2, $r4;
        com.hp.hpl.jena.tdb.base.objectfile.ObjectFile $r1;
        com.hp.hpl.jena.tdb.nodetable.NodeTableNative$2 $r3;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableNative;

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: com.hp.hpl.jena.tdb.base.objectfile.ObjectFile objects>;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.tdb.base.objectfile.ObjectFile: java.util.Iterator all()>();

        $r3 = new com.hp.hpl.jena.tdb.nodetable.NodeTableNative$2;

        specialinvoke $r3.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative$2: void <init>(com.hp.hpl.jena.tdb.nodetable.NodeTableNative)>(r0);

        $r4 = staticinvoke <org.apache.jena.atlas.iterator.Iter: java.util.Iterator map(java.util.Iterator,org.apache.jena.atlas.iterator.Transform)>($r2, $r3);

        return $r4;
    }

    public void sync()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableNative r0;
        com.hp.hpl.jena.tdb.base.objectfile.ObjectFile $r2, $r3;
        com.hp.hpl.jena.tdb.index.Index $r1, $r4;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableNative;

        $z0 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: boolean syncNeeded>;

        if $z0 == 0 goto label3;

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: com.hp.hpl.jena.tdb.index.Index nodeHashToId>;

        if $r1 == null goto label1;

        $r4 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: com.hp.hpl.jena.tdb.index.Index nodeHashToId>;

        interfaceinvoke $r4.<com.hp.hpl.jena.tdb.index.Index: void sync()>();

     label1:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: com.hp.hpl.jena.tdb.base.objectfile.ObjectFile getObjects()>();

        if $r2 == null goto label2;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: com.hp.hpl.jena.tdb.base.objectfile.ObjectFile getObjects()>();

        interfaceinvoke $r3.<com.hp.hpl.jena.tdb.base.objectfile.ObjectFile: void sync()>();

     label2:
        r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: boolean syncNeeded> = 0;

     label3:
        return;
    }

    public com.hp.hpl.jena.tdb.base.objectfile.ObjectFile getObjects()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableNative r0;
        com.hp.hpl.jena.tdb.base.objectfile.ObjectFile $r1;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableNative;

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: com.hp.hpl.jena.tdb.base.objectfile.ObjectFile objects>;

        return $r1;
    }

    public java.lang.String toString()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableNative r0;
        java.lang.String $r2;
        com.hp.hpl.jena.tdb.base.objectfile.ObjectFile $r1;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableNative;

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: com.hp.hpl.jena.tdb.base.objectfile.ObjectFile objects>;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.tdb.base.objectfile.ObjectFile: java.lang.String getLabel()>();

        return $r2;
    }

    public boolean isEmpty()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableNative r0;
        com.hp.hpl.jena.tdb.base.objectfile.ObjectFile $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableNative;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: com.hp.hpl.jena.tdb.base.objectfile.ObjectFile getObjects()>();

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.tdb.base.objectfile.ObjectFile: boolean isEmpty()>();

        return $z0;
    }
}
