final class com.mycila.inject.internal.guava.collect.BstInOrderPath$1 extends java.lang.Object implements com.mycila.inject.internal.guava.collect.BstPathFactory
{

    void <init>()
    {
        com.mycila.inject.internal.guava.collect.BstInOrderPath$1 r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.BstInOrderPath$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.mycila.inject.internal.guava.collect.BstInOrderPath extension(com.mycila.inject.internal.guava.collect.BstInOrderPath, com.mycila.inject.internal.guava.collect.BstSide)
    {
        com.mycila.inject.internal.guava.collect.BstInOrderPath$1 r3;
        com.mycila.inject.internal.guava.collect.BstSide r1;
        com.mycila.inject.internal.guava.collect.BstInOrderPath r0, $r2;

        r3 := @this: com.mycila.inject.internal.guava.collect.BstInOrderPath$1;

        r0 := @parameter0: com.mycila.inject.internal.guava.collect.BstInOrderPath;

        r1 := @parameter1: com.mycila.inject.internal.guava.collect.BstSide;

        $r2 = staticinvoke <com.mycila.inject.internal.guava.collect.BstInOrderPath: com.mycila.inject.internal.guava.collect.BstInOrderPath access$000(com.mycila.inject.internal.guava.collect.BstInOrderPath,com.mycila.inject.internal.guava.collect.BstSide)>(r0, r1);

        return $r2;
    }

    public com.mycila.inject.internal.guava.collect.BstInOrderPath initialPath(com.mycila.inject.internal.guava.collect.BstNode)
    {
        com.mycila.inject.internal.guava.collect.BstInOrderPath $r0;
        com.mycila.inject.internal.guava.collect.BstInOrderPath$1 r2;
        com.mycila.inject.internal.guava.collect.BstNode r1;

        r2 := @this: com.mycila.inject.internal.guava.collect.BstInOrderPath$1;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.BstNode;

        $r0 = new com.mycila.inject.internal.guava.collect.BstInOrderPath;

        specialinvoke $r0.<com.mycila.inject.internal.guava.collect.BstInOrderPath: void <init>(com.mycila.inject.internal.guava.collect.BstNode,com.mycila.inject.internal.guava.collect.BstSide,com.mycila.inject.internal.guava.collect.BstInOrderPath,com.mycila.inject.internal.guava.collect.BstInOrderPath$1)>(r1, null, null, null);

        return $r0;
    }

    public volatile com.mycila.inject.internal.guava.collect.BstPath initialPath(com.mycila.inject.internal.guava.collect.BstNode)
    {
        com.mycila.inject.internal.guava.collect.BstInOrderPath $r2;
        com.mycila.inject.internal.guava.collect.BstInOrderPath$1 r0;
        com.mycila.inject.internal.guava.collect.BstNode r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.BstInOrderPath$1;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.BstNode;

        $r2 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.BstInOrderPath$1: com.mycila.inject.internal.guava.collect.BstInOrderPath initialPath(com.mycila.inject.internal.guava.collect.BstNode)>(r1);

        return $r2;
    }

    public volatile com.mycila.inject.internal.guava.collect.BstPath extension(com.mycila.inject.internal.guava.collect.BstPath, com.mycila.inject.internal.guava.collect.BstSide)
    {
        com.mycila.inject.internal.guava.collect.BstInOrderPath$1 r0;
        com.mycila.inject.internal.guava.collect.BstSide r2;
        com.mycila.inject.internal.guava.collect.BstPath r1;
        com.mycila.inject.internal.guava.collect.BstInOrderPath $r3, $r4;

        r0 := @this: com.mycila.inject.internal.guava.collect.BstInOrderPath$1;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.BstPath;

        r2 := @parameter1: com.mycila.inject.internal.guava.collect.BstSide;

        $r3 = (com.mycila.inject.internal.guava.collect.BstInOrderPath) r1;

        $r4 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.BstInOrderPath$1: com.mycila.inject.internal.guava.collect.BstInOrderPath extension(com.mycila.inject.internal.guava.collect.BstInOrderPath,com.mycila.inject.internal.guava.collect.BstSide)>($r3, r2);

        return $r4;
    }
}
