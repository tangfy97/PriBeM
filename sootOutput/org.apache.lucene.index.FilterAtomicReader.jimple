public class org.apache.lucene.index.FilterAtomicReader extends org.apache.lucene.index.AtomicReader
{
    protected final org.apache.lucene.index.AtomicReader in;

    public void <init>(org.apache.lucene.index.AtomicReader)
    {
        org.apache.lucene.index.FilterAtomicReader r0;
        org.apache.lucene.index.AtomicReader r1;

        r0 := @this: org.apache.lucene.index.FilterAtomicReader;

        r1 := @parameter0: org.apache.lucene.index.AtomicReader;

        specialinvoke r0.<org.apache.lucene.index.AtomicReader: void <init>()>();

        r0.<org.apache.lucene.index.FilterAtomicReader: org.apache.lucene.index.AtomicReader in> = r1;

        virtualinvoke r1.<org.apache.lucene.index.AtomicReader: void registerParentReader(org.apache.lucene.index.IndexReader)>(r0);

        return;
    }

    public org.apache.lucene.util.Bits getLiveDocs()
    {
        org.apache.lucene.index.FilterAtomicReader r0;
        org.apache.lucene.util.Bits $r2;
        org.apache.lucene.index.AtomicReader $r1;

        r0 := @this: org.apache.lucene.index.FilterAtomicReader;

        virtualinvoke r0.<org.apache.lucene.index.FilterAtomicReader: void ensureOpen()>();

        $r1 = r0.<org.apache.lucene.index.FilterAtomicReader: org.apache.lucene.index.AtomicReader in>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.index.AtomicReader: org.apache.lucene.util.Bits getLiveDocs()>();

        return $r2;
    }

    public org.apache.lucene.index.FieldInfos getFieldInfos()
    {
        org.apache.lucene.index.FilterAtomicReader r0;
        org.apache.lucene.index.FieldInfos $r2;
        org.apache.lucene.index.AtomicReader $r1;

        r0 := @this: org.apache.lucene.index.FilterAtomicReader;

        $r1 = r0.<org.apache.lucene.index.FilterAtomicReader: org.apache.lucene.index.AtomicReader in>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.FieldInfos getFieldInfos()>();

        return $r2;
    }

    public org.apache.lucene.index.Fields getTermVectors(int) throws java.io.IOException
    {
        int i0;
        org.apache.lucene.index.Fields $r2;
        org.apache.lucene.index.FilterAtomicReader r0;
        org.apache.lucene.index.AtomicReader $r1;

        r0 := @this: org.apache.lucene.index.FilterAtomicReader;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.lucene.index.FilterAtomicReader: void ensureOpen()>();

        $r1 = r0.<org.apache.lucene.index.FilterAtomicReader: org.apache.lucene.index.AtomicReader in>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.Fields getTermVectors(int)>(i0);

        return $r2;
    }

    public int numDocs()
    {
        int $i0;
        org.apache.lucene.index.FilterAtomicReader r0;
        org.apache.lucene.index.AtomicReader $r1;

        r0 := @this: org.apache.lucene.index.FilterAtomicReader;

        $r1 = r0.<org.apache.lucene.index.FilterAtomicReader: org.apache.lucene.index.AtomicReader in>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.index.AtomicReader: int numDocs()>();

        return $i0;
    }

    public int maxDoc()
    {
        int $i0;
        org.apache.lucene.index.FilterAtomicReader r0;
        org.apache.lucene.index.AtomicReader $r1;

        r0 := @this: org.apache.lucene.index.FilterAtomicReader;

        $r1 = r0.<org.apache.lucene.index.FilterAtomicReader: org.apache.lucene.index.AtomicReader in>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.index.AtomicReader: int maxDoc()>();

        return $i0;
    }

    public void document(int, org.apache.lucene.index.StoredFieldVisitor) throws java.io.IOException
    {
        int i0;
        org.apache.lucene.index.StoredFieldVisitor r1;
        org.apache.lucene.index.FilterAtomicReader r0;
        org.apache.lucene.index.AtomicReader $r2;

        r0 := @this: org.apache.lucene.index.FilterAtomicReader;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.lucene.index.StoredFieldVisitor;

        virtualinvoke r0.<org.apache.lucene.index.FilterAtomicReader: void ensureOpen()>();

        $r2 = r0.<org.apache.lucene.index.FilterAtomicReader: org.apache.lucene.index.AtomicReader in>;

        virtualinvoke $r2.<org.apache.lucene.index.AtomicReader: void document(int,org.apache.lucene.index.StoredFieldVisitor)>(i0, r1);

        return;
    }

    protected void doClose() throws java.io.IOException
    {
        org.apache.lucene.index.FilterAtomicReader r0;
        org.apache.lucene.index.AtomicReader $r1;

        r0 := @this: org.apache.lucene.index.FilterAtomicReader;

        $r1 = r0.<org.apache.lucene.index.FilterAtomicReader: org.apache.lucene.index.AtomicReader in>;

        virtualinvoke $r1.<org.apache.lucene.index.AtomicReader: void close()>();

        return;
    }

    public org.apache.lucene.index.Fields fields() throws java.io.IOException
    {
        org.apache.lucene.index.Fields $r2;
        org.apache.lucene.index.FilterAtomicReader r0;
        org.apache.lucene.index.AtomicReader $r1;

        r0 := @this: org.apache.lucene.index.FilterAtomicReader;

        virtualinvoke r0.<org.apache.lucene.index.FilterAtomicReader: void ensureOpen()>();

        $r1 = r0.<org.apache.lucene.index.FilterAtomicReader: org.apache.lucene.index.AtomicReader in>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.Fields fields()>();

        return $r2;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0;
        org.apache.lucene.index.FilterAtomicReader r1;
        java.lang.String $r3;
        org.apache.lucene.index.AtomicReader $r2;

        r1 := @this: org.apache.lucene.index.FilterAtomicReader;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("FilterAtomicReader(");

        $r2 = r1.<org.apache.lucene.index.FilterAtomicReader: org.apache.lucene.index.AtomicReader in>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public org.apache.lucene.index.NumericDocValues getNumericDocValues(java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.index.NumericDocValues $r3;
        org.apache.lucene.index.FilterAtomicReader r0;
        java.lang.String r1;
        org.apache.lucene.index.AtomicReader $r2;

        r0 := @this: org.apache.lucene.index.FilterAtomicReader;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.lucene.index.FilterAtomicReader: void ensureOpen()>();

        $r2 = r0.<org.apache.lucene.index.FilterAtomicReader: org.apache.lucene.index.AtomicReader in>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.NumericDocValues getNumericDocValues(java.lang.String)>(r1);

        return $r3;
    }

    public org.apache.lucene.index.BinaryDocValues getBinaryDocValues(java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.index.FilterAtomicReader r0;
        java.lang.String r1;
        org.apache.lucene.index.BinaryDocValues $r3;
        org.apache.lucene.index.AtomicReader $r2;

        r0 := @this: org.apache.lucene.index.FilterAtomicReader;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.lucene.index.FilterAtomicReader: void ensureOpen()>();

        $r2 = r0.<org.apache.lucene.index.FilterAtomicReader: org.apache.lucene.index.AtomicReader in>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.BinaryDocValues getBinaryDocValues(java.lang.String)>(r1);

        return $r3;
    }

    public org.apache.lucene.index.SortedDocValues getSortedDocValues(java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.index.FilterAtomicReader r0;
        java.lang.String r1;
        org.apache.lucene.index.SortedDocValues $r3;
        org.apache.lucene.index.AtomicReader $r2;

        r0 := @this: org.apache.lucene.index.FilterAtomicReader;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.lucene.index.FilterAtomicReader: void ensureOpen()>();

        $r2 = r0.<org.apache.lucene.index.FilterAtomicReader: org.apache.lucene.index.AtomicReader in>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.SortedDocValues getSortedDocValues(java.lang.String)>(r1);

        return $r3;
    }

    public org.apache.lucene.index.SortedSetDocValues getSortedSetDocValues(java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.index.SortedSetDocValues $r3;
        org.apache.lucene.index.FilterAtomicReader r0;
        java.lang.String r1;
        org.apache.lucene.index.AtomicReader $r2;

        r0 := @this: org.apache.lucene.index.FilterAtomicReader;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.lucene.index.FilterAtomicReader: void ensureOpen()>();

        $r2 = r0.<org.apache.lucene.index.FilterAtomicReader: org.apache.lucene.index.AtomicReader in>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.SortedSetDocValues getSortedSetDocValues(java.lang.String)>(r1);

        return $r3;
    }

    public org.apache.lucene.index.NumericDocValues getNormValues(java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.index.NumericDocValues $r3;
        org.apache.lucene.index.FilterAtomicReader r0;
        java.lang.String r1;
        org.apache.lucene.index.AtomicReader $r2;

        r0 := @this: org.apache.lucene.index.FilterAtomicReader;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.lucene.index.FilterAtomicReader: void ensureOpen()>();

        $r2 = r0.<org.apache.lucene.index.FilterAtomicReader: org.apache.lucene.index.AtomicReader in>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.NumericDocValues getNormValues(java.lang.String)>(r1);

        return $r3;
    }
}
