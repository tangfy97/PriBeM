public class com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB extends java.lang.Object implements com.hp.hpl.jena.sparql.core.DatasetPrefixStorage
{
    static final org.apache.jena.atlas.lib.ColumnMap colMap;
    static final com.hp.hpl.jena.tdb.base.record.RecordFactory factory;
    static final java.lang.String unamedGraphURI;
    private final com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable;

    public static com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB create(com.hp.hpl.jena.tdb.base.file.Location, com.hp.hpl.jena.tdb.sys.DatasetControl)
    {
        com.hp.hpl.jena.tdb.index.IndexBuilder $r0;
        com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB $r3;
        com.hp.hpl.jena.tdb.sys.DatasetControl r2;
        com.hp.hpl.jena.tdb.base.file.Location r1;

        r1 := @parameter0: com.hp.hpl.jena.tdb.base.file.Location;

        r2 := @parameter1: com.hp.hpl.jena.tdb.sys.DatasetControl;

        $r0 = staticinvoke <com.hp.hpl.jena.tdb.index.IndexBuilder: com.hp.hpl.jena.tdb.index.IndexBuilder get()>();

        $r3 = staticinvoke <com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB: com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB create(com.hp.hpl.jena.tdb.index.IndexBuilder,com.hp.hpl.jena.tdb.base.file.Location,com.hp.hpl.jena.tdb.sys.DatasetControl)>($r0, r1, r2);

        return $r3;
    }

    public static com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB create(com.hp.hpl.jena.tdb.index.IndexBuilder, com.hp.hpl.jena.tdb.base.file.Location, com.hp.hpl.jena.tdb.sys.DatasetControl)
    {
        com.hp.hpl.jena.tdb.index.IndexBuilder r1;
        com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB $r0;
        com.hp.hpl.jena.tdb.sys.DatasetControl r3;
        com.hp.hpl.jena.tdb.base.file.Location r2;

        r1 := @parameter0: com.hp.hpl.jena.tdb.index.IndexBuilder;

        r2 := @parameter1: com.hp.hpl.jena.tdb.base.file.Location;

        r3 := @parameter2: com.hp.hpl.jena.tdb.sys.DatasetControl;

        $r0 = new com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB: void <init>(com.hp.hpl.jena.tdb.index.IndexBuilder,com.hp.hpl.jena.tdb.base.file.Location,com.hp.hpl.jena.tdb.sys.DatasetControl)>(r1, r2, r3);

        return $r0;
    }

    private void <init>(com.hp.hpl.jena.tdb.index.IndexBuilder, com.hp.hpl.jena.tdb.base.file.Location, com.hp.hpl.jena.tdb.sys.DatasetControl)
    {
        com.hp.hpl.jena.tdb.index.TupleIndex[] $r8;
        com.hp.hpl.jena.tdb.base.file.Location r1;
        com.hp.hpl.jena.tdb.index.RangeIndex $r7;
        com.hp.hpl.jena.tdb.index.IndexBuilder r3;
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r9;
        com.hp.hpl.jena.tdb.base.file.FileSet r15, r16, r17, $r18, $r20, $r21;
        int $i1, $i3, $i5;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTableConcrete $r22;
        com.hp.hpl.jena.tdb.index.TupleIndexRecord $r19;
        com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB r0;
        com.hp.hpl.jena.tdb.sys.DatasetControl r11;
        com.hp.hpl.jena.tdb.base.record.RecordFactory $r4, $r6;
        org.apache.jena.atlas.lib.ColumnMap $r5;

        r0 := @this: com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB;

        r3 := @parameter0: com.hp.hpl.jena.tdb.index.IndexBuilder;

        r1 := @parameter1: com.hp.hpl.jena.tdb.base.file.Location;

        r11 := @parameter2: com.hp.hpl.jena.tdb.sys.DatasetControl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r15 = null;

        if r1 == null goto label1;

        $r18 = new com.hp.hpl.jena.tdb.base.file.FileSet;

        specialinvoke $r18.<com.hp.hpl.jena.tdb.base.file.FileSet: void <init>(com.hp.hpl.jena.tdb.base.file.Location,java.lang.String)>(r1, "prefixIdx");

        r15 = $r18;

     label1:
        $r19 = new com.hp.hpl.jena.tdb.index.TupleIndexRecord;

        $r5 = <com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB: org.apache.jena.atlas.lib.ColumnMap colMap>;

        $r6 = <com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB: com.hp.hpl.jena.tdb.base.record.RecordFactory factory>;

        $r4 = <com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB: com.hp.hpl.jena.tdb.base.record.RecordFactory factory>;

        $r7 = virtualinvoke r3.<com.hp.hpl.jena.tdb.index.IndexBuilder: com.hp.hpl.jena.tdb.index.RangeIndex newRangeIndex(com.hp.hpl.jena.tdb.base.file.FileSet,com.hp.hpl.jena.tdb.base.record.RecordFactory)>(r15, $r4);

        specialinvoke $r19.<com.hp.hpl.jena.tdb.index.TupleIndexRecord: void <init>(int,org.apache.jena.atlas.lib.ColumnMap,java.lang.String,com.hp.hpl.jena.tdb.base.record.RecordFactory,com.hp.hpl.jena.tdb.index.RangeIndex)>(3, $r5, "GPU", $r6, $r7);

        $r8 = newarray (com.hp.hpl.jena.tdb.index.TupleIndex)[1];

        $r8[0] = $r19;

        r16 = null;

        if r1 == null goto label2;

        $r20 = new com.hp.hpl.jena.tdb.base.file.FileSet;

        specialinvoke $r20.<com.hp.hpl.jena.tdb.base.file.FileSet: void <init>(com.hp.hpl.jena.tdb.base.file.Location,java.lang.String)>(r1, "prefix2id");

        r16 = $r20;

     label2:
        r17 = null;

        if r1 == null goto label3;

        $r21 = new com.hp.hpl.jena.tdb.base.file.FileSet;

        specialinvoke $r21.<com.hp.hpl.jena.tdb.base.file.FileSet: void <init>(com.hp.hpl.jena.tdb.base.file.Location,java.lang.String)>(r1, "prefixes");

        r17 = $r21;

     label3:
        $i1 = (int) -1;

        $i3 = (int) -1;

        $i5 = (int) -1;

        $r9 = staticinvoke <com.hp.hpl.jena.tdb.nodetable.NodeTableFactory: com.hp.hpl.jena.tdb.nodetable.NodeTable create(com.hp.hpl.jena.tdb.index.IndexBuilder,com.hp.hpl.jena.tdb.base.file.FileSet,com.hp.hpl.jena.tdb.base.file.FileSet,int,int,int)>(r3, r17, r16, $i1, $i3, $i5);

        $r22 = new com.hp.hpl.jena.tdb.nodetable.NodeTupleTableConcrete;

        specialinvoke $r22.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableConcrete: void <init>(int,com.hp.hpl.jena.tdb.index.TupleIndex[],com.hp.hpl.jena.tdb.nodetable.NodeTable,com.hp.hpl.jena.tdb.sys.DatasetControl)>(3, $r8, $r9, r11);

        r0.<com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable> = $r22;

        return;
    }

    public void <init>(com.hp.hpl.jena.tdb.index.TupleIndex[], com.hp.hpl.jena.tdb.nodetable.NodeTable, com.hp.hpl.jena.tdb.sys.DatasetControl)
    {
        com.hp.hpl.jena.tdb.index.TupleIndex[] r2;
        com.hp.hpl.jena.tdb.nodetable.NodeTable r3;
        com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB r0;
        com.hp.hpl.jena.tdb.sys.DatasetControl r4;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTableConcrete $r1;

        r0 := @this: com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB;

        r2 := @parameter0: com.hp.hpl.jena.tdb.index.TupleIndex[];

        r3 := @parameter1: com.hp.hpl.jena.tdb.nodetable.NodeTable;

        r4 := @parameter2: com.hp.hpl.jena.tdb.sys.DatasetControl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.hp.hpl.jena.tdb.nodetable.NodeTupleTableConcrete;

        specialinvoke $r1.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableConcrete: void <init>(int,com.hp.hpl.jena.tdb.index.TupleIndex[],com.hp.hpl.jena.tdb.nodetable.NodeTable,com.hp.hpl.jena.tdb.sys.DatasetControl)>(3, r2, r3, r4);

        r0.<com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable> = $r1;

        return;
    }

    private void <init>()
    {
        com.hp.hpl.jena.tdb.index.IndexBuilder $r1;
        com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB r0;
        com.hp.hpl.jena.tdb.base.file.Location $r2;
        com.hp.hpl.jena.tdb.sys.DatasetControlMRSW $r3;

        r0 := @this: com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB;

        $r1 = staticinvoke <com.hp.hpl.jena.tdb.index.IndexBuilder: com.hp.hpl.jena.tdb.index.IndexBuilder mem()>();

        $r2 = staticinvoke <com.hp.hpl.jena.tdb.base.file.Location: com.hp.hpl.jena.tdb.base.file.Location mem()>();

        $r3 = new com.hp.hpl.jena.tdb.sys.DatasetControlMRSW;

        specialinvoke $r3.<com.hp.hpl.jena.tdb.sys.DatasetControlMRSW: void <init>()>();

        specialinvoke r0.<com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB: void <init>(com.hp.hpl.jena.tdb.index.IndexBuilder,com.hp.hpl.jena.tdb.base.file.Location,com.hp.hpl.jena.tdb.sys.DatasetControl)>($r1, $r2, $r3);

        return;
    }

    public static com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB testing()
    {
        com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB $r0;

        $r0 = new com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB: void <init>()>();

        return $r0;
    }

    public synchronized void insertPrefix(java.lang.String, java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.graph.Node[] $r7;
        com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB r6;
        com.hp.hpl.jena.graph.Node $r1, $r3, $r5;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r8;
        java.lang.String r0, r2, r4;

        r6 := @this: com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r1 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createURI(java.lang.String)>(r0);

        $r3 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(java.lang.String)>(r2);

        $r5 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createURI(java.lang.String)>(r4);

        $r8 = r6.<com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable>;

        $r7 = newarray (com.hp.hpl.jena.graph.Node)[3];

        $r7[0] = $r1;

        $r7[1] = $r3;

        $r7[2] = $r5;

        interfaceinvoke $r8.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: boolean addRow(com.hp.hpl.jena.graph.Node[])>($r7);

        return;
    }

    public java.util.Set graphNames()
    {
        com.hp.hpl.jena.graph.Node[] $r1;
        java.util.Iterator $r3;
        org.apache.jena.atlas.lib.Tuple $r6;
        com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB r0;
        com.hp.hpl.jena.graph.Node $r8;
        java.util.HashSet $r4;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r2;
        java.lang.Object $r5, $r7;
        java.lang.String $r9;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB;

        $r2 = r0.<com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable>;

        $r1 = newarray (com.hp.hpl.jena.graph.Node)[3];

        $r1[0] = null;

        $r1[1] = null;

        $r1[2] = null;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: java.util.Iterator find(com.hp.hpl.jena.graph.Node[])>($r1);

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (org.apache.jena.atlas.lib.Tuple) $r5;

        $r7 = virtualinvoke $r6.<org.apache.jena.atlas.lib.Tuple: java.lang.Object get(int)>(0);

        $r8 = (com.hp.hpl.jena.graph.Node) $r7;

        $r9 = virtualinvoke $r8.<com.hp.hpl.jena.graph.Node: java.lang.String getURI()>();

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r9);

        goto label1;

     label2:
        staticinvoke <org.apache.jena.atlas.iterator.Iter: void close(java.util.Iterator)>($r3);

        return $r4;
    }

    public synchronized java.lang.String readPrefix(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r12;
        com.hp.hpl.jena.graph.Node[] $r5;
        java.util.Iterator $r7;
        org.apache.jena.atlas.lib.Tuple r13;
        com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB r4;
        com.hp.hpl.jena.graph.Node $r1, $r3, r10;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r6;
        java.lang.Object $r8, $r9;
        java.lang.String r0, r2, $r11;
        boolean $z0;

        r4 := @this: com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r1 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createURI(java.lang.String)>(r0);

        $r3 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(java.lang.String)>(r2);

        $r6 = r4.<com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable>;

        $r5 = newarray (com.hp.hpl.jena.graph.Node)[3];

        $r5[0] = $r1;

        $r5[1] = $r3;

        $r5[2] = null;

        $r7 = interfaceinvoke $r6.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: java.util.Iterator find(com.hp.hpl.jena.graph.Node[])>($r5);

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

     label2:
        staticinvoke <org.apache.jena.atlas.iterator.Iter: void close(java.util.Iterator)>($r7);

        return null;

     label3:
        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.apache.jena.atlas.lib.Tuple) $r8;

        $r9 = virtualinvoke r13.<org.apache.jena.atlas.lib.Tuple: java.lang.Object get(int)>(2);

        r10 = (com.hp.hpl.jena.graph.Node) $r9;

        $r11 = virtualinvoke r10.<com.hp.hpl.jena.graph.Node: java.lang.String getURI()>();

     label4:
        staticinvoke <org.apache.jena.atlas.iterator.Iter: void close(java.util.Iterator)>($r7);

        return $r11;

     label5:
        $r12 := @caughtexception;

     label6:
        staticinvoke <org.apache.jena.atlas.iterator.Iter: void close(java.util.Iterator)>($r7);

        throw $r12;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public synchronized java.lang.String readByURI(java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.graph.Node[] $r5;
        java.util.Iterator $r7;
        org.apache.jena.atlas.lib.Tuple $r9;
        com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB r4;
        com.hp.hpl.jena.graph.Node $r1, $r3, r11;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r6;
        java.lang.Object $r8, $r10;
        java.lang.String r0, r2, $r12;
        boolean $z0;

        r4 := @this: com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r1 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createURI(java.lang.String)>(r0);

        $r3 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createURI(java.lang.String)>(r2);

        $r6 = r4.<com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable>;

        $r5 = newarray (com.hp.hpl.jena.graph.Node)[3];

        $r5[0] = $r1;

        $r5[1] = null;

        $r5[2] = $r3;

        $r7 = interfaceinvoke $r6.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: java.util.Iterator find(com.hp.hpl.jena.graph.Node[])>($r5);

        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (org.apache.jena.atlas.lib.Tuple) $r8;

        $r10 = virtualinvoke $r9.<org.apache.jena.atlas.lib.Tuple: java.lang.Object get(int)>(1);

        r11 = (com.hp.hpl.jena.graph.Node) $r10;

        staticinvoke <org.apache.jena.atlas.iterator.Iter: void close(java.util.Iterator)>($r7);

        $r12 = virtualinvoke r11.<com.hp.hpl.jena.graph.Node: java.lang.String getLiteralLexicalForm()>();

        return $r12;
    }

    public synchronized java.util.Map readPrefixMap(java.lang.String)
    {
        org.apache.jena.atlas.lib.Tuple r8;
        java.util.HashMap $r6;
        com.hp.hpl.jena.graph.Node $r1, $r10, $r13;
        java.lang.String r0, $r11, $r14;
        boolean $z0;
        com.hp.hpl.jena.graph.Node[] $r3;
        java.util.Iterator $r5;
        com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB r2;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r4;
        java.lang.Object $r7, $r9, $r12;

        r2 := @this: com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createURI(java.lang.String)>(r0);

        $r4 = r2.<com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable>;

        $r3 = newarray (com.hp.hpl.jena.graph.Node)[3];

        $r3[0] = $r1;

        $r3[1] = null;

        $r3[2] = null;

        $r5 = interfaceinvoke $r4.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: java.util.Iterator find(com.hp.hpl.jena.graph.Node[])>($r3);

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.jena.atlas.lib.Tuple) $r7;

        $r9 = virtualinvoke r8.<org.apache.jena.atlas.lib.Tuple: java.lang.Object get(int)>(1);

        $r10 = (com.hp.hpl.jena.graph.Node) $r9;

        $r11 = virtualinvoke $r10.<com.hp.hpl.jena.graph.Node: java.lang.String getLiteralLexicalForm()>();

        $r12 = virtualinvoke r8.<org.apache.jena.atlas.lib.Tuple: java.lang.Object get(int)>(2);

        $r13 = (com.hp.hpl.jena.graph.Node) $r12;

        $r14 = virtualinvoke $r13.<com.hp.hpl.jena.graph.Node: java.lang.String getURI()>();

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r14);

        goto label1;

     label2:
        staticinvoke <org.apache.jena.atlas.iterator.Iter: void close(java.util.Iterator)>($r5);

        return $r6;
    }

    public synchronized void loadPrefixMapping(java.lang.String, com.hp.hpl.jena.shared.PrefixMapping)
    {
        org.apache.jena.atlas.lib.Tuple r7;
        com.hp.hpl.jena.graph.Node $r1, $r9, $r12;
        java.lang.String r0, $r10, $r13;
        boolean $z0;
        com.hp.hpl.jena.graph.Node[] $r3;
        java.util.Iterator $r5;
        com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB r2;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r4;
        java.lang.Object $r6, $r8, $r11;
        com.hp.hpl.jena.shared.PrefixMapping r14;

        r2 := @this: com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB;

        r0 := @parameter0: java.lang.String;

        r14 := @parameter1: com.hp.hpl.jena.shared.PrefixMapping;

        $r1 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createURI(java.lang.String)>(r0);

        $r4 = r2.<com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable>;

        $r3 = newarray (com.hp.hpl.jena.graph.Node)[3];

        $r3[0] = $r1;

        $r3[1] = null;

        $r3[2] = null;

        $r5 = interfaceinvoke $r4.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: java.util.Iterator find(com.hp.hpl.jena.graph.Node[])>($r3);

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.jena.atlas.lib.Tuple) $r6;

        $r8 = virtualinvoke r7.<org.apache.jena.atlas.lib.Tuple: java.lang.Object get(int)>(1);

        $r9 = (com.hp.hpl.jena.graph.Node) $r8;

        $r10 = virtualinvoke $r9.<com.hp.hpl.jena.graph.Node: java.lang.String getLiteralLexicalForm()>();

        $r11 = virtualinvoke r7.<org.apache.jena.atlas.lib.Tuple: java.lang.Object get(int)>(2);

        $r12 = (com.hp.hpl.jena.graph.Node) $r11;

        $r13 = virtualinvoke $r12.<com.hp.hpl.jena.graph.Node: java.lang.String getURI()>();

        interfaceinvoke r14.<com.hp.hpl.jena.shared.PrefixMapping: com.hp.hpl.jena.shared.PrefixMapping setNsPrefix(java.lang.String,java.lang.String)>($r10, $r13);

        goto label1;

     label2:
        staticinvoke <org.apache.jena.atlas.iterator.Iter: void close(java.util.Iterator)>($r5);

        return;
    }

    public synchronized void removeFromPrefixMap(java.lang.String, java.lang.String)
    {
        org.apache.jena.atlas.lib.Tuple r11;
        com.hp.hpl.jena.graph.Node $r1, $r3, $r15;
        java.lang.String r0, r2;
        boolean $z0;
        com.hp.hpl.jena.graph.Node[] $r5, $r12;
        java.util.Iterator $r7, $r9;
        com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB r4;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r6, $r13;
        java.util.List $r8;
        java.lang.Object $r10, $r14;

        r4 := @this: com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r1 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createURI(java.lang.String)>(r0);

        $r3 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(java.lang.String)>(r2);

        $r6 = r4.<com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable>;

        $r5 = newarray (com.hp.hpl.jena.graph.Node)[3];

        $r5[0] = $r1;

        $r5[1] = $r3;

        $r5[2] = null;

        $r7 = interfaceinvoke $r6.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: java.util.Iterator find(com.hp.hpl.jena.graph.Node[])>($r5);

        $r8 = staticinvoke <org.apache.jena.atlas.iterator.Iter: java.util.List toList(java.util.Iterator)>($r7);

        staticinvoke <org.apache.jena.atlas.iterator.Iter: void close(java.util.Iterator)>($r7);

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (org.apache.jena.atlas.lib.Tuple) $r10;

        $r13 = r4.<com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable>;

        $r12 = newarray (com.hp.hpl.jena.graph.Node)[3];

        $r12[0] = $r1;

        $r12[1] = $r3;

        $r14 = virtualinvoke r11.<org.apache.jena.atlas.lib.Tuple: java.lang.Object get(int)>(2);

        $r15 = (com.hp.hpl.jena.graph.Node) $r14;

        $r12[2] = $r15;

        interfaceinvoke $r13.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: boolean deleteRow(com.hp.hpl.jena.graph.Node[])>($r12);

        goto label1;

     label2:
        return;
    }

    public com.hp.hpl.jena.tdb.nodetable.NodeTupleTable getNodeTupleTable()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r1;
        com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB r0;

        r0 := @this: com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB;

        $r1 = r0.<com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable>;

        return $r1;
    }

    public com.hp.hpl.jena.shared.PrefixMapping getPrefixMapping()
    {
        com.hp.hpl.jena.shared.PrefixMapping $r1;
        com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB r0;

        r0 := @this: com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB: com.hp.hpl.jena.shared.PrefixMapping getPrefixMapping(java.lang.String)>("");

        return $r1;
    }

    public com.hp.hpl.jena.shared.PrefixMapping getPrefixMapping(java.lang.String)
    {
        com.hp.hpl.jena.sparql.graph.GraphPrefixesProjection $r0;
        java.lang.String r1;
        com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB r2;

        r2 := @this: com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB;

        r1 := @parameter0: java.lang.String;

        $r0 = new com.hp.hpl.jena.sparql.graph.GraphPrefixesProjection;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.graph.GraphPrefixesProjection: void <init>(java.lang.String,com.hp.hpl.jena.sparql.core.DatasetPrefixStorage)>(r1, r2);

        interfaceinvoke $r0.<com.hp.hpl.jena.shared.PrefixMapping: java.util.Map getNsPrefixMap()>();

        return $r0;
    }

    public void close()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r1;
        com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB r0;

        r0 := @this: com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB;

        $r1 = r0.<com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable>;

        interfaceinvoke $r1.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: void close()>();

        return;
    }

    public void sync()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r1;
        com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB r0;

        r0 := @this: com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB;

        $r1 = r0.<com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable>;

        interfaceinvoke $r1.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: void sync()>();

        return;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.tdb.base.record.RecordFactory $r1;
        org.apache.jena.atlas.lib.ColumnMap $r0;

        <com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB: java.lang.String unamedGraphURI> = "";

        $r0 = new org.apache.jena.atlas.lib.ColumnMap;

        specialinvoke $r0.<org.apache.jena.atlas.lib.ColumnMap: void <init>(java.lang.String,java.lang.String)>("GPU", "GPU");

        <com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB: org.apache.jena.atlas.lib.ColumnMap colMap> = $r0;

        $r1 = new com.hp.hpl.jena.tdb.base.record.RecordFactory;

        specialinvoke $r1.<com.hp.hpl.jena.tdb.base.record.RecordFactory: void <init>(int,int)>(24, 0);

        <com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB: com.hp.hpl.jena.tdb.base.record.RecordFactory factory> = $r1;

        return;
    }
}
