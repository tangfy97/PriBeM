public class com.hp.hpl.jena.tdb.store.TripleTable extends com.hp.hpl.jena.tdb.store.TableBase
{
    private static org.apache.jena.atlas.iterator.Transform action;

    public void <init>(com.hp.hpl.jena.tdb.index.TupleIndex[], com.hp.hpl.jena.tdb.nodetable.NodeTable, com.hp.hpl.jena.tdb.sys.DatasetControl)
    {
        com.hp.hpl.jena.tdb.index.TupleIndex[] r1;
        com.hp.hpl.jena.tdb.nodetable.NodeTable r2;
        com.hp.hpl.jena.tdb.sys.DatasetControl r3;
        com.hp.hpl.jena.tdb.store.TripleTable r0;

        r0 := @this: com.hp.hpl.jena.tdb.store.TripleTable;

        r1 := @parameter0: com.hp.hpl.jena.tdb.index.TupleIndex[];

        r2 := @parameter1: com.hp.hpl.jena.tdb.nodetable.NodeTable;

        r3 := @parameter2: com.hp.hpl.jena.tdb.sys.DatasetControl;

        specialinvoke r0.<com.hp.hpl.jena.tdb.store.TableBase: void <init>(int,com.hp.hpl.jena.tdb.index.TupleIndex[],com.hp.hpl.jena.tdb.nodetable.NodeTable,com.hp.hpl.jena.tdb.sys.DatasetControl)>(3, r1, r2, r3);

        return;
    }

    public boolean add(com.hp.hpl.jena.graph.Triple)
    {
        com.hp.hpl.jena.graph.Node $r2, $r3, $r4;
        com.hp.hpl.jena.tdb.store.TripleTable r0;
        com.hp.hpl.jena.graph.Triple r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.store.TripleTable;

        r1 := @parameter0: com.hp.hpl.jena.graph.Triple;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getSubject()>();

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getPredicate()>();

        $r4 = virtualinvoke r1.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getObject()>();

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.tdb.store.TripleTable: boolean add(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r2, $r3, $r4);

        return $z0;
    }

    public boolean add(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r5;
        com.hp.hpl.jena.graph.Node[] $r1;
        com.hp.hpl.jena.graph.Node r2, r3, r4;
        com.hp.hpl.jena.tdb.store.TripleTable r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.store.TripleTable;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        r3 := @parameter1: com.hp.hpl.jena.graph.Node;

        r4 := @parameter2: com.hp.hpl.jena.graph.Node;

        $r5 = r0.<com.hp.hpl.jena.tdb.store.TripleTable: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable table>;

        $r1 = newarray (com.hp.hpl.jena.graph.Node)[3];

        $r1[0] = r2;

        $r1[1] = r3;

        $r1[2] = r4;

        $z0 = interfaceinvoke $r5.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: boolean addRow(com.hp.hpl.jena.graph.Node[])>($r1);

        return $z0;
    }

    public boolean delete(com.hp.hpl.jena.graph.Triple)
    {
        com.hp.hpl.jena.graph.Node $r2, $r3, $r4;
        com.hp.hpl.jena.tdb.store.TripleTable r0;
        com.hp.hpl.jena.graph.Triple r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.store.TripleTable;

        r1 := @parameter0: com.hp.hpl.jena.graph.Triple;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getSubject()>();

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getPredicate()>();

        $r4 = virtualinvoke r1.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getObject()>();

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.tdb.store.TripleTable: boolean delete(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r2, $r3, $r4);

        return $z0;
    }

    public boolean delete(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r5;
        com.hp.hpl.jena.graph.Node[] $r1;
        com.hp.hpl.jena.graph.Node r2, r3, r4;
        com.hp.hpl.jena.tdb.store.TripleTable r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.store.TripleTable;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        r3 := @parameter1: com.hp.hpl.jena.graph.Node;

        r4 := @parameter2: com.hp.hpl.jena.graph.Node;

        $r5 = r0.<com.hp.hpl.jena.tdb.store.TripleTable: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable table>;

        $r1 = newarray (com.hp.hpl.jena.graph.Node)[3];

        $r1[0] = r2;

        $r1[1] = r3;

        $r1[2] = r4;

        $z0 = interfaceinvoke $r5.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: boolean deleteRow(com.hp.hpl.jena.graph.Node[])>($r1);

        return $z0;
    }

    public java.util.Iterator find(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.Node[] $r1;
        java.util.Iterator $r6, $r9;
        com.hp.hpl.jena.graph.Node r2, r3, r4;
        com.hp.hpl.jena.tdb.store.TripleTable r0;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r5, $r7;
        org.apache.jena.atlas.iterator.NullIterator $r10;
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r8;

        r0 := @this: com.hp.hpl.jena.tdb.store.TripleTable;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        r3 := @parameter1: com.hp.hpl.jena.graph.Node;

        r4 := @parameter2: com.hp.hpl.jena.graph.Node;

        $r5 = r0.<com.hp.hpl.jena.tdb.store.TripleTable: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable table>;

        $r1 = newarray (com.hp.hpl.jena.graph.Node)[3];

        $r1[0] = r2;

        $r1[1] = r3;

        $r1[2] = r4;

        $r6 = interfaceinvoke $r5.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: java.util.Iterator findAsNodeIds(com.hp.hpl.jena.graph.Node[])>($r1);

        if $r6 != null goto label1;

        $r10 = new org.apache.jena.atlas.iterator.NullIterator;

        specialinvoke $r10.<org.apache.jena.atlas.iterator.NullIterator: void <init>()>();

        return $r10;

     label1:
        $r7 = r0.<com.hp.hpl.jena.tdb.store.TripleTable: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable table>;

        $r8 = interfaceinvoke $r7.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: com.hp.hpl.jena.tdb.nodetable.NodeTable getNodeTable()>();

        $r9 = staticinvoke <com.hp.hpl.jena.tdb.lib.TupleLib: java.util.Iterator convertToTriples(com.hp.hpl.jena.tdb.nodetable.NodeTable,java.util.Iterator)>($r8, $r6);

        return $r9;
    }

    public void clearTriples()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r1;
        com.hp.hpl.jena.tdb.store.TripleTable r0;

        r0 := @this: com.hp.hpl.jena.tdb.store.TripleTable;

        $r1 = r0.<com.hp.hpl.jena.tdb.store.TripleTable: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable table>;

        interfaceinvoke $r1.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: void clear()>();

        return;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.tdb.store.TripleTable$1 $r0;

        $r0 = new com.hp.hpl.jena.tdb.store.TripleTable$1;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.store.TripleTable$1: void <init>()>();

        <com.hp.hpl.jena.tdb.store.TripleTable: org.apache.jena.atlas.iterator.Transform action> = $r0;

        return;
    }
}
