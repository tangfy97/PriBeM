public class org.apache.http.impl.client.StandardHttpRequestRetryHandler extends org.apache.http.impl.client.DefaultHttpRequestRetryHandler
{
    private final java.util.Map idempotentMethods;

    public void <init>(int, boolean)
    {
        java.util.Map $r3, $r5, $r7, $r9, $r11, $r13;
        int i0;
        java.lang.Boolean $r2, $r4, $r6, $r8, $r10, $r12;
        boolean z0;
        org.apache.http.impl.client.StandardHttpRequestRetryHandler r0;
        java.util.concurrent.ConcurrentHashMap $r1;

        r0 := @this: org.apache.http.impl.client.StandardHttpRequestRetryHandler;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.http.impl.client.DefaultHttpRequestRetryHandler: void <init>(int,boolean)>(i0, z0);

        $r1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<org.apache.http.impl.client.StandardHttpRequestRetryHandler: java.util.Map idempotentMethods> = $r1;

        $r3 = r0.<org.apache.http.impl.client.StandardHttpRequestRetryHandler: java.util.Map idempotentMethods>;

        $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("GET", $r2);

        $r5 = r0.<org.apache.http.impl.client.StandardHttpRequestRetryHandler: java.util.Map idempotentMethods>;

        $r4 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("HEAD", $r4);

        $r7 = r0.<org.apache.http.impl.client.StandardHttpRequestRetryHandler: java.util.Map idempotentMethods>;

        $r6 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("PUT", $r6);

        $r9 = r0.<org.apache.http.impl.client.StandardHttpRequestRetryHandler: java.util.Map idempotentMethods>;

        $r8 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("DELETE", $r8);

        $r11 = r0.<org.apache.http.impl.client.StandardHttpRequestRetryHandler: java.util.Map idempotentMethods>;

        $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("OPTIONS", $r10);

        $r13 = r0.<org.apache.http.impl.client.StandardHttpRequestRetryHandler: java.util.Map idempotentMethods>;

        $r12 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("TRACE", $r12);

        return;
    }

    public void <init>()
    {
        org.apache.http.impl.client.StandardHttpRequestRetryHandler r0;

        r0 := @this: org.apache.http.impl.client.StandardHttpRequestRetryHandler;

        specialinvoke r0.<org.apache.http.impl.client.StandardHttpRequestRetryHandler: void <init>(int,boolean)>(3, 0);

        return;
    }

    protected boolean handleAsIdempotent(org.apache.http.HttpRequest)
    {
        org.apache.http.impl.client.StandardHttpRequestRetryHandler r5;
        org.apache.http.HttpRequest r0;
        org.apache.http.RequestLine $r1;
        java.util.Locale $r3;
        java.util.Map $r6;
        java.lang.Boolean r8;
        java.lang.Object $r7;
        java.lang.String $r2, $r4;
        boolean $z0, $z1;

        r5 := @this: org.apache.http.impl.client.StandardHttpRequestRetryHandler;

        r0 := @parameter0: org.apache.http.HttpRequest;

        $r1 = interfaceinvoke r0.<org.apache.http.HttpRequest: org.apache.http.RequestLine getRequestLine()>();

        $r2 = interfaceinvoke $r1.<org.apache.http.RequestLine: java.lang.String getMethod()>();

        $r3 = <java.util.Locale: java.util.Locale US>;

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r3);

        $r6 = r5.<org.apache.http.impl.client.StandardHttpRequestRetryHandler: java.util.Map idempotentMethods>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r8 = (java.lang.Boolean) $r7;

        if r8 == null goto label1;

        $z0 = virtualinvoke r8.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }
}
