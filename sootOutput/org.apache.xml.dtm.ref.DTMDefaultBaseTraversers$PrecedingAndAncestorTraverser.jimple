class org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingAndAncestorTraverser extends org.apache.xml.dtm.DTMAxisTraverser
{
    private final org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0;

    private void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers r1;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingAndAncestorTraverser r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingAndAncestorTraverser;

        r1 := @parameter0: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers;

        specialinvoke r0.<org.apache.xml.dtm.DTMAxisTraverser: void <init>()>();

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingAndAncestorTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0> = r1;

        return;
    }

    public int next(int, int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingAndAncestorTraverser r0;
        short $s2;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1, $r2, $r3, $r4;
        int i0, $i1, $i3, i4, i5, $i6, $i7, $i9, $i11;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingAndAncestorTraverser;

        i0 := @parameter0: int;

        i4 := @parameter1: int;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingAndAncestorTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeIdentity(int)>(i0);

        $r2 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingAndAncestorTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i1 = virtualinvoke $r2.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeIdentity(int)>(i4);

        i5 = $i1 - 1;

        goto label4;

     label1:
        $r3 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingAndAncestorTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $s2 = virtualinvoke $r3.<org.apache.xml.dtm.ref.DTMDefaultBase: short _type(int)>(i5);

        $i6 = (int) $s2;

        if 2 == $i6 goto label3;

        $i7 = (int) $s2;

        if 13 != $i7 goto label2;

        goto label3;

     label2:
        $r4 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingAndAncestorTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i3 = virtualinvoke $r4.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeHandle(int)>(i5);

        return $i3;

     label3:
        $i9 = (int) -1;

        i5 = i5 + $i9;

     label4:
        if i5 >= 0 goto label1;

        $i11 = (int) -1;

        return $i11;
    }

    public int next(int, int, int)
    {
        org.apache.xml.utils.SuballocatedIntVector $r4;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingAndAncestorTraverser r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1, $r2, $r3, $r5;
        int i0, $i1, $i2, i3, $i4, i5, i6, $i8, $i10;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingAndAncestorTraverser;

        i0 := @parameter0: int;

        i5 := @parameter1: int;

        i3 := @parameter2: int;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingAndAncestorTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeIdentity(int)>(i0);

        $r2 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingAndAncestorTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i1 = virtualinvoke $r2.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeIdentity(int)>(i5);

        i6 = $i1 - 1;

        goto label4;

     label1:
        $r3 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingAndAncestorTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $r4 = $r3.<org.apache.xml.dtm.ref.DTMDefaultBase: org.apache.xml.utils.SuballocatedIntVector m_exptype>;

        $i2 = virtualinvoke $r4.<org.apache.xml.utils.SuballocatedIntVector: int elementAt(int)>(i6);

        if $i2 == i3 goto label2;

        goto label3;

     label2:
        $r5 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingAndAncestorTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i4 = virtualinvoke $r5.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeHandle(int)>(i6);

        return $i4;

     label3:
        $i8 = (int) -1;

        i6 = i6 + $i8;

     label4:
        if i6 >= 0 goto label1;

        $i10 = (int) -1;

        return $i10;
    }

    void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers, org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1 r2;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers r1;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingAndAncestorTraverser r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingAndAncestorTraverser;

        r1 := @parameter0: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers;

        r2 := @parameter1: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1;

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingAndAncestorTraverser: void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers)>(r1);

        return;
    }
}
