public final class org.apache.poi.hslf.record.Comment2000Atom extends org.apache.poi.hslf.record.RecordAtom
{
    private byte[] _header;
    private byte[] _data;

    protected void <init>()
    {
        byte[] $r1, $r2, $r3, $r4, $r5;
        org.apache.poi.hslf.record.Comment2000Atom r0;
        long $l0;
        short $s2;
        int $i1, $i3;

        r0 := @this: org.apache.poi.hslf.record.Comment2000Atom;

        specialinvoke r0.<org.apache.poi.hslf.record.RecordAtom: void <init>()>();

        $r1 = newarray (byte)[8];

        r0.<org.apache.poi.hslf.record.Comment2000Atom: byte[] _header> = $r1;

        $r2 = newarray (byte)[28];

        r0.<org.apache.poi.hslf.record.Comment2000Atom: byte[] _data> = $r2;

        $r3 = r0.<org.apache.poi.hslf.record.Comment2000Atom: byte[] _header>;

        $l0 = virtualinvoke r0.<org.apache.poi.hslf.record.Comment2000Atom: long getRecordType()>();

        $i1 = (int) $l0;

        $s2 = (short) $i1;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>($r3, 2, $s2);

        $r5 = r0.<org.apache.poi.hslf.record.Comment2000Atom: byte[] _header>;

        $r4 = r0.<org.apache.poi.hslf.record.Comment2000Atom: byte[] _data>;

        $i3 = lengthof $r4;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>($r5, 4, $i3);

        return;
    }

    protected void <init>(byte[], int, int)
    {
        byte[] $r1, r2, $r3, $r4, $r5;
        org.apache.poi.hslf.record.Comment2000Atom r0;
        int i0, i1, $i2, $i3, $i4;

        r0 := @this: org.apache.poi.hslf.record.Comment2000Atom;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.apache.poi.hslf.record.RecordAtom: void <init>()>();

        $r1 = newarray (byte)[8];

        r0.<org.apache.poi.hslf.record.Comment2000Atom: byte[] _header> = $r1;

        $r3 = r0.<org.apache.poi.hslf.record.Comment2000Atom: byte[] _header>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i0, $r3, 0, 8);

        $i2 = i1 - 8;

        $r4 = newarray (byte)[$i2];

        r0.<org.apache.poi.hslf.record.Comment2000Atom: byte[] _data> = $r4;

        $i4 = i0 + 8;

        $r5 = r0.<org.apache.poi.hslf.record.Comment2000Atom: byte[] _data>;

        $i3 = i1 - 8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, $i4, $r5, 0, $i3);

        return;
    }

    public int getNumber()
    {
        int $i0;
        byte[] $r1;
        org.apache.poi.hslf.record.Comment2000Atom r0;

        r0 := @this: org.apache.poi.hslf.record.Comment2000Atom;

        $r1 = r0.<org.apache.poi.hslf.record.Comment2000Atom: byte[] _data>;

        $i0 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r1, 0);

        return $i0;
    }

    public void setNumber(int)
    {
        int i0;
        byte[] $r1;
        org.apache.poi.hslf.record.Comment2000Atom r0;

        r0 := @this: org.apache.poi.hslf.record.Comment2000Atom;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hslf.record.Comment2000Atom: byte[] _data>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>($r1, 0, i0);

        return;
    }

    public java.util.Date getDate()
    {
        byte[] $r1;
        org.apache.poi.hslf.record.Comment2000Atom r0;
        java.util.Date $r2;

        r0 := @this: org.apache.poi.hslf.record.Comment2000Atom;

        $r1 = r0.<org.apache.poi.hslf.record.Comment2000Atom: byte[] _data>;

        $r2 = staticinvoke <org.apache.poi.hslf.util.SystemTimeUtils: java.util.Date getDate(byte[],int)>($r1, 4);

        return $r2;
    }

    public void setDate(java.util.Date)
    {
        byte[] $r2;
        org.apache.poi.hslf.record.Comment2000Atom r1;
        java.util.Date r0;

        r1 := @this: org.apache.poi.hslf.record.Comment2000Atom;

        r0 := @parameter0: java.util.Date;

        $r2 = r1.<org.apache.poi.hslf.record.Comment2000Atom: byte[] _data>;

        staticinvoke <org.apache.poi.hslf.util.SystemTimeUtils: void storeDate(java.util.Date,byte[],int)>(r0, $r2, 4);

        return;
    }

    public int getXOffset()
    {
        int $i0;
        byte[] $r1;
        org.apache.poi.hslf.record.Comment2000Atom r0;

        r0 := @this: org.apache.poi.hslf.record.Comment2000Atom;

        $r1 = r0.<org.apache.poi.hslf.record.Comment2000Atom: byte[] _data>;

        $i0 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r1, 20);

        return $i0;
    }

    public void setXOffset(int)
    {
        int i0;
        byte[] $r1;
        org.apache.poi.hslf.record.Comment2000Atom r0;

        r0 := @this: org.apache.poi.hslf.record.Comment2000Atom;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hslf.record.Comment2000Atom: byte[] _data>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>($r1, 20, i0);

        return;
    }

    public int getYOffset()
    {
        int $i0;
        byte[] $r1;
        org.apache.poi.hslf.record.Comment2000Atom r0;

        r0 := @this: org.apache.poi.hslf.record.Comment2000Atom;

        $r1 = r0.<org.apache.poi.hslf.record.Comment2000Atom: byte[] _data>;

        $i0 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r1, 24);

        return $i0;
    }

    public void setYOffset(int)
    {
        int i0;
        byte[] $r1;
        org.apache.poi.hslf.record.Comment2000Atom r0;

        r0 := @this: org.apache.poi.hslf.record.Comment2000Atom;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hslf.record.Comment2000Atom: byte[] _data>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>($r1, 24, i0);

        return;
    }

    public long getRecordType()
    {
        org.apache.poi.hslf.record.RecordTypes$Type $r0;
        org.apache.poi.hslf.record.Comment2000Atom r1;
        int $i0;
        long $l1;

        r1 := @this: org.apache.poi.hslf.record.Comment2000Atom;

        $r0 = <org.apache.poi.hslf.record.RecordTypes: org.apache.poi.hslf.record.RecordTypes$Type Comment2000Atom>;

        $i0 = $r0.<org.apache.poi.hslf.record.RecordTypes$Type: int typeID>;

        $l1 = (long) $i0;

        return $l1;
    }

    public void writeOut(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r0;
        byte[] $r2, $r3;
        org.apache.poi.hslf.record.Comment2000Atom r1;

        r1 := @this: org.apache.poi.hslf.record.Comment2000Atom;

        r0 := @parameter0: java.io.OutputStream;

        $r2 = r1.<org.apache.poi.hslf.record.Comment2000Atom: byte[] _header>;

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r2);

        $r3 = r1.<org.apache.poi.hslf.record.Comment2000Atom: byte[] _data>;

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r3);

        return;
    }
}
