public class org.apache.fontbox.pfb.PfbParser extends java.lang.Object
{
    private static final int PFB_HEADER_LENGTH;
    private static final int START_MARKER;
    private static final int ASCII_MARKER;
    private static final int BINARY_MARKER;
    private static final int[] PFB_RECORDS;
    private static final int BUFFER_SIZE;
    private byte[] pfbdata;
    private int[] lengths;

    public void <init>(java.lang.String) throws java.io.IOException
    {
        java.io.BufferedInputStream $r5;
        org.apache.fontbox.pfb.PfbParser r0;
        int $i1;
        java.lang.String r3;
        java.io.FileInputStream $r4;

        r0 := @this: org.apache.fontbox.pfb.PfbParser;

        r3 := @parameter0: java.lang.String;

        $r5 = new java.io.BufferedInputStream;

        $r4 = new java.io.FileInputStream;

        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.lang.String)>(r3);

        $i1 = (int) 65535;

        specialinvoke $r5.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r4, $i1);

        specialinvoke r0.<org.apache.fontbox.pfb.PfbParser: void <init>(java.io.InputStream)>($r5);

        return;
    }

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        byte[] $r2;
        org.apache.fontbox.pfb.PfbParser r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.fontbox.pfb.PfbParser;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.fontbox.pfb.PfbParser: byte[] readPfbInput(java.io.InputStream)>(r1);

        specialinvoke r0.<org.apache.fontbox.pfb.PfbParser: void parsePfb(byte[])>($r2);

        return;
    }

    private void parsePfb(byte[]) throws java.io.IOException
    {
        byte[] r1, $r3, $r9;
        org.apache.fontbox.pfb.PfbParser r2;
        java.io.ByteArrayInputStream $r0;
        int[] $r4, $r5, $r6, $r7, $r8;
        java.io.EOFException $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, i18, i19;
        java.io.IOException $r11, $r12;

        r2 := @this: org.apache.fontbox.pfb.PfbParser;

        r1 := @parameter0: byte[];

        $r0 = new java.io.ByteArrayInputStream;

        specialinvoke $r0.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1);

        $i0 = lengthof r1;

        $i1 = $i0 - 18;

        $r3 = newarray (byte)[$i1];

        r2.<org.apache.fontbox.pfb.PfbParser: byte[] pfbdata> = $r3;

        $r4 = <org.apache.fontbox.pfb.PfbParser: int[] PFB_RECORDS>;

        $i2 = lengthof $r4;

        $r5 = newarray (int)[$i2];

        r2.<org.apache.fontbox.pfb.PfbParser: int[] lengths> = $r5;

        i15 = 0;

        i16 = 0;

     label1:
        $r6 = <org.apache.fontbox.pfb.PfbParser: int[] PFB_RECORDS>;

        $i3 = lengthof $r6;

        if i16 >= $i3 goto label5;

        $i4 = virtualinvoke $r0.<java.io.ByteArrayInputStream: int read()>();

        if $i4 == 128 goto label2;

        $r12 = new java.io.IOException;

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>("Start marker missing");

        throw $r12;

     label2:
        $i5 = virtualinvoke $r0.<java.io.ByteArrayInputStream: int read()>();

        $r7 = <org.apache.fontbox.pfb.PfbParser: int[] PFB_RECORDS>;

        $i6 = $r7[i16];

        if $i5 == $i6 goto label3;

        $r11 = new java.io.IOException;

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>("Incorrect record type");

        throw $r11;

     label3:
        $i7 = virtualinvoke $r0.<java.io.ByteArrayInputStream: int read()>();

        $i8 = virtualinvoke $r0.<java.io.ByteArrayInputStream: int read()>();

        $i9 = $i8 << 8;

        i17 = $i7 + $i9;

        $i10 = virtualinvoke $r0.<java.io.ByteArrayInputStream: int read()>();

        $i11 = $i10 << 16;

        i18 = i17 + $i11;

        $i12 = virtualinvoke $r0.<java.io.ByteArrayInputStream: int read()>();

        $i13 = $i12 << 24;

        i19 = i18 + $i13;

        $r8 = r2.<org.apache.fontbox.pfb.PfbParser: int[] lengths>;

        $r8[i16] = i19;

        $r9 = r2.<org.apache.fontbox.pfb.PfbParser: byte[] pfbdata>;

        $i14 = virtualinvoke $r0.<java.io.ByteArrayInputStream: int read(byte[],int,int)>($r9, i15, i19);

        if $i14 >= 0 goto label4;

        $r10 = new java.io.EOFException;

        specialinvoke $r10.<java.io.EOFException: void <init>()>();

        throw $r10;

     label4:
        i15 = i15 + $i14;

        i16 = i16 + 1;

        goto label1;

     label5:
        return;
    }

    private byte[] readPfbInput(java.io.InputStream) throws java.io.IOException
    {
        byte[] r1, $r3;
        java.io.ByteArrayOutputStream $r5;
        org.apache.fontbox.pfb.PfbParser r4;
        int $i0, $i2, $i4;
        java.io.InputStream r2;

        r4 := @this: org.apache.fontbox.pfb.PfbParser;

        r2 := @parameter0: java.io.InputStream;

        $r5 = new java.io.ByteArrayOutputStream;

        specialinvoke $r5.<java.io.ByteArrayOutputStream: void <init>()>();

        $i2 = (int) 65535;

        r1 = newarray (byte)[$i2];

     label1:
        $i0 = virtualinvoke r2.<java.io.InputStream: int read(byte[])>(r1);

        $i4 = (int) -1;

        if $i0 == $i4 goto label2;

        virtualinvoke $r5.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r1, 0, $i0);

        goto label1;

     label2:
        $r3 = virtualinvoke $r5.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r3;
    }

    public int[] getLengths()
    {
        org.apache.fontbox.pfb.PfbParser r0;
        int[] $r1;

        r0 := @this: org.apache.fontbox.pfb.PfbParser;

        $r1 = r0.<org.apache.fontbox.pfb.PfbParser: int[] lengths>;

        return $r1;
    }

    public byte[] getPfbdata()
    {
        byte[] $r1;
        org.apache.fontbox.pfb.PfbParser r0;

        r0 := @this: org.apache.fontbox.pfb.PfbParser;

        $r1 = r0.<org.apache.fontbox.pfb.PfbParser: byte[] pfbdata>;

        return $r1;
    }

    public java.io.InputStream getInputStream()
    {
        byte[] $r2;
        java.io.ByteArrayInputStream $r0;
        org.apache.fontbox.pfb.PfbParser r1;

        r1 := @this: org.apache.fontbox.pfb.PfbParser;

        $r0 = new java.io.ByteArrayInputStream;

        $r2 = r1.<org.apache.fontbox.pfb.PfbParser: byte[] pfbdata>;

        specialinvoke $r0.<java.io.ByteArrayInputStream: void <init>(byte[])>($r2);

        return $r0;
    }

    public int size()
    {
        int $i0;
        byte[] $r1;
        org.apache.fontbox.pfb.PfbParser r0;

        r0 := @this: org.apache.fontbox.pfb.PfbParser;

        $r1 = r0.<org.apache.fontbox.pfb.PfbParser: byte[] pfbdata>;

        $i0 = lengthof $r1;

        return $i0;
    }

    static void <clinit>()
    {
        int[] $r0;

        <org.apache.fontbox.pfb.PfbParser: int BUFFER_SIZE> = 65535;

        <org.apache.fontbox.pfb.PfbParser: int BINARY_MARKER> = 2;

        <org.apache.fontbox.pfb.PfbParser: int ASCII_MARKER> = 1;

        <org.apache.fontbox.pfb.PfbParser: int START_MARKER> = 128;

        <org.apache.fontbox.pfb.PfbParser: int PFB_HEADER_LENGTH> = 18;

        $r0 = newarray (int)[3];

        $r0[0] = 1;

        $r0[1] = 2;

        $r0[2] = 1;

        <org.apache.fontbox.pfb.PfbParser: int[] PFB_RECORDS> = $r0;

        return;
    }
}
