public class com.jidesoft.swing.JideSplitPane extends javax.swing.JPanel implements java.awt.event.ContainerListener, java.awt.event.ComponentListener, javax.accessibility.Accessible
{
    protected static final java.lang.String NON_CONTINUOUS_DIVIDER;
    public static final int VERTICAL_SPLIT;
    public static final int HORIZONTAL_SPLIT;
    public static final java.lang.String ORIENTATION_PROPERTY;
    public static final java.lang.String DIVIDER_SIZE_PROPERTY;
    public static final java.lang.String PROPERTY_DIVIDER_LOCATION;
    public static final java.lang.String CONTINUOUS_LAYOUT_PROPERTY;
    public static final java.lang.String GRIPPER_PROPERTY;
    public static final java.lang.String PROPORTIONAL_LAYOUT_PROPERTY;
    public static final java.lang.String PROPORTIONS_PROPERTY;
    public static final java.lang.String PROPERTY_HEAVYWEIGHT_COMPONENT_ENABLED;
    private int _orientation;
    private int _dividerSize;
    private com.jidesoft.swing.HeavyweightWrapper _nonContinuousLayoutDividerWrapper;
    private boolean _continuousLayout;
    private java.awt.Container _layeredPane;
    private boolean _showGripper;
    private boolean _proportionalLayout;
    private double[] _proportions;
    private boolean _initiallyEven;
    private boolean _heavyweightComponentEnabled;
    public java.awt.event.WindowAdapter _windowDeactivatedListener;
    private int _dividerStepSize;
    private boolean _dragResizable;
    private boolean _hiddenByMyself;
    public static final java.lang.String ONE_TOUCH_EXPANDABLE_PROPERTY;
    private boolean _oneTouchExpandable;
    private int oneTouchExpandableDividerSize;
    private javax.swing.ImageIcon _leftOneTouchButtonImageIcon;
    private javax.swing.ImageIcon _rightOneTouchButtonImageIcon;

    public void <init>()
    {
        com.jidesoft.swing.JideSplitPane r0;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        specialinvoke r0.<com.jidesoft.swing.JideSplitPane: void <init>(int)>(1);

        return;
    }

    public void <init>(int)
    {
        com.jidesoft.swing.JideSplitPaneLayout $r1, $r2, r4;
        java.lang.IllegalArgumentException $r3;
        com.jidesoft.swing.JideSplitPane r0;
        int $i0, i1, $i2, $i3, $i4;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        i1 := @parameter0: int;

        specialinvoke r0.<javax.swing.JPanel: void <init>()>();

        $i0 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("JideSplitPane.dividerSize");

        r0.<com.jidesoft.swing.JideSplitPane: int _dividerSize> = $i0;

        r0.<com.jidesoft.swing.JideSplitPane: boolean _continuousLayout> = 0;

        r0.<com.jidesoft.swing.JideSplitPane: boolean _showGripper> = 0;

        r0.<com.jidesoft.swing.JideSplitPane: boolean _proportionalLayout> = 0;

        r0.<com.jidesoft.swing.JideSplitPane: boolean _initiallyEven> = 1;

        r0.<com.jidesoft.swing.JideSplitPane: boolean _heavyweightComponentEnabled> = 0;

        r0.<com.jidesoft.swing.JideSplitPane: int _dividerStepSize> = 0;

        r0.<com.jidesoft.swing.JideSplitPane: boolean _dragResizable> = 1;

        r0.<com.jidesoft.swing.JideSplitPane: boolean _hiddenByMyself> = 0;

        r0.<com.jidesoft.swing.JideSplitPane: boolean _oneTouchExpandable> = 0;

        r0.<com.jidesoft.swing.JideSplitPane: int oneTouchExpandableDividerSize> = 8;

        r0.<com.jidesoft.swing.JideSplitPane: javax.swing.ImageIcon _leftOneTouchButtonImageIcon> = null;

        r0.<com.jidesoft.swing.JideSplitPane: javax.swing.ImageIcon _rightOneTouchButtonImageIcon> = null;

        r0.<com.jidesoft.swing.JideSplitPane: int _orientation> = i1;

        $i2 = r0.<com.jidesoft.swing.JideSplitPane: int _orientation>;

        if $i2 == 1 goto label1;

        $i4 = r0.<com.jidesoft.swing.JideSplitPane: int _orientation>;

        if $i4 == 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("cannot create JideSplitPane, orientation must be one of JideSplitPane.HORIZONTAL_SPLIT or JideSplitPane.VERTICAL_SPLIT");

        throw $r3;

     label1:
        $i3 = r0.<com.jidesoft.swing.JideSplitPane: int _orientation>;

        if $i3 != 1 goto label2;

        $r2 = new com.jidesoft.swing.JideSplitPaneLayout;

        specialinvoke $r2.<com.jidesoft.swing.JideSplitPaneLayout: void <init>(java.awt.Container,int)>(r0, 0);

        r4 = $r2;

        goto label3;

     label2:
        $r1 = new com.jidesoft.swing.JideSplitPaneLayout;

        specialinvoke $r1.<com.jidesoft.swing.JideSplitPaneLayout: void <init>(java.awt.Container,int)>(r0, 1);

        r4 = $r1;

     label3:
        specialinvoke r0.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>(r4);

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void setOpaque(boolean)>(0);

        specialinvoke r0.<com.jidesoft.swing.JideSplitPane: void installListeners()>();

        return;
    }

    public int getDividerStepSize()
    {
        com.jidesoft.swing.JideSplitPane r0;
        int $i0;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        $i0 = r0.<com.jidesoft.swing.JideSplitPane: int _dividerStepSize>;

        return $i0;
    }

    public void setDividerStepSize(int)
    {
        int i0;
        com.jidesoft.swing.JideSplitPane r0;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        return;

     label1:
        r0.<com.jidesoft.swing.JideSplitPane: int _dividerStepSize> = i0;

        return;
    }

    public void updateUI()
    {
        com.jidesoft.swing.JideSplitPane r1;
        java.lang.Object $r0;

        r1 := @this: com.jidesoft.swing.JideSplitPane;

        $r0 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("JideSplitPane.dividerSize");

        if $r0 != null goto label1;

        staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: void installJideExtension()>();

     label1:
        specialinvoke r1.<javax.swing.JPanel: void updateUI()>();

        return;
    }

    private void installListeners()
    {
        com.jidesoft.swing.JideSplitPane r0;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void addContainerListener(java.awt.event.ContainerListener)>(r0);

        return;
    }

    public void setDividerSize(int)
    {
        com.jidesoft.swing.JideSplitPane r0;
        int i0, i1;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        i1 := @parameter0: int;

        i0 = r0.<com.jidesoft.swing.JideSplitPane: int _dividerSize>;

        if i0 == i1 goto label1;

        r0.<com.jidesoft.swing.JideSplitPane: int _dividerSize> = i1;

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void firePropertyChange(java.lang.String,int,int)>("dividerSize", i0, i1);

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void invalidate()>();

     label1:
        return;
    }

    public int getDividerSize()
    {
        com.jidesoft.swing.JideSplitPane r0;
        int $i0;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        $i0 = r0.<com.jidesoft.swing.JideSplitPane: int _dividerSize>;

        return $i0;
    }

    public java.awt.Component insertPane(java.awt.Component, int)
    {
        com.jidesoft.swing.JideSplitPane r0;
        int i0;
        java.awt.Component r1, $r2;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        r1 := @parameter0: java.awt.Component;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: java.awt.Component insertPane(java.awt.Component,java.lang.Object,int)>(r1, null, i0);

        return $r2;
    }

    public java.awt.Component insertPane(java.awt.Component, java.lang.Object, int)
    {
        java.awt.Component r1;
        int i0, $i1, $i2, $i3, $i5;
        com.jidesoft.swing.JideSplitPane r0;
        java.lang.Object r2;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        r1 := @parameter0: java.awt.Component;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        if i0 > 0 goto label1;

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void addImpl(java.awt.Component,java.lang.Object,int)>(r1, r2, 0);

        goto label3;

     label1:
        $i1 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getPaneCount()>();

        if i0 < $i1 goto label2;

        $i5 = (int) -1;

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void addImpl(java.awt.Component,java.lang.Object,int)>(r1, r2, $i5);

        goto label3;

     label2:
        $i2 = i0 << 1;

        $i3 = $i2 - 1;

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void addImpl(java.awt.Component,java.lang.Object,int)>(r1, r2, $i3);

     label3:
        return r1;
    }

    public java.awt.Component addPane(java.awt.Component)
    {
        com.jidesoft.swing.JideSplitPane r1;
        java.awt.Component r0, $r2;

        r1 := @this: com.jidesoft.swing.JideSplitPane;

        r0 := @parameter0: java.awt.Component;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = specialinvoke r1.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r0);

        return $r2;
    }

    public void removePane(java.awt.Component)
    {
        com.jidesoft.swing.JideSplitPane r0;
        int $i0;
        java.awt.Component r1;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        r1 := @parameter0: java.awt.Component;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int indexOfPane(java.awt.Component)>(r1);

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void removePane(int)>($i0);

        return;
    }

    public void setPaneAt(java.awt.Component, int)
    {
        com.jidesoft.swing.JideSplitPane r0;
        int i0;
        java.awt.Component r1;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        r1 := @parameter0: java.awt.Component;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void setPaneAt(java.awt.Component,java.lang.Object,int)>(r1, null, i0);

        return;
    }

    public void setPaneAt(java.awt.Component, java.lang.Object, int)
    {
        com.jidesoft.swing.JideSplitPane r0;
        double[] r1;
        int i0;
        java.lang.Object r3;
        java.awt.Component r2;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        r2 := @parameter0: java.awt.Component;

        r3 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        r1 = r0.<com.jidesoft.swing.JideSplitPane: double[] _proportions>;

        r0.<com.jidesoft.swing.JideSplitPane: double[] _proportions> = null;

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void removePane(int)>(i0);

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: java.awt.Component insertPane(java.awt.Component,java.lang.Object,int)>(r2, r3, i0);

        r0.<com.jidesoft.swing.JideSplitPane: double[] _proportions> = r1;

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void validate()>();

        return;
    }

    public void removePane(int)
    {
        int i0, $i1;
        com.jidesoft.swing.JideSplitPane r0;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        specialinvoke r0.<javax.swing.JPanel: void remove(int)>(0);

        goto label2;

     label1:
        $i1 = i0 << 1;

        specialinvoke r0.<javax.swing.JPanel: void remove(int)>($i1);

     label2:
        return;
    }

    public void setOrientation(int)
    {
        java.util.Map r10;
        int i0, $i1, i2, $i3, i4, i5;
        java.awt.Component[] $r2;
        java.awt.LayoutManager $r3;
        boolean $z0;
        com.jidesoft.swing.JideSplitPaneLayout $r1, $r6, $r7, r9;
        java.lang.IllegalArgumentException $r8;
        java.awt.Component r4;
        com.jidesoft.swing.JideSplitPane r0;
        java.lang.Object $r5;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        if i0 == 1 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("JideSplitPane: orientation must be one of JideSplitPane.VERTICAL_SPLIT or JideSplitPane.HORIZONTAL_SPLIT");

        throw $r8;

     label1:
        $i1 = r0.<com.jidesoft.swing.JideSplitPane: int _orientation>;

        if $i1 != i0 goto label2;

        return;

     label2:
        i2 = r0.<com.jidesoft.swing.JideSplitPane: int _orientation>;

        r0.<com.jidesoft.swing.JideSplitPane: int _orientation> = i0;

        $i3 = r0.<com.jidesoft.swing.JideSplitPane: int _orientation>;

        if $i3 != 1 goto label3;

        $r7 = new com.jidesoft.swing.JideSplitPaneLayout;

        specialinvoke $r7.<com.jidesoft.swing.JideSplitPaneLayout: void <init>(java.awt.Container,int)>(r0, 0);

        r9 = $r7;

        goto label4;

     label3:
        $r1 = new com.jidesoft.swing.JideSplitPaneLayout;

        specialinvoke $r1.<com.jidesoft.swing.JideSplitPaneLayout: void <init>(java.awt.Container,int)>(r0, 1);

        r9 = $r1;

     label4:
        $r2 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: java.awt.Component[] getComponents()>();

        $r3 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: java.awt.LayoutManager getLayout()>();

        r10 = null;

        $z0 = $r3 instanceof com.jidesoft.swing.JideSplitPaneLayout;

        if $z0 == 0 goto label5;

        $r6 = (com.jidesoft.swing.JideSplitPaneLayout) $r3;

        r10 = virtualinvoke $r6.<com.jidesoft.swing.JideSplitPaneLayout: java.util.Map getConstraintMap()>();

     label5:
        if $r2 == null goto label7;

        if r10 == null goto label7;

        i4 = lengthof $r2;

        i5 = 0;

     label6:
        if i5 >= i4 goto label7;

        r4 = $r2[i5];

        $r5 = interfaceinvoke r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        virtualinvoke r9.<com.jidesoft.swing.JideSplitPaneLayout: void addLayoutComponent(java.awt.Component,java.lang.Object)>(r4, $r5);

        i5 = i5 + 1;

        goto label6;

     label7:
        specialinvoke r0.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>(r9);

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void doLayout()>();

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void firePropertyChange(java.lang.String,int,int)>("orientation", i2, i0);

        return;
    }

    public int getOrientation()
    {
        com.jidesoft.swing.JideSplitPane r0;
        int $i0;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        $i0 = r0.<com.jidesoft.swing.JideSplitPane: int _orientation>;

        return $i0;
    }

    public void resetToPreferredSizes()
    {
        java.lang.Throwable $r10;
        com.jidesoft.swing.JideBoxLayout $r3, $r5, $r7, $r9, $r12;
        com.jidesoft.swing.JideSplitPane r0;
        java.awt.LayoutManager $r1, $r2, $r4, $r6, $r8, $r11;
        boolean $z0, $z1;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: java.awt.LayoutManager getLayout()>();

        $z0 = $r1 instanceof com.jidesoft.swing.JideBoxLayout;

        if $z0 == 0 goto label4;

        $r2 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: java.awt.LayoutManager getLayout()>();

        $r3 = (com.jidesoft.swing.JideBoxLayout) $r2;

        $z1 = virtualinvoke $r3.<com.jidesoft.swing.JideBoxLayout: boolean isResetWhenInvalidate()>();

     label1:
        $r4 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: java.awt.LayoutManager getLayout()>();

        $r5 = (com.jidesoft.swing.JideBoxLayout) $r4;

        virtualinvoke $r5.<com.jidesoft.swing.JideBoxLayout: void setResetWhenInvalidate(boolean)>(1);

        $r6 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: java.awt.LayoutManager getLayout()>();

        $r7 = (com.jidesoft.swing.JideBoxLayout) $r6;

        virtualinvoke $r7.<com.jidesoft.swing.JideBoxLayout: void invalidateLayout(java.awt.Container)>(r0);

     label2:
        $r8 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: java.awt.LayoutManager getLayout()>();

        $r9 = (com.jidesoft.swing.JideBoxLayout) $r8;

        virtualinvoke $r9.<com.jidesoft.swing.JideBoxLayout: void setResetWhenInvalidate(boolean)>($z1);

        goto label4;

     label3:
        $r10 := @caughtexception;

        $r11 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: java.awt.LayoutManager getLayout()>();

        $r12 = (com.jidesoft.swing.JideBoxLayout) $r11;

        virtualinvoke $r12.<com.jidesoft.swing.JideBoxLayout: void setResetWhenInvalidate(boolean)>($z1);

        throw $r10;

     label4:
        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void doLayout()>();

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setProportionalLayout(boolean)
    {
        com.jidesoft.swing.JideSplitPane r0;
        boolean z0, $z1, $z2;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.jidesoft.swing.JideSplitPane: boolean _proportionalLayout>;

        if z0 != $z1 goto label1;

        return;

     label1:
        r0.<com.jidesoft.swing.JideSplitPane: boolean _proportionalLayout> = z0;

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void revalidate()>();

        if z0 != 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void firePropertyChange(java.lang.String,boolean,boolean)>("proportionalLayout", $z2, z0);

        if z0 != 0 goto label4;

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void setProportions(double[])>(null);

     label4:
        return;
    }

    public boolean isProportionalLayout()
    {
        com.jidesoft.swing.JideSplitPane r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        $z0 = r0.<com.jidesoft.swing.JideSplitPane: boolean _proportionalLayout>;

        return $z0;
    }

    void internalSetProportions(double[])
    {
        com.jidesoft.swing.JideSplitPane r0;
        double[] r1;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        r1 := @parameter0: double[];

        r0.<com.jidesoft.swing.JideSplitPane: double[] _proportions> = r1;

        return;
    }

    public void setProportions(double[])
    {
        java.lang.IllegalStateException $r23;
        byte $b1, $b2, $b3;
        boolean $z0, $z1, $z2, z3;
        java.lang.StringBuilder $r11, $r12, $r16, $r17, $r18, $r19, $r24, $r26;
        com.jidesoft.swing.JideBoxLayout $r5, $r6, $r7;
        double[] r1, $r2, $r8, $r22;
        int $i0, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i11, $i12, $i13;
        java.lang.String $r13, $r20;
        java.awt.LayoutManager $r4;
        double $d0, $d1, $d2, d3;
        java.lang.IllegalArgumentException $r25, $r27;
        com.jidesoft.swing.JideSplitPane r0;
        java.lang.Object $r3;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        r1 := @parameter0: double[];

        $z0 = r0.<com.jidesoft.swing.JideSplitPane: boolean _proportionalLayout>;

        if $z0 != 0 goto label01;

        if r1 == null goto label01;

        $r23 = new java.lang.IllegalStateException;

        specialinvoke $r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t set proportions on a non-proportional split pane");

        throw $r23;

     label01:
        $r2 = r0.<com.jidesoft.swing.JideSplitPane: double[] _proportions>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>(r1, $r2);

        if $z1 == 0 goto label02;

        return;

     label02:
        if r1 == null goto label03;

        $i4 = lengthof r1;

        $i5 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getPaneCount()>();

        $i6 = $i5 - 1;

        if $i4 == $i6 goto label03;

        $r25 = new java.lang.IllegalArgumentException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Must provide one fewer proportions than there are panes: got ");

        $i7 = lengthof r1;

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", expected ");

        $i8 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getPaneCount()>();

        $i9 = $i8 - 1;

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r25;

     label03:
        if r1 == null goto label08;

        d3 = 0.0;

        i10 = 0;

     label04:
        $i0 = lengthof r1;

        if i10 >= $i0 goto label07;

        $d0 = r1[i10];

        $b2 = $d0 cmpg 0.0;

        $i11 = (int) $b2;

        if $i11 >= 0 goto label05;

        r1[i10] = 0.0;

     label05:
        $d1 = r1[i10];

        $b3 = $d1 cmpl 1.0;

        $i12 = (int) $b3;

        if $i12 <= 0 goto label06;

        r1[i10] = 1.0;

     label06:
        $d2 = r1[i10];

        d3 = d3 + $d2;

        i10 = i10 + 1;

        goto label04;

     label07:
        $b1 = d3 cmpl 1.0;

        $i13 = (int) $b1;

        if $i13 <= 0 goto label08;

        $r27 = new java.lang.IllegalArgumentException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sum of proportions must be no more than 1, got ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r27;

     label08:
        $r8 = r0.<com.jidesoft.swing.JideSplitPane: double[] _proportions>;

        if r1 != null goto label09;

        $r22 = null;

        goto label10;

     label09:
        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        $r22 = (double[]) $r3;

     label10:
        r0.<com.jidesoft.swing.JideSplitPane: double[] _proportions> = $r22;

        $r4 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: java.awt.LayoutManager getLayout()>();

        z3 = 0;

        $z2 = $r4 instanceof com.jidesoft.swing.JideBoxLayout;

        if $z2 == 0 goto label11;

        $r6 = (com.jidesoft.swing.JideBoxLayout) $r4;

        z3 = virtualinvoke $r6.<com.jidesoft.swing.JideBoxLayout: boolean isResetWhenInvalidate()>();

        $r7 = (com.jidesoft.swing.JideBoxLayout) $r4;

        virtualinvoke $r7.<com.jidesoft.swing.JideBoxLayout: void setResetWhenInvalidate(boolean)>(1);

     label11:
        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void revalidate()>();

        if z3 == 0 goto label12;

        $r5 = (com.jidesoft.swing.JideBoxLayout) $r4;

        virtualinvoke $r5.<com.jidesoft.swing.JideBoxLayout: void setResetWhenInvalidate(boolean)>(z3);

     label12:
        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("proportions", $r8, r1);

        return;
    }

    public double[] getProportions()
    {
        com.jidesoft.swing.JideSplitPane r0;
        double[] r2;
        java.lang.Object $r1;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        r2 = r0.<com.jidesoft.swing.JideSplitPane: double[] _proportions>;

        if r2 == null goto label1;

        $r1 = virtualinvoke r2.<java.lang.Object: java.lang.Object clone()>();

        r2 = (double[]) $r1;

     label1:
        return r2;
    }

    public void setInitiallyEven(boolean)
    {
        com.jidesoft.swing.JideSplitPane r0;
        boolean z0;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        z0 := @parameter0: boolean;

        r0.<com.jidesoft.swing.JideSplitPane: boolean _initiallyEven> = z0;

        return;
    }

    public boolean isInitiallyEven()
    {
        com.jidesoft.swing.JideSplitPane r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        $z0 = r0.<com.jidesoft.swing.JideSplitPane: boolean _initiallyEven>;

        return $z0;
    }

    public boolean isValidateRoot()
    {
        com.jidesoft.swing.JideSplitPane r0;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        return 1;
    }

    protected void startDragging(com.jidesoft.swing.JideSplitPaneDivider)
    {
        java.awt.Cursor $r23;
        java.lang.Integer $r8;
        com.jidesoft.swing.JideSplitPane$JideSplitPaneContour $r16;
        boolean $z0, $z1, $z2, $z3;
        java.awt.event.WindowAdapter $r2, $r19;
        com.jidesoft.swing.JideSplitPane$1 $r21;
        java.awt.Rectangle $r11, $r13;
        com.jidesoft.swing.JideSplitPaneDivider r22;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.awt.Container $r1, $r9, $r12;
        com.jidesoft.swing.JideSplitPane$JideSplitPaneHeavyweightWrapper $r17;
        java.awt.Window $r20;
        javax.swing.RootPaneContainer $r3;
        com.jidesoft.swing.HeavyweightWrapper $r5, $r6, $r7, $r10, $r14, $r15, $r18;
        com.jidesoft.swing.JideSplitPane r0;
        javax.swing.JLayeredPane $r4;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        r22 := @parameter0: com.jidesoft.swing.JideSplitPaneDivider;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: boolean isContinuousLayout()>();

        if $z0 != 0 goto label7;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: java.awt.Container getTopLevelAncestor()>();

        $r2 = r0.<com.jidesoft.swing.JideSplitPane: java.awt.event.WindowAdapter _windowDeactivatedListener>;

        if $r2 != null goto label1;

        $r21 = new com.jidesoft.swing.JideSplitPane$1;

        specialinvoke $r21.<com.jidesoft.swing.JideSplitPane$1: void <init>(com.jidesoft.swing.JideSplitPane)>(r0);

        r0.<com.jidesoft.swing.JideSplitPane: java.awt.event.WindowAdapter _windowDeactivatedListener> = $r21;

     label1:
        $z1 = $r1 instanceof java.awt.Window;

        if $z1 == 0 goto label2;

        $r20 = (java.awt.Window) $r1;

        $r19 = r0.<com.jidesoft.swing.JideSplitPane: java.awt.event.WindowAdapter _windowDeactivatedListener>;

        virtualinvoke $r20.<java.awt.Window: void addWindowListener(java.awt.event.WindowListener)>($r19);

     label2:
        $z2 = $r1 instanceof javax.swing.RootPaneContainer;

        if $z2 == 0 goto label7;

        $r3 = (javax.swing.RootPaneContainer) $r1;

        $r4 = interfaceinvoke $r3.<javax.swing.RootPaneContainer: javax.swing.JLayeredPane getLayeredPane()>();

        r0.<com.jidesoft.swing.JideSplitPane: java.awt.Container _layeredPane> = $r4;

        $r5 = r0.<com.jidesoft.swing.JideSplitPane: com.jidesoft.swing.HeavyweightWrapper _nonContinuousLayoutDividerWrapper>;

        if $r5 != null goto label3;

        $r16 = new com.jidesoft.swing.JideSplitPane$JideSplitPaneContour;

        specialinvoke $r16.<com.jidesoft.swing.JideSplitPane$JideSplitPaneContour: void <init>(com.jidesoft.swing.JideSplitPane)>(r0);

        $r17 = new com.jidesoft.swing.JideSplitPane$JideSplitPaneHeavyweightWrapper;

        specialinvoke $r17.<com.jidesoft.swing.JideSplitPane$JideSplitPaneHeavyweightWrapper: void <init>(com.jidesoft.swing.JideSplitPane,java.awt.Component)>(r0, $r16);

        r0.<com.jidesoft.swing.JideSplitPane: com.jidesoft.swing.HeavyweightWrapper _nonContinuousLayoutDividerWrapper> = $r17;

        $r18 = r0.<com.jidesoft.swing.JideSplitPane: com.jidesoft.swing.HeavyweightWrapper _nonContinuousLayoutDividerWrapper>;

        $z3 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: boolean isHeavyweightComponentEnabled()>();

        virtualinvoke $r18.<com.jidesoft.swing.HeavyweightWrapper: void setHeavyweight(boolean)>($z3);

     label3:
        $r6 = r0.<com.jidesoft.swing.JideSplitPane: com.jidesoft.swing.HeavyweightWrapper _nonContinuousLayoutDividerWrapper>;

        $i0 = r0.<com.jidesoft.swing.JideSplitPane: int _orientation>;

        if $i0 != 1 goto label4;

        $r23 = <com.jidesoft.swing.JideSplitPaneDivider: java.awt.Cursor HORIZONTAL_CURSOR>;

        goto label5;

     label4:
        $r23 = <com.jidesoft.swing.JideSplitPaneDivider: java.awt.Cursor VERTICAL_CURSOR>;

     label5:
        virtualinvoke $r6.<com.jidesoft.swing.HeavyweightWrapper: void delegateSetCursor(java.awt.Cursor)>($r23);

        $r7 = r0.<com.jidesoft.swing.JideSplitPane: com.jidesoft.swing.HeavyweightWrapper _nonContinuousLayoutDividerWrapper>;

        virtualinvoke $r7.<com.jidesoft.swing.HeavyweightWrapper: void delegateSetVisible(boolean)>(0);

        $r10 = r0.<com.jidesoft.swing.JideSplitPane: com.jidesoft.swing.HeavyweightWrapper _nonContinuousLayoutDividerWrapper>;

        $r9 = r0.<com.jidesoft.swing.JideSplitPane: java.awt.Container _layeredPane>;

        $r8 = <javax.swing.JLayeredPane: java.lang.Integer DRAG_LAYER>;

        virtualinvoke $r10.<com.jidesoft.swing.HeavyweightWrapper: void delegateAdd(java.awt.Container,java.lang.Object)>($r9, $r8);

        $r11 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: java.awt.Rectangle getVisibleRect()>();

        $r12 = r0.<com.jidesoft.swing.JideSplitPane: java.awt.Container _layeredPane>;

        $r13 = staticinvoke <javax.swing.SwingUtilities: java.awt.Rectangle convertRectangle(java.awt.Component,java.awt.Rectangle,java.awt.Component)>(r0, $r11, $r12);

        $i1 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getDividerSize()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>(4, $i1);

        $i3 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getOrientation()>();

        if $i3 != 1 goto label6;

        $r15 = r0.<com.jidesoft.swing.JideSplitPane: com.jidesoft.swing.HeavyweightWrapper _nonContinuousLayoutDividerWrapper>;

        $i9 = $r13.<java.awt.Rectangle: int x>;

        $i8 = $r13.<java.awt.Rectangle: int y>;

        $i7 = $r13.<java.awt.Rectangle: int height>;

        virtualinvoke $r15.<com.jidesoft.swing.HeavyweightWrapper: void delegateSetBounds(int,int,int,int)>($i9, $i8, $i2, $i7);

        goto label7;

     label6:
        $r14 = r0.<com.jidesoft.swing.JideSplitPane: com.jidesoft.swing.HeavyweightWrapper _nonContinuousLayoutDividerWrapper>;

        $i6 = $r13.<java.awt.Rectangle: int x>;

        $i5 = $r13.<java.awt.Rectangle: int y>;

        $i4 = $r13.<java.awt.Rectangle: int width>;

        virtualinvoke $r14.<com.jidesoft.swing.HeavyweightWrapper: void delegateSetBounds(int,int,int,int)>($i6, $i5, $i4, $i2);

     label7:
        return;
    }

    private void stopDragging()
    {
        java.awt.Component[] $r8;
        int i0, i1;
        java.awt.Container $r1, $r4, $r7, $r10;
        boolean $z0, $z1, $z2;
        java.awt.Component r9;
        com.jidesoft.swing.HeavyweightWrapper $r2, $r3, $r5, $r6;
        com.jidesoft.swing.JideSplitPane r0;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: boolean isContinuousLayout()>();

        if $z0 != 0 goto label4;

        $r1 = r0.<com.jidesoft.swing.JideSplitPane: java.awt.Container _layeredPane>;

        if $r1 == null goto label4;

        $r2 = r0.<com.jidesoft.swing.JideSplitPane: com.jidesoft.swing.HeavyweightWrapper _nonContinuousLayoutDividerWrapper>;

        if $r2 == null goto label4;

        $r3 = r0.<com.jidesoft.swing.JideSplitPane: com.jidesoft.swing.HeavyweightWrapper _nonContinuousLayoutDividerWrapper>;

        virtualinvoke $r3.<com.jidesoft.swing.HeavyweightWrapper: void delegateSetVisible(boolean)>(0);

        $r5 = r0.<com.jidesoft.swing.JideSplitPane: com.jidesoft.swing.HeavyweightWrapper _nonContinuousLayoutDividerWrapper>;

        $r4 = r0.<com.jidesoft.swing.JideSplitPane: java.awt.Container _layeredPane>;

        virtualinvoke $r5.<com.jidesoft.swing.HeavyweightWrapper: void delegateRemove(java.awt.Container)>($r4);

        $r6 = r0.<com.jidesoft.swing.JideSplitPane: com.jidesoft.swing.HeavyweightWrapper _nonContinuousLayoutDividerWrapper>;

        virtualinvoke $r6.<com.jidesoft.swing.HeavyweightWrapper: void delegateSetNull()>();

        r0.<com.jidesoft.swing.JideSplitPane: com.jidesoft.swing.HeavyweightWrapper _nonContinuousLayoutDividerWrapper> = null;

        $r7 = r0.<com.jidesoft.swing.JideSplitPane: java.awt.Container _layeredPane>;

        $r8 = virtualinvoke $r7.<java.awt.Container: java.awt.Component[] getComponents()>();

        i0 = lengthof $r8;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r9 = $r8[i1];

        $z1 = r9 instanceof com.jidesoft.swing.JideSplitPane$JideSplitPaneContour;

        if $z1 != 0 goto label2;

        $z2 = r9 instanceof com.jidesoft.swing.JideSplitPane$JideSplitPaneHeavyweightWrapper;

        if $z2 == 0 goto label3;

     label2:
        $r10 = r0.<com.jidesoft.swing.JideSplitPane: java.awt.Container _layeredPane>;

        virtualinvoke $r10.<java.awt.Container: void remove(java.awt.Component)>(r9);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    protected void dragDividerTo(com.jidesoft.swing.JideSplitPaneDivider, int)
    {
        java.awt.Point $r9, $r14, r15;
        boolean $z0;
        java.awt.Dimension $r4;
        java.awt.Rectangle $r5, $r7, $r10;
        com.jidesoft.swing.JideSplitPaneDivider r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        java.awt.Container $r1, $r6, $r8, $r13;
        com.jidesoft.swing.HeavyweightWrapper $r3, $r11, $r12;
        com.jidesoft.swing.JideSplitPane r0;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        r2 := @parameter0: com.jidesoft.swing.JideSplitPaneDivider;

        i0 := @parameter1: int;

        $r1 = r0.<com.jidesoft.swing.JideSplitPane: java.awt.Container _layeredPane>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: boolean isContinuousLayout()>();

        if $z0 == 0 goto label2;

     label1:
        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void setDividerLocation(com.jidesoft.swing.JideSplitPaneDivider,int)>(r2, i0);

        goto label5;

     label2:
        $r3 = r0.<com.jidesoft.swing.JideSplitPane: com.jidesoft.swing.HeavyweightWrapper _nonContinuousLayoutDividerWrapper>;

        if $r3 == null goto label5;

        $r4 = new java.awt.Dimension;

        specialinvoke $r4.<java.awt.Dimension: void <init>()>();

        $r5 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: java.awt.Rectangle getVisibleRect()>();

        $i1 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getDividerSize()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>(4, $i1);

        $r6 = r0.<com.jidesoft.swing.JideSplitPane: java.awt.Container _layeredPane>;

        $r7 = staticinvoke <javax.swing.SwingUtilities: java.awt.Rectangle convertRectangle(java.awt.Component,java.awt.Rectangle,java.awt.Component)>(r0, $r5, $r6);

        $i3 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getOrientation()>();

        if $i3 != 1 goto label3;

        $i11 = $r5.<java.awt.Rectangle: int y>;

        $r13 = r0.<com.jidesoft.swing.JideSplitPane: java.awt.Container _layeredPane>;

        $r14 = staticinvoke <javax.swing.SwingUtilities: java.awt.Point convertPoint(java.awt.Component,int,int,java.awt.Component)>(r0, i0, $i11, $r13);

        r15 = $r14;

        $i12 = $r14.<java.awt.Point: int x>;

        $i13 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getDividerSize()>();

        $i14 = $i13 - $i2;

        $i15 = $i14 >> 1;

        $i16 = $i12 + $i15;

        $r14.<java.awt.Point: int x> = $i16;

        $r4.<java.awt.Dimension: int width> = $i2;

        $i17 = $r7.<java.awt.Rectangle: int height>;

        $r4.<java.awt.Dimension: int height> = $i17;

        goto label4;

     label3:
        $i4 = $r5.<java.awt.Rectangle: int x>;

        $r8 = r0.<com.jidesoft.swing.JideSplitPane: java.awt.Container _layeredPane>;

        $r9 = staticinvoke <javax.swing.SwingUtilities: java.awt.Point convertPoint(java.awt.Component,int,int,java.awt.Component)>(r0, $i4, i0, $r8);

        r15 = $r9;

        $i5 = $r9.<java.awt.Point: int y>;

        $i6 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getDividerSize()>();

        $i7 = $i6 - $i2;

        $i8 = $i7 >> 1;

        $i9 = $i5 + $i8;

        $r9.<java.awt.Point: int y> = $i9;

        $i10 = $r7.<java.awt.Rectangle: int width>;

        $r4.<java.awt.Dimension: int width> = $i10;

        $r4.<java.awt.Dimension: int height> = $i2;

     label4:
        $r11 = r0.<com.jidesoft.swing.JideSplitPane: com.jidesoft.swing.HeavyweightWrapper _nonContinuousLayoutDividerWrapper>;

        $r10 = new java.awt.Rectangle;

        specialinvoke $r10.<java.awt.Rectangle: void <init>(java.awt.Point,java.awt.Dimension)>(r15, $r4);

        virtualinvoke $r11.<com.jidesoft.swing.HeavyweightWrapper: void delegateSetBounds(java.awt.Rectangle)>($r10);

        $r12 = r0.<com.jidesoft.swing.JideSplitPane: com.jidesoft.swing.HeavyweightWrapper _nonContinuousLayoutDividerWrapper>;

        virtualinvoke $r12.<com.jidesoft.swing.HeavyweightWrapper: void delegateSetVisible(boolean)>(1);

     label5:
        return;
    }

    protected void finishDraggingTo(com.jidesoft.swing.JideSplitPaneDivider, int)
    {
        com.jidesoft.swing.JideSplitPaneDivider r1;
        com.jidesoft.swing.HeavyweightWrapper $r2;
        com.jidesoft.swing.JideSplitPane r0;
        int i0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        r1 := @parameter0: com.jidesoft.swing.JideSplitPaneDivider;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: boolean isContinuousLayout()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<com.jidesoft.swing.JideSplitPane: com.jidesoft.swing.HeavyweightWrapper _nonContinuousLayoutDividerWrapper>;

        if $r2 == null goto label2;

     label1:
        specialinvoke r0.<com.jidesoft.swing.JideSplitPane: void stopDragging()>();

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void setDividerLocation(com.jidesoft.swing.JideSplitPaneDivider,int)>(r1, i0);

     label2:
        return;
    }

    public int indexOfDivider(com.jidesoft.swing.JideSplitPaneDivider)
    {
        java.io.PrintStream $r3;
        com.jidesoft.swing.JideSplitPaneDivider r1;
        com.jidesoft.swing.JideSplitPane r0;
        int $i0, $i1, $i2, $i3, $i5;
        java.lang.StringBuilder $r4, $r5, $r6, $r8;
        java.lang.String $r7;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        r1 := @parameter0: com.jidesoft.swing.JideSplitPaneDivider;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int indexOf(java.awt.Component)>(r1);

        $i5 = (int) -1;

        if $i0 != $i5 goto label1;

        return $i0;

     label1:
        $i1 = $i0 % 2;

        if $i1 != 0 goto label2;

        $r3 = <java.lang.System: java.io.PrintStream err>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Warning: divider\'s index is even. (index = ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r7);

     label2:
        $i2 = $i0 - 1;

        $i3 = $i2 / 2;

        return $i3;
    }

    public int indexOfPane(java.awt.Component)
    {
        java.io.PrintStream $r3;
        java.awt.Component r1;
        com.jidesoft.swing.JideSplitPane r0;
        int $i0, $i1, $i2, $i4, $i6;
        java.lang.StringBuilder $r4, $r5, $r6, $r8;
        java.lang.String $r7;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        r1 := @parameter0: java.awt.Component;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int indexOf(java.awt.Component)>(r1);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i6 = (int) -1;

        return $i6;

     label1:
        $i1 = $i0 % 2;

        if $i1 == 0 goto label2;

        $r3 = <java.lang.System: java.io.PrintStream err>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Warning: pane\'s index is odd. (index = ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r7);

     label2:
        $i2 = $i0 >> 1;

        return $i2;
    }

    public int indexOf(java.awt.Component)
    {
        com.jidesoft.swing.JideSplitPane r0;
        int $i0, i1, $i3;
        java.awt.Component $r1, r2;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        r2 := @parameter0: java.awt.Component;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getComponentCount()>();

        if i1 >= $i0 goto label3;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: java.awt.Component getComponent(int)>(i1);

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $i3 = (int) -1;

        return $i3;
    }

    public com.jidesoft.swing.JideSplitPaneDivider getDividerAt(int)
    {
        java.awt.Component $r1;
        com.jidesoft.swing.JideSplitPaneDivider $r2;
        int i0, $i1, $i2, $i3, $i4, $i5;
        com.jidesoft.swing.JideSplitPane r0;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i1 = i0 * 2;

        $i2 = $i1 + 1;

        $i3 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getComponentCount()>();

        if $i2 < $i3 goto label2;

     label1:
        return null;

     label2:
        $i4 = i0 * 2;

        $i5 = $i4 + 1;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: java.awt.Component getComponent(int)>($i5);

        $r2 = (com.jidesoft.swing.JideSplitPaneDivider) $r1;

        return $r2;
    }

    public java.awt.Component getPaneAt(int)
    {
        int i0, $i1, $i2, $i3;
        com.jidesoft.swing.JideSplitPane r0;
        java.awt.Component $r1;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i1 = i0 << 1;

        $i2 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getComponentCount()>();

        if $i1 < $i2 goto label2;

     label1:
        return null;

     label2:
        $i3 = i0 << 1;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: java.awt.Component getComponent(int)>($i3);

        return $r1;
    }

    public int getPaneCount()
    {
        com.jidesoft.swing.JideSplitPane r0;
        int $i0, $i1, $i2;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getComponentCount()>();

        $i1 = $i0 + 1;

        $i2 = $i1 >> 1;

        return $i2;
    }

    public void setDividerLocation(com.jidesoft.swing.JideSplitPaneDivider, int)
    {
        com.jidesoft.swing.JideSplitPaneDivider r1;
        com.jidesoft.swing.JideSplitPane r0;
        int $i0, i1;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        r1 := @parameter0: com.jidesoft.swing.JideSplitPaneDivider;

        i1 := @parameter1: int;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int indexOfDivider(com.jidesoft.swing.JideSplitPaneDivider)>(r1);

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void setDividerLocation(int,int)>($i0, i1);

        return;
    }

    public void setDividerLocation(int, int)
    {
        com.jidesoft.swing.JideSplitPane r0;
        int i0, i1;
        com.jidesoft.swing.JideSplitPaneLayout $r2;
        java.awt.LayoutManager $r1;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: java.awt.LayoutManager getLayout()>();

        $r2 = (com.jidesoft.swing.JideSplitPaneLayout) $r1;

        virtualinvoke $r2.<com.jidesoft.swing.JideSplitPaneLayout: int setDividerLocation(int,int,boolean)>(i0, i1, 1);

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void validate()>();

        return;
    }

    public int getDividerLocation(int)
    {
        com.jidesoft.swing.JideSplitPane r0;
        int i0, $i1;
        com.jidesoft.swing.JideSplitPaneLayout $r2;
        java.awt.LayoutManager $r1;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: java.awt.LayoutManager getLayout()>();

        $r2 = (com.jidesoft.swing.JideSplitPaneLayout) $r1;

        $i1 = virtualinvoke $r2.<com.jidesoft.swing.JideSplitPaneLayout: int getDividerLocation(int)>(i0);

        return $i1;
    }

    public void componentAdded(java.awt.event.ContainerEvent)
    {
        java.awt.Component $r1, $r3, $r4;
        java.awt.Dimension $r5;
        com.jidesoft.swing.JideSplitPane r2;
        java.awt.event.ContainerEvent r0;
        boolean $z0, $z1;

        r2 := @this: com.jidesoft.swing.JideSplitPane;

        r0 := @parameter0: java.awt.event.ContainerEvent;

        $r1 = virtualinvoke r0.<java.awt.event.ContainerEvent: java.awt.Component getChild()>();

        virtualinvoke $r1.<java.awt.Component: void addComponentListener(java.awt.event.ComponentListener)>(r2);

        $r3 = virtualinvoke r0.<java.awt.event.ContainerEvent: java.awt.Component getChild()>();

        $z0 = $r3 instanceof com.jidesoft.swing.JideSplitPaneDivider;

        if $z0 != 0 goto label1;

        virtualinvoke r2.<com.jidesoft.swing.JideSplitPane: void addExtraDividers()>();

        $z1 = virtualinvoke r2.<com.jidesoft.swing.JideSplitPane: boolean isOneTouchExpandable()>();

        if $z1 == 0 goto label1;

        $r4 = virtualinvoke r0.<java.awt.event.ContainerEvent: java.awt.Component getChild()>();

        $r5 = new java.awt.Dimension;

        specialinvoke $r5.<java.awt.Dimension: void <init>(int,int)>(0, 0);

        virtualinvoke $r4.<java.awt.Component: void setMinimumSize(java.awt.Dimension)>($r5);

     label1:
        virtualinvoke r2.<com.jidesoft.swing.JideSplitPane: void setDividersVisible()>();

        virtualinvoke r2.<com.jidesoft.swing.JideSplitPane: void resetToPreferredSizes()>();

        return;
    }

    public void componentRemoved(java.awt.event.ContainerEvent)
    {
        com.jidesoft.swing.JideSplitPane r2;
        java.awt.event.ContainerEvent r0;
        java.awt.Component $r1, $r3;
        boolean $z0;

        r2 := @this: com.jidesoft.swing.JideSplitPane;

        r0 := @parameter0: java.awt.event.ContainerEvent;

        $r1 = virtualinvoke r0.<java.awt.event.ContainerEvent: java.awt.Component getChild()>();

        virtualinvoke $r1.<java.awt.Component: void removeComponentListener(java.awt.event.ComponentListener)>(r2);

        $r3 = virtualinvoke r0.<java.awt.event.ContainerEvent: java.awt.Component getChild()>();

        $z0 = $r3 instanceof com.jidesoft.swing.JideSplitPaneDivider;

        if $z0 != 0 goto label1;

        virtualinvoke r2.<com.jidesoft.swing.JideSplitPane: boolean removeExtraDividers()>();

     label1:
        virtualinvoke r2.<com.jidesoft.swing.JideSplitPane: void setDividersVisible()>();

        virtualinvoke r2.<com.jidesoft.swing.JideSplitPane: void resetToPreferredSizes()>();

        return;
    }

    public void componentResized(java.awt.event.ComponentEvent)
    {
        com.jidesoft.swing.JideSplitPane r0;
        java.awt.event.ComponentEvent r1;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        r1 := @parameter0: java.awt.event.ComponentEvent;

        return;
    }

    public void componentMoved(java.awt.event.ComponentEvent)
    {
        com.jidesoft.swing.JideSplitPane r0;
        java.awt.event.ComponentEvent r1;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        r1 := @parameter0: java.awt.event.ComponentEvent;

        return;
    }

    public void componentShown(java.awt.event.ComponentEvent)
    {
        com.jidesoft.swing.JideSplitPane r2;
        java.awt.event.ComponentEvent r0;
        java.awt.Component $r1;
        boolean $z0;

        r2 := @this: com.jidesoft.swing.JideSplitPane;

        r0 := @parameter0: java.awt.event.ComponentEvent;

        $r1 = virtualinvoke r0.<java.awt.event.ComponentEvent: java.awt.Component getComponent()>();

        $z0 = $r1 instanceof com.jidesoft.swing.JideSplitPaneDivider;

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r2.<com.jidesoft.swing.JideSplitPane: void setDividersVisible()>();

        virtualinvoke r2.<com.jidesoft.swing.JideSplitPane: void resetToPreferredSizes()>();

        return;
    }

    public void componentHidden(java.awt.event.ComponentEvent)
    {
        com.jidesoft.swing.JideSplitPane r2;
        java.awt.event.ComponentEvent r0;
        java.awt.Component $r1;
        boolean $z0;

        r2 := @this: com.jidesoft.swing.JideSplitPane;

        r0 := @parameter0: java.awt.event.ComponentEvent;

        $r1 = virtualinvoke r0.<java.awt.event.ComponentEvent: java.awt.Component getComponent()>();

        $z0 = $r1 instanceof com.jidesoft.swing.JideSplitPaneDivider;

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r2.<com.jidesoft.swing.JideSplitPane: void setDividersVisible()>();

        virtualinvoke r2.<com.jidesoft.swing.JideSplitPane: void resetToPreferredSizes()>();

        return;
    }

    protected boolean removeExtraDividers()
    {
        boolean $z0, $z1, $z2, z3;
        java.awt.Component $r1, $r2, $r3, $r5, $r6, $r10;
        double[] $r8, $r9, $r12;
        com.jidesoft.swing.JideSplitPaneDivider $r4, $r7, $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, $i16, $i18, $i20;
        com.jidesoft.swing.JideSplitPane r0;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        i14 = 0;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getComponentCount()>();

        if $i0 != 0 goto label2;

        $r12 = r0.<com.jidesoft.swing.JideSplitPane: double[] _proportions>;

        if $r12 == null goto label1;

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void setProportions(double[])>(null);

     label1:
        return 0;

     label2:
        z3 = 0;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: java.awt.Component getComponent(int)>(0);

        $z0 = $r1 instanceof com.jidesoft.swing.JideSplitPaneDivider;

        if $z0 == 0 goto label3;

        $r10 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: java.awt.Component getComponent(int)>(0);

        $r11 = (com.jidesoft.swing.JideSplitPaneDivider) $r10;

        virtualinvoke $r11.<com.jidesoft.swing.JideSplitPaneDivider: void setJideSplitPane(com.jidesoft.swing.JideSplitPane)>(null);

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void remove(int)>(0);

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void removeProportion(int)>(0);

        z3 = 1;

     label3:
        i15 = 0;

     label4:
        $i16 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getComponentCount()>();

        if i15 >= $i16 goto label8;

        $r5 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: java.awt.Component getComponent(int)>(i15);

        $z2 = $r5 instanceof com.jidesoft.swing.JideSplitPaneDivider;

        if $z2 == 0 goto label6;

        i14 = i14 + 1;

        if i14 != 2 goto label7;

        $i10 = i15 - 1;

        $r6 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: java.awt.Component getComponent(int)>($i10);

        $r7 = (com.jidesoft.swing.JideSplitPaneDivider) $r6;

        virtualinvoke $r7.<com.jidesoft.swing.JideSplitPaneDivider: void setJideSplitPane(com.jidesoft.swing.JideSplitPane)>(null);

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void remove(java.awt.Component)>($r6);

        $r8 = r0.<com.jidesoft.swing.JideSplitPane: double[] _proportions>;

        if $r8 == null goto label5;

        $i11 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getPaneCount()>();

        $r9 = r0.<com.jidesoft.swing.JideSplitPane: double[] _proportions>;

        $i12 = lengthof $r9;

        if $i11 != $i12 goto label5;

        $i13 = i15 / 2;

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void removeProportion(int)>($i13);

     label5:
        z3 = 1;

        $i18 = (int) -1;

        i14 = i14 + $i18;

        $i20 = (int) -1;

        i15 = i15 + $i20;

        goto label7;

     label6:
        i14 = 0;

     label7:
        i15 = i15 + 1;

        goto label4;

     label8:
        if i14 != 1 goto label9;

        $i1 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getComponentCount()>();

        $i2 = $i1 - 1;

        $r2 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: java.awt.Component getComponent(int)>($i2);

        $z1 = $r2 instanceof com.jidesoft.swing.JideSplitPaneDivider;

        if $z1 == 0 goto label9;

        $i3 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getComponentCount()>();

        $i4 = $i3 - 1;

        $r3 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: java.awt.Component getComponent(int)>($i4);

        $r4 = (com.jidesoft.swing.JideSplitPaneDivider) $r3;

        virtualinvoke $r4.<com.jidesoft.swing.JideSplitPaneDivider: void setJideSplitPane(com.jidesoft.swing.JideSplitPane)>(null);

        $i5 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getComponentCount()>();

        $i6 = $i5 - 1;

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void remove(int)>($i6);

        $i7 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getComponentCount()>();

        $i8 = $i7 + 1;

        $i9 = $i8 / 2;

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void removeProportion(int)>($i9);

        z3 = 1;

     label9:
        return z3;
    }

    protected void removeProportion(int)
    {
        double[] r1, r2;
        int $i0, $i1, $i2, i3, $i4, i5, $i6, i7, i8, $i9, $i10;
        double $d0, $d1, $d2, d3, d4;
        com.jidesoft.swing.JideSplitPane r0;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        i3 := @parameter0: int;

        r1 = r0.<com.jidesoft.swing.JideSplitPane: double[] _proportions>;

        if r1 != null goto label01;

        return;

     label01:
        $i0 = lengthof r1;

        if $i0 > 1 goto label02;

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void setProportions(double[])>(null);

        return;

     label02:
        $i1 = lengthof r1;

        $i2 = $i1 - 1;

        r2 = newarray (double)[$i2];

        $i4 = lengthof r1;

        if i3 >= $i4 goto label03;

        d3 = r1[i3];

        goto label05;

     label03:
        d3 = 1.0;

        i5 = lengthof r1;

        i7 = 0;

     label04:
        if i7 >= i5 goto label05;

        d4 = r1[i7];

        d3 = d3 - d4;

        i7 = i7 + 1;

        goto label04;

     label05:
        $d2 = 1.0 - d3;

        i8 = 0;

     label06:
        $i9 = lengthof r2;

        if i8 >= $i9 goto label09;

        if i8 >= i3 goto label07;

        $i10 = i8;

        goto label08;

     label07:
        $i10 = i8 + 1;

     label08:
        $d0 = r1[$i10];

        $d1 = $d0 / $d2;

        r2[i8] = $d1;

        i8 = i8 + 1;

        goto label06;

     label09:
        $i6 = lengthof r2;

        if $i6 != 1 goto label10;

     label10:
        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void setProportions(double[])>(r2);

        return;
    }

    protected void addExtraDividers()
    {
        double[] $r3, $r4;
        java.awt.Component $r1;
        com.jidesoft.swing.JideSplitPaneDivider $r2;
        com.jidesoft.swing.JideSplitPane r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        i6 = 0;

        i7 = 0;

     label1:
        $i0 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getComponentCount()>();

        if i7 >= $i0 goto label5;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: java.awt.Component getComponent(int)>(i7);

        $z0 = $r1 instanceof com.jidesoft.swing.JideSplitPaneDivider;

        if $z0 != 0 goto label3;

        i6 = i6 + 1;

        if i6 != 2 goto label4;

        $r2 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: com.jidesoft.swing.JideSplitPaneDivider createSplitPaneDivider()>();

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void add(java.awt.Component,java.lang.Object,int)>($r2, "fix", i7);

        $r3 = r0.<com.jidesoft.swing.JideSplitPane: double[] _proportions>;

        if $r3 == null goto label2;

        $i1 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getPaneCount()>();

        $r4 = r0.<com.jidesoft.swing.JideSplitPane: double[] _proportions>;

        $i2 = lengthof $r4;

        $i3 = $i2 + 2;

        if $i1 != $i3 goto label2;

        $i4 = i7 + 1;

        $i5 = $i4 / 2;

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void addProportion(int)>($i5);

     label2:
        i6 = 0;

        goto label4;

     label3:
        i6 = 0;

     label4:
        i7 = i7 + 1;

        goto label1;

     label5:
        return;
    }

    protected void addProportion(int)
    {
        double[] r1, r2;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, i7, $i8;
        double $d0, d1, d2, $d3, $d4;
        com.jidesoft.swing.JideSplitPane r0;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        i5 := @parameter0: int;

        r1 = r0.<com.jidesoft.swing.JideSplitPane: double[] _proportions>;

        if r1 != null goto label1;

        return;

     label1:
        $i0 = lengthof r1;

        $i1 = $i0 + 1;

        r2 = newarray (double)[$i1];

        $i2 = lengthof r2;

        $i3 = $i2 + 1;

        $d0 = (double) $i3;

        d1 = 1.0 / $d0;

        d2 = 1.0 - d1;

        i7 = 0;

     label2:
        $i4 = lengthof r2;

        if i7 >= $i4 goto label8;

        if i7 != i5 goto label3;

        r2[i7] = d1;

        goto label7;

     label3:
        if i7 >= i5 goto label4;

        $i8 = i7;

        goto label5;

     label4:
        $i8 = i7 - 1;

     label5:
        $i6 = lengthof r1;

        if $i8 >= $i6 goto label6;

        $d3 = r1[$i8];

        $d4 = $d3 * d2;

        r2[i7] = $d4;

        goto label7;

     label6:
        r2[i7] = d1;

     label7:
        i7 = i7 + 1;

        goto label2;

     label8:
        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void setProportions(double[])>(r2);

        return;
    }

    public void setVisible(boolean)
    {
        com.jidesoft.swing.JideSplitPane r0;
        boolean z0;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        z0 := @parameter0: boolean;

        r0.<com.jidesoft.swing.JideSplitPane: boolean _hiddenByMyself> = 0;

        specialinvoke r0.<javax.swing.JPanel: void setVisible(boolean)>(z0);

        return;
    }

    protected void setDividersVisible()
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8;
        boolean $z0, $z1, z2, z3, $z4, $z5, $z6, z7, z8, $z9, $z11, $z12;
        java.awt.Component $r1, $r2, $r3, $r4;
        com.jidesoft.swing.JideSplitPane r0;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        z7 = 0;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getComponentCount()>();

        if $i0 != 1 goto label01;

        $r4 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: java.awt.Component getComponent(int)>(0);

        z7 = virtualinvoke $r4.<java.awt.Component: boolean isVisible()>();

        goto label13;

     label01:
        $i1 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getComponentCount()>();

        if $i1 <= 1 goto label13;

        z8 = 0;

        i6 = 0;

     label02:
        $i2 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getComponentCount()>();

        if i6 >= $i2 goto label13;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: java.awt.Component getComponent(int)>(i6);

        $z1 = $r1 instanceof com.jidesoft.swing.JideSplitPaneDivider;

        if $z1 != 0 goto label03;

        $z6 = virtualinvoke $r1.<java.awt.Component: boolean isVisible()>();

        if $z6 == 0 goto label12;

        if z7 != 0 goto label12;

        z7 = 1;

        goto label12;

     label03:
        $i3 = i6 - 1;

        if $i3 < 0 goto label04;

        $i5 = i6 - 1;

        $r3 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: java.awt.Component getComponent(int)>($i5);

        $z5 = virtualinvoke $r3.<java.awt.Component: boolean isVisible()>();

        if $z5 == 0 goto label04;

        $z9 = 1;

        goto label05;

     label04:
        $z9 = 0;

     label05:
        z2 = $z9;

        $i7 = i6 + 1;

        $i8 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getComponentCount()>();

        if $i7 >= $i8 goto label06;

        $i4 = i6 + 1;

        $r2 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: java.awt.Component getComponent(int)>($i4);

        $z4 = virtualinvoke $r2.<java.awt.Component: boolean isVisible()>();

        if $z4 == 0 goto label06;

        $z12 = 1;

        $z11 = 1;

        goto label07;

     label06:
        $z12 = 0;

        $z11 = 0;

     label07:
        z3 = $z12;

        if z2 == 0 goto label08;

        if $z11 == 0 goto label08;

        virtualinvoke $r1.<java.awt.Component: void setVisible(boolean)>(1);

        goto label12;

     label08:
        if z2 != 0 goto label09;

        if z3 != 0 goto label09;

        virtualinvoke $r1.<java.awt.Component: void setVisible(boolean)>(0);

        goto label12;

     label09:
        if z2 == 0 goto label10;

        if z3 != 0 goto label10;

        virtualinvoke $r1.<java.awt.Component: void setVisible(boolean)>(0);

        z8 = 1;

        goto label12;

     label10:
        if z8 == 0 goto label11;

        virtualinvoke $r1.<java.awt.Component: void setVisible(boolean)>(1);

        z8 = 0;

        goto label12;

     label11:
        virtualinvoke $r1.<java.awt.Component: void setVisible(boolean)>(0);

     label12:
        i6 = i6 + 1;

        goto label02;

     label13:
        if z7 != 0 goto label14;

        specialinvoke r0.<javax.swing.JPanel: void setVisible(boolean)>(0);

        r0.<com.jidesoft.swing.JideSplitPane: boolean _hiddenByMyself> = 1;

        goto label15;

     label14:
        $z0 = r0.<com.jidesoft.swing.JideSplitPane: boolean _hiddenByMyself>;

        if $z0 == 0 goto label15;

        specialinvoke r0.<javax.swing.JPanel: void setVisible(boolean)>(1);

     label15:
        return;
    }

    protected com.jidesoft.swing.JideSplitPaneDivider createSplitPaneDivider()
    {
        com.jidesoft.swing.JideSplitPane r1;
        com.jidesoft.swing.JideSplitPaneDivider $r0;

        r1 := @this: com.jidesoft.swing.JideSplitPane;

        $r0 = new com.jidesoft.swing.JideSplitPaneDivider;

        specialinvoke $r0.<com.jidesoft.swing.JideSplitPaneDivider: void <init>(com.jidesoft.swing.JideSplitPane)>(r1);

        return $r0;
    }

    protected int getPreviousDividerLocation(com.jidesoft.swing.JideSplitPaneDivider, boolean, boolean)
    {
        boolean z0, z1, $z2, $z3;
        java.awt.Rectangle $r3, $r5, $r8, $r10;
        com.jidesoft.swing.JideSplitPaneDivider r1, $r2, $r4, $r6, $r7, $r9, $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, $i16, $i18, $i20;
        com.jidesoft.swing.JideSplitPane r0;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        r1 := @parameter0: com.jidesoft.swing.JideSplitPaneDivider;

        z1 := @parameter1: boolean;

        z0 := @parameter2: boolean;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int indexOfDivider(com.jidesoft.swing.JideSplitPaneDivider)>(r1);

        $i16 = (int) -1;

        i12 = $i16;

        if z0 == 0 goto label06;

        $i4 = $i0 + 1;

        $i5 = $i4 * 2;

        $i6 = $i5 + 1;

        $i7 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getComponentCount()>();

        if $i6 > $i7 goto label11;

        i13 = $i0 + 1;

     label01:
        $i8 = i13 * 2;

        $i9 = $i8 + 1;

        $i10 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getComponentCount()>();

        if $i9 >= $i10 goto label05;

        if z1 != 0 goto label02;

        $r11 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: com.jidesoft.swing.JideSplitPaneDivider getDividerAt(int)>(i13);

        $z3 = virtualinvoke $r11.<com.jidesoft.swing.JideSplitPaneDivider: boolean isVisible()>();

        if $z3 == 0 goto label04;

     label02:
        $i11 = r0.<com.jidesoft.swing.JideSplitPane: int _orientation>;

        if $i11 != 1 goto label03;

        $r9 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: com.jidesoft.swing.JideSplitPaneDivider getDividerAt(int)>(i13);

        $r10 = virtualinvoke $r9.<com.jidesoft.swing.JideSplitPaneDivider: java.awt.Rectangle getBounds()>();

        i12 = $r10.<java.awt.Rectangle: int x>;

        goto label05;

     label03:
        $r7 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: com.jidesoft.swing.JideSplitPaneDivider getDividerAt(int)>(i13);

        $r8 = virtualinvoke $r7.<com.jidesoft.swing.JideSplitPaneDivider: java.awt.Rectangle getBounds()>();

        i12 = $r8.<java.awt.Rectangle: int y>;

        goto label05;

     label04:
        i13 = i13 + 1;

        goto label01;

     label05:
        goto label11;

     label06:
        if $i0 <= 0 goto label11;

        i14 = $i0 - 1;

     label07:
        if i14 < 0 goto label11;

        if z1 != 0 goto label08;

        $r6 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: com.jidesoft.swing.JideSplitPaneDivider getDividerAt(int)>(i14);

        $z2 = virtualinvoke $r6.<com.jidesoft.swing.JideSplitPaneDivider: boolean isVisible()>();

        if $z2 == 0 goto label10;

     label08:
        $i3 = r0.<com.jidesoft.swing.JideSplitPane: int _orientation>;

        if $i3 != 1 goto label09;

        $r4 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: com.jidesoft.swing.JideSplitPaneDivider getDividerAt(int)>(i14);

        $r5 = virtualinvoke $r4.<com.jidesoft.swing.JideSplitPaneDivider: java.awt.Rectangle getBounds()>();

        i12 = $r5.<java.awt.Rectangle: int x>;

        goto label11;

     label09:
        $r2 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: com.jidesoft.swing.JideSplitPaneDivider getDividerAt(int)>(i14);

        $r3 = virtualinvoke $r2.<com.jidesoft.swing.JideSplitPaneDivider: java.awt.Rectangle getBounds()>();

        i12 = $r3.<java.awt.Rectangle: int y>;

        goto label11;

     label10:
        $i18 = (int) -1;

        i14 = i14 + $i18;

        goto label07;

     label11:
        $i20 = (int) -1;

        if i12 == $i20 goto label12;

        $i1 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getDividerSize()>();

        $i2 = i12 + $i1;

        return $i2;

     label12:
        return 0;
    }

    public int getNextDividerLocation(com.jidesoft.swing.JideSplitPaneDivider, boolean, boolean)
    {
        boolean z0, z1, $z2, $z3;
        java.awt.Rectangle $r3, $r5, $r8, $r10;
        com.jidesoft.swing.JideSplitPaneDivider r1, $r2, $r4, $r6, $r7, $r9, $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18, i19, $i20, $i22, $i24, $i26;
        com.jidesoft.swing.JideSplitPane r0;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        r1 := @parameter0: com.jidesoft.swing.JideSplitPaneDivider;

        z1 := @parameter1: boolean;

        z0 := @parameter2: boolean;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int indexOfDivider(com.jidesoft.swing.JideSplitPaneDivider)>(r1);

        $i22 = (int) -1;

        i17 = $i22;

        if z0 != 0 goto label06;

        $i9 = $i0 + 1;

        $i10 = $i9 * 2;

        $i11 = $i10 + 1;

        $i12 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getComponentCount()>();

        if $i11 > $i12 goto label11;

        i18 = $i0 + 1;

     label01:
        $i13 = i18 * 2;

        $i14 = $i13 + 1;

        $i15 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getComponentCount()>();

        if $i14 >= $i15 goto label05;

        if z1 != 0 goto label02;

        $r11 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: com.jidesoft.swing.JideSplitPaneDivider getDividerAt(int)>(i18);

        $z3 = virtualinvoke $r11.<com.jidesoft.swing.JideSplitPaneDivider: boolean isVisible()>();

        if $z3 == 0 goto label04;

     label02:
        $i16 = r0.<com.jidesoft.swing.JideSplitPane: int _orientation>;

        if $i16 != 1 goto label03;

        $r9 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: com.jidesoft.swing.JideSplitPaneDivider getDividerAt(int)>(i18);

        $r10 = virtualinvoke $r9.<com.jidesoft.swing.JideSplitPaneDivider: java.awt.Rectangle getBounds()>();

        i17 = $r10.<java.awt.Rectangle: int x>;

        goto label05;

     label03:
        $r7 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: com.jidesoft.swing.JideSplitPaneDivider getDividerAt(int)>(i18);

        $r8 = virtualinvoke $r7.<com.jidesoft.swing.JideSplitPaneDivider: java.awt.Rectangle getBounds()>();

        i17 = $r8.<java.awt.Rectangle: int y>;

        goto label05;

     label04:
        i18 = i18 + 1;

        goto label01;

     label05:
        goto label11;

     label06:
        if $i0 <= 0 goto label11;

        i19 = $i0 - 1;

     label07:
        if i19 < 0 goto label11;

        if z1 != 0 goto label08;

        $r6 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: com.jidesoft.swing.JideSplitPaneDivider getDividerAt(int)>(i19);

        $z2 = virtualinvoke $r6.<com.jidesoft.swing.JideSplitPaneDivider: boolean isVisible()>();

        if $z2 == 0 goto label10;

     label08:
        $i8 = r0.<com.jidesoft.swing.JideSplitPane: int _orientation>;

        if $i8 != 1 goto label09;

        $r4 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: com.jidesoft.swing.JideSplitPaneDivider getDividerAt(int)>(i19);

        $r5 = virtualinvoke $r4.<com.jidesoft.swing.JideSplitPaneDivider: java.awt.Rectangle getBounds()>();

        i17 = $r5.<java.awt.Rectangle: int x>;

        goto label11;

     label09:
        $r2 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: com.jidesoft.swing.JideSplitPaneDivider getDividerAt(int)>(i19);

        $r3 = virtualinvoke $r2.<com.jidesoft.swing.JideSplitPaneDivider: java.awt.Rectangle getBounds()>();

        i17 = $r3.<java.awt.Rectangle: int y>;

        goto label11;

     label10:
        $i24 = (int) -1;

        i19 = i19 + $i24;

        goto label07;

     label11:
        $i26 = (int) -1;

        if i17 == $i26 goto label12;

        $i6 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getDividerSize()>();

        $i7 = i17 - $i6;

        return $i7;

     label12:
        $i1 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getOrientation()>();

        if $i1 != 1 goto label13;

        $i4 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getWidth()>();

        $i5 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getDividerSize()>();

        $i20 = $i4 - $i5;

        goto label14;

     label13:
        $i2 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getHeight()>();

        $i3 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getDividerSize()>();

        $i20 = $i2 - $i3;

     label14:
        return $i20;
    }

    public boolean isShowGripper()
    {
        com.jidesoft.swing.JideSplitPane r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        $z0 = r0.<com.jidesoft.swing.JideSplitPane: boolean _showGripper>;

        return $z0;
    }

    public void setShowGripper(boolean)
    {
        com.jidesoft.swing.JideSplitPane r0;
        boolean z0, z1, $z2;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        z1 := @parameter0: boolean;

        z0 = r0.<com.jidesoft.swing.JideSplitPane: boolean _showGripper>;

        if z0 == z1 goto label1;

        r0.<com.jidesoft.swing.JideSplitPane: boolean _showGripper> = z1;

        $z2 = r0.<com.jidesoft.swing.JideSplitPane: boolean _showGripper>;

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void firePropertyChange(java.lang.String,boolean,boolean)>("gripper", z0, $z2);

     label1:
        return;
    }

    public void doLayout()
    {
        com.jidesoft.swing.JideSplitPane r0;
        com.jidesoft.swing.JideSplitPaneLayout $r2;
        java.awt.LayoutManager $r1;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: boolean removeExtraDividers()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: java.awt.LayoutManager getLayout()>();

        $r2 = (com.jidesoft.swing.JideSplitPaneLayout) $r1;

        virtualinvoke $r2.<com.jidesoft.swing.JideSplitPaneLayout: void invalidateLayout(java.awt.Container)>(r0);

     label1:
        specialinvoke r0.<javax.swing.JPanel: void doLayout()>();

        return;
    }

    public boolean isContinuousLayout()
    {
        com.jidesoft.swing.JideSplitPane r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        $z0 = r0.<com.jidesoft.swing.JideSplitPane: boolean _continuousLayout>;

        return $z0;
    }

    public void setContinuousLayout(boolean)
    {
        com.jidesoft.swing.JideSplitPane r0;
        boolean z0, z1;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        z1 := @parameter0: boolean;

        z0 = r0.<com.jidesoft.swing.JideSplitPane: boolean _continuousLayout>;

        r0.<com.jidesoft.swing.JideSplitPane: boolean _continuousLayout> = z1;

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void firePropertyChange(java.lang.String,boolean,boolean)>("continuousLayout", z0, z1);

        return;
    }

    public javax.accessibility.AccessibleContext getAccessibleContext()
    {
        com.jidesoft.swing.JideSplitPane r0;
        com.jidesoft.swing.JideSplitPane$AccessibleJideSplitPane $r3;
        javax.accessibility.AccessibleContext $r1, $r2;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        $r1 = r0.<com.jidesoft.swing.JideSplitPane: javax.accessibility.AccessibleContext accessibleContext>;

        if $r1 != null goto label1;

        $r3 = new com.jidesoft.swing.JideSplitPane$AccessibleJideSplitPane;

        specialinvoke $r3.<com.jidesoft.swing.JideSplitPane$AccessibleJideSplitPane: void <init>(com.jidesoft.swing.JideSplitPane)>(r0);

        r0.<com.jidesoft.swing.JideSplitPane: javax.accessibility.AccessibleContext accessibleContext> = $r3;

     label1:
        $r2 = r0.<com.jidesoft.swing.JideSplitPane: javax.accessibility.AccessibleContext accessibleContext>;

        return $r2;
    }

    public boolean isDragResizable()
    {
        com.jidesoft.swing.JideSplitPane r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        $z0 = r0.<com.jidesoft.swing.JideSplitPane: boolean _dragResizable>;

        return $z0;
    }

    public void setDragResizable(boolean)
    {
        com.jidesoft.swing.JideSplitPane r0;
        boolean z0;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        z0 := @parameter0: boolean;

        r0.<com.jidesoft.swing.JideSplitPane: boolean _dragResizable> = z0;

        return;
    }

    public boolean isHeavyweightComponentEnabled()
    {
        com.jidesoft.swing.JideSplitPane r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        $z0 = r0.<com.jidesoft.swing.JideSplitPane: boolean _heavyweightComponentEnabled>;

        return $z0;
    }

    public void setHeavyweightComponentEnabled(boolean)
    {
        com.jidesoft.swing.JideSplitPane r0;
        boolean z0, z1, $z2, $z3;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        z1 := @parameter0: boolean;

        z0 = r0.<com.jidesoft.swing.JideSplitPane: boolean _heavyweightComponentEnabled>;

        $z2 = r0.<com.jidesoft.swing.JideSplitPane: boolean _heavyweightComponentEnabled>;

        if $z2 == z1 goto label1;

        r0.<com.jidesoft.swing.JideSplitPane: boolean _heavyweightComponentEnabled> = z1;

        $z3 = r0.<com.jidesoft.swing.JideSplitPane: boolean _heavyweightComponentEnabled>;

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void firePropertyChange(java.lang.String,boolean,boolean)>("heavyweightComponentEnabled", z0, $z3);

     label1:
        return;
    }

    public void setOneTouchExpandable(boolean)
    {
        com.jidesoft.swing.JideBoxLayout $r2, $r3;
        com.jidesoft.swing.JideSplitPane r0;
        int $i0, $i1;
        java.awt.LayoutManager $r1;
        boolean z0, z1, $z2, $z3, $z4;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        z1 := @parameter0: boolean;

        z0 = r0.<com.jidesoft.swing.JideSplitPane: boolean _oneTouchExpandable>;

        if z0 == z1 goto label4;

        r0.<com.jidesoft.swing.JideSplitPane: boolean _oneTouchExpandable> = z1;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: java.awt.LayoutManager getLayout()>();

        $z2 = $r1 instanceof com.jidesoft.swing.JideBoxLayout;

        if $z2 == 0 goto label1;

        $r3 = (com.jidesoft.swing.JideBoxLayout) $r1;

        virtualinvoke $r3.<com.jidesoft.swing.JideBoxLayout: void setResetWhenInvalidate(boolean)>(1);

     label1:
        if z1 == 0 goto label2;

        $i1 = r0.<com.jidesoft.swing.JideSplitPane: int oneTouchExpandableDividerSize>;

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void setDividerSize(int)>($i1);

        goto label3;

     label2:
        $i0 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("JideSplitPane.dividerSize");

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void setDividerSize(int)>($i0);

     label3:
        $z3 = r0.<com.jidesoft.swing.JideSplitPane: boolean _oneTouchExpandable>;

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void firePropertyChange(java.lang.String,boolean,boolean)>("oneTouchExpandable", z0, $z3);

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void revalidate()>();

        virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: void repaint()>();

        $z4 = $r1 instanceof com.jidesoft.swing.JideBoxLayout;

        if $z4 == 0 goto label4;

        $r2 = (com.jidesoft.swing.JideBoxLayout) $r1;

        virtualinvoke $r2.<com.jidesoft.swing.JideBoxLayout: void setResetWhenInvalidate(boolean)>(0);

     label4:
        return;
    }

    public boolean isOneTouchExpandable()
    {
        com.jidesoft.swing.JideSplitPane r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        $z0 = r0.<com.jidesoft.swing.JideSplitPane: boolean _oneTouchExpandable>;

        return $z0;
    }

    public void setLeftOneTouchButtonImageIcon(javax.swing.ImageIcon)
    {
        com.jidesoft.swing.JideSplitPane r0;
        javax.swing.ImageIcon r1;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        r1 := @parameter0: javax.swing.ImageIcon;

        r0.<com.jidesoft.swing.JideSplitPane: javax.swing.ImageIcon _leftOneTouchButtonImageIcon> = r1;

        return;
    }

    public javax.swing.ImageIcon getLeftOneTouchButtonImageIcon()
    {
        com.jidesoft.swing.JideSplitPane r0;
        javax.swing.ImageIcon $r1;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        $r1 = r0.<com.jidesoft.swing.JideSplitPane: javax.swing.ImageIcon _leftOneTouchButtonImageIcon>;

        return $r1;
    }

    public void setRightOneTouchButtonImageIcon(javax.swing.ImageIcon)
    {
        com.jidesoft.swing.JideSplitPane r0;
        javax.swing.ImageIcon r1;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        r1 := @parameter0: javax.swing.ImageIcon;

        r0.<com.jidesoft.swing.JideSplitPane: javax.swing.ImageIcon _rightOneTouchButtonImageIcon> = r1;

        return;
    }

    public javax.swing.ImageIcon getRightOneTouchButtonImageIcon()
    {
        com.jidesoft.swing.JideSplitPane r0;
        javax.swing.ImageIcon $r1;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        $r1 = r0.<com.jidesoft.swing.JideSplitPane: javax.swing.ImageIcon _rightOneTouchButtonImageIcon>;

        return $r1;
    }

    public void setDividerLocations(int[])
    {
        int[] r0;
        int $i0, i1, i2;
        com.jidesoft.swing.JideSplitPane r1;

        r1 := @this: com.jidesoft.swing.JideSplitPane;

        r0 := @parameter0: int[];

        i2 = 0;

     label1:
        $i0 = lengthof r0;

        if i2 >= $i0 goto label2;

        i1 = r0[i2];

        virtualinvoke r1.<com.jidesoft.swing.JideSplitPane: void setDividerLocation(int,int)>(i2, i1);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public int[] getDividerLocations()
    {
        int[] r1, $r2;
        com.jidesoft.swing.JideSplitPane r0;
        int $i0, $i1, $i2, $i3, $i4, i5;

        r0 := @this: com.jidesoft.swing.JideSplitPane;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getPaneCount()>();

        $i1 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getPaneCount()>();

        if $i1 != 0 goto label1;

        $r2 = newarray (int)[0];

        return $r2;

     label1:
        $i2 = $i0 - 1;

        r1 = newarray (int)[$i2];

        i5 = 0;

     label2:
        $i3 = $i0 - 1;

        if i5 >= $i3 goto label3;

        $i4 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPane: int getDividerLocation(int)>(i5);

        r1[i5] = $i4;

        i5 = i5 + 1;

        goto label2;

     label3:
        return r1;
    }

    static void access$000(com.jidesoft.swing.JideSplitPane)
    {
        com.jidesoft.swing.JideSplitPane r0;

        r0 := @parameter0: com.jidesoft.swing.JideSplitPane;

        specialinvoke r0.<com.jidesoft.swing.JideSplitPane: void stopDragging()>();

        return;
    }

    public static void <clinit>()
    {
        <com.jidesoft.swing.JideSplitPane: java.lang.String ONE_TOUCH_EXPANDABLE_PROPERTY> = "oneTouchExpandable";

        <com.jidesoft.swing.JideSplitPane: java.lang.String PROPERTY_HEAVYWEIGHT_COMPONENT_ENABLED> = "heavyweightComponentEnabled";

        <com.jidesoft.swing.JideSplitPane: java.lang.String PROPORTIONS_PROPERTY> = "proportions";

        <com.jidesoft.swing.JideSplitPane: java.lang.String PROPORTIONAL_LAYOUT_PROPERTY> = "proportionalLayout";

        <com.jidesoft.swing.JideSplitPane: java.lang.String GRIPPER_PROPERTY> = "gripper";

        <com.jidesoft.swing.JideSplitPane: java.lang.String CONTINUOUS_LAYOUT_PROPERTY> = "continuousLayout";

        <com.jidesoft.swing.JideSplitPane: java.lang.String PROPERTY_DIVIDER_LOCATION> = "dividerLocation";

        <com.jidesoft.swing.JideSplitPane: java.lang.String DIVIDER_SIZE_PROPERTY> = "dividerSize";

        <com.jidesoft.swing.JideSplitPane: java.lang.String ORIENTATION_PROPERTY> = "orientation";

        <com.jidesoft.swing.JideSplitPane: int HORIZONTAL_SPLIT> = 1;

        <com.jidesoft.swing.JideSplitPane: int VERTICAL_SPLIT> = 0;

        <com.jidesoft.swing.JideSplitPane: java.lang.String NON_CONTINUOUS_DIVIDER> = "nonContinuousDivider";

        return;
    }
}
