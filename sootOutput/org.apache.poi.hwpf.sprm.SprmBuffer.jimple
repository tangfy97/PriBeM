public final class org.apache.poi.hwpf.sprm.SprmBuffer extends java.lang.Object implements java.lang.Cloneable
{
    byte[] _buf;
    boolean _istd;
    int _offset;
    private final int _sprmsStartOffset;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        org.apache.poi.hwpf.sprm.SprmBuffer r0;

        r0 := @this: org.apache.poi.hwpf.sprm.SprmBuffer;

        specialinvoke r0.<org.apache.poi.hwpf.sprm.SprmBuffer: void <init>(int)>(0);

        return;
    }

    public void <init>(byte[])
    {
        byte[] r1;
        org.apache.poi.hwpf.sprm.SprmBuffer r0;

        r0 := @this: org.apache.poi.hwpf.sprm.SprmBuffer;

        r1 := @parameter0: byte[];

        specialinvoke r0.<org.apache.poi.hwpf.sprm.SprmBuffer: void <init>(byte[],int)>(r1, 0);

        return;
    }

    public void <init>(byte[], boolean)
    {
        byte[] r1;
        org.apache.poi.hwpf.sprm.SprmBuffer r0;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.sprm.SprmBuffer;

        r1 := @parameter0: byte[];

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.poi.hwpf.sprm.SprmBuffer: void <init>(byte[],boolean,int)>(r1, z0, 0);

        return;
    }

    public void <init>(byte[], boolean, int)
    {
        byte[] r1;
        org.apache.poi.hwpf.sprm.SprmBuffer r0;
        int $i0, i1;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.sprm.SprmBuffer;

        r1 := @parameter0: byte[];

        z0 := @parameter1: boolean;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = lengthof r1;

        r0.<org.apache.poi.hwpf.sprm.SprmBuffer: int _offset> = $i0;

        r0.<org.apache.poi.hwpf.sprm.SprmBuffer: byte[] _buf> = r1;

        r0.<org.apache.poi.hwpf.sprm.SprmBuffer: boolean _istd> = z0;

        r0.<org.apache.poi.hwpf.sprm.SprmBuffer: int _sprmsStartOffset> = i1;

        return;
    }

    public void <init>(byte[], int)
    {
        int i0;
        byte[] r1;
        org.apache.poi.hwpf.sprm.SprmBuffer r0;

        r0 := @this: org.apache.poi.hwpf.sprm.SprmBuffer;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.poi.hwpf.sprm.SprmBuffer: void <init>(byte[],boolean,int)>(r1, 0, i0);

        return;
    }

    public void <init>(int)
    {
        byte[] $r1;
        org.apache.poi.hwpf.sprm.SprmBuffer r0;
        int i0, $i1;

        r0 := @this: org.apache.poi.hwpf.sprm.SprmBuffer;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = i0 + 4;

        $r1 = newarray (byte)[$i1];

        r0.<org.apache.poi.hwpf.sprm.SprmBuffer: byte[] _buf> = $r1;

        r0.<org.apache.poi.hwpf.sprm.SprmBuffer: int _offset> = i0;

        r0.<org.apache.poi.hwpf.sprm.SprmBuffer: int _sprmsStartOffset> = i0;

        return;
    }

    public void addSprm(short, byte)
    {
        byte[] $r1, $r2;
        org.apache.poi.hwpf.sprm.SprmBuffer r0;
        short s0;
        byte b6;
        int $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.apache.poi.hwpf.sprm.SprmBuffer;

        s0 := @parameter0: short;

        b6 := @parameter1: byte;

        specialinvoke r0.<org.apache.poi.hwpf.sprm.SprmBuffer: void ensureCapacity(int)>(3);

        $r1 = r0.<org.apache.poi.hwpf.sprm.SprmBuffer: byte[] _buf>;

        $i1 = r0.<org.apache.poi.hwpf.sprm.SprmBuffer: int _offset>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>($r1, $i1, s0);

        $i2 = r0.<org.apache.poi.hwpf.sprm.SprmBuffer: int _offset>;

        $i3 = $i2 + 2;

        r0.<org.apache.poi.hwpf.sprm.SprmBuffer: int _offset> = $i3;

        $r2 = r0.<org.apache.poi.hwpf.sprm.SprmBuffer: byte[] _buf>;

        $i4 = r0.<org.apache.poi.hwpf.sprm.SprmBuffer: int _offset>;

        $i5 = $i4 + 1;

        r0.<org.apache.poi.hwpf.sprm.SprmBuffer: int _offset> = $i5;

        $r2[$i4] = b6;

        return;
    }

    public void addSprm(short, byte[])
    {
        byte[] r0, $r2, $r3, $r4;
        org.apache.poi.hwpf.sprm.SprmBuffer r1;
        short s2;
        byte $b9;
        int $i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11;

        r1 := @this: org.apache.poi.hwpf.sprm.SprmBuffer;

        s2 := @parameter0: short;

        r0 := @parameter1: byte[];

        $i0 = lengthof r0;

        i1 = 3 + $i0;

        specialinvoke r1.<org.apache.poi.hwpf.sprm.SprmBuffer: void ensureCapacity(int)>(i1);

        $r2 = r1.<org.apache.poi.hwpf.sprm.SprmBuffer: byte[] _buf>;

        $i3 = r1.<org.apache.poi.hwpf.sprm.SprmBuffer: int _offset>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>($r2, $i3, s2);

        $i4 = r1.<org.apache.poi.hwpf.sprm.SprmBuffer: int _offset>;

        $i5 = $i4 + 2;

        r1.<org.apache.poi.hwpf.sprm.SprmBuffer: int _offset> = $i5;

        $r3 = r1.<org.apache.poi.hwpf.sprm.SprmBuffer: byte[] _buf>;

        $i6 = r1.<org.apache.poi.hwpf.sprm.SprmBuffer: int _offset>;

        $i7 = $i6 + 1;

        r1.<org.apache.poi.hwpf.sprm.SprmBuffer: int _offset> = $i7;

        $i8 = lengthof r0;

        $b9 = (byte) $i8;

        $r3[$i6] = $b9;

        $r4 = r1.<org.apache.poi.hwpf.sprm.SprmBuffer: byte[] _buf>;

        $i11 = r1.<org.apache.poi.hwpf.sprm.SprmBuffer: int _offset>;

        $i10 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, $r4, $i11, $i10);

        return;
    }

    public void addSprm(short, int)
    {
        byte[] $r1, $r2;
        org.apache.poi.hwpf.sprm.SprmBuffer r0;
        short s0;
        int $i1, $i2, $i3, i4, $i5, $i6, $i7;

        r0 := @this: org.apache.poi.hwpf.sprm.SprmBuffer;

        s0 := @parameter0: short;

        i4 := @parameter1: int;

        specialinvoke r0.<org.apache.poi.hwpf.sprm.SprmBuffer: void ensureCapacity(int)>(6);

        $r1 = r0.<org.apache.poi.hwpf.sprm.SprmBuffer: byte[] _buf>;

        $i1 = r0.<org.apache.poi.hwpf.sprm.SprmBuffer: int _offset>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>($r1, $i1, s0);

        $i2 = r0.<org.apache.poi.hwpf.sprm.SprmBuffer: int _offset>;

        $i3 = $i2 + 2;

        r0.<org.apache.poi.hwpf.sprm.SprmBuffer: int _offset> = $i3;

        $r2 = r0.<org.apache.poi.hwpf.sprm.SprmBuffer: byte[] _buf>;

        $i5 = r0.<org.apache.poi.hwpf.sprm.SprmBuffer: int _offset>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>($r2, $i5, i4);

        $i6 = r0.<org.apache.poi.hwpf.sprm.SprmBuffer: int _offset>;

        $i7 = $i6 + 4;

        r0.<org.apache.poi.hwpf.sprm.SprmBuffer: int _offset> = $i7;

        return;
    }

    public void addSprm(short, short)
    {
        byte[] $r1, $r2;
        org.apache.poi.hwpf.sprm.SprmBuffer r0;
        short s0, s4;
        int $i1, $i2, $i3, $i5, $i6, $i7;

        r0 := @this: org.apache.poi.hwpf.sprm.SprmBuffer;

        s0 := @parameter0: short;

        s4 := @parameter1: short;

        specialinvoke r0.<org.apache.poi.hwpf.sprm.SprmBuffer: void ensureCapacity(int)>(4);

        $r1 = r0.<org.apache.poi.hwpf.sprm.SprmBuffer: byte[] _buf>;

        $i1 = r0.<org.apache.poi.hwpf.sprm.SprmBuffer: int _offset>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>($r1, $i1, s0);

        $i2 = r0.<org.apache.poi.hwpf.sprm.SprmBuffer: int _offset>;

        $i3 = $i2 + 2;

        r0.<org.apache.poi.hwpf.sprm.SprmBuffer: int _offset> = $i3;

        $r2 = r0.<org.apache.poi.hwpf.sprm.SprmBuffer: byte[] _buf>;

        $i5 = r0.<org.apache.poi.hwpf.sprm.SprmBuffer: int _offset>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>($r2, $i5, s4);

        $i6 = r0.<org.apache.poi.hwpf.sprm.SprmBuffer: int _offset>;

        $i7 = $i6 + 2;

        r0.<org.apache.poi.hwpf.sprm.SprmBuffer: int _offset> = $i7;

        return;
    }

    public void append(byte[])
    {
        byte[] r1;
        org.apache.poi.hwpf.sprm.SprmBuffer r0;

        r0 := @this: org.apache.poi.hwpf.sprm.SprmBuffer;

        r1 := @parameter0: byte[];

        virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmBuffer: void append(byte[],int)>(r1, 0);

        return;
    }

    public void append(byte[], int)
    {
        byte[] r1, $r2;
        org.apache.poi.hwpf.sprm.SprmBuffer r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        r0 := @this: org.apache.poi.hwpf.sprm.SprmBuffer;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = lengthof r1;

        $i2 = $i1 - i0;

        specialinvoke r0.<org.apache.poi.hwpf.sprm.SprmBuffer: void ensureCapacity(int)>($i2);

        $r2 = r0.<org.apache.poi.hwpf.sprm.SprmBuffer: byte[] _buf>;

        $i5 = r0.<org.apache.poi.hwpf.sprm.SprmBuffer: int _offset>;

        $i3 = lengthof r1;

        $i4 = $i3 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r2, $i5, $i4);

        $i8 = r0.<org.apache.poi.hwpf.sprm.SprmBuffer: int _offset>;

        $i6 = lengthof r1;

        $i7 = $i6 - i0;

        $i9 = $i8 + $i7;

        r0.<org.apache.poi.hwpf.sprm.SprmBuffer: int _offset> = $i9;

        return;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        byte[] $r3, $r4, $r5, $r6, $r7;
        org.apache.poi.hwpf.sprm.SprmBuffer r0, r2;
        int $i0, $i1;
        java.lang.Object $r1;

        r0 := @this: org.apache.poi.hwpf.sprm.SprmBuffer;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r2 = (org.apache.poi.hwpf.sprm.SprmBuffer) $r1;

        $r3 = r0.<org.apache.poi.hwpf.sprm.SprmBuffer: byte[] _buf>;

        $i0 = lengthof $r3;

        $r4 = newarray (byte)[$i0];

        r2.<org.apache.poi.hwpf.sprm.SprmBuffer: byte[] _buf> = $r4;

        $r7 = r0.<org.apache.poi.hwpf.sprm.SprmBuffer: byte[] _buf>;

        $r6 = r2.<org.apache.poi.hwpf.sprm.SprmBuffer: byte[] _buf>;

        $r5 = r0.<org.apache.poi.hwpf.sprm.SprmBuffer: byte[] _buf>;

        $i1 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, $r6, 0, $i1);

        return r2;
    }

    private void ensureCapacity(int)
    {
        byte[] $r1, r2, $r3, $r4;
        org.apache.poi.hwpf.sprm.SprmBuffer r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: org.apache.poi.hwpf.sprm.SprmBuffer;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.poi.hwpf.sprm.SprmBuffer: int _offset>;

        $i3 = $i1 + i0;

        $r1 = r0.<org.apache.poi.hwpf.sprm.SprmBuffer: byte[] _buf>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        $i4 = r0.<org.apache.poi.hwpf.sprm.SprmBuffer: int _offset>;

        $i5 = $i4 + i0;

        r2 = newarray (byte)[$i5];

        $r4 = r0.<org.apache.poi.hwpf.sprm.SprmBuffer: byte[] _buf>;

        $r3 = r0.<org.apache.poi.hwpf.sprm.SprmBuffer: byte[] _buf>;

        $i6 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r2, 0, $i6);

        r0.<org.apache.poi.hwpf.sprm.SprmBuffer: byte[] _buf> = r2;

     label1:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        byte[] $r3, $r4;
        org.apache.poi.hwpf.sprm.SprmBuffer r1, r2;
        java.lang.Object r0;
        boolean $z0, $z1;

        r2 := @this: org.apache.poi.hwpf.sprm.SprmBuffer;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.poi.hwpf.sprm.SprmBuffer;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (org.apache.poi.hwpf.sprm.SprmBuffer) r0;

        $r4 = r2.<org.apache.poi.hwpf.sprm.SprmBuffer: byte[] _buf>;

        $r3 = r1.<org.apache.poi.hwpf.sprm.SprmBuffer: byte[] _buf>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r4, $r3);

        return $z1;
    }

    public int hashCode()
    {
        java.lang.AssertionError $r0;
        boolean $z0;
        org.apache.poi.hwpf.sprm.SprmBuffer r1;

        r1 := @this: org.apache.poi.hwpf.sprm.SprmBuffer;

        $z0 = <org.apache.poi.hwpf.sprm.SprmBuffer: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>(java.lang.Object)>("hashCode not designed");

        throw $r0;

     label1:
        return 42;
    }

    public org.apache.poi.hwpf.sprm.SprmOperation findSprm(short)
    {
        byte[] $r2;
        org.apache.poi.hwpf.sprm.SprmBuffer r1;
        short s0;
        int $i1, $i2, $i3, $i4;
        org.apache.poi.hwpf.sprm.SprmIterator $r0;
        org.apache.poi.hwpf.sprm.SprmOperation $r3;
        boolean $z0;

        r1 := @this: org.apache.poi.hwpf.sprm.SprmBuffer;

        s0 := @parameter0: short;

        $i1 = staticinvoke <org.apache.poi.hwpf.sprm.SprmOperation: int getOperationFromOpcode(short)>(s0);

        $i2 = staticinvoke <org.apache.poi.hwpf.sprm.SprmOperation: int getTypeFromOpcode(short)>(s0);

        $r0 = new org.apache.poi.hwpf.sprm.SprmIterator;

        $r2 = r1.<org.apache.poi.hwpf.sprm.SprmBuffer: byte[] _buf>;

        specialinvoke $r0.<org.apache.poi.hwpf.sprm.SprmIterator: void <init>(byte[],int)>($r2, 2);

     label1:
        $z0 = virtualinvoke $r0.<org.apache.poi.hwpf.sprm.SprmIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke $r0.<org.apache.poi.hwpf.sprm.SprmIterator: org.apache.poi.hwpf.sprm.SprmOperation next()>();

        $i3 = virtualinvoke $r3.<org.apache.poi.hwpf.sprm.SprmOperation: int getOperation()>();

        if $i3 != $i1 goto label2;

        $i4 = virtualinvoke $r3.<org.apache.poi.hwpf.sprm.SprmOperation: int getType()>();

        if $i4 != $i2 goto label2;

        return $r3;

     label2:
        goto label1;

     label3:
        return null;
    }

    private int findSprmOffset(short)
    {
        short s0;
        org.apache.poi.hwpf.sprm.SprmBuffer r0;
        int $i1, $i3;
        org.apache.poi.hwpf.sprm.SprmOperation $r1;

        r0 := @this: org.apache.poi.hwpf.sprm.SprmBuffer;

        s0 := @parameter0: short;

        $r1 = virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmBuffer: org.apache.poi.hwpf.sprm.SprmOperation findSprm(short)>(s0);

        if $r1 != null goto label1;

        $i3 = (int) -1;

        return $i3;

     label1:
        $i1 = virtualinvoke $r1.<org.apache.poi.hwpf.sprm.SprmOperation: int getGrpprlOffset()>();

        return $i1;
    }

    public byte[] toByteArray()
    {
        byte[] $r1;
        org.apache.poi.hwpf.sprm.SprmBuffer r0;

        r0 := @this: org.apache.poi.hwpf.sprm.SprmBuffer;

        $r1 = r0.<org.apache.poi.hwpf.sprm.SprmBuffer: byte[] _buf>;

        return $r1;
    }

    public org.apache.poi.hwpf.sprm.SprmIterator iterator()
    {
        byte[] $r2;
        org.apache.poi.hwpf.sprm.SprmBuffer r1;
        int $i0;
        org.apache.poi.hwpf.sprm.SprmIterator $r0;

        r1 := @this: org.apache.poi.hwpf.sprm.SprmBuffer;

        $r0 = new org.apache.poi.hwpf.sprm.SprmIterator;

        $r2 = r1.<org.apache.poi.hwpf.sprm.SprmBuffer: byte[] _buf>;

        $i0 = r1.<org.apache.poi.hwpf.sprm.SprmBuffer: int _sprmsStartOffset>;

        specialinvoke $r0.<org.apache.poi.hwpf.sprm.SprmIterator: void <init>(byte[],int)>($r2, $i0);

        return $r0;
    }

    public void updateSprm(short, byte)
    {
        byte[] $r1;
        short s0;
        byte b2;
        org.apache.poi.hwpf.sprm.SprmBuffer r0;
        int $i1, $i4;

        r0 := @this: org.apache.poi.hwpf.sprm.SprmBuffer;

        s0 := @parameter0: short;

        b2 := @parameter1: byte;

        $i1 = specialinvoke r0.<org.apache.poi.hwpf.sprm.SprmBuffer: int findSprmOffset(short)>(s0);

        $i4 = (int) -1;

        if $i1 == $i4 goto label1;

        $r1 = r0.<org.apache.poi.hwpf.sprm.SprmBuffer: byte[] _buf>;

        $r1[$i1] = b2;

        return;

     label1:
        virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmBuffer: void addSprm(short,byte)>(s0, b2);

        return;
    }

    public void updateSprm(short, boolean)
    {
        byte[] $r1;
        org.apache.poi.hwpf.sprm.SprmBuffer r0;
        short s0;
        byte $b2, $b3;
        int $i1, $i5;
        boolean z0, $z1;

        r0 := @this: org.apache.poi.hwpf.sprm.SprmBuffer;

        s0 := @parameter0: short;

        z0 := @parameter1: boolean;

        $i1 = specialinvoke r0.<org.apache.poi.hwpf.sprm.SprmBuffer: int findSprmOffset(short)>(s0);

        $i5 = (int) -1;

        if $i1 == $i5 goto label3;

        $r1 = r0.<org.apache.poi.hwpf.sprm.SprmBuffer: byte[] _buf>;

        if z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $b2 = (byte) $z1;

        $r1[$i1] = $b2;

        return;

     label3:
        if z0 == 0 goto label4;

        $b3 = 1;

        goto label5;

     label4:
        $b3 = 0;

     label5:
        virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmBuffer: void addSprm(short,int)>(s0, $b3);

        return;
    }

    public void updateSprm(short, int)
    {
        byte[] $r1;
        short s0;
        org.apache.poi.hwpf.sprm.SprmBuffer r0;
        int $i1, i2, $i4;

        r0 := @this: org.apache.poi.hwpf.sprm.SprmBuffer;

        s0 := @parameter0: short;

        i2 := @parameter1: int;

        $i1 = specialinvoke r0.<org.apache.poi.hwpf.sprm.SprmBuffer: int findSprmOffset(short)>(s0);

        $i4 = (int) -1;

        if $i1 == $i4 goto label1;

        $r1 = r0.<org.apache.poi.hwpf.sprm.SprmBuffer: byte[] _buf>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>($r1, $i1, i2);

        return;

     label1:
        virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmBuffer: void addSprm(short,int)>(s0, i2);

        return;
    }

    public void updateSprm(short, short)
    {
        byte[] $r1;
        short s0, s2;
        org.apache.poi.hwpf.sprm.SprmBuffer r0;
        int $i1, $i4;

        r0 := @this: org.apache.poi.hwpf.sprm.SprmBuffer;

        s0 := @parameter0: short;

        s2 := @parameter1: short;

        $i1 = specialinvoke r0.<org.apache.poi.hwpf.sprm.SprmBuffer: int findSprmOffset(short)>(s0);

        $i4 = (int) -1;

        if $i1 == $i4 goto label1;

        $r1 = r0.<org.apache.poi.hwpf.sprm.SprmBuffer: byte[] _buf>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>($r1, $i1, s2);

        return;

     label1:
        virtualinvoke r0.<org.apache.poi.hwpf.sprm.SprmBuffer: void addSprm(short,short)>(s0, s2);

        return;
    }

    public java.lang.String toString()
    {
        byte[] $r2;
        org.apache.poi.hwpf.sprm.SprmBuffer r1;
        java.lang.Exception $r6;
        int $i0;
        org.apache.poi.hwpf.sprm.SprmIterator $r3;
        java.lang.StringBuilder $r0;
        java.lang.String $r4;
        org.apache.poi.hwpf.sprm.SprmOperation $r5;
        boolean $z0;

        r1 := @this: org.apache.poi.hwpf.sprm.SprmBuffer;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sprms (");

        $r2 = r1.<org.apache.poi.hwpf.sprm.SprmBuffer: byte[] _buf>;

        $i0 = lengthof $r2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" byte(s)): ");

        $r3 = virtualinvoke r1.<org.apache.poi.hwpf.sprm.SprmBuffer: org.apache.poi.hwpf.sprm.SprmIterator iterator()>();

     label1:
        $z0 = virtualinvoke $r3.<org.apache.poi.hwpf.sprm.SprmIterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

     label2:
        $r5 = virtualinvoke $r3.<org.apache.poi.hwpf.sprm.SprmIterator: org.apache.poi.hwpf.sprm.SprmOperation next()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error");

     label5:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        goto label1;

     label6:
        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/poi/hwpf/sprm/SprmBuffer;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.poi.hwpf.sprm.SprmBuffer: boolean $assertionsDisabled> = $z1;

        return;
    }
}
