public class org.apache.tika.language.LanguageProfile extends java.lang.Object
{
    public static final int DEFAULT_NGRAM_LENGTH;
    private final int length;
    private final java.util.Map ngrams;
    private long count;

    public void <init>(int)
    {
        int i0;
        java.util.HashMap $r1;
        org.apache.tika.language.LanguageProfile r0;

        r0 := @this: org.apache.tika.language.LanguageProfile;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.tika.language.LanguageProfile: java.util.Map ngrams> = $r1;

        r0.<org.apache.tika.language.LanguageProfile: long count> = 0L;

        r0.<org.apache.tika.language.LanguageProfile: int length> = i0;

        return;
    }

    public void <init>()
    {
        org.apache.tika.language.LanguageProfile r0;

        r0 := @this: org.apache.tika.language.LanguageProfile;

        specialinvoke r0.<org.apache.tika.language.LanguageProfile: void <init>(int)>(3);

        return;
    }

    public void <init>(java.lang.String, int)
    {
        int i0, $i1;
        char[] $r3;
        java.lang.String r2;
        org.apache.tika.language.ProfilingWriter $r1;
        org.apache.tika.language.LanguageProfile r0;

        r0 := @this: org.apache.tika.language.LanguageProfile;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.tika.language.LanguageProfile: void <init>(int)>(i0);

        $r1 = new org.apache.tika.language.ProfilingWriter;

        specialinvoke $r1.<org.apache.tika.language.ProfilingWriter: void <init>(org.apache.tika.language.LanguageProfile)>(r0);

        $r3 = virtualinvoke r2.<java.lang.String: char[] toCharArray()>();

        $i1 = lengthof $r3;

        virtualinvoke $r1.<org.apache.tika.language.ProfilingWriter: void write(char[],int,int)>($r3, 0, $i1);

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.apache.tika.language.LanguageProfile r0;

        r0 := @this: org.apache.tika.language.LanguageProfile;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.tika.language.LanguageProfile: void <init>(java.lang.String,int)>(r1, 3);

        return;
    }

    public long getCount()
    {
        long $l0;
        org.apache.tika.language.LanguageProfile r0;

        r0 := @this: org.apache.tika.language.LanguageProfile;

        $l0 = r0.<org.apache.tika.language.LanguageProfile: long count>;

        return $l0;
    }

    public long getCount(java.lang.String)
    {
        org.apache.tika.language.LanguageProfile$Counter r4;
        java.util.Map $r2;
        java.lang.Object $r3;
        long $l0;
        java.lang.String r1;
        org.apache.tika.language.LanguageProfile r0;

        r0 := @this: org.apache.tika.language.LanguageProfile;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.tika.language.LanguageProfile: java.util.Map ngrams>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.tika.language.LanguageProfile$Counter) $r3;

        if r4 == null goto label1;

        $l0 = staticinvoke <org.apache.tika.language.LanguageProfile$Counter: long access$000(org.apache.tika.language.LanguageProfile$Counter)>(r4);

        return $l0;

     label1:
        return 0L;
    }

    public void add(java.lang.String)
    {
        java.lang.String r1;
        org.apache.tika.language.LanguageProfile r0;

        r0 := @this: org.apache.tika.language.LanguageProfile;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.tika.language.LanguageProfile: void add(java.lang.String,long)>(r1, 1L);

        return;
    }

    public void add(java.lang.String, long)
    {
        org.apache.tika.language.LanguageProfile$Counter $r4, r13;
        long l2, $l3, $l4;
        java.util.Map $r2, $r5;
        int $i0, $i1, $i5, $i6;
        java.lang.String r1, $r12;
        org.apache.tika.language.LanguageProfile r0;
        java.lang.IllegalArgumentException $r6;
        java.lang.Object $r3;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11;

        r0 := @this: org.apache.tika.language.LanguageProfile;

        r1 := @parameter0: java.lang.String;

        l2 := @parameter1: long;

        $i0 = r0.<org.apache.tika.language.LanguageProfile: int length>;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 == $i1 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to add an ngram of incorrect length: ");

        $i5 = virtualinvoke r1.<java.lang.String: int length()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != ");

        $i6 = r0.<org.apache.tika.language.LanguageProfile: int length>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r6;

     label1:
        $r2 = r0.<org.apache.tika.language.LanguageProfile: java.util.Map ngrams>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r13 = (org.apache.tika.language.LanguageProfile$Counter) $r3;

        if r13 != null goto label2;

        $r4 = new org.apache.tika.language.LanguageProfile$Counter;

        specialinvoke $r4.<org.apache.tika.language.LanguageProfile$Counter: void <init>(org.apache.tika.language.LanguageProfile$1)>(null);

        r13 = $r4;

        $r5 = r0.<org.apache.tika.language.LanguageProfile: java.util.Map ngrams>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

     label2:
        staticinvoke <org.apache.tika.language.LanguageProfile$Counter: long access$014(org.apache.tika.language.LanguageProfile$Counter,long)>(r13, l2);

        $l3 = r0.<org.apache.tika.language.LanguageProfile: long count>;

        $l4 = $l3 + l2;

        r0.<org.apache.tika.language.LanguageProfile: long count> = $l4;

        return;
    }

    public double distance(org.apache.tika.language.LanguageProfile)
    {
        java.util.Map $r3, $r5;
        org.apache.tika.language.LanguageProfile r0, r1;
        boolean $z0;
        java.util.Set $r4, $r6;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r15;
        long $l2, $l3, $l4, $l5;
        java.util.HashSet $r2;
        int $i0, $i1, $i6, $i7;
        java.lang.String r9, $r16;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6, $d7, d8, d9, $d10, d11;
        java.util.Iterator $r7;
        java.lang.IllegalArgumentException $r10;
        java.lang.Object $r8;

        r0 := @this: org.apache.tika.language.LanguageProfile;

        r1 := @parameter0: org.apache.tika.language.LanguageProfile;

        $i1 = r0.<org.apache.tika.language.LanguageProfile: int length>;

        $i0 = r1.<org.apache.tika.language.LanguageProfile: int length>;

        if $i1 == $i0 goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to calculage distance of language profiles with different ngram lengths: ");

        $i6 = r1.<org.apache.tika.language.LanguageProfile: int length>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != ");

        $i7 = r0.<org.apache.tika.language.LanguageProfile: int length>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r10;

     label1:
        d11 = 0.0;

        $l2 = r0.<org.apache.tika.language.LanguageProfile: long count>;

        $d0 = (double) $l2;

        $d1 = staticinvoke <java.lang.Math: double max(double,double)>($d0, 1.0);

        $l3 = r1.<org.apache.tika.language.LanguageProfile: long count>;

        $d2 = (double) $l3;

        $d3 = staticinvoke <java.lang.Math: double max(double,double)>($d2, 1.0);

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        $r3 = r0.<org.apache.tika.language.LanguageProfile: java.util.Map ngrams>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>();

        interfaceinvoke $r2.<java.util.Set: boolean addAll(java.util.Collection)>($r4);

        $r5 = r1.<org.apache.tika.language.LanguageProfile: java.util.Map ngrams>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set keySet()>();

        interfaceinvoke $r2.<java.util.Set: boolean addAll(java.util.Collection)>($r6);

        $r7 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.String) $r8;

        $l4 = virtualinvoke r0.<org.apache.tika.language.LanguageProfile: long getCount(java.lang.String)>(r9);

        $d5 = (double) $l4;

        d6 = $d5 / $d1;

        $l5 = virtualinvoke r1.<org.apache.tika.language.LanguageProfile: long getCount(java.lang.String)>(r9);

        $d7 = (double) $l5;

        d8 = $d7 / $d3;

        d9 = d6 - d8;

        $d10 = d9 * d9;

        d11 = d11 + $d10;

        goto label2;

     label3:
        $d4 = staticinvoke <java.lang.Math: double sqrt(double)>(d11);

        return $d4;
    }

    public java.lang.String toString()
    {
        java.lang.String $r2;
        org.apache.tika.language.LanguageProfile r0;
        java.util.Map $r1;

        r0 := @this: org.apache.tika.language.LanguageProfile;

        $r1 = r0.<org.apache.tika.language.LanguageProfile: java.util.Map ngrams>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <org.apache.tika.language.LanguageProfile: int DEFAULT_NGRAM_LENGTH> = 3;

        return;
    }
}
