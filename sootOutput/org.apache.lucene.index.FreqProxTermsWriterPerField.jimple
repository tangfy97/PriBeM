final class org.apache.lucene.index.FreqProxTermsWriterPerField extends org.apache.lucene.index.TermsHashConsumerPerField implements java.lang.Comparable
{
    final org.apache.lucene.index.FreqProxTermsWriter parent;
    final org.apache.lucene.index.TermsHashPerField termsHashPerField;
    final org.apache.lucene.index.FieldInfo fieldInfo;
    final org.apache.lucene.index.DocumentsWriterPerThread$DocState docState;
    final org.apache.lucene.index.FieldInvertState fieldState;
    private boolean hasFreq;
    private boolean hasProx;
    private boolean hasOffsets;
    org.apache.lucene.analysis.tokenattributes.PayloadAttribute payloadAttribute;
    org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAttribute;
    boolean hasPayloads;
    org.apache.lucene.util.BytesRef payload;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.index.TermsHashPerField, org.apache.lucene.index.FreqProxTermsWriter, org.apache.lucene.index.FieldInfo)
    {
        org.apache.lucene.index.FieldInvertState $r5;
        org.apache.lucene.index.FieldInfo$IndexOptions $r6;
        org.apache.lucene.index.FreqProxTermsWriterPerField r0;
        org.apache.lucene.index.DocumentsWriterPerThread$DocState $r4;
        org.apache.lucene.index.TermsHashPerField r1;
        org.apache.lucene.index.FieldInfo r3;
        org.apache.lucene.index.FreqProxTermsWriter r2;

        r0 := @this: org.apache.lucene.index.FreqProxTermsWriterPerField;

        r1 := @parameter0: org.apache.lucene.index.TermsHashPerField;

        r2 := @parameter1: org.apache.lucene.index.FreqProxTermsWriter;

        r3 := @parameter2: org.apache.lucene.index.FieldInfo;

        specialinvoke r0.<org.apache.lucene.index.TermsHashConsumerPerField: void <init>()>();

        r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField> = r1;

        r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.FreqProxTermsWriter parent> = r2;

        r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.FieldInfo fieldInfo> = r3;

        $r4 = r1.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState> = $r4;

        $r5 = r1.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.FieldInvertState fieldState> = $r5;

        $r6 = virtualinvoke r3.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$IndexOptions getIndexOptions()>();

        specialinvoke r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: void setIndexOptions(org.apache.lucene.index.FieldInfo$IndexOptions)>($r6);

        return;
    }

    int getStreamCount()
    {
        org.apache.lucene.index.FreqProxTermsWriterPerField r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.FreqProxTermsWriterPerField;

        $z0 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: boolean hasProx>;

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 2;
    }

    void finish()
    {
        org.apache.lucene.index.FieldInfo $r1;
        org.apache.lucene.index.FreqProxTermsWriterPerField r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.FreqProxTermsWriterPerField;

        $z0 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: boolean hasPayloads>;

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.FieldInfo fieldInfo>;

        virtualinvoke $r1.<org.apache.lucene.index.FieldInfo: void setStorePayloads()>();

     label1:
        return;
    }

    void skippingLongTerm()
    {
        org.apache.lucene.index.FreqProxTermsWriterPerField r0;

        r0 := @this: org.apache.lucene.index.FreqProxTermsWriterPerField;

        return;
    }

    public int compareTo(org.apache.lucene.index.FreqProxTermsWriterPerField)
    {
        org.apache.lucene.index.FreqProxTermsWriterPerField r0, r2;
        int $i0;
        org.apache.lucene.index.FieldInfo $r1, $r3;
        java.lang.String $r4, $r5;

        r0 := @this: org.apache.lucene.index.FreqProxTermsWriterPerField;

        r2 := @parameter0: org.apache.lucene.index.FreqProxTermsWriterPerField;

        $r1 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r5 = $r1.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r3 = r2.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r4 = $r3.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $i0 = virtualinvoke $r5.<java.lang.String: int compareTo(java.lang.String)>($r4);

        return $i0;
    }

    void reset()
    {
        org.apache.lucene.index.FieldInfo $r1;
        org.apache.lucene.index.FieldInfo$IndexOptions $r2;
        org.apache.lucene.index.FreqProxTermsWriterPerField r0;

        r0 := @this: org.apache.lucene.index.FreqProxTermsWriterPerField;

        $r1 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$IndexOptions getIndexOptions()>();

        specialinvoke r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: void setIndexOptions(org.apache.lucene.index.FieldInfo$IndexOptions)>($r2);

        r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.analysis.tokenattributes.PayloadAttribute payloadAttribute> = null;

        return;
    }

    private void setIndexOptions(org.apache.lucene.index.FieldInfo$IndexOptions)
    {
        org.apache.lucene.index.FieldInfo$IndexOptions r0, $r2, $r3, $r4;
        org.apache.lucene.index.FreqProxTermsWriterPerField r1;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.lucene.index.FreqProxTermsWriterPerField;

        r0 := @parameter0: org.apache.lucene.index.FieldInfo$IndexOptions;

        if r0 != null goto label1;

        r1.<org.apache.lucene.index.FreqProxTermsWriterPerField: boolean hasOffsets> = 1;

        r1.<org.apache.lucene.index.FreqProxTermsWriterPerField: boolean hasProx> = 1;

        r1.<org.apache.lucene.index.FreqProxTermsWriterPerField: boolean hasFreq> = 1;

        goto label8;

     label1:
        $r2 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_AND_FREQS>;

        $i0 = virtualinvoke r0.<org.apache.lucene.index.FieldInfo$IndexOptions: int compareTo(java.lang.Enum)>($r2);

        if $i0 < 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        r1.<org.apache.lucene.index.FreqProxTermsWriterPerField: boolean hasFreq> = $z0;

        $r3 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_AND_FREQS_AND_POSITIONS>;

        $i1 = virtualinvoke r0.<org.apache.lucene.index.FieldInfo$IndexOptions: int compareTo(java.lang.Enum)>($r3);

        if $i1 < 0 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        r1.<org.apache.lucene.index.FreqProxTermsWriterPerField: boolean hasProx> = $z1;

        $r4 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS>;

        $i2 = virtualinvoke r0.<org.apache.lucene.index.FieldInfo$IndexOptions: int compareTo(java.lang.Enum)>($r4);

        if $i2 < 0 goto label6;

        $z2 = 1;

        goto label7;

     label6:
        $z2 = 0;

     label7:
        r1.<org.apache.lucene.index.FreqProxTermsWriterPerField: boolean hasOffsets> = $z2;

     label8:
        return;
    }

    boolean start(org.apache.lucene.index.IndexableField[], int)
    {
        org.apache.lucene.index.IndexableField[] r0;
        org.apache.lucene.index.FreqProxTermsWriterPerField r3;
        org.apache.lucene.index.IndexableFieldType $r2;
        org.apache.lucene.index.IndexableField $r1;
        int i0, i1;
        boolean $z0;

        r3 := @this: org.apache.lucene.index.FreqProxTermsWriterPerField;

        r0 := @parameter0: org.apache.lucene.index.IndexableField[];

        i0 := @parameter1: int;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r1 = r0[i1];

        $r2 = interfaceinvoke $r1.<org.apache.lucene.index.IndexableField: org.apache.lucene.index.IndexableFieldType fieldType()>();

        $z0 = interfaceinvoke $r2.<org.apache.lucene.index.IndexableFieldType: boolean indexed()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    void start(org.apache.lucene.index.IndexableField)
    {
        org.apache.lucene.index.FreqProxTermsWriterPerField r0;
        org.apache.lucene.analysis.tokenattributes.PayloadAttribute $r10;
        org.apache.lucene.index.IndexableField r11;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r6;
        org.apache.lucene.index.FieldInvertState $r1, $r3, $r7;
        org.apache.lucene.util.AttributeSource $r2, $r4, $r8;
        org.apache.lucene.util.Attribute $r5, $r9;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.index.FreqProxTermsWriterPerField;

        r11 := @parameter0: org.apache.lucene.index.IndexableField;

        $r1 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $r2 = $r1.<org.apache.lucene.index.FieldInvertState: org.apache.lucene.util.AttributeSource attributeSource>;

        $z0 = virtualinvoke $r2.<org.apache.lucene.util.AttributeSource: boolean hasAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/PayloadAttribute;");

        if $z0 == 0 goto label1;

        $r7 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $r8 = $r7.<org.apache.lucene.index.FieldInvertState: org.apache.lucene.util.AttributeSource attributeSource>;

        $r9 = virtualinvoke $r8.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.Attribute getAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/PayloadAttribute;");

        $r10 = (org.apache.lucene.analysis.tokenattributes.PayloadAttribute) $r9;

        r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.analysis.tokenattributes.PayloadAttribute payloadAttribute> = $r10;

        goto label2;

     label1:
        r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.analysis.tokenattributes.PayloadAttribute payloadAttribute> = null;

     label2:
        $z1 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: boolean hasOffsets>;

        if $z1 == 0 goto label3;

        $r3 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $r4 = $r3.<org.apache.lucene.index.FieldInvertState: org.apache.lucene.util.AttributeSource attributeSource>;

        $r5 = virtualinvoke $r4.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/OffsetAttribute;");

        $r6 = (org.apache.lucene.analysis.tokenattributes.OffsetAttribute) $r5;

        r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAttribute> = $r6;

        goto label4;

     label3:
        r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAttribute> = null;

     label4:
        return;
    }

    void writeProx(int, int)
    {
        byte[] $r6;
        org.apache.lucene.index.FreqProxTermsWriterPerField r0;
        org.apache.lucene.index.TermsHashPerField $r3, $r4, $r5, $r7, $r10;
        org.apache.lucene.index.ParallelPostingsArray $r11;
        java.lang.AssertionError $r8;
        int[] $r13;
        org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray $r12;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0, $z1;
        org.apache.lucene.analysis.tokenattributes.PayloadAttribute $r1, $r2;
        org.apache.lucene.util.BytesRef r9;
        org.apache.lucene.index.FieldInvertState $r14;

        r0 := @this: org.apache.lucene.index.FreqProxTermsWriterPerField;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        $z0 = <org.apache.lucene.index.FreqProxTermsWriterPerField: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: boolean hasProx>;

        if $z1 != 0 goto label1;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label1:
        $r1 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.analysis.tokenattributes.PayloadAttribute payloadAttribute>;

        if $r1 != null goto label2;

        r9 = null;

        goto label3;

     label2:
        $r2 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.analysis.tokenattributes.PayloadAttribute payloadAttribute>;

        r9 = interfaceinvoke $r2.<org.apache.lucene.analysis.tokenattributes.PayloadAttribute: org.apache.lucene.util.BytesRef getPayload()>();

     label3:
        if r9 == null goto label4;

        $i3 = r9.<org.apache.lucene.util.BytesRef: int length>;

        if $i3 <= 0 goto label4;

        $r4 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        $i4 = i0 << 1;

        $i5 = $i4 | 1;

        virtualinvoke $r4.<org.apache.lucene.index.TermsHashPerField: void writeVInt(int,int)>(1, $i5);

        $r5 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        $i6 = r9.<org.apache.lucene.util.BytesRef: int length>;

        virtualinvoke $r5.<org.apache.lucene.index.TermsHashPerField: void writeVInt(int,int)>(1, $i6);

        $r7 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        $r6 = r9.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i8 = r9.<org.apache.lucene.util.BytesRef: int offset>;

        $i7 = r9.<org.apache.lucene.util.BytesRef: int length>;

        virtualinvoke $r7.<org.apache.lucene.index.TermsHashPerField: void writeBytes(int,byte[],int,int)>(1, $r6, $i8, $i7);

        r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: boolean hasPayloads> = 1;

        goto label5;

     label4:
        $r3 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        $i1 = i0 << 1;

        virtualinvoke $r3.<org.apache.lucene.index.TermsHashPerField: void writeVInt(int,int)>(1, $i1);

     label5:
        $r10 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        $r11 = $r10.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.ParallelPostingsArray postingsArray>;

        $r12 = (org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray) $r11;

        $r13 = $r12.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] lastPositions>;

        $r14 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $i9 = $r14.<org.apache.lucene.index.FieldInvertState: int position>;

        $r13[i2] = $i9;

        return;
    }

    void writeOffsets(int, int)
    {
        org.apache.lucene.index.FreqProxTermsWriterPerField r0;
        org.apache.lucene.index.TermsHashPerField $r3, $r6, $r7;
        org.apache.lucene.index.ParallelPostingsArray $r4;
        java.lang.AssertionError $r10, $r12;
        int[] $r5, $r8, $r9;
        org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray $r11;
        int i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean $z0, $z1, $z2;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r1, $r2;

        r0 := @this: org.apache.lucene.index.FreqProxTermsWriterPerField;

        i3 := @parameter0: int;

        i0 := @parameter1: int;

        $z0 = <org.apache.lucene.index.FreqProxTermsWriterPerField: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z2 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: boolean hasOffsets>;

        if $z2 != 0 goto label1;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label1:
        $r1 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAttribute>;

        $i1 = interfaceinvoke $r1.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: int startOffset()>();

        $i9 = i0 + $i1;

        $r2 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAttribute>;

        $i2 = interfaceinvoke $r2.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: int endOffset()>();

        $i10 = i0 + $i2;

        $r3 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        $r4 = $r3.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.ParallelPostingsArray postingsArray>;

        $r11 = (org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray) $r4;

        $z1 = <org.apache.lucene.index.FreqProxTermsWriterPerField: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r9 = $r11.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] lastOffsets>;

        $i7 = $r9[i3];

        $i8 = $i9 - $i7;

        if $i8 >= 0 goto label2;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label2:
        $r6 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        $r5 = $r11.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] lastOffsets>;

        $i4 = $r5[i3];

        $i5 = $i9 - $i4;

        virtualinvoke $r6.<org.apache.lucene.index.TermsHashPerField: void writeVInt(int,int)>(1, $i5);

        $r7 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        $i6 = $i10 - $i9;

        virtualinvoke $r7.<org.apache.lucene.index.TermsHashPerField: void writeVInt(int,int)>(1, $i6);

        $r8 = $r11.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] lastOffsets>;

        $r8[i3] = $i9;

        return;
    }

    void newTerm(int)
    {
        org.apache.lucene.index.FreqProxTermsWriterPerField r0;
        int[] $r4, $r6, $r7, $r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.lucene.index.FieldInvertState $r9, $r10, $r16, $r17, $r18;
        org.apache.lucene.index.TermsHashPerField $r1;
        org.apache.lucene.index.ParallelPostingsArray $r2;
        java.lang.AssertionError $r8, $r15;
        org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray $r14;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        org.apache.lucene.index.DocumentsWriterPerThread$DocState $r3, $r5, $r11, $r13;

        r0 := @this: org.apache.lucene.index.FreqProxTermsWriterPerField;

        i0 := @parameter0: int;

        $z0 = <org.apache.lucene.index.FreqProxTermsWriterPerField: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r13 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $z6 = virtualinvoke $r13.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: boolean testPoint(java.lang.String)>("FreqProxTermsWriterPerField.newTerm start");

        if $z6 != 0 goto label1;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>()>();

        throw $r15;

     label1:
        $r1 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        $r2 = $r1.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.ParallelPostingsArray postingsArray>;

        $r14 = (org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray) $r2;

        $r4 = $r14.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] lastDocIDs>;

        $r3 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $i1 = $r3.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: int docID>;

        $r4[i0] = $i1;

        $z1 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: boolean hasFreq>;

        if $z1 != 0 goto label2;

        $r12 = $r14.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] lastDocCodes>;

        $r11 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $i6 = $r11.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: int docID>;

        $r12[i0] = $i6;

        goto label4;

     label2:
        $r6 = $r14.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] lastDocCodes>;

        $r5 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $i2 = $r5.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: int docID>;

        $i3 = $i2 << 1;

        $r6[i0] = $i3;

        $r7 = $r14.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] termFreqs>;

        $r7[i0] = 1;

        $z2 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: boolean hasProx>;

        if $z2 == 0 goto label3;

        $r9 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $i4 = $r9.<org.apache.lucene.index.FieldInvertState: int position>;

        virtualinvoke r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: void writeProx(int,int)>(i0, $i4);

        $z5 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: boolean hasOffsets>;

        if $z5 == 0 goto label4;

        $r10 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $i5 = $r10.<org.apache.lucene.index.FieldInvertState: int offset>;

        virtualinvoke r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: void writeOffsets(int,int)>(i0, $i5);

        goto label4;

     label3:
        $z3 = <org.apache.lucene.index.FreqProxTermsWriterPerField: boolean $assertionsDisabled>;

        if $z3 != 0 goto label4;

        $z4 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: boolean hasOffsets>;

        if $z4 == 0 goto label4;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label4:
        $r16 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $r17 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $i7 = $r17.<org.apache.lucene.index.FieldInvertState: int maxTermFrequency>;

        $i8 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i7);

        $r16.<org.apache.lucene.index.FieldInvertState: int maxTermFrequency> = $i8;

        $r18 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $i9 = $r18.<org.apache.lucene.index.FieldInvertState: int uniqueTermCount>;

        $i10 = $i9 + 1;

        $r18.<org.apache.lucene.index.FieldInvertState: int uniqueTermCount> = $i10;

        return;
    }

    void addTerm(int)
    {
        org.apache.lucene.index.FreqProxTermsWriterPerField r0;
        org.apache.lucene.index.FieldInvertState $r5, $r7, $r8, $r9, $r17, $r18, $r25, $r27, $r52, $r63;
        java.lang.StringBuilder $r33, $r34, $r36, $r37, $r39, $r40, $r41;
        java.lang.AssertionError $r24, $r32, $r55, $r57, $r59, $r62;
        org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray $r61;
        java.lang.String $r42;
        int[] $r4, $r6, $r10, $r11, $r12, $r14, $r16, $r20, $r21, $r23, $r26, $r28, $r31, $r38, $r44, $r45, $r48, $r49, $r51, $r54, $r56, $r58;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        org.apache.lucene.index.TermsHashPerField $r1, $r13, $r15, $r29, $r46;
        org.apache.lucene.index.ParallelPostingsArray $r2;
        org.apache.lucene.index.DocumentsWriterPerThread$DocState $r3, $r19, $r22, $r30, $r35, $r43, $r47, $r50, $r53, $r60;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42;

        r0 := @this: org.apache.lucene.index.FreqProxTermsWriterPerField;

        i0 := @parameter0: int;

        $z0 = <org.apache.lucene.index.FreqProxTermsWriterPerField: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $r60 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $z12 = virtualinvoke $r60.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: boolean testPoint(java.lang.String)>("FreqProxTermsWriterPerField.addTerm start");

        if $z12 != 0 goto label01;

        $r62 = new java.lang.AssertionError;

        specialinvoke $r62.<java.lang.AssertionError: void <init>()>();

        throw $r62;

     label01:
        $r1 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        $r2 = $r1.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.ParallelPostingsArray postingsArray>;

        $r61 = (org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray) $r2;

        $z1 = <org.apache.lucene.index.FreqProxTermsWriterPerField: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        $z11 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: boolean hasFreq>;

        if $z11 == 0 goto label02;

        $r58 = $r61.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] termFreqs>;

        $i40 = $r58[i0];

        if $i40 > 0 goto label02;

        $r59 = new java.lang.AssertionError;

        specialinvoke $r59.<java.lang.AssertionError: void <init>()>();

        throw $r59;

     label02:
        $z13 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: boolean hasFreq>;

        if $z13 != 0 goto label05;

        $z9 = <org.apache.lucene.index.FreqProxTermsWriterPerField: boolean $assertionsDisabled>;

        if $z9 != 0 goto label03;

        $r56 = $r61.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] termFreqs>;

        if $r56 == null goto label03;

        $r57 = new java.lang.AssertionError;

        specialinvoke $r57.<java.lang.AssertionError: void <init>()>();

        throw $r57;

     label03:
        $r43 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $i30 = $r43.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: int docID>;

        $r44 = $r61.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] lastDocIDs>;

        $i29 = $r44[i0];

        if $i30 == $i29 goto label13;

        $z10 = <org.apache.lucene.index.FreqProxTermsWriterPerField: boolean $assertionsDisabled>;

        if $z10 != 0 goto label04;

        $r53 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $i39 = $r53.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: int docID>;

        $r54 = $r61.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] lastDocIDs>;

        $i38 = $r54[i0];

        if $i39 > $i38 goto label04;

        $r55 = new java.lang.AssertionError;

        specialinvoke $r55.<java.lang.AssertionError: void <init>()>();

        throw $r55;

     label04:
        $r46 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        $r45 = $r61.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] lastDocCodes>;

        $i31 = $r45[i0];

        virtualinvoke $r46.<org.apache.lucene.index.TermsHashPerField: void writeVInt(int,int)>(0, $i31);

        $r49 = $r61.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] lastDocCodes>;

        $r47 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $i33 = $r47.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: int docID>;

        $r48 = $r61.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] lastDocIDs>;

        $i32 = $r48[i0];

        $i34 = $i33 - $i32;

        $r49[i0] = $i34;

        $r51 = $r61.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] lastDocIDs>;

        $r50 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $i35 = $r50.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: int docID>;

        $r51[i0] = $i35;

        $r52 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $i36 = $r52.<org.apache.lucene.index.FieldInvertState: int uniqueTermCount>;

        $i37 = $i36 + 1;

        $r52.<org.apache.lucene.index.FieldInvertState: int uniqueTermCount> = $i37;

        goto label13;

     label05:
        $r3 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $i2 = $r3.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: int docID>;

        $r4 = $r61.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] lastDocIDs>;

        $i1 = $r4[i0];

        if $i2 == $i1 goto label11;

        $z4 = <org.apache.lucene.index.FreqProxTermsWriterPerField: boolean $assertionsDisabled>;

        if $z4 != 0 goto label06;

        $r30 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $i26 = $r30.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: int docID>;

        $r31 = $r61.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] lastDocIDs>;

        $i25 = $r31[i0];

        if $i26 > $i25 goto label06;

        $r32 = new java.lang.AssertionError;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("id: ");

        $r35 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $i27 = $r35.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: int docID>;

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i27);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" postings ID: ");

        $r38 = $r61.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] lastDocIDs>;

        $i28 = $r38[i0];

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i28);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" termID: ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.AssertionError: void <init>(java.lang.Object)>($r42);

        throw $r32;

     label06:
        $r11 = $r61.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] termFreqs>;

        $i11 = $r11[i0];

        if 1 != $i11 goto label07;

        $r29 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        $r28 = $r61.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] lastDocCodes>;

        $i23 = $r28[i0];

        $i24 = $i23 | 1;

        virtualinvoke $r29.<org.apache.lucene.index.TermsHashPerField: void writeVInt(int,int)>(0, $i24);

        goto label08;

     label07:
        $r13 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        $r12 = $r61.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] lastDocCodes>;

        $i12 = $r12[i0];

        virtualinvoke $r13.<org.apache.lucene.index.TermsHashPerField: void writeVInt(int,int)>(0, $i12);

        $r15 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        $r14 = $r61.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] termFreqs>;

        $i13 = $r14[i0];

        virtualinvoke $r15.<org.apache.lucene.index.TermsHashPerField: void writeVInt(int,int)>(0, $i13);

     label08:
        $r16 = $r61.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] termFreqs>;

        $r16[i0] = 1;

        $r18 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $r17 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $i14 = $r17.<org.apache.lucene.index.FieldInvertState: int maxTermFrequency>;

        $i15 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i14);

        $r18.<org.apache.lucene.index.FieldInvertState: int maxTermFrequency> = $i15;

        $r21 = $r61.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] lastDocCodes>;

        $r19 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $i17 = $r19.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: int docID>;

        $r20 = $r61.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] lastDocIDs>;

        $i16 = $r20[i0];

        $i18 = $i17 - $i16;

        $i19 = $i18 << 1;

        $r21[i0] = $i19;

        $r23 = $r61.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] lastDocIDs>;

        $r22 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $i20 = $r22.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: int docID>;

        $r23[i0] = $i20;

        $z5 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: boolean hasProx>;

        if $z5 == 0 goto label09;

        $r25 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $i21 = $r25.<org.apache.lucene.index.FieldInvertState: int position>;

        virtualinvoke r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: void writeProx(int,int)>(i0, $i21);

        $z8 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: boolean hasOffsets>;

        if $z8 == 0 goto label10;

        $r26 = $r61.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] lastOffsets>;

        $r26[i0] = 0;

        $r27 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $i22 = $r27.<org.apache.lucene.index.FieldInvertState: int offset>;

        virtualinvoke r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: void writeOffsets(int,int)>(i0, $i22);

        goto label10;

     label09:
        $z6 = <org.apache.lucene.index.FreqProxTermsWriterPerField: boolean $assertionsDisabled>;

        if $z6 != 0 goto label10;

        $z7 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: boolean hasOffsets>;

        if $z7 == 0 goto label10;

        $r24 = new java.lang.AssertionError;

        specialinvoke $r24.<java.lang.AssertionError: void <init>()>();

        throw $r24;

     label10:
        $r63 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $i41 = $r63.<org.apache.lucene.index.FieldInvertState: int uniqueTermCount>;

        $i42 = $i41 + 1;

        $r63.<org.apache.lucene.index.FieldInvertState: int uniqueTermCount> = $i42;

        goto label13;

     label11:
        $r7 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $r5 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $i5 = $r5.<org.apache.lucene.index.FieldInvertState: int maxTermFrequency>;

        $r6 = $r61.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] termFreqs>;

        $i3 = $r6[i0];

        $i4 = $i3 + 1;

        $r6[i0] = $i4;

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i4);

        $r7.<org.apache.lucene.index.FieldInvertState: int maxTermFrequency> = $i6;

        $z2 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: boolean hasProx>;

        if $z2 == 0 goto label12;

        $r9 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $i9 = $r9.<org.apache.lucene.index.FieldInvertState: int position>;

        $r10 = $r61.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] lastPositions>;

        $i8 = $r10[i0];

        $i10 = $i9 - $i8;

        virtualinvoke r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: void writeProx(int,int)>(i0, $i10);

     label12:
        $z3 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: boolean hasOffsets>;

        if $z3 == 0 goto label13;

        $r8 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $i7 = $r8.<org.apache.lucene.index.FieldInvertState: int offset>;

        virtualinvoke r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: void writeOffsets(int,int)>(i0, $i7);

     label13:
        return;
    }

    org.apache.lucene.index.ParallelPostingsArray createPostingsArray(int)
    {
        org.apache.lucene.index.FreqProxTermsWriterPerField r1;
        org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray $r0;
        int i0;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.lucene.index.FreqProxTermsWriterPerField;

        i0 := @parameter0: int;

        $r0 = new org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray;

        $z2 = r1.<org.apache.lucene.index.FreqProxTermsWriterPerField: boolean hasFreq>;

        $z1 = r1.<org.apache.lucene.index.FreqProxTermsWriterPerField: boolean hasProx>;

        $z0 = r1.<org.apache.lucene.index.FreqProxTermsWriterPerField: boolean hasOffsets>;

        specialinvoke $r0.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: void <init>(int,boolean,boolean,boolean)>(i0, $z2, $z1, $z0);

        return $r0;
    }

    public void abort()
    {
        org.apache.lucene.index.FreqProxTermsWriterPerField r0;

        r0 := @this: org.apache.lucene.index.FreqProxTermsWriterPerField;

        return;
    }

    void flush(java.lang.String, org.apache.lucene.codecs.FieldsConsumer, org.apache.lucene.index.SegmentWriteState) throws java.io.IOException
    {
        byte[] $r29, $r32, $r86;
        org.apache.lucene.index.FreqProxTermsWriterPerField r0;
        org.apache.lucene.index.Term $r98;
        java.lang.Integer r84;
        java.util.Map $r61, r69;
        org.apache.lucene.codecs.LiveDocsFormat $r40;
        org.apache.lucene.index.SegmentInfo $r41, $r43, $r49, $r81;
        java.lang.StringBuilder $r20, $r21, $r22, $r23, $r24, $r25, $r46, $r47, $r48, $r50, $r100, $r103;
        long $l25, l30, l31, l35, $l39, $l44, $l45;
        org.apache.lucene.util.FixedBitSet $r97;
        org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray $r77;
        int[] $r13, $r52, $r54, $r56, $r57, $r58, $r71;
        int $i0, $i1, $i2, $i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i26, $i27, $i28, $i29, i32, i33, i34, i36, i37, $i38, i40, i41, i42, i43, $i47, $i49, $i51, $i53, $i55, $i57, $i59, $i61, $i63;
        org.apache.lucene.index.DocumentsWriterPerThread$DocState $r37;
        org.apache.lucene.codecs.Codec $r39;
        java.lang.Object $r59;
        java.util.Comparator $r5;
        org.apache.lucene.util.BytesRefHash $r73;
        java.lang.AssertionError $r89, $r90, $r91, $r92, $r93, $r99, $r101, $r104;
        org.apache.lucene.codecs.TermStats $r105;
        java.lang.String r12, $r26, $r51;
        org.apache.lucene.index.DocumentsWriterPerThread $r38;
        org.apache.lucene.codecs.TermsConsumer $r4;
        org.apache.lucene.index.FieldInfo $r1, $r3, $r6;
        org.apache.lucene.index.BufferedDeletes $r60, $r62, $r68;
        org.apache.lucene.codecs.FieldsConsumer r2;
        boolean $z0, $z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19;
        org.apache.lucene.index.FieldInfo$IndexOptions $r7, $r8, $r9, $r10;
        org.apache.lucene.util.BytesRef $r27, $r28, $r30, $r33, $r85, $r87, r88, $r94, $r102;
        org.apache.lucene.util.MutableBits $r34, $r35, $r36, $r42;
        org.apache.lucene.index.TermsHashPerField $r14, $r16, $r17, $r70, $r72, $r75;
        org.apache.lucene.index.ParallelPostingsArray $r76;
        org.apache.lucene.util.ByteBlockPool $r15;
        org.apache.lucene.codecs.PostingsConsumer $r83;
        org.apache.lucene.index.SegmentWriteState r11;
        org.apache.lucene.index.ByteSliceReader $r95, $r96;

        r0 := @this: org.apache.lucene.index.FreqProxTermsWriterPerField;

        r12 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.lucene.codecs.FieldsConsumer;

        r11 := @parameter2: org.apache.lucene.index.SegmentWriteState;

        $r1 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.FieldInfo fieldInfo>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.index.FieldInfo: boolean isIndexed()>();

        if $z0 != 0 goto label01;

        return;

     label01:
        $r3 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r4 = virtualinvoke r2.<org.apache.lucene.codecs.FieldsConsumer: org.apache.lucene.codecs.TermsConsumer addField(org.apache.lucene.index.FieldInfo)>($r3);

        $r5 = virtualinvoke $r4.<org.apache.lucene.codecs.TermsConsumer: java.util.Comparator getComparator()>();

        $r6 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r7 = virtualinvoke $r6.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$IndexOptions getIndexOptions()>();

        $z1 = <org.apache.lucene.index.FreqProxTermsWriterPerField: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        if $r7 != null goto label02;

        $r89 = new java.lang.AssertionError;

        specialinvoke $r89.<java.lang.AssertionError: void <init>()>();

        throw $r89;

     label02:
        $r8 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_AND_FREQS>;

        $i0 = virtualinvoke $r7.<org.apache.lucene.index.FieldInfo$IndexOptions: int compareTo(java.lang.Enum)>($r8);

        if $i0 < 0 goto label03;

        $z11 = 1;

        goto label04;

     label03:
        $z11 = 0;

     label04:
        z2 = $z11;

        $r9 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_AND_FREQS_AND_POSITIONS>;

        $i1 = virtualinvoke $r7.<org.apache.lucene.index.FieldInfo$IndexOptions: int compareTo(java.lang.Enum)>($r9);

        if $i1 < 0 goto label05;

        $z12 = 1;

        goto label06;

     label05:
        $z12 = 0;

     label06:
        z3 = $z12;

        $r10 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS>;

        $i2 = virtualinvoke $r7.<org.apache.lucene.index.FieldInfo$IndexOptions: int compareTo(java.lang.Enum)>($r10);

        if $i2 < 0 goto label07;

        $z13 = 1;

        goto label08;

     label07:
        $z13 = 0;

     label08:
        z4 = $z13;

        $z8 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: boolean hasFreq>;

        $z9 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: boolean hasProx>;

        $z10 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: boolean hasOffsets>;

        $z5 = <org.apache.lucene.index.FreqProxTermsWriterPerField: boolean $assertionsDisabled>;

        if $z5 != 0 goto label09;

        if z2 == 0 goto label09;

        if $z8 != 0 goto label09;

        $r90 = new java.lang.AssertionError;

        specialinvoke $r90.<java.lang.AssertionError: void <init>()>();

        throw $r90;

     label09:
        $z14 = <org.apache.lucene.index.FreqProxTermsWriterPerField: boolean $assertionsDisabled>;

        if $z14 != 0 goto label10;

        if z3 == 0 goto label10;

        if $z9 != 0 goto label10;

        $r91 = new java.lang.AssertionError;

        specialinvoke $r91.<java.lang.AssertionError: void <init>()>();

        throw $r91;

     label10:
        $z15 = <org.apache.lucene.index.FreqProxTermsWriterPerField: boolean $assertionsDisabled>;

        if $z15 != 0 goto label11;

        if z4 == 0 goto label11;

        if $z10 != 0 goto label11;

        $r92 = new java.lang.AssertionError;

        specialinvoke $r92.<java.lang.AssertionError: void <init>()>();

        throw $r92;

     label11:
        $z16 = <org.apache.lucene.index.FreqProxTermsWriterPerField: boolean $assertionsDisabled>;

        if $z16 != 0 goto label12;

        if z4 == 0 goto label12;

        if z3 != 0 goto label12;

        $r93 = new java.lang.AssertionError;

        specialinvoke $r93.<java.lang.AssertionError: void <init>()>();

        throw $r93;

     label12:
        $r68 = r11.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.index.BufferedDeletes segDeletes>;

        if $r68 == null goto label13;

        $r60 = r11.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.index.BufferedDeletes segDeletes>;

        $r61 = $r60.<org.apache.lucene.index.BufferedDeletes: java.util.Map terms>;

        $i27 = interfaceinvoke $r61.<java.util.Map: int size()>();

        if $i27 <= 0 goto label13;

        $r62 = r11.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.index.BufferedDeletes segDeletes>;

        r69 = $r62.<org.apache.lucene.index.BufferedDeletes: java.util.Map terms>;

        goto label14;

     label13:
        r69 = null;

     label14:
        $r70 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        $r71 = virtualinvoke $r70.<org.apache.lucene.index.TermsHashPerField: int[] sortPostings(java.util.Comparator)>($r5);

        $r72 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        $r73 = $r72.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.BytesRefHash bytesHash>;

        $i28 = virtualinvoke $r73.<org.apache.lucene.util.BytesRefHash: int size()>();

        $r94 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r94.<org.apache.lucene.util.BytesRef: void <init>()>();

        $r75 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        $r76 = $r75.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.ParallelPostingsArray postingsArray>;

        $r77 = (org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray) $r76;

        $r95 = new org.apache.lucene.index.ByteSliceReader;

        specialinvoke $r95.<org.apache.lucene.index.ByteSliceReader: void <init>()>();

        $r96 = new org.apache.lucene.index.ByteSliceReader;

        specialinvoke $r96.<org.apache.lucene.index.ByteSliceReader: void <init>()>();

        $r97 = new org.apache.lucene.util.FixedBitSet;

        $r81 = r11.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $i29 = virtualinvoke $r81.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        specialinvoke $r97.<org.apache.lucene.util.FixedBitSet: void <init>(int)>($i29);

        l30 = 0L;

        l31 = 0L;

        $r98 = new org.apache.lucene.index.Term;

        specialinvoke $r98.<org.apache.lucene.index.Term: void <init>(java.lang.String)>(r12);

        i32 = 0;

     label15:
        if i32 >= $i28 goto label51;

        i4 = $r71[i32];

        $r13 = $r77.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] textStarts>;

        i5 = $r13[i4];

        $r14 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        $r15 = $r14.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.ByteBlockPool bytePool>;

        virtualinvoke $r15.<org.apache.lucene.util.ByteBlockPool: void setBytesRef(org.apache.lucene.util.BytesRef,int)>($r94, i5);

        $r16 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        virtualinvoke $r16.<org.apache.lucene.index.TermsHashPerField: void initReader(org.apache.lucene.index.ByteSliceReader,int,int)>($r95, i4, 0);

        if $z9 != 0 goto label16;

        if $z10 == 0 goto label17;

     label16:
        $r17 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.TermsHashPerField termsHashPerField>;

        virtualinvoke $r17.<org.apache.lucene.index.TermsHashPerField: void initReader(org.apache.lucene.index.ByteSliceReader,int,int)>($r96, i4, 1);

     label17:
        $r83 = virtualinvoke $r4.<org.apache.lucene.codecs.TermsConsumer: org.apache.lucene.codecs.PostingsConsumer startTerm(org.apache.lucene.util.BytesRef)>($r94);

        if r69 == null goto label20;

        $r98.<org.apache.lucene.index.Term: org.apache.lucene.util.BytesRef bytes> = $r94;

        $r59 = interfaceinvoke r69.<java.util.Map: java.lang.Object get(java.lang.Object)>($r98);

        r84 = (java.lang.Integer) $r59;

        if r84 == null goto label18;

        i33 = virtualinvoke r84.<java.lang.Integer: int intValue()>();

        goto label19;

     label18:
        i33 = 0;

     label19:
        goto label21;

     label20:
        i33 = 0;

     label21:
        i34 = 0;

        l35 = 0L;

        i36 = 0;

     label22:
        $z17 = virtualinvoke $r95.<org.apache.lucene.index.ByteSliceReader: boolean eof()>();

        if $z17 == 0 goto label25;

        $r54 = $r77.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] lastDocCodes>;

        $i24 = $r54[i4];

        $i47 = (int) -1;

        if $i24 == $i47 goto label48;

        $r56 = $r77.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] lastDocIDs>;

        i36 = $r56[i4];

        if $z8 == 0 goto label23;

        $r58 = $r77.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] termFreqs>;

        i37 = $r58[i4];

        goto label24;

     label23:
        $i49 = (int) -1;

        i37 = $i49;

     label24:
        $r57 = $r77.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] lastDocCodes>;

        $i51 = (int) -1;

        $r57[i4] = $i51;

        goto label29;

     label25:
        $i6 = virtualinvoke $r95.<org.apache.lucene.index.ByteSliceReader: int readVInt()>();

        if $z8 != 0 goto label26;

        i36 = i36 + $i6;

        $i53 = (int) -1;

        i37 = $i53;

        goto label28;

     label26:
        $i7 = $i6 >>> 1;

        i36 = i36 + $i7;

        $i8 = $i6 & 1;

        if $i8 == 0 goto label27;

        i37 = 1;

        goto label28;

     label27:
        i37 = virtualinvoke $r95.<org.apache.lucene.index.ByteSliceReader: int readVInt()>();

     label28:
        $z18 = <org.apache.lucene.index.FreqProxTermsWriterPerField: boolean $assertionsDisabled>;

        if $z18 != 0 goto label29;

        $r52 = $r77.<org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray: int[] lastDocIDs>;

        $i23 = $r52[i4];

        if i36 != $i23 goto label29;

        $r99 = new java.lang.AssertionError;

        specialinvoke $r99.<java.lang.AssertionError: void <init>()>();

        throw $r99;

     label29:
        i34 = i34 + 1;

        $z19 = <org.apache.lucene.index.FreqProxTermsWriterPerField: boolean $assertionsDisabled>;

        if $z19 != 0 goto label30;

        $r43 = r11.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $i21 = virtualinvoke $r43.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        if i36 < $i21 goto label30;

        $r101 = new java.lang.AssertionError;

        $r100 = new java.lang.StringBuilder;

        specialinvoke $r100.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("doc=");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i36);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" maxDoc=");

        $r49 = r11.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $i22 = virtualinvoke $r49.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i22);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r101.<java.lang.AssertionError: void <init>(java.lang.Object)>($r51);

        throw $r101;

     label30:
        virtualinvoke $r97.<org.apache.lucene.util.FixedBitSet: void set(int)>(i36);

        $i20 = i36;

        if z2 == 0 goto label31;

        $i38 = i37;

        goto label32;

     label31:
        $i55 = (int) -1;

        $i38 = $i55;

     label32:
        virtualinvoke $r83.<org.apache.lucene.codecs.PostingsConsumer: void startDoc(int,int)>($i20, $i38);

        if i36 >= i33 goto label34;

        $r34 = r11.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.util.MutableBits liveDocs>;

        if $r34 != null goto label33;

        $r37 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $r38 = $r37.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: org.apache.lucene.index.DocumentsWriterPerThread docWriter>;

        $r39 = $r38.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.codecs.Codec codec>;

        $r40 = virtualinvoke $r39.<org.apache.lucene.codecs.Codec: org.apache.lucene.codecs.LiveDocsFormat liveDocsFormat()>();

        $r41 = r11.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $i19 = virtualinvoke $r41.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        $r42 = virtualinvoke $r40.<org.apache.lucene.codecs.LiveDocsFormat: org.apache.lucene.util.MutableBits newLiveDocs(int)>($i19);

        r11.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.util.MutableBits liveDocs> = $r42;

     label33:
        $r35 = r11.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.util.MutableBits liveDocs>;

        $z7 = interfaceinvoke $r35.<org.apache.lucene.util.MutableBits: boolean get(int)>(i36);

        if $z7 == 0 goto label34;

        $i17 = r11.<org.apache.lucene.index.SegmentWriteState: int delCountOnFlush>;

        $i18 = $i17 + 1;

        r11.<org.apache.lucene.index.SegmentWriteState: int delCountOnFlush> = $i18;

        $r36 = r11.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.util.MutableBits liveDocs>;

        interfaceinvoke $r36.<org.apache.lucene.util.MutableBits: void clear(int)>(i36);

     label34:
        $l39 = (long) i37;

        l35 = l35 + $l39;

        if $z9 != 0 goto label35;

        if $z10 == 0 goto label47;

     label35:
        i40 = 0;

        i41 = 0;

        i42 = 0;

     label36:
        if i42 >= i37 goto label47;

        if $z9 == 0 goto label46;

        $i9 = virtualinvoke $r96.<org.apache.lucene.index.ByteSliceReader: int readVInt()>();

        $i10 = $i9 >>> 1;

        i40 = i40 + $i10;

        $i11 = $i9 & 1;

        if $i11 == 0 goto label39;

        $i15 = virtualinvoke $r96.<org.apache.lucene.index.ByteSliceReader: int readVInt()>();

        $r27 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.util.BytesRef payload>;

        if $r27 != null goto label37;

        $r102 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r102.<org.apache.lucene.util.BytesRef: void <init>()>();

        r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.util.BytesRef payload> = $r102;

        $r33 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.util.BytesRef payload>;

        $r32 = newarray (byte)[$i15];

        $r33.<org.apache.lucene.util.BytesRef: byte[] bytes> = $r32;

        goto label38;

     label37:
        $r28 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.util.BytesRef payload>;

        $r29 = $r28.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i16 = lengthof $r29;

        if $i16 >= $i15 goto label38;

        $r30 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.util.BytesRef payload>;

        virtualinvoke $r30.<org.apache.lucene.util.BytesRef: void grow(int)>($i15);

     label38:
        $r85 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.util.BytesRef payload>;

        $r86 = $r85.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        virtualinvoke $r96.<org.apache.lucene.index.ByteSliceReader: void readBytes(byte[],int,int)>($r86, 0, $i15);

        $r87 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.util.BytesRef payload>;

        $r87.<org.apache.lucene.util.BytesRef: int length> = $i15;

        r88 = r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: org.apache.lucene.util.BytesRef payload>;

        goto label40;

     label39:
        r88 = null;

     label40:
        if $z10 == 0 goto label45;

        $i12 = virtualinvoke $r96.<org.apache.lucene.index.ByteSliceReader: int readVInt()>();

        i43 = i41 + $i12;

        $i13 = virtualinvoke $r96.<org.apache.lucene.index.ByteSliceReader: int readVInt()>();

        i14 = i43 + $i13;

        if z3 == 0 goto label44;

        if z4 == 0 goto label43;

        $z6 = <org.apache.lucene.index.FreqProxTermsWriterPerField: boolean $assertionsDisabled>;

        if $z6 != 0 goto label42;

        if i43 < 0 goto label41;

        if i14 >= i43 goto label42;

     label41:
        $r104 = new java.lang.AssertionError;

        $r103 = new java.lang.StringBuilder;

        specialinvoke $r103.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startOffset=");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i43);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",endOffset=");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i14);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",offset=");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i41);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r104.<java.lang.AssertionError: void <init>(java.lang.Object)>($r26);

        throw $r104;

     label42:
        virtualinvoke $r83.<org.apache.lucene.codecs.PostingsConsumer: void addPosition(int,org.apache.lucene.util.BytesRef,int,int)>(i40, r88, i43, i14);

        goto label44;

     label43:
        $i57 = (int) -1;

        $i59 = (int) -1;

        virtualinvoke $r83.<org.apache.lucene.codecs.PostingsConsumer: void addPosition(int,org.apache.lucene.util.BytesRef,int,int)>(i40, r88, $i57, $i59);

     label44:
        i41 = i43;

        goto label46;

     label45:
        if z3 == 0 goto label46;

        $i61 = (int) -1;

        $i63 = (int) -1;

        virtualinvoke $r83.<org.apache.lucene.codecs.PostingsConsumer: void addPosition(int,org.apache.lucene.util.BytesRef,int,int)>(i40, r88, $i61, $i63);

     label46:
        i42 = i42 + 1;

        goto label36;

     label47:
        virtualinvoke $r83.<org.apache.lucene.codecs.PostingsConsumer: void finishDoc()>();

        goto label22;

     label48:
        $r105 = new org.apache.lucene.codecs.TermStats;

        $i26 = i34;

        if z2 == 0 goto label49;

        $l44 = l35;

        goto label50;

     label49:
        $l44 = -1L;

     label50:
        specialinvoke $r105.<org.apache.lucene.codecs.TermStats: void <init>(int,long)>($i26, $l44);

        virtualinvoke $r4.<org.apache.lucene.codecs.TermsConsumer: void finishTerm(org.apache.lucene.util.BytesRef,org.apache.lucene.codecs.TermStats)>($r94, $r105);

        l30 = l30 + l35;

        $l25 = (long) i34;

        l31 = l31 + $l25;

        i32 = i32 + 1;

        goto label15;

     label51:
        if z2 == 0 goto label52;

        $l45 = l30;

        goto label53;

     label52:
        $l45 = -1L;

     label53:
        $i3 = virtualinvoke $r97.<org.apache.lucene.util.FixedBitSet: int cardinality()>();

        virtualinvoke $r4.<org.apache.lucene.codecs.TermsConsumer: void finish(long,long,int)>($l45, l31, $i3);

        return;
    }

    public volatile int compareTo(java.lang.Object)
    {
        org.apache.lucene.index.FreqProxTermsWriterPerField r0, $r2;
        int $i0;
        java.lang.Object r1;

        r0 := @this: org.apache.lucene.index.FreqProxTermsWriterPerField;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.lucene.index.FreqProxTermsWriterPerField) r1;

        $i0 = virtualinvoke r0.<org.apache.lucene.index.FreqProxTermsWriterPerField: int compareTo(org.apache.lucene.index.FreqProxTermsWriterPerField)>($r2);

        return $i0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/FreqProxTermsWriterPerField;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.FreqProxTermsWriterPerField: boolean $assertionsDisabled> = $z1;

        return;
    }
}
