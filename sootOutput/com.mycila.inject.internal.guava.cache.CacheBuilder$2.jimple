final class com.mycila.inject.internal.guava.cache.CacheBuilder$2 extends java.lang.Object implements com.mycila.inject.internal.guava.base.Supplier
{

    void <init>()
    {
        com.mycila.inject.internal.guava.cache.CacheBuilder$2 r0;

        r0 := @this: com.mycila.inject.internal.guava.cache.CacheBuilder$2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.mycila.inject.internal.guava.cache.AbstractCache$SimpleStatsCounter get()
    {
        com.mycila.inject.internal.guava.cache.CacheBuilder$2 r1;
        com.mycila.inject.internal.guava.cache.AbstractCache$SimpleStatsCounter $r0;

        r1 := @this: com.mycila.inject.internal.guava.cache.CacheBuilder$2;

        $r0 = new com.mycila.inject.internal.guava.cache.AbstractCache$SimpleStatsCounter;

        specialinvoke $r0.<com.mycila.inject.internal.guava.cache.AbstractCache$SimpleStatsCounter: void <init>()>();

        return $r0;
    }

    public volatile java.lang.Object get()
    {
        com.mycila.inject.internal.guava.cache.CacheBuilder$2 r0;
        com.mycila.inject.internal.guava.cache.AbstractCache$SimpleStatsCounter $r1;

        r0 := @this: com.mycila.inject.internal.guava.cache.CacheBuilder$2;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.cache.CacheBuilder$2: com.mycila.inject.internal.guava.cache.AbstractCache$SimpleStatsCounter get()>();

        return $r1;
    }
}
