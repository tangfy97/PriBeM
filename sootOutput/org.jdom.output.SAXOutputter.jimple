public class org.jdom.output.SAXOutputter extends java.lang.Object
{
    private static final java.lang.String CVS_ID;
    private static final java.lang.String NAMESPACES_SAX_FEATURE;
    private static final java.lang.String NS_PREFIXES_SAX_FEATURE;
    private static final java.lang.String VALIDATION_SAX_FEATURE;
    private static final java.lang.String LEXICAL_HANDLER_SAX_PROPERTY;
    private static final java.lang.String DECL_HANDLER_SAX_PROPERTY;
    private static final java.lang.String LEXICAL_HANDLER_ALT_PROPERTY;
    private static final java.lang.String DECL_HANDLER_ALT_PROPERTY;
    private static final java.lang.String[] attrTypeToNameMap;
    private org.xml.sax.ContentHandler contentHandler;
    private org.xml.sax.ErrorHandler errorHandler;
    private org.xml.sax.DTDHandler dtdHandler;
    private org.xml.sax.EntityResolver entityResolver;
    private org.xml.sax.ext.LexicalHandler lexicalHandler;
    private org.xml.sax.ext.DeclHandler declHandler;
    private boolean declareNamespaces;
    private boolean reportDtdEvents;
    private org.jdom.output.JDOMLocator locator;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <org.jdom.output.SAXOutputter: java.lang.String DECL_HANDLER_ALT_PROPERTY> = "http://xml.org/sax/handlers/DeclHandler";

        <org.jdom.output.SAXOutputter: java.lang.String LEXICAL_HANDLER_ALT_PROPERTY> = "http://xml.org/sax/handlers/LexicalHandler";

        <org.jdom.output.SAXOutputter: java.lang.String DECL_HANDLER_SAX_PROPERTY> = "http://xml.org/sax/properties/declaration-handler";

        <org.jdom.output.SAXOutputter: java.lang.String LEXICAL_HANDLER_SAX_PROPERTY> = "http://xml.org/sax/properties/lexical-handler";

        <org.jdom.output.SAXOutputter: java.lang.String VALIDATION_SAX_FEATURE> = "http://xml.org/sax/features/validation";

        <org.jdom.output.SAXOutputter: java.lang.String NS_PREFIXES_SAX_FEATURE> = "http://xml.org/sax/features/namespace-prefixes";

        <org.jdom.output.SAXOutputter: java.lang.String NAMESPACES_SAX_FEATURE> = "http://xml.org/sax/features/namespaces";

        <org.jdom.output.SAXOutputter: java.lang.String CVS_ID> = "@(#) $RCSfile: SAXOutputter.java,v $ $Revision: 1.37 $ $Date: 2004/09/03 06:11:00 $ $Name: jdom_1_0 $";

        $r0 = newarray (java.lang.String)[11];

        $r0[0] = "CDATA";

        $r0[1] = "CDATA";

        $r0[2] = "ID";

        $r0[3] = "IDREF";

        $r0[4] = "IDREFS";

        $r0[5] = "ENTITY";

        $r0[6] = "ENTITIES";

        $r0[7] = "NMTOKEN";

        $r0[8] = "NMTOKENS";

        $r0[9] = "NOTATION";

        $r0[10] = "NMTOKEN";

        <org.jdom.output.SAXOutputter: java.lang.String[] attrTypeToNameMap> = $r0;

        return;
    }

    public void <init>()
    {
        org.jdom.output.SAXOutputter r0;

        r0 := @this: org.jdom.output.SAXOutputter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.jdom.output.SAXOutputter: boolean declareNamespaces> = 0;

        r0.<org.jdom.output.SAXOutputter: boolean reportDtdEvents> = 1;

        r0.<org.jdom.output.SAXOutputter: org.jdom.output.JDOMLocator locator> = null;

        return;
    }

    public void <init>(org.xml.sax.ContentHandler)
    {
        org.xml.sax.ContentHandler r1;
        org.jdom.output.SAXOutputter r0;

        r0 := @this: org.jdom.output.SAXOutputter;

        r1 := @parameter0: org.xml.sax.ContentHandler;

        specialinvoke r0.<org.jdom.output.SAXOutputter: void <init>(org.xml.sax.ContentHandler,org.xml.sax.ErrorHandler,org.xml.sax.DTDHandler,org.xml.sax.EntityResolver,org.xml.sax.ext.LexicalHandler)>(r1, null, null, null, null);

        return;
    }

    public void <init>(org.xml.sax.ContentHandler, org.xml.sax.ErrorHandler, org.xml.sax.DTDHandler, org.xml.sax.EntityResolver)
    {
        org.xml.sax.ErrorHandler r2;
        org.xml.sax.DTDHandler r3;
        org.jdom.output.SAXOutputter r0;
        org.xml.sax.ContentHandler r1;
        org.xml.sax.EntityResolver r4;

        r0 := @this: org.jdom.output.SAXOutputter;

        r1 := @parameter0: org.xml.sax.ContentHandler;

        r2 := @parameter1: org.xml.sax.ErrorHandler;

        r3 := @parameter2: org.xml.sax.DTDHandler;

        r4 := @parameter3: org.xml.sax.EntityResolver;

        specialinvoke r0.<org.jdom.output.SAXOutputter: void <init>(org.xml.sax.ContentHandler,org.xml.sax.ErrorHandler,org.xml.sax.DTDHandler,org.xml.sax.EntityResolver,org.xml.sax.ext.LexicalHandler)>(r1, r2, r3, r4, null);

        return;
    }

    public void <init>(org.xml.sax.ContentHandler, org.xml.sax.ErrorHandler, org.xml.sax.DTDHandler, org.xml.sax.EntityResolver, org.xml.sax.ext.LexicalHandler)
    {
        org.xml.sax.ext.LexicalHandler r5;
        org.xml.sax.ErrorHandler r2;
        org.xml.sax.DTDHandler r3;
        org.jdom.output.SAXOutputter r0;
        org.xml.sax.ContentHandler r1;
        org.xml.sax.EntityResolver r4;

        r0 := @this: org.jdom.output.SAXOutputter;

        r1 := @parameter0: org.xml.sax.ContentHandler;

        r2 := @parameter1: org.xml.sax.ErrorHandler;

        r3 := @parameter2: org.xml.sax.DTDHandler;

        r4 := @parameter3: org.xml.sax.EntityResolver;

        r5 := @parameter4: org.xml.sax.ext.LexicalHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.jdom.output.SAXOutputter: boolean declareNamespaces> = 0;

        r0.<org.jdom.output.SAXOutputter: boolean reportDtdEvents> = 1;

        r0.<org.jdom.output.SAXOutputter: org.jdom.output.JDOMLocator locator> = null;

        r0.<org.jdom.output.SAXOutputter: org.xml.sax.ContentHandler contentHandler> = r1;

        r0.<org.jdom.output.SAXOutputter: org.xml.sax.ErrorHandler errorHandler> = r2;

        r0.<org.jdom.output.SAXOutputter: org.xml.sax.DTDHandler dtdHandler> = r3;

        r0.<org.jdom.output.SAXOutputter: org.xml.sax.EntityResolver entityResolver> = r4;

        r0.<org.jdom.output.SAXOutputter: org.xml.sax.ext.LexicalHandler lexicalHandler> = r5;

        return;
    }

    private org.xml.sax.helpers.AttributesImpl addNsAttribute(org.xml.sax.helpers.AttributesImpl, org.jdom.Namespace)
    {
        org.xml.sax.helpers.AttributesImpl $r7, r8;
        org.jdom.output.SAXOutputter r0;
        java.lang.StringBuffer $r1, $r4;
        org.jdom.Namespace r2;
        java.lang.String $r3, $r5, $r6;
        boolean $z0;

        r0 := @this: org.jdom.output.SAXOutputter;

        r8 := @parameter0: org.xml.sax.helpers.AttributesImpl;

        r2 := @parameter1: org.jdom.Namespace;

        $z0 = r0.<org.jdom.output.SAXOutputter: boolean declareNamespaces>;

        if $z0 == 0 goto label2;

        if r8 != null goto label1;

        $r7 = new org.xml.sax.helpers.AttributesImpl;

        specialinvoke $r7.<org.xml.sax.helpers.AttributesImpl: void <init>()>();

        r8 = $r7;

     label1:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(java.lang.String)>("xmlns:");

        $r3 = virtualinvoke r2.<org.jdom.Namespace: java.lang.String getPrefix()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = virtualinvoke r2.<org.jdom.Namespace: java.lang.String getURI()>();

        virtualinvoke r8.<org.xml.sax.helpers.AttributesImpl: void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("", "", $r5, "CDATA", $r6);

     label2:
        return r8;
    }

    private void cdata(java.lang.String) throws org.jdom.JDOMException
    {
        org.xml.sax.ext.LexicalHandler $r1, $r3, $r4;
        org.jdom.JDOMException $r6;
        org.jdom.output.SAXOutputter r0;
        org.xml.sax.SAXException $r5;
        java.lang.String r2;

        r0 := @this: org.jdom.output.SAXOutputter;

        r2 := @parameter0: java.lang.String;

     label1:
        $r1 = r0.<org.jdom.output.SAXOutputter: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        if $r1 == null goto label2;

        $r3 = r0.<org.jdom.output.SAXOutputter: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        interfaceinvoke $r3.<org.xml.sax.ext.LexicalHandler: void startCDATA()>();

        specialinvoke r0.<org.jdom.output.SAXOutputter: void characters(java.lang.String)>(r2);

        $r4 = r0.<org.jdom.output.SAXOutputter: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        interfaceinvoke $r4.<org.xml.sax.ext.LexicalHandler: void endCDATA()>();

        goto label5;

     label2:
        specialinvoke r0.<org.jdom.output.SAXOutputter: void characters(java.lang.String)>(r2);

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        $r6 = new org.jdom.JDOMException;

        specialinvoke $r6.<org.jdom.JDOMException: void <init>(java.lang.String,java.lang.Throwable)>("Exception in CDATA", $r5);

        throw $r6;

     label5:
        return;

        catch org.xml.sax.SAXException from label1 to label3 with label4;
    }

    private void characters(java.lang.String) throws org.jdom.JDOMException
    {
        org.jdom.JDOMException $r5;
        org.jdom.output.SAXOutputter r2;
        org.xml.sax.SAXException $r4;
        int $i0;
        char[] $r1;
        java.lang.String r0;
        org.xml.sax.ContentHandler $r3;

        r2 := @this: org.jdom.output.SAXOutputter;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

     label1:
        $r3 = r2.<org.jdom.output.SAXOutputter: org.xml.sax.ContentHandler contentHandler>;

        $i0 = lengthof $r1;

        interfaceinvoke $r3.<org.xml.sax.ContentHandler: void characters(char[],int,int)>($r1, 0, $i0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.jdom.JDOMException;

        specialinvoke $r5.<org.jdom.JDOMException: void <init>(java.lang.String,java.lang.Throwable)>("Exception in characters", $r4);

        throw $r5;

     label4:
        return;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
    }

    private void comment(java.lang.String) throws org.jdom.JDOMException
    {
        org.xml.sax.ext.LexicalHandler $r1, $r4;
        org.jdom.JDOMException $r6;
        org.jdom.output.SAXOutputter r0;
        org.xml.sax.SAXException $r5;
        int $i0;
        char[] $r3;
        java.lang.String r2;

        r0 := @this: org.jdom.output.SAXOutputter;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.jdom.output.SAXOutputter: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        if $r1 == null goto label4;

        $r3 = virtualinvoke r2.<java.lang.String: char[] toCharArray()>();

     label1:
        $r4 = r0.<org.jdom.output.SAXOutputter: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        $i0 = lengthof $r3;

        interfaceinvoke $r4.<org.xml.sax.ext.LexicalHandler: void comment(char[],int,int)>($r3, 0, $i0);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new org.jdom.JDOMException;

        specialinvoke $r6.<org.jdom.JDOMException: void <init>(java.lang.String,java.lang.Throwable)>("Exception in comment", $r5);

        throw $r6;

     label4:
        return;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
    }

    private org.xml.sax.XMLReader createDTDParser() throws org.jdom.JDOMException
    {
        org.xml.sax.ext.LexicalHandler $r4, $r6, $r14;
        org.xml.sax.XMLReader $r1;
        org.jdom.JDOMException $r16;
        org.xml.sax.DTDHandler $r2, $r8;
        org.jdom.output.SAXOutputter r0;
        org.xml.sax.EntityResolver $r3, $r7;
        java.lang.Exception $r15;
        org.xml.sax.helpers.DefaultHandler $r18;
        org.xml.sax.ext.DeclHandler $r5, $r11, $r17;
        org.xml.sax.SAXException $r9, $r10, $r12, $r13;

        r0 := @this: org.jdom.output.SAXOutputter;

     label01:
        $r1 = virtualinvoke r0.<org.jdom.output.SAXOutputter: org.xml.sax.XMLReader createParser()>();

     label02:
        goto label04;

     label03:
        $r15 := @caughtexception;

        $r16 = new org.jdom.JDOMException;

        specialinvoke $r16.<org.jdom.JDOMException: void <init>(java.lang.String,java.lang.Throwable)>("Error in SAX parser allocation", $r15);

        throw $r16;

     label04:
        $r2 = virtualinvoke r0.<org.jdom.output.SAXOutputter: org.xml.sax.DTDHandler getDTDHandler()>();

        if $r2 == null goto label05;

        $r8 = virtualinvoke r0.<org.jdom.output.SAXOutputter: org.xml.sax.DTDHandler getDTDHandler()>();

        interfaceinvoke $r1.<org.xml.sax.XMLReader: void setDTDHandler(org.xml.sax.DTDHandler)>($r8);

     label05:
        $r3 = virtualinvoke r0.<org.jdom.output.SAXOutputter: org.xml.sax.EntityResolver getEntityResolver()>();

        if $r3 == null goto label06;

        $r7 = virtualinvoke r0.<org.jdom.output.SAXOutputter: org.xml.sax.EntityResolver getEntityResolver()>();

        interfaceinvoke $r1.<org.xml.sax.XMLReader: void setEntityResolver(org.xml.sax.EntityResolver)>($r7);

     label06:
        $r4 = virtualinvoke r0.<org.jdom.output.SAXOutputter: org.xml.sax.ext.LexicalHandler getLexicalHandler()>();

        if $r4 == null goto label13;

     label07:
        $r6 = virtualinvoke r0.<org.jdom.output.SAXOutputter: org.xml.sax.ext.LexicalHandler getLexicalHandler()>();

        interfaceinvoke $r1.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>("http://xml.org/sax/properties/lexical-handler", $r6);

     label08:
        goto label13;

     label09:
        $r13 := @caughtexception;

     label10:
        $r14 = virtualinvoke r0.<org.jdom.output.SAXOutputter: org.xml.sax.ext.LexicalHandler getLexicalHandler()>();

        interfaceinvoke $r1.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>("http://xml.org/sax/handlers/LexicalHandler", $r14);

     label11:
        goto label13;

     label12:
        $r12 := @caughtexception;

        goto label13;

     label13:
        $r17 = virtualinvoke r0.<org.jdom.output.SAXOutputter: org.xml.sax.ext.DeclHandler getDeclHandler()>();

        if $r17 == null goto label20;

     label14:
        $r5 = virtualinvoke r0.<org.jdom.output.SAXOutputter: org.xml.sax.ext.DeclHandler getDeclHandler()>();

        interfaceinvoke $r1.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>("http://xml.org/sax/properties/declaration-handler", $r5);

     label15:
        goto label20;

     label16:
        $r10 := @caughtexception;

     label17:
        $r11 = virtualinvoke r0.<org.jdom.output.SAXOutputter: org.xml.sax.ext.DeclHandler getDeclHandler()>();

        interfaceinvoke $r1.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>("http://xml.org/sax/handlers/DeclHandler", $r11);

     label18:
        goto label20;

     label19:
        $r9 := @caughtexception;

        goto label20;

     label20:
        $r18 = new org.xml.sax.helpers.DefaultHandler;

        specialinvoke $r18.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        interfaceinvoke $r1.<org.xml.sax.XMLReader: void setErrorHandler(org.xml.sax.ErrorHandler)>($r18);

        return $r1;

        catch java.lang.Exception from label01 to label02 with label03;
        catch org.xml.sax.SAXException from label07 to label08 with label09;
        catch org.xml.sax.SAXException from label10 to label11 with label12;
        catch org.xml.sax.SAXException from label14 to label15 with label16;
        catch org.xml.sax.SAXException from label17 to label18 with label19;
    }

    protected org.xml.sax.XMLReader createParser() throws java.lang.Exception
    {
        java.lang.IllegalAccessException $r8;
        java.lang.NoSuchMethodException $r9;
        java.lang.reflect.InvocationTargetException $r10;
        org.xml.sax.XMLReader r13;
        org.jdom.output.SAXOutputter r12;
        java.lang.Class $r0, $r5;
        java.lang.Object $r2, $r4, $r7;
        java.lang.ClassNotFoundException $r11;
        java.lang.reflect.Method $r1, $r3, $r6;

        r12 := @this: org.jdom.output.SAXOutputter;

        r13 = null;

     label1:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("javax.xml.parsers.SAXParserFactory");

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("newInstance", null);

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, null);

        $r3 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("newSAXParser", null);

        $r4 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r2, null);

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getXMLReader", null);

        $r7 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r4, null);

        r13 = (org.xml.sax.XMLReader) $r7;

     label2:
        goto label7;

     label3:
        $r11 := @caughtexception;

        goto label7;

     label4:
        $r10 := @caughtexception;

        goto label7;

     label5:
        $r9 := @caughtexception;

        goto label7;

     label6:
        $r8 := @caughtexception;

     label7:
        if r13 != null goto label8;

        r13 = staticinvoke <org.xml.sax.helpers.XMLReaderFactory: org.xml.sax.XMLReader createXMLReader(java.lang.String)>("org.apache.xerces.parsers.SAXParser");

     label8:
        return r13;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
        catch java.lang.NoSuchMethodException from label1 to label2 with label5;
        catch java.lang.IllegalAccessException from label1 to label2 with label6;
    }

    private void documentLocator(org.jdom.Document)
    {
        org.jdom.output.JDOMLocator $r6, $r7, $r8, $r9, $r11, $r12;
        org.jdom.Document r2;
        org.jdom.output.SAXOutputter r0;
        org.jdom.DocType $r3;
        int $i1, $i3;
        java.lang.String r4, r5;
        org.xml.sax.ContentHandler $r10;

        r0 := @this: org.jdom.output.SAXOutputter;

        r2 := @parameter0: org.jdom.Document;

        $r12 = new org.jdom.output.JDOMLocator;

        specialinvoke $r12.<org.jdom.output.JDOMLocator: void <init>()>();

        r0.<org.jdom.output.SAXOutputter: org.jdom.output.JDOMLocator locator> = $r12;

        r4 = null;

        r5 = null;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<org.jdom.Document: org.jdom.DocType getDocType()>();

        if $r3 == null goto label1;

        r4 = virtualinvoke $r3.<org.jdom.DocType: java.lang.String getPublicID()>();

        r5 = virtualinvoke $r3.<org.jdom.DocType: java.lang.String getSystemID()>();

     label1:
        $r6 = r0.<org.jdom.output.SAXOutputter: org.jdom.output.JDOMLocator locator>;

        virtualinvoke $r6.<org.xml.sax.helpers.LocatorImpl: void setPublicId(java.lang.String)>(r4);

        $r7 = r0.<org.jdom.output.SAXOutputter: org.jdom.output.JDOMLocator locator>;

        virtualinvoke $r7.<org.xml.sax.helpers.LocatorImpl: void setSystemId(java.lang.String)>(r5);

        $r8 = r0.<org.jdom.output.SAXOutputter: org.jdom.output.JDOMLocator locator>;

        $i1 = (int) -1;

        virtualinvoke $r8.<org.xml.sax.helpers.LocatorImpl: void setLineNumber(int)>($i1);

        $r9 = r0.<org.jdom.output.SAXOutputter: org.jdom.output.JDOMLocator locator>;

        $i3 = (int) -1;

        virtualinvoke $r9.<org.xml.sax.helpers.LocatorImpl: void setColumnNumber(int)>($i3);

        $r10 = r0.<org.jdom.output.SAXOutputter: org.xml.sax.ContentHandler contentHandler>;

        $r11 = r0.<org.jdom.output.SAXOutputter: org.jdom.output.JDOMLocator locator>;

        interfaceinvoke $r10.<org.xml.sax.ContentHandler: void setDocumentLocator(org.xml.sax.Locator)>($r11);

        return;
    }

    private void dtdEvents(org.jdom.Document) throws org.jdom.JDOMException
    {
        org.xml.sax.InputSource $r7;
        java.io.IOException $r10;
        org.jdom.output.XMLOutputter $r4;
        org.xml.sax.XMLReader $r6;
        org.jdom.Document r0;
        org.xml.sax.SAXParseException $r14;
        org.jdom.JDOMException $r11, $r13;
        org.xml.sax.DTDHandler $r3;
        java.io.StringReader $r8;
        org.xml.sax.ext.DeclHandler $r9;
        org.jdom.output.SAXOutputter r2;
        org.xml.sax.SAXException $r12;
        org.jdom.DocType $r1;
        java.lang.String $r5;

        r2 := @this: org.jdom.output.SAXOutputter;

        r0 := @parameter0: org.jdom.Document;

        $r1 = virtualinvoke r0.<org.jdom.Document: org.jdom.DocType getDocType()>();

        if $r1 == null goto label7;

        $r3 = r2.<org.jdom.output.SAXOutputter: org.xml.sax.DTDHandler dtdHandler>;

        if $r3 != null goto label1;

        $r9 = r2.<org.jdom.output.SAXOutputter: org.xml.sax.ext.DeclHandler declHandler>;

        if $r9 == null goto label7;

     label1:
        $r4 = new org.jdom.output.XMLOutputter;

        specialinvoke $r4.<org.jdom.output.XMLOutputter: void <init>()>();

        $r5 = virtualinvoke $r4.<org.jdom.output.XMLOutputter: java.lang.String outputString(org.jdom.DocType)>($r1);

     label2:
        $r6 = specialinvoke r2.<org.jdom.output.SAXOutputter: org.xml.sax.XMLReader createDTDParser()>();

        $r7 = new org.xml.sax.InputSource;

        $r8 = new java.io.StringReader;

        specialinvoke $r8.<java.io.StringReader: void <init>(java.lang.String)>($r5);

        specialinvoke $r7.<org.xml.sax.InputSource: void <init>(java.io.Reader)>($r8);

        interfaceinvoke $r6.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>($r7);

     label3:
        goto label7;

     label4:
        $r14 := @caughtexception;

        goto label7;

     label5:
        $r12 := @caughtexception;

        $r13 = new org.jdom.JDOMException;

        specialinvoke $r13.<org.jdom.JDOMException: void <init>(java.lang.String,java.lang.Throwable)>("DTD parsing error", $r12);

        throw $r13;

     label6:
        $r10 := @caughtexception;

        $r11 = new org.jdom.JDOMException;

        specialinvoke $r11.<org.jdom.JDOMException: void <init>(java.lang.String,java.lang.Throwable)>("DTD parsing error", $r10);

        throw $r11;

     label7:
        return;

        catch org.xml.sax.SAXParseException from label2 to label3 with label4;
        catch org.xml.sax.SAXException from label2 to label3 with label5;
        catch java.io.IOException from label2 to label3 with label6;
    }

    private void element(org.jdom.Element, org.jdom.output.NamespaceStack) throws org.jdom.JDOMException
    {
        java.util.List $r4;
        org.jdom.output.JDOMLocator $r5;
        org.jdom.output.SAXOutputter r1;
        int $i0;
        org.xml.sax.Attributes $r3;
        org.jdom.output.NamespaceStack r0;
        org.jdom.Element r2;

        r1 := @this: org.jdom.output.SAXOutputter;

        r2 := @parameter0: org.jdom.Element;

        r0 := @parameter1: org.jdom.output.NamespaceStack;

        $i0 = virtualinvoke r0.<org.jdom.output.NamespaceStack: int size()>();

        $r3 = specialinvoke r1.<org.jdom.output.SAXOutputter: org.xml.sax.Attributes startPrefixMapping(org.jdom.Element,org.jdom.output.NamespaceStack)>(r2, r0);

        specialinvoke r1.<org.jdom.output.SAXOutputter: void startElement(org.jdom.Element,org.xml.sax.Attributes)>(r2, $r3);

        $r4 = virtualinvoke r2.<org.jdom.Element: java.util.List getContent()>();

        specialinvoke r1.<org.jdom.output.SAXOutputter: void elementContent(java.util.List,org.jdom.output.NamespaceStack)>($r4, r0);

        $r5 = r1.<org.jdom.output.SAXOutputter: org.jdom.output.JDOMLocator locator>;

        virtualinvoke $r5.<org.jdom.output.JDOMLocator: void setNode(java.lang.Object)>(r2);

        specialinvoke r1.<org.jdom.output.SAXOutputter: void endElement(org.jdom.Element)>(r2);

        specialinvoke r1.<org.jdom.output.SAXOutputter: void endPrefixMapping(org.jdom.output.NamespaceStack,int)>(r0, $i0);

        return;
    }

    private void elementContent(java.util.List, org.jdom.output.NamespaceStack) throws org.jdom.JDOMException
    {
        java.util.Iterator $r1;
        org.jdom.output.NamespaceStack r8;
        org.jdom.Content $r9;
        java.util.List r0;
        org.jdom.JDOMException $r4;
        org.jdom.output.SAXOutputter r3;
        java.lang.StringBuffer $r5, $r6;
        java.lang.Object $r2;
        java.lang.String $r7;
        boolean $z0, $z1;

        r3 := @this: org.jdom.output.SAXOutputter;

        r0 := @parameter0: java.util.List;

        r8 := @parameter1: org.jdom.output.NamespaceStack;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

        goto label3;

     label1:
        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $z0 = $r2 instanceof org.jdom.Content;

        if $z0 == 0 goto label2;

        $r9 = (org.jdom.Content) $r2;

        specialinvoke r3.<org.jdom.output.SAXOutputter: void elementContent(org.jdom.Content,org.jdom.output.NamespaceStack)>($r9, r8);

        goto label3;

     label2:
        $r4 = new org.jdom.JDOMException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>(java.lang.String)>("Invalid element content: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<org.jdom.JDOMException: void <init>(java.lang.String)>($r7);

        specialinvoke r3.<org.jdom.output.SAXOutputter: void handleError(org.jdom.JDOMException)>($r4);

     label3:
        $z1 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        return;
    }

    private void elementContent(org.jdom.Content, org.jdom.output.NamespaceStack) throws org.jdom.JDOMException
    {
        org.jdom.output.JDOMLocator $r2;
        org.jdom.Comment $r8;
        org.jdom.output.NamespaceStack r15;
        org.jdom.Content r1;
        org.jdom.CDATA $r13;
        org.jdom.JDOMException $r3;
        org.jdom.output.SAXOutputter r0;
        java.lang.StringBuffer $r4, $r5;
        java.lang.String $r6, $r9, $r12, $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.jdom.ProcessingInstruction $r10;
        org.jdom.Text $r11;
        org.jdom.EntityRef $r7;
        org.jdom.Element $r16;

        r0 := @this: org.jdom.output.SAXOutputter;

        r1 := @parameter0: org.jdom.Content;

        r15 := @parameter1: org.jdom.output.NamespaceStack;

        $r2 = r0.<org.jdom.output.SAXOutputter: org.jdom.output.JDOMLocator locator>;

        virtualinvoke $r2.<org.jdom.output.JDOMLocator: void setNode(java.lang.Object)>(r1);

        $z0 = r1 instanceof org.jdom.Element;

        if $z0 == 0 goto label1;

        $r16 = (org.jdom.Element) r1;

        specialinvoke r0.<org.jdom.output.SAXOutputter: void element(org.jdom.Element,org.jdom.output.NamespaceStack)>($r16, r15);

        goto label7;

     label1:
        $z1 = r1 instanceof org.jdom.CDATA;

        if $z1 == 0 goto label2;

        $r13 = (org.jdom.CDATA) r1;

        $r14 = virtualinvoke $r13.<org.jdom.Text: java.lang.String getText()>();

        specialinvoke r0.<org.jdom.output.SAXOutputter: void cdata(java.lang.String)>($r14);

        goto label7;

     label2:
        $z2 = r1 instanceof org.jdom.Text;

        if $z2 == 0 goto label3;

        $r11 = (org.jdom.Text) r1;

        $r12 = virtualinvoke $r11.<org.jdom.Text: java.lang.String getText()>();

        specialinvoke r0.<org.jdom.output.SAXOutputter: void characters(java.lang.String)>($r12);

        goto label7;

     label3:
        $z3 = r1 instanceof org.jdom.ProcessingInstruction;

        if $z3 == 0 goto label4;

        $r10 = (org.jdom.ProcessingInstruction) r1;

        specialinvoke r0.<org.jdom.output.SAXOutputter: void processingInstruction(org.jdom.ProcessingInstruction)>($r10);

        goto label7;

     label4:
        $z4 = r1 instanceof org.jdom.Comment;

        if $z4 == 0 goto label5;

        $r8 = (org.jdom.Comment) r1;

        $r9 = virtualinvoke $r8.<org.jdom.Comment: java.lang.String getText()>();

        specialinvoke r0.<org.jdom.output.SAXOutputter: void comment(java.lang.String)>($r9);

        goto label7;

     label5:
        $z5 = r1 instanceof org.jdom.EntityRef;

        if $z5 == 0 goto label6;

        $r7 = (org.jdom.EntityRef) r1;

        specialinvoke r0.<org.jdom.output.SAXOutputter: void entityRef(org.jdom.EntityRef)>($r7);

        goto label7;

     label6:
        $r3 = new org.jdom.JDOMException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>("Invalid element content: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<org.jdom.JDOMException: void <init>(java.lang.String)>($r6);

        specialinvoke r0.<org.jdom.output.SAXOutputter: void handleError(org.jdom.JDOMException)>($r3);

     label7:
        return;
    }

    private void endDocument() throws org.jdom.JDOMException
    {
        org.jdom.JDOMException $r3;
        org.jdom.output.SAXOutputter r0;
        org.xml.sax.SAXException $r2;
        org.xml.sax.ContentHandler $r1;

        r0 := @this: org.jdom.output.SAXOutputter;

     label1:
        $r1 = r0.<org.jdom.output.SAXOutputter: org.xml.sax.ContentHandler contentHandler>;

        interfaceinvoke $r1.<org.xml.sax.ContentHandler: void endDocument()>();

        r0.<org.jdom.output.SAXOutputter: org.jdom.output.JDOMLocator locator> = null;

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new org.jdom.JDOMException;

        specialinvoke $r3.<org.jdom.JDOMException: void <init>(java.lang.String,java.lang.Throwable)>("Exception in endDocument", $r2);

        throw $r3;

     label4:
        return;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
    }

    private void endElement(org.jdom.Element) throws org.jdom.JDOMException
    {
        org.jdom.JDOMException $r7;
        org.jdom.output.SAXOutputter r4;
        org.xml.sax.SAXException $r6;
        java.lang.String $r1, $r2, $r3;
        org.xml.sax.ContentHandler $r5;
        org.jdom.Element r0;

        r4 := @this: org.jdom.output.SAXOutputter;

        r0 := @parameter0: org.jdom.Element;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.lang.String getNamespaceURI()>();

        $r2 = virtualinvoke r0.<org.jdom.Element: java.lang.String getName()>();

        $r3 = virtualinvoke r0.<org.jdom.Element: java.lang.String getQualifiedName()>();

     label1:
        $r5 = r4.<org.jdom.output.SAXOutputter: org.xml.sax.ContentHandler contentHandler>;

        interfaceinvoke $r5.<org.xml.sax.ContentHandler: void endElement(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new org.jdom.JDOMException;

        specialinvoke $r7.<org.jdom.JDOMException: void <init>(java.lang.String,java.lang.Throwable)>("Exception in endElement", $r6);

        throw $r7;

     label4:
        return;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
    }

    private void endPrefixMapping(org.jdom.output.NamespaceStack, int) throws org.jdom.JDOMException
    {
        org.jdom.output.NamespaceStack r0;
        org.jdom.JDOMException $r5;
        org.jdom.output.SAXOutputter r2;
        org.xml.sax.SAXException $r4;
        int $i0, i1;
        java.lang.String $r1;
        org.xml.sax.ContentHandler $r3;

        r2 := @this: org.jdom.output.SAXOutputter;

        r0 := @parameter0: org.jdom.output.NamespaceStack;

        i1 := @parameter1: int;

        goto label5;

     label1:
        $r1 = virtualinvoke r0.<org.jdom.output.NamespaceStack: java.lang.String pop()>();

     label2:
        $r3 = r2.<org.jdom.output.SAXOutputter: org.xml.sax.ContentHandler contentHandler>;

        interfaceinvoke $r3.<org.xml.sax.ContentHandler: void endPrefixMapping(java.lang.String)>($r1);

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

        $r5 = new org.jdom.JDOMException;

        specialinvoke $r5.<org.jdom.JDOMException: void <init>(java.lang.String,java.lang.Throwable)>("Exception in endPrefixMapping", $r4);

        throw $r5;

     label5:
        $i0 = virtualinvoke r0.<org.jdom.output.NamespaceStack: int size()>();

        if $i0 > i1 goto label1;

        return;

        catch org.xml.sax.SAXException from label2 to label3 with label4;
    }

    private void entityRef(org.jdom.EntityRef) throws org.jdom.JDOMException
    {
        org.jdom.JDOMException $r5;
        org.jdom.output.SAXOutputter r1;
        org.xml.sax.SAXException $r4;
        org.jdom.EntityRef r0;
        org.xml.sax.ContentHandler $r2;
        java.lang.String $r3;

        r1 := @this: org.jdom.output.SAXOutputter;

        r0 := @parameter0: org.jdom.EntityRef;

        if r0 == null goto label4;

     label1:
        $r2 = r1.<org.jdom.output.SAXOutputter: org.xml.sax.ContentHandler contentHandler>;

        $r3 = virtualinvoke r0.<org.jdom.EntityRef: java.lang.String getName()>();

        interfaceinvoke $r2.<org.xml.sax.ContentHandler: void skippedEntity(java.lang.String)>($r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.jdom.JDOMException;

        specialinvoke $r5.<org.jdom.JDOMException: void <init>(java.lang.String,java.lang.Throwable)>("Exception in entityRef", $r4);

        throw $r5;

     label4:
        return;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
    }

    private static java.lang.String getAttributeTypeName(int)
    {
        int $i0, i1;
        java.lang.String[] $r0, $r1;
        java.lang.String $r2;

        i1 := @parameter0: int;

        if i1 < 0 goto label1;

        $r0 = <org.jdom.output.SAXOutputter: java.lang.String[] attrTypeToNameMap>;

        $i0 = lengthof $r0;

        if i1 < $i0 goto label2;

     label1:
        i1 = 0;

     label2:
        $r1 = <org.jdom.output.SAXOutputter: java.lang.String[] attrTypeToNameMap>;

        $r2 = $r1[i1];

        return $r2;
    }

    public org.xml.sax.ContentHandler getContentHandler()
    {
        org.xml.sax.ContentHandler $r1;
        org.jdom.output.SAXOutputter r0;

        r0 := @this: org.jdom.output.SAXOutputter;

        $r1 = r0.<org.jdom.output.SAXOutputter: org.xml.sax.ContentHandler contentHandler>;

        return $r1;
    }

    public org.xml.sax.DTDHandler getDTDHandler()
    {
        org.xml.sax.DTDHandler $r1;
        org.jdom.output.SAXOutputter r0;

        r0 := @this: org.jdom.output.SAXOutputter;

        $r1 = r0.<org.jdom.output.SAXOutputter: org.xml.sax.DTDHandler dtdHandler>;

        return $r1;
    }

    public org.xml.sax.ext.DeclHandler getDeclHandler()
    {
        org.xml.sax.ext.DeclHandler $r1;
        org.jdom.output.SAXOutputter r0;

        r0 := @this: org.jdom.output.SAXOutputter;

        $r1 = r0.<org.jdom.output.SAXOutputter: org.xml.sax.ext.DeclHandler declHandler>;

        return $r1;
    }

    public org.xml.sax.EntityResolver getEntityResolver()
    {
        org.jdom.output.SAXOutputter r0;
        org.xml.sax.EntityResolver $r1;

        r0 := @this: org.jdom.output.SAXOutputter;

        $r1 = r0.<org.jdom.output.SAXOutputter: org.xml.sax.EntityResolver entityResolver>;

        return $r1;
    }

    public org.xml.sax.ErrorHandler getErrorHandler()
    {
        org.xml.sax.ErrorHandler $r1;
        org.jdom.output.SAXOutputter r0;

        r0 := @this: org.jdom.output.SAXOutputter;

        $r1 = r0.<org.jdom.output.SAXOutputter: org.xml.sax.ErrorHandler errorHandler>;

        return $r1;
    }

    public boolean getFeature(java.lang.String) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.xml.sax.SAXNotRecognizedException $r4;
        org.jdom.output.SAXOutputter r5;
        java.lang.String r0, $r1, $r2, $r3;
        boolean $z0, $z1, $z2, $z3, $z4;

        r5 := @this: org.jdom.output.SAXOutputter;

        r0 := @parameter0: java.lang.String;

        $r1 = "http://xml.org/sax/features/namespace-prefixes";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $z4 = r5.<org.jdom.output.SAXOutputter: boolean declareNamespaces>;

        return $z4;

     label1:
        $r2 = "http://xml.org/sax/features/namespaces";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $r3 = "http://xml.org/sax/features/validation";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label3;

        $z3 = r5.<org.jdom.output.SAXOutputter: boolean reportDtdEvents>;

        return $z3;

     label3:
        $r4 = new org.xml.sax.SAXNotRecognizedException;

        specialinvoke $r4.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>(r0);

        throw $r4;
    }

    public org.xml.sax.ext.LexicalHandler getLexicalHandler()
    {
        org.xml.sax.ext.LexicalHandler $r1;
        org.jdom.output.SAXOutputter r0;

        r0 := @this: org.jdom.output.SAXOutputter;

        $r1 = r0.<org.jdom.output.SAXOutputter: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        return $r1;
    }

    public org.jdom.output.JDOMLocator getLocator()
    {
        org.jdom.output.JDOMLocator $r1, $r2, $r3;
        org.jdom.output.SAXOutputter r0;

        r0 := @this: org.jdom.output.SAXOutputter;

        $r1 = r0.<org.jdom.output.SAXOutputter: org.jdom.output.JDOMLocator locator>;

        if $r1 == null goto label1;

        $r3 = new org.jdom.output.JDOMLocator;

        $r2 = r0.<org.jdom.output.SAXOutputter: org.jdom.output.JDOMLocator locator>;

        specialinvoke $r3.<org.jdom.output.JDOMLocator: void <init>(org.xml.sax.Locator)>($r2);

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public java.lang.Object getProperty(java.lang.String) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.xml.sax.ext.LexicalHandler $r3;
        org.xml.sax.SAXNotRecognizedException $r8;
        org.xml.sax.ext.DeclHandler $r6;
        org.jdom.output.SAXOutputter r2;
        java.lang.String r0, $r1, $r4, $r5, $r7;
        boolean $z0, $z1, $z2, $z3;

        r2 := @this: org.jdom.output.SAXOutputter;

        r0 := @parameter0: java.lang.String;

        $r1 = "http://xml.org/sax/properties/lexical-handler";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        $r4 = "http://xml.org/sax/handlers/LexicalHandler";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

     label1:
        $r3 = virtualinvoke r2.<org.jdom.output.SAXOutputter: org.xml.sax.ext.LexicalHandler getLexicalHandler()>();

        return $r3;

     label2:
        $r5 = "http://xml.org/sax/properties/declaration-handler";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 != 0 goto label3;

        $r7 = "http://xml.org/sax/handlers/DeclHandler";

        $z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z3 == 0 goto label4;

     label3:
        $r6 = virtualinvoke r2.<org.jdom.output.SAXOutputter: org.xml.sax.ext.DeclHandler getDeclHandler()>();

        return $r6;

     label4:
        $r8 = new org.xml.sax.SAXNotRecognizedException;

        specialinvoke $r8.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>(r0);

        throw $r8;
    }

    public boolean getReportDTDEvents()
    {
        org.jdom.output.SAXOutputter r0;
        boolean $z0;

        r0 := @this: org.jdom.output.SAXOutputter;

        $z0 = r0.<org.jdom.output.SAXOutputter: boolean reportDtdEvents>;

        return $z0;
    }

    public boolean getReportNamespaceDeclarations()
    {
        org.jdom.output.SAXOutputter r0;
        boolean $z0;

        r0 := @this: org.jdom.output.SAXOutputter;

        $z0 = r0.<org.jdom.output.SAXOutputter: boolean declareNamespaces>;

        return $z0;
    }

    private void handleError(org.jdom.JDOMException) throws org.jdom.JDOMException
    {
        java.lang.Exception $r7, $r10;
        org.xml.sax.ErrorHandler $r1, $r4;
        org.xml.sax.SAXParseException $r3;
        org.jdom.JDOMException r2, $r8, $r11;
        org.jdom.output.SAXOutputter r0;
        org.xml.sax.SAXException $r6;
        java.lang.String $r5, $r9;
        boolean $z0;

        r0 := @this: org.jdom.output.SAXOutputter;

        r2 := @parameter0: org.jdom.JDOMException;

        $r1 = r0.<org.jdom.output.SAXOutputter: org.xml.sax.ErrorHandler errorHandler>;

        if $r1 == null goto label5;

     label1:
        $r4 = r0.<org.jdom.output.SAXOutputter: org.xml.sax.ErrorHandler errorHandler>;

        $r3 = new org.xml.sax.SAXParseException;

        $r5 = virtualinvoke r2.<org.jdom.JDOMException: java.lang.String getMessage()>();

        specialinvoke $r3.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator,java.lang.Exception)>($r5, null, r2);

        interfaceinvoke $r4.<org.xml.sax.ErrorHandler: void error(org.xml.sax.SAXParseException)>($r3);

     label2:
        goto label6;

     label3:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<org.xml.sax.SAXException: java.lang.Exception getException()>();

        $z0 = $r7 instanceof org.jdom.JDOMException;

        if $z0 == 0 goto label4;

        $r10 = virtualinvoke $r6.<org.xml.sax.SAXException: java.lang.Exception getException()>();

        $r11 = (org.jdom.JDOMException) $r10;

        throw $r11;

     label4:
        $r8 = new org.jdom.JDOMException;

        $r9 = virtualinvoke $r6.<org.xml.sax.SAXException: java.lang.String getMessage()>();

        specialinvoke $r8.<org.jdom.JDOMException: void <init>(java.lang.String,java.lang.Throwable)>($r9, $r6);

        throw $r8;

     label5:
        throw r2;

     label6:
        return;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
    }

    public void output(java.util.List) throws org.jdom.JDOMException
    {
        java.util.List r0;
        org.jdom.output.SAXOutputter r1;
        int $i0;
        org.jdom.output.NamespaceStack $r2;

        r1 := @this: org.jdom.output.SAXOutputter;

        r0 := @parameter0: java.util.List;

        if r0 == null goto label1;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 != 0 goto label2;

     label1:
        return;

     label2:
        specialinvoke r1.<org.jdom.output.SAXOutputter: void documentLocator(org.jdom.Document)>(null);

        specialinvoke r1.<org.jdom.output.SAXOutputter: void startDocument()>();

        $r2 = new org.jdom.output.NamespaceStack;

        specialinvoke $r2.<org.jdom.output.NamespaceStack: void <init>()>();

        specialinvoke r1.<org.jdom.output.SAXOutputter: void elementContent(java.util.List,org.jdom.output.NamespaceStack)>(r0, $r2);

        specialinvoke r1.<org.jdom.output.SAXOutputter: void endDocument()>();

        return;
    }

    public void output(org.jdom.Document) throws org.jdom.JDOMException
    {
        org.jdom.output.JDOMLocator $r5;
        org.jdom.Comment $r6;
        org.jdom.output.NamespaceStack $r10;
        org.jdom.Document r0;
        org.jdom.output.SAXOutputter r1;
        java.lang.String $r7;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.jdom.ProcessingInstruction $r8;
        java.util.Iterator $r3;
        java.util.List $r2;
        java.lang.Object $r4;
        org.jdom.Element $r9;

        r1 := @this: org.jdom.output.SAXOutputter;

        r0 := @parameter0: org.jdom.Document;

        if r0 != null goto label1;

        return;

     label1:
        specialinvoke r1.<org.jdom.output.SAXOutputter: void documentLocator(org.jdom.Document)>(r0);

        specialinvoke r1.<org.jdom.output.SAXOutputter: void startDocument()>();

        $z0 = r1.<org.jdom.output.SAXOutputter: boolean reportDtdEvents>;

        if $z0 == 0 goto label2;

        specialinvoke r1.<org.jdom.output.SAXOutputter: void dtdEvents(org.jdom.Document)>(r0);

     label2:
        $r2 = virtualinvoke r0.<org.jdom.Document: java.util.List getContent()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        goto label6;

     label3:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = r1.<org.jdom.output.SAXOutputter: org.jdom.output.JDOMLocator locator>;

        virtualinvoke $r5.<org.jdom.output.JDOMLocator: void setNode(java.lang.Object)>($r4);

        $z1 = $r4 instanceof org.jdom.Element;

        if $z1 == 0 goto label4;

        $r9 = virtualinvoke r0.<org.jdom.Document: org.jdom.Element getRootElement()>();

        $r10 = new org.jdom.output.NamespaceStack;

        specialinvoke $r10.<org.jdom.output.NamespaceStack: void <init>()>();

        specialinvoke r1.<org.jdom.output.SAXOutputter: void element(org.jdom.Element,org.jdom.output.NamespaceStack)>($r9, $r10);

        goto label6;

     label4:
        $z2 = $r4 instanceof org.jdom.ProcessingInstruction;

        if $z2 == 0 goto label5;

        $r8 = (org.jdom.ProcessingInstruction) $r4;

        specialinvoke r1.<org.jdom.output.SAXOutputter: void processingInstruction(org.jdom.ProcessingInstruction)>($r8);

        goto label6;

     label5:
        $z3 = $r4 instanceof org.jdom.Comment;

        if $z3 == 0 goto label6;

        $r6 = (org.jdom.Comment) $r4;

        $r7 = virtualinvoke $r6.<org.jdom.Comment: java.lang.String getText()>();

        specialinvoke r1.<org.jdom.output.SAXOutputter: void comment(java.lang.String)>($r7);

     label6:
        $z4 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z4 != 0 goto label3;

        specialinvoke r1.<org.jdom.output.SAXOutputter: void endDocument()>();

        return;
    }

    public void output(org.jdom.Element) throws org.jdom.JDOMException
    {
        org.jdom.output.NamespaceStack $r2;
        org.jdom.Element r0;
        org.jdom.output.SAXOutputter r1;

        r1 := @this: org.jdom.output.SAXOutputter;

        r0 := @parameter0: org.jdom.Element;

        if r0 != null goto label1;

        return;

     label1:
        specialinvoke r1.<org.jdom.output.SAXOutputter: void documentLocator(org.jdom.Document)>(null);

        specialinvoke r1.<org.jdom.output.SAXOutputter: void startDocument()>();

        $r2 = new org.jdom.output.NamespaceStack;

        specialinvoke $r2.<org.jdom.output.NamespaceStack: void <init>()>();

        specialinvoke r1.<org.jdom.output.SAXOutputter: void elementContent(org.jdom.Content,org.jdom.output.NamespaceStack)>(r0, $r2);

        specialinvoke r1.<org.jdom.output.SAXOutputter: void endDocument()>();

        return;
    }

    public void outputFragment(java.util.List) throws org.jdom.JDOMException
    {
        java.util.List r0;
        org.jdom.output.SAXOutputter r1;
        int $i0;
        org.jdom.output.NamespaceStack $r2;

        r1 := @this: org.jdom.output.SAXOutputter;

        r0 := @parameter0: java.util.List;

        if r0 == null goto label1;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 != 0 goto label2;

     label1:
        return;

     label2:
        $r2 = new org.jdom.output.NamespaceStack;

        specialinvoke $r2.<org.jdom.output.NamespaceStack: void <init>()>();

        specialinvoke r1.<org.jdom.output.SAXOutputter: void elementContent(java.util.List,org.jdom.output.NamespaceStack)>(r0, $r2);

        return;
    }

    public void outputFragment(org.jdom.Content) throws org.jdom.JDOMException
    {
        org.jdom.output.NamespaceStack $r2;
        org.jdom.Content r0;
        org.jdom.output.SAXOutputter r1;

        r1 := @this: org.jdom.output.SAXOutputter;

        r0 := @parameter0: org.jdom.Content;

        if r0 != null goto label1;

        return;

     label1:
        $r2 = new org.jdom.output.NamespaceStack;

        specialinvoke $r2.<org.jdom.output.NamespaceStack: void <init>()>();

        specialinvoke r1.<org.jdom.output.SAXOutputter: void elementContent(org.jdom.Content,org.jdom.output.NamespaceStack)>(r0, $r2);

        return;
    }

    private void processingInstruction(org.jdom.ProcessingInstruction) throws org.jdom.JDOMException
    {
        org.jdom.ProcessingInstruction r0;
        org.jdom.JDOMException $r6;
        org.jdom.output.SAXOutputter r3;
        org.xml.sax.SAXException $r5;
        java.lang.String $r1, $r2;
        org.xml.sax.ContentHandler $r4;

        r3 := @this: org.jdom.output.SAXOutputter;

        r0 := @parameter0: org.jdom.ProcessingInstruction;

        if r0 == null goto label4;

        $r1 = virtualinvoke r0.<org.jdom.ProcessingInstruction: java.lang.String getTarget()>();

        $r2 = virtualinvoke r0.<org.jdom.ProcessingInstruction: java.lang.String getData()>();

     label1:
        $r4 = r3.<org.jdom.output.SAXOutputter: org.xml.sax.ContentHandler contentHandler>;

        interfaceinvoke $r4.<org.xml.sax.ContentHandler: void processingInstruction(java.lang.String,java.lang.String)>($r1, $r2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new org.jdom.JDOMException;

        specialinvoke $r6.<org.jdom.JDOMException: void <init>(java.lang.String,java.lang.Throwable)>("Exception in processingInstruction", $r5);

        throw $r6;

     label4:
        return;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
    }

    public void setContentHandler(org.xml.sax.ContentHandler)
    {
        org.xml.sax.ContentHandler r1;
        org.jdom.output.SAXOutputter r0;

        r0 := @this: org.jdom.output.SAXOutputter;

        r1 := @parameter0: org.xml.sax.ContentHandler;

        r0.<org.jdom.output.SAXOutputter: org.xml.sax.ContentHandler contentHandler> = r1;

        return;
    }

    public void setDTDHandler(org.xml.sax.DTDHandler)
    {
        org.xml.sax.DTDHandler r1;
        org.jdom.output.SAXOutputter r0;

        r0 := @this: org.jdom.output.SAXOutputter;

        r1 := @parameter0: org.xml.sax.DTDHandler;

        r0.<org.jdom.output.SAXOutputter: org.xml.sax.DTDHandler dtdHandler> = r1;

        return;
    }

    public void setDeclHandler(org.xml.sax.ext.DeclHandler)
    {
        org.xml.sax.ext.DeclHandler r1;
        org.jdom.output.SAXOutputter r0;

        r0 := @this: org.jdom.output.SAXOutputter;

        r1 := @parameter0: org.xml.sax.ext.DeclHandler;

        r0.<org.jdom.output.SAXOutputter: org.xml.sax.ext.DeclHandler declHandler> = r1;

        return;
    }

    public void setEntityResolver(org.xml.sax.EntityResolver)
    {
        org.jdom.output.SAXOutputter r0;
        org.xml.sax.EntityResolver r1;

        r0 := @this: org.jdom.output.SAXOutputter;

        r1 := @parameter0: org.xml.sax.EntityResolver;

        r0.<org.jdom.output.SAXOutputter: org.xml.sax.EntityResolver entityResolver> = r1;

        return;
    }

    public void setErrorHandler(org.xml.sax.ErrorHandler)
    {
        org.xml.sax.ErrorHandler r1;
        org.jdom.output.SAXOutputter r0;

        r0 := @this: org.jdom.output.SAXOutputter;

        r1 := @parameter0: org.xml.sax.ErrorHandler;

        r0.<org.jdom.output.SAXOutputter: org.xml.sax.ErrorHandler errorHandler> = r1;

        return;
    }

    public void setFeature(java.lang.String, boolean) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.xml.sax.SAXNotSupportedException $r6;
        org.xml.sax.SAXNotRecognizedException $r4;
        org.jdom.output.SAXOutputter r5;
        java.lang.String r0, $r1, $r2, $r3;
        boolean $z0, $z1, $z2, z3;

        r5 := @this: org.jdom.output.SAXOutputter;

        r0 := @parameter0: java.lang.String;

        z3 := @parameter1: boolean;

        $r1 = "http://xml.org/sax/features/namespace-prefixes";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        virtualinvoke r5.<org.jdom.output.SAXOutputter: void setReportNamespaceDeclarations(boolean)>(z3);

        goto label4;

     label1:
        $r2 = "http://xml.org/sax/features/namespaces";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

        if z3 == 1 goto label4;

        $r6 = new org.xml.sax.SAXNotSupportedException;

        specialinvoke $r6.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>(r0);

        throw $r6;

     label2:
        $r3 = "http://xml.org/sax/features/validation";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label3;

        virtualinvoke r5.<org.jdom.output.SAXOutputter: void setReportDTDEvents(boolean)>(z3);

        goto label4;

     label3:
        $r4 = new org.xml.sax.SAXNotRecognizedException;

        specialinvoke $r4.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>(r0);

        throw $r4;

     label4:
        return;
    }

    public void setLexicalHandler(org.xml.sax.ext.LexicalHandler)
    {
        org.xml.sax.ext.LexicalHandler r1;
        org.jdom.output.SAXOutputter r0;

        r0 := @this: org.jdom.output.SAXOutputter;

        r1 := @parameter0: org.xml.sax.ext.LexicalHandler;

        r0.<org.jdom.output.SAXOutputter: org.xml.sax.ext.LexicalHandler lexicalHandler> = r1;

        return;
    }

    public void setProperty(java.lang.String, java.lang.Object) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.xml.sax.ext.LexicalHandler $r4;
        org.xml.sax.SAXNotRecognizedException $r9;
        org.xml.sax.ext.DeclHandler $r7;
        org.jdom.output.SAXOutputter r2;
        java.lang.Object r3;
        java.lang.String r0, $r1, $r5, $r6, $r8;
        boolean $z0, $z1, $z2, $z3;

        r2 := @this: org.jdom.output.SAXOutputter;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        $r1 = "http://xml.org/sax/properties/lexical-handler";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        $r5 = "http://xml.org/sax/handlers/LexicalHandler";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

     label1:
        $r4 = (org.xml.sax.ext.LexicalHandler) r3;

        virtualinvoke r2.<org.jdom.output.SAXOutputter: void setLexicalHandler(org.xml.sax.ext.LexicalHandler)>($r4);

        goto label5;

     label2:
        $r6 = "http://xml.org/sax/properties/declaration-handler";

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 != 0 goto label3;

        $r8 = "http://xml.org/sax/handlers/DeclHandler";

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z3 == 0 goto label4;

     label3:
        $r7 = (org.xml.sax.ext.DeclHandler) r3;

        virtualinvoke r2.<org.jdom.output.SAXOutputter: void setDeclHandler(org.xml.sax.ext.DeclHandler)>($r7);

        goto label5;

     label4:
        $r9 = new org.xml.sax.SAXNotRecognizedException;

        specialinvoke $r9.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>(r0);

        throw $r9;

     label5:
        return;
    }

    public void setReportDTDEvents(boolean)
    {
        org.jdom.output.SAXOutputter r0;
        boolean z0;

        r0 := @this: org.jdom.output.SAXOutputter;

        z0 := @parameter0: boolean;

        r0.<org.jdom.output.SAXOutputter: boolean reportDtdEvents> = z0;

        return;
    }

    public void setReportNamespaceDeclarations(boolean)
    {
        org.jdom.output.SAXOutputter r0;
        boolean z0;

        r0 := @this: org.jdom.output.SAXOutputter;

        z0 := @parameter0: boolean;

        r0.<org.jdom.output.SAXOutputter: boolean declareNamespaces> = z0;

        return;
    }

    private void startDocument() throws org.jdom.JDOMException
    {
        org.jdom.JDOMException $r3;
        org.jdom.output.SAXOutputter r0;
        org.xml.sax.SAXException $r2;
        org.xml.sax.ContentHandler $r1;

        r0 := @this: org.jdom.output.SAXOutputter;

     label1:
        $r1 = r0.<org.jdom.output.SAXOutputter: org.xml.sax.ContentHandler contentHandler>;

        interfaceinvoke $r1.<org.xml.sax.ContentHandler: void startDocument()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new org.jdom.JDOMException;

        specialinvoke $r3.<org.jdom.JDOMException: void <init>(java.lang.String,java.lang.Throwable)>("Exception in startDocument", $r2);

        throw $r3;

     label4:
        return;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
    }

    private void startElement(org.jdom.Element, org.xml.sax.Attributes) throws org.jdom.JDOMException
    {
        org.jdom.JDOMException $r17;
        org.jdom.output.SAXOutputter r14;
        org.xml.sax.Attributes r4;
        int $i0;
        java.lang.String $r1, $r2, $r3, $r9, $r10, $r11, $r12, $r13;
        org.xml.sax.ContentHandler $r15;
        boolean $z0;
        org.xml.sax.helpers.AttributesImpl r5, $r18;
        java.util.Iterator $r7;
        org.jdom.Attribute r19;
        java.util.List $r6;
        org.xml.sax.SAXException $r16;
        java.lang.Object $r8;
        org.jdom.Element r0;

        r14 := @this: org.jdom.output.SAXOutputter;

        r0 := @parameter0: org.jdom.Element;

        r4 := @parameter1: org.xml.sax.Attributes;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.lang.String getNamespaceURI()>();

        $r2 = virtualinvoke r0.<org.jdom.Element: java.lang.String getName()>();

        $r3 = virtualinvoke r0.<org.jdom.Element: java.lang.String getQualifiedName()>();

        if r4 == null goto label1;

        $r18 = new org.xml.sax.helpers.AttributesImpl;

        specialinvoke $r18.<org.xml.sax.helpers.AttributesImpl: void <init>(org.xml.sax.Attributes)>(r4);

        goto label2;

     label1:
        $r18 = new org.xml.sax.helpers.AttributesImpl;

        specialinvoke $r18.<org.xml.sax.helpers.AttributesImpl: void <init>()>();

     label2:
        r5 = $r18;

        $r6 = virtualinvoke r0.<org.jdom.Element: java.util.List getAttributes()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

        goto label4;

     label3:
        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r19 = (org.jdom.Attribute) $r8;

        $r9 = virtualinvoke r19.<org.jdom.Attribute: java.lang.String getNamespaceURI()>();

        $r10 = virtualinvoke r19.<org.jdom.Attribute: java.lang.String getName()>();

        $r11 = virtualinvoke r19.<org.jdom.Attribute: java.lang.String getQualifiedName()>();

        $i0 = virtualinvoke r19.<org.jdom.Attribute: int getAttributeType()>();

        $r12 = staticinvoke <org.jdom.output.SAXOutputter: java.lang.String getAttributeTypeName(int)>($i0);

        $r13 = virtualinvoke r19.<org.jdom.Attribute: java.lang.String getValue()>();

        virtualinvoke r5.<org.xml.sax.helpers.AttributesImpl: void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r9, $r10, $r11, $r12, $r13);

     label4:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

     label5:
        $r15 = r14.<org.jdom.output.SAXOutputter: org.xml.sax.ContentHandler contentHandler>;

        interfaceinvoke $r15.<org.xml.sax.ContentHandler: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>($r1, $r2, $r3, r5);

     label6:
        goto label8;

     label7:
        $r16 := @caughtexception;

        $r17 = new org.jdom.JDOMException;

        specialinvoke $r17.<org.jdom.JDOMException: void <init>(java.lang.String,java.lang.Throwable)>("Exception in startElement", $r16);

        throw $r17;

     label8:
        return;

        catch org.xml.sax.SAXException from label5 to label6 with label7;
    }

    private org.xml.sax.Attributes startPrefixMapping(org.jdom.Element, org.jdom.output.NamespaceStack) throws org.jdom.JDOMException
    {
        org.jdom.output.NamespaceStack r6;
        org.jdom.JDOMException $r18, $r20;
        org.jdom.output.SAXOutputter r9;
        org.jdom.Namespace $r1, $r2, r23;
        java.lang.String $r5, $r7, $r8, $r11, $r12, $r13, $r14, $r16;
        org.xml.sax.ContentHandler $r10, $r15;
        boolean $z0, $z1, $z2;
        org.xml.sax.helpers.AttributesImpl r21;
        java.util.Iterator $r3;
        java.util.List $r22;
        org.xml.sax.SAXException $r17, $r19;
        java.lang.Object $r4;
        org.jdom.Element r0;

        r9 := @this: org.jdom.output.SAXOutputter;

        r0 := @parameter0: org.jdom.Element;

        r6 := @parameter1: org.jdom.output.NamespaceStack;

        r21 = null;

        $r1 = virtualinvoke r0.<org.jdom.Element: org.jdom.Namespace getNamespace()>();

        $r2 = <org.jdom.Namespace: org.jdom.Namespace XML_NAMESPACE>;

        if $r1 == $r2 goto label04;

        $r12 = virtualinvoke $r1.<org.jdom.Namespace: java.lang.String getPrefix()>();

        $r13 = virtualinvoke r6.<org.jdom.output.NamespaceStack: java.lang.String getURI(java.lang.String)>($r12);

        $r14 = virtualinvoke $r1.<org.jdom.Namespace: java.lang.String getURI()>();

        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z1 != 0 goto label04;

        virtualinvoke r6.<org.jdom.output.NamespaceStack: void push(org.jdom.Namespace)>($r1);

        r21 = specialinvoke r9.<org.jdom.output.SAXOutputter: org.xml.sax.helpers.AttributesImpl addNsAttribute(org.xml.sax.helpers.AttributesImpl,org.jdom.Namespace)>(null, $r1);

     label01:
        $r15 = r9.<org.jdom.output.SAXOutputter: org.xml.sax.ContentHandler contentHandler>;

        $r16 = virtualinvoke $r1.<org.jdom.Namespace: java.lang.String getURI()>();

        interfaceinvoke $r15.<org.xml.sax.ContentHandler: void startPrefixMapping(java.lang.String,java.lang.String)>($r12, $r16);

     label02:
        goto label04;

     label03:
        $r19 := @caughtexception;

        $r20 = new org.jdom.JDOMException;

        specialinvoke $r20.<org.jdom.JDOMException: void <init>(java.lang.String,java.lang.Throwable)>("Exception in startPrefixMapping", $r19);

        throw $r20;

     label04:
        $r22 = virtualinvoke r0.<org.jdom.Element: java.util.List getAdditionalNamespaces()>();

        if $r22 == null goto label10;

        $r3 = interfaceinvoke $r22.<java.util.List: java.util.Iterator iterator()>();

        goto label09;

     label05:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r23 = (org.jdom.Namespace) $r4;

        $r5 = virtualinvoke r23.<org.jdom.Namespace: java.lang.String getPrefix()>();

        $r7 = virtualinvoke r6.<org.jdom.output.NamespaceStack: java.lang.String getURI(java.lang.String)>($r5);

        $r8 = virtualinvoke r23.<org.jdom.Namespace: java.lang.String getURI()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label09;

        virtualinvoke r6.<org.jdom.output.NamespaceStack: void push(org.jdom.Namespace)>(r23);

        r21 = specialinvoke r9.<org.jdom.output.SAXOutputter: org.xml.sax.helpers.AttributesImpl addNsAttribute(org.xml.sax.helpers.AttributesImpl,org.jdom.Namespace)>(r21, r23);

     label06:
        $r10 = r9.<org.jdom.output.SAXOutputter: org.xml.sax.ContentHandler contentHandler>;

        $r11 = virtualinvoke r23.<org.jdom.Namespace: java.lang.String getURI()>();

        interfaceinvoke $r10.<org.xml.sax.ContentHandler: void startPrefixMapping(java.lang.String,java.lang.String)>($r5, $r11);

     label07:
        goto label09;

     label08:
        $r17 := @caughtexception;

        $r18 = new org.jdom.JDOMException;

        specialinvoke $r18.<org.jdom.JDOMException: void <init>(java.lang.String,java.lang.Throwable)>("Exception in startPrefixMapping", $r17);

        throw $r18;

     label09:
        $z2 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label05;

     label10:
        return r21;

        catch org.xml.sax.SAXException from label01 to label02 with label03;
        catch org.xml.sax.SAXException from label06 to label07 with label08;
    }
}
