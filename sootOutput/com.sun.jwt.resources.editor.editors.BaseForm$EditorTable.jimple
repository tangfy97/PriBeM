public class com.sun.jwt.resources.editor.editors.BaseForm$EditorTable extends javax.swing.JTable
{
    private java.util.List rows;
    private int sortColumn;
    private java.lang.String filter;
    private boolean ascending;
    private javax.swing.table.TableModel internalModel;

    public void <init>()
    {
        int $i1;
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable r0;

        r0 := @this: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable;

        specialinvoke r0.<javax.swing.JTable: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: java.util.List rows> = null;

        $i1 = (int) -1;

        r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: int sortColumn> = $i1;

        return;
    }

    public void setModel(javax.swing.table.TableModel)
    {
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper $r2;
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable r0;
        javax.swing.table.TableModel r1;

        r0 := @this: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable;

        r1 := @parameter0: javax.swing.table.TableModel;

        r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: javax.swing.table.TableModel internalModel> = r1;

        $r2 = new com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper;

        specialinvoke $r2.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper: void <init>(com.sun.jwt.resources.editor.editors.BaseForm$EditorTable)>(r0);

        specialinvoke r0.<javax.swing.JTable: void setModel(javax.swing.table.TableModel)>($r2);

        return;
    }

    public javax.swing.table.TableModel getInternalModel()
    {
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable r0;
        javax.swing.table.TableModel $r1;

        r0 := @this: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: javax.swing.table.TableModel internalModel>;

        return $r1;
    }

    protected javax.swing.table.JTableHeader createDefaultTableHeader()
    {
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTableHeader $r0;
        javax.swing.table.TableColumnModel $r2;
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable r1;

        r1 := @this: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable;

        $r0 = new com.sun.jwt.resources.editor.editors.BaseForm$EditorTableHeader;

        $r2 = r1.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: javax.swing.table.TableColumnModel columnModel>;

        specialinvoke $r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTableHeader: void <init>(javax.swing.table.TableColumnModel)>($r2);

        return $r0;
    }

    public void sort(int)
    {
        java.lang.Integer $r13, $r16, $r22;
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable r0;
        javax.swing.table.TableModel $r3, $r10, $r20, $r24, $r27;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        javax.swing.event.TableModelEvent $r33;
        java.util.Collection $r5;
        java.util.List $r7, $r9, $r15, $r21, r23;
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$1 $r29;
        java.util.ArrayList $r28, $r31, $r32;
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper $r25;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, $i9, $i11, $i13, $i15, $i17;
        java.lang.String $r17, $r18;
        java.util.Iterator $r6;
        java.util.TreeMap $r30;
        java.lang.Object $r8, $r11, $r14;

        r0 := @this: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable;

        i0 := @parameter0: int;

        $i1 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: int sortColumn>;

        if $i1 != i0 goto label03;

        $z5 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: boolean ascending>;

        if $z5 != 0 goto label01;

        $z6 = 1;

        goto label02;

     label01:
        $z6 = 0;

     label02:
        r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: boolean ascending> = $z6;

        goto label04;

     label03:
        r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: boolean ascending> = 1;

     label04:
        r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: int sortColumn> = i0;

        $i2 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: int sortColumn>;

        $i9 = (int) -1;

        if $i2 != $i9 goto label10;

        $r17 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: java.lang.String filter>;

        if $r17 == null goto label05;

        $r18 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: java.lang.String filter>;

        $i4 = virtualinvoke $r18.<java.lang.String: int length()>();

        if $i4 != 0 goto label06;

     label05:
        r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: java.util.List rows> = null;

        goto label17;

     label06:
        $r28 = new java.util.ArrayList;

        specialinvoke $r28.<java.util.ArrayList: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: java.util.List rows> = $r28;

        i6 = 0;

     label07:
        $r20 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: javax.swing.table.TableModel internalModel>;

        $i5 = interfaceinvoke $r20.<javax.swing.table.TableModel: int getRowCount()>();

        if i6 >= $i5 goto label09;

        $z4 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: boolean checkFilter(int)>(i6);

        if $z4 == 0 goto label08;

        $r21 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: java.util.List rows>;

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r22);

     label08:
        i6 = i6 + 1;

        goto label07;

     label09:
        goto label17;

     label10:
        $r30 = new java.util.TreeMap;

        $r29 = new com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$1;

        specialinvoke $r29.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$1: void <init>(com.sun.jwt.resources.editor.editors.BaseForm$EditorTable)>(r0);

        specialinvoke $r30.<java.util.TreeMap: void <init>(java.util.Comparator)>($r29);

        i7 = 0;

     label11:
        $r3 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: javax.swing.table.TableModel internalModel>;

        $i3 = interfaceinvoke $r3.<javax.swing.table.TableModel: int getRowCount()>();

        if i7 >= $i3 goto label14;

        $z2 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: boolean checkFilter(int)>(i7);

        if $z2 == 0 goto label13;

        $r10 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: javax.swing.table.TableModel internalModel>;

        $r11 = interfaceinvoke $r10.<javax.swing.table.TableModel: java.lang.Object getValueAt(int,int)>(i7, i0);

        $z3 = virtualinvoke $r30.<java.util.TreeMap: boolean containsKey(java.lang.Object)>($r11);

        if $z3 == 0 goto label12;

        $r14 = virtualinvoke $r30.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r11);

        $r15 = (java.util.List) $r14;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7);

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r16);

        goto label13;

     label12:
        $r31 = new java.util.ArrayList;

        specialinvoke $r31.<java.util.ArrayList: void <init>()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7);

        interfaceinvoke $r31.<java.util.List: boolean add(java.lang.Object)>($r13);

        virtualinvoke $r30.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r31);

     label13:
        i7 = i7 + 1;

        goto label11;

     label14:
        $r32 = new java.util.ArrayList;

        specialinvoke $r32.<java.util.ArrayList: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: java.util.List rows> = $r32;

        $r5 = virtualinvoke $r30.<java.util.TreeMap: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label15:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label16;

        $r8 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r23 = (java.util.List) $r8;

        $r9 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: java.util.List rows>;

        interfaceinvoke $r9.<java.util.List: boolean addAll(java.util.Collection)>(r23);

        goto label15;

     label16:
        $z1 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: boolean ascending>;

        if $z1 != 0 goto label17;

        $r7 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: java.util.List rows>;

        staticinvoke <java.util.Collections: void reverse(java.util.List)>($r7);

     label17:
        $r24 = virtualinvoke r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: javax.swing.table.TableModel getModel()>();

        $r25 = (com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper) $r24;

        $r33 = new javax.swing.event.TableModelEvent;

        $r27 = virtualinvoke r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: javax.swing.table.TableModel getModel()>();

        $i11 = (int) -1;

        $i13 = (int) -1;

        $i15 = (int) -1;

        $i17 = (int) -1;

        specialinvoke $r33.<javax.swing.event.TableModelEvent: void <init>(javax.swing.table.TableModel,int,int,int,int)>($r27, $i11, $i13, $i15, $i17);

        virtualinvoke $r25.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper: void tableChanged(javax.swing.event.TableModelEvent)>($r33);

        return;
    }

    public boolean isAscending()
    {
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable r0;
        boolean $z0;

        r0 := @this: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable;

        $z0 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: boolean ascending>;

        return $z0;
    }

    private boolean checkFilter(int)
    {
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable r0;
        int $i0, $i1, i2, $i3, i4, $i6;
        java.lang.String $r1, $r2, $r6, $r7, $r8;
        javax.swing.table.TableModel $r3, $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable;

        i2 := @parameter0: int;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: java.lang.String filter>;

        if $r1 == null goto label4;

        $r2 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: java.lang.String filter>;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label4;

        i4 = 0;

     label1:
        $r3 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: javax.swing.table.TableModel internalModel>;

        $i1 = interfaceinvoke $r3.<javax.swing.table.TableModel: int getColumnCount()>();

        if i4 >= $i1 goto label3;

        $r4 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: javax.swing.table.TableModel internalModel>;

        $r5 = interfaceinvoke $r4.<javax.swing.table.TableModel: java.lang.Object getValueAt(int,int)>(i2, i4);

        $z0 = $r5 instanceof java.lang.String;

        if $z0 == 0 goto label2;

        $r6 = (java.lang.String) $r5;

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String toUpperCase()>();

        $r8 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: java.lang.String filter>;

        $i3 = virtualinvoke $r7.<java.lang.String: int indexOf(java.lang.String)>($r8);

        $i6 = (int) -1;

        if $i3 <= $i6 goto label2;

        return 1;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return 0;

     label4:
        return 1;
    }

    public void filter(java.lang.String)
    {
        int $i0;
        java.lang.String r1, $r2;
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable r0;
        boolean $z0, $z1;

        r0 := @this: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase()>();

        r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: java.lang.String filter> = $r2;

        $z0 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: boolean ascending>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: boolean ascending> = $z1;

        $i0 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: int sortColumn>;

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: void sort(int)>($i0);

        return;
    }

    public int getSortedColumn()
    {
        int $i0;
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable r0;

        r0 := @this: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable;

        $i0 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: int sortColumn>;

        return $i0;
    }

    public int convertRow(int)
    {
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper $r2;
        int i0, $i1;
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable r0;
        javax.swing.table.TableModel $r1;

        r0 := @this: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: javax.swing.table.TableModel getModel()>();

        $r2 = (com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper) $r1;

        $i1 = staticinvoke <com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper: int access$000(com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper,int)>($r2, i0);

        return $i1;
    }

    static javax.swing.table.TableModel access$100(com.sun.jwt.resources.editor.editors.BaseForm$EditorTable)
    {
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable r0;
        javax.swing.table.TableModel $r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: javax.swing.table.TableModel internalModel>;

        return $r1;
    }

    static java.util.List access$200(com.sun.jwt.resources.editor.editors.BaseForm$EditorTable)
    {
        java.util.List $r1;
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: java.util.List rows>;

        return $r1;
    }
}
