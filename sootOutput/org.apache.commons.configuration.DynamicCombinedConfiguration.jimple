public class org.apache.commons.configuration.DynamicCombinedConfiguration extends org.apache.commons.configuration.CombinedConfiguration
{
    private static java.lang.ThreadLocal recursive;
    private java.util.Map configs;
    private java.util.List configurations;
    private java.util.Map namedConfigurations;
    private java.lang.String keyPattern;
    private org.apache.commons.configuration.tree.NodeCombiner nodeCombiner;

    public void <init>(org.apache.commons.configuration.tree.NodeCombiner)
    {
        org.apache.commons.configuration.tree.NodeCombiner r4;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        java.util.HashMap $r1, $r3;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r4 := @parameter0: org.apache.commons.configuration.tree.NodeCombiner;

        specialinvoke r0.<org.apache.commons.configuration.CombinedConfiguration: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: java.util.Map configs> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: java.util.List configurations> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: java.util.Map namedConfigurations> = $r3;

        virtualinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: void setNodeCombiner(org.apache.commons.configuration.tree.NodeCombiner)>(r4);

        return;
    }

    public void <init>()
    {
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        java.util.HashMap $r1, $r3;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        specialinvoke r0.<org.apache.commons.configuration.CombinedConfiguration: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: java.util.Map configs> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: java.util.List configurations> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: java.util.Map namedConfigurations> = $r3;

        return;
    }

    public void setKeyPattern(java.lang.String)
    {
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: java.lang.String keyPattern> = r1;

        return;
    }

    public java.lang.String getKeyPattern()
    {
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        $r1 = r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: java.lang.String keyPattern>;

        return $r1;
    }

    public org.apache.commons.configuration.tree.NodeCombiner getNodeCombiner()
    {
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.tree.NodeCombiner $r1;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        $r1 = r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.tree.NodeCombiner nodeCombiner>;

        return $r1;
    }

    public void setNodeCombiner(org.apache.commons.configuration.tree.NodeCombiner)
    {
        org.apache.commons.configuration.DynamicCombinedConfiguration r1;
        java.lang.IllegalArgumentException $r2;
        org.apache.commons.configuration.tree.NodeCombiner r0;

        r1 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r0 := @parameter0: org.apache.commons.configuration.tree.NodeCombiner;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Node combiner must not be null!");

        throw $r2;

     label1:
        r1.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.tree.NodeCombiner nodeCombiner> = r0;

        virtualinvoke r1.<org.apache.commons.configuration.DynamicCombinedConfiguration: void invalidateAll()>();

        return;
    }

    public void addConfiguration(org.apache.commons.configuration.AbstractConfiguration, java.lang.String, java.lang.String)
    {
        java.util.List $r5;
        org.apache.commons.configuration.AbstractConfiguration r1;
        java.util.Map $r6;
        org.apache.commons.configuration.DynamicCombinedConfiguration$ConfigData $r0;
        org.apache.commons.configuration.DynamicCombinedConfiguration r4;
        java.lang.String r2, r3;

        r4 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r1 := @parameter0: org.apache.commons.configuration.AbstractConfiguration;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r0 = new org.apache.commons.configuration.DynamicCombinedConfiguration$ConfigData;

        specialinvoke $r0.<org.apache.commons.configuration.DynamicCombinedConfiguration$ConfigData: void <init>(org.apache.commons.configuration.AbstractConfiguration,java.lang.String,java.lang.String)>(r1, r2, r3);

        $r5 = r4.<org.apache.commons.configuration.DynamicCombinedConfiguration: java.util.List configurations>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r0);

        if r2 == null goto label1;

        $r6 = r4.<org.apache.commons.configuration.DynamicCombinedConfiguration: java.util.Map namedConfigurations>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1);

     label1:
        return;
    }

    public int getNumberOfConfigurations()
    {
        int $i0;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        java.util.List $r1;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        $r1 = r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: java.util.List configurations>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public org.apache.commons.configuration.Configuration getConfiguration(int)
    {
        java.util.List $r1;
        org.apache.commons.configuration.AbstractConfiguration $r4;
        int i0;
        org.apache.commons.configuration.DynamicCombinedConfiguration$ConfigData r3;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: java.util.List configurations>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        r3 = (org.apache.commons.configuration.DynamicCombinedConfiguration$ConfigData) $r2;

        $r4 = virtualinvoke r3.<org.apache.commons.configuration.DynamicCombinedConfiguration$ConfigData: org.apache.commons.configuration.AbstractConfiguration getConfiguration()>();

        return $r4;
    }

    public org.apache.commons.configuration.Configuration getConfiguration(java.lang.String)
    {
        org.apache.commons.configuration.Configuration $r4;
        java.util.Map $r2;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: java.util.Map namedConfigurations>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.apache.commons.configuration.Configuration) $r3;

        return $r4;
    }

    public java.util.Set getConfigurationNames()
    {
        java.util.Set $r2;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        java.util.Map $r1;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        $r1 = r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: java.util.Map namedConfigurations>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        return $r2;
    }

    public org.apache.commons.configuration.Configuration removeConfiguration(java.lang.String)
    {
        org.apache.commons.configuration.Configuration $r2;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.Configuration getConfiguration(java.lang.String)>(r1);

        if $r2 == null goto label1;

        virtualinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: boolean removeConfiguration(org.apache.commons.configuration.Configuration)>($r2);

     label1:
        return $r2;
    }

    public boolean removeConfiguration(org.apache.commons.configuration.Configuration)
    {
        org.apache.commons.configuration.Configuration r1;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        java.util.List $r2;
        org.apache.commons.configuration.AbstractConfiguration $r5;
        int $i0, i1;
        org.apache.commons.configuration.DynamicCombinedConfiguration$ConfigData $r4;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r1 := @parameter0: org.apache.commons.configuration.Configuration;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: int getNumberOfConfigurations()>();

        if i1 >= $i0 goto label3;

        $r2 = r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: java.util.List configurations>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        $r4 = (org.apache.commons.configuration.DynamicCombinedConfiguration$ConfigData) $r3;

        $r5 = virtualinvoke $r4.<org.apache.commons.configuration.DynamicCombinedConfiguration$ConfigData: org.apache.commons.configuration.AbstractConfiguration getConfiguration()>();

        if $r5 != r1 goto label2;

        virtualinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.Configuration removeConfigurationAt(int)>(i1);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $z0 = specialinvoke r0.<org.apache.commons.configuration.CombinedConfiguration: boolean removeConfiguration(org.apache.commons.configuration.Configuration)>(r1);

        return $z0;
    }

    public org.apache.commons.configuration.Configuration removeConfigurationAt(int)
    {
        org.apache.commons.configuration.Configuration $r5;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        java.util.List $r1;
        java.util.Map $r6;
        int i0;
        org.apache.commons.configuration.DynamicCombinedConfiguration$ConfigData r3;
        java.lang.Object $r2;
        java.lang.String $r4, $r7;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: java.util.List configurations>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>(i0);

        r3 = (org.apache.commons.configuration.DynamicCombinedConfiguration$ConfigData) $r2;

        $r4 = virtualinvoke r3.<org.apache.commons.configuration.DynamicCombinedConfiguration$ConfigData: java.lang.String getName()>();

        if $r4 == null goto label1;

        $r6 = r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: java.util.Map namedConfigurations>;

        $r7 = virtualinvoke r3.<org.apache.commons.configuration.DynamicCombinedConfiguration$ConfigData: java.lang.String getName()>();

        interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r7);

     label1:
        $r5 = specialinvoke r0.<org.apache.commons.configuration.CombinedConfiguration: org.apache.commons.configuration.Configuration removeConfigurationAt(int)>(i0);

        return $r5;
    }

    public org.apache.commons.configuration.tree.ConfigurationNode getRootNode()
    {
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        org.apache.commons.configuration.tree.ConfigurationNode $r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $r2 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>();

        return $r2;
    }

    public void setRootNode(org.apache.commons.configuration.tree.ConfigurationNode)
    {
        java.util.Map $r1;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r3;
        org.apache.commons.configuration.tree.ConfigurationNode r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: org.apache.commons.configuration.tree.ConfigurationNode;

        $r1 = r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: java.util.Map configs>;

        if $r1 == null goto label1;

        $r3 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        virtualinvoke $r3.<org.apache.commons.configuration.CombinedConfiguration: void setRootNode(org.apache.commons.configuration.tree.ConfigurationNode)>(r2);

        goto label2;

     label1:
        specialinvoke r0.<org.apache.commons.configuration.CombinedConfiguration: void setRootNode(org.apache.commons.configuration.tree.ConfigurationNode)>(r2);

     label2:
        return;
    }

    public void addProperty(java.lang.String, java.lang.Object)
    {
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        java.lang.Object r3;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: void addProperty(java.lang.String,java.lang.Object)>(r2, r3);

        return;
    }

    public void clear()
    {
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r2;
        java.util.Map $r1;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        $r1 = r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: java.util.Map configs>;

        if $r1 == null goto label1;

        $r2 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        virtualinvoke $r2.<org.apache.commons.configuration.CombinedConfiguration: void clear()>();

     label1:
        return;
    }

    public void clearProperty(java.lang.String)
    {
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: void clearProperty(java.lang.String)>(r2);

        return;
    }

    public boolean containsKey(java.lang.String)
    {
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $z0 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: boolean containsKey(java.lang.String)>(r2);

        return $z0;
    }

    public java.math.BigDecimal getBigDecimal(java.lang.String, java.math.BigDecimal)
    {
        java.math.BigDecimal r3, $r4;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.math.BigDecimal;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $r4 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: java.math.BigDecimal getBigDecimal(java.lang.String,java.math.BigDecimal)>(r2, r3);

        return $r4;
    }

    public java.math.BigDecimal getBigDecimal(java.lang.String)
    {
        java.math.BigDecimal $r3;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $r3 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: java.math.BigDecimal getBigDecimal(java.lang.String)>(r2);

        return $r3;
    }

    public java.math.BigInteger getBigInteger(java.lang.String, java.math.BigInteger)
    {
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        java.math.BigInteger r3, $r4;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.math.BigInteger;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $r4 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: java.math.BigInteger getBigInteger(java.lang.String,java.math.BigInteger)>(r2, r3);

        return $r4;
    }

    public java.math.BigInteger getBigInteger(java.lang.String)
    {
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        java.math.BigInteger $r3;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $r3 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: java.math.BigInteger getBigInteger(java.lang.String)>(r2);

        return $r3;
    }

    public boolean getBoolean(java.lang.String, boolean)
    {
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;
        boolean z0, $z1;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $z1 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: boolean getBoolean(java.lang.String,boolean)>(r2, z0);

        return $z1;
    }

    public java.lang.Boolean getBoolean(java.lang.String, java.lang.Boolean)
    {
        java.lang.Boolean r3, $r4;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Boolean;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $r4 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: java.lang.Boolean getBoolean(java.lang.String,java.lang.Boolean)>(r2, r3);

        return $r4;
    }

    public boolean getBoolean(java.lang.String)
    {
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $z0 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: boolean getBoolean(java.lang.String)>(r2);

        return $z0;
    }

    public byte getByte(java.lang.String, byte)
    {
        byte b0, $b1;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        b0 := @parameter1: byte;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $b1 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: byte getByte(java.lang.String,byte)>(r2, b0);

        return $b1;
    }

    public java.lang.Byte getByte(java.lang.String, java.lang.Byte)
    {
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;
        java.lang.Byte r3, $r4;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Byte;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $r4 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: java.lang.Byte getByte(java.lang.String,java.lang.Byte)>(r2, r3);

        return $r4;
    }

    public byte getByte(java.lang.String)
    {
        byte $b0;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $b0 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: byte getByte(java.lang.String)>(r2);

        return $b0;
    }

    public double getDouble(java.lang.String, double)
    {
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;
        double d0, $d1;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $d1 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: double getDouble(java.lang.String,double)>(r2, d0);

        return $d1;
    }

    public java.lang.Double getDouble(java.lang.String, java.lang.Double)
    {
        java.lang.Double r3, $r4;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Double;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $r4 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: java.lang.Double getDouble(java.lang.String,java.lang.Double)>(r2, r3);

        return $r4;
    }

    public double getDouble(java.lang.String)
    {
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;
        double $d0;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $d0 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: double getDouble(java.lang.String)>(r2);

        return $d0;
    }

    public float getFloat(java.lang.String, float)
    {
        float f0, $f1;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $f1 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: float getFloat(java.lang.String,float)>(r2, f0);

        return $f1;
    }

    public java.lang.Float getFloat(java.lang.String, java.lang.Float)
    {
        java.lang.Float r3, $r4;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Float;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $r4 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: java.lang.Float getFloat(java.lang.String,java.lang.Float)>(r2, r3);

        return $r4;
    }

    public float getFloat(java.lang.String)
    {
        float $f0;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $f0 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: float getFloat(java.lang.String)>(r2);

        return $f0;
    }

    public int getInt(java.lang.String, int)
    {
        int i0, $i1;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $i1 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: int getInt(java.lang.String,int)>(r2, i0);

        return $i1;
    }

    public int getInt(java.lang.String)
    {
        int $i0;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $i0 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: int getInt(java.lang.String)>(r2);

        return $i0;
    }

    public java.lang.Integer getInteger(java.lang.String, java.lang.Integer)
    {
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;
        java.lang.Integer r3, $r4;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Integer;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $r4 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(r2, r3);

        return $r4;
    }

    public java.util.Iterator getKeys()
    {
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.util.Iterator $r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $r2 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: java.util.Iterator getKeys()>();

        return $r2;
    }

    public java.util.Iterator getKeys(java.lang.String)
    {
        java.util.Iterator $r3;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $r3 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: java.util.Iterator getKeys(java.lang.String)>(r2);

        return $r3;
    }

    public java.util.List getList(java.lang.String, java.util.List)
    {
        java.util.List r3, $r4;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.List;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $r4 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: java.util.List getList(java.lang.String,java.util.List)>(r2, r3);

        return $r4;
    }

    public java.util.List getList(java.lang.String)
    {
        java.util.List $r3;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $r3 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: java.util.List getList(java.lang.String)>(r2);

        return $r3;
    }

    public long getLong(java.lang.String, long)
    {
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        long l0, $l1;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $l1 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: long getLong(java.lang.String,long)>(r2, l0);

        return $l1;
    }

    public java.lang.Long getLong(java.lang.String, java.lang.Long)
    {
        java.lang.Long r3, $r4;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Long;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $r4 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: java.lang.Long getLong(java.lang.String,java.lang.Long)>(r2, r3);

        return $r4;
    }

    public long getLong(java.lang.String)
    {
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        long $l0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $l0 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: long getLong(java.lang.String)>(r2);

        return $l0;
    }

    public java.util.Properties getProperties(java.lang.String)
    {
        java.util.Properties $r3;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $r3 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: java.util.Properties getProperties(java.lang.String)>(r2);

        return $r3;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        java.lang.Object $r3;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $r3 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: java.lang.Object getProperty(java.lang.String)>(r2);

        return $r3;
    }

    public short getShort(java.lang.String, short)
    {
        short s0, $s1;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        s0 := @parameter1: short;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $s1 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: short getShort(java.lang.String,short)>(r2, s0);

        return $s1;
    }

    public java.lang.Short getShort(java.lang.String, java.lang.Short)
    {
        java.lang.Short r3, $r4;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Short;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $r4 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: java.lang.Short getShort(java.lang.String,java.lang.Short)>(r2, r3);

        return $r4;
    }

    public short getShort(java.lang.String)
    {
        short $s0;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $s0 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: short getShort(java.lang.String)>(r2);

        return $s0;
    }

    public java.lang.String getString(java.lang.String, java.lang.String)
    {
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2, r3, $r4;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $r4 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: java.lang.String getString(java.lang.String,java.lang.String)>(r2, r3);

        return $r4;
    }

    public java.lang.String getString(java.lang.String)
    {
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2, $r3;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $r3 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: java.lang.String getString(java.lang.String)>(r2);

        return $r3;
    }

    public java.lang.String[] getStringArray(java.lang.String)
    {
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        java.lang.String[] $r3;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $r3 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: java.lang.String[] getStringArray(java.lang.String)>(r2);

        return $r3;
    }

    public boolean isEmpty()
    {
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $z0 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: boolean isEmpty()>();

        return $z0;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        java.util.Map $r1;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        java.lang.Object r4;
        org.apache.commons.configuration.CombinedConfiguration $r2;
        java.lang.String r3;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Object;

        $r1 = r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: java.util.Map configs>;

        if $r1 == null goto label1;

        $r2 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        virtualinvoke $r2.<org.apache.commons.configuration.CombinedConfiguration: void setProperty(java.lang.String,java.lang.Object)>(r3, r4);

     label1:
        return;
    }

    public org.apache.commons.configuration.Configuration subset(java.lang.String)
    {
        org.apache.commons.configuration.Configuration $r3;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $r3 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: org.apache.commons.configuration.Configuration subset(java.lang.String)>(r2);

        return $r3;
    }

    public org.apache.commons.configuration.HierarchicalConfiguration$Node getRoot()
    {
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        org.apache.commons.configuration.HierarchicalConfiguration$Node $r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $r2 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: org.apache.commons.configuration.HierarchicalConfiguration$Node getRoot()>();

        return $r2;
    }

    public void setRoot(org.apache.commons.configuration.HierarchicalConfiguration$Node)
    {
        java.util.Map $r1;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.HierarchicalConfiguration$Node r2;
        org.apache.commons.configuration.CombinedConfiguration $r3;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: org.apache.commons.configuration.HierarchicalConfiguration$Node;

        $r1 = r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: java.util.Map configs>;

        if $r1 == null goto label1;

        $r3 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        virtualinvoke $r3.<org.apache.commons.configuration.CombinedConfiguration: void setRoot(org.apache.commons.configuration.HierarchicalConfiguration$Node)>(r2);

        goto label2;

     label1:
        specialinvoke r0.<org.apache.commons.configuration.CombinedConfiguration: void setRoot(org.apache.commons.configuration.HierarchicalConfiguration$Node)>(r2);

     label2:
        return;
    }

    public org.apache.commons.configuration.tree.ExpressionEngine getExpressionEngine()
    {
        org.apache.commons.configuration.tree.ExpressionEngine $r1;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.CombinedConfiguration: org.apache.commons.configuration.tree.ExpressionEngine getExpressionEngine()>();

        return $r1;
    }

    public void setExpressionEngine(org.apache.commons.configuration.tree.ExpressionEngine)
    {
        org.apache.commons.configuration.tree.ExpressionEngine r1;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r1 := @parameter0: org.apache.commons.configuration.tree.ExpressionEngine;

        specialinvoke r0.<org.apache.commons.configuration.CombinedConfiguration: void setExpressionEngine(org.apache.commons.configuration.tree.ExpressionEngine)>(r1);

        return;
    }

    public void addNodes(java.lang.String, java.util.Collection)
    {
        java.util.Collection r3;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.Collection;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: void addNodes(java.lang.String,java.util.Collection)>(r2, r3);

        return;
    }

    public org.apache.commons.configuration.SubnodeConfiguration configurationAt(java.lang.String, boolean)
    {
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;
        boolean z0;
        org.apache.commons.configuration.SubnodeConfiguration $r3;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $r3 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: org.apache.commons.configuration.SubnodeConfiguration configurationAt(java.lang.String,boolean)>(r2, z0);

        return $r3;
    }

    public org.apache.commons.configuration.SubnodeConfiguration configurationAt(java.lang.String)
    {
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;
        org.apache.commons.configuration.SubnodeConfiguration $r3;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $r3 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: org.apache.commons.configuration.SubnodeConfiguration configurationAt(java.lang.String)>(r2);

        return $r3;
    }

    public java.util.List configurationsAt(java.lang.String)
    {
        java.util.List $r3;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $r3 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: java.util.List configurationsAt(java.lang.String)>(r2);

        return $r3;
    }

    public void clearTree(java.lang.String)
    {
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: void clearTree(java.lang.String)>(r2);

        return;
    }

    public int getMaxIndex(java.lang.String)
    {
        int $i0;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;
        java.lang.String r2;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r2 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $i0 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: int getMaxIndex(java.lang.String)>(r2);

        return $i0;
    }

    public org.apache.commons.configuration.Configuration interpolatedConfiguration()
    {
        org.apache.commons.configuration.Configuration $r2;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $r2 = virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: org.apache.commons.configuration.Configuration interpolatedConfiguration()>();

        return $r2;
    }

    public org.apache.commons.configuration.Configuration getSource(java.lang.String)
    {
        org.apache.commons.configuration.Configuration $r3;
        org.apache.commons.configuration.DynamicCombinedConfiguration r1;
        java.lang.String r0;
        org.apache.commons.configuration.CombinedConfiguration $r2;
        java.lang.IllegalArgumentException $r4;

        r1 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Key must not be null!");

        throw $r4;

     label1:
        $r2 = specialinvoke r1.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        $r3 = virtualinvoke $r2.<org.apache.commons.configuration.CombinedConfiguration: org.apache.commons.configuration.Configuration getSource(java.lang.String)>(r0);

        return $r3;
    }

    public void addConfigurationListener(org.apache.commons.configuration.event.ConfigurationListener)
    {
        java.util.Iterator $r4;
        java.util.Collection $r3;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.event.ConfigurationListener r1;
        java.util.Map $r2;
        java.lang.Object $r5;
        org.apache.commons.configuration.CombinedConfiguration r6;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r1 := @parameter0: org.apache.commons.configuration.event.ConfigurationListener;

        specialinvoke r0.<org.apache.commons.configuration.CombinedConfiguration: void addConfigurationListener(org.apache.commons.configuration.event.ConfigurationListener)>(r1);

        $r2 = r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: java.util.Map configs>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.commons.configuration.CombinedConfiguration) $r5;

        virtualinvoke r6.<org.apache.commons.configuration.CombinedConfiguration: void addConfigurationListener(org.apache.commons.configuration.event.ConfigurationListener)>(r1);

        goto label1;

     label2:
        return;
    }

    public boolean removeConfigurationListener(org.apache.commons.configuration.event.ConfigurationListener)
    {
        java.util.Iterator $r3;
        java.util.Collection $r2;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.event.ConfigurationListener r4;
        java.util.Map $r1;
        java.lang.Object $r5;
        org.apache.commons.configuration.CombinedConfiguration r6;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r4 := @parameter0: org.apache.commons.configuration.event.ConfigurationListener;

        $r1 = r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: java.util.Map configs>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.commons.configuration.CombinedConfiguration) $r5;

        virtualinvoke r6.<org.apache.commons.configuration.CombinedConfiguration: boolean removeConfigurationListener(org.apache.commons.configuration.event.ConfigurationListener)>(r4);

        goto label1;

     label2:
        $z1 = specialinvoke r0.<org.apache.commons.configuration.CombinedConfiguration: boolean removeConfigurationListener(org.apache.commons.configuration.event.ConfigurationListener)>(r4);

        return $z1;
    }

    public java.util.Collection getConfigurationListeners()
    {
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        java.util.Collection $r1;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.CombinedConfiguration: java.util.Collection getConfigurationListeners()>();

        return $r1;
    }

    public void clearConfigurationListeners()
    {
        java.util.Iterator $r3;
        java.util.Map $r1;
        java.util.Collection $r2;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        java.lang.Object $r4;
        org.apache.commons.configuration.CombinedConfiguration r5;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        $r1 = r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: java.util.Map configs>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.commons.configuration.CombinedConfiguration) $r4;

        virtualinvoke r5.<org.apache.commons.configuration.CombinedConfiguration: void clearConfigurationListeners()>();

        goto label1;

     label2:
        specialinvoke r0.<org.apache.commons.configuration.CombinedConfiguration: void clearConfigurationListeners()>();

        return;
    }

    public void addErrorListener(org.apache.commons.configuration.event.ConfigurationErrorListener)
    {
        java.util.Iterator $r3;
        java.util.Collection $r2;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.event.ConfigurationErrorListener r4;
        java.util.Map $r1;
        java.lang.Object $r5;
        org.apache.commons.configuration.CombinedConfiguration r6;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r4 := @parameter0: org.apache.commons.configuration.event.ConfigurationErrorListener;

        $r1 = r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: java.util.Map configs>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.commons.configuration.CombinedConfiguration) $r5;

        virtualinvoke r6.<org.apache.commons.configuration.CombinedConfiguration: void addErrorListener(org.apache.commons.configuration.event.ConfigurationErrorListener)>(r4);

        goto label1;

     label2:
        specialinvoke r0.<org.apache.commons.configuration.CombinedConfiguration: void addErrorListener(org.apache.commons.configuration.event.ConfigurationErrorListener)>(r4);

        return;
    }

    public boolean removeErrorListener(org.apache.commons.configuration.event.ConfigurationErrorListener)
    {
        java.util.Iterator $r3;
        java.util.Collection $r2;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.event.ConfigurationErrorListener r4;
        java.util.Map $r1;
        java.lang.Object $r5;
        org.apache.commons.configuration.CombinedConfiguration r6;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r4 := @parameter0: org.apache.commons.configuration.event.ConfigurationErrorListener;

        $r1 = r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: java.util.Map configs>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.commons.configuration.CombinedConfiguration) $r5;

        virtualinvoke r6.<org.apache.commons.configuration.CombinedConfiguration: boolean removeErrorListener(org.apache.commons.configuration.event.ConfigurationErrorListener)>(r4);

        goto label1;

     label2:
        $z1 = specialinvoke r0.<org.apache.commons.configuration.CombinedConfiguration: boolean removeErrorListener(org.apache.commons.configuration.event.ConfigurationErrorListener)>(r4);

        return $z1;
    }

    public void clearErrorListeners()
    {
        java.util.Iterator $r3;
        java.util.Map $r1;
        java.util.Collection $r2;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        java.lang.Object $r4;
        org.apache.commons.configuration.CombinedConfiguration r5;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        $r1 = r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: java.util.Map configs>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.commons.configuration.CombinedConfiguration) $r4;

        virtualinvoke r5.<org.apache.commons.configuration.CombinedConfiguration: void clearErrorListeners()>();

        goto label1;

     label2:
        specialinvoke r0.<org.apache.commons.configuration.CombinedConfiguration: void clearErrorListeners()>();

        return;
    }

    public java.util.Collection getErrorListeners()
    {
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        java.util.Collection $r1;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.CombinedConfiguration: java.util.Collection getErrorListeners()>();

        return $r1;
    }

    public java.lang.Object clone()
    {
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.CombinedConfiguration: java.lang.Object clone()>();

        return $r1;
    }

    public void invalidate()
    {
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        org.apache.commons.configuration.CombinedConfiguration $r1;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()>();

        virtualinvoke $r1.<org.apache.commons.configuration.CombinedConfiguration: void invalidate()>();

        return;
    }

    public void invalidateAll()
    {
        java.util.Iterator $r4;
        java.util.Collection $r3;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        java.util.Map $r1, $r2;
        java.lang.Object $r5;
        org.apache.commons.configuration.CombinedConfiguration r6;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        $r1 = r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: java.util.Map configs>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: java.util.Map configs>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.commons.configuration.CombinedConfiguration) $r5;

        virtualinvoke r6.<org.apache.commons.configuration.CombinedConfiguration: void invalidate()>();

        goto label2;

     label3:
        return;
    }

    protected java.lang.Object resolveContainerStore(java.lang.String)
    {
        java.lang.Throwable $r10;
        java.lang.ThreadLocal $r0, $r4, $r9, $r12;
        org.apache.commons.configuration.DynamicCombinedConfiguration r5;
        java.lang.Boolean $r2, $r3, $r8, $r11;
        java.lang.Object $r1, $r7;
        java.lang.String r6;
        boolean $z0;

        r5 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        r6 := @parameter0: java.lang.String;

        $r0 = <org.apache.commons.configuration.DynamicCombinedConfiguration: java.lang.ThreadLocal recursive>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r2 = (java.lang.Boolean) $r1;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r4 = <org.apache.commons.configuration.DynamicCombinedConfiguration: java.lang.ThreadLocal recursive>;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r4.<java.lang.ThreadLocal: void set(java.lang.Object)>($r3);

     label2:
        $r7 = specialinvoke r5.<org.apache.commons.configuration.CombinedConfiguration: java.lang.Object resolveContainerStore(java.lang.String)>(r6);

     label3:
        $r9 = <org.apache.commons.configuration.DynamicCombinedConfiguration: java.lang.ThreadLocal recursive>;

        $r8 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r9.<java.lang.ThreadLocal: void set(java.lang.Object)>($r8);

        return $r7;

     label4:
        $r10 := @caughtexception;

     label5:
        $r12 = <org.apache.commons.configuration.DynamicCombinedConfiguration: java.lang.ThreadLocal recursive>;

        $r11 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r12.<java.lang.ThreadLocal: void set(java.lang.Object)>($r11);

        throw $r10;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private org.apache.commons.configuration.CombinedConfiguration getCurrentConfig()
    {
        org.apache.commons.configuration.tree.NodeCombiner $r4, $r8;
        org.apache.commons.configuration.AbstractConfiguration $r18;
        org.apache.commons.configuration.event.ConfigurationListener r26;
        java.util.Map $r5, $r16;
        boolean $z0, $z1, $z2, $z3;
        org.apache.commons.configuration.tree.ExpressionEngine $r9;
        java.util.Collection $r10, $r12;
        java.util.List $r14;
        org.apache.commons.configuration.event.ConfigurationErrorListener r25;
        org.apache.commons.lang.text.StrSubstitutor $r1;
        org.apache.commons.configuration.DynamicCombinedConfiguration$ConfigData r27;
        java.lang.Throwable $r23;
        java.lang.String $r2, $r3, $r19, $r20;
        java.util.Iterator $r11, $r13, $r15;
        org.apache.commons.configuration.DynamicCombinedConfiguration r0;
        java.lang.Object $r6, $r17, $r21, $r22;
        org.apache.commons.configuration.CombinedConfiguration $r7, r24;

        r0 := @this: org.apache.commons.configuration.DynamicCombinedConfiguration;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.lang.text.StrSubstitutor getSubstitutor()>();

        $r2 = r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: java.lang.String keyPattern>;

        $r3 = virtualinvoke $r1.<org.apache.commons.lang.text.StrSubstitutor: java.lang.String replace(java.lang.String)>($r2);

        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.tree.NodeCombiner getNodeCombiner()>();

        entermonitor $r4;

     label01:
        $r5 = r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: java.util.Map configs>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r24 = (org.apache.commons.configuration.CombinedConfiguration) $r6;

        if r24 != null goto label08;

        $r7 = new org.apache.commons.configuration.CombinedConfiguration;

        $r8 = virtualinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.tree.NodeCombiner getNodeCombiner()>();

        specialinvoke $r7.<org.apache.commons.configuration.CombinedConfiguration: void <init>(org.apache.commons.configuration.tree.NodeCombiner)>($r8);

        r24 = $r7;

        $r9 = virtualinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: org.apache.commons.configuration.tree.ExpressionEngine getExpressionEngine()>();

        virtualinvoke $r7.<org.apache.commons.configuration.CombinedConfiguration: void setExpressionEngine(org.apache.commons.configuration.tree.ExpressionEngine)>($r9);

        $r10 = virtualinvoke $r7.<org.apache.commons.configuration.CombinedConfiguration: java.util.Collection getErrorListeners()>();

        $r11 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r22 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r25 = (org.apache.commons.configuration.event.ConfigurationErrorListener) $r22;

        virtualinvoke $r7.<org.apache.commons.configuration.CombinedConfiguration: void addErrorListener(org.apache.commons.configuration.event.ConfigurationErrorListener)>(r25);

        goto label02;

     label03:
        $r12 = virtualinvoke $r7.<org.apache.commons.configuration.CombinedConfiguration: java.util.Collection getConfigurationListeners()>();

        $r13 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label05;

        $r21 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r26 = (org.apache.commons.configuration.event.ConfigurationListener) $r21;

        virtualinvoke $r7.<org.apache.commons.configuration.CombinedConfiguration: void addConfigurationListener(org.apache.commons.configuration.event.ConfigurationListener)>(r26);

        goto label04;

     label05:
        $z2 = virtualinvoke r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: boolean isForceReloadCheck()>();

        virtualinvoke $r7.<org.apache.commons.configuration.CombinedConfiguration: void setForceReloadCheck(boolean)>($z2);

        $r14 = r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: java.util.List configurations>;

        $r15 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z3 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label07;

        $r17 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r27 = (org.apache.commons.configuration.DynamicCombinedConfiguration$ConfigData) $r17;

        $r18 = virtualinvoke r27.<org.apache.commons.configuration.DynamicCombinedConfiguration$ConfigData: org.apache.commons.configuration.AbstractConfiguration getConfiguration()>();

        $r19 = virtualinvoke r27.<org.apache.commons.configuration.DynamicCombinedConfiguration$ConfigData: java.lang.String getName()>();

        $r20 = virtualinvoke r27.<org.apache.commons.configuration.DynamicCombinedConfiguration$ConfigData: java.lang.String getAt()>();

        virtualinvoke $r7.<org.apache.commons.configuration.CombinedConfiguration: void addConfiguration(org.apache.commons.configuration.AbstractConfiguration,java.lang.String,java.lang.String)>($r18, $r19, $r20);

        goto label06;

     label07:
        $r16 = r0.<org.apache.commons.configuration.DynamicCombinedConfiguration: java.util.Map configs>;

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r7);

     label08:
        exitmonitor $r4;

     label09:
        goto label12;

     label10:
        $r23 := @caughtexception;

        exitmonitor $r4;

     label11:
        throw $r23;

     label12:
        return r24;

        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    static void <clinit>()
    {
        org.apache.commons.configuration.DynamicCombinedConfiguration$1 $r0;

        $r0 = new org.apache.commons.configuration.DynamicCombinedConfiguration$1;

        specialinvoke $r0.<org.apache.commons.configuration.DynamicCombinedConfiguration$1: void <init>()>();

        <org.apache.commons.configuration.DynamicCombinedConfiguration: java.lang.ThreadLocal recursive> = $r0;

        return;
    }
}
