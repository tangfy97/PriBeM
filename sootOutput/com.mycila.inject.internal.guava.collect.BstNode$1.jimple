class com.mycila.inject.internal.guava.collect.BstNode$1 extends java.lang.Object
{
    static final int[] $SwitchMap$com$google$common$collect$BstSide;

    static void <clinit>()
    {
        com.mycila.inject.internal.guava.collect.BstSide[] $r0;
        java.lang.NoSuchFieldError $r6, $r7;
        int[] $r1, $r3, $r5;
        com.mycila.inject.internal.guava.collect.BstSide $r2, $r4;
        int $i0, $i1, $i2;

        $r0 = staticinvoke <com.mycila.inject.internal.guava.collect.BstSide: com.mycila.inject.internal.guava.collect.BstSide[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <com.mycila.inject.internal.guava.collect.BstNode$1: int[] $SwitchMap$com$google$common$collect$BstSide> = $r1;

     label1:
        $r3 = <com.mycila.inject.internal.guava.collect.BstNode$1: int[] $SwitchMap$com$google$common$collect$BstSide>;

        $r2 = <com.mycila.inject.internal.guava.collect.BstSide: com.mycila.inject.internal.guava.collect.BstSide LEFT>;

        $i1 = virtualinvoke $r2.<com.mycila.inject.internal.guava.collect.BstSide: int ordinal()>();

        $r3[$i1] = 1;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

     label4:
        $r5 = <com.mycila.inject.internal.guava.collect.BstNode$1: int[] $SwitchMap$com$google$common$collect$BstSide>;

        $r4 = <com.mycila.inject.internal.guava.collect.BstSide: com.mycila.inject.internal.guava.collect.BstSide RIGHT>;

        $i2 = virtualinvoke $r4.<com.mycila.inject.internal.guava.collect.BstSide: int ordinal()>();

        $r5[$i2] = 2;

     label5:
        goto label7;

     label6:
        $r6 := @caughtexception;

     label7:
        return;

        catch java.lang.NoSuchFieldError from label1 to label2 with label3;
        catch java.lang.NoSuchFieldError from label4 to label5 with label6;
    }
}
