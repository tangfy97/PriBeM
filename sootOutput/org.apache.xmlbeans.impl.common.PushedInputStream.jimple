public abstract class org.apache.xmlbeans.impl.common.PushedInputStream extends java.io.InputStream
{
    private static int defaultBufferSize;
    protected byte[] buf;
    protected int writepos;
    protected int readpos;
    protected int markpos;
    protected int marklimit;
    protected java.io.OutputStream outputStream;

    protected abstract void fill(int) throws java.io.IOException;

    public final java.io.OutputStream getOutputStream()
    {
        java.io.OutputStream $r1;
        org.apache.xmlbeans.impl.common.PushedInputStream r0;

        r0 := @this: org.apache.xmlbeans.impl.common.PushedInputStream;

        $r1 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: java.io.OutputStream outputStream>;

        return $r1;
    }

    public void <init>()
    {
        int $i0;
        org.apache.xmlbeans.impl.common.PushedInputStream r0;

        r0 := @this: org.apache.xmlbeans.impl.common.PushedInputStream;

        $i0 = <org.apache.xmlbeans.impl.common.PushedInputStream: int defaultBufferSize>;

        specialinvoke r0.<org.apache.xmlbeans.impl.common.PushedInputStream: void <init>(int)>($i0);

        return;
    }

    public void <init>(int)
    {
        byte[] $r2;
        org.apache.xmlbeans.impl.common.PushedInputStream r0;
        org.apache.xmlbeans.impl.common.PushedInputStream$InternalOutputStream $r4;
        int i0, $i2;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: org.apache.xmlbeans.impl.common.PushedInputStream;

        i0 := @parameter0: int;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        $i2 = (int) -1;

        r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int markpos> = $i2;

        $r4 = new org.apache.xmlbeans.impl.common.PushedInputStream$InternalOutputStream;

        specialinvoke $r4.<org.apache.xmlbeans.impl.common.PushedInputStream$InternalOutputStream: void <init>(org.apache.xmlbeans.impl.common.PushedInputStream,org.apache.xmlbeans.impl.common.PushedInputStream$1)>(r0, null);

        r0.<org.apache.xmlbeans.impl.common.PushedInputStream: java.io.OutputStream outputStream> = $r4;

        if i0 >= 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Negative initial buffer size");

        throw $r5;

     label1:
        $r2 = newarray (byte)[i0];

        r0.<org.apache.xmlbeans.impl.common.PushedInputStream: byte[] buf> = $r2;

        return;
    }

    private void shift(int)
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6;
        org.apache.xmlbeans.impl.common.PushedInputStream r0;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, $i16, $i17, $i18, $i19, $i20, $i21, $i23;

        r0 := @this: org.apache.xmlbeans.impl.common.PushedInputStream;

        i1 := @parameter0: int;

        i15 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int readpos>;

        $i0 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int markpos>;

        if $i0 <= 0 goto label2;

        $i12 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int readpos>;

        $i11 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int markpos>;

        $i14 = $i12 - $i11;

        $i13 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int marklimit>;

        if $i14 <= $i13 goto label1;

        $i23 = (int) -1;

        r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int markpos> = $i23;

        goto label2;

     label1:
        i15 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int markpos>;

     label2:
        $i16 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int writepos>;

        $i17 = $i16 - i15;

        if i15 <= 0 goto label3;

        $r1 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: byte[] buf>;

        $i9 = lengthof $r1;

        $i10 = $i9 - $i17;

        if $i10 < i1 goto label3;

        if $i17 > i1 goto label3;

        $r3 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: byte[] buf>;

        $r2 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: byte[] buf>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, i15, $r2, 0, $i17);

        goto label4;

     label3:
        $i18 = $i17 + i1;

        $r4 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: byte[] buf>;

        $i19 = lengthof $r4;

        $i20 = $i19 << 1;

        $i21 = staticinvoke <java.lang.Math: int max(int,int)>($i20, $i18);

        $r5 = newarray (byte)[$i21];

        $r6 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: byte[] buf>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, i15, $r5, 0, $i17);

        r0.<org.apache.xmlbeans.impl.common.PushedInputStream: byte[] buf> = $r5;

     label4:
        if i15 <= 0 goto label6;

        $i2 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int readpos>;

        $i3 = $i2 - i15;

        r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int readpos> = $i3;

        $i4 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int markpos>;

        if $i4 <= 0 goto label5;

        $i7 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int markpos>;

        $i8 = $i7 - i15;

        r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int markpos> = $i8;

     label5:
        $i5 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int writepos>;

        $i6 = $i5 - i15;

        r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int writepos> = $i6;

     label6:
        return;
    }

    public synchronized int read() throws java.io.IOException
    {
        byte[] $r1;
        org.apache.xmlbeans.impl.common.PushedInputStream r0;
        short $s5, $s10;
        byte $b4;
        int $i0, $i1, $i2, $i3, $i6, $i7, $i9, $i11;

        r0 := @this: org.apache.xmlbeans.impl.common.PushedInputStream;

        $i1 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int readpos>;

        $i0 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int writepos>;

        if $i1 < $i0 goto label1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.common.PushedInputStream: void fill(int)>(1);

        $i7 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int readpos>;

        $i6 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int writepos>;

        if $i7 < $i6 goto label1;

        $i9 = (int) -1;

        return $i9;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: byte[] buf>;

        $i2 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int readpos>;

        $i3 = $i2 + 1;

        r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int readpos> = $i3;

        $b4 = $r1[$i2];

        $s10 = (short) $b4;

        $s5 = $s10 & 255;

        $i11 = (int) $s5;

        return $i11;
    }

    public synchronized int read(byte[], int, int) throws java.io.IOException
    {
        byte[] r1, $r2;
        org.apache.xmlbeans.impl.common.PushedInputStream r0;
        int $i0, $i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i11, $i13;

        r0 := @this: org.apache.xmlbeans.impl.common.PushedInputStream;

        r1 := @parameter0: byte[];

        i3 := @parameter1: int;

        i2 := @parameter2: int;

        $i1 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int writepos>;

        $i0 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int readpos>;

        i10 = $i1 - $i0;

        if i10 >= i2 goto label1;

        $i7 = i2 - i10;

        virtualinvoke r0.<org.apache.xmlbeans.impl.common.PushedInputStream: void fill(int)>($i7);

        $i9 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int writepos>;

        $i8 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int readpos>;

        i10 = $i9 - $i8;

        if i10 > 0 goto label1;

        $i13 = (int) -1;

        return $i13;

     label1:
        if i10 >= i2 goto label2;

        $i11 = i10;

        goto label3;

     label2:
        $i11 = i2;

     label3:
        $r2 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: byte[] buf>;

        $i4 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int readpos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i4, r1, i3, $i11);

        $i5 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int readpos>;

        $i6 = $i5 + $i11;

        r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int readpos> = $i6;

        return $i11;
    }

    public synchronized long skip(long) throws java.io.IOException
    {
        org.apache.xmlbeans.impl.common.PushedInputStream r0;
        long l0, $l8, $l9, $l17, l18, l19, $l20;
        byte $b1, $b5, $b6, $b11, $b16;
        int $i2, $i3, $i4, $i7, $i10, $i12, $i13, $i14, $i15, $i21, $i22, $i23, $i24, $i25;

        r0 := @this: org.apache.xmlbeans.impl.common.PushedInputStream;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        $i21 = (int) $b1;

        if $i21 > 0 goto label1;

        return 0L;

     label1:
        $i3 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int writepos>;

        $i2 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int readpos>;

        $i4 = $i3 - $i2;

        l18 = (long) $i4;

        $b5 = l18 cmp l0;

        $i22 = (int) $b5;

        if $i22 >= 0 goto label3;

        l19 = l0 - l18;

        $b11 = l19 cmp 2147483647L;

        $i23 = (int) $b11;

        if $i23 <= 0 goto label2;

        l19 = 2147483647L;

     label2:
        $i12 = (int) l19;

        virtualinvoke r0.<org.apache.xmlbeans.impl.common.PushedInputStream: void fill(int)>($i12);

        $i14 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int writepos>;

        $i13 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int readpos>;

        $i15 = $i14 - $i13;

        $l17 = (long) $i15;

        l18 = $l17;

        $b16 = $l17 cmp 0L;

        $i24 = (int) $b16;

        if $i24 > 0 goto label3;

        return 0L;

     label3:
        $b6 = l18 cmp l0;

        $i25 = (int) $b6;

        if $i25 >= 0 goto label4;

        $l20 = l18;

        goto label5;

     label4:
        $l20 = l0;

     label5:
        $i7 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int readpos>;

        $l8 = (long) $i7;

        $l9 = $l8 + $l20;

        $i10 = (int) $l9;

        r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int readpos> = $i10;

        return $l20;
    }

    public synchronized int available()
    {
        org.apache.xmlbeans.impl.common.PushedInputStream r0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.xmlbeans.impl.common.PushedInputStream;

        $i1 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int writepos>;

        $i0 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int readpos>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    public synchronized void mark(int)
    {
        int i0, $i1;
        org.apache.xmlbeans.impl.common.PushedInputStream r0;

        r0 := @this: org.apache.xmlbeans.impl.common.PushedInputStream;

        i0 := @parameter0: int;

        r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int marklimit> = i0;

        $i1 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int readpos>;

        r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int markpos> = $i1;

        return;
    }

    public synchronized void reset() throws java.io.IOException
    {
        org.apache.xmlbeans.impl.common.PushedInputStream r0;
        int $i0, $i1;
        java.io.IOException $r1;

        r0 := @this: org.apache.xmlbeans.impl.common.PushedInputStream;

        $i0 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int markpos>;

        if $i0 >= 0 goto label1;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("Resetting to invalid mark");

        throw $r1;

     label1:
        $i1 = r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int markpos>;

        r0.<org.apache.xmlbeans.impl.common.PushedInputStream: int readpos> = $i1;

        return;
    }

    public boolean markSupported()
    {
        org.apache.xmlbeans.impl.common.PushedInputStream r0;

        r0 := @this: org.apache.xmlbeans.impl.common.PushedInputStream;

        return 1;
    }

    static void access$100(org.apache.xmlbeans.impl.common.PushedInputStream, int)
    {
        int i0;
        org.apache.xmlbeans.impl.common.PushedInputStream r0;

        r0 := @parameter0: org.apache.xmlbeans.impl.common.PushedInputStream;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.xmlbeans.impl.common.PushedInputStream: void shift(int)>(i0);

        return;
    }

    static void <clinit>()
    {
        <org.apache.xmlbeans.impl.common.PushedInputStream: int defaultBufferSize> = 2048;

        return;
    }
}
