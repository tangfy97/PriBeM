public final class org.apache.http.HttpHost extends java.lang.Object implements java.lang.Cloneable, java.io.Serializable
{
    private static final long serialVersionUID;
    public static final java.lang.String DEFAULT_SCHEME_NAME;
    protected final java.lang.String hostname;
    protected final java.lang.String lcHostname;
    protected final int port;
    protected final java.lang.String schemeName;

    public void <init>(java.lang.String, int, java.lang.String)
    {
        java.lang.IllegalArgumentException $r7;
        java.util.Locale $r2, $r5;
        int i0;
        java.lang.String r1, $r3, r4, $r6;
        org.apache.http.HttpHost r0;

        r0 := @this: org.apache.http.HttpHost;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r4 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Host name may not be null");

        throw $r7;

     label1:
        r0.<org.apache.http.HttpHost: java.lang.String hostname> = r1;

        $r2 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        r0.<org.apache.http.HttpHost: java.lang.String lcHostname> = $r3;

        if r4 == null goto label2;

        $r5 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r6 = virtualinvoke r4.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r5);

        r0.<org.apache.http.HttpHost: java.lang.String schemeName> = $r6;

        goto label3;

     label2:
        r0.<org.apache.http.HttpHost: java.lang.String schemeName> = "http";

     label3:
        r0.<org.apache.http.HttpHost: int port> = i0;

        return;
    }

    public void <init>(java.lang.String, int)
    {
        int i0;
        java.lang.String r1;
        org.apache.http.HttpHost r0;

        r0 := @this: org.apache.http.HttpHost;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.http.HttpHost: void <init>(java.lang.String,int,java.lang.String)>(r1, i0, null);

        return;
    }

    public void <init>(java.lang.String)
    {
        int $i1;
        java.lang.String r1;
        org.apache.http.HttpHost r0;

        r0 := @this: org.apache.http.HttpHost;

        r1 := @parameter0: java.lang.String;

        $i1 = (int) -1;

        specialinvoke r0.<org.apache.http.HttpHost: void <init>(java.lang.String,int,java.lang.String)>(r1, $i1, null);

        return;
    }

    public void <init>(org.apache.http.HttpHost)
    {
        int $i0;
        java.lang.String $r2, $r3;
        org.apache.http.HttpHost r0, r1;

        r0 := @this: org.apache.http.HttpHost;

        r1 := @parameter0: org.apache.http.HttpHost;

        $r3 = r1.<org.apache.http.HttpHost: java.lang.String hostname>;

        $i0 = r1.<org.apache.http.HttpHost: int port>;

        $r2 = r1.<org.apache.http.HttpHost: java.lang.String schemeName>;

        specialinvoke r0.<org.apache.http.HttpHost: void <init>(java.lang.String,int,java.lang.String)>($r3, $i0, $r2);

        return;
    }

    public java.lang.String getHostName()
    {
        java.lang.String $r1;
        org.apache.http.HttpHost r0;

        r0 := @this: org.apache.http.HttpHost;

        $r1 = r0.<org.apache.http.HttpHost: java.lang.String hostname>;

        return $r1;
    }

    public int getPort()
    {
        int $i0;
        org.apache.http.HttpHost r0;

        r0 := @this: org.apache.http.HttpHost;

        $i0 = r0.<org.apache.http.HttpHost: int port>;

        return $i0;
    }

    public java.lang.String getSchemeName()
    {
        java.lang.String $r1;
        org.apache.http.HttpHost r0;

        r0 := @this: org.apache.http.HttpHost;

        $r1 = r0.<org.apache.http.HttpHost: java.lang.String schemeName>;

        return $r1;
    }

    public java.lang.String toURI()
    {
        int $i0, $i1, $i3;
        java.lang.StringBuilder $r6;
        java.lang.String $r2, $r3, $r4, $r5;
        org.apache.http.HttpHost r1;

        r1 := @this: org.apache.http.HttpHost;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.apache.http.HttpHost: java.lang.String schemeName>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("://");

        $r3 = r1.<org.apache.http.HttpHost: java.lang.String hostname>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $i0 = r1.<org.apache.http.HttpHost: int port>;

        $i3 = (int) -1;

        if $i0 == $i3 goto label1;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $i1 = r1.<org.apache.http.HttpHost: int port>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

     label1:
        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.String toHostString()
    {
        int $i0, $i1, $i2, $i3, $i5;
        java.lang.StringBuilder $r7;
        java.lang.String $r1, $r3, $r4, $r5, $r6;
        org.apache.http.HttpHost r0;

        r0 := @this: org.apache.http.HttpHost;

        $i0 = r0.<org.apache.http.HttpHost: int port>;

        $i5 = (int) -1;

        if $i0 == $i5 goto label1;

        $r7 = new java.lang.StringBuilder;

        $r3 = r0.<org.apache.http.HttpHost: java.lang.String hostname>;

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i2 = $i1 + 6;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(int)>($i2);

        $r4 = r0.<org.apache.http.HttpHost: java.lang.String hostname>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i3 = r0.<org.apache.http.HttpHost: int port>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;

     label1:
        $r1 = r0.<org.apache.http.HttpHost: java.lang.String hostname>;

        return $r1;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        org.apache.http.HttpHost r0;

        r0 := @this: org.apache.http.HttpHost;

        $r1 = virtualinvoke r0.<org.apache.http.HttpHost: java.lang.String toURI()>();

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        int $i0, $i1;
        java.lang.Object r1;
        java.lang.String $r3, $r4, $r5, $r6;
        org.apache.http.HttpHost r0, r2;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.http.HttpHost;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.apache.http.HttpHost;

        if $z0 == 0 goto label4;

        r2 = (org.apache.http.HttpHost) r1;

        $r4 = r0.<org.apache.http.HttpHost: java.lang.String lcHostname>;

        $r3 = r2.<org.apache.http.HttpHost: java.lang.String lcHostname>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $i1 = r0.<org.apache.http.HttpHost: int port>;

        $i0 = r2.<org.apache.http.HttpHost: int port>;

        if $i1 != $i0 goto label2;

        $r6 = r0.<org.apache.http.HttpHost: java.lang.String schemeName>;

        $r5 = r2.<org.apache.http.HttpHost: java.lang.String schemeName>;

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;

     label4:
        return 0;
    }

    public int hashCode()
    {
        int $i0, $i1, $i2, $i3;
        java.lang.String $r1, $r2;
        org.apache.http.HttpHost r0;

        r0 := @this: org.apache.http.HttpHost;

        $r1 = r0.<org.apache.http.HttpHost: java.lang.String lcHostname>;

        $i0 = staticinvoke <org.apache.http.util.LangUtils: int hashCode(int,java.lang.Object)>(17, $r1);

        $i1 = r0.<org.apache.http.HttpHost: int port>;

        $i2 = staticinvoke <org.apache.http.util.LangUtils: int hashCode(int,int)>($i0, $i1);

        $r2 = r0.<org.apache.http.HttpHost: java.lang.String schemeName>;

        $i3 = staticinvoke <org.apache.http.util.LangUtils: int hashCode(int,java.lang.Object)>($i2, $r2);

        return $i3;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        java.lang.Object $r1;
        org.apache.http.HttpHost r0;

        r0 := @this: org.apache.http.HttpHost;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.http.HttpHost: java.lang.String DEFAULT_SCHEME_NAME> = "http";

        <org.apache.http.HttpHost: long serialVersionUID> = -7529410654042457626L;

        return;
    }
}
