public final class org.waveprotocol.wave.model.document.operation.algorithm.Transformer extends java.lang.Object
{

    private void <init>()
    {
        org.waveprotocol.wave.model.document.operation.algorithm.Transformer r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.Transformer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.waveprotocol.wave.model.operation.OperationPair transform(org.waveprotocol.wave.model.document.operation.DocOp, org.waveprotocol.wave.model.document.operation.DocOp) throws org.waveprotocol.wave.model.operation.TransformException
    {
        org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer $r18, $r24;
        org.waveprotocol.wave.model.operation.TransformException $r40;
        org.waveprotocol.wave.model.document.operation.DocOp r0, r2, r5, r7, r9, r11, r15, r17, r21, r23, r27, r29, r33, r35, $r37, $r38;
        org.waveprotocol.wave.model.document.operation.algorithm.InsertionTransformer $r12;
        org.waveprotocol.wave.model.operation.OperationException $r39;
        org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer $r30;
        org.waveprotocol.wave.model.operation.OperationPair $r13, $r19, $r25, $r31, $r36;
        org.waveprotocol.wave.model.util.Pair $r1, $r3;
        java.lang.Object $r4, $r6, $r8, $r10, $r14, $r16, $r20, $r22, $r26, $r28, $r32, $r34;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.DocOp;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.DocOp;

     label1:
        $r1 = staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.Decomposer: org.waveprotocol.wave.model.util.Pair decompose(org.waveprotocol.wave.model.document.operation.DocOp)>(r0);

        $r3 = staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.Decomposer: org.waveprotocol.wave.model.util.Pair decompose(org.waveprotocol.wave.model.document.operation.DocOp)>(r2);

        $r4 = $r1.<org.waveprotocol.wave.model.util.Pair: java.lang.Object first>;

        r5 = (org.waveprotocol.wave.model.document.operation.DocOp) $r4;

        $r6 = $r1.<org.waveprotocol.wave.model.util.Pair: java.lang.Object second>;

        r7 = (org.waveprotocol.wave.model.document.operation.DocOp) $r6;

        $r8 = $r3.<org.waveprotocol.wave.model.util.Pair: java.lang.Object first>;

        r9 = (org.waveprotocol.wave.model.document.operation.DocOp) $r8;

        $r10 = $r3.<org.waveprotocol.wave.model.util.Pair: java.lang.Object second>;

        r11 = (org.waveprotocol.wave.model.document.operation.DocOp) $r10;

        $r12 = new org.waveprotocol.wave.model.document.operation.algorithm.InsertionTransformer;

        specialinvoke $r12.<org.waveprotocol.wave.model.document.operation.algorithm.InsertionTransformer: void <init>()>();

        $r13 = virtualinvoke $r12.<org.waveprotocol.wave.model.document.operation.algorithm.InsertionTransformer: org.waveprotocol.wave.model.operation.OperationPair transformOperations(org.waveprotocol.wave.model.document.operation.DocOp,org.waveprotocol.wave.model.document.operation.DocOp)>(r5, r9);

        $r14 = virtualinvoke $r13.<org.waveprotocol.wave.model.operation.OperationPair: java.lang.Object clientOp()>();

        r15 = (org.waveprotocol.wave.model.document.operation.DocOp) $r14;

        $r16 = virtualinvoke $r13.<org.waveprotocol.wave.model.operation.OperationPair: java.lang.Object serverOp()>();

        r17 = (org.waveprotocol.wave.model.document.operation.DocOp) $r16;

        $r18 = new org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer;

        specialinvoke $r18.<org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer: void <init>()>();

        $r19 = virtualinvoke $r18.<org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer: org.waveprotocol.wave.model.operation.OperationPair transformOperations(org.waveprotocol.wave.model.document.operation.DocOp,org.waveprotocol.wave.model.document.operation.DocOp)>(r15, r11);

        $r20 = virtualinvoke $r19.<org.waveprotocol.wave.model.operation.OperationPair: java.lang.Object clientOp()>();

        r21 = (org.waveprotocol.wave.model.document.operation.DocOp) $r20;

        $r22 = virtualinvoke $r19.<org.waveprotocol.wave.model.operation.OperationPair: java.lang.Object serverOp()>();

        r23 = (org.waveprotocol.wave.model.document.operation.DocOp) $r22;

        $r24 = new org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer;

        specialinvoke $r24.<org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer: void <init>()>();

        $r25 = virtualinvoke $r24.<org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer: org.waveprotocol.wave.model.operation.OperationPair transformOperations(org.waveprotocol.wave.model.document.operation.DocOp,org.waveprotocol.wave.model.document.operation.DocOp)>(r17, r7);

        $r26 = virtualinvoke $r25.<org.waveprotocol.wave.model.operation.OperationPair: java.lang.Object clientOp()>();

        r27 = (org.waveprotocol.wave.model.document.operation.DocOp) $r26;

        $r28 = virtualinvoke $r25.<org.waveprotocol.wave.model.operation.OperationPair: java.lang.Object serverOp()>();

        r29 = (org.waveprotocol.wave.model.document.operation.DocOp) $r28;

        $r30 = new org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer;

        specialinvoke $r30.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer: void <init>()>();

        $r31 = virtualinvoke $r30.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer: org.waveprotocol.wave.model.operation.OperationPair transformOperations(org.waveprotocol.wave.model.document.operation.DocOp,org.waveprotocol.wave.model.document.operation.DocOp)>(r29, r23);

        $r32 = virtualinvoke $r31.<org.waveprotocol.wave.model.operation.OperationPair: java.lang.Object clientOp()>();

        r33 = (org.waveprotocol.wave.model.document.operation.DocOp) $r32;

        $r34 = virtualinvoke $r31.<org.waveprotocol.wave.model.operation.OperationPair: java.lang.Object serverOp()>();

        r35 = (org.waveprotocol.wave.model.document.operation.DocOp) $r34;

        $r36 = new org.waveprotocol.wave.model.operation.OperationPair;

        $r37 = staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.DocOp compose(org.waveprotocol.wave.model.document.operation.DocOp,org.waveprotocol.wave.model.document.operation.DocOp)>(r21, r33);

        $r38 = staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.DocOp compose(org.waveprotocol.wave.model.document.operation.DocOp,org.waveprotocol.wave.model.document.operation.DocOp)>(r27, r35);

        specialinvoke $r36.<org.waveprotocol.wave.model.operation.OperationPair: void <init>(java.lang.Object,java.lang.Object)>($r37, $r38);

     label2:
        return $r36;

     label3:
        $r39 := @caughtexception;

        $r40 = new org.waveprotocol.wave.model.operation.TransformException;

        specialinvoke $r40.<org.waveprotocol.wave.model.operation.TransformException: void <init>(java.lang.Throwable)>($r39);

        throw $r40;

        catch org.waveprotocol.wave.model.operation.OperationException from label1 to label2 with label3;
    }
}
