public class org.apache.batik.gvt.text.GlyphLayout extends java.lang.Object implements org.apache.batik.gvt.text.TextSpanLayout
{
    private org.apache.batik.gvt.font.GVTGlyphVector gv;
    private org.apache.batik.gvt.font.GVTFont font;
    private org.apache.batik.gvt.font.GVTLineMetrics metrics;
    private java.text.AttributedCharacterIterator aci;
    private java.awt.geom.Point2D advance;
    private java.awt.geom.Point2D offset;
    private float xScale;
    private float yScale;
    private org.apache.batik.gvt.text.TextPath textPath;
    private java.awt.geom.Point2D textPathAdvance;
    private int[] charMap;
    private boolean vertical;
    private boolean adjSpacing;
    private float[] glyphAdvances;
    private boolean isAltGlyph;
    private boolean layoutApplied;
    private boolean spacingApplied;
    private boolean pathApplied;
    public static final java.text.AttributedCharacterIterator$Attribute FLOW_LINE_BREAK;
    public static final java.text.AttributedCharacterIterator$Attribute FLOW_PARAGRAPH;
    public static final java.text.AttributedCharacterIterator$Attribute FLOW_EMPTY_PARAGRAPH;
    public static final java.text.AttributedCharacterIterator$Attribute LINE_HEIGHT;
    public static final java.text.AttributedCharacterIterator$Attribute VERTICAL_ORIENTATION;
    public static final java.text.AttributedCharacterIterator$Attribute VERTICAL_ORIENTATION_ANGLE;
    public static final java.text.AttributedCharacterIterator$Attribute HORIZONTAL_ORIENTATION_ANGLE;
    private static final java.text.AttributedCharacterIterator$Attribute X;
    private static final java.text.AttributedCharacterIterator$Attribute Y;
    private static final java.text.AttributedCharacterIterator$Attribute DX;
    private static final java.text.AttributedCharacterIterator$Attribute DY;
    private static final java.text.AttributedCharacterIterator$Attribute ROTATION;
    private static final java.text.AttributedCharacterIterator$Attribute BASELINE_SHIFT;
    private static final java.text.AttributedCharacterIterator$Attribute WRITING_MODE;
    private static final java.lang.Integer WRITING_MODE_TTB;
    private static final java.lang.Integer ORIENTATION_AUTO;
    public static final java.text.AttributedCharacterIterator$Attribute GVT_FONT;
    protected static java.util.Set runAtts;
    protected static java.util.Set szAtts;
    public static final double eps;

    public void <init>(java.text.AttributedCharacterIterator, int[], java.awt.geom.Point2D, java.awt.font.FontRenderContext)
    {
        org.apache.batik.gvt.font.AltGlyphHandler $r25;
        java.awt.geom.Point2D r2;
        org.apache.batik.gvt.font.GVTFont $r3, $r5, $r19, $r21;
        java.lang.Integer $r11;
        java.text.AttributedCharacterIterator$Attribute $r9;
        int[] r4;
        org.apache.batik.gvt.font.GVTGlyphVector $r20, $r23, $r24, $r26;
        int $i0, $i1;
        org.apache.batik.gvt.text.TextPath $r14;
        org.apache.batik.gvt.font.GVTLineMetrics $r7;
        boolean $z0;
        java.awt.font.FontRenderContext r6;
        java.text.AttributedCharacterIterator r1, $r8, $r16, $r18, $r22;
        org.apache.batik.gvt.text.GlyphLayout r0;
        org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute $r12, $r15;
        float $f0;
        java.lang.Object $r10, $r13, $r17;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        r1 := @parameter0: java.text.AttributedCharacterIterator;

        r4 := @parameter1: int[];

        r2 := @parameter2: java.awt.geom.Point2D;

        r6 := @parameter3: java.awt.font.FontRenderContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.gvt.text.GlyphLayout: float xScale> = 1.0F;

        r0.<org.apache.batik.gvt.text.GlyphLayout: float yScale> = 1.0F;

        r0.<org.apache.batik.gvt.text.GlyphLayout: boolean adjSpacing> = 1;

        r0.<org.apache.batik.gvt.text.GlyphLayout: boolean layoutApplied> = 0;

        r0.<org.apache.batik.gvt.text.GlyphLayout: boolean spacingApplied> = 0;

        r0.<org.apache.batik.gvt.text.GlyphLayout: boolean pathApplied> = 0;

        r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci> = r1;

        r0.<org.apache.batik.gvt.text.GlyphLayout: java.awt.geom.Point2D offset> = r2;

        $r3 = virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTFont getFont()>();

        r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTFont font> = $r3;

        r0.<org.apache.batik.gvt.text.GlyphLayout: int[] charMap> = r4;

        $r5 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTFont font>;

        $i0 = interfaceinvoke r1.<java.text.CharacterIterator: int getBeginIndex()>();

        $i1 = interfaceinvoke r1.<java.text.CharacterIterator: int getEndIndex()>();

        $r7 = interfaceinvoke $r5.<org.apache.batik.gvt.font.GVTFont: org.apache.batik.gvt.font.GVTLineMetrics getLineMetrics(java.text.CharacterIterator,int,int,java.awt.font.FontRenderContext)>(r1, $i0, $i1, r6);

        r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTLineMetrics metrics> = $r7;

        r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv> = null;

        $r8 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        interfaceinvoke $r8.<java.text.CharacterIterator: char first()>();

        $r9 = <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute WRITING_MODE>;

        $r10 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r9);

        $r11 = <org.apache.batik.gvt.text.GlyphLayout: java.lang.Integer WRITING_MODE_TTB>;

        if $r10 != $r11 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<org.apache.batik.gvt.text.GlyphLayout: boolean vertical> = $z0;

        $r12 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute TEXTPATH>;

        $r13 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r12);

        $r14 = (org.apache.batik.gvt.text.TextPath) $r13;

        r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.text.TextPath textPath> = $r14;

        $r16 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        $r15 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute ALT_GLYPH_HANDLER>;

        $r17 = interfaceinvoke $r16.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r15);

        $r25 = (org.apache.batik.gvt.font.AltGlyphHandler) $r17;

        if $r25 == null goto label3;

        $r21 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTFont font>;

        $f0 = interfaceinvoke $r21.<org.apache.batik.gvt.font.GVTFont: float getSize()>();

        $r22 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        $r23 = interfaceinvoke $r25.<org.apache.batik.gvt.font.AltGlyphHandler: org.apache.batik.gvt.font.GVTGlyphVector createGlyphVector(java.awt.font.FontRenderContext,float,java.text.AttributedCharacterIterator)>(r6, $f0, $r22);

        r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv> = $r23;

        $r24 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        if $r24 == null goto label3;

        r0.<org.apache.batik.gvt.text.GlyphLayout: boolean isAltGlyph> = 1;

     label3:
        $r26 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        if $r26 != null goto label4;

        $r19 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTFont font>;

        $r18 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        $r20 = interfaceinvoke $r19.<org.apache.batik.gvt.font.GVTFont: org.apache.batik.gvt.font.GVTGlyphVector createGlyphVector(java.awt.font.FontRenderContext,java.text.CharacterIterator)>(r6, $r18);

        r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv> = $r20;

     label4:
        return;
    }

    public org.apache.batik.gvt.font.GVTGlyphVector getGlyphVector()
    {
        org.apache.batik.gvt.text.GlyphLayout r0;
        org.apache.batik.gvt.font.GVTGlyphVector $r1;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        $r1 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        return $r1;
    }

    public java.awt.geom.Point2D getOffset()
    {
        org.apache.batik.gvt.text.GlyphLayout r0;
        java.awt.geom.Point2D $r1;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        $r1 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.awt.geom.Point2D offset>;

        return $r1;
    }

    public void setScale(float, float, boolean)
    {
        byte $b0, $b1;
        org.apache.batik.gvt.text.GlyphLayout r0;
        float $f0, $f1, f2, f3;
        boolean $z0, z1, $z2;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        f2 := @parameter0: float;

        f3 := @parameter1: float;

        z1 := @parameter2: boolean;

        $z0 = r0.<org.apache.batik.gvt.text.GlyphLayout: boolean vertical>;

        if $z0 == 0 goto label1;

        f2 = 1.0F;

        goto label2;

     label1:
        f3 = 1.0F;

     label2:
        $f0 = r0.<org.apache.batik.gvt.text.GlyphLayout: float xScale>;

        $b0 = f2 cmpl $f0;

        if $b0 != 0 goto label3;

        $f1 = r0.<org.apache.batik.gvt.text.GlyphLayout: float yScale>;

        $b1 = f3 cmpl $f1;

        if $b1 != 0 goto label3;

        $z2 = r0.<org.apache.batik.gvt.text.GlyphLayout: boolean adjSpacing>;

        if z1 == $z2 goto label4;

     label3:
        r0.<org.apache.batik.gvt.text.GlyphLayout: float xScale> = f2;

        r0.<org.apache.batik.gvt.text.GlyphLayout: float yScale> = f3;

        r0.<org.apache.batik.gvt.text.GlyphLayout: boolean adjSpacing> = z1;

        r0.<org.apache.batik.gvt.text.GlyphLayout: boolean spacingApplied> = 0;

        r0.<org.apache.batik.gvt.text.GlyphLayout: float[] glyphAdvances> = null;

        r0.<org.apache.batik.gvt.text.GlyphLayout: boolean pathApplied> = 0;

     label4:
        return;
    }

    public void setOffset(java.awt.geom.Point2D)
    {
        java.awt.geom.Point2D r0, $r2, $r3, $r4, $r10;
        byte $b0, $b6;
        boolean $z0, $z1;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        float[] $r7;
        org.apache.batik.gvt.font.GVTGlyphVector $r5, $r6, $r9;
        int $i1, $i2, $i3, $i4, $i5, i7;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        java.awt.geom.Point2D$Float $r8;
        org.apache.batik.gvt.text.GlyphLayout r1;

        r1 := @this: org.apache.batik.gvt.text.GlyphLayout;

        r0 := @parameter0: java.awt.geom.Point2D;

        $d0 = virtualinvoke r0.<java.awt.geom.Point2D: double getX()>();

        $r2 = r1.<org.apache.batik.gvt.text.GlyphLayout: java.awt.geom.Point2D offset>;

        $d1 = virtualinvoke $r2.<java.awt.geom.Point2D: double getX()>();

        $b0 = $d0 cmpl $d1;

        if $b0 != 0 goto label1;

        $d8 = virtualinvoke r0.<java.awt.geom.Point2D: double getY()>();

        $r10 = r1.<org.apache.batik.gvt.text.GlyphLayout: java.awt.geom.Point2D offset>;

        $d9 = virtualinvoke $r10.<java.awt.geom.Point2D: double getY()>();

        $b6 = $d8 cmpl $d9;

        if $b6 == 0 goto label6;

     label1:
        $z0 = r1.<org.apache.batik.gvt.text.GlyphLayout: boolean layoutApplied>;

        if $z0 != 0 goto label2;

        $z1 = r1.<org.apache.batik.gvt.text.GlyphLayout: boolean spacingApplied>;

        if $z1 == 0 goto label5;

     label2:
        $d2 = virtualinvoke r0.<java.awt.geom.Point2D: double getX()>();

        $r3 = r1.<org.apache.batik.gvt.text.GlyphLayout: java.awt.geom.Point2D offset>;

        $d3 = virtualinvoke $r3.<java.awt.geom.Point2D: double getX()>();

        $d4 = $d2 - $d3;

        $f4 = (float) $d4;

        $d5 = virtualinvoke r0.<java.awt.geom.Point2D: double getY()>();

        $r4 = r1.<org.apache.batik.gvt.text.GlyphLayout: java.awt.geom.Point2D offset>;

        $d6 = virtualinvoke $r4.<java.awt.geom.Point2D: double getY()>();

        $d7 = $d5 - $d6;

        $f5 = (float) $d7;

        $r5 = r1.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $i1 = interfaceinvoke $r5.<org.apache.batik.gvt.font.GVTGlyphVector: int getNumGlyphs()>();

        $r6 = r1.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $i2 = $i1 + 1;

        $r7 = interfaceinvoke $r6.<org.apache.batik.gvt.font.GVTGlyphVector: float[] getGlyphPositions(int,int,float[])>(0, $i2, null);

        $r8 = new java.awt.geom.Point2D$Float;

        specialinvoke $r8.<java.awt.geom.Point2D$Float: void <init>()>();

        i7 = 0;

        goto label4;

     label3:
        $i3 = 2 * i7;

        $f0 = $r7[$i3];

        $f1 = $f0 + $f4;

        $r8.<java.awt.geom.Point2D$Float: float x> = $f1;

        $i4 = 2 * i7;

        $i5 = $i4 + 1;

        $f2 = $r7[$i5];

        $f3 = $f2 + $f5;

        $r8.<java.awt.geom.Point2D$Float: float y> = $f3;

        $r9 = r1.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        interfaceinvoke $r9.<org.apache.batik.gvt.font.GVTGlyphVector: void setGlyphPosition(int,java.awt.geom.Point2D)>(i7, $r8);

        i7 = i7 + 1;

     label4:
        if i7 <= $i1 goto label3;

     label5:
        r1.<org.apache.batik.gvt.text.GlyphLayout: java.awt.geom.Point2D offset> = r0;

        r1.<org.apache.batik.gvt.text.GlyphLayout: boolean pathApplied> = 0;

     label6:
        return;
    }

    public org.apache.batik.gvt.font.GVTGlyphMetrics getGlyphMetrics(int)
    {
        org.apache.batik.gvt.font.GVTGlyphMetrics $r2;
        org.apache.batik.gvt.font.GVTGlyphVector $r1;
        org.apache.batik.gvt.text.GlyphLayout r0;
        int i0;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.gvt.font.GVTGlyphVector: org.apache.batik.gvt.font.GVTGlyphMetrics getGlyphMetrics(int)>(i0);

        return $r2;
    }

    public org.apache.batik.gvt.font.GVTLineMetrics getLineMetrics()
    {
        org.apache.batik.gvt.text.GlyphLayout r0;
        org.apache.batik.gvt.font.GVTLineMetrics $r1;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        $r1 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTLineMetrics metrics>;

        return $r1;
    }

    public boolean isVertical()
    {
        org.apache.batik.gvt.text.GlyphLayout r0;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        $z0 = r0.<org.apache.batik.gvt.text.GlyphLayout: boolean vertical>;

        return $z0;
    }

    public boolean isOnATextPath()
    {
        org.apache.batik.gvt.text.GlyphLayout r0;
        org.apache.batik.gvt.text.TextPath $r1;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        $r1 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.text.TextPath textPath>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int getGlyphCount()
    {
        org.apache.batik.gvt.text.GlyphLayout r0;
        int $i0;
        org.apache.batik.gvt.font.GVTGlyphVector $r1;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        $r1 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $i0 = interfaceinvoke $r1.<org.apache.batik.gvt.font.GVTGlyphVector: int getNumGlyphs()>();

        return $i0;
    }

    public int getCharacterCount(int, int)
    {
        org.apache.batik.gvt.font.GVTGlyphVector $r1;
        org.apache.batik.gvt.text.GlyphLayout r0;
        int i0, i1, $i2;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $i2 = interfaceinvoke $r1.<org.apache.batik.gvt.font.GVTGlyphVector: int getCharacterCount(int,int)>(i0, i1);

        return $i2;
    }

    public boolean isLeftToRight()
    {
        java.lang.Integer $r5;
        java.text.AttributedCharacterIterator $r1, $r3;
        org.apache.batik.gvt.text.GlyphLayout r0;
        int $i0, $i1;
        org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute $r2;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        $r1 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        interfaceinvoke $r1.<java.text.CharacterIterator: char first()>();

        $r3 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        $r2 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute BIDI_LEVEL>;

        $r4 = interfaceinvoke $r3.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r2);

        $r5 = (java.lang.Integer) $r4;

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        $i1 = $i0 & 1;

        if $i1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private final void syncLayout()
    {
        org.apache.batik.gvt.text.GlyphLayout r0;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        $z0 = r0.<org.apache.batik.gvt.text.GlyphLayout: boolean pathApplied>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: void doPathLayout()>();

     label1:
        return;
    }

    public void draw(java.awt.Graphics2D)
    {
        java.text.AttributedCharacterIterator $r2;
        java.awt.Graphics2D r1;
        org.apache.batik.gvt.font.GVTGlyphVector $r3;
        org.apache.batik.gvt.text.GlyphLayout r0;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        r1 := @parameter0: java.awt.Graphics2D;

        specialinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: void syncLayout()>();

        $r3 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r2 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        interfaceinvoke $r3.<org.apache.batik.gvt.font.GVTGlyphVector: void draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator)>(r1, $r2);

        return;
    }

    public java.awt.geom.Point2D getAdvance2D()
    {
        org.apache.batik.gvt.text.GlyphLayout r0;
        java.awt.geom.Point2D $r1;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: void adjustTextSpacing()>();

        $r1 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.awt.geom.Point2D advance>;

        return $r1;
    }

    public java.awt.Shape getOutline()
    {
        org.apache.batik.gvt.text.GlyphLayout r0;
        java.awt.Shape $r2;
        org.apache.batik.gvt.font.GVTGlyphVector $r1;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        specialinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: void syncLayout()>();

        $r1 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.Shape getOutline()>();

        return $r2;
    }

    public float[] getGlyphAdvances()
    {
        float[] $r1, $r4, $r5, $r6, $r7, $r8;
        byte b7;
        org.apache.batik.gvt.font.GVTGlyphVector $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        boolean $z0, $z1, z2, z3;
        org.apache.batik.gvt.text.GlyphLayout r0;
        float $f0, $f1, $f2;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        $r1 = r0.<org.apache.batik.gvt.text.GlyphLayout: float[] glyphAdvances>;

        if $r1 == null goto label1;

        $r8 = r0.<org.apache.batik.gvt.text.GlyphLayout: float[] glyphAdvances>;

        return $r8;

     label1:
        $z0 = r0.<org.apache.batik.gvt.text.GlyphLayout: boolean spacingApplied>;

        if $z0 != 0 goto label2;

        virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: void adjustTextSpacing()>();

     label2:
        $r2 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $i0 = interfaceinvoke $r2.<org.apache.batik.gvt.font.GVTGlyphVector: int getNumGlyphs()>();

        $r3 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $i1 = $i0 + 1;

        $r4 = interfaceinvoke $r3.<org.apache.batik.gvt.font.GVTGlyphVector: float[] getGlyphPositions(int,int,float[])>(0, $i1, null);

        $i2 = $i0 + 1;

        $r5 = newarray (float)[$i2];

        r0.<org.apache.batik.gvt.text.GlyphLayout: float[] glyphAdvances> = $r5;

        z2 = 0;

        z3 = 0;

        b7 = 0;

        $z1 = virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: boolean isVertical()>();

        if $z1 == 0 goto label3;

        z2 = 1;

        z3 = 1;

        b7 = 1;

     label3:
        $f2 = $r4[b7];

        i6 = 0;

        goto label5;

     label4:
        $r6 = r0.<org.apache.batik.gvt.text.GlyphLayout: float[] glyphAdvances>;

        $i4 = 2 * i6;

        $i5 = $i4 + z3;

        $f0 = $r4[$i5];

        $f1 = $f0 - $f2;

        $r6[i6] = $f1;

        i6 = i6 + 1;

     label5:
        $i3 = $i0 + 1;

        if i6 < $i3 goto label4;

        $r7 = r0.<org.apache.batik.gvt.text.GlyphLayout: float[] glyphAdvances>;

        return $r7;
    }

    public java.awt.Shape getDecorationOutline(int)
    {
        java.awt.Shape $r3, $r5, $r7;
        org.apache.batik.gvt.text.GlyphLayout r0;
        int i0, $i1, $i2, $i3;
        java.awt.geom.GeneralPath $r1, $r2, $r4, $r6;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: void syncLayout()>();

        $r1 = new java.awt.geom.GeneralPath;

        specialinvoke $r1.<java.awt.geom.GeneralPath: void <init>()>();

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        $r6 = (java.awt.geom.GeneralPath) $r1;

        $r7 = virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: java.awt.Shape getUnderlineShape()>();

        virtualinvoke $r6.<java.awt.geom.GeneralPath: void append(java.awt.Shape,boolean)>($r7, 0);

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        $r4 = (java.awt.geom.GeneralPath) $r1;

        $r5 = virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: java.awt.Shape getStrikethroughShape()>();

        virtualinvoke $r4.<java.awt.geom.GeneralPath: void append(java.awt.Shape,boolean)>($r5, 0);

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        $r2 = (java.awt.geom.GeneralPath) $r1;

        $r3 = virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: java.awt.Shape getOverlineShape()>();

        virtualinvoke $r2.<java.awt.geom.GeneralPath: void append(java.awt.Shape,boolean)>($r3, 0);

     label3:
        return $r1;
    }

    public java.awt.geom.Rectangle2D getBounds2D()
    {
        java.text.AttributedCharacterIterator $r1;
        org.apache.batik.gvt.font.GVTGlyphVector $r2;
        java.awt.geom.Rectangle2D $r3;
        org.apache.batik.gvt.text.GlyphLayout r0;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        specialinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: void syncLayout()>();

        $r2 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r1 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        $r3 = interfaceinvoke $r2.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.geom.Rectangle2D getBounds2D(java.text.AttributedCharacterIterator)>($r1);

        return $r3;
    }

    public java.awt.geom.Rectangle2D getGeometricBounds()
    {
        java.awt.Shape $r3;
        org.apache.batik.gvt.font.GVTGlyphVector $r1;
        java.awt.geom.Rectangle2D $r2, $r4, $r5;
        org.apache.batik.gvt.text.GlyphLayout r0;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        specialinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: void syncLayout()>();

        $r1 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.geom.Rectangle2D getGeometricBounds()>();

        $r3 = virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: java.awt.Shape getDecorationOutline(int)>(7);

        $r4 = interfaceinvoke $r3.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>();

        $r5 = virtualinvoke $r2.<java.awt.geom.Rectangle2D: java.awt.geom.Rectangle2D createUnion(java.awt.geom.Rectangle2D)>($r4);

        return $r5;
    }

    public java.awt.geom.Point2D getTextPathAdvance()
    {
        java.awt.geom.Point2D $r2, $r3;
        org.apache.batik.gvt.text.GlyphLayout r0;
        org.apache.batik.gvt.text.TextPath $r1;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        specialinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: void syncLayout()>();

        $r1 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.text.TextPath textPath>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.awt.geom.Point2D textPathAdvance>;

        return $r3;

     label1:
        $r2 = virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: java.awt.geom.Point2D getAdvance2D()>();

        return $r2;
    }

    public int getGlyphIndex(int)
    {
        int[] $r1, $r2;
        org.apache.batik.gvt.text.GlyphLayout r0;
        int $i0, $i1, $i2, i3, i4, $i5, i6, i7, i8, $i10, $i12;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        i4 := @parameter0: int;

        $i0 = virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: int getGlyphCount()>();

        i6 = 0;

        i7 = 0;

        goto label6;

     label1:
        $i1 = virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: int getCharacterCount(int,int)>(i7, i7);

        i8 = 0;

        goto label5;

     label2:
        $r1 = r0.<org.apache.batik.gvt.text.GlyphLayout: int[] charMap>;

        $i2 = i6;

        i6 = i6 + 1;

        i3 = $r1[$i2];

        if i4 != i3 goto label3;

        return i7;

     label3:
        $r2 = r0.<org.apache.batik.gvt.text.GlyphLayout: int[] charMap>;

        $i5 = lengthof $r2;

        if i6 < $i5 goto label4;

        $i10 = (int) -1;

        return $i10;

     label4:
        i8 = i8 + 1;

     label5:
        if i8 < $i1 goto label2;

        i7 = i7 + 1;

     label6:
        if i7 < $i0 goto label1;

        $i12 = (int) -1;

        return $i12;
    }

    public int getLastGlyphIndex(int)
    {
        int[] $r1, $r2;
        org.apache.batik.gvt.text.GlyphLayout r0;
        int $i0, $i1, $i2, $i3, i4, i5, i6, i7, i8, $i10, $i12, $i14;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        i5 := @parameter0: int;

        $i0 = virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: int getGlyphCount()>();

        $r1 = r0.<org.apache.batik.gvt.text.GlyphLayout: int[] charMap>;

        $i1 = lengthof $r1;

        i6 = $i1 - 1;

        i7 = $i0 - 1;

        goto label6;

     label1:
        $i2 = virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: int getCharacterCount(int,int)>(i7, i7);

        i8 = 0;

        goto label5;

     label2:
        $r2 = r0.<org.apache.batik.gvt.text.GlyphLayout: int[] charMap>;

        $i3 = i6;

        i6 = i6 - 1;

        i4 = $r2[$i3];

        if i5 != i4 goto label3;

        return i7;

     label3:
        if i6 >= 0 goto label4;

        $i10 = (int) -1;

        return $i10;

     label4:
        i8 = i8 + 1;

     label5:
        if i8 < $i2 goto label2;

        $i12 = (int) -1;

        i7 = i7 + $i12;

     label6:
        if i7 >= 0 goto label1;

        $i14 = (int) -1;

        return $i14;
    }

    public double getComputedOrientationAngle(int)
    {
        char $c2;
        java.text.AttributedCharacterIterator $r1;
        org.apache.batik.gvt.text.GlyphLayout r0;
        int $i0, i1;
        boolean $z0, $z1, $z2;
        double $d0;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        i1 := @parameter0: int;

        $z0 = virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: boolean isGlyphOrientationAuto()>();

        if $z0 == 0 goto label3;

        $z1 = virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: boolean isVertical()>();

        if $z1 == 0 goto label2;

        $r1 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        $c2 = interfaceinvoke $r1.<java.text.CharacterIterator: char setIndex(int)>(i1);

        $z2 = virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: boolean isLatinChar(char)>($c2);

        if $z2 == 0 goto label1;

        return 90.0;

     label1:
        return 0.0;

     label2:
        return 0.0;

     label3:
        $i0 = virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: int getGlyphOrientationAngle()>();

        $d0 = (double) $i0;

        return $d0;
    }

    public java.awt.Shape getHighlightShape(int, int)
    {
        java.awt.geom.PathIterator $r6;
        byte $b9, $b11, $b12, $b13;
        int[] $r1, $r2, $r19;
        boolean $z0, $z1, $z2;
        java.awt.Shape $r5;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        java.awt.geom.GeneralPath $r13, r17;
        float[] $r14;
        org.apache.batik.gvt.font.GVTGlyphVector $r3, $r4;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i10, i14, i15, i16, i17, i18, i19, i20, $i21, $i22, $i23;
        java.awt.geom.Point2D$Float[] $r15, $r16;
        java.awt.geom.Point2D$Float $r7, $r8, $r9, $r10, $r11, $r12, r18;
        org.apache.batik.gvt.text.GlyphLayout r0;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        i14 := @parameter0: int;

        i15 := @parameter1: int;

        specialinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: void syncLayout()>();

        if i14 <= i15 goto label01;

        i16 = i14;

        i14 = i15;

        i15 = i16;

     label01:
        r17 = null;

        $i0 = virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: int getGlyphCount()>();

        $i1 = 2 * $i0;

        $r15 = newarray (java.awt.geom.Point2D$Float)[$i1];

        $i2 = 2 * $i0;

        $r16 = newarray (java.awt.geom.Point2D$Float)[$i2];

        i17 = 0;

        i18 = 0;

        i19 = 0;

        goto label22;

     label02:
        $r1 = r0.<org.apache.batik.gvt.text.GlyphLayout: int[] charMap>;

        i3 = $r1[i18];

        if i3 < i14 goto label20;

        if i3 > i15 goto label20;

        $r3 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $z0 = interfaceinvoke $r3.<org.apache.batik.gvt.font.GVTGlyphVector: boolean isGlyphVisible(int)>(i19);

        if $z0 == 0 goto label20;

        $r4 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r5 = interfaceinvoke $r4.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.Shape getGlyphLogicalBounds(int)>(i19);

        if $r5 == null goto label20;

        if r17 != null goto label03;

        $r13 = new java.awt.geom.GeneralPath;

        specialinvoke $r13.<java.awt.geom.GeneralPath: void <init>()>();

        r17 = $r13;

     label03:
        $r14 = newarray (float)[6];

        i20 = 0;

        $r6 = interfaceinvoke $r5.<java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>(null);

        r18 = null;

        goto label16;

     label04:
        $i5 = interfaceinvoke $r6.<java.awt.geom.PathIterator: int currentSegment(float[])>($r14);

        if $i5 == 0 goto label05;

        if $i5 != 1 goto label14;

     label05:
        if i20 <= 4 goto label06;

        goto label17;

     label06:
        if i20 != 4 goto label07;

        if r18 == null goto label17;

        $f7 = r18.<java.awt.geom.Point2D$Float: float x>;

        $f6 = $r14[0];

        $b12 = $f7 cmpl $f6;

        if $b12 != 0 goto label17;

        $f9 = r18.<java.awt.geom.Point2D$Float: float y>;

        $f8 = $r14[1];

        $b13 = $f9 cmpl $f8;

        if $b13 == 0 goto label15;

        goto label17;

     label07:
        $r7 = new java.awt.geom.Point2D$Float;

        $f1 = $r14[0];

        $f0 = $r14[1];

        specialinvoke $r7.<java.awt.geom.Point2D$Float: void <init>(float,float)>($f1, $f0);

        if i20 != 0 goto label08;

        r18 = $r7;

     label08:
        tableswitch(i20)
        {
            case 0: goto label09;
            case 1: goto label10;
            case 2: goto label11;
            case 3: goto label12;
            default: goto label13;
        };

     label09:
        $r16[i17] = $r7;

        goto label13;

     label10:
        $r15[i17] = $r7;

        goto label13;

     label11:
        $i7 = i17 + 1;

        $r15[$i7] = $r7;

        goto label13;

     label12:
        $i6 = i17 + 1;

        $r16[$i6] = $r7;

     label13:
        goto label15;

     label14:
        if $i5 != 4 goto label17;

        if i20 < 4 goto label17;

        if i20 <= 5 goto label15;

        goto label17;

     label15:
        i20 = i20 + 1;

        interfaceinvoke $r6.<java.awt.geom.PathIterator: void next()>();

     label16:
        $z1 = interfaceinvoke $r6.<java.awt.geom.PathIterator: boolean isDone()>();

        if $z1 == 0 goto label04;

     label17:
        $z2 = interfaceinvoke $r6.<java.awt.geom.PathIterator: boolean isDone()>();

        if $z2 == 0 goto label19;

        $r8 = $r16[i17];

        if $r8 == null goto label20;

        $r9 = $r15[i17];

        $f3 = $r9.<java.awt.geom.Point2D$Float: float x>;

        $i8 = i17 + 1;

        $r10 = $r15[$i8];

        $f2 = $r10.<java.awt.geom.Point2D$Float: float x>;

        $b9 = $f3 cmpl $f2;

        if $b9 != 0 goto label18;

        $r11 = $r15[i17];

        $f5 = $r11.<java.awt.geom.Point2D$Float: float y>;

        $i10 = i17 + 1;

        $r12 = $r15[$i10];

        $f4 = $r12.<java.awt.geom.Point2D$Float: float y>;

        $b11 = $f5 cmpl $f4;

        if $b11 == 0 goto label20;

     label18:
        i17 = i17 + 2;

        goto label20;

     label19:
        staticinvoke <org.apache.batik.gvt.text.GlyphLayout: void addPtsToPath(java.awt.geom.GeneralPath,java.awt.geom.Point2D$Float[],java.awt.geom.Point2D$Float[],int)>(r17, $r15, $r16, i17);

        i17 = 0;

        virtualinvoke r17.<java.awt.geom.GeneralPath: void append(java.awt.Shape,boolean)>($r5, 0);

     label20:
        $i21 = virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: int getCharacterCount(int,int)>(i19, i19);

        $i22 = i18 + $i21;

        i18 = $i22;

        $r19 = r0.<org.apache.batik.gvt.text.GlyphLayout: int[] charMap>;

        $i23 = lengthof $r19;

        if $i22 < $i23 goto label21;

        $r2 = r0.<org.apache.batik.gvt.text.GlyphLayout: int[] charMap>;

        $i4 = lengthof $r2;

        i18 = $i4 - 1;

     label21:
        i19 = i19 + 1;

     label22:
        if i19 < $i0 goto label02;

        staticinvoke <org.apache.batik.gvt.text.GlyphLayout: void addPtsToPath(java.awt.geom.GeneralPath,java.awt.geom.Point2D$Float[],java.awt.geom.Point2D$Float[],int)>(r17, $r15, $r16, i17);

        return r17;
    }

    public static boolean epsEQ(double, double)
    {
        byte $b0, $b1;
        int $i2, $i3;
        double d0, d1, $d2, $d3;
        boolean $z0;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $d2 = d0 + 1.0E-5;

        $b0 = $d2 cmpl d1;

        $i2 = (int) $b0;

        if $i2 <= 0 goto label1;

        $d3 = d0 - 1.0E-5;

        $b1 = $d3 cmpg d1;

        $i3 = (int) $b1;

        if $i3 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static int makeConvexHull(java.awt.geom.Point2D$Float[], int)
    {
        byte $b2, $b6, $b8, $b10, $b13, $b14, $b15, $b18, $b19, $b20, $b24, $b25, $b26, $b29, $b30, $b31;
        int i0, $i1, $i3, $i4, $i5, $i7, $i9, $i11, $i12, $i16, $i17, $i21, $i22, $i23, $i27, $i28, i32, i33, i34, i35, $i36, $i37, $i38, i39, $i40, i41, $i42, $i43, $i44, $i45, $i46, $i47, $i49, $i51, $i52, $i53, $i54, $i56, $i58, $i59, $i60, $i61, $i63, $i65, $i66, $i67, $i68, $i70, $i72, $i74;
        java.awt.geom.Point2D$Float[] r0, r10, r11;
        java.awt.geom.Point2D$Float $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r12, $r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, $r26, $r27;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53, $f54, $f55, $f56, $f57, $f58, $f59, $f60, $f61, $f62, $f63, $f64, $f65, $f66, $f67, $f68, $f69, $f70, $f71, $f72, $f73, $f74, $f75, $f76, $f77, $f78, $f79, $f80, $f81, $f82, $f83, $f84, $f85, f86, f87, f88, f89, f90, f91, f92, f93, f94, f95, f96, f97, f98, f99, f100, f101, f102;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;

        r0 := @parameter0: java.awt.geom.Point2D$Float[];

        i0 := @parameter1: int;

        i32 = 1;

        goto label04;

     label01:
        $r1 = r0[i32];

        $f1 = $r1.<java.awt.geom.Point2D$Float: float x>;

        $i1 = i32 - 1;

        $r2 = r0[$i1];

        $f0 = $r2.<java.awt.geom.Point2D$Float: float x>;

        $b2 = $f1 cmpg $f0;

        $i42 = (int) $b2;

        if $i42 < 0 goto label02;

        $r4 = r0[i32];

        $f3 = $r4.<java.awt.geom.Point2D$Float: float x>;

        $i5 = i32 - 1;

        $r5 = r0[$i5];

        $f2 = $r5.<java.awt.geom.Point2D$Float: float x>;

        $b6 = $f3 cmpl $f2;

        if $b6 != 0 goto label03;

        $r6 = r0[i32];

        $f5 = $r6.<java.awt.geom.Point2D$Float: float y>;

        $i7 = i32 - 1;

        $r7 = r0[$i7];

        $f4 = $r7.<java.awt.geom.Point2D$Float: float y>;

        $b8 = $f5 cmpg $f4;

        $i43 = (int) $b8;

        if $i43 >= 0 goto label03;

     label02:
        $r8 = r0[i32];

        $i3 = i32 - 1;

        $r3 = r0[$i3];

        r0[i32] = $r3;

        $i4 = i32 - 1;

        r0[$i4] = $r8;

        i32 = 0;

     label03:
        i32 = i32 + 1;

     label04:
        if i32 < i0 goto label01;

        r14 = r0[0];

        $i9 = i0 - 1;

        r15 = r0[$i9];

        $r27 = new java.awt.geom.Point2D$Float;

        $f7 = r15.<java.awt.geom.Point2D$Float: float x>;

        $f6 = r14.<java.awt.geom.Point2D$Float: float x>;

        $f11 = $f7 - $f6;

        $f9 = r15.<java.awt.geom.Point2D$Float: float y>;

        $f8 = r14.<java.awt.geom.Point2D$Float: float y>;

        $f10 = $f9 - $f8;

        specialinvoke $r27.<java.awt.geom.Point2D$Float: void <init>(float,float)>($f11, $f10);

        $f13 = $r27.<java.awt.geom.Point2D$Float: float y>;

        $f12 = r14.<java.awt.geom.Point2D$Float: float x>;

        $f17 = $f13 * $f12;

        $f15 = $r27.<java.awt.geom.Point2D$Float: float x>;

        $f14 = r14.<java.awt.geom.Point2D$Float: float y>;

        $f16 = $f15 * $f14;

        f18 = $f17 - $f16;

        r10 = newarray (java.awt.geom.Point2D$Float)[i0];

        r11 = newarray (java.awt.geom.Point2D$Float)[i0];

        $r12 = r0[0];

        r10[0] = $r12;

        r11[0] = $r12;

        i33 = 1;

        i34 = 1;

        i35 = 1;

        goto label19;

     label05:
        r16 = r0[i35];

        $f20 = $r27.<java.awt.geom.Point2D$Float: float x>;

        $f19 = r16.<java.awt.geom.Point2D$Float: float y>;

        $f24 = $f20 * $f19;

        $f22 = $r27.<java.awt.geom.Point2D$Float: float y>;

        $f21 = r16.<java.awt.geom.Point2D$Float: float x>;

        $f23 = $f22 * $f21;

        $f25 = $f24 - $f23;

        f86 = $f25 + f18;

        $b10 = f86 cmpg 0.0F;

        $i44 = (int) $b10;

        if $i44 >= 0 goto label16;

        goto label10;

     label06:
        $i16 = i34 - 2;

        r17 = r11[$i16];

        $i17 = i34 - 1;

        r18 = r11[$i17];

        $f42 = r18.<java.awt.geom.Point2D$Float: float x>;

        $f41 = r17.<java.awt.geom.Point2D$Float: float x>;

        f87 = $f42 - $f41;

        $f44 = r18.<java.awt.geom.Point2D$Float: float y>;

        $f43 = r17.<java.awt.geom.Point2D$Float: float y>;

        f88 = $f44 - $f43;

        $f45 = r17.<java.awt.geom.Point2D$Float: float x>;

        $f48 = f88 * $f45;

        $f46 = r17.<java.awt.geom.Point2D$Float: float y>;

        $f47 = f87 * $f46;

        f89 = $f48 - $f47;

        $f49 = r16.<java.awt.geom.Point2D$Float: float y>;

        $f52 = f87 * $f49;

        $f50 = r16.<java.awt.geom.Point2D$Float: float x>;

        $f51 = f88 * $f50;

        $f53 = $f52 - $f51;

        f90 = $f53 + f89;

        $d2 = (double) f90;

        $b18 = $d2 cmpl 1.0E-5;

        $i45 = (int) $b18;

        if $i45 <= 0 goto label07;

        goto label11;

     label07:
        $d3 = (double) f90;

        $b19 = $d3 cmpl -1.0E-5;

        $i46 = (int) $b19;

        if $i46 <= 0 goto label09;

        $f55 = r18.<java.awt.geom.Point2D$Float: float y>;

        $f54 = r16.<java.awt.geom.Point2D$Float: float y>;

        $b20 = $f55 cmpg $f54;

        $i47 = (int) $b20;

        if $i47 >= 0 goto label08;

        r16 = r18;

     label08:
        $i49 = (int) -1;

        i34 = i34 + $i49;

        goto label11;

     label09:
        $i51 = (int) -1;

        i34 = i34 + $i51;

     label10:
        if i34 >= 2 goto label06;

     label11:
        $i36 = i34;

        i34 = i34 + 1;

        r11[$i36] = r16;

        goto label18;

     label12:
        $i11 = i33 - 2;

        r19 = r10[$i11];

        $i12 = i33 - 1;

        r20 = r10[$i12];

        $f27 = r20.<java.awt.geom.Point2D$Float: float x>;

        $f26 = r19.<java.awt.geom.Point2D$Float: float x>;

        f91 = $f27 - $f26;

        $f29 = r20.<java.awt.geom.Point2D$Float: float y>;

        $f28 = r19.<java.awt.geom.Point2D$Float: float y>;

        f92 = $f29 - $f28;

        $f30 = r19.<java.awt.geom.Point2D$Float: float x>;

        $f33 = f92 * $f30;

        $f31 = r19.<java.awt.geom.Point2D$Float: float y>;

        $f32 = f91 * $f31;

        f93 = $f33 - $f32;

        $f34 = r16.<java.awt.geom.Point2D$Float: float y>;

        $f37 = f91 * $f34;

        $f35 = r16.<java.awt.geom.Point2D$Float: float x>;

        $f36 = f92 * $f35;

        $f38 = $f37 - $f36;

        f94 = $f38 + f93;

        $d0 = (double) f94;

        $b13 = $d0 cmpg -1.0E-5;

        $i52 = (int) $b13;

        if $i52 >= 0 goto label13;

        goto label17;

     label13:
        $d1 = (double) f94;

        $b14 = $d1 cmpg 1.0E-5;

        $i53 = (int) $b14;

        if $i53 >= 0 goto label15;

        $f40 = r20.<java.awt.geom.Point2D$Float: float y>;

        $f39 = r16.<java.awt.geom.Point2D$Float: float y>;

        $b15 = $f40 cmpl $f39;

        $i54 = (int) $b15;

        if $i54 <= 0 goto label14;

        r16 = r20;

     label14:
        $i56 = (int) -1;

        i33 = i33 + $i56;

        goto label17;

     label15:
        $i58 = (int) -1;

        i33 = i33 + $i58;

     label16:
        if i33 >= 2 goto label12;

     label17:
        $i37 = i33;

        i33 = i33 + 1;

        r10[$i37] = r16;

     label18:
        i35 = i35 + 1;

     label19:
        $i38 = i0 - 1;

        if i35 < $i38 goto label05;

        $i21 = i0 - 1;

        r21 = r0[$i21];

        goto label23;

     label20:
        $i22 = i34 - 2;

        r22 = r11[$i22];

        $i23 = i34 - 1;

        r23 = r11[$i23];

        $f57 = r23.<java.awt.geom.Point2D$Float: float x>;

        $f56 = r22.<java.awt.geom.Point2D$Float: float x>;

        f95 = $f57 - $f56;

        $f59 = r23.<java.awt.geom.Point2D$Float: float y>;

        $f58 = r22.<java.awt.geom.Point2D$Float: float y>;

        f96 = $f59 - $f58;

        $f60 = r22.<java.awt.geom.Point2D$Float: float x>;

        $f63 = f96 * $f60;

        $f61 = r22.<java.awt.geom.Point2D$Float: float y>;

        $f62 = f95 * $f61;

        f97 = $f63 - $f62;

        $f64 = r21.<java.awt.geom.Point2D$Float: float y>;

        $f67 = f95 * $f64;

        $f65 = r21.<java.awt.geom.Point2D$Float: float x>;

        $f66 = f96 * $f65;

        $f68 = $f67 - $f66;

        f98 = $f68 + f97;

        $d4 = (double) f98;

        $b24 = $d4 cmpl 1.0E-5;

        $i59 = (int) $b24;

        if $i59 <= 0 goto label21;

        goto label27;

     label21:
        $d5 = (double) f98;

        $b25 = $d5 cmpl -1.0E-5;

        $i60 = (int) $b25;

        if $i60 <= 0 goto label22;

        $f70 = r23.<java.awt.geom.Point2D$Float: float y>;

        $f69 = r21.<java.awt.geom.Point2D$Float: float y>;

        $b26 = $f70 cmpl $f69;

        $i61 = (int) $b26;

        if $i61 < 0 goto label27;

        $i63 = (int) -1;

        i34 = i34 + $i63;

        goto label27;

     label22:
        $i65 = (int) -1;

        i34 = i34 + $i65;

     label23:
        if i34 >= 2 goto label20;

        goto label27;

     label24:
        $i27 = i33 - 2;

        r24 = r10[$i27];

        $i28 = i33 - 1;

        r25 = r10[$i28];

        $f72 = r25.<java.awt.geom.Point2D$Float: float x>;

        $f71 = r24.<java.awt.geom.Point2D$Float: float x>;

        f99 = $f72 - $f71;

        $f74 = r25.<java.awt.geom.Point2D$Float: float y>;

        $f73 = r24.<java.awt.geom.Point2D$Float: float y>;

        f100 = $f74 - $f73;

        $f75 = r24.<java.awt.geom.Point2D$Float: float x>;

        $f78 = f100 * $f75;

        $f76 = r24.<java.awt.geom.Point2D$Float: float y>;

        $f77 = f99 * $f76;

        f101 = $f78 - $f77;

        $f79 = r21.<java.awt.geom.Point2D$Float: float y>;

        $f82 = f99 * $f79;

        $f80 = r21.<java.awt.geom.Point2D$Float: float x>;

        $f81 = f100 * $f80;

        $f83 = $f82 - $f81;

        f102 = $f83 + f101;

        $d6 = (double) f102;

        $b29 = $d6 cmpg -1.0E-5;

        $i66 = (int) $b29;

        if $i66 >= 0 goto label25;

        goto label28;

     label25:
        $d7 = (double) f102;

        $b30 = $d7 cmpg 1.0E-5;

        $i67 = (int) $b30;

        if $i67 >= 0 goto label26;

        $f85 = r25.<java.awt.geom.Point2D$Float: float y>;

        $f84 = r21.<java.awt.geom.Point2D$Float: float y>;

        $b31 = $f85 cmpg $f84;

        $i68 = (int) $b31;

        if $i68 > 0 goto label28;

        $i70 = (int) -1;

        i33 = i33 + $i70;

        goto label28;

     label26:
        $i72 = (int) -1;

        i33 = i33 + $i72;

     label27:
        if i33 >= 2 goto label24;

     label28:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r10, 0, r0, 0, i33);

        i39 = i33 + 1;

        $i40 = i0 - 1;

        $r26 = r0[$i40];

        r0[i33] = $r26;

        i41 = i34 - 1;

        goto label30;

     label29:
        $r13 = r11[i41];

        r0[i39] = $r13;

        $i74 = (int) -1;

        i41 = i41 + $i74;

        i39 = i39 + 1;

     label30:
        if i41 > 0 goto label29;

        return i39;
    }

    public static void addPtsToPath(java.awt.geom.GeneralPath, java.awt.geom.Point2D$Float[], java.awt.geom.Point2D$Float[], int)
    {
        byte $b4;
        java.awt.geom.GeneralPath r42, $r74;
        java.awt.geom.Area[] r8;
        int i0, $i1, $i2, $i3, $i5, i6, i7, i8, $i9, $i10;
        java.awt.geom.Point2D$Float[] r0, r1, r2, r5;
        java.awt.geom.Point2D$Float $r3, $r4, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72;
        java.awt.geom.Area $r75;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53, $f54, $f55, $f56, $f57, $f58, $f59, $f60, $f61, $f62, $f63, $f64, $f65, $f66, $f67, $f68, $f69, $f70, $f71, f72, f73, f74, f75, f76, f77, f78, f79, f80, f81, f82, f83, f84, f85, f86;
        double $d0, $d1, $d2, $d3, $d4, $d5;

        r42 := @parameter0: java.awt.geom.GeneralPath;

        r2 := @parameter1: java.awt.geom.Point2D$Float[];

        r5 := @parameter2: java.awt.geom.Point2D$Float[];

        i0 := @parameter3: int;

        if i0 >= 2 goto label1;

        return;

     label1:
        if i0 != 2 goto label2;

        $r63 = r2[0];

        $f63 = $r63.<java.awt.geom.Point2D$Float: float x>;

        $r64 = r2[0];

        $f62 = $r64.<java.awt.geom.Point2D$Float: float y>;

        virtualinvoke r42.<java.awt.geom.GeneralPath: void moveTo(float,float)>($f63, $f62);

        $r65 = r2[1];

        $f65 = $r65.<java.awt.geom.Point2D$Float: float x>;

        $r66 = r2[1];

        $f64 = $r66.<java.awt.geom.Point2D$Float: float y>;

        virtualinvoke r42.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f65, $f64);

        $r67 = r5[1];

        $f67 = $r67.<java.awt.geom.Point2D$Float: float x>;

        $r68 = r5[1];

        $f66 = $r68.<java.awt.geom.Point2D$Float: float y>;

        virtualinvoke r42.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f67, $f66);

        $r69 = r5[0];

        $f69 = $r69.<java.awt.geom.Point2D$Float: float x>;

        $r70 = r5[0];

        $f68 = $r70.<java.awt.geom.Point2D$Float: float y>;

        virtualinvoke r42.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f69, $f68);

        $r71 = r2[0];

        $f71 = $r71.<java.awt.geom.Point2D$Float: float x>;

        $r72 = r2[0];

        $f70 = $r72.<java.awt.geom.Point2D$Float: float y>;

        virtualinvoke r42.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f71, $f70);

        return;

     label2:
        r0 = newarray (java.awt.geom.Point2D$Float)[8];

        r1 = newarray (java.awt.geom.Point2D$Float)[8];

        $r3 = r2[0];

        r0[4] = $r3;

        $r4 = r2[1];

        r0[5] = $r4;

        $r6 = r5[1];

        r0[6] = $r6;

        $r7 = r5[0];

        r0[7] = $r7;

        $i1 = i0 / 2;

        r8 = newarray (java.awt.geom.Area)[$i1];

        i6 = 0;

        i7 = 2;

        goto label9;

     label3:
        $r9 = r0[4];

        r0[0] = $r9;

        $r10 = r0[5];

        r0[1] = $r10;

        $r11 = r0[6];

        r0[2] = $r11;

        $r12 = r0[7];

        r0[3] = $r12;

        $r13 = r2[i7];

        r0[4] = $r13;

        $i2 = i7 + 1;

        $r14 = r2[$i2];

        r0[5] = $r14;

        $i3 = i7 + 1;

        $r15 = r5[$i3];

        r0[6] = $r15;

        $r16 = r5[i7];

        r0[7] = $r16;

        $r17 = r0[2];

        $f1 = $r17.<java.awt.geom.Point2D$Float: float x>;

        $r18 = r0[0];

        $f0 = $r18.<java.awt.geom.Point2D$Float: float x>;

        f72 = $f1 - $f0;

        f73 = f72 * f72;

        $r19 = r0[2];

        $f3 = $r19.<java.awt.geom.Point2D$Float: float y>;

        $r20 = r0[0];

        $f2 = $r20.<java.awt.geom.Point2D$Float: float y>;

        f74 = $f3 - $f2;

        $f4 = f74 * f74;

        f75 = f73 + $f4;

        $d0 = (double) f75;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        f76 = (float) $d1;

        $r21 = r0[6];

        $f6 = $r21.<java.awt.geom.Point2D$Float: float x>;

        $r22 = r0[4];

        $f5 = $r22.<java.awt.geom.Point2D$Float: float x>;

        f77 = $f6 - $f5;

        f78 = f77 * f77;

        $r23 = r0[6];

        $f8 = $r23.<java.awt.geom.Point2D$Float: float y>;

        $r24 = r0[4];

        $f7 = $r24.<java.awt.geom.Point2D$Float: float y>;

        f79 = $f8 - $f7;

        $f9 = f79 * f79;

        f80 = f78 + $f9;

        $d2 = (double) f80;

        $d3 = staticinvoke <java.lang.Math: double sqrt(double)>($d2);

        $f10 = (float) $d3;

        f81 = f76 + $f10;

        $r25 = r0[0];

        $f12 = $r25.<java.awt.geom.Point2D$Float: float x>;

        $r26 = r0[1];

        $f11 = $r26.<java.awt.geom.Point2D$Float: float x>;

        $f14 = $f12 + $f11;

        $r27 = r0[2];

        $f13 = $r27.<java.awt.geom.Point2D$Float: float x>;

        $f16 = $f14 + $f13;

        $r28 = r0[3];

        $f15 = $r28.<java.awt.geom.Point2D$Float: float x>;

        $f24 = $f16 + $f15;

        $r29 = r0[4];

        $f18 = $r29.<java.awt.geom.Point2D$Float: float x>;

        $r30 = r0[5];

        $f17 = $r30.<java.awt.geom.Point2D$Float: float x>;

        $f20 = $f18 + $f17;

        $r31 = r0[6];

        $f19 = $r31.<java.awt.geom.Point2D$Float: float x>;

        $f22 = $f20 + $f19;

        $r32 = r0[7];

        $f21 = $r32.<java.awt.geom.Point2D$Float: float x>;

        $f23 = $f22 + $f21;

        $f25 = $f24 - $f23;

        f82 = $f25 / 4.0F;

        f83 = f82 * f82;

        $r33 = r0[0];

        $f27 = $r33.<java.awt.geom.Point2D$Float: float y>;

        $r34 = r0[1];

        $f26 = $r34.<java.awt.geom.Point2D$Float: float y>;

        $f29 = $f27 + $f26;

        $r35 = r0[2];

        $f28 = $r35.<java.awt.geom.Point2D$Float: float y>;

        $f31 = $f29 + $f28;

        $r36 = r0[3];

        $f30 = $r36.<java.awt.geom.Point2D$Float: float y>;

        $f39 = $f31 + $f30;

        $r37 = r0[4];

        $f33 = $r37.<java.awt.geom.Point2D$Float: float y>;

        $r38 = r0[5];

        $f32 = $r38.<java.awt.geom.Point2D$Float: float y>;

        $f35 = $f33 + $f32;

        $r39 = r0[6];

        $f34 = $r39.<java.awt.geom.Point2D$Float: float y>;

        $f37 = $f35 + $f34;

        $r40 = r0[7];

        $f36 = $r40.<java.awt.geom.Point2D$Float: float y>;

        $f38 = $f37 + $f36;

        $f40 = $f39 - $f38;

        f84 = $f40 / 4.0F;

        $f41 = f84 * f84;

        f85 = f83 + $f41;

        $d4 = (double) f85;

        $d5 = staticinvoke <java.lang.Math: double sqrt(double)>($d4);

        f86 = (float) $d5;

        $r74 = new java.awt.geom.GeneralPath;

        specialinvoke $r74.<java.awt.geom.GeneralPath: void <init>()>();

        $b4 = f86 cmpg f81;

        $i10 = (int) $b4;

        if $i10 >= 0 goto label6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, 8);

        $i5 = staticinvoke <org.apache.batik.gvt.text.GlyphLayout: int makeConvexHull(java.awt.geom.Point2D$Float[],int)>(r1, 8);

        $r59 = r1[0];

        $f59 = $r59.<java.awt.geom.Point2D$Float: float x>;

        $r60 = r1[0];

        $f58 = $r60.<java.awt.geom.Point2D$Float: float y>;

        virtualinvoke $r74.<java.awt.geom.GeneralPath: void moveTo(float,float)>($f59, $f58);

        i8 = 1;

        goto label5;

     label4:
        $r61 = r1[i8];

        $f61 = $r61.<java.awt.geom.Point2D$Float: float x>;

        $r62 = r1[i8];

        $f60 = $r62.<java.awt.geom.Point2D$Float: float y>;

        virtualinvoke $r74.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f61, $f60);

        i8 = i8 + 1;

     label5:
        if i8 < $i5 goto label4;

        virtualinvoke $r74.<java.awt.geom.GeneralPath: void closePath()>();

        goto label8;

     label6:
        staticinvoke <org.apache.batik.gvt.text.GlyphLayout: void mergeAreas(java.awt.geom.GeneralPath,java.awt.geom.Area[],int)>(r42, r8, i6);

        i6 = 0;

        if i7 != 2 goto label7;

        $r51 = r0[0];

        $f51 = $r51.<java.awt.geom.Point2D$Float: float x>;

        $r52 = r0[0];

        $f50 = $r52.<java.awt.geom.Point2D$Float: float y>;

        virtualinvoke $r74.<java.awt.geom.GeneralPath: void moveTo(float,float)>($f51, $f50);

        $r53 = r0[1];

        $f53 = $r53.<java.awt.geom.Point2D$Float: float x>;

        $r54 = r0[1];

        $f52 = $r54.<java.awt.geom.Point2D$Float: float y>;

        virtualinvoke $r74.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f53, $f52);

        $r55 = r0[2];

        $f55 = $r55.<java.awt.geom.Point2D$Float: float x>;

        $r56 = r0[2];

        $f54 = $r56.<java.awt.geom.Point2D$Float: float y>;

        virtualinvoke $r74.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f55, $f54);

        $r57 = r0[3];

        $f57 = $r57.<java.awt.geom.Point2D$Float: float x>;

        $r58 = r0[3];

        $f56 = $r58.<java.awt.geom.Point2D$Float: float y>;

        virtualinvoke $r74.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f57, $f56);

        virtualinvoke $r74.<java.awt.geom.GeneralPath: void closePath()>();

        virtualinvoke r42.<java.awt.geom.GeneralPath: void append(java.awt.Shape,boolean)>($r74, 0);

        virtualinvoke $r74.<java.awt.geom.GeneralPath: void reset()>();

     label7:
        $r43 = r0[4];

        $f43 = $r43.<java.awt.geom.Point2D$Float: float x>;

        $r44 = r0[4];

        $f42 = $r44.<java.awt.geom.Point2D$Float: float y>;

        virtualinvoke $r74.<java.awt.geom.GeneralPath: void moveTo(float,float)>($f43, $f42);

        $r45 = r0[5];

        $f45 = $r45.<java.awt.geom.Point2D$Float: float x>;

        $r46 = r0[5];

        $f44 = $r46.<java.awt.geom.Point2D$Float: float y>;

        virtualinvoke $r74.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f45, $f44);

        $r47 = r0[6];

        $f47 = $r47.<java.awt.geom.Point2D$Float: float x>;

        $r48 = r0[6];

        $f46 = $r48.<java.awt.geom.Point2D$Float: float y>;

        virtualinvoke $r74.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f47, $f46);

        $r49 = r0[7];

        $f49 = $r49.<java.awt.geom.Point2D$Float: float x>;

        $r50 = r0[7];

        $f48 = $r50.<java.awt.geom.Point2D$Float: float y>;

        virtualinvoke $r74.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f49, $f48);

        virtualinvoke $r74.<java.awt.geom.GeneralPath: void closePath()>();

     label8:
        $i9 = i6;

        i6 = i6 + 1;

        $r75 = new java.awt.geom.Area;

        specialinvoke $r75.<java.awt.geom.Area: void <init>(java.awt.Shape)>($r74);

        r8[$i9] = $r75;

        i7 = i7 + 2;

     label9:
        if i7 < i0 goto label3;

        staticinvoke <org.apache.batik.gvt.text.GlyphLayout: void mergeAreas(java.awt.geom.GeneralPath,java.awt.geom.Area[],int)>(r42, r8, i6);

        return;
    }

    public static void mergeAreas(java.awt.geom.GeneralPath, java.awt.geom.Area[], int)
    {
        java.awt.geom.Area $r1, $r2, $r3, $r4, $r5, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;
        java.awt.geom.Area[] r0;
        java.awt.geom.GeneralPath r6;

        r6 := @parameter0: java.awt.geom.GeneralPath;

        r0 := @parameter1: java.awt.geom.Area[];

        i6 := @parameter2: int;

        goto label5;

     label1:
        i7 = 0;

        i8 = 1;

        goto label3;

     label2:
        $i0 = i8 - 1;

        $r2 = r0[$i0];

        $r1 = r0[i8];

        virtualinvoke $r2.<java.awt.geom.Area: void add(java.awt.geom.Area)>($r1);

        $i1 = i7;

        i7 = i7 + 1;

        $i2 = i8 - 1;

        $r3 = r0[$i2];

        r0[$i1] = $r3;

        r0[i8] = null;

        i8 = i8 + 2;

     label3:
        if i8 < i6 goto label2;

        $i3 = i6 & 1;

        if $i3 != 1 goto label4;

        $i4 = i7 - 1;

        $r5 = r0[$i4];

        $i5 = i6 - 1;

        $r4 = r0[$i5];

        virtualinvoke $r5.<java.awt.geom.Area: void add(java.awt.geom.Area)>($r4);

     label4:
        i6 = i6 / 2;

     label5:
        if i6 > 1 goto label1;

        if i6 != 1 goto label6;

        $r7 = r0[0];

        virtualinvoke r6.<java.awt.geom.GeneralPath: void append(java.awt.Shape,boolean)>($r7, 0);

     label6:
        return;
    }

    public org.apache.batik.gvt.text.TextHit hitTestChar(float, float)
    {
        java.awt.geom.Rectangle2D $r5;
        byte $b4;
        org.apache.batik.gvt.font.GVTGlyphVector $r1, $r8;
        int[] $r3, $r4, $r6;
        int $i0, $i1, $i2, $i3, $i5, i6, i7, $i8, $i9;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;
        boolean $z0, $z1, $z2;
        java.awt.Shape $r2;
        org.apache.batik.gvt.text.GlyphLayout r0;
        float f0, f1;
        org.apache.batik.gvt.text.TextHit $r9;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        specialinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: void syncLayout()>();

        i6 = 0;

        i7 = 0;

        goto label8;

     label1:
        $r1 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.Shape getGlyphLogicalBounds(int)>(i7);

        if $r2 == null goto label6;

        $r5 = interfaceinvoke $r2.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>();

        $d1 = (double) f0;

        $d0 = (double) f1;

        $z0 = interfaceinvoke $r2.<java.awt.Shape: boolean contains(double,double)>($d1, $d0);

        if $z0 == 0 goto label6;

        $d2 = (double) f0;

        $d3 = virtualinvoke $r5.<java.awt.geom.RectangularShape: double getX()>();

        $d4 = virtualinvoke $r5.<java.awt.geom.RectangularShape: double getWidth()>();

        $d5 = $d4 / 2.0;

        $d6 = $d3 + $d5;

        $b4 = $d2 cmpl $d6;

        $i9 = (int) $b4;

        if $i9 <= 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        if $z1 != 0 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        $r6 = r0.<org.apache.batik.gvt.text.GlyphLayout: int[] charMap>;

        $i5 = $r6[i6];

        $r9 = new org.apache.batik.gvt.text.TextHit;

        specialinvoke $r9.<org.apache.batik.gvt.text.TextHit: void <init>(int,boolean)>($i5, $z2);

        return $r9;

     label6:
        $i0 = virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: int getCharacterCount(int,int)>(i7, i7);

        $i3 = i6 + $i0;

        i6 = $i3;

        $r3 = r0.<org.apache.batik.gvt.text.GlyphLayout: int[] charMap>;

        $i1 = lengthof $r3;

        if $i3 < $i1 goto label7;

        $r4 = r0.<org.apache.batik.gvt.text.GlyphLayout: int[] charMap>;

        $i2 = lengthof $r4;

        i6 = $i2 - 1;

     label7:
        i7 = i7 + 1;

     label8:
        $r8 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $i8 = interfaceinvoke $r8.<org.apache.batik.gvt.font.GVTGlyphVector: int getNumGlyphs()>();

        if i7 < $i8 goto label1;

        return null;
    }

    protected org.apache.batik.gvt.font.GVTFont getFont()
    {
        org.apache.batik.gvt.font.GVTFont r5;
        java.text.AttributedCharacterIterator$Attribute $r2;
        java.text.AttributedCharacterIterator $r1, $r3, $r7;
        java.util.Map $r8;
        org.apache.batik.gvt.text.GlyphLayout r0;
        org.apache.batik.gvt.font.AWTGVTFont $r6;
        java.lang.Object $r4;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        $r1 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        interfaceinvoke $r1.<java.text.CharacterIterator: char first()>();

        $r3 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        $r2 = <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute GVT_FONT>;

        $r4 = interfaceinvoke $r3.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r2);

        r5 = (org.apache.batik.gvt.font.GVTFont) $r4;

        if r5 == null goto label1;

        return r5;

     label1:
        $r6 = new org.apache.batik.gvt.font.AWTGVTFont;

        $r7 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        $r8 = interfaceinvoke $r7.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>();

        specialinvoke $r6.<org.apache.batik.gvt.font.AWTGVTFont: void <init>(java.util.Map)>($r8);

        return $r6;
    }

    protected java.awt.Shape getOverlineShape()
    {
        java.lang.Float r7;
        java.awt.geom.Point2D $r12, $r13;
        java.awt.geom.Rectangle2D $r10;
        java.awt.Shape $r14;
        java.text.AttributedCharacterIterator $r3, $r5;
        float $f0, $f1, $f2;
        java.awt.BasicStroke $r8;
        java.text.AttributedCharacterIterator$Attribute $r4;
        org.apache.batik.gvt.font.GVTGlyphVector $r9;
        org.apache.batik.gvt.font.GVTLineMetrics $r1, $r2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, d14, d15;
        java.awt.geom.Line2D$Double $r11;
        org.apache.batik.gvt.text.GlyphLayout r0;
        java.lang.Object $r6;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        $r1 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTLineMetrics metrics>;

        $f0 = virtualinvoke $r1.<org.apache.batik.gvt.font.GVTLineMetrics: float getOverlineOffset()>();

        d14 = (double) $f0;

        $r2 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTLineMetrics metrics>;

        $f1 = virtualinvoke $r2.<org.apache.batik.gvt.font.GVTLineMetrics: float getOverlineThickness()>();

        $d0 = (double) $f1;

        d15 = d14 + $d0;

        $r3 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        interfaceinvoke $r3.<java.text.CharacterIterator: char first()>();

        $r5 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        $r4 = <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute DY>;

        $r6 = interfaceinvoke $r5.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r4);

        r7 = (java.lang.Float) $r6;

        if r7 == null goto label1;

        $f2 = virtualinvoke r7.<java.lang.Float: float floatValue()>();

        $d13 = (double) $f2;

        d15 = d15 + $d13;

     label1:
        $r8 = new java.awt.BasicStroke;

        specialinvoke $r8.<java.awt.BasicStroke: void <init>(float)>($f1);

        $r9 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r10 = interfaceinvoke $r9.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.geom.Rectangle2D getLogicalBounds()>();

        $r11 = new java.awt.geom.Line2D$Double;

        $d1 = virtualinvoke $r10.<java.awt.geom.RectangularShape: double getMinX()>();

        $d2 = (double) $f1;

        $d3 = $d2 / 2.0;

        $d4 = $d1 + $d3;

        $r12 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.awt.geom.Point2D offset>;

        $d5 = virtualinvoke $r12.<java.awt.geom.Point2D: double getY()>();

        $d6 = $d5 + d15;

        $d7 = virtualinvoke $r10.<java.awt.geom.RectangularShape: double getMaxX()>();

        $d8 = (double) $f1;

        $d9 = $d8 / 2.0;

        $d10 = $d7 - $d9;

        $r13 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.awt.geom.Point2D offset>;

        $d11 = virtualinvoke $r13.<java.awt.geom.Point2D: double getY()>();

        $d12 = $d11 + d15;

        specialinvoke $r11.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>($d4, $d6, $d10, $d12);

        $r14 = interfaceinvoke $r8.<java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>($r11);

        return $r14;
    }

    protected java.awt.Shape getUnderlineShape()
    {
        java.lang.Float r8;
        java.awt.geom.Point2D $r12, $r13;
        java.awt.geom.Rectangle2D $r10;
        java.awt.Shape $r14;
        java.text.AttributedCharacterIterator $r4, $r6;
        float $f0, $f1, $f2;
        java.awt.BasicStroke $r3;
        java.text.AttributedCharacterIterator$Attribute $r5;
        org.apache.batik.gvt.font.GVTGlyphVector $r9;
        org.apache.batik.gvt.font.GVTLineMetrics $r1, $r2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, d15, d16;
        java.awt.geom.Line2D$Double $r11;
        org.apache.batik.gvt.text.GlyphLayout r0;
        java.lang.Object $r7;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        $r1 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTLineMetrics metrics>;

        $f0 = virtualinvoke $r1.<org.apache.batik.gvt.font.GVTLineMetrics: float getUnderlineOffset()>();

        d15 = (double) $f0;

        $r2 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTLineMetrics metrics>;

        $f1 = virtualinvoke $r2.<org.apache.batik.gvt.font.GVTLineMetrics: float getUnderlineThickness()>();

        $d0 = (double) $f1;

        $d1 = $d0 * 1.5;

        d16 = d15 + $d1;

        $r3 = new java.awt.BasicStroke;

        specialinvoke $r3.<java.awt.BasicStroke: void <init>(float)>($f1);

        $r4 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        interfaceinvoke $r4.<java.text.CharacterIterator: char first()>();

        $r6 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        $r5 = <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute DY>;

        $r7 = interfaceinvoke $r6.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r5);

        r8 = (java.lang.Float) $r7;

        if r8 == null goto label1;

        $f2 = virtualinvoke r8.<java.lang.Float: float floatValue()>();

        $d14 = (double) $f2;

        d16 = d16 + $d14;

     label1:
        $r9 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r10 = interfaceinvoke $r9.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.geom.Rectangle2D getLogicalBounds()>();

        $r11 = new java.awt.geom.Line2D$Double;

        $d2 = virtualinvoke $r10.<java.awt.geom.RectangularShape: double getMinX()>();

        $d3 = (double) $f1;

        $d4 = $d3 / 2.0;

        $d5 = $d2 + $d4;

        $r12 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.awt.geom.Point2D offset>;

        $d6 = virtualinvoke $r12.<java.awt.geom.Point2D: double getY()>();

        $d7 = $d6 + d16;

        $d8 = virtualinvoke $r10.<java.awt.geom.RectangularShape: double getMaxX()>();

        $d9 = (double) $f1;

        $d10 = $d9 / 2.0;

        $d11 = $d8 - $d10;

        $r13 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.awt.geom.Point2D offset>;

        $d12 = virtualinvoke $r13.<java.awt.geom.Point2D: double getY()>();

        $d13 = $d12 + d16;

        specialinvoke $r11.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>($d5, $d7, $d11, $d13);

        $r14 = virtualinvoke $r3.<java.awt.BasicStroke: java.awt.Shape createStrokedShape(java.awt.Shape)>($r11);

        return $r14;
    }

    protected java.awt.Shape getStrikethroughShape()
    {
        java.lang.Float r8;
        java.awt.geom.Point2D $r12, $r13;
        java.awt.geom.Rectangle2D $r10;
        java.awt.Shape $r14;
        java.text.AttributedCharacterIterator $r4, $r6;
        float $f0, $f1, $f2;
        java.awt.BasicStroke $r3;
        java.text.AttributedCharacterIterator$Attribute $r5;
        org.apache.batik.gvt.font.GVTGlyphVector $r9;
        org.apache.batik.gvt.font.GVTLineMetrics $r1, $r2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, d13;
        java.awt.geom.Line2D$Double $r11;
        org.apache.batik.gvt.text.GlyphLayout r0;
        java.lang.Object $r7;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        $r1 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTLineMetrics metrics>;

        $f0 = virtualinvoke $r1.<org.apache.batik.gvt.font.GVTLineMetrics: float getStrikethroughOffset()>();

        d13 = (double) $f0;

        $r2 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTLineMetrics metrics>;

        $f1 = virtualinvoke $r2.<org.apache.batik.gvt.font.GVTLineMetrics: float getStrikethroughThickness()>();

        $r3 = new java.awt.BasicStroke;

        specialinvoke $r3.<java.awt.BasicStroke: void <init>(float)>($f1);

        $r4 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        interfaceinvoke $r4.<java.text.CharacterIterator: char first()>();

        $r6 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        $r5 = <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute DY>;

        $r7 = interfaceinvoke $r6.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r5);

        r8 = (java.lang.Float) $r7;

        if r8 == null goto label1;

        $f2 = virtualinvoke r8.<java.lang.Float: float floatValue()>();

        $d12 = (double) $f2;

        d13 = d13 + $d12;

     label1:
        $r9 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r10 = interfaceinvoke $r9.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.geom.Rectangle2D getLogicalBounds()>();

        $r11 = new java.awt.geom.Line2D$Double;

        $d0 = virtualinvoke $r10.<java.awt.geom.RectangularShape: double getMinX()>();

        $d1 = (double) $f1;

        $d2 = $d1 / 2.0;

        $d3 = $d0 + $d2;

        $r12 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.awt.geom.Point2D offset>;

        $d4 = virtualinvoke $r12.<java.awt.geom.Point2D: double getY()>();

        $d5 = $d4 + d13;

        $d6 = virtualinvoke $r10.<java.awt.geom.RectangularShape: double getMaxX()>();

        $d7 = (double) $f1;

        $d8 = $d7 / 2.0;

        $d9 = $d6 - $d8;

        $r13 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.awt.geom.Point2D offset>;

        $d10 = virtualinvoke $r13.<java.awt.geom.Point2D: double getY()>();

        $d11 = $d10 + d13;

        specialinvoke $r11.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>($d3, $d5, $d9, $d11);

        $r14 = interfaceinvoke $r3.<java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>($r11);

        return $r14;
    }

    protected void doExplicitGlyphLayout()
    {
        java.lang.Integer $r38, $r39;
        float[] $r6;
        java.text.AttributedCharacterIterator$Attribute $r51, $r54, $r57, $r60, $r63, $r66;
        int[] $r15, $r74, $r101, $r105;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15, i16, i17, i18, i20, $i21, $i22, $i23, i25, i26, i27, i28, $i29, $i30, $i31, $i32, $i34, $i36, $i38, $i40, $i42;
        org.apache.batik.gvt.font.GVTLineMetrics $r2, $r3, $r27, $r31, $r32, $r36, $r42, $r43, $r45, $r46, $r47, $r48;
        java.lang.Float $r37, r89, r90, r91, r92, r93;
        org.apache.batik.gvt.font.GVTGlyphMetrics $r13, $r78, $r82;
        java.awt.geom.AffineTransform $r17, $r23, $r25, $r83, $r85, r97, r98, $r107, $r108, $r109, $r110;
        java.awt.geom.Point2D$Float $r106, $r111;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, z23, $z24, $z25, $z26, $z27;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56;
        byte $b13;
        java.awt.geom.Point2D$Double $r112;
        org.apache.batik.gvt.text.GlyphLayout r0;
        java.awt.geom.Point2D $r9, $r10, $r40, $r41, $r70, $r71, $r76, $r80;
        java.text.AttributedCharacterIterator $r7, $r8, $r14, $r50, $r52, $r55, $r58, $r61, $r64, $r67, $r72, $r73;
        java.lang.Object $r53, $r56, $r59, $r62, $r65, r94;
        java.awt.geom.Rectangle2D $r30, $r35, $r44, $r88;
        java.util.Set $r49;
        java.awt.Shape $r29, $r34;
        float $f0, $f1, $f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, f52, f53, f54, f55, f56, f57, f58, f59, f60, f61, f62, $f63, $f64, f65, f66, f67, f68, $f69, $f70, f71, f72;
        org.apache.batik.gvt.font.GVTGlyphVector $r1, $r4, $r5, $r12, $r16, $r22, $r24, $r28, $r33, $r68, $r75, $r77, $r79, $r81, $r84, $r86, $r87, $r96, $r99, $r100, $r103, $r104;
        org.apache.batik.gvt.text.TextPath $r26, $r95;
        char c19, c24;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        $r1 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        interfaceinvoke $r1.<org.apache.batik.gvt.font.GVTGlyphVector: void performDefaultLayout()>();

        $z0 = r0.<org.apache.batik.gvt.text.GlyphLayout: boolean vertical>;

        if $z0 == 0 goto label01;

        $r87 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r88 = interfaceinvoke $r87.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.geom.Rectangle2D getLogicalBounds()>();

        $d47 = virtualinvoke $r88.<java.awt.geom.RectangularShape: double getWidth()>();

        $f51 = (float) $d47;

        goto label02;

     label01:
        $r2 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTLineMetrics metrics>;

        $f0 = virtualinvoke $r2.<org.apache.batik.gvt.font.GVTLineMetrics: float getAscent()>();

        $r3 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTLineMetrics metrics>;

        $f1 = virtualinvoke $r3.<org.apache.batik.gvt.font.GVTLineMetrics: float getDescent()>();

        $f2 = staticinvoke <java.lang.Math: float abs(float)>($f1);

        $f51 = $f0 + $f2;

     label02:
        f3 = $f51;

        $r4 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $i0 = interfaceinvoke $r4.<org.apache.batik.gvt.font.GVTGlyphVector: int getNumGlyphs()>();

        $r5 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $i1 = $i0 + 1;

        $r6 = interfaceinvoke $r5.<org.apache.batik.gvt.font.GVTGlyphVector: float[] getGlyphPositions(int,int,float[])>(0, $i1, null);

        f52 = 0.0F;

        f53 = 0.0F;

        $z1 = virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: boolean isGlyphOrientationAuto()>();

        i16 = 0;

        if $z1 != 0 goto label03;

        i16 = virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: int getGlyphOrientationAngle()>();

     label03:
        i17 = 0;

        $r7 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        $i2 = interfaceinvoke $r7.<java.text.CharacterIterator: int getBeginIndex()>();

        i18 = 0;

        $r8 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        c19 = interfaceinvoke $r8.<java.text.CharacterIterator: char first()>();

        i20 = 0 + $i2;

        r89 = null;

        r90 = null;

        r91 = null;

        r92 = null;

        r93 = null;

        r94 = null;

        f54 = 0.0F;

        f55 = 0.0F;

        $r9 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.awt.geom.Point2D offset>;

        $d0 = virtualinvoke $r9.<java.awt.geom.Point2D: double getX()>();

        f56 = (float) $d0;

        $r10 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.awt.geom.Point2D offset>;

        $d1 = virtualinvoke $r10.<java.awt.geom.Point2D: double getY()>();

        f57 = (float) $d1;

        $r106 = new java.awt.geom.Point2D$Float;

        specialinvoke $r106.<java.awt.geom.Point2D$Float: void <init>()>();

        z23 = 0;

        goto label61;

     label04:
        $i3 = i18 + $i2;

        if $i3 < i20 goto label05;

        $r50 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        $r49 = <org.apache.batik.gvt.text.GlyphLayout: java.util.Set runAtts>;

        i20 = interfaceinvoke $r50.<java.text.AttributedCharacterIterator: int getRunLimit(java.util.Set)>($r49);

        $r52 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        $r51 = <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute X>;

        $r53 = interfaceinvoke $r52.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r51);

        r89 = (java.lang.Float) $r53;

        $r55 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        $r54 = <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute Y>;

        $r56 = interfaceinvoke $r55.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r54);

        r90 = (java.lang.Float) $r56;

        $r58 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        $r57 = <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute DX>;

        $r59 = interfaceinvoke $r58.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r57);

        r91 = (java.lang.Float) $r59;

        $r61 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        $r60 = <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute DY>;

        $r62 = interfaceinvoke $r61.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r60);

        r92 = (java.lang.Float) $r62;

        $r64 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        $r63 = <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute ROTATION>;

        $r65 = interfaceinvoke $r64.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r63);

        r93 = (java.lang.Float) $r65;

        $r67 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        $r66 = <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute BASELINE_SHIFT>;

        r94 = interfaceinvoke $r67.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r66);

     label05:
        $r12 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r13 = interfaceinvoke $r12.<org.apache.batik.gvt.font.GVTGlyphVector: org.apache.batik.gvt.font.GVTGlyphMetrics getGlyphMetrics(int)>(i17);

        if i17 != 0 goto label11;

        $z18 = virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: boolean isVertical()>();

        if $z18 == 0 goto label09;

        if $z1 == 0 goto label07;

        $z19 = virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: boolean isLatinChar(char)>(c19);

        if $z19 == 0 goto label06;

        f52 = 0.0F;

        goto label12;

     label06:
        $f40 = virtualinvoke $r13.<org.apache.batik.gvt.font.GVTGlyphMetrics: float getVerticalAdvance()>();

        $r47 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTLineMetrics metrics>;

        $f41 = virtualinvoke $r47.<org.apache.batik.gvt.font.GVTLineMetrics: float getAscent()>();

        $r48 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTLineMetrics metrics>;

        $f42 = virtualinvoke $r48.<org.apache.batik.gvt.font.GVTLineMetrics: float getDescent()>();

        $f43 = $f41 + $f42;

        $f44 = $f40 - $f43;

        $f45 = $f44 / 2.0F;

        f52 = $f41 + $f45;

        goto label12;

     label07:
        if i16 != 0 goto label08;

        $f34 = virtualinvoke $r13.<org.apache.batik.gvt.font.GVTGlyphMetrics: float getVerticalAdvance()>();

        $r45 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTLineMetrics metrics>;

        $f35 = virtualinvoke $r45.<org.apache.batik.gvt.font.GVTLineMetrics: float getAscent()>();

        $r46 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTLineMetrics metrics>;

        $f36 = virtualinvoke $r46.<org.apache.batik.gvt.font.GVTLineMetrics: float getDescent()>();

        $f37 = $f35 + $f36;

        $f38 = $f34 - $f37;

        $f39 = $f38 / 2.0F;

        f52 = $f35 + $f39;

        goto label12;

     label08:
        f52 = 0.0F;

        goto label12;

     label09:
        if i16 != 270 goto label10;

        $r44 = virtualinvoke $r13.<org.apache.batik.gvt.font.GVTGlyphMetrics: java.awt.geom.Rectangle2D getBounds2D()>();

        $d36 = virtualinvoke $r44.<java.awt.geom.RectangularShape: double getHeight()>();

        f53 = (float) $d36;

        goto label12;

     label10:
        f53 = 0.0F;

        goto label12;

     label11:
        if $z1 == 0 goto label12;

        $b13 = f52 cmpl 0.0F;

        if $b13 != 0 goto label12;

        $z17 = virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: boolean isLatinChar(char)>(c19);

        if $z17 != 0 goto label12;

        $f28 = virtualinvoke $r13.<org.apache.batik.gvt.font.GVTGlyphMetrics: float getVerticalAdvance()>();

        $r42 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTLineMetrics metrics>;

        $f29 = virtualinvoke $r42.<org.apache.batik.gvt.font.GVTLineMetrics: float getAscent()>();

        $r43 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTLineMetrics metrics>;

        $f30 = virtualinvoke $r43.<org.apache.batik.gvt.font.GVTLineMetrics: float getDescent()>();

        $f31 = $f29 + $f30;

        $f32 = $f28 - $f31;

        $f33 = $f32 / 2.0F;

        f52 = $f29 + $f33;

     label12:
        f58 = 0.0F;

        f59 = 0.0F;

        f60 = 0.0F;

        $i32 = (int) c19;

        $i34 = (int) 65535;

        if $i32 == $i34 goto label41;

        $z7 = r0.<org.apache.batik.gvt.text.GlyphLayout: boolean vertical>;

        if $z7 == 0 goto label16;

        if $z1 == 0 goto label14;

        $z16 = virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: boolean isLatinChar(char)>(c19);

        if $z16 == 0 goto label13;

        f61 = 1.5707964F;

        goto label15;

     label13:
        f61 = 0.0F;

        goto label15;

     label14:
        $d34 = (double) i16;

        $d35 = staticinvoke <java.lang.Math: double toRadians(double)>($d34);

        f61 = (float) $d35;

     label15:
        $r95 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.text.TextPath textPath>;

        if $r95 == null goto label17;

        r89 = null;

        goto label17;

     label16:
        $d8 = (double) i16;

        $d9 = staticinvoke <java.lang.Math: double toRadians(double)>($d8);

        f61 = (float) $d9;

        $r26 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.text.TextPath textPath>;

        if $r26 == null goto label17;

        r90 = null;

     label17:
        if r93 == null goto label18;

        $z15 = virtualinvoke r93.<java.lang.Float: boolean isNaN()>();

        if $z15 == 0 goto label19;

     label18:
        f60 = f61;

        goto label20;

     label19:
        $f27 = virtualinvoke r93.<java.lang.Float: float floatValue()>();

        f60 = $f27 + f61;

     label20:
        if r89 == null goto label22;

        $z14 = virtualinvoke r89.<java.lang.Float: boolean isNaN()>();

        if $z14 != 0 goto label22;

        if i17 != 0 goto label21;

        $f26 = virtualinvoke r89.<java.lang.Float: float floatValue()>();

        $d31 = (double) $f26;

        $r41 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.awt.geom.Point2D offset>;

        $d32 = virtualinvoke $r41.<java.awt.geom.Point2D: double getX()>();

        $d33 = $d31 - $d32;

        f54 = (float) $d33;

     label21:
        $f25 = virtualinvoke r89.<java.lang.Float: float floatValue()>();

        f56 = $f25 - f54;

     label22:
        if r91 == null goto label23;

        $z13 = virtualinvoke r91.<java.lang.Float: boolean isNaN()>();

        if $z13 != 0 goto label23;

        $f24 = virtualinvoke r91.<java.lang.Float: float floatValue()>();

        f56 = f56 + $f24;

     label23:
        if r90 == null goto label25;

        $z12 = virtualinvoke r90.<java.lang.Float: boolean isNaN()>();

        if $z12 != 0 goto label25;

        if i17 != 0 goto label24;

        $f23 = virtualinvoke r90.<java.lang.Float: float floatValue()>();

        $d28 = (double) $f23;

        $r40 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.awt.geom.Point2D offset>;

        $d29 = virtualinvoke $r40.<java.awt.geom.Point2D: double getY()>();

        $d30 = $d28 - $d29;

        f55 = (float) $d30;

     label24:
        $f22 = virtualinvoke r90.<java.lang.Float: float floatValue()>();

        f57 = $f22 - f55;

     label25:
        if r92 == null goto label26;

        $z11 = virtualinvoke r92.<java.lang.Float: boolean isNaN()>();

        if $z11 != 0 goto label26;

        $f21 = virtualinvoke r92.<java.lang.Float: float floatValue()>();

        f57 = f57 + $f21;

        goto label27;

     label26:
        if i17 <= 0 goto label27;

        $i9 = i17 * 2;

        $i10 = $i9 + 1;

        $f19 = $r6[$i10];

        $i11 = i17 * 2;

        $i12 = $i11 - 1;

        $f18 = $r6[$i12];

        $f20 = $f19 - $f18;

        f57 = f57 + $f20;

     label27:
        f62 = 0.0F;

        if r94 == null goto label32;

        $z9 = r94 instanceof java.lang.Integer;

        if $z9 == 0 goto label29;

        $r38 = <java.awt.font.TextAttribute: java.lang.Integer SUPERSCRIPT_SUPER>;

        if r94 != $r38 goto label28;

        f62 = f3 * 0.5F;

        goto label30;

     label28:
        $r39 = <java.awt.font.TextAttribute: java.lang.Integer SUPERSCRIPT_SUB>;

        if r94 != $r39 goto label30;

        $f17 = neg f3;

        f62 = $f17 * 0.5F;

        goto label30;

     label29:
        $z10 = r94 instanceof java.lang.Float;

        if $z10 == 0 goto label30;

        $r37 = (java.lang.Float) r94;

        f62 = virtualinvoke $r37.<java.lang.Float: float floatValue()>();

     label30:
        $z24 = r0.<org.apache.batik.gvt.text.GlyphLayout: boolean vertical>;

        if $z24 == 0 goto label31;

        f58 = f62;

        goto label32;

     label31:
        f59 = neg f62;

     label32:
        $z25 = r0.<org.apache.batik.gvt.text.GlyphLayout: boolean vertical>;

        if $z25 == 0 goto label39;

        f59 = f59 + f52;

        if $z1 == 0 goto label34;

        $z8 = virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: boolean isLatinChar(char)>(c19);

        if $z8 == 0 goto label33;

        $r36 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTLineMetrics metrics>;

        $f16 = virtualinvoke $r36.<org.apache.batik.gvt.font.GVTLineMetrics: float getStrikethroughOffset()>();

        f58 = f58 + $f16;

        goto label41;

     label33:
        $r33 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r34 = interfaceinvoke $r33.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.Shape getGlyphVisualBounds(int)>(i17);

        $r35 = interfaceinvoke $r34.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>();

        $d22 = virtualinvoke $r35.<java.awt.geom.RectangularShape: double getMaxX()>();

        $i8 = 2 * i17;

        $f14 = $r6[$i8];

        $d23 = (double) $f14;

        $d24 = $d22 - $d23;

        $d25 = virtualinvoke $r35.<java.awt.geom.RectangularShape: double getWidth()>();

        $d26 = $d25 / 2.0;

        $d27 = $d24 - $d26;

        $f15 = (float) $d27;

        f58 = f58 - $f15;

        goto label41;

     label34:
        $r28 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r29 = interfaceinvoke $r28.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.Shape getGlyphVisualBounds(int)>(i17);

        $r30 = interfaceinvoke $r29.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>();

        if i16 != 0 goto label35;

        $d16 = virtualinvoke $r30.<java.awt.geom.RectangularShape: double getMaxX()>();

        $i7 = 2 * i17;

        $f12 = $r6[$i7];

        $d17 = (double) $f12;

        $d18 = $d16 - $d17;

        $d19 = virtualinvoke $r30.<java.awt.geom.RectangularShape: double getWidth()>();

        $d20 = $d19 / 2.0;

        $d21 = $d18 - $d20;

        $f13 = (float) $d21;

        f58 = f58 - $f13;

        goto label38;

     label35:
        if i16 != 180 goto label36;

        $d10 = virtualinvoke $r30.<java.awt.geom.RectangularShape: double getMaxX()>();

        $i6 = 2 * i17;

        $f10 = $r6[$i6];

        $d11 = (double) $f10;

        $d12 = $d10 - $d11;

        $d13 = virtualinvoke $r30.<java.awt.geom.RectangularShape: double getWidth()>();

        $d14 = $d13 / 2.0;

        $d15 = $d12 - $d14;

        $f11 = (float) $d15;

        f58 = f58 + $f11;

        goto label38;

     label36:
        if i16 != 90 goto label37;

        $r32 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTLineMetrics metrics>;

        $f9 = virtualinvoke $r32.<org.apache.batik.gvt.font.GVTLineMetrics: float getStrikethroughOffset()>();

        f58 = f58 + $f9;

        goto label38;

     label37:
        $r31 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTLineMetrics metrics>;

        $f8 = virtualinvoke $r31.<org.apache.batik.gvt.font.GVTLineMetrics: float getStrikethroughOffset()>();

        f58 = f58 - $f8;

     label38:
        goto label41;

     label39:
        f58 = f58 + f53;

        if i16 != 90 goto label40;

        $f7 = virtualinvoke $r13.<org.apache.batik.gvt.font.GVTGlyphMetrics: float getHorizontalAdvance()>();

        f59 = f59 - $f7;

        goto label41;

     label40:
        if i16 != 180 goto label41;

        $r27 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTLineMetrics metrics>;

        $f6 = virtualinvoke $r27.<org.apache.batik.gvt.font.GVTLineMetrics: float getAscent()>();

        f59 = f59 - $f6;

     label41:
        $f63 = f56 + f58;

        $r106.<java.awt.geom.Point2D$Float: float x> = $f63;

        $f64 = f57 + f59;

        $r106.<java.awt.geom.Point2D$Float: float y> = $f64;

        $r96 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        interfaceinvoke $r96.<org.apache.batik.gvt.font.GVTGlyphVector: void setGlyphPosition(int,java.awt.geom.Point2D)>(i17, $r106);

        $z26 = staticinvoke <org.apache.batik.gvt.text.ArabicTextHandler: boolean arabicCharTransparent(char)>(c19);

        if $z26 == 0 goto label42;

        z23 = 1;

        goto label53;

     label42:
        $z2 = r0.<org.apache.batik.gvt.text.GlyphLayout: boolean vertical>;

        if $z2 == 0 goto label49;

        if $z1 == 0 goto label44;

        $z6 = virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: boolean isLatinChar(char)>(c19);

        if $z6 == 0 goto label43;

        f65 = virtualinvoke $r13.<org.apache.batik.gvt.font.GVTGlyphMetrics: float getHorizontalAdvance()>();

        goto label48;

     label43:
        f65 = virtualinvoke $r13.<org.apache.batik.gvt.font.GVTGlyphMetrics: float getVerticalAdvance()>();

        goto label48;

     label44:
        if i16 == 0 goto label45;

        if i16 != 180 goto label46;

     label45:
        f65 = virtualinvoke $r13.<org.apache.batik.gvt.font.GVTGlyphMetrics: float getVerticalAdvance()>();

        goto label48;

     label46:
        if i16 != 90 goto label47;

        f65 = virtualinvoke $r13.<org.apache.batik.gvt.font.GVTGlyphMetrics: float getHorizontalAdvance()>();

        goto label48;

     label47:
        $f5 = virtualinvoke $r13.<org.apache.batik.gvt.font.GVTGlyphMetrics: float getHorizontalAdvance()>();

        f65 = $f5;

        $r24 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $d7 = (double) $f5;

        $r25 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>(0.0, $d7);

        interfaceinvoke $r24.<org.apache.batik.gvt.font.GVTGlyphVector: void setGlyphTransform(int,java.awt.geom.AffineTransform)>(i17, $r25);

     label48:
        f57 = f57 + f65;

        goto label53;

     label49:
        if i16 != 0 goto label50;

        f66 = virtualinvoke $r13.<org.apache.batik.gvt.font.GVTGlyphMetrics: float getHorizontalAdvance()>();

        goto label52;

     label50:
        if i16 != 180 goto label51;

        $f4 = virtualinvoke $r13.<org.apache.batik.gvt.font.GVTGlyphMetrics: float getHorizontalAdvance()>();

        f66 = $f4;

        $r22 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $d6 = (double) $f4;

        $r23 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>($d6, 0.0);

        interfaceinvoke $r22.<org.apache.batik.gvt.font.GVTGlyphVector: void setGlyphTransform(int,java.awt.geom.AffineTransform)>(i17, $r23);

        goto label52;

     label51:
        f66 = virtualinvoke $r13.<org.apache.batik.gvt.font.GVTGlyphMetrics: float getVerticalAdvance()>();

     label52:
        f56 = f56 + f66;

     label53:
        $d48 = (double) f60;

        $z27 = staticinvoke <org.apache.batik.gvt.text.GlyphLayout: boolean epsEQ(double,double)>($d48, 0.0);

        if $z27 != 0 goto label59;

        $r16 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r17 = interfaceinvoke $r16.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.geom.AffineTransform getGlyphTransform(int)>(i17);

        r97 = $r17;

        if $r17 != null goto label54;

        $r107 = new java.awt.geom.AffineTransform;

        specialinvoke $r107.<java.awt.geom.AffineTransform: void <init>()>();

        r97 = $r107;

     label54:
        $d2 = (double) f60;

        $z3 = staticinvoke <org.apache.batik.gvt.text.GlyphLayout: boolean epsEQ(double,double)>($d2, 1.5707963267948966);

        if $z3 == 0 goto label55;

        $r108 = new java.awt.geom.AffineTransform;

        specialinvoke $r108.<java.awt.geom.AffineTransform: void <init>(float,float,float,float,float,float)>(0.0F, 1.0F, -1.0F, 0.0F, 0.0F, 0.0F);

        r98 = $r108;

        goto label58;

     label55:
        $d3 = (double) f60;

        $z4 = staticinvoke <org.apache.batik.gvt.text.GlyphLayout: boolean epsEQ(double,double)>($d3, 3.141592653589793);

        if $z4 == 0 goto label56;

        $r109 = new java.awt.geom.AffineTransform;

        specialinvoke $r109.<java.awt.geom.AffineTransform: void <init>(float,float,float,float,float,float)>(-1.0F, 0.0F, 0.0F, -1.0F, 0.0F, 0.0F);

        r98 = $r109;

        goto label58;

     label56:
        $d4 = (double) f60;

        $z5 = staticinvoke <org.apache.batik.gvt.text.GlyphLayout: boolean epsEQ(double,double)>($d4, 4.71238898038469);

        if $z5 == 0 goto label57;

        $r110 = new java.awt.geom.AffineTransform;

        specialinvoke $r110.<java.awt.geom.AffineTransform: void <init>(float,float,float,float,float,float)>(0.0F, -1.0F, 1.0F, 0.0F, 0.0F, 0.0F);

        r98 = $r110;

        goto label58;

     label57:
        $d5 = (double) f60;

        r98 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getRotateInstance(double)>($d5);

     label58:
        virtualinvoke r97.<java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>(r98);

        $r99 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        interfaceinvoke $r99.<org.apache.batik.gvt.font.GVTGlyphVector: void setGlyphTransform(int,java.awt.geom.AffineTransform)>(i17, r97);

     label59:
        $r100 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $i21 = interfaceinvoke $r100.<org.apache.batik.gvt.font.GVTGlyphVector: int getCharacterCount(int,int)>(i17, i17);

        $i22 = i18 + $i21;

        i18 = $i22;

        $r101 = r0.<org.apache.batik.gvt.text.GlyphLayout: int[] charMap>;

        $i23 = lengthof $r101;

        if $i22 < $i23 goto label60;

        $r15 = r0.<org.apache.batik.gvt.text.GlyphLayout: int[] charMap>;

        $i5 = lengthof $r15;

        i18 = $i5 - 1;

     label60:
        $r14 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        $i4 = i18 + $i2;

        c19 = interfaceinvoke $r14.<java.text.CharacterIterator: char setIndex(int)>($i4);

        i17 = i17 + 1;

     label61:
        if i17 < $i0 goto label04;

        $r106.<java.awt.geom.Point2D$Float: float x> = f56;

        $r106.<java.awt.geom.Point2D$Float: float y> = f57;

        $r68 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        interfaceinvoke $r68.<org.apache.batik.gvt.font.GVTGlyphVector: void setGlyphPosition(int,java.awt.geom.Point2D)>(i17, $r106);

        $r111 = new java.awt.geom.Point2D$Float;

        $d37 = (double) f56;

        $r70 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.awt.geom.Point2D offset>;

        $d38 = virtualinvoke $r70.<java.awt.geom.Point2D: double getX()>();

        $d39 = $d37 - $d38;

        $f46 = (float) $d39;

        $d40 = (double) f57;

        $r71 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.awt.geom.Point2D offset>;

        $d41 = virtualinvoke $r71.<java.awt.geom.Point2D: double getY()>();

        $d42 = $d40 - $d41;

        $f47 = (float) $d42;

        specialinvoke $r111.<java.awt.geom.Point2D$Float: void <init>(float,float)>($f46, $f47);

        r0.<org.apache.batik.gvt.text.GlyphLayout: java.awt.geom.Point2D advance> = $r111;

        if z23 == 0 goto label89;

        $r72 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        c24 = interfaceinvoke $r72.<java.text.CharacterIterator: char first()>();

        i25 = 0;

        i26 = 0;

        $i36 = (int) -1;

        i27 = $i36;

        goto label88;

     label62:
        $z20 = staticinvoke <org.apache.batik.gvt.text.ArabicTextHandler: boolean arabicCharTransparent(char)>(c24);

        if $z20 == 0 goto label63;

        $i38 = (int) -1;

        if i27 != $i38 goto label86;

        i27 = i26;

        goto label86;

     label63:
        $i40 = (int) -1;

        if i27 == $i40 goto label86;

        $r75 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r76 = interfaceinvoke $r75.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.geom.Point2D getGlyphPosition(int)>(i26);

        $r77 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r78 = interfaceinvoke $r77.<org.apache.batik.gvt.font.GVTGlyphVector: org.apache.batik.gvt.font.GVTGlyphMetrics getGlyphMetrics(int)>(i26);

        f67 = 0.0F;

        f68 = 0.0F;

        $z21 = r0.<org.apache.batik.gvt.text.GlyphLayout: boolean vertical>;

        if $z21 == 0 goto label68;

        if $z1 != 0 goto label64;

        if i16 != 90 goto label65;

     label64:
        f68 = virtualinvoke $r78.<org.apache.batik.gvt.font.GVTGlyphMetrics: float getHorizontalAdvance()>();

        goto label72;

     label65:
        if i16 != 270 goto label66;

        f68 = 0.0F;

        goto label72;

     label66:
        if i16 != 0 goto label67;

        f67 = virtualinvoke $r78.<org.apache.batik.gvt.font.GVTGlyphMetrics: float getHorizontalAdvance()>();

        goto label72;

     label67:
        $f50 = virtualinvoke $r78.<org.apache.batik.gvt.font.GVTGlyphMetrics: float getHorizontalAdvance()>();

        f67 = neg $f50;

        goto label72;

     label68:
        if i16 != 0 goto label69;

        f67 = virtualinvoke $r78.<org.apache.batik.gvt.font.GVTGlyphMetrics: float getHorizontalAdvance()>();

        goto label72;

     label69:
        if i16 != 90 goto label70;

        f68 = virtualinvoke $r78.<org.apache.batik.gvt.font.GVTGlyphMetrics: float getHorizontalAdvance()>();

        goto label72;

     label70:
        if i16 != 180 goto label71;

        f67 = 0.0F;

        goto label72;

     label71:
        $f48 = virtualinvoke $r78.<org.apache.batik.gvt.font.GVTGlyphMetrics: float getHorizontalAdvance()>();

        f68 = neg $f48;

     label72:
        $d49 = virtualinvoke $r76.<java.awt.geom.Point2D: double getX()>();

        $d50 = (double) f67;

        $d51 = $d49 + $d50;

        $f69 = (float) $d51;

        $d52 = virtualinvoke $r76.<java.awt.geom.Point2D: double getY()>();

        $d53 = (double) f68;

        $d54 = $d52 + $d53;

        $f70 = (float) $d54;

        i28 = i27;

        goto label85;

     label73:
        $r79 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r80 = interfaceinvoke $r79.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.geom.Point2D getGlyphPosition(int)>(i28);

        $r81 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r82 = interfaceinvoke $r81.<org.apache.batik.gvt.font.GVTGlyphVector: org.apache.batik.gvt.font.GVTGlyphMetrics getGlyphMetrics(int)>(i28);

        $d43 = virtualinvoke $r80.<java.awt.geom.Point2D: double getX()>();

        f71 = (float) $d43;

        $d44 = virtualinvoke $r80.<java.awt.geom.Point2D: double getY()>();

        f72 = (float) $d44;

        $f49 = virtualinvoke $r82.<org.apache.batik.gvt.font.GVTGlyphMetrics: float getHorizontalAdvance()>();

        $z22 = r0.<org.apache.batik.gvt.text.GlyphLayout: boolean vertical>;

        if $z22 == 0 goto label78;

        if $z1 != 0 goto label74;

        if i16 != 90 goto label75;

     label74:
        f72 = $f70 - $f49;

        goto label82;

     label75:
        if i16 != 270 goto label76;

        f72 = $f70 + $f49;

        goto label82;

     label76:
        if i16 != 0 goto label77;

        f71 = $f69 - $f49;

        goto label82;

     label77:
        f71 = $f69 + $f49;

        goto label82;

     label78:
        if i16 != 0 goto label79;

        f71 = $f69 - $f49;

        goto label82;

     label79:
        if i16 != 90 goto label80;

        f72 = $f70 - $f49;

        goto label82;

     label80:
        if i16 != 180 goto label81;

        f71 = $f69 + $f49;

        goto label82;

     label81:
        f72 = $f70 + $f49;

     label82:
        $r112 = new java.awt.geom.Point2D$Double;

        $d55 = (double) f71;

        $d56 = (double) f72;

        specialinvoke $r112.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d55, $d56);

        $r103 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        interfaceinvoke $r103.<org.apache.batik.gvt.font.GVTGlyphVector: void setGlyphPosition(int,java.awt.geom.Point2D)>(i28, $r112);

        if 0 != 0 goto label83;

        if 0 == 0 goto label84;

     label83:
        $d46 = (double) 0.0F;

        $d45 = (double) 0.0F;

        $r83 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>($d46, $d45);

        $r84 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r85 = interfaceinvoke $r84.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.geom.AffineTransform getGlyphTransform(int)>(i26);

        virtualinvoke $r83.<java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>($r85);

        $r86 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        interfaceinvoke $r86.<org.apache.batik.gvt.font.GVTGlyphVector: void setGlyphTransform(int,java.awt.geom.AffineTransform)>(i26, $r83);

     label84:
        i28 = i28 + 1;

     label85:
        if i28 < i26 goto label73;

        $i42 = (int) -1;

        i27 = $i42;

     label86:
        $r104 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $i29 = interfaceinvoke $r104.<org.apache.batik.gvt.font.GVTGlyphVector: int getCharacterCount(int,int)>(i26, i26);

        $i30 = i25 + $i29;

        i25 = $i30;

        $r105 = r0.<org.apache.batik.gvt.text.GlyphLayout: int[] charMap>;

        $i31 = lengthof $r105;

        if $i30 < $i31 goto label87;

        $r74 = r0.<org.apache.batik.gvt.text.GlyphLayout: int[] charMap>;

        $i15 = lengthof $r74;

        i25 = $i15 - 1;

     label87:
        $r73 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        $i14 = i25 + $i2;

        c24 = interfaceinvoke $r73.<java.text.CharacterIterator: char setIndex(int)>($i14);

        i26 = i26 + 1;

     label88:
        if i26 < $i0 goto label62;

     label89:
        r0.<org.apache.batik.gvt.text.GlyphLayout: boolean layoutApplied> = 1;

        r0.<org.apache.batik.gvt.text.GlyphLayout: boolean spacingApplied> = 0;

        r0.<org.apache.batik.gvt.text.GlyphLayout: float[] glyphAdvances> = null;

        r0.<org.apache.batik.gvt.text.GlyphLayout: boolean pathApplied> = 0;

        return;
    }

    protected void adjustTextSpacing()
    {
        java.lang.Float $r10, $r14, $r16;
        java.awt.geom.Point2D $r17;
        java.lang.Boolean $r18;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.text.AttributedCharacterIterator $r1, $r3, $r6, $r9, $r13;
        org.apache.batik.gvt.text.GlyphLayout r0;
        org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute $r2, $r5, $r8, $r12;
        java.lang.Object $r4, $r7, $r11, $r15;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        $z0 = r0.<org.apache.batik.gvt.text.GlyphLayout: boolean spacingApplied>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = r0.<org.apache.batik.gvt.text.GlyphLayout: boolean layoutApplied>;

        if $z1 != 0 goto label2;

        virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: void doExplicitGlyphLayout()>();

     label2:
        $r1 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        interfaceinvoke $r1.<java.text.CharacterIterator: char first()>();

        $r3 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        $r2 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute CUSTOM_SPACING>;

        $r4 = interfaceinvoke $r3.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r2);

        $r18 = (java.lang.Boolean) $r4;

        if $r18 == null goto label3;

        $z2 = virtualinvoke $r18.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 == 0 goto label3;

        $r6 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        $r5 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute KERNING>;

        $r7 = interfaceinvoke $r6.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r5);

        $r10 = (java.lang.Float) $r7;

        $r9 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        $r8 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute LETTER_SPACING>;

        $r11 = interfaceinvoke $r9.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r8);

        $r14 = (java.lang.Float) $r11;

        $r13 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        $r12 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute WORD_SPACING>;

        $r15 = interfaceinvoke $r13.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r12);

        $r16 = (java.lang.Float) $r15;

        $r17 = virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: java.awt.geom.Point2D doSpacing(java.lang.Float,java.lang.Float,java.lang.Float)>($r10, $r14, $r16);

        r0.<org.apache.batik.gvt.text.GlyphLayout: java.awt.geom.Point2D advance> = $r17;

        r0.<org.apache.batik.gvt.text.GlyphLayout: boolean layoutApplied> = 0;

     label3:
        $z3 = r0.<org.apache.batik.gvt.text.GlyphLayout: boolean adjSpacing>;

        if $z3 != 0 goto label4;

        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: void applyStretchTransform(boolean)>($z4);

        r0.<org.apache.batik.gvt.text.GlyphLayout: boolean spacingApplied> = 1;

        r0.<org.apache.batik.gvt.text.GlyphLayout: boolean pathApplied> = 0;

        return;
    }

    protected java.awt.geom.Point2D doSpacing(java.lang.Float, java.lang.Float, java.lang.Float)
    {
        byte $b2;
        java.awt.geom.Point2D$Double $r55, $r60;
        org.apache.batik.gvt.text.GlyphLayout r3;
        java.awt.geom.Point2D[] $r37;
        java.awt.geom.Point2D $r5, $r7, $r9, $r11, $r13, $r16, $r24, $r26, $r27, $r30, $r32, $r33, $r39, r40, $r43, $r45, $r46, $r48, r52, r53;
        int $i0, $i1, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12, $i13, i14, $i15, i16, i17, i18, i19, i20, i21, i22, $i24, $i26, $i28, $i29;
        java.lang.Float r0, r1, r2;
        java.awt.geom.Rectangle2D $r18;
        org.apache.batik.gvt.font.GVTGlyphMetrics r54;
        java.lang.Exception $r35;
        java.awt.geom.Point2D$Float $r56, $r57, $r58, $r59;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, z8, z9, $z10, z11, z12, z13, z14, z15;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, f24, f25, $f26, f27, $f28, f29, f30, f31, f32, f33, $f34, $f35, f36, f37, f38, f39, f40, f41, f42, f43;
        org.apache.batik.gvt.font.GVTFont $r50;
        org.apache.batik.gvt.font.GVTGlyphVector $r4, $r6, $r8, $r10, $r12, $r15, $r17, $r19, $r20, $r23, $r28, $r29, $r31, $r34, $r36, $r38, $r41, $r44, $r47, $r49;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60;

        r3 := @this: org.apache.batik.gvt.text.GlyphLayout;

        r0 := @parameter0: java.lang.Float;

        r1 := @parameter1: java.lang.Float;

        r2 := @parameter2: java.lang.Float;

        z7 = 1;

        z15 = 1;

        z14 = 1;

        z8 = 0;

        z9 = 0;

        f24 = 0.0F;

        f25 = 0.0F;

        if r0 == null goto label01;

        $z6 = virtualinvoke r0.<java.lang.Float: boolean isNaN()>();

        if $z6 != 0 goto label01;

        f24 = virtualinvoke r0.<java.lang.Float: float floatValue()>();

        z7 = 0;

        z15 = 0;

        z14 = 0;

     label01:
        if r1 == null goto label02;

        $z5 = virtualinvoke r1.<java.lang.Float: boolean isNaN()>();

        if $z5 != 0 goto label02;

        f25 = virtualinvoke r1.<java.lang.Float: float floatValue()>();

        z9 = 1;

     label02:
        if r2 == null goto label03;

        $z4 = virtualinvoke r2.<java.lang.Float: boolean isNaN()>();

        if $z4 != 0 goto label03;

        z8 = 1;

     label03:
        $r36 = r3.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $i9 = interfaceinvoke $r36.<org.apache.batik.gvt.font.GVTGlyphVector: int getNumGlyphs()>();

        $i10 = $i9 + 1;

        $r37 = newarray (java.awt.geom.Point2D)[$i10];

        $r38 = r3.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r39 = interfaceinvoke $r38.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.geom.Point2D getGlyphPosition(int)>(0);

        r40 = $r39;

        $r41 = r3.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        i11 = interfaceinvoke $r41.<org.apache.batik.gvt.font.GVTGlyphVector: int getGlyphCode(int)>(0);

        $d49 = virtualinvoke $r39.<java.awt.geom.Point2D: double getX()>();

        $f26 = (float) $d49;

        f27 = $f26;

        $d50 = virtualinvoke $r39.<java.awt.geom.Point2D: double getY()>();

        $f28 = (float) $d50;

        f29 = $f28;

        $r55 = new java.awt.geom.Point2D$Double;

        $r43 = r3.<org.apache.batik.gvt.text.GlyphLayout: java.awt.geom.Point2D advance>;

        $d51 = virtualinvoke $r43.<java.awt.geom.Point2D: double getX()>();

        $r44 = r3.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $i12 = $i9 - 1;

        $r45 = interfaceinvoke $r44.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.geom.Point2D getGlyphPosition(int)>($i12);

        $d52 = virtualinvoke $r45.<java.awt.geom.Point2D: double getX()>();

        $d53 = (double) $f26;

        $d54 = $d52 - $d53;

        $d55 = $d51 - $d54;

        $r46 = r3.<org.apache.batik.gvt.text.GlyphLayout: java.awt.geom.Point2D advance>;

        $d56 = virtualinvoke $r46.<java.awt.geom.Point2D: double getY()>();

        $r47 = r3.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $i13 = $i9 - 1;

        $r48 = interfaceinvoke $r47.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.geom.Point2D getGlyphPosition(int)>($i13);

        $d57 = virtualinvoke $r48.<java.awt.geom.Point2D: double getY()>();

        $d58 = (double) $f28;

        $d59 = $d57 - $d58;

        $d60 = $d56 - $d59;

        specialinvoke $r55.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d55, $d60);

     label04:
        $r49 = r3.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r50 = interfaceinvoke $r49.<org.apache.batik.gvt.font.GVTGlyphVector: org.apache.batik.gvt.font.GVTFont getFont()>();

        if $i9 <= 1 goto label19;

        if z9 != 0 goto label05;

        if z14 != 0 goto label19;

     label05:
        i14 = 1;

        goto label15;

     label06:
        $r29 = r3.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r30 = interfaceinvoke $r29.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.geom.Point2D getGlyphPosition(int)>(i14);

        if i14 != $i9 goto label07;

        $i24 = (int) -1;

        $i15 = $i24;

        goto label08;

     label07:
        $r31 = r3.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $i15 = interfaceinvoke $r31.<org.apache.batik.gvt.font.GVTGlyphVector: int getGlyphCode(int)>(i14);

     label08:
        i16 = $i15;

        $d43 = virtualinvoke $r30.<java.awt.geom.Point2D: double getX()>();

        $f14 = (float) $d43;

        $d44 = virtualinvoke r40.<java.awt.geom.Point2D: double getX()>();

        $f15 = (float) $d44;

        $f22 = $f14 - $f15;

        f30 = $f22;

        $d45 = virtualinvoke $r30.<java.awt.geom.Point2D: double getY()>();

        $f16 = (float) $d45;

        $d46 = virtualinvoke r40.<java.awt.geom.Point2D: double getY()>();

        $f17 = (float) $d46;

        $f23 = $f16 - $f17;

        f31 = $f23;

        if z15 == 0 goto label10;

        $z3 = r3.<org.apache.batik.gvt.text.GlyphLayout: boolean vertical>;

        if $z3 == 0 goto label09;

        f31 = $f23 + f25;

        goto label14;

     label09:
        f30 = $f22 + f25;

        goto label14;

     label10:
        $z2 = r3.<org.apache.batik.gvt.text.GlyphLayout: boolean vertical>;

        if $z2 == 0 goto label12;

        f32 = 0.0F;

        $i26 = (int) -1;

        if $i15 == $i26 goto label11;

        f32 = interfaceinvoke $r50.<org.apache.batik.gvt.font.GVTFont: float getVKern(int,int)>(i11, $i15);

     label11:
        $f20 = f24 - f32;

        $f21 = $f20 + f25;

        f31 = $f23 + $f21;

        goto label14;

     label12:
        f33 = 0.0F;

        $i28 = (int) -1;

        if $i15 == $i28 goto label13;

        f33 = interfaceinvoke $r50.<org.apache.batik.gvt.font.GVTFont: float getHKern(int,int)>(i11, $i15);

     label13:
        $f18 = f24 - f33;

        $f19 = $f18 + f25;

        f30 = $f22 + $f19;

     label14:
        $f34 = f27 + f30;

        f27 = $f34;

        $f35 = f29 + f31;

        f29 = $f35;

        $r56 = new java.awt.geom.Point2D$Float;

        specialinvoke $r56.<java.awt.geom.Point2D$Float: void <init>(float,float)>($f34, $f35);

        $r37[i14] = $r56;

        r40 = $r30;

        i11 = i16;

        i14 = i14 + 1;

     label15:
        if i14 <= $i9 goto label06;

        i17 = 1;

        goto label18;

     label16:
        $r32 = $r37[i17];

        if $r32 == null goto label17;

        $r34 = r3.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r33 = $r37[i17];

        interfaceinvoke $r34.<org.apache.batik.gvt.font.GVTGlyphVector: void setGlyphPosition(int,java.awt.geom.Point2D)>(i17, $r33);

     label17:
        i17 = i17 + 1;

     label18:
        if i17 <= $i9 goto label16;

     label19:
        $z10 = r3.<org.apache.batik.gvt.text.GlyphLayout: boolean vertical>;

        if $z10 == 0 goto label20;

        $d37 = virtualinvoke $r55.<java.awt.geom.Point2D: double getX()>();

        $d38 = virtualinvoke $r55.<java.awt.geom.Point2D: double getY()>();

        $d39 = (double) f24;

        $d41 = $d38 + $d39;

        $d40 = (double) f25;

        $d42 = $d41 + $d40;

        virtualinvoke $r55.<java.awt.geom.Point2D: void setLocation(double,double)>($d37, $d42);

        goto label21;

     label20:
        $d0 = virtualinvoke $r55.<java.awt.geom.Point2D: double getX()>();

        $d1 = (double) f24;

        $d3 = $d0 + $d1;

        $d2 = (double) f25;

        $d4 = $d3 + $d2;

        $d5 = virtualinvoke $r55.<java.awt.geom.Point2D: double getY()>();

        virtualinvoke $r55.<java.awt.geom.Point2D: void setLocation(double,double)>($d4, $d5);

     label21:
        $r4 = r3.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r5 = interfaceinvoke $r4.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.geom.Point2D getGlyphPosition(int)>(0);

        r52 = $r5;

        $d6 = virtualinvoke $r5.<java.awt.geom.Point2D: double getX()>();

        f36 = (float) $d6;

        $d7 = virtualinvoke $r5.<java.awt.geom.Point2D: double getY()>();

        f37 = (float) $d7;

        if $i9 <= 1 goto label38;

        if z8 == 0 goto label38;

        i18 = 1;

        goto label34;

     label22:
        $r15 = r3.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r16 = interfaceinvoke $r15.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.geom.Point2D getGlyphPosition(int)>(i18);

        r53 = $r16;

        virtualinvoke $r16.<java.awt.geom.Point2D: double getX()>();

        virtualinvoke r52.<java.awt.geom.Point2D: double getX()>();

        virtualinvoke $r16.<java.awt.geom.Point2D: double getY()>();

        virtualinvoke r52.<java.awt.geom.Point2D: double getY()>();

        z11 = 0;

        z13 = 0;

        z12 = 0;

        i19 = i18;

        i20 = i18;

        $r17 = r3.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        r54 = interfaceinvoke $r17.<org.apache.batik.gvt.font.GVTGlyphVector: org.apache.batik.gvt.font.GVTGlyphMetrics getGlyphMetrics(int)>(i18);

        goto label26;

     label23:
        if z13 != 0 goto label24;

        z11 = 1;

        z13 = 1;

        z12 = 1;

     label24:
        $i3 = $i9 - 1;

        if i18 != $i3 goto label25;

        goto label27;

     label25:
        i18 = i18 + 1;

        i20 = i20 + 1;

        $r19 = r3.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        r53 = interfaceinvoke $r19.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.geom.Point2D getGlyphPosition(int)>(i18);

        $r20 = r3.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        r54 = interfaceinvoke $r20.<org.apache.batik.gvt.font.GVTGlyphVector: org.apache.batik.gvt.font.GVTGlyphMetrics getGlyphMetrics(int)>(i18);

     label26:
        $r18 = virtualinvoke r54.<org.apache.batik.gvt.font.GVTGlyphMetrics: java.awt.geom.Rectangle2D getBounds2D()>();

        $d16 = virtualinvoke $r18.<java.awt.geom.RectangularShape: double getWidth()>();

        $b2 = $d16 cmpg 0.01;

        $i29 = (int) $b2;

        if $i29 < 0 goto label23;

        $z1 = virtualinvoke r54.<org.apache.batik.gvt.font.GVTGlyphMetrics: boolean isWhitespace()>();

        if $z1 != 0 goto label23;

     label27:
        if z12 == 0 goto label32;

        i4 = i20 - i19;

        $d23 = virtualinvoke r52.<java.awt.geom.Point2D: double getX()>();

        f0 = (float) $d23;

        $d24 = virtualinvoke r52.<java.awt.geom.Point2D: double getY()>();

        f1 = (float) $d24;

        $d25 = virtualinvoke r53.<java.awt.geom.Point2D: double getX()>();

        $d26 = (double) f0;

        $d27 = $d25 - $d26;

        $f3 = (float) $d27;

        $i5 = i4 + 1;

        $f2 = (float) $i5;

        f38 = $f3 / $f2;

        $d28 = virtualinvoke r53.<java.awt.geom.Point2D: double getY()>();

        $d29 = (double) f1;

        $d30 = $d28 - $d29;

        $f5 = (float) $d30;

        $i6 = i4 + 1;

        $f4 = (float) $i6;

        f39 = $f5 / $f4;

        $z0 = r3.<org.apache.batik.gvt.text.GlyphLayout: boolean vertical>;

        if $z0 == 0 goto label28;

        $f9 = virtualinvoke r2.<java.lang.Float: float floatValue()>();

        $i8 = i4 + 1;

        $f10 = (float) $i8;

        $f11 = $f9 / $f10;

        f39 = f39 + $f11;

        goto label29;

     label28:
        $f6 = virtualinvoke r2.<java.lang.Float: float floatValue()>();

        $i7 = i4 + 1;

        $f7 = (float) $i7;

        $f8 = $f6 / $f7;

        f38 = f38 + $f8;

     label29:
        i21 = i19;

        goto label31;

     label30:
        f36 = f36 + f38;

        f37 = f37 + f39;

        $r57 = new java.awt.geom.Point2D$Float;

        specialinvoke $r57.<java.awt.geom.Point2D$Float: void <init>(float,float)>(f36, f37);

        $r37[i21] = $r57;

        i21 = i21 + 1;

     label31:
        if i21 <= i20 goto label30;

        goto label33;

     label32:
        $d17 = virtualinvoke r53.<java.awt.geom.Point2D: double getX()>();

        $d18 = virtualinvoke r52.<java.awt.geom.Point2D: double getX()>();

        $d19 = $d17 - $d18;

        f40 = (float) $d19;

        $d20 = virtualinvoke r53.<java.awt.geom.Point2D: double getY()>();

        $d21 = virtualinvoke r52.<java.awt.geom.Point2D: double getY()>();

        $d22 = $d20 - $d21;

        f41 = (float) $d22;

        f36 = f36 + f40;

        f37 = f37 + f41;

        $r58 = new java.awt.geom.Point2D$Float;

        specialinvoke $r58.<java.awt.geom.Point2D$Float: void <init>(float,float)>(f36, f37);

        $r37[i18] = $r58;

     label33:
        r52 = r53;

        i18 = i18 + 1;

     label34:
        if i18 < $i9 goto label22;

        $r23 = r3.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r24 = interfaceinvoke $r23.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.geom.Point2D getGlyphPosition(int)>($i9);

        $d31 = virtualinvoke $r24.<java.awt.geom.Point2D: double getX()>();

        $d32 = virtualinvoke r52.<java.awt.geom.Point2D: double getX()>();

        $d33 = $d31 - $d32;

        $f12 = (float) $d33;

        f42 = f36 + $f12;

        $d34 = virtualinvoke $r24.<java.awt.geom.Point2D: double getY()>();

        $d35 = virtualinvoke r52.<java.awt.geom.Point2D: double getY()>();

        $d36 = $d34 - $d35;

        $f13 = (float) $d36;

        f43 = f37 + $f13;

        $r59 = new java.awt.geom.Point2D$Float;

        specialinvoke $r59.<java.awt.geom.Point2D$Float: void <init>(float,float)>(f42, f43);

        $r37[$i9] = $r59;

        i22 = 1;

        goto label37;

     label35:
        $r26 = $r37[i22];

        if $r26 == null goto label36;

        $r28 = r3.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r27 = $r37[i22];

        interfaceinvoke $r28.<org.apache.batik.gvt.font.GVTGlyphVector: void setGlyphPosition(int,java.awt.geom.Point2D)>(i22, $r27);

     label36:
        i22 = i22 + 1;

     label37:
        if i22 <= $i9 goto label35;

     label38:
        goto label40;

     label39:
        $r35 := @caughtexception;

        virtualinvoke $r35.<java.lang.Throwable: void printStackTrace()>();

     label40:
        $r6 = r3.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $i0 = $i9 - 1;

        $r7 = interfaceinvoke $r6.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.geom.Point2D getGlyphPosition(int)>($i0);

        $d8 = virtualinvoke $r7.<java.awt.geom.Point2D: double getX()>();

        $r8 = r3.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r9 = interfaceinvoke $r8.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.geom.Point2D getGlyphPosition(int)>(0);

        $d9 = virtualinvoke $r9.<java.awt.geom.Point2D: double getX()>();

        $d47 = $d8 - $d9;

        $r10 = r3.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $i1 = $i9 - 1;

        $r11 = interfaceinvoke $r10.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.geom.Point2D getGlyphPosition(int)>($i1);

        $d10 = virtualinvoke $r11.<java.awt.geom.Point2D: double getY()>();

        $r12 = r3.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r13 = interfaceinvoke $r12.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.geom.Point2D getGlyphPosition(int)>(0);

        $d11 = virtualinvoke $r13.<java.awt.geom.Point2D: double getY()>();

        $d48 = $d10 - $d11;

        $r60 = new java.awt.geom.Point2D$Double;

        $d12 = virtualinvoke $r55.<java.awt.geom.Point2D: double getX()>();

        $d13 = $d47 + $d12;

        $d14 = virtualinvoke $r55.<java.awt.geom.Point2D: double getY()>();

        $d15 = $d48 + $d14;

        specialinvoke $r60.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d13, $d15);

        return $r60;

        catch java.lang.Exception from label04 to label38 with label39;
    }

    protected void applyStretchTransform(boolean)
    {
        java.awt.geom.Point2D $r12, $r13;
        byte $b0, $b6;
        boolean z0;
        java.awt.geom.AffineTransform $r1, $r8;
        float $f0, $f1, $f2, $f3, f4, $f5, f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19;
        float[] $r4;
        org.apache.batik.gvt.font.GVTGlyphVector $r2, $r3, $r6, $r7, $r9, $r10;
        int $i1, $i2, $i3, $i4, $i5, i7;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        java.awt.geom.Point2D$Float $r5, $r11;
        org.apache.batik.gvt.text.GlyphLayout r0;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        z0 := @parameter0: boolean;

        $f0 = r0.<org.apache.batik.gvt.text.GlyphLayout: float xScale>;

        $b0 = $f0 cmpl 1.0F;

        if $b0 != 0 goto label1;

        $f17 = r0.<org.apache.batik.gvt.text.GlyphLayout: float yScale>;

        $b6 = $f17 cmpl 1.0F;

        if $b6 != 0 goto label1;

        return;

     label1:
        $f1 = r0.<org.apache.batik.gvt.text.GlyphLayout: float xScale>;

        $d1 = (double) $f1;

        $f2 = r0.<org.apache.batik.gvt.text.GlyphLayout: float yScale>;

        $d0 = (double) $f2;

        $r1 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>($d1, $d0);

        $r2 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $i1 = interfaceinvoke $r2.<org.apache.batik.gvt.font.GVTGlyphVector: int getNumGlyphs()>();

        $r3 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $i2 = $i1 + 1;

        $r4 = interfaceinvoke $r3.<org.apache.batik.gvt.font.GVTGlyphVector: float[] getGlyphPositions(int,int,float[])>(0, $i2, null);

        $f18 = $r4[0];

        $f19 = $r4[1];

        $r5 = new java.awt.geom.Point2D$Float;

        specialinvoke $r5.<java.awt.geom.Point2D$Float: void <init>()>();

        i7 = 0;

        goto label5;

     label2:
        $i3 = 2 * i7;

        $f3 = $r4[$i3];

        f4 = $f3 - $f18;

        $i4 = 2 * i7;

        $i5 = $i4 + 1;

        $f5 = $r4[$i5];

        f6 = $f5 - $f19;

        $f7 = r0.<org.apache.batik.gvt.text.GlyphLayout: float xScale>;

        $f8 = f4 * $f7;

        $f9 = $f18 + $f8;

        $r5.<java.awt.geom.Point2D$Float: float x> = $f9;

        $f10 = r0.<org.apache.batik.gvt.text.GlyphLayout: float yScale>;

        $f11 = f6 * $f10;

        $f12 = $f19 + $f11;

        $r5.<java.awt.geom.Point2D$Float: float y> = $f12;

        $r6 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        interfaceinvoke $r6.<org.apache.batik.gvt.font.GVTGlyphVector: void setGlyphPosition(int,java.awt.geom.Point2D)>(i7, $r5);

        if z0 == 0 goto label4;

        if i7 == $i1 goto label4;

        $r7 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r8 = interfaceinvoke $r7.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.geom.AffineTransform getGlyphTransform(int)>(i7);

        if $r8 == null goto label3;

        virtualinvoke $r8.<java.awt.geom.AffineTransform: void preConcatenate(java.awt.geom.AffineTransform)>($r1);

        $r10 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        interfaceinvoke $r10.<org.apache.batik.gvt.font.GVTGlyphVector: void setGlyphTransform(int,java.awt.geom.AffineTransform)>(i7, $r8);

        goto label4;

     label3:
        $r9 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        interfaceinvoke $r9.<org.apache.batik.gvt.font.GVTGlyphVector: void setGlyphTransform(int,java.awt.geom.AffineTransform)>(i7, $r1);

     label4:
        i7 = i7 + 1;

     label5:
        if i7 <= $i1 goto label2;

        $r11 = new java.awt.geom.Point2D$Float;

        $r12 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.awt.geom.Point2D advance>;

        $d2 = virtualinvoke $r12.<java.awt.geom.Point2D: double getX()>();

        $f13 = r0.<org.apache.batik.gvt.text.GlyphLayout: float xScale>;

        $d3 = (double) $f13;

        $d4 = $d2 * $d3;

        $f14 = (float) $d4;

        $r13 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.awt.geom.Point2D advance>;

        $d5 = virtualinvoke $r13.<java.awt.geom.Point2D: double getY()>();

        $f15 = r0.<org.apache.batik.gvt.text.GlyphLayout: float yScale>;

        $d6 = (double) $f15;

        $d7 = $d5 * $d6;

        $f16 = (float) $d7;

        specialinvoke $r11.<java.awt.geom.Point2D$Float: void <init>(float,float)>($f14, $f16);

        r0.<org.apache.batik.gvt.text.GlyphLayout: java.awt.geom.Point2D advance> = $r11;

        r0.<org.apache.batik.gvt.text.GlyphLayout: boolean layoutApplied> = 0;

        return;
    }

    protected void doPathLayout()
    {
        byte $b1, $b2, $b5, $b6;
        java.awt.geom.Point2D$Double $r41, $r42, $r43;
        org.apache.batik.gvt.text.GlyphLayout r0;
        java.awt.geom.Point2D $r8, $r10, $r14, $r16, $r21, $r35;
        int[] $r24, $r26;
        java.text.AttributedCharacterIterator $r11, $r12, $r25;
        int $i0, $i3, $i4, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15, $i17, $i18, $i19, $i21;
        java.awt.geom.Rectangle2D $r7, $r19, $r39;
        java.awt.geom.AffineTransform $r30, $r40;
        boolean $z0, $z1, $z2, z3, $z4, $z5;
        java.awt.Shape $r18;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21;
        org.apache.batik.gvt.font.GVTGlyphVector $r4, $r5, $r6, $r9, $r13, $r15, $r17, $r22, $r23, $r29, $r31, $r32, $r34, $r38;
        org.apache.batik.gvt.text.TextPath $r1, $r2, $r3, $r20, $r27;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        $z0 = r0.<org.apache.batik.gvt.text.GlyphLayout: boolean pathApplied>;

        if $z0 == 0 goto label01;

        return;

     label01:
        $z1 = r0.<org.apache.batik.gvt.text.GlyphLayout: boolean spacingApplied>;

        if $z1 != 0 goto label02;

        virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: void adjustTextSpacing()>();

     label02:
        virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: float[] getGlyphAdvances()>();

        $r1 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.text.TextPath textPath>;

        if $r1 != null goto label03;

        r0.<org.apache.batik.gvt.text.GlyphLayout: boolean pathApplied> = 1;

        return;

     label03:
        $z2 = virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: boolean isVertical()>();

        if $z2 != 0 goto label04;

        $z5 = 1;

        goto label05;

     label04:
        $z5 = 0;

     label05:
        z3 = $z5;

        $z4 = virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: boolean isGlyphOrientationAuto()>();

        if $z4 != 0 goto label06;

        virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: int getGlyphOrientationAngle()>();

     label06:
        $r2 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.text.TextPath textPath>;

        $f0 = virtualinvoke $r2.<org.apache.batik.gvt.text.TextPath: float lengthOfPath()>();

        $r3 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.text.TextPath textPath>;

        $f1 = virtualinvoke $r3.<org.apache.batik.gvt.text.TextPath: float getStartOffset()>();

        $r4 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $i0 = interfaceinvoke $r4.<org.apache.batik.gvt.font.GVTGlyphVector: int getNumGlyphs()>();

        i12 = 0;

        goto label08;

     label07:
        $r5 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        interfaceinvoke $r5.<org.apache.batik.gvt.font.GVTGlyphVector: void setGlyphVisible(int,boolean)>(i12, 1);

        i12 = i12 + 1;

     label08:
        if i12 < $i0 goto label07;

        if z3 == 0 goto label09;

        $r38 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r39 = interfaceinvoke $r38.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.geom.Rectangle2D getLogicalBounds()>();

        $d46 = virtualinvoke $r39.<java.awt.geom.RectangularShape: double getWidth()>();

        f11 = (float) $d46;

        goto label10;

     label09:
        $r6 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r7 = interfaceinvoke $r6.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.geom.Rectangle2D getLogicalBounds()>();

        $d0 = virtualinvoke $r7.<java.awt.geom.RectangularShape: double getHeight()>();

        f11 = (float) $d0;

     label10:
        $b1 = $f0 cmpl 0.0F;

        if $b1 == 0 goto label11;

        $b2 = f11 cmpl 0.0F;

        if $b2 != 0 goto label12;

     label11:
        r0.<org.apache.batik.gvt.text.GlyphLayout: boolean pathApplied> = 1;

        $r8 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.awt.geom.Point2D advance>;

        r0.<org.apache.batik.gvt.text.GlyphLayout: java.awt.geom.Point2D textPathAdvance> = $r8;

        return;

     label12:
        $r9 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r10 = interfaceinvoke $r9.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.geom.Point2D getGlyphPosition(int)>(0);

        if z3 == 0 goto label13;

        $d42 = virtualinvoke $r10.<java.awt.geom.Point2D: double getY()>();

        f12 = (float) $d42;

        $d43 = virtualinvoke $r10.<java.awt.geom.Point2D: double getX()>();

        $d44 = (double) $f1;

        $d45 = $d43 + $d44;

        f13 = (float) $d45;

        goto label14;

     label13:
        $d1 = virtualinvoke $r10.<java.awt.geom.Point2D: double getX()>();

        f12 = (float) $d1;

        $d2 = virtualinvoke $r10.<java.awt.geom.Point2D: double getY()>();

        $d3 = (double) $f1;

        $d4 = $d2 + $d3;

        f13 = (float) $d4;

     label14:
        $r11 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        interfaceinvoke $r11.<java.text.CharacterIterator: char first()>();

        $r12 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        $i3 = interfaceinvoke $r12.<java.text.CharacterIterator: int getBeginIndex()>();

        i13 = 0;

        $i17 = (int) -1;

        i14 = $i17;

        f14 = 0.0F;

        i15 = 0;

        goto label32;

     label15:
        $r13 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r14 = interfaceinvoke $r13.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.geom.Point2D getGlyphPosition(int)>(i15);

        $r15 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $i4 = i15 + 1;

        $r16 = interfaceinvoke $r15.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.geom.Point2D getGlyphPosition(int)>($i4);

        if z3 == 0 goto label16;

        $d28 = virtualinvoke $r16.<java.awt.geom.Point2D: double getX()>();

        $d29 = virtualinvoke $r14.<java.awt.geom.Point2D: double getX()>();

        $d30 = $d28 - $d29;

        f15 = (float) $d30;

        $d31 = virtualinvoke $r16.<java.awt.geom.Point2D: double getY()>();

        $d32 = virtualinvoke $r14.<java.awt.geom.Point2D: double getY()>();

        $d33 = $d31 - $d32;

        f16 = (float) $d33;

        goto label17;

     label16:
        $d5 = virtualinvoke $r16.<java.awt.geom.Point2D: double getY()>();

        $d6 = virtualinvoke $r14.<java.awt.geom.Point2D: double getY()>();

        $d7 = $d5 - $d6;

        f15 = (float) $d7;

        $d8 = virtualinvoke $r16.<java.awt.geom.Point2D: double getX()>();

        $d9 = virtualinvoke $r14.<java.awt.geom.Point2D: double getX()>();

        $d10 = $d8 - $d9;

        f16 = (float) $d10;

     label17:
        $r17 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r18 = interfaceinvoke $r17.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.Shape getGlyphOutline(int)>(i15);

        $r19 = interfaceinvoke $r18.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>();

        $d11 = virtualinvoke $r19.<java.awt.geom.RectangularShape: double getWidth()>();

        $f9 = (float) $d11;

        $d12 = virtualinvoke $r19.<java.awt.geom.RectangularShape: double getHeight()>();

        $f10 = (float) $d12;

        f17 = 0.0F;

        $b5 = $f9 cmpl 0.0F;

        $i18 = (int) $b5;

        if $i18 <= 0 goto label18;

        $d24 = virtualinvoke $r19.<java.awt.geom.RectangularShape: double getX()>();

        $f7 = $f9 / 2.0F;

        $d25 = (double) $f7;

        $d26 = $d24 + $d25;

        f18 = (float) $d26;

        $d27 = virtualinvoke $r14.<java.awt.geom.Point2D: double getX()>();

        $f8 = (float) $d27;

        f17 = f18 - $f8;

     label18:
        f19 = 0.0F;

        $b6 = $f10 cmpl 0.0F;

        $i19 = (int) $b6;

        if $i19 <= 0 goto label19;

        $d20 = virtualinvoke $r19.<java.awt.geom.RectangularShape: double getY()>();

        $f5 = $f10 / 2.0F;

        $d21 = (double) $f5;

        $d22 = $d20 + $d21;

        f20 = (float) $d22;

        $d23 = virtualinvoke $r14.<java.awt.geom.Point2D: double getY()>();

        $f6 = (float) $d23;

        f19 = f20 - $f6;

     label19:
        if z3 == 0 goto label20;

        f21 = f13 + f17;

        goto label21;

     label20:
        f21 = f13 + f19;

     label21:
        $r20 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.text.TextPath textPath>;

        $r21 = virtualinvoke $r20.<org.apache.batik.gvt.text.TextPath: java.awt.geom.Point2D pointAtLength(float)>(f21);

        if $r21 == null goto label29;

        $r27 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.text.TextPath textPath>;

        $f2 = virtualinvoke $r27.<org.apache.batik.gvt.text.TextPath: float angleAtLength(float)>(f21);

        $r40 = new java.awt.geom.AffineTransform;

        specialinvoke $r40.<java.awt.geom.AffineTransform: void <init>()>();

        if z3 == 0 goto label22;

        $d19 = (double) $f2;

        virtualinvoke $r40.<java.awt.geom.AffineTransform: void rotate(double)>($d19);

        goto label23;

     label22:
        $d13 = (double) $f2;

        $d14 = $d13 - 1.5707963267948966;

        virtualinvoke $r40.<java.awt.geom.AffineTransform: void rotate(double)>($d14);

     label23:
        if z3 == 0 goto label24;

        $d18 = (double) f12;

        virtualinvoke $r40.<java.awt.geom.AffineTransform: void translate(double,double)>(0.0, $d18);

        goto label25;

     label24:
        $d15 = (double) f12;

        virtualinvoke $r40.<java.awt.geom.AffineTransform: void translate(double,double)>($d15, 0.0);

     label25:
        if z3 == 0 goto label26;

        $f4 = neg f17;

        $d17 = (double) $f4;

        virtualinvoke $r40.<java.awt.geom.AffineTransform: void translate(double,double)>($d17, 0.0);

        goto label27;

     label26:
        $f3 = neg f19;

        $d16 = (double) $f3;

        virtualinvoke $r40.<java.awt.geom.AffineTransform: void translate(double,double)>(0.0, $d16);

     label27:
        $r29 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r30 = interfaceinvoke $r29.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.geom.AffineTransform getGlyphTransform(int)>(i15);

        if $r30 == null goto label28;

        virtualinvoke $r40.<java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>($r30);

     label28:
        $r31 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        interfaceinvoke $r31.<org.apache.batik.gvt.font.GVTGlyphVector: void setGlyphTransform(int,java.awt.geom.AffineTransform)>(i15, $r40);

        $r32 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        interfaceinvoke $r32.<org.apache.batik.gvt.font.GVTGlyphVector: void setGlyphPosition(int,java.awt.geom.Point2D)>(i15, $r21);

        i14 = i15;

        f14 = f15;

        goto label30;

     label29:
        $r22 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        interfaceinvoke $r22.<org.apache.batik.gvt.font.GVTGlyphVector: void setGlyphVisible(int,boolean)>(i15, 0);

     label30:
        f13 = f13 + f15;

        f12 = f12 + f16;

        $r23 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $i7 = interfaceinvoke $r23.<org.apache.batik.gvt.font.GVTGlyphVector: int getCharacterCount(int,int)>(i15, i15);

        $i11 = i13 + $i7;

        i13 = $i11;

        $r24 = r0.<org.apache.batik.gvt.text.GlyphLayout: int[] charMap>;

        $i8 = lengthof $r24;

        if $i11 < $i8 goto label31;

        $r26 = r0.<org.apache.batik.gvt.text.GlyphLayout: int[] charMap>;

        $i10 = lengthof $r26;

        i13 = $i10 - 1;

     label31:
        $r25 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        $i9 = i13 + $i3;

        interfaceinvoke $r25.<java.text.CharacterIterator: char setIndex(int)>($i9);

        i15 = i15 + 1;

     label32:
        if i15 < $i0 goto label15;

        $i21 = (int) -1;

        if i14 <= $i21 goto label35;

        $r34 = r0.<org.apache.batik.gvt.text.GlyphLayout: org.apache.batik.gvt.font.GVTGlyphVector gv>;

        $r35 = interfaceinvoke $r34.<org.apache.batik.gvt.font.GVTGlyphVector: java.awt.geom.Point2D getGlyphPosition(int)>(i14);

        if z3 == 0 goto label33;

        $r41 = new java.awt.geom.Point2D$Double;

        $d38 = virtualinvoke $r35.<java.awt.geom.Point2D: double getX()>();

        $d39 = (double) f14;

        $d40 = $d38 + $d39;

        $d41 = virtualinvoke $r35.<java.awt.geom.Point2D: double getY()>();

        specialinvoke $r41.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d40, $d41);

        r0.<org.apache.batik.gvt.text.GlyphLayout: java.awt.geom.Point2D textPathAdvance> = $r41;

        goto label34;

     label33:
        $r42 = new java.awt.geom.Point2D$Double;

        $d34 = virtualinvoke $r35.<java.awt.geom.Point2D: double getX()>();

        $d35 = virtualinvoke $r35.<java.awt.geom.Point2D: double getY()>();

        $d36 = (double) f14;

        $d37 = $d35 + $d36;

        specialinvoke $r42.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d34, $d37);

        r0.<org.apache.batik.gvt.text.GlyphLayout: java.awt.geom.Point2D textPathAdvance> = $r42;

     label34:
        goto label36;

     label35:
        $r43 = new java.awt.geom.Point2D$Double;

        specialinvoke $r43.<java.awt.geom.Point2D$Double: void <init>(double,double)>(0.0, 0.0);

        r0.<org.apache.batik.gvt.text.GlyphLayout: java.awt.geom.Point2D textPathAdvance> = $r43;

     label36:
        r0.<org.apache.batik.gvt.text.GlyphLayout: boolean layoutApplied> = 0;

        r0.<org.apache.batik.gvt.text.GlyphLayout: boolean spacingApplied> = 0;

        r0.<org.apache.batik.gvt.text.GlyphLayout: boolean pathApplied> = 1;

        return;
    }

    protected boolean isLatinChar(char)
    {
        char c0;
        java.lang.Character$UnicodeBlock $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        org.apache.batik.gvt.text.GlyphLayout r9;
        int $i1;
        boolean $z0;

        r9 := @this: org.apache.batik.gvt.text.GlyphLayout;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        if $i1 >= 255 goto label1;

        $z0 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>(c0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r0 = staticinvoke <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock of(char)>(c0);

        $r1 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock BASIC_LATIN>;

        if $r0 == $r1 goto label2;

        $r2 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock LATIN_1_SUPPLEMENT>;

        if $r0 == $r2 goto label2;

        $r3 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock LATIN_EXTENDED_ADDITIONAL>;

        if $r0 == $r3 goto label2;

        $r4 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock LATIN_EXTENDED_A>;

        if $r0 == $r4 goto label2;

        $r5 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock LATIN_EXTENDED_B>;

        if $r0 == $r5 goto label2;

        $r6 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock ARABIC>;

        if $r0 == $r6 goto label2;

        $r7 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock ARABIC_PRESENTATION_FORMS_A>;

        if $r0 == $r7 goto label2;

        $r8 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock ARABIC_PRESENTATION_FORMS_B>;

        if $r0 != $r8 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    protected boolean isGlyphOrientationAuto()
    {
        java.lang.Integer r5, $r6;
        java.text.AttributedCharacterIterator$Attribute $r2;
        java.text.AttributedCharacterIterator $r1, $r3;
        org.apache.batik.gvt.text.GlyphLayout r0;
        java.lang.Object $r4;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        $z0 = virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: boolean isVertical()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        interfaceinvoke $r1.<java.text.CharacterIterator: char first()>();

        $r3 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        $r2 = <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute VERTICAL_ORIENTATION>;

        $r4 = interfaceinvoke $r3.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r2);

        r5 = (java.lang.Integer) $r4;

        if r5 == null goto label4;

        $r6 = <org.apache.batik.gvt.text.GlyphLayout: java.lang.Integer ORIENTATION_AUTO>;

        if r5 != $r6 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;

     label4:
        return 1;
    }

    protected int getGlyphOrientationAngle()
    {
        java.lang.Float r8;
        java.text.AttributedCharacterIterator$Attribute $r2, $r5;
        java.text.AttributedCharacterIterator $r1, $r3, $r6;
        org.apache.batik.gvt.text.GlyphLayout r0;
        int i0;
        float $f0;
        java.lang.Object $r4, $r7;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        i0 = 0;

        $r1 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        interfaceinvoke $r1.<java.text.CharacterIterator: char first()>();

        $z0 = virtualinvoke r0.<org.apache.batik.gvt.text.GlyphLayout: boolean isVertical()>();

        if $z0 == 0 goto label01;

        $r6 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        $r5 = <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute VERTICAL_ORIENTATION_ANGLE>;

        $r7 = interfaceinvoke $r6.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r5);

        r8 = (java.lang.Float) $r7;

        goto label02;

     label01:
        $r3 = r0.<org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator aci>;

        $r2 = <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute HORIZONTAL_ORIENTATION_ANGLE>;

        $r4 = interfaceinvoke $r3.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r2);

        r8 = (java.lang.Float) $r4;

     label02:
        if r8 == null goto label03;

        $f0 = virtualinvoke r8.<java.lang.Float: float floatValue()>();

        i0 = (int) $f0;

     label03:
        if i0 != 0 goto label05;

        if i0 != 90 goto label05;

        if i0 != 180 goto label05;

        if i0 == 270 goto label12;

        goto label05;

     label04:
        i0 = i0 + 360;

     label05:
        if i0 < 0 goto label04;

        goto label07;

     label06:
        i0 = i0 - 360;

     label07:
        if i0 >= 360 goto label06;

        if i0 <= 45 goto label08;

        if i0 <= 315 goto label09;

     label08:
        i0 = 0;

        goto label12;

     label09:
        if i0 <= 45 goto label10;

        if i0 > 135 goto label10;

        i0 = 90;

        goto label12;

     label10:
        if i0 <= 135 goto label11;

        if i0 > 225 goto label11;

        i0 = 180;

        goto label12;

     label11:
        i0 = 270;

     label12:
        return i0;
    }

    public boolean hasCharacterIndex(int)
    {
        int[] $r1, $r2;
        org.apache.batik.gvt.text.GlyphLayout r0;
        int $i0, i1, $i2, i3;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        i1 := @parameter0: int;

        i3 = 0;

        goto label3;

     label1:
        $r2 = r0.<org.apache.batik.gvt.text.GlyphLayout: int[] charMap>;

        $i2 = $r2[i3];

        if i1 != $i2 goto label2;

        return 1;

     label2:
        i3 = i3 + 1;

     label3:
        $r1 = r0.<org.apache.batik.gvt.text.GlyphLayout: int[] charMap>;

        $i0 = lengthof $r1;

        if i3 < $i0 goto label1;

        return 0;
    }

    public boolean isAltGlyph()
    {
        org.apache.batik.gvt.text.GlyphLayout r0;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.text.GlyphLayout;

        $z0 = r0.<org.apache.batik.gvt.text.GlyphLayout: boolean isAltGlyph>;

        return $z0;
    }

    static void <clinit>()
    {
        java.lang.Integer $r14, $r15;
        java.util.Set $r19, $r21, $r23, $r25, $r27, $r29, $r32, $r34, $r36;
        org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r16;
        java.awt.font.TextAttribute $r31;
        java.util.HashSet $r17, $r30;
        java.text.AttributedCharacterIterator$Attribute $r18, $r20, $r22, $r24, $r26, $r28, $r33, $r35;

        <org.apache.batik.gvt.text.GlyphLayout: double eps> = 1.0E-5;

        $r0 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute FLOW_LINE_BREAK>;

        <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute FLOW_LINE_BREAK> = $r0;

        $r1 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute FLOW_PARAGRAPH>;

        <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute FLOW_PARAGRAPH> = $r1;

        $r2 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute FLOW_EMPTY_PARAGRAPH>;

        <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute FLOW_EMPTY_PARAGRAPH> = $r2;

        $r3 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute LINE_HEIGHT>;

        <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute LINE_HEIGHT> = $r3;

        $r4 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute VERTICAL_ORIENTATION>;

        <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute VERTICAL_ORIENTATION> = $r4;

        $r5 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute VERTICAL_ORIENTATION_ANGLE>;

        <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute VERTICAL_ORIENTATION_ANGLE> = $r5;

        $r6 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute HORIZONTAL_ORIENTATION_ANGLE>;

        <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute HORIZONTAL_ORIENTATION_ANGLE> = $r6;

        $r7 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute X>;

        <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute X> = $r7;

        $r8 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute Y>;

        <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute Y> = $r8;

        $r9 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute DX>;

        <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute DX> = $r9;

        $r10 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute DY>;

        <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute DY> = $r10;

        $r11 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute ROTATION>;

        <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute ROTATION> = $r11;

        $r12 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute BASELINE_SHIFT>;

        <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute BASELINE_SHIFT> = $r12;

        $r13 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute WRITING_MODE>;

        <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute WRITING_MODE> = $r13;

        $r14 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: java.lang.Integer WRITING_MODE_TTB>;

        <org.apache.batik.gvt.text.GlyphLayout: java.lang.Integer WRITING_MODE_TTB> = $r14;

        $r15 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: java.lang.Integer ORIENTATION_AUTO>;

        <org.apache.batik.gvt.text.GlyphLayout: java.lang.Integer ORIENTATION_AUTO> = $r15;

        $r16 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute GVT_FONT>;

        <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute GVT_FONT> = $r16;

        $r17 = new java.util.HashSet;

        specialinvoke $r17.<java.util.HashSet: void <init>()>();

        <org.apache.batik.gvt.text.GlyphLayout: java.util.Set runAtts> = $r17;

        $r19 = <org.apache.batik.gvt.text.GlyphLayout: java.util.Set runAtts>;

        $r18 = <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute X>;

        interfaceinvoke $r19.<java.util.Set: boolean add(java.lang.Object)>($r18);

        $r21 = <org.apache.batik.gvt.text.GlyphLayout: java.util.Set runAtts>;

        $r20 = <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute Y>;

        interfaceinvoke $r21.<java.util.Set: boolean add(java.lang.Object)>($r20);

        $r23 = <org.apache.batik.gvt.text.GlyphLayout: java.util.Set runAtts>;

        $r22 = <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute DX>;

        interfaceinvoke $r23.<java.util.Set: boolean add(java.lang.Object)>($r22);

        $r25 = <org.apache.batik.gvt.text.GlyphLayout: java.util.Set runAtts>;

        $r24 = <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute DY>;

        interfaceinvoke $r25.<java.util.Set: boolean add(java.lang.Object)>($r24);

        $r27 = <org.apache.batik.gvt.text.GlyphLayout: java.util.Set runAtts>;

        $r26 = <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute ROTATION>;

        interfaceinvoke $r27.<java.util.Set: boolean add(java.lang.Object)>($r26);

        $r29 = <org.apache.batik.gvt.text.GlyphLayout: java.util.Set runAtts>;

        $r28 = <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute BASELINE_SHIFT>;

        interfaceinvoke $r29.<java.util.Set: boolean add(java.lang.Object)>($r28);

        $r30 = new java.util.HashSet;

        specialinvoke $r30.<java.util.HashSet: void <init>()>();

        <org.apache.batik.gvt.text.GlyphLayout: java.util.Set szAtts> = $r30;

        $r32 = <org.apache.batik.gvt.text.GlyphLayout: java.util.Set szAtts>;

        $r31 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute SIZE>;

        interfaceinvoke $r32.<java.util.Set: boolean add(java.lang.Object)>($r31);

        $r34 = <org.apache.batik.gvt.text.GlyphLayout: java.util.Set szAtts>;

        $r33 = <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute GVT_FONT>;

        interfaceinvoke $r34.<java.util.Set: boolean add(java.lang.Object)>($r33);

        $r36 = <org.apache.batik.gvt.text.GlyphLayout: java.util.Set szAtts>;

        $r35 = <org.apache.batik.gvt.text.GlyphLayout: java.text.AttributedCharacterIterator$Attribute LINE_HEIGHT>;

        interfaceinvoke $r36.<java.util.Set: boolean add(java.lang.Object)>($r35);

        return;
    }
}
