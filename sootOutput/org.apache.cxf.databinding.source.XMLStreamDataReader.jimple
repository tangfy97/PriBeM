public class org.apache.cxf.databinding.source.XMLStreamDataReader extends java.lang.Object implements org.apache.cxf.databinding.DataReader
{
    private static final java.util.logging.Logger LOG;
    private static final javax.xml.namespace.QName XOP;
    private final java.lang.Class preferred;
    private javax.xml.validation.Schema schema;
    private org.apache.cxf.message.Message message;

    public void <init>()
    {
        org.apache.cxf.databinding.source.XMLStreamDataReader r0;

        r0 := @this: org.apache.cxf.databinding.source.XMLStreamDataReader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.databinding.source.XMLStreamDataReader: java.lang.Class preferred> = null;

        return;
    }

    public void <init>(java.lang.Class)
    {
        org.apache.cxf.databinding.source.XMLStreamDataReader r0;
        java.lang.Class r1;

        r0 := @this: org.apache.cxf.databinding.source.XMLStreamDataReader;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.databinding.source.XMLStreamDataReader: java.lang.Class preferred> = r1;

        return;
    }

    public java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo, javax.xml.stream.XMLStreamReader)
    {
        org.apache.cxf.databinding.source.XMLStreamDataReader r0;
        javax.xml.stream.XMLStreamReader r1;
        java.lang.Class $r3;
        java.lang.Object $r4;
        org.apache.cxf.service.model.MessagePartInfo r2;

        r0 := @this: org.apache.cxf.databinding.source.XMLStreamDataReader;

        r2 := @parameter0: org.apache.cxf.service.model.MessagePartInfo;

        r1 := @parameter1: javax.xml.stream.XMLStreamReader;

        $r3 = virtualinvoke r2.<org.apache.cxf.service.model.MessagePartInfo: java.lang.Class getTypeClass()>();

        $r4 = virtualinvoke r0.<org.apache.cxf.databinding.source.XMLStreamDataReader: java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)>(null, r1, $r3);

        return $r4;
    }

    public java.lang.Object read(javax.xml.namespace.QName, javax.xml.stream.XMLStreamReader, java.lang.Class)
    {
        org.apache.cxf.databinding.source.XMLStreamDataReader r1;
        javax.xml.stream.XMLStreamException $r32;
        javax.xml.namespace.QName r17;
        javax.xml.transform.dom.DOMSource $r18, $r19, $r51;
        org.apache.cxf.staxutils.StaxSource $r3;
        java.lang.Object[] $r34;
        javax.xml.transform.stream.StreamSource $r20;
        javax.xml.validation.Schema $r47;
        java.lang.String $r11, $r12, $r26, $r27, $r28, $r29, $r30, $r37, $r38, r45;
        java.io.IOException $r39;
        java.lang.ClassNotFoundException $r42;
        javax.xml.stream.XMLStreamReader $r4, $r13, r43;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        java.util.logging.Logger $r35, $r41;
        org.apache.cxf.databinding.source.XMLStreamDataReader$1 $r16;
        org.apache.cxf.interceptor.Fault $r33, $r40;
        org.w3c.dom.Node $r49, $r50;
        org.apache.cxf.message.Message $r23, $r24;
        org.w3c.dom.Element $r22, r46;
        java.lang.Class $r0, $r2, $r5, $r6, $r7, $r8, $r9, $r10, $r31, $r36, r44;
        java.lang.Object $r14, $r25, r48;
        java.io.InputStream $r15, $r21;

        r1 := @this: org.apache.cxf.databinding.source.XMLStreamDataReader;

        r17 := @parameter0: javax.xml.namespace.QName;

        r43 := @parameter1: javax.xml.stream.XMLStreamReader;

        r44 := @parameter2: java.lang.Class;

        if r44 != null goto label01;

        r44 = r1.<org.apache.cxf.databinding.source.XMLStreamDataReader: java.lang.Class preferred>;

     label01:
        $r0 = class "Ljavax/xml/transform/Source;";

        $z0 = virtualinvoke $r0.<java.lang.Object: boolean equals(java.lang.Object)>(r44);

        if $z0 == 0 goto label11;

        $r23 = r1.<org.apache.cxf.databinding.source.XMLStreamDataReader: org.apache.cxf.message.Message message>;

        if $r23 == null goto label11;

        $r24 = r1.<org.apache.cxf.databinding.source.XMLStreamDataReader: org.apache.cxf.message.Message message>;

        $r25 = interfaceinvoke $r24.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>("source-preferred-format");

        r45 = (java.lang.String) $r25;

        $z9 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>(r45);

        if $z9 == 0 goto label02;

        r45 = "sax";

     label02:
        $r26 = "dom";

        $z10 = virtualinvoke $r26.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r45);

        if $z10 == 0 goto label03;

        r44 = class "Ljavax/xml/transform/dom/DOMSource;";

        goto label11;

     label03:
        $r27 = "stream";

        $z11 = virtualinvoke $r27.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r45);

        if $z11 == 0 goto label04;

        r44 = class "Ljavax/xml/transform/stream/StreamSource;";

        goto label11;

     label04:
        $r28 = "sax";

        $z12 = virtualinvoke $r28.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r45);

        if $z12 != 0 goto label05;

        $r29 = "cxf.stax";

        $z13 = virtualinvoke $r29.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r45);

        if $z13 == 0 goto label06;

     label05:
        r44 = class "Ljavax/xml/transform/sax/SAXSource;";

        goto label11;

     label06:
        $r30 = "stax";

        $z14 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>(r45);

        if $z14 == 0 goto label10;

     label07:
        $r31 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        r44 = staticinvoke <org.apache.cxf.common.classloader.ClassLoaderUtils: java.lang.Class loadClass(java.lang.String,java.lang.Class)>("javax.xml.transform.stax.StAXSource", $r31);

     label08:
        goto label11;

     label09:
        $r42 := @caughtexception;

        r44 = class "Ljavax/xml/transform/sax/SAXSource;";

        goto label11;

     label10:
        r44 = class "Ljavax/xml/transform/dom/DOMSource;";

     label11:
        r46 = null;

        $r47 = r1.<org.apache.cxf.databinding.source.XMLStreamDataReader: javax.xml.validation.Schema schema>;

        if $r47 == null goto label12;

        $r22 = specialinvoke r1.<org.apache.cxf.databinding.source.XMLStreamDataReader: org.w3c.dom.Element validate(javax.xml.stream.XMLStreamReader)>(r43);

        r46 = $r22;

        r43 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: javax.xml.stream.XMLStreamReader createXMLStreamReader(org.w3c.dom.Element)>($r22);

     label12:
        if r44 == null goto label26;

        r48 = null;

        $r2 = class "Ljavax/xml/transform/sax/SAXSource;";

        $z1 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r44);

        if $z1 != 0 goto label13;

        $r5 = class "Lorg/apache/cxf/staxutils/StaxSource;";

        $z2 = virtualinvoke $r5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r44);

        if $z2 == 0 goto label14;

     label13:
        $r3 = new org.apache.cxf.staxutils.StaxSource;

        $r4 = specialinvoke r1.<org.apache.cxf.databinding.source.XMLStreamDataReader: javax.xml.stream.XMLStreamReader resetForStreaming(javax.xml.stream.XMLStreamReader)>(r43);

        specialinvoke $r3.<org.apache.cxf.staxutils.StaxSource: void <init>(javax.xml.stream.XMLStreamReader)>($r4);

        r48 = $r3;

        goto label24;

     label14:
        $r6 = class "Ljavax/xml/transform/stream/StreamSource;";

        $z3 = virtualinvoke $r6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r44);

        if $z3 == 0 goto label15;

        $r20 = new javax.xml.transform.stream.StreamSource;

        $r21 = specialinvoke r1.<org.apache.cxf.databinding.source.XMLStreamDataReader: java.io.InputStream getInputStream(javax.xml.stream.XMLStreamReader)>(r43);

        specialinvoke $r20.<javax.xml.transform.stream.StreamSource: void <init>(java.io.InputStream)>($r21);

        r48 = $r20;

        goto label24;

     label15:
        $r7 = class "Ljavax/xml/stream/XMLStreamReader;";

        $z4 = virtualinvoke $r7.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r44);

        if $z4 == 0 goto label16;

        r48 = specialinvoke r1.<org.apache.cxf.databinding.source.XMLStreamDataReader: javax.xml.stream.XMLStreamReader resetForStreaming(javax.xml.stream.XMLStreamReader)>(r43);

        goto label24;

     label16:
        $r8 = class "Lorg/w3c/dom/Element;";

        $z5 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r44);

        if $z5 == 0 goto label19;

        if r46 != null goto label17;

        $r19 = virtualinvoke r1.<org.apache.cxf.databinding.source.XMLStreamDataReader: javax.xml.transform.dom.DOMSource read(javax.xml.stream.XMLStreamReader)>(r43);

        $r49 = virtualinvoke $r19.<javax.xml.transform.dom.DOMSource: org.w3c.dom.Node getNode()>();

        goto label18;

     label17:
        $r49 = r46;

     label18:
        r48 = $r49;

        goto label24;

     label19:
        $r9 = class "Lorg/w3c/dom/Document;";

        $z6 = virtualinvoke $r9.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r44);

        if $z6 == 0 goto label22;

        if r46 != null goto label20;

        $r18 = virtualinvoke r1.<org.apache.cxf.databinding.source.XMLStreamDataReader: javax.xml.transform.dom.DOMSource read(javax.xml.stream.XMLStreamReader)>(r43);

        $r50 = virtualinvoke $r18.<javax.xml.transform.dom.DOMSource: org.w3c.dom.Node getNode()>();

        goto label21;

     label20:
        $r50 = r46;

     label21:
        r48 = $r50;

        goto label24;

     label22:
        $r10 = class "Ljavax/activation/DataSource;";

        $z7 = virtualinvoke $r10.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r44);

        if $z7 == 0 goto label23;

        $r15 = specialinvoke r1.<org.apache.cxf.databinding.source.XMLStreamDataReader: java.io.InputStream getInputStream(javax.xml.stream.XMLStreamReader)>(r43);

        $r16 = new org.apache.cxf.databinding.source.XMLStreamDataReader$1;

        specialinvoke $r16.<org.apache.cxf.databinding.source.XMLStreamDataReader$1: void <init>(org.apache.cxf.databinding.source.XMLStreamDataReader,java.io.InputStream,javax.xml.namespace.QName)>(r1, $r15, r17);

        r48 = $r16;

        goto label24;

     label23:
        $r11 = "javax.xml.transform.stax.StAXSource";

        $r12 = virtualinvoke r44.<java.lang.Class: java.lang.String getName()>();

        $z8 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z8 == 0 goto label24;

        $r13 = specialinvoke r1.<org.apache.cxf.databinding.source.XMLStreamDataReader: javax.xml.stream.XMLStreamReader resetForStreaming(javax.xml.stream.XMLStreamReader)>(r43);

        r43 = $r13;

        $r14 = specialinvoke r1.<org.apache.cxf.databinding.source.XMLStreamDataReader: java.lang.Object createStaxSource(javax.xml.stream.XMLStreamReader,java.lang.Class)>($r13, r44);

        if $r14 == null goto label24;

        r48 = $r14;

     label24:
        if r48 == null goto label26;

     label25:
        return r48;

     label26:
        if r46 != null goto label27;

        $r51 = virtualinvoke r1.<org.apache.cxf.databinding.source.XMLStreamDataReader: javax.xml.transform.dom.DOMSource read(javax.xml.stream.XMLStreamReader)>(r43);

        goto label28;

     label27:
        $r51 = new javax.xml.transform.dom.DOMSource;

        specialinvoke $r51.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>(r46);

     label28:
        return $r51;

     label29:
        $r39 := @caughtexception;

        $r40 = new org.apache.cxf.interceptor.Fault;

        $r41 = <org.apache.cxf.databinding.source.XMLStreamDataReader: java.util.logging.Logger LOG>;

        specialinvoke $r40.<org.apache.cxf.interceptor.Fault: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Throwable)>("COULD_NOT_READ_XML_STREAM", $r41, $r39);

        throw $r40;

     label30:
        $r32 := @caughtexception;

        $r33 = new org.apache.cxf.interceptor.Fault;

        $r35 = <org.apache.cxf.databinding.source.XMLStreamDataReader: java.util.logging.Logger LOG>;

        $r34 = newarray (java.lang.Object)[2];

        $r36 = virtualinvoke $r32.<java.lang.Object: java.lang.Class getClass()>();

        $r37 = virtualinvoke $r36.<java.lang.Class: java.lang.String getCanonicalName()>();

        $r34[0] = $r37;

        $r38 = virtualinvoke $r32.<javax.xml.stream.XMLStreamException: java.lang.String getMessage()>();

        $r34[1] = $r38;

        specialinvoke $r33.<org.apache.cxf.interceptor.Fault: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Throwable,java.lang.Object[])>("COULD_NOT_READ_XML_STREAM_CAUSED_BY", $r35, $r32, $r34);

        throw $r33;

        catch java.lang.ClassNotFoundException from label07 to label08 with label09;
        catch java.io.IOException from label11 to label25 with label29;
        catch java.io.IOException from label26 to label28 with label29;
        catch javax.xml.stream.XMLStreamException from label11 to label25 with label30;
        catch javax.xml.stream.XMLStreamException from label26 to label28 with label30;
    }

    private java.lang.Object createStaxSource(javax.xml.stream.XMLStreamReader, java.lang.Class)
    {
        org.apache.cxf.databinding.source.XMLStreamDataReader r7;
        java.lang.Object[] $r3;
        java.lang.Class[] $r1;
        java.lang.reflect.Constructor $r2;
        java.lang.Exception $r6;
        javax.xml.stream.XMLStreamReader r4;
        java.lang.Class r0;
        java.lang.Object $r5;

        r7 := @this: org.apache.cxf.databinding.source.XMLStreamDataReader;

        r4 := @parameter0: javax.xml.stream.XMLStreamReader;

        r0 := @parameter1: java.lang.Class;

     label1:
        $r1 = newarray (java.lang.Class)[1];

        $r1[0] = class "Ljavax/xml/stream/XMLStreamReader;";

        $r2 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r1);

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r4;

        $r5 = virtualinvoke $r2.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r3);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private javax.xml.stream.XMLStreamReader resetForStreaming(javax.xml.stream.XMLStreamReader) throws javax.xml.stream.XMLStreamException
    {
        org.apache.cxf.databinding.source.XMLStreamDataReader r0;
        org.apache.cxf.message.Message $r1, $r2, $r3, $r6;
        org.apache.cxf.databinding.source.XMLStreamDataReader$2 $r7;
        javax.xml.stream.XMLStreamReader r8;
        java.lang.Object $r4;
        java.io.InputStream r5;

        r0 := @this: org.apache.cxf.databinding.source.XMLStreamDataReader;

        r8 := @parameter0: javax.xml.stream.XMLStreamReader;

        $r1 = r0.<org.apache.cxf.databinding.source.XMLStreamDataReader: org.apache.cxf.message.Message message>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.cxf.databinding.source.XMLStreamDataReader: org.apache.cxf.message.Message message>;

        interfaceinvoke $r2.<org.apache.cxf.message.Message: void removeContent(java.lang.Class)>(class "Ljavax/xml/stream/XMLStreamReader;");

        $r3 = r0.<org.apache.cxf.databinding.source.XMLStreamDataReader: org.apache.cxf.message.Message message>;

        $r4 = interfaceinvoke $r3.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljava/io/InputStream;");

        r5 = (java.io.InputStream) $r4;

        $r6 = r0.<org.apache.cxf.databinding.source.XMLStreamDataReader: org.apache.cxf.message.Message message>;

        interfaceinvoke $r6.<org.apache.cxf.message.Message: void removeContent(java.lang.Class)>(class "Ljava/io/InputStream;");

        $r7 = new org.apache.cxf.databinding.source.XMLStreamDataReader$2;

        specialinvoke $r7.<org.apache.cxf.databinding.source.XMLStreamDataReader$2: void <init>(org.apache.cxf.databinding.source.XMLStreamDataReader,javax.xml.stream.XMLStreamReader,boolean,java.io.InputStream)>(r0, r8, 1, r5);

        r8 = $r7;

     label1:
        return r8;
    }

    private org.w3c.dom.Element validate(javax.xml.stream.XMLStreamReader) throws javax.xml.stream.XMLStreamException, java.io.IOException
    {
        byte[] $r20;
        org.apache.cxf.databinding.source.XMLStreamDataReader r0;
        org.apache.cxf.staxutils.StaxStreamFilter $r34;
        org.apache.cxf.service.Service $r29;
        javax.xml.stream.XMLStreamReader r1, $r33, $r37;
        org.w3c.dom.Document $r39;
        javax.xml.stream.XMLStreamException $r42;
        javax.xml.stream.XMLStreamWriter $r23;
        boolean $z0, $z1, $z2, $z3, z4;
        org.apache.cxf.io.StaxValidationManager $r40;
        java.util.logging.Logger $r9;
        java.util.List $r14, $r30;
        org.xml.sax.SAXException $r41;
        javax.xml.namespace.QName $r36;
        org.apache.cxf.Bus $r7;
        javax.xml.transform.dom.DOMSource $r2, $r12;
        org.apache.cxf.service.model.ServiceInfo $r32;
        javax.xml.validation.Schema $r10;
        javax.xml.namespace.QName[] $r35;
        org.w3c.dom.Node $r3, $r4, $r13, $r18, $r38;
        java.lang.String $r19, $r21;
        java.util.Iterator $r15;
        org.apache.cxf.message.Message $r5, $r24, $r27;
        javax.xml.validation.Validator $r11;
        org.apache.cxf.message.Exchange $r6, $r25, $r28;
        org.w3c.dom.Element r17, r43, r44;
        org.apache.cxf.databinding.source.XMLStreamDataReader$NUllOutputStream $r22;
        org.apache.cxf.endpoint.Endpoint $r26;
        java.lang.Object $r8, $r16, $r31;

        r0 := @this: org.apache.cxf.databinding.source.XMLStreamDataReader;

        r1 := @parameter0: javax.xml.stream.XMLStreamReader;

        $r2 = virtualinvoke r0.<org.apache.cxf.databinding.source.XMLStreamDataReader: javax.xml.transform.dom.DOMSource read(javax.xml.stream.XMLStreamReader)>(r1);

        $r3 = virtualinvoke $r2.<javax.xml.transform.dom.DOMSource: org.w3c.dom.Node getNode()>();

        $z0 = $r3 instanceof org.w3c.dom.Document;

        if $z0 == 0 goto label1;

        $r38 = virtualinvoke $r2.<javax.xml.transform.dom.DOMSource: org.w3c.dom.Node getNode()>();

        $r39 = (org.w3c.dom.Document) $r38;

        r43 = interfaceinvoke $r39.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        goto label2;

     label1:
        $r4 = virtualinvoke $r2.<javax.xml.transform.dom.DOMSource: org.w3c.dom.Node getNode()>();

        r43 = (org.w3c.dom.Element) $r4;

     label2:
        $r5 = r0.<org.apache.cxf.databinding.source.XMLStreamDataReader: org.apache.cxf.message.Message message>;

        $r6 = interfaceinvoke $r5.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r7 = interfaceinvoke $r6.<org.apache.cxf.message.Exchange: org.apache.cxf.Bus getBus()>();

        $r8 = interfaceinvoke $r7.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/io/StaxValidationManager;");

        $r40 = (org.apache.cxf.io.StaxValidationManager) $r8;

        z4 = 0;

        if $r40 == null goto label3;

        $r22 = new org.apache.cxf.databinding.source.XMLStreamDataReader$NUllOutputStream;

        specialinvoke $r22.<org.apache.cxf.databinding.source.XMLStreamDataReader$NUllOutputStream: void <init>(org.apache.cxf.databinding.source.XMLStreamDataReader)>(r0);

        $r23 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream)>($r22);

        $r24 = r0.<org.apache.cxf.databinding.source.XMLStreamDataReader: org.apache.cxf.message.Message message>;

        $r25 = interfaceinvoke $r24.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r26 = interfaceinvoke $r25.<org.apache.cxf.message.Exchange: org.apache.cxf.endpoint.Endpoint getEndpoint()>();

        $r27 = r0.<org.apache.cxf.databinding.source.XMLStreamDataReader: org.apache.cxf.message.Message message>;

        $r28 = interfaceinvoke $r27.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r29 = interfaceinvoke $r28.<org.apache.cxf.message.Exchange: org.apache.cxf.service.Service getService()>();

        $r30 = interfaceinvoke $r29.<org.apache.cxf.service.Service: java.util.List getServiceInfos()>();

        $r31 = interfaceinvoke $r30.<java.util.List: java.lang.Object get(int)>(0);

        $r32 = (org.apache.cxf.service.model.ServiceInfo) $r31;

        $z3 = interfaceinvoke $r40.<org.apache.cxf.io.StaxValidationManager: boolean setupValidation(javax.xml.stream.XMLStreamWriter,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.service.model.ServiceInfo)>($r23, $r26, $r32);

        if $z3 == 0 goto label3;

        $r33 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: javax.xml.stream.XMLStreamReader createXMLStreamReader(javax.xml.transform.Source)>($r2);

        $r34 = new org.apache.cxf.staxutils.StaxStreamFilter;

        $r35 = newarray (javax.xml.namespace.QName)[1];

        $r36 = <org.apache.cxf.databinding.source.XMLStreamDataReader: javax.xml.namespace.QName XOP>;

        $r35[0] = $r36;

        specialinvoke $r34.<org.apache.cxf.staxutils.StaxStreamFilter: void <init>(javax.xml.namespace.QName[])>($r35);

        $r37 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: javax.xml.stream.XMLStreamReader createFilteredReader(javax.xml.stream.XMLStreamReader,javax.xml.stream.StreamFilter)>($r33, $r34);

        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)>($r37, $r23);

        z4 = 1;

     label3:
        if z4 != 0 goto label8;

        $r9 = <org.apache.cxf.databinding.source.XMLStreamDataReader: java.util.logging.Logger LOG>;

        virtualinvoke $r9.<java.util.logging.Logger: void fine(java.lang.String)>("NO_MSV_AVAILABLE");

        r44 = r43;

        $z1 = staticinvoke <org.apache.cxf.helpers.DOMUtils: boolean hasElementWithName(org.w3c.dom.Element,java.lang.String,java.lang.String)>(r43, "http://www.w3.org/2004/08/xop/include", "Include");

        if $z1 == 0 goto label5;

        $r13 = interfaceinvoke r43.<org.w3c.dom.Element: org.w3c.dom.Node cloneNode(boolean)>(1);

        r44 = (org.w3c.dom.Element) $r13;

        $r14 = staticinvoke <org.apache.cxf.helpers.DOMUtils: java.util.List findAllElementsByTagNameNS(org.w3c.dom.Element,java.lang.String,java.lang.String)>(r44, "http://www.w3.org/2004/08/xop/include", "Include");

        $r15 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r17 = (org.w3c.dom.Element) $r16;

        $r18 = interfaceinvoke r17.<org.w3c.dom.Element: org.w3c.dom.Node getParentNode()>();

        interfaceinvoke $r18.<org.w3c.dom.Node: org.w3c.dom.Node removeChild(org.w3c.dom.Node)>(r17);

        $r19 = staticinvoke <org.apache.cxf.helpers.DOMUtils: java.lang.String getAttribute(org.w3c.dom.Node,java.lang.String)>(r17, "href");

        $r20 = virtualinvoke $r19.<java.lang.String: byte[] getBytes()>();

        $r21 = staticinvoke <javax.xml.bind.DatatypeConverter: java.lang.String printBase64Binary(byte[])>($r20);

        interfaceinvoke $r18.<org.w3c.dom.Node: void setTextContent(java.lang.String)>($r21);

        goto label4;

     label5:
        $r10 = r0.<org.apache.cxf.databinding.source.XMLStreamDataReader: javax.xml.validation.Schema schema>;

        $r11 = virtualinvoke $r10.<javax.xml.validation.Schema: javax.xml.validation.Validator newValidator()>();

        $r12 = new javax.xml.transform.dom.DOMSource;

        specialinvoke $r12.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>(r44);

        virtualinvoke $r11.<javax.xml.validation.Validator: void validate(javax.xml.transform.Source)>($r12);

     label6:
        goto label8;

     label7:
        $r41 := @caughtexception;

        $r42 = new javax.xml.stream.XMLStreamException;

        specialinvoke $r42.<javax.xml.stream.XMLStreamException: void <init>(java.lang.Throwable)>($r41);

        throw $r42;

     label8:
        return r43;

        catch org.xml.sax.SAXException from label5 to label6 with label7;
    }

    private java.io.InputStream getInputStream(javax.xml.stream.XMLStreamReader) throws javax.xml.stream.XMLStreamException, java.io.IOException
    {
        java.lang.Throwable $r3;
        org.apache.cxf.databinding.source.XMLStreamDataReader r4;
        javax.xml.stream.XMLStreamReader r1;
        org.apache.cxf.io.CachedOutputStream $r0;
        java.io.InputStream $r2;

        r4 := @this: org.apache.cxf.databinding.source.XMLStreamDataReader;

        r1 := @parameter0: javax.xml.stream.XMLStreamReader;

        $r0 = new org.apache.cxf.io.CachedOutputStream;

        specialinvoke $r0.<org.apache.cxf.io.CachedOutputStream: void <init>()>();

     label1:
        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void copy(javax.xml.stream.XMLStreamReader,java.io.OutputStream)>(r1, $r0);

        $r2 = virtualinvoke $r0.<org.apache.cxf.io.CachedOutputStream: java.io.InputStream getInputStream()>();

     label2:
        virtualinvoke $r0.<org.apache.cxf.io.CachedOutputStream: void close()>();

        return $r2;

     label3:
        $r3 := @caughtexception;

     label4:
        virtualinvoke $r0.<org.apache.cxf.io.CachedOutputStream: void close()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public javax.xml.transform.dom.DOMSource read(javax.xml.stream.XMLStreamReader)
    {
        javax.xml.transform.dom.DOMSource $r2, $r3;
        org.apache.cxf.databinding.source.XMLStreamDataReader r13;
        java.lang.Object[] $r8;
        org.apache.cxf.staxutils.W3CDOMStreamReader r15;
        org.apache.cxf.interceptor.Fault $r7;
        javax.xml.stream.XMLStreamReader r0, r14;
        org.apache.cxf.staxutils.DepthXMLStreamReader $r5;
        org.w3c.dom.Document $r1;
        javax.xml.stream.XMLStreamException $r6;
        java.lang.String $r11, $r12;
        boolean $z0, $z1, $z2;
        java.util.logging.Logger $r9;
        org.w3c.dom.Element $r4;
        java.lang.Class $r10;

        r13 := @this: org.apache.cxf.databinding.source.XMLStreamDataReader;

        r0 := @parameter0: javax.xml.stream.XMLStreamReader;

     label1:
        r14 = r0;

        $z0 = r0 instanceof org.apache.cxf.staxutils.DepthXMLStreamReader;

        if $z0 == 0 goto label2;

        $r5 = (org.apache.cxf.staxutils.DepthXMLStreamReader) r0;

        r14 = virtualinvoke $r5.<org.apache.cxf.staxutils.DepthXMLStreamReader: javax.xml.stream.XMLStreamReader getReader()>();

     label2:
        $z1 = r14 instanceof org.apache.cxf.staxutils.W3CDOMStreamReader;

        if $z1 == 0 goto label4;

        r15 = (org.apache.cxf.staxutils.W3CDOMStreamReader) r14;

        $r3 = new javax.xml.transform.dom.DOMSource;

        $r4 = virtualinvoke r15.<org.apache.cxf.staxutils.W3CDOMStreamReader: org.w3c.dom.Element getCurrentElement()>();

        specialinvoke $r3.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>($r4);

        virtualinvoke r15.<org.apache.cxf.staxutils.W3CDOMStreamReader: void consumeFrame()>();

     label3:
        return $r3;

     label4:
        $r1 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: org.w3c.dom.Document read(javax.xml.stream.XMLStreamReader)>(r0);

        $z2 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: boolean hasNext()>();

        if $z2 == 0 goto label5;

        interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: int next()>();

     label5:
        $r2 = new javax.xml.transform.dom.DOMSource;

        specialinvoke $r2.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>($r1);

     label6:
        return $r2;

     label7:
        $r6 := @caughtexception;

        $r7 = new org.apache.cxf.interceptor.Fault;

        $r9 = <org.apache.cxf.databinding.source.XMLStreamDataReader: java.util.logging.Logger LOG>;

        $r8 = newarray (java.lang.Object)[2];

        $r10 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getCanonicalName()>();

        $r8[0] = $r11;

        $r12 = virtualinvoke $r6.<javax.xml.stream.XMLStreamException: java.lang.String getMessage()>();

        $r8[1] = $r12;

        specialinvoke $r7.<org.apache.cxf.interceptor.Fault: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Throwable,java.lang.Object[])>("COULD_NOT_READ_XML_STREAM_CAUSED_BY", $r9, $r6, $r8);

        throw $r7;

        catch javax.xml.stream.XMLStreamException from label1 to label3 with label7;
        catch javax.xml.stream.XMLStreamException from label4 to label6 with label7;
    }

    public void setSchema(javax.xml.validation.Schema)
    {
        org.apache.cxf.databinding.source.XMLStreamDataReader r0;
        javax.xml.validation.Schema r1;

        r0 := @this: org.apache.cxf.databinding.source.XMLStreamDataReader;

        r1 := @parameter0: javax.xml.validation.Schema;

        r0.<org.apache.cxf.databinding.source.XMLStreamDataReader: javax.xml.validation.Schema schema> = r1;

        return;
    }

    public void setAttachments(java.util.Collection)
    {
        org.apache.cxf.databinding.source.XMLStreamDataReader r0;
        java.util.Collection r1;

        r0 := @this: org.apache.cxf.databinding.source.XMLStreamDataReader;

        r1 := @parameter0: java.util.Collection;

        return;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        org.apache.cxf.databinding.source.XMLStreamDataReader r3;
        org.apache.cxf.message.Message $r5;
        java.lang.Class $r0;
        java.lang.Object r4;
        java.lang.String $r1, r2;
        boolean $z0;

        r3 := @this: org.apache.cxf.databinding.source.XMLStreamDataReader;

        r2 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Object;

        $r0 = class "Lorg/apache/cxf/message/Message;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        $r5 = (org.apache.cxf.message.Message) r4;

        r3.<org.apache.cxf.databinding.source.XMLStreamDataReader: org.apache.cxf.message.Message message> = $r5;

     label1:
        return;
    }

    public volatile java.lang.Object read(javax.xml.namespace.QName, java.lang.Object, java.lang.Class)
    {
        org.apache.cxf.databinding.source.XMLStreamDataReader r0;
        javax.xml.stream.XMLStreamReader $r4;
        java.lang.Object r2, $r5;
        java.lang.Class r3;
        javax.xml.namespace.QName r1;

        r0 := @this: org.apache.cxf.databinding.source.XMLStreamDataReader;

        r1 := @parameter0: javax.xml.namespace.QName;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Class;

        $r4 = (javax.xml.stream.XMLStreamReader) r2;

        $r5 = virtualinvoke r0.<org.apache.cxf.databinding.source.XMLStreamDataReader: java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)>(r1, $r4, r3);

        return $r5;
    }

    public volatile java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo, java.lang.Object)
    {
        org.apache.cxf.databinding.source.XMLStreamDataReader r0;
        javax.xml.stream.XMLStreamReader $r3;
        java.lang.Object r2, $r4;
        org.apache.cxf.service.model.MessagePartInfo r1;

        r0 := @this: org.apache.cxf.databinding.source.XMLStreamDataReader;

        r1 := @parameter0: org.apache.cxf.service.model.MessagePartInfo;

        r2 := @parameter1: java.lang.Object;

        $r3 = (javax.xml.stream.XMLStreamReader) r2;

        $r4 = virtualinvoke r0.<org.apache.cxf.databinding.source.XMLStreamDataReader: java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamReader)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object read(java.lang.Object)
    {
        javax.xml.transform.dom.DOMSource $r3;
        org.apache.cxf.databinding.source.XMLStreamDataReader r0;
        javax.xml.stream.XMLStreamReader $r2;
        java.lang.Object r1;

        r0 := @this: org.apache.cxf.databinding.source.XMLStreamDataReader;

        r1 := @parameter0: java.lang.Object;

        $r2 = (javax.xml.stream.XMLStreamReader) r1;

        $r3 = virtualinvoke r0.<org.apache.cxf.databinding.source.XMLStreamDataReader: javax.xml.transform.dom.DOMSource read(javax.xml.stream.XMLStreamReader)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        javax.xml.namespace.QName $r1;
        java.util.logging.Logger $r0;

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/databinding/source/XMLStreamDataReader;");

        <org.apache.cxf.databinding.source.XMLStreamDataReader: java.util.logging.Logger LOG> = $r0;

        $r1 = new javax.xml.namespace.QName;

        specialinvoke $r1.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://www.w3.org/2004/08/xop/include", "Include");

        <org.apache.cxf.databinding.source.XMLStreamDataReader: javax.xml.namespace.QName XOP> = $r1;

        return;
    }
}
