final class com.sun.xml.bind.v2.runtime.unmarshaller.StAXExConnector extends com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector
{
    private final org.jvnet.staxex.XMLStreamReaderEx in;

    public void <init>(org.jvnet.staxex.XMLStreamReaderEx, com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor)
    {
        javax.xml.stream.XMLStreamReader $r3;
        com.sun.xml.bind.v2.runtime.unmarshaller.StAXExConnector r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor r2;
        org.jvnet.staxex.XMLStreamReaderEx r1;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.StAXExConnector;

        r1 := @parameter0: org.jvnet.staxex.XMLStreamReaderEx;

        r2 := @parameter1: com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor;

        $r3 = (javax.xml.stream.XMLStreamReader) r1;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector: void <init>(javax.xml.stream.XMLStreamReader,com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor)>($r3, r2);

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXExConnector: org.jvnet.staxex.XMLStreamReaderEx in> = r1;

        return;
    }

    protected void handleCharacters() throws javax.xml.stream.XMLStreamException, org.xml.sax.SAXException
    {
        byte[] $r7;
        com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor$TextPredictor $r1;
        java.lang.CharSequence $r3;
        com.sun.xml.bind.v2.runtime.unmarshaller.StAXExConnector r0;
        org.jvnet.staxex.Base64Data r5;
        com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data $r6;
        javax.activation.DataHandler $r10;
        org.jvnet.staxex.XMLStreamReaderEx $r2;
        int $i0;
        com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor $r9;
        java.lang.StringBuilder $r4;
        java.lang.String $r8;
        boolean $z0, $z1, $z2;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.StAXExConnector;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXExConnector: com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor$TextPredictor predictor>;

        $z0 = interfaceinvoke $r1.<com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor$TextPredictor: boolean expectText()>();

        if $z0 == 0 goto label4;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXExConnector: org.jvnet.staxex.XMLStreamReaderEx in>;

        $r3 = interfaceinvoke $r2.<org.jvnet.staxex.XMLStreamReaderEx: java.lang.CharSequence getPCDATA()>();

        $z1 = $r3 instanceof org.jvnet.staxex.Base64Data;

        if $z1 == 0 goto label3;

        r5 = (org.jvnet.staxex.Base64Data) $r3;

        $r6 = new com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data;

        specialinvoke $r6.<com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data: void <init>()>();

        $z2 = virtualinvoke r5.<org.jvnet.staxex.Base64Data: boolean hasData()>();

        if $z2 != 0 goto label1;

        $r10 = virtualinvoke r5.<org.jvnet.staxex.Base64Data: javax.activation.DataHandler getDataHandler()>();

        virtualinvoke $r6.<com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data: void set(javax.activation.DataHandler)>($r10);

        goto label2;

     label1:
        $r7 = virtualinvoke r5.<org.jvnet.staxex.Base64Data: byte[] get()>();

        $i0 = virtualinvoke r5.<org.jvnet.staxex.Base64Data: int getDataLen()>();

        $r8 = virtualinvoke r5.<org.jvnet.staxex.Base64Data: java.lang.String getMimeType()>();

        virtualinvoke $r6.<com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data: void set(byte[],int,java.lang.String)>($r7, $i0, $r8);

     label2:
        $r9 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXExConnector: com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor visitor>;

        interfaceinvoke $r9.<com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor: void text(java.lang.CharSequence)>($r6);

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXExConnector: boolean textReported> = 1;

        goto label4;

     label3:
        $r4 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXExConnector: java.lang.StringBuilder buffer>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r3);

     label4:
        return;
    }
}
