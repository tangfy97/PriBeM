class org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser extends org.apache.xml.dtm.DTMAxisTraverser
{
    private final org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0;

    private void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser;

        r1 := @parameter0: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers;

        specialinvoke r0.<org.apache.xml.dtm.DTMAxisTraverser: void <init>()>();

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0> = r1;

        return;
    }

    protected int getNextIndexed(int, int, int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1, $r3, $r5, $r6, $r8, $r10, $r12;
        int i0, $i1, $i2, i3, $i4, $i5, $i6, i7, $i8, i9, $i11, $i13, $i15, $i17, $i19;
        org.apache.xml.utils.SuballocatedIntVector $r7, $r9, $r11;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser r0;
        org.apache.xml.dtm.ref.ExpandedNameTable $r2, $r4;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser;

        i3 := @parameter0: int;

        i7 := @parameter1: int;

        i0 := @parameter2: int;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $r2 = $r1.<org.apache.xml.dtm.ref.DTMDefaultBase: org.apache.xml.dtm.ref.ExpandedNameTable m_expandedNameTable>;

        $i1 = virtualinvoke $r2.<org.apache.xml.dtm.ref.ExpandedNameTable: int getNamespaceID(int)>(i0);

        $r3 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $r4 = $r3.<org.apache.xml.dtm.ref.DTMDefaultBase: org.apache.xml.dtm.ref.ExpandedNameTable m_expandedNameTable>;

        $i2 = virtualinvoke $r4.<org.apache.xml.dtm.ref.ExpandedNameTable: int getLocalNameID(int)>(i0);

        goto label1;

     label1:
        $r12 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i8 = virtualinvoke $r12.<org.apache.xml.dtm.ref.DTMDefaultBase: int findElementFromIndex(int,int,int)>($i1, $i2, i7);

        $i11 = (int) -2;

        if $i11 == $i8 goto label5;

        $r8 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $r9 = $r8.<org.apache.xml.dtm.ref.DTMDefaultBase: org.apache.xml.utils.SuballocatedIntVector m_parent>;

        $i5 = virtualinvoke $r9.<org.apache.xml.utils.SuballocatedIntVector: int elementAt(int)>($i8);

        i9 = $i5;

        if $i5 != i3 goto label2;

        return $i8;

     label2:
        if $i5 >= i3 goto label3;

        $i13 = (int) -1;

        return $i13;

     label3:
        $r10 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $r11 = $r10.<org.apache.xml.dtm.ref.DTMDefaultBase: org.apache.xml.utils.SuballocatedIntVector m_parent>;

        $i6 = virtualinvoke $r11.<org.apache.xml.utils.SuballocatedIntVector: int elementAt(int)>(i9);

        i9 = $i6;

        if $i6 >= i3 goto label4;

        $i15 = (int) -1;

        return $i15;

     label4:
        if $i6 > i3 goto label3;

        i7 = $i8 + 1;

        goto label1;

     label5:
        $r5 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        virtualinvoke $r5.<org.apache.xml.dtm.ref.DTMDefaultBase: boolean nextNode()>();

        $r6 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $r7 = $r6.<org.apache.xml.dtm.ref.DTMDefaultBase: org.apache.xml.utils.SuballocatedIntVector m_nextsib>;

        $i4 = virtualinvoke $r7.<org.apache.xml.utils.SuballocatedIntVector: int elementAt(int)>(i3);

        $i17 = (int) -2;

        if $i4 == $i17 goto label6;

        goto label7;

     label6:
        goto label1;

     label7:
        $i19 = (int) -1;

        return $i19;
    }

    public int first(int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1;
        int i0, $i1;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i1 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBase: int getFirstChild(int)>(i0);

        return $i1;
    }

    public int first(int, int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1, $r2, $r3;
        int i0, $i1, $i2, i3, $i4, $i5;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser;

        i0 := @parameter0: int;

        i3 := @parameter1: int;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i1 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeIdentity(int)>(i0);

        $r2 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i2 = virtualinvoke $r2.<org.apache.xml.dtm.ref.DTMDefaultBase: int _firstch(int)>($i1);

        $i4 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser: int getNextIndexed(int,int,int)>($i1, $i2, i3);

        $r3 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i5 = virtualinvoke $r3.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeHandle(int)>($i4);

        return $i5;
    }

    public int next(int, int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1;
        int i0, $i1, i2;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i1 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBase: int getNextSibling(int)>(i0);

        return $i1;
    }

    public int next(int, int, int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1, $r2, $r3, $r5, $r6;
        int $i0, $i1, i2, $i3, i4, i5, i6, $i8, $i10;
        org.apache.xml.utils.SuballocatedIntVector $r4;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser;

        i4 := @parameter0: int;

        i5 := @parameter1: int;

        i2 := @parameter2: int;

        $r2 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i0 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeIdentity(int)>(i5);

        i6 = virtualinvoke $r2.<org.apache.xml.dtm.ref.DTMDefaultBase: int _nextsib(int)>($i0);

        goto label3;

     label1:
        $r3 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $r4 = $r3.<org.apache.xml.dtm.ref.DTMDefaultBase: org.apache.xml.utils.SuballocatedIntVector m_exptype>;

        $i1 = virtualinvoke $r4.<org.apache.xml.utils.SuballocatedIntVector: int elementAt(int)>(i6);

        if $i1 != i2 goto label2;

        $r6 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i3 = virtualinvoke $r6.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeHandle(int)>(i6);

        return $i3;

     label2:
        $r5 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        i6 = virtualinvoke $r5.<org.apache.xml.dtm.ref.DTMDefaultBase: int _nextsib(int)>(i6);

     label3:
        $i8 = (int) -1;

        if $i8 != i6 goto label1;

        $i10 = (int) -1;

        return $i10;
    }

    void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers, org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1 r2;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser;

        r1 := @parameter0: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers;

        r2 := @parameter1: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1;

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser: void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers)>(r1);

        return;
    }
}
