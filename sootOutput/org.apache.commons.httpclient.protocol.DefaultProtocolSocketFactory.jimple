public class org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory extends java.lang.Object implements org.apache.commons.httpclient.protocol.ProtocolSocketFactory
{
    private static final org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory factory;

    static org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory getSocketFactory()
    {
        org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory $r0;

        $r0 = <org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory: org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory factory>;

        return $r0;
    }

    public void <init>()
    {
        org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory r0;

        r0 := @this: org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.net.Socket createSocket(java.lang.String, int, java.net.InetAddress, int) throws java.io.IOException, java.net.UnknownHostException
    {
        java.net.InetAddress r2;
        java.net.Socket $r0;
        int i0, i1;
        java.lang.String r1;
        org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory r3;

        r3 := @this: org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.net.InetAddress;

        i1 := @parameter3: int;

        $r0 = new java.net.Socket;

        specialinvoke $r0.<java.net.Socket: void <init>(java.lang.String,int,java.net.InetAddress,int)>(r1, i0, r2, i1);

        return $r0;
    }

    public java.net.Socket createSocket(java.lang.String, int, java.net.InetAddress, int, org.apache.commons.httpclient.params.HttpConnectionParams) throws java.io.IOException, java.net.UnknownHostException, org.apache.commons.httpclient.ConnectTimeoutException
    {
        java.net.Socket $r3, $r5, r7;
        java.lang.IllegalArgumentException $r6;
        java.net.InetAddress r2;
        org.apache.commons.httpclient.params.HttpConnectionParams r0;
        int $i0, i1, i2;
        java.lang.String r1;
        org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory r4;

        r4 := @this: org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory;

        r1 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        r2 := @parameter2: java.net.InetAddress;

        i2 := @parameter3: int;

        r0 := @parameter4: org.apache.commons.httpclient.params.HttpConnectionParams;

        if r0 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameters may not be null");

        throw $r6;

     label1:
        $i0 = virtualinvoke r0.<org.apache.commons.httpclient.params.HttpConnectionParams: int getConnectionTimeout()>();

        if $i0 != 0 goto label2;

        $r5 = virtualinvoke r4.<org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)>(r1, i1, r2, i2);

        return $r5;

     label2:
        $r3 = staticinvoke <org.apache.commons.httpclient.protocol.ReflectionSocketFactory: java.net.Socket createSocket(java.lang.String,java.lang.String,int,java.net.InetAddress,int,int)>("javax.net.SocketFactory", r1, i1, r2, i2, $i0);

        r7 = $r3;

        if $r3 != null goto label3;

        r7 = staticinvoke <org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory: java.net.Socket createSocket(org.apache.commons.httpclient.protocol.ProtocolSocketFactory,java.lang.String,int,java.net.InetAddress,int,int)>(r4, r1, i1, r2, i2, $i0);

     label3:
        return r7;
    }

    public java.net.Socket createSocket(java.lang.String, int) throws java.io.IOException, java.net.UnknownHostException
    {
        java.net.Socket $r0;
        int i0;
        java.lang.String r1;
        org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory r2;

        r2 := @this: org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r0 = new java.net.Socket;

        specialinvoke $r0.<java.net.Socket: void <init>(java.lang.String,int)>(r1, i0);

        return $r0;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.Class $r1, $r3;
        org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory r2;
        boolean $z0, $z1;

        r2 := @this: org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory;

        r0 := @parameter0: java.lang.Object;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public int hashCode()
    {
        int $i0;
        java.lang.Class $r1;
        org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory r0;

        r0 := @this: org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    static void <clinit>()
    {
        org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory $r0;

        $r0 = new org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory;

        specialinvoke $r0.<org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory: void <init>()>();

        <org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory: org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory factory> = $r0;

        return;
    }
}
