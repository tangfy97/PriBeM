public class org.apache.commons.codec.digest.Md5Crypt extends java.lang.Object
{
    static final java.lang.String APR1_PREFIX;
    private static final int BLOCKSIZE;
    static final java.lang.String MD5_PREFIX;
    private static final int ROUNDS;

    public void <init>()
    {
        org.apache.commons.codec.digest.Md5Crypt r0;

        r0 := @this: org.apache.commons.codec.digest.Md5Crypt;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String apr1Crypt(byte[])
    {
        byte[] r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3, $r5, $r6;

        r0 := @parameter0: byte[];

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$apr1$");

        $r3 = staticinvoke <org.apache.commons.codec.digest.B64: java.lang.String getRandomSalt(int)>(8);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = staticinvoke <org.apache.commons.codec.digest.Md5Crypt: java.lang.String apr1Crypt(byte[],java.lang.String)>(r0, $r5);

        return $r6;
    }

    public static java.lang.String apr1Crypt(byte[], java.lang.String)
    {
        byte[] r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String r4, $r5;
        boolean $z0;

        r0 := @parameter0: byte[];

        r4 := @parameter1: java.lang.String;

        if r4 == null goto label1;

        $z0 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("$apr1$");

        if $z0 != 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$apr1$");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r5 = staticinvoke <org.apache.commons.codec.digest.Md5Crypt: java.lang.String md5Crypt(byte[],java.lang.String,java.lang.String)>(r0, r4, "$apr1$");

        return $r5;
    }

    public static java.lang.String apr1Crypt(java.lang.String)
    {
        byte[] $r2;
        java.nio.charset.Charset $r1;
        java.lang.String r0, $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r2 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r1);

        $r3 = staticinvoke <org.apache.commons.codec.digest.Md5Crypt: java.lang.String apr1Crypt(byte[])>($r2);

        return $r3;
    }

    public static java.lang.String apr1Crypt(java.lang.String, java.lang.String)
    {
        byte[] $r2;
        java.nio.charset.Charset $r1;
        java.lang.String r0, r3, $r4;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r2 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r1);

        $r4 = staticinvoke <org.apache.commons.codec.digest.Md5Crypt: java.lang.String apr1Crypt(byte[],java.lang.String)>($r2, r3);

        return $r4;
    }

    public static java.lang.String md5Crypt(byte[])
    {
        byte[] r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3, $r5, $r6;

        r0 := @parameter0: byte[];

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$1$");

        $r3 = staticinvoke <org.apache.commons.codec.digest.B64: java.lang.String getRandomSalt(int)>(8);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = staticinvoke <org.apache.commons.codec.digest.Md5Crypt: java.lang.String md5Crypt(byte[],java.lang.String)>(r0, $r5);

        return $r6;
    }

    public static java.lang.String md5Crypt(byte[], java.lang.String)
    {
        byte[] r0;
        java.lang.String r1, $r2;

        r0 := @parameter0: byte[];

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.apache.commons.codec.digest.Md5Crypt: java.lang.String md5Crypt(byte[],java.lang.String,java.lang.String)>(r0, r1, "$1$");

        return $r2;
    }

    public static java.lang.String md5Crypt(byte[], java.lang.String, java.lang.String)
    {
        byte[] r0, $r17, $r20, $r22, r33;
        java.util.regex.Matcher $r10;
        byte $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b12, $b13, $b14, $b15, $b16, $b22, $b23;
        java.lang.StringBuilder $r3, $r6, $r7, $r13, $r14, $r25, $r26, $r27, $r34, $r35, $r37, $r38;
        java.lang.String r1, r4, $r5, $r8, $r15, $r28, $r29, r31;
        boolean $z0;
        java.util.regex.Pattern $r9;
        java.security.MessageDigest $r18, $r21, $r30, r32;
        java.nio.charset.Charset $r16, $r19;
        int i0, $i17, $i18, $i19, $i20, $i21, i24, $i25, i26, i27, $i29;
        java.lang.IllegalArgumentException $r36;

        r0 := @parameter0: byte[];

        r1 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        i0 = lengthof r0;

        if r1 != null goto label01;

        r31 = staticinvoke <org.apache.commons.codec.digest.B64: java.lang.String getRandomSalt(int)>(8);

        goto label04;

     label01:
        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("^");

        $r5 = virtualinvoke r4.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("$", "\\$");

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("([\\.\\/a-zA-Z0-9]{1,8}).*");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        if $r10 == null goto label02;

        $z0 = virtualinvoke $r10.<java.util.regex.Matcher: boolean find()>();

        if $z0 != 0 goto label03;

     label02:
        $r36 = new java.lang.IllegalArgumentException;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid salt value: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r36;

     label03:
        r31 = virtualinvoke $r10.<java.util.regex.Matcher: java.lang.String group(int)>(1);

     label04:
        $r16 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r17 = virtualinvoke r31.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r16);

        $r18 = staticinvoke <org.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getMd5Digest()>();

        virtualinvoke $r18.<java.security.MessageDigest: void update(byte[])>(r0);

        $r19 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        $r20 = virtualinvoke r4.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r19);

        virtualinvoke $r18.<java.security.MessageDigest: void update(byte[])>($r20);

        virtualinvoke $r18.<java.security.MessageDigest: void update(byte[])>($r17);

        $r21 = staticinvoke <org.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getMd5Digest()>();

        r32 = $r21;

        virtualinvoke $r21.<java.security.MessageDigest: void update(byte[])>(r0);

        virtualinvoke $r21.<java.security.MessageDigest: void update(byte[])>($r17);

        virtualinvoke $r21.<java.security.MessageDigest: void update(byte[])>(r0);

        $r22 = virtualinvoke $r21.<java.security.MessageDigest: byte[] digest()>();

        i24 = i0;

     label05:
        if i24 <= 0 goto label08;

        if i24 <= 16 goto label06;

        $i25 = 16;

        goto label07;

     label06:
        $i25 = i24;

     label07:
        virtualinvoke $r18.<java.security.MessageDigest: void update(byte[],int,int)>($r22, 0, $i25);

        $i29 = (int) -16;

        i24 = i24 + $i29;

        goto label05;

     label08:
        staticinvoke <java.util.Arrays: void fill(byte[],byte)>($r22, 0);

        i26 = i0;

     label09:
        if i26 <= 0 goto label12;

        $i21 = i26 & 1;

        if $i21 != 1 goto label10;

        $b23 = $r22[0];

        virtualinvoke $r18.<java.security.MessageDigest: void update(byte)>($b23);

        goto label11;

     label10:
        $b22 = r0[0];

        virtualinvoke $r18.<java.security.MessageDigest: void update(byte)>($b22);

     label11:
        i26 = i26 >> 1;

        goto label09;

     label12:
        $r38 = new java.lang.StringBuilder;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r38.<java.lang.StringBuilder: void <init>(java.lang.String)>($r28);

        r33 = virtualinvoke $r18.<java.security.MessageDigest: byte[] digest()>();

        i27 = 0;

     label13:
        if i27 >= 1000 goto label20;

        $r30 = staticinvoke <org.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getMd5Digest()>();

        r32 = $r30;

        $i17 = i27 & 1;

        if $i17 == 0 goto label14;

        virtualinvoke $r30.<java.security.MessageDigest: void update(byte[])>(r0);

        goto label15;

     label14:
        virtualinvoke $r30.<java.security.MessageDigest: void update(byte[],int,int)>(r33, 0, 16);

     label15:
        $i18 = i27 % 3;

        if $i18 == 0 goto label16;

        virtualinvoke $r30.<java.security.MessageDigest: void update(byte[])>($r17);

     label16:
        $i19 = i27 % 7;

        if $i19 == 0 goto label17;

        virtualinvoke $r30.<java.security.MessageDigest: void update(byte[])>(r0);

     label17:
        $i20 = i27 & 1;

        if $i20 == 0 goto label18;

        virtualinvoke $r30.<java.security.MessageDigest: void update(byte[],int,int)>(r33, 0, 16);

        goto label19;

     label18:
        virtualinvoke $r30.<java.security.MessageDigest: void update(byte[])>(r0);

     label19:
        r33 = virtualinvoke $r30.<java.security.MessageDigest: byte[] digest()>();

        i27 = i27 + 1;

        goto label13;

     label20:
        $b3 = r33[0];

        $b2 = r33[6];

        $b1 = r33[12];

        staticinvoke <org.apache.commons.codec.digest.B64: void b64from24bit(byte,byte,byte,int,java.lang.StringBuilder)>($b3, $b2, $b1, 4, $r38);

        $b6 = r33[1];

        $b5 = r33[7];

        $b4 = r33[13];

        staticinvoke <org.apache.commons.codec.digest.B64: void b64from24bit(byte,byte,byte,int,java.lang.StringBuilder)>($b6, $b5, $b4, 4, $r38);

        $b9 = r33[2];

        $b8 = r33[8];

        $b7 = r33[14];

        staticinvoke <org.apache.commons.codec.digest.B64: void b64from24bit(byte,byte,byte,int,java.lang.StringBuilder)>($b9, $b8, $b7, 4, $r38);

        $b12 = r33[3];

        $b11 = r33[9];

        $b10 = r33[15];

        staticinvoke <org.apache.commons.codec.digest.B64: void b64from24bit(byte,byte,byte,int,java.lang.StringBuilder)>($b12, $b11, $b10, 4, $r38);

        $b15 = r33[4];

        $b14 = r33[10];

        $b13 = r33[5];

        staticinvoke <org.apache.commons.codec.digest.B64: void b64from24bit(byte,byte,byte,int,java.lang.StringBuilder)>($b15, $b14, $b13, 4, $r38);

        $b16 = r33[11];

        staticinvoke <org.apache.commons.codec.digest.B64: void b64from24bit(byte,byte,byte,int,java.lang.StringBuilder)>(0, 0, $b16, 2, $r38);

        virtualinvoke $r18.<java.security.MessageDigest: void reset()>();

        virtualinvoke r32.<java.security.MessageDigest: void reset()>();

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>(r0, 0);

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>($r17, 0);

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>(r33, 0);

        $r29 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r29;
    }

    public static void <clinit>()
    {
        <org.apache.commons.codec.digest.Md5Crypt: int ROUNDS> = 1000;

        <org.apache.commons.codec.digest.Md5Crypt: java.lang.String MD5_PREFIX> = "$1$";

        <org.apache.commons.codec.digest.Md5Crypt: int BLOCKSIZE> = 16;

        <org.apache.commons.codec.digest.Md5Crypt: java.lang.String APR1_PREFIX> = "$apr1$";

        return;
    }
}
