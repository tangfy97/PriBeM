public class org.apache.zookeeper.proto.GetChildrenResponse extends java.lang.Object implements org.apache.jute.Record
{
    private java.util.List children;

    public void <init>()
    {
        org.apache.zookeeper.proto.GetChildrenResponse r0;

        r0 := @this: org.apache.zookeeper.proto.GetChildrenResponse;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(java.util.List)
    {
        java.util.List r1;
        org.apache.zookeeper.proto.GetChildrenResponse r0;

        r0 := @this: org.apache.zookeeper.proto.GetChildrenResponse;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.zookeeper.proto.GetChildrenResponse: java.util.List children> = r1;

        return;
    }

    public java.util.List getChildren()
    {
        java.util.List $r1;
        org.apache.zookeeper.proto.GetChildrenResponse r0;

        r0 := @this: org.apache.zookeeper.proto.GetChildrenResponse;

        $r1 = r0.<org.apache.zookeeper.proto.GetChildrenResponse: java.util.List children>;

        return $r1;
    }

    public void setChildren(java.util.List)
    {
        java.util.List r1;
        org.apache.zookeeper.proto.GetChildrenResponse r0;

        r0 := @this: org.apache.zookeeper.proto.GetChildrenResponse;

        r1 := @parameter0: java.util.List;

        r0.<org.apache.zookeeper.proto.GetChildrenResponse: java.util.List children> = r1;

        return;
    }

    public void serialize(org.apache.jute.OutputArchive, java.lang.String) throws java.io.IOException
    {
        org.apache.zookeeper.proto.GetChildrenResponse r1;
        java.util.List $r3, $r4, $r5, $r6, $r7;
        org.apache.jute.OutputArchive r0;
        int $i0, i1;
        java.lang.Object $r8;
        java.lang.String r2, r9;

        r1 := @this: org.apache.zookeeper.proto.GetChildrenResponse;

        r0 := @parameter0: org.apache.jute.OutputArchive;

        r2 := @parameter1: java.lang.String;

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void startRecord(org.apache.jute.Record,java.lang.String)>(r1, r2);

        $r3 = r1.<org.apache.zookeeper.proto.GetChildrenResponse: java.util.List children>;

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void startVector(java.util.List,java.lang.String)>($r3, "children");

        $r4 = r1.<org.apache.zookeeper.proto.GetChildrenResponse: java.util.List children>;

        if $r4 == null goto label2;

        $r6 = r1.<org.apache.zookeeper.proto.GetChildrenResponse: java.util.List children>;

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r7 = r1.<org.apache.zookeeper.proto.GetChildrenResponse: java.util.List children>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i1);

        r9 = (java.lang.String) $r8;

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void writeString(java.lang.String,java.lang.String)>(r9, "e1");

        i1 = i1 + 1;

        goto label1;

     label2:
        $r5 = r1.<org.apache.zookeeper.proto.GetChildrenResponse: java.util.List children>;

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void endVector(java.util.List,java.lang.String)>($r5, "children");

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void endRecord(org.apache.jute.Record,java.lang.String)>(r1, r2);

        return;
    }

    public void deserialize(org.apache.jute.InputArchive, java.lang.String) throws java.io.IOException
    {
        org.apache.zookeeper.proto.GetChildrenResponse r3;
        org.apache.jute.InputArchive r0;
        java.util.ArrayList $r4;
        java.util.List $r6;
        java.lang.String r1, $r5;
        org.apache.jute.Index $r2;
        boolean $z0;

        r3 := @this: org.apache.zookeeper.proto.GetChildrenResponse;

        r0 := @parameter0: org.apache.jute.InputArchive;

        r1 := @parameter1: java.lang.String;

        interfaceinvoke r0.<org.apache.jute.InputArchive: void startRecord(java.lang.String)>(r1);

        $r2 = interfaceinvoke r0.<org.apache.jute.InputArchive: org.apache.jute.Index startVector(java.lang.String)>("children");

        if $r2 == null goto label2;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r3.<org.apache.zookeeper.proto.GetChildrenResponse: java.util.List children> = $r4;

     label1:
        $z0 = interfaceinvoke $r2.<org.apache.jute.Index: boolean done()>();

        if $z0 != 0 goto label2;

        $r5 = interfaceinvoke r0.<org.apache.jute.InputArchive: java.lang.String readString(java.lang.String)>("e1");

        $r6 = r3.<org.apache.zookeeper.proto.GetChildrenResponse: java.util.List children>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r5);

        interfaceinvoke $r2.<org.apache.jute.Index: void incr()>();

        goto label1;

     label2:
        interfaceinvoke r0.<org.apache.jute.InputArchive: void endVector(java.lang.String)>("children");

        interfaceinvoke r0.<org.apache.jute.InputArchive: void endRecord(java.lang.String)>(r1);

        return;
    }

    public java.lang.String toString()
    {
        java.lang.Throwable $r12;
        byte[] $r7;
        org.apache.jute.CsvOutputArchive $r1;
        java.io.ByteArrayOutputStream $r0;
        org.apache.zookeeper.proto.GetChildrenResponse r2;
        java.util.List $r3, $r4, $r5, $r8, $r9;
        int $i0, i1;
        java.lang.Object $r10;
        java.lang.String $r6, r11;

        r2 := @this: org.apache.zookeeper.proto.GetChildrenResponse;

     label1:
        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        $r1 = new org.apache.jute.CsvOutputArchive;

        specialinvoke $r1.<org.apache.jute.CsvOutputArchive: void <init>(java.io.OutputStream)>($r0);

        virtualinvoke $r1.<org.apache.jute.CsvOutputArchive: void startRecord(org.apache.jute.Record,java.lang.String)>(r2, "");

        $r3 = r2.<org.apache.zookeeper.proto.GetChildrenResponse: java.util.List children>;

        virtualinvoke $r1.<org.apache.jute.CsvOutputArchive: void startVector(java.util.List,java.lang.String)>($r3, "children");

        $r4 = r2.<org.apache.zookeeper.proto.GetChildrenResponse: java.util.List children>;

        if $r4 == null goto label3;

        $r8 = r2.<org.apache.zookeeper.proto.GetChildrenResponse: java.util.List children>;

        $i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        i1 = 0;

     label2:
        if i1 >= $i0 goto label3;

        $r9 = r2.<org.apache.zookeeper.proto.GetChildrenResponse: java.util.List children>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i1);

        r11 = (java.lang.String) $r10;

        virtualinvoke $r1.<org.apache.jute.CsvOutputArchive: void writeString(java.lang.String,java.lang.String)>(r11, "e1");

        i1 = i1 + 1;

        goto label2;

     label3:
        $r5 = r2.<org.apache.zookeeper.proto.GetChildrenResponse: java.util.List children>;

        virtualinvoke $r1.<org.apache.jute.CsvOutputArchive: void endVector(java.util.List,java.lang.String)>($r5, "children");

        virtualinvoke $r1.<org.apache.jute.CsvOutputArchive: void endRecord(org.apache.jute.Record,java.lang.String)>(r2, "");

        $r6 = new java.lang.String;

        $r7 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r6.<java.lang.String: void <init>(byte[],java.lang.String)>($r7, "UTF-8");

     label4:
        return $r6;

     label5:
        $r12 := @caughtexception;

        virtualinvoke $r12.<java.lang.Throwable: void printStackTrace()>();

        return "ERROR";

        catch java.lang.Throwable from label1 to label4 with label5;
    }

    public void write(java.io.DataOutput) throws java.io.IOException
    {
        org.apache.jute.BinaryOutputArchive $r0;
        java.io.DataOutput r1;
        org.apache.zookeeper.proto.GetChildrenResponse r2;

        r2 := @this: org.apache.zookeeper.proto.GetChildrenResponse;

        r1 := @parameter0: java.io.DataOutput;

        $r0 = new org.apache.jute.BinaryOutputArchive;

        specialinvoke $r0.<org.apache.jute.BinaryOutputArchive: void <init>(java.io.DataOutput)>(r1);

        virtualinvoke r2.<org.apache.zookeeper.proto.GetChildrenResponse: void serialize(org.apache.jute.OutputArchive,java.lang.String)>($r0, "");

        return;
    }

    public void readFields(java.io.DataInput) throws java.io.IOException
    {
        java.io.DataInput r1;
        org.apache.zookeeper.proto.GetChildrenResponse r2;
        org.apache.jute.BinaryInputArchive $r0;

        r2 := @this: org.apache.zookeeper.proto.GetChildrenResponse;

        r1 := @parameter0: java.io.DataInput;

        $r0 = new org.apache.jute.BinaryInputArchive;

        specialinvoke $r0.<org.apache.jute.BinaryInputArchive: void <init>(java.io.DataInput)>(r1);

        virtualinvoke r2.<org.apache.zookeeper.proto.GetChildrenResponse: void deserialize(org.apache.jute.InputArchive,java.lang.String)>($r0, "");

        return;
    }

    public int compareTo(java.lang.Object) throws java.lang.ClassCastException
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.Object r2;
        org.apache.zookeeper.proto.GetChildrenResponse r1;

        r1 := @this: org.apache.zookeeper.proto.GetChildrenResponse;

        r2 := @parameter0: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("comparing GetChildrenResponse is unimplemented");

        throw $r0;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.List $r3, $r4;
        org.apache.zookeeper.proto.GetChildrenResponse r1, r2;
        java.lang.Object r0;
        boolean $z0, $z1;

        r1 := @this: org.apache.zookeeper.proto.GetChildrenResponse;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.zookeeper.proto.GetChildrenResponse;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        if r0 != r1 goto label2;

        return 1;

     label2:
        r2 = (org.apache.zookeeper.proto.GetChildrenResponse) r0;

        $r4 = r1.<org.apache.zookeeper.proto.GetChildrenResponse: java.util.List children>;

        $r3 = r2.<org.apache.zookeeper.proto.GetChildrenResponse: java.util.List children>;

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label3;

        return $z1;

     label3:
        return $z1;
    }

    public int hashCode()
    {
        java.util.List $r1;
        org.apache.zookeeper.proto.GetChildrenResponse r0;
        int $i0, i1;

        r0 := @this: org.apache.zookeeper.proto.GetChildrenResponse;

        $r1 = r0.<org.apache.zookeeper.proto.GetChildrenResponse: java.util.List children>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        i1 = 629 + $i0;

        return i1;
    }

    public static java.lang.String signature()
    {
        return "LGetChildrenResponse([s])";
    }
}
