public class org.apache.zookeeper.server.quorum.ObserverRequestProcessor extends java.lang.Thread implements org.apache.zookeeper.server.RequestProcessor
{
    private static final org.slf4j.Logger LOG;
    org.apache.zookeeper.server.quorum.ObserverZooKeeperServer zks;
    org.apache.zookeeper.server.RequestProcessor nextProcessor;
    java.util.concurrent.LinkedBlockingQueue queuedRequests;
    boolean finished;

    public void <init>(org.apache.zookeeper.server.quorum.ObserverZooKeeperServer, org.apache.zookeeper.server.RequestProcessor)
    {
        long $l0;
        java.util.concurrent.LinkedBlockingQueue $r6;
        org.apache.zookeeper.server.quorum.ObserverZooKeeperServer r3;
        org.apache.zookeeper.server.quorum.ObserverRequestProcessor r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r5;
        org.apache.zookeeper.server.RequestProcessor r7;

        r0 := @this: org.apache.zookeeper.server.quorum.ObserverRequestProcessor;

        r3 := @parameter0: org.apache.zookeeper.server.quorum.ObserverZooKeeperServer;

        r7 := @parameter1: org.apache.zookeeper.server.RequestProcessor;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ObserverRequestProcessor:");

        $l0 = virtualinvoke r3.<org.apache.zookeeper.server.quorum.ObserverZooKeeperServer: long getServerId()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>($r5);

        $r6 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke $r6.<java.util.concurrent.LinkedBlockingQueue: void <init>()>();

        r0.<org.apache.zookeeper.server.quorum.ObserverRequestProcessor: java.util.concurrent.LinkedBlockingQueue queuedRequests> = $r6;

        r0.<org.apache.zookeeper.server.quorum.ObserverRequestProcessor: boolean finished> = 0;

        r0.<org.apache.zookeeper.server.quorum.ObserverRequestProcessor: org.apache.zookeeper.server.quorum.ObserverZooKeeperServer zks> = r3;

        r0.<org.apache.zookeeper.server.quorum.ObserverRequestProcessor: org.apache.zookeeper.server.RequestProcessor nextProcessor> = r7;

        return;
    }

    public void run()
    {
        int $i0;
        org.apache.zookeeper.server.RequestProcessor $r6;
        boolean $z0, $z1;
        org.slf4j.Logger $r1, $r4, $r13, $r15;
        org.apache.zookeeper.server.quorum.Observer $r10, $r12;
        java.util.concurrent.LinkedBlockingQueue $r2;
        java.lang.Exception $r14;
        org.apache.zookeeper.server.quorum.ObserverZooKeeperServer $r7, $r9, $r11;
        org.apache.zookeeper.server.Request $r5, r16;
        org.apache.zookeeper.server.quorum.ObserverRequestProcessor r0;
        java.lang.Object $r3;
        java.util.concurrent.ConcurrentLinkedQueue $r8;

        r0 := @this: org.apache.zookeeper.server.quorum.ObserverRequestProcessor;

     label1:
        $z0 = r0.<org.apache.zookeeper.server.quorum.ObserverRequestProcessor: boolean finished>;

        if $z0 != 0 goto label7;

        $r2 = r0.<org.apache.zookeeper.server.quorum.ObserverRequestProcessor: java.util.concurrent.LinkedBlockingQueue queuedRequests>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.LinkedBlockingQueue: java.lang.Object take()>();

        r16 = (org.apache.zookeeper.server.Request) $r3;

        $r4 = <org.apache.zookeeper.server.quorum.ObserverRequestProcessor: org.slf4j.Logger LOG>;

        $z1 = interfaceinvoke $r4.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z1 == 0 goto label2;

        $r13 = <org.apache.zookeeper.server.quorum.ObserverRequestProcessor: org.slf4j.Logger LOG>;

        staticinvoke <org.apache.zookeeper.server.ZooTrace: void logRequest(org.slf4j.Logger,long,char,org.apache.zookeeper.server.Request,java.lang.String)>($r13, 2L, 70, r16, "");

     label2:
        $r5 = <org.apache.zookeeper.server.Request: org.apache.zookeeper.server.Request requestOfDeath>;

        if r16 != $r5 goto label3;

        goto label7;

     label3:
        $r6 = r0.<org.apache.zookeeper.server.quorum.ObserverRequestProcessor: org.apache.zookeeper.server.RequestProcessor nextProcessor>;

        interfaceinvoke $r6.<org.apache.zookeeper.server.RequestProcessor: void processRequest(org.apache.zookeeper.server.Request)>(r16);

        $i0 = r16.<org.apache.zookeeper.server.Request: int type>;

        tableswitch($i0)
        {
            case -11: goto label5;
            case -10: goto label5;
            case -9: goto label6;
            case -8: goto label6;
            case -7: goto label6;
            case -6: goto label6;
            case -5: goto label6;
            case -4: goto label6;
            case -3: goto label6;
            case -2: goto label6;
            case -1: goto label6;
            case 0: goto label6;
            case 1: goto label5;
            case 2: goto label5;
            case 3: goto label6;
            case 4: goto label6;
            case 5: goto label5;
            case 6: goto label6;
            case 7: goto label5;
            case 8: goto label6;
            case 9: goto label4;
            case 10: goto label6;
            case 11: goto label6;
            case 12: goto label6;
            case 13: goto label6;
            case 14: goto label5;
            default: goto label6;
        };

     label4:
        $r7 = r0.<org.apache.zookeeper.server.quorum.ObserverRequestProcessor: org.apache.zookeeper.server.quorum.ObserverZooKeeperServer zks>;

        $r8 = $r7.<org.apache.zookeeper.server.quorum.ObserverZooKeeperServer: java.util.concurrent.ConcurrentLinkedQueue pendingSyncs>;

        virtualinvoke $r8.<java.util.concurrent.ConcurrentLinkedQueue: boolean add(java.lang.Object)>(r16);

        $r9 = r0.<org.apache.zookeeper.server.quorum.ObserverRequestProcessor: org.apache.zookeeper.server.quorum.ObserverZooKeeperServer zks>;

        $r10 = virtualinvoke $r9.<org.apache.zookeeper.server.quorum.ObserverZooKeeperServer: org.apache.zookeeper.server.quorum.Observer getObserver()>();

        virtualinvoke $r10.<org.apache.zookeeper.server.quorum.Observer: void request(org.apache.zookeeper.server.Request)>(r16);

        goto label6;

     label5:
        $r11 = r0.<org.apache.zookeeper.server.quorum.ObserverRequestProcessor: org.apache.zookeeper.server.quorum.ObserverZooKeeperServer zks>;

        $r12 = virtualinvoke $r11.<org.apache.zookeeper.server.quorum.ObserverZooKeeperServer: org.apache.zookeeper.server.quorum.Observer getObserver()>();

        virtualinvoke $r12.<org.apache.zookeeper.server.quorum.Observer: void request(org.apache.zookeeper.server.Request)>(r16);

     label6:
        goto label1;

     label7:
        goto label9;

     label8:
        $r14 := @caughtexception;

        $r15 = <org.apache.zookeeper.server.quorum.ObserverRequestProcessor: org.slf4j.Logger LOG>;

        interfaceinvoke $r15.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Unexpected exception causing exit", $r14);

     label9:
        $r1 = <org.apache.zookeeper.server.quorum.ObserverRequestProcessor: org.slf4j.Logger LOG>;

        interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("ObserverRequestProcessor exited loop!");

        return;

        catch java.lang.Exception from label1 to label7 with label8;
    }

    public void processRequest(org.apache.zookeeper.server.Request)
    {
        org.apache.zookeeper.server.Request r1;
        org.apache.zookeeper.server.quorum.ObserverRequestProcessor r0;
        java.util.concurrent.LinkedBlockingQueue $r2;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.server.quorum.ObserverRequestProcessor;

        r1 := @parameter0: org.apache.zookeeper.server.Request;

        $z0 = r0.<org.apache.zookeeper.server.quorum.ObserverRequestProcessor: boolean finished>;

        if $z0 != 0 goto label1;

        $r2 = r0.<org.apache.zookeeper.server.quorum.ObserverRequestProcessor: java.util.concurrent.LinkedBlockingQueue queuedRequests>;

        virtualinvoke $r2.<java.util.concurrent.LinkedBlockingQueue: boolean add(java.lang.Object)>(r1);

     label1:
        return;
    }

    public void shutdown()
    {
        org.apache.zookeeper.server.Request $r3;
        org.slf4j.Logger $r0;
        org.apache.zookeeper.server.quorum.ObserverRequestProcessor r1;
        org.apache.zookeeper.server.RequestProcessor $r5;
        java.util.concurrent.LinkedBlockingQueue $r2, $r4;

        r1 := @this: org.apache.zookeeper.server.quorum.ObserverRequestProcessor;

        $r0 = <org.apache.zookeeper.server.quorum.ObserverRequestProcessor: org.slf4j.Logger LOG>;

        interfaceinvoke $r0.<org.slf4j.Logger: void info(java.lang.String)>("Shutting down");

        r1.<org.apache.zookeeper.server.quorum.ObserverRequestProcessor: boolean finished> = 1;

        $r2 = r1.<org.apache.zookeeper.server.quorum.ObserverRequestProcessor: java.util.concurrent.LinkedBlockingQueue queuedRequests>;

        virtualinvoke $r2.<java.util.concurrent.LinkedBlockingQueue: void clear()>();

        $r4 = r1.<org.apache.zookeeper.server.quorum.ObserverRequestProcessor: java.util.concurrent.LinkedBlockingQueue queuedRequests>;

        $r3 = <org.apache.zookeeper.server.Request: org.apache.zookeeper.server.Request requestOfDeath>;

        virtualinvoke $r4.<java.util.concurrent.LinkedBlockingQueue: boolean add(java.lang.Object)>($r3);

        $r5 = r1.<org.apache.zookeeper.server.quorum.ObserverRequestProcessor: org.apache.zookeeper.server.RequestProcessor nextProcessor>;

        interfaceinvoke $r5.<org.apache.zookeeper.server.RequestProcessor: void shutdown()>();

        return;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/zookeeper/server/quorum/ObserverRequestProcessor;");

        <org.apache.zookeeper.server.quorum.ObserverRequestProcessor: org.slf4j.Logger LOG> = $r0;

        return;
    }
}
