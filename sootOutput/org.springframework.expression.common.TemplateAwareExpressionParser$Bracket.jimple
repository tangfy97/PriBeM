class org.springframework.expression.common.TemplateAwareExpressionParser$Bracket extends java.lang.Object
{
    char bracket;
    int pos;

    void <init>(char, int)
    {
        int i1;
        org.springframework.expression.common.TemplateAwareExpressionParser$Bracket r0;
        char c0;

        r0 := @this: org.springframework.expression.common.TemplateAwareExpressionParser$Bracket;

        c0 := @parameter0: char;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.expression.common.TemplateAwareExpressionParser$Bracket: char bracket> = c0;

        r0.<org.springframework.expression.common.TemplateAwareExpressionParser$Bracket: int pos> = i1;

        return;
    }

    boolean compatibleWithCloseBracket(char)
    {
        org.springframework.expression.common.TemplateAwareExpressionParser$Bracket r0;
        char $c0, $c1, c2;
        int $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.springframework.expression.common.TemplateAwareExpressionParser$Bracket;

        c2 := @parameter0: char;

        $c0 = r0.<org.springframework.expression.common.TemplateAwareExpressionParser$Bracket: char bracket>;

        $i3 = (int) $c0;

        if $i3 != 123 goto label2;

        $i4 = (int) c2;

        if $i4 != 125 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $c1 = r0.<org.springframework.expression.common.TemplateAwareExpressionParser$Bracket: char bracket>;

        $i5 = (int) $c1;

        if $i5 != 91 goto label4;

        $i6 = (int) c2;

        if $i6 != 93 goto label3;

        return 1;

     label3:
        return 0;

     label4:
        $i7 = (int) c2;

        if $i7 != 41 goto label5;

        return 1;

     label5:
        return 0;
    }

    static char theOpenBracketFor(char)
    {
        int $i1, $i2;
        char c0;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        if $i1 != 125 goto label1;

        return 123;

     label1:
        $i2 = (int) c0;

        if $i2 != 93 goto label2;

        return 91;

     label2:
        return 40;
    }

    static char theCloseBracketFor(char)
    {
        int $i1, $i2;
        char c0;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        if $i1 != 123 goto label1;

        return 125;

     label1:
        $i2 = (int) c0;

        if $i2 != 91 goto label2;

        return 93;

     label2:
        return 41;
    }
}
