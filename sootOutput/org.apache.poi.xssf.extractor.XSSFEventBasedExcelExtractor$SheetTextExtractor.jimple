public class org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor extends java.lang.Object implements org.apache.poi.xssf.eventusermodel.XSSFSheetXMLHandler$SheetContentsHandler
{
    private final java.lang.StringBuffer output;
    private boolean firstCellOfRow;
    private final java.util.Map headerFooterMap;
    final org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor this$0;

    protected void <init>(org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor)
    {
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor r0;
        java.lang.StringBuffer $r2;
        java.util.HashMap $r3;
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor r1;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor;

        r1 := @parameter0: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor;

        r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: java.lang.StringBuffer output> = $r2;

        r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: boolean firstCellOfRow> = 1;

        $z0 = staticinvoke <org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: boolean access$400(org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor)>(r1);

        if $z0 == 0 goto label1;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        goto label2;

     label1:
        $r3 = null;

     label2:
        r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: java.util.Map headerFooterMap> = $r3;

        return;
    }

    public void startRow(int)
    {
        int i0;
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor r0;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor;

        i0 := @parameter0: int;

        r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: boolean firstCellOfRow> = 1;

        return;
    }

    public void endRow(int)
    {
        int i0;
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor r0;
        java.lang.StringBuffer $r1;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: java.lang.StringBuffer output>;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        return;
    }

    public void cell(java.lang.String, java.lang.String, org.apache.poi.xssf.usermodel.XSSFComment)
    {
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor r0;
        java.lang.StringBuffer $r1, $r8, $r14, $r16, $r17, $r18, $r19;
        org.apache.poi.xssf.usermodel.XSSFComment r4;
        org.apache.poi.xssf.usermodel.XSSFRichTextString $r5;
        java.lang.String r2, $r6, $r7, $r10, $r13, $r15, r20, $r21;
        boolean $z0, $z1, $z2;
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor $r3;
        java.lang.StringBuilder $r9, $r11, $r12;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor;

        r20 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r4 := @parameter2: org.apache.poi.xssf.usermodel.XSSFComment;

        $z0 = r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: boolean firstCellOfRow>;

        if $z0 == 0 goto label1;

        r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: boolean firstCellOfRow> = 0;

        goto label2;

     label1:
        $r1 = r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: java.lang.StringBuffer output>;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(9);

     label2:
        if r2 == null goto label3;

        $r19 = r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: java.lang.StringBuffer output>;

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

     label3:
        $r3 = r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor this$0>;

        $z1 = staticinvoke <org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: boolean access$500(org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor)>($r3);

        if $z1 == 0 goto label7;

        if r4 == null goto label7;

        $r5 = virtualinvoke r4.<org.apache.poi.xssf.usermodel.XSSFComment: org.apache.poi.xssf.usermodel.XSSFRichTextString getString()>();

        $r6 = virtualinvoke $r5.<org.apache.poi.xssf.usermodel.XSSFRichTextString: java.lang.String getString()>();

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String replace(char,char)>(10, 32);

        $r8 = r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: java.lang.StringBuffer output>;

        if r2 == null goto label4;

        $r21 = " Comment by ";

        goto label5;

     label4:
        $r21 = "Comment by ";

     label5:
        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r4.<org.apache.poi.xssf.usermodel.XSSFComment: java.lang.String getAuthor()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $z2 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>($r13);

        if $z2 == 0 goto label6;

        $r18 = r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: java.lang.StringBuffer output>;

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        goto label7;

     label6:
        $r14 = r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: java.lang.StringBuffer output>;

        $r15 = virtualinvoke r4.<org.apache.poi.xssf.usermodel.XSSFComment: java.lang.String getAuthor()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

     label7:
        return;
    }

    public void headerFooter(java.lang.String, boolean, java.lang.String)
    {
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor r0;
        java.util.Map $r1, $r4;
        java.lang.String r2, r3;
        boolean z0;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor;

        r3 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        $r1 = r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: java.util.Map headerFooterMap>;

        if $r1 == null goto label1;

        $r4 = r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: java.util.Map headerFooterMap>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

     label1:
        return;
    }

    private void appendHeaderFooterText(java.lang.StringBuffer, java.lang.String)
    {
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor r0;
        java.lang.StringBuffer r7, $r8;
        java.util.Map $r2;
        int $i0;
        java.lang.Object $r3;
        java.lang.String r1, $r4, $r5, $r6, r9;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor;

        r7 := @parameter0: java.lang.StringBuffer;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: java.util.Map headerFooterMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r9 = (java.lang.String) $r3;

        if r9 == null goto label1;

        $i0 = virtualinvoke r9.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r4 = specialinvoke r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: java.lang.String handleHeaderFooterDelimiter(java.lang.String,java.lang.String)>(r9, "&L");

        $r5 = specialinvoke r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: java.lang.String handleHeaderFooterDelimiter(java.lang.String,java.lang.String)>($r4, "&C");

        $r6 = specialinvoke r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: java.lang.String handleHeaderFooterDelimiter(java.lang.String,java.lang.String)>($r5, "&R");

        $r8 = virtualinvoke r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

     label1:
        return;
    }

    private java.lang.String handleHeaderFooterDelimiter(java.lang.String, java.lang.String)
    {
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor r7;
        int $i0, $i1;
        java.lang.StringBuilder $r1, $r3, $r4, $r6;
        java.lang.String r0, $r2, $r5, r8;

        r7 := @this: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor;

        r8 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r8.<java.lang.String: int indexOf(java.lang.String)>(r0);

        if $i0 != 0 goto label1;

        r8 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int)>(2);

        goto label2;

     label1:
        if $i0 <= 0 goto label2;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $i1 = $i0 + 2;

        $r5 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int)>($i1);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return r8;
    }

    private void appendHeaderText(java.lang.StringBuffer)
    {
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor r0;
        java.lang.StringBuffer r1;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor;

        r1 := @parameter0: java.lang.StringBuffer;

        specialinvoke r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: void appendHeaderFooterText(java.lang.StringBuffer,java.lang.String)>(r1, "firstHeader");

        specialinvoke r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: void appendHeaderFooterText(java.lang.StringBuffer,java.lang.String)>(r1, "oddHeader");

        specialinvoke r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: void appendHeaderFooterText(java.lang.StringBuffer,java.lang.String)>(r1, "evenHeader");

        return;
    }

    private void appendFooterText(java.lang.StringBuffer)
    {
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor r0;
        java.lang.StringBuffer r1;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor;

        r1 := @parameter0: java.lang.StringBuffer;

        specialinvoke r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: void appendHeaderFooterText(java.lang.StringBuffer,java.lang.String)>(r1, "firstFooter");

        specialinvoke r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: void appendHeaderFooterText(java.lang.StringBuffer,java.lang.String)>(r1, "oddFooter");

        specialinvoke r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: void appendHeaderFooterText(java.lang.StringBuffer,java.lang.String)>(r1, "evenFooter");

        return;
    }

    private void appendCellText(java.lang.StringBuffer)
    {
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor r1;
        java.lang.StringBuffer r0, $r2;

        r1 := @this: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor;

        r0 := @parameter0: java.lang.StringBuffer;

        $r2 = r1.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: java.lang.StringBuffer output>;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>($r2);

        return;
    }

    private void reset()
    {
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor r0;
        java.lang.StringBuffer $r1;
        java.util.Map $r2, $r3;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor;

        $r1 = r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: java.lang.StringBuffer output>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: boolean firstCellOfRow> = 1;

        $r2 = r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: java.util.Map headerFooterMap>;

        if $r2 == null goto label1;

        $r3 = r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: java.util.Map headerFooterMap>;

        interfaceinvoke $r3.<java.util.Map: void clear()>();

     label1:
        return;
    }

    static void access$000(org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor, java.lang.StringBuffer)
    {
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor r0;
        java.lang.StringBuffer r1;

        r0 := @parameter0: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor;

        r1 := @parameter1: java.lang.StringBuffer;

        specialinvoke r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: void appendHeaderText(java.lang.StringBuffer)>(r1);

        return;
    }

    static void access$100(org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor, java.lang.StringBuffer)
    {
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor r0;
        java.lang.StringBuffer r1;

        r0 := @parameter0: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor;

        r1 := @parameter1: java.lang.StringBuffer;

        specialinvoke r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: void appendCellText(java.lang.StringBuffer)>(r1);

        return;
    }

    static void access$200(org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor, java.lang.StringBuffer)
    {
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor r0;
        java.lang.StringBuffer r1;

        r0 := @parameter0: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor;

        r1 := @parameter1: java.lang.StringBuffer;

        specialinvoke r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: void appendFooterText(java.lang.StringBuffer)>(r1);

        return;
    }

    static void access$300(org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor)
    {
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor r0;

        r0 := @parameter0: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor;

        specialinvoke r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: void reset()>();

        return;
    }
}
