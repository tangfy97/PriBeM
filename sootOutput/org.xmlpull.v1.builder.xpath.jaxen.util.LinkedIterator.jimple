public class org.xmlpull.v1.builder.xpath.jaxen.util.LinkedIterator extends java.lang.Object implements java.util.Iterator
{
    private java.util.List iterators;
    private int cur;

    public void <init>()
    {
        org.xmlpull.v1.builder.xpath.jaxen.util.LinkedIterator r0;
        java.util.ArrayList $r1;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.util.LinkedIterator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.xmlpull.v1.builder.xpath.jaxen.util.LinkedIterator: java.util.List iterators> = $r1;

        r0.<org.xmlpull.v1.builder.xpath.jaxen.util.LinkedIterator: int cur> = 0;

        return;
    }

    public void addIterator(java.util.Iterator)
    {
        org.xmlpull.v1.builder.xpath.jaxen.util.LinkedIterator r0;
        java.util.List $r2;
        java.util.Iterator r1;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.util.LinkedIterator;

        r1 := @parameter0: java.util.Iterator;

        $r2 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.LinkedIterator: java.util.List iterators>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public boolean hasNext()
    {
        java.util.Iterator $r4;
        org.xmlpull.v1.builder.xpath.jaxen.util.LinkedIterator r0;
        java.util.List $r1, $r2, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Object $r3;
        boolean $z0, z1;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.util.LinkedIterator;

        $i0 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.LinkedIterator: int cur>;

        $r1 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.LinkedIterator: java.util.List iterators>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i1 goto label1;

        $r2 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.LinkedIterator: java.util.List iterators>;

        $i2 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.LinkedIterator: int cur>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i2);

        $r4 = (java.util.Iterator) $r3;

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        z1 = $z0;

        if $z0 != 0 goto label2;

        $i3 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.LinkedIterator: int cur>;

        $r5 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.LinkedIterator: java.util.List iterators>;

        $i4 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i3 >= $i4 goto label2;

        $i5 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.LinkedIterator: int cur>;

        $i6 = $i5 + 1;

        r0.<org.xmlpull.v1.builder.xpath.jaxen.util.LinkedIterator: int cur> = $i6;

        z1 = virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.util.LinkedIterator: boolean hasNext()>();

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public java.lang.Object next()
    {
        java.util.Iterator $r3;
        org.xmlpull.v1.builder.xpath.jaxen.util.LinkedIterator r0;
        java.util.List $r1;
        int $i0;
        java.lang.Object $r2, $r4;
        java.util.NoSuchElementException $r5;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.util.LinkedIterator;

        $z0 = virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.util.LinkedIterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>()>();

        throw $r5;

     label1:
        $r1 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.LinkedIterator: java.util.List iterators>;

        $i0 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.LinkedIterator: int cur>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (java.util.Iterator) $r2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        return $r4;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        org.xmlpull.v1.builder.xpath.jaxen.util.LinkedIterator r1;

        r1 := @this: org.xmlpull.v1.builder.xpath.jaxen.util.LinkedIterator;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }
}
