public class org.springframework.beans.factory.'annotation'.InjectionMetadata extends java.lang.Object
{
    private final org.apache.commons.logging.Log logger;
    private final java.util.Set injectedElements;

    public void <init>(java.lang.Class, java.util.Collection)
    {
        java.lang.String $r12, $r16;
        java.util.LinkedHashSet $r2;
        boolean $z0, $z1;
        org.springframework.beans.factory.'annotation'.InjectionMetadata$InjectedElement r6;
        java.util.Iterator $r4;
        org.springframework.beans.factory.'annotation'.InjectionMetadata r0;
        java.util.Collection r3;
        java.util.Set $r8;
        org.apache.commons.logging.Log $r1, $r7, $r10;
        java.lang.Object $r5;
        java.lang.StringBuilder $r9, $r13, $r14, $r15;
        java.lang.Class r11;

        r0 := @this: org.springframework.beans.factory.'annotation'.InjectionMetadata;

        r11 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.util.Collection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/springframework/beans/factory/annotation/InjectionMetadata;");

        r0.<org.springframework.beans.factory.'annotation'.InjectionMetadata: org.apache.commons.logging.Log logger> = $r1;

        $r2 = new java.util.LinkedHashSet;

        specialinvoke $r2.<java.util.LinkedHashSet: void <init>()>();

        r0.<org.springframework.beans.factory.'annotation'.InjectionMetadata: java.util.Set injectedElements> = $r2;

        $r4 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>();

        goto label3;

     label1:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.springframework.beans.factory.'annotation'.InjectionMetadata$InjectedElement) $r5;

        $r7 = r0.<org.springframework.beans.factory.'annotation'.InjectionMetadata: org.apache.commons.logging.Log logger>;

        $z0 = interfaceinvoke $r7.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label2;

        $r10 = r0.<org.springframework.beans.factory.'annotation'.InjectionMetadata: org.apache.commons.logging.Log logger>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Found injected element on class [");

        $r12 = virtualinvoke r11.<java.lang.Class: java.lang.String getName()>();

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r16);

     label2:
        $r8 = r0.<org.springframework.beans.factory.'annotation'.InjectionMetadata: java.util.Set injectedElements>;

        interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>(r6);

     label3:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        return;
    }

    public void checkConfigMembers(org.springframework.beans.factory.support.RootBeanDefinition)
    {
        org.springframework.beans.factory.support.RootBeanDefinition r6;
        org.springframework.beans.factory.'annotation'.InjectionMetadata$InjectedElement $r4;
        java.util.Iterator $r2;
        org.springframework.beans.factory.'annotation'.InjectionMetadata r0;
        java.lang.reflect.Member $r5;
        java.util.Set $r1;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: org.springframework.beans.factory.'annotation'.InjectionMetadata;

        r6 := @parameter0: org.springframework.beans.factory.support.RootBeanDefinition;

        $r1 = r0.<org.springframework.beans.factory.'annotation'.InjectionMetadata: java.util.Set injectedElements>;

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

        goto label3;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (org.springframework.beans.factory.'annotation'.InjectionMetadata$InjectedElement) $r3;

        $r5 = virtualinvoke $r4.<org.springframework.beans.factory.'annotation'.InjectionMetadata$InjectedElement: java.lang.reflect.Member getMember()>();

        $z0 = virtualinvoke r6.<org.springframework.beans.factory.support.RootBeanDefinition: boolean isExternallyManagedConfigMember(java.lang.reflect.Member)>($r5);

        if $z0 != 0 goto label2;

        virtualinvoke r6.<org.springframework.beans.factory.support.RootBeanDefinition: void registerExternallyManagedConfigMember(java.lang.reflect.Member)>($r5);

        goto label3;

     label2:
        interfaceinvoke $r2.<java.util.Iterator: void remove()>();

     label3:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        return;
    }

    public void inject(java.lang.Object, java.lang.String, org.springframework.beans.PropertyValues) throws java.lang.Throwable
    {
        java.lang.String r8, $r15;
        boolean $z0, $z1, $z2;
        org.springframework.beans.factory.'annotation'.InjectionMetadata$InjectedElement r6;
        java.util.Iterator $r4;
        org.springframework.beans.factory.'annotation'.InjectionMetadata r0;
        java.util.Set $r1, $r3;
        org.apache.commons.logging.Log $r2, $r11;
        java.lang.Object $r5, r7;
        java.lang.StringBuilder $r10, $r12, $r13, $r14;
        org.springframework.beans.PropertyValues r9;

        r0 := @this: org.springframework.beans.factory.'annotation'.InjectionMetadata;

        r7 := @parameter0: java.lang.Object;

        r8 := @parameter1: java.lang.String;

        r9 := @parameter2: org.springframework.beans.PropertyValues;

        $r1 = r0.<org.springframework.beans.factory.'annotation'.InjectionMetadata: java.util.Set injectedElements>;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        $r2 = r0.<org.springframework.beans.factory.'annotation'.InjectionMetadata: org.apache.commons.logging.Log logger>;

        $z1 = interfaceinvoke $r2.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        $r3 = r0.<org.springframework.beans.factory.'annotation'.InjectionMetadata: java.util.Set injectedElements>;

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        goto label3;

     label1:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.springframework.beans.factory.'annotation'.InjectionMetadata$InjectedElement) $r5;

        if $z1 == 0 goto label2;

        $r11 = r0.<org.springframework.beans.factory.'annotation'.InjectionMetadata: org.apache.commons.logging.Log logger>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Processing injected method of bean \'");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r11.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r15);

     label2:
        virtualinvoke r6.<org.springframework.beans.factory.'annotation'.InjectionMetadata$InjectedElement: void inject(java.lang.Object,java.lang.String,org.springframework.beans.PropertyValues)>(r7, r8, r9);

     label3:
        $z2 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label1;

     label4:
        return;
    }
}
