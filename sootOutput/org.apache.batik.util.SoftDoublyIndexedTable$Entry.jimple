public class org.apache.batik.util.SoftDoublyIndexedTable$Entry extends java.lang.ref.SoftReference
{
    public int hash;
    public java.lang.Object key1;
    public java.lang.Object key2;
    public org.apache.batik.util.SoftDoublyIndexedTable$Entry next;
    private final org.apache.batik.util.SoftDoublyIndexedTable this$0;

    public void <init>(org.apache.batik.util.SoftDoublyIndexedTable, int, java.lang.Object, java.lang.Object, java.lang.Object, org.apache.batik.util.SoftDoublyIndexedTable$Entry)
    {
        org.apache.batik.util.SoftDoublyIndexedTable r2;
        java.lang.ref.ReferenceQueue $r3;
        org.apache.batik.util.SoftDoublyIndexedTable$Entry r0, r6;
        int i0;
        java.lang.Object r1, r4, r5;

        r0 := @this: org.apache.batik.util.SoftDoublyIndexedTable$Entry;

        r2 := @parameter0: org.apache.batik.util.SoftDoublyIndexedTable;

        i0 := @parameter1: int;

        r4 := @parameter2: java.lang.Object;

        r5 := @parameter3: java.lang.Object;

        r1 := @parameter4: java.lang.Object;

        r6 := @parameter5: org.apache.batik.util.SoftDoublyIndexedTable$Entry;

        $r3 = r2.<org.apache.batik.util.SoftDoublyIndexedTable: java.lang.ref.ReferenceQueue referenceQueue>;

        specialinvoke r0.<java.lang.ref.SoftReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>(r1, $r3);

        r0.<org.apache.batik.util.SoftDoublyIndexedTable$Entry: org.apache.batik.util.SoftDoublyIndexedTable this$0> = r2;

        r0.<org.apache.batik.util.SoftDoublyIndexedTable$Entry: int hash> = i0;

        r0.<org.apache.batik.util.SoftDoublyIndexedTable$Entry: java.lang.Object key1> = r4;

        r0.<org.apache.batik.util.SoftDoublyIndexedTable$Entry: java.lang.Object key2> = r5;

        r0.<org.apache.batik.util.SoftDoublyIndexedTable$Entry: org.apache.batik.util.SoftDoublyIndexedTable$Entry next> = r6;

        return;
    }

    public boolean match(java.lang.Object, java.lang.Object)
    {
        org.apache.batik.util.SoftDoublyIndexedTable$Entry r0;
        java.lang.Object $r1, r2, $r3, r4, $r5, $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.batik.util.SoftDoublyIndexedTable$Entry;

        r2 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        $r1 = r0.<org.apache.batik.util.SoftDoublyIndexedTable$Entry: java.lang.Object key1>;

        if $r1 == null goto label1;

        $r6 = r0.<org.apache.batik.util.SoftDoublyIndexedTable$Entry: java.lang.Object key1>;

        $z1 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z1 != 0 goto label2;

        return 0;

     label1:
        if r2 == null goto label2;

        return 0;

     label2:
        $r3 = r0.<org.apache.batik.util.SoftDoublyIndexedTable$Entry: java.lang.Object key2>;

        if $r3 == null goto label3;

        $r5 = r0.<org.apache.batik.util.SoftDoublyIndexedTable$Entry: java.lang.Object key2>;

        $z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>(r4);

        return $z0;

     label3:
        if r4 != null goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        return $z2;
    }
}
