public class net.oauth.OAuthAccessor extends java.lang.Object implements java.lang.Cloneable, java.io.Serializable
{
    private static final long serialVersionUID;
    public final net.oauth.OAuthConsumer consumer;
    public java.lang.String requestToken;
    public java.lang.String accessToken;
    public java.lang.String tokenSecret;
    private final java.util.Map properties;

    public void <init>(net.oauth.OAuthConsumer)
    {
        net.oauth.OAuthConsumer r2;
        net.oauth.OAuthAccessor r0;
        java.util.HashMap $r1;

        r0 := @this: net.oauth.OAuthAccessor;

        r2 := @parameter0: net.oauth.OAuthConsumer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<net.oauth.OAuthAccessor: java.util.Map properties> = $r1;

        r0.<net.oauth.OAuthAccessor: net.oauth.OAuthConsumer consumer> = r2;

        r0.<net.oauth.OAuthAccessor: java.lang.String requestToken> = null;

        r0.<net.oauth.OAuthAccessor: java.lang.String accessToken> = null;

        r0.<net.oauth.OAuthAccessor: java.lang.String tokenSecret> = null;

        return;
    }

    public net.oauth.OAuthAccessor clone()
    {
        net.oauth.OAuthAccessor r0, $r2;
        java.lang.Object $r1;
        java.lang.RuntimeException $r4;
        java.lang.CloneNotSupportedException $r3;

        r0 := @this: net.oauth.OAuthAccessor;

     label1:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (net.oauth.OAuthAccessor) $r1;

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        net.oauth.OAuthAccessor r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: net.oauth.OAuthAccessor;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<net.oauth.OAuthAccessor: java.util.Map properties>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        return $r3;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        net.oauth.OAuthAccessor r0;
        java.util.Map $r3;
        java.lang.Object r2;
        java.lang.String r1;

        r0 := @this: net.oauth.OAuthAccessor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<net.oauth.OAuthAccessor: java.util.Map properties>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public net.oauth.OAuthMessage newRequestMessage(java.lang.String, java.lang.String, java.util.Collection, java.io.InputStream) throws net.oauth.OAuthException, java.io.IOException, java.net.URISyntaxException
    {
        java.util.Collection r1;
        net.oauth.OAuthAccessor r3;
        net.oauth.OAuthMessage $r8;
        net.oauth.OAuthConsumer $r5;
        java.lang.Object $r4, $r6;
        java.lang.String r0, r7;
        java.io.InputStream r2;

        r3 := @this: net.oauth.OAuthAccessor;

        r7 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.util.Collection;

        r2 := @parameter3: java.io.InputStream;

        if r7 != null goto label1;

        $r4 = virtualinvoke r3.<net.oauth.OAuthAccessor: java.lang.Object getProperty(java.lang.String)>("httpMethod");

        r7 = (java.lang.String) $r4;

        if r7 != null goto label1;

        $r5 = r3.<net.oauth.OAuthAccessor: net.oauth.OAuthConsumer consumer>;

        $r6 = virtualinvoke $r5.<net.oauth.OAuthConsumer: java.lang.Object getProperty(java.lang.String)>("httpMethod");

        r7 = (java.lang.String) $r6;

        if r7 != null goto label1;

        r7 = "GET";

     label1:
        $r8 = new net.oauth.OAuthMessage;

        specialinvoke $r8.<net.oauth.OAuthMessage: void <init>(java.lang.String,java.lang.String,java.util.Collection,java.io.InputStream)>(r7, r0, r1, r2);

        virtualinvoke $r8.<net.oauth.OAuthMessage: void addRequiredParameters(net.oauth.OAuthAccessor)>(r3);

        return $r8;
    }

    public net.oauth.OAuthMessage newRequestMessage(java.lang.String, java.lang.String, java.util.Collection) throws net.oauth.OAuthException, java.io.IOException, java.net.URISyntaxException
    {
        net.oauth.OAuthAccessor r0;
        java.util.Collection r3;
        net.oauth.OAuthMessage $r4;
        java.lang.String r1, r2;

        r0 := @this: net.oauth.OAuthAccessor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Collection;

        $r4 = virtualinvoke r0.<net.oauth.OAuthAccessor: net.oauth.OAuthMessage newRequestMessage(java.lang.String,java.lang.String,java.util.Collection,java.io.InputStream)>(r1, r2, r3, null);

        return $r4;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        net.oauth.OAuthAccessor r0, $r1;

        r0 := @this: net.oauth.OAuthAccessor;

        $r1 = virtualinvoke r0.<net.oauth.OAuthAccessor: net.oauth.OAuthAccessor clone()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <net.oauth.OAuthAccessor: long serialVersionUID> = 5590788443138352999L;

        return;
    }
}
