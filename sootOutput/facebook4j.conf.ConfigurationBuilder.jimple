public final class facebook4j.conf.ConfigurationBuilder extends java.lang.Object
{
    private facebook4j.conf.ConfigurationBase configurationBean;

    public void <init>()
    {
        facebook4j.conf.PropertyConfiguration $r1;
        facebook4j.conf.ConfigurationBuilder r0;

        r0 := @this: facebook4j.conf.ConfigurationBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new facebook4j.conf.PropertyConfiguration;

        specialinvoke $r1.<facebook4j.conf.PropertyConfiguration: void <init>()>();

        r0.<facebook4j.conf.ConfigurationBuilder: facebook4j.conf.ConfigurationBase configurationBean> = $r1;

        return;
    }

    public facebook4j.conf.ConfigurationBuilder setUseSSL(boolean)
    {
        facebook4j.conf.ConfigurationBuilder r0;
        facebook4j.conf.ConfigurationBase $r1;
        boolean z0;

        r0 := @this: facebook4j.conf.ConfigurationBuilder;

        z0 := @parameter0: boolean;

        specialinvoke r0.<facebook4j.conf.ConfigurationBuilder: void checkNotBuilt()>();

        $r1 = r0.<facebook4j.conf.ConfigurationBuilder: facebook4j.conf.ConfigurationBase configurationBean>;

        virtualinvoke $r1.<facebook4j.conf.ConfigurationBase: void setUseSSL(boolean)>(z0);

        return r0;
    }

    public facebook4j.conf.ConfigurationBuilder setPrettyDebugEnabled(boolean)
    {
        facebook4j.conf.ConfigurationBuilder r0;
        facebook4j.conf.ConfigurationBase $r1;
        boolean z0;

        r0 := @this: facebook4j.conf.ConfigurationBuilder;

        z0 := @parameter0: boolean;

        specialinvoke r0.<facebook4j.conf.ConfigurationBuilder: void checkNotBuilt()>();

        $r1 = r0.<facebook4j.conf.ConfigurationBuilder: facebook4j.conf.ConfigurationBase configurationBean>;

        virtualinvoke $r1.<facebook4j.conf.ConfigurationBase: void setPrettyDebugEnabled(boolean)>(z0);

        return r0;
    }

    public facebook4j.conf.ConfigurationBuilder setGZIPEnabled(boolean)
    {
        facebook4j.conf.ConfigurationBuilder r0;
        facebook4j.conf.ConfigurationBase $r1;
        boolean z0;

        r0 := @this: facebook4j.conf.ConfigurationBuilder;

        z0 := @parameter0: boolean;

        specialinvoke r0.<facebook4j.conf.ConfigurationBuilder: void checkNotBuilt()>();

        $r1 = r0.<facebook4j.conf.ConfigurationBuilder: facebook4j.conf.ConfigurationBase configurationBean>;

        virtualinvoke $r1.<facebook4j.conf.ConfigurationBase: void setGZIPEnabled(boolean)>(z0);

        return r0;
    }

    public facebook4j.conf.ConfigurationBuilder setDebugEnabled(boolean)
    {
        facebook4j.conf.ConfigurationBuilder r0;
        facebook4j.conf.ConfigurationBase $r1;
        boolean z0;

        r0 := @this: facebook4j.conf.ConfigurationBuilder;

        z0 := @parameter0: boolean;

        specialinvoke r0.<facebook4j.conf.ConfigurationBuilder: void checkNotBuilt()>();

        $r1 = r0.<facebook4j.conf.ConfigurationBuilder: facebook4j.conf.ConfigurationBase configurationBean>;

        virtualinvoke $r1.<facebook4j.conf.ConfigurationBase: void setDebug(boolean)>(z0);

        return r0;
    }

    public facebook4j.conf.ConfigurationBuilder setHttpProxyHost(java.lang.String)
    {
        java.lang.String r1;
        facebook4j.conf.ConfigurationBuilder r0;
        facebook4j.conf.ConfigurationBase $r2;

        r0 := @this: facebook4j.conf.ConfigurationBuilder;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<facebook4j.conf.ConfigurationBuilder: void checkNotBuilt()>();

        $r2 = r0.<facebook4j.conf.ConfigurationBuilder: facebook4j.conf.ConfigurationBase configurationBean>;

        virtualinvoke $r2.<facebook4j.conf.ConfigurationBase: void setHttpProxyHost(java.lang.String)>(r1);

        return r0;
    }

    public facebook4j.conf.ConfigurationBuilder setHttpProxyUser(java.lang.String)
    {
        java.lang.String r1;
        facebook4j.conf.ConfigurationBuilder r0;
        facebook4j.conf.ConfigurationBase $r2;

        r0 := @this: facebook4j.conf.ConfigurationBuilder;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<facebook4j.conf.ConfigurationBuilder: void checkNotBuilt()>();

        $r2 = r0.<facebook4j.conf.ConfigurationBuilder: facebook4j.conf.ConfigurationBase configurationBean>;

        virtualinvoke $r2.<facebook4j.conf.ConfigurationBase: void setHttpProxyUser(java.lang.String)>(r1);

        return r0;
    }

    public facebook4j.conf.ConfigurationBuilder setHttpProxyPassword(java.lang.String)
    {
        java.lang.String r1;
        facebook4j.conf.ConfigurationBuilder r0;
        facebook4j.conf.ConfigurationBase $r2;

        r0 := @this: facebook4j.conf.ConfigurationBuilder;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<facebook4j.conf.ConfigurationBuilder: void checkNotBuilt()>();

        $r2 = r0.<facebook4j.conf.ConfigurationBuilder: facebook4j.conf.ConfigurationBase configurationBean>;

        virtualinvoke $r2.<facebook4j.conf.ConfigurationBase: void setHttpProxyPassword(java.lang.String)>(r1);

        return r0;
    }

    public facebook4j.conf.ConfigurationBuilder setHttpProxyPort(int)
    {
        int i0;
        facebook4j.conf.ConfigurationBuilder r0;
        facebook4j.conf.ConfigurationBase $r1;

        r0 := @this: facebook4j.conf.ConfigurationBuilder;

        i0 := @parameter0: int;

        specialinvoke r0.<facebook4j.conf.ConfigurationBuilder: void checkNotBuilt()>();

        $r1 = r0.<facebook4j.conf.ConfigurationBuilder: facebook4j.conf.ConfigurationBase configurationBean>;

        virtualinvoke $r1.<facebook4j.conf.ConfigurationBase: void setHttpProxyPort(int)>(i0);

        return r0;
    }

    public facebook4j.conf.ConfigurationBuilder setHttpConnectionTimeout(int)
    {
        int i0;
        facebook4j.conf.ConfigurationBuilder r0;
        facebook4j.conf.ConfigurationBase $r1;

        r0 := @this: facebook4j.conf.ConfigurationBuilder;

        i0 := @parameter0: int;

        specialinvoke r0.<facebook4j.conf.ConfigurationBuilder: void checkNotBuilt()>();

        $r1 = r0.<facebook4j.conf.ConfigurationBuilder: facebook4j.conf.ConfigurationBase configurationBean>;

        virtualinvoke $r1.<facebook4j.conf.ConfigurationBase: void setHttpConnectionTimeout(int)>(i0);

        return r0;
    }

    public facebook4j.conf.ConfigurationBuilder setHttpReadTimeout(int)
    {
        int i0;
        facebook4j.conf.ConfigurationBuilder r0;
        facebook4j.conf.ConfigurationBase $r1;

        r0 := @this: facebook4j.conf.ConfigurationBuilder;

        i0 := @parameter0: int;

        specialinvoke r0.<facebook4j.conf.ConfigurationBuilder: void checkNotBuilt()>();

        $r1 = r0.<facebook4j.conf.ConfigurationBuilder: facebook4j.conf.ConfigurationBase configurationBean>;

        virtualinvoke $r1.<facebook4j.conf.ConfigurationBase: void setHttpReadTimeout(int)>(i0);

        return r0;
    }

    public facebook4j.conf.ConfigurationBuilder setHttpStreamingReadTimeout(int)
    {
        int i0;
        facebook4j.conf.ConfigurationBuilder r0;
        facebook4j.conf.ConfigurationBase $r1;

        r0 := @this: facebook4j.conf.ConfigurationBuilder;

        i0 := @parameter0: int;

        specialinvoke r0.<facebook4j.conf.ConfigurationBuilder: void checkNotBuilt()>();

        $r1 = r0.<facebook4j.conf.ConfigurationBuilder: facebook4j.conf.ConfigurationBase configurationBean>;

        virtualinvoke $r1.<facebook4j.conf.ConfigurationBase: void setHttpStreamingReadTimeout(int)>(i0);

        return r0;
    }

    public facebook4j.conf.ConfigurationBuilder setHttpRetryCount(int)
    {
        int i0;
        facebook4j.conf.ConfigurationBuilder r0;
        facebook4j.conf.ConfigurationBase $r1;

        r0 := @this: facebook4j.conf.ConfigurationBuilder;

        i0 := @parameter0: int;

        specialinvoke r0.<facebook4j.conf.ConfigurationBuilder: void checkNotBuilt()>();

        $r1 = r0.<facebook4j.conf.ConfigurationBuilder: facebook4j.conf.ConfigurationBase configurationBean>;

        virtualinvoke $r1.<facebook4j.conf.ConfigurationBase: void setHttpRetryCount(int)>(i0);

        return r0;
    }

    public facebook4j.conf.ConfigurationBuilder setHttpMaxTotalConnections(int)
    {
        int i0;
        facebook4j.conf.ConfigurationBuilder r0;
        facebook4j.conf.ConfigurationBase $r1;

        r0 := @this: facebook4j.conf.ConfigurationBuilder;

        i0 := @parameter0: int;

        specialinvoke r0.<facebook4j.conf.ConfigurationBuilder: void checkNotBuilt()>();

        $r1 = r0.<facebook4j.conf.ConfigurationBuilder: facebook4j.conf.ConfigurationBase configurationBean>;

        virtualinvoke $r1.<facebook4j.conf.ConfigurationBase: void setHttpMaxTotalConnections(int)>(i0);

        return r0;
    }

    public facebook4j.conf.ConfigurationBuilder setHttpDefaultMaxPerRoute(int)
    {
        int i0;
        facebook4j.conf.ConfigurationBuilder r0;
        facebook4j.conf.ConfigurationBase $r1;

        r0 := @this: facebook4j.conf.ConfigurationBuilder;

        i0 := @parameter0: int;

        specialinvoke r0.<facebook4j.conf.ConfigurationBuilder: void checkNotBuilt()>();

        $r1 = r0.<facebook4j.conf.ConfigurationBuilder: facebook4j.conf.ConfigurationBase configurationBean>;

        virtualinvoke $r1.<facebook4j.conf.ConfigurationBase: void setHttpDefaultMaxPerRoute(int)>(i0);

        return r0;
    }

    public facebook4j.conf.ConfigurationBuilder setHttpRetryIntervalSeconds(int)
    {
        int i0;
        facebook4j.conf.ConfigurationBuilder r0;
        facebook4j.conf.ConfigurationBase $r1;

        r0 := @this: facebook4j.conf.ConfigurationBuilder;

        i0 := @parameter0: int;

        specialinvoke r0.<facebook4j.conf.ConfigurationBuilder: void checkNotBuilt()>();

        $r1 = r0.<facebook4j.conf.ConfigurationBuilder: facebook4j.conf.ConfigurationBase configurationBean>;

        virtualinvoke $r1.<facebook4j.conf.ConfigurationBase: void setHttpRetryIntervalSeconds(int)>(i0);

        return r0;
    }

    public facebook4j.conf.ConfigurationBuilder setOAuthAppId(java.lang.String)
    {
        java.lang.String r1;
        facebook4j.conf.ConfigurationBuilder r0;
        facebook4j.conf.ConfigurationBase $r2;

        r0 := @this: facebook4j.conf.ConfigurationBuilder;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<facebook4j.conf.ConfigurationBuilder: void checkNotBuilt()>();

        $r2 = r0.<facebook4j.conf.ConfigurationBuilder: facebook4j.conf.ConfigurationBase configurationBean>;

        virtualinvoke $r2.<facebook4j.conf.ConfigurationBase: void setOAuthAppId(java.lang.String)>(r1);

        return r0;
    }

    public facebook4j.conf.ConfigurationBuilder setOAuthAppSecret(java.lang.String)
    {
        java.lang.String r1;
        facebook4j.conf.ConfigurationBuilder r0;
        facebook4j.conf.ConfigurationBase $r2;

        r0 := @this: facebook4j.conf.ConfigurationBuilder;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<facebook4j.conf.ConfigurationBuilder: void checkNotBuilt()>();

        $r2 = r0.<facebook4j.conf.ConfigurationBuilder: facebook4j.conf.ConfigurationBase configurationBean>;

        virtualinvoke $r2.<facebook4j.conf.ConfigurationBase: void setOAuthAppSecret(java.lang.String)>(r1);

        return r0;
    }

    public facebook4j.conf.ConfigurationBuilder setOAuthAccessToken(java.lang.String)
    {
        java.lang.String r1;
        facebook4j.conf.ConfigurationBuilder r0;
        facebook4j.conf.ConfigurationBase $r2;

        r0 := @this: facebook4j.conf.ConfigurationBuilder;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<facebook4j.conf.ConfigurationBuilder: void checkNotBuilt()>();

        $r2 = r0.<facebook4j.conf.ConfigurationBuilder: facebook4j.conf.ConfigurationBase configurationBean>;

        virtualinvoke $r2.<facebook4j.conf.ConfigurationBase: void setOAuthAccessToken(java.lang.String)>(r1);

        return r0;
    }

    public facebook4j.conf.ConfigurationBuilder setOAuthPermissions(java.lang.String)
    {
        java.lang.String r1;
        facebook4j.conf.ConfigurationBuilder r0;
        facebook4j.conf.ConfigurationBase $r2;

        r0 := @this: facebook4j.conf.ConfigurationBuilder;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<facebook4j.conf.ConfigurationBuilder: void checkNotBuilt()>();

        $r2 = r0.<facebook4j.conf.ConfigurationBuilder: facebook4j.conf.ConfigurationBase configurationBean>;

        virtualinvoke $r2.<facebook4j.conf.ConfigurationBase: void setOAuthPermissions(java.lang.String)>(r1);

        return r0;
    }

    public facebook4j.conf.ConfigurationBuilder setOAuthAuthorizationURL(java.lang.String)
    {
        java.lang.String r1;
        facebook4j.conf.ConfigurationBuilder r0;
        facebook4j.conf.ConfigurationBase $r2;

        r0 := @this: facebook4j.conf.ConfigurationBuilder;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<facebook4j.conf.ConfigurationBuilder: void checkNotBuilt()>();

        $r2 = r0.<facebook4j.conf.ConfigurationBuilder: facebook4j.conf.ConfigurationBase configurationBean>;

        virtualinvoke $r2.<facebook4j.conf.ConfigurationBase: void setOAuthAuthorizationURL(java.lang.String)>(r1);

        return r0;
    }

    public facebook4j.conf.ConfigurationBuilder setOAuthAccessTokenURL(java.lang.String)
    {
        java.lang.String r1;
        facebook4j.conf.ConfigurationBuilder r0;
        facebook4j.conf.ConfigurationBase $r2;

        r0 := @this: facebook4j.conf.ConfigurationBuilder;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<facebook4j.conf.ConfigurationBuilder: void checkNotBuilt()>();

        $r2 = r0.<facebook4j.conf.ConfigurationBuilder: facebook4j.conf.ConfigurationBase configurationBean>;

        virtualinvoke $r2.<facebook4j.conf.ConfigurationBase: void setOAuthAccessTokenURL(java.lang.String)>(r1);

        return r0;
    }

    public facebook4j.conf.ConfigurationBuilder setRestBaseURL(java.lang.String)
    {
        java.lang.String r1;
        facebook4j.conf.ConfigurationBuilder r0;
        facebook4j.conf.ConfigurationBase $r2;

        r0 := @this: facebook4j.conf.ConfigurationBuilder;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<facebook4j.conf.ConfigurationBuilder: void checkNotBuilt()>();

        $r2 = r0.<facebook4j.conf.ConfigurationBuilder: facebook4j.conf.ConfigurationBase configurationBean>;

        virtualinvoke $r2.<facebook4j.conf.ConfigurationBase: void setRestBaseURL(java.lang.String)>(r1);

        return r0;
    }

    public facebook4j.conf.ConfigurationBuilder setVideoBaseURL(java.lang.String)
    {
        java.lang.String r1;
        facebook4j.conf.ConfigurationBuilder r0;
        facebook4j.conf.ConfigurationBase $r2;

        r0 := @this: facebook4j.conf.ConfigurationBuilder;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<facebook4j.conf.ConfigurationBuilder: void checkNotBuilt()>();

        $r2 = r0.<facebook4j.conf.ConfigurationBuilder: facebook4j.conf.ConfigurationBase configurationBean>;

        virtualinvoke $r2.<facebook4j.conf.ConfigurationBase: void setVideoBaseURL(java.lang.String)>(r1);

        return r0;
    }

    public facebook4j.conf.ConfigurationBuilder setClientVersion(java.lang.String)
    {
        java.lang.String r1;
        facebook4j.conf.ConfigurationBuilder r0;
        facebook4j.conf.ConfigurationBase $r2;

        r0 := @this: facebook4j.conf.ConfigurationBuilder;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<facebook4j.conf.ConfigurationBuilder: void checkNotBuilt()>();

        $r2 = r0.<facebook4j.conf.ConfigurationBuilder: facebook4j.conf.ConfigurationBase configurationBean>;

        virtualinvoke $r2.<facebook4j.conf.ConfigurationBase: void setClientVersion(java.lang.String)>(r1);

        return r0;
    }

    public facebook4j.conf.ConfigurationBuilder setClientURL(java.lang.String)
    {
        java.lang.String r1;
        facebook4j.conf.ConfigurationBuilder r0;
        facebook4j.conf.ConfigurationBase $r2;

        r0 := @this: facebook4j.conf.ConfigurationBuilder;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<facebook4j.conf.ConfigurationBuilder: void checkNotBuilt()>();

        $r2 = r0.<facebook4j.conf.ConfigurationBuilder: facebook4j.conf.ConfigurationBase configurationBean>;

        virtualinvoke $r2.<facebook4j.conf.ConfigurationBase: void setClientURL(java.lang.String)>(r1);

        return r0;
    }

    public facebook4j.conf.ConfigurationBuilder setJSONStoreEnabled(boolean)
    {
        facebook4j.conf.ConfigurationBuilder r0;
        facebook4j.conf.ConfigurationBase $r1;
        boolean z0;

        r0 := @this: facebook4j.conf.ConfigurationBuilder;

        z0 := @parameter0: boolean;

        specialinvoke r0.<facebook4j.conf.ConfigurationBuilder: void checkNotBuilt()>();

        $r1 = r0.<facebook4j.conf.ConfigurationBuilder: facebook4j.conf.ConfigurationBase configurationBean>;

        virtualinvoke $r1.<facebook4j.conf.ConfigurationBase: void setJSONStoreEnabled(boolean)>(z0);

        return r0;
    }

    public facebook4j.conf.ConfigurationBuilder setMBeanEnabled(boolean)
    {
        facebook4j.conf.ConfigurationBuilder r0;
        facebook4j.conf.ConfigurationBase $r1;
        boolean z0;

        r0 := @this: facebook4j.conf.ConfigurationBuilder;

        z0 := @parameter0: boolean;

        specialinvoke r0.<facebook4j.conf.ConfigurationBuilder: void checkNotBuilt()>();

        $r1 = r0.<facebook4j.conf.ConfigurationBuilder: facebook4j.conf.ConfigurationBase configurationBean>;

        virtualinvoke $r1.<facebook4j.conf.ConfigurationBase: void setMBeanEnabled(boolean)>(z0);

        return r0;
    }

    public facebook4j.conf.Configuration build()
    {
        java.lang.Throwable $r3;
        facebook4j.conf.ConfigurationBuilder r0;
        facebook4j.conf.ConfigurationBase $r1, r2;

        r0 := @this: facebook4j.conf.ConfigurationBuilder;

        specialinvoke r0.<facebook4j.conf.ConfigurationBuilder: void checkNotBuilt()>();

        $r1 = r0.<facebook4j.conf.ConfigurationBuilder: facebook4j.conf.ConfigurationBase configurationBean>;

        virtualinvoke $r1.<facebook4j.conf.ConfigurationBase: void cacheInstance()>();

     label1:
        r2 = r0.<facebook4j.conf.ConfigurationBuilder: facebook4j.conf.ConfigurationBase configurationBean>;

     label2:
        r0.<facebook4j.conf.ConfigurationBuilder: facebook4j.conf.ConfigurationBase configurationBean> = null;

        return r2;

     label3:
        $r3 := @caughtexception;

     label4:
        r0.<facebook4j.conf.ConfigurationBuilder: facebook4j.conf.ConfigurationBase configurationBean> = null;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void checkNotBuilt()
    {
        java.lang.IllegalStateException $r2;
        facebook4j.conf.ConfigurationBuilder r0;
        facebook4j.conf.ConfigurationBase $r1;

        r0 := @this: facebook4j.conf.ConfigurationBuilder;

        $r1 = r0.<facebook4j.conf.ConfigurationBuilder: facebook4j.conf.ConfigurationBase configurationBean>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot use this builder any longer, build() has already been called");

        throw $r2;

     label1:
        return;
    }
}
