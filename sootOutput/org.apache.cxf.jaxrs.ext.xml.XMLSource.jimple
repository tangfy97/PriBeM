public class org.apache.cxf.jaxrs.ext.xml.XMLSource extends java.lang.Object
{
    private static final java.lang.String XML_NAMESPACE;
    private java.io.InputStream stream;
    private org.w3c.dom.Document doc;

    public void <init>(java.io.InputStream)
    {
        org.apache.cxf.jaxrs.ext.xml.XMLSource r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.cxf.jaxrs.ext.xml.XMLSource;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.jaxrs.ext.xml.XMLSource: java.io.InputStream stream> = r1;

        return;
    }

    public void setBuffering()
    {
        org.w3c.dom.Document $r3;
        javax.xml.transform.stream.StreamSource $r1;
        javax.xml.stream.XMLStreamException $r4;
        org.apache.cxf.jaxrs.ext.xml.XMLSource r0;
        java.io.InputStream $r2;

        r0 := @this: org.apache.cxf.jaxrs.ext.xml.XMLSource;

     label1:
        $r1 = new javax.xml.transform.stream.StreamSource;

        $r2 = r0.<org.apache.cxf.jaxrs.ext.xml.XMLSource: java.io.InputStream stream>;

        specialinvoke $r1.<javax.xml.transform.stream.StreamSource: void <init>(java.io.InputStream)>($r2);

        $r3 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: org.w3c.dom.Document read(javax.xml.transform.Source)>($r1);

        r0.<org.apache.cxf.jaxrs.ext.xml.XMLSource: org.w3c.dom.Document doc> = $r3;

        r0.<org.apache.cxf.jaxrs.ext.xml.XMLSource: java.io.InputStream stream> = null;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r4.<javax.xml.stream.XMLStreamException: void printStackTrace()>();

     label4:
        return;

        catch javax.xml.stream.XMLStreamException from label1 to label2 with label3;
    }

    public java.lang.Object getNode(java.lang.String, java.lang.Class)
    {
        java.util.Map $r2, $r3;
        java.lang.Class r4;
        java.lang.Object $r5;
        java.lang.String r1;
        org.apache.cxf.jaxrs.ext.xml.XMLSource r0;

        r0 := @this: org.apache.cxf.jaxrs.ext.xml.XMLSource;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Class;

        $r2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        $r3 = staticinvoke <org.apache.cxf.helpers.CastUtils: java.util.Map cast(java.util.Map,java.lang.Class,java.lang.Class)>($r2, class "Ljava/lang/String;", class "Ljava/lang/String;");

        $r5 = virtualinvoke r0.<org.apache.cxf.jaxrs.ext.xml.XMLSource: java.lang.Object getNode(java.lang.String,java.util.Map,java.lang.Class)>(r1, $r3, r4);

        return $r5;
    }

    public java.lang.Object getNode(java.lang.String, java.util.Map, java.lang.Class)
    {
        java.util.Map r2;
        org.w3c.dom.Node r9;
        java.lang.Object $r4, $r7, $r8, $r10, $r11;
        java.lang.Class r5;
        java.lang.String r1;
        javax.xml.namespace.QName $r3, $r6;
        org.apache.cxf.jaxrs.ext.xml.XMLSource r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.jaxrs.ext.xml.XMLSource;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Map;

        r5 := @parameter2: java.lang.Class;

        $r3 = <javax.xml.xpath.XPathConstants: javax.xml.namespace.QName NODE>;

        $r4 = specialinvoke r0.<org.apache.cxf.jaxrs.ext.xml.XMLSource: java.lang.Object evaluate(java.lang.String,java.util.Map,javax.xml.namespace.QName)>(r1, r2, $r3);

        if $r4 != null goto label1;

        return null;

     label1:
        $z0 = $r4 instanceof org.w3c.dom.Node;

        if $z0 == 0 goto label4;

        r9 = (org.w3c.dom.Node) $r4;

        $z1 = virtualinvoke r5.<java.lang.Class: boolean isPrimitive()>();

        if $z1 != 0 goto label2;

        if r5 != class "Ljava/lang/String;" goto label3;

     label2:
        $r10 = specialinvoke r0.<org.apache.cxf.jaxrs.ext.xml.XMLSource: java.lang.Object readPrimitiveValue(org.w3c.dom.Node,java.lang.Class)>(r9, r5);

        return $r10;

     label3:
        $r11 = specialinvoke r0.<org.apache.cxf.jaxrs.ext.xml.XMLSource: java.lang.Object readNode(org.w3c.dom.Node,java.lang.Class)>(r9, r5);

        return $r11;

     label4:
        $r6 = <javax.xml.xpath.XPathConstants: javax.xml.namespace.QName STRING>;

        $r7 = specialinvoke r0.<org.apache.cxf.jaxrs.ext.xml.XMLSource: java.lang.Object evaluate(java.lang.String,java.util.Map,javax.xml.namespace.QName)>(r1, r2, $r6);

        $r8 = virtualinvoke r5.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r7);

        return $r8;
    }

    public java.lang.Object[] getNodes(java.lang.String, java.lang.Class)
    {
        java.lang.Object[] $r5;
        java.util.Map $r2, $r3;
        java.lang.Class r4;
        java.lang.String r1;
        org.apache.cxf.jaxrs.ext.xml.XMLSource r0;

        r0 := @this: org.apache.cxf.jaxrs.ext.xml.XMLSource;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Class;

        $r2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        $r3 = staticinvoke <org.apache.cxf.helpers.CastUtils: java.util.Map cast(java.util.Map,java.lang.Class,java.lang.Class)>($r2, class "Ljava/lang/String;", class "Ljava/lang/String;");

        $r5 = virtualinvoke r0.<org.apache.cxf.jaxrs.ext.xml.XMLSource: java.lang.Object[] getNodes(java.lang.String,java.util.Map,java.lang.Class)>(r1, $r3, r4);

        return $r5;
    }

    public java.lang.Object[] getNodes(java.lang.String, java.util.Map, java.lang.Class)
    {
        java.lang.Object[] $r8, r9;
        java.util.Map r2;
        org.w3c.dom.Node $r10;
        int $i0, $i1, $i2, i3;
        java.lang.String r1;
        org.apache.cxf.jaxrs.ext.xml.XMLSource r0;
        boolean $z0;
        org.w3c.dom.NodeList r5;
        java.lang.Object $r4, $r7, $r11, $r12;
        java.lang.Class r6;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.cxf.jaxrs.ext.xml.XMLSource;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Map;

        r6 := @parameter2: java.lang.Class;

        $r3 = <javax.xml.xpath.XPathConstants: javax.xml.namespace.QName NODESET>;

        $r4 = specialinvoke r0.<org.apache.cxf.jaxrs.ext.xml.XMLSource: java.lang.Object evaluate(java.lang.String,java.util.Map,javax.xml.namespace.QName)>(r1, r2, $r3);

        r5 = (org.w3c.dom.NodeList) $r4;

        if r5 == null goto label1;

        $i0 = interfaceinvoke r5.<org.w3c.dom.NodeList: int getLength()>();

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        $i1 = interfaceinvoke r5.<org.w3c.dom.NodeList: int getLength()>();

        $r7 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r6, $i1);

        $r8 = (java.lang.Object[]) $r7;

        r9 = (java.lang.Object[]) $r8;

        i3 = 0;

     label3:
        $i2 = interfaceinvoke r5.<org.w3c.dom.NodeList: int getLength()>();

        if i3 >= $i2 goto label6;

        $r10 = interfaceinvoke r5.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i3);

        $z0 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: boolean isPrimitive(java.lang.Class)>(r6);

        if $z0 == 0 goto label4;

        $r12 = specialinvoke r0.<org.apache.cxf.jaxrs.ext.xml.XMLSource: java.lang.Object readPrimitiveValue(org.w3c.dom.Node,java.lang.Class)>($r10, r6);

        r9[i3] = $r12;

        goto label5;

     label4:
        $r11 = specialinvoke r0.<org.apache.cxf.jaxrs.ext.xml.XMLSource: java.lang.Object readNode(org.w3c.dom.Node,java.lang.Class)>($r10, r6);

        r9[i3] = $r11;

     label5:
        i3 = i3 + 1;

        goto label3;

     label6:
        return r9;
    }

    public java.net.URI getLink(java.lang.String)
    {
        java.util.Map $r2, $r3;
        java.lang.String r1;
        java.net.URI $r4;
        org.apache.cxf.jaxrs.ext.xml.XMLSource r0;

        r0 := @this: org.apache.cxf.jaxrs.ext.xml.XMLSource;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        $r3 = staticinvoke <org.apache.cxf.helpers.CastUtils: java.util.Map cast(java.util.Map,java.lang.Class,java.lang.Class)>($r2, class "Ljava/lang/String;", class "Ljava/lang/String;");

        $r4 = virtualinvoke r0.<org.apache.cxf.jaxrs.ext.xml.XMLSource: java.net.URI getLink(java.lang.String,java.util.Map)>(r1, $r3);

        return $r4;
    }

    public java.net.URI getLink(java.lang.String, java.util.Map)
    {
        java.util.Map r2;
        java.lang.String r1, $r3;
        java.net.URI $r4;
        org.apache.cxf.jaxrs.ext.xml.XMLSource r0;

        r0 := @this: org.apache.cxf.jaxrs.ext.xml.XMLSource;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Map;

        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.ext.xml.XMLSource: java.lang.String getValue(java.lang.String,java.util.Map)>(r1, r2);

        if $r3 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r4 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r3);

     label2:
        return $r4;
    }

    public java.net.URI[] getLinks(java.lang.String, java.util.Map)
    {
        java.lang.String[] $r3;
        java.net.URI[] r4;
        java.util.Map r2;
        int $i0, $i1, i2;
        java.lang.String r1, $r5;
        java.net.URI $r6;
        org.apache.cxf.jaxrs.ext.xml.XMLSource r0;

        r0 := @this: org.apache.cxf.jaxrs.ext.xml.XMLSource;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Map;

        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.ext.xml.XMLSource: java.lang.String[] getValues(java.lang.String,java.util.Map)>(r1, r2);

        if $r3 != null goto label1;

        return null;

     label1:
        $i0 = lengthof $r3;

        r4 = newarray (java.net.URI)[$i0];

        i2 = 0;

     label2:
        $i1 = lengthof $r3;

        if i2 >= $i1 goto label3;

        $r5 = $r3[i2];

        $r6 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r5);

        r4[i2] = $r6;

        i2 = i2 + 1;

        goto label2;

     label3:
        return r4;
    }

    public java.net.URI getBaseURI()
    {
        java.util.LinkedHashMap $r0;
        java.net.URI $r2;
        org.apache.cxf.jaxrs.ext.xml.XMLSource r1;

        r1 := @this: org.apache.cxf.jaxrs.ext.xml.XMLSource;

        $r0 = new java.util.LinkedHashMap;

        specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("xml", "http://www.w3.org/XML/1998/namespace");

        $r2 = virtualinvoke r1.<org.apache.cxf.jaxrs.ext.xml.XMLSource: java.net.URI getLink(java.lang.String,java.util.Map)>("/*/@xml:base", $r0);

        return $r2;
    }

    public java.lang.String getValue(java.lang.String)
    {
        java.util.Map $r2, $r3;
        java.lang.String r1, $r4;
        org.apache.cxf.jaxrs.ext.xml.XMLSource r0;

        r0 := @this: org.apache.cxf.jaxrs.ext.xml.XMLSource;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        $r3 = staticinvoke <org.apache.cxf.helpers.CastUtils: java.util.Map cast(java.util.Map,java.lang.Class,java.lang.Class)>($r2, class "Ljava/lang/String;", class "Ljava/lang/String;");

        $r4 = virtualinvoke r0.<org.apache.cxf.jaxrs.ext.xml.XMLSource: java.lang.String getValue(java.lang.String,java.util.Map)>(r1, $r3);

        return $r4;
    }

    public java.lang.String getValue(java.lang.String, java.util.Map)
    {
        java.util.Map r2;
        java.lang.Object $r3;
        java.lang.String r1, $r4;
        org.apache.cxf.jaxrs.ext.xml.XMLSource r0;

        r0 := @this: org.apache.cxf.jaxrs.ext.xml.XMLSource;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Map;

        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.ext.xml.XMLSource: java.lang.Object getValue(java.lang.String,java.util.Map,java.lang.Class)>(r1, r2, class "Ljava/lang/String;");

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public java.lang.String[] getValues(java.lang.String)
    {
        java.util.Map $r2, $r3;
        java.lang.String[] $r4;
        java.lang.String r1;
        org.apache.cxf.jaxrs.ext.xml.XMLSource r0;

        r0 := @this: org.apache.cxf.jaxrs.ext.xml.XMLSource;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        $r3 = staticinvoke <org.apache.cxf.helpers.CastUtils: java.util.Map cast(java.util.Map,java.lang.Class,java.lang.Class)>($r2, class "Ljava/lang/String;", class "Ljava/lang/String;");

        $r4 = virtualinvoke r0.<org.apache.cxf.jaxrs.ext.xml.XMLSource: java.lang.String[] getValues(java.lang.String,java.util.Map)>(r1, $r3);

        return $r4;
    }

    public java.lang.String[] getValues(java.lang.String, java.util.Map)
    {
        java.lang.Object[] $r3;
        java.util.Map r2;
        java.lang.String[] $r4;
        java.lang.String r1;
        org.apache.cxf.jaxrs.ext.xml.XMLSource r0;

        r0 := @this: org.apache.cxf.jaxrs.ext.xml.XMLSource;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Map;

        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.ext.xml.XMLSource: java.lang.Object[] getNodes(java.lang.String,java.util.Map,java.lang.Class)>(r1, r2, class "Ljava/lang/String;");

        $r4 = (java.lang.String[]) $r3;

        return $r4;
    }

    public java.lang.Object getValue(java.lang.String, java.util.Map, java.lang.Class)
    {
        java.util.Map r2;
        java.lang.Object $r4, $r7;
        java.lang.Class r6;
        java.lang.String r1, $r5;
        javax.xml.namespace.QName $r3;
        org.apache.cxf.jaxrs.ext.xml.XMLSource r0;

        r0 := @this: org.apache.cxf.jaxrs.ext.xml.XMLSource;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Map;

        r6 := @parameter2: java.lang.Class;

        $r3 = <javax.xml.xpath.XPathConstants: javax.xml.namespace.QName STRING>;

        $r4 = specialinvoke r0.<org.apache.cxf.jaxrs.ext.xml.XMLSource: java.lang.Object evaluate(java.lang.String,java.util.Map,javax.xml.namespace.QName)>(r1, r2, $r3);

        if $r4 != null goto label1;

        $r7 = null;

        goto label2;

     label1:
        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $r7 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: java.lang.Object convertStringToPrimitive(java.lang.String,java.lang.Class)>($r5, r6);

     label2:
        return $r7;
    }

    private java.lang.Object evaluate(java.lang.String, java.util.Map, javax.xml.namespace.QName)
    {
        javax.xml.xpath.XPathExpressionException $r15;
        javax.xml.xpath.XPath $r1;
        org.apache.cxf.jaxrs.ext.xml.XMLSource$NamespaceContextImpl $r2;
        javax.xml.xpath.XPathExpression $r7, $r12;
        org.w3c.dom.Document $r13;
        java.util.Map r3;
        java.lang.String r6, $r21;
        org.apache.cxf.jaxrs.ext.xml.XMLSource r4;
        org.xml.sax.InputSource $r8;
        java.lang.IllegalArgumentException $r16;
        javax.xml.xpath.XPathFactory $r0;
        java.lang.Object $r11, $r14;
        java.lang.StringBuilder $r17, $r18, $r19, $r20;
        javax.xml.namespace.QName r10;
        java.io.InputStream $r5, $r9;

        r4 := @this: org.apache.cxf.jaxrs.ext.xml.XMLSource;

        r6 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.Map;

        r10 := @parameter2: javax.xml.namespace.QName;

        $r0 = staticinvoke <javax.xml.xpath.XPathFactory: javax.xml.xpath.XPathFactory newInstance()>();

        $r1 = virtualinvoke $r0.<javax.xml.xpath.XPathFactory: javax.xml.xpath.XPath newXPath()>();

        $r2 = new org.apache.cxf.jaxrs.ext.xml.XMLSource$NamespaceContextImpl;

        specialinvoke $r2.<org.apache.cxf.jaxrs.ext.xml.XMLSource$NamespaceContextImpl: void <init>(java.util.Map)>(r3);

        interfaceinvoke $r1.<javax.xml.xpath.XPath: void setNamespaceContext(javax.xml.namespace.NamespaceContext)>($r2);

     label1:
        $r5 = r4.<org.apache.cxf.jaxrs.ext.xml.XMLSource: java.io.InputStream stream>;

        if $r5 != null goto label3;

        $r12 = interfaceinvoke $r1.<javax.xml.xpath.XPath: javax.xml.xpath.XPathExpression compile(java.lang.String)>(r6);

        $r13 = r4.<org.apache.cxf.jaxrs.ext.xml.XMLSource: org.w3c.dom.Document doc>;

        $r14 = interfaceinvoke $r12.<javax.xml.xpath.XPathExpression: java.lang.Object evaluate(java.lang.Object,javax.xml.namespace.QName)>($r13, r10);

     label2:
        return $r14;

     label3:
        $r7 = interfaceinvoke $r1.<javax.xml.xpath.XPath: javax.xml.xpath.XPathExpression compile(java.lang.String)>(r6);

        $r8 = new org.xml.sax.InputSource;

        $r9 = r4.<org.apache.cxf.jaxrs.ext.xml.XMLSource: java.io.InputStream stream>;

        specialinvoke $r8.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>($r9);

        $r11 = interfaceinvoke $r7.<javax.xml.xpath.XPathExpression: java.lang.Object evaluate(org.xml.sax.InputSource,javax.xml.namespace.QName)>($r8, r10);

     label4:
        return $r11;

     label5:
        $r15 := @caughtexception;

        $r16 = new java.lang.IllegalArgumentException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal XPath expression \'");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r21, $r15);

        throw $r16;

        catch javax.xml.xpath.XPathExpressionException from label1 to label2 with label5;
        catch javax.xml.xpath.XPathExpressionException from label3 to label4 with label5;
    }

    private java.lang.Object readPrimitiveValue(org.w3c.dom.Node, java.lang.Class)
    {
        javax.xml.transform.dom.DOMSource $r7;
        java.io.ByteArrayOutputStream $r6;
        short $s0;
        org.w3c.dom.Node r1;
        java.lang.Class r0;
        java.lang.Object $r3, $r5, $r9;
        java.lang.String $r2, $r4, $r8;
        org.apache.cxf.jaxrs.ext.xml.XMLSource r11;
        java.io.UnsupportedEncodingException $r10;

        r11 := @this: org.apache.cxf.jaxrs.ext.xml.XMLSource;

        r1 := @parameter0: org.w3c.dom.Node;

        r0 := @parameter1: java.lang.Class;

        if class "Ljava/lang/String;" != r0 goto label5;

        $s0 = interfaceinvoke r1.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 != 1 goto label4;

        $r6 = new java.io.ByteArrayOutputStream;

        specialinvoke $r6.<java.io.ByteArrayOutputStream: void <init>()>();

        $r7 = new javax.xml.transform.dom.DOMSource;

        specialinvoke $r7.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>(r1);

        staticinvoke <org.apache.cxf.helpers.XMLUtils: void writeTo(javax.xml.transform.Source,java.io.OutputStream,int,java.lang.String,java.lang.String)>($r7, $r6, 0, "", "yes");

     label1:
        $r8 = virtualinvoke $r6.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>("UTF-8");

        $r9 = virtualinvoke r0.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r8);

     label2:
        return $r9;

     label3:
        $r10 := @caughtexception;

        goto label5;

     label4:
        $r4 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r5 = virtualinvoke r0.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r4);

        return $r5;

     label5:
        $r2 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r3 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: java.lang.Object convertStringToPrimitive(java.lang.String,java.lang.Class)>($r2, r0);

        return $r3;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    private java.lang.Object readNode(org.w3c.dom.Node, java.lang.Class)
    {
        javax.xml.transform.dom.DOMSource $r2;
        org.w3c.dom.Node r3;
        org.apache.cxf.jaxrs.provider.JAXBElementProvider $r5;
        org.apache.cxf.jaxrs.ext.xml.XMLSource r16;
        javax.xml.bind.JAXBContext $r6, r17;
        boolean $z0;
        javax.xml.bind.Unmarshaller $r7;
        javax.xml.bind.JAXBElement $r9;
        java.lang.RuntimeException $r15;
        java.lang.Exception $r14;
        java.lang.'annotation'.Annotation $r8;
        java.lang.Class r0, $r1;
        java.lang.Object $r4, $r10, $r11, $r12, $r13;

        r16 := @this: org.apache.cxf.jaxrs.ext.xml.XMLSource;

        r3 := @parameter0: org.w3c.dom.Node;

        r0 := @parameter1: java.lang.Class;

        $r1 = class "Lorg/w3c/dom/Node;";

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 == 0 goto label1;

        $r13 = virtualinvoke r0.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(r3);

        return $r13;

     label1:
        $r2 = new javax.xml.transform.dom.DOMSource;

        specialinvoke $r2.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>(r3);

        if class "Ljavax/xml/transform/Source;" == r0 goto label2;

        if class "Ljavax/xml/transform/dom/DOMSource;" != r0 goto label3;

     label2:
        $r4 = virtualinvoke r0.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r2);

        return $r4;

     label3:
        $r5 = new org.apache.cxf.jaxrs.provider.JAXBElementProvider;

        specialinvoke $r5.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: void <init>()>();

        $r6 = virtualinvoke $r5.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: javax.xml.bind.JAXBContext getPackageContext(java.lang.Class)>(r0);

        r17 = $r6;

        if $r6 != null goto label4;

        r17 = virtualinvoke $r5.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: javax.xml.bind.JAXBContext getClassContext(java.lang.Class)>(r0);

     label4:
        $r7 = virtualinvoke r17.<javax.xml.bind.JAXBContext: javax.xml.bind.Unmarshaller createUnmarshaller()>();

        $r8 = virtualinvoke r0.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Ljavax/xml/bind/annotation/XmlRootElement;");

        if $r8 == null goto label6;

        $r11 = interfaceinvoke $r7.<javax.xml.bind.Unmarshaller: java.lang.Object unmarshal(javax.xml.transform.Source)>($r2);

        $r12 = virtualinvoke r0.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r11);

     label5:
        return $r12;

     label6:
        $r9 = interfaceinvoke $r7.<javax.xml.bind.Unmarshaller: javax.xml.bind.JAXBElement unmarshal(javax.xml.transform.Source,java.lang.Class)>($r2, r0);

        $r10 = virtualinvoke $r9.<javax.xml.bind.JAXBElement: java.lang.Object getValue()>();

     label7:
        return $r10;

     label8:
        $r14 := @caughtexception;

        $r15 = new java.lang.RuntimeException;

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r14);

        throw $r15;

        catch java.lang.Exception from label3 to label5 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    public static void <clinit>()
    {
        <org.apache.cxf.jaxrs.ext.xml.XMLSource: java.lang.String XML_NAMESPACE> = "http://www.w3.org/XML/1998/namespace";

        return;
    }
}
