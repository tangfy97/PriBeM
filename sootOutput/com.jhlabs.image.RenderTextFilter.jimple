public class com.jhlabs.image.RenderTextFilter extends com.jhlabs.image.AbstractBufferedImageOp
{
    private java.lang.String text;
    private java.awt.Font font;
    private java.awt.Paint paint;
    private java.awt.Composite composite;
    private java.awt.geom.AffineTransform transform;

    public void <init>()
    {
        com.jhlabs.image.RenderTextFilter r0;

        r0 := @this: com.jhlabs.image.RenderTextFilter;

        specialinvoke r0.<com.jhlabs.image.AbstractBufferedImageOp: void <init>()>();

        return;
    }

    public void <init>(java.lang.String, java.awt.Font, java.awt.Paint, java.awt.Composite, java.awt.geom.AffineTransform)
    {
        com.jhlabs.image.RenderTextFilter r0;
        java.awt.Composite r3;
        java.awt.Paint r4;
        java.awt.Font r2;
        java.lang.String r1;
        java.awt.geom.AffineTransform r5;

        r0 := @this: com.jhlabs.image.RenderTextFilter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.awt.Font;

        r4 := @parameter2: java.awt.Paint;

        r3 := @parameter3: java.awt.Composite;

        r5 := @parameter4: java.awt.geom.AffineTransform;

        specialinvoke r0.<com.jhlabs.image.AbstractBufferedImageOp: void <init>()>();

        r0.<com.jhlabs.image.RenderTextFilter: java.lang.String text> = r1;

        r0.<com.jhlabs.image.RenderTextFilter: java.awt.Font font> = r2;

        r0.<com.jhlabs.image.RenderTextFilter: java.awt.Composite composite> = r3;

        r0.<com.jhlabs.image.RenderTextFilter: java.awt.Paint paint> = r4;

        r0.<com.jhlabs.image.RenderTextFilter: java.awt.geom.AffineTransform transform> = r5;

        return;
    }

    public void setComposite(java.lang.String)
    {
        com.jhlabs.image.RenderTextFilter r0;
        java.lang.String r1;

        r0 := @this: com.jhlabs.image.RenderTextFilter;

        r1 := @parameter0: java.lang.String;

        r0.<com.jhlabs.image.RenderTextFilter: java.lang.String text> = r1;

        return;
    }

    public java.lang.String getText()
    {
        com.jhlabs.image.RenderTextFilter r0;
        java.lang.String $r1;

        r0 := @this: com.jhlabs.image.RenderTextFilter;

        $r1 = r0.<com.jhlabs.image.RenderTextFilter: java.lang.String text>;

        return $r1;
    }

    public void setComposite(java.awt.Composite)
    {
        com.jhlabs.image.RenderTextFilter r0;
        java.awt.Composite r1;

        r0 := @this: com.jhlabs.image.RenderTextFilter;

        r1 := @parameter0: java.awt.Composite;

        r0.<com.jhlabs.image.RenderTextFilter: java.awt.Composite composite> = r1;

        return;
    }

    public java.awt.Composite getComposite()
    {
        com.jhlabs.image.RenderTextFilter r0;
        java.awt.Composite $r1;

        r0 := @this: com.jhlabs.image.RenderTextFilter;

        $r1 = r0.<com.jhlabs.image.RenderTextFilter: java.awt.Composite composite>;

        return $r1;
    }

    public java.awt.image.BufferedImage filter(java.awt.image.BufferedImage, java.awt.image.BufferedImage)
    {
        java.awt.Graphics2D $r0;
        java.lang.String $r8, $r9;
        com.jhlabs.image.RenderTextFilter r3;
        java.awt.Composite $r6, $r11;
        java.awt.image.BufferedImage r14, r15;
        java.awt.Font $r4, $r13;
        java.awt.geom.AffineTransform $r5, $r12;
        java.awt.Paint $r7, $r10;
        java.awt.RenderingHints$Key $r2;
        java.lang.Object $r1;

        r3 := @this: com.jhlabs.image.RenderTextFilter;

        r14 := @parameter0: java.awt.image.BufferedImage;

        r15 := @parameter1: java.awt.image.BufferedImage;

        if r15 != null goto label1;

        r15 = virtualinvoke r3.<com.jhlabs.image.AbstractBufferedImageOp: java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage,java.awt.image.ColorModel)>(r14, null);

     label1:
        $r0 = virtualinvoke r15.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();

        $r2 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_TEXT_ANTIALIASING>;

        $r1 = <java.awt.RenderingHints: java.lang.Object VALUE_TEXT_ANTIALIAS_ON>;

        virtualinvoke $r0.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r2, $r1);

        $r4 = r3.<com.jhlabs.image.RenderTextFilter: java.awt.Font font>;

        if $r4 == null goto label2;

        $r13 = r3.<com.jhlabs.image.RenderTextFilter: java.awt.Font font>;

        virtualinvoke $r0.<java.awt.Graphics: void setFont(java.awt.Font)>($r13);

     label2:
        $r5 = r3.<com.jhlabs.image.RenderTextFilter: java.awt.geom.AffineTransform transform>;

        if $r5 == null goto label3;

        $r12 = r3.<com.jhlabs.image.RenderTextFilter: java.awt.geom.AffineTransform transform>;

        virtualinvoke $r0.<java.awt.Graphics2D: void setTransform(java.awt.geom.AffineTransform)>($r12);

     label3:
        $r6 = r3.<com.jhlabs.image.RenderTextFilter: java.awt.Composite composite>;

        if $r6 == null goto label4;

        $r11 = r3.<com.jhlabs.image.RenderTextFilter: java.awt.Composite composite>;

        virtualinvoke $r0.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>($r11);

     label4:
        $r7 = r3.<com.jhlabs.image.RenderTextFilter: java.awt.Paint paint>;

        if $r7 == null goto label5;

        $r10 = r3.<com.jhlabs.image.RenderTextFilter: java.awt.Paint paint>;

        virtualinvoke $r0.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r10);

     label5:
        $r8 = r3.<com.jhlabs.image.RenderTextFilter: java.lang.String text>;

        if $r8 == null goto label6;

        $r9 = r3.<com.jhlabs.image.RenderTextFilter: java.lang.String text>;

        virtualinvoke $r0.<java.awt.Graphics2D: void drawString(java.lang.String,int,int)>($r9, 10, 100);

     label6:
        virtualinvoke $r0.<java.awt.Graphics: void dispose()>();

        return r15;
    }
}
