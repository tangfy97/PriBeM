final class org.apache.cxf.jaxrs.utils.ResourceUtils$1 extends java.lang.Object implements java.util.Comparator
{

    void <init>()
    {
        org.apache.cxf.jaxrs.utils.ResourceUtils$1 r0;

        r0 := @this: org.apache.cxf.jaxrs.utils.ResourceUtils$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(java.lang.reflect.Constructor, java.lang.reflect.Constructor)
    {
        java.lang.Class[] $r1, $r3;
        java.lang.reflect.Constructor r0, r2;
        org.apache.cxf.jaxrs.utils.ResourceUtils$1 r4;
        byte $b2;
        int i0, i1;

        r4 := @this: org.apache.cxf.jaxrs.utils.ResourceUtils$1;

        r0 := @parameter0: java.lang.reflect.Constructor;

        r2 := @parameter1: java.lang.reflect.Constructor;

        $r1 = virtualinvoke r0.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        i0 = lengthof $r1;

        $r3 = virtualinvoke r2.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        i1 = lengthof $r3;

        if i0 <= i1 goto label1;

        $b2 = -1;

        goto label3;

     label1:
        if i0 >= i1 goto label2;

        $b2 = 1;

        goto label3;

     label2:
        $b2 = 0;

     label3:
        return $b2;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.apache.cxf.jaxrs.utils.ResourceUtils$1 r0;
        int $i0;
        java.lang.Object r1, r2;
        java.lang.reflect.Constructor $r3, $r4;

        r0 := @this: org.apache.cxf.jaxrs.utils.ResourceUtils$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.reflect.Constructor) r1;

        $r3 = (java.lang.reflect.Constructor) r2;

        $i0 = virtualinvoke r0.<org.apache.cxf.jaxrs.utils.ResourceUtils$1: int compare(java.lang.reflect.Constructor,java.lang.reflect.Constructor)>($r4, $r3);

        return $i0;
    }
}
