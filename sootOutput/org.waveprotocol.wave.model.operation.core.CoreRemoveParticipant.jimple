public final class org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant extends org.waveprotocol.wave.model.operation.core.CoreWaveletOperation
{
    private final org.waveprotocol.wave.model.wave.ParticipantId participant;

    public void <init>(org.waveprotocol.wave.model.wave.ParticipantId)
    {
        org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant r0;
        org.waveprotocol.wave.model.wave.ParticipantId r1;
        java.lang.NullPointerException $r2;

        r0 := @this: org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.ParticipantId;

        specialinvoke r0.<org.waveprotocol.wave.model.operation.core.CoreWaveletOperation: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null participant ID");

        throw $r2;

     label1:
        r0.<org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant: org.waveprotocol.wave.model.wave.ParticipantId participant> = r1;

        return;
    }

    public org.waveprotocol.wave.model.wave.ParticipantId getParticipantId()
    {
        org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant r0;
        org.waveprotocol.wave.model.wave.ParticipantId $r1;

        r0 := @this: org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant;

        $r1 = r0.<org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant: org.waveprotocol.wave.model.wave.ParticipantId participant>;

        return $r1;
    }

    public void doApply(org.waveprotocol.wave.model.wave.data.core.CoreWaveletData) throws org.waveprotocol.wave.model.operation.OperationException
    {
        org.waveprotocol.wave.model.operation.OperationException $r3;
        org.waveprotocol.wave.model.wave.data.core.CoreWaveletData r0;
        org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant r1;
        org.waveprotocol.wave.model.wave.ParticipantId $r2;
        boolean $z0;

        r1 := @this: org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant;

        r0 := @parameter0: org.waveprotocol.wave.model.wave.data.core.CoreWaveletData;

        $r2 = r1.<org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant: org.waveprotocol.wave.model.wave.ParticipantId participant>;

        $z0 = interfaceinvoke r0.<org.waveprotocol.wave.model.wave.data.core.CoreWaveletData: boolean removeParticipant(org.waveprotocol.wave.model.wave.ParticipantId)>($r2);

        if $z0 != 0 goto label1;

        $r3 = new org.waveprotocol.wave.model.operation.OperationException;

        specialinvoke $r3.<org.waveprotocol.wave.model.operation.OperationException: void <init>(java.lang.String)>("Attempt to delete non-existent participant.");

        throw $r3;

     label1:
        return;
    }

    public org.waveprotocol.wave.model.operation.core.CoreWaveletOperation getInverse()
    {
        org.waveprotocol.wave.model.operation.core.CoreAddParticipant $r0;
        org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant r1;
        org.waveprotocol.wave.model.wave.ParticipantId $r2;

        r1 := @this: org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant;

        $r0 = new org.waveprotocol.wave.model.operation.core.CoreAddParticipant;

        $r2 = r1.<org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant: org.waveprotocol.wave.model.wave.ParticipantId participant>;

        specialinvoke $r0.<org.waveprotocol.wave.model.operation.core.CoreAddParticipant: void <init>(org.waveprotocol.wave.model.wave.ParticipantId)>($r2);

        return $r0;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r4, $r5;
        org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant r2;
        org.waveprotocol.wave.model.wave.ParticipantId $r3;
        java.lang.String $r6;

        r2 := @this: org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RemoveParticipant(");

        $r3 = r2.<org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant: org.waveprotocol.wave.model.wave.ParticipantId participant>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public int hashCode()
    {
        int $i0;
        org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant r0;
        org.waveprotocol.wave.model.wave.ParticipantId $r1;

        r0 := @this: org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant;

        $r1 = r0.<org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant: org.waveprotocol.wave.model.wave.ParticipantId participant>;

        $i0 = virtualinvoke $r1.<org.waveprotocol.wave.model.wave.ParticipantId: int hashCode()>();

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant r1, r2;
        org.waveprotocol.wave.model.wave.ParticipantId $r3, $r4;
        boolean $z0, $z1;

        r2 := @this: org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant) r0;

        $r4 = r2.<org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant: org.waveprotocol.wave.model.wave.ParticipantId participant>;

        $r3 = r1.<org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant: org.waveprotocol.wave.model.wave.ParticipantId participant>;

        $z1 = virtualinvoke $r4.<org.waveprotocol.wave.model.wave.ParticipantId: boolean equals(java.lang.Object)>($r3);

        return $z1;
    }
}
