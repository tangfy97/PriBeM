public class org.apache.velocity.runtime.log.LogDisplayWrapper extends org.apache.velocity.runtime.log.Log
{
    private final java.lang.String prefix;
    private final boolean outputMessages;
    private final org.apache.velocity.runtime.log.Log log;

    public void <init>(org.apache.velocity.runtime.log.Log, java.lang.String, boolean)
    {
        org.apache.velocity.runtime.log.Log r1;
        org.apache.velocity.runtime.log.LogDisplayWrapper r0;
        java.lang.String r3;
        org.apache.velocity.runtime.log.LogChute $r2;
        boolean z0;

        r0 := @this: org.apache.velocity.runtime.log.LogDisplayWrapper;

        r1 := @parameter0: org.apache.velocity.runtime.log.Log;

        r3 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r2 = virtualinvoke r1.<org.apache.velocity.runtime.log.Log: org.apache.velocity.runtime.log.LogChute getLogChute()>();

        specialinvoke r0.<org.apache.velocity.runtime.log.Log: void <init>(org.apache.velocity.runtime.log.LogChute)>($r2);

        r0.<org.apache.velocity.runtime.log.LogDisplayWrapper: org.apache.velocity.runtime.log.Log log> = r1;

        r0.<org.apache.velocity.runtime.log.LogDisplayWrapper: java.lang.String prefix> = r3;

        r0.<org.apache.velocity.runtime.log.LogDisplayWrapper: boolean outputMessages> = z0;

        return;
    }

    protected org.apache.velocity.runtime.log.LogChute getLogChute()
    {
        org.apache.velocity.runtime.log.LogDisplayWrapper r0;
        org.apache.velocity.runtime.log.Log $r1;
        org.apache.velocity.runtime.log.LogChute $r2;

        r0 := @this: org.apache.velocity.runtime.log.LogDisplayWrapper;

        $r1 = r0.<org.apache.velocity.runtime.log.LogDisplayWrapper: org.apache.velocity.runtime.log.Log log>;

        $r2 = virtualinvoke $r1.<org.apache.velocity.runtime.log.Log: org.apache.velocity.runtime.log.LogChute getLogChute()>();

        return $r2;
    }

    protected void log(int, java.lang.Object)
    {
        org.apache.velocity.runtime.log.LogDisplayWrapper r0;
        int i0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.log.LogDisplayWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $z0 = r0.<org.apache.velocity.runtime.log.LogDisplayWrapper: boolean outputMessages>;

        virtualinvoke r0.<org.apache.velocity.runtime.log.LogDisplayWrapper: void log(boolean,int,java.lang.Object)>($z0, i0, r1);

        return;
    }

    protected void log(boolean, int, java.lang.Object)
    {
        org.apache.velocity.runtime.log.LogDisplayWrapper r0;
        java.lang.StringBuffer $r2, $r4, $r7;
        int i0;
        java.lang.Object r5;
        java.lang.String $r3, $r6, $r8;
        org.apache.velocity.runtime.log.LogChute $r1;
        boolean z0;

        r0 := @this: org.apache.velocity.runtime.log.LogDisplayWrapper;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r5 := @parameter2: java.lang.Object;

        if z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<org.apache.velocity.runtime.log.LogDisplayWrapper: org.apache.velocity.runtime.log.LogChute getLogChute()>();

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<org.apache.velocity.runtime.log.LogDisplayWrapper: java.lang.String prefix>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r5);

        $r7 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r1.<org.apache.velocity.runtime.log.LogChute: void log(int,java.lang.String)>(i0, $r8);

     label1:
        return;
    }

    protected void log(int, java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        org.apache.velocity.runtime.log.LogDisplayWrapper r0;
        int i0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.log.LogDisplayWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Throwable;

        $z0 = r0.<org.apache.velocity.runtime.log.LogDisplayWrapper: boolean outputMessages>;

        virtualinvoke r0.<org.apache.velocity.runtime.log.LogDisplayWrapper: void log(boolean,int,java.lang.Object)>($z0, i0, r1);

        return;
    }

    protected void log(boolean, int, java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r9;
        org.apache.velocity.runtime.log.LogDisplayWrapper r0;
        java.lang.StringBuffer $r2, $r4, $r7;
        int i0;
        java.lang.Object r5;
        java.lang.String $r3, $r6, $r8;
        org.apache.velocity.runtime.log.LogChute $r1;
        boolean z0;

        r0 := @this: org.apache.velocity.runtime.log.LogDisplayWrapper;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r5 := @parameter2: java.lang.Object;

        r9 := @parameter3: java.lang.Throwable;

        if z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<org.apache.velocity.runtime.log.LogDisplayWrapper: org.apache.velocity.runtime.log.LogChute getLogChute()>();

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<org.apache.velocity.runtime.log.LogDisplayWrapper: java.lang.String prefix>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r5);

        $r7 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r1.<org.apache.velocity.runtime.log.LogChute: void log(int,java.lang.String,java.lang.Throwable)>(i0, $r8, r9);

     label1:
        return;
    }

    public void trace(boolean, java.lang.Object)
    {
        org.apache.velocity.runtime.log.LogDisplayWrapper r0;
        int $i1;
        java.lang.Object r1;
        boolean z0;

        r0 := @this: org.apache.velocity.runtime.log.LogDisplayWrapper;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.Object;

        $i1 = (int) -1;

        virtualinvoke r0.<org.apache.velocity.runtime.log.LogDisplayWrapper: void log(boolean,int,java.lang.Object)>(z0, $i1, r1);

        return;
    }

    public void trace(boolean, java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        org.apache.velocity.runtime.log.LogDisplayWrapper r0;
        int $i1;
        java.lang.Object r1;
        boolean z0;

        r0 := @this: org.apache.velocity.runtime.log.LogDisplayWrapper;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Throwable;

        $i1 = (int) -1;

        virtualinvoke r0.<org.apache.velocity.runtime.log.LogDisplayWrapper: void log(boolean,int,java.lang.Object,java.lang.Throwable)>(z0, $i1, r1, r2);

        return;
    }

    public void debug(boolean, java.lang.Object)
    {
        org.apache.velocity.runtime.log.LogDisplayWrapper r0;
        java.lang.Object r1;
        boolean z0;

        r0 := @this: org.apache.velocity.runtime.log.LogDisplayWrapper;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.Object;

        virtualinvoke r0.<org.apache.velocity.runtime.log.LogDisplayWrapper: void log(boolean,int,java.lang.Object)>(z0, 0, r1);

        return;
    }

    public void debug(boolean, java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        org.apache.velocity.runtime.log.LogDisplayWrapper r0;
        java.lang.Object r1;
        boolean z0;

        r0 := @this: org.apache.velocity.runtime.log.LogDisplayWrapper;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Throwable;

        virtualinvoke r0.<org.apache.velocity.runtime.log.LogDisplayWrapper: void log(boolean,int,java.lang.Object,java.lang.Throwable)>(z0, 0, r1, r2);

        return;
    }

    public void info(boolean, java.lang.Object)
    {
        org.apache.velocity.runtime.log.LogDisplayWrapper r0;
        java.lang.Object r1;
        boolean z0;

        r0 := @this: org.apache.velocity.runtime.log.LogDisplayWrapper;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.Object;

        virtualinvoke r0.<org.apache.velocity.runtime.log.LogDisplayWrapper: void log(boolean,int,java.lang.Object)>(z0, 1, r1);

        return;
    }

    public void info(boolean, java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        org.apache.velocity.runtime.log.LogDisplayWrapper r0;
        java.lang.Object r1;
        boolean z0;

        r0 := @this: org.apache.velocity.runtime.log.LogDisplayWrapper;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Throwable;

        virtualinvoke r0.<org.apache.velocity.runtime.log.LogDisplayWrapper: void log(boolean,int,java.lang.Object,java.lang.Throwable)>(z0, 1, r1, r2);

        return;
    }

    public void warn(boolean, java.lang.Object)
    {
        org.apache.velocity.runtime.log.LogDisplayWrapper r0;
        java.lang.Object r1;
        boolean z0;

        r0 := @this: org.apache.velocity.runtime.log.LogDisplayWrapper;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.Object;

        virtualinvoke r0.<org.apache.velocity.runtime.log.LogDisplayWrapper: void log(boolean,int,java.lang.Object)>(z0, 2, r1);

        return;
    }

    public void warn(boolean, java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        org.apache.velocity.runtime.log.LogDisplayWrapper r0;
        java.lang.Object r1;
        boolean z0;

        r0 := @this: org.apache.velocity.runtime.log.LogDisplayWrapper;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Throwable;

        virtualinvoke r0.<org.apache.velocity.runtime.log.LogDisplayWrapper: void log(boolean,int,java.lang.Object,java.lang.Throwable)>(z0, 2, r1, r2);

        return;
    }

    public void error(boolean, java.lang.Object)
    {
        org.apache.velocity.runtime.log.LogDisplayWrapper r0;
        java.lang.Object r1;
        boolean z0;

        r0 := @this: org.apache.velocity.runtime.log.LogDisplayWrapper;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.Object;

        virtualinvoke r0.<org.apache.velocity.runtime.log.LogDisplayWrapper: void log(boolean,int,java.lang.Object)>(z0, 3, r1);

        return;
    }

    public void error(boolean, java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        org.apache.velocity.runtime.log.LogDisplayWrapper r0;
        java.lang.Object r1;
        boolean z0;

        r0 := @this: org.apache.velocity.runtime.log.LogDisplayWrapper;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Throwable;

        virtualinvoke r0.<org.apache.velocity.runtime.log.LogDisplayWrapper: void log(boolean,int,java.lang.Object,java.lang.Throwable)>(z0, 3, r1, r2);

        return;
    }
}
