public class org.apache.commons.collections.functors.InvokerTransformer extends java.lang.Object implements org.apache.commons.collections.Transformer, java.io.Serializable
{
    private static final long serialVersionUID;
    private final java.lang.String iMethodName;
    private final java.lang.Class[] iParamTypes;
    private final java.lang.Object[] iArgs;

    public static org.apache.commons.collections.Transformer getInstance(java.lang.String)
    {
        java.lang.String r0;
        java.lang.IllegalArgumentException $r2;
        org.apache.commons.collections.functors.InvokerTransformer $r1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The method to invoke must not be null");

        throw $r2;

     label1:
        $r1 = new org.apache.commons.collections.functors.InvokerTransformer;

        specialinvoke $r1.<org.apache.commons.collections.functors.InvokerTransformer: void <init>(java.lang.String)>(r0);

        return $r1;
    }

    public static org.apache.commons.collections.Transformer getInstance(java.lang.String, java.lang.Class[], java.lang.Object[])
    {
        java.lang.Object[] $r5, r9, r12;
        org.apache.commons.collections.functors.InvokerTransformer $r1, $r6;
        int $i0, $i1, $i2;
        java.lang.String r0;
        java.lang.Class[] $r3, r8, r11;
        java.lang.IllegalArgumentException $r7, $r10;
        java.lang.Object $r2, $r4;

        r0 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.Class[];

        r9 := @parameter2: java.lang.Object[];

        if r0 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The method to invoke must not be null");

        throw $r7;

     label1:
        if r8 != null goto label2;

        if r9 != null goto label4;

     label2:
        if r8 == null goto label3;

        if r9 == null goto label4;

     label3:
        if r8 == null goto label5;

        if r9 == null goto label5;

        $i2 = lengthof r8;

        $i1 = lengthof r9;

        if $i2 == $i1 goto label5;

     label4:
        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The parameter types must match the arguments");

        throw $r10;

     label5:
        if r8 == null goto label6;

        $i0 = lengthof r8;

        if $i0 != 0 goto label7;

     label6:
        $r1 = new org.apache.commons.collections.functors.InvokerTransformer;

        specialinvoke $r1.<org.apache.commons.collections.functors.InvokerTransformer: void <init>(java.lang.String)>(r0);

        return $r1;

     label7:
        $r2 = virtualinvoke r8.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (java.lang.Class[]) $r2;

        r11 = (java.lang.Class[]) $r3;

        $r4 = virtualinvoke r9.<java.lang.Object: java.lang.Object clone()>();

        $r5 = (java.lang.Object[]) $r4;

        r12 = (java.lang.Object[]) $r5;

        $r6 = new org.apache.commons.collections.functors.InvokerTransformer;

        specialinvoke $r6.<org.apache.commons.collections.functors.InvokerTransformer: void <init>(java.lang.String,java.lang.Class[],java.lang.Object[])>(r0, r11, r12);

        return $r6;
    }

    private void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.apache.commons.collections.functors.InvokerTransformer r0;

        r0 := @this: org.apache.commons.collections.functors.InvokerTransformer;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections.functors.InvokerTransformer: java.lang.String iMethodName> = r1;

        r0.<org.apache.commons.collections.functors.InvokerTransformer: java.lang.Class[] iParamTypes> = null;

        r0.<org.apache.commons.collections.functors.InvokerTransformer: java.lang.Object[] iArgs> = null;

        return;
    }

    public void <init>(java.lang.String, java.lang.Class[], java.lang.Object[])
    {
        java.lang.Object[] r3;
        java.lang.Class[] r2;
        java.lang.String r1;
        org.apache.commons.collections.functors.InvokerTransformer r0;

        r0 := @this: org.apache.commons.collections.functors.InvokerTransformer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class[];

        r3 := @parameter2: java.lang.Object[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections.functors.InvokerTransformer: java.lang.String iMethodName> = r1;

        r0.<org.apache.commons.collections.functors.InvokerTransformer: java.lang.Class[] iParamTypes> = r2;

        r0.<org.apache.commons.collections.functors.InvokerTransformer: java.lang.Object[] iArgs> = r3;

        return;
    }

    public java.lang.Object transform(java.lang.Object)
    {
        java.lang.NoSuchMethodException $r30;
        java.lang.reflect.Method $r5;
        java.lang.IllegalAccessException $r19;
        java.lang.reflect.InvocationTargetException $r8;
        java.lang.Object[] $r6;
        org.apache.commons.collections.functors.InvokerTransformer r2;
        org.apache.commons.collections.FunctorException $r9, $r20, $r31;
        java.lang.StringBuffer $r10, $r11, $r13, $r14, $r16, $r17, $r21, $r22, $r24, $r25, $r27, $r28, $r32, $r33, $r35, $r36, $r38, $r39;
        java.lang.String $r4, $r12, $r18, $r23, $r29, $r34, $r40;
        java.lang.Class[] $r3;
        java.lang.Object r0, $r7;
        java.lang.Class $r1, $r15, $r26, $r37;

        r2 := @this: org.apache.commons.collections.functors.InvokerTransformer;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = r2.<org.apache.commons.collections.functors.InvokerTransformer: java.lang.String iMethodName>;

        $r3 = r2.<org.apache.commons.collections.functors.InvokerTransformer: java.lang.Class[] iParamTypes>;

        $r5 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r4, $r3);

        $r6 = r2.<org.apache.commons.collections.functors.InvokerTransformer: java.lang.Object[] iArgs>;

        $r7 = virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r6);

     label2:
        return $r7;

     label3:
        $r30 := @caughtexception;

        $r31 = new org.apache.commons.collections.FunctorException;

        $r32 = new java.lang.StringBuffer;

        specialinvoke $r32.<java.lang.StringBuffer: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("InvokerTransformer: The method \'");

        $r34 = r2.<org.apache.commons.collections.functors.InvokerTransformer: java.lang.String iMethodName>;

        $r35 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' on \'");

        $r37 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' does not exist");

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r31.<org.apache.commons.collections.FunctorException: void <init>(java.lang.String)>($r40);

        throw $r31;

     label4:
        $r19 := @caughtexception;

        $r20 = new org.apache.commons.collections.FunctorException;

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("InvokerTransformer: The method \'");

        $r23 = r2.<org.apache.commons.collections.functors.InvokerTransformer: java.lang.String iMethodName>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' on \'");

        $r26 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' cannot be accessed");

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r20.<org.apache.commons.collections.FunctorException: void <init>(java.lang.String)>($r29);

        throw $r20;

     label5:
        $r8 := @caughtexception;

        $r9 = new org.apache.commons.collections.FunctorException;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("InvokerTransformer: The method \'");

        $r12 = r2.<org.apache.commons.collections.functors.InvokerTransformer: java.lang.String iMethodName>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' on \'");

        $r15 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' threw an exception");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r9.<org.apache.commons.collections.FunctorException: void <init>(java.lang.String,java.lang.Throwable)>($r18, $r8);

        throw $r9;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label5;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections.functors.InvokerTransformer: long serialVersionUID> = -8653385846894047688L;

        return;
    }
}
