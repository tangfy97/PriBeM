public class org.wiztools.commons.RandomInputStream extends java.io.InputStream
{
    private java.util.Random generator;
    private boolean closed;

    public void <init>()
    {
        org.wiztools.commons.RandomInputStream r0;
        java.util.Random $r1;

        r0 := @this: org.wiztools.commons.RandomInputStream;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        $r1 = new java.util.Random;

        specialinvoke $r1.<java.util.Random: void <init>()>();

        r0.<org.wiztools.commons.RandomInputStream: java.util.Random generator> = $r1;

        r0.<org.wiztools.commons.RandomInputStream: boolean closed> = 0;

        return;
    }

    public int read() throws java.io.IOException
    {
        org.wiztools.commons.RandomInputStream r0;
        int $i0, i1;
        java.util.Random $r1;

        r0 := @this: org.wiztools.commons.RandomInputStream;

        specialinvoke r0.<org.wiztools.commons.RandomInputStream: void checkOpen()>();

        $r1 = r0.<org.wiztools.commons.RandomInputStream: java.util.Random generator>;

        $i0 = virtualinvoke $r1.<java.util.Random: int nextInt()>();

        i1 = $i0 % 256;

        if i1 >= 0 goto label1;

        i1 = neg i1;

     label1:
        return i1;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        org.wiztools.commons.RandomInputStream r0;
        byte[] r1, r3;
        int i0, i1;
        java.util.Random $r2;

        r0 := @this: org.wiztools.commons.RandomInputStream;

        r3 := @parameter0: byte[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        specialinvoke r0.<org.wiztools.commons.RandomInputStream: void checkOpen()>();

        r1 = newarray (byte)[i0];

        $r2 = r0.<org.wiztools.commons.RandomInputStream: java.util.Random generator>;

        virtualinvoke $r2.<java.util.Random: void nextBytes(byte[])>(r1);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r3, i1, i0);

        return i0;
    }

    public int read(byte[]) throws java.io.IOException
    {
        org.wiztools.commons.RandomInputStream r0;
        byte[] r1;
        int $i0;
        java.util.Random $r2;

        r0 := @this: org.wiztools.commons.RandomInputStream;

        r1 := @parameter0: byte[];

        specialinvoke r0.<org.wiztools.commons.RandomInputStream: void checkOpen()>();

        $r2 = r0.<org.wiztools.commons.RandomInputStream: java.util.Random generator>;

        virtualinvoke $r2.<java.util.Random: void nextBytes(byte[])>(r1);

        $i0 = lengthof r1;

        return $i0;
    }

    public long skip(long) throws java.io.IOException
    {
        org.wiztools.commons.RandomInputStream r0;
        long l0;

        r0 := @this: org.wiztools.commons.RandomInputStream;

        l0 := @parameter0: long;

        specialinvoke r0.<org.wiztools.commons.RandomInputStream: void checkOpen()>();

        return l0;
    }

    public void close()
    {
        org.wiztools.commons.RandomInputStream r0;

        r0 := @this: org.wiztools.commons.RandomInputStream;

        r0.<org.wiztools.commons.RandomInputStream: boolean closed> = 1;

        return;
    }

    private void checkOpen() throws java.io.IOException
    {
        org.wiztools.commons.RandomInputStream r0;
        java.io.IOException $r1;
        boolean $z0;

        r0 := @this: org.wiztools.commons.RandomInputStream;

        $z0 = r0.<org.wiztools.commons.RandomInputStream: boolean closed>;

        if $z0 == 0 goto label1;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("Input stream closed");

        throw $r1;

     label1:
        return;
    }

    public int available()
    {
        org.wiztools.commons.RandomInputStream r0;

        r0 := @this: org.wiztools.commons.RandomInputStream;

        return 2147483647;
    }
}
