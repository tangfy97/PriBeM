public class org.dom4j.rule.Mode extends java.lang.Object
{
    private org.dom4j.rule.RuleSet[] ruleSets;
    private java.util.Map elementNameRuleSets;
    private java.util.Map attributeNameRuleSets;

    public void <init>()
    {
        org.dom4j.rule.RuleSet[] $r1;
        org.dom4j.rule.Mode r0;

        r0 := @this: org.dom4j.rule.Mode;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (org.dom4j.rule.RuleSet)[14];

        r0.<org.dom4j.rule.Mode: org.dom4j.rule.RuleSet[] ruleSets> = $r1;

        return;
    }

    public void fireRule(org.dom4j.Node) throws java.lang.Exception
    {
        org.dom4j.rule.Action $r3;
        org.dom4j.Node r0;
        org.dom4j.rule.Mode r1;
        org.dom4j.rule.Rule $r2;

        r1 := @this: org.dom4j.rule.Mode;

        r0 := @parameter0: org.dom4j.Node;

        if r0 == null goto label1;

        $r2 = virtualinvoke r1.<org.dom4j.rule.Mode: org.dom4j.rule.Rule getMatchingRule(org.dom4j.Node)>(r0);

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<org.dom4j.rule.Rule: org.dom4j.rule.Action getAction()>();

        if $r3 == null goto label1;

        interfaceinvoke $r3.<org.dom4j.rule.Action: void run(org.dom4j.Node)>(r0);

     label1:
        return;
    }

    public void applyTemplates(org.dom4j.Element) throws java.lang.Exception
    {
        org.dom4j.Node $r1;
        org.dom4j.rule.Mode r2;
        int $i0, $i1, i2, i3;
        org.dom4j.Element r0;
        org.dom4j.Attribute $r3;

        r2 := @this: org.dom4j.rule.Mode;

        r0 := @parameter0: org.dom4j.Element;

        i2 = 0;

        $i0 = interfaceinvoke r0.<org.dom4j.Element: int attributeCount()>();

     label1:
        if i2 >= $i0 goto label2;

        $r3 = interfaceinvoke r0.<org.dom4j.Element: org.dom4j.Attribute attribute(int)>(i2);

        virtualinvoke r2.<org.dom4j.rule.Mode: void fireRule(org.dom4j.Node)>($r3);

        i2 = i2 + 1;

        goto label1;

     label2:
        i3 = 0;

        $i1 = interfaceinvoke r0.<org.dom4j.Element: int nodeCount()>();

     label3:
        if i3 >= $i1 goto label4;

        $r1 = interfaceinvoke r0.<org.dom4j.Element: org.dom4j.Node node(int)>(i3);

        virtualinvoke r2.<org.dom4j.rule.Mode: void fireRule(org.dom4j.Node)>($r1);

        i3 = i3 + 1;

        goto label3;

     label4:
        return;
    }

    public void applyTemplates(org.dom4j.Document) throws java.lang.Exception
    {
        org.dom4j.Document r0;
        org.dom4j.Node $r1;
        org.dom4j.rule.Mode r2;
        int $i0, i1;

        r2 := @this: org.dom4j.rule.Mode;

        r0 := @parameter0: org.dom4j.Document;

        i1 = 0;

        $i0 = interfaceinvoke r0.<org.dom4j.Document: int nodeCount()>();

     label1:
        if i1 >= $i0 goto label2;

        $r1 = interfaceinvoke r0.<org.dom4j.Document: org.dom4j.Node node(int)>(i1);

        virtualinvoke r2.<org.dom4j.rule.Mode: void fireRule(org.dom4j.Node)>($r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void addRule(org.dom4j.rule.Rule)
    {
        short $s0, s2;
        java.util.Map $r7, $r8, $r9, $r10;
        int i1, i3, $i4, $i5;
        org.dom4j.rule.Rule r0;
        java.lang.String $r1;
        org.dom4j.rule.Mode r2;
        org.dom4j.rule.RuleSet $r3, r6;
        org.dom4j.rule.RuleSet[] $r4, $r5;

        r2 := @this: org.dom4j.rule.Mode;

        r0 := @parameter0: org.dom4j.rule.Rule;

        $s0 = virtualinvoke r0.<org.dom4j.rule.Rule: short getMatchType()>();

        s2 = $s0;

        $r1 = virtualinvoke r0.<org.dom4j.rule.Rule: java.lang.String getMatchesNodeName()>();

        if $r1 == null goto label2;

        if $s0 != 1 goto label1;

        $r9 = r2.<org.dom4j.rule.Mode: java.util.Map elementNameRuleSets>;

        $r10 = virtualinvoke r2.<org.dom4j.rule.Mode: java.util.Map addToNameMap(java.util.Map,java.lang.String,org.dom4j.rule.Rule)>($r9, $r1, r0);

        r2.<org.dom4j.rule.Mode: java.util.Map elementNameRuleSets> = $r10;

        goto label2;

     label1:
        $i4 = (int) $s0;

        if $i4 != 2 goto label2;

        $r7 = r2.<org.dom4j.rule.Mode: java.util.Map attributeNameRuleSets>;

        $r8 = virtualinvoke r2.<org.dom4j.rule.Mode: java.util.Map addToNameMap(java.util.Map,java.lang.String,org.dom4j.rule.Rule)>($r7, $r1, r0);

        r2.<org.dom4j.rule.Mode: java.util.Map attributeNameRuleSets> = $r8;

     label2:
        $i5 = (int) $s0;

        if $i5 < 14 goto label3;

        s2 = 0;

     label3:
        if s2 != 0 goto label6;

        i3 = 1;

        $r4 = r2.<org.dom4j.rule.Mode: org.dom4j.rule.RuleSet[] ruleSets>;

        i1 = lengthof $r4;

     label4:
        if i3 >= i1 goto label6;

        $r5 = r2.<org.dom4j.rule.Mode: org.dom4j.rule.RuleSet[] ruleSets>;

        r6 = $r5[i3];

        if r6 == null goto label5;

        virtualinvoke r6.<org.dom4j.rule.RuleSet: void addRule(org.dom4j.rule.Rule)>(r0);

     label5:
        i3 = i3 + 1;

        goto label4;

     label6:
        $r3 = virtualinvoke r2.<org.dom4j.rule.Mode: org.dom4j.rule.RuleSet getRuleSet(int)>(s2);

        virtualinvoke $r3.<org.dom4j.rule.RuleSet: void addRule(org.dom4j.rule.Rule)>(r0);

        return;
    }

    public void removeRule(org.dom4j.rule.Rule)
    {
        org.dom4j.rule.Mode r2;
        org.dom4j.rule.RuleSet $r3, $r4;
        short $s0, s1;
        java.util.Map $r5, $r6;
        int $i2, $i3;
        org.dom4j.rule.Rule r0;
        java.lang.String $r1;

        r2 := @this: org.dom4j.rule.Mode;

        r0 := @parameter0: org.dom4j.rule.Rule;

        $s0 = virtualinvoke r0.<org.dom4j.rule.Rule: short getMatchType()>();

        s1 = $s0;

        $r1 = virtualinvoke r0.<org.dom4j.rule.Rule: java.lang.String getMatchesNodeName()>();

        if $r1 == null goto label2;

        if $s0 != 1 goto label1;

        $r6 = r2.<org.dom4j.rule.Mode: java.util.Map elementNameRuleSets>;

        virtualinvoke r2.<org.dom4j.rule.Mode: void removeFromNameMap(java.util.Map,java.lang.String,org.dom4j.rule.Rule)>($r6, $r1, r0);

        goto label2;

     label1:
        $i2 = (int) $s0;

        if $i2 != 2 goto label2;

        $r5 = r2.<org.dom4j.rule.Mode: java.util.Map attributeNameRuleSets>;

        virtualinvoke r2.<org.dom4j.rule.Mode: void removeFromNameMap(java.util.Map,java.lang.String,org.dom4j.rule.Rule)>($r5, $r1, r0);

     label2:
        $i3 = (int) $s0;

        if $i3 < 14 goto label3;

        s1 = 0;

     label3:
        $r3 = virtualinvoke r2.<org.dom4j.rule.Mode: org.dom4j.rule.RuleSet getRuleSet(int)>(s1);

        virtualinvoke $r3.<org.dom4j.rule.RuleSet: void removeRule(org.dom4j.rule.Rule)>(r0);

        if s1 == 0 goto label4;

        $r4 = virtualinvoke r2.<org.dom4j.rule.Mode: org.dom4j.rule.RuleSet getRuleSet(int)>(0);

        virtualinvoke $r4.<org.dom4j.rule.RuleSet: void removeRule(org.dom4j.rule.Rule)>(r0);

     label4:
        return;
    }

    public org.dom4j.rule.Rule getMatchingRule(org.dom4j.Node)
    {
        org.dom4j.Node r0;
        short $s0, s2;
        java.util.Map $r4, $r6, $r9, $r11;
        int $i1, $i3, $i4, $i5;
        java.lang.String $r5, $r10;
        org.dom4j.rule.Rule $r8, $r13, r16;
        org.dom4j.rule.Mode r1;
        org.dom4j.rule.RuleSet r14, r15, $r18, r19;
        org.dom4j.rule.RuleSet[] $r2, $r3, $r17;
        java.lang.Object $r7, $r12;

        r1 := @this: org.dom4j.rule.Mode;

        r0 := @parameter0: org.dom4j.Node;

        $s0 = interfaceinvoke r0.<org.dom4j.Node: short getNodeType()>();

        s2 = $s0;

        if $s0 != 1 goto label2;

        $r9 = r1.<org.dom4j.rule.Mode: java.util.Map elementNameRuleSets>;

        if $r9 == null goto label3;

        $r10 = interfaceinvoke r0.<org.dom4j.Node: java.lang.String getName()>();

        $r11 = r1.<org.dom4j.rule.Mode: java.util.Map elementNameRuleSets>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        r14 = (org.dom4j.rule.RuleSet) $r12;

        if r14 == null goto label1;

        $r13 = virtualinvoke r14.<org.dom4j.rule.RuleSet: org.dom4j.rule.Rule getMatchingRule(org.dom4j.Node)>(r0);

        if $r13 == null goto label1;

        return $r13;

     label1:
        goto label3;

     label2:
        $i3 = (int) $s0;

        if $i3 != 2 goto label3;

        $r4 = r1.<org.dom4j.rule.Mode: java.util.Map attributeNameRuleSets>;

        if $r4 == null goto label3;

        $r5 = interfaceinvoke r0.<org.dom4j.Node: java.lang.String getName()>();

        $r6 = r1.<org.dom4j.rule.Mode: java.util.Map attributeNameRuleSets>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        r15 = (org.dom4j.rule.RuleSet) $r7;

        if r15 == null goto label3;

        $r8 = virtualinvoke r15.<org.dom4j.rule.RuleSet: org.dom4j.rule.Rule getMatchingRule(org.dom4j.Node)>(r0);

        if $r8 == null goto label3;

        return $r8;

     label3:
        $i4 = (int) $s0;

        if $i4 < 0 goto label4;

        $r3 = r1.<org.dom4j.rule.Mode: org.dom4j.rule.RuleSet[] ruleSets>;

        $i1 = lengthof $r3;

        $i5 = (int) $s0;

        if $i5 < $i1 goto label5;

     label4:
        s2 = 0;

     label5:
        r16 = null;

        $r17 = r1.<org.dom4j.rule.Mode: org.dom4j.rule.RuleSet[] ruleSets>;

        $r18 = $r17[s2];

        if $r18 == null goto label6;

        r16 = virtualinvoke $r18.<org.dom4j.rule.RuleSet: org.dom4j.rule.Rule getMatchingRule(org.dom4j.Node)>(r0);

     label6:
        if r16 != null goto label7;

        if s2 == 0 goto label7;

        $r2 = r1.<org.dom4j.rule.Mode: org.dom4j.rule.RuleSet[] ruleSets>;

        r19 = $r2[0];

        if r19 == null goto label7;

        r16 = virtualinvoke r19.<org.dom4j.rule.RuleSet: org.dom4j.rule.Rule getMatchingRule(org.dom4j.Node)>(r0);

     label7:
        return r16;
    }

    protected org.dom4j.rule.RuleSet getRuleSet(int)
    {
        org.dom4j.rule.Mode r0;
        org.dom4j.rule.RuleSet $r2, r5, r6;
        int i0;
        org.dom4j.rule.RuleSet[] $r1, $r3, $r4;

        r0 := @this: org.dom4j.rule.Mode;

        i0 := @parameter0: int;

        $r1 = r0.<org.dom4j.rule.Mode: org.dom4j.rule.RuleSet[] ruleSets>;

        r6 = $r1[i0];

        if r6 != null goto label1;

        $r2 = new org.dom4j.rule.RuleSet;

        specialinvoke $r2.<org.dom4j.rule.RuleSet: void <init>()>();

        r6 = $r2;

        $r3 = r0.<org.dom4j.rule.Mode: org.dom4j.rule.RuleSet[] ruleSets>;

        $r3[i0] = $r2;

        if i0 == 0 goto label1;

        $r4 = r0.<org.dom4j.rule.Mode: org.dom4j.rule.RuleSet[] ruleSets>;

        r5 = $r4[0];

        if r5 == null goto label1;

        virtualinvoke $r2.<org.dom4j.rule.RuleSet: void addAll(org.dom4j.rule.RuleSet)>(r5);

     label1:
        return r6;
    }

    protected java.util.Map addToNameMap(java.util.Map, java.lang.String, org.dom4j.rule.Rule)
    {
        org.dom4j.rule.Mode r6;
        java.util.HashMap $r4;
        org.dom4j.rule.RuleSet $r3, $r5, r8;
        java.util.Map r7;
        java.lang.Object $r1;
        java.lang.String r0;
        org.dom4j.rule.Rule r2;

        r6 := @this: org.dom4j.rule.Mode;

        r7 := @parameter0: java.util.Map;

        r0 := @parameter1: java.lang.String;

        r2 := @parameter2: org.dom4j.rule.Rule;

        if r7 != null goto label1;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r7 = $r4;

     label1:
        $r1 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r5 = (org.dom4j.rule.RuleSet) $r1;

        r8 = $r5;

        if $r5 != null goto label2;

        $r3 = new org.dom4j.rule.RuleSet;

        specialinvoke $r3.<org.dom4j.rule.RuleSet: void <init>()>();

        r8 = $r3;

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r3);

     label2:
        virtualinvoke r8.<org.dom4j.rule.RuleSet: void addRule(org.dom4j.rule.Rule)>(r2);

        return r7;
    }

    protected void removeFromNameMap(java.util.Map, java.lang.String, org.dom4j.rule.Rule)
    {
        org.dom4j.rule.Mode r5;
        java.util.Map r0;
        java.lang.Object $r2;
        java.lang.String r1;
        org.dom4j.rule.RuleSet r3;
        org.dom4j.rule.Rule r4;

        r5 := @this: org.dom4j.rule.Mode;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.String;

        r4 := @parameter2: org.dom4j.rule.Rule;

        if r0 == null goto label1;

        $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (org.dom4j.rule.RuleSet) $r2;

        if r3 == null goto label1;

        virtualinvoke r3.<org.dom4j.rule.RuleSet: void removeRule(org.dom4j.rule.Rule)>(r4);

     label1:
        return;
    }
}
