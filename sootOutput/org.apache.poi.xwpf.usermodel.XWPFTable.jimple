public class org.apache.poi.xwpf.usermodel.XWPFTable extends java.lang.Object implements org.apache.poi.xwpf.usermodel.IBodyElement, org.apache.poi.xwpf.usermodel.ISDTContents
{
    protected java.lang.StringBuffer text;
    private org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl ctTbl;
    protected java.util.List tableRows;
    protected java.util.List styleIDs;
    private static java.util.EnumMap xwpfBorderTypeMap;
    private static java.util.HashMap stBorderTypeMap;
    protected org.apache.poi.xwpf.usermodel.IBody part;

    public void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl, org.apache.poi.xwpf.usermodel.IBody, int, int)
    {
        org.apache.poi.xwpf.usermodel.IBody r2;
        org.apache.poi.xwpf.usermodel.XWPFTableCell $r5;
        org.apache.poi.xwpf.usermodel.XWPFTableRow $r3, r4, $r6;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl r1;
        int i0, i1, i2, i3;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        r1 := @parameter0: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl;

        r2 := @parameter1: org.apache.poi.xwpf.usermodel.IBody;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl,org.apache.poi.xwpf.usermodel.IBody)>(r1, r2);

        i2 = 0;

     label1:
        if i2 >= i0 goto label7;

        $r3 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.apache.poi.xwpf.usermodel.XWPFTableRow getRow(int)>(i2);

        if $r3 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.apache.poi.xwpf.usermodel.XWPFTableRow createRow()>();

        goto label3;

     label2:
        $r6 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.apache.poi.xwpf.usermodel.XWPFTableRow getRow(int)>(i2);

     label3:
        r4 = $r6;

        i3 = 0;

     label4:
        if i3 >= i1 goto label6;

        $r5 = virtualinvoke r4.<org.apache.poi.xwpf.usermodel.XWPFTableRow: org.apache.poi.xwpf.usermodel.XWPFTableCell getCell(int)>(i3);

        if $r5 != null goto label5;

        virtualinvoke r4.<org.apache.poi.xwpf.usermodel.XWPFTableRow: org.apache.poi.xwpf.usermodel.XWPFTableCell createCell()>();

     label5:
        i3 = i3 + 1;

        goto label4;

     label6:
        i2 = i2 + 1;

        goto label1;

     label7:
        return;
    }

    public void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl, org.apache.poi.xwpf.usermodel.IBody)
    {
        org.apache.poi.xwpf.usermodel.IBody r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc r17;
        java.util.ArrayList $r4;
        org.apache.poi.xwpf.usermodel.XWPFParagraph $r22;
        org.apache.poi.xwpf.usermodel.XWPFTableRow $r10;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow r8;
        java.lang.StringBuffer $r1, $r9, $r14, $r15;
        int $i0, $i1, $i2;
        java.lang.String $r23;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r6, $r13, $r19;
        java.util.List $r5, $r11, $r12, $r18;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP r21;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl r3;
        java.lang.Object $r7, $r16, $r20;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        r3 := @parameter0: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl;

        r2 := @parameter1: org.apache.poi.xwpf.usermodel.IBody;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFTable: java.lang.StringBuffer text> = $r1;

        r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.apache.poi.xwpf.usermodel.IBody part> = r2;

        r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl ctTbl> = r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFTable: java.util.List tableRows> = $r4;

        $i0 = interfaceinvoke r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl: int sizeOfTrArray()>();

        if $i0 != 0 goto label1;

        specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: void createEmptyTable(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl)>(r3);

     label1:
        $r5 = interfaceinvoke r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl: java.util.List getTrList()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label9;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow) $r7;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = new org.apache.poi.xwpf.usermodel.XWPFTableRow;

        specialinvoke $r10.<org.apache.poi.xwpf.usermodel.XWPFTableRow: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow,org.apache.poi.xwpf.usermodel.XWPFTable)>(r8, r0);

        $r11 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: java.util.List tableRows>;

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r10);

        $r12 = interfaceinvoke r8.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow: java.util.List getTcList()>();

        $r13 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r16 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r17 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc) $r16;

        $r18 = interfaceinvoke r17.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc: java.util.List getPList()>();

        $r19 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r21 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP) $r20;

        $r22 = new org.apache.poi.xwpf.usermodel.XWPFParagraph;

        specialinvoke $r22.<org.apache.poi.xwpf.usermodel.XWPFParagraph: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP,org.apache.poi.xwpf.usermodel.IBody)>(r21, r2);

        $i2 = virtualinvoke $r9.<java.lang.StringBuffer: int length()>();

        if $i2 <= 0 goto label5;

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(9);

     label5:
        $r23 = virtualinvoke $r22.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.lang.String getText()>();

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        goto label4;

     label6:
        goto label3;

     label7:
        $i1 = virtualinvoke $r9.<java.lang.StringBuffer: int length()>();

        if $i1 <= 0 goto label8;

        $r14 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: java.lang.StringBuffer text>;

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>($r9);

        $r15 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: java.lang.StringBuffer text>;

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

     label8:
        goto label2;

     label9:
        return;
    }

    private void createEmptyTable(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl)
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder $r9, $r11, $r13, $r15, $r17, $r19;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STTblWidth$Enum $r7;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow $r1;
        java.math.BigInteger $r5;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth $r4, $r6;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum $r10, $r12, $r14, $r16, $r18, $r20;
        org.apache.poi.xwpf.usermodel.XWPFTable r21;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders $r8;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl r0;

        r21 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        r0 := @parameter0: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl;

        $r1 = interfaceinvoke r0.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow addNewTr()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc addNewTc()>();

        interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP addNewP()>();

        $r3 = interfaceinvoke r0.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr addNewTblPr()>();

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth addNewTblW()>();

        $r5 = new java.math.BigInteger;

        specialinvoke $r5.<java.math.BigInteger: void <init>(java.lang.String)>("0");

        interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth: void setW(java.math.BigInteger)>($r5);

        $r6 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth getTblW()>();

        $r7 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STTblWidth: org.openxmlformats.schemas.wordprocessingml.x2006.main.STTblWidth$Enum AUTO>;

        interfaceinvoke $r6.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth: void setType(org.openxmlformats.schemas.wordprocessingml.x2006.main.STTblWidth$Enum)>($r7);

        $r8 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders addNewTblBorders()>();

        $r9 = interfaceinvoke $r8.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder addNewBottom()>();

        $r10 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder: org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum SINGLE>;

        interfaceinvoke $r9.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder: void setVal(org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum)>($r10);

        $r11 = interfaceinvoke $r8.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder addNewInsideH()>();

        $r12 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder: org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum SINGLE>;

        interfaceinvoke $r11.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder: void setVal(org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum)>($r12);

        $r13 = interfaceinvoke $r8.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder addNewInsideV()>();

        $r14 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder: org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum SINGLE>;

        interfaceinvoke $r13.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder: void setVal(org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum)>($r14);

        $r15 = interfaceinvoke $r8.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder addNewLeft()>();

        $r16 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder: org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum SINGLE>;

        interfaceinvoke $r15.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder: void setVal(org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum)>($r16);

        $r17 = interfaceinvoke $r8.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder addNewRight()>();

        $r18 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder: org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum SINGLE>;

        interfaceinvoke $r17.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder: void setVal(org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum)>($r18);

        $r19 = interfaceinvoke $r8.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder addNewTop()>();

        $r20 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder: org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum SINGLE>;

        interfaceinvoke $r19.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder: void setVal(org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum)>($r20);

        virtualinvoke r21.<org.apache.poi.xwpf.usermodel.XWPFTable: java.util.List getRows()>();

        return;
    }

    public org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl getCTTbl()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl $r1;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl ctTbl>;

        return $r1;
    }

    public java.lang.String getText()
    {
        java.lang.String $r2;
        java.lang.StringBuffer $r1;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: java.lang.StringBuffer text>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public void addNewRowBetween(int, int)
    {
        int i0, i1;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void addNewCol()
    {
        org.apache.poi.xwpf.usermodel.XWPFTableRow $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow $r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl $r1, $r3, $r5;
        int $i0, i1, $i2;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl ctTbl>;

        $i0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl: int sizeOfTrArray()>();

        if $i0 != 0 goto label1;

        virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.apache.poi.xwpf.usermodel.XWPFTableRow createRow()>();

     label1:
        i1 = 0;

     label2:
        $r5 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl ctTbl>;

        $i2 = interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl: int sizeOfTrArray()>();

        if i1 >= $i2 goto label3;

        $r2 = new org.apache.poi.xwpf.usermodel.XWPFTableRow;

        $r3 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl ctTbl>;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow getTrArray(int)>(i1);

        specialinvoke $r2.<org.apache.poi.xwpf.usermodel.XWPFTableRow: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow,org.apache.poi.xwpf.usermodel.XWPFTable)>($r4, r0);

        virtualinvoke $r2.<org.apache.poi.xwpf.usermodel.XWPFTableRow: org.apache.poi.xwpf.usermodel.XWPFTableCell createCell()>();

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    public org.apache.poi.xwpf.usermodel.XWPFTableRow createRow()
    {
        org.apache.poi.xwpf.usermodel.XWPFTableRow $r2;
        java.util.List $r5;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow $r4, $r7;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl $r1, $r3, $r6;
        int $i0, $i1;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl ctTbl>;

        $i0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl: int sizeOfTrArray()>();

        if $i0 <= 0 goto label1;

        $r6 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl ctTbl>;

        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow getTrArray(int)>(0);

        $i1 = interfaceinvoke $r7.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow: int sizeOfTcArray()>();

        goto label2;

     label1:
        $i1 = 0;

     label2:
        $r2 = new org.apache.poi.xwpf.usermodel.XWPFTableRow;

        $r3 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl ctTbl>;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow addNewTr()>();

        specialinvoke $r2.<org.apache.poi.xwpf.usermodel.XWPFTableRow: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow,org.apache.poi.xwpf.usermodel.XWPFTable)>($r4, r0);

        specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: void addColumn(org.apache.poi.xwpf.usermodel.XWPFTableRow,int)>($r2, $i1);

        $r5 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: java.util.List tableRows>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r2);

        return $r2;
    }

    public org.apache.poi.xwpf.usermodel.XWPFTableRow getRow(int)
    {
        org.apache.poi.xwpf.usermodel.XWPFTableRow $r4;
        java.util.List $r2;
        int i0, $i1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl $r1;
        java.lang.Object $r3;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl ctTbl>;

        $i1 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl: int sizeOfTrArray()>();

        if i0 >= $i1 goto label1;

        $r2 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: java.util.List getRows()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r4 = (org.apache.poi.xwpf.usermodel.XWPFTableRow) $r3;

        return $r4;

     label1:
        return null;
    }

    public void setWidth(int)
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr $r1;
        int i0;
        java.math.BigInteger $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth $r7;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr getTrPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: boolean isSetTblW()>();

        if $z0 == 0 goto label1;

        $r7 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth getTblW()>();

        goto label2;

     label1:
        $r7 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth addNewTblW()>();

     label2:
        $r2 = new java.math.BigInteger;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.math.BigInteger: void <init>(java.lang.String)>($r6);

        interfaceinvoke $r7.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth: void setW(java.math.BigInteger)>($r2);

        return;
    }

    public int getWidth()
    {
        int $i0, $i2;
        java.math.BigInteger $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr $r1;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr getTrPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: boolean isSetTblW()>();

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth getTblW()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth: java.math.BigInteger getW()>();

        $i0 = virtualinvoke $r3.<java.math.BigInteger: int intValue()>();

        goto label2;

     label1:
        $i2 = (int) -1;

        $i0 = $i2;

     label2:
        return $i0;
    }

    public int getNumberOfRows()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl $r1;
        int $i0;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl ctTbl>;

        $i0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl: int sizeOfTrArray()>();

        return $i0;
    }

    private org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr getTrPr()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl $r1, $r3, $r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr $r2, $r5;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl ctTbl>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr getTblPr()>();

        if $r2 == null goto label1;

        $r4 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl ctTbl>;

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr getTblPr()>();

        goto label2;

     label1:
        $r3 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl ctTbl>;

        $r5 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr addNewTblPr()>();

     label2:
        return $r5;
    }

    private void addColumn(org.apache.poi.xwpf.usermodel.XWPFTableRow, int)
    {
        org.apache.poi.xwpf.usermodel.XWPFTableRow r0;
        int i0, i1;
        org.apache.poi.xwpf.usermodel.XWPFTable r1;

        r1 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        r0 := @parameter0: org.apache.poi.xwpf.usermodel.XWPFTableRow;

        i0 := @parameter1: int;

        if i0 <= 0 goto label2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTableRow: org.apache.poi.xwpf.usermodel.XWPFTableCell createCell()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public java.lang.String getStyleID()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl $r1;
        java.lang.String r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr $r2;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTString $r3;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        r4 = null;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl ctTbl>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr getTblPr()>();

        if $r2 == null goto label1;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTString getTblStyle()>();

        if $r3 == null goto label1;

        r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTString: java.lang.String getVal()>();

     label1:
        return r4;
    }

    public void setStyleID(java.lang.String)
    {
        java.lang.String r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr $r1;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTString $r2, r4;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        r3 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr getTrPr()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTString getTblStyle()>();

        r4 = $r2;

        if $r2 != null goto label1;

        r4 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTString addNewTblStyle()>();

     label1:
        interfaceinvoke r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTString: void setVal(java.lang.String)>(r3);

        return;
    }

    public org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType getInsideHBorderType()
    {
        org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType r8;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders $r2;
        java.util.HashMap $r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr $r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder $r3;
        java.lang.Integer $r6;
        int $i0;
        java.lang.Object $r7;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum $r5;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        r8 = null;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr getTrPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: boolean isSetTblBorders()>();

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders getTblBorders()>();

        $z1 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders: boolean isSetInsideH()>();

        if $z1 == 0 goto label1;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder getInsideH()>();

        $r4 = <org.apache.poi.xwpf.usermodel.XWPFTable: java.util.HashMap stBorderTypeMap>;

        $r5 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder: org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum getVal()>();

        $i0 = virtualinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum: int intValue()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r7 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        r8 = (org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType) $r7;

     label1:
        return r8;
    }

    public int getInsideHBorderSize()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr $r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder $r3;
        int i0, $i2;
        java.math.BigInteger $r4;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        $i2 = (int) -1;

        i0 = $i2;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr getTrPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: boolean isSetTblBorders()>();

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders getTblBorders()>();

        $z1 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders: boolean isSetInsideH()>();

        if $z1 == 0 goto label1;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder getInsideH()>();

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder: java.math.BigInteger getSz()>();

        i0 = virtualinvoke $r4.<java.math.BigInteger: int intValue()>();

     label1:
        return i0;
    }

    public int getInsideHBorderSpace()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr $r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder $r3;
        int i0, $i2;
        java.math.BigInteger $r4;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        $i2 = (int) -1;

        i0 = $i2;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr getTrPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: boolean isSetTblBorders()>();

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders getTblBorders()>();

        $z1 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders: boolean isSetInsideH()>();

        if $z1 == 0 goto label1;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder getInsideH()>();

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder: java.math.BigInteger getSpace()>();

        i0 = virtualinvoke $r4.<java.math.BigInteger: int intValue()>();

     label1:
        return i0;
    }

    public java.lang.String getInsideHBorderColor()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr $r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STHexColor $r4;
        java.lang.String r5;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        r5 = null;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr getTrPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: boolean isSetTblBorders()>();

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders getTblBorders()>();

        $z1 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders: boolean isSetInsideH()>();

        if $z1 == 0 goto label1;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder getInsideH()>();

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder: org.openxmlformats.schemas.wordprocessingml.x2006.main.STHexColor xgetColor()>();

        r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.STHexColor: java.lang.String getStringValue()>();

     label1:
        return r5;
    }

    public org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType getInsideVBorderType()
    {
        org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType r8;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders $r2;
        java.util.HashMap $r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr $r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder $r3;
        java.lang.Integer $r6;
        int $i0;
        java.lang.Object $r7;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum $r5;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        r8 = null;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr getTrPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: boolean isSetTblBorders()>();

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders getTblBorders()>();

        $z1 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders: boolean isSetInsideV()>();

        if $z1 == 0 goto label1;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder getInsideV()>();

        $r4 = <org.apache.poi.xwpf.usermodel.XWPFTable: java.util.HashMap stBorderTypeMap>;

        $r5 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder: org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum getVal()>();

        $i0 = virtualinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum: int intValue()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r7 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        r8 = (org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType) $r7;

     label1:
        return r8;
    }

    public int getInsideVBorderSize()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr $r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder $r3;
        int i0, $i2;
        java.math.BigInteger $r4;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        $i2 = (int) -1;

        i0 = $i2;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr getTrPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: boolean isSetTblBorders()>();

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders getTblBorders()>();

        $z1 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders: boolean isSetInsideV()>();

        if $z1 == 0 goto label1;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder getInsideV()>();

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder: java.math.BigInteger getSz()>();

        i0 = virtualinvoke $r4.<java.math.BigInteger: int intValue()>();

     label1:
        return i0;
    }

    public int getInsideVBorderSpace()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr $r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder $r3;
        int i0, $i2;
        java.math.BigInteger $r4;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        $i2 = (int) -1;

        i0 = $i2;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr getTrPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: boolean isSetTblBorders()>();

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders getTblBorders()>();

        $z1 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders: boolean isSetInsideV()>();

        if $z1 == 0 goto label1;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder getInsideV()>();

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder: java.math.BigInteger getSpace()>();

        i0 = virtualinvoke $r4.<java.math.BigInteger: int intValue()>();

     label1:
        return i0;
    }

    public java.lang.String getInsideVBorderColor()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr $r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STHexColor $r4;
        java.lang.String r5;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        r5 = null;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr getTrPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: boolean isSetTblBorders()>();

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders getTblBorders()>();

        $z1 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders: boolean isSetInsideV()>();

        if $z1 == 0 goto label1;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder getInsideV()>();

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder: org.openxmlformats.schemas.wordprocessingml.x2006.main.STHexColor xgetColor()>();

        r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.STHexColor: java.lang.String getStringValue()>();

     label1:
        return r5;
    }

    public int getRowBandSize()
    {
        int i0;
        java.math.BigInteger $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr $r1;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;
        boolean $z0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber $r2;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        i0 = 0;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr getTrPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: boolean isSetTblStyleRowBandSize()>();

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber getTblStyleRowBandSize()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber: java.math.BigInteger getVal()>();

        i0 = virtualinvoke $r3.<java.math.BigInteger: int intValue()>();

     label1:
        return i0;
    }

    public void setRowBandSize(int)
    {
        int i0;
        long $l1;
        java.math.BigInteger $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr $r1;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;
        boolean $z0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber $r3;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr getTrPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: boolean isSetTblStyleRowBandSize()>();

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber getTblStyleRowBandSize()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber addNewTblStyleRowBandSize()>();

     label2:
        $l1 = (long) i0;

        $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l1);

        interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber: void setVal(java.math.BigInteger)>($r2);

        return;
    }

    public int getColBandSize()
    {
        int i0;
        java.math.BigInteger $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr $r1;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;
        boolean $z0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber $r2;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        i0 = 0;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr getTrPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: boolean isSetTblStyleColBandSize()>();

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber getTblStyleColBandSize()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber: java.math.BigInteger getVal()>();

        i0 = virtualinvoke $r3.<java.math.BigInteger: int intValue()>();

     label1:
        return i0;
    }

    public void setColBandSize(int)
    {
        int i0;
        long $l1;
        java.math.BigInteger $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr $r1;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;
        boolean $z0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber $r3;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr getTrPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: boolean isSetTblStyleColBandSize()>();

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber getTblStyleColBandSize()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber addNewTblStyleColBandSize()>();

     label2:
        $l1 = (long) i0;

        $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l1);

        interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber: void setVal(java.math.BigInteger)>($r2);

        return;
    }

    public void setInsideHBorder(org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType, int, int, java.lang.String)
    {
        long $l1, $l3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder $r10;
        int i0, i2;
        java.math.BigInteger $r6, $r7;
        java.lang.String r8;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum $r5;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;
        boolean $z0, $z1;
        java.util.EnumMap $r3;
        org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders $r9;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr $r1;
        java.lang.Object $r4;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        r2 := @parameter0: org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType;

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        r8 := @parameter3: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr getTrPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: boolean isSetTblBorders()>();

        if $z0 == 0 goto label1;

        $r9 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders getTblBorders()>();

        goto label2;

     label1:
        $r9 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders addNewTblBorders()>();

     label2:
        $z1 = interfaceinvoke $r9.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders: boolean isSetInsideH()>();

        if $z1 == 0 goto label3;

        $r10 = interfaceinvoke $r9.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder getInsideH()>();

        goto label4;

     label3:
        $r10 = interfaceinvoke $r9.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder addNewInsideH()>();

     label4:
        $r3 = <org.apache.poi.xwpf.usermodel.XWPFTable: java.util.EnumMap xwpfBorderTypeMap>;

        $r4 = virtualinvoke $r3.<java.util.EnumMap: java.lang.Object get(java.lang.Object)>(r2);

        $r5 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum) $r4;

        interfaceinvoke $r10.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder: void setVal(org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum)>($r5);

        $l1 = (long) i0;

        $r6 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l1);

        interfaceinvoke $r10.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder: void setSz(java.math.BigInteger)>($r6);

        $l3 = (long) i2;

        $r7 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l3);

        interfaceinvoke $r10.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder: void setSpace(java.math.BigInteger)>($r7);

        interfaceinvoke $r10.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder: void setColor(java.lang.Object)>(r8);

        return;
    }

    public void setInsideVBorder(org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType, int, int, java.lang.String)
    {
        long $l1, $l3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder $r10;
        int i0, i2;
        java.math.BigInteger $r6, $r7;
        java.lang.String r8;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum $r5;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;
        boolean $z0, $z1;
        java.util.EnumMap $r3;
        org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders $r9;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr $r1;
        java.lang.Object $r4;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        r2 := @parameter0: org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType;

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        r8 := @parameter3: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr getTrPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: boolean isSetTblBorders()>();

        if $z0 == 0 goto label1;

        $r9 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders getTblBorders()>();

        goto label2;

     label1:
        $r9 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders addNewTblBorders()>();

     label2:
        $z1 = interfaceinvoke $r9.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders: boolean isSetInsideV()>();

        if $z1 == 0 goto label3;

        $r10 = interfaceinvoke $r9.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder getInsideV()>();

        goto label4;

     label3:
        $r10 = interfaceinvoke $r9.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblBorders: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder addNewInsideV()>();

     label4:
        $r3 = <org.apache.poi.xwpf.usermodel.XWPFTable: java.util.EnumMap xwpfBorderTypeMap>;

        $r4 = virtualinvoke $r3.<java.util.EnumMap: java.lang.Object get(java.lang.Object)>(r2);

        $r5 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum) $r4;

        interfaceinvoke $r10.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder: void setVal(org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum)>($r5);

        $l1 = (long) i0;

        $r6 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l1);

        interfaceinvoke $r10.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder: void setSz(java.math.BigInteger)>($r6);

        $l3 = (long) i2;

        $r7 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l3);

        interfaceinvoke $r10.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder: void setSpace(java.math.BigInteger)>($r7);

        interfaceinvoke $r10.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder: void setColor(java.lang.Object)>(r8);

        return;
    }

    public int getCellMarginTop()
    {
        int i0;
        java.math.BigInteger $r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblCellMar $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr $r1;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        i0 = 0;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr getTrPr()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblCellMar getTblCellMar()>();

        if $r2 == null goto label1;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblCellMar: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth getTop()>();

        if $r3 == null goto label1;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth: java.math.BigInteger getW()>();

        i0 = virtualinvoke $r4.<java.math.BigInteger: int intValue()>();

     label1:
        return i0;
    }

    public int getCellMarginLeft()
    {
        int i0;
        java.math.BigInteger $r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblCellMar $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr $r1;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        i0 = 0;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr getTrPr()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblCellMar getTblCellMar()>();

        if $r2 == null goto label1;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblCellMar: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth getLeft()>();

        if $r3 == null goto label1;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth: java.math.BigInteger getW()>();

        i0 = virtualinvoke $r4.<java.math.BigInteger: int intValue()>();

     label1:
        return i0;
    }

    public int getCellMarginBottom()
    {
        int i0;
        java.math.BigInteger $r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblCellMar $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr $r1;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        i0 = 0;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr getTrPr()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblCellMar getTblCellMar()>();

        if $r2 == null goto label1;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblCellMar: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth getBottom()>();

        if $r3 == null goto label1;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth: java.math.BigInteger getW()>();

        i0 = virtualinvoke $r4.<java.math.BigInteger: int intValue()>();

     label1:
        return i0;
    }

    public int getCellMarginRight()
    {
        int i0;
        java.math.BigInteger $r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblCellMar $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr $r1;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        i0 = 0;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr getTrPr()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblCellMar getTblCellMar()>();

        if $r2 == null goto label1;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblCellMar: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth getRight()>();

        if $r3 == null goto label1;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth: java.math.BigInteger getW()>();

        i0 = virtualinvoke $r4.<java.math.BigInteger: int intValue()>();

     label1:
        return i0;
    }

    public void setCellMargins(int, int, int, int)
    {
        long $l1, $l3, $l5, $l7;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblCellMar r2, $r11;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STTblWidth$Enum $r3, $r5, $r7, $r9;
        int i0, i2, i4, i6;
        java.math.BigInteger $r4, $r6, $r8, $r10;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth $r12, $r13, $r14, $r15;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr $r1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        i4 := @parameter2: int;

        i6 := @parameter3: int;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr getTrPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: boolean isSetTblCellMar()>();

        if $z0 == 0 goto label01;

        $r11 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblCellMar getTblCellMar()>();

        goto label02;

     label01:
        $r11 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblCellMar addNewTblCellMar()>();

     label02:
        r2 = $r11;

        $z1 = interfaceinvoke $r11.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblCellMar: boolean isSetLeft()>();

        if $z1 == 0 goto label03;

        $r12 = interfaceinvoke $r11.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblCellMar: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth getLeft()>();

        goto label04;

     label03:
        $r12 = interfaceinvoke $r11.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblCellMar: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth addNewLeft()>();

     label04:
        $r3 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STTblWidth: org.openxmlformats.schemas.wordprocessingml.x2006.main.STTblWidth$Enum DXA>;

        interfaceinvoke $r12.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth: void setType(org.openxmlformats.schemas.wordprocessingml.x2006.main.STTblWidth$Enum)>($r3);

        $l1 = (long) i0;

        $r4 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l1);

        interfaceinvoke $r12.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth: void setW(java.math.BigInteger)>($r4);

        $z2 = interfaceinvoke r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblCellMar: boolean isSetTop()>();

        if $z2 == 0 goto label05;

        $r13 = interfaceinvoke r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblCellMar: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth getTop()>();

        goto label06;

     label05:
        $r13 = interfaceinvoke r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblCellMar: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth addNewTop()>();

     label06:
        $r5 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STTblWidth: org.openxmlformats.schemas.wordprocessingml.x2006.main.STTblWidth$Enum DXA>;

        interfaceinvoke $r13.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth: void setType(org.openxmlformats.schemas.wordprocessingml.x2006.main.STTblWidth$Enum)>($r5);

        $l3 = (long) i2;

        $r6 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l3);

        interfaceinvoke $r13.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth: void setW(java.math.BigInteger)>($r6);

        $z3 = interfaceinvoke r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblCellMar: boolean isSetBottom()>();

        if $z3 == 0 goto label07;

        $r14 = interfaceinvoke r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblCellMar: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth getBottom()>();

        goto label08;

     label07:
        $r14 = interfaceinvoke r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblCellMar: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth addNewBottom()>();

     label08:
        $r7 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STTblWidth: org.openxmlformats.schemas.wordprocessingml.x2006.main.STTblWidth$Enum DXA>;

        interfaceinvoke $r14.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth: void setType(org.openxmlformats.schemas.wordprocessingml.x2006.main.STTblWidth$Enum)>($r7);

        $l5 = (long) i4;

        $r8 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l5);

        interfaceinvoke $r14.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth: void setW(java.math.BigInteger)>($r8);

        $z4 = interfaceinvoke r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblCellMar: boolean isSetRight()>();

        if $z4 == 0 goto label09;

        $r15 = interfaceinvoke r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblCellMar: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth getRight()>();

        goto label10;

     label09:
        $r15 = interfaceinvoke r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblCellMar: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth addNewRight()>();

     label10:
        $r9 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STTblWidth: org.openxmlformats.schemas.wordprocessingml.x2006.main.STTblWidth$Enum DXA>;

        interfaceinvoke $r15.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth: void setType(org.openxmlformats.schemas.wordprocessingml.x2006.main.STTblWidth$Enum)>($r9);

        $l7 = (long) i6;

        $r10 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l7);

        interfaceinvoke $r15.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth: void setW(java.math.BigInteger)>($r10);

        return;
    }

    public void addRow(org.apache.poi.xwpf.usermodel.XWPFTableRow)
    {
        org.apache.poi.xwpf.usermodel.XWPFTableRow r3;
        java.util.List $r5;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow $r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl $r1, $r2;
        int $i0, $i1;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        r3 := @parameter0: org.apache.poi.xwpf.usermodel.XWPFTableRow;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl ctTbl>;

        interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow addNewTr()>();

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl ctTbl>;

        $i0 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: int getNumberOfRows()>();

        $i1 = $i0 - 1;

        $r4 = virtualinvoke r3.<org.apache.poi.xwpf.usermodel.XWPFTableRow: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow getCtRow()>();

        interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl: void setTrArray(int,org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow)>($i1, $r4);

        $r5 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: java.util.List tableRows>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r3);

        return;
    }

    public boolean addRow(org.apache.poi.xwpf.usermodel.XWPFTableRow, int)
    {
        org.apache.poi.xwpf.usermodel.XWPFTableRow r3;
        java.util.List $r1, $r6;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow $r5;
        int i0, $i1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl $r2, $r4;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        r3 := @parameter0: org.apache.poi.xwpf.usermodel.XWPFTableRow;

        i0 := @parameter1: int;

        if i0 < 0 goto label1;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: java.util.List tableRows>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i0 > $i1 goto label1;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl ctTbl>;

        interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow insertNewTr(int)>(i0);

        $r4 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl ctTbl>;

        $r5 = virtualinvoke r3.<org.apache.poi.xwpf.usermodel.XWPFTableRow: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow getCtRow()>();

        interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl: void setTrArray(int,org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow)>(i0, $r5);

        $r6 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: java.util.List tableRows>;

        interfaceinvoke $r6.<java.util.List: void add(int,java.lang.Object)>(i0, r3);

        return 1;

     label1:
        return 0;
    }

    public org.apache.poi.xwpf.usermodel.XWPFTableRow insertNewTableRow(int)
    {
        org.apache.poi.xwpf.usermodel.XWPFTableRow $r4;
        java.util.List $r1, $r5;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow $r3;
        int i0, $i1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl $r2;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: java.util.List tableRows>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i0 > $i1 goto label1;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl ctTbl>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow insertNewTr(int)>(i0);

        $r4 = new org.apache.poi.xwpf.usermodel.XWPFTableRow;

        specialinvoke $r4.<org.apache.poi.xwpf.usermodel.XWPFTableRow: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow,org.apache.poi.xwpf.usermodel.XWPFTable)>($r3, r0);

        $r5 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: java.util.List tableRows>;

        interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>(i0, $r4);

        return $r4;

     label1:
        return null;
    }

    public boolean removeRow(int) throws java.lang.IndexOutOfBoundsException
    {
        java.util.List $r1, $r3;
        int i0, $i1, $i2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl $r2, $r4;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        i0 := @parameter0: int;

        if i0 < 0 goto label2;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: java.util.List tableRows>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i0 >= $i1 goto label2;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl ctTbl>;

        $i2 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl: int sizeOfTrArray()>();

        if $i2 <= 0 goto label1;

        $r4 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl ctTbl>;

        interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTbl: void removeTr(int)>(i0);

     label1:
        $r3 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: java.util.List tableRows>;

        interfaceinvoke $r3.<java.util.List: java.lang.Object remove(int)>(i0);

        return 1;

     label2:
        return 0;
    }

    public java.util.List getRows()
    {
        java.util.List $r1;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: java.util.List tableRows>;

        return $r1;
    }

    public org.apache.poi.xwpf.usermodel.BodyElementType getElementType()
    {
        org.apache.poi.xwpf.usermodel.BodyElementType $r0;
        org.apache.poi.xwpf.usermodel.XWPFTable r1;

        r1 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        $r0 = <org.apache.poi.xwpf.usermodel.BodyElementType: org.apache.poi.xwpf.usermodel.BodyElementType TABLE>;

        return $r0;
    }

    public org.apache.poi.xwpf.usermodel.IBody getBody()
    {
        org.apache.poi.xwpf.usermodel.IBody $r1;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.apache.poi.xwpf.usermodel.IBody part>;

        return $r1;
    }

    public org.apache.poi.POIXMLDocumentPart getPart()
    {
        org.apache.poi.xwpf.usermodel.IBody $r1, $r2;
        org.apache.poi.POIXMLDocumentPart $r3;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.apache.poi.xwpf.usermodel.IBody part>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.apache.poi.xwpf.usermodel.IBody part>;

        $r3 = interfaceinvoke $r2.<org.apache.poi.xwpf.usermodel.IBody: org.apache.poi.POIXMLDocumentPart getPart()>();

        return $r3;

     label1:
        return null;
    }

    public org.apache.poi.xwpf.usermodel.BodyType getPartType()
    {
        org.apache.poi.xwpf.usermodel.IBody $r1;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;
        org.apache.poi.xwpf.usermodel.BodyType $r2;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.apache.poi.xwpf.usermodel.IBody part>;

        $r2 = interfaceinvoke $r1.<org.apache.poi.xwpf.usermodel.IBody: org.apache.poi.xwpf.usermodel.BodyType getPartType()>();

        return $r2;
    }

    public org.apache.poi.xwpf.usermodel.XWPFTableRow getRow(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow)
    {
        org.apache.poi.xwpf.usermodel.XWPFTableRow $r4, $r7;
        java.util.List $r1, $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow $r5, r6;
        int $i0, i1;
        java.lang.Object $r3;
        org.apache.poi.xwpf.usermodel.XWPFTable r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFTable;

        r6 := @parameter0: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow;

        i1 = 0;

     label1:
        $r1 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: java.util.List getRows()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r2 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: java.util.List getRows()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        $r4 = (org.apache.poi.xwpf.usermodel.XWPFTableRow) $r3;

        $r5 = virtualinvoke $r4.<org.apache.poi.xwpf.usermodel.XWPFTableRow: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow getCtRow()>();

        if $r5 != r6 goto label2;

        $r7 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFTable: org.apache.poi.xwpf.usermodel.XWPFTableRow getRow(int)>(i1);

        return $r7;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    static void <clinit>()
    {
        java.lang.Integer $r27, $r30, $r33, $r36, $r39, $r42, $r45, $r48;
        java.util.EnumMap $r0, $r1, $r4, $r7, $r10, $r13, $r16, $r19, $r22;
        java.util.HashMap $r25, $r26, $r29, $r32, $r35, $r38, $r41, $r44, $r47;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum $r3, $r6, $r9, $r12, $r15, $r18, $r21, $r24;
        org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType $r2, $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r28, $r31, $r34, $r37, $r40, $r43, $r46, $r49;

        $r0 = new java.util.EnumMap;

        specialinvoke $r0.<java.util.EnumMap: void <init>(java.lang.Class)>(class "Lorg/apache/poi/xwpf/usermodel/XWPFTable$XWPFBorderType;");

        <org.apache.poi.xwpf.usermodel.XWPFTable: java.util.EnumMap xwpfBorderTypeMap> = $r0;

        $r1 = <org.apache.poi.xwpf.usermodel.XWPFTable: java.util.EnumMap xwpfBorderTypeMap>;

        $r2 = <org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType: org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType NIL>;

        $r3 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum forInt(int)>(1);

        virtualinvoke $r1.<java.util.EnumMap: java.lang.Object put(java.lang.Enum,java.lang.Object)>($r2, $r3);

        $r4 = <org.apache.poi.xwpf.usermodel.XWPFTable: java.util.EnumMap xwpfBorderTypeMap>;

        $r5 = <org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType: org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType NONE>;

        $r6 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum forInt(int)>(2);

        virtualinvoke $r4.<java.util.EnumMap: java.lang.Object put(java.lang.Enum,java.lang.Object)>($r5, $r6);

        $r7 = <org.apache.poi.xwpf.usermodel.XWPFTable: java.util.EnumMap xwpfBorderTypeMap>;

        $r8 = <org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType: org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType SINGLE>;

        $r9 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum forInt(int)>(3);

        virtualinvoke $r7.<java.util.EnumMap: java.lang.Object put(java.lang.Enum,java.lang.Object)>($r8, $r9);

        $r10 = <org.apache.poi.xwpf.usermodel.XWPFTable: java.util.EnumMap xwpfBorderTypeMap>;

        $r11 = <org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType: org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType THICK>;

        $r12 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum forInt(int)>(4);

        virtualinvoke $r10.<java.util.EnumMap: java.lang.Object put(java.lang.Enum,java.lang.Object)>($r11, $r12);

        $r13 = <org.apache.poi.xwpf.usermodel.XWPFTable: java.util.EnumMap xwpfBorderTypeMap>;

        $r14 = <org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType: org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType DOUBLE>;

        $r15 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum forInt(int)>(5);

        virtualinvoke $r13.<java.util.EnumMap: java.lang.Object put(java.lang.Enum,java.lang.Object)>($r14, $r15);

        $r16 = <org.apache.poi.xwpf.usermodel.XWPFTable: java.util.EnumMap xwpfBorderTypeMap>;

        $r17 = <org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType: org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType DOTTED>;

        $r18 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum forInt(int)>(6);

        virtualinvoke $r16.<java.util.EnumMap: java.lang.Object put(java.lang.Enum,java.lang.Object)>($r17, $r18);

        $r19 = <org.apache.poi.xwpf.usermodel.XWPFTable: java.util.EnumMap xwpfBorderTypeMap>;

        $r20 = <org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType: org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType DASHED>;

        $r21 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum forInt(int)>(7);

        virtualinvoke $r19.<java.util.EnumMap: java.lang.Object put(java.lang.Enum,java.lang.Object)>($r20, $r21);

        $r22 = <org.apache.poi.xwpf.usermodel.XWPFTable: java.util.EnumMap xwpfBorderTypeMap>;

        $r23 = <org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType: org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType DOT_DASH>;

        $r24 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum forInt(int)>(8);

        virtualinvoke $r22.<java.util.EnumMap: java.lang.Object put(java.lang.Enum,java.lang.Object)>($r23, $r24);

        $r25 = new java.util.HashMap;

        specialinvoke $r25.<java.util.HashMap: void <init>()>();

        <org.apache.poi.xwpf.usermodel.XWPFTable: java.util.HashMap stBorderTypeMap> = $r25;

        $r26 = <org.apache.poi.xwpf.usermodel.XWPFTable: java.util.HashMap stBorderTypeMap>;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r28 = <org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType: org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType NIL>;

        virtualinvoke $r26.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, $r28);

        $r29 = <org.apache.poi.xwpf.usermodel.XWPFTable: java.util.HashMap stBorderTypeMap>;

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r31 = <org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType: org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType NONE>;

        virtualinvoke $r29.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r30, $r31);

        $r32 = <org.apache.poi.xwpf.usermodel.XWPFTable: java.util.HashMap stBorderTypeMap>;

        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r34 = <org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType: org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType SINGLE>;

        virtualinvoke $r32.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r33, $r34);

        $r35 = <org.apache.poi.xwpf.usermodel.XWPFTable: java.util.HashMap stBorderTypeMap>;

        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r37 = <org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType: org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType THICK>;

        virtualinvoke $r35.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r36, $r37);

        $r38 = <org.apache.poi.xwpf.usermodel.XWPFTable: java.util.HashMap stBorderTypeMap>;

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r40 = <org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType: org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType DOUBLE>;

        virtualinvoke $r38.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r39, $r40);

        $r41 = <org.apache.poi.xwpf.usermodel.XWPFTable: java.util.HashMap stBorderTypeMap>;

        $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r43 = <org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType: org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType DOTTED>;

        virtualinvoke $r41.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r42, $r43);

        $r44 = <org.apache.poi.xwpf.usermodel.XWPFTable: java.util.HashMap stBorderTypeMap>;

        $r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);

        $r46 = <org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType: org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType DASHED>;

        virtualinvoke $r44.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r45, $r46);

        $r47 = <org.apache.poi.xwpf.usermodel.XWPFTable: java.util.HashMap stBorderTypeMap>;

        $r48 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        $r49 = <org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType: org.apache.poi.xwpf.usermodel.XWPFTable$XWPFBorderType DOT_DASH>;

        virtualinvoke $r47.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r48, $r49);

        return;
    }
}
