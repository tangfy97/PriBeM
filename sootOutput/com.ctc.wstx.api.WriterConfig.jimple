public final class com.ctc.wstx.api.WriterConfig extends com.ctc.wstx.api.CommonConfig implements com.ctc.wstx.cfg.OutputConfigFlags
{
    protected static final java.lang.String DEFAULT_AUTOMATIC_NS_PREFIX;
    static final int PROP_AUTOMATIC_NS;
    static final int PROP_AUTOMATIC_EMPTY_ELEMS;
    static final int PROP_ENABLE_NS;
    static final int PROP_AUTOMATIC_NS_PREFIX;
    static final int PROP_TEXT_ESCAPER;
    static final int PROP_ATTR_VALUE_ESCAPER;
    static final int PROP_PROBLEM_REPORTER;
    static final int PROP_OUTPUT_CDATA_AS_TEXT;
    static final int PROP_COPY_DEFAULT_ATTRS;
    static final int PROP_ESCAPE_CR;
    static final int PROP_VALIDATE_STRUCTURE;
    static final int PROP_VALIDATE_CONTENT;
    static final int PROP_VALIDATE_ATTR;
    static final int PROP_VALIDATE_NAMES;
    static final int PROP_FIX_CONTENT;
    static final int PROP_UNDERLYING_STREAM;
    static final int PROP_UNDERLYING_WRITER;
    static final boolean DEFAULT_ENABLE_NS;
    static final boolean DEFAULT_AUTOMATIC_EMPTY_ELEMS;
    static final boolean DEFAULT_OUTPUT_CDATA_AS_TEXT;
    static final boolean DEFAULT_COPY_DEFAULT_ATTRS;
    static final boolean DEFAULT_ESCAPE_CR;
    static final boolean DEFAULT_VALIDATE_STRUCTURE;
    static final boolean DEFAULT_VALIDATE_CONTENT;
    static final boolean DEFAULT_VALIDATE_ATTR;
    static final boolean DEFAULT_VALIDATE_NAMES;
    static final boolean DEFAULT_FIX_CONTENT;
    static final int DEFAULT_FLAGS_J2ME;
    static final int DEFAULT_FLAGS_FULL;
    static final java.util.HashMap sProperties;
    final boolean mIsJ2MESubset;
    protected int mConfigFlags;
    protected java.lang.String mAutoNsPrefix;
    protected org.codehaus.stax2.io.EscapingWriterFactory mTextEscaperFactory;
    protected org.codehaus.stax2.io.EscapingWriterFactory mAttrValueEscaperFactory;
    protected javax.xml.stream.XMLReporter mProblemReporter;
    static final java.lang.ThreadLocal mRecyclerRef;
    com.ctc.wstx.io.BufferRecycler mCurrRecycler;
    static int Counter;

    private void <init>(boolean, int, java.lang.String, org.codehaus.stax2.io.EscapingWriterFactory, org.codehaus.stax2.io.EscapingWriterFactory, javax.xml.stream.XMLReporter)
    {
        java.lang.ThreadLocal $r5;
        org.codehaus.stax2.io.EscapingWriterFactory r2, r3;
        com.ctc.wstx.api.WriterConfig r0;
        com.ctc.wstx.io.BufferRecycler $r9;
        int i0;
        java.lang.Object $r6, $r8;
        java.lang.String r1;
        java.lang.ref.SoftReference r7;
        javax.xml.stream.XMLReporter r4;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: org.codehaus.stax2.io.EscapingWriterFactory;

        r3 := @parameter4: org.codehaus.stax2.io.EscapingWriterFactory;

        r4 := @parameter5: javax.xml.stream.XMLReporter;

        specialinvoke r0.<com.ctc.wstx.api.CommonConfig: void <init>()>();

        r0.<com.ctc.wstx.api.WriterConfig: org.codehaus.stax2.io.EscapingWriterFactory mTextEscaperFactory> = null;

        r0.<com.ctc.wstx.api.WriterConfig: org.codehaus.stax2.io.EscapingWriterFactory mAttrValueEscaperFactory> = null;

        r0.<com.ctc.wstx.api.WriterConfig: javax.xml.stream.XMLReporter mProblemReporter> = null;

        r0.<com.ctc.wstx.api.WriterConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler> = null;

        r0.<com.ctc.wstx.api.WriterConfig: boolean mIsJ2MESubset> = z0;

        r0.<com.ctc.wstx.api.WriterConfig: int mConfigFlags> = i0;

        r0.<com.ctc.wstx.api.WriterConfig: java.lang.String mAutoNsPrefix> = r1;

        r0.<com.ctc.wstx.api.WriterConfig: org.codehaus.stax2.io.EscapingWriterFactory mTextEscaperFactory> = r2;

        r0.<com.ctc.wstx.api.WriterConfig: org.codehaus.stax2.io.EscapingWriterFactory mAttrValueEscaperFactory> = r3;

        r0.<com.ctc.wstx.api.WriterConfig: javax.xml.stream.XMLReporter mProblemReporter> = r4;

        $r5 = <com.ctc.wstx.api.WriterConfig: java.lang.ThreadLocal mRecyclerRef>;

        $r6 = virtualinvoke $r5.<java.lang.ThreadLocal: java.lang.Object get()>();

        r7 = (java.lang.ref.SoftReference) $r6;

        if r7 == null goto label1;

        $r8 = virtualinvoke r7.<java.lang.ref.SoftReference: java.lang.Object get()>();

        $r9 = (com.ctc.wstx.io.BufferRecycler) $r8;

        r0.<com.ctc.wstx.api.WriterConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler> = $r9;

     label1:
        return;
    }

    public static com.ctc.wstx.api.WriterConfig createJ2MEDefaults()
    {
        com.ctc.wstx.api.WriterConfig $r0;

        $r0 = new com.ctc.wstx.api.WriterConfig;

        specialinvoke $r0.<com.ctc.wstx.api.WriterConfig: void <init>(boolean,int,java.lang.String,org.codehaus.stax2.io.EscapingWriterFactory,org.codehaus.stax2.io.EscapingWriterFactory,javax.xml.stream.XMLReporter)>(1, 4901, "wstxns", null, null, null);

        return $r0;
    }

    public static com.ctc.wstx.api.WriterConfig createFullDefaults()
    {
        com.ctc.wstx.api.WriterConfig $r0;

        $r0 = new com.ctc.wstx.api.WriterConfig;

        specialinvoke $r0.<com.ctc.wstx.api.WriterConfig: void <init>(boolean,int,java.lang.String,org.codehaus.stax2.io.EscapingWriterFactory,org.codehaus.stax2.io.EscapingWriterFactory,javax.xml.stream.XMLReporter)>(1, 4901, "wstxns", null, null, null);

        return $r0;
    }

    public com.ctc.wstx.api.WriterConfig createNonShared()
    {
        org.codehaus.stax2.io.EscapingWriterFactory $r3, $r4;
        com.ctc.wstx.api.WriterConfig $r0, r1;
        int $i0;
        java.lang.String $r5;
        javax.xml.stream.XMLReporter $r2;
        boolean $z0;

        r1 := @this: com.ctc.wstx.api.WriterConfig;

        $r0 = new com.ctc.wstx.api.WriterConfig;

        $z0 = r1.<com.ctc.wstx.api.WriterConfig: boolean mIsJ2MESubset>;

        $i0 = r1.<com.ctc.wstx.api.WriterConfig: int mConfigFlags>;

        $r5 = r1.<com.ctc.wstx.api.WriterConfig: java.lang.String mAutoNsPrefix>;

        $r4 = r1.<com.ctc.wstx.api.WriterConfig: org.codehaus.stax2.io.EscapingWriterFactory mTextEscaperFactory>;

        $r3 = r1.<com.ctc.wstx.api.WriterConfig: org.codehaus.stax2.io.EscapingWriterFactory mAttrValueEscaperFactory>;

        $r2 = r1.<com.ctc.wstx.api.WriterConfig: javax.xml.stream.XMLReporter mProblemReporter>;

        specialinvoke $r0.<com.ctc.wstx.api.WriterConfig: void <init>(boolean,int,java.lang.String,org.codehaus.stax2.io.EscapingWriterFactory,org.codehaus.stax2.io.EscapingWriterFactory,javax.xml.stream.XMLReporter)>($z0, $i0, $r5, $r4, $r3, $r2);

        return $r0;
    }

    protected int findPropertyId(java.lang.String)
    {
        com.ctc.wstx.api.WriterConfig r4;
        int $i0, $i2;
        java.util.HashMap $r1;
        java.lang.Object $r2;
        java.lang.String r0;
        java.lang.Integer r3;

        r4 := @this: com.ctc.wstx.api.WriterConfig;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.ctc.wstx.api.WriterConfig: java.util.HashMap sProperties>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        r3 = (java.lang.Integer) $r2;

        if r3 != null goto label1;

        $i2 = (int) -1;

        $i0 = $i2;

        goto label2;

     label1:
        $i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

     label2:
        return $i0;
    }

    public java.lang.Object getProperty(int)
    {
        java.lang.IllegalStateException $r0;
        org.codehaus.stax2.io.EscapingWriterFactory $r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.lang.Error $r6;
        java.lang.StringBuffer $r7, $r8, $r9, $r10;
        int i0;
        java.lang.Boolean $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22;
        java.lang.String $r5, $r11;
        javax.xml.stream.XMLReporter $r2;
        com.ctc.wstx.api.WriterConfig r1;

        r1 := @this: com.ctc.wstx.api.WriterConfig;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label01;
            case 2: goto label08;
            case 3: goto label04;
            case 4: goto label11;
            case 5: goto label12;
            case 6: goto label13;
            case 7: goto label07;
            case 8: goto label39;
            case 9: goto label39;
            case 10: goto label39;
            case 11: goto label14;
            case 12: goto label17;
            case 13: goto label20;
            case 14: goto label39;
            case 15: goto label23;
            case 16: goto label26;
            case 17: goto label29;
            case 18: goto label32;
            case 19: goto label35;
            case 20: goto label39;
            case 21: goto label39;
            case 22: goto label39;
            case 23: goto label39;
            case 24: goto label39;
            case 25: goto label39;
            case 26: goto label39;
            case 27: goto label39;
            case 28: goto label39;
            case 29: goto label39;
            case 30: goto label38;
            case 31: goto label38;
            default: goto label39;
        };

     label01:
        $z10 = virtualinvoke r1.<com.ctc.wstx.api.WriterConfig: boolean automaticNamespacesEnabled()>();

        if $z10 == 0 goto label02;

        $r12 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label03;

     label02:
        $r12 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label03:
        return $r12;

     label04:
        $z8 = virtualinvoke r1.<com.ctc.wstx.api.WriterConfig: boolean willSupportNamespaces()>();

        if $z8 == 0 goto label05;

        $r13 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label06;

     label05:
        $r13 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label06:
        return $r13;

     label07:
        $r2 = virtualinvoke r1.<com.ctc.wstx.api.WriterConfig: javax.xml.stream.XMLReporter getProblemReporter()>();

        return $r2;

     label08:
        $z9 = virtualinvoke r1.<com.ctc.wstx.api.WriterConfig: boolean automaticEmptyElementsEnabled()>();

        if $z9 == 0 goto label09;

        $r14 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label10;

     label09:
        $r14 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label10:
        return $r14;

     label11:
        $r5 = virtualinvoke r1.<com.ctc.wstx.api.WriterConfig: java.lang.String getAutomaticNsPrefix()>();

        return $r5;

     label12:
        $r4 = virtualinvoke r1.<com.ctc.wstx.api.WriterConfig: org.codehaus.stax2.io.EscapingWriterFactory getTextEscaperFactory()>();

        return $r4;

     label13:
        $r3 = virtualinvoke r1.<com.ctc.wstx.api.WriterConfig: org.codehaus.stax2.io.EscapingWriterFactory getAttrValueEscaperFactory()>();

        return $r3;

     label14:
        $z7 = virtualinvoke r1.<com.ctc.wstx.api.WriterConfig: boolean willOutputCDataAsText()>();

        if $z7 == 0 goto label15;

        $r15 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label16;

     label15:
        $r15 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label16:
        return $r15;

     label17:
        $z6 = virtualinvoke r1.<com.ctc.wstx.api.WriterConfig: boolean willCopyDefaultAttrs()>();

        if $z6 == 0 goto label18;

        $r16 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label19;

     label18:
        $r16 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label19:
        return $r16;

     label20:
        $z5 = virtualinvoke r1.<com.ctc.wstx.api.WriterConfig: boolean willEscapeCr()>();

        if $z5 == 0 goto label21;

        $r17 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label22;

     label21:
        $r17 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label22:
        return $r17;

     label23:
        $z4 = virtualinvoke r1.<com.ctc.wstx.api.WriterConfig: boolean willValidateStructure()>();

        if $z4 == 0 goto label24;

        $r18 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label25;

     label24:
        $r18 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label25:
        return $r18;

     label26:
        $z3 = virtualinvoke r1.<com.ctc.wstx.api.WriterConfig: boolean willValidateContent()>();

        if $z3 == 0 goto label27;

        $r19 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label28;

     label27:
        $r19 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label28:
        return $r19;

     label29:
        $z2 = virtualinvoke r1.<com.ctc.wstx.api.WriterConfig: boolean willValidateAttributes()>();

        if $z2 == 0 goto label30;

        $r20 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label31;

     label30:
        $r20 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label31:
        return $r20;

     label32:
        $z1 = virtualinvoke r1.<com.ctc.wstx.api.WriterConfig: boolean willValidateNames()>();

        if $z1 == 0 goto label33;

        $r21 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label34;

     label33:
        $r21 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label34:
        return $r21;

     label35:
        $z0 = virtualinvoke r1.<com.ctc.wstx.api.WriterConfig: boolean willFixContent()>();

        if $z0 == 0 goto label36;

        $r22 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label37;

     label36:
        $r22 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label37:
        return $r22;

     label38:
        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can not access per-stream-writer properties via factory");

        throw $r0;

     label39:
        $r6 = new java.lang.Error;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Internal error: no handler for property with internal id ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.Error: void <init>(java.lang.String)>($r11);

        throw $r6;
    }

    public boolean setProperty(java.lang.String, int, java.lang.Object)
    {
        java.lang.IllegalStateException $r0;
        org.codehaus.stax2.io.EscapingWriterFactory $r5, $r6;
        java.lang.Error $r8;
        java.lang.StringBuffer $r9, $r10, $r11, $r12;
        int i0;
        java.lang.String r2, $r7, $r13;
        javax.xml.stream.XMLReporter $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        com.ctc.wstx.api.WriterConfig r1;
        java.lang.Object r3;

        r1 := @this: com.ctc.wstx.api.WriterConfig;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r3 := @parameter2: java.lang.Object;

        tableswitch(i0)
        {
            case 1: goto label01;
            case 2: goto label04;
            case 3: goto label02;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label03;
            case 8: goto label17;
            case 9: goto label17;
            case 10: goto label17;
            case 11: goto label08;
            case 12: goto label09;
            case 13: goto label10;
            case 14: goto label17;
            case 15: goto label11;
            case 16: goto label12;
            case 17: goto label13;
            case 18: goto label14;
            case 19: goto label15;
            case 20: goto label17;
            case 21: goto label17;
            case 22: goto label17;
            case 23: goto label17;
            case 24: goto label17;
            case 25: goto label17;
            case 26: goto label17;
            case 27: goto label17;
            case 28: goto label17;
            case 29: goto label17;
            case 30: goto label16;
            case 31: goto label16;
            default: goto label17;
        };

     label01:
        $z10 = staticinvoke <com.ctc.wstx.util.ArgUtil: boolean convertToBoolean(java.lang.String,java.lang.Object)>(r2, r3);

        virtualinvoke r1.<com.ctc.wstx.api.WriterConfig: void enableAutomaticNamespaces(boolean)>($z10);

        goto label18;

     label02:
        $z8 = staticinvoke <com.ctc.wstx.util.ArgUtil: boolean convertToBoolean(java.lang.String,java.lang.Object)>(r2, r3);

        virtualinvoke r1.<com.ctc.wstx.api.WriterConfig: void doSupportNamespaces(boolean)>($z8);

        goto label18;

     label03:
        $r4 = (javax.xml.stream.XMLReporter) r3;

        virtualinvoke r1.<com.ctc.wstx.api.WriterConfig: void setProblemReporter(javax.xml.stream.XMLReporter)>($r4);

        goto label18;

     label04:
        $z9 = staticinvoke <com.ctc.wstx.util.ArgUtil: boolean convertToBoolean(java.lang.String,java.lang.Object)>(r2, r3);

        virtualinvoke r1.<com.ctc.wstx.api.WriterConfig: void enableAutomaticEmptyElements(boolean)>($z9);

        goto label18;

     label05:
        $r7 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r1.<com.ctc.wstx.api.WriterConfig: void setAutomaticNsPrefix(java.lang.String)>($r7);

        goto label18;

     label06:
        $r6 = (org.codehaus.stax2.io.EscapingWriterFactory) r3;

        virtualinvoke r1.<com.ctc.wstx.api.WriterConfig: void setTextEscaperFactory(org.codehaus.stax2.io.EscapingWriterFactory)>($r6);

        goto label18;

     label07:
        $r5 = (org.codehaus.stax2.io.EscapingWriterFactory) r3;

        virtualinvoke r1.<com.ctc.wstx.api.WriterConfig: void setAttrValueEscaperFactory(org.codehaus.stax2.io.EscapingWriterFactory)>($r5);

        goto label18;

     label08:
        $z7 = staticinvoke <com.ctc.wstx.util.ArgUtil: boolean convertToBoolean(java.lang.String,java.lang.Object)>(r2, r3);

        virtualinvoke r1.<com.ctc.wstx.api.WriterConfig: void doOutputCDataAsText(boolean)>($z7);

        goto label18;

     label09:
        $z6 = staticinvoke <com.ctc.wstx.util.ArgUtil: boolean convertToBoolean(java.lang.String,java.lang.Object)>(r2, r3);

        virtualinvoke r1.<com.ctc.wstx.api.WriterConfig: void doCopyDefaultAttrs(boolean)>($z6);

        goto label18;

     label10:
        $z5 = staticinvoke <com.ctc.wstx.util.ArgUtil: boolean convertToBoolean(java.lang.String,java.lang.Object)>(r2, r3);

        virtualinvoke r1.<com.ctc.wstx.api.WriterConfig: void doEscapeCr(boolean)>($z5);

        goto label18;

     label11:
        $z4 = staticinvoke <com.ctc.wstx.util.ArgUtil: boolean convertToBoolean(java.lang.String,java.lang.Object)>(r2, r3);

        virtualinvoke r1.<com.ctc.wstx.api.WriterConfig: void doValidateStructure(boolean)>($z4);

        goto label18;

     label12:
        $z3 = staticinvoke <com.ctc.wstx.util.ArgUtil: boolean convertToBoolean(java.lang.String,java.lang.Object)>(r2, r3);

        virtualinvoke r1.<com.ctc.wstx.api.WriterConfig: void doValidateContent(boolean)>($z3);

        goto label18;

     label13:
        $z2 = staticinvoke <com.ctc.wstx.util.ArgUtil: boolean convertToBoolean(java.lang.String,java.lang.Object)>(r2, r3);

        virtualinvoke r1.<com.ctc.wstx.api.WriterConfig: void doValidateAttributes(boolean)>($z2);

        goto label18;

     label14:
        $z1 = staticinvoke <com.ctc.wstx.util.ArgUtil: boolean convertToBoolean(java.lang.String,java.lang.Object)>(r2, r3);

        virtualinvoke r1.<com.ctc.wstx.api.WriterConfig: void doValidateNames(boolean)>($z1);

        goto label18;

     label15:
        $z0 = staticinvoke <com.ctc.wstx.util.ArgUtil: boolean convertToBoolean(java.lang.String,java.lang.Object)>(r2, r3);

        virtualinvoke r1.<com.ctc.wstx.api.WriterConfig: void doFixContent(boolean)>($z0);

        goto label18;

     label16:
        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can not modify per-stream-writer properties via factory");

        throw $r0;

     label17:
        $r8 = new java.lang.Error;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Internal error: no handler for property with internal id ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.Error: void <init>(java.lang.String)>($r13);

        throw $r8;

     label18:
        return 1;
    }

    public int getConfigFlags()
    {
        int $i0;
        com.ctc.wstx.api.WriterConfig r0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        $i0 = r0.<com.ctc.wstx.api.WriterConfig: int mConfigFlags>;

        return $i0;
    }

    public boolean automaticNamespacesEnabled()
    {
        com.ctc.wstx.api.WriterConfig r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        $z0 = specialinvoke r0.<com.ctc.wstx.api.WriterConfig: boolean hasConfigFlag(int)>(2);

        return $z0;
    }

    public boolean automaticEmptyElementsEnabled()
    {
        com.ctc.wstx.api.WriterConfig r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        $z0 = specialinvoke r0.<com.ctc.wstx.api.WriterConfig: boolean hasConfigFlag(int)>(4);

        return $z0;
    }

    public boolean willSupportNamespaces()
    {
        com.ctc.wstx.api.WriterConfig r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        $z0 = specialinvoke r0.<com.ctc.wstx.api.WriterConfig: boolean hasConfigFlag(int)>(1);

        return $z0;
    }

    public boolean willOutputCDataAsText()
    {
        com.ctc.wstx.api.WriterConfig r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        $z0 = specialinvoke r0.<com.ctc.wstx.api.WriterConfig: boolean hasConfigFlag(int)>(8);

        return $z0;
    }

    public boolean willCopyDefaultAttrs()
    {
        com.ctc.wstx.api.WriterConfig r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        $z0 = specialinvoke r0.<com.ctc.wstx.api.WriterConfig: boolean hasConfigFlag(int)>(16);

        return $z0;
    }

    public boolean willEscapeCr()
    {
        com.ctc.wstx.api.WriterConfig r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        $z0 = specialinvoke r0.<com.ctc.wstx.api.WriterConfig: boolean hasConfigFlag(int)>(32);

        return $z0;
    }

    public boolean willValidateStructure()
    {
        com.ctc.wstx.api.WriterConfig r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        $z0 = specialinvoke r0.<com.ctc.wstx.api.WriterConfig: boolean hasConfigFlag(int)>(256);

        return $z0;
    }

    public boolean willValidateContent()
    {
        com.ctc.wstx.api.WriterConfig r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        $z0 = specialinvoke r0.<com.ctc.wstx.api.WriterConfig: boolean hasConfigFlag(int)>(512);

        return $z0;
    }

    public boolean willValidateAttributes()
    {
        com.ctc.wstx.api.WriterConfig r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        $z0 = specialinvoke r0.<com.ctc.wstx.api.WriterConfig: boolean hasConfigFlag(int)>(2048);

        return $z0;
    }

    public boolean willValidateNames()
    {
        com.ctc.wstx.api.WriterConfig r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        $z0 = specialinvoke r0.<com.ctc.wstx.api.WriterConfig: boolean hasConfigFlag(int)>(1024);

        return $z0;
    }

    public boolean willFixContent()
    {
        com.ctc.wstx.api.WriterConfig r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        $z0 = specialinvoke r0.<com.ctc.wstx.api.WriterConfig: boolean hasConfigFlag(int)>(4096);

        return $z0;
    }

    public java.lang.String getAutomaticNsPrefix()
    {
        java.lang.String $r1;
        com.ctc.wstx.api.WriterConfig r0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        $r1 = r0.<com.ctc.wstx.api.WriterConfig: java.lang.String mAutoNsPrefix>;

        return $r1;
    }

    public org.codehaus.stax2.io.EscapingWriterFactory getTextEscaperFactory()
    {
        org.codehaus.stax2.io.EscapingWriterFactory $r1;
        com.ctc.wstx.api.WriterConfig r0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        $r1 = r0.<com.ctc.wstx.api.WriterConfig: org.codehaus.stax2.io.EscapingWriterFactory mTextEscaperFactory>;

        return $r1;
    }

    public org.codehaus.stax2.io.EscapingWriterFactory getAttrValueEscaperFactory()
    {
        org.codehaus.stax2.io.EscapingWriterFactory $r1;
        com.ctc.wstx.api.WriterConfig r0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        $r1 = r0.<com.ctc.wstx.api.WriterConfig: org.codehaus.stax2.io.EscapingWriterFactory mAttrValueEscaperFactory>;

        return $r1;
    }

    public javax.xml.stream.XMLReporter getProblemReporter()
    {
        com.ctc.wstx.api.WriterConfig r0;
        javax.xml.stream.XMLReporter $r1;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        $r1 = r0.<com.ctc.wstx.api.WriterConfig: javax.xml.stream.XMLReporter mProblemReporter>;

        return $r1;
    }

    public void enableAutomaticNamespaces(boolean)
    {
        com.ctc.wstx.api.WriterConfig r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.ctc.wstx.api.WriterConfig: void setConfigFlag(int,boolean)>(2, z0);

        return;
    }

    public void enableAutomaticEmptyElements(boolean)
    {
        com.ctc.wstx.api.WriterConfig r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.ctc.wstx.api.WriterConfig: void setConfigFlag(int,boolean)>(4, z0);

        return;
    }

    public void doSupportNamespaces(boolean)
    {
        com.ctc.wstx.api.WriterConfig r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.ctc.wstx.api.WriterConfig: void setConfigFlag(int,boolean)>(1, z0);

        return;
    }

    public void doOutputCDataAsText(boolean)
    {
        com.ctc.wstx.api.WriterConfig r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.ctc.wstx.api.WriterConfig: void setConfigFlag(int,boolean)>(8, z0);

        return;
    }

    public void doCopyDefaultAttrs(boolean)
    {
        com.ctc.wstx.api.WriterConfig r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.ctc.wstx.api.WriterConfig: void setConfigFlag(int,boolean)>(16, z0);

        return;
    }

    public void doEscapeCr(boolean)
    {
        com.ctc.wstx.api.WriterConfig r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.ctc.wstx.api.WriterConfig: void setConfigFlag(int,boolean)>(32, z0);

        return;
    }

    public void doValidateStructure(boolean)
    {
        com.ctc.wstx.api.WriterConfig r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.ctc.wstx.api.WriterConfig: void setConfigFlag(int,boolean)>(256, z0);

        return;
    }

    public void doValidateContent(boolean)
    {
        com.ctc.wstx.api.WriterConfig r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.ctc.wstx.api.WriterConfig: void setConfigFlag(int,boolean)>(512, z0);

        return;
    }

    public void doValidateAttributes(boolean)
    {
        com.ctc.wstx.api.WriterConfig r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.ctc.wstx.api.WriterConfig: void setConfigFlag(int,boolean)>(2048, z0);

        return;
    }

    public void doValidateNames(boolean)
    {
        com.ctc.wstx.api.WriterConfig r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.ctc.wstx.api.WriterConfig: void setConfigFlag(int,boolean)>(1024, z0);

        return;
    }

    public void doFixContent(boolean)
    {
        com.ctc.wstx.api.WriterConfig r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.ctc.wstx.api.WriterConfig: void setConfigFlag(int,boolean)>(4096, z0);

        return;
    }

    public void setAutomaticNsPrefix(java.lang.String)
    {
        java.lang.String r1;
        com.ctc.wstx.api.WriterConfig r0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        r1 := @parameter0: java.lang.String;

        r0.<com.ctc.wstx.api.WriterConfig: java.lang.String mAutoNsPrefix> = r1;

        return;
    }

    public void setTextEscaperFactory(org.codehaus.stax2.io.EscapingWriterFactory)
    {
        org.codehaus.stax2.io.EscapingWriterFactory r1;
        com.ctc.wstx.api.WriterConfig r0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        r1 := @parameter0: org.codehaus.stax2.io.EscapingWriterFactory;

        r0.<com.ctc.wstx.api.WriterConfig: org.codehaus.stax2.io.EscapingWriterFactory mTextEscaperFactory> = r1;

        return;
    }

    public void setAttrValueEscaperFactory(org.codehaus.stax2.io.EscapingWriterFactory)
    {
        org.codehaus.stax2.io.EscapingWriterFactory r1;
        com.ctc.wstx.api.WriterConfig r0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        r1 := @parameter0: org.codehaus.stax2.io.EscapingWriterFactory;

        r0.<com.ctc.wstx.api.WriterConfig: org.codehaus.stax2.io.EscapingWriterFactory mAttrValueEscaperFactory> = r1;

        return;
    }

    public void setProblemReporter(javax.xml.stream.XMLReporter)
    {
        com.ctc.wstx.api.WriterConfig r0;
        javax.xml.stream.XMLReporter r1;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        r1 := @parameter0: javax.xml.stream.XMLReporter;

        r0.<com.ctc.wstx.api.WriterConfig: javax.xml.stream.XMLReporter mProblemReporter> = r1;

        return;
    }

    public void configureForXmlConformance()
    {
        com.ctc.wstx.api.WriterConfig r0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        virtualinvoke r0.<com.ctc.wstx.api.WriterConfig: void doValidateAttributes(boolean)>(1);

        virtualinvoke r0.<com.ctc.wstx.api.WriterConfig: void doValidateContent(boolean)>(1);

        virtualinvoke r0.<com.ctc.wstx.api.WriterConfig: void doValidateStructure(boolean)>(1);

        virtualinvoke r0.<com.ctc.wstx.api.WriterConfig: void doValidateNames(boolean)>(1);

        return;
    }

    public void configureForRobustness()
    {
        com.ctc.wstx.api.WriterConfig r0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        virtualinvoke r0.<com.ctc.wstx.api.WriterConfig: void doValidateAttributes(boolean)>(1);

        virtualinvoke r0.<com.ctc.wstx.api.WriterConfig: void doValidateStructure(boolean)>(1);

        virtualinvoke r0.<com.ctc.wstx.api.WriterConfig: void doValidateNames(boolean)>(1);

        virtualinvoke r0.<com.ctc.wstx.api.WriterConfig: void doValidateContent(boolean)>(1);

        virtualinvoke r0.<com.ctc.wstx.api.WriterConfig: void doFixContent(boolean)>(1);

        return;
    }

    public void configureForSpeed()
    {
        com.ctc.wstx.api.WriterConfig r0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        virtualinvoke r0.<com.ctc.wstx.api.WriterConfig: void doValidateAttributes(boolean)>(0);

        virtualinvoke r0.<com.ctc.wstx.api.WriterConfig: void doValidateContent(boolean)>(0);

        virtualinvoke r0.<com.ctc.wstx.api.WriterConfig: void doValidateNames(boolean)>(0);

        return;
    }

    public char[] allocMediumCBuffer(int)
    {
        com.ctc.wstx.api.WriterConfig r0;
        com.ctc.wstx.io.BufferRecycler $r1, $r3;
        int i0;
        char[] $r2, $r4;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        i0 := @parameter0: int;

        $r1 = r0.<com.ctc.wstx.api.WriterConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler>;

        if $r1 == null goto label1;

        $r3 = r0.<com.ctc.wstx.api.WriterConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler>;

        $r4 = virtualinvoke $r3.<com.ctc.wstx.io.BufferRecycler: char[] getMediumCBuffer(int)>(i0);

        if $r4 == null goto label1;

        return $r4;

     label1:
        $r2 = newarray (char)[i0];

        return $r2;
    }

    public void freeMediumCBuffer(char[])
    {
        com.ctc.wstx.api.WriterConfig r0;
        com.ctc.wstx.io.BufferRecycler $r1, $r3, $r4;
        char[] r2;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        r2 := @parameter0: char[];

        $r1 = r0.<com.ctc.wstx.api.WriterConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler>;

        if $r1 != null goto label1;

        $r4 = specialinvoke r0.<com.ctc.wstx.api.WriterConfig: com.ctc.wstx.io.BufferRecycler createRecycler()>();

        r0.<com.ctc.wstx.api.WriterConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler> = $r4;

     label1:
        $r3 = r0.<com.ctc.wstx.api.WriterConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler>;

        virtualinvoke $r3.<com.ctc.wstx.io.BufferRecycler: void returnMediumCBuffer(char[])>(r2);

        return;
    }

    public char[] allocFullCBuffer(int)
    {
        com.ctc.wstx.api.WriterConfig r0;
        com.ctc.wstx.io.BufferRecycler $r1, $r3;
        int i0;
        char[] $r2, $r4;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        i0 := @parameter0: int;

        $r1 = r0.<com.ctc.wstx.api.WriterConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler>;

        if $r1 == null goto label1;

        $r3 = r0.<com.ctc.wstx.api.WriterConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler>;

        $r4 = virtualinvoke $r3.<com.ctc.wstx.io.BufferRecycler: char[] getFullCBuffer(int)>(i0);

        if $r4 == null goto label1;

        return $r4;

     label1:
        $r2 = newarray (char)[i0];

        return $r2;
    }

    public void freeFullCBuffer(char[])
    {
        com.ctc.wstx.api.WriterConfig r0;
        com.ctc.wstx.io.BufferRecycler $r1, $r3, $r4;
        char[] r2;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        r2 := @parameter0: char[];

        $r1 = r0.<com.ctc.wstx.api.WriterConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler>;

        if $r1 != null goto label1;

        $r4 = specialinvoke r0.<com.ctc.wstx.api.WriterConfig: com.ctc.wstx.io.BufferRecycler createRecycler()>();

        r0.<com.ctc.wstx.api.WriterConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler> = $r4;

     label1:
        $r3 = r0.<com.ctc.wstx.api.WriterConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler>;

        virtualinvoke $r3.<com.ctc.wstx.io.BufferRecycler: void returnFullCBuffer(char[])>(r2);

        return;
    }

    public byte[] allocFullBBuffer(int)
    {
        byte[] $r2, $r4;
        com.ctc.wstx.api.WriterConfig r0;
        com.ctc.wstx.io.BufferRecycler $r1, $r3;
        int i0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        i0 := @parameter0: int;

        $r1 = r0.<com.ctc.wstx.api.WriterConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler>;

        if $r1 == null goto label1;

        $r3 = r0.<com.ctc.wstx.api.WriterConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler>;

        $r4 = virtualinvoke $r3.<com.ctc.wstx.io.BufferRecycler: byte[] getFullBBuffer(int)>(i0);

        if $r4 == null goto label1;

        return $r4;

     label1:
        $r2 = newarray (byte)[i0];

        return $r2;
    }

    public void freeFullBBuffer(byte[])
    {
        byte[] r2;
        com.ctc.wstx.api.WriterConfig r0;
        com.ctc.wstx.io.BufferRecycler $r1, $r3, $r4;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        r2 := @parameter0: byte[];

        $r1 = r0.<com.ctc.wstx.api.WriterConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler>;

        if $r1 != null goto label1;

        $r4 = specialinvoke r0.<com.ctc.wstx.api.WriterConfig: com.ctc.wstx.io.BufferRecycler createRecycler()>();

        r0.<com.ctc.wstx.api.WriterConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler> = $r4;

     label1:
        $r3 = r0.<com.ctc.wstx.api.WriterConfig: com.ctc.wstx.io.BufferRecycler mCurrRecycler>;

        virtualinvoke $r3.<com.ctc.wstx.io.BufferRecycler: void returnFullBBuffer(byte[])>(r2);

        return;
    }

    private com.ctc.wstx.io.BufferRecycler createRecycler()
    {
        java.lang.ThreadLocal $r2;
        com.ctc.wstx.io.BufferRecycler $r0;
        com.ctc.wstx.api.WriterConfig r3;
        java.lang.ref.SoftReference $r1;

        r3 := @this: com.ctc.wstx.api.WriterConfig;

        $r0 = new com.ctc.wstx.io.BufferRecycler;

        specialinvoke $r0.<com.ctc.wstx.io.BufferRecycler: void <init>()>();

        $r2 = <com.ctc.wstx.api.WriterConfig: java.lang.ThreadLocal mRecyclerRef>;

        $r1 = new java.lang.ref.SoftReference;

        specialinvoke $r1.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>($r0);

        virtualinvoke $r2.<java.lang.ThreadLocal: void set(java.lang.Object)>($r1);

        return $r0;
    }

    private void setConfigFlag(int, boolean)
    {
        com.ctc.wstx.api.WriterConfig r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7;
        boolean z0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $i4 = r0.<com.ctc.wstx.api.WriterConfig: int mConfigFlags>;

        $i5 = $i4 | i0;

        r0.<com.ctc.wstx.api.WriterConfig: int mConfigFlags> = $i5;

        goto label2;

     label1:
        $i2 = r0.<com.ctc.wstx.api.WriterConfig: int mConfigFlags>;

        $i7 = (int) -1;

        $i1 = i0 ^ $i7;

        $i3 = $i2 & $i1;

        r0.<com.ctc.wstx.api.WriterConfig: int mConfigFlags> = $i3;

     label2:
        return;
    }

    private final boolean hasConfigFlag(int)
    {
        com.ctc.wstx.api.WriterConfig r0;
        int i0, $i1, $i2;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.WriterConfig;

        i0 := @parameter0: int;

        $i1 = r0.<com.ctc.wstx.api.WriterConfig: int mConfigFlags>;

        $i2 = $i1 & i0;

        if $i2 != i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static void <clinit>()
    {
        java.lang.Integer $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r33;
        java.lang.ThreadLocal $r35;
        java.util.HashMap $r0, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34;

        <com.ctc.wstx.api.WriterConfig: int DEFAULT_FLAGS_FULL> = 4901;

        <com.ctc.wstx.api.WriterConfig: int DEFAULT_FLAGS_J2ME> = 4901;

        <com.ctc.wstx.api.WriterConfig: boolean DEFAULT_FIX_CONTENT> = 1;

        <com.ctc.wstx.api.WriterConfig: boolean DEFAULT_VALIDATE_NAMES> = 0;

        <com.ctc.wstx.api.WriterConfig: boolean DEFAULT_VALIDATE_ATTR> = 0;

        <com.ctc.wstx.api.WriterConfig: boolean DEFAULT_VALIDATE_CONTENT> = 1;

        <com.ctc.wstx.api.WriterConfig: boolean DEFAULT_VALIDATE_STRUCTURE> = 1;

        <com.ctc.wstx.api.WriterConfig: boolean DEFAULT_ESCAPE_CR> = 1;

        <com.ctc.wstx.api.WriterConfig: boolean DEFAULT_COPY_DEFAULT_ATTRS> = 0;

        <com.ctc.wstx.api.WriterConfig: boolean DEFAULT_OUTPUT_CDATA_AS_TEXT> = 0;

        <com.ctc.wstx.api.WriterConfig: boolean DEFAULT_AUTOMATIC_EMPTY_ELEMS> = 1;

        <com.ctc.wstx.api.WriterConfig: boolean DEFAULT_ENABLE_NS> = 1;

        <com.ctc.wstx.api.WriterConfig: int PROP_UNDERLYING_WRITER> = 31;

        <com.ctc.wstx.api.WriterConfig: int PROP_UNDERLYING_STREAM> = 30;

        <com.ctc.wstx.api.WriterConfig: int PROP_FIX_CONTENT> = 19;

        <com.ctc.wstx.api.WriterConfig: int PROP_VALIDATE_NAMES> = 18;

        <com.ctc.wstx.api.WriterConfig: int PROP_VALIDATE_ATTR> = 17;

        <com.ctc.wstx.api.WriterConfig: int PROP_VALIDATE_CONTENT> = 16;

        <com.ctc.wstx.api.WriterConfig: int PROP_VALIDATE_STRUCTURE> = 15;

        <com.ctc.wstx.api.WriterConfig: int PROP_ESCAPE_CR> = 13;

        <com.ctc.wstx.api.WriterConfig: int PROP_COPY_DEFAULT_ATTRS> = 12;

        <com.ctc.wstx.api.WriterConfig: int PROP_OUTPUT_CDATA_AS_TEXT> = 11;

        <com.ctc.wstx.api.WriterConfig: int PROP_PROBLEM_REPORTER> = 7;

        <com.ctc.wstx.api.WriterConfig: int PROP_ATTR_VALUE_ESCAPER> = 6;

        <com.ctc.wstx.api.WriterConfig: int PROP_TEXT_ESCAPER> = 5;

        <com.ctc.wstx.api.WriterConfig: int PROP_AUTOMATIC_NS_PREFIX> = 4;

        <com.ctc.wstx.api.WriterConfig: int PROP_ENABLE_NS> = 3;

        <com.ctc.wstx.api.WriterConfig: int PROP_AUTOMATIC_EMPTY_ELEMS> = 2;

        <com.ctc.wstx.api.WriterConfig: int PROP_AUTOMATIC_NS> = 1;

        <com.ctc.wstx.api.WriterConfig: java.lang.String DEFAULT_AUTOMATIC_NS_PREFIX> = "wstxns";

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>(int)>(8);

        <com.ctc.wstx.api.WriterConfig: java.util.HashMap sProperties> = $r0;

        $r2 = <com.ctc.wstx.api.WriterConfig: java.util.HashMap sProperties>;

        $r1 = new java.lang.Integer;

        specialinvoke $r1.<java.lang.Integer: void <init>(int)>(1);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("javax.xml.stream.isRepairingNamespaces", $r1);

        $r4 = <com.ctc.wstx.api.WriterConfig: java.util.HashMap sProperties>;

        $r3 = new java.lang.Integer;

        specialinvoke $r3.<java.lang.Integer: void <init>(int)>(3);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("javax.xml.stream.isNamespaceAware", $r3);

        $r6 = <com.ctc.wstx.api.WriterConfig: java.util.HashMap sProperties>;

        $r5 = new java.lang.Integer;

        specialinvoke $r5.<java.lang.Integer: void <init>(int)>(2);

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.codehaus.stax2.automaticEmptyElements", $r5);

        $r8 = <com.ctc.wstx.api.WriterConfig: java.util.HashMap sProperties>;

        $r7 = new java.lang.Integer;

        specialinvoke $r7.<java.lang.Integer: void <init>(int)>(4);

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.codehaus.stax2.automaticNsPrefix", $r7);

        $r10 = <com.ctc.wstx.api.WriterConfig: java.util.HashMap sProperties>;

        $r9 = new java.lang.Integer;

        specialinvoke $r9.<java.lang.Integer: void <init>(int)>(5);

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.codehaus.stax2.textEscaper", $r9);

        $r12 = <com.ctc.wstx.api.WriterConfig: java.util.HashMap sProperties>;

        $r11 = new java.lang.Integer;

        specialinvoke $r11.<java.lang.Integer: void <init>(int)>(6);

        virtualinvoke $r12.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.codehaus.stax2.attrValueEscaper", $r11);

        $r14 = <com.ctc.wstx.api.WriterConfig: java.util.HashMap sProperties>;

        $r13 = new java.lang.Integer;

        specialinvoke $r13.<java.lang.Integer: void <init>(int)>(7);

        virtualinvoke $r14.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("javax.xml.stream.reporter", $r13);

        $r16 = <com.ctc.wstx.api.WriterConfig: java.util.HashMap sProperties>;

        $r15 = new java.lang.Integer;

        specialinvoke $r15.<java.lang.Integer: void <init>(int)>(11);

        virtualinvoke $r16.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("com.ctc.wstx.outputCDataAsText", $r15);

        $r18 = <com.ctc.wstx.api.WriterConfig: java.util.HashMap sProperties>;

        $r17 = new java.lang.Integer;

        specialinvoke $r17.<java.lang.Integer: void <init>(int)>(12);

        virtualinvoke $r18.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("com.ctc.wstx.copyDefaultAttrs", $r17);

        $r20 = <com.ctc.wstx.api.WriterConfig: java.util.HashMap sProperties>;

        $r19 = new java.lang.Integer;

        specialinvoke $r19.<java.lang.Integer: void <init>(int)>(13);

        virtualinvoke $r20.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("com.ctc.wstx.outputEscapeCr", $r19);

        $r22 = <com.ctc.wstx.api.WriterConfig: java.util.HashMap sProperties>;

        $r21 = new java.lang.Integer;

        specialinvoke $r21.<java.lang.Integer: void <init>(int)>(15);

        virtualinvoke $r22.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("com.ctc.wstx.outputValidateStructure", $r21);

        $r24 = <com.ctc.wstx.api.WriterConfig: java.util.HashMap sProperties>;

        $r23 = new java.lang.Integer;

        specialinvoke $r23.<java.lang.Integer: void <init>(int)>(16);

        virtualinvoke $r24.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("com.ctc.wstx.outputValidateContent", $r23);

        $r26 = <com.ctc.wstx.api.WriterConfig: java.util.HashMap sProperties>;

        $r25 = new java.lang.Integer;

        specialinvoke $r25.<java.lang.Integer: void <init>(int)>(17);

        virtualinvoke $r26.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("com.ctc.wstx.outputValidateAttr", $r25);

        $r28 = <com.ctc.wstx.api.WriterConfig: java.util.HashMap sProperties>;

        $r27 = new java.lang.Integer;

        specialinvoke $r27.<java.lang.Integer: void <init>(int)>(18);

        virtualinvoke $r28.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("com.ctc.wstx.outputValidateNames", $r27);

        $r30 = <com.ctc.wstx.api.WriterConfig: java.util.HashMap sProperties>;

        $r29 = new java.lang.Integer;

        specialinvoke $r29.<java.lang.Integer: void <init>(int)>(19);

        virtualinvoke $r30.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("com.ctc.wstx.outputFixContent", $r29);

        $r32 = <com.ctc.wstx.api.WriterConfig: java.util.HashMap sProperties>;

        $r31 = new java.lang.Integer;

        specialinvoke $r31.<java.lang.Integer: void <init>(int)>(30);

        virtualinvoke $r32.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("com.ctc.wstx.outputUnderlyingStream", $r31);

        $r34 = <com.ctc.wstx.api.WriterConfig: java.util.HashMap sProperties>;

        $r33 = new java.lang.Integer;

        specialinvoke $r33.<java.lang.Integer: void <init>(int)>(30);

        virtualinvoke $r34.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("com.ctc.wstx.outputUnderlyingStream", $r33);

        $r35 = new java.lang.ThreadLocal;

        specialinvoke $r35.<java.lang.ThreadLocal: void <init>()>();

        <com.ctc.wstx.api.WriterConfig: java.lang.ThreadLocal mRecyclerRef> = $r35;

        <com.ctc.wstx.api.WriterConfig: int Counter> = 0;

        return;
    }
}
