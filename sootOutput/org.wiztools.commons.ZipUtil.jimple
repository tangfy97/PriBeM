public final class org.wiztools.commons.ZipUtil extends java.lang.Object
{

    private void <init>()
    {
        org.wiztools.commons.ZipUtil r0;

        r0 := @this: org.wiztools.commons.ZipUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void unzip(java.io.File, java.io.File) throws java.io.IOException
    {
        java.lang.Throwable $r19, $r20;
        byte[] r10;
        java.util.zip.ZipInputStream r21, $r26;
        java.io.BufferedInputStream $r25;
        java.io.BufferedOutputStream r22, $r32;
        int $i0, $i2;
        java.lang.String $r6, $r15, $r17;
        java.util.zip.ZipEntry $r5;
        boolean $z0, $z1, $z2;
        java.io.FileOutputStream $r31;
        java.io.IOException $r29;
        java.io.FileInputStream $r24;
        java.lang.IllegalArgumentException $r23;
        java.io.File r0, r4, $r27, $r30;
        java.lang.StringBuilder $r14, $r16, $r28;

        r4 := @parameter0: java.io.File;

        r0 := @parameter1: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();

        if $z0 != 0 goto label01;

        $r23 = new java.lang.IllegalArgumentException;

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Output directory does not exist; or, is not a directory.");

        throw $r23;

     label01:
        r21 = null;

     label02:
        $r26 = new java.util.zip.ZipInputStream;

        $r25 = new java.io.BufferedInputStream;

        $r24 = new java.io.FileInputStream;

        specialinvoke $r24.<java.io.FileInputStream: void <init>(java.io.File)>(r4);

        specialinvoke $r25.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r24);

        specialinvoke $r26.<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>($r25);

        r21 = $r26;

     label03:
        $r5 = virtualinvoke $r26.<java.util.zip.ZipInputStream: java.util.zip.ZipEntry getNextEntry()>();

        if $r5 == null goto label13;

        $r6 = virtualinvoke $r5.<java.util.zip.ZipEntry: java.lang.String getName()>();

        $z1 = virtualinvoke $r5.<java.util.zip.ZipEntry: boolean isDirectory()>();

        if $z1 == 0 goto label05;

        $r27 = new java.io.File;

        specialinvoke $r27.<java.io.File: void <init>(java.io.File,java.lang.String)>(r0, $r6);

        $z2 = virtualinvoke $r27.<java.io.File: boolean mkdirs()>();

        if $z2 != 0 goto label04;

        $r29 = new java.io.IOException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create directory: ");

        $r15 = virtualinvoke $r27.<java.io.File: java.lang.String getAbsolutePath()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<java.io.IOException: void <init>(java.lang.String)>($r17);

        throw $r29;

     label04:
        goto label12;

     label05:
        $r30 = new java.io.File;

        specialinvoke $r30.<java.io.File: void <init>(java.io.File,java.lang.String)>(r0, $r6);

        r22 = null;

     label06:
        $r32 = new java.io.BufferedOutputStream;

        $r31 = new java.io.FileOutputStream;

        specialinvoke $r31.<java.io.FileOutputStream: void <init>(java.io.File)>($r30);

        specialinvoke $r32.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r31);

        r22 = $r32;

        r10 = newarray (byte)[8192];

     label07:
        $i0 = virtualinvoke $r26.<java.util.zip.ZipInputStream: int read(byte[])>(r10);

        $i2 = (int) -1;

        if $i0 == $i2 goto label08;

        virtualinvoke $r32.<java.io.OutputStream: void write(byte[],int,int)>(r10, 0, $i0);

        goto label07;

     label08:
        if $r32 == null goto label12;

        virtualinvoke $r32.<java.io.OutputStream: void close()>();

        goto label12;

     label09:
        $r20 := @caughtexception;

     label10:
        if r22 == null goto label11;

        virtualinvoke r22.<java.io.OutputStream: void close()>();

     label11:
        throw $r20;

     label12:
        virtualinvoke $r26.<java.util.zip.ZipInputStream: void closeEntry()>();

        goto label03;

     label13:
        if $r26 == null goto label17;

        virtualinvoke $r26.<java.util.zip.ZipInputStream: void close()>();

        goto label17;

     label14:
        $r19 := @caughtexception;

     label15:
        if r21 == null goto label16;

        virtualinvoke r21.<java.util.zip.ZipInputStream: void close()>();

     label16:
        throw $r19;

     label17:
        return;

        catch java.lang.Throwable from label06 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch java.lang.Throwable from label02 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }
}
