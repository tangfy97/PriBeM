final class kodkod.util.ints.RangeSequence$Range extends kodkod.util.ints.RangeSequence$Entry
{
    int min;

    void <init>(int, int, java.lang.Object)
    {
        kodkod.util.ints.RangeSequence$Range r0;
        int i0, i1;
        java.lang.Object r1;

        r0 := @this: kodkod.util.ints.RangeSequence$Range;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        specialinvoke r0.<kodkod.util.ints.RangeSequence$Entry: void <init>(int,java.lang.Object)>(i0, r1);

        r0.<kodkod.util.ints.RangeSequence$Range: int min> = i1;

        return;
    }

    int min()
    {
        int $i0;
        kodkod.util.ints.RangeSequence$Range r0;

        r0 := @this: kodkod.util.ints.RangeSequence$Range;

        $i0 = r0.<kodkod.util.ints.RangeSequence$Range: int min>;

        return $i0;
    }

    boolean isPoint()
    {
        kodkod.util.ints.RangeSequence$Range r0;

        r0 := @this: kodkod.util.ints.RangeSequence$Range;

        return 0;
    }

    protected kodkod.util.ints.RangeSequence$Range clone() throws java.lang.CloneNotSupportedException
    {
        kodkod.util.ints.RangeSequence$Range r0, $r2, $r3;
        kodkod.util.ints.RangeSequence$Entry $r1;

        r0 := @this: kodkod.util.ints.RangeSequence$Range;

        $r1 = specialinvoke r0.<kodkod.util.ints.RangeSequence$Entry: kodkod.util.ints.RangeSequence$Entry clone()>();

        $r2 = (kodkod.util.ints.RangeSequence$Range) $r1;

        $r3 = (kodkod.util.ints.RangeSequence$Range) $r2;

        return $r3;
    }

    protected volatile kodkod.util.ints.RangeSequence$Entry clone() throws java.lang.CloneNotSupportedException
    {
        kodkod.util.ints.RangeSequence$Range r0, $r1;
        kodkod.util.ints.RangeSequence$Entry $r2;

        r0 := @this: kodkod.util.ints.RangeSequence$Range;

        $r1 = virtualinvoke r0.<kodkod.util.ints.RangeSequence$Range: kodkod.util.ints.RangeSequence$Range clone()>();

        $r2 = (kodkod.util.ints.RangeSequence$Entry) $r1;

        return $r2;
    }
}
