public abstract class com.glines.socketio.server.SocketIOServlet extends javax.servlet.http.HttpServlet
{
    private static final java.util.logging.Logger LOGGER;
    private static final long serialVersionUID;
    private final com.glines.socketio.server.SocketIOSessionManager sessionManager;
    private final com.glines.socketio.server.TransportHandlerProvider transportHandlerProvider;
    private com.glines.socketio.server.SocketIOConfig config;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        <com.glines.socketio.server.SocketIOServlet: long serialVersionUID> = 2L;

        $r0 = class "Lcom/glines/socketio/server/SocketIOServlet;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.glines.socketio.server.SocketIOServlet: java.util.logging.Logger LOGGER> = $r2;

        return;
    }

    public void <init>()
    {
        com.glines.socketio.server.AnnotationTransportHandlerProvider $r2;
        com.glines.socketio.server.SocketIOServlet r0;
        com.glines.socketio.server.SocketIOSessionManager $r1;

        r0 := @this: com.glines.socketio.server.SocketIOServlet;

        specialinvoke r0.<javax.servlet.http.HttpServlet: void <init>()>();

        $r1 = new com.glines.socketio.server.SocketIOSessionManager;

        specialinvoke $r1.<com.glines.socketio.server.SocketIOSessionManager: void <init>()>();

        r0.<com.glines.socketio.server.SocketIOServlet: com.glines.socketio.server.SocketIOSessionManager sessionManager> = $r1;

        $r2 = new com.glines.socketio.server.AnnotationTransportHandlerProvider;

        specialinvoke $r2.<com.glines.socketio.server.AnnotationTransportHandlerProvider: void <init>()>();

        r0.<com.glines.socketio.server.SocketIOServlet: com.glines.socketio.server.TransportHandlerProvider transportHandlerProvider> = $r2;

        return;
    }

    public void init() throws javax.servlet.ServletException
    {
        com.glines.socketio.server.ServletBasedSocketIOConfig $r1;
        java.util.Map $r39;
        com.glines.socketio.server.TransportHandlerProvider $r3, $r10, $r19, $r38;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.glines.socketio.server.Transport r54, r55;
        javax.servlet.ServletConfig $r2, $r25;
        java.util.Collection $r22, $r32;
        java.util.logging.Logger $r5, $r13, $r27, $r29, $r36, $r46;
        java.lang.StringBuilder $r12, $r16, $r17, $r28, $r33, $r35, $r40, $r45, $r49, $r50, $r52;
        java.lang.Iterable $r7;
        java.util.logging.Level $r4, $r14, $r26, $r30, $r37, $r47;
        com.glines.socketio.server.TransportInitializationException $r42;
        com.glines.socketio.server.ClasspathTransportDiscovery $r6;
        com.glines.socketio.server.TransportType $r11, $r15, $r44, $r48;
        java.lang.String $r18, $r34, $r41, $r51, $r53;
        com.glines.socketio.server.SocketIOServlet r0;
        java.util.Iterator $r8, $r23;
        com.glines.socketio.server.SocketIOConfig $r20, $r21, $r31, $r43;
        java.lang.Object $r9, $r24;

        r0 := @this: com.glines.socketio.server.SocketIOServlet;

        $r1 = new com.glines.socketio.server.ServletBasedSocketIOConfig;

        $r2 = virtualinvoke r0.<com.glines.socketio.server.SocketIOServlet: javax.servlet.ServletConfig getServletConfig()>();

        specialinvoke $r1.<com.glines.socketio.server.ServletBasedSocketIOConfig: void <init>(javax.servlet.ServletConfig,java.lang.String)>($r2, "socketio");

        r0.<com.glines.socketio.server.SocketIOServlet: com.glines.socketio.server.SocketIOConfig config> = $r1;

        $r3 = r0.<com.glines.socketio.server.SocketIOServlet: com.glines.socketio.server.TransportHandlerProvider transportHandlerProvider>;

        interfaceinvoke $r3.<com.glines.socketio.server.TransportHandlerProvider: void init()>();

        $r5 = <com.glines.socketio.server.SocketIOServlet: java.util.logging.Logger LOGGER>;

        $r4 = <java.util.logging.Level: java.util.logging.Level INFO>;

        $z0 = virtualinvoke $r5.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r4);

        if $z0 == 0 goto label01;

        $r36 = <com.glines.socketio.server.SocketIOServlet: java.util.logging.Logger LOGGER>;

        $r37 = <java.util.logging.Level: java.util.logging.Level INFO>;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>(java.lang.String)>("Transport handlers loaded: ");

        $r38 = r0.<com.glines.socketio.server.SocketIOServlet: com.glines.socketio.server.TransportHandlerProvider transportHandlerProvider>;

        $r39 = interfaceinvoke $r38.<com.glines.socketio.server.TransportHandlerProvider: java.util.Map listAll()>();

        $r40 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r36.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r37, $r41);

     label01:
        $r6 = new com.glines.socketio.server.ClasspathTransportDiscovery;

        specialinvoke $r6.<com.glines.socketio.server.ClasspathTransportDiscovery: void <init>()>();

        $r7 = interfaceinvoke $r6.<com.glines.socketio.server.TransportDiscovery: java.lang.Iterable discover()>();

        $r8 = interfaceinvoke $r7.<java.lang.Iterable: java.util.Iterator iterator()>();

        goto label04;

     label02:
        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r54 = (com.glines.socketio.server.Transport) $r9;

        $r10 = r0.<com.glines.socketio.server.SocketIOServlet: com.glines.socketio.server.TransportHandlerProvider transportHandlerProvider>;

        $r11 = interfaceinvoke r54.<com.glines.socketio.server.Transport: com.glines.socketio.server.TransportType getType()>();

        $z1 = interfaceinvoke $r10.<com.glines.socketio.server.TransportHandlerProvider: boolean isSupported(com.glines.socketio.server.TransportType)>($r11);

        if $z1 == 0 goto label03;

        $r19 = r0.<com.glines.socketio.server.SocketIOServlet: com.glines.socketio.server.TransportHandlerProvider transportHandlerProvider>;

        interfaceinvoke r54.<com.glines.socketio.server.Transport: void setTransportHandlerProvider(com.glines.socketio.server.TransportHandlerProvider)>($r19);

        $r20 = r0.<com.glines.socketio.server.SocketIOServlet: com.glines.socketio.server.SocketIOConfig config>;

        interfaceinvoke $r20.<com.glines.socketio.server.SocketIOConfig: void addTransport(com.glines.socketio.server.Transport)>(r54);

        goto label04;

     label03:
        $r13 = <com.glines.socketio.server.SocketIOServlet: java.util.logging.Logger LOGGER>;

        $r14 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Transport ");

        $r15 = interfaceinvoke r54.<com.glines.socketio.server.Transport: com.glines.socketio.server.TransportType getType()>();

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ignored since not supported by any TransportHandler");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r14, $r18);

     label04:
        $z3 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label02;

        $r21 = r0.<com.glines.socketio.server.SocketIOServlet: com.glines.socketio.server.SocketIOConfig config>;

        $r22 = interfaceinvoke $r21.<com.glines.socketio.server.SocketIOConfig: java.util.Collection getTransports()>();

        $r23 = interfaceinvoke $r22.<java.util.Collection: java.util.Iterator iterator()>();

        goto label09;

     label05:
        $r24 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        r55 = (com.glines.socketio.server.Transport) $r24;

     label06:
        $r25 = virtualinvoke r0.<com.glines.socketio.server.SocketIOServlet: javax.servlet.ServletConfig getServletConfig()>();

        interfaceinvoke r55.<com.glines.socketio.server.Transport: void init(javax.servlet.ServletConfig)>($r25);

     label07:
        goto label09;

     label08:
        $r42 := @caughtexception;

        $r43 = r0.<com.glines.socketio.server.SocketIOServlet: com.glines.socketio.server.SocketIOConfig config>;

        $r44 = interfaceinvoke r55.<com.glines.socketio.server.Transport: com.glines.socketio.server.TransportType getType()>();

        interfaceinvoke $r43.<com.glines.socketio.server.SocketIOConfig: void removeTransport(com.glines.socketio.server.TransportType)>($r44);

        $r46 = <com.glines.socketio.server.SocketIOServlet: java.util.logging.Logger LOGGER>;

        $r47 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>(java.lang.String)>("Transport ");

        $r48 = interfaceinvoke r55.<com.glines.socketio.server.Transport: com.glines.socketio.server.TransportType getType()>();

        $r49 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" disabled. Initialization failed: ");

        $r51 = virtualinvoke $r42.<com.glines.socketio.server.TransportInitializationException: java.lang.String getMessage()>();

        $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r46.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r47, $r53);

     label09:
        $z4 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        if $z4 != 0 goto label05;

        $r27 = <com.glines.socketio.server.SocketIOServlet: java.util.logging.Logger LOGGER>;

        $r26 = <java.util.logging.Level: java.util.logging.Level INFO>;

        $z2 = virtualinvoke $r27.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r26);

        if $z2 == 0 goto label10;

        $r29 = <com.glines.socketio.server.SocketIOServlet: java.util.logging.Logger LOGGER>;

        $r30 = <java.util.logging.Level: java.util.logging.Level INFO>;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>(java.lang.String)>("Transports loaded: ");

        $r31 = r0.<com.glines.socketio.server.SocketIOServlet: com.glines.socketio.server.SocketIOConfig config>;

        $r32 = interfaceinvoke $r31.<com.glines.socketio.server.SocketIOConfig: java.util.Collection getTransports()>();

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r29.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r30, $r34);

     label10:
        return;

        catch com.glines.socketio.server.TransportInitializationException from label06 to label07 with label08;
    }

    public void destroy()
    {
        com.glines.socketio.server.Transport r5;
        java.util.Iterator $r3;
        com.glines.socketio.server.SocketIOConfig $r1;
        java.util.Collection $r2;
        java.lang.Object $r4;
        com.glines.socketio.server.SocketIOServlet r0;
        boolean $z0;

        r0 := @this: com.glines.socketio.server.SocketIOServlet;

        $r1 = r0.<com.glines.socketio.server.SocketIOServlet: com.glines.socketio.server.SocketIOConfig config>;

        $r2 = interfaceinvoke $r1.<com.glines.socketio.server.SocketIOConfig: java.util.Collection getTransports()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.glines.socketio.server.Transport) $r4;

        interfaceinvoke r5.<com.glines.socketio.server.Transport: void destroy()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        specialinvoke r0.<javax.servlet.http.HttpServlet: void destroy()>();

        return;
    }

    protected void doGet(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException, java.io.IOException
    {
        javax.servlet.http.HttpServletResponse r2;
        javax.servlet.http.HttpServletRequest r1;
        com.glines.socketio.server.SocketIOServlet r0;

        r0 := @this: com.glines.socketio.server.SocketIOServlet;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: javax.servlet.http.HttpServletResponse;

        specialinvoke r0.<com.glines.socketio.server.SocketIOServlet: void serve(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2);

        return;
    }

    protected void doPost(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException, java.io.IOException
    {
        javax.servlet.http.HttpServletResponse r2;
        javax.servlet.http.HttpServletRequest r1;
        com.glines.socketio.server.SocketIOServlet r0;

        r0 := @this: com.glines.socketio.server.SocketIOServlet;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: javax.servlet.http.HttpServletResponse;

        specialinvoke r0.<com.glines.socketio.server.SocketIOServlet: void serve(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2);

        return;
    }

    protected abstract com.glines.socketio.server.SocketIOInbound doSocketIOConnect(javax.servlet.http.HttpServletRequest);

    private void serve(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException, java.io.IOException
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        com.glines.socketio.server.Transport $r9;
        java.util.logging.Logger $r11, $r15;
        com.glines.socketio.server.SocketIOSessionManager $r13;
        com.glines.socketio.server.SocketIOServlet$1 $r12;
        java.lang.StringBuilder $r14, $r18, $r19, $r20, $r21, $r23, $r29, $r31;
        java.lang.ClassLoader $r36, $r42;
        java.lang.String[] $r4;
        java.util.logging.Level $r10, $r16;
        javax.servlet.http.HttpServletRequest r0;
        javax.servlet.ServletOutputStream $r38, $r44;
        int $i0, $i1;
        com.glines.socketio.server.TransportType $r8, $r22;
        java.lang.String $r1, $r3, $r6, $r17, $r24, $r25, $r26, $r27, $r28, $r30, $r32, $r33, $r34, $r39, $r40, r45;
        com.glines.socketio.server.SocketIOServlet r5;
        com.glines.socketio.server.SocketIOConfig $r7;
        javax.servlet.http.HttpServletResponse r2;
        java.lang.Class $r35, $r41;
        java.io.InputStream $r37, $r43;

        r5 := @this: com.glines.socketio.server.SocketIOServlet;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: javax.servlet.http.HttpServletResponse;

        $r1 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getPathInfo()>();

        r45 = $r1;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        $r3 = "/";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

     label1:
        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void sendError(int,java.lang.String)>(400, "Missing SocketIO transport");

        return;

     label2:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z1 == 0 goto label3;

        r45 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(1);

     label3:
        $r4 = virtualinvoke r45.<java.lang.String: java.lang.String[] split(java.lang.String)>("/");

        $r7 = r5.<com.glines.socketio.server.SocketIOServlet: com.glines.socketio.server.SocketIOConfig config>;

        $r6 = $r4[0];

        $r8 = staticinvoke <com.glines.socketio.server.TransportType: com.glines.socketio.server.TransportType 'from'(java.lang.String)>($r6);

        $r9 = interfaceinvoke $r7.<com.glines.socketio.server.SocketIOConfig: com.glines.socketio.server.Transport getTransport(com.glines.socketio.server.TransportType)>($r8);

        if $r9 != null goto label6;

        $r25 = "GET";

        $r26 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>();

        $z3 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>($r26);

        if $z3 == 0 goto label4;

        $r40 = "socket.io.js";

        $r39 = $r4[0];

        $z6 = virtualinvoke $r40.<java.lang.String: boolean equals(java.lang.Object)>($r39);

        if $z6 == 0 goto label4;

        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>("text/javascript");

        $r41 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        $r42 = virtualinvoke $r41.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r43 = virtualinvoke $r42.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("com/glines/socketio/socket.io.js");

        $r44 = interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: javax.servlet.ServletOutputStream getOutputStream()>();

        staticinvoke <com.glines.socketio.util.IO: void copy(java.io.InputStream,java.io.OutputStream)>($r43, $r44);

        return;

     label4:
        $r27 = "GET";

        $r28 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>();

        $z4 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>($r28);

        if $z4 == 0 goto label5;

        $r34 = "WebSocketMain.swf";

        $r33 = $r4[0];

        $z5 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>($r33);

        if $z5 == 0 goto label5;

        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>("application/x-shockwave-flash");

        $r35 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        $r36 = virtualinvoke $r35.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r37 = virtualinvoke $r36.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("com/glines/socketio/WebSocketMain.swf");

        $r38 = interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: javax.servlet.ServletOutputStream getOutputStream()>();

        staticinvoke <com.glines.socketio.util.IO: void copy(java.io.InputStream,java.io.OutputStream)>($r37, $r38);

        return;

     label5:
        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unknown SocketIO transport: ");

        $r30 = $r4[0];

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void sendError(int,java.lang.String)>(400, $r32);

        return;

     label6:
        $r11 = <com.glines.socketio.server.SocketIOServlet: java.util.logging.Logger LOGGER>;

        $r10 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z2 = virtualinvoke $r11.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r10);

        if $z2 == 0 goto label7;

        $r15 = <com.glines.socketio.server.SocketIOServlet: java.util.logging.Logger LOGGER>;

        $r16 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("Handling request from ");

        $r17 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getRemoteHost()>();

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i1 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: int getRemotePort()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with transport: ");

        $r22 = interfaceinvoke $r9.<com.glines.socketio.server.Transport: com.glines.socketio.server.TransportType getType()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r16, $r24);

     label7:
        $r12 = new com.glines.socketio.server.SocketIOServlet$1;

        specialinvoke $r12.<com.glines.socketio.server.SocketIOServlet$1: void <init>(com.glines.socketio.server.SocketIOServlet)>(r5);

        $r13 = r5.<com.glines.socketio.server.SocketIOServlet: com.glines.socketio.server.SocketIOSessionManager sessionManager>;

        interfaceinvoke $r9.<com.glines.socketio.server.Transport: void handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.glines.socketio.server.Transport$InboundFactory,com.glines.socketio.server.SessionManager)>(r0, r2, $r12, $r13);

        return;
    }
}
