public final class com.hp.hpl.jena.tdb.base.record.Record extends java.lang.Object
{
    public static final com.hp.hpl.jena.tdb.base.record.Record NO_REC;
    private final byte[] key;
    private final byte[] value;

    public void <init>(byte[], byte[])
    {
        byte[] r1, r2;
        com.hp.hpl.jena.tdb.base.record.RecordException $r3;
        com.hp.hpl.jena.tdb.base.record.Record r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.base.record.Record;

        r1 := @parameter0: byte[];

        r2 := @parameter1: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.tdb.base.record.Record: byte[] key> = r1;

        r0.<com.hp.hpl.jena.tdb.base.record.Record: byte[] value> = r2;

        $z0 = <com.hp.hpl.jena.tdb.sys.SystemTDB: boolean Checking>;

        if $z0 == 0 goto label1;

        if r2 == null goto label1;

        $i0 = lengthof r2;

        if $i0 != 0 goto label1;

        $r3 = new com.hp.hpl.jena.tdb.base.record.RecordException;

        specialinvoke $r3.<com.hp.hpl.jena.tdb.base.record.RecordException: void <init>(java.lang.String)>("Zero length value");

        throw $r3;

     label1:
        return;
    }

    public byte[] getKey()
    {
        byte[] $r1;
        com.hp.hpl.jena.tdb.base.record.Record r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.record.Record;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.record.Record: byte[] key>;

        return $r1;
    }

    public byte[] getValue()
    {
        byte[] $r1;
        com.hp.hpl.jena.tdb.base.record.Record r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.record.Record;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.record.Record: byte[] value>;

        return $r1;
    }

    public boolean hasSeparateValue()
    {
        byte[] $r1;
        com.hp.hpl.jena.tdb.base.record.Record r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.base.record.Record;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.record.Record: byte[] value>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int hashCode()
    {
        byte[] $r1, $r2;
        com.hp.hpl.jena.tdb.base.record.Record r0;
        int $i0, $i1, $i2;

        r0 := @this: com.hp.hpl.jena.tdb.base.record.Record;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.record.Record: byte[] key>;

        $i0 = staticinvoke <java.util.Arrays: int hashCode(byte[])>($r1);

        $r2 = r0.<com.hp.hpl.jena.tdb.base.record.Record: byte[] value>;

        $i1 = staticinvoke <java.util.Arrays: int hashCode(byte[])>($r2);

        $i2 = $i0 ^ $i1;

        return $i2;
    }

    public boolean equals(java.lang.Object)
    {
        com.hp.hpl.jena.tdb.base.record.Record r0, r2;
        int $i0;
        java.lang.Object r1;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.tdb.base.record.Record;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof com.hp.hpl.jena.tdb.base.record.Record;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (com.hp.hpl.jena.tdb.base.record.Record) r1;

        $i0 = staticinvoke <com.hp.hpl.jena.tdb.base.record.Record: int compareByKeyValue(com.hp.hpl.jena.tdb.base.record.Record,com.hp.hpl.jena.tdb.base.record.Record)>(r0, r2);

        if $i0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public java.lang.String toString()
    {
        byte[] $r1, $r3, $r7, $r11;
        com.hp.hpl.jena.tdb.base.record.Record r0;
        java.lang.StringBuilder $r2, $r5, $r6, $r9;
        java.lang.String $r4, $r8, $r10, $r12;

        r0 := @this: com.hp.hpl.jena.tdb.base.record.Record;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.record.Record: byte[] value>;

        if $r1 != null goto label1;

        $r11 = r0.<com.hp.hpl.jena.tdb.base.record.Record: byte[] key>;

        $r12 = staticinvoke <com.hp.hpl.jena.tdb.base.record.Record: java.lang.String str(byte[])>($r11);

        return $r12;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<com.hp.hpl.jena.tdb.base.record.Record: byte[] key>;

        $r4 = staticinvoke <com.hp.hpl.jena.tdb.base.record.Record: java.lang.String str(byte[])>($r3);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r7 = r0.<com.hp.hpl.jena.tdb.base.record.Record: byte[] value>;

        $r8 = staticinvoke <com.hp.hpl.jena.tdb.base.record.Record: java.lang.String str(byte[])>($r7);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public static boolean keyEQ(com.hp.hpl.jena.tdb.base.record.Record, com.hp.hpl.jena.tdb.base.record.Record)
    {
        com.hp.hpl.jena.tdb.base.record.Record r0, r1;
        int $i0;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.record.Record;

        r1 := @parameter1: com.hp.hpl.jena.tdb.base.record.Record;

        $i0 = staticinvoke <com.hp.hpl.jena.tdb.base.record.Record: int compareByKey(com.hp.hpl.jena.tdb.base.record.Record,com.hp.hpl.jena.tdb.base.record.Record)>(r0, r1);

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean keyNE(com.hp.hpl.jena.tdb.base.record.Record, com.hp.hpl.jena.tdb.base.record.Record)
    {
        com.hp.hpl.jena.tdb.base.record.Record r0, r1;
        int $i0;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.record.Record;

        r1 := @parameter1: com.hp.hpl.jena.tdb.base.record.Record;

        $i0 = staticinvoke <com.hp.hpl.jena.tdb.base.record.Record: int compareByKey(com.hp.hpl.jena.tdb.base.record.Record,com.hp.hpl.jena.tdb.base.record.Record)>(r0, r1);

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean keyLT(com.hp.hpl.jena.tdb.base.record.Record, com.hp.hpl.jena.tdb.base.record.Record)
    {
        com.hp.hpl.jena.tdb.base.record.Record r0, r1;
        int $i0;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.record.Record;

        r1 := @parameter1: com.hp.hpl.jena.tdb.base.record.Record;

        $i0 = staticinvoke <com.hp.hpl.jena.tdb.base.record.Record: int compareByKey(com.hp.hpl.jena.tdb.base.record.Record,com.hp.hpl.jena.tdb.base.record.Record)>(r0, r1);

        if $i0 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean keyLE(com.hp.hpl.jena.tdb.base.record.Record, com.hp.hpl.jena.tdb.base.record.Record)
    {
        com.hp.hpl.jena.tdb.base.record.Record r0, r1;
        int $i0;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.record.Record;

        r1 := @parameter1: com.hp.hpl.jena.tdb.base.record.Record;

        $i0 = staticinvoke <com.hp.hpl.jena.tdb.base.record.Record: int compareByKey(com.hp.hpl.jena.tdb.base.record.Record,com.hp.hpl.jena.tdb.base.record.Record)>(r0, r1);

        if $i0 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean keyGE(com.hp.hpl.jena.tdb.base.record.Record, com.hp.hpl.jena.tdb.base.record.Record)
    {
        com.hp.hpl.jena.tdb.base.record.Record r0, r1;
        int $i0;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.record.Record;

        r1 := @parameter1: com.hp.hpl.jena.tdb.base.record.Record;

        $i0 = staticinvoke <com.hp.hpl.jena.tdb.base.record.Record: int compareByKey(com.hp.hpl.jena.tdb.base.record.Record,com.hp.hpl.jena.tdb.base.record.Record)>(r0, r1);

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean keyGT(com.hp.hpl.jena.tdb.base.record.Record, com.hp.hpl.jena.tdb.base.record.Record)
    {
        com.hp.hpl.jena.tdb.base.record.Record r0, r1;
        int $i0;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.record.Record;

        r1 := @parameter1: com.hp.hpl.jena.tdb.base.record.Record;

        $i0 = staticinvoke <com.hp.hpl.jena.tdb.base.record.Record: int compareByKey(com.hp.hpl.jena.tdb.base.record.Record,com.hp.hpl.jena.tdb.base.record.Record)>(r0, r1);

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean equals(com.hp.hpl.jena.tdb.base.record.Record, com.hp.hpl.jena.tdb.base.record.Record)
    {
        com.hp.hpl.jena.tdb.base.record.Record r0, r1;
        int $i0;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.record.Record;

        r1 := @parameter1: com.hp.hpl.jena.tdb.base.record.Record;

        $i0 = staticinvoke <com.hp.hpl.jena.tdb.base.record.Record: int compareByKeyValue(com.hp.hpl.jena.tdb.base.record.Record,com.hp.hpl.jena.tdb.base.record.Record)>(r0, r1);

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static java.lang.String str(byte[])
    {
        byte[] r1;
        java.lang.Object[] $r3;
        byte $b1;
        int $i0, i2;
        java.lang.StringBuilder $r0;
        java.lang.String $r2, $r5;
        java.lang.Byte $r4;

        r1 := @parameter0: byte[];

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        i2 = 0;

     label1:
        $i0 = lengthof r1;

        if i2 >= $i0 goto label2;

        $r3 = newarray (java.lang.Object)[1];

        $b1 = r1[i2];

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%02x", $r3);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static int compareByKey(com.hp.hpl.jena.tdb.base.record.Record, com.hp.hpl.jena.tdb.base.record.Record)
    {
        byte[] $r2, $r3;
        com.hp.hpl.jena.tdb.base.record.Record r0, r1;
        int $i0;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.record.Record;

        r1 := @parameter1: com.hp.hpl.jena.tdb.base.record.Record;

        staticinvoke <com.hp.hpl.jena.tdb.base.record.Record: void checkKeyCompatible(com.hp.hpl.jena.tdb.base.record.Record,com.hp.hpl.jena.tdb.base.record.Record)>(r0, r1);

        $r3 = r0.<com.hp.hpl.jena.tdb.base.record.Record: byte[] key>;

        $r2 = r1.<com.hp.hpl.jena.tdb.base.record.Record: byte[] key>;

        $i0 = staticinvoke <org.apache.jena.atlas.lib.Bytes: int compare(byte[],byte[])>($r3, $r2);

        return $i0;
    }

    public static int compareByKeyValue(com.hp.hpl.jena.tdb.base.record.Record, com.hp.hpl.jena.tdb.base.record.Record)
    {
        byte[] $r2, $r3, $r4, $r5, $r6;
        com.hp.hpl.jena.tdb.base.record.Record r0, r1;
        int $i0, i1;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.record.Record;

        r1 := @parameter1: com.hp.hpl.jena.tdb.base.record.Record;

        staticinvoke <com.hp.hpl.jena.tdb.base.record.Record: void checkCompatible(com.hp.hpl.jena.tdb.base.record.Record,com.hp.hpl.jena.tdb.base.record.Record)>(r0, r1);

        $r3 = r0.<com.hp.hpl.jena.tdb.base.record.Record: byte[] key>;

        $r2 = r1.<com.hp.hpl.jena.tdb.base.record.Record: byte[] key>;

        $i0 = staticinvoke <org.apache.jena.atlas.lib.Bytes: int compare(byte[],byte[])>($r3, $r2);

        i1 = $i0;

        if $i0 != 0 goto label1;

        $r4 = r0.<com.hp.hpl.jena.tdb.base.record.Record: byte[] value>;

        if $r4 == null goto label1;

        $r6 = r0.<com.hp.hpl.jena.tdb.base.record.Record: byte[] value>;

        $r5 = r1.<com.hp.hpl.jena.tdb.base.record.Record: byte[] value>;

        i1 = staticinvoke <org.apache.jena.atlas.lib.Bytes: int compare(byte[],byte[])>($r6, $r5);

     label1:
        return i1;
    }

    static void checkCompatible(com.hp.hpl.jena.tdb.base.record.Record, com.hp.hpl.jena.tdb.base.record.Record)
    {
        java.lang.Object[] $r3;
        com.hp.hpl.jena.tdb.base.record.RecordException $r2;
        com.hp.hpl.jena.tdb.base.record.Record r0, r1;
        java.lang.String $r4;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.record.Record;

        r1 := @parameter1: com.hp.hpl.jena.tdb.base.record.Record;

        $z0 = staticinvoke <com.hp.hpl.jena.tdb.base.record.Record: boolean compatible(com.hp.hpl.jena.tdb.base.record.Record,com.hp.hpl.jena.tdb.base.record.Record,boolean)>(r0, r1, 1);

        if $z0 != 0 goto label1;

        $r2 = new com.hp.hpl.jena.tdb.base.record.RecordException;

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = r0;

        $r3[1] = r1;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Incompatible: %s, %s", $r3);

        specialinvoke $r2.<com.hp.hpl.jena.tdb.base.record.RecordException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        return;
    }

    static void checkKeyCompatible(com.hp.hpl.jena.tdb.base.record.Record, com.hp.hpl.jena.tdb.base.record.Record)
    {
        java.lang.Object[] $r3;
        com.hp.hpl.jena.tdb.base.record.RecordException $r2;
        com.hp.hpl.jena.tdb.base.record.Record r0, r1;
        java.lang.String $r4;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.record.Record;

        r1 := @parameter1: com.hp.hpl.jena.tdb.base.record.Record;

        $z0 = staticinvoke <com.hp.hpl.jena.tdb.base.record.Record: boolean compatible(com.hp.hpl.jena.tdb.base.record.Record,com.hp.hpl.jena.tdb.base.record.Record,boolean)>(r0, r1, 0);

        if $z0 != 0 goto label1;

        $r2 = new com.hp.hpl.jena.tdb.base.record.RecordException;

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = r0;

        $r3[1] = r1;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Incompatible: %s, %s", $r3);

        specialinvoke $r2.<com.hp.hpl.jena.tdb.base.record.RecordException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        return;
    }

    static boolean compatible(com.hp.hpl.jena.tdb.base.record.Record, com.hp.hpl.jena.tdb.base.record.Record, boolean)
    {
        byte[] $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        com.hp.hpl.jena.tdb.base.record.Record r0, r2;
        int $i0, $i1, $i2, $i3;
        boolean z0;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.record.Record;

        r2 := @parameter1: com.hp.hpl.jena.tdb.base.record.Record;

        z0 := @parameter2: boolean;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.record.Record: byte[] key>;

        $i1 = lengthof $r1;

        $r3 = r2.<com.hp.hpl.jena.tdb.base.record.Record: byte[] key>;

        $i0 = lengthof $r3;

        if $i1 == $i0 goto label1;

        return 0;

     label1:
        if z0 == 0 goto label5;

        $r4 = r0.<com.hp.hpl.jena.tdb.base.record.Record: byte[] value>;

        if $r4 != null goto label2;

        $r9 = r2.<com.hp.hpl.jena.tdb.base.record.Record: byte[] value>;

        if $r9 != null goto label2;

        return 1;

     label2:
        $r5 = r0.<com.hp.hpl.jena.tdb.base.record.Record: byte[] value>;

        if $r5 != null goto label3;

        return 0;

     label3:
        $r6 = r2.<com.hp.hpl.jena.tdb.base.record.Record: byte[] value>;

        if $r6 != null goto label4;

        return 0;

     label4:
        $r7 = r0.<com.hp.hpl.jena.tdb.base.record.Record: byte[] value>;

        $i3 = lengthof $r7;

        $r8 = r2.<com.hp.hpl.jena.tdb.base.record.Record: byte[] value>;

        $i2 = lengthof $r8;

        if $i3 == $i2 goto label5;

        return 0;

     label5:
        return 1;
    }

    static void <clinit>()
    {
        <com.hp.hpl.jena.tdb.base.record.Record: com.hp.hpl.jena.tdb.base.record.Record NO_REC> = null;

        return;
    }
}
