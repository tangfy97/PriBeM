final class org.apache.tika.parser.html.DefaultHtmlMapper$1 extends java.util.HashMap
{

    void <init>()
    {
        org.apache.tika.parser.html.DefaultHtmlMapper$1 r0;

        r0 := @this: org.apache.tika.parser.html.DefaultHtmlMapper$1;

        specialinvoke r0.<java.util.HashMap: void <init>()>();

        virtualinvoke r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("H1", "h1");

        virtualinvoke r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("H2", "h2");

        virtualinvoke r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("H3", "h3");

        virtualinvoke r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("H4", "h4");

        virtualinvoke r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("H5", "h5");

        virtualinvoke r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("H6", "h6");

        virtualinvoke r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("P", "p");

        virtualinvoke r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("PRE", "pre");

        virtualinvoke r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("BLOCKQUOTE", "blockquote");

        virtualinvoke r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("Q", "q");

        virtualinvoke r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("UL", "ul");

        virtualinvoke r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("OL", "ol");

        virtualinvoke r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("MENU", "ul");

        virtualinvoke r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("LI", "li");

        virtualinvoke r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("DL", "dl");

        virtualinvoke r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("DT", "dt");

        virtualinvoke r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("DD", "dd");

        virtualinvoke r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("TABLE", "table");

        virtualinvoke r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("THEAD", "thead");

        virtualinvoke r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("TBODY", "tbody");

        virtualinvoke r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("TR", "tr");

        virtualinvoke r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("TH", "th");

        virtualinvoke r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("TD", "td");

        virtualinvoke r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("ADDRESS", "address");

        virtualinvoke r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("A", "a");

        virtualinvoke r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("MAP", "map");

        virtualinvoke r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("AREA", "area");

        virtualinvoke r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("IMG", "img");

        virtualinvoke r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("FRAMESET", "frameset");

        virtualinvoke r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("FRAME", "frame");

        virtualinvoke r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("IFRAME", "iframe");

        virtualinvoke r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("OBJECT", "object");

        virtualinvoke r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("PARAM", "param");

        virtualinvoke r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("INS", "ins");

        virtualinvoke r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: java.lang.Object put(java.lang.Object,java.lang.Object)>("DEL", "del");

        return;
    }
}
