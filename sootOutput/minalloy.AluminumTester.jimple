public final class minalloy.AluminumTester extends java.lang.Object
{

    public void <init>()
    {
        minalloy.AluminumTester r0;

        r0 := @this: minalloy.AluminumTester;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[]) throws edu.mit.csail.sdg.alloy4.Err
    {
        boolean $z0;
        org.kohsuke.args4j.opts.FileOption $r0, $r1, $r5;
        org.kohsuke.args4j.CmdLineParser $r7;
        org.kohsuke.args4j.CmdLineException $r43;
        org.kohsuke.args4j.opts.BooleanOption $r4;
        java.lang.StringBuilder $r12, $r16, $r18, $r22, $r24, $r26, $r28, $r31, $r33, $r35, $r37, $r39;
        java.lang.String[] r8;
        org.kohsuke.args4j.opts.IntOption $r2, $r3, $r6;
        int $i0, $i1;
        java.lang.String $r15, $r17, $r21, $r23, $r27, $r32, $r36, $r40, $r45;
        java.io.PrintStream $r11, $r13, $r19, $r25, $r29, $r34, $r38, $r41, $r42, $r44;
        java.io.File $r9, $r10, $r14, $r20, $r30;

        r8 := @parameter0: java.lang.String[];

        $r0 = new org.kohsuke.args4j.opts.FileOption;

        specialinvoke $r0.<org.kohsuke.args4j.opts.FileOption: void <init>(java.lang.String)>("-i");

        $r1 = new org.kohsuke.args4j.opts.FileOption;

        specialinvoke $r1.<org.kohsuke.args4j.opts.FileOption: void <init>(java.lang.String)>("-o");

        $r2 = new org.kohsuke.args4j.opts.IntOption;

        specialinvoke $r2.<org.kohsuke.args4j.opts.IntOption: void <init>(java.lang.String,int)>("-sb", 20);

        $r3 = new org.kohsuke.args4j.opts.IntOption;

        specialinvoke $r3.<org.kohsuke.args4j.opts.IntOption: void <init>(java.lang.String,int)>("-sk", 0);

        $r4 = new org.kohsuke.args4j.opts.BooleanOption;

        specialinvoke $r4.<org.kohsuke.args4j.opts.BooleanOption: void <init>(java.lang.String)>("-iso");

        $r5 = new org.kohsuke.args4j.opts.FileOption;

        specialinvoke $r5.<org.kohsuke.args4j.opts.FileOption: void <init>(java.lang.String)>("-dl");

        $r6 = new org.kohsuke.args4j.opts.IntOption;

        specialinvoke $r6.<org.kohsuke.args4j.opts.IntOption: void <init>(java.lang.String,int)>("-v", 0);

        $r7 = new org.kohsuke.args4j.CmdLineParser;

        specialinvoke $r7.<org.kohsuke.args4j.CmdLineParser: void <init>()>();

        virtualinvoke $r7.<org.kohsuke.args4j.CmdLineParser: org.kohsuke.args4j.CmdLineOption addOption(org.kohsuke.args4j.CmdLineOption)>($r0);

        virtualinvoke $r7.<org.kohsuke.args4j.CmdLineParser: org.kohsuke.args4j.CmdLineOption addOption(org.kohsuke.args4j.CmdLineOption)>($r1);

        virtualinvoke $r7.<org.kohsuke.args4j.CmdLineParser: org.kohsuke.args4j.CmdLineOption addOption(org.kohsuke.args4j.CmdLineOption)>($r2);

        virtualinvoke $r7.<org.kohsuke.args4j.CmdLineParser: org.kohsuke.args4j.CmdLineOption addOption(org.kohsuke.args4j.CmdLineOption)>($r4);

        virtualinvoke $r7.<org.kohsuke.args4j.CmdLineParser: org.kohsuke.args4j.CmdLineOption addOption(org.kohsuke.args4j.CmdLineOption)>($r3);

        virtualinvoke $r7.<org.kohsuke.args4j.CmdLineParser: org.kohsuke.args4j.CmdLineOption addOption(org.kohsuke.args4j.CmdLineOption)>($r5);

        virtualinvoke $r7.<org.kohsuke.args4j.CmdLineParser: org.kohsuke.args4j.CmdLineOption addOption(org.kohsuke.args4j.CmdLineOption)>($r6);

     label1:
        virtualinvoke $r7.<org.kohsuke.args4j.CmdLineParser: void parse(java.lang.String[])>(r8);

     label2:
        goto label4;

     label3:
        $r43 := @caughtexception;

        $r44 = <java.lang.System: java.io.PrintStream err>;

        $r45 = virtualinvoke $r43.<org.kohsuke.args4j.CmdLineException: java.lang.String getMessage()>();

        virtualinvoke $r44.<java.io.PrintStream: void println(java.lang.String)>($r45);

     label4:
        $r9 = $r0.<org.kohsuke.args4j.opts.FileOption: java.io.File value>;

        if $r9 != null goto label5;

        $r42 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>("No input file is provided!");

        staticinvoke <java.lang.System: void exit(int)>(0);

     label5:
        $r10 = $r1.<org.kohsuke.args4j.opts.FileOption: java.io.File value>;

        if $r10 != null goto label6;

        $r41 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r41.<java.io.PrintStream: void println(java.lang.String)>("No output file is provided!");

        staticinvoke <java.lang.System: void exit(int)>(0);

     label6:
        $r11 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("Running AluminumTester for ");

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("-i = ");

        $r14 = $r0.<org.kohsuke.args4j.opts.FileOption: java.io.File value>;

        $r15 = virtualinvoke $r14.<java.io.File: java.lang.String getPath()>();

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r17);

        $r19 = <java.lang.System: java.io.PrintStream out>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>("-o = ");

        $r20 = $r1.<org.kohsuke.args4j.opts.FileOption: java.io.File value>;

        $r21 = virtualinvoke $r20.<java.io.File: java.lang.String getPath()>();

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r23);

        $r25 = <java.lang.System: java.io.PrintStream out>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>(java.lang.String)>("-v = ");

        $i0 = $r6.<org.kohsuke.args4j.opts.IntOption: int value>;

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>($r27);

        $r29 = <java.lang.System: java.io.PrintStream out>;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>(java.lang.String)>("-dl = ");

        $r30 = $r5.<org.kohsuke.args4j.opts.FileOption: java.io.File value>;

        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>($r32);

        $r34 = <java.lang.System: java.io.PrintStream out>;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>(java.lang.String)>("-sb = ");

        $i1 = $r2.<org.kohsuke.args4j.opts.IntOption: int value>;

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>($r36);

        $r38 = <java.lang.System: java.io.PrintStream out>;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>(java.lang.String)>("-iso = ");

        $z0 = $r4.<org.kohsuke.args4j.opts.BooleanOption: boolean value>;

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>($r40);

        staticinvoke <minalloy.AluminumTester: void test(org.kohsuke.args4j.opts.FileOption,org.kohsuke.args4j.opts.FileOption,org.kohsuke.args4j.opts.IntOption,org.kohsuke.args4j.opts.IntOption,org.kohsuke.args4j.opts.BooleanOption,org.kohsuke.args4j.opts.FileOption,org.kohsuke.args4j.opts.IntOption)>($r0, $r1, $r2, $r3, $r4, $r5, $r6);

        return;

        catch org.kohsuke.args4j.CmdLineException from label1 to label2 with label3;
    }

    private static void test(org.kohsuke.args4j.opts.FileOption, org.kohsuke.args4j.opts.FileOption, org.kohsuke.args4j.opts.IntOption, org.kohsuke.args4j.opts.IntOption, org.kohsuke.args4j.opts.BooleanOption, org.kohsuke.args4j.opts.FileOption, org.kohsuke.args4j.opts.IntOption) throws edu.mit.csail.sdg.alloy4.Err
    {
        java.lang.Integer $r39, $r63, $r64, $r73, r203, r204;
        minalloy.AluminumTester$AluminumSolution r50, $r57, $r243;
        java.lang.StringBuffer r199, $r229, $r231;
        org.kohsuke.args4j.opts.IntOption r10, r11, r93;
        minalloy.AluminumTester$1 $r226;
        test.translator.A4Options $r228;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35, i36, $i37, $i38, $i42, $i44;
        java.io.PrintStream $r17, $r24, $r28, $r41, $r46, $r68, $r92, $r94, $r102, $r111, $r115, $r135, $r139, $r142, $r151, $r155, $r159, $r167, $r171, $r177, $r191, $r194, $r197, $r208, $r212, $r213, $r217, $r221;
        edu.mit.csail.sdg.alloy4compiler.parser.CompModule $r7;
        minsolver.MinSolution $r25, $r38, $r206;
        java.util.ArrayList $r234, $r237;
        java.lang.String $r6, $r20, $r23, $r31, $r44, $r48, $r52, $r62, $r80, $r82, $r87, $r91, $r97, $r101, $r105, $r109, $r113, $r117, $r121, $r125, $r129, $r133, $r138, $r153, $r157, $r162, $r166, $r173, $r175, $r178, $r180, $r182, $r186, $r189, $r192, $r195, $r198, $r211, $r216, $r220, $r224;
        java.util.LinkedHashSet $r225, $r245;
        kodkod.instance.Bounds $r140;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, z8, $z9, $z10, $z11, z12, $z13, $z14, $z15, $z16, $z17, $z18;
        java.util.List $r141, r202;
        java.lang.StringBuilder $r18, $r19, $r29, $r30, $r42, $r43, $r53, $r54, $r55, $r58, $r59, $r60, $r61, $r69, $r70, $r71, $r72, $r75, $r76, $r77, $r78, $r79, $r83, $r84, $r85, $r88, $r89, $r90, $r98, $r99, $r100, $r106, $r107, $r108, $r112, $r116, $r119, $r120, $r123, $r124, $r127, $r128, $r131, $r132, $r136, $r137, $r152, $r156, $r160, $r161, $r164, $r165, $r172, $r179, $r187, $r188, $r210, $r215, $r219, $r223, $r230, $r232, $r233, $r236, $r240, $r241, $r242, $r244, $r246, $r247, $r248, $r249, $r250, $r251, $r252, $r253, $r254, $r255, $r256, $r257, $r258, $r259, $r260, $r261, $r262, $r263;
        long $l0, $l39, $l40;
        edu.mit.csail.sdg.alloy4.ConstList $r13, $r21, $r45;
        java.io.IOException $r190, $r193, $r196;
        java.util.Collection $r66;
        org.kohsuke.args4j.opts.BooleanOption r35;
        java.util.HashSet $r235, $r239;
        minalloy.translator.MinA4Options $r227;
        kodkod.engine.Solution $r86, $r96, $r104, $r207;
        java.lang.Object $r15, $r37, $r49, $r56, $r65, $r74, $r145, $r146, $r149;
        edu.mit.csail.sdg.alloy4compiler.ast.Command r200;
        org.kohsuke.args4j.opts.FileOption r0, r4, r168;
        java.util.Set $r143, $r147;
        java.io.File $r1, $r5, $r169, $r174, $r181, $r185;
        test.translator.A4Solution r205;
        minalloy.translator.MinA4Solution r201;
        java.util.HashMap $r238;
        java.util.Iterator $r14, $r144, $r148;

        r4 := @parameter0: org.kohsuke.args4j.opts.FileOption;

        r168 := @parameter1: org.kohsuke.args4j.opts.FileOption;

        r10 := @parameter2: org.kohsuke.args4j.opts.IntOption;

        r11 := @parameter3: org.kohsuke.args4j.opts.IntOption;

        r35 := @parameter4: org.kohsuke.args4j.opts.BooleanOption;

        r0 := @parameter5: org.kohsuke.args4j.opts.FileOption;

        r93 := @parameter6: org.kohsuke.args4j.opts.IntOption;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1 = r0.<org.kohsuke.args4j.opts.FileOption: java.io.File value>;

        if $r1 == null goto label01;

        $z18 = 1;

        $z17 = 1;

        goto label02;

     label01:
        $z18 = 0;

        $z17 = 0;

     label02:
        z0 = $z18;

        $r225 = new java.util.LinkedHashSet;

        specialinvoke $r225.<java.util.LinkedHashSet: void <init>()>();

        $r226 = new minalloy.AluminumTester$1;

        specialinvoke $r226.<minalloy.AluminumTester$1: void <init>()>();

        $r5 = r4.<org.kohsuke.args4j.opts.FileOption: java.io.File value>;

        $r6 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r7 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.parser.CompUtil: edu.mit.csail.sdg.alloy4compiler.parser.CompModule parseEverything_fromFile(edu.mit.csail.sdg.alloy4.A4Reporter,java.util.Map,java.lang.String)>($r226, null, $r6);

        $r227 = new minalloy.translator.MinA4Options;

        specialinvoke $r227.<minalloy.translator.MinA4Options: void <init>()>();

        $r228 = new test.translator.A4Options;

        specialinvoke $r228.<test.translator.A4Options: void <init>()>();

        $i1 = r10.<org.kohsuke.args4j.opts.IntOption: int value>;

        $r227.<minalloy.translator.MinA4Options: int symmetry> = $i1;

        $i2 = r11.<org.kohsuke.args4j.opts.IntOption: int value>;

        $r227.<minalloy.translator.MinA4Options: int skolemDepth> = $i2;

        $i3 = r10.<org.kohsuke.args4j.opts.IntOption: int value>;

        $r228.<test.translator.A4Options: int symmetry> = $i3;

        $i4 = r11.<org.kohsuke.args4j.opts.IntOption: int value>;

        $r228.<test.translator.A4Options: int skolemDepth> = $i4;

        z8 = 0;

        i26 = 0;

        i27 = 0;

        i28 = 0;

        $r229 = new java.lang.StringBuffer;

        specialinvoke $r229.<java.lang.StringBuffer: void <init>()>();

        r199 = null;

        if $z17 == 0 goto label03;

        $r231 = new java.lang.StringBuffer;

        $r230 = new java.lang.StringBuilder;

        specialinvoke $r230.<java.lang.StringBuilder: void <init>(java.lang.String)>("Distribution log for ");

        $r185 = r4.<org.kohsuke.args4j.opts.FileOption: java.io.File value>;

        $r186 = virtualinvoke $r185.<java.io.File: java.lang.String getPath()>();

        $r187 = virtualinvoke $r230.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r186);

        $r188 = virtualinvoke $r187.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\n");

        $r189 = virtualinvoke $r188.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r231.<java.lang.StringBuffer: void <init>(java.lang.String)>($r189);

        r199 = $r231;

     label03:
        $r13 = interfaceinvoke $r7.<edu.mit.csail.sdg.alloy4compiler.ast.Module: edu.mit.csail.sdg.alloy4.ConstList getAllCommands()>();

        $r14 = virtualinvoke $r13.<edu.mit.csail.sdg.alloy4.ConstList: java.util.Iterator iterator()>();

        goto label38;

     label04:
        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r200 = (edu.mit.csail.sdg.alloy4compiler.ast.Command) $r15;

        if z0 == 0 goto label05;

        $r232 = new java.lang.StringBuilder;

        specialinvoke $r232.<java.lang.StringBuilder: void <init>(java.lang.String)>("Executing command: ");

        $r164 = virtualinvoke $r232.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r200);

        $r165 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -----\n");

        $r166 = virtualinvoke $r165.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r199.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r166);

        virtualinvoke r199.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Alloy Solution\tMinimal Solution\tIsomorphism Group\tComparison\n");

     label05:
        $r17 = <java.lang.System: java.io.PrintStream out>;

        $r233 = new java.lang.StringBuilder;

        specialinvoke $r233.<java.lang.StringBuilder: void <init>(java.lang.String)>("Running Aluminum to build minimal solutions for command: ");

        $r18 = virtualinvoke $r233.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r200);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<java.io.PrintStream: void print(java.lang.String)>($r20);

        interfaceinvoke $r225.<java.util.Set: void clear()>();

        $r21 = interfaceinvoke $r7.<edu.mit.csail.sdg.alloy4compiler.ast.Module: edu.mit.csail.sdg.alloy4.ConstList getAllReachableSigs()>();

        r201 = staticinvoke <minalloy.translator.MinTranslateAlloyToKodkod: minalloy.translator.MinA4Solution execute_command(edu.mit.csail.sdg.alloy4.A4Reporter,java.lang.Iterable,edu.mit.csail.sdg.alloy4compiler.ast.Command,minalloy.translator.MinA4Options)>($r226, $r21, r200, $r227);

        $r234 = new java.util.ArrayList;

        specialinvoke $r234.<java.util.ArrayList: void <init>()>();

        goto label08;

     label06:
        $r23 = virtualinvoke r201.<minalloy.translator.MinA4Solution: java.lang.String toString()>();

        $z1 = interfaceinvoke $r225.<java.util.Set: boolean add(java.lang.Object)>($r23);

        if $z1 == 0 goto label07;

        $r25 = virtualinvoke r201.<minalloy.translator.MinA4Solution: minsolver.MinSolution getCurrentSolution()>();

        interfaceinvoke $r234.<java.util.List: boolean add(java.lang.Object)>($r25);

     label07:
        r201 = virtualinvoke r201.<minalloy.translator.MinA4Solution: minalloy.translator.MinA4Solution next()>();

        $r24 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r24.<java.io.PrintStream: void print(java.lang.String)>(".");

     label08:
        $z9 = virtualinvoke r201.<minalloy.translator.MinA4Solution: boolean satisfiable()>();

        if $z9 != 0 goto label06;

        $i5 = interfaceinvoke $r234.<java.util.List: int size()>();

        i27 = $i5;

        i29 = 0;

        i30 = 0;

        i31 = 0;

        $r235 = new java.util.HashSet;

        specialinvoke $r235.<java.util.HashSet: void <init>()>();

        $r28 = <java.lang.System: java.io.PrintStream out>;

        $r236 = new java.lang.StringBuilder;

        specialinvoke $r236.<java.lang.StringBuilder: void <init>(java.lang.String)>("\n  Got ");

        $r29 = virtualinvoke $r236.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" minimal solutions from Aluminum.");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>($r31);

        $r237 = new java.util.ArrayList;

        specialinvoke $r237.<java.util.ArrayList: void <init>()>();

        r202 = $r237;

        $r238 = new java.util.HashMap;

        specialinvoke $r238.<java.util.HashMap: void <init>()>();

        $r239 = new java.util.HashSet;

        specialinvoke $r239.<java.util.HashSet: void <init>()>();

        $z2 = r35.<org.kohsuke.args4j.opts.BooleanOption: boolean value>;

        if $z2 == 0 goto label14;

        $r139 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r139.<java.io.PrintStream: void println(java.lang.String)>("Building isomorphic solutions for the minimal solutions ....");

        $r140 = virtualinvoke r201.<minalloy.translator.MinA4Solution: kodkod.instance.Bounds getSkolemBounds()>();

        $r141 = staticinvoke <minalloy.AluminumTester: java.util.List getIsomorphicSolutions(java.util.List,kodkod.instance.Bounds,java.util.Map)>($r234, $r140, $r238);

        r202 = $r141;

        $r142 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r142.<java.io.PrintStream: void println(java.lang.String)>("Done!");

        $r143 = interfaceinvoke $r238.<java.util.Map: java.util.Set keySet()>();

        $r144 = interfaceinvoke $r143.<java.util.Set: java.util.Iterator iterator()>();

        goto label13;

     label09:
        $r145 = interfaceinvoke $r144.<java.util.Iterator: java.lang.Object next()>();

        r203 = (java.lang.Integer) $r145;

        $r146 = interfaceinvoke $r238.<java.util.Map: java.lang.Object get(java.lang.Object)>(r203);

        $r147 = (java.util.Set) $r146;

        $r148 = interfaceinvoke $r147.<java.util.Set: java.util.Iterator iterator()>();

        goto label11;

     label10:
        $r149 = interfaceinvoke $r148.<java.util.Iterator: java.lang.Object next()>();

        r204 = (java.lang.Integer) $r149;

        $i20 = virtualinvoke r204.<java.lang.Integer: int intValue()>();

        $i21 = virtualinvoke r203.<java.lang.Integer: int intValue()>();

        if $i20 <= $i21 goto label11;

        interfaceinvoke $r239.<java.util.Set: boolean add(java.lang.Object)>(r204);

     label11:
        $z10 = interfaceinvoke $r148.<java.util.Iterator: boolean hasNext()>();

        if $z10 != 0 goto label10;

        $z6 = interfaceinvoke $r239.<java.util.Set: boolean contains(java.lang.Object)>(r203);

        if $z6 != 0 goto label12;

        $i22 = virtualinvoke r203.<java.lang.Integer: int intValue()>();

        $i23 = $i22 + 1;

        i31 = i31 + $i23;

     label12:
        interfaceinvoke $r235.<java.util.Set: boolean add(java.lang.Object)>(r203);

     label13:
        $z11 = interfaceinvoke $r144.<java.util.Iterator: boolean hasNext()>();

        if $z11 != 0 goto label09;

        $r151 = <java.lang.System: java.io.PrintStream out>;

        $r240 = new java.lang.StringBuilder;

        specialinvoke $r240.<java.lang.StringBuilder: void <init>(java.lang.String)>("  Number of iso dupes:\n  ");

        $i24 = interfaceinvoke $r239.<java.util.Set: int size()>();

        $r152 = virtualinvoke $r240.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        $r153 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r151.<java.io.PrintStream: void println(java.lang.String)>($r153);

        $r155 = <java.lang.System: java.io.PrintStream out>;

        $r241 = new java.lang.StringBuilder;

        specialinvoke $r241.<java.lang.StringBuilder: void <init>(java.lang.String)>("  Duplication map: ");

        $r156 = virtualinvoke $r241.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r238);

        $r157 = virtualinvoke $r156.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r155.<java.io.PrintStream: void println(java.lang.String)>($r157);

        $i25 = interfaceinvoke $r141.<java.util.List: int size()>();

        i28 = $i25;

        $r159 = <java.lang.System: java.io.PrintStream out>;

        $r242 = new java.lang.StringBuilder;

        specialinvoke $r242.<java.lang.StringBuilder: void <init>(java.lang.String)>("  Got ");

        $r160 = virtualinvoke $r242.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i25);

        $r161 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ismorphic+original minimal solutions.");

        $r162 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r159.<java.io.PrintStream: void println(java.lang.String)>($r162);

        goto label17;

     label14:
        i32 = 0;

        goto label16;

     label15:
        $r243 = new minalloy.AluminumTester$AluminumSolution;

        $r37 = interfaceinvoke $r234.<java.util.List: java.lang.Object get(int)>(i32);

        $r38 = (minsolver.MinSolution) $r37;

        specialinvoke $r243.<minalloy.AluminumTester$AluminumSolution: void <init>(minsolver.MinSolution,int)>($r38, i32);

        interfaceinvoke $r237.<java.util.List: boolean add(java.lang.Object)>($r243);

        $i7 = i32 + 1;

        i31 = i31 + $i7;

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i32);

        interfaceinvoke $r235.<java.util.Set: boolean add(java.lang.Object)>($r39);

        i32 = i32 + 1;

     label16:
        $i6 = interfaceinvoke $r234.<java.util.List: int size()>();

        if i32 < $i6 goto label15;

     label17:
        $r41 = <java.lang.System: java.io.PrintStream out>;

        $r244 = new java.lang.StringBuilder;

        specialinvoke $r244.<java.lang.StringBuilder: void <init>(java.lang.String)>("Running Alloy for command: ");

        $r42 = virtualinvoke $r244.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r200);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r41.<java.io.PrintStream: void print(java.lang.String)>($r44);

        $r45 = interfaceinvoke $r7.<edu.mit.csail.sdg.alloy4compiler.ast.Module: edu.mit.csail.sdg.alloy4.ConstList getAllReachableSigs()>();

        r205 = staticinvoke <test.translator.TranslateAlloyToKodkod: test.translator.A4Solution execute_command(edu.mit.csail.sdg.alloy4.A4Reporter,java.lang.Iterable,edu.mit.csail.sdg.alloy4compiler.ast.Command,test.translator.A4Options)>($r226, $r45, r200, $r228);

        $r46 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r46.<java.io.PrintStream: void println(java.lang.String)>("Done!");

        $r245 = new java.util.LinkedHashSet;

        specialinvoke $r245.<java.util.LinkedHashSet: void <init>()>();

        i33 = 0;

        i34 = 0;

        goto label34;

     label18:
        $r48 = virtualinvoke r205.<test.translator.A4Solution: java.lang.String toString()>();

        $z3 = interfaceinvoke $r245.<java.util.Set: boolean add(java.lang.Object)>($r48);

        if $z3 != 0 goto label19;

        if i34 >= 100 goto label19;

        i34 = i34 + 1;

        r205 = virtualinvoke r205.<test.translator.A4Solution: test.translator.A4Solution next()>();

        goto label34;

     label19:
        z12 = 0;

        i33 = i33 + 1;

        $i8 = i33 % 100;

        if $i8 != 0 goto label20;

        $r135 = <java.lang.System: java.io.PrintStream out>;

        $r246 = new java.lang.StringBuilder;

        specialinvoke $r246.<java.lang.StringBuilder: void <init>(java.lang.String)>("Checking solution ");

        $r136 = virtualinvoke $r246.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i33);

        $r137 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r138 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r135.<java.io.PrintStream: void print(java.lang.String)>($r138);

     label20:
        i35 = 1;

        i36 = 0;

        goto label30;

     label21:
        $r49 = interfaceinvoke r202.<java.util.List: java.lang.Object get(int)>(i36);

        r50 = (minalloy.AluminumTester$AluminumSolution) $r49;

        $i9 = i33 % 100;

        if $i9 != 0 goto label22;

        $i16 = i35 % 10;

        if $i16 != 0 goto label22;

        $r92 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r92.<java.io.PrintStream: void print(java.lang.String)>(".");

     label22:
        i35 = i35 + 1;

        $r206 = r50.<minalloy.AluminumTester$AluminumSolution: minsolver.MinSolution solution>;

        $r207 = virtualinvoke r205.<test.translator.A4Solution: kodkod.engine.Solution getCurrentSolution()>();

        $i37 = staticinvoke <minalloy.SolutionComparator: int compare(minsolver.MinSolution,kodkod.engine.Solution)>($r206, $r207);

        if z12 != 0 goto label25;

        $i42 = (int) -1;

        if $i37 == $i42 goto label23;

        if $i37 == 0 goto label23;

        $z13 = 0;

        goto label24;

     label23:
        $z13 = 1;

     label24:
        z12 = $z13;

     label25:
        if $i37 != 1 goto label26;

        z8 = 1;

        i26 = i26 + 1;

        $r247 = new java.lang.StringBuilder;

        specialinvoke $r247.<java.lang.StringBuilder: void <init>(java.lang.String)>("The following Aluminum solution is not minimal:\n\n");

        $r82 = virtualinvoke r50.<minalloy.AluminumTester$AluminumSolution: java.lang.String toString()>();

        $r83 = virtualinvoke $r247.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r82);

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\n");

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("because Alloy gave something smaller:\n\n");

        $r86 = virtualinvoke r205.<test.translator.A4Solution: kodkod.engine.Solution getCurrentSolution()>();

        $r87 = virtualinvoke $r86.<kodkod.engine.Solution: java.lang.String toString()>();

        $r88 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r87);

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\n");

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-------------------------------------\n");

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r229.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r91);

     label26:
        if z0 == 0 goto label29;

        if $i37 != 0 goto label27;

        $i11 = r50.<minalloy.AluminumTester$AluminumSolution: int groupIndex>;

        $r63 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        $z4 = interfaceinvoke $r235.<java.util.Set: boolean remove(java.lang.Object)>($r63);

        if $z4 == 0 goto label27;

        i29 = i29 + i33;

        i30 = i33;

        $i12 = r50.<minalloy.AluminumTester$AluminumSolution: int groupIndex>;

        $r64 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        $r65 = interfaceinvoke $r238.<java.util.Map: java.lang.Object get(java.lang.Object)>($r64);

        $r66 = (java.util.Collection) $r65;

        interfaceinvoke $r235.<java.util.Set: boolean removeAll(java.util.Collection)>($r66);

        $r68 = <java.lang.System: java.io.PrintStream out>;

        $r248 = new java.lang.StringBuilder;

        specialinvoke $r248.<java.lang.StringBuilder: void <init>(java.lang.String)>("  MATCH for Ordinal Sum: ");

        $i13 = r50.<minalloy.AluminumTester$AluminumSolution: int groupIndex>;

        $r69 = virtualinvoke $r248.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at Alloy Model ");

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i33);

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n    Eliminating entire class:");

        $i14 = r50.<minalloy.AluminumTester$AluminumSolution: int groupIndex>;

        $r73 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14);

        $r74 = interfaceinvoke $r238.<java.util.Map: java.lang.Object get(java.lang.Object)>($r73);

        $r75 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r74);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" plus ");

        $i15 = r50.<minalloy.AluminumTester$AluminumSolution: int groupIndex>;

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n    so total is: ");

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i29);

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r68.<java.io.PrintStream: void println(java.lang.String)>($r80);

     label27:
        $i44 = (int) -1;

        if $i37 == $i44 goto label28;

        if $i37 != 0 goto label29;

     label28:
        $r249 = new java.lang.StringBuilder;

        $r52 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i33);

        specialinvoke $r249.<java.lang.StringBuilder: void <init>(java.lang.String)>($r52);

        $r53 = virtualinvoke $r249.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i36);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r56 = interfaceinvoke r202.<java.util.List: java.lang.Object get(int)>(i36);

        $r57 = (minalloy.AluminumTester$AluminumSolution) $r56;

        $i10 = $r57.<minalloy.AluminumTester$AluminumSolution: int groupIndex>;

        $r58 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i37);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r199.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r62);

     label29:
        i36 = i36 + 1;

     label30:
        $i38 = interfaceinvoke r202.<java.util.List: int size()>();

        if i36 < $i38 goto label21;

        if z12 != 0 goto label31;

        $r102 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r102.<java.io.PrintStream: void println(java.lang.String)>("Error!");

        $r250 = new java.lang.StringBuilder;

        specialinvoke $r250.<java.lang.StringBuilder: void <init>(java.lang.String)>("Couldn\'t find a minimal solution for: \n\n");

        $r104 = virtualinvoke r205.<test.translator.A4Solution: kodkod.engine.Solution getCurrentSolution()>();

        $r105 = virtualinvoke $r104.<kodkod.engine.Solution: java.lang.String toString()>();

        $r106 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r105);

        $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-------------------------------------\n");

        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r229.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r109);

        z8 = 1;

        i26 = i26 + 1;

        goto label35;

     label31:
        $i17 = r93.<org.kohsuke.args4j.opts.IntOption: int value>;

        if $i17 <= 0 goto label32;

        $r251 = new java.lang.StringBuilder;

        specialinvoke $r251.<java.lang.StringBuilder: void <init>(java.lang.String)>("This is fine: \n\n");

        $r96 = virtualinvoke r205.<test.translator.A4Solution: kodkod.engine.Solution getCurrentSolution()>();

        $r97 = virtualinvoke $r96.<kodkod.engine.Solution: java.lang.String toString()>();

        $r98 = virtualinvoke $r251.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r97);

        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-------------------------------------\n");

        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r229.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r101);

     label32:
        $i18 = i33 % 100;

        if $i18 != 0 goto label33;

        $r94 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r94.<java.io.PrintStream: void println(java.lang.String)>("OK!");

     label33:
        r205 = virtualinvoke r205.<test.translator.A4Solution: test.translator.A4Solution next()>();

     label34:
        $z14 = virtualinvoke r205.<test.translator.A4Solution: boolean satisfiable()>();

        if $z14 != 0 goto label18;

     label35:
        $r111 = <java.lang.System: java.io.PrintStream out>;

        $r252 = new java.lang.StringBuilder;

        specialinvoke $r252.<java.lang.StringBuilder: void <init>(java.lang.String)>("OS Alloy: ");

        $r112 = virtualinvoke $r252.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i29);

        $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r111.<java.io.PrintStream: void println(java.lang.String)>($r113);

        $r115 = <java.lang.System: java.io.PrintStream out>;

        $r253 = new java.lang.StringBuilder;

        specialinvoke $r253.<java.lang.StringBuilder: void <init>(java.lang.String)>("OS Aluminum: ");

        $r116 = virtualinvoke $r253.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i31);

        $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r115.<java.io.PrintStream: void println(java.lang.String)>($r117);

        if z0 == 0 goto label36;

        $r254 = new java.lang.StringBuilder;

        specialinvoke $r254.<java.lang.StringBuilder: void <init>(java.lang.String)>("OS Alloy:\t");

        $r123 = virtualinvoke $r254.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i29);

        $r124 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r125 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r199.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r125);

        $r255 = new java.lang.StringBuilder;

        specialinvoke $r255.<java.lang.StringBuilder: void <init>(java.lang.String)>("OS Aluminum:\t");

        $r127 = virtualinvoke $r255.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i31);

        $r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r129 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r199.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r129);

        $r256 = new java.lang.StringBuilder;

        specialinvoke $r256.<java.lang.StringBuilder: void <init>(java.lang.String)>("Min. Instance Coverage: \t");

        $r131 = virtualinvoke $r256.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i30);

        $r132 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r133 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r199.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r133);

     label36:
        $z5 = r35.<org.kohsuke.args4j.opts.BooleanOption: boolean value>;

        if $z5 == 0 goto label37;

        if z0 == 0 goto label37;

        $r257 = new java.lang.StringBuilder;

        specialinvoke $r257.<java.lang.StringBuilder: void <init>(java.lang.String)>("Number of dupes:\t");

        $i19 = interfaceinvoke $r239.<java.util.Set: int size()>();

        $r119 = virtualinvoke $r257.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        $r120 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r121 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r199.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r121);

     label37:
        $r208 = <java.lang.System: java.io.PrintStream out>;

        $r258 = new java.lang.StringBuilder;

        specialinvoke $r258.<java.lang.StringBuilder: void <init>(java.lang.String)>("Number of Alloy solutions processed (not counting same-string dupes): ");

        $r210 = virtualinvoke $r258.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i33);

        $r211 = virtualinvoke $r210.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r208.<java.io.PrintStream: void println(java.lang.String)>($r211);

        $r212 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r212.<java.io.PrintStream: void println(java.lang.String)>("\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n");

     label38:
        $z15 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z15 != 0 goto label04;

        if z8 == 0 goto label42;

        $r177 = <java.lang.System: java.io.PrintStream out>;

        $r259 = new java.lang.StringBuilder;

        $r178 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i26);

        specialinvoke $r259.<java.lang.StringBuilder: void <init>(java.lang.String)>($r178);

        $r179 = virtualinvoke $r259.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" inconsistencies were found! Please read the output file for details.");

        $r180 = virtualinvoke $r179.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r177.<java.io.PrintStream: void println(java.lang.String)>($r180);

     label39:
        $r181 = r168.<org.kohsuke.args4j.opts.FileOption: java.io.File value>;

        $r182 = virtualinvoke $r229.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <minalloy.AluminumTester: void writeData(java.io.File,java.lang.String)>($r181, $r182);

     label40:
        goto label46;

     label41:
        $r196 := @caughtexception;

        $r197 = <java.lang.System: java.io.PrintStream err>;

        $r198 = virtualinvoke $r196.<java.io.IOException: java.lang.String getMessage()>();

        virtualinvoke $r197.<java.io.PrintStream: void println(java.lang.String)>($r198);

        staticinvoke <java.lang.System: void exit(int)>(0);

        goto label46;

     label42:
        $r167 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r167.<java.io.PrintStream: void println(java.lang.String)>("The experiment terminated successfully!");

     label43:
        $r169 = r168.<org.kohsuke.args4j.opts.FileOption: java.io.File value>;

        staticinvoke <minalloy.AluminumTester: void writeData(java.io.File,java.lang.String)>($r169, "The experiment terminated successfully!");

     label44:
        goto label46;

     label45:
        $r193 := @caughtexception;

        $r194 = <java.lang.System: java.io.PrintStream err>;

        $r195 = virtualinvoke $r193.<java.io.IOException: java.lang.String getMessage()>();

        virtualinvoke $r194.<java.io.PrintStream: void println(java.lang.String)>($r195);

        staticinvoke <java.lang.System: void exit(int)>(0);

     label46:
        if z0 == 0 goto label50;

     label47:
        $r174 = r0.<org.kohsuke.args4j.opts.FileOption: java.io.File value>;

        $r175 = virtualinvoke r199.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <minalloy.AluminumTester: void writeData(java.io.File,java.lang.String)>($r174, $r175);

     label48:
        goto label50;

     label49:
        $r190 := @caughtexception;

        $r191 = <java.lang.System: java.io.PrintStream err>;

        $r192 = virtualinvoke $r190.<java.io.IOException: java.lang.String getMessage()>();

        virtualinvoke $r191.<java.io.PrintStream: void println(java.lang.String)>($r192);

        staticinvoke <java.lang.System: void exit(int)>(0);

     label50:
        $r213 = <java.lang.System: java.io.PrintStream out>;

        $r260 = new java.lang.StringBuilder;

        specialinvoke $r260.<java.lang.StringBuilder: void <init>(java.lang.String)>("Total Execution Time: ");

        $l39 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l40 = $l39 - $l0;

        $r215 = virtualinvoke $r260.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l40);

        $r216 = virtualinvoke $r215.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r213.<java.io.PrintStream: void println(java.lang.String)>($r216);

        $r217 = <java.lang.System: java.io.PrintStream out>;

        $r261 = new java.lang.StringBuilder;

        specialinvoke $r261.<java.lang.StringBuilder: void <init>(java.lang.String)>("Inconsistencies: ");

        $r219 = virtualinvoke $r261.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i26);

        $r220 = virtualinvoke $r219.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r217.<java.io.PrintStream: void println(java.lang.String)>($r220);

        $r221 = <java.lang.System: java.io.PrintStream out>;

        $r262 = new java.lang.StringBuilder;

        specialinvoke $r262.<java.lang.StringBuilder: void <init>(java.lang.String)>("Minimal Solutions: ");

        $r223 = virtualinvoke $r262.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i27);

        $r224 = virtualinvoke $r223.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r221.<java.io.PrintStream: void println(java.lang.String)>($r224);

        $z16 = r35.<org.kohsuke.args4j.opts.BooleanOption: boolean value>;

        if $z16 == 0 goto label51;

        $r171 = <java.lang.System: java.io.PrintStream out>;

        $r263 = new java.lang.StringBuilder;

        specialinvoke $r263.<java.lang.StringBuilder: void <init>(java.lang.String)>("Detected isomorphs of the minimal solutions for comparison: ");

        $r172 = virtualinvoke $r263.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i28);

        $r173 = virtualinvoke $r172.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r171.<java.io.PrintStream: void println(java.lang.String)>($r173);

     label51:
        return;

        catch java.io.IOException from label39 to label40 with label41;
        catch java.io.IOException from label43 to label44 with label45;
        catch java.io.IOException from label47 to label48 with label49;
    }

    private static void writeData(java.io.File, java.lang.String) throws java.io.IOException
    {
        java.io.BufferedWriter $r2;
        java.io.FileWriter $r0;
        java.lang.String r3;
        java.io.File r1;

        r1 := @parameter0: java.io.File;

        r3 := @parameter1: java.lang.String;

        $r0 = new java.io.FileWriter;

        specialinvoke $r0.<java.io.FileWriter: void <init>(java.io.File)>(r1);

        $r2 = new java.io.BufferedWriter;

        specialinvoke $r2.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r0);

        virtualinvoke $r2.<java.io.BufferedWriter: void write(java.lang.String)>(r3);

        virtualinvoke $r2.<java.io.BufferedWriter: void close()>();

        return;
    }

    private static java.util.List getIsomorphicSolutions(java.util.List, kodkod.instance.Bounds, java.util.Map)
    {
        java.lang.Integer $r9, $r18, $r21, $r22, $r25;
        kodkod.instance.Bounds r3;
        minalloy.AluminumTester$AluminumSolution $r5, $r28;
        java.util.Map r8;
        boolean $z0, $z1;
        java.util.Set $r13, $r20, $r24;
        java.util.List r1;
        minsolver.MinSolution $r4, $r7, r12, r17, r29, r30;
        java.util.ArrayList $r0;
        java.util.HashSet $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;
        java.util.Iterator $r15, $r26;
        java.lang.Object $r2, $r6, $r11, $r14, $r16, $r19, $r23, $r27;

        r1 := @parameter0: java.util.List;

        r3 := @parameter1: kodkod.instance.Bounds;

        r8 := @parameter2: java.util.Map;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 != 0 goto label01;

        return $r0;

     label01:
        i6 = 0;

        goto label03;

     label02:
        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i6);

        $r4 = (minsolver.MinSolution) $r2;

        virtualinvoke $r4.<minsolver.MinSolution: void sanitizeToBounds(kodkod.instance.Bounds)>(r3);

        $r5 = new minalloy.AluminumTester$AluminumSolution;

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i6);

        $r7 = (minsolver.MinSolution) $r6;

        specialinvoke $r5.<minalloy.AluminumTester$AluminumSolution: void <init>(minsolver.MinSolution,int)>($r7, i6);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        $r10 = new java.util.HashSet;

        specialinvoke $r10.<java.util.HashSet: void <init>()>();

        interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r10);

        i6 = i6 + 1;

     label03:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if i6 < $i1 goto label02;

        i7 = 0;

        goto label11;

     label04:
        $r11 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i7);

        r12 = (minsolver.MinSolution) $r11;

        $r13 = staticinvoke <minalloy.IsomorphicSolutionBuilder: java.util.Set getIsomorphicSolutions(minsolver.MinSolution,kodkod.instance.Bounds)>(r12, r3);

        i8 = i7 + 1;

        goto label08;

     label05:
        $r14 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i8);

        r29 = (minsolver.MinSolution) $r14;

        $r15 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

        goto label07;

     label06:
        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r17 = (minsolver.MinSolution) $r16;

        $i4 = staticinvoke <minalloy.SolutionComparator: int compare(minsolver.MinSolution,minsolver.MinSolution)>(r17, r29);

        if $i4 != 0 goto label07;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7);

        $r19 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r18);

        $r20 = (java.util.Set) $r19;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8);

        interfaceinvoke $r20.<java.util.Set: boolean add(java.lang.Object)>($r21);

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8);

        $r23 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r22);

        $r24 = (java.util.Set) $r23;

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7);

        interfaceinvoke $r24.<java.util.Set: boolean add(java.lang.Object)>($r25);

     label07:
        $z0 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label06;

        i8 = i8 + 1;

     label08:
        $i3 = interfaceinvoke r1.<java.util.List: int size()>();

        if i8 < $i3 goto label05;

        $r26 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

        goto label10;

     label09:
        $r27 = interfaceinvoke $r26.<java.util.Iterator: java.lang.Object next()>();

        r30 = (minsolver.MinSolution) $r27;

        $i5 = staticinvoke <minalloy.SolutionComparator: int compare(minsolver.MinSolution,minsolver.MinSolution)>(r12, r30);

        if $i5 == 0 goto label10;

        $r28 = new minalloy.AluminumTester$AluminumSolution;

        specialinvoke $r28.<minalloy.AluminumTester$AluminumSolution: void <init>(minsolver.MinSolution,int)>(r30, i7);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r28);

     label10:
        $z1 = interfaceinvoke $r26.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label09;

        i7 = i7 + 1;

     label11:
        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        if i7 < $i2 goto label04;

        return $r0;
    }
}
