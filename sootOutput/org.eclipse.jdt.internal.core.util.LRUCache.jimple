public class org.eclipse.jdt.internal.core.util.LRUCache extends java.lang.Object implements java.lang.Cloneable
{
    protected int fCurrentSpace;
    protected int fSpaceLimit;
    protected int fTimestampCounter;
    protected java.util.Hashtable fEntryTable;
    protected org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry fEntryQueue;
    protected org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry fEntryQueueTail;
    protected static final int DEFAULT_SPACELIMIT;

    public void <init>()
    {
        org.eclipse.jdt.internal.core.util.LRUCache r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.LRUCache;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.LRUCache: void <init>(int)>(100);

        return;
    }

    public void <init>(int)
    {
        int i0;
        org.eclipse.jdt.internal.core.util.LRUCache r0;
        java.util.Hashtable $r1;

        r0 := @this: org.eclipse.jdt.internal.core.util.LRUCache;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.eclipse.jdt.internal.core.util.LRUCache: int fCurrentSpace> = 0;

        r0.<org.eclipse.jdt.internal.core.util.LRUCache: int fTimestampCounter> = 0;

        r0.<org.eclipse.jdt.internal.core.util.LRUCache: org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry fEntryQueueTail> = null;

        r0.<org.eclipse.jdt.internal.core.util.LRUCache: org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry fEntryQueue> = null;

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>(int)>(i0);

        r0.<org.eclipse.jdt.internal.core.util.LRUCache: java.util.Hashtable fEntryTable> = $r1;

        r0.<org.eclipse.jdt.internal.core.util.LRUCache: int fSpaceLimit> = i0;

        return;
    }

    public java.lang.Object clone()
    {
        org.eclipse.jdt.internal.core.util.LRUCache r0, $r1;
        org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry r4;
        int $i0, $i1;
        java.lang.Object $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.core.util.LRUCache;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.LRUCache: int fSpaceLimit>;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.LRUCache: org.eclipse.jdt.internal.core.util.LRUCache newInstance(int)>($i0);

        r4 = r0.<org.eclipse.jdt.internal.core.util.LRUCache: org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry fEntryQueueTail>;

        goto label2;

     label1:
        $r3 = r4.<org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry: java.lang.Object _fKey>;

        $r2 = r4.<org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry: java.lang.Object _fValue>;

        $i1 = r4.<org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry: int _fSpace>;

        virtualinvoke $r1.<org.eclipse.jdt.internal.core.util.LRUCache: void privateAdd(java.lang.Object,java.lang.Object,int)>($r3, $r2, $i1);

        r4 = r4.<org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry: org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry _fPrevious>;

     label2:
        if r4 != null goto label1;

        return $r1;
    }

    public double fillingRatio()
    {
        org.eclipse.jdt.internal.core.util.LRUCache r0;
        int $i0, $i1;
        double $d0, $d1, $d2, $d3;

        r0 := @this: org.eclipse.jdt.internal.core.util.LRUCache;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.LRUCache: int fCurrentSpace>;

        $d0 = (double) $i0;

        $d2 = $d0 * 100.0;

        $i1 = r0.<org.eclipse.jdt.internal.core.util.LRUCache: int fSpaceLimit>;

        $d1 = (double) $i1;

        $d3 = $d2 / $d1;

        return $d3;
    }

    public void flush()
    {
        org.eclipse.jdt.internal.core.util.LRUCache r0;
        java.util.Hashtable $r1;
        org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry r2;

        r0 := @this: org.eclipse.jdt.internal.core.util.LRUCache;

        r0.<org.eclipse.jdt.internal.core.util.LRUCache: int fCurrentSpace> = 0;

        r2 = r0.<org.eclipse.jdt.internal.core.util.LRUCache: org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry fEntryQueueTail>;

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        r0.<org.eclipse.jdt.internal.core.util.LRUCache: java.util.Hashtable fEntryTable> = $r1;

        r0.<org.eclipse.jdt.internal.core.util.LRUCache: org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry fEntryQueueTail> = null;

        r0.<org.eclipse.jdt.internal.core.util.LRUCache: org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry fEntryQueue> = null;

        goto label2;

     label1:
        r2 = r2.<org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry: org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry _fPrevious>;

     label2:
        if r2 != null goto label1;

        return;
    }

    public void flush(java.lang.Object)
    {
        org.eclipse.jdt.internal.core.util.LRUCache r0;
        org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry r4;
        java.lang.Object r1, $r3;
        java.util.Hashtable $r2;

        r0 := @this: org.eclipse.jdt.internal.core.util.LRUCache;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.eclipse.jdt.internal.core.util.LRUCache: java.util.Hashtable fEntryTable>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry) $r3;

        if r4 != null goto label1;

        return;

     label1:
        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.LRUCache: void privateRemoveEntry(org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry,boolean)>(r4, 0);

        return;
    }

    public java.lang.Object getKey(java.lang.Object)
    {
        org.eclipse.jdt.internal.core.util.LRUCache r0;
        org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry r4;
        java.lang.Object r1, $r3, $r5;
        java.util.Hashtable $r2;

        r0 := @this: org.eclipse.jdt.internal.core.util.LRUCache;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.eclipse.jdt.internal.core.util.LRUCache: java.util.Hashtable fEntryTable>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry) $r3;

        if r4 != null goto label1;

        return r1;

     label1:
        $r5 = r4.<org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry: java.lang.Object _fKey>;

        return $r5;
    }

    public java.lang.Object get(java.lang.Object)
    {
        org.eclipse.jdt.internal.core.util.LRUCache r0;
        org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry r4;
        java.lang.Object r1, $r3, $r5;
        java.util.Hashtable $r2;

        r0 := @this: org.eclipse.jdt.internal.core.util.LRUCache;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.eclipse.jdt.internal.core.util.LRUCache: java.util.Hashtable fEntryTable>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry) $r3;

        if r4 != null goto label1;

        return null;

     label1:
        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.LRUCache: void updateTimestamp(org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry)>(r4);

        $r5 = r4.<org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry: java.lang.Object _fValue>;

        return $r5;
    }

    public int getCurrentSpace()
    {
        int $i0;
        org.eclipse.jdt.internal.core.util.LRUCache r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.LRUCache;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.LRUCache: int fCurrentSpace>;

        return $i0;
    }

    public int getSpaceLimit()
    {
        int $i0;
        org.eclipse.jdt.internal.core.util.LRUCache r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.LRUCache;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.LRUCache: int fSpaceLimit>;

        return $i0;
    }

    public java.util.Enumeration keys()
    {
        org.eclipse.jdt.internal.core.util.LRUCache r0;
        java.util.Enumeration $r2;
        java.util.Hashtable $r1;

        r0 := @this: org.eclipse.jdt.internal.core.util.LRUCache;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.LRUCache: java.util.Hashtable fEntryTable>;

        $r2 = virtualinvoke $r1.<java.util.Hashtable: java.util.Enumeration keys()>();

        return $r2;
    }

    public org.eclipse.jdt.internal.core.util.ICacheEnumeration keysAndValues()
    {
        org.eclipse.jdt.internal.core.util.LRUCache r1;
        org.eclipse.jdt.internal.core.util.LRUCache$1 $r0;

        r1 := @this: org.eclipse.jdt.internal.core.util.LRUCache;

        $r0 = new org.eclipse.jdt.internal.core.util.LRUCache$1;

        specialinvoke $r0.<org.eclipse.jdt.internal.core.util.LRUCache$1: void <init>(org.eclipse.jdt.internal.core.util.LRUCache)>(r1);

        return $r0;
    }

    protected boolean makeSpace(int)
    {
        org.eclipse.jdt.internal.core.util.LRUCache r0;
        org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry $r1, $r2;
        int $i0, i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.eclipse.jdt.internal.core.util.LRUCache;

        i1 := @parameter0: int;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.LRUCache: int getSpaceLimit()>();

        $i2 = r0.<org.eclipse.jdt.internal.core.util.LRUCache: int fCurrentSpace>;

        $i3 = $i2 + i1;

        if $i3 > $i0 goto label1;

        return 1;

     label1:
        if i1 <= $i0 goto label3;

        return 0;

     label2:
        $r2 = r0.<org.eclipse.jdt.internal.core.util.LRUCache: org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry fEntryQueueTail>;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.LRUCache: void privateRemoveEntry(org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry,boolean)>($r2, 0);

     label3:
        $i4 = r0.<org.eclipse.jdt.internal.core.util.LRUCache: int fCurrentSpace>;

        $i5 = $i4 + i1;

        if $i5 <= $i0 goto label4;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.LRUCache: org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry fEntryQueueTail>;

        if $r1 != null goto label2;

     label4:
        return 1;
    }

    protected org.eclipse.jdt.internal.core.util.LRUCache newInstance(int)
    {
        int i0;
        org.eclipse.jdt.internal.core.util.LRUCache $r0, r1;

        r1 := @this: org.eclipse.jdt.internal.core.util.LRUCache;

        i0 := @parameter0: int;

        $r0 = new org.eclipse.jdt.internal.core.util.LRUCache;

        specialinvoke $r0.<org.eclipse.jdt.internal.core.util.LRUCache: void <init>(int)>(i0);

        return $r0;
    }

    public java.lang.Object peek(java.lang.Object)
    {
        org.eclipse.jdt.internal.core.util.LRUCache r0;
        org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry r4;
        java.lang.Object r1, $r3, $r5;
        java.util.Hashtable $r2;

        r0 := @this: org.eclipse.jdt.internal.core.util.LRUCache;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.eclipse.jdt.internal.core.util.LRUCache: java.util.Hashtable fEntryTable>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry) $r3;

        if r4 != null goto label1;

        return null;

     label1:
        $r5 = r4.<org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry: java.lang.Object _fValue>;

        return $r5;
    }

    protected void privateAdd(java.lang.Object, java.lang.Object, int)
    {
        org.eclipse.jdt.internal.core.util.LRUCache r3;
        org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry $r0;
        int i0;
        java.lang.Object r1, r2;

        r3 := @this: org.eclipse.jdt.internal.core.util.LRUCache;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        $r0 = new org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry;

        specialinvoke $r0.<org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry: void <init>(java.lang.Object,java.lang.Object,int)>(r1, r2, i0);

        virtualinvoke r3.<org.eclipse.jdt.internal.core.util.LRUCache: void privateAddEntry(org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry,boolean)>($r0, 0);

        return;
    }

    protected void privateAddEntry(org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry, boolean)
    {
        org.eclipse.jdt.internal.core.util.LRUCache r1;
        org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry r0, $r2, $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object $r5;
        java.util.Hashtable $r6;
        boolean z0;

        r1 := @this: org.eclipse.jdt.internal.core.util.LRUCache;

        r0 := @parameter0: org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry;

        z0 := @parameter1: boolean;

        if z0 != 0 goto label1;

        $r6 = r1.<org.eclipse.jdt.internal.core.util.LRUCache: java.util.Hashtable fEntryTable>;

        $r5 = r0.<org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry: java.lang.Object _fKey>;

        virtualinvoke $r6.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r0);

        $i3 = r1.<org.eclipse.jdt.internal.core.util.LRUCache: int fCurrentSpace>;

        $i2 = r0.<org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry: int _fSpace>;

        $i4 = $i3 + $i2;

        r1.<org.eclipse.jdt.internal.core.util.LRUCache: int fCurrentSpace> = $i4;

     label1:
        $i0 = r1.<org.eclipse.jdt.internal.core.util.LRUCache: int fTimestampCounter>;

        $i1 = $i0 + 1;

        r1.<org.eclipse.jdt.internal.core.util.LRUCache: int fTimestampCounter> = $i1;

        r0.<org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry: int _fTimestamp> = $i0;

        $r2 = r1.<org.eclipse.jdt.internal.core.util.LRUCache: org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry fEntryQueue>;

        r0.<org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry: org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry _fNext> = $r2;

        r0.<org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry: org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry _fPrevious> = null;

        $r3 = r1.<org.eclipse.jdt.internal.core.util.LRUCache: org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry fEntryQueue>;

        if $r3 != null goto label2;

        r1.<org.eclipse.jdt.internal.core.util.LRUCache: org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry fEntryQueueTail> = r0;

        goto label3;

     label2:
        $r4 = r1.<org.eclipse.jdt.internal.core.util.LRUCache: org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry fEntryQueue>;

        $r4.<org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry: org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry _fPrevious> = r0;

     label3:
        r1.<org.eclipse.jdt.internal.core.util.LRUCache: org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry fEntryQueue> = r0;

        return;
    }

    protected void privateRemoveEntry(org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry, boolean)
    {
        org.eclipse.jdt.internal.core.util.LRUCache r3;
        org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry r0, r1, r2;
        int $i0, $i1, $i2;
        java.lang.Object $r4;
        java.util.Hashtable $r5;
        boolean z0;

        r3 := @this: org.eclipse.jdt.internal.core.util.LRUCache;

        r0 := @parameter0: org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry;

        z0 := @parameter1: boolean;

        r1 = r0.<org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry: org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry _fPrevious>;

        r2 = r0.<org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry: org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry _fNext>;

        if z0 != 0 goto label1;

        $r5 = r3.<org.eclipse.jdt.internal.core.util.LRUCache: java.util.Hashtable fEntryTable>;

        $r4 = r0.<org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry: java.lang.Object _fKey>;

        virtualinvoke $r5.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>($r4);

        $i1 = r3.<org.eclipse.jdt.internal.core.util.LRUCache: int fCurrentSpace>;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry: int _fSpace>;

        $i2 = $i1 - $i0;

        r3.<org.eclipse.jdt.internal.core.util.LRUCache: int fCurrentSpace> = $i2;

     label1:
        if r1 != null goto label2;

        r3.<org.eclipse.jdt.internal.core.util.LRUCache: org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry fEntryQueue> = r2;

        goto label3;

     label2:
        r1.<org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry: org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry _fNext> = r2;

     label3:
        if r2 != null goto label4;

        r3.<org.eclipse.jdt.internal.core.util.LRUCache: org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry fEntryQueueTail> = r1;

        goto label5;

     label4:
        r2.<org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry: org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry _fPrevious> = r1;

     label5:
        return;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        org.eclipse.jdt.internal.core.util.LRUCache r0;
        org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry r5;
        int $i0, i1, $i2, $i3, i4, $i5;
        java.lang.Object r1, r2, $r4;
        java.util.Hashtable $r3;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.core.util.LRUCache;

        r2 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.LRUCache: int spaceFor(java.lang.Object)>(r1);

        $r3 = r0.<org.eclipse.jdt.internal.core.util.LRUCache: java.util.Hashtable fEntryTable>;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r2);

        r5 = (org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry) $r4;

        if r5 == null goto label2;

        i1 = r5.<org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry: int _fSpace>;

        $i2 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.LRUCache: int getCurrentSpace()>();

        $i3 = $i2 - i1;

        i4 = $i3 + $i0;

        $i5 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.LRUCache: int getSpaceLimit()>();

        if i4 > $i5 goto label1;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.LRUCache: void updateTimestamp(org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry)>(r5);

        r5.<org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry: java.lang.Object _fValue> = r1;

        r5.<org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry: int _fSpace> = $i0;

        r0.<org.eclipse.jdt.internal.core.util.LRUCache: int fCurrentSpace> = i4;

        return r1;

     label1:
        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.LRUCache: void privateRemoveEntry(org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry,boolean)>(r5, 0);

     label2:
        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.LRUCache: boolean makeSpace(int)>($i0);

        if $z0 == 0 goto label3;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.LRUCache: void privateAdd(java.lang.Object,java.lang.Object,int)>(r2, r1, $i0);

     label3:
        return r1;
    }

    public java.lang.Object removeKey(java.lang.Object)
    {
        org.eclipse.jdt.internal.core.util.LRUCache r0;
        org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry r4;
        java.lang.Object r1, $r3, r5;
        java.util.Hashtable $r2;

        r0 := @this: org.eclipse.jdt.internal.core.util.LRUCache;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.eclipse.jdt.internal.core.util.LRUCache: java.util.Hashtable fEntryTable>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry) $r3;

        if r4 != null goto label1;

        return null;

     label1:
        r5 = r4.<org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry: java.lang.Object _fValue>;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.LRUCache: void privateRemoveEntry(org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry,boolean)>(r4, 0);

        return r5;
    }

    public void setSpaceLimit(int)
    {
        org.eclipse.jdt.internal.core.util.LRUCache r0;
        int i0, $i1, $i2, $i3;

        r0 := @this: org.eclipse.jdt.internal.core.util.LRUCache;

        i0 := @parameter0: int;

        $i1 = r0.<org.eclipse.jdt.internal.core.util.LRUCache: int fSpaceLimit>;

        if i0 >= $i1 goto label1;

        $i2 = r0.<org.eclipse.jdt.internal.core.util.LRUCache: int fSpaceLimit>;

        $i3 = $i2 - i0;

        virtualinvoke r0.<org.eclipse.jdt.internal.core.util.LRUCache: boolean makeSpace(int)>($i3);

     label1:
        r0.<org.eclipse.jdt.internal.core.util.LRUCache: int fSpaceLimit> = i0;

        return;
    }

    protected int spaceFor(java.lang.Object)
    {
        org.eclipse.jdt.internal.core.util.LRUCache r2;
        int $i0;
        java.lang.Object r0;
        org.eclipse.jdt.internal.core.util.ILRUCacheable $r1;
        boolean $z0;

        r2 := @this: org.eclipse.jdt.internal.core.util.LRUCache;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.eclipse.jdt.internal.core.util.ILRUCacheable;

        if $z0 == 0 goto label1;

        $r1 = (org.eclipse.jdt.internal.core.util.ILRUCacheable) r0;

        $i0 = interfaceinvoke $r1.<org.eclipse.jdt.internal.core.util.ILRUCacheable: int getCacheFootprint()>();

        return $i0;

     label1:
        return 1;
    }

    public java.lang.String toString()
    {
        org.eclipse.jdt.internal.core.util.LRUCache r1;
        java.lang.StringBuffer $r0, $r5;
        java.lang.String $r2, $r3, $r4, $r6;

        r1 := @this: org.eclipse.jdt.internal.core.util.LRUCache;

        $r0 = new java.lang.StringBuffer;

        $r2 = virtualinvoke r1.<org.eclipse.jdt.internal.core.util.LRUCache: java.lang.String toStringFillingRation(java.lang.String)>("LRUCache");

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke r1.<org.eclipse.jdt.internal.core.util.LRUCache: java.lang.String toStringContents()>();

        $r5 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    protected java.lang.String toStringContents()
    {
        org.eclipse.jdt.internal.core.util.LRUCache r1;
        org.eclipse.jdt.internal.core.util.ToStringSorter $r8;
        java.lang.Object[] r3, $r11;
        java.util.Enumeration $r5;
        java.lang.String[] r4, $r9;
        java.lang.StringBuffer $r0;
        int $i0, $i1, i2, i3;
        java.lang.String r10, $r14, $r15;
        org.eclipse.jdt.internal.core.JavaElement $r7;
        java.util.Hashtable $r2;
        boolean $z0;
        java.lang.Object $r6, $r12, $r13;

        r1 := @this: org.eclipse.jdt.internal.core.util.LRUCache;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<org.eclipse.jdt.internal.core.util.LRUCache: java.util.Hashtable fEntryTable>;

        $i0 = virtualinvoke $r2.<java.util.Hashtable: int size()>();

        r3 = newarray (java.lang.Object)[$i0];

        r4 = newarray (java.lang.String)[$i0];

        $r5 = virtualinvoke r1.<org.eclipse.jdt.internal.core.util.LRUCache: java.util.Enumeration keys()>();

        i2 = 0;

        goto label4;

     label1:
        $r6 = interfaceinvoke $r5.<java.util.Enumeration: java.lang.Object nextElement()>();

        r3[i2] = $r6;

        $i1 = i2;

        $z0 = $r6 instanceof org.eclipse.jdt.internal.core.JavaElement;

        if $z0 == 0 goto label2;

        $r7 = (org.eclipse.jdt.internal.core.JavaElement) $r6;

        $r15 = virtualinvoke $r7.<org.eclipse.jdt.internal.core.JavaElement: java.lang.String getElementName()>();

        goto label3;

     label2:
        $r15 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

     label3:
        r4[$i1] = $r15;

        i2 = i2 + 1;

     label4:
        if i2 < $i0 goto label1;

        $r8 = new org.eclipse.jdt.internal.core.util.ToStringSorter;

        specialinvoke $r8.<org.eclipse.jdt.internal.core.util.ToStringSorter: void <init>()>();

        virtualinvoke $r8.<org.eclipse.jdt.internal.core.util.ToStringSorter: void sort(java.lang.Object[],java.lang.String[])>(r3, r4);

        i3 = 0;

        goto label6;

     label5:
        $r9 = $r8.<org.eclipse.jdt.internal.core.util.ToStringSorter: java.lang.String[] sortedStrings>;

        r10 = $r9[i3];

        $r11 = $r8.<org.eclipse.jdt.internal.core.util.ToStringSorter: java.lang.Object[] sortedObjects>;

        $r12 = $r11[i3];

        $r13 = virtualinvoke r1.<org.eclipse.jdt.internal.core.util.LRUCache: java.lang.Object get(java.lang.Object)>($r12);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r10);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" -> ");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r13);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        i3 = i3 + 1;

     label6:
        if i3 < $i0 goto label5;

        $r14 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r14;
    }

    public java.lang.String toStringFillingRation(java.lang.String)
    {
        org.eclipse.jdt.internal.core.util.LRUCache r2;
        java.text.NumberFormat $r3;
        java.lang.StringBuffer $r0;
        int $i0;
        java.lang.String r1, $r4, $r5;
        double $d0;

        r2 := @this: org.eclipse.jdt.internal.core.util.LRUCache;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>(r1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(91);

        $i0 = virtualinvoke r2.<org.eclipse.jdt.internal.core.util.LRUCache: int getSpaceLimit()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]: ");

        $r3 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance()>();

        $d0 = virtualinvoke r2.<org.eclipse.jdt.internal.core.util.LRUCache: double fillingRatio()>();

        $r4 = virtualinvoke $r3.<java.text.NumberFormat: java.lang.String format(double)>($d0);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("% full");

        $r5 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    protected void updateTimestamp(org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry)
    {
        org.eclipse.jdt.internal.core.util.LRUCache r1;
        org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry r0, $r2;
        int $i0, $i1;

        r1 := @this: org.eclipse.jdt.internal.core.util.LRUCache;

        r0 := @parameter0: org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry;

        $i0 = r1.<org.eclipse.jdt.internal.core.util.LRUCache: int fTimestampCounter>;

        $i1 = $i0 + 1;

        r1.<org.eclipse.jdt.internal.core.util.LRUCache: int fTimestampCounter> = $i1;

        r0.<org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry: int _fTimestamp> = $i0;

        $r2 = r1.<org.eclipse.jdt.internal.core.util.LRUCache: org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry fEntryQueue>;

        if $r2 == r0 goto label1;

        virtualinvoke r1.<org.eclipse.jdt.internal.core.util.LRUCache: void privateRemoveEntry(org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry,boolean)>(r0, 1);

        virtualinvoke r1.<org.eclipse.jdt.internal.core.util.LRUCache: void privateAddEntry(org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry,boolean)>(r0, 1);

     label1:
        return;
    }

    public static void <clinit>()
    {
        <org.eclipse.jdt.internal.core.util.LRUCache: int DEFAULT_SPACELIMIT> = 100;

        return;
    }
}
