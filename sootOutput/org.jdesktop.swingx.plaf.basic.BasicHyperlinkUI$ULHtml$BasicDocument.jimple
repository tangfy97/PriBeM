class org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$BasicDocument extends javax.swing.text.html.HTMLDocument
{
    private static java.lang.Class clz;
    private static java.lang.reflect.Method displayPropertiesToCSS;

    private static java.lang.String displayPropertiesToCSS(java.awt.Font, java.awt.Color)
    {
        java.awt.Color r2;
        java.lang.Object[] $r0;
        java.awt.Font r1;
        java.lang.RuntimeException $r7;
        java.lang.Exception $r6;
        java.lang.Object $r4;
        java.lang.String $r5;
        java.lang.reflect.Method $r3;

        r1 := @parameter0: java.awt.Font;

        r2 := @parameter1: java.awt.Color;

     label1:
        $r3 = <org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$BasicDocument: java.lang.reflect.Method displayPropertiesToCSS>;

        $r0 = newarray (java.lang.Object)[2];

        $r0[0] = r1;

        $r0[1] = r2;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r0);

        $r5 = (java.lang.String) $r4;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    void <init>(javax.swing.text.html.StyleSheet, java.awt.Font, java.awt.Color)
    {
        java.awt.Color r3;
        javax.swing.text.html.StyleSheet r1;
        java.awt.Font r2;
        org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$BasicDocument r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$BasicDocument;

        r1 := @parameter0: javax.swing.text.html.StyleSheet;

        r2 := @parameter1: java.awt.Font;

        r3 := @parameter2: java.awt.Color;

        specialinvoke r0.<javax.swing.text.html.HTMLDocument: void <init>(javax.swing.text.html.StyleSheet)>(r1);

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$BasicDocument: void setPreservesUnknownTags(boolean)>(0);

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$BasicDocument: void setFontAndColor(java.awt.Font,java.awt.Color)>(r2, r3);

        return;
    }

    private void setFontAndColor(java.awt.Font, java.awt.Color)
    {
        java.awt.Color r3;
        javax.swing.text.html.StyleSheet $r1;
        java.awt.Font r2;
        java.lang.String $r4;
        org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$BasicDocument r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$BasicDocument;

        r2 := @parameter0: java.awt.Font;

        r3 := @parameter1: java.awt.Color;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$BasicDocument: javax.swing.text.html.StyleSheet getStyleSheet()>();

        $r4 = staticinvoke <org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$BasicDocument: java.lang.String displayPropertiesToCSS(java.awt.Font,java.awt.Color)>(r2, r3);

        virtualinvoke $r1.<javax.swing.text.html.StyleSheet: void addRule(java.lang.String)>($r4);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class[] $r1;
        java.lang.RuntimeException $r5, $r7;
        java.lang.Exception $r4;
        java.lang.Class $r0, $r2, $r9;
        java.lang.ClassNotFoundException $r6, $r8;
        java.lang.reflect.Method $r3;

     label01:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("sun.swing.SwingUtilities2");

        <org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$BasicDocument: java.lang.Class clz> = $r0;

     label02:
        goto label07;

     label03:
        $r8 := @caughtexception;

     label04:
        $r9 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.sun.java.swing.SwingUtilities2");

        <org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$BasicDocument: java.lang.Class clz> = $r9;

     label05:
        goto label07;

     label06:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>("Failed to find SwingUtilities2. Check the classpath.");

        throw $r7;

     label07:
        $r2 = <org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$BasicDocument: java.lang.Class clz>;

        $r1 = newarray (java.lang.Class)[2];

        $r1[0] = class "Ljava/awt/Font;";

        $r1[1] = class "Ljava/awt/Color;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("displayPropertiesToCSS", $r1);

        <org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$BasicDocument: java.lang.reflect.Method displayPropertiesToCSS> = $r3;

     label08:
        goto label10;

     label09:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Failed to use SwingUtilities2. Check the permissions and class version.");

        throw $r5;

     label10:
        return;

        catch java.lang.ClassNotFoundException from label01 to label02 with label03;
        catch java.lang.ClassNotFoundException from label04 to label05 with label06;
        catch java.lang.Exception from label07 to label08 with label09;
    }
}
