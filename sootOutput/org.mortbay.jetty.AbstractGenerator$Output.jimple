public class org.mortbay.jetty.AbstractGenerator$Output extends javax.servlet.ServletOutputStream
{
    protected org.mortbay.jetty.AbstractGenerator _generator;
    protected long _maxIdleTime;
    protected org.mortbay.io.ByteArrayBuffer _buf;
    protected boolean _closed;
    java.lang.String _characterEncoding;
    java.io.Writer _converter;
    char[] _chars;
    org.mortbay.util.ByteArrayOutputStream2 _bytes;

    public void <init>(org.mortbay.jetty.AbstractGenerator, long)
    {
        byte[] $r2;
        org.mortbay.jetty.AbstractGenerator$Output r0;
        long l0;
        org.mortbay.io.ByteArrayBuffer $r1;
        org.mortbay.jetty.AbstractGenerator r3;

        r0 := @this: org.mortbay.jetty.AbstractGenerator$Output;

        r3 := @parameter0: org.mortbay.jetty.AbstractGenerator;

        l0 := @parameter1: long;

        specialinvoke r0.<javax.servlet.ServletOutputStream: void <init>()>();

        $r1 = new org.mortbay.io.ByteArrayBuffer;

        $r2 = staticinvoke <org.mortbay.jetty.AbstractGenerator: byte[] access$000()>();

        specialinvoke $r1.<org.mortbay.io.ByteArrayBuffer: void <init>(byte[])>($r2);

        r0.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.io.ByteArrayBuffer _buf> = $r1;

        r0.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.jetty.AbstractGenerator _generator> = r3;

        r0.<org.mortbay.jetty.AbstractGenerator$Output: long _maxIdleTime> = l0;

        return;
    }

    public void close() throws java.io.IOException
    {
        org.mortbay.jetty.AbstractGenerator$Output r0;

        r0 := @this: org.mortbay.jetty.AbstractGenerator$Output;

        r0.<org.mortbay.jetty.AbstractGenerator$Output: boolean _closed> = 1;

        return;
    }

    void blockForOutput() throws java.io.IOException
    {
        org.mortbay.jetty.EofException $r8;
        org.mortbay.jetty.AbstractGenerator$Output r0;
        long $l0;
        java.io.IOException $r9;
        org.mortbay.io.EndPoint $r2, $r4, $r7, $r11;
        org.mortbay.jetty.AbstractGenerator $r1, $r3, $r5, $r6, $r10;
        boolean $z0, $z1;

        r0 := @this: org.mortbay.jetty.AbstractGenerator$Output;

        $r1 = r0.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.jetty.AbstractGenerator _generator>;

        $r2 = $r1.<org.mortbay.jetty.AbstractGenerator: org.mortbay.io.EndPoint _endp>;

        $z0 = interfaceinvoke $r2.<org.mortbay.io.EndPoint: boolean isBlocking()>();

        if $z0 == 0 goto label4;

     label1:
        virtualinvoke r0.<org.mortbay.jetty.AbstractGenerator$Output: void flush()>();

     label2:
        goto label6;

     label3:
        $r9 := @caughtexception;

        $r10 = r0.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.jetty.AbstractGenerator _generator>;

        $r11 = $r10.<org.mortbay.jetty.AbstractGenerator: org.mortbay.io.EndPoint _endp>;

        interfaceinvoke $r11.<org.mortbay.io.EndPoint: void close()>();

        throw $r9;

     label4:
        $r3 = r0.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.jetty.AbstractGenerator _generator>;

        $r4 = $r3.<org.mortbay.jetty.AbstractGenerator: org.mortbay.io.EndPoint _endp>;

        $l0 = r0.<org.mortbay.jetty.AbstractGenerator$Output: long _maxIdleTime>;

        $z1 = interfaceinvoke $r4.<org.mortbay.io.EndPoint: boolean blockWritable(long)>($l0);

        if $z1 != 0 goto label5;

        $r6 = r0.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.jetty.AbstractGenerator _generator>;

        $r7 = $r6.<org.mortbay.jetty.AbstractGenerator: org.mortbay.io.EndPoint _endp>;

        interfaceinvoke $r7.<org.mortbay.io.EndPoint: void close()>();

        $r8 = new org.mortbay.jetty.EofException;

        specialinvoke $r8.<org.mortbay.jetty.EofException: void <init>(java.lang.String)>("timeout");

        throw $r8;

     label5:
        $r5 = r0.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.jetty.AbstractGenerator _generator>;

        virtualinvoke $r5.<org.mortbay.jetty.AbstractGenerator: long flush()>();

     label6:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    void reopen()
    {
        org.mortbay.jetty.AbstractGenerator$Output r0;

        r0 := @this: org.mortbay.jetty.AbstractGenerator$Output;

        r0.<org.mortbay.jetty.AbstractGenerator$Output: boolean _closed> = 0;

        return;
    }

    public void flush() throws java.io.IOException
    {
        org.mortbay.io.Buffer r2, r4;
        org.mortbay.jetty.AbstractGenerator$Output r0;
        org.mortbay.io.EndPoint $r7;
        int $i0, $i1, $i2, $i3;
        org.mortbay.jetty.AbstractGenerator $r1, $r3, $r5, $r6, $r8;
        boolean $z0, $z1;

        r0 := @this: org.mortbay.jetty.AbstractGenerator$Output;

        $r1 = r0.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.jetty.AbstractGenerator _generator>;

        r2 = $r1.<org.mortbay.jetty.AbstractGenerator: org.mortbay.io.Buffer _content>;

        $r3 = r0.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.jetty.AbstractGenerator _generator>;

        r4 = $r3.<org.mortbay.jetty.AbstractGenerator: org.mortbay.io.Buffer _buffer>;

        if r2 == null goto label1;

        $i3 = interfaceinvoke r2.<org.mortbay.io.Buffer: int length()>();

        if $i3 > 0 goto label3;

     label1:
        if r4 == null goto label2;

        $i2 = interfaceinvoke r4.<org.mortbay.io.Buffer: int length()>();

        if $i2 > 0 goto label3;

     label2:
        $r5 = r0.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.jetty.AbstractGenerator _generator>;

        $z0 = virtualinvoke $r5.<org.mortbay.jetty.AbstractGenerator: boolean isBufferFull()>();

        if $z0 == 0 goto label7;

     label3:
        $r8 = r0.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.jetty.AbstractGenerator _generator>;

        virtualinvoke $r8.<org.mortbay.jetty.AbstractGenerator: long flush()>();

     label4:
        if r2 == null goto label5;

        $i1 = interfaceinvoke r2.<org.mortbay.io.Buffer: int length()>();

        if $i1 > 0 goto label6;

     label5:
        if r4 == null goto label7;

        $i0 = interfaceinvoke r4.<org.mortbay.io.Buffer: int length()>();

        if $i0 <= 0 goto label7;

     label6:
        $r6 = r0.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.jetty.AbstractGenerator _generator>;

        $r7 = $r6.<org.mortbay.jetty.AbstractGenerator: org.mortbay.io.EndPoint _endp>;

        $z1 = interfaceinvoke $r7.<org.mortbay.io.EndPoint: boolean isOpen()>();

        if $z1 == 0 goto label7;

        virtualinvoke r0.<org.mortbay.jetty.AbstractGenerator$Output: void blockForOutput()>();

        goto label4;

     label7:
        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        byte[] r1, $r5;
        org.mortbay.jetty.AbstractGenerator$Output r0;
        int i0, i1;
        org.mortbay.io.ByteArrayBuffer $r2, $r3, $r4;

        r0 := @this: org.mortbay.jetty.AbstractGenerator$Output;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.io.ByteArrayBuffer _buf>;

        virtualinvoke $r2.<org.mortbay.io.ByteArrayBuffer: void wrap(byte[],int,int)>(r1, i0, i1);

        $r3 = r0.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.io.ByteArrayBuffer _buf>;

        specialinvoke r0.<org.mortbay.jetty.AbstractGenerator$Output: void write(org.mortbay.io.Buffer)>($r3);

        $r4 = r0.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.io.ByteArrayBuffer _buf>;

        $r5 = staticinvoke <org.mortbay.jetty.AbstractGenerator: byte[] access$000()>();

        virtualinvoke $r4.<org.mortbay.io.ByteArrayBuffer: void wrap(byte[])>($r5);

        return;
    }

    public void write(byte[]) throws java.io.IOException
    {
        byte[] r1, $r5;
        org.mortbay.jetty.AbstractGenerator$Output r0;
        org.mortbay.io.ByteArrayBuffer $r2, $r3, $r4;

        r0 := @this: org.mortbay.jetty.AbstractGenerator$Output;

        r1 := @parameter0: byte[];

        $r2 = r0.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.io.ByteArrayBuffer _buf>;

        virtualinvoke $r2.<org.mortbay.io.ByteArrayBuffer: void wrap(byte[])>(r1);

        $r3 = r0.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.io.ByteArrayBuffer _buf>;

        specialinvoke r0.<org.mortbay.jetty.AbstractGenerator$Output: void write(org.mortbay.io.Buffer)>($r3);

        $r4 = r0.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.io.ByteArrayBuffer _buf>;

        $r5 = staticinvoke <org.mortbay.jetty.AbstractGenerator: byte[] access$000()>();

        virtualinvoke $r4.<org.mortbay.io.ByteArrayBuffer: void wrap(byte[])>($r5);

        return;
    }

    public void write(int) throws java.io.IOException
    {
        org.mortbay.jetty.EofException $r8, $r10;
        org.mortbay.jetty.AbstractGenerator$Output r0;
        byte $b1;
        int i0;
        org.mortbay.jetty.AbstractGenerator $r1, $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.io.IOException $r9, $r11;
        org.mortbay.io.EndPoint $r2, $r7;

        r0 := @this: org.mortbay.jetty.AbstractGenerator$Output;

        i0 := @parameter0: int;

        $z0 = r0.<org.mortbay.jetty.AbstractGenerator$Output: boolean _closed>;

        if $z0 == 0 goto label1;

        $r11 = new java.io.IOException;

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>("Closed");

        throw $r11;

     label1:
        $r1 = r0.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.jetty.AbstractGenerator _generator>;

        $r2 = $r1.<org.mortbay.jetty.AbstractGenerator: org.mortbay.io.EndPoint _endp>;

        $z1 = interfaceinvoke $r2.<org.mortbay.io.EndPoint: boolean isOpen()>();

        if $z1 != 0 goto label2;

        $r10 = new org.mortbay.jetty.EofException;

        specialinvoke $r10.<org.mortbay.jetty.EofException: void <init>()>();

        throw $r10;

     label2:
        $r3 = r0.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.jetty.AbstractGenerator _generator>;

        $z2 = virtualinvoke $r3.<org.mortbay.jetty.AbstractGenerator: boolean isBufferFull()>();

        if $z2 == 0 goto label4;

        virtualinvoke r0.<org.mortbay.jetty.AbstractGenerator$Output: void blockForOutput()>();

        $z5 = r0.<org.mortbay.jetty.AbstractGenerator$Output: boolean _closed>;

        if $z5 == 0 goto label3;

        $r9 = new java.io.IOException;

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>("Closed");

        throw $r9;

     label3:
        $r6 = r0.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.jetty.AbstractGenerator _generator>;

        $r7 = $r6.<org.mortbay.jetty.AbstractGenerator: org.mortbay.io.EndPoint _endp>;

        $z6 = interfaceinvoke $r7.<org.mortbay.io.EndPoint: boolean isOpen()>();

        if $z6 != 0 goto label2;

        $r8 = new org.mortbay.jetty.EofException;

        specialinvoke $r8.<org.mortbay.jetty.EofException: void <init>()>();

        throw $r8;

     label4:
        $r4 = r0.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.jetty.AbstractGenerator _generator>;

        $b1 = (byte) i0;

        $z3 = virtualinvoke $r4.<org.mortbay.jetty.AbstractGenerator: boolean addContent(byte)>($b1);

        if $z3 == 0 goto label5;

        virtualinvoke r0.<org.mortbay.jetty.AbstractGenerator$Output: void flush()>();

     label5:
        $r5 = r0.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.jetty.AbstractGenerator _generator>;

        $z4 = virtualinvoke $r5.<org.mortbay.jetty.AbstractGenerator: boolean isContentWritten()>();

        if $z4 == 0 goto label6;

        virtualinvoke r0.<org.mortbay.jetty.AbstractGenerator$Output: void flush()>();

        virtualinvoke r0.<org.mortbay.jetty.AbstractGenerator$Output: void close()>();

     label6:
        return;
    }

    private void write(org.mortbay.io.Buffer) throws java.io.IOException
    {
        org.mortbay.jetty.EofException $r12, $r14;
        org.mortbay.jetty.AbstractGenerator$Output r0;
        int $i0;
        org.mortbay.jetty.AbstractGenerator $r1, $r3, $r5, $r6, $r7, $r8, $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.mortbay.io.Buffer r4;
        java.io.IOException $r13, $r15;
        org.mortbay.io.EndPoint $r2, $r9, $r11;

        r0 := @this: org.mortbay.jetty.AbstractGenerator$Output;

        r4 := @parameter0: org.mortbay.io.Buffer;

        $z0 = r0.<org.mortbay.jetty.AbstractGenerator$Output: boolean _closed>;

        if $z0 == 0 goto label1;

        $r15 = new java.io.IOException;

        specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>("Closed");

        throw $r15;

     label1:
        $r1 = r0.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.jetty.AbstractGenerator _generator>;

        $r2 = $r1.<org.mortbay.jetty.AbstractGenerator: org.mortbay.io.EndPoint _endp>;

        $z1 = interfaceinvoke $r2.<org.mortbay.io.EndPoint: boolean isOpen()>();

        if $z1 != 0 goto label2;

        $r14 = new org.mortbay.jetty.EofException;

        specialinvoke $r14.<org.mortbay.jetty.EofException: void <init>()>();

        throw $r14;

     label2:
        $r3 = r0.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.jetty.AbstractGenerator _generator>;

        $z2 = virtualinvoke $r3.<org.mortbay.jetty.AbstractGenerator: boolean isBufferFull()>();

        if $z2 == 0 goto label4;

        virtualinvoke r0.<org.mortbay.jetty.AbstractGenerator$Output: void blockForOutput()>();

        $z6 = r0.<org.mortbay.jetty.AbstractGenerator$Output: boolean _closed>;

        if $z6 == 0 goto label3;

        $r13 = new java.io.IOException;

        specialinvoke $r13.<java.io.IOException: void <init>(java.lang.String)>("Closed");

        throw $r13;

     label3:
        $r10 = r0.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.jetty.AbstractGenerator _generator>;

        $r11 = $r10.<org.mortbay.jetty.AbstractGenerator: org.mortbay.io.EndPoint _endp>;

        $z7 = interfaceinvoke $r11.<org.mortbay.io.EndPoint: boolean isOpen()>();

        if $z7 != 0 goto label2;

        $r12 = new org.mortbay.jetty.EofException;

        specialinvoke $r12.<org.mortbay.jetty.EofException: void <init>()>();

        throw $r12;

     label4:
        $r5 = r0.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.jetty.AbstractGenerator _generator>;

        virtualinvoke $r5.<org.mortbay.jetty.AbstractGenerator: void addContent(org.mortbay.io.Buffer,boolean)>(r4, 0);

        $r6 = r0.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.jetty.AbstractGenerator _generator>;

        $z3 = virtualinvoke $r6.<org.mortbay.jetty.AbstractGenerator: boolean isBufferFull()>();

        if $z3 == 0 goto label5;

        virtualinvoke r0.<org.mortbay.jetty.AbstractGenerator$Output: void flush()>();

     label5:
        $r7 = r0.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.jetty.AbstractGenerator _generator>;

        $z4 = virtualinvoke $r7.<org.mortbay.jetty.AbstractGenerator: boolean isContentWritten()>();

        if $z4 == 0 goto label6;

        virtualinvoke r0.<org.mortbay.jetty.AbstractGenerator$Output: void flush()>();

        virtualinvoke r0.<org.mortbay.jetty.AbstractGenerator$Output: void close()>();

     label6:
        $i0 = interfaceinvoke r4.<org.mortbay.io.Buffer: int length()>();

        if $i0 <= 0 goto label7;

        $r8 = r0.<org.mortbay.jetty.AbstractGenerator$Output: org.mortbay.jetty.AbstractGenerator _generator>;

        $r9 = $r8.<org.mortbay.jetty.AbstractGenerator: org.mortbay.io.EndPoint _endp>;

        $z5 = interfaceinvoke $r9.<org.mortbay.io.EndPoint: boolean isOpen()>();

        if $z5 == 0 goto label7;

        virtualinvoke r0.<org.mortbay.jetty.AbstractGenerator$Output: void blockForOutput()>();

        goto label6;

     label7:
        return;
    }

    public void print(java.lang.String) throws java.io.IOException
    {
        byte[] $r2;
        java.lang.String r1;
        org.mortbay.jetty.AbstractGenerator$Output r0;

        r0 := @this: org.mortbay.jetty.AbstractGenerator$Output;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r0.<org.mortbay.jetty.AbstractGenerator$Output: void write(byte[])>($r2);

        return;
    }
}
