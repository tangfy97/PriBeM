final class org.apache.lucene.search.ConstantScoreAutoRewrite$TermStateByteStart extends org.apache.lucene.util.BytesRefHash$DirectBytesStartArray
{
    org.apache.lucene.index.TermContext[] termState;
    static final boolean $assertionsDisabled;

    public void <init>(int)
    {
        int i0;
        org.apache.lucene.search.ConstantScoreAutoRewrite$TermStateByteStart r0;

        r0 := @this: org.apache.lucene.search.ConstantScoreAutoRewrite$TermStateByteStart;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.lucene.util.BytesRefHash$DirectBytesStartArray: void <init>(int)>(i0);

        return;
    }

    public int[] init()
    {
        java.lang.AssertionError $r4;
        org.apache.lucene.search.ConstantScoreAutoRewrite$TermStateByteStart r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4;
        org.apache.lucene.index.TermContext[] $r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.lucene.search.ConstantScoreAutoRewrite$TermStateByteStart;

        $r1 = specialinvoke r0.<org.apache.lucene.util.BytesRefHash$DirectBytesStartArray: int[] init()>();

        $i1 = lengthof $r1;

        $i0 = <org.apache.lucene.util.RamUsageEstimator: int NUM_BYTES_OBJECT_REF>;

        $i2 = staticinvoke <org.apache.lucene.util.ArrayUtil: int oversize(int,int)>($i1, $i0);

        $r2 = newarray (org.apache.lucene.index.TermContext)[$i2];

        r0.<org.apache.lucene.search.ConstantScoreAutoRewrite$TermStateByteStart: org.apache.lucene.index.TermContext[] termState> = $r2;

        $z0 = <org.apache.lucene.search.ConstantScoreAutoRewrite$TermStateByteStart: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r3 = r0.<org.apache.lucene.search.ConstantScoreAutoRewrite$TermStateByteStart: org.apache.lucene.index.TermContext[] termState>;

        $i4 = lengthof $r3;

        $i3 = lengthof $r1;

        if $i4 >= $i3 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        return $r1;
    }

    public int[] grow()
    {
        java.lang.AssertionError $r4;
        org.apache.lucene.search.ConstantScoreAutoRewrite$TermStateByteStart r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;
        org.apache.lucene.index.TermContext[] $r2, $r3, r5, $r6, $r7;

        r0 := @this: org.apache.lucene.search.ConstantScoreAutoRewrite$TermStateByteStart;

        $r1 = specialinvoke r0.<org.apache.lucene.util.BytesRefHash$DirectBytesStartArray: int[] grow()>();

        $r2 = r0.<org.apache.lucene.search.ConstantScoreAutoRewrite$TermStateByteStart: org.apache.lucene.index.TermContext[] termState>;

        $i1 = lengthof $r2;

        $i0 = lengthof $r1;

        if $i1 >= $i0 goto label1;

        $i5 = lengthof $r1;

        $i4 = <org.apache.lucene.util.RamUsageEstimator: int NUM_BYTES_OBJECT_REF>;

        $i6 = staticinvoke <org.apache.lucene.util.ArrayUtil: int oversize(int,int)>($i5, $i4);

        r5 = newarray (org.apache.lucene.index.TermContext)[$i6];

        $r7 = r0.<org.apache.lucene.search.ConstantScoreAutoRewrite$TermStateByteStart: org.apache.lucene.index.TermContext[] termState>;

        $r6 = r0.<org.apache.lucene.search.ConstantScoreAutoRewrite$TermStateByteStart: org.apache.lucene.index.TermContext[] termState>;

        $i7 = lengthof $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, r5, 0, $i7);

        r0.<org.apache.lucene.search.ConstantScoreAutoRewrite$TermStateByteStart: org.apache.lucene.index.TermContext[] termState> = r5;

     label1:
        $z0 = <org.apache.lucene.search.ConstantScoreAutoRewrite$TermStateByteStart: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $r3 = r0.<org.apache.lucene.search.ConstantScoreAutoRewrite$TermStateByteStart: org.apache.lucene.index.TermContext[] termState>;

        $i3 = lengthof $r3;

        $i2 = lengthof $r1;

        if $i3 >= $i2 goto label2;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label2:
        return $r1;
    }

    public int[] clear()
    {
        org.apache.lucene.search.ConstantScoreAutoRewrite$TermStateByteStart r0;
        int[] $r1;

        r0 := @this: org.apache.lucene.search.ConstantScoreAutoRewrite$TermStateByteStart;

        r0.<org.apache.lucene.search.ConstantScoreAutoRewrite$TermStateByteStart: org.apache.lucene.index.TermContext[] termState> = null;

        $r1 = specialinvoke r0.<org.apache.lucene.util.BytesRefHash$DirectBytesStartArray: int[] clear()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/search/ConstantScoreAutoRewrite;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.search.ConstantScoreAutoRewrite$TermStateByteStart: boolean $assertionsDisabled> = $z1;

        return;
    }
}
