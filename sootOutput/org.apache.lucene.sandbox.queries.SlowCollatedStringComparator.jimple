public final class org.apache.lucene.sandbox.queries.SlowCollatedStringComparator extends org.apache.lucene.search.FieldComparator
{
    private final java.lang.String[] values;
    private org.apache.lucene.index.BinaryDocValues currentDocTerms;
    private final java.lang.String field;
    final java.text.Collator collator;
    private java.lang.String bottom;
    private final org.apache.lucene.util.BytesRef tempBR;

    public void <init>(int, java.lang.String, java.text.Collator)
    {
        org.apache.lucene.sandbox.queries.SlowCollatedStringComparator r0;
        org.apache.lucene.util.BytesRef $r1;
        int i0;
        java.lang.String[] $r2;
        java.lang.String r3;
        java.text.Collator r4;

        r0 := @this: org.apache.lucene.sandbox.queries.SlowCollatedStringComparator;

        i0 := @parameter0: int;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.text.Collator;

        specialinvoke r0.<org.apache.lucene.search.FieldComparator: void <init>()>();

        $r1 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r1.<org.apache.lucene.util.BytesRef: void <init>()>();

        r0.<org.apache.lucene.sandbox.queries.SlowCollatedStringComparator: org.apache.lucene.util.BytesRef tempBR> = $r1;

        $r2 = newarray (java.lang.String)[i0];

        r0.<org.apache.lucene.sandbox.queries.SlowCollatedStringComparator: java.lang.String[] values> = $r2;

        r0.<org.apache.lucene.sandbox.queries.SlowCollatedStringComparator: java.lang.String field> = r3;

        r0.<org.apache.lucene.sandbox.queries.SlowCollatedStringComparator: java.text.Collator collator> = r4;

        return;
    }

    public int compare(int, int)
    {
        org.apache.lucene.sandbox.queries.SlowCollatedStringComparator r0;
        java.lang.String[] $r1, $r3;
        int i0, i1, $i2, $i4;
        java.lang.String r2, r4;
        java.text.Collator $r5;

        r0 := @this: org.apache.lucene.sandbox.queries.SlowCollatedStringComparator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.lucene.sandbox.queries.SlowCollatedStringComparator: java.lang.String[] values>;

        r2 = $r1[i0];

        $r3 = r0.<org.apache.lucene.sandbox.queries.SlowCollatedStringComparator: java.lang.String[] values>;

        r4 = $r3[i1];

        if r2 != null goto label2;

        if r4 != null goto label1;

        return 0;

     label1:
        $i4 = (int) -1;

        return $i4;

     label2:
        if r4 != null goto label3;

        return 1;

     label3:
        $r5 = r0.<org.apache.lucene.sandbox.queries.SlowCollatedStringComparator: java.text.Collator collator>;

        $i2 = virtualinvoke $r5.<java.text.Collator: int compare(java.lang.String,java.lang.String)>(r2, r4);

        return $i2;
    }

    public int compareBottom(int)
    {
        byte[] $r4, $r5;
        org.apache.lucene.sandbox.queries.SlowCollatedStringComparator r0;
        org.apache.lucene.util.BytesRef $r1, $r3, $r6;
        int i0, $i1, $i3;
        java.lang.String $r7, $r8, $r10;
        org.apache.lucene.index.BinaryDocValues $r2;
        java.text.Collator $r9;

        r0 := @this: org.apache.lucene.sandbox.queries.SlowCollatedStringComparator;

        i0 := @parameter0: int;

        $r2 = r0.<org.apache.lucene.sandbox.queries.SlowCollatedStringComparator: org.apache.lucene.index.BinaryDocValues currentDocTerms>;

        $r1 = r0.<org.apache.lucene.sandbox.queries.SlowCollatedStringComparator: org.apache.lucene.util.BytesRef tempBR>;

        virtualinvoke $r2.<org.apache.lucene.index.BinaryDocValues: void get(int,org.apache.lucene.util.BytesRef)>(i0, $r1);

        $r3 = r0.<org.apache.lucene.sandbox.queries.SlowCollatedStringComparator: org.apache.lucene.util.BytesRef tempBR>;

        $r5 = $r3.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $r4 = <org.apache.lucene.index.BinaryDocValues: byte[] MISSING>;

        if $r5 != $r4 goto label1;

        $r10 = null;

        goto label2;

     label1:
        $r6 = r0.<org.apache.lucene.sandbox.queries.SlowCollatedStringComparator: org.apache.lucene.util.BytesRef tempBR>;

        $r10 = virtualinvoke $r6.<org.apache.lucene.util.BytesRef: java.lang.String utf8ToString()>();

     label2:
        $r7 = r0.<org.apache.lucene.sandbox.queries.SlowCollatedStringComparator: java.lang.String bottom>;

        if $r7 != null goto label4;

        if $r10 != null goto label3;

        return 0;

     label3:
        $i3 = (int) -1;

        return $i3;

     label4:
        if $r10 != null goto label5;

        return 1;

     label5:
        $r9 = r0.<org.apache.lucene.sandbox.queries.SlowCollatedStringComparator: java.text.Collator collator>;

        $r8 = r0.<org.apache.lucene.sandbox.queries.SlowCollatedStringComparator: java.lang.String bottom>;

        $i1 = virtualinvoke $r9.<java.text.Collator: int compare(java.lang.String,java.lang.String)>($r8, $r10);

        return $i1;
    }

    public void copy(int, int)
    {
        byte[] $r4, $r5;
        org.apache.lucene.sandbox.queries.SlowCollatedStringComparator r0;
        org.apache.lucene.util.BytesRef $r1, $r3, $r6;
        java.lang.String[] $r7, $r9;
        int i0, i1;
        java.lang.String $r8;
        org.apache.lucene.index.BinaryDocValues $r2;

        r0 := @this: org.apache.lucene.sandbox.queries.SlowCollatedStringComparator;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.lucene.sandbox.queries.SlowCollatedStringComparator: org.apache.lucene.index.BinaryDocValues currentDocTerms>;

        $r1 = r0.<org.apache.lucene.sandbox.queries.SlowCollatedStringComparator: org.apache.lucene.util.BytesRef tempBR>;

        virtualinvoke $r2.<org.apache.lucene.index.BinaryDocValues: void get(int,org.apache.lucene.util.BytesRef)>(i0, $r1);

        $r3 = r0.<org.apache.lucene.sandbox.queries.SlowCollatedStringComparator: org.apache.lucene.util.BytesRef tempBR>;

        $r5 = $r3.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $r4 = <org.apache.lucene.index.BinaryDocValues: byte[] MISSING>;

        if $r5 != $r4 goto label1;

        $r9 = r0.<org.apache.lucene.sandbox.queries.SlowCollatedStringComparator: java.lang.String[] values>;

        $r9[i1] = null;

        goto label2;

     label1:
        $r7 = r0.<org.apache.lucene.sandbox.queries.SlowCollatedStringComparator: java.lang.String[] values>;

        $r6 = r0.<org.apache.lucene.sandbox.queries.SlowCollatedStringComparator: org.apache.lucene.util.BytesRef tempBR>;

        $r8 = virtualinvoke $r6.<org.apache.lucene.util.BytesRef: java.lang.String utf8ToString()>();

        $r7[i1] = $r8;

     label2:
        return;
    }

    public org.apache.lucene.search.FieldComparator setNextReader(org.apache.lucene.index.AtomicReaderContext) throws java.io.IOException
    {
        org.apache.lucene.sandbox.queries.SlowCollatedStringComparator r0;
        org.apache.lucene.search.FieldCache $r2;
        java.lang.String $r4;
        org.apache.lucene.index.BinaryDocValues $r5;
        org.apache.lucene.index.AtomicReaderContext r1;
        org.apache.lucene.index.AtomicReader $r3;

        r0 := @this: org.apache.lucene.sandbox.queries.SlowCollatedStringComparator;

        r1 := @parameter0: org.apache.lucene.index.AtomicReaderContext;

        $r2 = <org.apache.lucene.search.FieldCache: org.apache.lucene.search.FieldCache DEFAULT>;

        $r3 = virtualinvoke r1.<org.apache.lucene.index.AtomicReaderContext: org.apache.lucene.index.AtomicReader reader()>();

        $r4 = r0.<org.apache.lucene.sandbox.queries.SlowCollatedStringComparator: java.lang.String field>;

        $r5 = interfaceinvoke $r2.<org.apache.lucene.search.FieldCache: org.apache.lucene.index.BinaryDocValues getTerms(org.apache.lucene.index.AtomicReader,java.lang.String)>($r3, $r4);

        r0.<org.apache.lucene.sandbox.queries.SlowCollatedStringComparator: org.apache.lucene.index.BinaryDocValues currentDocTerms> = $r5;

        return r0;
    }

    public void setBottom(int)
    {
        org.apache.lucene.sandbox.queries.SlowCollatedStringComparator r0;
        int i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.lucene.sandbox.queries.SlowCollatedStringComparator;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.sandbox.queries.SlowCollatedStringComparator: java.lang.String[] values>;

        $r2 = $r1[i0];

        r0.<org.apache.lucene.sandbox.queries.SlowCollatedStringComparator: java.lang.String bottom> = $r2;

        return;
    }

    public java.lang.String value(int)
    {
        org.apache.lucene.sandbox.queries.SlowCollatedStringComparator r0;
        int i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.lucene.sandbox.queries.SlowCollatedStringComparator;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.sandbox.queries.SlowCollatedStringComparator: java.lang.String[] values>;

        $r2 = $r1[i0];

        return $r2;
    }

    public int compareValues(java.lang.String, java.lang.String)
    {
        org.apache.lucene.sandbox.queries.SlowCollatedStringComparator r2;
        int $i0, $i2;
        java.lang.String r0, r1;
        java.text.Collator $r3;

        r2 := @this: org.apache.lucene.sandbox.queries.SlowCollatedStringComparator;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label2;

        if r1 != null goto label1;

        return 0;

     label1:
        $i2 = (int) -1;

        return $i2;

     label2:
        if r1 != null goto label3;

        return 1;

     label3:
        $r3 = r2.<org.apache.lucene.sandbox.queries.SlowCollatedStringComparator: java.text.Collator collator>;

        $i0 = virtualinvoke $r3.<java.text.Collator: int compare(java.lang.String,java.lang.String)>(r0, r1);

        return $i0;
    }

    public int compareDocToValue(int, java.lang.String)
    {
        byte[] $r4, $r5;
        org.apache.lucene.sandbox.queries.SlowCollatedStringComparator r0;
        org.apache.lucene.util.BytesRef $r1, $r3, $r6;
        int i0, $i1;
        java.lang.String r7, r8;
        org.apache.lucene.index.BinaryDocValues $r2;

        r0 := @this: org.apache.lucene.sandbox.queries.SlowCollatedStringComparator;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        $r2 = r0.<org.apache.lucene.sandbox.queries.SlowCollatedStringComparator: org.apache.lucene.index.BinaryDocValues currentDocTerms>;

        $r1 = r0.<org.apache.lucene.sandbox.queries.SlowCollatedStringComparator: org.apache.lucene.util.BytesRef tempBR>;

        virtualinvoke $r2.<org.apache.lucene.index.BinaryDocValues: void get(int,org.apache.lucene.util.BytesRef)>(i0, $r1);

        $r3 = r0.<org.apache.lucene.sandbox.queries.SlowCollatedStringComparator: org.apache.lucene.util.BytesRef tempBR>;

        $r5 = $r3.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $r4 = <org.apache.lucene.index.BinaryDocValues: byte[] MISSING>;

        if $r5 != $r4 goto label1;

        r8 = null;

        goto label2;

     label1:
        $r6 = r0.<org.apache.lucene.sandbox.queries.SlowCollatedStringComparator: org.apache.lucene.util.BytesRef tempBR>;

        r8 = virtualinvoke $r6.<org.apache.lucene.util.BytesRef: java.lang.String utf8ToString()>();

     label2:
        $i1 = virtualinvoke r0.<org.apache.lucene.sandbox.queries.SlowCollatedStringComparator: int compareValues(java.lang.String,java.lang.String)>(r8, r7);

        return $i1;
    }

    public volatile int compareDocToValue(int, java.lang.Object) throws java.io.IOException
    {
        org.apache.lucene.sandbox.queries.SlowCollatedStringComparator r0;
        int i0, $i1;
        java.lang.Object r1;
        java.lang.String $r2;

        r0 := @this: org.apache.lucene.sandbox.queries.SlowCollatedStringComparator;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = (java.lang.String) r1;

        $i1 = virtualinvoke r0.<org.apache.lucene.sandbox.queries.SlowCollatedStringComparator: int compareDocToValue(int,java.lang.String)>(i0, $r2);

        return $i1;
    }

    public volatile int compareValues(java.lang.Object, java.lang.Object)
    {
        org.apache.lucene.sandbox.queries.SlowCollatedStringComparator r0;
        int $i0;
        java.lang.Object r1, r2;
        java.lang.String $r3, $r4;

        r0 := @this: org.apache.lucene.sandbox.queries.SlowCollatedStringComparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.String) r1;

        $r3 = (java.lang.String) r2;

        $i0 = virtualinvoke r0.<org.apache.lucene.sandbox.queries.SlowCollatedStringComparator: int compareValues(java.lang.String,java.lang.String)>($r4, $r3);

        return $i0;
    }

    public volatile java.lang.Object value(int)
    {
        int i0;
        org.apache.lucene.sandbox.queries.SlowCollatedStringComparator r0;
        java.lang.String $r1;

        r0 := @this: org.apache.lucene.sandbox.queries.SlowCollatedStringComparator;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.lucene.sandbox.queries.SlowCollatedStringComparator: java.lang.String value(int)>(i0);

        return $r1;
    }
}
