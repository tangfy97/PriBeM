public class org.codehaus.groovy.runtime.metaclass.TemporaryMethodKey extends org.codehaus.groovy.runtime.MethodKey
{
    private final java.lang.Object[] parameterValues;
    static java.lang.Class class$java$lang$Class;
    static java.lang.Class class$java$lang$Object;

    public void <init>(java.lang.Class, java.lang.String, java.lang.Object[], boolean)
    {
        java.lang.Object[] r3;
        java.lang.Class r1;
        java.lang.String r2;
        org.codehaus.groovy.runtime.metaclass.TemporaryMethodKey r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.TemporaryMethodKey;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        z0 := @parameter3: boolean;

        specialinvoke r0.<org.codehaus.groovy.runtime.MethodKey: void <init>(java.lang.Class,java.lang.String,boolean)>(r1, r2, z0);

        if r3 != null goto label1;

        r3 = <org.codehaus.groovy.runtime.MetaClassHelper: java.lang.Object[] EMPTY_ARRAY>;

     label1:
        r0.<org.codehaus.groovy.runtime.metaclass.TemporaryMethodKey: java.lang.Object[] parameterValues> = r3;

        return;
    }

    public int getParameterCount()
    {
        int $i0;
        java.lang.Object[] $r1;
        org.codehaus.groovy.runtime.metaclass.TemporaryMethodKey r0;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.TemporaryMethodKey;

        $r1 = r0.<org.codehaus.groovy.runtime.metaclass.TemporaryMethodKey: java.lang.Object[] parameterValues>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public java.lang.Class getParameterType(int)
    {
        java.lang.Object[] $r1;
        int i0;
        java.lang.Object r2, $r8;
        java.lang.Class $r3, $r4, $r5, $r6, $r7, $r9;
        org.codehaus.groovy.runtime.metaclass.TemporaryMethodKey r0;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.TemporaryMethodKey;

        i0 := @parameter0: int;

        $r1 = r0.<org.codehaus.groovy.runtime.metaclass.TemporaryMethodKey: java.lang.Object[] parameterValues>;

        r2 = $r1[i0];

        if r2 == null goto label5;

        $r4 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = <org.codehaus.groovy.runtime.metaclass.TemporaryMethodKey: java.lang.Class class$java$lang$Class>;

        if $r5 != null goto label1;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.metaclass.TemporaryMethodKey: java.lang.Class class$(java.lang.String)>("java.lang.Class");

        <org.codehaus.groovy.runtime.metaclass.TemporaryMethodKey: java.lang.Class class$java$lang$Class> = $r7;

        goto label2;

     label1:
        $r7 = <org.codehaus.groovy.runtime.metaclass.TemporaryMethodKey: java.lang.Class class$java$lang$Class>;

     label2:
        if $r4 != $r7 goto label3;

        $r8 = r2;

        goto label4;

     label3:
        $r8 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

     label4:
        $r6 = (java.lang.Class) $r8;

        return $r6;

     label5:
        $r3 = <org.codehaus.groovy.runtime.metaclass.TemporaryMethodKey: java.lang.Class class$java$lang$Object>;

        if $r3 != null goto label6;

        $r9 = staticinvoke <org.codehaus.groovy.runtime.metaclass.TemporaryMethodKey: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.codehaus.groovy.runtime.metaclass.TemporaryMethodKey: java.lang.Class class$java$lang$Object> = $r9;

        goto label7;

     label6:
        $r9 = <org.codehaus.groovy.runtime.metaclass.TemporaryMethodKey: java.lang.Class class$java$lang$Object>;

     label7:
        return $r9;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
