public class org.waveprotocol.box.server.waveserver.NonSigningSignatureHandler$NonSigningSignatureHandlerProvider extends java.lang.Object implements com.google.inject.Provider
{
    private final java.lang.String waveDomain;
    private org.waveprotocol.box.server.waveserver.NonSigningSignatureHandler signer;

    public void <init>(java.lang.String)
    {
        org.waveprotocol.box.server.waveserver.NonSigningSignatureHandler$NonSigningSignatureHandlerProvider r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.box.server.waveserver.NonSigningSignatureHandler$NonSigningSignatureHandlerProvider;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.box.server.waveserver.NonSigningSignatureHandler$NonSigningSignatureHandlerProvider: org.waveprotocol.box.server.waveserver.NonSigningSignatureHandler signer> = null;

        r0.<org.waveprotocol.box.server.waveserver.NonSigningSignatureHandler$NonSigningSignatureHandlerProvider: java.lang.String waveDomain> = r1;

        return;
    }

    public org.waveprotocol.box.server.waveserver.NonSigningSignatureHandler get()
    {
        org.waveprotocol.box.server.waveserver.NonSigningSignatureHandler $r1, $r2, $r3;
        java.lang.Throwable $r5;
        org.waveprotocol.box.server.waveserver.NonSigningSignatureHandler$NonSigningSignatureHandlerProvider r0;
        java.lang.String $r4;

        r0 := @this: org.waveprotocol.box.server.waveserver.NonSigningSignatureHandler$NonSigningSignatureHandlerProvider;

        entermonitor r0;

     label1:
        $r1 = r0.<org.waveprotocol.box.server.waveserver.NonSigningSignatureHandler$NonSigningSignatureHandlerProvider: org.waveprotocol.box.server.waveserver.NonSigningSignatureHandler signer>;

        if $r1 != null goto label2;

        $r3 = new org.waveprotocol.box.server.waveserver.NonSigningSignatureHandler;

        $r4 = r0.<org.waveprotocol.box.server.waveserver.NonSigningSignatureHandler$NonSigningSignatureHandlerProvider: java.lang.String waveDomain>;

        specialinvoke $r3.<org.waveprotocol.box.server.waveserver.NonSigningSignatureHandler: void <init>(java.lang.String)>($r4);

        r0.<org.waveprotocol.box.server.waveserver.NonSigningSignatureHandler$NonSigningSignatureHandlerProvider: org.waveprotocol.box.server.waveserver.NonSigningSignatureHandler signer> = $r3;

     label2:
        exitmonitor r0;

     label3:
        goto label6;

     label4:
        $r5 := @caughtexception;

        exitmonitor r0;

     label5:
        throw $r5;

     label6:
        $r2 = r0.<org.waveprotocol.box.server.waveserver.NonSigningSignatureHandler$NonSigningSignatureHandlerProvider: org.waveprotocol.box.server.waveserver.NonSigningSignatureHandler signer>;

        return $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public volatile java.lang.Object get()
    {
        org.waveprotocol.box.server.waveserver.NonSigningSignatureHandler$NonSigningSignatureHandlerProvider r0;
        org.waveprotocol.box.server.waveserver.NonSigningSignatureHandler $r1;

        r0 := @this: org.waveprotocol.box.server.waveserver.NonSigningSignatureHandler$NonSigningSignatureHandlerProvider;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.server.waveserver.NonSigningSignatureHandler$NonSigningSignatureHandlerProvider: org.waveprotocol.box.server.waveserver.NonSigningSignatureHandler get()>();

        return $r1;
    }
}
