public class com.mongodb.ServerAddress extends java.lang.Object
{
    final java.lang.String _host;
    final int _port;
    final java.net.InetSocketAddress _addr;
    final java.net.InetAddress[] _all;

    public void <init>() throws java.net.UnknownHostException
    {
        com.mongodb.ServerAddress r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: com.mongodb.ServerAddress;

        $r1 = staticinvoke <com.mongodb.ServerAddress: java.lang.String defaultHost()>();

        $i0 = staticinvoke <com.mongodb.ServerAddress: int defaultPort()>();

        specialinvoke r0.<com.mongodb.ServerAddress: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public void <init>(java.lang.String) throws java.net.UnknownHostException
    {
        com.mongodb.ServerAddress r0;
        int $i0;
        java.lang.String r1;

        r0 := @this: com.mongodb.ServerAddress;

        r1 := @parameter0: java.lang.String;

        $i0 = staticinvoke <com.mongodb.ServerAddress: int defaultPort()>();

        specialinvoke r0.<com.mongodb.ServerAddress: void <init>(java.lang.String,int)>(r1, $i0);

        return;
    }

    public void <init>(java.lang.String, int) throws java.net.UnknownHostException
    {
        java.net.InetAddress[] $r3, $r5;
        java.net.InetAddress $r6;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String $r1, $r2, $r7, $r8, r10, r11;
        com.mongodb.ServerAddress r0;
        java.lang.IllegalArgumentException $r9;
        java.net.InetSocketAddress $r4;

        r0 := @this: com.mongodb.ServerAddress;

        r10 := @parameter0: java.lang.String;

        i5 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r10 != null goto label1;

        r10 = staticinvoke <com.mongodb.ServerAddress: java.lang.String defaultHost()>();

     label1:
        $r1 = virtualinvoke r10.<java.lang.String: java.lang.String trim()>();

        r11 = $r1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        r11 = staticinvoke <com.mongodb.ServerAddress: java.lang.String defaultHost()>();

     label2:
        $i1 = virtualinvoke r11.<java.lang.String: int indexOf(java.lang.String)>(":");

        if $i1 <= 0 goto label4;

        $i3 = staticinvoke <com.mongodb.ServerAddress: int defaultPort()>();

        if i5 == $i3 goto label3;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("can\'t specify port in construct and via host");

        throw $r9;

     label3:
        $i4 = $i1 + 1;

        $r7 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>($i4);

        i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

        $r8 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        r11 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

     label4:
        r0.<com.mongodb.ServerAddress: java.lang.String _host> = r11;

        r0.<com.mongodb.ServerAddress: int _port> = i5;

        $r2 = r0.<com.mongodb.ServerAddress: java.lang.String _host>;

        $r3 = staticinvoke <com.mongodb.ServerAddress: java.net.InetAddress[] _getAddress(java.lang.String)>($r2);

        r0.<com.mongodb.ServerAddress: java.net.InetAddress[] _all> = $r3;

        $r4 = new java.net.InetSocketAddress;

        $r5 = r0.<com.mongodb.ServerAddress: java.net.InetAddress[] _all>;

        $r6 = $r5[0];

        $i2 = r0.<com.mongodb.ServerAddress: int _port>;

        specialinvoke $r4.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r6, $i2);

        r0.<com.mongodb.ServerAddress: java.net.InetSocketAddress _addr> = $r4;

        return;
    }

    public void <init>(java.net.InetAddress)
    {
        com.mongodb.ServerAddress r0;
        java.net.InetAddress r2;
        int $i0;
        java.net.InetSocketAddress $r1;

        r0 := @this: com.mongodb.ServerAddress;

        r2 := @parameter0: java.net.InetAddress;

        $r1 = new java.net.InetSocketAddress;

        $i0 = staticinvoke <com.mongodb.ServerAddress: int defaultPort()>();

        specialinvoke $r1.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>(r2, $i0);

        specialinvoke r0.<com.mongodb.ServerAddress: void <init>(java.net.InetSocketAddress)>($r1);

        return;
    }

    public void <init>(java.net.InetAddress, int)
    {
        com.mongodb.ServerAddress r0;
        java.net.InetAddress r2;
        int i0;
        java.net.InetSocketAddress $r1;

        r0 := @this: com.mongodb.ServerAddress;

        r2 := @parameter0: java.net.InetAddress;

        i0 := @parameter1: int;

        $r1 = new java.net.InetSocketAddress;

        specialinvoke $r1.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>(r2, i0);

        specialinvoke r0.<com.mongodb.ServerAddress: void <init>(java.net.InetSocketAddress)>($r1);

        return;
    }

    public void <init>(java.net.InetSocketAddress)
    {
        com.mongodb.ServerAddress r0;
        int $i0;
        java.lang.String $r3;
        java.net.InetSocketAddress r1, $r2, $r4;

        r0 := @this: com.mongodb.ServerAddress;

        r1 := @parameter0: java.net.InetSocketAddress;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mongodb.ServerAddress: java.net.InetSocketAddress _addr> = r1;

        $r2 = r0.<com.mongodb.ServerAddress: java.net.InetSocketAddress _addr>;

        $r3 = virtualinvoke $r2.<java.net.InetSocketAddress: java.lang.String getHostName()>();

        r0.<com.mongodb.ServerAddress: java.lang.String _host> = $r3;

        $r4 = r0.<com.mongodb.ServerAddress: java.net.InetSocketAddress _addr>;

        $i0 = virtualinvoke $r4.<java.net.InetSocketAddress: int getPort()>();

        r0.<com.mongodb.ServerAddress: int _port> = $i0;

        r0.<com.mongodb.ServerAddress: java.net.InetAddress[] _all> = null;

        return;
    }

    boolean isPaired()
    {
        com.mongodb.ServerAddress r0;
        java.net.InetAddress[] $r1, $r2;
        int $i0;
        boolean $z0;

        r0 := @this: com.mongodb.ServerAddress;

        $r1 = r0.<com.mongodb.ServerAddress: java.net.InetAddress[] _all>;

        if $r1 == null goto label1;

        $r2 = r0.<com.mongodb.ServerAddress: java.net.InetAddress[] _all>;

        $i0 = lengthof $r2;

        if $i0 <= 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    java.util.List explode()
    {
        java.net.InetAddress[] $r1, $r5, $r8, $r10, $r12;
        java.util.ArrayList $r9;
        java.net.InetAddress $r13;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String $r7;
        com.mongodb.ServerAddress r0, $r11;
        java.lang.RuntimeException $r2;
        java.lang.StringBuilder $r3, $r4, $r6;

        r0 := @this: com.mongodb.ServerAddress;

        $r1 = r0.<com.mongodb.ServerAddress: java.net.InetAddress[] _all>;

        if $r1 == null goto label1;

        $r8 = r0.<com.mongodb.ServerAddress: java.net.InetAddress[] _all>;

        $i1 = lengthof $r8;

        if $i1 > 1 goto label2;

     label1:
        $r2 = new java.lang.RuntimeException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not paired.  num addresses : ");

        $r5 = r0.<com.mongodb.ServerAddress: java.net.InetAddress[] _all>;

        $i0 = lengthof $r5;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label2:
        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        i4 = 0;

     label3:
        $r10 = r0.<com.mongodb.ServerAddress: java.net.InetAddress[] _all>;

        $i2 = lengthof $r10;

        if i4 >= $i2 goto label4;

        $r11 = new com.mongodb.ServerAddress;

        $r12 = r0.<com.mongodb.ServerAddress: java.net.InetAddress[] _all>;

        $r13 = $r12[i4];

        $i3 = r0.<com.mongodb.ServerAddress: int _port>;

        specialinvoke $r11.<com.mongodb.ServerAddress: void <init>(java.net.InetAddress,int)>($r13, $i3);

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r11);

        i4 = i4 + 1;

        goto label3;

     label4:
        return $r9;
    }

    public boolean sameHost(java.lang.String)
    {
        com.mongodb.ServerAddress r0;
        int $i0, $i1, $i2, i3;
        java.lang.String $r1, $r2, r3;
        boolean $z0, $z1;

        r0 := @this: com.mongodb.ServerAddress;

        r3 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r3.<java.lang.String: int indexOf(java.lang.String)>(":");

        i3 = staticinvoke <com.mongodb.ServerAddress: int defaultPort()>();

        if $i0 <= 0 goto label1;

        $i2 = $i0 + 1;

        $r2 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>($i2);

        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        r3 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label1:
        $i1 = r0.<com.mongodb.ServerAddress: int _port>;

        if $i1 != i3 goto label2;

        $r1 = r0.<com.mongodb.ServerAddress: java.lang.String _host>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r3);

        if $z0 == 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public boolean equals(java.lang.Object)
    {
        com.mongodb.ServerAddress r1, r2;
        int $i0, $i1;
        java.lang.Object r0;
        java.lang.String $r3, $r4;
        boolean $z0, $z1, $z2;

        r2 := @this: com.mongodb.ServerAddress;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof com.mongodb.ServerAddress;

        if $z0 == 0 goto label3;

        r1 = (com.mongodb.ServerAddress) r0;

        $i1 = r1.<com.mongodb.ServerAddress: int _port>;

        $i0 = r2.<com.mongodb.ServerAddress: int _port>;

        if $i1 != $i0 goto label1;

        $r4 = r1.<com.mongodb.ServerAddress: java.lang.String _host>;

        $r3 = r2.<com.mongodb.ServerAddress: java.lang.String _host>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;

     label3:
        return 0;
    }

    public int hashCode()
    {
        com.mongodb.ServerAddress r0;
        int $i0, $i1, $i2;
        java.lang.String $r1;

        r0 := @this: com.mongodb.ServerAddress;

        $r1 = r0.<com.mongodb.ServerAddress: java.lang.String _host>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i1 = r0.<com.mongodb.ServerAddress: int _port>;

        $i2 = $i0 + $i1;

        return $i2;
    }

    public java.lang.String getHost()
    {
        com.mongodb.ServerAddress r0;
        java.lang.String $r1;

        r0 := @this: com.mongodb.ServerAddress;

        $r1 = r0.<com.mongodb.ServerAddress: java.lang.String _host>;

        return $r1;
    }

    public int getPort()
    {
        com.mongodb.ServerAddress r0;
        int $i0;

        r0 := @this: com.mongodb.ServerAddress;

        $i0 = r0.<com.mongodb.ServerAddress: int _port>;

        return $i0;
    }

    public java.net.InetSocketAddress getSocketAddress()
    {
        com.mongodb.ServerAddress r0;
        java.net.InetSocketAddress $r1;

        r0 := @this: com.mongodb.ServerAddress;

        $r1 = r0.<com.mongodb.ServerAddress: java.net.InetSocketAddress _addr>;

        return $r1;
    }

    public java.lang.String toString()
    {
        com.mongodb.ServerAddress r1;
        int $i0;
        java.lang.StringBuilder $r0, $r3, $r4, $r5;
        java.lang.String $r2, $r6;

        r1 := @this: com.mongodb.ServerAddress;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<com.mongodb.ServerAddress: java.lang.String _host>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i0 = r1.<com.mongodb.ServerAddress: int _port>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private static java.net.InetAddress[] _getAddress(java.lang.String) throws java.net.UnknownHostException
    {
        java.net.InetAddress $r4;
        java.net.InetAddress[] $r2, $r3;
        java.lang.String r0, $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("localhost");

        if $z0 == 0 goto label1;

        $r3 = newarray (java.net.InetAddress)[1];

        $r4 = staticinvoke <java.net.InetAddress: java.net.InetAddress getLocalHost()>();

        $r3[0] = $r4;

        return $r3;

     label1:
        $r2 = staticinvoke <java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>(r0);

        return $r2;
    }

    public static java.lang.String defaultHost()
    {
        com.mongodb.util.Config $r0;
        java.lang.String $r1;

        $r0 = staticinvoke <com.mongodb.util.Config: com.mongodb.util.Config get()>();

        $r1 = virtualinvoke $r0.<com.mongodb.util.Config: java.lang.String getTryEnvFirst(java.lang.String,java.lang.String)>("db_ip", "127.0.0.1");

        return $r1;
    }

    public static int defaultPort()
    {
        com.mongodb.util.Config $r0;
        int $i0;
        java.lang.String $r1, $r2;

        $r0 = staticinvoke <com.mongodb.util.Config: com.mongodb.util.Config get()>();

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(27017);

        $r2 = virtualinvoke $r0.<com.mongodb.util.Config: java.lang.String getTryEnvFirst(java.lang.String,java.lang.String)>("db_port", $r1);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        return $i0;
    }
}
