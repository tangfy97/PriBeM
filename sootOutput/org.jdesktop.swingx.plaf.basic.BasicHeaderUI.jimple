public class org.jdesktop.swingx.plaf.basic.BasicHeaderUI extends org.jdesktop.swingx.plaf.HeaderUI
{
    private static final java.util.logging.Logger LOG;
    protected javax.swing.JLabel titleLabel;
    protected org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane descriptionPane;
    protected javax.swing.JLabel imagePanel;
    private java.beans.PropertyChangeListener propListener;
    private java.awt.event.HierarchyBoundsListener boundsListener;
    private java.awt.Color gradientLightColor;
    private java.awt.Color gradientDarkColor;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        org.jdesktop.swingx.plaf.basic.BasicHeaderUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicHeaderUI;

        specialinvoke r0.<org.jdesktop.swingx.plaf.HeaderUI: void <init>()>();

        return;
    }

    public static javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        org.jdesktop.swingx.plaf.basic.BasicHeaderUI $r0;

        r1 := @parameter0: javax.swing.JComponent;

        $r0 = new org.jdesktop.swingx.plaf.basic.BasicHeaderUI;

        specialinvoke $r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: void <init>()>();

        return $r0;
    }

    public void installUI(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        org.jdesktop.swingx.plaf.basic.BasicHeaderUI r0;
        org.jdesktop.swingx.JXHeader $r2;
        java.lang.AssertionError $r3;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicHeaderUI;

        r1 := @parameter0: javax.swing.JComponent;

        specialinvoke r0.<org.jdesktop.swingx.plaf.HeaderUI: void installUI(javax.swing.JComponent)>(r1);

        $z0 = <org.jdesktop.swingx.plaf.basic.BasicHeaderUI: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = r1 instanceof org.jdesktop.swingx.JXHeader;

        if $z1 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r2 = (org.jdesktop.swingx.JXHeader) r1;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: void installDefaults(org.jdesktop.swingx.JXHeader)>($r2);

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: void installComponents(org.jdesktop.swingx.JXHeader)>($r2);

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: void installListeners(org.jdesktop.swingx.JXHeader)>($r2);

        return;
    }

    public void uninstallUI(javax.swing.JComponent)
    {
        javax.swing.JComponent r0;
        org.jdesktop.swingx.plaf.basic.BasicHeaderUI r1;
        org.jdesktop.swingx.JXHeader $r2;
        java.lang.AssertionError $r3;
        boolean $z0, $z1;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicHeaderUI;

        r0 := @parameter0: javax.swing.JComponent;

        $z0 = <org.jdesktop.swingx.plaf.basic.BasicHeaderUI: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = r0 instanceof org.jdesktop.swingx.JXHeader;

        if $z1 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r2 = (org.jdesktop.swingx.JXHeader) r0;

        virtualinvoke r1.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: void uninstallListeners(org.jdesktop.swingx.JXHeader)>($r2);

        virtualinvoke r1.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: void uninstallComponents(org.jdesktop.swingx.JXHeader)>($r2);

        virtualinvoke r1.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: void uninstallDefaults(org.jdesktop.swingx.JXHeader)>($r2);

        return;
    }

    protected void installDefaults(org.jdesktop.swingx.JXHeader)
    {
        java.awt.Color $r1, $r2, $r3, $r4, $r9, $r11, $r14, $r15, $r17, $r18, $r21, $r22;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.jdesktop.swingx.painter.Painter $r6, $r13;
        java.awt.Font $r7, $r10, $r12, $r16, $r19, $r20;
        org.jdesktop.swingx.plaf.basic.BasicHeaderUI r0;
        javax.swing.Icon $r8, $r23;
        org.jdesktop.swingx.JXHeader r5;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicHeaderUI;

        r5 := @parameter0: org.jdesktop.swingx.JXHeader;

        $r1 = staticinvoke <org.jdesktop.swingx.plaf.UIManagerExt: java.awt.Color getColor(java.lang.Object)>("JXHeader.startBackground");

        r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: java.awt.Color gradientLightColor> = $r1;

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: java.awt.Color gradientLightColor>;

        if $r2 != null goto label01;

        $r15 = <java.awt.Color: java.awt.Color WHITE>;

        r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: java.awt.Color gradientLightColor> = $r15;

     label01:
        $r3 = staticinvoke <org.jdesktop.swingx.plaf.UIManagerExt: java.awt.Color getColor(java.lang.Object)>("JXHeader.background");

        r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: java.awt.Color gradientDarkColor> = $r3;

        $r4 = r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: java.awt.Color gradientDarkColor>;

        if $r4 != null goto label02;

        $r14 = staticinvoke <org.jdesktop.swingx.plaf.UIManagerExt: java.awt.Color getColor(java.lang.Object)>("control");

        r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: java.awt.Color gradientDarkColor> = $r14;

     label02:
        $r6 = virtualinvoke r5.<org.jdesktop.swingx.JXHeader: org.jdesktop.swingx.painter.Painter getBackgroundPainter()>();

        $z0 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: boolean isUIInstallable(java.lang.Object)>($r6);

        if $z0 == 0 goto label03;

        $r13 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: org.jdesktop.swingx.painter.Painter createBackgroundPainter()>();

        virtualinvoke r5.<org.jdesktop.swingx.JXHeader: void setBackgroundPainter(org.jdesktop.swingx.painter.Painter)>($r13);

     label03:
        $r7 = virtualinvoke r5.<org.jdesktop.swingx.JXHeader: java.awt.Font getTitleFont()>();

        $z1 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: boolean isUIInstallable(java.lang.Object)>($r7);

        if $z1 == 0 goto label06;

        $r12 = staticinvoke <javax.swing.UIManager: java.awt.Font getFont(java.lang.Object)>("JXHeader.titleFont");

        if $r12 == null goto label04;

        $r16 = $r12;

        goto label05;

     label04:
        $r16 = staticinvoke <javax.swing.UIManager: java.awt.Font getFont(java.lang.Object)>("Label.font");

     label05:
        virtualinvoke r5.<org.jdesktop.swingx.JXHeader: void setTitleFont(java.awt.Font)>($r16);

     label06:
        $r17 = virtualinvoke r5.<org.jdesktop.swingx.JXHeader: java.awt.Color getTitleForeground()>();

        $z2 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: boolean isUIInstallable(java.lang.Object)>($r17);

        if $z2 == 0 goto label09;

        $r11 = staticinvoke <org.jdesktop.swingx.plaf.UIManagerExt: java.awt.Color getColor(java.lang.Object)>("JXHeader.titleForeground");

        if $r11 == null goto label07;

        $r18 = $r11;

        goto label08;

     label07:
        $r18 = staticinvoke <org.jdesktop.swingx.plaf.UIManagerExt: java.awt.Color getColor(java.lang.Object)>("Label.foreground");

     label08:
        virtualinvoke r5.<org.jdesktop.swingx.JXHeader: void setTitleForeground(java.awt.Color)>($r18);

     label09:
        $r19 = virtualinvoke r5.<org.jdesktop.swingx.JXHeader: java.awt.Font getDescriptionFont()>();

        $z3 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: boolean isUIInstallable(java.lang.Object)>($r19);

        if $z3 == 0 goto label12;

        $r10 = staticinvoke <javax.swing.UIManager: java.awt.Font getFont(java.lang.Object)>("JXHeader.descriptionFont");

        if $r10 == null goto label10;

        $r20 = $r10;

        goto label11;

     label10:
        $r20 = staticinvoke <javax.swing.UIManager: java.awt.Font getFont(java.lang.Object)>("Label.font");

     label11:
        virtualinvoke r5.<org.jdesktop.swingx.JXHeader: void setDescriptionFont(java.awt.Font)>($r20);

     label12:
        $r21 = virtualinvoke r5.<org.jdesktop.swingx.JXHeader: java.awt.Color getDescriptionForeground()>();

        $z4 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: boolean isUIInstallable(java.lang.Object)>($r21);

        if $z4 == 0 goto label15;

        $r9 = staticinvoke <org.jdesktop.swingx.plaf.UIManagerExt: java.awt.Color getColor(java.lang.Object)>("JXHeader.descriptionForeground");

        if $r9 == null goto label13;

        $r22 = $r9;

        goto label14;

     label13:
        $r22 = staticinvoke <org.jdesktop.swingx.plaf.UIManagerExt: java.awt.Color getColor(java.lang.Object)>("Label.foreground");

     label14:
        virtualinvoke r5.<org.jdesktop.swingx.JXHeader: void setDescriptionForeground(java.awt.Color)>($r22);

     label15:
        $r23 = virtualinvoke r5.<org.jdesktop.swingx.JXHeader: javax.swing.Icon getIcon()>();

        $z5 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: boolean isUIInstallable(java.lang.Object)>($r23);

        if $z5 == 0 goto label16;

        $r8 = staticinvoke <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>("Header.defaultIcon");

        virtualinvoke r5.<org.jdesktop.swingx.JXHeader: void setIcon(javax.swing.Icon)>($r8);

     label16:
        return;
    }

    protected void uninstallDefaults(org.jdesktop.swingx.JXHeader)
    {
        org.jdesktop.swingx.JXHeader r1;
        org.jdesktop.swingx.plaf.basic.BasicHeaderUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicHeaderUI;

        r1 := @parameter0: org.jdesktop.swingx.JXHeader;

        return;
    }

    protected void installComponents(org.jdesktop.swingx.JXHeader)
    {
        org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane $r2;
        javax.swing.JLabel $r1, $r3;
        org.jdesktop.swingx.plaf.basic.BasicHeaderUI r0;
        org.jdesktop.swingx.JXHeader r4;
        java.awt.GridBagLayout $r5;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicHeaderUI;

        r4 := @parameter0: org.jdesktop.swingx.JXHeader;

        $r1 = new javax.swing.JLabel;

        specialinvoke $r1.<javax.swing.JLabel: void <init>()>();

        r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: javax.swing.JLabel titleLabel> = $r1;

        $r2 = new org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane;

        specialinvoke $r2.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane: void <init>(org.jdesktop.swingx.plaf.basic.BasicHeaderUI)>(r0);

        r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane descriptionPane> = $r2;

        $r3 = new javax.swing.JLabel;

        specialinvoke $r3.<javax.swing.JLabel: void <init>()>();

        r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: javax.swing.JLabel imagePanel> = $r3;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: void installComponentDefaults(org.jdesktop.swingx.JXHeader)>(r4);

        $r5 = new java.awt.GridBagLayout;

        specialinvoke $r5.<java.awt.GridBagLayout: void <init>()>();

        virtualinvoke r4.<org.jdesktop.swingx.JXHeader: void setLayout(java.awt.LayoutManager)>($r5);

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: void resetLayout(org.jdesktop.swingx.JXHeader)>(r4);

        return;
    }

    protected void uninstallComponents(org.jdesktop.swingx.JXHeader)
    {
        org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane $r3;
        javax.swing.JLabel $r2, $r4;
        org.jdesktop.swingx.plaf.basic.BasicHeaderUI r0;
        org.jdesktop.swingx.JXHeader r1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicHeaderUI;

        r1 := @parameter0: org.jdesktop.swingx.JXHeader;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: void uninstallComponentDefaults(org.jdesktop.swingx.JXHeader)>(r1);

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: javax.swing.JLabel titleLabel>;

        virtualinvoke r1.<org.jdesktop.swingx.JXHeader: void remove(java.awt.Component)>($r2);

        $r3 = r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane descriptionPane>;

        virtualinvoke r1.<org.jdesktop.swingx.JXHeader: void remove(java.awt.Component)>($r3);

        $r4 = r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: javax.swing.JLabel imagePanel>;

        virtualinvoke r1.<org.jdesktop.swingx.JXHeader: void remove(java.awt.Component)>($r4);

        r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: javax.swing.JLabel titleLabel> = null;

        r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane descriptionPane> = null;

        r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: javax.swing.JLabel imagePanel> = null;

        return;
    }

    protected void installComponentDefaults(org.jdesktop.swingx.JXHeader)
    {
        java.awt.Color $r6, $r7, $r14, $r15;
        java.lang.String $r9, $r18;
        java.awt.Font $r3, $r4, $r11, $r12;
        org.jdesktop.swingx.plaf.basic.BasicHeaderUI r0;
        javax.swing.Icon $r21;
        org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane $r10, $r13, $r16, $r17, $r19;
        javax.swing.JLabel $r2, $r5, $r8, $r20;
        org.jdesktop.swingx.JXHeader r1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicHeaderUI;

        r1 := @parameter0: org.jdesktop.swingx.JXHeader;

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: javax.swing.JLabel titleLabel>;

        $r3 = virtualinvoke r1.<org.jdesktop.swingx.JXHeader: java.awt.Font getTitleFont()>();

        $r4 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: java.awt.Font getAsNotUIResource(java.awt.Font)>($r3);

        virtualinvoke $r2.<javax.swing.JLabel: void setFont(java.awt.Font)>($r4);

        $r5 = r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: javax.swing.JLabel titleLabel>;

        $r6 = virtualinvoke r1.<org.jdesktop.swingx.JXHeader: java.awt.Color getTitleForeground()>();

        $r7 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: java.awt.Color getAsNotUIResource(java.awt.Color)>($r6);

        virtualinvoke $r5.<javax.swing.JLabel: void setForeground(java.awt.Color)>($r7);

        $r8 = r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: javax.swing.JLabel titleLabel>;

        $r9 = virtualinvoke r1.<org.jdesktop.swingx.JXHeader: java.lang.String getTitle()>();

        virtualinvoke $r8.<javax.swing.JLabel: void setText(java.lang.String)>($r9);

        $r10 = r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane descriptionPane>;

        $r11 = virtualinvoke r1.<org.jdesktop.swingx.JXHeader: java.awt.Font getDescriptionFont()>();

        $r12 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: java.awt.Font getAsNotUIResource(java.awt.Font)>($r11);

        virtualinvoke $r10.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane: void setFont(java.awt.Font)>($r12);

        $r13 = r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane descriptionPane>;

        $r14 = virtualinvoke r1.<org.jdesktop.swingx.JXHeader: java.awt.Color getDescriptionForeground()>();

        $r15 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: java.awt.Color getAsNotUIResource(java.awt.Color)>($r14);

        virtualinvoke $r13.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane: void setForeground(java.awt.Color)>($r15);

        $r16 = r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane descriptionPane>;

        virtualinvoke $r16.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane: void setOpaque(boolean)>(0);

        $r17 = r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane descriptionPane>;

        $r18 = virtualinvoke r1.<org.jdesktop.swingx.JXHeader: java.lang.String getDescription()>();

        virtualinvoke $r17.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane: void setText(java.lang.String)>($r18);

        $r19 = r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane descriptionPane>;

        virtualinvoke $r19.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane: void setLineWrap(boolean)>(1);

        $r20 = r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: javax.swing.JLabel imagePanel>;

        $r21 = virtualinvoke r1.<org.jdesktop.swingx.JXHeader: javax.swing.Icon getIcon()>();

        virtualinvoke $r20.<javax.swing.JLabel: void setIcon(javax.swing.Icon)>($r21);

        return;
    }

    private java.awt.Font getAsNotUIResource(java.awt.Font)
    {
        java.awt.Font r0, $r2;
        java.util.Map $r1;
        org.jdesktop.swingx.plaf.basic.BasicHeaderUI r3;
        boolean $z0;

        r3 := @this: org.jdesktop.swingx.plaf.basic.BasicHeaderUI;

        r0 := @parameter0: java.awt.Font;

        $z0 = r0 instanceof javax.swing.plaf.UIResource;

        if $z0 != 0 goto label1;

        return r0;

     label1:
        $r1 = virtualinvoke r0.<java.awt.Font: java.util.Map getAttributes()>();

        $r2 = virtualinvoke r0.<java.awt.Font: java.awt.Font deriveFont(java.util.Map)>($r1);

        return $r2;
    }

    private java.awt.Color getAsNotUIResource(java.awt.Color)
    {
        java.awt.Color r0, $r2;
        org.jdesktop.swingx.plaf.basic.BasicHeaderUI r3;
        float[] $r1;
        float $f0, $f1, $f2, $f3;
        boolean $z0;

        r3 := @this: org.jdesktop.swingx.plaf.basic.BasicHeaderUI;

        r0 := @parameter0: java.awt.Color;

        $z0 = r0 instanceof javax.swing.plaf.UIResource;

        if $z0 != 0 goto label1;

        return r0;

     label1:
        $r1 = virtualinvoke r0.<java.awt.Color: float[] getRGBComponents(float[])>(null);

        $r2 = new java.awt.Color;

        $f3 = $r1[0];

        $f2 = $r1[1];

        $f1 = $r1[2];

        $f0 = $r1[3];

        specialinvoke $r2.<java.awt.Color: void <init>(float,float,float,float)>($f3, $f2, $f1, $f0);

        return $r2;
    }

    private boolean isUIInstallable(java.lang.Object)
    {
        org.jdesktop.swingx.plaf.basic.BasicHeaderUI r1;
        java.lang.Object r0;
        boolean $z0, $z1;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicHeaderUI;

        r0 := @parameter0: java.lang.Object;

        if r0 == null goto label1;

        $z0 = r0 instanceof javax.swing.plaf.UIResource;

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    protected void uninstallComponentDefaults(org.jdesktop.swingx.JXHeader)
    {
        org.jdesktop.swingx.JXHeader r1;
        org.jdesktop.swingx.plaf.basic.BasicHeaderUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicHeaderUI;

        r1 := @parameter0: org.jdesktop.swingx.JXHeader;

        return;
    }

    protected void installListeners(org.jdesktop.swingx.JXHeader)
    {
        org.jdesktop.swingx.plaf.basic.BasicHeaderUI$1 $r1;
        org.jdesktop.swingx.plaf.basic.BasicHeaderUI$2 $r3;
        java.beans.PropertyChangeListener $r4;
        org.jdesktop.swingx.plaf.basic.BasicHeaderUI r0;
        java.awt.event.HierarchyBoundsListener $r5;
        org.jdesktop.swingx.JXHeader r2;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicHeaderUI;

        r2 := @parameter0: org.jdesktop.swingx.JXHeader;

        $r1 = new org.jdesktop.swingx.plaf.basic.BasicHeaderUI$1;

        specialinvoke $r1.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI$1: void <init>(org.jdesktop.swingx.plaf.basic.BasicHeaderUI,org.jdesktop.swingx.JXHeader)>(r0, r2);

        r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: java.beans.PropertyChangeListener propListener> = $r1;

        $r3 = new org.jdesktop.swingx.plaf.basic.BasicHeaderUI$2;

        specialinvoke $r3.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI$2: void <init>(org.jdesktop.swingx.plaf.basic.BasicHeaderUI,org.jdesktop.swingx.JXHeader)>(r0, r2);

        r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: java.awt.event.HierarchyBoundsListener boundsListener> = $r3;

        $r4 = r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: java.beans.PropertyChangeListener propListener>;

        virtualinvoke r2.<org.jdesktop.swingx.JXHeader: void addPropertyChangeListener(java.beans.PropertyChangeListener)>($r4);

        $r5 = r0.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: java.awt.event.HierarchyBoundsListener boundsListener>;

        virtualinvoke r2.<org.jdesktop.swingx.JXHeader: void addHierarchyBoundsListener(java.awt.event.HierarchyBoundsListener)>($r5);

        return;
    }

    protected void uninstallListeners(org.jdesktop.swingx.JXHeader)
    {
        java.beans.PropertyChangeListener $r2;
        org.jdesktop.swingx.plaf.basic.BasicHeaderUI r1;
        java.awt.event.HierarchyBoundsListener $r3;
        org.jdesktop.swingx.JXHeader r0;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicHeaderUI;

        r0 := @parameter0: org.jdesktop.swingx.JXHeader;

        $r2 = r1.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: java.beans.PropertyChangeListener propListener>;

        virtualinvoke r0.<org.jdesktop.swingx.JXHeader: void removePropertyChangeListener(java.beans.PropertyChangeListener)>($r2);

        $r3 = r1.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: java.awt.event.HierarchyBoundsListener boundsListener>;

        virtualinvoke r0.<org.jdesktop.swingx.JXHeader: void removeHierarchyBoundsListener(java.awt.event.HierarchyBoundsListener)>($r3);

        return;
    }

    protected void onPropertyChange(org.jdesktop.swingx.JXHeader, java.lang.String, java.lang.Object, java.lang.Object)
    {
        java.awt.Color $r13, $r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.awt.Font $r17, $r19;
        javax.swing.Icon $r25;
        org.jdesktop.swingx.JXHeader r11;
        java.lang.String r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r27, $r29;
        org.jdesktop.swingx.plaf.basic.BasicHeaderUI r10;
        org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane $r14, $r18, $r22, $r26;
        javax.swing.JLabel $r16, $r20, $r21, $r23, $r24, $r28;
        java.lang.Object r12, r30;

        r10 := @this: org.jdesktop.swingx.plaf.basic.BasicHeaderUI;

        r11 := @parameter0: org.jdesktop.swingx.JXHeader;

        r0 := @parameter1: java.lang.String;

        r30 := @parameter2: java.lang.Object;

        r12 := @parameter3: java.lang.Object;

        $r1 = "title";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r28 = r10.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: javax.swing.JLabel titleLabel>;

        $r29 = virtualinvoke r11.<org.jdesktop.swingx.JXHeader: java.lang.String getTitle()>();

        virtualinvoke $r28.<javax.swing.JLabel: void setText(java.lang.String)>($r29);

        goto label9;

     label1:
        $r2 = "description";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

        $r26 = r10.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane descriptionPane>;

        $r27 = virtualinvoke r11.<org.jdesktop.swingx.JXHeader: java.lang.String getDescription()>();

        virtualinvoke $r26.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane: void setText(java.lang.String)>($r27);

        goto label9;

     label2:
        $r3 = "icon";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label3;

        $r24 = r10.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: javax.swing.JLabel imagePanel>;

        $r25 = virtualinvoke r11.<org.jdesktop.swingx.JXHeader: javax.swing.Icon getIcon()>();

        virtualinvoke $r24.<javax.swing.JLabel: void setIcon(javax.swing.Icon)>($r25);

        goto label9;

     label3:
        $r4 = "enabled";

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z3 == 0 goto label4;

        $z9 = virtualinvoke r11.<org.jdesktop.swingx.JXHeader: boolean isEnabled()>();

        $r21 = r10.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: javax.swing.JLabel titleLabel>;

        virtualinvoke $r21.<javax.swing.JLabel: void setEnabled(boolean)>($z9);

        $r22 = r10.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane descriptionPane>;

        virtualinvoke $r22.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane: void setEnabled(boolean)>($z9);

        $r23 = r10.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: javax.swing.JLabel imagePanel>;

        virtualinvoke $r23.<javax.swing.JLabel: void setEnabled(boolean)>($z9);

        goto label9;

     label4:
        $r5 = "titleFont";

        $z4 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z4 == 0 goto label5;

        $r20 = r10.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: javax.swing.JLabel titleLabel>;

        $r19 = (java.awt.Font) r12;

        virtualinvoke $r20.<javax.swing.JLabel: void setFont(java.awt.Font)>($r19);

        goto label9;

     label5:
        $r6 = "descriptionFont";

        $z5 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z5 == 0 goto label6;

        $r18 = r10.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane descriptionPane>;

        $r17 = (java.awt.Font) r12;

        virtualinvoke $r18.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane: void setFont(java.awt.Font)>($r17);

        goto label9;

     label6:
        $r7 = "titleForeground";

        $z6 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z6 == 0 goto label7;

        $r16 = r10.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: javax.swing.JLabel titleLabel>;

        $r15 = (java.awt.Color) r12;

        virtualinvoke $r16.<javax.swing.JLabel: void setForeground(java.awt.Color)>($r15);

        goto label9;

     label7:
        $r8 = "descriptionForeground";

        $z7 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z7 == 0 goto label8;

        $r14 = r10.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane descriptionPane>;

        $r13 = (java.awt.Color) r12;

        virtualinvoke $r14.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane: void setForeground(java.awt.Color)>($r13);

        goto label9;

     label8:
        $r9 = "iconPosition";

        $z8 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z8 == 0 goto label9;

        specialinvoke r10.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: void resetLayout(org.jdesktop.swingx.JXHeader)>(r11);

     label9:
        return;
    }

    private void resetLayout(org.jdesktop.swingx.JXHeader)
    {
        java.awt.Insets $r7, $r10, $r13, $r18, $r21, $r24;
        org.jdesktop.swingx.JXHeader$IconPosition $r5, $r15, $r16;
        org.jdesktop.swingx.plaf.basic.BasicHeaderUI r1;
        java.awt.GridBagConstraints $r6, $r9, $r12, $r17, $r20, $r23;
        org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane $r3, $r11, $r22;
        javax.swing.JLabel $r2, $r4, $r8, $r14, $r19, $r25;
        org.jdesktop.swingx.JXHeader r0;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicHeaderUI;

        r0 := @parameter0: org.jdesktop.swingx.JXHeader;

        $r2 = r1.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: javax.swing.JLabel titleLabel>;

        virtualinvoke r0.<org.jdesktop.swingx.JXHeader: void remove(java.awt.Component)>($r2);

        $r3 = r1.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane descriptionPane>;

        virtualinvoke r0.<org.jdesktop.swingx.JXHeader: void remove(java.awt.Component)>($r3);

        $r4 = r1.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: javax.swing.JLabel imagePanel>;

        virtualinvoke r0.<org.jdesktop.swingx.JXHeader: void remove(java.awt.Component)>($r4);

        $r5 = virtualinvoke r0.<org.jdesktop.swingx.JXHeader: org.jdesktop.swingx.JXHeader$IconPosition getIconPosition()>();

        if $r5 == null goto label1;

        $r15 = virtualinvoke r0.<org.jdesktop.swingx.JXHeader: org.jdesktop.swingx.JXHeader$IconPosition getIconPosition()>();

        $r16 = <org.jdesktop.swingx.JXHeader$IconPosition: org.jdesktop.swingx.JXHeader$IconPosition RIGHT>;

        if $r15 != $r16 goto label2;

     label1:
        $r8 = r1.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: javax.swing.JLabel titleLabel>;

        $r6 = new java.awt.GridBagConstraints;

        $r7 = new java.awt.Insets;

        specialinvoke $r7.<java.awt.Insets: void <init>(int,int,int,int)>(12, 12, 0, 11);

        specialinvoke $r6.<java.awt.GridBagConstraints: void <init>(int,int,int,int,double,double,int,int,java.awt.Insets,int,int)>(0, 0, 1, 1, 1.0, 0.0, 21, 2, $r7, 0, 0);

        virtualinvoke r0.<org.jdesktop.swingx.JXHeader: void add(java.awt.Component,java.lang.Object)>($r8, $r6);

        $r11 = r1.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane descriptionPane>;

        $r9 = new java.awt.GridBagConstraints;

        $r10 = new java.awt.Insets;

        specialinvoke $r10.<java.awt.Insets: void <init>(int,int,int,int)>(0, 24, 12, 11);

        specialinvoke $r9.<java.awt.GridBagConstraints: void <init>(int,int,int,int,double,double,int,int,java.awt.Insets,int,int)>(0, 1, 1, 1, 1.0, 1.0, 23, 1, $r10, 0, 0);

        virtualinvoke r0.<org.jdesktop.swingx.JXHeader: void add(java.awt.Component,java.lang.Object)>($r11, $r9);

        $r14 = r1.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: javax.swing.JLabel imagePanel>;

        $r12 = new java.awt.GridBagConstraints;

        $r13 = new java.awt.Insets;

        specialinvoke $r13.<java.awt.Insets: void <init>(int,int,int,int)>(12, 0, 11, 11);

        specialinvoke $r12.<java.awt.GridBagConstraints: void <init>(int,int,int,int,double,double,int,int,java.awt.Insets,int,int)>(1, 0, 1, 2, 0.0, 1.0, 24, 0, $r13, 0, 0);

        virtualinvoke r0.<org.jdesktop.swingx.JXHeader: void add(java.awt.Component,java.lang.Object)>($r14, $r12);

        goto label3;

     label2:
        $r19 = r1.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: javax.swing.JLabel titleLabel>;

        $r17 = new java.awt.GridBagConstraints;

        $r18 = new java.awt.Insets;

        specialinvoke $r18.<java.awt.Insets: void <init>(int,int,int,int)>(12, 12, 0, 11);

        specialinvoke $r17.<java.awt.GridBagConstraints: void <init>(int,int,int,int,double,double,int,int,java.awt.Insets,int,int)>(1, 0, 1, 1, 1.0, 0.0, 21, 2, $r18, 0, 0);

        virtualinvoke r0.<org.jdesktop.swingx.JXHeader: void add(java.awt.Component,java.lang.Object)>($r19, $r17);

        $r22 = r1.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane descriptionPane>;

        $r20 = new java.awt.GridBagConstraints;

        $r21 = new java.awt.Insets;

        specialinvoke $r21.<java.awt.Insets: void <init>(int,int,int,int)>(0, 24, 12, 11);

        specialinvoke $r20.<java.awt.GridBagConstraints: void <init>(int,int,int,int,double,double,int,int,java.awt.Insets,int,int)>(1, 1, 1, 1, 1.0, 1.0, 23, 1, $r21, 0, 0);

        virtualinvoke r0.<org.jdesktop.swingx.JXHeader: void add(java.awt.Component,java.lang.Object)>($r22, $r20);

        $r25 = r1.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: javax.swing.JLabel imagePanel>;

        $r23 = new java.awt.GridBagConstraints;

        $r24 = new java.awt.Insets;

        specialinvoke $r24.<java.awt.Insets: void <init>(int,int,int,int)>(12, 11, 0, 11);

        specialinvoke $r23.<java.awt.GridBagConstraints: void <init>(int,int,int,int,double,double,int,int,java.awt.Insets,int,int)>(0, 0, 1, 2, 0.0, 1.0, 24, 0, $r24, 0, 0);

        virtualinvoke r0.<org.jdesktop.swingx.JXHeader: void add(java.awt.Component,java.lang.Object)>($r25, $r23);

     label3:
        return;
    }

    protected org.jdesktop.swingx.painter.Painter createBackgroundPainter()
    {
        java.awt.Color $r3, $r4;
        org.jdesktop.swingx.painter.MattePainter $r0;
        org.jdesktop.swingx.plaf.basic.BasicHeaderUI r2;
        java.awt.GradientPaint $r1;
        org.jdesktop.swingx.plaf.PainterUIResource $r5;

        r2 := @this: org.jdesktop.swingx.plaf.basic.BasicHeaderUI;

        $r0 = new org.jdesktop.swingx.painter.MattePainter;

        $r1 = new java.awt.GradientPaint;

        $r4 = r2.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: java.awt.Color gradientLightColor>;

        $r3 = r2.<org.jdesktop.swingx.plaf.basic.BasicHeaderUI: java.awt.Color gradientDarkColor>;

        specialinvoke $r1.<java.awt.GradientPaint: void <init>(float,float,java.awt.Color,float,float,java.awt.Color)>(0.0F, 0.0F, $r4, 1.0F, 0.0F, $r3);

        specialinvoke $r0.<org.jdesktop.swingx.painter.MattePainter: void <init>(java.awt.Paint)>($r1);

        virtualinvoke $r0.<org.jdesktop.swingx.painter.MattePainter: void setPaintStretched(boolean)>(1);

        $r5 = new org.jdesktop.swingx.plaf.PainterUIResource;

        specialinvoke $r5.<org.jdesktop.swingx.plaf.PainterUIResource: void <init>(org.jdesktop.swingx.painter.Painter)>($r0);

        return $r5;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        java.lang.String $r2;
        java.util.logging.Logger $r3;
        boolean $z0, $z1;

        $r0 = class "Lorg/jdesktop/swingx/plaf/basic/BasicHeaderUI;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.jdesktop.swingx.plaf.basic.BasicHeaderUI: boolean $assertionsDisabled> = $z1;

        $r1 = class "Lorg/jdesktop/swingx/plaf/basic/BasicHeaderUI;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r2);

        <org.jdesktop.swingx.plaf.basic.BasicHeaderUI: java.util.logging.Logger LOG> = $r3;

        return;
    }
}
