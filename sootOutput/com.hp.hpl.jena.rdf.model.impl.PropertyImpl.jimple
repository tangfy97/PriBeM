public class com.hp.hpl.jena.rdf.model.impl.PropertyImpl extends com.hp.hpl.jena.rdf.model.impl.ResourceImpl implements com.hp.hpl.jena.rdf.model.Property
{
    public static final com.hp.hpl.jena.enhanced.Implementation factory;
    protected static org.slf4j.Logger logger;
    protected int ordinal;

    public void <init>(java.lang.String)
    {
        int $i1;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.impl.PropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.PropertyImpl;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: void <init>(java.lang.String)>(r1);

        $i1 = (int) -1;

        r0.<com.hp.hpl.jena.rdf.model.impl.PropertyImpl: int ordinal> = $i1;

        specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.PropertyImpl: void checkLocalName()>();

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.PropertyImpl: void checkOrdinal()>();

        return;
    }

    public com.hp.hpl.jena.rdf.model.Property inModel(com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.Property $r4;
        com.hp.hpl.jena.rdf.model.Model $r1, r2;
        java.lang.String $r3;
        com.hp.hpl.jena.rdf.model.impl.PropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.PropertyImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.PropertyImpl: com.hp.hpl.jena.rdf.model.Model getModel()>();

        if $r1 != r2 goto label1;

        $r4 = r0;

        goto label2;

     label1:
        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.PropertyImpl: java.lang.String getURI()>();

        $r4 = interfaceinvoke r2.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Property createProperty(java.lang.String)>($r3);

     label2:
        return $r4;
    }

    private void checkLocalName()
    {
        com.hp.hpl.jena.shared.InvalidPropertyURIException $r2;
        java.lang.String $r1, $r3;
        com.hp.hpl.jena.rdf.model.impl.PropertyImpl r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.PropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.PropertyImpl: java.lang.String getLocalName()>();

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label2;

     label1:
        $r2 = new com.hp.hpl.jena.shared.InvalidPropertyURIException;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.PropertyImpl: java.lang.String getURI()>();

        specialinvoke $r2.<com.hp.hpl.jena.shared.InvalidPropertyURIException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label2:
        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        int $i1;
        java.lang.String r1, r2;
        com.hp.hpl.jena.rdf.model.impl.PropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.PropertyImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        $i1 = (int) -1;

        r0.<com.hp.hpl.jena.rdf.model.impl.PropertyImpl: int ordinal> = $i1;

        specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.PropertyImpl: void checkLocalName()>();

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.PropertyImpl: void checkOrdinal()>();

        return;
    }

    public void <init>(java.lang.String, com.hp.hpl.jena.rdf.model.impl.ModelCom)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r2;
        int $i1;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.impl.PropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.PropertyImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: void <init>(java.lang.String,com.hp.hpl.jena.rdf.model.impl.ModelCom)>(r1, r2);

        $i1 = (int) -1;

        r0.<com.hp.hpl.jena.rdf.model.impl.PropertyImpl: int ordinal> = $i1;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.PropertyImpl: void checkOrdinal()>();

        return;
    }

    public void <init>(java.lang.String, java.lang.String, com.hp.hpl.jena.rdf.model.impl.ModelCom)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r3;
        int $i1;
        java.lang.String r1, r2;
        com.hp.hpl.jena.rdf.model.impl.PropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.PropertyImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: void <init>(java.lang.String,java.lang.String,com.hp.hpl.jena.rdf.model.impl.ModelCom)>(r1, r2, r3);

        $i1 = (int) -1;

        r0.<com.hp.hpl.jena.rdf.model.impl.PropertyImpl: int ordinal> = $i1;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.PropertyImpl: void checkOrdinal()>();

        return;
    }

    public void <init>(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.enhanced.EnhGraph)
    {
        int $i1;
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.rdf.model.impl.PropertyImpl r0;
        com.hp.hpl.jena.enhanced.EnhGraph r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.PropertyImpl;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.enhanced.EnhGraph;

        specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.enhanced.EnhGraph)>(r1, r2);

        $i1 = (int) -1;

        r0.<com.hp.hpl.jena.rdf.model.impl.PropertyImpl: int ordinal> = $i1;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.PropertyImpl: void checkOrdinal()>();

        return;
    }

    public void <init>(java.lang.String, java.lang.String, int, com.hp.hpl.jena.rdf.model.impl.ModelCom)
    {
        com.hp.hpl.jena.rdf.model.impl.ModelCom r3;
        int i0, $i2;
        java.lang.String r1, r2;
        com.hp.hpl.jena.rdf.model.impl.PropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.PropertyImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: com.hp.hpl.jena.rdf.model.impl.ModelCom;

        specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.ResourceImpl: void <init>(java.lang.String,java.lang.String,com.hp.hpl.jena.rdf.model.impl.ModelCom)>(r1, r2, r3);

        $i2 = (int) -1;

        r0.<com.hp.hpl.jena.rdf.model.impl.PropertyImpl: int ordinal> = $i2;

        specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.PropertyImpl: void checkLocalName()>();

        r0.<com.hp.hpl.jena.rdf.model.impl.PropertyImpl: int ordinal> = i0;

        return;
    }

    public boolean isProperty()
    {
        com.hp.hpl.jena.rdf.model.impl.PropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.PropertyImpl;

        return 1;
    }

    public int getOrdinal()
    {
        int $i0, $i1, $i2;
        com.hp.hpl.jena.rdf.model.impl.PropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.PropertyImpl;

        $i0 = r0.<com.hp.hpl.jena.rdf.model.impl.PropertyImpl: int ordinal>;

        if $i0 >= 0 goto label1;

        $i2 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.PropertyImpl: int computeOrdinal()>();

        r0.<com.hp.hpl.jena.rdf.model.impl.PropertyImpl: int ordinal> = $i2;

     label1:
        $i1 = r0.<com.hp.hpl.jena.rdf.model.impl.PropertyImpl: int ordinal>;

        return $i1;
    }

    private int computeOrdinal()
    {
        com.hp.hpl.jena.rdf.model.impl.PropertyImpl r0;
        int $i0;
        java.lang.String $r1, $r2, $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.PropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.PropertyImpl: java.lang.String getLocalName()>();

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.PropertyImpl: java.lang.String getNameSpace()>();

        $r3 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: java.lang.String getURI()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke $r1.<java.lang.String: boolean matches(java.lang.String)>("_[0-9]+");

        if $z1 == 0 goto label1;

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(1);

        $i0 = specialinvoke r0.<com.hp.hpl.jena.rdf.model.impl.PropertyImpl: int parseInt(java.lang.String)>($r4);

        return $i0;

     label1:
        return 0;
    }

    private int parseInt(java.lang.String)
    {
        com.hp.hpl.jena.shared.JenaException $r2;
        java.lang.NumberFormatException $r1;
        com.hp.hpl.jena.rdf.model.impl.PropertyImpl r7;
        int $i0;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String r0, $r6;

        r7 := @this: com.hp.hpl.jena.rdf.model.impl.PropertyImpl;

        r0 := @parameter0: java.lang.String;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r0);

     label2:
        return $i0;

     label3:
        $r1 := @caughtexception;

        $r2 = new com.hp.hpl.jena.shared.JenaException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("checkOrdinal fails on ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<com.hp.hpl.jena.shared.JenaException: void <init>(java.lang.String,java.lang.Throwable)>($r6, $r1);

        throw $r2;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    protected void checkOrdinal()
    {
        com.hp.hpl.jena.rdf.model.impl.PropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.PropertyImpl;

        return;
    }

    public volatile com.hp.hpl.jena.rdf.model.Resource inModel(com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.Model r1;
        com.hp.hpl.jena.rdf.model.impl.PropertyImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.PropertyImpl;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.PropertyImpl: com.hp.hpl.jena.rdf.model.Property inModel(com.hp.hpl.jena.rdf.model.Model)>(r1);

        return $r2;
    }

    public volatile com.hp.hpl.jena.rdf.model.RDFNode inModel(com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.Model r1;
        com.hp.hpl.jena.rdf.model.impl.PropertyImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r2;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.PropertyImpl;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.model.impl.PropertyImpl: com.hp.hpl.jena.rdf.model.Property inModel(com.hp.hpl.jena.rdf.model.Model)>(r1);

        return $r2;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.rdf.model.impl.PropertyImpl$1 $r0;
        org.slf4j.Logger $r1;

        $r0 = new com.hp.hpl.jena.rdf.model.impl.PropertyImpl$1;

        specialinvoke $r0.<com.hp.hpl.jena.rdf.model.impl.PropertyImpl$1: void <init>()>();

        <com.hp.hpl.jena.rdf.model.impl.PropertyImpl: com.hp.hpl.jena.enhanced.Implementation factory> = $r0;

        $r1 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lcom/hp/hpl/jena/rdf/model/impl/PropertyImpl;");

        <com.hp.hpl.jena.rdf.model.impl.PropertyImpl: org.slf4j.Logger logger> = $r1;

        return;
    }
}
