public class org.apache.lucene.document.DerefBytesDocValuesField extends org.apache.lucene.document.BinaryDocValuesField
{
    public static final org.apache.lucene.document.FieldType TYPE_FIXED_LEN;
    public static final org.apache.lucene.document.FieldType TYPE_VAR_LEN;

    public void <init>(java.lang.String, org.apache.lucene.util.BytesRef)
    {
        java.lang.String r1;
        org.apache.lucene.document.DerefBytesDocValuesField r0;
        org.apache.lucene.util.BytesRef r2;

        r0 := @this: org.apache.lucene.document.DerefBytesDocValuesField;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.lucene.util.BytesRef;

        specialinvoke r0.<org.apache.lucene.document.BinaryDocValuesField: void <init>(java.lang.String,org.apache.lucene.util.BytesRef)>(r1, r2);

        return;
    }

    public void <init>(java.lang.String, org.apache.lucene.util.BytesRef, boolean)
    {
        org.apache.lucene.document.DerefBytesDocValuesField r0;
        org.apache.lucene.util.BytesRef r2;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.apache.lucene.document.DerefBytesDocValuesField;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.lucene.util.BytesRef;

        z0 := @parameter2: boolean;

        specialinvoke r0.<org.apache.lucene.document.BinaryDocValuesField: void <init>(java.lang.String,org.apache.lucene.util.BytesRef)>(r1, r2);

        return;
    }

    static void <clinit>()
    {
        org.apache.lucene.document.FieldType $r0, $r1;

        $r0 = <org.apache.lucene.document.BinaryDocValuesField: org.apache.lucene.document.FieldType TYPE>;

        <org.apache.lucene.document.DerefBytesDocValuesField: org.apache.lucene.document.FieldType TYPE_FIXED_LEN> = $r0;

        $r1 = <org.apache.lucene.document.BinaryDocValuesField: org.apache.lucene.document.FieldType TYPE>;

        <org.apache.lucene.document.DerefBytesDocValuesField: org.apache.lucene.document.FieldType TYPE_VAR_LEN> = $r1;

        return;
    }
}
