public class org.eclipse.jetty.http.HttpBuffersImpl extends org.eclipse.jetty.util.component.AbstractLifeCycle implements org.eclipse.jetty.http.HttpBuffers
{
    private int _requestBufferSize;
    private int _requestHeaderSize;
    private int _responseBufferSize;
    private int _responseHeaderSize;
    private int _maxBuffers;
    private org.eclipse.jetty.io.Buffers$Type _requestBufferType;
    private org.eclipse.jetty.io.Buffers$Type _requestHeaderType;
    private org.eclipse.jetty.io.Buffers$Type _responseBufferType;
    private org.eclipse.jetty.io.Buffers$Type _responseHeaderType;
    private org.eclipse.jetty.io.Buffers _requestBuffers;
    private org.eclipse.jetty.io.Buffers _responseBuffers;

    public void <init>()
    {
        org.eclipse.jetty.http.HttpBuffersImpl r0;
        int $i1;
        org.eclipse.jetty.io.Buffers$Type $r1, $r2, $r3, $r4;

        r0 := @this: org.eclipse.jetty.http.HttpBuffersImpl;

        specialinvoke r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: void <init>()>();

        r0.<org.eclipse.jetty.http.HttpBuffersImpl: int _requestBufferSize> = 16384;

        r0.<org.eclipse.jetty.http.HttpBuffersImpl: int _requestHeaderSize> = 6144;

        $i1 = (int) 32768;

        r0.<org.eclipse.jetty.http.HttpBuffersImpl: int _responseBufferSize> = $i1;

        r0.<org.eclipse.jetty.http.HttpBuffersImpl: int _responseHeaderSize> = 6144;

        r0.<org.eclipse.jetty.http.HttpBuffersImpl: int _maxBuffers> = 1024;

        $r1 = <org.eclipse.jetty.io.Buffers$Type: org.eclipse.jetty.io.Buffers$Type BYTE_ARRAY>;

        r0.<org.eclipse.jetty.http.HttpBuffersImpl: org.eclipse.jetty.io.Buffers$Type _requestBufferType> = $r1;

        $r2 = <org.eclipse.jetty.io.Buffers$Type: org.eclipse.jetty.io.Buffers$Type BYTE_ARRAY>;

        r0.<org.eclipse.jetty.http.HttpBuffersImpl: org.eclipse.jetty.io.Buffers$Type _requestHeaderType> = $r2;

        $r3 = <org.eclipse.jetty.io.Buffers$Type: org.eclipse.jetty.io.Buffers$Type BYTE_ARRAY>;

        r0.<org.eclipse.jetty.http.HttpBuffersImpl: org.eclipse.jetty.io.Buffers$Type _responseBufferType> = $r3;

        $r4 = <org.eclipse.jetty.io.Buffers$Type: org.eclipse.jetty.io.Buffers$Type BYTE_ARRAY>;

        r0.<org.eclipse.jetty.http.HttpBuffersImpl: org.eclipse.jetty.io.Buffers$Type _responseHeaderType> = $r4;

        return;
    }

    public int getRequestBufferSize()
    {
        org.eclipse.jetty.http.HttpBuffersImpl r0;
        int $i0;

        r0 := @this: org.eclipse.jetty.http.HttpBuffersImpl;

        $i0 = r0.<org.eclipse.jetty.http.HttpBuffersImpl: int _requestBufferSize>;

        return $i0;
    }

    public void setRequestBufferSize(int)
    {
        org.eclipse.jetty.http.HttpBuffersImpl r0;
        int i0;

        r0 := @this: org.eclipse.jetty.http.HttpBuffersImpl;

        i0 := @parameter0: int;

        r0.<org.eclipse.jetty.http.HttpBuffersImpl: int _requestBufferSize> = i0;

        return;
    }

    public int getRequestHeaderSize()
    {
        org.eclipse.jetty.http.HttpBuffersImpl r0;
        int $i0;

        r0 := @this: org.eclipse.jetty.http.HttpBuffersImpl;

        $i0 = r0.<org.eclipse.jetty.http.HttpBuffersImpl: int _requestHeaderSize>;

        return $i0;
    }

    public void setRequestHeaderSize(int)
    {
        org.eclipse.jetty.http.HttpBuffersImpl r0;
        int i0;

        r0 := @this: org.eclipse.jetty.http.HttpBuffersImpl;

        i0 := @parameter0: int;

        r0.<org.eclipse.jetty.http.HttpBuffersImpl: int _requestHeaderSize> = i0;

        return;
    }

    public int getResponseBufferSize()
    {
        org.eclipse.jetty.http.HttpBuffersImpl r0;
        int $i0;

        r0 := @this: org.eclipse.jetty.http.HttpBuffersImpl;

        $i0 = r0.<org.eclipse.jetty.http.HttpBuffersImpl: int _responseBufferSize>;

        return $i0;
    }

    public void setResponseBufferSize(int)
    {
        org.eclipse.jetty.http.HttpBuffersImpl r0;
        int i0;

        r0 := @this: org.eclipse.jetty.http.HttpBuffersImpl;

        i0 := @parameter0: int;

        r0.<org.eclipse.jetty.http.HttpBuffersImpl: int _responseBufferSize> = i0;

        return;
    }

    public int getResponseHeaderSize()
    {
        org.eclipse.jetty.http.HttpBuffersImpl r0;
        int $i0;

        r0 := @this: org.eclipse.jetty.http.HttpBuffersImpl;

        $i0 = r0.<org.eclipse.jetty.http.HttpBuffersImpl: int _responseHeaderSize>;

        return $i0;
    }

    public void setResponseHeaderSize(int)
    {
        org.eclipse.jetty.http.HttpBuffersImpl r0;
        int i0;

        r0 := @this: org.eclipse.jetty.http.HttpBuffersImpl;

        i0 := @parameter0: int;

        r0.<org.eclipse.jetty.http.HttpBuffersImpl: int _responseHeaderSize> = i0;

        return;
    }

    public org.eclipse.jetty.io.Buffers$Type getRequestBufferType()
    {
        org.eclipse.jetty.http.HttpBuffersImpl r0;
        org.eclipse.jetty.io.Buffers$Type $r1;

        r0 := @this: org.eclipse.jetty.http.HttpBuffersImpl;

        $r1 = r0.<org.eclipse.jetty.http.HttpBuffersImpl: org.eclipse.jetty.io.Buffers$Type _requestBufferType>;

        return $r1;
    }

    public void setRequestBufferType(org.eclipse.jetty.io.Buffers$Type)
    {
        org.eclipse.jetty.http.HttpBuffersImpl r0;
        org.eclipse.jetty.io.Buffers$Type r1;

        r0 := @this: org.eclipse.jetty.http.HttpBuffersImpl;

        r1 := @parameter0: org.eclipse.jetty.io.Buffers$Type;

        r0.<org.eclipse.jetty.http.HttpBuffersImpl: org.eclipse.jetty.io.Buffers$Type _requestBufferType> = r1;

        return;
    }

    public org.eclipse.jetty.io.Buffers$Type getRequestHeaderType()
    {
        org.eclipse.jetty.http.HttpBuffersImpl r0;
        org.eclipse.jetty.io.Buffers$Type $r1;

        r0 := @this: org.eclipse.jetty.http.HttpBuffersImpl;

        $r1 = r0.<org.eclipse.jetty.http.HttpBuffersImpl: org.eclipse.jetty.io.Buffers$Type _requestHeaderType>;

        return $r1;
    }

    public void setRequestHeaderType(org.eclipse.jetty.io.Buffers$Type)
    {
        org.eclipse.jetty.http.HttpBuffersImpl r0;
        org.eclipse.jetty.io.Buffers$Type r1;

        r0 := @this: org.eclipse.jetty.http.HttpBuffersImpl;

        r1 := @parameter0: org.eclipse.jetty.io.Buffers$Type;

        r0.<org.eclipse.jetty.http.HttpBuffersImpl: org.eclipse.jetty.io.Buffers$Type _requestHeaderType> = r1;

        return;
    }

    public org.eclipse.jetty.io.Buffers$Type getResponseBufferType()
    {
        org.eclipse.jetty.http.HttpBuffersImpl r0;
        org.eclipse.jetty.io.Buffers$Type $r1;

        r0 := @this: org.eclipse.jetty.http.HttpBuffersImpl;

        $r1 = r0.<org.eclipse.jetty.http.HttpBuffersImpl: org.eclipse.jetty.io.Buffers$Type _responseBufferType>;

        return $r1;
    }

    public void setResponseBufferType(org.eclipse.jetty.io.Buffers$Type)
    {
        org.eclipse.jetty.http.HttpBuffersImpl r0;
        org.eclipse.jetty.io.Buffers$Type r1;

        r0 := @this: org.eclipse.jetty.http.HttpBuffersImpl;

        r1 := @parameter0: org.eclipse.jetty.io.Buffers$Type;

        r0.<org.eclipse.jetty.http.HttpBuffersImpl: org.eclipse.jetty.io.Buffers$Type _responseBufferType> = r1;

        return;
    }

    public org.eclipse.jetty.io.Buffers$Type getResponseHeaderType()
    {
        org.eclipse.jetty.http.HttpBuffersImpl r0;
        org.eclipse.jetty.io.Buffers$Type $r1;

        r0 := @this: org.eclipse.jetty.http.HttpBuffersImpl;

        $r1 = r0.<org.eclipse.jetty.http.HttpBuffersImpl: org.eclipse.jetty.io.Buffers$Type _responseHeaderType>;

        return $r1;
    }

    public void setResponseHeaderType(org.eclipse.jetty.io.Buffers$Type)
    {
        org.eclipse.jetty.http.HttpBuffersImpl r0;
        org.eclipse.jetty.io.Buffers$Type r1;

        r0 := @this: org.eclipse.jetty.http.HttpBuffersImpl;

        r1 := @parameter0: org.eclipse.jetty.io.Buffers$Type;

        r0.<org.eclipse.jetty.http.HttpBuffersImpl: org.eclipse.jetty.io.Buffers$Type _responseHeaderType> = r1;

        return;
    }

    public void setRequestBuffers(org.eclipse.jetty.io.Buffers)
    {
        org.eclipse.jetty.http.HttpBuffersImpl r0;
        org.eclipse.jetty.io.Buffers r1;

        r0 := @this: org.eclipse.jetty.http.HttpBuffersImpl;

        r1 := @parameter0: org.eclipse.jetty.io.Buffers;

        r0.<org.eclipse.jetty.http.HttpBuffersImpl: org.eclipse.jetty.io.Buffers _requestBuffers> = r1;

        return;
    }

    public void setResponseBuffers(org.eclipse.jetty.io.Buffers)
    {
        org.eclipse.jetty.http.HttpBuffersImpl r0;
        org.eclipse.jetty.io.Buffers r1;

        r0 := @this: org.eclipse.jetty.http.HttpBuffersImpl;

        r1 := @parameter0: org.eclipse.jetty.io.Buffers;

        r0.<org.eclipse.jetty.http.HttpBuffersImpl: org.eclipse.jetty.io.Buffers _responseBuffers> = r1;

        return;
    }

    protected void doStart() throws java.lang.Exception
    {
        org.eclipse.jetty.io.Buffers $r4, $r8;
        org.eclipse.jetty.io.Buffers$Type $r1, $r2, $r3, $r5, $r6, $r7;
        org.eclipse.jetty.http.HttpBuffersImpl r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.eclipse.jetty.http.HttpBuffersImpl;

        $r1 = r0.<org.eclipse.jetty.http.HttpBuffersImpl: org.eclipse.jetty.io.Buffers$Type _requestHeaderType>;

        $i0 = r0.<org.eclipse.jetty.http.HttpBuffersImpl: int _requestHeaderSize>;

        $r2 = r0.<org.eclipse.jetty.http.HttpBuffersImpl: org.eclipse.jetty.io.Buffers$Type _requestBufferType>;

        $i1 = r0.<org.eclipse.jetty.http.HttpBuffersImpl: int _requestBufferSize>;

        $r3 = r0.<org.eclipse.jetty.http.HttpBuffersImpl: org.eclipse.jetty.io.Buffers$Type _requestBufferType>;

        $i2 = virtualinvoke r0.<org.eclipse.jetty.http.HttpBuffersImpl: int getMaxBuffers()>();

        $r4 = staticinvoke <org.eclipse.jetty.io.BuffersFactory: org.eclipse.jetty.io.Buffers newBuffers(org.eclipse.jetty.io.Buffers$Type,int,org.eclipse.jetty.io.Buffers$Type,int,org.eclipse.jetty.io.Buffers$Type,int)>($r1, $i0, $r2, $i1, $r3, $i2);

        r0.<org.eclipse.jetty.http.HttpBuffersImpl: org.eclipse.jetty.io.Buffers _requestBuffers> = $r4;

        $r5 = r0.<org.eclipse.jetty.http.HttpBuffersImpl: org.eclipse.jetty.io.Buffers$Type _responseHeaderType>;

        $i3 = r0.<org.eclipse.jetty.http.HttpBuffersImpl: int _responseHeaderSize>;

        $r6 = r0.<org.eclipse.jetty.http.HttpBuffersImpl: org.eclipse.jetty.io.Buffers$Type _responseBufferType>;

        $i4 = r0.<org.eclipse.jetty.http.HttpBuffersImpl: int _responseBufferSize>;

        $r7 = r0.<org.eclipse.jetty.http.HttpBuffersImpl: org.eclipse.jetty.io.Buffers$Type _responseBufferType>;

        $i5 = virtualinvoke r0.<org.eclipse.jetty.http.HttpBuffersImpl: int getMaxBuffers()>();

        $r8 = staticinvoke <org.eclipse.jetty.io.BuffersFactory: org.eclipse.jetty.io.Buffers newBuffers(org.eclipse.jetty.io.Buffers$Type,int,org.eclipse.jetty.io.Buffers$Type,int,org.eclipse.jetty.io.Buffers$Type,int)>($r5, $i3, $r6, $i4, $r7, $i5);

        r0.<org.eclipse.jetty.http.HttpBuffersImpl: org.eclipse.jetty.io.Buffers _responseBuffers> = $r8;

        specialinvoke r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: void doStart()>();

        return;
    }

    protected void doStop() throws java.lang.Exception
    {
        org.eclipse.jetty.http.HttpBuffersImpl r0;

        r0 := @this: org.eclipse.jetty.http.HttpBuffersImpl;

        r0.<org.eclipse.jetty.http.HttpBuffersImpl: org.eclipse.jetty.io.Buffers _requestBuffers> = null;

        r0.<org.eclipse.jetty.http.HttpBuffersImpl: org.eclipse.jetty.io.Buffers _responseBuffers> = null;

        return;
    }

    public org.eclipse.jetty.io.Buffers getRequestBuffers()
    {
        org.eclipse.jetty.http.HttpBuffersImpl r0;
        org.eclipse.jetty.io.Buffers $r1;

        r0 := @this: org.eclipse.jetty.http.HttpBuffersImpl;

        $r1 = r0.<org.eclipse.jetty.http.HttpBuffersImpl: org.eclipse.jetty.io.Buffers _requestBuffers>;

        return $r1;
    }

    public org.eclipse.jetty.io.Buffers getResponseBuffers()
    {
        org.eclipse.jetty.http.HttpBuffersImpl r0;
        org.eclipse.jetty.io.Buffers $r1;

        r0 := @this: org.eclipse.jetty.http.HttpBuffersImpl;

        $r1 = r0.<org.eclipse.jetty.http.HttpBuffersImpl: org.eclipse.jetty.io.Buffers _responseBuffers>;

        return $r1;
    }

    public void setMaxBuffers(int)
    {
        org.eclipse.jetty.http.HttpBuffersImpl r0;
        int i0;

        r0 := @this: org.eclipse.jetty.http.HttpBuffersImpl;

        i0 := @parameter0: int;

        r0.<org.eclipse.jetty.http.HttpBuffersImpl: int _maxBuffers> = i0;

        return;
    }

    public int getMaxBuffers()
    {
        org.eclipse.jetty.http.HttpBuffersImpl r0;
        int $i0;

        r0 := @this: org.eclipse.jetty.http.HttpBuffersImpl;

        $i0 = r0.<org.eclipse.jetty.http.HttpBuffersImpl: int _maxBuffers>;

        return $i0;
    }

    public java.lang.String toString()
    {
        org.eclipse.jetty.io.Buffers $r2, $r5;
        org.eclipse.jetty.http.HttpBuffersImpl r1;
        java.lang.StringBuilder $r0, $r3, $r4, $r6;
        java.lang.String $r7;

        r1 := @this: org.eclipse.jetty.http.HttpBuffersImpl;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.eclipse.jetty.http.HttpBuffersImpl: org.eclipse.jetty.io.Buffers _requestBuffers>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r5 = r1.<org.eclipse.jetty.http.HttpBuffersImpl: org.eclipse.jetty.io.Buffers _responseBuffers>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
}
