public abstract class com.google.wave.api.data.ElementSerializer extends java.lang.Object
{
    private static final java.util.Map typeToSerializer;
    private static final java.util.Map tagToSerializer;
    private static final java.lang.String CAPTION_TAG;
    private static final java.lang.String CLICK_TAG;
    private static final java.lang.String ATTACHMENT_STR;
    private static final java.lang.String CAPTION_STR;
    private static final java.util.regex.Pattern ATTACHMENT_URL_PATTERN;
    private static final java.util.regex.Pattern MIME_TYPE_PATTERN;
    private static java.lang.String attachmentDownloadHostUrl;
    private final java.lang.String tagName;
    private final com.google.wave.api.ElementType elementType;

    public static void setAttachmentDownloadHostUrl(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        <com.google.wave.api.data.ElementSerializer: java.lang.String attachmentDownloadHostUrl> = r0;

        return;
    }

    public static org.waveprotocol.wave.model.document.util.XmlStringBuilder apiElementToXml(com.google.wave.api.Element)
    {
        com.google.wave.api.data.ElementSerializer r4;
        org.waveprotocol.wave.model.document.util.XmlStringBuilder $r5;
        com.google.wave.api.Element r0;
        java.util.Map $r1;
        java.lang.Object $r3;
        com.google.wave.api.ElementType $r2;

        r0 := @parameter0: com.google.wave.api.Element;

        $r1 = <com.google.wave.api.data.ElementSerializer: java.util.Map typeToSerializer>;

        $r2 = virtualinvoke r0.<com.google.wave.api.Element: com.google.wave.api.ElementType getType()>();

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r4 = (com.google.wave.api.data.ElementSerializer) $r3;

        if r4 != null goto label1;

        return null;

     label1:
        $r5 = virtualinvoke r4.<com.google.wave.api.data.ElementSerializer: org.waveprotocol.wave.model.document.util.XmlStringBuilder toXml(com.google.wave.api.Element)>(r0);

        return $r5;
    }

    public static com.google.wave.api.Element xmlToApiElement(org.waveprotocol.wave.model.document.Document, org.waveprotocol.wave.model.document.Doc$E, org.waveprotocol.wave.model.wave.Wavelet)
    {
        com.google.wave.api.data.ElementSerializer r5;
        com.google.wave.api.Element $r7;
        org.waveprotocol.wave.model.document.Document r1;
        org.waveprotocol.wave.model.wave.Wavelet r6;
        java.util.Map $r2;
        java.lang.Object $r4;
        java.lang.String $r3;
        org.waveprotocol.wave.model.document.Doc$E r0;

        r1 := @parameter0: org.waveprotocol.wave.model.document.Document;

        r0 := @parameter1: org.waveprotocol.wave.model.document.Doc$E;

        r6 := @parameter2: org.waveprotocol.wave.model.wave.Wavelet;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = <com.google.wave.api.data.ElementSerializer: java.util.Map tagToSerializer>;

        $r3 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.Document: java.lang.String getTagName(java.lang.Object)>(r0);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r5 = (com.google.wave.api.data.ElementSerializer) $r4;

        if r5 != null goto label2;

        return null;

     label2:
        $r7 = virtualinvoke r5.<com.google.wave.api.data.ElementSerializer: com.google.wave.api.Element fromXml(org.waveprotocol.wave.model.document.Document,org.waveprotocol.wave.model.document.Doc$E,org.waveprotocol.wave.model.wave.Wavelet)>(r1, r0, r6);

        return $r7;
    }

    public static java.lang.String tagNameForElementType(com.google.wave.api.ElementType)
    {
        com.google.wave.api.data.ElementSerializer r3;
        java.util.Map $r1;
        java.lang.Object $r2;
        java.lang.String $r4;
        com.google.wave.api.ElementType r0;

        r0 := @parameter0: com.google.wave.api.ElementType;

        $r1 = <com.google.wave.api.data.ElementSerializer: java.util.Map typeToSerializer>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r3 = (com.google.wave.api.data.ElementSerializer) $r2;

        if r3 == null goto label1;

        $r4 = r3.<com.google.wave.api.data.ElementSerializer: java.lang.String tagName>;

        return $r4;

     label1:
        return null;
    }

    public static java.util.Map serialize(org.waveprotocol.wave.model.document.Document, org.waveprotocol.wave.model.wave.Wavelet)
    {
        com.google.wave.api.Element $r7;
        org.waveprotocol.wave.model.document.Doc$N r10;
        java.util.HashMap $r0;
        org.waveprotocol.wave.model.document.Document r2;
        java.lang.Integer $r8;
        com.google.wave.api.data.ApiView $r1;
        org.waveprotocol.wave.model.wave.Wavelet r3;
        int $i0, $i1;
        java.lang.Object $r4, $r5, $r9, $r11;
        org.waveprotocol.wave.model.document.Doc$E r6;

        r2 := @parameter0: org.waveprotocol.wave.model.document.Document;

        r3 := @parameter1: org.waveprotocol.wave.model.wave.Wavelet;

        $r0 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>();

        $r1 = new com.google.wave.api.data.ApiView;

        specialinvoke $r1.<com.google.wave.api.data.ApiView: void <init>(org.waveprotocol.wave.model.document.Document,org.waveprotocol.wave.model.wave.Wavelet)>(r2, r3);

        $r4 = staticinvoke <org.waveprotocol.wave.model.conversation.Blips: java.lang.Object getBody(org.waveprotocol.wave.model.document.ReadableDocument)>(r2);

        r10 = (org.waveprotocol.wave.model.document.Doc$N) $r4;

        if r10 == null goto label1;

        $r9 = interfaceinvoke r2.<org.waveprotocol.wave.model.document.Document: java.lang.Object getFirstChild(java.lang.Object)>(r10);

        r10 = (org.waveprotocol.wave.model.document.Doc$N) $r9;

     label1:
        if r10 == null goto label3;

        $r5 = interfaceinvoke r2.<org.waveprotocol.wave.model.document.Document: java.lang.Object asElement(java.lang.Object)>(r10);

        r6 = (org.waveprotocol.wave.model.document.Doc$E) $r5;

        if r6 == null goto label2;

        $r7 = staticinvoke <com.google.wave.api.data.ElementSerializer: com.google.wave.api.Element xmlToApiElement(org.waveprotocol.wave.model.document.Document,org.waveprotocol.wave.model.document.Doc$E,org.waveprotocol.wave.model.wave.Wavelet)>(r2, r6, r3);

        if $r7 == null goto label2;

        $i0 = interfaceinvoke r2.<org.waveprotocol.wave.model.document.Document: int getLocation(java.lang.Object)>(r6);

        $i1 = virtualinvoke $r1.<com.google.wave.api.data.ApiView: int transformToTextOffset(int)>($i0);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r7);

     label2:
        $r11 = interfaceinvoke r2.<org.waveprotocol.wave.model.document.Document: java.lang.Object getNextSibling(java.lang.Object)>(r10);

        r10 = (org.waveprotocol.wave.model.document.Doc$N) $r11;

        goto label1;

     label3:
        return $r0;
    }

    private static void register(com.google.wave.api.data.ElementSerializer)
    {
        com.google.wave.api.data.ElementSerializer r0;
        java.util.Map $r2, $r4;
        java.lang.String $r3;
        com.google.wave.api.ElementType $r1;

        r0 := @parameter0: com.google.wave.api.data.ElementSerializer;

        $r2 = <com.google.wave.api.data.ElementSerializer: java.util.Map typeToSerializer>;

        $r1 = r0.<com.google.wave.api.data.ElementSerializer: com.google.wave.api.ElementType elementType>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r0);

        $r4 = <com.google.wave.api.data.ElementSerializer: java.util.Map tagToSerializer>;

        $r3 = r0.<com.google.wave.api.data.ElementSerializer: java.lang.String tagName>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r0);

        return;
    }

    protected abstract org.waveprotocol.wave.model.document.util.XmlStringBuilder toXml(com.google.wave.api.Element);

    protected abstract com.google.wave.api.Element fromXml(org.waveprotocol.wave.model.document.Document, org.waveprotocol.wave.model.document.Doc$E, org.waveprotocol.wave.model.wave.Wavelet);

    public java.lang.String getTagName()
    {
        com.google.wave.api.data.ElementSerializer r0;
        java.lang.String $r1;

        r0 := @this: com.google.wave.api.data.ElementSerializer;

        $r1 = r0.<com.google.wave.api.data.ElementSerializer: java.lang.String tagName>;

        return $r1;
    }

    public com.google.wave.api.ElementType getElementType()
    {
        com.google.wave.api.data.ElementSerializer r0;
        com.google.wave.api.ElementType $r1;

        r0 := @this: com.google.wave.api.data.ElementSerializer;

        $r1 = r0.<com.google.wave.api.data.ElementSerializer: com.google.wave.api.ElementType elementType>;

        return $r1;
    }

    protected transient org.waveprotocol.wave.model.document.util.XmlStringBuilder wrap(java.lang.String[])
    {
        org.waveprotocol.wave.model.document.util.XmlStringBuilder $r0, $r4;
        com.google.wave.api.data.ElementSerializer r1;
        java.lang.String[] r2;
        java.lang.String $r3;

        r1 := @this: com.google.wave.api.data.ElementSerializer;

        r2 := @parameter0: java.lang.String[];

        $r0 = staticinvoke <org.waveprotocol.wave.model.document.util.XmlStringBuilder: org.waveprotocol.wave.model.document.util.XmlStringBuilder createEmpty()>();

        $r3 = r1.<com.google.wave.api.data.ElementSerializer: java.lang.String tagName>;

        $r4 = virtualinvoke $r0.<org.waveprotocol.wave.model.document.util.XmlStringBuilder: org.waveprotocol.wave.model.document.util.XmlStringBuilder wrap(java.lang.String,java.lang.String[])>($r3, r2);

        return $r4;
    }

    protected transient org.waveprotocol.wave.model.document.util.XmlStringBuilder wrapWithContent(java.lang.String, java.lang.String[])
    {
        org.waveprotocol.wave.model.document.util.XmlStringBuilder $r1, $r5, $r6;
        com.google.wave.api.data.ElementSerializer r2;
        java.lang.String[] r3;
        java.lang.String r0, $r4;
        boolean $z0;

        r2 := @this: com.google.wave.api.data.ElementSerializer;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String[];

        $z0 = staticinvoke <com.google.common.base.Strings: boolean isNullOrEmpty(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        $r6 = virtualinvoke r2.<com.google.wave.api.data.ElementSerializer: org.waveprotocol.wave.model.document.util.XmlStringBuilder wrap(java.lang.String[])>(r3);

        return $r6;

     label1:
        $r1 = staticinvoke <org.waveprotocol.wave.model.document.util.XmlStringBuilder: org.waveprotocol.wave.model.document.util.XmlStringBuilder createText(java.lang.String)>(r0);

        $r4 = r2.<com.google.wave.api.data.ElementSerializer: java.lang.String tagName>;

        $r5 = virtualinvoke $r1.<org.waveprotocol.wave.model.document.util.XmlStringBuilder: org.waveprotocol.wave.model.document.util.XmlStringBuilder wrap(java.lang.String,java.lang.String[])>($r4, r3);

        return $r5;
    }

    protected com.google.wave.api.FormElement createFormElement(org.waveprotocol.wave.model.document.Document, org.waveprotocol.wave.model.document.Doc$E, java.lang.String)
    {
        com.google.wave.api.data.ElementSerializer r1;
        org.waveprotocol.wave.model.document.Document r2;
        java.lang.String $r5, r6;
        com.google.wave.api.ElementType $r4;
        com.google.wave.api.FormElement $r0;
        org.waveprotocol.wave.model.document.Doc$E r3;

        r1 := @this: com.google.wave.api.data.ElementSerializer;

        r2 := @parameter0: org.waveprotocol.wave.model.document.Document;

        r3 := @parameter1: org.waveprotocol.wave.model.document.Doc$E;

        r6 := @parameter2: java.lang.String;

        $r0 = new com.google.wave.api.FormElement;

        $r4 = r1.<com.google.wave.api.data.ElementSerializer: com.google.wave.api.ElementType elementType>;

        $r5 = interfaceinvoke r2.<org.waveprotocol.wave.model.document.Document: java.lang.String getAttribute(java.lang.Object,java.lang.String)>(r3, "name");

        specialinvoke $r0.<com.google.wave.api.FormElement: void <init>(com.google.wave.api.ElementType,java.lang.String)>($r4, $r5);

        if r6 == null goto label1;

        virtualinvoke $r0.<com.google.wave.api.FormElement: void setValue(java.lang.String)>(r6);

        virtualinvoke $r0.<com.google.wave.api.FormElement: void setDefaultValue(java.lang.String)>(r6);

     label1:
        return $r0;
    }

    protected com.google.wave.api.FormElement createFormElement(org.waveprotocol.wave.model.document.Document, org.waveprotocol.wave.model.document.Doc$E)
    {
        com.google.wave.api.data.ElementSerializer r0;
        org.waveprotocol.wave.model.document.Document r1;
        com.google.wave.api.FormElement $r3;
        org.waveprotocol.wave.model.document.Doc$E r2;

        r0 := @this: com.google.wave.api.data.ElementSerializer;

        r1 := @parameter0: org.waveprotocol.wave.model.document.Document;

        r2 := @parameter1: org.waveprotocol.wave.model.document.Doc$E;

        $r3 = virtualinvoke r0.<com.google.wave.api.data.ElementSerializer: com.google.wave.api.FormElement createFormElement(org.waveprotocol.wave.model.document.Document,org.waveprotocol.wave.model.document.Doc$E,java.lang.String)>(r1, r2, null);

        return $r3;
    }

    public void <init>(java.lang.String, com.google.wave.api.ElementType)
    {
        com.google.wave.api.data.ElementSerializer r0;
        java.lang.String r1;
        com.google.wave.api.ElementType r2;

        r0 := @this: com.google.wave.api.data.ElementSerializer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.google.wave.api.ElementType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.wave.api.data.ElementSerializer: java.lang.String tagName> = r1;

        r0.<com.google.wave.api.data.ElementSerializer: com.google.wave.api.ElementType elementType> = r2;

        return;
    }

    private static boolean isEmptyOrWhitespace(java.lang.String)
    {
        com.google.common.base.CharMatcher $r1;
        java.lang.String r0;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $r1 = <com.google.common.base.CharMatcher: com.google.common.base.CharMatcher WHITESPACE>;

        $z0 = virtualinvoke $r1.<com.google.common.base.CharMatcher: boolean matchesAllOf(java.lang.CharSequence)>(r0);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    private static java.lang.String getAttachmentUrl(java.lang.String)
    {
        java.lang.String r0, $r2, $r3;
        java.util.regex.Pattern $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.google.wave.api.data.ElementSerializer: java.util.regex.Pattern ATTACHMENT_URL_PATTERN>;

        $r2 = staticinvoke <com.google.wave.api.data.ElementSerializer: java.lang.String extractValue(java.lang.String,java.util.regex.Pattern)>(r0, $r1);

        if $r2 != null goto label1;

        $r3 = "";

        goto label2;

     label1:
        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("&amp;", "&");

     label2:
        return $r3;
    }

    private static java.lang.String extractValue(java.lang.String, java.util.regex.Pattern)
    {
        java.util.regex.Matcher $r2;
        java.util.regex.Pattern r0;
        java.lang.String r1, $r3;
        boolean $z0;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.regex.Pattern;

        $r2 = virtualinvoke r0.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    static boolean access$000(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <com.google.wave.api.data.ElementSerializer: boolean isEmptyOrWhitespace(java.lang.String)>(r0);

        return $z0;
    }

    static java.util.regex.Pattern access$100()
    {
        java.util.regex.Pattern $r0;

        $r0 = <com.google.wave.api.data.ElementSerializer: java.util.regex.Pattern MIME_TYPE_PATTERN>;

        return $r0;
    }

    static java.lang.String access$200(java.lang.String, java.util.regex.Pattern)
    {
        java.lang.String r0, $r2;
        java.util.regex.Pattern r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.regex.Pattern;

        $r2 = staticinvoke <com.google.wave.api.data.ElementSerializer: java.lang.String extractValue(java.lang.String,java.util.regex.Pattern)>(r0, r1);

        return $r2;
    }

    static java.lang.String access$300()
    {
        java.lang.String $r0;

        $r0 = <com.google.wave.api.data.ElementSerializer: java.lang.String attachmentDownloadHostUrl>;

        return $r0;
    }

    static java.lang.String access$400(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.google.wave.api.data.ElementSerializer: java.lang.String getAttachmentUrl(java.lang.String)>(r0);

        return $r1;
    }

    static void <clinit>()
    {
        com.google.wave.api.data.ElementSerializer$14 $r30;
        com.google.wave.api.data.ElementSerializer$10 $r22;
        com.google.wave.api.data.ElementSerializer$11 $r24;
        com.google.wave.api.data.ElementSerializer$12 $r26;
        com.google.wave.api.data.ElementSerializer$13 $r28;
        com.google.wave.api.ElementType $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31;
        java.util.regex.Pattern $r2, $r3;
        java.util.HashMap $r0, $r1;
        com.google.wave.api.data.ElementSerializer$9 $r20;
        com.google.wave.api.data.ElementSerializer$8 $r18;
        com.google.wave.api.data.ElementSerializer$7 $r16;
        com.google.wave.api.data.ElementSerializer$6 $r14;
        com.google.wave.api.data.ElementSerializer$5 $r12;
        com.google.wave.api.data.ElementSerializer$4 $r10;
        com.google.wave.api.data.ElementSerializer$3 $r8;
        com.google.wave.api.data.ElementSerializer$2 $r6;
        com.google.wave.api.data.ElementSerializer$1 $r4;

        <com.google.wave.api.data.ElementSerializer: java.lang.String CAPTION_STR> = "caption";

        <com.google.wave.api.data.ElementSerializer: java.lang.String ATTACHMENT_STR> = "attachment";

        <com.google.wave.api.data.ElementSerializer: java.lang.String CLICK_TAG> = "click";

        <com.google.wave.api.data.ElementSerializer: java.lang.String CAPTION_TAG> = "caption";

        $r0 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>();

        <com.google.wave.api.data.ElementSerializer: java.util.Map typeToSerializer> = $r0;

        $r1 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>();

        <com.google.wave.api.data.ElementSerializer: java.util.Map tagToSerializer> = $r1;

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("attachment_url\\\"\\ value\\=\\\"([^\\\"]*)\\\"");

        <com.google.wave.api.data.ElementSerializer: java.util.regex.Pattern ATTACHMENT_URL_PATTERN> = $r2;

        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("mime_type\\\"\\ value\\=\\\"([^\\\"]*)\\\"");

        <com.google.wave.api.data.ElementSerializer: java.util.regex.Pattern MIME_TYPE_PATTERN> = $r3;

        <com.google.wave.api.data.ElementSerializer: java.lang.String attachmentDownloadHostUrl> = "";

        $r4 = new com.google.wave.api.data.ElementSerializer$1;

        $r5 = <com.google.wave.api.ElementType: com.google.wave.api.ElementType LABEL>;

        specialinvoke $r4.<com.google.wave.api.data.ElementSerializer$1: void <init>(java.lang.String,com.google.wave.api.ElementType)>("label", $r5);

        staticinvoke <com.google.wave.api.data.ElementSerializer: void register(com.google.wave.api.data.ElementSerializer)>($r4);

        $r6 = new com.google.wave.api.data.ElementSerializer$2;

        $r7 = <com.google.wave.api.ElementType: com.google.wave.api.ElementType INPUT>;

        specialinvoke $r6.<com.google.wave.api.data.ElementSerializer$2: void <init>(java.lang.String,com.google.wave.api.ElementType)>("input", $r7);

        staticinvoke <com.google.wave.api.data.ElementSerializer: void register(com.google.wave.api.data.ElementSerializer)>($r6);

        $r8 = new com.google.wave.api.data.ElementSerializer$3;

        $r9 = <com.google.wave.api.ElementType: com.google.wave.api.ElementType PASSWORD>;

        specialinvoke $r8.<com.google.wave.api.data.ElementSerializer$3: void <init>(java.lang.String,com.google.wave.api.ElementType)>("password", $r9);

        staticinvoke <com.google.wave.api.data.ElementSerializer: void register(com.google.wave.api.data.ElementSerializer)>($r8);

        $r10 = new com.google.wave.api.data.ElementSerializer$4;

        $r11 = <com.google.wave.api.ElementType: com.google.wave.api.ElementType TEXTAREA>;

        specialinvoke $r10.<com.google.wave.api.data.ElementSerializer$4: void <init>(java.lang.String,com.google.wave.api.ElementType)>("textarea", $r11);

        staticinvoke <com.google.wave.api.data.ElementSerializer: void register(com.google.wave.api.data.ElementSerializer)>($r10);

        $r12 = new com.google.wave.api.data.ElementSerializer$5;

        $r13 = <com.google.wave.api.ElementType: com.google.wave.api.ElementType BUTTON>;

        specialinvoke $r12.<com.google.wave.api.data.ElementSerializer$5: void <init>(java.lang.String,com.google.wave.api.ElementType)>("button", $r13);

        staticinvoke <com.google.wave.api.data.ElementSerializer: void register(com.google.wave.api.data.ElementSerializer)>($r12);

        $r14 = new com.google.wave.api.data.ElementSerializer$6;

        $r15 = <com.google.wave.api.ElementType: com.google.wave.api.ElementType RADIO_BUTTON_GROUP>;

        specialinvoke $r14.<com.google.wave.api.data.ElementSerializer$6: void <init>(java.lang.String,com.google.wave.api.ElementType)>("radiogroup", $r15);

        staticinvoke <com.google.wave.api.data.ElementSerializer: void register(com.google.wave.api.data.ElementSerializer)>($r14);

        $r16 = new com.google.wave.api.data.ElementSerializer$7;

        $r17 = <com.google.wave.api.ElementType: com.google.wave.api.ElementType RADIO_BUTTON>;

        specialinvoke $r16.<com.google.wave.api.data.ElementSerializer$7: void <init>(java.lang.String,com.google.wave.api.ElementType)>("radio", $r17);

        staticinvoke <com.google.wave.api.data.ElementSerializer: void register(com.google.wave.api.data.ElementSerializer)>($r16);

        $r18 = new com.google.wave.api.data.ElementSerializer$8;

        $r19 = <com.google.wave.api.ElementType: com.google.wave.api.ElementType CHECK>;

        specialinvoke $r18.<com.google.wave.api.data.ElementSerializer$8: void <init>(java.lang.String,com.google.wave.api.ElementType)>("check", $r19);

        staticinvoke <com.google.wave.api.data.ElementSerializer: void register(com.google.wave.api.data.ElementSerializer)>($r18);

        $r20 = new com.google.wave.api.data.ElementSerializer$9;

        $r21 = <com.google.wave.api.ElementType: com.google.wave.api.ElementType INSTALLER>;

        specialinvoke $r20.<com.google.wave.api.data.ElementSerializer$9: void <init>(java.lang.String,com.google.wave.api.ElementType)>("extension_installer", $r21);

        staticinvoke <com.google.wave.api.data.ElementSerializer: void register(com.google.wave.api.data.ElementSerializer)>($r20);

        $r22 = new com.google.wave.api.data.ElementSerializer$10;

        $r23 = <com.google.wave.api.ElementType: com.google.wave.api.ElementType GADGET>;

        specialinvoke $r22.<com.google.wave.api.data.ElementSerializer$10: void <init>(java.lang.String,com.google.wave.api.ElementType)>("gadget", $r23);

        staticinvoke <com.google.wave.api.data.ElementSerializer: void register(com.google.wave.api.data.ElementSerializer)>($r22);

        $r24 = new com.google.wave.api.data.ElementSerializer$11;

        $r25 = <com.google.wave.api.ElementType: com.google.wave.api.ElementType IMAGE>;

        specialinvoke $r24.<com.google.wave.api.data.ElementSerializer$11: void <init>(java.lang.String,com.google.wave.api.ElementType)>("img", $r25);

        staticinvoke <com.google.wave.api.data.ElementSerializer: void register(com.google.wave.api.data.ElementSerializer)>($r24);

        $r26 = new com.google.wave.api.data.ElementSerializer$12;

        $r27 = <com.google.wave.api.ElementType: com.google.wave.api.ElementType ATTACHMENT>;

        specialinvoke $r26.<com.google.wave.api.data.ElementSerializer$12: void <init>(java.lang.String,com.google.wave.api.ElementType)>("image", $r27);

        staticinvoke <com.google.wave.api.data.ElementSerializer: void register(com.google.wave.api.data.ElementSerializer)>($r26);

        $r28 = new com.google.wave.api.data.ElementSerializer$13;

        $r29 = <com.google.wave.api.ElementType: com.google.wave.api.ElementType LINE>;

        specialinvoke $r28.<com.google.wave.api.data.ElementSerializer$13: void <init>(java.lang.String,com.google.wave.api.ElementType)>("line", $r29);

        staticinvoke <com.google.wave.api.data.ElementSerializer: void register(com.google.wave.api.data.ElementSerializer)>($r28);

        $r30 = new com.google.wave.api.data.ElementSerializer$14;

        $r31 = <com.google.wave.api.ElementType: com.google.wave.api.ElementType INLINE_BLIP>;

        specialinvoke $r30.<com.google.wave.api.data.ElementSerializer$14: void <init>(java.lang.String,com.google.wave.api.ElementType)>("reply", $r31);

        staticinvoke <com.google.wave.api.data.ElementSerializer: void register(com.google.wave.api.data.ElementSerializer)>($r30);

        return;
    }
}
