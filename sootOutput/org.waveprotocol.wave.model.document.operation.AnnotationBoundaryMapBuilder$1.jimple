final class org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$1 extends java.lang.Object implements java.util.Comparator
{

    void <init>()
    {
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$1 r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$Triplet, org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$Triplet)
    {
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$Triplet r0, r1;
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$1 r4;
        int $i0;
        java.lang.String $r2, $r3;

        r4 := @this: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$1;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$Triplet;

        r1 := @parameter1: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$Triplet;

        $r3 = r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$Triplet: java.lang.String key>;

        $r2 = r1.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$Triplet: java.lang.String key>;

        $i0 = virtualinvoke $r3.<java.lang.String: int compareTo(java.lang.String)>($r2);

        return $i0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$Triplet $r3, $r4;
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$1 r0;
        int $i0;
        java.lang.Object r1, r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$Triplet) r1;

        $r3 = (org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$Triplet) r2;

        $i0 = virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$1: int compare(org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$Triplet,org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMapBuilder$Triplet)>($r4, $r3);

        return $i0;
    }
}
