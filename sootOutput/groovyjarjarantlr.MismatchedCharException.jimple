public class groovyjarjarantlr.MismatchedCharException extends groovyjarjarantlr.RecognitionException
{
    public static final int CHAR;
    public static final int NOT_CHAR;
    public static final int RANGE;
    public static final int NOT_RANGE;
    public static final int SET;
    public static final int NOT_SET;
    public int mismatchType;
    public int foundChar;
    public int expecting;
    public int upper;
    public groovyjarjarantlr.collections.impl.BitSet set;
    public groovyjarjarantlr.CharScanner scanner;

    public void <init>()
    {
        groovyjarjarantlr.MismatchedCharException r0;

        r0 := @this: groovyjarjarantlr.MismatchedCharException;

        specialinvoke r0.<groovyjarjarantlr.RecognitionException: void <init>(java.lang.String)>("Mismatched char");

        return;
    }

    public void <init>(char, char, char, boolean, groovyjarjarantlr.CharScanner)
    {
        char c2, c3, c4;
        byte $b5;
        int $i0, $i1, $i6, $i7, $i8;
        java.lang.String $r2;
        groovyjarjarantlr.MismatchedCharException r0;
        groovyjarjarantlr.CharScanner r1;
        boolean z0;

        r0 := @this: groovyjarjarantlr.MismatchedCharException;

        c2 := @parameter0: char;

        c3 := @parameter1: char;

        c4 := @parameter2: char;

        z0 := @parameter3: boolean;

        r1 := @parameter4: groovyjarjarantlr.CharScanner;

        $r2 = virtualinvoke r1.<groovyjarjarantlr.CharScanner: java.lang.String getFilename()>();

        $i0 = virtualinvoke r1.<groovyjarjarantlr.CharScanner: int getLine()>();

        $i1 = virtualinvoke r1.<groovyjarjarantlr.CharScanner: int getColumn()>();

        specialinvoke r0.<groovyjarjarantlr.RecognitionException: void <init>(java.lang.String,java.lang.String,int,int)>("Mismatched char", $r2, $i0, $i1);

        if z0 == 0 goto label1;

        $b5 = 4;

        goto label2;

     label1:
        $b5 = 3;

     label2:
        r0.<groovyjarjarantlr.MismatchedCharException: int mismatchType> = $b5;

        $i6 = (int) c2;

        r0.<groovyjarjarantlr.MismatchedCharException: int foundChar> = $i6;

        $i7 = (int) c3;

        r0.<groovyjarjarantlr.MismatchedCharException: int expecting> = $i7;

        $i8 = (int) c4;

        r0.<groovyjarjarantlr.MismatchedCharException: int upper> = $i8;

        r0.<groovyjarjarantlr.MismatchedCharException: groovyjarjarantlr.CharScanner scanner> = r1;

        return;
    }

    public void <init>(char, char, boolean, groovyjarjarantlr.CharScanner)
    {
        char c2, c3;
        byte $b4;
        int $i0, $i1, $i5, $i6;
        java.lang.String $r2;
        groovyjarjarantlr.MismatchedCharException r0;
        groovyjarjarantlr.CharScanner r1;
        boolean z0;

        r0 := @this: groovyjarjarantlr.MismatchedCharException;

        c2 := @parameter0: char;

        c3 := @parameter1: char;

        z0 := @parameter2: boolean;

        r1 := @parameter3: groovyjarjarantlr.CharScanner;

        $r2 = virtualinvoke r1.<groovyjarjarantlr.CharScanner: java.lang.String getFilename()>();

        $i0 = virtualinvoke r1.<groovyjarjarantlr.CharScanner: int getLine()>();

        $i1 = virtualinvoke r1.<groovyjarjarantlr.CharScanner: int getColumn()>();

        specialinvoke r0.<groovyjarjarantlr.RecognitionException: void <init>(java.lang.String,java.lang.String,int,int)>("Mismatched char", $r2, $i0, $i1);

        if z0 == 0 goto label1;

        $b4 = 2;

        goto label2;

     label1:
        $b4 = 1;

     label2:
        r0.<groovyjarjarantlr.MismatchedCharException: int mismatchType> = $b4;

        $i5 = (int) c2;

        r0.<groovyjarjarantlr.MismatchedCharException: int foundChar> = $i5;

        $i6 = (int) c3;

        r0.<groovyjarjarantlr.MismatchedCharException: int expecting> = $i6;

        r0.<groovyjarjarantlr.MismatchedCharException: groovyjarjarantlr.CharScanner scanner> = r1;

        return;
    }

    public void <init>(char, groovyjarjarantlr.collections.impl.BitSet, boolean, groovyjarjarantlr.CharScanner)
    {
        char c2;
        groovyjarjarantlr.collections.impl.BitSet r3;
        byte $b3;
        int $i0, $i1, $i4;
        java.lang.String $r2;
        groovyjarjarantlr.MismatchedCharException r0;
        groovyjarjarantlr.CharScanner r1;
        boolean z0;

        r0 := @this: groovyjarjarantlr.MismatchedCharException;

        c2 := @parameter0: char;

        r3 := @parameter1: groovyjarjarantlr.collections.impl.BitSet;

        z0 := @parameter2: boolean;

        r1 := @parameter3: groovyjarjarantlr.CharScanner;

        $r2 = virtualinvoke r1.<groovyjarjarantlr.CharScanner: java.lang.String getFilename()>();

        $i0 = virtualinvoke r1.<groovyjarjarantlr.CharScanner: int getLine()>();

        $i1 = virtualinvoke r1.<groovyjarjarantlr.CharScanner: int getColumn()>();

        specialinvoke r0.<groovyjarjarantlr.RecognitionException: void <init>(java.lang.String,java.lang.String,int,int)>("Mismatched char", $r2, $i0, $i1);

        if z0 == 0 goto label1;

        $b3 = 6;

        goto label2;

     label1:
        $b3 = 5;

     label2:
        r0.<groovyjarjarantlr.MismatchedCharException: int mismatchType> = $b3;

        $i4 = (int) c2;

        r0.<groovyjarjarantlr.MismatchedCharException: int foundChar> = $i4;

        r0.<groovyjarjarantlr.MismatchedCharException: groovyjarjarantlr.collections.impl.BitSet set> = r3;

        r0.<groovyjarjarantlr.MismatchedCharException: groovyjarjarantlr.CharScanner scanner> = r1;

        return;
    }

    public java.lang.String getMessage()
    {
        int[] $r8;
        java.lang.StringBuffer $r0, $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12;
        java.lang.String $r6, $r9, $r10, $r11;
        groovyjarjarantlr.MismatchedCharException r1;
        groovyjarjarantlr.collections.impl.BitSet $r7;

        r1 := @this: groovyjarjarantlr.MismatchedCharException;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $i0 = r1.<groovyjarjarantlr.MismatchedCharException: int mismatchType>;

        tableswitch($i0)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label03;
            case 5: goto label05;
            case 6: goto label05;
            default: goto label10;
        };

     label01:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("expecting ");

        $i9 = r1.<groovyjarjarantlr.MismatchedCharException: int expecting>;

        specialinvoke r1.<groovyjarjarantlr.MismatchedCharException: void appendCharName(java.lang.StringBuffer,int)>($r0, $i9);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", found ");

        $i10 = r1.<groovyjarjarantlr.MismatchedCharException: int foundChar>;

        specialinvoke r1.<groovyjarjarantlr.MismatchedCharException: void appendCharName(java.lang.StringBuffer,int)>($r0, $i10);

        goto label11;

     label02:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("expecting anything but \'");

        $i8 = r1.<groovyjarjarantlr.MismatchedCharException: int expecting>;

        specialinvoke r1.<groovyjarjarantlr.MismatchedCharException: void appendCharName(java.lang.StringBuffer,int)>($r0, $i8);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'; got it anyway");

        goto label11;

     label03:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("expecting token ");

        $i4 = r1.<groovyjarjarantlr.MismatchedCharException: int mismatchType>;

        if $i4 != 4 goto label04;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("NOT ");

     label04:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("in range: ");

        $i5 = r1.<groovyjarjarantlr.MismatchedCharException: int expecting>;

        specialinvoke r1.<groovyjarjarantlr.MismatchedCharException: void appendCharName(java.lang.StringBuffer,int)>($r0, $i5);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("..");

        $i6 = r1.<groovyjarjarantlr.MismatchedCharException: int upper>;

        specialinvoke r1.<groovyjarjarantlr.MismatchedCharException: void appendCharName(java.lang.StringBuffer,int)>($r0, $i6);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", found ");

        $i7 = r1.<groovyjarjarantlr.MismatchedCharException: int foundChar>;

        specialinvoke r1.<groovyjarjarantlr.MismatchedCharException: void appendCharName(java.lang.StringBuffer,int)>($r0, $i7);

        goto label11;

     label05:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("expecting ");

        $i1 = r1.<groovyjarjarantlr.MismatchedCharException: int mismatchType>;

        if $i1 != 6 goto label06;

        $r10 = "NOT ";

        goto label07;

     label06:
        $r10 = "";

     label07:
        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("one of (");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r7 = r1.<groovyjarjarantlr.MismatchedCharException: groovyjarjarantlr.collections.impl.BitSet set>;

        $r8 = virtualinvoke $r7.<groovyjarjarantlr.collections.impl.BitSet: int[] toArray()>();

        i11 = 0;

     label08:
        $i12 = lengthof $r8;

        if i11 >= $i12 goto label09;

        $i3 = $r8[i11];

        specialinvoke r1.<groovyjarjarantlr.MismatchedCharException: void appendCharName(java.lang.StringBuffer,int)>($r0, $i3);

        i11 = i11 + 1;

        goto label08;

     label09:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("), found ");

        $i2 = r1.<groovyjarjarantlr.MismatchedCharException: int foundChar>;

        specialinvoke r1.<groovyjarjarantlr.MismatchedCharException: void appendCharName(java.lang.StringBuffer,int)>($r0, $i2);

        goto label11;

     label10:
        $r9 = specialinvoke r1.<groovyjarjarantlr.RecognitionException: java.lang.String getMessage()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

     label11:
        $r11 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r11;
    }

    private void appendCharName(java.lang.StringBuffer, int)
    {
        java.lang.StringBuffer r0;
        int i0;
        char $c1;
        groovyjarjarantlr.MismatchedCharException r1;

        r1 := @this: groovyjarjarantlr.MismatchedCharException;

        r0 := @parameter0: java.lang.StringBuffer;

        i0 := @parameter1: int;

        lookupswitch(i0)
        {
            case 9: goto label4;
            case 10: goto label2;
            case 13: goto label3;
            case 65535: goto label1;
            default: goto label5;
        };

     label1:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'<EOF>\'");

        goto label6;

     label2:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'\\n\'");

        goto label6;

     label3:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'\\r\'");

        goto label6;

     label4:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'\\t\'");

        goto label6;

     label5:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $c1 = (char) i0;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

     label6:
        return;
    }

    public static void <clinit>()
    {
        <groovyjarjarantlr.MismatchedCharException: int NOT_SET> = 6;

        <groovyjarjarantlr.MismatchedCharException: int SET> = 5;

        <groovyjarjarantlr.MismatchedCharException: int NOT_RANGE> = 4;

        <groovyjarjarantlr.MismatchedCharException: int RANGE> = 3;

        <groovyjarjarantlr.MismatchedCharException: int NOT_CHAR> = 2;

        <groovyjarjarantlr.MismatchedCharException: int CHAR> = 1;

        return;
    }
}
