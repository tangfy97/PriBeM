public class org.bouncycastle.x509.X509V2AttributeCertificate extends java.lang.Object implements org.bouncycastle.x509.X509AttributeCertificate
{
    private org.bouncycastle.asn1.x509.AttributeCertificate cert;
    private java.util.Date notBefore;
    private java.util.Date notAfter;

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        org.bouncycastle.x509.X509V2AttributeCertificate r0;
        org.bouncycastle.asn1.x509.AttributeCertificate $r4;
        org.bouncycastle.asn1.DERObject $r3;
        org.bouncycastle.asn1.ASN1InputStream $r1;
        java.io.InputStream r2;

        r0 := @this: org.bouncycastle.x509.X509V2AttributeCertificate;

        r2 := @parameter0: java.io.InputStream;

        $r1 = new org.bouncycastle.asn1.ASN1InputStream;

        specialinvoke $r1.<org.bouncycastle.asn1.ASN1InputStream: void <init>(java.io.InputStream)>(r2);

        $r3 = virtualinvoke $r1.<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.DERObject readObject()>();

        $r4 = staticinvoke <org.bouncycastle.asn1.x509.AttributeCertificate: org.bouncycastle.asn1.x509.AttributeCertificate getInstance(java.lang.Object)>($r3);

        specialinvoke r0.<org.bouncycastle.x509.X509V2AttributeCertificate: void <init>(org.bouncycastle.asn1.x509.AttributeCertificate)>($r4);

        return;
    }

    public void <init>(byte[]) throws java.io.IOException
    {
        org.bouncycastle.x509.X509V2AttributeCertificate r0;
        byte[] r2;
        java.io.ByteArrayInputStream $r1;

        r0 := @this: org.bouncycastle.x509.X509V2AttributeCertificate;

        r2 := @parameter0: byte[];

        $r1 = new java.io.ByteArrayInputStream;

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>(r2);

        specialinvoke r0.<org.bouncycastle.x509.X509V2AttributeCertificate: void <init>(java.io.InputStream)>($r1);

        return;
    }

    void <init>(org.bouncycastle.asn1.x509.AttributeCertificate) throws java.io.IOException
    {
        org.bouncycastle.x509.X509V2AttributeCertificate r0;
        org.bouncycastle.asn1.x509.AttributeCertificate r1;
        java.util.Date $r5, $r9;
        java.io.IOException $r11;
        org.bouncycastle.asn1.x509.AttributeCertificateInfo $r2, $r6;
        org.bouncycastle.asn1.x509.AttCertValidityPeriod $r3, $r7;
        org.bouncycastle.asn1.DERGeneralizedTime $r4, $r8;
        java.text.ParseException $r10;

        r0 := @this: org.bouncycastle.x509.X509V2AttributeCertificate;

        r1 := @parameter0: org.bouncycastle.asn1.x509.AttributeCertificate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.x509.X509V2AttributeCertificate: org.bouncycastle.asn1.x509.AttributeCertificate cert> = r1;

     label1:
        $r2 = virtualinvoke r1.<org.bouncycastle.asn1.x509.AttributeCertificate: org.bouncycastle.asn1.x509.AttributeCertificateInfo getAcinfo()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.AttributeCertificateInfo: org.bouncycastle.asn1.x509.AttCertValidityPeriod getAttrCertValidityPeriod()>();

        $r4 = virtualinvoke $r3.<org.bouncycastle.asn1.x509.AttCertValidityPeriod: org.bouncycastle.asn1.DERGeneralizedTime getNotAfterTime()>();

        $r5 = virtualinvoke $r4.<org.bouncycastle.asn1.DERGeneralizedTime: java.util.Date getDate()>();

        r0.<org.bouncycastle.x509.X509V2AttributeCertificate: java.util.Date notAfter> = $r5;

        $r6 = virtualinvoke r1.<org.bouncycastle.asn1.x509.AttributeCertificate: org.bouncycastle.asn1.x509.AttributeCertificateInfo getAcinfo()>();

        $r7 = virtualinvoke $r6.<org.bouncycastle.asn1.x509.AttributeCertificateInfo: org.bouncycastle.asn1.x509.AttCertValidityPeriod getAttrCertValidityPeriod()>();

        $r8 = virtualinvoke $r7.<org.bouncycastle.asn1.x509.AttCertValidityPeriod: org.bouncycastle.asn1.DERGeneralizedTime getNotBeforeTime()>();

        $r9 = virtualinvoke $r8.<org.bouncycastle.asn1.DERGeneralizedTime: java.util.Date getDate()>();

        r0.<org.bouncycastle.x509.X509V2AttributeCertificate: java.util.Date notBefore> = $r9;

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        $r11 = new java.io.IOException;

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>("invalid data structure in certificate!");

        throw $r11;

     label4:
        return;

        catch java.text.ParseException from label1 to label2 with label3;
    }

    public int getVersion()
    {
        org.bouncycastle.x509.X509V2AttributeCertificate r0;
        org.bouncycastle.asn1.x509.AttributeCertificate $r1;
        int $i0, $i1;
        java.math.BigInteger $r4;
        org.bouncycastle.asn1.DERInteger $r3;
        org.bouncycastle.asn1.x509.AttributeCertificateInfo $r2;

        r0 := @this: org.bouncycastle.x509.X509V2AttributeCertificate;

        $r1 = r0.<org.bouncycastle.x509.X509V2AttributeCertificate: org.bouncycastle.asn1.x509.AttributeCertificate cert>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.AttributeCertificate: org.bouncycastle.asn1.x509.AttributeCertificateInfo getAcinfo()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.AttributeCertificateInfo: org.bouncycastle.asn1.DERInteger getVersion()>();

        $r4 = virtualinvoke $r3.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        $i0 = virtualinvoke $r4.<java.math.BigInteger: int intValue()>();

        $i1 = $i0 + 1;

        return $i1;
    }

    public java.math.BigInteger getSerialNumber()
    {
        org.bouncycastle.x509.X509V2AttributeCertificate r0;
        org.bouncycastle.asn1.x509.AttributeCertificate $r1;
        java.math.BigInteger $r4;
        org.bouncycastle.asn1.DERInteger $r3;
        org.bouncycastle.asn1.x509.AttributeCertificateInfo $r2;

        r0 := @this: org.bouncycastle.x509.X509V2AttributeCertificate;

        $r1 = r0.<org.bouncycastle.x509.X509V2AttributeCertificate: org.bouncycastle.asn1.x509.AttributeCertificate cert>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.AttributeCertificate: org.bouncycastle.asn1.x509.AttributeCertificateInfo getAcinfo()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.AttributeCertificateInfo: org.bouncycastle.asn1.DERInteger getSerialNumber()>();

        $r4 = virtualinvoke $r3.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        return $r4;
    }

    public org.bouncycastle.x509.AttributeCertificateHolder getHolder()
    {
        org.bouncycastle.x509.X509V2AttributeCertificate r1;
        org.bouncycastle.asn1.x509.AttributeCertificate $r2;
        org.bouncycastle.asn1.ASN1Sequence $r6;
        org.bouncycastle.asn1.DERObject $r5;
        org.bouncycastle.asn1.x509.Holder $r4;
        org.bouncycastle.x509.AttributeCertificateHolder $r0;
        org.bouncycastle.asn1.x509.AttributeCertificateInfo $r3;

        r1 := @this: org.bouncycastle.x509.X509V2AttributeCertificate;

        $r0 = new org.bouncycastle.x509.AttributeCertificateHolder;

        $r2 = r1.<org.bouncycastle.x509.X509V2AttributeCertificate: org.bouncycastle.asn1.x509.AttributeCertificate cert>;

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.AttributeCertificate: org.bouncycastle.asn1.x509.AttributeCertificateInfo getAcinfo()>();

        $r4 = virtualinvoke $r3.<org.bouncycastle.asn1.x509.AttributeCertificateInfo: org.bouncycastle.asn1.x509.Holder getHolder()>();

        $r5 = virtualinvoke $r4.<org.bouncycastle.asn1.x509.Holder: org.bouncycastle.asn1.DERObject toASN1Object()>();

        $r6 = (org.bouncycastle.asn1.ASN1Sequence) $r5;

        specialinvoke $r0.<org.bouncycastle.x509.AttributeCertificateHolder: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r6);

        return $r0;
    }

    public org.bouncycastle.x509.AttributeCertificateIssuer getIssuer()
    {
        org.bouncycastle.x509.X509V2AttributeCertificate r1;
        org.bouncycastle.asn1.x509.AttributeCertificate $r2;
        org.bouncycastle.x509.AttributeCertificateIssuer $r0;
        org.bouncycastle.asn1.x509.AttCertIssuer $r4;
        org.bouncycastle.asn1.x509.AttributeCertificateInfo $r3;

        r1 := @this: org.bouncycastle.x509.X509V2AttributeCertificate;

        $r0 = new org.bouncycastle.x509.AttributeCertificateIssuer;

        $r2 = r1.<org.bouncycastle.x509.X509V2AttributeCertificate: org.bouncycastle.asn1.x509.AttributeCertificate cert>;

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.AttributeCertificate: org.bouncycastle.asn1.x509.AttributeCertificateInfo getAcinfo()>();

        $r4 = virtualinvoke $r3.<org.bouncycastle.asn1.x509.AttributeCertificateInfo: org.bouncycastle.asn1.x509.AttCertIssuer getIssuer()>();

        specialinvoke $r0.<org.bouncycastle.x509.AttributeCertificateIssuer: void <init>(org.bouncycastle.asn1.x509.AttCertIssuer)>($r4);

        return $r0;
    }

    public java.util.Date getNotBefore()
    {
        org.bouncycastle.x509.X509V2AttributeCertificate r0;
        java.util.Date $r1;

        r0 := @this: org.bouncycastle.x509.X509V2AttributeCertificate;

        $r1 = r0.<org.bouncycastle.x509.X509V2AttributeCertificate: java.util.Date notBefore>;

        return $r1;
    }

    public java.util.Date getNotAfter()
    {
        org.bouncycastle.x509.X509V2AttributeCertificate r0;
        java.util.Date $r1;

        r0 := @this: org.bouncycastle.x509.X509V2AttributeCertificate;

        $r1 = r0.<org.bouncycastle.x509.X509V2AttributeCertificate: java.util.Date notAfter>;

        return $r1;
    }

    public boolean[] getIssuerUniqueID()
    {
        org.bouncycastle.x509.X509V2AttributeCertificate r0;
        byte[] $r4;
        org.bouncycastle.asn1.x509.AttributeCertificate $r1;
        org.bouncycastle.asn1.DERBitString $r3;
        org.bouncycastle.asn1.x509.AttributeCertificateInfo $r2;
        byte $b8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, i11, $i12;
        boolean $z0;
        boolean[] r5;

        r0 := @this: org.bouncycastle.x509.X509V2AttributeCertificate;

        $r1 = r0.<org.bouncycastle.x509.X509V2AttributeCertificate: org.bouncycastle.asn1.x509.AttributeCertificate cert>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.AttributeCertificate: org.bouncycastle.asn1.x509.AttributeCertificateInfo getAcinfo()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.AttributeCertificateInfo: org.bouncycastle.asn1.DERBitString getIssuerUniqueID()>();

        if $r3 == null goto label5;

        $r4 = virtualinvoke $r3.<org.bouncycastle.asn1.DERBitString: byte[] getBytes()>();

        $i0 = lengthof $r4;

        $i1 = $i0 * 8;

        $i2 = virtualinvoke $r3.<org.bouncycastle.asn1.DERBitString: int getPadBits()>();

        $i3 = $i1 - $i2;

        r5 = newarray (boolean)[$i3];

        i11 = 0;

     label1:
        $i4 = lengthof r5;

        if i11 == $i4 goto label4;

        $i10 = i11;

        $i5 = i11 / 8;

        $b8 = $r4[$i5];

        $i6 = i11 % 8;

        $i7 = 128 >>> $i6;

        $i12 = (int) $b8;

        $i9 = $i12 & $i7;

        if $i9 == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        r5[$i10] = $z0;

        i11 = i11 + 1;

        goto label1;

     label4:
        return r5;

     label5:
        return null;
    }

    public void checkValidity() throws java.security.cert.CertificateExpiredException, java.security.cert.CertificateNotYetValidException
    {
        org.bouncycastle.x509.X509V2AttributeCertificate r0;
        java.util.Date $r1;

        r0 := @this: org.bouncycastle.x509.X509V2AttributeCertificate;

        $r1 = new java.util.Date;

        specialinvoke $r1.<java.util.Date: void <init>()>();

        virtualinvoke r0.<org.bouncycastle.x509.X509V2AttributeCertificate: void checkValidity(java.util.Date)>($r1);

        return;
    }

    public void checkValidity(java.util.Date) throws java.security.cert.CertificateExpiredException, java.security.cert.CertificateNotYetValidException
    {
        org.bouncycastle.x509.X509V2AttributeCertificate r1;
        java.util.Date r0, $r2, $r3, $r7, $r13;
        java.security.cert.CertificateNotYetValidException $r4;
        java.security.cert.CertificateExpiredException $r10;
        java.lang.String $r9, $r15;
        boolean $z0, $z1;
        java.lang.StringBuilder $r5, $r6, $r8, $r11, $r12, $r14;

        r1 := @this: org.bouncycastle.x509.X509V2AttributeCertificate;

        r0 := @parameter0: java.util.Date;

        $r2 = virtualinvoke r1.<org.bouncycastle.x509.X509V2AttributeCertificate: java.util.Date getNotAfter()>();

        $z0 = virtualinvoke r0.<java.util.Date: boolean after(java.util.Date)>($r2);

        if $z0 == 0 goto label1;

        $r10 = new java.security.cert.CertificateExpiredException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("certificate expired on ");

        $r13 = virtualinvoke r1.<org.bouncycastle.x509.X509V2AttributeCertificate: java.util.Date getNotAfter()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.security.cert.CertificateExpiredException: void <init>(java.lang.String)>($r15);

        throw $r10;

     label1:
        $r3 = virtualinvoke r1.<org.bouncycastle.x509.X509V2AttributeCertificate: java.util.Date getNotBefore()>();

        $z1 = virtualinvoke r0.<java.util.Date: boolean before(java.util.Date)>($r3);

        if $z1 == 0 goto label2;

        $r4 = new java.security.cert.CertificateNotYetValidException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("certificate not valid till ");

        $r7 = virtualinvoke r1.<org.bouncycastle.x509.X509V2AttributeCertificate: java.util.Date getNotBefore()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.security.cert.CertificateNotYetValidException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label2:
        return;
    }

    public byte[] getSignature()
    {
        org.bouncycastle.x509.X509V2AttributeCertificate r0;
        byte[] $r3;
        org.bouncycastle.asn1.x509.AttributeCertificate $r1;
        org.bouncycastle.asn1.DERBitString $r2;

        r0 := @this: org.bouncycastle.x509.X509V2AttributeCertificate;

        $r1 = r0.<org.bouncycastle.x509.X509V2AttributeCertificate: org.bouncycastle.asn1.x509.AttributeCertificate cert>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.AttributeCertificate: org.bouncycastle.asn1.DERBitString getSignatureValue()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.DERBitString: byte[] getBytes()>();

        return $r3;
    }

    public final void verify(java.security.PublicKey, java.lang.String) throws java.security.cert.CertificateException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.SignatureException
    {
        org.bouncycastle.x509.X509V2AttributeCertificate r0;
        byte[] $r15, $r16;
        org.bouncycastle.asn1.x509.AttributeCertificate $r1, $r3, $r6, $r13;
        org.bouncycastle.asn1.x509.AttributeCertificateInfo $r4, $r14;
        java.lang.String $r9, r10;
        boolean $z0, $z1;
        org.bouncycastle.asn1.DERObjectIdentifier $r8;
        java.security.SignatureException $r20;
        java.security.Signature $r11;
        java.security.PublicKey r12;
        java.io.IOException $r19;
        java.security.cert.CertificateException $r18;
        java.security.InvalidKeyException $r17;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r2, $r5, $r7;

        r0 := @this: org.bouncycastle.x509.X509V2AttributeCertificate;

        r12 := @parameter0: java.security.PublicKey;

        r10 := @parameter1: java.lang.String;

        $r1 = r0.<org.bouncycastle.x509.X509V2AttributeCertificate: org.bouncycastle.asn1.x509.AttributeCertificate cert>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.AttributeCertificate: org.bouncycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        $r3 = r0.<org.bouncycastle.x509.X509V2AttributeCertificate: org.bouncycastle.asn1.x509.AttributeCertificate cert>;

        $r4 = virtualinvoke $r3.<org.bouncycastle.asn1.x509.AttributeCertificate: org.bouncycastle.asn1.x509.AttributeCertificateInfo getAcinfo()>();

        $r5 = virtualinvoke $r4.<org.bouncycastle.asn1.x509.AttributeCertificateInfo: org.bouncycastle.asn1.x509.AlgorithmIdentifier getSignature()>();

        $z0 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        $r18 = new java.security.cert.CertificateException;

        specialinvoke $r18.<java.security.cert.CertificateException: void <init>(java.lang.String)>("Signature algorithm in certificate info not same as outer certificate");

        throw $r18;

     label1:
        $r6 = r0.<org.bouncycastle.x509.X509V2AttributeCertificate: org.bouncycastle.asn1.x509.AttributeCertificate cert>;

        $r7 = virtualinvoke $r6.<org.bouncycastle.asn1.x509.AttributeCertificate: org.bouncycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        $r8 = virtualinvoke $r7.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DERObjectIdentifier getObjectId()>();

        $r9 = virtualinvoke $r8.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $r11 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r9, r10);

        virtualinvoke $r11.<java.security.Signature: void initVerify(java.security.PublicKey)>(r12);

     label2:
        $r13 = r0.<org.bouncycastle.x509.X509V2AttributeCertificate: org.bouncycastle.asn1.x509.AttributeCertificate cert>;

        $r14 = virtualinvoke $r13.<org.bouncycastle.asn1.x509.AttributeCertificate: org.bouncycastle.asn1.x509.AttributeCertificateInfo getAcinfo()>();

        $r15 = virtualinvoke $r14.<org.bouncycastle.asn1.x509.AttributeCertificateInfo: byte[] getEncoded()>();

        virtualinvoke $r11.<java.security.Signature: void update(byte[])>($r15);

     label3:
        goto label5;

     label4:
        $r19 := @caughtexception;

        $r20 = new java.security.SignatureException;

        specialinvoke $r20.<java.security.SignatureException: void <init>(java.lang.String)>("Exception encoding certificate info object");

        throw $r20;

     label5:
        $r16 = virtualinvoke r0.<org.bouncycastle.x509.X509V2AttributeCertificate: byte[] getSignature()>();

        $z1 = virtualinvoke $r11.<java.security.Signature: boolean verify(byte[])>($r16);

        if $z1 != 0 goto label6;

        $r17 = new java.security.InvalidKeyException;

        specialinvoke $r17.<java.security.InvalidKeyException: void <init>(java.lang.String)>("Public key presented not for certificate signature");

        throw $r17;

     label6:
        return;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public byte[] getEncoded() throws java.io.IOException
    {
        org.bouncycastle.x509.X509V2AttributeCertificate r0;
        byte[] $r2;
        org.bouncycastle.asn1.x509.AttributeCertificate $r1;

        r0 := @this: org.bouncycastle.x509.X509V2AttributeCertificate;

        $r1 = r0.<org.bouncycastle.x509.X509V2AttributeCertificate: org.bouncycastle.asn1.x509.AttributeCertificate cert>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.AttributeCertificate: byte[] getEncoded()>();

        return $r2;
    }

    public byte[] getExtensionValue(java.lang.String)
    {
        org.bouncycastle.x509.X509V2AttributeCertificate r0;
        byte[] $r8;
        org.bouncycastle.asn1.x509.AttributeCertificate $r1;
        org.bouncycastle.asn1.x509.X509Extensions $r3;
        org.bouncycastle.asn1.x509.X509Extension $r6;
        org.bouncycastle.asn1.x509.AttributeCertificateInfo $r2;
        org.bouncycastle.asn1.ASN1OctetString $r7;
        java.lang.String r5, $r13, $r15;
        org.bouncycastle.asn1.DERObjectIdentifier $r4;
        java.lang.RuntimeException $r10;
        java.lang.Exception $r9;
        java.lang.StringBuilder $r11, $r12, $r14;

        r0 := @this: org.bouncycastle.x509.X509V2AttributeCertificate;

        r5 := @parameter0: java.lang.String;

        $r1 = r0.<org.bouncycastle.x509.X509V2AttributeCertificate: org.bouncycastle.asn1.x509.AttributeCertificate cert>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.AttributeCertificate: org.bouncycastle.asn1.x509.AttributeCertificateInfo getAcinfo()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.AttributeCertificateInfo: org.bouncycastle.asn1.x509.X509Extensions getExtensions()>();

        if $r3 == null goto label4;

        $r4 = new org.bouncycastle.asn1.DERObjectIdentifier;

        specialinvoke $r4.<org.bouncycastle.asn1.DERObjectIdentifier: void <init>(java.lang.String)>(r5);

        $r6 = virtualinvoke $r3.<org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.x509.X509Extension getExtension(org.bouncycastle.asn1.DERObjectIdentifier)>($r4);

        if $r6 == null goto label4;

     label1:
        $r7 = virtualinvoke $r6.<org.bouncycastle.asn1.x509.X509Extension: org.bouncycastle.asn1.ASN1OctetString getValue()>();

        $r8 = virtualinvoke $r7.<org.bouncycastle.asn1.ASN1OctetString: byte[] getEncoded(java.lang.String)>("DER");

     label2:
        return $r8;

     label3:
        $r9 := @caughtexception;

        $r10 = new java.lang.RuntimeException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error encoding ");

        $r13 = virtualinvoke $r9.<java.lang.Exception: java.lang.String toString()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>($r15);

        throw $r10;

     label4:
        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private java.util.Set getExtensionOIDs(boolean)
    {
        org.bouncycastle.x509.X509V2AttributeCertificate r0;
        org.bouncycastle.asn1.x509.AttributeCertificate $r1;
        java.util.Enumeration $r5;
        org.bouncycastle.asn1.x509.X509Extensions $r3;
        org.bouncycastle.asn1.x509.X509Extension $r8;
        org.bouncycastle.asn1.x509.AttributeCertificateInfo $r2;
        java.util.HashSet $r4;
        java.lang.Object $r6;
        java.lang.String $r9;
        boolean $z0, $z1, z2;
        org.bouncycastle.asn1.DERObjectIdentifier r7;

        r0 := @this: org.bouncycastle.x509.X509V2AttributeCertificate;

        z2 := @parameter0: boolean;

        $r1 = r0.<org.bouncycastle.x509.X509V2AttributeCertificate: org.bouncycastle.asn1.x509.AttributeCertificate cert>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.AttributeCertificate: org.bouncycastle.asn1.x509.AttributeCertificateInfo getAcinfo()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.AttributeCertificateInfo: org.bouncycastle.asn1.x509.X509Extensions getExtensions()>();

        if $r3 == null goto label4;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        $r5 = virtualinvoke $r3.<org.bouncycastle.asn1.x509.X509Extensions: java.util.Enumeration oids()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Enumeration: java.lang.Object nextElement()>();

        r7 = (org.bouncycastle.asn1.DERObjectIdentifier) $r6;

        $r8 = virtualinvoke $r3.<org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.x509.X509Extension getExtension(org.bouncycastle.asn1.DERObjectIdentifier)>(r7);

        $z1 = virtualinvoke $r8.<org.bouncycastle.asn1.x509.X509Extension: boolean isCritical()>();

        if $z1 != z2 goto label2;

        $r9 = virtualinvoke r7.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r9);

     label2:
        goto label1;

     label3:
        return $r4;

     label4:
        return null;
    }

    public java.util.Set getNonCriticalExtensionOIDs()
    {
        org.bouncycastle.x509.X509V2AttributeCertificate r0;
        java.util.Set $r1;

        r0 := @this: org.bouncycastle.x509.X509V2AttributeCertificate;

        $r1 = specialinvoke r0.<org.bouncycastle.x509.X509V2AttributeCertificate: java.util.Set getExtensionOIDs(boolean)>(0);

        return $r1;
    }

    public java.util.Set getCriticalExtensionOIDs()
    {
        org.bouncycastle.x509.X509V2AttributeCertificate r0;
        java.util.Set $r1;

        r0 := @this: org.bouncycastle.x509.X509V2AttributeCertificate;

        $r1 = specialinvoke r0.<org.bouncycastle.x509.X509V2AttributeCertificate: java.util.Set getExtensionOIDs(boolean)>(1);

        return $r1;
    }

    public boolean hasUnsupportedCriticalExtension()
    {
        org.bouncycastle.x509.X509V2AttributeCertificate r0;
        java.util.Set $r1;
        boolean $z0, $z1;

        r0 := @this: org.bouncycastle.x509.X509V2AttributeCertificate;

        $r1 = virtualinvoke r0.<org.bouncycastle.x509.X509V2AttributeCertificate: java.util.Set getCriticalExtensionOIDs()>();

        if $r1 == null goto label1;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public org.bouncycastle.x509.X509Attribute[] getAttributes()
    {
        org.bouncycastle.x509.X509V2AttributeCertificate r0;
        org.bouncycastle.asn1.x509.AttributeCertificate $r1;
        org.bouncycastle.asn1.ASN1Sequence $r3;
        org.bouncycastle.asn1.ASN1Encodable $r7;
        org.bouncycastle.asn1.DEREncodable $r6;
        org.bouncycastle.asn1.x509.AttributeCertificateInfo $r2;
        org.bouncycastle.x509.X509Attribute[] r4;
        int $i0, $i1, i2;
        org.bouncycastle.x509.X509Attribute $r5;

        r0 := @this: org.bouncycastle.x509.X509V2AttributeCertificate;

        $r1 = r0.<org.bouncycastle.x509.X509V2AttributeCertificate: org.bouncycastle.asn1.x509.AttributeCertificate cert>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.AttributeCertificate: org.bouncycastle.asn1.x509.AttributeCertificateInfo getAcinfo()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.AttributeCertificateInfo: org.bouncycastle.asn1.ASN1Sequence getAttributes()>();

        $i0 = virtualinvoke $r3.<org.bouncycastle.asn1.ASN1Sequence: int size()>();

        r4 = newarray (org.bouncycastle.x509.X509Attribute)[$i0];

        i2 = 0;

     label1:
        $i1 = virtualinvoke $r3.<org.bouncycastle.asn1.ASN1Sequence: int size()>();

        if i2 == $i1 goto label2;

        $r5 = new org.bouncycastle.x509.X509Attribute;

        $r6 = virtualinvoke $r3.<org.bouncycastle.asn1.ASN1Sequence: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>(i2);

        $r7 = (org.bouncycastle.asn1.ASN1Encodable) $r6;

        specialinvoke $r5.<org.bouncycastle.x509.X509Attribute: void <init>(org.bouncycastle.asn1.ASN1Encodable)>($r7);

        r4[i2] = $r5;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r4;
    }

    public org.bouncycastle.x509.X509Attribute[] getAttributes(java.lang.String)
    {
        org.bouncycastle.x509.X509V2AttributeCertificate r0;
        org.bouncycastle.asn1.x509.AttributeCertificate $r1;
        org.bouncycastle.asn1.ASN1Sequence $r3;
        java.lang.Object[] $r6;
        org.bouncycastle.asn1.DEREncodable $r10;
        org.bouncycastle.asn1.x509.AttributeCertificateInfo $r2;
        java.util.ArrayList $r4;
        org.bouncycastle.x509.X509Attribute[] $r5, $r7, $r8;
        int $i0, $i1, $i2, i3;
        java.lang.String $r12, r13;
        boolean $z0;
        org.bouncycastle.asn1.ASN1Encodable $r11;
        org.bouncycastle.x509.X509Attribute $r9;

        r0 := @this: org.bouncycastle.x509.X509V2AttributeCertificate;

        r13 := @parameter0: java.lang.String;

        $r1 = r0.<org.bouncycastle.x509.X509V2AttributeCertificate: org.bouncycastle.asn1.x509.AttributeCertificate cert>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.AttributeCertificate: org.bouncycastle.asn1.x509.AttributeCertificateInfo getAcinfo()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.AttributeCertificateInfo: org.bouncycastle.asn1.ASN1Sequence getAttributes()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        i3 = 0;

     label1:
        $i0 = virtualinvoke $r3.<org.bouncycastle.asn1.ASN1Sequence: int size()>();

        if i3 == $i0 goto label3;

        $r9 = new org.bouncycastle.x509.X509Attribute;

        $r10 = virtualinvoke $r3.<org.bouncycastle.asn1.ASN1Sequence: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>(i3);

        $r11 = (org.bouncycastle.asn1.ASN1Encodable) $r10;

        specialinvoke $r9.<org.bouncycastle.x509.X509Attribute: void <init>(org.bouncycastle.asn1.ASN1Encodable)>($r11);

        $r12 = virtualinvoke $r9.<org.bouncycastle.x509.X509Attribute: java.lang.String getOID()>();

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r13);

        if $z0 == 0 goto label2;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r9);

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i1 != 0 goto label4;

        return null;

     label4:
        $i2 = interfaceinvoke $r4.<java.util.List: int size()>();

        $r5 = newarray (org.bouncycastle.x509.X509Attribute)[$i2];

        $r6 = interfaceinvoke $r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r7 = (org.bouncycastle.x509.X509Attribute[]) $r6;

        $r8 = (org.bouncycastle.x509.X509Attribute[]) $r7;

        return $r8;
    }

    public boolean equals(java.lang.Object)
    {
        org.bouncycastle.x509.X509V2AttributeCertificate r1;
        byte[] $r3, $r4;
        java.io.IOException $r5;
        org.bouncycastle.x509.X509AttributeCertificate r2;
        java.lang.Object r0;
        boolean $z0, $z1;

        r1 := @this: org.bouncycastle.x509.X509V2AttributeCertificate;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof org.bouncycastle.x509.X509AttributeCertificate;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.bouncycastle.x509.X509AttributeCertificate) r0;

     label3:
        $r3 = virtualinvoke r1.<org.bouncycastle.x509.X509V2AttributeCertificate: byte[] getEncoded()>();

        $r4 = interfaceinvoke r2.<org.bouncycastle.x509.X509AttributeCertificate: byte[] getEncoded()>();

        $z1 = staticinvoke <org.bouncycastle.util.Arrays: boolean areEqual(byte[],byte[])>($r3, $r4);

     label4:
        return $z1;

     label5:
        $r5 := @caughtexception;

        return 0;

        catch java.io.IOException from label3 to label4 with label5;
    }

    public int hashCode()
    {
        org.bouncycastle.x509.X509V2AttributeCertificate r0;
        byte[] $r1;
        int $i0;
        java.io.IOException $r2;

        r0 := @this: org.bouncycastle.x509.X509V2AttributeCertificate;

     label1:
        $r1 = virtualinvoke r0.<org.bouncycastle.x509.X509V2AttributeCertificate: byte[] getEncoded()>();

        $i0 = staticinvoke <org.bouncycastle.util.Arrays: int hashCode(byte[])>($r1);

     label2:
        return $i0;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
