class org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter extends org.fife.ui.rsyntaxtextarea.ChangeableColorHighlightPainter
{
    private java.awt.Color borderColor;
    private boolean paintBorder;

    public void <init>()
    {
        org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter r0;
        java.awt.Color $r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter;

        $r1 = <java.awt.Color: java.awt.Color BLUE>;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.ChangeableColorHighlightPainter: void <init>(java.awt.Color)>($r1);

        return;
    }

    public boolean getPaintBorder()
    {
        org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter r0;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter;

        $z0 = r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter: boolean paintBorder>;

        return $z0;
    }

    public java.awt.Shape paintLayer(java.awt.Graphics, int, int, java.awt.Shape, javax.swing.text.JTextComponent, javax.swing.text.View)
    {
        java.awt.Color $r2, $r8;
        javax.swing.text.Position$Bias $r5, $r6, $r9;
        boolean $z0, $z1, $z2;
        java.awt.Shape r4, $r7, $r10;
        javax.swing.text.BadLocationException $r12, $r13;
        org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter r1;
        java.awt.Graphics r0;
        javax.swing.text.View r3;
        java.awt.Rectangle $r11, r15, $r16, r17;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, i24;
        javax.swing.text.JTextComponent r14;

        r1 := @this: org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter;

        r0 := @parameter0: java.awt.Graphics;

        i0 := @parameter1: int;

        i23 := @parameter2: int;

        r4 := @parameter3: java.awt.Shape;

        r14 := @parameter4: javax.swing.text.JTextComponent;

        r3 := @parameter5: javax.swing.text.View;

        $r2 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter: java.awt.Color getColor()>();

        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r2);

        i24 = i23 + 1;

        if i0 != i24 goto label04;

     label01:
        $r9 = <javax.swing.text.Position$Bias: javax.swing.text.Position$Bias Forward>;

        $r10 = virtualinvoke r3.<javax.swing.text.View: java.awt.Shape modelToView(int,java.awt.Shape,javax.swing.text.Position$Bias)>(i0, r4, $r9);

        $r11 = interfaceinvoke $r10.<java.awt.Shape: java.awt.Rectangle getBounds()>();

        $i22 = $r11.<java.awt.Rectangle: int x>;

        $i21 = $r11.<java.awt.Rectangle: int y>;

        $i20 = $r11.<java.awt.Rectangle: int x>;

        $i18 = $r11.<java.awt.Rectangle: int y>;

        $i17 = $r11.<java.awt.Rectangle: int height>;

        $i19 = $i18 + $i17;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>($i22, $i21, $i20, $i19);

     label02:
        return $r11;

     label03:
        $r13 := @caughtexception;

        virtualinvoke $r13.<javax.swing.text.BadLocationException: void printStackTrace()>();

        return null;

     label04:
        $i1 = virtualinvoke r3.<javax.swing.text.View: int getStartOffset()>();

        if i0 != $i1 goto label07;

        $i12 = virtualinvoke r3.<javax.swing.text.View: int getEndOffset()>();

        if i24 != $i12 goto label07;

        $z2 = r4 instanceof java.awt.Rectangle;

        if $z2 == 0 goto label05;

        r15 = (java.awt.Rectangle) r4;

        goto label06;

     label05:
        r15 = interfaceinvoke r4.<java.awt.Shape: java.awt.Rectangle getBounds()>();

     label06:
        $i16 = r15.<java.awt.Rectangle: int x>;

        $i15 = r15.<java.awt.Rectangle: int y>;

        $i14 = r15.<java.awt.Rectangle: int width>;

        $i13 = r15.<java.awt.Rectangle: int height>;

        virtualinvoke r0.<java.awt.Graphics: void fillRect(int,int,int,int)>($i16, $i15, $i14, $i13);

        return r15;

     label07:
        $r6 = <javax.swing.text.Position$Bias: javax.swing.text.Position$Bias Forward>;

        $r5 = <javax.swing.text.Position$Bias: javax.swing.text.Position$Bias Backward>;

        $r7 = virtualinvoke r3.<javax.swing.text.View: java.awt.Shape modelToView(int,javax.swing.text.Position$Bias,int,javax.swing.text.Position$Bias,java.awt.Shape)>(i0, $r6, i24, $r5, r4);

        $z0 = $r7 instanceof java.awt.Rectangle;

        if $z0 == 0 goto label08;

        $r16 = (java.awt.Rectangle) $r7;

        goto label09;

     label08:
        $r16 = interfaceinvoke $r7.<java.awt.Shape: java.awt.Rectangle getBounds()>();

     label09:
        r17 = $r16;

        $i5 = $r16.<java.awt.Rectangle: int x>;

        $i4 = $r16.<java.awt.Rectangle: int y>;

        $i3 = $r16.<java.awt.Rectangle: int width>;

        $i2 = $r16.<java.awt.Rectangle: int height>;

        virtualinvoke r0.<java.awt.Graphics: void fillRect(int,int,int,int)>($i5, $i4, $i3, $i2);

        $z1 = r1.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter: boolean paintBorder>;

        if $z1 == 0 goto label10;

        $r8 = r1.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter: java.awt.Color borderColor>;

        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r8);

        $i11 = $r16.<java.awt.Rectangle: int x>;

        $i10 = $r16.<java.awt.Rectangle: int y>;

        $i6 = $r16.<java.awt.Rectangle: int width>;

        $i9 = $i6 - 1;

        $i7 = $r16.<java.awt.Rectangle: int height>;

        $i8 = $i7 - 1;

        virtualinvoke r0.<java.awt.Graphics: void drawRect(int,int,int,int)>($i11, $i10, $i9, $i8);

     label10:
        return r17;

     label11:
        $r12 := @caughtexception;

        virtualinvoke $r12.<javax.swing.text.BadLocationException: void printStackTrace()>();

        return null;

        catch javax.swing.text.BadLocationException from label01 to label02 with label03;
        catch javax.swing.text.BadLocationException from label07 to label10 with label11;
    }

    public void setColor(java.awt.Color)
    {
        org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter r0;
        java.awt.Color r1, $r2;

        r0 := @this: org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter;

        r1 := @parameter0: java.awt.Color;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.ChangeableColorHighlightPainter: void setColor(java.awt.Color)>(r1);

        $r2 = virtualinvoke r1.<java.awt.Color: java.awt.Color darker()>();

        r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter: java.awt.Color borderColor> = $r2;

        return;
    }

    public void setPaintBorder(boolean)
    {
        org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter r0;
        boolean z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter;

        z0 := @parameter0: boolean;

        r0.<org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter: boolean paintBorder> = z0;

        return;
    }
}
