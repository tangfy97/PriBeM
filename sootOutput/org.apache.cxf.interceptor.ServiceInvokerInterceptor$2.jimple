class org.apache.cxf.interceptor.ServiceInvokerInterceptor$2 extends java.util.concurrent.FutureTask
{
    final org.apache.cxf.interceptor.ServiceInvokerInterceptor this$0;

    void <init>(org.apache.cxf.interceptor.ServiceInvokerInterceptor, java.lang.Runnable, java.lang.Object)
    {
        java.lang.Object r3;
        org.apache.cxf.interceptor.ServiceInvokerInterceptor$2 r0;
        java.lang.Runnable r2;
        org.apache.cxf.interceptor.ServiceInvokerInterceptor r1;

        r0 := @this: org.apache.cxf.interceptor.ServiceInvokerInterceptor$2;

        r1 := @parameter0: org.apache.cxf.interceptor.ServiceInvokerInterceptor;

        r2 := @parameter1: java.lang.Runnable;

        r3 := @parameter2: java.lang.Object;

        r0.<org.apache.cxf.interceptor.ServiceInvokerInterceptor$2: org.apache.cxf.interceptor.ServiceInvokerInterceptor this$0> = r1;

        specialinvoke r0.<java.util.concurrent.FutureTask: void <init>(java.lang.Runnable,java.lang.Object)>(r2, r3);

        return;
    }

    protected void done()
    {
        java.lang.Throwable $r1;
        org.apache.cxf.interceptor.ServiceInvokerInterceptor$2 r0;

        r0 := @this: org.apache.cxf.interceptor.ServiceInvokerInterceptor$2;

        specialinvoke r0.<java.util.concurrent.FutureTask: void done()>();

        entermonitor r0;

     label1:
        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label2:
        goto label5;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
