public class org.springframework.aop.aspectj.AspectJMethodBeforeAdvice extends org.springframework.aop.aspectj.AbstractAspectJAdvice implements org.springframework.aop.MethodBeforeAdvice
{

    public void <init>(java.lang.reflect.Method, org.springframework.aop.aspectj.AspectJExpressionPointcut, org.springframework.aop.aspectj.AspectInstanceFactory)
    {
        org.springframework.aop.aspectj.AspectJMethodBeforeAdvice r0;
        org.springframework.aop.aspectj.AspectInstanceFactory r3;
        java.lang.reflect.Method r1;
        org.springframework.aop.aspectj.AspectJExpressionPointcut r2;

        r0 := @this: org.springframework.aop.aspectj.AspectJMethodBeforeAdvice;

        r1 := @parameter0: java.lang.reflect.Method;

        r2 := @parameter1: org.springframework.aop.aspectj.AspectJExpressionPointcut;

        r3 := @parameter2: org.springframework.aop.aspectj.AspectInstanceFactory;

        specialinvoke r0.<org.springframework.aop.aspectj.AbstractAspectJAdvice: void <init>(java.lang.reflect.Method,org.springframework.aop.aspectj.AspectJExpressionPointcut,org.springframework.aop.aspectj.AspectInstanceFactory)>(r1, r2, r3);

        return;
    }

    public void before(java.lang.reflect.Method, java.lang.Object[], java.lang.Object) throws java.lang.Throwable
    {
        java.lang.Object[] r3;
        org.springframework.aop.aspectj.AspectJMethodBeforeAdvice r0;
        org.aspectj.weaver.tools.JoinPointMatch $r1;
        java.lang.Object r4;
        java.lang.reflect.Method r2;

        r0 := @this: org.springframework.aop.aspectj.AspectJMethodBeforeAdvice;

        r2 := @parameter0: java.lang.reflect.Method;

        r3 := @parameter1: java.lang.Object[];

        r4 := @parameter2: java.lang.Object;

        $r1 = virtualinvoke r0.<org.springframework.aop.aspectj.AspectJMethodBeforeAdvice: org.aspectj.weaver.tools.JoinPointMatch getJoinPointMatch()>();

        virtualinvoke r0.<org.springframework.aop.aspectj.AspectJMethodBeforeAdvice: java.lang.Object invokeAdviceMethod(org.aspectj.weaver.tools.JoinPointMatch,java.lang.Object,java.lang.Throwable)>($r1, null, null);

        return;
    }

    public boolean isBeforeAdvice()
    {
        org.springframework.aop.aspectj.AspectJMethodBeforeAdvice r0;

        r0 := @this: org.springframework.aop.aspectj.AspectJMethodBeforeAdvice;

        return 1;
    }

    public boolean isAfterAdvice()
    {
        org.springframework.aop.aspectj.AspectJMethodBeforeAdvice r0;

        r0 := @this: org.springframework.aop.aspectj.AspectJMethodBeforeAdvice;

        return 0;
    }
}
