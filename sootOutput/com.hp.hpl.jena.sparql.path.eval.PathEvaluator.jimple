final class com.hp.hpl.jena.sparql.path.eval.PathEvaluator extends java.lang.Object implements com.hp.hpl.jena.sparql.path.PathVisitor
{
    protected final com.hp.hpl.jena.graph.Graph graph;
    protected final com.hp.hpl.jena.graph.Node node;
    protected final java.util.Collection output;
    private com.hp.hpl.jena.sparql.path.eval.PathEngine engine;

    protected void <init>(com.hp.hpl.jena.graph.Graph, com.hp.hpl.jena.graph.Node, java.util.Collection, com.hp.hpl.jena.sparql.path.eval.PathEngine)
    {
        com.hp.hpl.jena.sparql.path.eval.PathEngine r4;
        com.hp.hpl.jena.sparql.path.eval.PathEvaluator r0;
        java.util.Collection r3;
        com.hp.hpl.jena.graph.Node r2;
        com.hp.hpl.jena.graph.Graph r1;

        r0 := @this: com.hp.hpl.jena.sparql.path.eval.PathEvaluator;

        r1 := @parameter0: com.hp.hpl.jena.graph.Graph;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        r3 := @parameter2: java.util.Collection;

        r4 := @parameter3: com.hp.hpl.jena.sparql.path.eval.PathEngine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.graph.Graph graph> = r1;

        r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.graph.Node node> = r2;

        r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: java.util.Collection output> = r3;

        r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.sparql.path.eval.PathEngine engine> = r4;

        return;
    }

    protected final void fill(java.util.Iterator)
    {
        java.util.Iterator r0;
        com.hp.hpl.jena.sparql.path.eval.PathEvaluator r1;
        java.util.Collection $r2;
        java.lang.Object $r3;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.sparql.path.eval.PathEvaluator;

        r0 := @parameter0: java.util.Iterator;

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = r1.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: java.util.Collection output>;

        $r3 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r2.<java.util.Collection: boolean add(java.lang.Object)>($r3);

        goto label1;

     label2:
        return;
    }

    public void visit(com.hp.hpl.jena.sparql.path.P_Link)
    {
        com.hp.hpl.jena.sparql.path.P_Link r1;
        com.hp.hpl.jena.sparql.path.eval.PathEngine $r2;
        java.util.Iterator $r6;
        com.hp.hpl.jena.sparql.path.eval.PathEvaluator r0;
        com.hp.hpl.jena.graph.Node $r4, $r5;
        com.hp.hpl.jena.graph.Graph $r3;

        r0 := @this: com.hp.hpl.jena.sparql.path.eval.PathEvaluator;

        r1 := @parameter0: com.hp.hpl.jena.sparql.path.P_Link;

        $r2 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.sparql.path.eval.PathEngine engine>;

        $r3 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.graph.Graph graph>;

        $r4 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.graph.Node node>;

        $r5 = virtualinvoke r1.<com.hp.hpl.jena.sparql.path.P_Link: com.hp.hpl.jena.graph.Node getNode()>();

        $r6 = virtualinvoke $r2.<com.hp.hpl.jena.sparql.path.eval.PathEngine: java.util.Iterator doOne(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r3, $r4, $r5);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: void fill(java.util.Iterator)>($r6);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.path.P_ReverseLink)
    {
        com.hp.hpl.jena.sparql.path.eval.PathEngine $r1, $r3, $r8;
        java.util.Iterator $r7;
        com.hp.hpl.jena.graph.Node $r5, $r6;
        com.hp.hpl.jena.sparql.path.P_ReverseLink r2;
        com.hp.hpl.jena.sparql.path.eval.PathEvaluator r0;
        com.hp.hpl.jena.graph.Graph $r4;

        r0 := @this: com.hp.hpl.jena.sparql.path.eval.PathEvaluator;

        r2 := @parameter0: com.hp.hpl.jena.sparql.path.P_ReverseLink;

        $r1 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.sparql.path.eval.PathEngine engine>;

        virtualinvoke $r1.<com.hp.hpl.jena.sparql.path.eval.PathEngine: void flipDirection()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.sparql.path.eval.PathEngine engine>;

        $r4 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.graph.Graph graph>;

        $r5 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.graph.Node node>;

        $r6 = virtualinvoke r2.<com.hp.hpl.jena.sparql.path.P_ReverseLink: com.hp.hpl.jena.graph.Node getNode()>();

        $r7 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.path.eval.PathEngine: java.util.Iterator doOne(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r4, $r5, $r6);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: void fill(java.util.Iterator)>($r7);

        $r8 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.sparql.path.eval.PathEngine engine>;

        virtualinvoke $r8.<com.hp.hpl.jena.sparql.path.eval.PathEngine: void flipDirection()>();

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.path.P_Inverse)
    {
        com.hp.hpl.jena.sparql.path.eval.PathEngine $r1, $r3, $r8;
        com.hp.hpl.jena.sparql.path.P_Inverse r2;
        java.util.Collection $r6;
        com.hp.hpl.jena.graph.Node $r7;
        com.hp.hpl.jena.sparql.path.Path $r5;
        com.hp.hpl.jena.sparql.path.eval.PathEvaluator r0;
        com.hp.hpl.jena.graph.Graph $r4;

        r0 := @this: com.hp.hpl.jena.sparql.path.eval.PathEvaluator;

        r2 := @parameter0: com.hp.hpl.jena.sparql.path.P_Inverse;

        $r1 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.sparql.path.eval.PathEngine engine>;

        virtualinvoke $r1.<com.hp.hpl.jena.sparql.path.eval.PathEngine: void flipDirection()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.sparql.path.eval.PathEngine engine>;

        $r4 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.graph.Graph graph>;

        $r5 = virtualinvoke r2.<com.hp.hpl.jena.sparql.path.P_Inverse: com.hp.hpl.jena.sparql.path.Path getSubPath()>();

        $r7 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.graph.Node node>;

        $r6 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: java.util.Collection output>;

        virtualinvoke $r3.<com.hp.hpl.jena.sparql.path.eval.PathEngine: void eval(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node,java.util.Collection)>($r4, $r5, $r7, $r6);

        $r8 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.sparql.path.eval.PathEngine engine>;

        virtualinvoke $r8.<com.hp.hpl.jena.sparql.path.eval.PathEngine: void flipDirection()>();

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.path.P_NegPropSet)
    {
        com.hp.hpl.jena.sparql.path.eval.PathEngine $r4;
        com.hp.hpl.jena.sparql.path.eval.PathEvaluator r0;
        java.util.Collection $r2;
        com.hp.hpl.jena.sparql.path.P_NegPropSet r1;
        com.hp.hpl.jena.graph.Node $r3;

        r0 := @this: com.hp.hpl.jena.sparql.path.eval.PathEvaluator;

        r1 := @parameter0: com.hp.hpl.jena.sparql.path.P_NegPropSet;

        $r4 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.sparql.path.eval.PathEngine engine>;

        $r3 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.graph.Node node>;

        $r2 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: java.util.Collection output>;

        virtualinvoke $r4.<com.hp.hpl.jena.sparql.path.eval.PathEngine: void doNegatedPropertySet(com.hp.hpl.jena.sparql.path.P_NegPropSet,com.hp.hpl.jena.graph.Node,java.util.Collection)>(r1, $r3, $r2);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.path.P_Mod)
    {
        com.hp.hpl.jena.sparql.path.eval.PathEngine $r2, $r6, $r10, $r14;
        com.hp.hpl.jena.sparql.path.P_Mod r0;
        long $l0, $l1, $l2;
        com.hp.hpl.jena.graph.Node $r4, $r8, $r13, $r17;
        com.hp.hpl.jena.sparql.path.Path $r3, $r7, $r11, $r15;
        com.hp.hpl.jena.sparql.path.eval.PathEvaluator r1;
        boolean $z0, $z1, $z2;
        java.util.Collection $r5, $r9, $r12, $r16;

        r1 := @this: com.hp.hpl.jena.sparql.path.eval.PathEvaluator;

        r0 := @parameter0: com.hp.hpl.jena.sparql.path.P_Mod;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.path.P_Mod: boolean isZeroOrMore()>();

        if $z0 == 0 goto label1;

        $r14 = r1.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.sparql.path.eval.PathEngine engine>;

        $r15 = virtualinvoke r0.<com.hp.hpl.jena.sparql.path.P_Mod: com.hp.hpl.jena.sparql.path.Path getSubPath()>();

        $r17 = r1.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.graph.Node node>;

        $r16 = r1.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: java.util.Collection output>;

        virtualinvoke $r14.<com.hp.hpl.jena.sparql.path.eval.PathEngine: void doOneOrMoreN(com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node,java.util.Collection)>($r15, $r17, $r16);

        return;

     label1:
        $z1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.path.P_Mod: boolean isOneOrMore()>();

        if $z1 == 0 goto label2;

        $r10 = r1.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.sparql.path.eval.PathEngine engine>;

        $r11 = virtualinvoke r0.<com.hp.hpl.jena.sparql.path.P_Mod: com.hp.hpl.jena.sparql.path.Path getSubPath()>();

        $r13 = r1.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.graph.Node node>;

        $r12 = r1.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: java.util.Collection output>;

        virtualinvoke $r10.<com.hp.hpl.jena.sparql.path.eval.PathEngine: void doOneOrMoreN(com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node,java.util.Collection)>($r11, $r13, $r12);

        return;

     label2:
        $z2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.path.P_Mod: boolean isFixedLength()>();

        if $z2 == 0 goto label3;

        $r6 = r1.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.sparql.path.eval.PathEngine engine>;

        $r7 = virtualinvoke r0.<com.hp.hpl.jena.sparql.path.P_Mod: com.hp.hpl.jena.sparql.path.Path getSubPath()>();

        $r8 = r1.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.graph.Node node>;

        $l2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.path.P_Mod: long getFixedLength()>();

        $r9 = r1.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: java.util.Collection output>;

        virtualinvoke $r6.<com.hp.hpl.jena.sparql.path.eval.PathEngine: void doFixedLengthPath(com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node,long,java.util.Collection)>($r7, $r8, $l2, $r9);

        goto label4;

     label3:
        $r2 = r1.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.sparql.path.eval.PathEngine engine>;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.path.P_Mod: com.hp.hpl.jena.sparql.path.Path getSubPath()>();

        $r4 = r1.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.graph.Node node>;

        $l0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.path.P_Mod: long getMin()>();

        $l1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.path.P_Mod: long getMax()>();

        $r5 = r1.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: java.util.Collection output>;

        virtualinvoke $r2.<com.hp.hpl.jena.sparql.path.eval.PathEngine: void doMultiLengthPath(com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node,long,long,java.util.Collection)>($r3, $r4, $l0, $l1, $r5);

     label4:
        return;
    }

    public void visit(com.hp.hpl.jena.sparql.path.P_FixedLength)
    {
        com.hp.hpl.jena.sparql.path.Path $r3;
        com.hp.hpl.jena.sparql.path.eval.PathEngine $r2;
        com.hp.hpl.jena.sparql.path.eval.PathEvaluator r0;
        java.util.Collection $r5;
        long $l0;
        com.hp.hpl.jena.graph.Node $r4;
        com.hp.hpl.jena.sparql.path.P_FixedLength r1;

        r0 := @this: com.hp.hpl.jena.sparql.path.eval.PathEvaluator;

        r1 := @parameter0: com.hp.hpl.jena.sparql.path.P_FixedLength;

        $r2 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.sparql.path.eval.PathEngine engine>;

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.path.P_FixedLength: com.hp.hpl.jena.sparql.path.Path getSubPath()>();

        $r4 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.graph.Node node>;

        $l0 = virtualinvoke r1.<com.hp.hpl.jena.sparql.path.P_FixedLength: long getCount()>();

        $r5 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: java.util.Collection output>;

        virtualinvoke $r2.<com.hp.hpl.jena.sparql.path.eval.PathEngine: void doFixedLengthPath(com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node,long,java.util.Collection)>($r3, $r4, $l0, $r5);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.path.P_ZeroOrOne)
    {
        com.hp.hpl.jena.sparql.path.Path $r3;
        com.hp.hpl.jena.sparql.path.eval.PathEngine $r2;
        com.hp.hpl.jena.sparql.path.eval.PathEvaluator r0;
        com.hp.hpl.jena.sparql.path.P_ZeroOrOne r1;
        java.util.Collection $r4;
        com.hp.hpl.jena.graph.Node $r5;

        r0 := @this: com.hp.hpl.jena.sparql.path.eval.PathEvaluator;

        r1 := @parameter0: com.hp.hpl.jena.sparql.path.P_ZeroOrOne;

        $r2 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.sparql.path.eval.PathEngine engine>;

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.path.P_ZeroOrOne: com.hp.hpl.jena.sparql.path.Path getSubPath()>();

        $r5 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.graph.Node node>;

        $r4 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: java.util.Collection output>;

        virtualinvoke $r2.<com.hp.hpl.jena.sparql.path.eval.PathEngine: void doZeroOrOne(com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node,java.util.Collection)>($r3, $r5, $r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.path.P_ZeroOrMore1)
    {
        com.hp.hpl.jena.sparql.path.P_ZeroOrMore1 r1;
        com.hp.hpl.jena.sparql.path.Path $r3;
        com.hp.hpl.jena.sparql.path.eval.PathEngine $r2;
        com.hp.hpl.jena.sparql.path.eval.PathEvaluator r0;
        java.util.Collection $r4;
        com.hp.hpl.jena.graph.Node $r5;

        r0 := @this: com.hp.hpl.jena.sparql.path.eval.PathEvaluator;

        r1 := @parameter0: com.hp.hpl.jena.sparql.path.P_ZeroOrMore1;

        $r2 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.sparql.path.eval.PathEngine engine>;

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.path.P_ZeroOrMore1: com.hp.hpl.jena.sparql.path.Path getSubPath()>();

        $r5 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.graph.Node node>;

        $r4 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: java.util.Collection output>;

        virtualinvoke $r2.<com.hp.hpl.jena.sparql.path.eval.PathEngine: void doZeroOrMore(com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node,java.util.Collection)>($r3, $r5, $r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.path.P_ZeroOrMoreN)
    {
        com.hp.hpl.jena.sparql.path.Path $r3;
        com.hp.hpl.jena.sparql.path.eval.PathEngine $r2;
        com.hp.hpl.jena.sparql.path.eval.PathEvaluator r0;
        java.util.Collection $r4;
        com.hp.hpl.jena.graph.Node $r5;
        com.hp.hpl.jena.sparql.path.P_ZeroOrMoreN r1;

        r0 := @this: com.hp.hpl.jena.sparql.path.eval.PathEvaluator;

        r1 := @parameter0: com.hp.hpl.jena.sparql.path.P_ZeroOrMoreN;

        $r2 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.sparql.path.eval.PathEngine engine>;

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.path.P_ZeroOrMoreN: com.hp.hpl.jena.sparql.path.Path getSubPath()>();

        $r5 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.graph.Node node>;

        $r4 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: java.util.Collection output>;

        virtualinvoke $r2.<com.hp.hpl.jena.sparql.path.eval.PathEngine: void doZeroOrMoreN(com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node,java.util.Collection)>($r3, $r5, $r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.path.P_OneOrMore1)
    {
        com.hp.hpl.jena.sparql.path.Path $r3;
        com.hp.hpl.jena.sparql.path.eval.PathEngine $r2;
        com.hp.hpl.jena.sparql.path.eval.PathEvaluator r0;
        java.util.Collection $r4;
        com.hp.hpl.jena.graph.Node $r5;
        com.hp.hpl.jena.sparql.path.P_OneOrMore1 r1;

        r0 := @this: com.hp.hpl.jena.sparql.path.eval.PathEvaluator;

        r1 := @parameter0: com.hp.hpl.jena.sparql.path.P_OneOrMore1;

        $r2 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.sparql.path.eval.PathEngine engine>;

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.path.P_OneOrMore1: com.hp.hpl.jena.sparql.path.Path getSubPath()>();

        $r5 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.graph.Node node>;

        $r4 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: java.util.Collection output>;

        virtualinvoke $r2.<com.hp.hpl.jena.sparql.path.eval.PathEngine: void doOneOrMore(com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node,java.util.Collection)>($r3, $r5, $r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.path.P_OneOrMoreN)
    {
        com.hp.hpl.jena.sparql.path.Path $r3;
        com.hp.hpl.jena.sparql.path.eval.PathEngine $r2;
        com.hp.hpl.jena.sparql.path.eval.PathEvaluator r0;
        java.util.Collection $r4;
        com.hp.hpl.jena.graph.Node $r5;
        com.hp.hpl.jena.sparql.path.P_OneOrMoreN r1;

        r0 := @this: com.hp.hpl.jena.sparql.path.eval.PathEvaluator;

        r1 := @parameter0: com.hp.hpl.jena.sparql.path.P_OneOrMoreN;

        $r2 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.sparql.path.eval.PathEngine engine>;

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.path.P_OneOrMoreN: com.hp.hpl.jena.sparql.path.Path getSubPath()>();

        $r5 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.graph.Node node>;

        $r4 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: java.util.Collection output>;

        virtualinvoke $r2.<com.hp.hpl.jena.sparql.path.eval.PathEngine: void doOneOrMoreN(com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node,java.util.Collection)>($r3, $r5, $r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.path.P_Alt)
    {
        com.hp.hpl.jena.sparql.path.Path $r3, $r4;
        com.hp.hpl.jena.sparql.path.eval.PathEngine $r2;
        com.hp.hpl.jena.sparql.path.eval.PathEvaluator r0;
        java.util.Collection $r5;
        com.hp.hpl.jena.graph.Node $r6;
        com.hp.hpl.jena.sparql.path.P_Alt r1;

        r0 := @this: com.hp.hpl.jena.sparql.path.eval.PathEvaluator;

        r1 := @parameter0: com.hp.hpl.jena.sparql.path.P_Alt;

        $r2 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.sparql.path.eval.PathEngine engine>;

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.path.P_Alt: com.hp.hpl.jena.sparql.path.Path getLeft()>();

        $r4 = virtualinvoke r1.<com.hp.hpl.jena.sparql.path.P_Alt: com.hp.hpl.jena.sparql.path.Path getRight()>();

        $r6 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.graph.Node node>;

        $r5 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: java.util.Collection output>;

        virtualinvoke $r2.<com.hp.hpl.jena.sparql.path.eval.PathEngine: void doAlt(com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node,java.util.Collection)>($r3, $r4, $r6, $r5);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.path.P_Distinct)
    {
        com.hp.hpl.jena.sparql.path.eval.PathEngine r1, $r3, $r6;
        java.util.Collection $r9;
        com.hp.hpl.jena.graph.Node $r10;
        com.hp.hpl.jena.sparql.path.P_Distinct r5;
        com.hp.hpl.jena.sparql.path.Path $r8;
        com.hp.hpl.jena.sparql.path.eval.PathEngine1 $r2;
        com.hp.hpl.jena.sparql.path.eval.PathEvaluator r0;
        com.hp.hpl.jena.graph.Graph $r4, $r7;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.path.eval.PathEvaluator;

        r5 := @parameter0: com.hp.hpl.jena.sparql.path.P_Distinct;

        r1 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.sparql.path.eval.PathEngine engine>;

        $r2 = new com.hp.hpl.jena.sparql.path.eval.PathEngine1;

        $r4 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.graph.Graph graph>;

        $r3 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.sparql.path.eval.PathEngine engine>;

        $z0 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.path.eval.PathEngine: boolean direction()>();

        specialinvoke $r2.<com.hp.hpl.jena.sparql.path.eval.PathEngine1: void <init>(com.hp.hpl.jena.graph.Graph,boolean)>($r4, $z0);

        r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.sparql.path.eval.PathEngine engine> = $r2;

        $r6 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.sparql.path.eval.PathEngine engine>;

        $r7 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.graph.Graph graph>;

        $r8 = virtualinvoke r5.<com.hp.hpl.jena.sparql.path.P_Distinct: com.hp.hpl.jena.sparql.path.Path getSubPath()>();

        $r10 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.graph.Node node>;

        $r9 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: java.util.Collection output>;

        virtualinvoke $r6.<com.hp.hpl.jena.sparql.path.eval.PathEngine: void eval(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node,java.util.Collection)>($r7, $r8, $r10, $r9);

        r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.sparql.path.eval.PathEngine engine> = r1;

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.path.P_Multi)
    {
        com.hp.hpl.jena.sparql.path.eval.PathEngine r1, $r3, $r6;
        java.util.Collection $r9;
        com.hp.hpl.jena.graph.Node $r10;
        com.hp.hpl.jena.sparql.path.Path $r8;
        com.hp.hpl.jena.sparql.path.P_Multi r5;
        com.hp.hpl.jena.sparql.path.eval.PathEvaluator r0;
        com.hp.hpl.jena.sparql.path.eval.PathEngineN $r2;
        com.hp.hpl.jena.graph.Graph $r4, $r7;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.path.eval.PathEvaluator;

        r5 := @parameter0: com.hp.hpl.jena.sparql.path.P_Multi;

        r1 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.sparql.path.eval.PathEngine engine>;

        $r2 = new com.hp.hpl.jena.sparql.path.eval.PathEngineN;

        $r4 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.graph.Graph graph>;

        $r3 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.sparql.path.eval.PathEngine engine>;

        $z0 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.path.eval.PathEngine: boolean direction()>();

        specialinvoke $r2.<com.hp.hpl.jena.sparql.path.eval.PathEngineN: void <init>(com.hp.hpl.jena.graph.Graph,boolean)>($r4, $z0);

        r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.sparql.path.eval.PathEngine engine> = $r2;

        $r6 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.sparql.path.eval.PathEngine engine>;

        $r7 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.graph.Graph graph>;

        $r8 = virtualinvoke r5.<com.hp.hpl.jena.sparql.path.P_Multi: com.hp.hpl.jena.sparql.path.Path getSubPath()>();

        $r10 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.graph.Node node>;

        $r9 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: java.util.Collection output>;

        virtualinvoke $r6.<com.hp.hpl.jena.sparql.path.eval.PathEngine: void eval(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node,java.util.Collection)>($r7, $r8, $r10, $r9);

        r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.sparql.path.eval.PathEngine engine> = r1;

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.path.P_Shortest)
    {
        com.hp.hpl.jena.sparql.ARQNotImplemented $r0;
        com.hp.hpl.jena.sparql.path.eval.PathEvaluator r3;
        com.hp.hpl.jena.sparql.path.P_Shortest r1;
        java.lang.String $r2;

        r3 := @this: com.hp.hpl.jena.sparql.path.eval.PathEvaluator;

        r1 := @parameter0: com.hp.hpl.jena.sparql.path.P_Shortest;

        $r0 = new com.hp.hpl.jena.sparql.ARQNotImplemented;

        $r2 = staticinvoke <com.hp.hpl.jena.sparql.sse.writers.WriterPath: java.lang.String asString(com.hp.hpl.jena.sparql.path.Path)>(r1);

        specialinvoke $r0.<com.hp.hpl.jena.sparql.ARQNotImplemented: void <init>(java.lang.String)>($r2);

        throw $r0;
    }

    public void visit(com.hp.hpl.jena.sparql.path.P_Seq)
    {
        com.hp.hpl.jena.sparql.path.Path $r3, $r4;
        com.hp.hpl.jena.sparql.path.eval.PathEngine $r2;
        com.hp.hpl.jena.sparql.path.eval.PathEvaluator r0;
        java.util.Collection $r5;
        com.hp.hpl.jena.sparql.path.P_Seq r1;
        com.hp.hpl.jena.graph.Node $r6;

        r0 := @this: com.hp.hpl.jena.sparql.path.eval.PathEvaluator;

        r1 := @parameter0: com.hp.hpl.jena.sparql.path.P_Seq;

        $r2 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.sparql.path.eval.PathEngine engine>;

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.path.P_Seq: com.hp.hpl.jena.sparql.path.Path getLeft()>();

        $r4 = virtualinvoke r1.<com.hp.hpl.jena.sparql.path.P_Seq: com.hp.hpl.jena.sparql.path.Path getRight()>();

        $r6 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.graph.Node node>;

        $r5 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: java.util.Collection output>;

        virtualinvoke $r2.<com.hp.hpl.jena.sparql.path.eval.PathEngine: void doSeq(com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.graph.Node,java.util.Collection)>($r3, $r4, $r6, $r5);

        return;
    }

    protected final org.apache.jena.atlas.iterator.Iter between(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r5;
        com.hp.hpl.jena.sparql.path.eval.PathEvaluator r0;
        com.hp.hpl.jena.graph.Node r1, r2, $r3;
        org.apache.jena.atlas.iterator.Iter $r6;
        com.hp.hpl.jena.graph.Graph $r4;

        r0 := @this: com.hp.hpl.jena.sparql.path.eval.PathEvaluator;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        $r4 = r0.<com.hp.hpl.jena.sparql.path.eval.PathEvaluator: com.hp.hpl.jena.graph.Graph graph>;

        $r3 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $r5 = interfaceinvoke $r4.<com.hp.hpl.jena.graph.Graph: com.hp.hpl.jena.util.iterator.ExtendedIterator find(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r1, $r3, r2);

        $r6 = staticinvoke <org.apache.jena.atlas.iterator.Iter: org.apache.jena.atlas.iterator.Iter iter(java.util.Iterator)>($r5);

        return $r6;
    }

    protected final void doZero(com.hp.hpl.jena.sparql.path.Path, com.hp.hpl.jena.graph.Node, java.util.Collection)
    {
        com.hp.hpl.jena.sparql.path.Path r3;
        java.util.Collection r0;
        com.hp.hpl.jena.sparql.path.eval.PathEvaluator r2;
        com.hp.hpl.jena.graph.Node r1;

        r2 := @this: com.hp.hpl.jena.sparql.path.eval.PathEvaluator;

        r3 := @parameter0: com.hp.hpl.jena.sparql.path.Path;

        r1 := @parameter1: com.hp.hpl.jena.graph.Node;

        r0 := @parameter2: java.util.Collection;

        interfaceinvoke r0.<java.util.Collection: boolean add(java.lang.Object)>(r1);

        return;
    }
}
