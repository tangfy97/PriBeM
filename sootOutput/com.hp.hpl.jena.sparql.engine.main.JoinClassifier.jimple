public class com.hp.hpl.jena.sparql.engine.main.JoinClassifier extends java.lang.Object
{
    public static boolean print;

    public void <init>()
    {
        com.hp.hpl.jena.sparql.engine.main.JoinClassifier r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.JoinClassifier;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isLinear(com.hp.hpl.jena.sparql.algebra.op.OpJoin)
    {
        java.io.PrintStream $r3;
        com.hp.hpl.jena.sparql.algebra.op.OpJoin r0;
        com.hp.hpl.jena.sparql.algebra.Op $r1, $r2;
        boolean $z0, $z1;

        r0 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpJoin;

        $z0 = <com.hp.hpl.jena.sparql.engine.main.JoinClassifier: boolean print>;

        if $z0 == 0 goto label1;

        $r3 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.Object)>(r0);

     label1:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.algebra.op.OpJoin: com.hp.hpl.jena.sparql.algebra.Op getLeft()>();

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.algebra.op.OpJoin: com.hp.hpl.jena.sparql.algebra.Op getRight()>();

        $z1 = staticinvoke <com.hp.hpl.jena.sparql.engine.main.JoinClassifier: boolean isLinear(com.hp.hpl.jena.sparql.algebra.Op,com.hp.hpl.jena.sparql.algebra.Op)>($r1, $r2);

        return $z1;
    }

    public static boolean isLinear(com.hp.hpl.jena.sparql.algebra.Op, com.hp.hpl.jena.sparql.algebra.Op)
    {
        com.hp.hpl.jena.sparql.algebra.Op $r0, $r1, r2, r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.Op;

        r3 := @parameter1: com.hp.hpl.jena.sparql.algebra.Op;

        $r0 = staticinvoke <com.hp.hpl.jena.sparql.engine.main.JoinClassifier: com.hp.hpl.jena.sparql.algebra.Op effectiveOp(com.hp.hpl.jena.sparql.algebra.Op)>(r2);

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.engine.main.JoinClassifier: com.hp.hpl.jena.sparql.algebra.Op effectiveOp(com.hp.hpl.jena.sparql.algebra.Op)>(r3);

        $z0 = $r1 instanceof com.hp.hpl.jena.sparql.algebra.op.OpExtend;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z1 = $r1 instanceof com.hp.hpl.jena.sparql.algebra.op.OpAssign;

        if $z1 == 0 goto label2;

        return 0;

     label2:
        $z2 = $r1 instanceof com.hp.hpl.jena.sparql.algebra.op.OpGroup;

        if $z2 == 0 goto label3;

        return 0;

     label3:
        $z3 = $r1 instanceof com.hp.hpl.jena.sparql.algebra.op.OpDiff;

        if $z3 == 0 goto label4;

        return 0;

     label4:
        $z4 = $r1 instanceof com.hp.hpl.jena.sparql.algebra.op.OpMinus;

        if $z4 == 0 goto label5;

        return 0;

     label5:
        $z5 = staticinvoke <com.hp.hpl.jena.sparql.engine.main.JoinClassifier: boolean check(com.hp.hpl.jena.sparql.algebra.Op,com.hp.hpl.jena.sparql.algebra.Op)>($r0, $r1);

        return $z5;
    }

    private static boolean check(com.hp.hpl.jena.sparql.algebra.Op, com.hp.hpl.jena.sparql.algebra.Op)
    {
        com.hp.hpl.jena.sparql.engine.main.VarFinder $r0, $r4;
        com.hp.hpl.jena.sparql.algebra.Op r1, r5;
        java.util.Set $r2, $r3, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        java.lang.StringBuilder $r14, $r16, $r17, $r19, $r21, $r22, $r24, $r26, $r27, $r29, $r31, $r32, $r34, $r36, $r37, $r39, $r41, $r42, $r44, $r46, $r47, $r50, $r52, $r53, $r55, $r57, $r58, $r60, $r62, $r63, $r65, $r67, $r68, $r70, $r72, $r73, $r75, $r77, $r78;
        java.lang.String $r18, $r23, $r28, $r33, $r38, $r43, $r48, $r54, $r59, $r64, $r69, $r74, $r79;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, z14, $z15, $z16, $z17, $z18, $z19, $z21, $z22, $z23;
        java.io.PrintStream $r15, $r20, $r25, $r30, $r35, $r40, $r45, $r49, $r51, $r56, $r61, $r66, $r71, $r76, $r80, $r81;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.Op;

        r5 := @parameter1: com.hp.hpl.jena.sparql.algebra.Op;

        $z0 = <com.hp.hpl.jena.sparql.engine.main.JoinClassifier: boolean print>;

        if $z0 == 0 goto label01;

        $r80 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r80.<java.io.PrintStream: void println(java.lang.Object)>(r1);

        $r81 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r81.<java.io.PrintStream: void println(java.lang.Object)>(r5);

     label01:
        $r0 = new com.hp.hpl.jena.sparql.engine.main.VarFinder;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.engine.main.VarFinder: void <init>(com.hp.hpl.jena.sparql.algebra.Op)>(r1);

        $r2 = virtualinvoke $r0.<com.hp.hpl.jena.sparql.engine.main.VarFinder: java.util.Set getFixed()>();

        $r3 = virtualinvoke $r0.<com.hp.hpl.jena.sparql.engine.main.VarFinder: java.util.Set getOpt()>();

        $z1 = <com.hp.hpl.jena.sparql.engine.main.JoinClassifier: boolean print>;

        if $z1 == 0 goto label02;

        $r76 = <java.lang.System: java.io.PrintStream err>;

        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        $r77 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Left/fixed:    ");

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r76.<java.io.PrintStream: void println(java.lang.String)>($r79);

     label02:
        $z2 = <com.hp.hpl.jena.sparql.engine.main.JoinClassifier: boolean print>;

        if $z2 == 0 goto label03;

        $r71 = <java.lang.System: java.io.PrintStream err>;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r72 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Left/opt:      ");

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r71.<java.io.PrintStream: void println(java.lang.String)>($r74);

     label03:
        $r4 = new com.hp.hpl.jena.sparql.engine.main.VarFinder;

        specialinvoke $r4.<com.hp.hpl.jena.sparql.engine.main.VarFinder: void <init>(com.hp.hpl.jena.sparql.algebra.Op)>(r5);

        $r6 = virtualinvoke $r4.<com.hp.hpl.jena.sparql.engine.main.VarFinder: java.util.Set getFixed()>();

        $r7 = virtualinvoke $r4.<com.hp.hpl.jena.sparql.engine.main.VarFinder: java.util.Set getOpt()>();

        $r8 = virtualinvoke $r4.<com.hp.hpl.jena.sparql.engine.main.VarFinder: java.util.Set getFilter()>();

        $r9 = virtualinvoke $r4.<com.hp.hpl.jena.sparql.engine.main.VarFinder: java.util.Set getAssign()>();

        $z3 = <com.hp.hpl.jena.sparql.engine.main.JoinClassifier: boolean print>;

        if $z3 == 0 goto label04;

        $r66 = <java.lang.System: java.io.PrintStream err>;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Right/fixed:   ");

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r66.<java.io.PrintStream: void println(java.lang.String)>($r69);

     label04:
        $z4 = <com.hp.hpl.jena.sparql.engine.main.JoinClassifier: boolean print>;

        if $z4 == 0 goto label05;

        $r61 = <java.lang.System: java.io.PrintStream err>;

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Right/opt:     ");

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r61.<java.io.PrintStream: void println(java.lang.String)>($r64);

     label05:
        $z5 = <com.hp.hpl.jena.sparql.engine.main.JoinClassifier: boolean print>;

        if $z5 == 0 goto label06;

        $r56 = <java.lang.System: java.io.PrintStream err>;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Right/filter:  ");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r56.<java.io.PrintStream: void println(java.lang.String)>($r59);

     label06:
        $z6 = <com.hp.hpl.jena.sparql.engine.main.JoinClassifier: boolean print>;

        if $z6 == 0 goto label07;

        $r51 = <java.lang.System: java.io.PrintStream err>;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Right/assign:  ");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r51.<java.io.PrintStream: void println(java.lang.String)>($r54);

     label07:
        $r10 = staticinvoke <org.apache.jena.atlas.lib.SetUtils: java.util.Set difference(java.util.Set,java.util.Set)>($r3, $r2);

        $r11 = staticinvoke <org.apache.jena.atlas.lib.SetUtils: java.util.Set difference(java.util.Set,java.util.Set)>($r7, $r6);

        $r12 = staticinvoke <org.apache.jena.atlas.lib.SetUtils: java.util.Set difference(java.util.Set,java.util.Set)>($r8, $r6);

        $r13 = staticinvoke <org.apache.jena.atlas.lib.SetUtils: java.util.Set difference(java.util.Set,java.util.Set)>($r9, $r6);

        $z7 = <com.hp.hpl.jena.sparql.engine.main.JoinClassifier: boolean print>;

        if $z7 == 0 goto label08;

        $r49 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r49.<java.io.PrintStream: void println()>();

     label08:
        $z8 = <com.hp.hpl.jena.sparql.engine.main.JoinClassifier: boolean print>;

        if $z8 == 0 goto label09;

        $r45 = <java.lang.System: java.io.PrintStream err>;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Left/opt:      ");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r45.<java.io.PrintStream: void println(java.lang.String)>($r48);

     label09:
        $z9 = <com.hp.hpl.jena.sparql.engine.main.JoinClassifier: boolean print>;

        if $z9 == 0 goto label10;

        $r40 = <java.lang.System: java.io.PrintStream err>;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Right/opt:     ");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r40.<java.io.PrintStream: void println(java.lang.String)>($r43);

     label10:
        $z10 = <com.hp.hpl.jena.sparql.engine.main.JoinClassifier: boolean print>;

        if $z10 == 0 goto label11;

        $r35 = <java.lang.System: java.io.PrintStream err>;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Right/filter:  ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>($r38);

     label11:
        $z11 = <com.hp.hpl.jena.sparql.engine.main.JoinClassifier: boolean print>;

        if $z11 == 0 goto label12;

        $r30 = <java.lang.System: java.io.PrintStream err>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Right/assign:  ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>($r33);

     label12:
        $z12 = staticinvoke <org.apache.jena.atlas.lib.SetUtils: boolean intersectionP(java.util.Set,java.util.Set)>($r11, $r2);

        $z13 = staticinvoke <org.apache.jena.atlas.lib.SetUtils: boolean intersectionP(java.util.Set,java.util.Set)>($r11, $r10);

        if $z12 != 0 goto label13;

        if $z13 == 0 goto label14;

     label13:
        $z23 = 1;

        $z22 = 1;

        goto label15;

     label14:
        $z23 = 0;

        $z22 = 0;

     label15:
        z14 = $z22;

        $z15 = <com.hp.hpl.jena.sparql.engine.main.JoinClassifier: boolean print>;

        if $z15 == 0 goto label16;

        $r25 = <java.lang.System: java.io.PrintStream err>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Case 1 = ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z23);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>($r28);

     label16:
        $z16 = staticinvoke <org.apache.jena.atlas.lib.SetUtils: boolean intersectionP(java.util.Set,java.util.Set)>($r12, $r2);

        $z17 = <com.hp.hpl.jena.sparql.engine.main.JoinClassifier: boolean print>;

        if $z17 == 0 goto label17;

        $r20 = <java.lang.System: java.io.PrintStream err>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Case 2 = ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z16);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r23);

     label17:
        $z18 = staticinvoke <org.apache.jena.atlas.lib.SetUtils: boolean intersectionP(java.util.Set,java.util.Set)>($r13, $r2);

        $z19 = <com.hp.hpl.jena.sparql.engine.main.JoinClassifier: boolean print>;

        if $z19 == 0 goto label18;

        $r15 = <java.lang.System: java.io.PrintStream err>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Case 3 = ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z18);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r18);

     label18:
        if z14 != 0 goto label19;

        if $z16 != 0 goto label19;

        if $z18 != 0 goto label19;

        $z21 = 1;

        goto label20;

     label19:
        $z21 = 0;

     label20:
        return $z21;
    }

    private static com.hp.hpl.jena.sparql.algebra.Op effectiveOp(com.hp.hpl.jena.sparql.algebra.Op)
    {
        com.hp.hpl.jena.sparql.algebra.op.OpModifier $r0;
        com.hp.hpl.jena.sparql.algebra.op.OpExt $r1;
        com.hp.hpl.jena.sparql.algebra.Op r2;
        boolean $z0, $z1;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.Op;

        $z0 = r2 instanceof com.hp.hpl.jena.sparql.algebra.op.OpExt;

        if $z0 == 0 goto label1;

        $r1 = (com.hp.hpl.jena.sparql.algebra.op.OpExt) r2;

        r2 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.algebra.op.OpExt: com.hp.hpl.jena.sparql.algebra.Op effectiveOp()>();

     label1:
        $z1 = r2 instanceof com.hp.hpl.jena.sparql.algebra.op.OpModifier;

        if $z1 == 0 goto label2;

        $r0 = (com.hp.hpl.jena.sparql.algebra.op.OpModifier) r2;

        r2 = virtualinvoke $r0.<com.hp.hpl.jena.sparql.algebra.op.OpModifier: com.hp.hpl.jena.sparql.algebra.Op getSubOp()>();

        goto label1;

     label2:
        return r2;
    }

    static void <clinit>()
    {
        <com.hp.hpl.jena.sparql.engine.main.JoinClassifier: boolean print> = 0;

        return;
    }
}
