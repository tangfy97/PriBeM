public class org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor extends org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor
{
    private static final java.util.ResourceBundle BUNDLE;

    public void <init>()
    {
        org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor r0;

        r0 := @this: org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor;

        specialinvoke r0.<org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor: void <init>(java.lang.String)>("marshal");

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.Class $r2;
        java.lang.String r1, $r3;
        org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor r0;

        r0 := @this: org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor: void <init>(java.lang.String)>(r1);

        $r2 = class "Lorg/apache/cxf/interceptor/WrappedOutInterceptor;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor: void addAfter(java.lang.String)>($r3);

        return;
    }

    public void handleMessage(org.apache.cxf.message.Message) throws org.apache.cxf.interceptor.Fault
    {
        java.lang.Object[] $r15;
        org.apache.cxf.service.model.BindingOperationInfo r3;
        org.apache.cxf.common.i18n.Message $r14;
        org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor r4;
        org.apache.cxf.bindings.xformat.XMLBindingMessageFormat $r11;
        org.apache.cxf.interceptor.Fault $r13;
        java.util.ResourceBundle $r16;
        javax.xml.stream.XMLStreamException $r12;
        int $i0, $i1;
        javax.xml.stream.XMLStreamWriter $r21;
        boolean $z0, $z1, $z2;
        org.apache.cxf.service.model.MessageInfo r17;
        org.apache.cxf.message.Message r0;
        org.apache.cxf.interceptor.BareOutInterceptor $r7;
        org.apache.cxf.service.model.OperationInfo $r5, $r10;
        org.apache.cxf.message.Exchange $r1;
        java.util.List $r8, $r9;
        org.apache.cxf.service.model.BindingMessageInfo r18;
        java.lang.Object $r2, $r6, $r20;
        javax.xml.namespace.QName r19;

        r4 := @this: org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r2 = interfaceinvoke $r1.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/service/model/BindingOperationInfo;");

        r3 = (org.apache.cxf.service.model.BindingOperationInfo) $r2;

        $z0 = virtualinvoke r4.<org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor: boolean isRequestor(org.apache.cxf.message.Message)>(r0);

        if $z0 == 0 goto label01;

        $r10 = virtualinvoke r3.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.OperationInfo getOperationInfo()>();

        r17 = virtualinvoke $r10.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        r18 = virtualinvoke r3.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.BindingMessageInfo getInput()>();

        goto label02;

     label01:
        $r5 = virtualinvoke r3.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.OperationInfo getOperationInfo()>();

        r17 = virtualinvoke $r5.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getOutput()>();

        r18 = virtualinvoke r3.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.BindingMessageInfo getOutput()>();

     label02:
        $r6 = virtualinvoke r18.<org.apache.cxf.service.model.BindingMessageInfo: java.lang.Object getExtensor(java.lang.Class)>(class "Lorg/apache/cxf/bindings/xformat/XMLBindingMessageFormat;");

        $r11 = (org.apache.cxf.bindings.xformat.XMLBindingMessageFormat) $r6;

        r19 = null;

        if $r11 == null goto label03;

        r19 = virtualinvoke $r11.<org.apache.cxf.bindings.xformat.XMLBindingMessageFormat: javax.xml.namespace.QName getRootNode()>();

     label03:
        $z1 = virtualinvoke r3.<org.apache.cxf.service.model.BindingOperationInfo: boolean isUnwrapped()>();

        if $z1 != 0 goto label04;

        $r8 = virtualinvoke r17.<org.apache.cxf.service.model.MessageInfo: java.util.List getMessageParts()>();

        $i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        if $i0 != 1 goto label05;

     label04:
        $r7 = new org.apache.cxf.interceptor.BareOutInterceptor;

        specialinvoke $r7.<org.apache.cxf.interceptor.BareOutInterceptor: void <init>()>();

        virtualinvoke $r7.<org.apache.cxf.interceptor.BareOutInterceptor: void handleMessage(org.apache.cxf.message.Message)>(r0);

        goto label08;

     label05:
        if r19 != null goto label06;

        r19 = virtualinvoke r3.<org.apache.cxf.service.model.BindingOperationInfo: javax.xml.namespace.QName getName()>();

     label06:
        $r9 = virtualinvoke r17.<org.apache.cxf.service.model.MessageInfo: java.util.List getMessageParts()>();

        $i1 = interfaceinvoke $r9.<java.util.List: int size()>();

        if $i1 != 0 goto label07;

        $z2 = virtualinvoke r3.<org.apache.cxf.service.model.BindingOperationInfo: boolean isUnwrapped()>();

        if $z2 != 0 goto label07;

        specialinvoke r4.<org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor: void writeMessage(org.apache.cxf.message.Message,javax.xml.namespace.QName,boolean)>(r0, r19, 0);

        goto label08;

     label07:
        specialinvoke r4.<org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor: void writeMessage(org.apache.cxf.message.Message,javax.xml.namespace.QName,boolean)>(r0, r19, 1);

     label08:
        $r20 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljavax/xml/stream/XMLStreamWriter;");

        $r21 = (javax.xml.stream.XMLStreamWriter) $r20;

     label09:
        interfaceinvoke $r21.<javax.xml.stream.XMLStreamWriter: void flush()>();

     label10:
        goto label12;

     label11:
        $r12 := @caughtexception;

        $r13 = new org.apache.cxf.interceptor.Fault;

        $r14 = new org.apache.cxf.common.i18n.Message;

        $r16 = <org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor: java.util.ResourceBundle BUNDLE>;

        $r15 = newarray (java.lang.Object)[1];

        $r15[0] = $r12;

        specialinvoke $r14.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("STAX_WRITE_EXC", $r16, $r15);

        specialinvoke $r13.<org.apache.cxf.interceptor.Fault: void <init>(org.apache.cxf.common.i18n.Message)>($r14);

        throw $r13;

     label12:
        return;

        catch javax.xml.stream.XMLStreamException from label09 to label10 with label11;
    }

    private void writeMessage(org.apache.cxf.message.Message, javax.xml.namespace.QName, boolean)
    {
        java.lang.Object[] $r11;
        org.apache.cxf.common.i18n.Message $r10;
        org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor r13;
        org.apache.cxf.interceptor.Fault $r9;
        java.util.ResourceBundle $r12;
        javax.xml.stream.XMLStreamException $r8;
        javax.xml.stream.XMLStreamWriter r2;
        java.lang.String $r4, $r5, $r6, r14;
        boolean $z0, z1;
        org.apache.cxf.message.Message r0;
        org.apache.cxf.interceptor.BareOutInterceptor $r7;
        java.lang.Object $r1;
        javax.xml.namespace.QName r3;

        r13 := @this: org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        r3 := @parameter1: javax.xml.namespace.QName;

        z1 := @parameter2: boolean;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljavax/xml/stream/XMLStreamWriter;");

        r2 = (javax.xml.stream.XMLStreamWriter) $r1;

     label1:
        $r4 = virtualinvoke r3.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        r14 = $r4;

        $z0 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r4);

        if $z0 == 0 goto label2;

        r14 = "ns1";

     label2:
        $r5 = virtualinvoke r3.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r6 = virtualinvoke r3.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)>(r2, r14, $r5, $r6);

        if z1 == 0 goto label3;

        $r7 = new org.apache.cxf.interceptor.BareOutInterceptor;

        specialinvoke $r7.<org.apache.cxf.interceptor.BareOutInterceptor: void <init>()>();

        virtualinvoke $r7.<org.apache.cxf.interceptor.BareOutInterceptor: void handleMessage(org.apache.cxf.message.Message)>(r0);

     label3:
        interfaceinvoke r2.<javax.xml.stream.XMLStreamWriter: void writeEndElement()>();

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;

        $r9 = new org.apache.cxf.interceptor.Fault;

        $r10 = new org.apache.cxf.common.i18n.Message;

        $r12 = <org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor: java.util.ResourceBundle BUNDLE>;

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = $r8;

        specialinvoke $r10.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("STAX_WRITE_EXC", $r12, $r11);

        specialinvoke $r9.<org.apache.cxf.interceptor.Fault: void <init>(org.apache.cxf.common.i18n.Message)>($r10);

        throw $r9;

     label6:
        return;

        catch javax.xml.stream.XMLStreamException from label1 to label4 with label5;
    }

    static void <clinit>()
    {
        java.util.ResourceBundle $r0;

        $r0 = staticinvoke <org.apache.cxf.common.i18n.BundleUtils: java.util.ResourceBundle getBundle(java.lang.Class)>(class "Lorg/apache/cxf/binding/xml/interceptor/XMLMessageOutInterceptor;");

        <org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor: java.util.ResourceBundle BUNDLE> = $r0;

        return;
    }
}
