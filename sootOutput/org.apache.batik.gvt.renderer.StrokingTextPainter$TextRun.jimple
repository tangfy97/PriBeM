public class org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun extends java.lang.Object
{
    protected java.text.AttributedCharacterIterator aci;
    protected org.apache.batik.gvt.text.TextSpanLayout layout;
    protected int anchorType;
    protected boolean firstRunInChunk;
    protected java.lang.Float length;
    protected java.lang.Integer lengthAdjust;
    private final org.apache.batik.gvt.renderer.StrokingTextPainter this$0;

    public void <init>(org.apache.batik.gvt.renderer.StrokingTextPainter, org.apache.batik.gvt.text.TextSpanLayout, java.text.AttributedCharacterIterator, boolean)
    {
        org.apache.batik.gvt.renderer.StrokingTextPainter r1;
        java.lang.Float $r13;
        java.lang.Integer $r10, $r16;
        java.text.AttributedCharacterIterator$Attribute $r8;
        int $i0, $i1, $i2;
        org.apache.batik.gvt.TextNode$Anchor r7;
        boolean z0;
        org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun r0;
        org.apache.batik.gvt.text.TextSpanLayout r2;
        java.text.AttributedCharacterIterator r3, $r4;
        org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute $r5, $r11, $r14;
        java.lang.Object $r6, $r9, $r12, $r15;

        r0 := @this: org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun;

        r1 := @parameter0: org.apache.batik.gvt.renderer.StrokingTextPainter;

        r2 := @parameter1: org.apache.batik.gvt.text.TextSpanLayout;

        r3 := @parameter2: java.text.AttributedCharacterIterator;

        z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun: org.apache.batik.gvt.renderer.StrokingTextPainter this$0> = r1;

        r0.<org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun: org.apache.batik.gvt.text.TextSpanLayout layout> = r2;

        r0.<org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun: java.text.AttributedCharacterIterator aci> = r3;

        $r4 = r0.<org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun: java.text.AttributedCharacterIterator aci>;

        interfaceinvoke $r4.<java.text.CharacterIterator: char first()>();

        r0.<org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun: boolean firstRunInChunk> = z0;

        r0.<org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun: int anchorType> = 0;

        $r5 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute ANCHOR_TYPE>;

        $r6 = interfaceinvoke r3.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r5);

        r7 = (org.apache.batik.gvt.TextNode$Anchor) $r6;

        if r7 == null goto label1;

        $i2 = virtualinvoke r7.<org.apache.batik.gvt.TextNode$Anchor: int getType()>();

        r0.<org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun: int anchorType> = $i2;

     label1:
        $r8 = <org.apache.batik.gvt.renderer.StrokingTextPainter: java.text.AttributedCharacterIterator$Attribute WRITING_MODE>;

        $r9 = interfaceinvoke r3.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r8);

        $r10 = <org.apache.batik.gvt.renderer.StrokingTextPainter: java.lang.Integer WRITING_MODE_RTL>;

        if $r9 != $r10 goto label3;

        $i0 = r0.<org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun: int anchorType>;

        if $i0 != 0 goto label2;

        r0.<org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun: int anchorType> = 2;

        goto label3;

     label2:
        $i1 = r0.<org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun: int anchorType>;

        if $i1 != 2 goto label3;

        r0.<org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun: int anchorType> = 0;

     label3:
        $r11 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute BBOX_WIDTH>;

        $r12 = interfaceinvoke r3.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r11);

        $r13 = (java.lang.Float) $r12;

        r0.<org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun: java.lang.Float length> = $r13;

        $r14 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute LENGTH_ADJUST>;

        $r15 = interfaceinvoke r3.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r14);

        $r16 = (java.lang.Integer) $r15;

        r0.<org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun: java.lang.Integer lengthAdjust> = $r16;

        return;
    }

    public java.text.AttributedCharacterIterator getACI()
    {
        org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun r0;
        java.text.AttributedCharacterIterator $r1;

        r0 := @this: org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun;

        $r1 = r0.<org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun: java.text.AttributedCharacterIterator aci>;

        return $r1;
    }

    public org.apache.batik.gvt.text.TextSpanLayout getLayout()
    {
        org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun r0;
        org.apache.batik.gvt.text.TextSpanLayout $r1;

        r0 := @this: org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun;

        $r1 = r0.<org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun: org.apache.batik.gvt.text.TextSpanLayout layout>;

        return $r1;
    }

    public int getAnchorType()
    {
        int $i0;
        org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun r0;

        r0 := @this: org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun;

        $i0 = r0.<org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun: int anchorType>;

        return $i0;
    }

    public java.lang.Float getLength()
    {
        java.lang.Float $r1;
        org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun r0;

        r0 := @this: org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun;

        $r1 = r0.<org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun: java.lang.Float length>;

        return $r1;
    }

    public java.lang.Integer getLengthAdjust()
    {
        org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun r0;
        java.lang.Integer $r1;

        r0 := @this: org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun;

        $r1 = r0.<org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun: java.lang.Integer lengthAdjust>;

        return $r1;
    }

    public boolean isFirstRunInChunk()
    {
        org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun r0;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun;

        $z0 = r0.<org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun: boolean firstRunInChunk>;

        return $z0;
    }
}
