public final class org.apache.poi.xssf.usermodel.XSSFChildAnchor extends org.apache.poi.xssf.usermodel.XSSFAnchor
{
    private org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D t2d;

    public void <init>(int, int, int, int)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D $r3;
        long $l1, $l3, $l7, $l11;
        org.apache.poi.xssf.usermodel.XSSFChildAnchor r0;
        int i0, i2, i4, $i5, $i6, i8, $i9, $i10;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D $r1, $r2, $r4, $r6, $r7;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChildAnchor;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        i4 := @parameter2: int;

        i8 := @parameter3: int;

        specialinvoke r0.<org.apache.poi.xssf.usermodel.XSSFAnchor: void <init>()>();

        $r1 = staticinvoke <org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D$Factory: org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D newInstance()>();

        r0.<org.apache.poi.xssf.usermodel.XSSFChildAnchor: org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D t2d> = $r1;

        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFChildAnchor: org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D t2d>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D: org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D addNewOff()>();

        $r4 = r0.<org.apache.poi.xssf.usermodel.XSSFChildAnchor: org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D t2d>;

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D: org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D addNewExt()>();

        $l1 = (long) i0;

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D: void setX(long)>($l1);

        $l3 = (long) i2;

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D: void setY(long)>($l3);

        $i5 = i4 - i0;

        $i6 = staticinvoke <java.lang.Math: int abs(int)>($i5);

        $l7 = (long) $i6;

        interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D: void setCx(long)>($l7);

        $i9 = i8 - i2;

        $i10 = staticinvoke <java.lang.Math: int abs(int)>($i9);

        $l11 = (long) $i10;

        interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D: void setCy(long)>($l11);

        if i0 <= i4 goto label1;

        $r7 = r0.<org.apache.poi.xssf.usermodel.XSSFChildAnchor: org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D t2d>;

        interfaceinvoke $r7.<org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D: void setFlipH(boolean)>(1);

     label1:
        if i2 <= i8 goto label2;

        $r6 = r0.<org.apache.poi.xssf.usermodel.XSSFChildAnchor: org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D t2d>;

        interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D: void setFlipV(boolean)>(1);

     label2:
        return;
    }

    public void <init>(org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D)
    {
        org.apache.poi.xssf.usermodel.XSSFChildAnchor r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChildAnchor;

        r1 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D;

        specialinvoke r0.<org.apache.poi.xssf.usermodel.XSSFAnchor: void <init>()>();

        r0.<org.apache.poi.xssf.usermodel.XSSFChildAnchor: org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D t2d> = r1;

        return;
    }

    public org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D getCTTransform2D()
    {
        org.apache.poi.xssf.usermodel.XSSFChildAnchor r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D $r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChildAnchor;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFChildAnchor: org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D t2d>;

        return $r1;
    }

    public int getDx1()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D $r2;
        org.apache.poi.xssf.usermodel.XSSFChildAnchor r0;
        int $i1;
        long $l0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChildAnchor;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFChildAnchor: org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D t2d>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D: org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D getOff()>();

        $l0 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D: long getX()>();

        $i1 = (int) $l0;

        return $i1;
    }

    public void setDx1(int)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D $r2;
        org.apache.poi.xssf.usermodel.XSSFChildAnchor r0;
        int i0;
        long $l1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChildAnchor;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFChildAnchor: org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D t2d>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D: org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D getOff()>();

        $l1 = (long) i0;

        interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D: void setX(long)>($l1);

        return;
    }

    public int getDy1()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D $r2;
        org.apache.poi.xssf.usermodel.XSSFChildAnchor r0;
        int $i1;
        long $l0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChildAnchor;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFChildAnchor: org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D t2d>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D: org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D getOff()>();

        $l0 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D: long getY()>();

        $i1 = (int) $l0;

        return $i1;
    }

    public void setDy1(int)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D $r2;
        org.apache.poi.xssf.usermodel.XSSFChildAnchor r0;
        int i0;
        long $l1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChildAnchor;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFChildAnchor: org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D t2d>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D: org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D getOff()>();

        $l1 = (long) i0;

        interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D: void setY(long)>($l1);

        return;
    }

    public int getDy2()
    {
        long $l1, $l2, $l3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D $r1;
        org.apache.poi.xssf.usermodel.XSSFChildAnchor r0;
        int $i0, $i4;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D $r2;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChildAnchor;

        $i0 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFChildAnchor: int getDy1()>();

        $l1 = (long) $i0;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFChildAnchor: org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D t2d>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D: org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D getExt()>();

        $l2 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D: long getCy()>();

        $l3 = $l1 + $l2;

        $i4 = (int) $l3;

        return $i4;
    }

    public void setDy2(int)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D $r1;
        org.apache.poi.xssf.usermodel.XSSFChildAnchor r0;
        int i0, $i1, $i2;
        long $l3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D $r2;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChildAnchor;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFChildAnchor: org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D t2d>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D: org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D getExt()>();

        $i1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFChildAnchor: int getDy1()>();

        $i2 = i0 - $i1;

        $l3 = (long) $i2;

        interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D: void setCy(long)>($l3);

        return;
    }

    public int getDx2()
    {
        long $l1, $l2, $l3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D $r1;
        org.apache.poi.xssf.usermodel.XSSFChildAnchor r0;
        int $i0, $i4;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D $r2;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChildAnchor;

        $i0 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFChildAnchor: int getDx1()>();

        $l1 = (long) $i0;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFChildAnchor: org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D t2d>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D: org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D getExt()>();

        $l2 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D: long getCx()>();

        $l3 = $l1 + $l2;

        $i4 = (int) $l3;

        return $i4;
    }

    public void setDx2(int)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D $r1;
        org.apache.poi.xssf.usermodel.XSSFChildAnchor r0;
        int i0, $i1, $i2;
        long $l3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D $r2;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFChildAnchor;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFChildAnchor: org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D t2d>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D: org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D getExt()>();

        $i1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFChildAnchor: int getDx1()>();

        $i2 = i0 - $i1;

        $l3 = (long) $i2;

        interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D: void setCx(long)>($l3);

        return;
    }
}
