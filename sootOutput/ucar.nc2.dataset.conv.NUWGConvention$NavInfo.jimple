class ucar.nc2.dataset.conv.NUWGConvention$NavInfo extends java.lang.Object
{
    ucar.nc2.Variable ncvar;
    ucar.ma2.DataType valueType;
    java.lang.String svalue;
    byte bvalue;
    int ivalue;
    double dvalue;
    private java.lang.StringBuilder buf;
    final ucar.nc2.dataset.conv.NUWGConvention this$0;

    void <init>(ucar.nc2.dataset.conv.NUWGConvention, ucar.nc2.Variable) throws java.io.IOException
    {
        ucar.nc2.dataset.conv.NUWGConvention r1;
        java.lang.Object[] $r18;
        ucar.nc2.dataset.conv.NUWGConvention$NavInfo r0;
        java.util.Formatter $r17;
        byte $b1;
        int $i0;
        ucar.nc2.Variable r3;
        java.lang.String $r7, $r19;
        double $d0;
        java.lang.UnsupportedOperationException $r16;
        ucar.ma2.DataType $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        java.lang.StringBuilder $r2;

        r0 := @this: ucar.nc2.dataset.conv.NUWGConvention$NavInfo;

        r1 := @parameter0: ucar.nc2.dataset.conv.NUWGConvention;

        r3 := @parameter1: ucar.nc2.Variable;

        r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: ucar.nc2.dataset.conv.NUWGConvention this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(200);

        r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: java.lang.StringBuilder buf> = $r2;

        r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: ucar.nc2.Variable ncvar> = r3;

        $r4 = virtualinvoke r3.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: ucar.ma2.DataType valueType> = $r4;

     label1:
        $r6 = r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: ucar.ma2.DataType valueType>;

        $r5 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        if $r6 == $r5 goto label2;

        $r9 = r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: ucar.ma2.DataType valueType>;

        $r8 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        if $r9 != $r8 goto label3;

     label2:
        $r7 = virtualinvoke r3.<ucar.nc2.Variable: java.lang.String readScalarString()>();

        r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: java.lang.String svalue> = $r7;

        goto label7;

     label3:
        $r11 = r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: ucar.ma2.DataType valueType>;

        $r10 = <ucar.ma2.DataType: ucar.ma2.DataType BYTE>;

        if $r11 != $r10 goto label4;

        $b1 = virtualinvoke r3.<ucar.nc2.Variable: byte readScalarByte()>();

        r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: byte bvalue> = $b1;

        goto label7;

     label4:
        $r13 = r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: ucar.ma2.DataType valueType>;

        $r12 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        if $r13 == $r12 goto label5;

        $r15 = r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: ucar.ma2.DataType valueType>;

        $r14 = <ucar.ma2.DataType: ucar.ma2.DataType SHORT>;

        if $r15 != $r14 goto label6;

     label5:
        $i0 = virtualinvoke r3.<ucar.nc2.Variable: int readScalarInt()>();

        r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: int ivalue> = $i0;

        goto label7;

     label6:
        $d0 = virtualinvoke r3.<ucar.nc2.Variable: double readScalarDouble()>();

        r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: double dvalue> = $d0;

     label7:
        goto label9;

     label8:
        $r16 := @caughtexception;

        $r17 = staticinvoke <ucar.nc2.dataset.conv.NUWGConvention: java.util.Formatter access$300(ucar.nc2.dataset.conv.NUWGConvention)>(r1);

        $r18 = newarray (java.lang.Object)[1];

        $r19 = virtualinvoke r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: java.lang.String getName()>();

        $r18[0] = $r19;

        virtualinvoke $r17.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Nav variable %s  not a scalar\n", $r18);

     label9:
        return;

        catch java.lang.UnsupportedOperationException from label1 to label7 with label8;
    }

    public java.lang.String getName()
    {
        ucar.nc2.dataset.conv.NUWGConvention$NavInfo r0;
        ucar.nc2.Variable $r1;
        java.lang.String $r2;

        r0 := @this: ucar.nc2.dataset.conv.NUWGConvention$NavInfo;

        $r1 = r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: ucar.nc2.Variable ncvar>;

        $r2 = virtualinvoke $r1.<ucar.nc2.Variable: java.lang.String getName()>();

        return $r2;
    }

    public java.lang.String getDescription()
    {
        ucar.nc2.Attribute $r2;
        ucar.nc2.dataset.conv.NUWGConvention$NavInfo r0;
        ucar.nc2.Variable $r1;
        java.lang.String $r3;

        r0 := @this: ucar.nc2.dataset.conv.NUWGConvention$NavInfo;

        $r1 = r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: ucar.nc2.Variable ncvar>;

        $r2 = virtualinvoke $r1.<ucar.nc2.Variable: ucar.nc2.Attribute findAttributeIgnoreCase(java.lang.String)>("long_name");

        if $r2 != null goto label1;

        $r3 = virtualinvoke r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: java.lang.String getName()>();

        goto label2;

     label1:
        $r3 = virtualinvoke $r2.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

     label2:
        return $r3;
    }

    public ucar.ma2.DataType getValueType()
    {
        ucar.nc2.dataset.conv.NUWGConvention$NavInfo r0;
        ucar.ma2.DataType $r1;

        r0 := @this: ucar.nc2.dataset.conv.NUWGConvention$NavInfo;

        $r1 = r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: ucar.ma2.DataType valueType>;

        return $r1;
    }

    public java.lang.String getStringValue()
    {
        ucar.nc2.dataset.conv.NUWGConvention$NavInfo r0;
        byte $b1;
        int $i0;
        java.lang.String $r3, $r10, $r13, $r14;
        double $d0;
        ucar.ma2.DataType $r1, $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12;

        r0 := @this: ucar.nc2.dataset.conv.NUWGConvention$NavInfo;

        $r2 = r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: ucar.ma2.DataType valueType>;

        $r1 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        if $r2 == $r1 goto label1;

        $r5 = r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: ucar.ma2.DataType valueType>;

        $r4 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        if $r5 != $r4 goto label2;

     label1:
        $r3 = r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: java.lang.String svalue>;

        return $r3;

     label2:
        $r7 = r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: ucar.ma2.DataType valueType>;

        $r6 = <ucar.ma2.DataType: ucar.ma2.DataType BYTE>;

        if $r7 != $r6 goto label3;

        $b1 = r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: byte bvalue>;

        $r14 = staticinvoke <java.lang.Byte: java.lang.String toString(byte)>($b1);

        return $r14;

     label3:
        $r9 = r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: ucar.ma2.DataType valueType>;

        $r8 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        if $r9 == $r8 goto label4;

        $r12 = r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: ucar.ma2.DataType valueType>;

        $r11 = <ucar.ma2.DataType: ucar.ma2.DataType SHORT>;

        if $r12 != $r11 goto label5;

     label4:
        $i0 = r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: int ivalue>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        return $r10;

     label5:
        $d0 = r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: double dvalue>;

        $r13 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d0);

        return $r13;
    }

    public java.lang.String toString()
    {
        ucar.nc2.dataset.conv.NUWGConvention$NavInfo r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r6, $r8, $r9, $r10, $r12;
        java.lang.String $r3, $r7, $r11, $r13;

        r0 := @this: ucar.nc2.dataset.conv.NUWGConvention$NavInfo;

        $r1 = r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: java.lang.StringBuilder buf>;

        virtualinvoke $r1.<java.lang.StringBuilder: void setLength(int)>(0);

        $r2 = r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: java.lang.StringBuilder buf>;

        $r3 = virtualinvoke r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: java.lang.String getName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: java.lang.StringBuilder buf>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: java.lang.StringBuilder buf>;

        staticinvoke <ucar.unidata.util.Format: void tab(java.lang.StringBuilder,int,boolean)>($r5, 15, 1);

        $r6 = r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: java.lang.StringBuilder buf>;

        $r7 = virtualinvoke r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: java.lang.String getStringValue()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r8 = r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: java.lang.StringBuilder buf>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r9 = r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: java.lang.StringBuilder buf>;

        staticinvoke <ucar.unidata.util.Format: void tab(java.lang.StringBuilder,int,boolean)>($r9, 35, 1);

        $r10 = r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: java.lang.StringBuilder buf>;

        $r11 = virtualinvoke r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: java.lang.String getDescription()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r12 = r0.<ucar.nc2.dataset.conv.NUWGConvention$NavInfo: java.lang.StringBuilder buf>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }
}
