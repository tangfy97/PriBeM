public class org.apache.tika.utils.RegexUtils extends java.lang.Object
{
    private static final java.lang.String LINKS_REGEX;
    private static final java.util.regex.Pattern LINKS_PATTERN;

    public void <init>()
    {
        org.apache.tika.utils.RegexUtils r0;

        r0 := @this: org.apache.tika.utils.RegexUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.List extractLinks(java.lang.String)
    {
        java.util.ArrayList $r2;
        java.util.List $r1;
        java.util.regex.Matcher $r4;
        int $i0;
        java.lang.String r0, $r5;
        java.util.regex.Pattern $r3;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r1;

     label2:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = <org.apache.tika.utils.RegexUtils: java.util.regex.Pattern LINKS_PATTERN>;

        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

     label3:
        $z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label4;

        $r5 = virtualinvoke $r4.<java.util.regex.Matcher: java.lang.String group()>();

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r5);

        goto label3;

     label4:
        return $r2;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        <org.apache.tika.utils.RegexUtils: java.lang.String LINKS_REGEX> = "([A-Za-z][A-Za-z0-9+.-]{1,120}:[A-Za-z0-9/](([A-Za-z0-9$_.+!*,;/?:@&~=-])|%[A-Fa-f0-9]{2}){1,333}(#([a-zA-Z0-9][a-zA-Z0-9$_.+!*,;/?:@&~=%-]{0,1000}))?)";

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("([A-Za-z][A-Za-z0-9+.-]{1,120}:[A-Za-z0-9/](([A-Za-z0-9$_.+!*,;/?:@&~=-])|%[A-Fa-f0-9]{2}){1,333}(#([a-zA-Z0-9][a-zA-Z0-9$_.+!*,;/?:@&~=%-]{0,1000}))?)", 10);

        <org.apache.tika.utils.RegexUtils: java.util.regex.Pattern LINKS_PATTERN> = $r0;

        return;
    }
}
