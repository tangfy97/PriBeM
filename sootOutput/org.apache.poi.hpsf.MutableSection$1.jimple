class org.apache.poi.hpsf.MutableSection$1 extends java.lang.Object implements java.util.Comparator
{
    final org.apache.poi.hpsf.MutableSection this$0;

    void <init>(org.apache.poi.hpsf.MutableSection)
    {
        org.apache.poi.hpsf.MutableSection r1;
        org.apache.poi.hpsf.MutableSection$1 r0;

        r0 := @this: org.apache.poi.hpsf.MutableSection$1;

        r1 := @parameter0: org.apache.poi.hpsf.MutableSection;

        r0.<org.apache.poi.hpsf.MutableSection$1: org.apache.poi.hpsf.MutableSection this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(org.apache.poi.hpsf.Property, org.apache.poi.hpsf.Property)
    {
        long $l0, $l1, $l3, $l4;
        org.apache.poi.hpsf.MutableSection$1 r2;
        byte $b2, $b5;
        int $i6, $i8;
        org.apache.poi.hpsf.Property r0, r1;

        r2 := @this: org.apache.poi.hpsf.MutableSection$1;

        r0 := @parameter0: org.apache.poi.hpsf.Property;

        r1 := @parameter1: org.apache.poi.hpsf.Property;

        $l0 = virtualinvoke r0.<org.apache.poi.hpsf.Property: long getID()>();

        $l1 = virtualinvoke r1.<org.apache.poi.hpsf.Property: long getID()>();

        $b2 = $l0 cmp $l1;

        $i6 = (int) $b2;

        if $i6 >= 0 goto label1;

        $i8 = (int) -1;

        return $i8;

     label1:
        $l3 = virtualinvoke r0.<org.apache.poi.hpsf.Property: long getID()>();

        $l4 = virtualinvoke r1.<org.apache.poi.hpsf.Property: long getID()>();

        $b5 = $l3 cmp $l4;

        if $b5 != 0 goto label2;

        return 0;

     label2:
        return 1;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        int $i0;
        org.apache.poi.hpsf.MutableSection$1 r0;
        java.lang.Object r1, r2;
        org.apache.poi.hpsf.Property $r3, $r4;

        r0 := @this: org.apache.poi.hpsf.MutableSection$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.apache.poi.hpsf.Property) r1;

        $r3 = (org.apache.poi.hpsf.Property) r2;

        $i0 = virtualinvoke r0.<org.apache.poi.hpsf.MutableSection$1: int compare(org.apache.poi.hpsf.Property,org.apache.poi.hpsf.Property)>($r4, $r3);

        return $i0;
    }
}
