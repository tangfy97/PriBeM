class com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$3 extends java.lang.Object implements com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$Visitor
{
    final com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode this$0;

    void <init>(com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode)
    {
        com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode r1;
        com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$3 r0;

        r0 := @this: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$3;

        r1 := @parameter0: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode;

        r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$3: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.List visit(com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode, com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode, java.util.Set, com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode)
    {
        com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode r1, r2, r11;
        java.util.Set r0, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        int $i0, $i1;
        boolean $z0;
        com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$3 r10;

        r10 := @this: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$3;

        r1 := @parameter0: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode;

        r11 := @parameter1: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode;

        r0 := @parameter2: java.util.Set;

        r2 := @parameter3: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode;

        $z0 = interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode: java.util.Set access$100(com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode)>(r2);

        $r4 = r1.<com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode: java.util.Set succ>;

        $i0 = interfaceinvoke $r4.<java.util.Set: int size()>();

        $r5 = r1.<com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode: java.util.Set succ>;

        interfaceinvoke $r5.<java.util.Set: boolean removeAll(java.util.Collection)>($r3);

        $r6 = r1.<com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode: java.util.Set succClosed>;

        interfaceinvoke $r6.<java.util.Set: boolean removeAll(java.util.Collection)>($r3);

        $r7 = r1.<com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode: java.util.Set succClosed>;

        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>(r2);

        $r8 = r1.<com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode: java.util.Set succ>;

        $i1 = interfaceinvoke $r8.<java.util.Set: int size()>();

        if $i1 == $i0 goto label1;

        $r9 = r1.<com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode: java.util.Set succ>;

        interfaceinvoke $r9.<java.util.Set: boolean add(java.lang.Object)>(r2);

     label1:
        return null;
    }

    public volatile java.util.List visit(com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode, com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode, java.lang.Object, java.lang.Object)
    {
        com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode r1, r2, $r5;
        java.util.Set $r6;
        java.util.List $r7;
        java.lang.Object r3, r4;
        com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$3 r0;

        r0 := @this: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$3;

        r1 := @parameter0: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode;

        r2 := @parameter1: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        $r6 = (java.util.Set) r3;

        $r5 = (com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode) r4;

        $r7 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$3: java.util.List visit(com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode,com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode,java.util.Set,com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode)>(r1, r2, $r6, $r5);

        return $r7;
    }
}
