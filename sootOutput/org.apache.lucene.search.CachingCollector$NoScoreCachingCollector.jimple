final class org.apache.lucene.search.CachingCollector$NoScoreCachingCollector extends org.apache.lucene.search.CachingCollector
{

    void <init>(org.apache.lucene.search.Collector, double)
    {
        org.apache.lucene.search.Collector r1;
        org.apache.lucene.search.CachingCollector$NoScoreCachingCollector r0;
        double d0;

        r0 := @this: org.apache.lucene.search.CachingCollector$NoScoreCachingCollector;

        r1 := @parameter0: org.apache.lucene.search.Collector;

        d0 := @parameter1: double;

        specialinvoke r0.<org.apache.lucene.search.CachingCollector: void <init>(org.apache.lucene.search.Collector,double,boolean,org.apache.lucene.search.CachingCollector$1)>(r1, d0, 0, null);

        return;
    }

    void <init>(org.apache.lucene.search.Collector, int)
    {
        int i0;
        org.apache.lucene.search.Collector r1;
        org.apache.lucene.search.CachingCollector$NoScoreCachingCollector r0;

        r0 := @this: org.apache.lucene.search.CachingCollector$NoScoreCachingCollector;

        r1 := @parameter0: org.apache.lucene.search.Collector;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.lucene.search.CachingCollector: void <init>(org.apache.lucene.search.Collector,int,org.apache.lucene.search.CachingCollector$1)>(r1, i0, null);

        return;
    }

    public void collect(int) throws java.io.IOException
    {
        int[] $r1, $r2, $r3, $r4, $r5, $r11;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, $i13, $i14, $i15;
        org.apache.lucene.search.Collector $r9, $r10, $r12;
        java.util.List $r6, $r7, $r8;
        org.apache.lucene.search.CachingCollector$NoScoreCachingCollector r0;

        r0 := @this: org.apache.lucene.search.CachingCollector$NoScoreCachingCollector;

        i2 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: int[] curDocs>;

        if $r1 != null goto label1;

        $r10 = r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: org.apache.lucene.search.Collector other>;

        virtualinvoke $r10.<org.apache.lucene.search.Collector: void collect(int)>(i2);

        return;

     label1:
        $i1 = r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: int upto>;

        $r2 = r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: int[] curDocs>;

        $i0 = lengthof $r2;

        if $i1 != $i0 goto label4;

        $i4 = r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: int base>;

        $i3 = r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: int upto>;

        $i5 = $i4 + $i3;

        r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: int base> = $i5;

        $r3 = r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: int[] curDocs>;

        $i6 = lengthof $r3;

        i12 = 8 * $i6;

        if i12 <= 524288 goto label2;

        i12 = 524288;

     label2:
        $i7 = r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: int base>;

        $i9 = $i7 + i12;

        $i8 = r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: int maxDocsToCache>;

        if $i9 <= $i8 goto label3;

        $i11 = r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: int maxDocsToCache>;

        $i10 = r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: int base>;

        i12 = $i11 - $i10;

        if i12 > 0 goto label3;

        r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: int[] curDocs> = null;

        $r7 = r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: java.util.List cachedSegs>;

        interfaceinvoke $r7.<java.util.List: void clear()>();

        $r8 = r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: java.util.List cachedDocs>;

        interfaceinvoke $r8.<java.util.List: void clear()>();

        $r9 = r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: org.apache.lucene.search.Collector other>;

        virtualinvoke $r9.<org.apache.lucene.search.Collector: void collect(int)>(i2);

        return;

     label3:
        $r4 = newarray (int)[i12];

        r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: int[] curDocs> = $r4;

        $r6 = r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: java.util.List cachedDocs>;

        $r5 = r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: int[] curDocs>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r5);

        r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: int upto> = 0;

     label4:
        $r11 = r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: int[] curDocs>;

        $i13 = r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: int upto>;

        $r11[$i13] = i2;

        $i14 = r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: int upto>;

        $i15 = $i14 + 1;

        r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: int upto> = $i15;

        $r12 = r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: org.apache.lucene.search.Collector other>;

        virtualinvoke $r12.<org.apache.lucene.search.Collector: void collect(int)>(i2);

        return;
    }

    public void replay(org.apache.lucene.search.Collector) throws java.io.IOException
    {
        org.apache.lucene.search.CachingCollector$SegStart r6;
        int[] $r2, $r8, $r9, $r10, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;
        boolean $z0;
        java.util.Iterator $r4;
        org.apache.lucene.search.Collector r1;
        java.util.List $r3, $r11;
        org.apache.lucene.search.CachingCollector$NoScoreCachingCollector r0;
        java.lang.Object $r5, $r12;
        org.apache.lucene.index.AtomicReaderContext $r7;

        r0 := @this: org.apache.lucene.search.CachingCollector$NoScoreCachingCollector;

        r1 := @parameter0: org.apache.lucene.search.Collector;

        virtualinvoke r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: void replayInit(org.apache.lucene.search.Collector)>(r1);

        i6 = 0;

        i7 = 0;

        i8 = 0;

        $r2 = staticinvoke <org.apache.lucene.search.CachingCollector: int[] access$300()>();

        r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: int[] curDocs> = $r2;

        $r3 = r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: java.util.List cachedSegs>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.lucene.search.CachingCollector$SegStart) $r5;

        $r7 = r6.<org.apache.lucene.search.CachingCollector$SegStart: org.apache.lucene.index.AtomicReaderContext readerContext>;

        virtualinvoke r1.<org.apache.lucene.search.Collector: void setNextReader(org.apache.lucene.index.AtomicReaderContext)>($r7);

     label2:
        $i1 = i7 + i6;

        $i0 = r6.<org.apache.lucene.search.CachingCollector$SegStart: int end>;

        if $i1 >= $i0 goto label4;

        $r8 = r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: int[] curDocs>;

        $i2 = lengthof $r8;

        if i6 != $i2 goto label3;

        $r10 = r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: int[] curDocs>;

        $i5 = lengthof $r10;

        i7 = i7 + $i5;

        $r11 = r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: java.util.List cachedDocs>;

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i8);

        $r13 = (int[]) $r12;

        r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: int[] curDocs> = $r13;

        i8 = i8 + 1;

        i6 = 0;

     label3:
        $r9 = r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: int[] curDocs>;

        $i3 = i6;

        i6 = i6 + 1;

        $i4 = $r9[$i3];

        virtualinvoke r1.<org.apache.lucene.search.Collector: void collect(int)>($i4);

        goto label2;

     label4:
        goto label1;

     label5:
        return;
    }

    public void setScorer(org.apache.lucene.search.Scorer) throws java.io.IOException
    {
        org.apache.lucene.search.Scorer r1;
        org.apache.lucene.search.Collector $r2;
        org.apache.lucene.search.CachingCollector$NoScoreCachingCollector r0;

        r0 := @this: org.apache.lucene.search.CachingCollector$NoScoreCachingCollector;

        r1 := @parameter0: org.apache.lucene.search.Scorer;

        $r2 = r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: org.apache.lucene.search.Collector other>;

        virtualinvoke $r2.<org.apache.lucene.search.Collector: void setScorer(org.apache.lucene.search.Scorer)>(r1);

        return;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.search.CachingCollector$NoScoreCachingCollector r0;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: org.apache.lucene.search.CachingCollector$NoScoreCachingCollector;

        $z0 = virtualinvoke r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: boolean isCached()>();

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CachingCollector (");

        $i1 = r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: int base>;

        $i0 = r0.<org.apache.lucene.search.CachingCollector$NoScoreCachingCollector: int upto>;

        $i2 = $i1 + $i0;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" docs cached)");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

     label1:
        return "CachingCollector (cache was cleared)";
    }
}
