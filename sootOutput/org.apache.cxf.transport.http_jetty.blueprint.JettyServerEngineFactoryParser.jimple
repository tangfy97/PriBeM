public class org.apache.cxf.transport.http_jetty.blueprint.JettyServerEngineFactoryParser extends org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser
{
    public static final java.lang.String JETTY_TRANSPORT;
    public static final java.lang.String JETTY_THREADING;

    public void <init>()
    {
        org.apache.cxf.transport.http_jetty.blueprint.JettyServerEngineFactoryParser r0;

        r0 := @this: org.apache.cxf.transport.http_jetty.blueprint.JettyServerEngineFactoryParser;

        specialinvoke r0.<org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser: void <init>()>();

        return;
    }

    public static java.lang.String getIdOrName(org.w3c.dom.Element)
    {
        org.w3c.dom.Element r0;
        java.util.StringTokenizer $r3;
        int $i0;
        java.lang.String $r1, $r2, $r4, r5;
        boolean $z0;

        r0 := @parameter0: org.w3c.dom.Element;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("id");

        r5 = $r1;

        if null == $r1 goto label1;

        $r4 = "";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

     label1:
        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("name");

        if null == $r2 goto label2;

        $r3 = new java.util.StringTokenizer;

        specialinvoke $r3.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r2, ",");

        $i0 = virtualinvoke $r3.<java.util.StringTokenizer: int countTokens()>();

        if $i0 <= 0 goto label2;

        r5 = virtualinvoke $r3.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label2:
        return r5;
    }

    public org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element, org.apache.aries.blueprint.ParserContext)
    {
        javax.xml.transform.Transformer $r12;
        javax.xml.transform.dom.DOMSource $r25;
        org.osgi.service.blueprint.reflect.ValueMetadata $r17;
        javax.xml.transform.stream.StreamResult $r24;
        org.osgi.service.blueprint.reflect.Metadata $r1, $r27, $r28;
        java.lang.String $r4, $r8, $r10, $r16, $r18;
        boolean $z0;
        java.io.StringWriter $r23;
        java.util.UUID $r7;
        java.lang.RuntimeException $r26;
        java.lang.Exception $r19;
        org.apache.cxf.transport.http_jetty.blueprint.JettyServerEngineFactoryParser r21;
        org.w3c.dom.Element r3;
        org.apache.aries.blueprint.ParserContext r0;
        org.apache.aries.blueprint.mutable.MutableBeanMetadata r2;
        java.lang.StringBuilder $r6, $r9, $r22;
        javax.xml.transform.TransformerFactory $r11;

        r21 := @this: org.apache.cxf.transport.http_jetty.blueprint.JettyServerEngineFactoryParser;

        r3 := @parameter0: org.w3c.dom.Element;

        r0 := @parameter1: org.apache.aries.blueprint.ParserContext;

        $r1 = interfaceinvoke r0.<org.apache.aries.blueprint.ParserContext: org.osgi.service.blueprint.reflect.Metadata createMetadata(java.lang.Class)>(class "Lorg/apache/aries/blueprint/mutable/MutableBeanMetadata;");

        r2 = (org.apache.aries.blueprint.mutable.MutableBeanMetadata) $r1;

        $r4 = staticinvoke <org.apache.cxf.transport.http_jetty.blueprint.JettyServerEngineFactoryParser: java.lang.String getIdOrName(org.w3c.dom.Element)>(r3);

        $z0 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r4);

        if $z0 != 0 goto label1;

        $r18 = staticinvoke <org.apache.cxf.transport.http_jetty.blueprint.JettyServerEngineFactoryParser: java.lang.String getIdOrName(org.w3c.dom.Element)>(r3);

        interfaceinvoke r2.<org.apache.aries.blueprint.mutable.MutableBeanMetadata: void setId(java.lang.String)>($r18);

        goto label2;

     label1:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("jetty.engine.factory-holder-");

        $r7 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r8 = virtualinvoke $r7.<java.util.UUID: java.lang.String toString()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<org.apache.aries.blueprint.mutable.MutableBeanMetadata: void setId(java.lang.String)>($r10);

     label2:
        interfaceinvoke r2.<org.apache.aries.blueprint.mutable.MutableBeanMetadata: void setRuntimeClass(java.lang.Class)>(class "Lorg/apache/cxf/transport/http_jetty/blueprint/JettyHTTPServerEngineFactoryHolder;");

     label3:
        $r11 = staticinvoke <javax.xml.transform.TransformerFactory: javax.xml.transform.TransformerFactory newInstance()>();

        $r12 = virtualinvoke $r11.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer()>();

        virtualinvoke $r12.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("omit-xml-declaration", "YES");

        $r23 = new java.io.StringWriter;

        specialinvoke $r23.<java.io.StringWriter: void <init>()>();

        $r24 = new javax.xml.transform.stream.StreamResult;

        specialinvoke $r24.<javax.xml.transform.stream.StreamResult: void <init>(java.io.Writer)>($r23);

        $r25 = new javax.xml.transform.dom.DOMSource;

        specialinvoke $r25.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>(r3);

        virtualinvoke $r12.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r25, $r24);

        $r16 = virtualinvoke $r23.<java.io.StringWriter: java.lang.String toString()>();

        $r17 = staticinvoke <org.apache.cxf.transport.http_jetty.blueprint.JettyServerEngineFactoryParser: org.osgi.service.blueprint.reflect.ValueMetadata createValue(org.apache.aries.blueprint.ParserContext,java.lang.String)>(r0, $r16);

        $r27 = (org.osgi.service.blueprint.reflect.Metadata) $r17;

        interfaceinvoke r2.<org.apache.aries.blueprint.mutable.MutableBeanMetadata: org.osgi.service.blueprint.reflect.BeanProperty addProperty(java.lang.String,org.osgi.service.blueprint.reflect.Metadata)>("parsedElement", $r27);

        interfaceinvoke r2.<org.apache.aries.blueprint.mutable.MutableBeanMetadata: void setInitMethod(java.lang.String)>("init");

        interfaceinvoke r2.<org.apache.aries.blueprint.mutable.MutableBeanMetadata: void setActivation(int)>(1);

        interfaceinvoke r2.<org.apache.aries.blueprint.mutable.MutableBeanMetadata: void setDestroyMethod(java.lang.String)>("destroy");

     label4:
        $r28 = (org.osgi.service.blueprint.reflect.Metadata) r2;

        return $r28;

     label5:
        $r19 := @caughtexception;

        $r26 = new java.lang.RuntimeException;

        specialinvoke $r26.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Could not process configuration.", $r19);

        throw $r26;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static void <clinit>()
    {
        <org.apache.cxf.transport.http_jetty.blueprint.JettyServerEngineFactoryParser: java.lang.String JETTY_THREADING> = "http://cxf.apache.org/configuration/parameterized-types";

        <org.apache.cxf.transport.http_jetty.blueprint.JettyServerEngineFactoryParser: java.lang.String JETTY_TRANSPORT> = "http://cxf.apache.org/transports/http-jetty/configuration";

        return;
    }
}
