public class ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl extends ucar.nc2.ft.point.OneNestedPointCollectionImpl implements ucar.nc2.ft.TrajectoryFeatureCollection
{
    private ucar.nc2.units.DateUnit timeUnit;
    private ucar.nc2.ft.point.standard.NestedTable ft;
    private ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl$TrajCollectionIterator localIterator;

    protected void <init>(java.lang.String)
    {
        ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl r0;
        java.lang.String r1;
        ucar.nc2.constants.FeatureType $r2;

        r0 := @this: ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType TRAJECTORY>;

        specialinvoke r0.<ucar.nc2.ft.point.OneNestedPointCollectionImpl: void <init>(java.lang.String,ucar.nc2.constants.FeatureType)>(r1, $r2);

        r0.<ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl: ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl$TrajCollectionIterator localIterator> = null;

        return;
    }

    void <init>(ucar.nc2.ft.point.standard.NestedTable, ucar.nc2.units.DateUnit)
    {
        ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl r0;
        ucar.nc2.units.DateUnit r4;
        java.lang.String $r2;
        ucar.nc2.ft.point.standard.NestedTable r1;
        ucar.nc2.constants.FeatureType $r3;

        r0 := @this: ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl;

        r1 := @parameter0: ucar.nc2.ft.point.standard.NestedTable;

        r4 := @parameter1: ucar.nc2.units.DateUnit;

        $r2 = virtualinvoke r1.<ucar.nc2.ft.point.standard.NestedTable: java.lang.String getName()>();

        $r3 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType TRAJECTORY>;

        specialinvoke r0.<ucar.nc2.ft.point.OneNestedPointCollectionImpl: void <init>(java.lang.String,ucar.nc2.constants.FeatureType)>($r2, $r3);

        r0.<ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl: ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl$TrajCollectionIterator localIterator> = null;

        r0.<ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl: ucar.nc2.ft.point.standard.NestedTable ft> = r1;

        r0.<ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl: ucar.nc2.units.DateUnit timeUnit> = r4;

        return;
    }

    public ucar.nc2.ft.PointFeatureCollectionIterator getPointFeatureCollectionIterator(int) throws java.io.IOException
    {
        ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl$TrajCollectionIterator $r0;
        ucar.ma2.StructureDataIterator $r3;
        int i0;
        ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl r1;
        ucar.nc2.ft.point.standard.NestedTable $r2;

        r1 := @this: ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl;

        i0 := @parameter0: int;

        $r0 = new ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl$TrajCollectionIterator;

        $r2 = r1.<ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl: ucar.nc2.ft.point.standard.NestedTable ft>;

        $r3 = virtualinvoke $r2.<ucar.nc2.ft.point.standard.NestedTable: ucar.ma2.StructureDataIterator getRootFeatureDataIterator(int)>(i0);

        specialinvoke $r0.<ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl$TrajCollectionIterator: void <init>(ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl,ucar.ma2.StructureDataIterator)>(r1, $r3);

        return $r0;
    }

    public boolean hasNext() throws java.io.IOException
    {
        ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl$TrajCollectionIterator $r1, $r2;
        ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl r0;
        boolean $z0;

        r0 := @this: ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl;

        $r1 = r0.<ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl: ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl$TrajCollectionIterator localIterator>;

        if $r1 != null goto label1;

        virtualinvoke r0.<ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl: void resetIteration()>();

     label1:
        $r2 = r0.<ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl: ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl$TrajCollectionIterator localIterator>;

        $z0 = virtualinvoke $r2.<ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl$TrajCollectionIterator: boolean hasNext()>();

        return $z0;
    }

    public ucar.nc2.ft.TrajectoryFeatureCollection subset(ucar.unidata.geoloc.LatLonRect) throws java.io.IOException
    {
        ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl r1;
        ucar.unidata.geoloc.LatLonRect r2;
        ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl$StandardTrajectoryCollectionSubset $r0;

        r1 := @this: ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl;

        r2 := @parameter0: ucar.unidata.geoloc.LatLonRect;

        $r0 = new ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl$StandardTrajectoryCollectionSubset;

        specialinvoke $r0.<ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl$StandardTrajectoryCollectionSubset: void <init>(ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl,ucar.nc2.ft.TrajectoryFeatureCollection,ucar.unidata.geoloc.LatLonRect)>(r1, r1, r2);

        return $r0;
    }

    public ucar.nc2.ft.TrajectoryFeature next() throws java.io.IOException
    {
        ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl r0;
        ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl$TrajCollectionIterator $r1;
        ucar.nc2.ft.TrajectoryFeature $r2;

        r0 := @this: ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl;

        $r1 = r0.<ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl: ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl$TrajCollectionIterator localIterator>;

        $r2 = virtualinvoke $r1.<ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl$TrajCollectionIterator: ucar.nc2.ft.TrajectoryFeature next()>();

        return $r2;
    }

    public void resetIteration() throws java.io.IOException
    {
        ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl$TrajCollectionIterator $r2;
        int $i1;
        ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl r0;
        ucar.nc2.ft.PointFeatureCollectionIterator $r1;

        r0 := @this: ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl;

        $i1 = (int) -1;

        $r1 = virtualinvoke r0.<ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl: ucar.nc2.ft.PointFeatureCollectionIterator getPointFeatureCollectionIterator(int)>($i1);

        $r2 = (ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl$TrajCollectionIterator) $r1;

        r0.<ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl: ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl$TrajCollectionIterator localIterator> = $r2;

        return;
    }

    public volatile ucar.nc2.ft.NestedPointFeatureCollection subset(ucar.unidata.geoloc.LatLonRect) throws java.io.IOException
    {
        ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl r0;
        ucar.unidata.geoloc.LatLonRect r1;
        ucar.nc2.ft.TrajectoryFeatureCollection $r2;

        r0 := @this: ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl;

        r1 := @parameter0: ucar.unidata.geoloc.LatLonRect;

        $r2 = virtualinvoke r0.<ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl: ucar.nc2.ft.TrajectoryFeatureCollection subset(ucar.unidata.geoloc.LatLonRect)>(r1);

        return $r2;
    }

    static ucar.nc2.ft.point.standard.NestedTable access$000(ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl)
    {
        ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl r0;
        ucar.nc2.ft.point.standard.NestedTable $r1;

        r0 := @parameter0: ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl;

        $r1 = r0.<ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl: ucar.nc2.ft.point.standard.NestedTable ft>;

        return $r1;
    }

    static ucar.nc2.units.DateUnit access$100(ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl)
    {
        ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl r0;
        ucar.nc2.units.DateUnit $r1;

        r0 := @parameter0: ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl;

        $r1 = r0.<ucar.nc2.ft.point.standard.StandardTrajectoryCollectionImpl: ucar.nc2.units.DateUnit timeUnit>;

        return $r1;
    }
}
