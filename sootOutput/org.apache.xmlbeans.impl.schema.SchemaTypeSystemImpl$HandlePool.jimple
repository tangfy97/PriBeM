class org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool extends java.lang.Object
{
    private java.util.Map _handlesToRefs;
    private java.util.Map _componentsToHandles;
    private boolean _started;
    private final org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0;

    void <init>(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)
    {
        java.util.LinkedHashMap $r2, $r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool;

        r1 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.util.Map _handlesToRefs> = $r2;

        $r3 = new java.util.LinkedHashMap;

        specialinvoke $r3.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.util.Map _componentsToHandles> = $r3;

        return;
    }

    private java.lang.String addUniqueHandle(org.apache.xmlbeans.SchemaComponent, java.lang.String)
    {
        org.apache.xmlbeans.SchemaComponent$Ref $r5;
        java.lang.StringBuffer $r7, $r8, $r9;
        java.util.Map $r2, $r4, $r6;
        int i0;
        org.apache.xmlbeans.SchemaComponent r3;
        java.lang.String $r0, r10, r11;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool r1;
        boolean $z0;

        r1 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool;

        r3 := @parameter0: org.apache.xmlbeans.SchemaComponent;

        r10 := @parameter1: java.lang.String;

        $r0 = virtualinvoke r10.<java.lang.String: java.lang.String toLowerCase()>();

        r11 = $r0;

        i0 = 2;

     label1:
        $r2 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.util.Map _handlesToRefs>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r11);

        if $z0 == 0 goto label2;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        $r4 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.util.Map _handlesToRefs>;

        $r5 = interfaceinvoke r3.<org.apache.xmlbeans.SchemaComponent: org.apache.xmlbeans.SchemaComponent$Ref getComponentRef()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r5);

        $r6 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.util.Map _componentsToHandles>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r11);

        return r11;
    }

    java.lang.String handleForComponent(org.apache.xmlbeans.SchemaComponent)
    {
        java.lang.IllegalStateException $r5;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r3, $r4;
        org.apache.xmlbeans.SchemaComponent r0;
        java.lang.String $r7, $r9, $r11, $r13, $r15, $r17;
        org.apache.xmlbeans.SchemaType $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.xmlbeans.SchemaAttributeGroup $r8;
        org.apache.xmlbeans.SchemaGlobalElement $r14;
        org.apache.xmlbeans.SchemaGlobalAttribute $r12;
        org.apache.xmlbeans.SchemaIdentityConstraint $r6;
        java.lang.IllegalArgumentException $r18;
        org.apache.xmlbeans.SchemaModelGroup $r10;
        org.apache.xmlbeans.SchemaTypeSystem $r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool r2;

        r2 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool;

        r0 := @parameter0: org.apache.xmlbeans.SchemaComponent;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaComponent: org.apache.xmlbeans.SchemaTypeSystem getTypeSystem()>();

        $r3 = r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r4 = virtualinvoke $r3.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl getTypeSystem()>();

        if $r1 == $r4 goto label2;

        $r18 = new java.lang.IllegalArgumentException;

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot supply handles for types from another type system");

        throw $r18;

     label2:
        $z0 = r0 instanceof org.apache.xmlbeans.SchemaType;

        if $z0 == 0 goto label3;

        $r16 = (org.apache.xmlbeans.SchemaType) r0;

        $r17 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.lang.String handleForType(org.apache.xmlbeans.SchemaType)>($r16);

        return $r17;

     label3:
        $z1 = r0 instanceof org.apache.xmlbeans.SchemaGlobalElement;

        if $z1 == 0 goto label4;

        $r14 = (org.apache.xmlbeans.SchemaGlobalElement) r0;

        $r15 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.lang.String handleForElement(org.apache.xmlbeans.SchemaGlobalElement)>($r14);

        return $r15;

     label4:
        $z2 = r0 instanceof org.apache.xmlbeans.SchemaGlobalAttribute;

        if $z2 == 0 goto label5;

        $r12 = (org.apache.xmlbeans.SchemaGlobalAttribute) r0;

        $r13 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.lang.String handleForAttribute(org.apache.xmlbeans.SchemaGlobalAttribute)>($r12);

        return $r13;

     label5:
        $z3 = r0 instanceof org.apache.xmlbeans.SchemaModelGroup;

        if $z3 == 0 goto label6;

        $r10 = (org.apache.xmlbeans.SchemaModelGroup) r0;

        $r11 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.lang.String handleForModelGroup(org.apache.xmlbeans.SchemaModelGroup)>($r10);

        return $r11;

     label6:
        $z4 = r0 instanceof org.apache.xmlbeans.SchemaAttributeGroup;

        if $z4 == 0 goto label7;

        $r8 = (org.apache.xmlbeans.SchemaAttributeGroup) r0;

        $r9 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.lang.String handleForAttributeGroup(org.apache.xmlbeans.SchemaAttributeGroup)>($r8);

        return $r9;

     label7:
        $z5 = r0 instanceof org.apache.xmlbeans.SchemaIdentityConstraint;

        if $z5 == 0 goto label8;

        $r6 = (org.apache.xmlbeans.SchemaIdentityConstraint) r0;

        $r7 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.lang.String handleForIdentityConstraint(org.apache.xmlbeans.SchemaIdentityConstraint)>($r6);

        return $r7;

     label8:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Component type cannot have a handle");

        throw $r5;
    }

    java.lang.String handleForElement(org.apache.xmlbeans.SchemaGlobalElement)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r3, $r4;
        java.lang.StringBuffer $r7, $r11, $r12;
        java.util.Map $r5;
        java.lang.String $r9, $r10, $r13, r15;
        org.apache.xmlbeans.SchemaGlobalElement r0;
        java.lang.IllegalArgumentException $r14;
        org.apache.xmlbeans.SchemaTypeSystem $r1;
        java.lang.Object $r6;
        javax.xml.namespace.QName $r8;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool r2;

        r2 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool;

        r0 := @parameter0: org.apache.xmlbeans.SchemaGlobalElement;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaGlobalElement: org.apache.xmlbeans.SchemaTypeSystem getTypeSystem()>();

        $r3 = r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r4 = virtualinvoke $r3.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl getTypeSystem()>();

        if $r1 == $r4 goto label2;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot supply handles for types from another type system");

        throw $r14;

     label2:
        $r5 = r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.util.Map _componentsToHandles>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r15 = (java.lang.String) $r6;

        if r15 != null goto label3;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaGlobalElement: javax.xml.namespace.QName getName()>();

        $r9 = virtualinvoke $r8.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r10 = staticinvoke <org.apache.xmlbeans.impl.common.NameUtil: java.lang.String upperCamelCase(java.lang.String)>($r9);

        $r11 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Element");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        r15 = specialinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.lang.String addUniqueHandle(org.apache.xmlbeans.SchemaComponent,java.lang.String)>(r0, $r13);

     label3:
        return r15;
    }

    java.lang.String handleForAttribute(org.apache.xmlbeans.SchemaGlobalAttribute)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r3, $r4;
        java.lang.StringBuffer $r7, $r11, $r12;
        java.util.Map $r5;
        java.lang.String $r9, $r10, $r13, r15;
        org.apache.xmlbeans.SchemaGlobalAttribute r0;
        java.lang.IllegalArgumentException $r14;
        org.apache.xmlbeans.SchemaTypeSystem $r1;
        java.lang.Object $r6;
        javax.xml.namespace.QName $r8;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool r2;

        r2 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool;

        r0 := @parameter0: org.apache.xmlbeans.SchemaGlobalAttribute;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaGlobalAttribute: org.apache.xmlbeans.SchemaTypeSystem getTypeSystem()>();

        $r3 = r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r4 = virtualinvoke $r3.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl getTypeSystem()>();

        if $r1 == $r4 goto label2;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot supply handles for types from another type system");

        throw $r14;

     label2:
        $r5 = r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.util.Map _componentsToHandles>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r15 = (java.lang.String) $r6;

        if r15 != null goto label3;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaGlobalAttribute: javax.xml.namespace.QName getName()>();

        $r9 = virtualinvoke $r8.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r10 = staticinvoke <org.apache.xmlbeans.impl.common.NameUtil: java.lang.String upperCamelCase(java.lang.String)>($r9);

        $r11 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Attribute");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        r15 = specialinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.lang.String addUniqueHandle(org.apache.xmlbeans.SchemaComponent,java.lang.String)>(r0, $r13);

     label3:
        return r15;
    }

    java.lang.String handleForModelGroup(org.apache.xmlbeans.SchemaModelGroup)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r3, $r4;
        java.lang.StringBuffer $r7, $r11, $r12;
        java.util.Map $r5;
        java.lang.String $r9, $r10, $r13, r15;
        java.lang.IllegalArgumentException $r14;
        org.apache.xmlbeans.SchemaModelGroup r0;
        org.apache.xmlbeans.SchemaTypeSystem $r1;
        java.lang.Object $r6;
        javax.xml.namespace.QName $r8;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool r2;

        r2 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool;

        r0 := @parameter0: org.apache.xmlbeans.SchemaModelGroup;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaModelGroup: org.apache.xmlbeans.SchemaTypeSystem getTypeSystem()>();

        $r3 = r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r4 = virtualinvoke $r3.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl getTypeSystem()>();

        if $r1 == $r4 goto label2;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot supply handles for types from another type system");

        throw $r14;

     label2:
        $r5 = r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.util.Map _componentsToHandles>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r15 = (java.lang.String) $r6;

        if r15 != null goto label3;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaModelGroup: javax.xml.namespace.QName getName()>();

        $r9 = virtualinvoke $r8.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r10 = staticinvoke <org.apache.xmlbeans.impl.common.NameUtil: java.lang.String upperCamelCase(java.lang.String)>($r9);

        $r11 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ModelGroup");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        r15 = specialinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.lang.String addUniqueHandle(org.apache.xmlbeans.SchemaComponent,java.lang.String)>(r0, $r13);

     label3:
        return r15;
    }

    java.lang.String handleForAttributeGroup(org.apache.xmlbeans.SchemaAttributeGroup)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r3, $r4;
        java.lang.StringBuffer $r7, $r11, $r12;
        java.util.Map $r5;
        java.lang.String $r9, $r10, $r13, r15;
        org.apache.xmlbeans.SchemaAttributeGroup r0;
        java.lang.IllegalArgumentException $r14;
        org.apache.xmlbeans.SchemaTypeSystem $r1;
        java.lang.Object $r6;
        javax.xml.namespace.QName $r8;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool r2;

        r2 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool;

        r0 := @parameter0: org.apache.xmlbeans.SchemaAttributeGroup;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaAttributeGroup: org.apache.xmlbeans.SchemaTypeSystem getTypeSystem()>();

        $r3 = r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r4 = virtualinvoke $r3.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl getTypeSystem()>();

        if $r1 == $r4 goto label2;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot supply handles for types from another type system");

        throw $r14;

     label2:
        $r5 = r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.util.Map _componentsToHandles>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r15 = (java.lang.String) $r6;

        if r15 != null goto label3;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaAttributeGroup: javax.xml.namespace.QName getName()>();

        $r9 = virtualinvoke $r8.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r10 = staticinvoke <org.apache.xmlbeans.impl.common.NameUtil: java.lang.String upperCamelCase(java.lang.String)>($r9);

        $r11 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("AttributeGroup");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        r15 = specialinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.lang.String addUniqueHandle(org.apache.xmlbeans.SchemaComponent,java.lang.String)>(r0, $r13);

     label3:
        return r15;
    }

    java.lang.String handleForIdentityConstraint(org.apache.xmlbeans.SchemaIdentityConstraint)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r3, $r4;
        java.lang.StringBuffer $r7, $r11, $r12;
        java.util.Map $r5;
        java.lang.String $r9, $r10, $r13, r15;
        org.apache.xmlbeans.SchemaIdentityConstraint r0;
        java.lang.IllegalArgumentException $r14;
        org.apache.xmlbeans.SchemaTypeSystem $r1;
        java.lang.Object $r6;
        javax.xml.namespace.QName $r8;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool r2;

        r2 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool;

        r0 := @parameter0: org.apache.xmlbeans.SchemaIdentityConstraint;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaIdentityConstraint: org.apache.xmlbeans.SchemaTypeSystem getTypeSystem()>();

        $r3 = r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r4 = virtualinvoke $r3.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl getTypeSystem()>();

        if $r1 == $r4 goto label2;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot supply handles for types from another type system");

        throw $r14;

     label2:
        $r5 = r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.util.Map _componentsToHandles>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r15 = (java.lang.String) $r6;

        if r15 != null goto label3;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaIdentityConstraint: javax.xml.namespace.QName getName()>();

        $r9 = virtualinvoke $r8.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r10 = staticinvoke <org.apache.xmlbeans.impl.common.NameUtil: java.lang.String upperCamelCase(java.lang.String)>($r9);

        $r11 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("IdentityConstraint");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        r15 = specialinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.lang.String addUniqueHandle(org.apache.xmlbeans.SchemaComponent,java.lang.String)>(r0, $r13);

     label3:
        return r15;
    }

    java.lang.String handleForType(org.apache.xmlbeans.SchemaType)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r3, $r4;
        java.util.Map $r5;
        org.apache.xmlbeans.SchemaType r0;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.SchemaTypeSystem $r1;
        javax.xml.namespace.QName $r7, r24;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool r2;
        org.apache.xmlbeans.SchemaField $r19, $r20, $r21;
        java.lang.StringBuffer $r8, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        int $i0, $i1;
        java.lang.String $r9, $r10, r23, r25, $r26, $r27, $r28, $r29, $r30, r31;
        java.lang.IllegalArgumentException $r22;
        java.lang.Object $r6;

        r2 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool;

        r0 := @parameter0: org.apache.xmlbeans.SchemaType;

        if r0 != null goto label01;

        return null;

     label01:
        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaTypeSystem getTypeSystem()>();

        $r3 = r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl this$0>;

        $r4 = virtualinvoke $r3.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl getTypeSystem()>();

        if $r1 == $r4 goto label02;

        $r22 = new java.lang.IllegalArgumentException;

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot supply handles for types from another type system");

        throw $r22;

     label02:
        $r5 = r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.util.Map _componentsToHandles>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r23 = (java.lang.String) $r6;

        if r23 != null goto label10;

        $r7 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        r24 = $r7;

        r25 = "";

        if $r7 != null goto label07;

        $z0 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: boolean isDocumentType()>();

        if $z0 == 0 goto label03;

        r24 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getDocumentElementName()>();

        r25 = "Doc";

        goto label07;

     label03:
        $z1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: boolean isAttributeType()>();

        if $z1 == 0 goto label04;

        r24 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getAttributeTypeAttributeName()>();

        r25 = "AttrType";

        goto label07;

     label04:
        $r19 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaField getContainerField()>();

        if $r19 == null goto label07;

        $r20 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaField getContainerField()>();

        r24 = interfaceinvoke $r20.<org.apache.xmlbeans.SchemaField: javax.xml.namespace.QName getName()>();

        $r21 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaField getContainerField()>();

        $z2 = interfaceinvoke $r21.<org.apache.xmlbeans.SchemaField: boolean isAttribute()>();

        if $z2 == 0 goto label05;

        $r26 = "Attr";

        goto label06;

     label05:
        $r26 = "Elem";

     label06:
        r25 = $r26;

     label07:
        $r27 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $i0 = virtualinvoke $r27.<java.lang.String: int hashCode()>();

        $i1 = $i0 | -2147483648;

        $r28 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $r29 = virtualinvoke $r28.<java.lang.String: java.lang.String substring(int)>(4);

        $r30 = virtualinvoke $r29.<java.lang.String: java.lang.String toUpperCase()>();

        if r24 != null goto label08;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Anon");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r30);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Type");

        r31 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label09;

     label08:
        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke r24.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r10 = staticinvoke <org.apache.xmlbeans.impl.common.NameUtil: java.lang.String upperCamelCase(java.lang.String)>($r9);

        $r11 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r30);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r25);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Type");

        r31 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

     label09:
        r23 = specialinvoke r2.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.lang.String addUniqueHandle(org.apache.xmlbeans.SchemaComponent,java.lang.String)>(r0, r31);

     label10:
        return r23;
    }

    org.apache.xmlbeans.SchemaComponent$Ref refForHandle(java.lang.String)
    {
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r0;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool r1;
        org.apache.xmlbeans.SchemaComponent$Ref $r4;

        r1 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = r1.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.util.Map _handlesToRefs>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r4 = (org.apache.xmlbeans.SchemaComponent$Ref) $r3;

        return $r4;
    }

    java.util.Set getAllHandles()
    {
        java.util.Set $r2;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool r0;
        java.util.Map $r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.util.Map _handlesToRefs>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        return $r2;
    }

    void startWriteMode()
    {
        java.util.Iterator $r4;
        java.util.Set $r3;
        org.apache.xmlbeans.SchemaComponent$Ref $r9;
        java.util.LinkedHashMap $r1;
        java.util.Map $r2, $r7, $r11;
        java.lang.Object $r5, $r8;
        org.apache.xmlbeans.SchemaComponent $r10;
        java.lang.String r6;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool;

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: boolean _started> = 1;

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.util.Map _componentsToHandles> = $r1;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.util.Map _handlesToRefs>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        $r7 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.util.Map _handlesToRefs>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        $r9 = (org.apache.xmlbeans.SchemaComponent$Ref) $r8;

        $r10 = virtualinvoke $r9.<org.apache.xmlbeans.SchemaComponent$Ref: org.apache.xmlbeans.SchemaComponent getComponent()>();

        $r11 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.util.Map _componentsToHandles>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, r6);

        goto label1;

     label2:
        return;
    }

    static java.util.Map access$500(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool r0;
        java.util.Map $r1;

        r0 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.util.Map _componentsToHandles>;

        return $r1;
    }

    static java.util.Map access$600(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool r0;
        java.util.Map $r1;

        r0 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: java.util.Map _handlesToRefs>;

        return $r1;
    }

    static boolean access$700(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool r0;
        boolean $z0;

        r0 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool;

        $z0 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$HandlePool: boolean _started>;

        return $z0;
    }
}
