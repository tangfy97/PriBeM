public final class org.apache.lucene.queryparser.flexible.standard.QueryParserUtil extends java.lang.Object
{

    public void <init>()
    {
        org.apache.lucene.queryparser.flexible.standard.QueryParserUtil r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.standard.QueryParserUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.lucene.search.Query parse(java.lang.String[], java.lang.String[], org.apache.lucene.analysis.Analyzer) throws org.apache.lucene.queryparser.flexible.core.QueryNodeException
    {
        org.apache.lucene.search.Query $r7;
        java.lang.String[] r0, r1;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String $r5, $r6;
        org.apache.lucene.search.BooleanClause$Occur $r8;
        org.apache.lucene.search.BooleanClause[] $r10;
        boolean $z0;
        org.apache.lucene.analysis.Analyzer r4;
        org.apache.lucene.queryparser.flexible.standard.StandardQueryParser $r3;
        java.lang.IllegalArgumentException $r11;
        org.apache.lucene.search.BooleanQuery $r2, $r9;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: java.lang.String[];

        r4 := @parameter2: org.apache.lucene.analysis.Analyzer;

        $i1 = lengthof r0;

        $i0 = lengthof r1;

        if $i1 == $i0 goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("queries.length != fields.length");

        throw $r11;

     label1:
        $r2 = new org.apache.lucene.search.BooleanQuery;

        specialinvoke $r2.<org.apache.lucene.search.BooleanQuery: void <init>()>();

        $r3 = new org.apache.lucene.queryparser.flexible.standard.StandardQueryParser;

        specialinvoke $r3.<org.apache.lucene.queryparser.flexible.standard.StandardQueryParser: void <init>()>();

        virtualinvoke $r3.<org.apache.lucene.queryparser.flexible.standard.StandardQueryParser: void setAnalyzer(org.apache.lucene.analysis.Analyzer)>(r4);

        i4 = 0;

     label2:
        $i2 = lengthof r1;

        if i4 >= $i2 goto label5;

        $r6 = r0[i4];

        $r5 = r1[i4];

        $r7 = virtualinvoke $r3.<org.apache.lucene.queryparser.flexible.standard.StandardQueryParser: org.apache.lucene.search.Query parse(java.lang.String,java.lang.String)>($r6, $r5);

        if $r7 == null goto label4;

        $z0 = $r7 instanceof org.apache.lucene.search.BooleanQuery;

        if $z0 == 0 goto label3;

        $r9 = (org.apache.lucene.search.BooleanQuery) $r7;

        $r10 = virtualinvoke $r9.<org.apache.lucene.search.BooleanQuery: org.apache.lucene.search.BooleanClause[] getClauses()>();

        $i3 = lengthof $r10;

        if $i3 <= 0 goto label4;

     label3:
        $r8 = <org.apache.lucene.search.BooleanClause$Occur: org.apache.lucene.search.BooleanClause$Occur SHOULD>;

        virtualinvoke $r2.<org.apache.lucene.search.BooleanQuery: void add(org.apache.lucene.search.Query,org.apache.lucene.search.BooleanClause$Occur)>($r7, $r8);

     label4:
        i4 = i4 + 1;

        goto label2;

     label5:
        return $r2;
    }

    public static org.apache.lucene.search.Query parse(java.lang.String, java.lang.String[], org.apache.lucene.search.BooleanClause$Occur[], org.apache.lucene.analysis.Analyzer) throws org.apache.lucene.queryparser.flexible.core.QueryNodeException
    {
        org.apache.lucene.search.Query $r7;
        java.lang.String[] r0;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String r5, $r6;
        org.apache.lucene.search.BooleanClause$Occur $r8;
        org.apache.lucene.search.BooleanClause[] $r10;
        boolean $z0;
        org.apache.lucene.analysis.Analyzer r4;
        org.apache.lucene.queryparser.flexible.standard.StandardQueryParser $r3;
        java.lang.IllegalArgumentException $r11;
        org.apache.lucene.search.BooleanClause$Occur[] r1;
        org.apache.lucene.search.BooleanQuery $r2, $r9;

        r5 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String[];

        r1 := @parameter2: org.apache.lucene.search.BooleanClause$Occur[];

        r4 := @parameter3: org.apache.lucene.analysis.Analyzer;

        $i1 = lengthof r0;

        $i0 = lengthof r1;

        if $i1 == $i0 goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("fields.length != flags.length");

        throw $r11;

     label1:
        $r2 = new org.apache.lucene.search.BooleanQuery;

        specialinvoke $r2.<org.apache.lucene.search.BooleanQuery: void <init>()>();

        $r3 = new org.apache.lucene.queryparser.flexible.standard.StandardQueryParser;

        specialinvoke $r3.<org.apache.lucene.queryparser.flexible.standard.StandardQueryParser: void <init>()>();

        virtualinvoke $r3.<org.apache.lucene.queryparser.flexible.standard.StandardQueryParser: void setAnalyzer(org.apache.lucene.analysis.Analyzer)>(r4);

        i4 = 0;

     label2:
        $i2 = lengthof r0;

        if i4 >= $i2 goto label5;

        $r6 = r0[i4];

        $r7 = virtualinvoke $r3.<org.apache.lucene.queryparser.flexible.standard.StandardQueryParser: org.apache.lucene.search.Query parse(java.lang.String,java.lang.String)>(r5, $r6);

        if $r7 == null goto label4;

        $z0 = $r7 instanceof org.apache.lucene.search.BooleanQuery;

        if $z0 == 0 goto label3;

        $r9 = (org.apache.lucene.search.BooleanQuery) $r7;

        $r10 = virtualinvoke $r9.<org.apache.lucene.search.BooleanQuery: org.apache.lucene.search.BooleanClause[] getClauses()>();

        $i3 = lengthof $r10;

        if $i3 <= 0 goto label4;

     label3:
        $r8 = r1[i4];

        virtualinvoke $r2.<org.apache.lucene.search.BooleanQuery: void add(org.apache.lucene.search.Query,org.apache.lucene.search.BooleanClause$Occur)>($r7, $r8);

     label4:
        i4 = i4 + 1;

        goto label2;

     label5:
        return $r2;
    }

    public static org.apache.lucene.search.Query parse(java.lang.String[], java.lang.String[], org.apache.lucene.search.BooleanClause$Occur[], org.apache.lucene.analysis.Analyzer) throws org.apache.lucene.queryparser.flexible.core.QueryNodeException
    {
        org.apache.lucene.search.Query $r9;
        java.lang.String[] r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.String $r7, $r8;
        org.apache.lucene.search.BooleanClause$Occur $r10;
        org.apache.lucene.search.BooleanClause[] $r12;
        boolean $z0;
        org.apache.lucene.analysis.Analyzer r6;
        org.apache.lucene.queryparser.flexible.standard.StandardQueryParser $r5;
        java.lang.IllegalArgumentException $r2;
        org.apache.lucene.search.BooleanClause$Occur[] r3;
        org.apache.lucene.search.BooleanQuery $r4, $r11;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: java.lang.String[];

        r3 := @parameter2: org.apache.lucene.search.BooleanClause$Occur[];

        r6 := @parameter3: org.apache.lucene.analysis.Analyzer;

        $i1 = lengthof r0;

        $i0 = lengthof r1;

        if $i1 != $i0 goto label1;

        $i3 = lengthof r0;

        $i2 = lengthof r3;

        if $i3 == $i2 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("queries, fields, and flags array have have different length");

        throw $r2;

     label2:
        $r4 = new org.apache.lucene.search.BooleanQuery;

        specialinvoke $r4.<org.apache.lucene.search.BooleanQuery: void <init>()>();

        $r5 = new org.apache.lucene.queryparser.flexible.standard.StandardQueryParser;

        specialinvoke $r5.<org.apache.lucene.queryparser.flexible.standard.StandardQueryParser: void <init>()>();

        virtualinvoke $r5.<org.apache.lucene.queryparser.flexible.standard.StandardQueryParser: void setAnalyzer(org.apache.lucene.analysis.Analyzer)>(r6);

        i6 = 0;

     label3:
        $i4 = lengthof r1;

        if i6 >= $i4 goto label6;

        $r8 = r0[i6];

        $r7 = r1[i6];

        $r9 = virtualinvoke $r5.<org.apache.lucene.queryparser.flexible.standard.StandardQueryParser: org.apache.lucene.search.Query parse(java.lang.String,java.lang.String)>($r8, $r7);

        if $r9 == null goto label5;

        $z0 = $r9 instanceof org.apache.lucene.search.BooleanQuery;

        if $z0 == 0 goto label4;

        $r11 = (org.apache.lucene.search.BooleanQuery) $r9;

        $r12 = virtualinvoke $r11.<org.apache.lucene.search.BooleanQuery: org.apache.lucene.search.BooleanClause[] getClauses()>();

        $i5 = lengthof $r12;

        if $i5 <= 0 goto label5;

     label4:
        $r10 = r3[i6];

        virtualinvoke $r4.<org.apache.lucene.search.BooleanQuery: void add(org.apache.lucene.search.Query,org.apache.lucene.search.BooleanClause$Occur)>($r9, $r10);

     label5:
        i6 = i6 + 1;

        goto label3;

     label6:
        return $r4;
    }

    public static java.lang.String escape(java.lang.String)
    {
        int $i0, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        java.lang.String r1, $r2;
        char $c1;
        java.lang.StringBuilder $r3;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        i2 = 0;

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i2 >= $i0 goto label4;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        $i3 = (int) $c1;

        if $i3 == 92 goto label2;

        $i4 = (int) $c1;

        if $i4 == 43 goto label2;

        $i5 = (int) $c1;

        if $i5 == 45 goto label2;

        $i6 = (int) $c1;

        if $i6 == 33 goto label2;

        $i7 = (int) $c1;

        if $i7 == 40 goto label2;

        $i8 = (int) $c1;

        if $i8 == 41 goto label2;

        $i9 = (int) $c1;

        if $i9 == 58 goto label2;

        $i10 = (int) $c1;

        if $i10 == 94 goto label2;

        $i11 = (int) $c1;

        if $i11 == 91 goto label2;

        $i12 = (int) $c1;

        if $i12 == 93 goto label2;

        $i13 = (int) $c1;

        if $i13 == 34 goto label2;

        $i14 = (int) $c1;

        if $i14 == 123 goto label2;

        $i15 = (int) $c1;

        if $i15 == 125 goto label2;

        $i16 = (int) $c1;

        if $i16 == 126 goto label2;

        $i17 = (int) $c1;

        if $i17 == 42 goto label2;

        $i18 = (int) $c1;

        if $i18 == 63 goto label2;

        $i19 = (int) $c1;

        if $i19 == 124 goto label2;

        $i20 = (int) $c1;

        if $i20 != 38 goto label3;

     label2:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);

     label3:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        i2 = i2 + 1;

        goto label1;

     label4:
        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
