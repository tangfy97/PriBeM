class org.bouncycastle.jce.provider.RFC3281CertPathUtilities extends java.lang.Object
{
    private static final java.lang.String TARGET_INFORMATION;
    private static final java.lang.String NO_REV_AVAIL;
    private static final java.lang.String CRL_DISTRIBUTION_POINTS;
    private static final java.lang.String AUTHORITY_INFO_ACCESS;

    void <init>()
    {
        org.bouncycastle.jce.provider.RFC3281CertPathUtilities r0;

        r0 := @this: org.bouncycastle.jce.provider.RFC3281CertPathUtilities;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected static void processAttrCert7(org.bouncycastle.x509.X509AttributeCertificate, java.security.cert.CertPath, java.security.cert.CertPath, org.bouncycastle.x509.ExtendedPKIXParameters) throws java.security.cert.CertPathValidatorException
    {
        org.bouncycastle.asn1.DERObject $r17;
        org.bouncycastle.x509.ExtendedPKIXParameters r4;
        org.bouncycastle.x509.PKIXAttrCertChecker $r15;
        org.bouncycastle.jce.provider.AnnotatedException $r20;
        java.lang.String $r2, $r3, $r11, $r16;
        java.security.cert.CertPathValidatorException $r7;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r6;
        java.util.Set $r1, $r5;
        java.security.cert.CertPath r13, r14;
        java.lang.IllegalArgumentException $r18;
        org.bouncycastle.jce.exception.ExtCertPathValidatorException $r19, $r21;
        org.bouncycastle.x509.X509AttributeCertificate r0;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.Object $r12;

        r0 := @parameter0: org.bouncycastle.x509.X509AttributeCertificate;

        r13 := @parameter1: java.security.cert.CertPath;

        r14 := @parameter2: java.security.cert.CertPath;

        r4 := @parameter3: org.bouncycastle.x509.ExtendedPKIXParameters;

        $r1 = interfaceinvoke r0.<org.bouncycastle.x509.X509AttributeCertificate: java.util.Set getCriticalExtensionOIDs()>();

        $r2 = <org.bouncycastle.jce.provider.RFC3281CertPathUtilities: java.lang.String TARGET_INFORMATION>;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>($r2);

        if $z0 == 0 goto label5;

     label1:
        $r16 = <org.bouncycastle.jce.provider.RFC3281CertPathUtilities: java.lang.String TARGET_INFORMATION>;

        $r17 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: org.bouncycastle.asn1.DERObject getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r0, $r16);

        staticinvoke <org.bouncycastle.asn1.x509.TargetInformation: org.bouncycastle.asn1.x509.TargetInformation getInstance(java.lang.Object)>($r17);

     label2:
        goto label5;

     label3:
        $r20 := @caughtexception;

        $r21 = new org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r21.<org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Target information extension could not be read.", $r20);

        throw $r21;

     label4:
        $r18 := @caughtexception;

        $r19 = new org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r19.<org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Target information extension could not be read.", $r18);

        throw $r19;

     label5:
        $r3 = <org.bouncycastle.jce.provider.RFC3281CertPathUtilities: java.lang.String TARGET_INFORMATION>;

        interfaceinvoke $r1.<java.util.Set: boolean remove(java.lang.Object)>($r3);

        $r5 = virtualinvoke r4.<org.bouncycastle.x509.ExtendedPKIXParameters: java.util.Set getAttrCertCheckers()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label6:
        $z2 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r12 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r15 = (org.bouncycastle.x509.PKIXAttrCertChecker) $r12;

        virtualinvoke $r15.<org.bouncycastle.x509.PKIXAttrCertChecker: void check(org.bouncycastle.x509.X509AttributeCertificate,java.security.cert.CertPath,java.security.cert.CertPath,java.util.Collection)>(r0, r13, r14, $r1);

        goto label6;

     label7:
        $z1 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();

        if $z1 != 0 goto label8;

        $r7 = new java.security.cert.CertPathValidatorException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attribute certificate contains unsupported critical extensions: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label8:
        return;

        catch org.bouncycastle.jce.provider.AnnotatedException from label1 to label2 with label3;
        catch java.lang.IllegalArgumentException from label1 to label2 with label4;
    }

    protected static void checkCRLs(org.bouncycastle.x509.X509AttributeCertificate, org.bouncycastle.x509.ExtendedPKIXParameters, java.security.cert.X509Certificate, java.util.Date, java.util.List) throws java.security.cert.CertPathValidatorException
    {
        byte[] $r3, $r5, $r8, $r34;
        java.lang.Exception $r49, $r53;
        org.bouncycastle.asn1.x509.GeneralName $r39;
        java.lang.StringBuilder $r15, $r16, $r18, $r20, $r21, $r22, $r25;
        org.bouncycastle.asn1.DERObject $r10, $r35;
        java.lang.String $r2, $r4, $r7, $r9, $r19, $r24, $r26;
        org.bouncycastle.jce.provider.CertStatus $r12;
        org.bouncycastle.asn1.x509.GeneralNames $r38;
        org.bouncycastle.asn1.x509.DistributionPoint[] $r44;
        java.security.cert.X509Certificate r42;
        java.util.Date $r17, r41;
        org.bouncycastle.x509.ExtendedPKIXParameters r0, r60, r61;
        java.security.cert.CertPathValidatorException $r6, $r14, $r27, $r56, $r58;
        boolean $z0, $z1, $z2, $z3, z4;
        java.security.Principal[] $r31;
        org.bouncycastle.jce.provider.ReasonsMask $r13;
        org.bouncycastle.asn1.x509.CRLDistPoint $r11;
        org.bouncycastle.jce.exception.ExtCertPathValidatorException $r28, $r54;
        java.util.List r43;
        java.security.Principal $r32;
        org.bouncycastle.x509.AttributeCertificateIssuer $r30;
        org.bouncycastle.asn1.x509.DistributionPointName $r37;
        javax.security.auth.x500.X500Principal $r33;
        org.bouncycastle.asn1.x509.DistributionPoint $r36, $r46;
        java.lang.String[] $r23;
        org.bouncycastle.asn1.ASN1InputStream $r29;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, $i7;
        org.bouncycastle.jce.provider.AnnotatedException $r47, $r48, $r50, $r51, $r52, $r55, $r57, r59;
        org.bouncycastle.x509.X509AttributeCertificate r1;
        java.lang.Object $r40, $r45;

        r1 := @parameter0: org.bouncycastle.x509.X509AttributeCertificate;

        r0 := @parameter1: org.bouncycastle.x509.ExtendedPKIXParameters;

        r42 := @parameter2: java.security.cert.X509Certificate;

        r41 := @parameter3: java.util.Date;

        r43 := @parameter4: java.util.List;

        $z0 = virtualinvoke r0.<org.bouncycastle.x509.ExtendedPKIXParameters: boolean isRevocationEnabled()>();

        if $z0 == 0 goto label29;

        $r2 = <org.bouncycastle.jce.provider.RFC3281CertPathUtilities: java.lang.String NO_REV_AVAIL>;

        $r3 = interfaceinvoke r1.<org.bouncycastle.x509.X509AttributeCertificate: byte[] getExtensionValue(java.lang.String)>($r2);

        if $r3 != null goto label27;

     label01:
        $r9 = <org.bouncycastle.jce.provider.RFC3281CertPathUtilities: java.lang.String CRL_DISTRIBUTION_POINTS>;

        $r10 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: org.bouncycastle.asn1.DERObject getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r1, $r9);

        $r11 = staticinvoke <org.bouncycastle.asn1.x509.CRLDistPoint: org.bouncycastle.asn1.x509.CRLDistPoint getInstance(java.lang.Object)>($r10);

     label02:
        goto label04;

     label03:
        $r57 := @caughtexception;

        $r58 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r58.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("CRL distribution point extension could not be read.", $r57);

        throw $r58;

     label04:
        staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: void addAdditionalStoresFromCRLDistributionPoint(org.bouncycastle.asn1.x509.CRLDistPoint,org.bouncycastle.x509.ExtendedPKIXParameters)>($r11, r0);

     label05:
        goto label07;

     label06:
        $r55 := @caughtexception;

        $r56 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r56.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("No additional CRL locations could be decoded from CRL distribution point extension.", $r55);

        throw $r56;

     label07:
        $r12 = new org.bouncycastle.jce.provider.CertStatus;

        specialinvoke $r12.<org.bouncycastle.jce.provider.CertStatus: void <init>()>();

        $r13 = new org.bouncycastle.jce.provider.ReasonsMask;

        specialinvoke $r13.<org.bouncycastle.jce.provider.ReasonsMask: void <init>()>();

        r59 = null;

        z4 = 0;

        if $r11 == null goto label15;

     label08:
        $r44 = virtualinvoke $r11.<org.bouncycastle.asn1.x509.CRLDistPoint: org.bouncycastle.asn1.x509.DistributionPoint[] getDistributionPoints()>();

     label09:
        goto label11;

     label10:
        $r53 := @caughtexception;

        $r54 = new org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r54.<org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Distribution points could not be read.", $r53);

        throw $r54;

     label11:
        i5 = 0;

     label12:
        $i3 = lengthof $r44;

        if i5 >= $i3 goto label13;

        $i4 = virtualinvoke $r12.<org.bouncycastle.jce.provider.CertStatus: int getCertStatus()>();

        if $i4 != 11 goto label13;

        $z3 = virtualinvoke $r13.<org.bouncycastle.jce.provider.ReasonsMask: boolean isAllReasons()>();

        if $z3 != 0 goto label13;

        $r45 = virtualinvoke r0.<org.bouncycastle.x509.ExtendedPKIXParameters: java.lang.Object clone()>();

        r60 = (org.bouncycastle.x509.ExtendedPKIXParameters) $r45;

        $r46 = $r44[i5];

        staticinvoke <org.bouncycastle.jce.provider.RFC3281CertPathUtilities: void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.x509.ExtendedPKIXParameters,java.util.Date,java.security.cert.X509Certificate,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List)>($r46, r1, r60, r41, r42, $r12, $r13, r43);

        z4 = 1;

        i5 = i5 + 1;

        goto label12;

     label13:
        goto label15;

     label14:
        $r51 := @caughtexception;

        $r52 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r52.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("No valid CRL for distribution point found.", $r51);

        r59 = $r52;

     label15:
        $i6 = virtualinvoke $r12.<org.bouncycastle.jce.provider.CertStatus: int getCertStatus()>();

        if $i6 != 11 goto label22;

        $z2 = virtualinvoke $r13.<org.bouncycastle.jce.provider.ReasonsMask: boolean isAllReasons()>();

        if $z2 != 0 goto label22;

     label16:
        $r29 = new org.bouncycastle.asn1.ASN1InputStream;

        $r30 = interfaceinvoke r1.<org.bouncycastle.x509.X509AttributeCertificate: org.bouncycastle.x509.AttributeCertificateIssuer getIssuer()>();

        $r31 = virtualinvoke $r30.<org.bouncycastle.x509.AttributeCertificateIssuer: java.security.Principal[] getPrincipals()>();

        $r32 = $r31[0];

        $r33 = (javax.security.auth.x500.X500Principal) $r32;

        $r34 = virtualinvoke $r33.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        specialinvoke $r29.<org.bouncycastle.asn1.ASN1InputStream: void <init>(byte[])>($r34);

        $r35 = virtualinvoke $r29.<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.DERObject readObject()>();

     label17:
        goto label19;

     label18:
        $r49 := @caughtexception;

        $r50 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r50.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Issuer from certificate for CRL could not be reencoded.", $r49);

        throw $r50;

     label19:
        $r36 = new org.bouncycastle.asn1.x509.DistributionPoint;

        $r37 = new org.bouncycastle.asn1.x509.DistributionPointName;

        $r38 = new org.bouncycastle.asn1.x509.GeneralNames;

        $r39 = new org.bouncycastle.asn1.x509.GeneralName;

        specialinvoke $r39.<org.bouncycastle.asn1.x509.GeneralName: void <init>(int,org.bouncycastle.asn1.ASN1Encodable)>(4, $r35);

        specialinvoke $r38.<org.bouncycastle.asn1.x509.GeneralNames: void <init>(org.bouncycastle.asn1.x509.GeneralName)>($r39);

        specialinvoke $r37.<org.bouncycastle.asn1.x509.DistributionPointName: void <init>(int,org.bouncycastle.asn1.ASN1Encodable)>(0, $r38);

        specialinvoke $r36.<org.bouncycastle.asn1.x509.DistributionPoint: void <init>(org.bouncycastle.asn1.x509.DistributionPointName,org.bouncycastle.asn1.x509.ReasonFlags,org.bouncycastle.asn1.x509.GeneralNames)>($r37, null, null);

        $r40 = virtualinvoke r0.<org.bouncycastle.x509.ExtendedPKIXParameters: java.lang.Object clone()>();

        r61 = (org.bouncycastle.x509.ExtendedPKIXParameters) $r40;

        staticinvoke <org.bouncycastle.jce.provider.RFC3281CertPathUtilities: void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.x509.ExtendedPKIXParameters,java.util.Date,java.security.cert.X509Certificate,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List)>($r36, r1, r61, r41, r42, $r12, $r13, r43);

        z4 = 1;

     label20:
        goto label22;

     label21:
        $r47 := @caughtexception;

        $r48 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r48.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("No valid CRL for distribution point found.", $r47);

        r59 = $r48;

     label22:
        if z4 != 0 goto label23;

        $r28 = new org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r28.<org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("No valid CRL found.", r59);

        throw $r28;

     label23:
        $i0 = virtualinvoke $r12.<org.bouncycastle.jce.provider.CertStatus: int getCertStatus()>();

        if $i0 == 11 goto label24;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attribute certificate revocation after ");

        $r17 = virtualinvoke $r12.<org.bouncycastle.jce.provider.CertStatus: java.util.Date getRevocationDate()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", reason: ");

        $r23 = <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String[] crlReasons>;

        $i2 = virtualinvoke $r12.<org.bouncycastle.jce.provider.CertStatus: int getCertStatus()>();

        $r24 = $r23[$i2];

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $r27 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r27.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>($r26);

        throw $r27;

     label24:
        $z1 = virtualinvoke $r13.<org.bouncycastle.jce.provider.ReasonsMask: boolean isAllReasons()>();

        if $z1 != 0 goto label25;

        $i1 = virtualinvoke $r12.<org.bouncycastle.jce.provider.CertStatus: int getCertStatus()>();

        if $i1 != 11 goto label25;

        virtualinvoke $r12.<org.bouncycastle.jce.provider.CertStatus: void setCertStatus(int)>(12);

     label25:
        $i7 = virtualinvoke $r12.<org.bouncycastle.jce.provider.CertStatus: int getCertStatus()>();

        if $i7 != 12 goto label26;

        $r14 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r14.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("Attribute certificate status could not be determined.");

        throw $r14;

     label26:
        goto label29;

     label27:
        $r4 = <org.bouncycastle.jce.provider.RFC3281CertPathUtilities: java.lang.String CRL_DISTRIBUTION_POINTS>;

        $r5 = interfaceinvoke r1.<org.bouncycastle.x509.X509AttributeCertificate: byte[] getExtensionValue(java.lang.String)>($r4);

        if $r5 != null goto label28;

        $r7 = <org.bouncycastle.jce.provider.RFC3281CertPathUtilities: java.lang.String AUTHORITY_INFO_ACCESS>;

        $r8 = interfaceinvoke r1.<org.bouncycastle.x509.X509AttributeCertificate: byte[] getExtensionValue(java.lang.String)>($r7);

        if $r8 == null goto label29;

     label28:
        $r6 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r6.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("No rev avail extension is set, but also an AC revocation pointer.");

        throw $r6;

     label29:
        return;

        catch org.bouncycastle.jce.provider.AnnotatedException from label01 to label02 with label03;
        catch org.bouncycastle.jce.provider.AnnotatedException from label04 to label05 with label06;
        catch java.lang.Exception from label08 to label09 with label10;
        catch org.bouncycastle.jce.provider.AnnotatedException from label11 to label13 with label14;
        catch java.lang.Exception from label16 to label17 with label18;
        catch org.bouncycastle.jce.provider.AnnotatedException from label16 to label20 with label21;
    }

    protected static void additionalChecks(org.bouncycastle.x509.X509AttributeCertificate, org.bouncycastle.x509.ExtendedPKIXParameters) throws java.security.cert.CertPathValidatorException
    {
        org.bouncycastle.x509.ExtendedPKIXParameters r0;
        org.bouncycastle.x509.X509Attribute[] $r7, $r15;
        java.security.cert.CertPathValidatorException $r8, $r16;
        java.lang.String $r13, $r21, r22, r23;
        boolean $z0, $z1;
        java.util.Iterator $r2, $r4;
        java.util.Set $r1, $r3;
        org.bouncycastle.x509.X509AttributeCertificate r6;
        java.lang.Object $r5, $r14;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r17, $r18, $r19, $r20;

        r6 := @parameter0: org.bouncycastle.x509.X509AttributeCertificate;

        r0 := @parameter1: org.bouncycastle.x509.ExtendedPKIXParameters;

        $r1 = virtualinvoke r0.<org.bouncycastle.x509.ExtendedPKIXParameters: java.util.Set getProhibitedACAttributes()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r14 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r22 = (java.lang.String) $r14;

        $r15 = interfaceinvoke r6.<org.bouncycastle.x509.X509AttributeCertificate: org.bouncycastle.x509.X509Attribute[] getAttributes(java.lang.String)>(r22);

        if $r15 == null goto label2;

        $r16 = new java.security.cert.CertPathValidatorException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attribute certificate contains prohibited attribute: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>($r21);

        throw $r16;

     label2:
        goto label1;

     label3:
        $r3 = virtualinvoke r0.<org.bouncycastle.x509.ExtendedPKIXParameters: java.util.Set getNecessaryACAttributes()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r23 = (java.lang.String) $r5;

        $r7 = interfaceinvoke r6.<org.bouncycastle.x509.X509AttributeCertificate: org.bouncycastle.x509.X509Attribute[] getAttributes(java.lang.String)>(r23);

        if $r7 != null goto label5;

        $r8 = new java.security.cert.CertPathValidatorException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attribute certificate does not contain necessary attribute: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label5:
        goto label4;

     label6:
        return;
    }

    protected static void processAttrCert5(org.bouncycastle.x509.X509AttributeCertificate, org.bouncycastle.x509.ExtendedPKIXParameters) throws java.security.cert.CertPathValidatorException
    {
        java.util.Date $r2;
        org.bouncycastle.x509.ExtendedPKIXParameters r1;
        java.security.cert.CertificateNotYetValidException $r3;
        org.bouncycastle.jce.exception.ExtCertPathValidatorException $r4, $r6;
        java.security.cert.CertificateExpiredException $r5;
        org.bouncycastle.x509.X509AttributeCertificate r0;

        r0 := @parameter0: org.bouncycastle.x509.X509AttributeCertificate;

        r1 := @parameter1: org.bouncycastle.x509.ExtendedPKIXParameters;

     label1:
        $r2 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Date getValidDate(java.security.cert.PKIXParameters)>(r1);

        interfaceinvoke r0.<org.bouncycastle.x509.X509AttributeCertificate: void checkValidity(java.util.Date)>($r2);

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        $r6 = new org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r6.<org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Attribute certificate is not valid.", $r5);

        throw $r6;

     label4:
        $r3 := @caughtexception;

        $r4 = new org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r4.<org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Attribute certificate is not valid.", $r3);

        throw $r4;

     label5:
        return;

        catch java.security.cert.CertificateExpiredException from label1 to label2 with label3;
        catch java.security.cert.CertificateNotYetValidException from label1 to label2 with label4;
    }

    protected static void processAttrCert4(java.security.cert.X509Certificate, org.bouncycastle.x509.ExtendedPKIXParameters) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.X509Certificate r6, $r10;
        javax.security.auth.x500.X500Principal $r7;
        java.util.Iterator $r2;
        org.bouncycastle.x509.ExtendedPKIXParameters r0;
        java.util.Set $r1;
        java.lang.Object $r4;
        java.security.cert.CertPathValidatorException $r3;
        java.lang.String $r8, $r9;
        boolean $z0, $z1, $z2, z3;
        java.security.cert.TrustAnchor r5;

        r6 := @parameter0: java.security.cert.X509Certificate;

        r0 := @parameter1: org.bouncycastle.x509.ExtendedPKIXParameters;

        $r1 = virtualinvoke r0.<org.bouncycastle.x509.ExtendedPKIXParameters: java.util.Set getTrustedACIssuers()>();

        z3 = 0;

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.security.cert.TrustAnchor) $r4;

        $r7 = virtualinvoke r6.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        $r8 = virtualinvoke $r7.<javax.security.auth.x500.X500Principal: java.lang.String getName(java.lang.String)>("RFC2253");

        $r9 = virtualinvoke r5.<java.security.cert.TrustAnchor: java.lang.String getCAName()>();

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z1 != 0 goto label2;

        $r10 = virtualinvoke r5.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

        $z2 = virtualinvoke r6.<java.security.cert.X509Certificate: boolean equals(java.lang.Object)>($r10);

        if $z2 == 0 goto label3;

     label2:
        z3 = 1;

     label3:
        goto label1;

     label4:
        if z3 != 0 goto label5;

        $r3 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r3.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("Attribute certificate issuer is not directly trusted.");

        throw $r3;

     label5:
        return;
    }

    protected static void processAttrCert3(java.security.cert.X509Certificate, org.bouncycastle.x509.ExtendedPKIXParameters) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.X509Certificate r0;
        boolean[] $r1, $r3, $r4;
        org.bouncycastle.x509.ExtendedPKIXParameters r6;
        int $i0, $i2;
        java.security.cert.CertPathValidatorException $r7, $r8;
        boolean $z0, $z1;

        r0 := @parameter0: java.security.cert.X509Certificate;

        r6 := @parameter1: org.bouncycastle.x509.ExtendedPKIXParameters;

        $r1 = virtualinvoke r0.<java.security.cert.X509Certificate: boolean[] getKeyUsage()>();

        if $r1 == null goto label1;

        $r3 = virtualinvoke r0.<java.security.cert.X509Certificate: boolean[] getKeyUsage()>();

        $z0 = $r3[0];

        if $z0 != 0 goto label1;

        $r4 = virtualinvoke r0.<java.security.cert.X509Certificate: boolean[] getKeyUsage()>();

        $z1 = $r4[1];

        if $z1 != 0 goto label1;

        $r7 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r7.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("Attribute certificate issuer public key cannot be used to validate digital signatures.");

        throw $r7;

     label1:
        $i0 = virtualinvoke r0.<java.security.cert.X509Certificate: int getBasicConstraints()>();

        $i2 = (int) -1;

        if $i0 == $i2 goto label2;

        $r8 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r8.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("Attribute certificate issuer is also a public key certificate issuer.");

        throw $r8;

     label2:
        return;
    }

    protected static java.security.cert.CertPathValidatorResult processAttrCert2(java.security.cert.CertPath, org.bouncycastle.x509.ExtendedPKIXParameters) throws java.security.cert.CertPathValidatorException
    {
        org.bouncycastle.x509.ExtendedPKIXParameters r2;
        java.security.cert.CertPathValidator $r0;
        java.security.cert.CertPath r1;
        java.lang.RuntimeException $r5;
        java.security.cert.CertPathValidatorResult $r3;
        org.bouncycastle.jce.exception.ExtCertPathValidatorException $r8, $r10, $r12;
        java.security.InvalidAlgorithmParameterException $r4;
        java.security.NoSuchAlgorithmException $r9;
        java.lang.String $r6;
        java.security.cert.CertPathValidatorException $r7;
        java.security.NoSuchProviderException $r11;

        r1 := @parameter0: java.security.cert.CertPath;

        r2 := @parameter1: org.bouncycastle.x509.ExtendedPKIXParameters;

     label1:
        $r0 = staticinvoke <java.security.cert.CertPathValidator: java.security.cert.CertPathValidator getInstance(java.lang.String,java.lang.String)>("PKIX", "BC");

     label2:
        goto label5;

     label3:
        $r11 := @caughtexception;

        $r12 = new org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r12.<org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Support class could not be created.", $r11);

        throw $r12;

     label4:
        $r9 := @caughtexception;

        $r10 = new org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r10.<org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Support class could not be created.", $r9);

        throw $r10;

     label5:
        $r3 = virtualinvoke $r0.<java.security.cert.CertPathValidator: java.security.cert.CertPathValidatorResult validate(java.security.cert.CertPath,java.security.cert.CertPathParameters)>(r1, r2);

     label6:
        return $r3;

     label7:
        $r7 := @caughtexception;

        $r8 = new org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r8.<org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Certification path for issuer certificate of attribute certificate could not be validated.", $r7);

        throw $r8;

     label8:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        $r6 = virtualinvoke $r4.<java.security.InvalidAlgorithmParameterException: java.lang.String getMessage()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r5;

        catch java.security.NoSuchProviderException from label1 to label2 with label3;
        catch java.security.NoSuchAlgorithmException from label1 to label2 with label4;
        catch java.security.cert.CertPathValidatorException from label5 to label6 with label7;
        catch java.security.InvalidAlgorithmParameterException from label5 to label6 with label8;
    }

    protected static java.security.cert.CertPath processAttrCert1(org.bouncycastle.x509.X509AttributeCertificate, org.bouncycastle.x509.ExtendedPKIXParameters) throws java.security.cert.CertPathValidatorException
    {
        byte[] $r25, $r37;
        java.security.cert.CertPathBuilder $r13;
        java.math.BigInteger $r28;
        org.bouncycastle.x509.X509CertStoreSelector $r10, $r15, $r26;
        org.bouncycastle.x509.ExtendedPKIXBuilderParameters $r18;
        java.security.cert.CertPathBuilderResult r55;
        java.security.NoSuchAlgorithmException $r43;
        java.security.InvalidAlgorithmParameterException $r38;
        java.security.cert.CertPathBuilderException $r41;
        java.lang.String $r40;
        java.io.IOException $r47, $r51;
        java.lang.RuntimeException $r39;
        java.security.cert.X509Certificate $r12;
        org.bouncycastle.x509.ExtendedPKIXParameters r6, $r7, $r14;
        java.security.cert.CertPathValidatorException $r19, $r31;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.security.Principal[] $r3, $r5, $r17, $r30;
        java.util.Collection $r22, $r34;
        org.bouncycastle.jce.exception.ExtCertPathValidatorException $r42, $r44, $r46, $r48, $r50, $r52, $r54, r56;
        java.util.List $r21, $r33;
        java.security.Principal $r20, $r23, $r32, $r35;
        org.bouncycastle.x509.AttributeCertificateHolder $r2, $r4, $r16, $r27, $r29;
        javax.security.auth.x500.X500Principal $r24, $r36;
        java.util.HashSet $r0;
        int $i0, $i1, i2, i3;
        org.bouncycastle.jce.provider.AnnotatedException $r49, $r53;
        java.util.Iterator $r8;
        java.security.cert.CertPath $r9;
        org.bouncycastle.x509.X509AttributeCertificate r1;
        java.lang.Object $r11;
        java.security.NoSuchProviderException $r45;

        r1 := @parameter0: org.bouncycastle.x509.X509AttributeCertificate;

        r6 := @parameter1: org.bouncycastle.x509.ExtendedPKIXParameters;

        r55 = null;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r2 = interfaceinvoke r1.<org.bouncycastle.x509.X509AttributeCertificate: org.bouncycastle.x509.AttributeCertificateHolder getHolder()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.x509.AttributeCertificateHolder: java.security.Principal[] getIssuer()>();

        if $r3 == null goto label09;

        $r26 = new org.bouncycastle.x509.X509CertStoreSelector;

        specialinvoke $r26.<org.bouncycastle.x509.X509CertStoreSelector: void <init>()>();

        $r27 = interfaceinvoke r1.<org.bouncycastle.x509.X509AttributeCertificate: org.bouncycastle.x509.AttributeCertificateHolder getHolder()>();

        $r28 = virtualinvoke $r27.<org.bouncycastle.x509.AttributeCertificateHolder: java.math.BigInteger getSerialNumber()>();

        virtualinvoke $r26.<org.bouncycastle.x509.X509CertStoreSelector: void setSerialNumber(java.math.BigInteger)>($r28);

        $r29 = interfaceinvoke r1.<org.bouncycastle.x509.X509AttributeCertificate: org.bouncycastle.x509.AttributeCertificateHolder getHolder()>();

        $r30 = virtualinvoke $r29.<org.bouncycastle.x509.AttributeCertificateHolder: java.security.Principal[] getIssuer()>();

        i2 = 0;

     label01:
        $i1 = lengthof $r30;

        if i2 >= $i1 goto label08;

     label02:
        $r32 = $r30[i2];

        $z3 = $r32 instanceof javax.security.auth.x500.X500Principal;

        if $z3 == 0 goto label03;

        $r35 = $r30[i2];

        $r36 = (javax.security.auth.x500.X500Principal) $r35;

        $r37 = virtualinvoke $r36.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        virtualinvoke $r26.<org.bouncycastle.x509.X509CertStoreSelector: void setIssuer(byte[])>($r37);

     label03:
        $r33 = virtualinvoke r6.<org.bouncycastle.x509.ExtendedPKIXParameters: java.util.List getStores()>();

        $r34 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findCertificates(org.bouncycastle.x509.X509CertStoreSelector,java.util.List)>($r26, $r33);

        interfaceinvoke $r0.<java.util.Set: boolean addAll(java.util.Collection)>($r34);

     label04:
        goto label07;

     label05:
        $r53 := @caughtexception;

        $r54 = new org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r54.<org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Public key certificate for attribute certificate cannot be searched.", $r53);

        throw $r54;

     label06:
        $r51 := @caughtexception;

        $r52 = new org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r52.<org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to encode X500 principal.", $r51);

        throw $r52;

     label07:
        i2 = i2 + 1;

        goto label01;

     label08:
        $z2 = interfaceinvoke $r0.<java.util.Set: boolean isEmpty()>();

        if $z2 == 0 goto label09;

        $r31 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r31.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("Public key certificate specified in base certificate ID for attribute certificate cannot be found.");

        throw $r31;

     label09:
        $r4 = interfaceinvoke r1.<org.bouncycastle.x509.X509AttributeCertificate: org.bouncycastle.x509.AttributeCertificateHolder getHolder()>();

        $r5 = virtualinvoke $r4.<org.bouncycastle.x509.AttributeCertificateHolder: java.security.Principal[] getEntityNames()>();

        if $r5 == null goto label18;

        $r15 = new org.bouncycastle.x509.X509CertStoreSelector;

        specialinvoke $r15.<org.bouncycastle.x509.X509CertStoreSelector: void <init>()>();

        $r16 = interfaceinvoke r1.<org.bouncycastle.x509.X509AttributeCertificate: org.bouncycastle.x509.AttributeCertificateHolder getHolder()>();

        $r17 = virtualinvoke $r16.<org.bouncycastle.x509.AttributeCertificateHolder: java.security.Principal[] getEntityNames()>();

        i3 = 0;

     label10:
        $i0 = lengthof $r17;

        if i3 >= $i0 goto label17;

     label11:
        $r20 = $r17[i3];

        $z1 = $r20 instanceof javax.security.auth.x500.X500Principal;

        if $z1 == 0 goto label12;

        $r23 = $r17[i3];

        $r24 = (javax.security.auth.x500.X500Principal) $r23;

        $r25 = virtualinvoke $r24.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        virtualinvoke $r15.<org.bouncycastle.x509.X509CertStoreSelector: void setIssuer(byte[])>($r25);

     label12:
        $r21 = virtualinvoke r6.<org.bouncycastle.x509.ExtendedPKIXParameters: java.util.List getStores()>();

        $r22 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findCertificates(org.bouncycastle.x509.X509CertStoreSelector,java.util.List)>($r15, $r21);

        interfaceinvoke $r0.<java.util.Set: boolean addAll(java.util.Collection)>($r22);

     label13:
        goto label16;

     label14:
        $r49 := @caughtexception;

        $r50 = new org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r50.<org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Public key certificate for attribute certificate cannot be searched.", $r49);

        throw $r50;

     label15:
        $r47 := @caughtexception;

        $r48 = new org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r48.<org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to encode X500 principal.", $r47);

        throw $r48;

     label16:
        i3 = i3 + 1;

        goto label10;

     label17:
        $z0 = interfaceinvoke $r0.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label18;

        $r19 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r19.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("Public key certificate specified in entity name for attribute certificate cannot be found.");

        throw $r19;

     label18:
        $r7 = staticinvoke <org.bouncycastle.x509.ExtendedPKIXBuilderParameters: org.bouncycastle.x509.ExtendedPKIXParameters getInstance(java.security.cert.PKIXParameters)>(r6);

        $r18 = (org.bouncycastle.x509.ExtendedPKIXBuilderParameters) $r7;

        r56 = null;

        $r8 = interfaceinvoke $r0.<java.util.Set: java.util.Iterator iterator()>();

     label19:
        $z4 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label29;

        $r10 = new org.bouncycastle.x509.X509CertStoreSelector;

        specialinvoke $r10.<org.bouncycastle.x509.X509CertStoreSelector: void <init>()>();

        $r11 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (java.security.cert.X509Certificate) $r11;

        virtualinvoke $r10.<org.bouncycastle.x509.X509CertStoreSelector: void setCertificate(java.security.cert.X509Certificate)>($r12);

        virtualinvoke $r18.<org.bouncycastle.x509.ExtendedPKIXBuilderParameters: void setTargetConstraints(org.bouncycastle.util.Selector)>($r10);

     label20:
        $r13 = staticinvoke <java.security.cert.CertPathBuilder: java.security.cert.CertPathBuilder getInstance(java.lang.String,java.lang.String)>("PKIX", "BC");

     label21:
        goto label24;

     label22:
        $r45 := @caughtexception;

        $r46 = new org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r46.<org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Support class could not be created.", $r45);

        throw $r46;

     label23:
        $r43 := @caughtexception;

        $r44 = new org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r44.<org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Support class could not be created.", $r43);

        throw $r44;

     label24:
        $r14 = staticinvoke <org.bouncycastle.x509.ExtendedPKIXBuilderParameters: org.bouncycastle.x509.ExtendedPKIXParameters getInstance(java.security.cert.PKIXParameters)>($r18);

        r55 = virtualinvoke $r13.<java.security.cert.CertPathBuilder: java.security.cert.CertPathBuilderResult build(java.security.cert.CertPathParameters)>($r14);

     label25:
        goto label28;

     label26:
        $r41 := @caughtexception;

        $r42 = new org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r42.<org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Certification path for public key certificate of attribute certificate could not be build.", $r41);

        r56 = $r42;

        goto label28;

     label27:
        $r38 := @caughtexception;

        $r39 = new java.lang.RuntimeException;

        $r40 = virtualinvoke $r38.<java.security.InvalidAlgorithmParameterException: java.lang.String getMessage()>();

        specialinvoke $r39.<java.lang.RuntimeException: void <init>(java.lang.String)>($r40);

        throw $r39;

     label28:
        goto label19;

     label29:
        if r56 == null goto label30;

        throw r56;

     label30:
        $r9 = interfaceinvoke r55.<java.security.cert.CertPathBuilderResult: java.security.cert.CertPath getCertPath()>();

        return $r9;

        catch org.bouncycastle.jce.provider.AnnotatedException from label02 to label04 with label05;
        catch java.io.IOException from label02 to label04 with label06;
        catch org.bouncycastle.jce.provider.AnnotatedException from label11 to label13 with label14;
        catch java.io.IOException from label11 to label13 with label15;
        catch java.security.NoSuchProviderException from label20 to label21 with label22;
        catch java.security.NoSuchAlgorithmException from label20 to label21 with label23;
        catch java.security.cert.CertPathBuilderException from label24 to label25 with label26;
        catch java.security.InvalidAlgorithmParameterException from label24 to label25 with label27;
    }

    private static void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint, org.bouncycastle.x509.X509AttributeCertificate, org.bouncycastle.x509.ExtendedPKIXParameters, java.util.Date, java.security.cert.X509Certificate, org.bouncycastle.jce.provider.CertStatus, org.bouncycastle.jce.provider.ReasonsMask, java.util.List) throws org.bouncycastle.jce.provider.AnnotatedException
    {
        java.security.cert.X509Certificate r23;
        byte[] $r3;
        java.util.Date r5, $r17, $r18, $r27;
        org.bouncycastle.x509.ExtendedPKIXParameters r7;
        java.security.cert.X509CRL r25, r26;
        byte $b3, $b9;
        org.bouncycastle.asn1.DERObjectIdentifier $r1;
        boolean $z0, $z1, $z2, z3, $z4;
        org.bouncycastle.jce.provider.ReasonsMask r11, $r13;
        java.util.Set $r8, $r15, $r20;
        java.util.List r14;
        org.bouncycastle.asn1.x509.DistributionPoint r6;
        long $l0, $l1, $l2, $l7, $l8;
        int $i4, $i5, $i6, $i10, $i11;
        org.bouncycastle.jce.provider.AnnotatedException $r22, r24, $r28, $r29;
        java.lang.String $r2;
        java.util.Iterator $r9;
        java.security.PublicKey $r16;
        org.bouncycastle.x509.X509AttributeCertificate r0;
        org.bouncycastle.jce.provider.CertStatus r10;
        java.lang.Object $r12;

        r6 := @parameter0: org.bouncycastle.asn1.x509.DistributionPoint;

        r0 := @parameter1: org.bouncycastle.x509.X509AttributeCertificate;

        r7 := @parameter2: org.bouncycastle.x509.ExtendedPKIXParameters;

        r5 := @parameter3: java.util.Date;

        r23 := @parameter4: java.security.cert.X509Certificate;

        r10 := @parameter5: org.bouncycastle.jce.provider.CertStatus;

        r11 := @parameter6: org.bouncycastle.jce.provider.ReasonsMask;

        r14 := @parameter7: java.util.List;

        $r1 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier NoRevAvail>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $r3 = interfaceinvoke r0.<org.bouncycastle.x509.X509AttributeCertificate: byte[] getExtensionValue(java.lang.String)>($r2);

        if $r3 == null goto label01;

        return;

     label01:
        $r27 = new java.util.Date;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke $r27.<java.util.Date: void <init>(long)>($l0);

        $l1 = virtualinvoke r5.<java.util.Date: long getTime()>();

        $l2 = virtualinvoke $r27.<java.util.Date: long getTime()>();

        $b3 = $l1 cmp $l2;

        $i10 = (int) $b3;

        if $i10 <= 0 goto label02;

        $r28 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r28.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("Validation time is in future.");

        throw $r28;

     label02:
        $r8 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Set getCompleteCRLs(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.util.Date,org.bouncycastle.x509.ExtendedPKIXParameters)>(r6, r0, $r27, r7);

        z3 = 0;

        r24 = null;

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z4 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label12;

        $i4 = virtualinvoke r10.<org.bouncycastle.jce.provider.CertStatus: int getCertStatus()>();

        if $i4 != 11 goto label12;

        $z0 = virtualinvoke r11.<org.bouncycastle.jce.provider.ReasonsMask: boolean isAllReasons()>();

        if $z0 != 0 goto label12;

     label04:
        $r12 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r25 = (java.security.cert.X509CRL) $r12;

        $r13 = staticinvoke <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: org.bouncycastle.jce.provider.ReasonsMask processCRLD(java.security.cert.X509CRL,org.bouncycastle.asn1.x509.DistributionPoint)>(r25, r6);

        $z1 = virtualinvoke $r13.<org.bouncycastle.jce.provider.ReasonsMask: boolean hasNewReasons(org.bouncycastle.jce.provider.ReasonsMask)>(r11);

        if $z1 != 0 goto label06;

     label05:
        goto label03;

     label06:
        $r15 = staticinvoke <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.util.Set processCRLF(java.security.cert.X509CRL,java.lang.Object,java.security.cert.X509Certificate,java.security.PublicKey,org.bouncycastle.x509.ExtendedPKIXParameters,java.util.List)>(r25, r0, null, null, r7, r14);

        $r16 = staticinvoke <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.security.PublicKey processCRLG(java.security.cert.X509CRL,java.util.Set)>(r25, $r15);

        r26 = null;

        $z2 = virtualinvoke r7.<org.bouncycastle.x509.ExtendedPKIXParameters: boolean isUseDeltasEnabled()>();

        if $z2 == 0 goto label07;

        $r20 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Set getDeltaCRLs(java.util.Date,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509CRL)>($r27, r7, r25);

        r26 = staticinvoke <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.security.cert.X509CRL processCRLH(java.util.Set,java.security.PublicKey)>($r20, $r16);

     label07:
        $i5 = virtualinvoke r7.<org.bouncycastle.x509.ExtendedPKIXParameters: int getValidityModel()>();

        if $i5 == 1 goto label08;

        $r17 = interfaceinvoke r0.<org.bouncycastle.x509.X509AttributeCertificate: java.util.Date getNotAfter()>();

        $l7 = virtualinvoke $r17.<java.util.Date: long getTime()>();

        $r18 = virtualinvoke r25.<java.security.cert.X509CRL: java.util.Date getThisUpdate()>();

        $l8 = virtualinvoke $r18.<java.util.Date: long getTime()>();

        $b9 = $l7 cmp $l8;

        $i11 = (int) $b9;

        if $i11 >= 0 goto label08;

        $r29 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r29.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("No valid CRL for current time found.");

        throw $r29;

     label08:
        staticinvoke <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)>(r6, r0, r25);

        staticinvoke <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)>(r6, r0, r25);

        staticinvoke <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: void processCRLC(java.security.cert.X509CRL,java.security.cert.X509CRL,org.bouncycastle.x509.ExtendedPKIXParameters)>(r26, r25, r7);

        staticinvoke <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: void processCRLI(java.util.Date,java.security.cert.X509CRL,java.lang.Object,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.x509.ExtendedPKIXParameters)>(r5, r26, r0, r10, r7);

        staticinvoke <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: void processCRLJ(java.util.Date,java.security.cert.X509CRL,java.lang.Object,org.bouncycastle.jce.provider.CertStatus)>(r5, r25, r0, r10);

        $i6 = virtualinvoke r10.<org.bouncycastle.jce.provider.CertStatus: int getCertStatus()>();

        if $i6 != 8 goto label09;

        virtualinvoke r10.<org.bouncycastle.jce.provider.CertStatus: void setCertStatus(int)>(11);

     label09:
        virtualinvoke r11.<org.bouncycastle.jce.provider.ReasonsMask: void addReasons(org.bouncycastle.jce.provider.ReasonsMask)>($r13);

        z3 = 1;

     label10:
        goto label03;

     label11:
        $r22 := @caughtexception;

        r24 = $r22;

        goto label03;

     label12:
        if z3 != 0 goto label13;

        throw r24;

     label13:
        return;

        catch org.bouncycastle.jce.provider.AnnotatedException from label04 to label05 with label11;
        catch org.bouncycastle.jce.provider.AnnotatedException from label06 to label10 with label11;
    }

    static void <clinit>()
    {
        java.lang.String $r1, $r3, $r5, $r7;
        org.bouncycastle.asn1.DERObjectIdentifier $r0, $r2, $r4, $r6;

        $r0 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier TargetInformation>;

        $r1 = virtualinvoke $r0.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.RFC3281CertPathUtilities: java.lang.String TARGET_INFORMATION> = $r1;

        $r2 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier NoRevAvail>;

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.RFC3281CertPathUtilities: java.lang.String NO_REV_AVAIL> = $r3;

        $r4 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier CRLDistributionPoints>;

        $r5 = virtualinvoke $r4.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.RFC3281CertPathUtilities: java.lang.String CRL_DISTRIBUTION_POINTS> = $r5;

        $r6 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier AuthorityInfoAccess>;

        $r7 = virtualinvoke $r6.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.RFC3281CertPathUtilities: java.lang.String AUTHORITY_INFO_ACCESS> = $r7;

        return;
    }
}
