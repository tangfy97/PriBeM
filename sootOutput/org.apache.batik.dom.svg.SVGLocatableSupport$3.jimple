class org.apache.batik.dom.svg.SVGLocatableSupport$3 extends org.apache.batik.dom.svg.AbstractSVGMatrix
{
    private final org.apache.batik.dom.svg.SVGOMElement val$svgelt;

    void <init>(org.apache.batik.dom.svg.SVGOMElement)
    {
        org.apache.batik.dom.svg.SVGLocatableSupport$3 r0;
        org.apache.batik.dom.svg.SVGOMElement r1;

        r0 := @this: org.apache.batik.dom.svg.SVGLocatableSupport$3;

        r1 := @parameter0: org.apache.batik.dom.svg.SVGOMElement;

        specialinvoke r0.<org.apache.batik.dom.svg.AbstractSVGMatrix: void <init>()>();

        r0.<org.apache.batik.dom.svg.SVGLocatableSupport$3: org.apache.batik.dom.svg.SVGOMElement val$svgelt> = r1;

        return;
    }

    protected java.awt.geom.AffineTransform getAffineTransform()
    {
        org.apache.batik.dom.svg.SVGContext $r2;
        org.apache.batik.dom.svg.SVGLocatableSupport$3 r0;
        java.awt.geom.AffineTransform $r3, $r4;
        org.apache.batik.dom.svg.SVGOMElement $r1;

        r0 := @this: org.apache.batik.dom.svg.SVGLocatableSupport$3;

        $r1 = r0.<org.apache.batik.dom.svg.SVGLocatableSupport$3: org.apache.batik.dom.svg.SVGOMElement val$svgelt>;

        $r2 = virtualinvoke $r1.<org.apache.batik.dom.svg.SVGOMElement: org.apache.batik.dom.svg.SVGContext getSVGContext()>();

        $r3 = interfaceinvoke $r2.<org.apache.batik.dom.svg.SVGContext: java.awt.geom.AffineTransform getGlobalTransform()>();

        $r4 = interfaceinvoke $r2.<org.apache.batik.dom.svg.SVGContext: java.awt.geom.AffineTransform getScreenTransform()>();

        if $r4 == null goto label1;

        virtualinvoke $r3.<java.awt.geom.AffineTransform: void preConcatenate(java.awt.geom.AffineTransform)>($r4);

     label1:
        return $r3;
    }
}
