public class com.hp.hpl.jena.util.URIref extends java.lang.Object
{

    public void <init>()
    {
        com.hp.hpl.jena.util.URIref r0;

        r0 := @this: com.hp.hpl.jena.util.URIref;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String encode(java.lang.String)
    {
        byte[] $r1, r2;
        byte $b3, $b4, $b5, $b9, $b11, $b13, $b15, $b21, $b25, $b27;
        java.lang.StringBuilder $r9, $r10, $r12;
        java.io.UnsupportedEncodingException $r4;
        java.lang.Error $r14;
        short $s22, $s30;
        int $i0, $i1, $i2, $i6, $i7, $i8, $i10, $i12, $i14, i16, i17, i18, i19, i20, i23, $i24, $i26, $i28, $i29, $i31, $i32;
        java.lang.String r0, $r11, $r13;
        java.io.PrintStream $r8;
        java.lang.IllegalArgumentException $r6;

        r0 := @parameter0: java.lang.String;

     label01:
        $r1 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $i0 = lengthof $r1;

        $i1 = $i0 * 6;

        r2 = newarray (byte)[$i1];

        i16 = 0;

        i17 = 0;

     label02:
        $i2 = lengthof $r1;

        if i16 >= $i2 goto label11;

        $b3 = $r1[i16];

        $i28 = (int) $b3;

        tableswitch($i28)
        {
            case 33: goto label03;
            case 34: goto label04;
            case 35: goto label03;
            case 36: goto label03;
            case 37: goto label04;
            case 38: goto label03;
            case 39: goto label03;
            case 40: goto label03;
            case 41: goto label03;
            case 42: goto label03;
            case 43: goto label03;
            case 44: goto label03;
            case 45: goto label03;
            case 46: goto label03;
            case 47: goto label03;
            case 48: goto label03;
            case 49: goto label03;
            case 50: goto label03;
            case 51: goto label03;
            case 52: goto label03;
            case 53: goto label03;
            case 54: goto label03;
            case 55: goto label03;
            case 56: goto label03;
            case 57: goto label03;
            case 58: goto label03;
            case 59: goto label03;
            case 60: goto label04;
            case 61: goto label03;
            case 62: goto label04;
            case 63: goto label03;
            case 64: goto label03;
            case 65: goto label03;
            case 66: goto label03;
            case 67: goto label03;
            case 68: goto label03;
            case 69: goto label03;
            case 70: goto label03;
            case 71: goto label03;
            case 72: goto label03;
            case 73: goto label03;
            case 74: goto label03;
            case 75: goto label03;
            case 76: goto label03;
            case 77: goto label03;
            case 78: goto label03;
            case 79: goto label03;
            case 80: goto label03;
            case 81: goto label03;
            case 82: goto label03;
            case 83: goto label03;
            case 84: goto label03;
            case 85: goto label03;
            case 86: goto label03;
            case 87: goto label03;
            case 88: goto label03;
            case 89: goto label03;
            case 90: goto label03;
            case 91: goto label03;
            case 92: goto label04;
            case 93: goto label03;
            case 94: goto label04;
            case 95: goto label03;
            case 96: goto label04;
            case 97: goto label03;
            case 98: goto label03;
            case 99: goto label03;
            case 100: goto label03;
            case 101: goto label03;
            case 102: goto label03;
            case 103: goto label03;
            case 104: goto label03;
            case 105: goto label03;
            case 106: goto label03;
            case 107: goto label03;
            case 108: goto label03;
            case 109: goto label03;
            case 110: goto label03;
            case 111: goto label03;
            case 112: goto label03;
            case 113: goto label03;
            case 114: goto label03;
            case 115: goto label03;
            case 116: goto label03;
            case 117: goto label03;
            case 118: goto label03;
            case 119: goto label03;
            case 120: goto label03;
            case 121: goto label03;
            case 122: goto label03;
            case 123: goto label04;
            case 124: goto label04;
            case 125: goto label04;
            case 126: goto label03;
            default: goto label04;
        };

     label03:
        $b4 = $r1[i16];

        r2[i17] = $b4;

        i17 = i17 + 1;

        i16 = i16 + 1;

        goto label10;

     label04:
        $b5 = $r1[i16];

        $i29 = (int) $b5;

        if $i29 != 37 goto label09;

     label05:
        $i7 = i16 + 2;

        $i6 = lengthof $r1;

        if $i7 >= $i6 goto label07;

        $i8 = i16 + 1;

        $b9 = $r1[$i8];

        $i10 = staticinvoke <com.hp.hpl.jena.util.URIref: int hexDecode(byte)>($b9);

        $b11 = staticinvoke <com.hp.hpl.jena.util.URIref: byte hexEncode(int)>($i10);

        $i12 = i16 + 2;

        $b13 = $r1[$i12];

        $i14 = staticinvoke <com.hp.hpl.jena.util.URIref: int hexDecode(byte)>($b13);

        $b15 = staticinvoke <com.hp.hpl.jena.util.URIref: byte hexEncode(int)>($i14);

        i18 = i17 + 1;

        r2[i17] = 37;

        i19 = i18 + 1;

        r2[i18] = $b11;

        i17 = i19 + 1;

        r2[i19] = $b15;

        i16 = i16 + 3;

     label06:
        goto label10;

     label07:
        goto label09;

     label08:
        $r6 := @caughtexception;

        $r8 = <java.lang.System: java.io.PrintStream err>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Confusing IRI to encode - contains literal \'%\': ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r11);

     label09:
        i20 = i17 + 1;

        r2[i17] = 37;

        $b21 = $r1[i16];

        $s30 = (short) $b21;

        $s22 = $s30 & 255;

        i23 = i20 + 1;

        $i31 = (int) $s22;

        $i24 = $i31 / 16;

        $b25 = staticinvoke <com.hp.hpl.jena.util.URIref: byte hexEncode(int)>($i24);

        r2[i20] = $b25;

        i17 = i23 + 1;

        $i32 = (int) $s22;

        $i26 = $i32 % 16;

        $b27 = staticinvoke <com.hp.hpl.jena.util.URIref: byte hexEncode(int)>($i26);

        r2[i23] = $b27;

        i16 = i16 + 1;

     label10:
        goto label02;

     label11:
        $r13 = new java.lang.String;

        specialinvoke $r13.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r2, 0, i17, "US-ASCII");

     label12:
        return $r13;

     label13:
        $r4 := @caughtexception;

        $r14 = new java.lang.Error;

        specialinvoke $r14.<java.lang.Error: void <init>(java.lang.String)>("The JVM is required to support UTF-8 and US-ASCII encodings.");

        throw $r14;

        catch java.lang.IllegalArgumentException from label05 to label06 with label08;
        catch java.io.UnsupportedEncodingException from label01 to label12 with label13;
    }

    public static java.lang.String decode(java.lang.String)
    {
        byte[] $r1, r2;
        byte $b1, $b4, $b6, $b8, $b11, $b15, $b17;
        java.lang.StringBuilder $r7, $r8, $r14;
        java.io.UnsupportedEncodingException $r10;
        java.lang.Error $r13;
        int $i0, $i2, $i3, $i5, $i7, $i9, $i10, $i12, $i13, $i14, $i16, i18, i19, $i20, i21, $i22, $i23, $i24;
        java.lang.String r0, $r9, $r12;
        java.lang.ArrayIndexOutOfBoundsException $r4;
        java.lang.IllegalArgumentException $r15;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>("US-ASCII");

        $i0 = lengthof $r1;

        r2 = newarray (byte)[$i0];

        i18 = 0;

        i19 = 0;

     label2:
        $i20 = lengthof $r1;

        if i18 >= $i20 goto label5;

        $b1 = $r1[i18];

        $i22 = (int) $b1;

        if $i22 != 37 goto label4;

        $i5 = i18 + 1;

        $b6 = $r1[$i5];

        $i23 = (int) $b6;

        if $i23 != 50 goto label3;

        $i16 = i18 + 2;

        $b17 = $r1[$i16];

        $i24 = (int) $b17;

        if $i24 == 53 goto label4;

     label3:
        i21 = i18 + 1;

        $i7 = i19;

        i19 = i19 + 1;

        $b8 = $r1[i21];

        $i9 = staticinvoke <com.hp.hpl.jena.util.URIref: int hexDecode(byte)>($b8);

        $i12 = $i9 * 16;

        $i10 = i21 + 1;

        $b11 = $r1[$i10];

        $i13 = staticinvoke <com.hp.hpl.jena.util.URIref: int hexDecode(byte)>($b11);

        $i14 = $i12 | $i13;

        $b15 = (byte) $i14;

        r2[$i7] = $b15;

        i18 = i21 + 2;

        goto label2;

     label4:
        $i2 = i19;

        i19 = i19 + 1;

        $i3 = i18;

        i18 = i18 + 1;

        $b4 = $r1[$i3];

        r2[$i2] = $b4;

        goto label2;

     label5:
        $r12 = new java.lang.String;

        specialinvoke $r12.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r2, 0, i19, "UTF-8");

     label6:
        return $r12;

     label7:
        $r10 := @caughtexception;

        $r13 = new java.lang.Error;

        specialinvoke $r13.<java.lang.Error: void <init>(java.lang.String)>("The JVM is required to support UTF-8 and US-ASCII encodings.");

        throw $r13;

     label8:
        $r4 := @caughtexception;

        $r15 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incomplete Hex escape sequence in ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r15;

        catch java.io.UnsupportedEncodingException from label1 to label6 with label7;
        catch java.lang.ArrayIndexOutOfBoundsException from label1 to label6 with label8;
    }

    private static byte hexEncode(int)
    {
        byte $b3, $b5;
        int i0, $i1, $i2, $i4;

        i0 := @parameter0: int;

        if i0 >= 10 goto label1;

        $i4 = 48 + i0;

        $b5 = (byte) $i4;

        return $b5;

     label1:
        $i1 = 65 + i0;

        $i2 = $i1 - 10;

        $b3 = (byte) $i2;

        return $b3;
    }

    private static int hexDecode(byte)
    {
        short $s1, $s7, $s9, $s13;
        byte b0;
        int $i2, $i3, $i4, $i5, $i6, $i8, $i10, $i11, $i12, $i14;
        java.lang.String $r4;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r2, $r3, $r5;

        b0 := @parameter0: byte;

        $i8 = (int) b0;

        tableswitch($i8)
        {
            case 48: goto label3;
            case 49: goto label3;
            case 50: goto label3;
            case 51: goto label3;
            case 52: goto label3;
            case 53: goto label3;
            case 54: goto label3;
            case 55: goto label3;
            case 56: goto label3;
            case 57: goto label3;
            case 58: goto label4;
            case 59: goto label4;
            case 60: goto label4;
            case 61: goto label4;
            case 62: goto label4;
            case 63: goto label4;
            case 64: goto label4;
            case 65: goto label2;
            case 66: goto label2;
            case 67: goto label2;
            case 68: goto label2;
            case 69: goto label2;
            case 70: goto label2;
            case 71: goto label4;
            case 72: goto label4;
            case 73: goto label4;
            case 74: goto label4;
            case 75: goto label4;
            case 76: goto label4;
            case 77: goto label4;
            case 78: goto label4;
            case 79: goto label4;
            case 80: goto label4;
            case 81: goto label4;
            case 82: goto label4;
            case 83: goto label4;
            case 84: goto label4;
            case 85: goto label4;
            case 86: goto label4;
            case 87: goto label4;
            case 88: goto label4;
            case 89: goto label4;
            case 90: goto label4;
            case 91: goto label4;
            case 92: goto label4;
            case 93: goto label4;
            case 94: goto label4;
            case 95: goto label4;
            case 96: goto label4;
            case 97: goto label1;
            case 98: goto label1;
            case 99: goto label1;
            case 100: goto label1;
            case 101: goto label1;
            case 102: goto label1;
            default: goto label4;
        };

     label1:
        $s9 = (short) b0;

        $s1 = $s9 & 255;

        $i10 = (int) $s1;

        $i2 = $i10 - 97;

        $i3 = $i2 + 10;

        return $i3;

     label2:
        $i11 = (int) b0;

        $i4 = $i11 - 65;

        $i5 = $i4 + 10;

        return $i5;

     label3:
        $i12 = (int) b0;

        $i6 = $i12 - 48;

        return $i6;

     label4:
        $r6 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad Hex escape character: ");

        $s13 = (short) b0;

        $s7 = $s13 & 255;

        $i14 = (int) $s7;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r6;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        int $i0, i1;
        java.lang.String $r3, $r6, $r7, $r10, $r11, $r12, $r14;
        java.io.PrintStream $r2;
        java.lang.StringBuilder $r1, $r4, $r5, $r8, $r9, $r13;

        r0 := @parameter0: java.lang.String[];

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label2;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0[i1];

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" => ");

        $r6 = r0[i1];

        $r7 = staticinvoke <com.hp.hpl.jena.util.URIref: java.lang.String decode(java.lang.String)>($r6);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" => ");

        $r10 = r0[i1];

        $r11 = staticinvoke <com.hp.hpl.jena.util.URIref: java.lang.String decode(java.lang.String)>($r10);

        $r12 = staticinvoke <com.hp.hpl.jena.util.URIref: java.lang.String encode(java.lang.String)>($r11);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r14);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
}
