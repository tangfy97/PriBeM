public class org.apache.http.impl.io.SocketOutputBuffer extends org.apache.http.impl.io.AbstractSessionOutputBuffer
{

    public void <init>(java.net.Socket, int, org.apache.http.params.HttpParams) throws java.io.IOException
    {
        java.io.OutputStream $r2;
        org.apache.http.impl.io.SocketOutputBuffer r0;
        java.net.Socket r1;
        org.apache.http.params.HttpParams r3;
        int i0;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: org.apache.http.impl.io.SocketOutputBuffer;

        r1 := @parameter0: java.net.Socket;

        i0 := @parameter1: int;

        r3 := @parameter2: org.apache.http.params.HttpParams;

        specialinvoke r0.<org.apache.http.impl.io.AbstractSessionOutputBuffer: void <init>()>();

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Socket may not be null");

        throw $r4;

     label1:
        if i0 >= 0 goto label2;

        i0 = virtualinvoke r1.<java.net.Socket: int getSendBufferSize()>();

     label2:
        if i0 >= 1024 goto label3;

        i0 = 1024;

     label3:
        $r2 = virtualinvoke r1.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        virtualinvoke r0.<org.apache.http.impl.io.SocketOutputBuffer: void init(java.io.OutputStream,int,org.apache.http.params.HttpParams)>($r2, i0, r3);

        return;
    }
}
