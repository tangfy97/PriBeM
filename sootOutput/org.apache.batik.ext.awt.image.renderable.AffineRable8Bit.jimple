public class org.apache.batik.ext.awt.image.renderable.AffineRable8Bit extends org.apache.batik.ext.awt.image.renderable.AbstractRable implements org.apache.batik.ext.awt.image.renderable.AffineRable, org.apache.batik.ext.awt.image.renderable.PaintRable
{
    java.awt.geom.AffineTransform affine;
    java.awt.geom.AffineTransform invAffine;

    public void <init>(org.apache.batik.ext.awt.image.renderable.Filter, java.awt.geom.AffineTransform)
    {
        org.apache.batik.ext.awt.image.renderable.AffineRable8Bit r0;
        java.awt.geom.AffineTransform r2;
        org.apache.batik.ext.awt.image.renderable.Filter r1;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.AffineRable8Bit;

        r1 := @parameter0: org.apache.batik.ext.awt.image.renderable.Filter;

        r2 := @parameter1: java.awt.geom.AffineTransform;

        specialinvoke r0.<org.apache.batik.ext.awt.image.renderable.AbstractRable: void <init>()>();

        virtualinvoke r0.<org.apache.batik.ext.awt.image.renderable.AbstractRable: void init(org.apache.batik.ext.awt.image.renderable.Filter)>(r1);

        virtualinvoke r0.<org.apache.batik.ext.awt.image.renderable.AffineRable8Bit: void setAffine(java.awt.geom.AffineTransform)>(r2);

        return;
    }

    public java.awt.geom.Rectangle2D getBounds2D()
    {
        java.awt.Shape $r4;
        java.awt.geom.Rectangle2D $r2, $r5;
        org.apache.batik.ext.awt.image.renderable.AffineRable8Bit r0;
        java.awt.geom.AffineTransform $r3;
        org.apache.batik.ext.awt.image.renderable.Filter $r1;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.AffineRable8Bit;

        $r1 = virtualinvoke r0.<org.apache.batik.ext.awt.image.renderable.AffineRable8Bit: org.apache.batik.ext.awt.image.renderable.Filter getSource()>();

        $r2 = interfaceinvoke $r1.<org.apache.batik.ext.awt.image.renderable.Filter: java.awt.geom.Rectangle2D getBounds2D()>();

        $r3 = r0.<org.apache.batik.ext.awt.image.renderable.AffineRable8Bit: java.awt.geom.AffineTransform affine>;

        $r4 = virtualinvoke $r3.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>($r2);

        $r5 = interfaceinvoke $r4.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>();

        return $r5;
    }

    public org.apache.batik.ext.awt.image.renderable.Filter getSource()
    {
        java.util.Vector $r1;
        java.lang.Object $r2;
        org.apache.batik.ext.awt.image.renderable.AffineRable8Bit r0;
        org.apache.batik.ext.awt.image.renderable.Filter $r3;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.AffineRable8Bit;

        $r1 = r0.<org.apache.batik.ext.awt.image.renderable.AbstractRable: java.util.Vector srcs>;

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object get(int)>(0);

        $r3 = (org.apache.batik.ext.awt.image.renderable.Filter) $r2;

        return $r3;
    }

    public void setSource(org.apache.batik.ext.awt.image.renderable.Filter)
    {
        org.apache.batik.ext.awt.image.renderable.AffineRable8Bit r0;
        org.apache.batik.ext.awt.image.renderable.Filter r1;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.AffineRable8Bit;

        r1 := @parameter0: org.apache.batik.ext.awt.image.renderable.Filter;

        virtualinvoke r0.<org.apache.batik.ext.awt.image.renderable.AbstractRable: void init(org.apache.batik.ext.awt.image.renderable.Filter)>(r1);

        return;
    }

    public void setAffine(java.awt.geom.AffineTransform)
    {
        java.awt.geom.NoninvertibleTransformException $r3;
        org.apache.batik.ext.awt.image.renderable.AffineRable8Bit r0;
        java.awt.geom.AffineTransform r1, $r2;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.AffineRable8Bit;

        r1 := @parameter0: java.awt.geom.AffineTransform;

        virtualinvoke r0.<org.apache.batik.ext.awt.image.renderable.AbstractRable: void touch()>();

        r0.<org.apache.batik.ext.awt.image.renderable.AffineRable8Bit: java.awt.geom.AffineTransform affine> = r1;

     label1:
        $r2 = virtualinvoke r1.<java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>();

        r0.<org.apache.batik.ext.awt.image.renderable.AffineRable8Bit: java.awt.geom.AffineTransform invAffine> = $r2;

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r0.<org.apache.batik.ext.awt.image.renderable.AffineRable8Bit: java.awt.geom.AffineTransform invAffine> = null;

     label4:
        return;

        catch java.awt.geom.NoninvertibleTransformException from label1 to label2 with label3;
    }

    public java.awt.geom.AffineTransform getAffine()
    {
        java.lang.Object $r2;
        org.apache.batik.ext.awt.image.renderable.AffineRable8Bit r0;
        java.awt.geom.AffineTransform $r1, $r3;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.AffineRable8Bit;

        $r1 = r0.<org.apache.batik.ext.awt.image.renderable.AffineRable8Bit: java.awt.geom.AffineTransform affine>;

        $r2 = virtualinvoke $r1.<java.awt.geom.AffineTransform: java.lang.Object clone()>();

        $r3 = (java.awt.geom.AffineTransform) $r2;

        return $r3;
    }

    public boolean paintRable(java.awt.Graphics2D)
    {
        java.awt.Graphics2D r0;
        java.awt.geom.AffineTransform $r1, $r3;
        org.apache.batik.ext.awt.image.renderable.AffineRable8Bit r2;
        org.apache.batik.ext.awt.image.renderable.Filter $r4;

        r2 := @this: org.apache.batik.ext.awt.image.renderable.AffineRable8Bit;

        r0 := @parameter0: java.awt.Graphics2D;

        $r1 = virtualinvoke r0.<java.awt.Graphics2D: java.awt.geom.AffineTransform getTransform()>();

        $r3 = virtualinvoke r2.<org.apache.batik.ext.awt.image.renderable.AffineRable8Bit: java.awt.geom.AffineTransform getAffine()>();

        virtualinvoke r0.<java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>($r3);

        $r4 = virtualinvoke r2.<org.apache.batik.ext.awt.image.renderable.AffineRable8Bit: org.apache.batik.ext.awt.image.renderable.Filter getSource()>();

        staticinvoke <org.apache.batik.ext.awt.image.GraphicsUtil: void drawImage(java.awt.Graphics2D,java.awt.image.renderable.RenderableImage)>(r0, $r4);

        virtualinvoke r0.<java.awt.Graphics2D: void setTransform(java.awt.geom.AffineTransform)>($r1);

        return 1;
    }

    public java.awt.image.RenderedImage createRendering(java.awt.image.renderable.RenderContext)
    {
        java.awt.Shape $r4, r13;
        java.awt.image.RenderedImage $r9;
        java.awt.RenderingHints $r3, $r11, r12;
        java.awt.geom.AffineTransform $r1, $r5, $r6, $r10;
        org.apache.batik.ext.awt.image.renderable.Filter $r7;
        java.awt.image.renderable.RenderContext r2, $r8;
        org.apache.batik.ext.awt.image.renderable.AffineRable8Bit r0;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.AffineRable8Bit;

        r2 := @parameter0: java.awt.image.renderable.RenderContext;

        $r1 = r0.<org.apache.batik.ext.awt.image.renderable.AffineRable8Bit: java.awt.geom.AffineTransform invAffine>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r2.<java.awt.image.renderable.RenderContext: java.awt.RenderingHints getRenderingHints()>();

        r12 = $r3;

        if $r3 != null goto label2;

        $r11 = new java.awt.RenderingHints;

        specialinvoke $r11.<java.awt.RenderingHints: void <init>(java.util.Map)>(null);

        r12 = $r11;

     label2:
        $r4 = virtualinvoke r2.<java.awt.image.renderable.RenderContext: java.awt.Shape getAreaOfInterest()>();

        r13 = $r4;

        if $r4 == null goto label3;

        $r10 = r0.<org.apache.batik.ext.awt.image.renderable.AffineRable8Bit: java.awt.geom.AffineTransform invAffine>;

        r13 = virtualinvoke $r10.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>($r4);

     label3:
        $r5 = virtualinvoke r2.<java.awt.image.renderable.RenderContext: java.awt.geom.AffineTransform getTransform()>();

        $r6 = r0.<org.apache.batik.ext.awt.image.renderable.AffineRable8Bit: java.awt.geom.AffineTransform affine>;

        virtualinvoke $r5.<java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>($r6);

        $r7 = virtualinvoke r0.<org.apache.batik.ext.awt.image.renderable.AffineRable8Bit: org.apache.batik.ext.awt.image.renderable.Filter getSource()>();

        $r8 = new java.awt.image.renderable.RenderContext;

        specialinvoke $r8.<java.awt.image.renderable.RenderContext: void <init>(java.awt.geom.AffineTransform,java.awt.Shape,java.awt.RenderingHints)>($r5, r13, r12);

        $r9 = interfaceinvoke $r7.<java.awt.image.renderable.RenderableImage: java.awt.image.RenderedImage createRendering(java.awt.image.renderable.RenderContext)>($r8);

        return $r9;
    }

    public java.awt.Shape getDependencyRegion(int, java.awt.geom.Rectangle2D)
    {
        java.awt.Shape $r4;
        java.lang.IndexOutOfBoundsException $r5;
        java.awt.geom.Rectangle2D r2;
        int i0;
        org.apache.batik.ext.awt.image.renderable.AffineRable8Bit r0;
        java.awt.geom.AffineTransform $r1, $r3;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.AffineRable8Bit;

        i0 := @parameter0: int;

        r2 := @parameter1: java.awt.geom.Rectangle2D;

        if i0 == 0 goto label1;

        $r5 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>("Affine only has one input");

        throw $r5;

     label1:
        $r1 = r0.<org.apache.batik.ext.awt.image.renderable.AffineRable8Bit: java.awt.geom.AffineTransform invAffine>;

        if $r1 != null goto label2;

        return null;

     label2:
        $r3 = r0.<org.apache.batik.ext.awt.image.renderable.AffineRable8Bit: java.awt.geom.AffineTransform invAffine>;

        $r4 = virtualinvoke $r3.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>(r2);

        return $r4;
    }

    public java.awt.Shape getDirtyRegion(int, java.awt.geom.Rectangle2D)
    {
        java.awt.Shape $r3;
        java.lang.IndexOutOfBoundsException $r4;
        java.awt.geom.Rectangle2D r1;
        int i0;
        org.apache.batik.ext.awt.image.renderable.AffineRable8Bit r0;
        java.awt.geom.AffineTransform $r2;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.AffineRable8Bit;

        i0 := @parameter0: int;

        r1 := @parameter1: java.awt.geom.Rectangle2D;

        if i0 == 0 goto label1;

        $r4 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r4.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>("Affine only has one input");

        throw $r4;

     label1:
        $r2 = r0.<org.apache.batik.ext.awt.image.renderable.AffineRable8Bit: java.awt.geom.AffineTransform affine>;

        $r3 = virtualinvoke $r2.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>(r1);

        return $r3;
    }
}
