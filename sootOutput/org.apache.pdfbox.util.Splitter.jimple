public class org.apache.pdfbox.util.Splitter extends java.lang.Object
{
    protected org.apache.pdfbox.pdmodel.PDDocument pdfDocument;
    protected org.apache.pdfbox.pdmodel.PDDocument currentDocument;
    private int splitAtPage;
    private int startPage;
    private int endPage;
    private java.util.List newDocuments;
    protected int pageNumber;

    public void <init>()
    {
        org.apache.pdfbox.util.Splitter r0;

        r0 := @this: org.apache.pdfbox.util.Splitter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.pdfbox.util.Splitter: org.apache.pdfbox.pdmodel.PDDocument currentDocument> = null;

        r0.<org.apache.pdfbox.util.Splitter: int splitAtPage> = 1;

        r0.<org.apache.pdfbox.util.Splitter: int startPage> = -2147483648;

        r0.<org.apache.pdfbox.util.Splitter: int endPage> = 2147483647;

        r0.<org.apache.pdfbox.util.Splitter: java.util.List newDocuments> = null;

        r0.<org.apache.pdfbox.util.Splitter: int pageNumber> = 0;

        return;
    }

    public java.util.List split(org.apache.pdfbox.pdmodel.PDDocument) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.PDDocumentCatalog $r4;
        java.util.List $r5, $r6;
        org.apache.pdfbox.util.Splitter r0;
        org.apache.pdfbox.pdmodel.PDDocument r2, $r3;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.pdfbox.util.Splitter;

        r2 := @parameter0: org.apache.pdfbox.pdmodel.PDDocument;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.pdfbox.util.Splitter: java.util.List newDocuments> = $r1;

        r0.<org.apache.pdfbox.util.Splitter: org.apache.pdfbox.pdmodel.PDDocument pdfDocument> = r2;

        $r3 = r0.<org.apache.pdfbox.util.Splitter: org.apache.pdfbox.pdmodel.PDDocument pdfDocument>;

        $r4 = virtualinvoke $r3.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>();

        $r5 = virtualinvoke $r4.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: java.util.List getAllPages()>();

        virtualinvoke r0.<org.apache.pdfbox.util.Splitter: void processPages(java.util.List)>($r5);

        $r6 = r0.<org.apache.pdfbox.util.Splitter: java.util.List newDocuments>;

        return $r6;
    }

    public void setSplitAtPage(int)
    {
        int i0;
        java.lang.RuntimeException $r1;
        org.apache.pdfbox.util.Splitter r0;

        r0 := @this: org.apache.pdfbox.util.Splitter;

        i0 := @parameter0: int;

        if i0 > 0 goto label1;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Error split must be at least one page.");

        throw $r1;

     label1:
        r0.<org.apache.pdfbox.util.Splitter: int splitAtPage> = i0;

        return;
    }

    public int getSplitAtPage()
    {
        int $i0;
        org.apache.pdfbox.util.Splitter r0;

        r0 := @this: org.apache.pdfbox.util.Splitter;

        $i0 = r0.<org.apache.pdfbox.util.Splitter: int splitAtPage>;

        return $i0;
    }

    public void setStartPage(int)
    {
        int i0;
        java.lang.RuntimeException $r1;
        org.apache.pdfbox.util.Splitter r0;

        r0 := @this: org.apache.pdfbox.util.Splitter;

        i0 := @parameter0: int;

        if i0 > 0 goto label1;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Error split must be at least one page.");

        throw $r1;

     label1:
        r0.<org.apache.pdfbox.util.Splitter: int startPage> = i0;

        return;
    }

    public int getStartPage()
    {
        int $i0;
        org.apache.pdfbox.util.Splitter r0;

        r0 := @this: org.apache.pdfbox.util.Splitter;

        $i0 = r0.<org.apache.pdfbox.util.Splitter: int startPage>;

        return $i0;
    }

    public void setEndPage(int)
    {
        int i0;
        java.lang.RuntimeException $r1;
        org.apache.pdfbox.util.Splitter r0;

        r0 := @this: org.apache.pdfbox.util.Splitter;

        i0 := @parameter0: int;

        if i0 > 0 goto label1;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Error split must be at least one page.");

        throw $r1;

     label1:
        r0.<org.apache.pdfbox.util.Splitter: int endPage> = i0;

        return;
    }

    public int getEndPage()
    {
        int $i0;
        org.apache.pdfbox.util.Splitter r0;

        r0 := @this: org.apache.pdfbox.util.Splitter;

        $i0 = r0.<org.apache.pdfbox.util.Splitter: int endPage>;

        return $i0;
    }

    protected void processPages(java.util.List) throws java.io.IOException
    {
        org.apache.pdfbox.util.Splitter r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0;
        java.util.Iterator $r1;
        java.util.List r0;
        java.lang.Object $r2;
        org.apache.pdfbox.pdmodel.PDPage r3;

        r4 := @this: org.apache.pdfbox.util.Splitter;

        r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.pdfbox.pdmodel.PDPage) $r2;

        $i0 = r4.<org.apache.pdfbox.util.Splitter: int pageNumber>;

        $i2 = $i0 + 1;

        $i1 = r4.<org.apache.pdfbox.util.Splitter: int startPage>;

        if $i2 < $i1 goto label2;

        $i7 = r4.<org.apache.pdfbox.util.Splitter: int pageNumber>;

        $i9 = $i7 + 1;

        $i8 = r4.<org.apache.pdfbox.util.Splitter: int endPage>;

        if $i9 > $i8 goto label2;

        virtualinvoke r4.<org.apache.pdfbox.util.Splitter: void processNextPage(org.apache.pdfbox.pdmodel.PDPage)>(r3);

        goto label4;

     label2:
        $i4 = r4.<org.apache.pdfbox.util.Splitter: int pageNumber>;

        $i3 = r4.<org.apache.pdfbox.util.Splitter: int endPage>;

        if $i4 <= $i3 goto label3;

        goto label5;

     label3:
        $i5 = r4.<org.apache.pdfbox.util.Splitter: int pageNumber>;

        $i6 = $i5 + 1;

        r4.<org.apache.pdfbox.util.Splitter: int pageNumber> = $i6;

     label4:
        goto label1;

     label5:
        return;
    }

    protected void createNewDocumentIfNecessary() throws java.io.IOException
    {
        org.apache.pdfbox.util.Splitter r0;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.util.Splitter;

        $z0 = virtualinvoke r0.<org.apache.pdfbox.util.Splitter: boolean isNewDocNecessary()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.pdfbox.util.Splitter: void createNewDocument()>();

     label1:
        return;
    }

    protected boolean isNewDocNecessary()
    {
        org.apache.pdfbox.util.Splitter r0;
        org.apache.pdfbox.pdmodel.PDDocument $r1;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.util.Splitter;

        $i1 = r0.<org.apache.pdfbox.util.Splitter: int pageNumber>;

        $i0 = r0.<org.apache.pdfbox.util.Splitter: int splitAtPage>;

        $i2 = $i1 % $i0;

        if $i2 == 0 goto label1;

        $r1 = r0.<org.apache.pdfbox.util.Splitter: org.apache.pdfbox.pdmodel.PDDocument currentDocument>;

        if $r1 != null goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    protected void createNewDocument() throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.PDDocumentCatalog $r6, $r8;
        org.apache.pdfbox.pdmodel.PDDocumentInformation $r4;
        org.apache.pdfbox.util.Splitter r0;
        org.apache.pdfbox.pdmodel.PDDocument $r1, $r2, $r3, $r5, $r7, $r10;
        java.util.List $r11;
        org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences $r9;

        r0 := @this: org.apache.pdfbox.util.Splitter;

        $r1 = new org.apache.pdfbox.pdmodel.PDDocument;

        specialinvoke $r1.<org.apache.pdfbox.pdmodel.PDDocument: void <init>()>();

        r0.<org.apache.pdfbox.util.Splitter: org.apache.pdfbox.pdmodel.PDDocument currentDocument> = $r1;

        $r3 = r0.<org.apache.pdfbox.util.Splitter: org.apache.pdfbox.pdmodel.PDDocument currentDocument>;

        $r2 = r0.<org.apache.pdfbox.util.Splitter: org.apache.pdfbox.pdmodel.PDDocument pdfDocument>;

        $r4 = virtualinvoke $r2.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentInformation getDocumentInformation()>();

        virtualinvoke $r3.<org.apache.pdfbox.pdmodel.PDDocument: void setDocumentInformation(org.apache.pdfbox.pdmodel.PDDocumentInformation)>($r4);

        $r5 = r0.<org.apache.pdfbox.util.Splitter: org.apache.pdfbox.pdmodel.PDDocument currentDocument>;

        $r6 = virtualinvoke $r5.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>();

        $r7 = r0.<org.apache.pdfbox.util.Splitter: org.apache.pdfbox.pdmodel.PDDocument pdfDocument>;

        $r8 = virtualinvoke $r7.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>();

        $r9 = virtualinvoke $r8.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences getViewerPreferences()>();

        virtualinvoke $r6.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: void setViewerPreferences(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences)>($r9);

        $r11 = r0.<org.apache.pdfbox.util.Splitter: java.util.List newDocuments>;

        $r10 = r0.<org.apache.pdfbox.util.Splitter: org.apache.pdfbox.pdmodel.PDDocument currentDocument>;

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r10);

        return;
    }

    protected void processNextPage(org.apache.pdfbox.pdmodel.PDPage) throws java.io.IOException
    {
        org.apache.pdfbox.util.Splitter r0;
        org.apache.pdfbox.pdmodel.PDDocument $r2;
        org.apache.pdfbox.pdmodel.PDResources $r6;
        org.apache.pdfbox.pdmodel.common.PDRectangle $r4, $r5;
        int $i0, $i1, $i2;
        org.apache.pdfbox.pdmodel.PDPage r1, $r3;

        r0 := @this: org.apache.pdfbox.util.Splitter;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.PDPage;

        virtualinvoke r0.<org.apache.pdfbox.util.Splitter: void createNewDocumentIfNecessary()>();

        $r2 = r0.<org.apache.pdfbox.util.Splitter: org.apache.pdfbox.pdmodel.PDDocument currentDocument>;

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDPage importPage(org.apache.pdfbox.pdmodel.PDPage)>(r1);

        $r4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.common.PDRectangle findCropBox()>();

        virtualinvoke $r3.<org.apache.pdfbox.pdmodel.PDPage: void setCropBox(org.apache.pdfbox.pdmodel.common.PDRectangle)>($r4);

        $r5 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.common.PDRectangle findMediaBox()>();

        virtualinvoke $r3.<org.apache.pdfbox.pdmodel.PDPage: void setMediaBox(org.apache.pdfbox.pdmodel.common.PDRectangle)>($r5);

        $r6 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.PDResources getResources()>();

        virtualinvoke $r3.<org.apache.pdfbox.pdmodel.PDPage: void setResources(org.apache.pdfbox.pdmodel.PDResources)>($r6);

        $i0 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDPage: int findRotation()>();

        virtualinvoke $r3.<org.apache.pdfbox.pdmodel.PDPage: void setRotation(int)>($i0);

        $i1 = r0.<org.apache.pdfbox.util.Splitter: int pageNumber>;

        $i2 = $i1 + 1;

        r0.<org.apache.pdfbox.util.Splitter: int pageNumber> = $i2;

        return;
    }
}
