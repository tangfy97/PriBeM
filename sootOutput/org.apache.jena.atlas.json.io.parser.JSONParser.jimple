public class org.apache.jena.atlas.json.io.parser.JSONParser extends java.lang.Object
{

    public void <init>()
    {
        org.apache.jena.atlas.json.io.parser.JSONParser r0;

        r0 := @this: org.apache.jena.atlas.json.io.parser.JSONParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void parse(java.io.InputStream)
    {
        org.apache.jena.atlas.json.io.parserjavacc.JSONPrinter $r1;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        $r1 = new org.apache.jena.atlas.json.io.parserjavacc.JSONPrinter;

        specialinvoke $r1.<org.apache.jena.atlas.json.io.parserjavacc.JSONPrinter: void <init>()>();

        staticinvoke <org.apache.jena.atlas.json.io.parser.JSONParser: void parse(java.io.InputStream,org.apache.jena.atlas.json.io.JSONHandler)>(r0, $r1);

        return;
    }

    public static void parse(java.io.InputStream, org.apache.jena.atlas.json.io.JSONHandler)
    {
        org.apache.jena.atlas.json.io.JSONHandler r3;
        org.apache.jena.atlas.json.io.parser.TokenizerJSON $r2;
        org.apache.jena.atlas.io.PeekReader $r1;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        r3 := @parameter1: org.apache.jena.atlas.json.io.JSONHandler;

        $r1 = staticinvoke <org.apache.jena.atlas.io.PeekReader: org.apache.jena.atlas.io.PeekReader makeUTF8(java.io.InputStream)>(r0);

        $r2 = new org.apache.jena.atlas.json.io.parser.TokenizerJSON;

        specialinvoke $r2.<org.apache.jena.atlas.json.io.parser.TokenizerJSON: void <init>(org.apache.jena.atlas.io.PeekReader)>($r1);

        staticinvoke <org.apache.jena.atlas.json.io.parser.JSONParser: void parse(org.apache.jena.atlas.json.io.parser.TokenizerJSON,org.apache.jena.atlas.json.io.JSONHandler)>($r2, r3);

        return;
    }

    public static void parse(java.io.Reader)
    {
        java.io.Reader r0;
        org.apache.jena.atlas.json.io.parserjavacc.JSONPrinter $r1;

        r0 := @parameter0: java.io.Reader;

        $r1 = new org.apache.jena.atlas.json.io.parserjavacc.JSONPrinter;

        specialinvoke $r1.<org.apache.jena.atlas.json.io.parserjavacc.JSONPrinter: void <init>()>();

        staticinvoke <org.apache.jena.atlas.json.io.parser.JSONParser: void parse(java.io.Reader,org.apache.jena.atlas.json.io.JSONHandler)>(r0, $r1);

        return;
    }

    public static void parse(java.io.Reader, org.apache.jena.atlas.json.io.JSONHandler)
    {
        org.apache.jena.atlas.json.io.JSONHandler r3;
        org.apache.jena.atlas.json.io.parser.TokenizerJSON $r2;
        java.io.Reader r0;
        org.apache.jena.atlas.io.PeekReader $r1;

        r0 := @parameter0: java.io.Reader;

        r3 := @parameter1: org.apache.jena.atlas.json.io.JSONHandler;

        $r1 = staticinvoke <org.apache.jena.atlas.io.PeekReader: org.apache.jena.atlas.io.PeekReader make(java.io.Reader)>(r0);

        $r2 = new org.apache.jena.atlas.json.io.parser.TokenizerJSON;

        specialinvoke $r2.<org.apache.jena.atlas.json.io.parser.TokenizerJSON: void <init>(org.apache.jena.atlas.io.PeekReader)>($r1);

        staticinvoke <org.apache.jena.atlas.json.io.parser.JSONParser: void parse(org.apache.jena.atlas.json.io.parser.TokenizerJSON,org.apache.jena.atlas.json.io.JSONHandler)>($r2, r3);

        return;
    }

    private static void parse(org.apache.jena.atlas.json.io.parser.TokenizerJSON, org.apache.jena.atlas.json.io.JSONHandler)
    {
        org.apache.jena.atlas.json.io.parser.TokenizerJSON r1;
        org.apache.jena.atlas.json.io.JSONHandler r2;
        org.apache.jena.atlas.json.io.parser.JSONP $r0;

        r1 := @parameter0: org.apache.jena.atlas.json.io.parser.TokenizerJSON;

        r2 := @parameter1: org.apache.jena.atlas.json.io.JSONHandler;

        $r0 = new org.apache.jena.atlas.json.io.parser.JSONP;

        specialinvoke $r0.<org.apache.jena.atlas.json.io.parser.JSONP: void <init>(org.apache.jena.atlas.json.io.parser.TokenizerJSON,org.apache.jena.atlas.json.io.JSONHandler)>(r1, r2);

        virtualinvoke $r0.<org.apache.jena.atlas.json.io.parser.JSONP: void parse()>();

        return;
    }

    public static void parseAny(java.io.Reader)
    {
        java.io.Reader r0;
        org.apache.jena.atlas.json.io.parserjavacc.JSONPrinter $r1;

        r0 := @parameter0: java.io.Reader;

        $r1 = new org.apache.jena.atlas.json.io.parserjavacc.JSONPrinter;

        specialinvoke $r1.<org.apache.jena.atlas.json.io.parserjavacc.JSONPrinter: void <init>()>();

        staticinvoke <org.apache.jena.atlas.json.io.parser.JSONParser: void parseAny(java.io.Reader,org.apache.jena.atlas.json.io.JSONHandler)>(r0, $r1);

        return;
    }

    public static void parseAny(java.io.Reader, org.apache.jena.atlas.json.io.JSONHandler)
    {
        org.apache.jena.atlas.json.io.JSONHandler r3;
        org.apache.jena.atlas.json.io.parser.TokenizerJSON $r2;
        java.io.Reader r0;
        org.apache.jena.atlas.io.PeekReader $r1;

        r0 := @parameter0: java.io.Reader;

        r3 := @parameter1: org.apache.jena.atlas.json.io.JSONHandler;

        $r1 = staticinvoke <org.apache.jena.atlas.io.PeekReader: org.apache.jena.atlas.io.PeekReader make(java.io.Reader)>(r0);

        $r2 = new org.apache.jena.atlas.json.io.parser.TokenizerJSON;

        specialinvoke $r2.<org.apache.jena.atlas.json.io.parser.TokenizerJSON: void <init>(org.apache.jena.atlas.io.PeekReader)>($r1);

        staticinvoke <org.apache.jena.atlas.json.io.parser.JSONParser: void parseAny(org.apache.jena.atlas.json.io.parser.TokenizerJSON,org.apache.jena.atlas.json.io.JSONHandler)>($r2, r3);

        return;
    }

    public static void parseAny(java.io.InputStream)
    {
        org.apache.jena.atlas.json.io.parserjavacc.JSONPrinter $r1;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        $r1 = new org.apache.jena.atlas.json.io.parserjavacc.JSONPrinter;

        specialinvoke $r1.<org.apache.jena.atlas.json.io.parserjavacc.JSONPrinter: void <init>()>();

        staticinvoke <org.apache.jena.atlas.json.io.parser.JSONParser: void parseAny(java.io.InputStream,org.apache.jena.atlas.json.io.JSONHandler)>(r0, $r1);

        return;
    }

    public static void parseAny(java.io.InputStream, org.apache.jena.atlas.json.io.JSONHandler)
    {
        org.apache.jena.atlas.json.io.JSONHandler r3;
        org.apache.jena.atlas.json.io.parser.TokenizerJSON $r2;
        org.apache.jena.atlas.io.PeekReader $r1;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        r3 := @parameter1: org.apache.jena.atlas.json.io.JSONHandler;

        $r1 = staticinvoke <org.apache.jena.atlas.io.PeekReader: org.apache.jena.atlas.io.PeekReader makeUTF8(java.io.InputStream)>(r0);

        $r2 = new org.apache.jena.atlas.json.io.parser.TokenizerJSON;

        specialinvoke $r2.<org.apache.jena.atlas.json.io.parser.TokenizerJSON: void <init>(org.apache.jena.atlas.io.PeekReader)>($r1);

        staticinvoke <org.apache.jena.atlas.json.io.parser.JSONParser: void parseAny(org.apache.jena.atlas.json.io.parser.TokenizerJSON,org.apache.jena.atlas.json.io.JSONHandler)>($r2, r3);

        return;
    }

    private static void parseAny(org.apache.jena.atlas.json.io.parser.TokenizerJSON, org.apache.jena.atlas.json.io.JSONHandler)
    {
        org.apache.jena.atlas.json.io.parser.TokenizerJSON r1;
        org.apache.jena.atlas.json.io.JSONHandler r2;
        org.apache.jena.atlas.json.io.parser.JSONP $r0;

        r1 := @parameter0: org.apache.jena.atlas.json.io.parser.TokenizerJSON;

        r2 := @parameter1: org.apache.jena.atlas.json.io.JSONHandler;

        $r0 = new org.apache.jena.atlas.json.io.parser.JSONP;

        specialinvoke $r0.<org.apache.jena.atlas.json.io.parser.JSONP: void <init>(org.apache.jena.atlas.json.io.parser.TokenizerJSON,org.apache.jena.atlas.json.io.JSONHandler)>(r1, r2);

        virtualinvoke $r0.<org.apache.jena.atlas.json.io.parser.JSONP: void parseAny()>();

        return;
    }
}
