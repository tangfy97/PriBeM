public class org.apache.pdfbox.pdmodel.encryption.PDEncryptionManager extends java.lang.Object
{
    private static java.util.Map handlerMap;

    private void <init>()
    {
        org.apache.pdfbox.pdmodel.encryption.PDEncryptionManager r0;

        r0 := @this: org.apache.pdfbox.pdmodel.encryption.PDEncryptionManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void registerSecurityHandler(java.lang.String, java.lang.Class)
    {
        org.apache.pdfbox.cos.COSName $r2;
        java.util.Map $r1;
        java.lang.Class r3;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Class;

        $r1 = <org.apache.pdfbox.pdmodel.encryption.PDEncryptionManager: java.util.Map handlerMap>;

        $r2 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r0);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, r3);

        return;
    }

    public static org.apache.pdfbox.pdmodel.encryption.PDEncryptionDictionary getEncryptionDictionary(org.apache.pdfbox.cos.COSDictionary) throws java.io.IOException
    {
        java.lang.Object[] $r10;
        java.lang.NoSuchMethodException $r27;
        java.lang.reflect.Constructor $r9;
        java.util.Map $r5;
        java.lang.InstantiationException $r24;
        java.lang.String $r14, $r17, $r20, $r23, $r26, $r29;
        org.apache.pdfbox.cos.COSName $r2, r4;
        java.lang.IllegalAccessException $r21;
        java.lang.Class[] $r8;
        java.io.IOException $r11, $r19, $r22, $r25, $r28;
        org.apache.pdfbox.pdmodel.encryption.PDEncryptionDictionary $r1;
        java.lang.reflect.InvocationTargetException $r18;
        org.apache.pdfbox.cos.COSDictionary r0;
        org.apache.pdfbox.cos.COSBase $r3;
        java.lang.Object $r6, r30;
        java.lang.Class r7;
        java.lang.StringBuilder $r12, $r13, $r15, $r16;

        r0 := @parameter0: org.apache.pdfbox.cos.COSDictionary;

        r30 = null;

        if r0 == null goto label7;

        $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FILTER>;

        $r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2);

        r4 = (org.apache.pdfbox.cos.COSName) $r3;

        $r5 = <org.apache.pdfbox.pdmodel.encryption.PDEncryptionManager: java.util.Map handlerMap>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        r7 = (java.lang.Class) $r6;

        if r7 != null goto label1;

        $r11 = new java.io.IOException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No handler for security handler \'");

        $r14 = virtualinvoke r4.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>($r17);

        throw $r11;

     label1:
        $r8 = newarray (java.lang.Class)[1];

        $r8[0] = class "Lorg/apache/pdfbox/cos/COSDictionary;";

        $r9 = virtualinvoke r7.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r8);

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r0;

        r30 = virtualinvoke $r9.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r10);

     label2:
        goto label7;

     label3:
        $r27 := @caughtexception;

        $r28 = new java.io.IOException;

        $r29 = virtualinvoke $r27.<java.lang.NoSuchMethodException: java.lang.String getMessage()>();

        specialinvoke $r28.<java.io.IOException: void <init>(java.lang.String)>($r29);

        throw $r28;

     label4:
        $r24 := @caughtexception;

        $r25 = new java.io.IOException;

        $r26 = virtualinvoke $r24.<java.lang.InstantiationException: java.lang.String getMessage()>();

        specialinvoke $r25.<java.io.IOException: void <init>(java.lang.String)>($r26);

        throw $r25;

     label5:
        $r21 := @caughtexception;

        $r22 = new java.io.IOException;

        $r23 = virtualinvoke $r21.<java.lang.IllegalAccessException: java.lang.String getMessage()>();

        specialinvoke $r22.<java.io.IOException: void <init>(java.lang.String)>($r23);

        throw $r22;

     label6:
        $r18 := @caughtexception;

        $r19 = new java.io.IOException;

        $r20 = virtualinvoke $r18.<java.lang.reflect.InvocationTargetException: java.lang.String getMessage()>();

        specialinvoke $r19.<java.io.IOException: void <init>(java.lang.String)>($r20);

        throw $r19;

     label7:
        $r1 = (org.apache.pdfbox.pdmodel.encryption.PDEncryptionDictionary) r30;

        return $r1;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
        catch java.lang.InstantiationException from label1 to label2 with label4;
        catch java.lang.IllegalAccessException from label1 to label2 with label5;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label6;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;
        java.util.Map $r1;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r1 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r0);

        <org.apache.pdfbox.pdmodel.encryption.PDEncryptionManager: java.util.Map handlerMap> = $r1;

        staticinvoke <org.apache.pdfbox.pdmodel.encryption.PDEncryptionManager: void registerSecurityHandler(java.lang.String,java.lang.Class)>("Standard", class "Lorg/apache/pdfbox/pdmodel/encryption/PDStandardEncryption;");

        return;
    }
}
