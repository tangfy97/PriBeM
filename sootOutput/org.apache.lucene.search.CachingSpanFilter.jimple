public class org.apache.lucene.search.CachingSpanFilter extends org.apache.lucene.search.SpanFilter
{
    private org.apache.lucene.search.SpanFilter filter;
    private final org.apache.lucene.search.CachingWrapperFilter$FilterCache cache;
    int hitCount;
    int missCount;

    public void <init>(org.apache.lucene.search.SpanFilter)
    {
        org.apache.lucene.search.CachingWrapperFilter$DeletesMode $r2;
        org.apache.lucene.search.SpanFilter r1;
        org.apache.lucene.search.CachingSpanFilter r0;

        r0 := @this: org.apache.lucene.search.CachingSpanFilter;

        r1 := @parameter0: org.apache.lucene.search.SpanFilter;

        $r2 = <org.apache.lucene.search.CachingWrapperFilter$DeletesMode: org.apache.lucene.search.CachingWrapperFilter$DeletesMode RECACHE>;

        specialinvoke r0.<org.apache.lucene.search.CachingSpanFilter: void <init>(org.apache.lucene.search.SpanFilter,org.apache.lucene.search.CachingWrapperFilter$DeletesMode)>(r1, $r2);

        return;
    }

    public void <init>(org.apache.lucene.search.SpanFilter, org.apache.lucene.search.CachingWrapperFilter$DeletesMode)
    {
        org.apache.lucene.search.CachingWrapperFilter$DeletesMode r2, $r3;
        org.apache.lucene.search.CachingSpanFilter$1 $r4;
        org.apache.lucene.search.SpanFilter r1;
        java.lang.IllegalArgumentException $r5;
        org.apache.lucene.search.CachingSpanFilter r0;

        r0 := @this: org.apache.lucene.search.CachingSpanFilter;

        r1 := @parameter0: org.apache.lucene.search.SpanFilter;

        r2 := @parameter1: org.apache.lucene.search.CachingWrapperFilter$DeletesMode;

        specialinvoke r0.<org.apache.lucene.search.SpanFilter: void <init>()>();

        r0.<org.apache.lucene.search.CachingSpanFilter: org.apache.lucene.search.SpanFilter filter> = r1;

        $r3 = <org.apache.lucene.search.CachingWrapperFilter$DeletesMode: org.apache.lucene.search.CachingWrapperFilter$DeletesMode DYNAMIC>;

        if r2 != $r3 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("DeletesMode.DYNAMIC is not supported");

        throw $r5;

     label1:
        $r4 = new org.apache.lucene.search.CachingSpanFilter$1;

        specialinvoke $r4.<org.apache.lucene.search.CachingSpanFilter$1: void <init>(org.apache.lucene.search.CachingSpanFilter,org.apache.lucene.search.CachingWrapperFilter$DeletesMode)>(r0, r2);

        r0.<org.apache.lucene.search.CachingSpanFilter: org.apache.lucene.search.CachingWrapperFilter$FilterCache cache> = $r4;

        return;
    }

    public org.apache.lucene.search.DocIdSet getDocIdSet(org.apache.lucene.index.IndexReader) throws java.io.IOException
    {
        org.apache.lucene.search.SpanFilterResult $r2;
        org.apache.lucene.search.DocIdSet $r3;
        org.apache.lucene.search.CachingSpanFilter r0;
        org.apache.lucene.index.IndexReader r1;

        r0 := @this: org.apache.lucene.search.CachingSpanFilter;

        r1 := @parameter0: org.apache.lucene.index.IndexReader;

        $r2 = specialinvoke r0.<org.apache.lucene.search.CachingSpanFilter: org.apache.lucene.search.SpanFilterResult getCachedResult(org.apache.lucene.index.IndexReader)>(r1);

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<org.apache.lucene.search.SpanFilterResult: org.apache.lucene.search.DocIdSet getDocIdSet()>();

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    private org.apache.lucene.search.SpanFilterResult getCachedResult(org.apache.lucene.index.IndexReader) throws java.io.IOException
    {
        org.apache.lucene.search.CachingSpanFilter r2;
        org.apache.lucene.search.SpanFilterResult $r6, $r8;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r1, $r4, $r9;
        org.apache.lucene.search.SpanFilter $r5;
        org.apache.lucene.search.CachingWrapperFilter$FilterCache $r3, $r7;
        org.apache.lucene.index.IndexReader r0;
        boolean $z0;

        r2 := @this: org.apache.lucene.search.CachingSpanFilter;

        r0 := @parameter0: org.apache.lucene.index.IndexReader;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.IndexReader: java.lang.Object getCoreCacheKey()>();

        $z0 = virtualinvoke r0.<org.apache.lucene.index.IndexReader: boolean hasDeletions()>();

        if $z0 == 0 goto label1;

        $r9 = virtualinvoke r0.<org.apache.lucene.index.IndexReader: java.lang.Object getDeletesCacheKey()>();

        goto label2;

     label1:
        $r9 = $r1;

     label2:
        $r3 = r2.<org.apache.lucene.search.CachingSpanFilter: org.apache.lucene.search.CachingWrapperFilter$FilterCache cache>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.search.CachingWrapperFilter$FilterCache: java.lang.Object get(org.apache.lucene.index.IndexReader,java.lang.Object,java.lang.Object)>(r0, $r1, $r9);

        $r8 = (org.apache.lucene.search.SpanFilterResult) $r4;

        if $r8 == null goto label3;

        $i2 = r2.<org.apache.lucene.search.CachingSpanFilter: int hitCount>;

        $i3 = $i2 + 1;

        r2.<org.apache.lucene.search.CachingSpanFilter: int hitCount> = $i3;

        return $r8;

     label3:
        $i0 = r2.<org.apache.lucene.search.CachingSpanFilter: int missCount>;

        $i1 = $i0 + 1;

        r2.<org.apache.lucene.search.CachingSpanFilter: int missCount> = $i1;

        $r5 = r2.<org.apache.lucene.search.CachingSpanFilter: org.apache.lucene.search.SpanFilter filter>;

        $r6 = virtualinvoke $r5.<org.apache.lucene.search.SpanFilter: org.apache.lucene.search.SpanFilterResult bitSpans(org.apache.lucene.index.IndexReader)>(r0);

        $r7 = r2.<org.apache.lucene.search.CachingSpanFilter: org.apache.lucene.search.CachingWrapperFilter$FilterCache cache>;

        virtualinvoke $r7.<org.apache.lucene.search.CachingWrapperFilter$FilterCache: void put(java.lang.Object,java.lang.Object,java.lang.Object)>($r1, $r9, $r6);

        return $r6;
    }

    public org.apache.lucene.search.SpanFilterResult bitSpans(org.apache.lucene.index.IndexReader) throws java.io.IOException
    {
        org.apache.lucene.search.SpanFilterResult $r2;
        org.apache.lucene.search.CachingSpanFilter r0;
        org.apache.lucene.index.IndexReader r1;

        r0 := @this: org.apache.lucene.search.CachingSpanFilter;

        r1 := @parameter0: org.apache.lucene.index.IndexReader;

        $r2 = specialinvoke r0.<org.apache.lucene.search.CachingSpanFilter: org.apache.lucene.search.SpanFilterResult getCachedResult(org.apache.lucene.index.IndexReader)>(r1);

        return $r2;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r4, $r5;
        org.apache.lucene.search.SpanFilter $r3;
        java.lang.String $r6;
        org.apache.lucene.search.CachingSpanFilter r2;

        r2 := @this: org.apache.lucene.search.CachingSpanFilter;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CachingSpanFilter(");

        $r3 = r2.<org.apache.lucene.search.CachingSpanFilter: org.apache.lucene.search.SpanFilter filter>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        org.apache.lucene.search.SpanFilter $r3, $r4;
        org.apache.lucene.search.CachingSpanFilter r1, $r2;
        boolean $z0, $z1;

        r1 := @this: org.apache.lucene.search.CachingSpanFilter;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.lucene.search.CachingSpanFilter;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r4 = r1.<org.apache.lucene.search.CachingSpanFilter: org.apache.lucene.search.SpanFilter filter>;

        $r2 = (org.apache.lucene.search.CachingSpanFilter) r0;

        $r3 = $r2.<org.apache.lucene.search.CachingSpanFilter: org.apache.lucene.search.SpanFilter filter>;

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        return $z1;
    }

    public int hashCode()
    {
        int $i0, $i1;
        org.apache.lucene.search.SpanFilter $r1;
        org.apache.lucene.search.CachingSpanFilter r0;

        r0 := @this: org.apache.lucene.search.CachingSpanFilter;

        $r1 = r0.<org.apache.lucene.search.CachingSpanFilter: org.apache.lucene.search.SpanFilter filter>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i1 = $i0 ^ 286768933;

        return $i1;
    }
}
