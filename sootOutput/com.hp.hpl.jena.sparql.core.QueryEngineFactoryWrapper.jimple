public class com.hp.hpl.jena.sparql.core.QueryEngineFactoryWrapper extends java.lang.Object implements com.hp.hpl.jena.sparql.engine.QueryEngineFactory
{

    public void <init>()
    {
        com.hp.hpl.jena.sparql.core.QueryEngineFactoryWrapper r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.QueryEngineFactoryWrapper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void init()
    {
        com.hp.hpl.jena.sparql.core.QueryEngineFactoryWrapper $r0;

        $r0 = new com.hp.hpl.jena.sparql.core.QueryEngineFactoryWrapper;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.core.QueryEngineFactoryWrapper: void <init>()>();

        staticinvoke <com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: void addFactory(com.hp.hpl.jena.sparql.engine.QueryEngineFactory)>($r0);

        return;
    }

    public boolean accept(com.hp.hpl.jena.query.Query, com.hp.hpl.jena.sparql.core.DatasetGraph, com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.query.Query r3;
        com.hp.hpl.jena.sparql.core.DatasetGraphWrapper $r1;
        com.hp.hpl.jena.sparql.core.DatasetGraph r0, $r2;
        com.hp.hpl.jena.sparql.util.Context r4;
        com.hp.hpl.jena.sparql.engine.QueryEngineFactory $r5;
        com.hp.hpl.jena.sparql.core.QueryEngineFactoryWrapper r6;
        boolean $z0, $z1;

        r6 := @this: com.hp.hpl.jena.sparql.core.QueryEngineFactoryWrapper;

        r3 := @parameter0: com.hp.hpl.jena.query.Query;

        r0 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        r4 := @parameter2: com.hp.hpl.jena.sparql.util.Context;

        $z0 = r0 instanceof com.hp.hpl.jena.sparql.core.DatasetGraphWrapper;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = (com.hp.hpl.jena.sparql.core.DatasetGraphWrapper) r0;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.core.DatasetGraphWrapper: com.hp.hpl.jena.sparql.core.DatasetGraph getWrapped()>();

        $r5 = staticinvoke <com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: com.hp.hpl.jena.sparql.engine.QueryEngineFactory findFactory(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.sparql.util.Context)>(r3, $r2, r4);

        $z1 = interfaceinvoke $r5.<com.hp.hpl.jena.sparql.engine.QueryEngineFactory: boolean accept(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.sparql.util.Context)>(r3, $r2, r4);

        return $z1;
    }

    public com.hp.hpl.jena.sparql.engine.Plan create(com.hp.hpl.jena.query.Query, com.hp.hpl.jena.sparql.core.DatasetGraph, com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.query.Query r3;
        com.hp.hpl.jena.sparql.core.DatasetGraphWrapper $r1;
        com.hp.hpl.jena.sparql.engine.Plan $r7;
        com.hp.hpl.jena.sparql.core.DatasetGraph r0, $r2;
        com.hp.hpl.jena.sparql.util.Context r4;
        com.hp.hpl.jena.sparql.engine.binding.Binding r6;
        com.hp.hpl.jena.sparql.engine.QueryEngineFactory $r5;
        com.hp.hpl.jena.sparql.core.QueryEngineFactoryWrapper r8;
        boolean $z0;

        r8 := @this: com.hp.hpl.jena.sparql.core.QueryEngineFactoryWrapper;

        r3 := @parameter0: com.hp.hpl.jena.query.Query;

        r0 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        r6 := @parameter2: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r4 := @parameter3: com.hp.hpl.jena.sparql.util.Context;

        $z0 = r0 instanceof com.hp.hpl.jena.sparql.core.DatasetGraphWrapper;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = (com.hp.hpl.jena.sparql.core.DatasetGraphWrapper) r0;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.core.DatasetGraphWrapper: com.hp.hpl.jena.sparql.core.DatasetGraph getWrapped()>();

        $r5 = staticinvoke <com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: com.hp.hpl.jena.sparql.engine.QueryEngineFactory findFactory(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.sparql.util.Context)>(r3, $r2, r4);

        $r7 = interfaceinvoke $r5.<com.hp.hpl.jena.sparql.engine.QueryEngineFactory: com.hp.hpl.jena.sparql.engine.Plan create(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.util.Context)>(r3, $r2, r6, r4);

        return $r7;
    }

    public boolean accept(com.hp.hpl.jena.sparql.algebra.Op, com.hp.hpl.jena.sparql.core.DatasetGraph, com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphWrapper $r1;
        com.hp.hpl.jena.sparql.core.DatasetGraph r0, $r2;
        com.hp.hpl.jena.sparql.util.Context r4;
        com.hp.hpl.jena.sparql.engine.QueryEngineFactory $r5;
        com.hp.hpl.jena.sparql.core.QueryEngineFactoryWrapper r6;
        com.hp.hpl.jena.sparql.algebra.Op r3;
        boolean $z0, $z1;

        r6 := @this: com.hp.hpl.jena.sparql.core.QueryEngineFactoryWrapper;

        r3 := @parameter0: com.hp.hpl.jena.sparql.algebra.Op;

        r0 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        r4 := @parameter2: com.hp.hpl.jena.sparql.util.Context;

        $z0 = r0 instanceof com.hp.hpl.jena.sparql.core.DatasetGraphWrapper;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = (com.hp.hpl.jena.sparql.core.DatasetGraphWrapper) r0;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.core.DatasetGraphWrapper: com.hp.hpl.jena.sparql.core.DatasetGraph getWrapped()>();

        $r5 = staticinvoke <com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: com.hp.hpl.jena.sparql.engine.QueryEngineFactory findFactory(com.hp.hpl.jena.sparql.algebra.Op,com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.sparql.util.Context)>(r3, $r2, r4);

        $z1 = interfaceinvoke $r5.<com.hp.hpl.jena.sparql.engine.QueryEngineFactory: boolean accept(com.hp.hpl.jena.sparql.algebra.Op,com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.sparql.util.Context)>(r3, $r2, r4);

        return $z1;
    }

    public com.hp.hpl.jena.sparql.engine.Plan create(com.hp.hpl.jena.sparql.algebra.Op, com.hp.hpl.jena.sparql.core.DatasetGraph, com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphWrapper $r1;
        com.hp.hpl.jena.sparql.engine.Plan $r7;
        com.hp.hpl.jena.sparql.core.DatasetGraph r0, $r2;
        com.hp.hpl.jena.sparql.util.Context r4;
        com.hp.hpl.jena.sparql.engine.binding.Binding r6;
        com.hp.hpl.jena.sparql.engine.QueryEngineFactory $r5;
        com.hp.hpl.jena.sparql.core.QueryEngineFactoryWrapper r8;
        com.hp.hpl.jena.sparql.algebra.Op r3;
        boolean $z0;

        r8 := @this: com.hp.hpl.jena.sparql.core.QueryEngineFactoryWrapper;

        r3 := @parameter0: com.hp.hpl.jena.sparql.algebra.Op;

        r0 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        r6 := @parameter2: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r4 := @parameter3: com.hp.hpl.jena.sparql.util.Context;

        $z0 = r0 instanceof com.hp.hpl.jena.sparql.core.DatasetGraphWrapper;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = (com.hp.hpl.jena.sparql.core.DatasetGraphWrapper) r0;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.core.DatasetGraphWrapper: com.hp.hpl.jena.sparql.core.DatasetGraph getWrapped()>();

        $r5 = staticinvoke <com.hp.hpl.jena.sparql.engine.QueryEngineRegistry: com.hp.hpl.jena.sparql.engine.QueryEngineFactory findFactory(com.hp.hpl.jena.sparql.algebra.Op,com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.sparql.util.Context)>(r3, $r2, r4);

        $r7 = interfaceinvoke $r5.<com.hp.hpl.jena.sparql.engine.QueryEngineFactory: com.hp.hpl.jena.sparql.engine.Plan create(com.hp.hpl.jena.sparql.algebra.Op,com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.util.Context)>(r3, $r2, r6, r4);

        return $r7;
    }
}
