public abstract class com.hp.hpl.jena.sparql.pfunction.library.ListBase extends com.hp.hpl.jena.sparql.pfunction.PropertyFunctionEval
{
    private com.hp.hpl.jena.sparql.pfunction.PropFuncArgType objFuncArgType;

    public void <init>(com.hp.hpl.jena.sparql.pfunction.PropFuncArgType)
    {
        com.hp.hpl.jena.sparql.pfunction.PropFuncArgType r1, $r2;
        com.hp.hpl.jena.sparql.pfunction.library.ListBase r0;

        r0 := @this: com.hp.hpl.jena.sparql.pfunction.library.ListBase;

        r1 := @parameter0: com.hp.hpl.jena.sparql.pfunction.PropFuncArgType;

        $r2 = <com.hp.hpl.jena.sparql.pfunction.PropFuncArgType: com.hp.hpl.jena.sparql.pfunction.PropFuncArgType PF_ARG_SINGLE>;

        specialinvoke r0.<com.hp.hpl.jena.sparql.pfunction.PropertyFunctionEval: void <init>(com.hp.hpl.jena.sparql.pfunction.PropFuncArgType,com.hp.hpl.jena.sparql.pfunction.PropFuncArgType)>($r2, r1);

        return;
    }

    public final com.hp.hpl.jena.sparql.engine.QueryIterator execEvaluated(com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.sparql.pfunction.PropFuncArg, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.pfunction.PropFuncArg, com.hp.hpl.jena.sparql.engine.ExecutionContext)
    {
        com.hp.hpl.jena.graph.Node $r1, r5;
        com.hp.hpl.jena.sparql.core.Var $r2;
        com.hp.hpl.jena.sparql.pfunction.PropFuncArg r0, r6;
        com.hp.hpl.jena.sparql.engine.binding.Binding r4;
        com.hp.hpl.jena.sparql.pfunction.library.ListBase r3;
        com.hp.hpl.jena.sparql.engine.ExecutionContext r7;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r8, $r9;
        boolean $z0;

        r3 := @this: com.hp.hpl.jena.sparql.pfunction.library.ListBase;

        r4 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r0 := @parameter1: com.hp.hpl.jena.sparql.pfunction.PropFuncArg;

        r5 := @parameter2: com.hp.hpl.jena.graph.Node;

        r6 := @parameter3: com.hp.hpl.jena.sparql.pfunction.PropFuncArg;

        r7 := @parameter4: com.hp.hpl.jena.sparql.engine.ExecutionContext;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.pfunction.PropFuncArg: com.hp.hpl.jena.graph.Node getArg()>();

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.core.Var: boolean isVar(com.hp.hpl.jena.graph.Node)>($r1);

        if $z0 != 0 goto label1;

        $r9 = virtualinvoke r3.<com.hp.hpl.jena.sparql.pfunction.library.ListBase: com.hp.hpl.jena.sparql.engine.QueryIterator execOneList(com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.pfunction.PropFuncArg,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r4, $r1, r5, r6, r7);

        return $r9;

     label1:
        $r2 = staticinvoke <com.hp.hpl.jena.sparql.core.Var: com.hp.hpl.jena.sparql.core.Var alloc(com.hp.hpl.jena.graph.Node)>($r1);

        $r8 = specialinvoke r3.<com.hp.hpl.jena.sparql.pfunction.library.ListBase: com.hp.hpl.jena.sparql.engine.QueryIterator listUnboundSubject(com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.core.Var,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.pfunction.PropFuncArg,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r4, $r2, r5, r6, r7);

        return $r8;
    }

    private com.hp.hpl.jena.sparql.engine.QueryIterator listUnboundSubject(com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.sparql.core.Var, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.pfunction.PropFuncArg, com.hp.hpl.jena.sparql.engine.ExecutionContext)
    {
        java.util.Set $r9;
        com.hp.hpl.jena.graph.Node $r1, r5;
        com.hp.hpl.jena.sparql.core.Var r4;
        com.hp.hpl.jena.sparql.pfunction.PropFuncArg r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding r3;
        java.util.List $r11;
        com.hp.hpl.jena.sparql.pfunction.library.ListBase r2;
        com.hp.hpl.jena.sparql.engine.ExecutionContext r6;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r7, $r10, $r12;
        com.hp.hpl.jena.graph.Graph $r8;
        boolean $z0, $z1;

        r2 := @this: com.hp.hpl.jena.sparql.pfunction.library.ListBase;

        r3 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r4 := @parameter1: com.hp.hpl.jena.sparql.core.Var;

        r5 := @parameter2: com.hp.hpl.jena.graph.Node;

        r0 := @parameter3: com.hp.hpl.jena.sparql.pfunction.PropFuncArg;

        r6 := @parameter4: com.hp.hpl.jena.sparql.engine.ExecutionContext;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.pfunction.PropFuncArg: boolean isList()>();

        if $z0 == 0 goto label1;

        $r11 = virtualinvoke r0.<com.hp.hpl.jena.sparql.pfunction.PropFuncArg: java.util.List getArgList()>();

        $r12 = virtualinvoke r2.<com.hp.hpl.jena.sparql.pfunction.library.ListBase: com.hp.hpl.jena.sparql.engine.QueryIterator execObjectList(com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.core.Var,com.hp.hpl.jena.graph.Node,java.util.List,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r3, r4, r5, $r11, r6);

        return $r12;

     label1:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.pfunction.PropFuncArg: com.hp.hpl.jena.graph.Node getArg()>();

        $z1 = staticinvoke <com.hp.hpl.jena.sparql.core.Var: boolean isVar(com.hp.hpl.jena.graph.Node)>($r1);

        if $z1 == 0 goto label2;

        $r8 = virtualinvoke r6.<com.hp.hpl.jena.sparql.engine.ExecutionContext: com.hp.hpl.jena.graph.Graph getActiveGraph()>();

        $r9 = staticinvoke <com.hp.hpl.jena.sparql.util.graph.GraphList: java.util.Set findAllLists(com.hp.hpl.jena.graph.Graph)>($r8);

        $r10 = virtualinvoke r2.<com.hp.hpl.jena.sparql.pfunction.library.ListBase: com.hp.hpl.jena.sparql.engine.QueryIterator allLists(com.hp.hpl.jena.sparql.engine.binding.Binding,java.util.Collection,com.hp.hpl.jena.sparql.core.Var,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.pfunction.PropFuncArg,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r3, $r9, r4, $r1, r0, r6);

        return $r10;

     label2:
        $r7 = virtualinvoke r2.<com.hp.hpl.jena.sparql.pfunction.library.ListBase: com.hp.hpl.jena.sparql.engine.QueryIterator execObjectBound(com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.core.Var,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r3, r4, r5, $r1, r6);

        return $r7;
    }

    protected com.hp.hpl.jena.sparql.engine.QueryIterator allLists(com.hp.hpl.jena.sparql.engine.binding.Binding, java.util.Collection, com.hp.hpl.jena.sparql.core.Var, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.pfunction.PropFuncArg, com.hp.hpl.jena.sparql.engine.ExecutionContext)
    {
        java.util.Iterator $r3;
        java.util.Collection r2;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIterConcat $r0;
        com.hp.hpl.jena.graph.Node r5, r10;
        com.hp.hpl.jena.sparql.core.Var r7;
        com.hp.hpl.jena.sparql.pfunction.PropFuncArg r11;
        com.hp.hpl.jena.sparql.engine.binding.Binding r6, $r8;
        java.lang.Object $r4;
        com.hp.hpl.jena.sparql.pfunction.library.ListBase r9;
        com.hp.hpl.jena.sparql.engine.ExecutionContext r1;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r12;
        boolean $z0;

        r9 := @this: com.hp.hpl.jena.sparql.pfunction.library.ListBase;

        r6 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r2 := @parameter1: java.util.Collection;

        r7 := @parameter2: com.hp.hpl.jena.sparql.core.Var;

        r10 := @parameter3: com.hp.hpl.jena.graph.Node;

        r11 := @parameter4: com.hp.hpl.jena.sparql.pfunction.PropFuncArg;

        r1 := @parameter5: com.hp.hpl.jena.sparql.engine.ExecutionContext;

        $r0 = new com.hp.hpl.jena.sparql.engine.iterator.QueryIterConcat;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterConcat: void <init>(com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r1);

        $r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.hp.hpl.jena.graph.Node) $r4;

        $r8 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingFactory: com.hp.hpl.jena.sparql.engine.binding.Binding binding(com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.core.Var,com.hp.hpl.jena.graph.Node)>(r6, r7, r5);

        $r12 = virtualinvoke r9.<com.hp.hpl.jena.sparql.pfunction.library.ListBase: com.hp.hpl.jena.sparql.engine.QueryIterator execOneList(com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.pfunction.PropFuncArg,com.hp.hpl.jena.sparql.engine.ExecutionContext)>($r8, r5, r10, r11, r1);

        virtualinvoke $r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterConcat: void add(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r12);

        goto label1;

     label2:
        return $r0;
    }

    protected abstract com.hp.hpl.jena.sparql.engine.QueryIterator execObjectBound(com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.sparql.core.Var, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.engine.ExecutionContext);

    protected abstract com.hp.hpl.jena.sparql.engine.QueryIterator execObjectList(com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.sparql.core.Var, com.hp.hpl.jena.graph.Node, java.util.List, com.hp.hpl.jena.sparql.engine.ExecutionContext);

    protected abstract com.hp.hpl.jena.sparql.engine.QueryIterator execOneList(com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.pfunction.PropFuncArg, com.hp.hpl.jena.sparql.engine.ExecutionContext);
}
