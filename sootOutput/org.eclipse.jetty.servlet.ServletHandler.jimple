public class org.eclipse.jetty.servlet.ServletHandler extends org.eclipse.jetty.server.handler.ScopedHandler
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    public static final java.lang.String __DEFAULT_SERVLET;
    private org.eclipse.jetty.servlet.ServletContextHandler _contextHandler;
    private org.eclipse.jetty.server.handler.ContextHandler$Context _servletContext;
    private org.eclipse.jetty.servlet.FilterHolder[] _filters;
    private org.eclipse.jetty.servlet.FilterMapping[] _filterMappings;
    private int _matchBeforeIndex;
    private int _matchAfterIndex;
    private boolean _filterChainsCached;
    private int _maxFilterChainsCacheSize;
    private boolean _startWithUnavailable;
    private org.eclipse.jetty.security.IdentityService _identityService;
    private org.eclipse.jetty.servlet.ServletHolder[] _servlets;
    private org.eclipse.jetty.servlet.ServletMapping[] _servletMappings;
    private final java.util.Map _filterNameMap;
    private java.util.List _filterPathMappings;
    private org.eclipse.jetty.util.MultiMap _filterNameMappings;
    private final java.util.Map _servletNameMap;
    private org.eclipse.jetty.http.PathMap _servletPathMap;
    protected final java.util.concurrent.ConcurrentMap[] _chainCache;
    protected final java.util.Queue[] _chainLRU;

    public void <init>()
    {
        java.util.concurrent.ConcurrentMap[] $r5;
        org.eclipse.jetty.servlet.ServletHandler r0;
        org.eclipse.jetty.servlet.FilterHolder[] $r1;
        java.util.Queue[] $r6;
        java.util.HashMap $r7, $r8;
        org.eclipse.jetty.servlet.ServletHolder[] $r2;
        int $i1, $i3;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        specialinvoke r0.<org.eclipse.jetty.server.handler.ScopedHandler: void <init>()>();

        $r1 = newarray (org.eclipse.jetty.servlet.FilterHolder)[0];

        r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterHolder[] _filters> = $r1;

        $i1 = (int) -1;

        r0.<org.eclipse.jetty.servlet.ServletHandler: int _matchBeforeIndex> = $i1;

        $i3 = (int) -1;

        r0.<org.eclipse.jetty.servlet.ServletHandler: int _matchAfterIndex> = $i3;

        r0.<org.eclipse.jetty.servlet.ServletHandler: boolean _filterChainsCached> = 1;

        r0.<org.eclipse.jetty.servlet.ServletHandler: int _maxFilterChainsCacheSize> = 512;

        r0.<org.eclipse.jetty.servlet.ServletHandler: boolean _startWithUnavailable> = 0;

        $r2 = newarray (org.eclipse.jetty.servlet.ServletHolder)[0];

        r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletHolder[] _servlets> = $r2;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.Map _filterNameMap> = $r7;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.Map _servletNameMap> = $r8;

        $r5 = newarray (java.util.concurrent.ConcurrentMap)[31];

        r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.concurrent.ConcurrentMap[] _chainCache> = $r5;

        $r6 = newarray (java.util.Queue)[31];

        r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.Queue[] _chainLRU> = $r6;

        return;
    }

    public void setServer(org.eclipse.jetty.server.Server)
    {
        org.eclipse.jetty.servlet.FilterHolder[] $r4, $r13;
        org.eclipse.jetty.util.component.Container $r3, $r5, $r7, $r9, $r12, $r15, $r18, $r21;
        org.eclipse.jetty.servlet.ServletHolder[] $r8, $r19;
        org.eclipse.jetty.server.Server $r1, r2, $r11, $r14, $r17, $r20;
        org.eclipse.jetty.servlet.ServletHandler r0;
        org.eclipse.jetty.servlet.FilterMapping[] $r6, $r16;
        org.eclipse.jetty.servlet.ServletMapping[] $r10, $r22;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r2 := @parameter0: org.eclipse.jetty.server.Server;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.server.Server getServer()>();

        if $r1 == null goto label1;

        if $r1 == r2 goto label1;

        $r11 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.server.Server getServer()>();

        $r12 = virtualinvoke $r11.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.component.Container getContainer()>();

        $r13 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterHolder[] _filters>;

        virtualinvoke $r12.<org.eclipse.jetty.util.component.Container: void update(java.lang.Object,java.lang.Object[],java.lang.Object[],java.lang.String,boolean)>(r0, $r13, null, "filter", 1);

        $r14 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.server.Server getServer()>();

        $r15 = virtualinvoke $r14.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.component.Container getContainer()>();

        $r16 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterMapping[] _filterMappings>;

        virtualinvoke $r15.<org.eclipse.jetty.util.component.Container: void update(java.lang.Object,java.lang.Object[],java.lang.Object[],java.lang.String,boolean)>(r0, $r16, null, "filterMapping", 1);

        $r17 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.server.Server getServer()>();

        $r18 = virtualinvoke $r17.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.component.Container getContainer()>();

        $r19 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletHolder[] _servlets>;

        virtualinvoke $r18.<org.eclipse.jetty.util.component.Container: void update(java.lang.Object,java.lang.Object[],java.lang.Object[],java.lang.String,boolean)>(r0, $r19, null, "servlet", 1);

        $r20 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.server.Server getServer()>();

        $r21 = virtualinvoke $r20.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.component.Container getContainer()>();

        $r22 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletMapping[] _servletMappings>;

        virtualinvoke $r21.<org.eclipse.jetty.util.component.Container: void update(java.lang.Object,java.lang.Object[],java.lang.Object[],java.lang.String,boolean)>(r0, $r22, null, "servletMapping", 1);

     label1:
        specialinvoke r0.<org.eclipse.jetty.server.handler.ScopedHandler: void setServer(org.eclipse.jetty.server.Server)>(r2);

        if r2 == null goto label2;

        if $r1 == r2 goto label2;

        $r3 = virtualinvoke r2.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.component.Container getContainer()>();

        $r4 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterHolder[] _filters>;

        virtualinvoke $r3.<org.eclipse.jetty.util.component.Container: void update(java.lang.Object,java.lang.Object[],java.lang.Object[],java.lang.String,boolean)>(r0, null, $r4, "filter", 1);

        $r5 = virtualinvoke r2.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.component.Container getContainer()>();

        $r6 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterMapping[] _filterMappings>;

        virtualinvoke $r5.<org.eclipse.jetty.util.component.Container: void update(java.lang.Object,java.lang.Object[],java.lang.Object[],java.lang.String,boolean)>(r0, null, $r6, "filterMapping", 1);

        $r7 = virtualinvoke r2.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.component.Container getContainer()>();

        $r8 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletHolder[] _servlets>;

        virtualinvoke $r7.<org.eclipse.jetty.util.component.Container: void update(java.lang.Object,java.lang.Object[],java.lang.Object[],java.lang.String,boolean)>(r0, null, $r8, "servlet", 1);

        $r9 = virtualinvoke r2.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.component.Container getContainer()>();

        $r10 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletMapping[] _servletMappings>;

        virtualinvoke $r9.<org.eclipse.jetty.util.component.Container: void update(java.lang.Object,java.lang.Object[],java.lang.Object[],java.lang.String,boolean)>(r0, null, $r10, "servletMapping", 1);

     label2:
        return;
    }

    protected synchronized void doStart() throws java.lang.Exception
    {
        org.eclipse.jetty.servlet.ServletContextHandler $r4, $r5, $r6, $r7, $r8, $r29;
        java.util.Queue[] $r20, $r22, $r24, $r26, $r28;
        org.eclipse.jetty.server.handler.ContextHandler$Context $r1, $r2, $r3;
        org.eclipse.jetty.security.SecurityHandler r31;
        boolean $z0, $z1;
        org.eclipse.jetty.servlet.ServletHandler r0;
        java.util.concurrent.ConcurrentHashMap $r9, $r11, $r13, $r15, $r17;
        java.util.concurrent.ConcurrentLinkedQueue $r19, $r21, $r23, $r25, $r27;
        org.eclipse.jetty.server.Handler $r30;
        org.eclipse.jetty.security.IdentityService $r32;
        java.util.concurrent.ConcurrentMap[] $r10, $r12, $r14, $r16, $r18;
        org.eclipse.jetty.server.handler.ContextHandler $r33;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        $r1 = staticinvoke <org.eclipse.jetty.server.handler.ContextHandler: org.eclipse.jetty.server.handler.ContextHandler$Context getCurrentContext()>();

        r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.server.handler.ContextHandler$Context _servletContext> = $r1;

        $r2 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.server.handler.ContextHandler$Context _servletContext>;

        if $r2 != null goto label1;

        $r33 = null;

        goto label2;

     label1:
        $r3 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.server.handler.ContextHandler$Context _servletContext>;

        $r33 = virtualinvoke $r3.<org.eclipse.jetty.server.handler.ContextHandler$Context: org.eclipse.jetty.server.handler.ContextHandler getContextHandler()>();

     label2:
        $r4 = (org.eclipse.jetty.servlet.ServletContextHandler) $r33;

        $r5 = (org.eclipse.jetty.servlet.ServletContextHandler) $r4;

        r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletContextHandler _contextHandler> = $r5;

        $r6 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletContextHandler _contextHandler>;

        if $r6 == null goto label3;

        $r29 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletContextHandler _contextHandler>;

        $r30 = virtualinvoke $r29.<org.eclipse.jetty.servlet.ServletContextHandler: org.eclipse.jetty.server.Handler getChildHandlerByClass(java.lang.Class)>(class "Lorg/eclipse/jetty/security/SecurityHandler;");

        r31 = (org.eclipse.jetty.security.SecurityHandler) $r30;

        if r31 == null goto label3;

        $r32 = virtualinvoke r31.<org.eclipse.jetty.security.SecurityHandler: org.eclipse.jetty.security.IdentityService getIdentityService()>();

        r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.security.IdentityService _identityService> = $r32;

     label3:
        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: void updateNameMappings()>();

        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: void updateMappings()>();

        $z1 = r0.<org.eclipse.jetty.servlet.ServletHandler: boolean _filterChainsCached>;

        if $z1 == 0 goto label4;

        $r10 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.concurrent.ConcurrentMap[] _chainCache>;

        $r9 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r9.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        $r10[1] = $r9;

        $r12 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.concurrent.ConcurrentMap[] _chainCache>;

        $r11 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r11.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        $r12[2] = $r11;

        $r14 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.concurrent.ConcurrentMap[] _chainCache>;

        $r13 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r13.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        $r14[4] = $r13;

        $r16 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.concurrent.ConcurrentMap[] _chainCache>;

        $r15 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r15.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        $r16[8] = $r15;

        $r18 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.concurrent.ConcurrentMap[] _chainCache>;

        $r17 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r17.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        $r18[16] = $r17;

        $r20 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.Queue[] _chainLRU>;

        $r19 = new java.util.concurrent.ConcurrentLinkedQueue;

        specialinvoke $r19.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>();

        $r20[1] = $r19;

        $r22 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.Queue[] _chainLRU>;

        $r21 = new java.util.concurrent.ConcurrentLinkedQueue;

        specialinvoke $r21.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>();

        $r22[2] = $r21;

        $r24 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.Queue[] _chainLRU>;

        $r23 = new java.util.concurrent.ConcurrentLinkedQueue;

        specialinvoke $r23.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>();

        $r24[4] = $r23;

        $r26 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.Queue[] _chainLRU>;

        $r25 = new java.util.concurrent.ConcurrentLinkedQueue;

        specialinvoke $r25.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>();

        $r26[8] = $r25;

        $r28 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.Queue[] _chainLRU>;

        $r27 = new java.util.concurrent.ConcurrentLinkedQueue;

        specialinvoke $r27.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>();

        $r28[16] = $r27;

     label4:
        specialinvoke r0.<org.eclipse.jetty.server.handler.ScopedHandler: void doStart()>();

        $r7 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletContextHandler _contextHandler>;

        if $r7 == null goto label5;

        $r8 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletContextHandler _contextHandler>;

        $z0 = $r8 instanceof org.eclipse.jetty.servlet.ServletContextHandler;

        if $z0 != 0 goto label6;

     label5:
        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: void initialize()>();

     label6:
        return;
    }

    protected synchronized void doStop() throws java.lang.Exception
    {
        org.eclipse.jetty.servlet.FilterHolder[] $r1, $r6, $r7;
        org.eclipse.jetty.servlet.ServletHolder[] $r2, $r3, $r4;
        org.eclipse.jetty.servlet.FilterHolder $r8;
        int i0, $i1, i2, $i3, $i5, $i7;
        org.eclipse.jetty.servlet.ServletHandler r0;
        org.eclipse.jetty.servlet.ServletHolder $r5;
        java.lang.Exception $r9, $r11;
        org.eclipse.jetty.util.log.Logger $r10, $r12;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        specialinvoke r0.<org.eclipse.jetty.server.handler.ScopedHandler: void doStop()>();

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterHolder[] _filters>;

        if $r1 == null goto label05;

        $r6 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterHolder[] _filters>;

        i0 = lengthof $r6;

     label01:
        $i1 = i0;

        $i5 = (int) -1;

        i0 = i0 + $i5;

        if $i1 <= 0 goto label05;

     label02:
        $r7 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterHolder[] _filters>;

        $r8 = $r7[i0];

        virtualinvoke $r8.<org.eclipse.jetty.servlet.FilterHolder: void stop()>();

     label03:
        goto label01;

     label04:
        $r11 := @caughtexception;

        $r12 = <org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r12.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>("EXCEPTION ", $r11);

        goto label01;

     label05:
        $r2 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletHolder[] _servlets>;

        if $r2 == null goto label10;

        $r3 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletHolder[] _servlets>;

        i2 = lengthof $r3;

     label06:
        $i3 = i2;

        $i7 = (int) -1;

        i2 = i2 + $i7;

        if $i3 <= 0 goto label10;

     label07:
        $r4 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletHolder[] _servlets>;

        $r5 = $r4[i2];

        virtualinvoke $r5.<org.eclipse.jetty.servlet.ServletHolder: void stop()>();

     label08:
        goto label06;

     label09:
        $r9 := @caughtexception;

        $r10 = <org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r10.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>("EXCEPTION ", $r9);

        goto label06;

     label10:
        r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.List _filterPathMappings> = null;

        r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.MultiMap _filterNameMappings> = null;

        r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.http.PathMap _servletPathMap> = null;

        return;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    org.eclipse.jetty.security.IdentityService getIdentityService()
    {
        org.eclipse.jetty.security.IdentityService $r1;
        org.eclipse.jetty.servlet.ServletHandler r0;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.security.IdentityService _identityService>;

        return $r1;
    }

    public java.lang.Object getContextLog()
    {
        org.eclipse.jetty.servlet.ServletHandler r0;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        return null;
    }

    public org.eclipse.jetty.servlet.FilterMapping[] getFilterMappings()
    {
        org.eclipse.jetty.servlet.ServletHandler r0;
        org.eclipse.jetty.servlet.FilterMapping[] $r1;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterMapping[] _filterMappings>;

        return $r1;
    }

    public org.eclipse.jetty.servlet.FilterHolder[] getFilters()
    {
        org.eclipse.jetty.servlet.FilterHolder[] $r1;
        org.eclipse.jetty.servlet.ServletHandler r0;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterHolder[] _filters>;

        return $r1;
    }

    public org.eclipse.jetty.http.PathMap$Entry getHolderEntry(java.lang.String)
    {
        org.eclipse.jetty.http.PathMap$Entry $r4;
        org.eclipse.jetty.servlet.ServletHandler r0;
        java.lang.String r2;
        org.eclipse.jetty.http.PathMap $r1, $r3;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.http.PathMap _servletPathMap>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.http.PathMap _servletPathMap>;

        $r4 = virtualinvoke $r3.<org.eclipse.jetty.http.PathMap: org.eclipse.jetty.http.PathMap$Entry getMatch(java.lang.String)>(r2);

        return $r4;
    }

    public javax.servlet.ServletContext getServletContext()
    {
        org.eclipse.jetty.servlet.ServletHandler r0;
        org.eclipse.jetty.server.handler.ContextHandler$Context $r1;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.server.handler.ContextHandler$Context _servletContext>;

        return $r1;
    }

    public org.eclipse.jetty.servlet.ServletMapping[] getServletMappings()
    {
        org.eclipse.jetty.servlet.ServletHandler r0;
        org.eclipse.jetty.servlet.ServletMapping[] $r1;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletMapping[] _servletMappings>;

        return $r1;
    }

    public org.eclipse.jetty.servlet.ServletMapping getServletMapping(java.lang.String)
    {
        org.eclipse.jetty.servlet.ServletHandler r0;
        java.lang.String[] $r4;
        org.eclipse.jetty.servlet.ServletMapping[] $r1, r2;
        int i0, i1, i2, i3;
        java.lang.String r5, r6;
        org.eclipse.jetty.servlet.ServletMapping r3, r7;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r6 := @parameter0: java.lang.String;

        r7 = null;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletMapping[] _servletMappings>;

        if $r1 == null goto label5;

        r2 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletMapping[] _servletMappings>;

        i0 = lengthof r2;

        i2 = 0;

     label1:
        if i2 >= i0 goto label5;

        r3 = r2[i2];

        $r4 = virtualinvoke r3.<org.eclipse.jetty.servlet.ServletMapping: java.lang.String[] getPathSpecs()>();

        if $r4 == null goto label4;

        i1 = lengthof $r4;

        i3 = 0;

     label2:
        if i3 >= i1 goto label4;

        r5 = $r4[i3];

        $z0 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z0 == 0 goto label3;

        r7 = r3;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        return r7;
    }

    public org.eclipse.jetty.servlet.ServletHolder[] getServlets()
    {
        org.eclipse.jetty.servlet.ServletHandler r0;
        org.eclipse.jetty.servlet.ServletHolder[] $r1;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletHolder[] _servlets>;

        return $r1;
    }

    public org.eclipse.jetty.servlet.ServletHolder getServlet(java.lang.String)
    {
        org.eclipse.jetty.servlet.ServletHandler r0;
        java.util.Map $r2;
        org.eclipse.jetty.servlet.ServletHolder $r4;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.Map _servletNameMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.eclipse.jetty.servlet.ServletHolder) $r3;

        return $r4;
    }

    public void doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.io.IOException, javax.servlet.ServletException
    {
        org.eclipse.jetty.server.Request r0;
        java.util.Map $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.eclipse.jetty.http.PathMap$Entry $r22;
        org.eclipse.jetty.servlet.ServletHandler r5;
        org.eclipse.jetty.servlet.ServletHolder r31;
        java.lang.Throwable $r29;
        java.lang.Object[] $r17;
        javax.servlet.http.HttpServletRequest r12;
        java.lang.String $r1, $r2, r4, $r19, $r20, $r21, r25, $r26, $r27, $r33;
        org.eclipse.jetty.server.UserIdentity$Scope $r9, r32;
        javax.servlet.http.HttpServletResponse r13;
        org.eclipse.jetty.server.handler.ScopedHandler $r10, $r11, $r15, $r16;
        javax.servlet.DispatcherType $r3, $r14, $r28, $r30;
        java.lang.Object $r7, $r23, $r24;
        org.eclipse.jetty.util.log.Logger $r8, $r18;

        r5 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r4 := @parameter0: java.lang.String;

        r0 := @parameter1: org.eclipse.jetty.server.Request;

        r12 := @parameter2: javax.servlet.http.HttpServletRequest;

        r13 := @parameter3: javax.servlet.http.HttpServletResponse;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.server.Request: java.lang.String getServletPath()>();

        $r2 = virtualinvoke r0.<org.eclipse.jetty.server.Request: java.lang.String getPathInfo()>();

        $r3 = virtualinvoke r0.<org.eclipse.jetty.server.Request: javax.servlet.DispatcherType getDispatcherType()>();

        r31 = null;

        r32 = null;

        $z0 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 == 0 goto label05;

        $r22 = virtualinvoke r5.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.http.PathMap$Entry getHolderEntry(java.lang.String)>(r4);

        if $r22 == null goto label04;

        $r23 = virtualinvoke $r22.<org.eclipse.jetty.http.PathMap$Entry: java.lang.Object getValue()>();

        r31 = (org.eclipse.jetty.servlet.ServletHolder) $r23;

        $r24 = virtualinvoke $r22.<org.eclipse.jetty.http.PathMap$Entry: java.lang.Object getKey()>();

        r25 = (java.lang.String) $r24;

        $r26 = virtualinvoke $r22.<org.eclipse.jetty.http.PathMap$Entry: java.lang.String getMapped()>();

        if $r26 == null goto label01;

        $r33 = virtualinvoke $r22.<org.eclipse.jetty.http.PathMap$Entry: java.lang.String getMapped()>();

        goto label02;

     label01:
        $r33 = staticinvoke <org.eclipse.jetty.http.PathMap: java.lang.String pathMatch(java.lang.String,java.lang.String)>(r25, r4);

     label02:
        $r27 = staticinvoke <org.eclipse.jetty.http.PathMap: java.lang.String pathInfo(java.lang.String,java.lang.String)>(r25, r4);

        $r28 = <javax.servlet.DispatcherType: javax.servlet.DispatcherType INCLUDE>;

        $z4 = virtualinvoke $r28.<javax.servlet.DispatcherType: boolean equals(java.lang.Object)>($r3);

        if $z4 == 0 goto label03;

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setAttribute(java.lang.String,java.lang.Object)>("javax.servlet.include.servlet_path", $r33);

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setAttribute(java.lang.String,java.lang.Object)>("javax.servlet.include.path_info", $r27);

        goto label04;

     label03:
        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setServletPath(java.lang.String)>($r33);

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setPathInfo(java.lang.String)>($r27);

     label04:
        goto label06;

     label05:
        $r6 = r5.<org.eclipse.jetty.servlet.ServletHandler: java.util.Map _servletNameMap>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        r31 = (org.eclipse.jetty.servlet.ServletHolder) $r7;

     label06:
        $r8 = <org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $z1 = interfaceinvoke $r8.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label07;

        $r18 = <org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r17 = newarray (java.lang.Object)[4];

        $r19 = virtualinvoke r0.<org.eclipse.jetty.server.Request: java.lang.String getContextPath()>();

        $r17[0] = $r19;

        $r20 = virtualinvoke r0.<org.eclipse.jetty.server.Request: java.lang.String getServletPath()>();

        $r17[1] = $r20;

        $r21 = virtualinvoke r0.<org.eclipse.jetty.server.Request: java.lang.String getPathInfo()>();

        $r17[2] = $r21;

        $r17[3] = r31;

        interfaceinvoke $r18.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("servlet {}|{}|{} -> {}", $r17);

     label07:
        $r9 = virtualinvoke r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.UserIdentity$Scope getUserIdentityScope()>();

        r32 = $r9;

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setUserIdentityScope(org.eclipse.jetty.server.UserIdentity$Scope)>(r31);

        $z2 = virtualinvoke r5.<org.eclipse.jetty.servlet.ServletHandler: boolean never()>();

        if $z2 == 0 goto label08;

        virtualinvoke r5.<org.eclipse.jetty.servlet.ServletHandler: void nextScope(java.lang.String,org.eclipse.jetty.server.Request,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r4, r0, r12, r13);

        goto label11;

     label08:
        $r10 = r5.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.server.handler.ScopedHandler _nextScope>;

        if $r10 == null goto label09;

        $r16 = r5.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.server.handler.ScopedHandler _nextScope>;

        virtualinvoke $r16.<org.eclipse.jetty.server.handler.ScopedHandler: void doScope(java.lang.String,org.eclipse.jetty.server.Request,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r4, r0, r12, r13);

        goto label11;

     label09:
        $r11 = r5.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.server.handler.ScopedHandler _outerScope>;

        if $r11 == null goto label10;

        $r15 = r5.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.server.handler.ScopedHandler _outerScope>;

        virtualinvoke $r15.<org.eclipse.jetty.server.handler.ScopedHandler: void doHandle(java.lang.String,org.eclipse.jetty.server.Request,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r4, r0, r12, r13);

        goto label11;

     label10:
        virtualinvoke r5.<org.eclipse.jetty.servlet.ServletHandler: void doHandle(java.lang.String,org.eclipse.jetty.server.Request,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r4, r0, r12, r13);

     label11:
        if $r9 == null goto label12;

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setUserIdentityScope(org.eclipse.jetty.server.UserIdentity$Scope)>($r9);

     label12:
        $r14 = <javax.servlet.DispatcherType: javax.servlet.DispatcherType INCLUDE>;

        $z3 = virtualinvoke $r14.<javax.servlet.DispatcherType: boolean equals(java.lang.Object)>($r3);

        if $z3 != 0 goto label17;

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setServletPath(java.lang.String)>($r1);

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setPathInfo(java.lang.String)>($r2);

        goto label17;

     label13:
        $r29 := @caughtexception;

     label14:
        if r32 == null goto label15;

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setUserIdentityScope(org.eclipse.jetty.server.UserIdentity$Scope)>(r32);

     label15:
        $r30 = <javax.servlet.DispatcherType: javax.servlet.DispatcherType INCLUDE>;

        $z5 = virtualinvoke $r30.<javax.servlet.DispatcherType: boolean equals(java.lang.Object)>($r3);

        if $z5 != 0 goto label16;

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setServletPath(java.lang.String)>($r1);

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setPathInfo(java.lang.String)>($r2);

     label16:
        throw $r29;

     label17:
        return;

        catch java.lang.Throwable from label07 to label11 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public void doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.io.IOException, javax.servlet.ServletException
    {
        org.eclipse.jetty.server.Request r0;
        org.eclipse.jetty.io.EofException $r50, $r63;
        org.eclipse.jetty.servlet.ServletHolder r3;
        java.lang.Exception $r31;
        java.lang.StringBuilder $r18, $r20, $r22, $r36, $r38, $r39;
        java.lang.Throwable $r15, $r55, r69;
        org.eclipse.jetty.server.Handler $r10;
        java.lang.Object[] $r29, $r41, $r49, $r66;
        java.lang.Error $r16;
        javax.servlet.http.HttpServletRequest r5;
        org.eclipse.jetty.continuation.ContinuationThrowable $r61;
        java.lang.String r4, $r21, $r23, $r28, $r35, $r40, $r44, $r46, $r48;
        org.eclipse.jetty.server.UserIdentity$Scope $r2;
        java.io.IOException $r60;
        java.lang.RuntimeException $r59;
        org.eclipse.jetty.server.ServletRequestHttpWrapper $r8;
        javax.servlet.UnavailableException r70;
        javax.servlet.FilterChain r64;
        javax.servlet.ServletException $r54, $r58;
        org.eclipse.jetty.io.RuntimeIOException $r51, $r62;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22;
        org.eclipse.jetty.servlet.ServletHandler r9;
        javax.servlet.ServletResponse r68;
        org.eclipse.jetty.server.ServletResponseHttpWrapper $r7;
        int $i0, $i1;
        javax.servlet.ServletRequest r67;
        javax.servlet.http.HttpServletResponse r6;
        org.eclipse.jetty.servlet.FilterMapping[] $r11, $r12, $r13, $r14;
        org.eclipse.jetty.http.HttpException $r52;
        javax.servlet.DispatcherType $r1, $r17, $r30, $r32, $r57;
        java.lang.Class $r26, $r42;
        org.eclipse.jetty.util.log.Logger $r19, $r24, $r25, $r27, $r33, $r34, $r37, $r43, $r45, $r47, $r53, $r56, $r65;

        r9 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r4 := @parameter0: java.lang.String;

        r0 := @parameter1: org.eclipse.jetty.server.Request;

        r5 := @parameter2: javax.servlet.http.HttpServletRequest;

        r6 := @parameter3: javax.servlet.http.HttpServletResponse;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.server.Request: javax.servlet.DispatcherType getDispatcherType()>();

        $r2 = virtualinvoke r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.UserIdentity$Scope getUserIdentityScope()>();

        r3 = (org.eclipse.jetty.servlet.ServletHolder) $r2;

        r64 = null;

        $z0 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 == 0 goto label01;

        if r3 == null goto label02;

        $r13 = r9.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterMapping[] _filterMappings>;

        if $r13 == null goto label02;

        $r14 = r9.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterMapping[] _filterMappings>;

        $i1 = lengthof $r14;

        if $i1 <= 0 goto label02;

        r64 = specialinvoke r9.<org.eclipse.jetty.servlet.ServletHandler: javax.servlet.FilterChain getFilterChain(org.eclipse.jetty.server.Request,java.lang.String,org.eclipse.jetty.servlet.ServletHolder)>(r0, r4, r3);

        goto label02;

     label01:
        if r3 == null goto label02;

        $r11 = r9.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterMapping[] _filterMappings>;

        if $r11 == null goto label02;

        $r12 = r9.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterMapping[] _filterMappings>;

        $i0 = lengthof $r12;

        if $i0 <= 0 goto label02;

        r64 = specialinvoke r9.<org.eclipse.jetty.servlet.ServletHandler: javax.servlet.FilterChain getFilterChain(org.eclipse.jetty.server.Request,java.lang.String,org.eclipse.jetty.servlet.ServletHolder)>(r0, null, r3);

     label02:
        $r65 = <org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r66 = newarray (java.lang.Object)[1];

        $r66[0] = r64;

        interfaceinvoke $r65.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("chain={}", $r66);

     label03:
        if r3 != null goto label05;

        $r10 = virtualinvoke r9.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.server.Handler getHandler()>();

        if $r10 != null goto label04;

        virtualinvoke r9.<org.eclipse.jetty.servlet.ServletHandler: void notFound(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r5, r6);

        goto label09;

     label04:
        virtualinvoke r9.<org.eclipse.jetty.servlet.ServletHandler: void nextHandle(java.lang.String,org.eclipse.jetty.server.Request,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r4, r0, r5, r6);

        goto label09;

     label05:
        r67 = r5;

        $z1 = r5 instanceof org.eclipse.jetty.server.ServletRequestHttpWrapper;

        if $z1 == 0 goto label06;

        $r8 = (org.eclipse.jetty.server.ServletRequestHttpWrapper) r5;

        r67 = virtualinvoke $r8.<org.eclipse.jetty.server.ServletRequestHttpWrapper: javax.servlet.ServletRequest getRequest()>();

     label06:
        r68 = r6;

        $z2 = r6 instanceof org.eclipse.jetty.server.ServletResponseHttpWrapper;

        if $z2 == 0 goto label07;

        $r7 = (org.eclipse.jetty.server.ServletResponseHttpWrapper) r6;

        r68 = virtualinvoke $r7.<org.eclipse.jetty.server.ServletResponseHttpWrapper: javax.servlet.ServletResponse getResponse()>();

     label07:
        if r64 == null goto label08;

        interfaceinvoke r64.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r67, r68);

        goto label09;

     label08:
        virtualinvoke r3.<org.eclipse.jetty.servlet.ServletHolder: void handle(org.eclipse.jetty.server.Request,javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r0, r67, r68);

     label09:
        if r3 == null goto label39;

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setHandled(boolean)>(1);

        goto label39;

     label10:
        $r63 := @caughtexception;

        throw $r63;

     label11:
        $r62 := @caughtexception;

        throw $r62;

     label12:
        $r61 := @caughtexception;

        throw $r61;

     label13:
        $r31 := @caughtexception;

        $r32 = <javax.servlet.DispatcherType: javax.servlet.DispatcherType REQUEST>;

        $z7 = virtualinvoke $r32.<javax.servlet.DispatcherType: boolean equals(java.lang.Object)>($r1);

        if $z7 != 0 goto label16;

        $r57 = <javax.servlet.DispatcherType: javax.servlet.DispatcherType ASYNC>;

        $z16 = virtualinvoke $r57.<javax.servlet.DispatcherType: boolean equals(java.lang.Object)>($r1);

        if $z16 != 0 goto label16;

        $z17 = $r31 instanceof java.io.IOException;

        if $z17 == 0 goto label14;

        $r60 = (java.io.IOException) $r31;

        throw $r60;

     label14:
        $z18 = $r31 instanceof java.lang.RuntimeException;

        if $z18 == 0 goto label15;

        $r59 = (java.lang.RuntimeException) $r31;

        throw $r59;

     label15:
        $z19 = $r31 instanceof javax.servlet.ServletException;

        if $z19 == 0 goto label16;

        $r58 = (javax.servlet.ServletException) $r31;

        throw $r58;

     label16:
        r69 = $r31;

        $z20 = $r31 instanceof javax.servlet.UnavailableException;

        if $z20 == 0 goto label17;

        $r56 = <org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r56.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>($r31);

        goto label18;

     label17:
        $z8 = $r31 instanceof javax.servlet.ServletException;

        if $z8 == 0 goto label18;

        $r53 = <org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r53.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.Throwable)>($r31);

        $r54 = (javax.servlet.ServletException) $r31;

        $r55 = virtualinvoke $r54.<javax.servlet.ServletException: java.lang.Throwable getRootCause()>();

        if $r55 == null goto label18;

        r69 = $r55;

     label18:
        $z21 = r69 instanceof org.eclipse.jetty.http.HttpException;

        if $z21 == 0 goto label19;

        $r52 = (org.eclipse.jetty.http.HttpException) r69;

        throw $r52;

     label19:
        $z9 = r69 instanceof org.eclipse.jetty.io.RuntimeIOException;

        if $z9 == 0 goto label20;

        $r51 = (org.eclipse.jetty.io.RuntimeIOException) r69;

        throw $r51;

     label20:
        $z10 = r69 instanceof org.eclipse.jetty.io.EofException;

        if $z10 == 0 goto label21;

        $r50 = (org.eclipse.jetty.io.EofException) r69;

        throw $r50;

     label21:
        $r33 = <org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $z11 = interfaceinvoke $r33.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z11 == 0 goto label22;

        $r45 = <org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r46 = interfaceinvoke r5.<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>();

        interfaceinvoke $r45.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>($r46, r69);

        $r47 = <org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r48 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();

        $r49 = newarray (java.lang.Object)[0];

        interfaceinvoke $r47.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r48, $r49);

        goto label25;

     label22:
        $z12 = r69 instanceof java.io.IOException;

        if $z12 != 0 goto label23;

        $z15 = r69 instanceof javax.servlet.UnavailableException;

        if $z15 == 0 goto label24;

     label23:
        $r34 = <org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r35 = interfaceinvoke r5.<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>();

        interfaceinvoke $r34.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Throwable)>($r35, r69);

        goto label25;

     label24:
        $r43 = <org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r44 = interfaceinvoke r5.<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>();

        interfaceinvoke $r43.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>($r44, r69);

     label25:
        $z22 = interfaceinvoke r6.<javax.servlet.http.HttpServletResponse: boolean isCommitted()>();

        if $z22 != 0 goto label29;

        $r42 = virtualinvoke r69.<java.lang.Object: java.lang.Class getClass()>();

        interfaceinvoke r5.<javax.servlet.http.HttpServletRequest: void setAttribute(java.lang.String,java.lang.Object)>("javax.servlet.error.exception_type", $r42);

        interfaceinvoke r5.<javax.servlet.http.HttpServletRequest: void setAttribute(java.lang.String,java.lang.Object)>("javax.servlet.error.exception", r69);

        $z13 = r69 instanceof javax.servlet.UnavailableException;

        if $z13 == 0 goto label28;

        r70 = (javax.servlet.UnavailableException) r69;

        $z14 = virtualinvoke r70.<javax.servlet.UnavailableException: boolean isPermanent()>();

        if $z14 == 0 goto label26;

        interfaceinvoke r6.<javax.servlet.http.HttpServletResponse: void sendError(int)>(404);

        goto label27;

     label26:
        interfaceinvoke r6.<javax.servlet.http.HttpServletResponse: void sendError(int)>(503);

     label27:
        goto label30;

     label28:
        interfaceinvoke r6.<javax.servlet.http.HttpServletResponse: void sendError(int)>(500);

        goto label30;

     label29:
        $r37 = <org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Response already committed for handling ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r69);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        $r41 = newarray (java.lang.Object)[0];

        interfaceinvoke $r37.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r40, $r41);

     label30:
        if r3 == null goto label39;

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setHandled(boolean)>(1);

        goto label39;

     label31:
        $r16 := @caughtexception;

        $r17 = <javax.servlet.DispatcherType: javax.servlet.DispatcherType REQUEST>;

        $z3 = virtualinvoke $r17.<javax.servlet.DispatcherType: boolean equals(java.lang.Object)>($r1);

        if $z3 != 0 goto label32;

        $r30 = <javax.servlet.DispatcherType: javax.servlet.DispatcherType ASYNC>;

        $z6 = virtualinvoke $r30.<javax.servlet.DispatcherType: boolean equals(java.lang.Object)>($r1);

        if $z6 != 0 goto label32;

        throw $r16;

     label32:
        $r19 = <org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error for ");

        $r21 = interfaceinvoke r5.<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r19.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>($r23, $r16);

        $r24 = <org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $z4 = interfaceinvoke $r24.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z4 == 0 goto label33;

        $r27 = <org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r28 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();

        $r29 = newarray (java.lang.Object)[0];

        interfaceinvoke $r27.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r28, $r29);

     label33:
        $z5 = interfaceinvoke r6.<javax.servlet.http.HttpServletResponse: boolean isCommitted()>();

        if $z5 != 0 goto label34;

        $r26 = virtualinvoke $r16.<java.lang.Object: java.lang.Class getClass()>();

        interfaceinvoke r5.<javax.servlet.http.HttpServletRequest: void setAttribute(java.lang.String,java.lang.Object)>("javax.servlet.error.exception_type", $r26);

        interfaceinvoke r5.<javax.servlet.http.HttpServletRequest: void setAttribute(java.lang.String,java.lang.Object)>("javax.servlet.error.exception", $r16);

        interfaceinvoke r6.<javax.servlet.http.HttpServletResponse: void sendError(int)>(500);

        goto label35;

     label34:
        $r25 = <org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r25.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Throwable)>("Response already committed for handling ", $r16);

     label35:
        if r3 == null goto label39;

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setHandled(boolean)>(1);

        goto label39;

     label36:
        $r15 := @caughtexception;

     label37:
        if r3 == null goto label38;

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setHandled(boolean)>(1);

     label38:
        throw $r15;

     label39:
        return;

        catch org.eclipse.jetty.io.EofException from label03 to label09 with label10;
        catch org.eclipse.jetty.io.RuntimeIOException from label03 to label09 with label11;
        catch org.eclipse.jetty.continuation.ContinuationThrowable from label03 to label09 with label12;
        catch java.lang.Exception from label03 to label09 with label13;
        catch java.lang.Error from label03 to label09 with label31;
        catch java.lang.Throwable from label03 to label09 with label36;
        catch java.lang.Throwable from label10 to label30 with label36;
        catch java.lang.Throwable from label31 to label35 with label36;
        catch java.lang.Throwable from label36 to label37 with label36;
    }

    private javax.servlet.FilterChain getFilterChain(org.eclipse.jetty.server.Request, java.lang.String, org.eclipse.jetty.servlet.ServletHolder)
    {
        org.eclipse.jetty.server.Request r2;
        javax.servlet.FilterChain r36, r41;
        java.util.Queue[] $r8;
        org.eclipse.jetty.servlet.FilterHolder $r23, $r25, $r30;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.eclipse.jetty.servlet.ServletHandler r4;
        org.eclipse.jetty.servlet.ServletHolder r5;
        org.eclipse.jetty.servlet.ServletHandler$Chain $r6;
        java.util.List $r26, $r27, $r28;
        java.util.Queue $r13;
        org.eclipse.jetty.servlet.ServletHandler$CachedChain $r11;
        java.util.concurrent.ConcurrentMap $r12, $r33;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, $i13;
        java.lang.String r0, r1, r10, $r18, $r35;
        java.util.concurrent.ConcurrentMap[] $r7, $r31, $r32;
        org.eclipse.jetty.util.MultiMap $r14, $r15, $r16, $r17, $r20;
        javax.servlet.DispatcherType $r3;
        org.eclipse.jetty.servlet.FilterMapping r38, r39, r40;
        java.lang.Object $r9, $r19, $r21, $r22, $r24, $r29, $r34, r37;

        r4 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r2 := @parameter0: org.eclipse.jetty.server.Request;

        r0 := @parameter1: java.lang.String;

        r5 := @parameter2: org.eclipse.jetty.servlet.ServletHolder;

        if r0 != null goto label01;

        $r35 = virtualinvoke r5.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String getName()>();

        goto label02;

     label01:
        $r35 = r0;

     label02:
        r1 = $r35;

        $r3 = virtualinvoke r2.<org.eclipse.jetty.server.Request: javax.servlet.DispatcherType getDispatcherType()>();

        $i0 = staticinvoke <org.eclipse.jetty.servlet.FilterMapping: int dispatch(javax.servlet.DispatcherType)>($r3);

        $z0 = r4.<org.eclipse.jetty.servlet.ServletHandler: boolean _filterChainsCached>;

        if $z0 == 0 goto label03;

        $r31 = r4.<org.eclipse.jetty.servlet.ServletHandler: java.util.concurrent.ConcurrentMap[] _chainCache>;

        if $r31 == null goto label03;

        $r32 = r4.<org.eclipse.jetty.servlet.ServletHandler: java.util.concurrent.ConcurrentMap[] _chainCache>;

        $r33 = $r32[$i0];

        $r34 = interfaceinvoke $r33.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>($r35);

        r36 = (javax.servlet.FilterChain) $r34;

        if r36 == null goto label03;

        return r36;

     label03:
        r37 = null;

        if r0 == null goto label06;

        $r26 = r4.<org.eclipse.jetty.servlet.ServletHandler: java.util.List _filterPathMappings>;

        if $r26 == null goto label06;

        i10 = 0;

     label04:
        $r27 = r4.<org.eclipse.jetty.servlet.ServletHandler: java.util.List _filterPathMappings>;

        $i9 = interfaceinvoke $r27.<java.util.List: int size()>();

        if i10 >= $i9 goto label06;

        $r28 = r4.<org.eclipse.jetty.servlet.ServletHandler: java.util.List _filterPathMappings>;

        $r29 = interfaceinvoke $r28.<java.util.List: java.lang.Object get(int)>(i10);

        r38 = (org.eclipse.jetty.servlet.FilterMapping) $r29;

        $z4 = virtualinvoke r38.<org.eclipse.jetty.servlet.FilterMapping: boolean appliesTo(java.lang.String,int)>(r0, $i0);

        if $z4 == 0 goto label05;

        $r30 = virtualinvoke r38.<org.eclipse.jetty.servlet.FilterMapping: org.eclipse.jetty.servlet.FilterHolder getFilterHolder()>();

        r37 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object add(java.lang.Object,java.lang.Object)>(r37, $r30);

     label05:
        i10 = i10 + 1;

        goto label04;

     label06:
        if r5 == null goto label12;

        $r14 = r4.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.MultiMap _filterNameMappings>;

        if $r14 == null goto label12;

        $r15 = r4.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.MultiMap _filterNameMappings>;

        $i5 = virtualinvoke $r15.<org.eclipse.jetty.util.MultiMap: int size()>();

        if $i5 <= 0 goto label12;

        $r16 = r4.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.MultiMap _filterNameMappings>;

        $i6 = virtualinvoke $r16.<org.eclipse.jetty.util.MultiMap: int size()>();

        if $i6 <= 0 goto label12;

        $r17 = r4.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.MultiMap _filterNameMappings>;

        $r18 = virtualinvoke r5.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String getName()>();

        $r19 = virtualinvoke $r17.<org.eclipse.jetty.util.MultiMap: java.lang.Object get(java.lang.Object)>($r18);

        i11 = 0;

     label07:
        $i7 = staticinvoke <org.eclipse.jetty.util.LazyList: int size(java.lang.Object)>($r19);

        if i11 >= $i7 goto label09;

        $r24 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object get(java.lang.Object,int)>($r19, i11);

        r39 = (org.eclipse.jetty.servlet.FilterMapping) $r24;

        $z3 = virtualinvoke r39.<org.eclipse.jetty.servlet.FilterMapping: boolean appliesTo(int)>($i0);

        if $z3 == 0 goto label08;

        $r25 = virtualinvoke r39.<org.eclipse.jetty.servlet.FilterMapping: org.eclipse.jetty.servlet.FilterHolder getFilterHolder()>();

        r37 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object add(java.lang.Object,java.lang.Object)>(r37, $r25);

     label08:
        i11 = i11 + 1;

        goto label07;

     label09:
        $r20 = r4.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.MultiMap _filterNameMappings>;

        $r21 = virtualinvoke $r20.<org.eclipse.jetty.util.MultiMap: java.lang.Object get(java.lang.Object)>("*");

        i12 = 0;

     label10:
        $i8 = staticinvoke <org.eclipse.jetty.util.LazyList: int size(java.lang.Object)>($r21);

        if i12 >= $i8 goto label12;

        $r22 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object get(java.lang.Object,int)>($r21, i12);

        r40 = (org.eclipse.jetty.servlet.FilterMapping) $r22;

        $z2 = virtualinvoke r40.<org.eclipse.jetty.servlet.FilterMapping: boolean appliesTo(int)>($i0);

        if $z2 == 0 goto label11;

        $r23 = virtualinvoke r40.<org.eclipse.jetty.servlet.FilterMapping: org.eclipse.jetty.servlet.FilterHolder getFilterHolder()>();

        r37 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object add(java.lang.Object,java.lang.Object)>(r37, $r23);

     label11:
        i12 = i12 + 1;

        goto label10;

     label12:
        if r37 != null goto label13;

        return null;

     label13:
        r41 = null;

        $z1 = r4.<org.eclipse.jetty.servlet.ServletHandler: boolean _filterChainsCached>;

        if $z1 == 0 goto label18;

        $i2 = staticinvoke <org.eclipse.jetty.util.LazyList: int size(java.lang.Object)>(r37);

        if $i2 <= 0 goto label14;

        $r11 = new org.eclipse.jetty.servlet.ServletHandler$CachedChain;

        specialinvoke $r11.<org.eclipse.jetty.servlet.ServletHandler$CachedChain: void <init>(org.eclipse.jetty.servlet.ServletHandler,java.lang.Object,org.eclipse.jetty.servlet.ServletHolder)>(r4, r37, r5);

        r41 = $r11;

     label14:
        $r7 = r4.<org.eclipse.jetty.servlet.ServletHandler: java.util.concurrent.ConcurrentMap[] _chainCache>;

        $r12 = $r7[$i0];

        $r8 = r4.<org.eclipse.jetty.servlet.ServletHandler: java.util.Queue[] _chainLRU>;

        $r13 = $r8[$i0];

     label15:
        $i13 = r4.<org.eclipse.jetty.servlet.ServletHandler: int _maxFilterChainsCacheSize>;

        if $i13 <= 0 goto label17;

        $i3 = interfaceinvoke $r12.<java.util.Map: int size()>();

        $i4 = r4.<org.eclipse.jetty.servlet.ServletHandler: int _maxFilterChainsCacheSize>;

        if $i3 < $i4 goto label17;

        $r9 = interfaceinvoke $r13.<java.util.Queue: java.lang.Object poll()>();

        r10 = (java.lang.String) $r9;

        if r10 != null goto label16;

        interfaceinvoke $r12.<java.util.Map: void clear()>();

        goto label17;

     label16:
        interfaceinvoke $r12.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r10);

        goto label15;

     label17:
        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r41);

        interfaceinvoke $r13.<java.util.Queue: boolean add(java.lang.Object)>(r1);

        goto label19;

     label18:
        $i1 = staticinvoke <org.eclipse.jetty.util.LazyList: int size(java.lang.Object)>(r37);

        if $i1 <= 0 goto label19;

        $r6 = new org.eclipse.jetty.servlet.ServletHandler$Chain;

        specialinvoke $r6.<org.eclipse.jetty.servlet.ServletHandler$Chain: void <init>(org.eclipse.jetty.servlet.ServletHandler,org.eclipse.jetty.server.Request,java.lang.Object,org.eclipse.jetty.servlet.ServletHolder)>(r4, r2, r37, r5);

        r41 = $r6;

     label19:
        return r41;
    }

    private void invalidateChainsCache()
    {
        java.util.Queue[] $r1, $r3, $r5, $r7, $r9, $r11;
        java.util.concurrent.ConcurrentMap $r14, $r16, $r18, $r20, $r22;
        java.util.concurrent.ConcurrentMap[] $r13, $r15, $r17, $r19, $r21;
        org.eclipse.jetty.servlet.ServletHandler r0;
        java.util.Queue $r2, $r4, $r6, $r8, $r10, $r12;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.Queue[] _chainLRU>;

        $r2 = $r1[1];

        if $r2 == null goto label1;

        $r3 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.Queue[] _chainLRU>;

        $r4 = $r3[1];

        interfaceinvoke $r4.<java.util.Queue: void clear()>();

        $r5 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.Queue[] _chainLRU>;

        $r6 = $r5[2];

        interfaceinvoke $r6.<java.util.Queue: void clear()>();

        $r7 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.Queue[] _chainLRU>;

        $r8 = $r7[4];

        interfaceinvoke $r8.<java.util.Queue: void clear()>();

        $r9 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.Queue[] _chainLRU>;

        $r10 = $r9[8];

        interfaceinvoke $r10.<java.util.Queue: void clear()>();

        $r11 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.Queue[] _chainLRU>;

        $r12 = $r11[16];

        interfaceinvoke $r12.<java.util.Queue: void clear()>();

        $r13 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.concurrent.ConcurrentMap[] _chainCache>;

        $r14 = $r13[1];

        interfaceinvoke $r14.<java.util.concurrent.ConcurrentMap: void clear()>();

        $r15 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.concurrent.ConcurrentMap[] _chainCache>;

        $r16 = $r15[2];

        interfaceinvoke $r16.<java.util.concurrent.ConcurrentMap: void clear()>();

        $r17 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.concurrent.ConcurrentMap[] _chainCache>;

        $r18 = $r17[4];

        interfaceinvoke $r18.<java.util.concurrent.ConcurrentMap: void clear()>();

        $r19 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.concurrent.ConcurrentMap[] _chainCache>;

        $r20 = $r19[8];

        interfaceinvoke $r20.<java.util.concurrent.ConcurrentMap: void clear()>();

        $r21 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.concurrent.ConcurrentMap[] _chainCache>;

        $r22 = $r21[16];

        interfaceinvoke $r22.<java.util.concurrent.ConcurrentMap: void clear()>();

     label1:
        return;
    }

    public boolean isAvailable()
    {
        org.eclipse.jetty.servlet.ServletHandler r0;
        org.eclipse.jetty.servlet.ServletHolder[] $r1;
        int $i0, i1;
        org.eclipse.jetty.servlet.ServletHolder r2;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: boolean isStarted()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletHolder[] getServlets()>();

        i1 = 0;

     label2:
        $i0 = lengthof $r1;

        if i1 >= $i0 goto label4;

        r2 = $r1[i1];

        if r2 == null goto label3;

        $z1 = virtualinvoke r2.<org.eclipse.jetty.servlet.ServletHolder: boolean isAvailable()>();

        if $z1 != 0 goto label3;

        return 0;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 1;
    }

    public void setStartWithUnavailable(boolean)
    {
        org.eclipse.jetty.servlet.ServletHandler r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        z0 := @parameter0: boolean;

        r0.<org.eclipse.jetty.servlet.ServletHandler: boolean _startWithUnavailable> = z0;

        return;
    }

    public boolean isStartWithUnavailable()
    {
        org.eclipse.jetty.servlet.ServletHandler r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        $z0 = r0.<org.eclipse.jetty.servlet.ServletHandler: boolean _startWithUnavailable>;

        return $z0;
    }

    public void initialize() throws java.lang.Exception
    {
        java.lang.IllegalStateException $r15;
        org.eclipse.jetty.servlet.FilterHolder[] $r2, $r25, $r26;
        org.eclipse.jetty.servlet.ServletHolder[] $r3, $r4, $r6, r30;
        org.eclipse.jetty.servlet.FilterHolder $r27;
        org.eclipse.jetty.util.MultiException $r0;
        org.eclipse.jetty.servlet.ServletHandler r1;
        org.eclipse.jetty.servlet.ServletHolder $r7, $r9, $r11, $r18, $r23, r31, $r32;
        java.lang.StringBuilder $r16, $r17, $r20;
        java.lang.Throwable $r28;
        int $i0, $i1, i2, i3;
        java.lang.String $r8, $r10, $r13, $r19, $r21, $r22, $r24;
        org.eclipse.jetty.http.PathMap $r12;
        java.lang.Object $r5, $r14;
        org.eclipse.jetty.util.log.Logger $r29;

        r1 := @this: org.eclipse.jetty.servlet.ServletHandler;

        $r0 = new org.eclipse.jetty.util.MultiException;

        specialinvoke $r0.<org.eclipse.jetty.util.MultiException: void <init>()>();

        $r2 = r1.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterHolder[] _filters>;

        if $r2 == null goto label02;

        i2 = 0;

     label01:
        $r25 = r1.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterHolder[] _filters>;

        $i1 = lengthof $r25;

        if i2 >= $i1 goto label02;

        $r26 = r1.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterHolder[] _filters>;

        $r27 = $r26[i2];

        virtualinvoke $r27.<org.eclipse.jetty.servlet.FilterHolder: void start()>();

        i2 = i2 + 1;

        goto label01;

     label02:
        $r3 = r1.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletHolder[] _servlets>;

        if $r3 == null goto label13;

        $r4 = r1.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletHolder[] _servlets>;

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Object clone()>();

        $r6 = (org.eclipse.jetty.servlet.ServletHolder[]) $r5;

        r30 = (org.eclipse.jetty.servlet.ServletHolder[]) $r6;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>(r30);

        i3 = 0;

     label03:
        $i0 = lengthof r30;

        if i3 >= $i0 goto label12;

     label04:
        $r7 = r30[i3];

        $r8 = virtualinvoke $r7.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String getClassName()>();

        if $r8 != null goto label08;

        $r9 = r30[i3];

        $r10 = virtualinvoke $r9.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String getForcedPath()>();

        if $r10 == null goto label08;

        $r12 = r1.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.http.PathMap _servletPathMap>;

        $r11 = r30[i3];

        $r13 = virtualinvoke $r11.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String getForcedPath()>();

        $r14 = virtualinvoke $r12.<org.eclipse.jetty.http.PathMap: java.lang.Object match(java.lang.String)>($r13);

        r31 = (org.eclipse.jetty.servlet.ServletHolder) $r14;

        if r31 == null goto label05;

        $r22 = virtualinvoke r31.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String getClassName()>();

        if $r22 != null goto label07;

     label05:
        $r15 = new java.lang.IllegalStateException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No forced path servlet for ");

        $r18 = r30[i3];

        $r19 = virtualinvoke $r18.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String getForcedPath()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r21);

        virtualinvoke $r0.<org.eclipse.jetty.util.MultiException: void add(java.lang.Throwable)>($r15);

     label06:
        goto label11;

     label07:
        $r23 = r30[i3];

        $r24 = virtualinvoke r31.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String getClassName()>();

        virtualinvoke $r23.<org.eclipse.jetty.servlet.ServletHolder: void setClassName(java.lang.String)>($r24);

     label08:
        $r32 = r30[i3];

        virtualinvoke $r32.<org.eclipse.jetty.servlet.ServletHolder: void start()>();

     label09:
        goto label11;

     label10:
        $r28 := @caughtexception;

        $r29 = <org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r29.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Throwable)>("EXCEPTION ", $r28);

        virtualinvoke $r0.<org.eclipse.jetty.util.MultiException: void add(java.lang.Throwable)>($r28);

     label11:
        i3 = i3 + 1;

        goto label03;

     label12:
        virtualinvoke $r0.<org.eclipse.jetty.util.MultiException: void ifExceptionThrow()>();

     label13:
        return;

        catch java.lang.Throwable from label04 to label06 with label10;
        catch java.lang.Throwable from label07 to label09 with label10;
    }

    public boolean isFilterChainsCached()
    {
        org.eclipse.jetty.servlet.ServletHandler r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        $z0 = r0.<org.eclipse.jetty.servlet.ServletHandler: boolean _filterChainsCached>;

        return $z0;
    }

    public org.eclipse.jetty.servlet.ServletHolder newServletHolder(org.eclipse.jetty.servlet.Holder$Source)
    {
        org.eclipse.jetty.servlet.ServletHolder $r0;
        org.eclipse.jetty.servlet.ServletHandler r2;
        org.eclipse.jetty.servlet.Holder$Source r1;

        r2 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r1 := @parameter0: org.eclipse.jetty.servlet.Holder$Source;

        $r0 = new org.eclipse.jetty.servlet.ServletHolder;

        specialinvoke $r0.<org.eclipse.jetty.servlet.ServletHolder: void <init>(org.eclipse.jetty.servlet.Holder$Source)>(r1);

        return $r0;
    }

    public org.eclipse.jetty.servlet.ServletHolder addServletWithMapping(java.lang.String, java.lang.String)
    {
        org.eclipse.jetty.servlet.ServletHandler r0;
        org.eclipse.jetty.servlet.ServletHolder $r1;
        org.eclipse.jetty.servlet.ServletHolder[] $r6;
        int $i0;
        java.lang.StringBuilder $r2, $r4, $r5, $r7;
        java.lang.String r3, $r8, r9;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r3 := @parameter0: java.lang.String;

        r9 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletHolder newServletHolder(org.eclipse.jetty.servlet.Holder$Source)>(null);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r6 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletHolder[] _servlets>;

        $i0 = staticinvoke <org.eclipse.jetty.util.LazyList: int size(java.lang.Object)>($r6);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<org.eclipse.jetty.servlet.ServletHolder: void setName(java.lang.String)>($r8);

        virtualinvoke $r1.<org.eclipse.jetty.servlet.ServletHolder: void setClassName(java.lang.String)>(r3);

        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: void addServletWithMapping(org.eclipse.jetty.servlet.ServletHolder,java.lang.String)>($r1, r9);

        return $r1;
    }

    public org.eclipse.jetty.servlet.ServletHolder addServletWithMapping(java.lang.Class, java.lang.String)
    {
        org.eclipse.jetty.servlet.ServletHandler r0;
        java.lang.Object[] $r5;
        org.eclipse.jetty.servlet.ServletHolder $r2;
        org.eclipse.jetty.servlet.ServletHolder[] $r4, $r6, $r7;
        org.eclipse.jetty.servlet.Holder$Source $r1;
        java.lang.Class r3;
        java.lang.String r8;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r3 := @parameter0: java.lang.Class;

        r8 := @parameter1: java.lang.String;

        $r1 = <org.eclipse.jetty.servlet.Holder$Source: org.eclipse.jetty.servlet.Holder$Source EMBEDDED>;

        $r2 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletHolder newServletHolder(org.eclipse.jetty.servlet.Holder$Source)>($r1);

        virtualinvoke $r2.<org.eclipse.jetty.servlet.ServletHolder: void setHeldClass(java.lang.Class)>(r3);

        $r4 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletHolder[] getServlets()>();

        $r5 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object[] addToArray(java.lang.Object[],java.lang.Object,java.lang.Class)>($r4, $r2, class "Lorg/eclipse/jetty/servlet/ServletHolder;");

        $r6 = (org.eclipse.jetty.servlet.ServletHolder[]) $r5;

        $r7 = (org.eclipse.jetty.servlet.ServletHolder[]) $r6;

        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: void setServlets(org.eclipse.jetty.servlet.ServletHolder[])>($r7);

        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: void addServletWithMapping(org.eclipse.jetty.servlet.ServletHolder,java.lang.String)>($r2, r8);

        return $r2;
    }

    public void addServletWithMapping(org.eclipse.jetty.servlet.ServletHolder, java.lang.String)
    {
        java.lang.Object[] $r3, $r10;
        org.eclipse.jetty.servlet.ServletHolder[] $r1, $r4, $r5, r17;
        java.lang.String $r7, r8;
        org.eclipse.jetty.servlet.ServletMapping $r6;
        boolean $z0;
        org.eclipse.jetty.servlet.ServletHandler r0;
        org.eclipse.jetty.servlet.ServletHolder r2;
        java.lang.RuntimeException $r15, $r16;
        java.lang.Exception $r14;
        org.eclipse.jetty.servlet.ServletMapping[] $r9, $r11, $r12;
        java.lang.Object $r13;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r2 := @parameter0: org.eclipse.jetty.servlet.ServletHolder;

        r8 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletHolder[] getServlets()>();

        r17 = $r1;

        if $r1 == null goto label1;

        $r13 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        r17 = (org.eclipse.jetty.servlet.ServletHolder[]) $r13;

     label1:
        $r3 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object[] addToArray(java.lang.Object[],java.lang.Object,java.lang.Class)>(r17, r2, class "Lorg/eclipse/jetty/servlet/ServletHolder;");

        $r4 = (org.eclipse.jetty.servlet.ServletHolder[]) $r3;

        $r5 = (org.eclipse.jetty.servlet.ServletHolder[]) $r4;

        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: void setServlets(org.eclipse.jetty.servlet.ServletHolder[])>($r5);

        $r6 = new org.eclipse.jetty.servlet.ServletMapping;

        specialinvoke $r6.<org.eclipse.jetty.servlet.ServletMapping: void <init>()>();

        $r7 = virtualinvoke r2.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String getName()>();

        virtualinvoke $r6.<org.eclipse.jetty.servlet.ServletMapping: void setServletName(java.lang.String)>($r7);

        virtualinvoke $r6.<org.eclipse.jetty.servlet.ServletMapping: void setPathSpec(java.lang.String)>(r8);

        $r9 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletMapping[] getServletMappings()>();

        $r10 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object[] addToArray(java.lang.Object[],java.lang.Object,java.lang.Class)>($r9, $r6, class "Lorg/eclipse/jetty/servlet/ServletMapping;");

        $r11 = (org.eclipse.jetty.servlet.ServletMapping[]) $r10;

        $r12 = (org.eclipse.jetty.servlet.ServletMapping[]) $r11;

        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: void setServletMappings(org.eclipse.jetty.servlet.ServletMapping[])>($r12);

     label2:
        goto label5;

     label3:
        $r14 := @caughtexception;

        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: void setServlets(org.eclipse.jetty.servlet.ServletHolder[])>(r17);

        $z0 = $r14 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label4;

        $r16 = (java.lang.RuntimeException) $r14;

        throw $r16;

     label4:
        $r15 = new java.lang.RuntimeException;

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r14);

        throw $r15;

     label5:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void addServlet(org.eclipse.jetty.servlet.ServletHolder)
    {
        org.eclipse.jetty.servlet.ServletHandler r0;
        java.lang.Object[] $r3;
        org.eclipse.jetty.servlet.ServletHolder[] $r1, $r4, $r5;
        org.eclipse.jetty.servlet.ServletHolder r2;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r2 := @parameter0: org.eclipse.jetty.servlet.ServletHolder;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletHolder[] getServlets()>();

        $r3 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object[] addToArray(java.lang.Object[],java.lang.Object,java.lang.Class)>($r1, r2, class "Lorg/eclipse/jetty/servlet/ServletHolder;");

        $r4 = (org.eclipse.jetty.servlet.ServletHolder[]) $r3;

        $r5 = (org.eclipse.jetty.servlet.ServletHolder[]) $r4;

        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: void setServlets(org.eclipse.jetty.servlet.ServletHolder[])>($r5);

        return;
    }

    public void addServletMapping(org.eclipse.jetty.servlet.ServletMapping)
    {
        org.eclipse.jetty.servlet.ServletHandler r0;
        java.lang.Object[] $r3;
        org.eclipse.jetty.servlet.ServletMapping r2;
        org.eclipse.jetty.servlet.ServletMapping[] $r1, $r4, $r5;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r2 := @parameter0: org.eclipse.jetty.servlet.ServletMapping;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletMapping[] getServletMappings()>();

        $r3 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object[] addToArray(java.lang.Object[],java.lang.Object,java.lang.Class)>($r1, r2, class "Lorg/eclipse/jetty/servlet/ServletMapping;");

        $r4 = (org.eclipse.jetty.servlet.ServletMapping[]) $r3;

        $r5 = (org.eclipse.jetty.servlet.ServletMapping[]) $r4;

        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: void setServletMappings(org.eclipse.jetty.servlet.ServletMapping[])>($r5);

        return;
    }

    public java.util.Set setServletSecurity(javax.servlet.ServletRegistration$Dynamic, javax.servlet.ServletSecurityElement)
    {
        org.eclipse.jetty.servlet.ServletContextHandler $r1, $r5;
        javax.servlet.ServletRegistration$Dynamic r3;
        org.eclipse.jetty.servlet.ServletHandler r0;
        java.util.Set $r2, $r6;
        javax.servlet.ServletSecurityElement r4;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r3 := @parameter0: javax.servlet.ServletRegistration$Dynamic;

        r4 := @parameter1: javax.servlet.ServletSecurityElement;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletContextHandler _contextHandler>;

        if $r1 == null goto label1;

        $r5 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletContextHandler _contextHandler>;

        $r6 = virtualinvoke $r5.<org.eclipse.jetty.servlet.ServletContextHandler: java.util.Set setServletSecurity(javax.servlet.ServletRegistration$Dynamic,javax.servlet.ServletSecurityElement)>(r3, r4);

        return $r6;

     label1:
        $r2 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        return $r2;
    }

    public org.eclipse.jetty.servlet.FilterHolder newFilterHolder(org.eclipse.jetty.servlet.Holder$Source)
    {
        org.eclipse.jetty.servlet.ServletHandler r2;
        org.eclipse.jetty.servlet.FilterHolder $r0;
        org.eclipse.jetty.servlet.Holder$Source r1;

        r2 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r1 := @parameter0: org.eclipse.jetty.servlet.Holder$Source;

        $r0 = new org.eclipse.jetty.servlet.FilterHolder;

        specialinvoke $r0.<org.eclipse.jetty.servlet.FilterHolder: void <init>(org.eclipse.jetty.servlet.Holder$Source)>(r1);

        return $r0;
    }

    public org.eclipse.jetty.servlet.FilterHolder getFilter(java.lang.String)
    {
        org.eclipse.jetty.servlet.ServletHandler r0;
        org.eclipse.jetty.servlet.FilterHolder $r4;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.Map _filterNameMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.eclipse.jetty.servlet.FilterHolder) $r3;

        return $r4;
    }

    public org.eclipse.jetty.servlet.FilterHolder addFilterWithMapping(java.lang.Class, java.lang.String, java.util.EnumSet)
    {
        org.eclipse.jetty.servlet.ServletHandler r0;
        org.eclipse.jetty.servlet.Holder$Source $r1;
        org.eclipse.jetty.servlet.FilterHolder $r2;
        java.lang.Class r3;
        java.lang.String r4;
        java.util.EnumSet r5;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r3 := @parameter0: java.lang.Class;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.util.EnumSet;

        $r1 = <org.eclipse.jetty.servlet.Holder$Source: org.eclipse.jetty.servlet.Holder$Source EMBEDDED>;

        $r2 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterHolder newFilterHolder(org.eclipse.jetty.servlet.Holder$Source)>($r1);

        virtualinvoke $r2.<org.eclipse.jetty.servlet.FilterHolder: void setHeldClass(java.lang.Class)>(r3);

        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: void addFilterWithMapping(org.eclipse.jetty.servlet.FilterHolder,java.lang.String,java.util.EnumSet)>($r2, r4, r5);

        return $r2;
    }

    public org.eclipse.jetty.servlet.FilterHolder addFilterWithMapping(java.lang.String, java.lang.String, java.util.EnumSet)
    {
        org.eclipse.jetty.servlet.ServletHandler r0;
        org.eclipse.jetty.servlet.FilterHolder[] $r7;
        org.eclipse.jetty.servlet.Holder$Source $r1;
        org.eclipse.jetty.servlet.FilterHolder $r2;
        int $i0;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String r4, $r9, r10;
        java.util.EnumSet r11;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r4 := @parameter0: java.lang.String;

        r10 := @parameter1: java.lang.String;

        r11 := @parameter2: java.util.EnumSet;

        $r1 = <org.eclipse.jetty.servlet.Holder$Source: org.eclipse.jetty.servlet.Holder$Source EMBEDDED>;

        $r2 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterHolder newFilterHolder(org.eclipse.jetty.servlet.Holder$Source)>($r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r7 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterHolder[] _filters>;

        $i0 = lengthof $r7;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<org.eclipse.jetty.servlet.FilterHolder: void setName(java.lang.String)>($r9);

        virtualinvoke $r2.<org.eclipse.jetty.servlet.FilterHolder: void setClassName(java.lang.String)>(r4);

        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: void addFilterWithMapping(org.eclipse.jetty.servlet.FilterHolder,java.lang.String,java.util.EnumSet)>($r2, r10, r11);

        return $r2;
    }

    public void addFilterWithMapping(org.eclipse.jetty.servlet.FilterHolder, java.lang.String, java.util.EnumSet)
    {
        org.eclipse.jetty.servlet.ServletHandler r0;
        java.lang.Object[] $r3;
        org.eclipse.jetty.servlet.FilterHolder[] $r1, $r4, $r5, $r11, r14;
        java.lang.Error $r12;
        java.lang.RuntimeException $r13;
        org.eclipse.jetty.servlet.FilterHolder r2;
        org.eclipse.jetty.servlet.FilterMapping $r6;
        java.lang.Object $r10;
        java.lang.String $r7, r8;
        java.util.EnumSet r9;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r2 := @parameter0: org.eclipse.jetty.servlet.FilterHolder;

        r8 := @parameter1: java.lang.String;

        r9 := @parameter2: java.util.EnumSet;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterHolder[] getFilters()>();

        r14 = $r1;

        if $r1 == null goto label1;

        $r10 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r11 = (org.eclipse.jetty.servlet.FilterHolder[]) $r10;

        r14 = (org.eclipse.jetty.servlet.FilterHolder[]) $r11;

     label1:
        $r3 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object[] addToArray(java.lang.Object[],java.lang.Object,java.lang.Class)>(r14, r2, class "Lorg/eclipse/jetty/servlet/FilterHolder;");

        $r4 = (org.eclipse.jetty.servlet.FilterHolder[]) $r3;

        $r5 = (org.eclipse.jetty.servlet.FilterHolder[]) $r4;

        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: void setFilters(org.eclipse.jetty.servlet.FilterHolder[])>($r5);

        $r6 = new org.eclipse.jetty.servlet.FilterMapping;

        specialinvoke $r6.<org.eclipse.jetty.servlet.FilterMapping: void <init>()>();

        $r7 = virtualinvoke r2.<org.eclipse.jetty.servlet.FilterHolder: java.lang.String getName()>();

        virtualinvoke $r6.<org.eclipse.jetty.servlet.FilterMapping: void setFilterName(java.lang.String)>($r7);

        virtualinvoke $r6.<org.eclipse.jetty.servlet.FilterMapping: void setPathSpec(java.lang.String)>(r8);

        virtualinvoke $r6.<org.eclipse.jetty.servlet.FilterMapping: void setDispatcherTypes(java.util.EnumSet)>(r9);

        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: void addFilterMapping(org.eclipse.jetty.servlet.FilterMapping)>($r6);

     label2:
        goto label5;

     label3:
        $r13 := @caughtexception;

        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: void setFilters(org.eclipse.jetty.servlet.FilterHolder[])>(r14);

        throw $r13;

     label4:
        $r12 := @caughtexception;

        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: void setFilters(org.eclipse.jetty.servlet.FilterHolder[])>(r14);

        throw $r12;

     label5:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.lang.Error from label1 to label2 with label4;
    }

    public org.eclipse.jetty.servlet.FilterHolder addFilterWithMapping(java.lang.Class, java.lang.String, int)
    {
        org.eclipse.jetty.servlet.ServletHandler r0;
        org.eclipse.jetty.servlet.Holder$Source $r1;
        org.eclipse.jetty.servlet.FilterHolder $r2;
        int i0;
        java.lang.Class r3;
        java.lang.String r4;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r3 := @parameter0: java.lang.Class;

        r4 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r1 = <org.eclipse.jetty.servlet.Holder$Source: org.eclipse.jetty.servlet.Holder$Source EMBEDDED>;

        $r2 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterHolder newFilterHolder(org.eclipse.jetty.servlet.Holder$Source)>($r1);

        virtualinvoke $r2.<org.eclipse.jetty.servlet.FilterHolder: void setHeldClass(java.lang.Class)>(r3);

        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: void addFilterWithMapping(org.eclipse.jetty.servlet.FilterHolder,java.lang.String,int)>($r2, r4, i0);

        return $r2;
    }

    public org.eclipse.jetty.servlet.FilterHolder addFilterWithMapping(java.lang.String, java.lang.String, int)
    {
        org.eclipse.jetty.servlet.ServletHandler r0;
        org.eclipse.jetty.servlet.FilterHolder[] $r6;
        org.eclipse.jetty.servlet.FilterHolder $r1;
        int $i0, i1;
        java.lang.StringBuilder $r2, $r4, $r5, $r7;
        java.lang.String r3, $r8, r9;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r3 := @parameter0: java.lang.String;

        r9 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterHolder newFilterHolder(org.eclipse.jetty.servlet.Holder$Source)>(null);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r6 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterHolder[] _filters>;

        $i0 = lengthof $r6;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<org.eclipse.jetty.servlet.FilterHolder: void setName(java.lang.String)>($r8);

        virtualinvoke $r1.<org.eclipse.jetty.servlet.FilterHolder: void setClassName(java.lang.String)>(r3);

        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: void addFilterWithMapping(org.eclipse.jetty.servlet.FilterHolder,java.lang.String,int)>($r1, r9, i1);

        return $r1;
    }

    public void addFilterWithMapping(org.eclipse.jetty.servlet.FilterHolder, java.lang.String, int)
    {
        org.eclipse.jetty.servlet.ServletHandler r0;
        java.lang.Object[] $r3;
        org.eclipse.jetty.servlet.FilterHolder[] $r1, $r4, $r5, $r10, r13;
        java.lang.Error $r11;
        java.lang.RuntimeException $r12;
        org.eclipse.jetty.servlet.FilterHolder r2;
        int i0;
        org.eclipse.jetty.servlet.FilterMapping $r6;
        java.lang.Object $r9;
        java.lang.String $r7, r8;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r2 := @parameter0: org.eclipse.jetty.servlet.FilterHolder;

        r8 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterHolder[] getFilters()>();

        r13 = $r1;

        if $r1 == null goto label1;

        $r9 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r10 = (org.eclipse.jetty.servlet.FilterHolder[]) $r9;

        r13 = (org.eclipse.jetty.servlet.FilterHolder[]) $r10;

     label1:
        $r3 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object[] addToArray(java.lang.Object[],java.lang.Object,java.lang.Class)>(r13, r2, class "Lorg/eclipse/jetty/servlet/FilterHolder;");

        $r4 = (org.eclipse.jetty.servlet.FilterHolder[]) $r3;

        $r5 = (org.eclipse.jetty.servlet.FilterHolder[]) $r4;

        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: void setFilters(org.eclipse.jetty.servlet.FilterHolder[])>($r5);

        $r6 = new org.eclipse.jetty.servlet.FilterMapping;

        specialinvoke $r6.<org.eclipse.jetty.servlet.FilterMapping: void <init>()>();

        $r7 = virtualinvoke r2.<org.eclipse.jetty.servlet.FilterHolder: java.lang.String getName()>();

        virtualinvoke $r6.<org.eclipse.jetty.servlet.FilterMapping: void setFilterName(java.lang.String)>($r7);

        virtualinvoke $r6.<org.eclipse.jetty.servlet.FilterMapping: void setPathSpec(java.lang.String)>(r8);

        virtualinvoke $r6.<org.eclipse.jetty.servlet.FilterMapping: void setDispatches(int)>(i0);

        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: void addFilterMapping(org.eclipse.jetty.servlet.FilterMapping)>($r6);

     label2:
        goto label5;

     label3:
        $r12 := @caughtexception;

        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: void setFilters(org.eclipse.jetty.servlet.FilterHolder[])>(r13);

        throw $r12;

     label4:
        $r11 := @caughtexception;

        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: void setFilters(org.eclipse.jetty.servlet.FilterHolder[])>(r13);

        throw $r11;

     label5:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.lang.Error from label1 to label2 with label4;
    }

    public org.eclipse.jetty.servlet.FilterHolder addFilter(java.lang.String, java.lang.String, java.util.EnumSet)
    {
        org.eclipse.jetty.servlet.ServletHandler r0;
        org.eclipse.jetty.servlet.FilterHolder $r4;
        java.lang.String r1, r2;
        java.util.EnumSet r3;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.EnumSet;

        $r4 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterHolder addFilterWithMapping(java.lang.String,java.lang.String,java.util.EnumSet)>(r1, r2, r3);

        return $r4;
    }

    public void addFilter(org.eclipse.jetty.servlet.FilterHolder, org.eclipse.jetty.servlet.FilterMapping)
    {
        org.eclipse.jetty.servlet.ServletHandler r2;
        java.lang.Object[] $r4;
        org.eclipse.jetty.servlet.FilterHolder r0;
        org.eclipse.jetty.servlet.FilterMapping r1;
        org.eclipse.jetty.servlet.FilterHolder[] $r3, $r5, $r6;

        r2 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r0 := @parameter0: org.eclipse.jetty.servlet.FilterHolder;

        r1 := @parameter1: org.eclipse.jetty.servlet.FilterMapping;

        if r0 == null goto label1;

        $r3 = virtualinvoke r2.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterHolder[] getFilters()>();

        $r4 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object[] addToArray(java.lang.Object[],java.lang.Object,java.lang.Class)>($r3, r0, class "Lorg/eclipse/jetty/servlet/FilterHolder;");

        $r5 = (org.eclipse.jetty.servlet.FilterHolder[]) $r4;

        $r6 = (org.eclipse.jetty.servlet.FilterHolder[]) $r5;

        virtualinvoke r2.<org.eclipse.jetty.servlet.ServletHandler: void setFilters(org.eclipse.jetty.servlet.FilterHolder[])>($r6);

     label1:
        if r1 == null goto label2;

        virtualinvoke r2.<org.eclipse.jetty.servlet.ServletHandler: void addFilterMapping(org.eclipse.jetty.servlet.FilterMapping)>(r1);

     label2:
        return;
    }

    public void addFilter(org.eclipse.jetty.servlet.FilterHolder)
    {
        org.eclipse.jetty.servlet.ServletHandler r1;
        java.lang.Object[] $r3;
        org.eclipse.jetty.servlet.FilterHolder r0;
        org.eclipse.jetty.servlet.FilterHolder[] $r2, $r4, $r5;

        r1 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r0 := @parameter0: org.eclipse.jetty.servlet.FilterHolder;

        if r0 == null goto label1;

        $r2 = virtualinvoke r1.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterHolder[] getFilters()>();

        $r3 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object[] addToArray(java.lang.Object[],java.lang.Object,java.lang.Class)>($r2, r0, class "Lorg/eclipse/jetty/servlet/FilterHolder;");

        $r4 = (org.eclipse.jetty.servlet.FilterHolder[]) $r3;

        $r5 = (org.eclipse.jetty.servlet.FilterHolder[]) $r4;

        virtualinvoke r1.<org.eclipse.jetty.servlet.ServletHandler: void setFilters(org.eclipse.jetty.servlet.FilterHolder[])>($r5);

     label1:
        return;
    }

    public void addFilterMapping(org.eclipse.jetty.servlet.FilterMapping)
    {
        org.eclipse.jetty.servlet.FilterHolder $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        org.eclipse.jetty.servlet.ServletHandler r4;
        org.eclipse.jetty.servlet.FilterMapping[] $r5, $r6, $r8, $r9, $r11, $r12;
        org.eclipse.jetty.servlet.Holder$Source r3, $r7, $r10, $r13;
        org.eclipse.jetty.servlet.FilterMapping r0;

        r4 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r0 := @parameter0: org.eclipse.jetty.servlet.FilterMapping;

        if r0 == null goto label7;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.servlet.FilterMapping: org.eclipse.jetty.servlet.FilterHolder getFilterHolder()>();

        if $r1 != null goto label1;

        $r13 = null;

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.eclipse.jetty.servlet.FilterMapping: org.eclipse.jetty.servlet.FilterHolder getFilterHolder()>();

        $r13 = virtualinvoke $r2.<org.eclipse.jetty.servlet.FilterHolder: org.eclipse.jetty.servlet.Holder$Source getSource()>();

     label2:
        r3 = $r13;

        $r5 = virtualinvoke r4.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterMapping[] getFilterMappings()>();

        if $r5 == null goto label3;

        $i0 = lengthof $r5;

        if $i0 != 0 goto label4;

     label3:
        $r6 = virtualinvoke r4.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterMapping[] insertFilterMapping(org.eclipse.jetty.servlet.FilterMapping,int,boolean)>(r0, 0, 0);

        virtualinvoke r4.<org.eclipse.jetty.servlet.ServletHandler: void setFilterMappings(org.eclipse.jetty.servlet.FilterMapping[])>($r6);

        if r3 == null goto label7;

        $r7 = <org.eclipse.jetty.servlet.Holder$Source: org.eclipse.jetty.servlet.Holder$Source JAVAX_API>;

        if r3 != $r7 goto label7;

        r4.<org.eclipse.jetty.servlet.ServletHandler: int _matchAfterIndex> = 0;

        goto label7;

     label4:
        if $r13 == null goto label5;

        $r10 = <org.eclipse.jetty.servlet.Holder$Source: org.eclipse.jetty.servlet.Holder$Source JAVAX_API>;

        if $r10 != $r13 goto label5;

        $i7 = lengthof $r5;

        $i8 = $i7 - 1;

        $r11 = virtualinvoke r4.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterMapping[] insertFilterMapping(org.eclipse.jetty.servlet.FilterMapping,int,boolean)>(r0, $i8, 0);

        virtualinvoke r4.<org.eclipse.jetty.servlet.ServletHandler: void setFilterMappings(org.eclipse.jetty.servlet.FilterMapping[])>($r11);

        $i9 = r4.<org.eclipse.jetty.servlet.ServletHandler: int _matchAfterIndex>;

        if $i9 >= 0 goto label7;

        $r12 = virtualinvoke r4.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterMapping[] getFilterMappings()>();

        $i10 = lengthof $r12;

        $i11 = $i10 - 1;

        r4.<org.eclipse.jetty.servlet.ServletHandler: int _matchAfterIndex> = $i11;

        goto label7;

     label5:
        $i1 = r4.<org.eclipse.jetty.servlet.ServletHandler: int _matchAfterIndex>;

        if $i1 >= 0 goto label6;

        $i5 = lengthof $r5;

        $i6 = $i5 - 1;

        $r9 = virtualinvoke r4.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterMapping[] insertFilterMapping(org.eclipse.jetty.servlet.FilterMapping,int,boolean)>(r0, $i6, 0);

        virtualinvoke r4.<org.eclipse.jetty.servlet.ServletHandler: void setFilterMappings(org.eclipse.jetty.servlet.FilterMapping[])>($r9);

        goto label7;

     label6:
        $i2 = r4.<org.eclipse.jetty.servlet.ServletHandler: int _matchAfterIndex>;

        $r8 = virtualinvoke r4.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterMapping[] insertFilterMapping(org.eclipse.jetty.servlet.FilterMapping,int,boolean)>(r0, $i2, 1);

        $i3 = r4.<org.eclipse.jetty.servlet.ServletHandler: int _matchAfterIndex>;

        $i4 = $i3 + 1;

        r4.<org.eclipse.jetty.servlet.ServletHandler: int _matchAfterIndex> = $i4;

        virtualinvoke r4.<org.eclipse.jetty.servlet.ServletHandler: void setFilterMappings(org.eclipse.jetty.servlet.FilterMapping[])>($r8);

     label7:
        return;
    }

    public void prependFilterMapping(org.eclipse.jetty.servlet.FilterMapping)
    {
        org.eclipse.jetty.servlet.FilterHolder $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        org.eclipse.jetty.servlet.ServletHandler r3;
        org.eclipse.jetty.servlet.FilterMapping[] $r4, $r5, $r7, $r9, $r10;
        org.eclipse.jetty.servlet.Holder$Source $r2, $r6, $r8;
        org.eclipse.jetty.servlet.FilterMapping r0;

        r3 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r0 := @parameter0: org.eclipse.jetty.servlet.FilterMapping;

        if r0 == null goto label6;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.servlet.FilterMapping: org.eclipse.jetty.servlet.FilterHolder getFilterHolder()>();

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.servlet.FilterHolder: org.eclipse.jetty.servlet.Holder$Source getSource()>();

        $r4 = virtualinvoke r3.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterMapping[] getFilterMappings()>();

        if $r4 == null goto label1;

        $i0 = lengthof $r4;

        if $i0 != 0 goto label2;

     label1:
        $r5 = virtualinvoke r3.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterMapping[] insertFilterMapping(org.eclipse.jetty.servlet.FilterMapping,int,boolean)>(r0, 0, 0);

        virtualinvoke r3.<org.eclipse.jetty.servlet.ServletHandler: void setFilterMappings(org.eclipse.jetty.servlet.FilterMapping[])>($r5);

        if $r2 == null goto label6;

        $r6 = <org.eclipse.jetty.servlet.Holder$Source: org.eclipse.jetty.servlet.Holder$Source JAVAX_API>;

        if $r6 != $r2 goto label6;

        r3.<org.eclipse.jetty.servlet.ServletHandler: int _matchBeforeIndex> = 0;

        goto label6;

     label2:
        if $r2 == null goto label4;

        $r8 = <org.eclipse.jetty.servlet.Holder$Source: org.eclipse.jetty.servlet.Holder$Source JAVAX_API>;

        if $r8 != $r2 goto label4;

        $i3 = r3.<org.eclipse.jetty.servlet.ServletHandler: int _matchBeforeIndex>;

        if $i3 >= 0 goto label3;

        r3.<org.eclipse.jetty.servlet.ServletHandler: int _matchBeforeIndex> = 0;

        $r10 = virtualinvoke r3.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterMapping[] insertFilterMapping(org.eclipse.jetty.servlet.FilterMapping,int,boolean)>(r0, 0, 1);

        virtualinvoke r3.<org.eclipse.jetty.servlet.ServletHandler: void setFilterMappings(org.eclipse.jetty.servlet.FilterMapping[])>($r10);

        goto label5;

     label3:
        $i4 = r3.<org.eclipse.jetty.servlet.ServletHandler: int _matchBeforeIndex>;

        $r9 = virtualinvoke r3.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterMapping[] insertFilterMapping(org.eclipse.jetty.servlet.FilterMapping,int,boolean)>(r0, $i4, 0);

        $i5 = r3.<org.eclipse.jetty.servlet.ServletHandler: int _matchBeforeIndex>;

        $i6 = $i5 + 1;

        r3.<org.eclipse.jetty.servlet.ServletHandler: int _matchBeforeIndex> = $i6;

        virtualinvoke r3.<org.eclipse.jetty.servlet.ServletHandler: void setFilterMappings(org.eclipse.jetty.servlet.FilterMapping[])>($r9);

        goto label5;

     label4:
        $r7 = virtualinvoke r3.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterMapping[] insertFilterMapping(org.eclipse.jetty.servlet.FilterMapping,int,boolean)>(r0, 0, 1);

        virtualinvoke r3.<org.eclipse.jetty.servlet.ServletHandler: void setFilterMappings(org.eclipse.jetty.servlet.FilterMapping[])>($r7);

     label5:
        $i7 = r3.<org.eclipse.jetty.servlet.ServletHandler: int _matchAfterIndex>;

        if $i7 < 0 goto label6;

        $i1 = r3.<org.eclipse.jetty.servlet.ServletHandler: int _matchAfterIndex>;

        $i2 = $i1 + 1;

        r3.<org.eclipse.jetty.servlet.ServletHandler: int _matchAfterIndex> = $i2;

     label6:
        return;
    }

    protected org.eclipse.jetty.servlet.FilterMapping[] insertFilterMapping(org.eclipse.jetty.servlet.FilterMapping, int, boolean)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        boolean z0;
        org.eclipse.jetty.servlet.ServletHandler r0;
        java.lang.IllegalArgumentException $r5;
        org.eclipse.jetty.servlet.FilterMapping[] $r1, $r2, r4;
        org.eclipse.jetty.servlet.FilterMapping r3;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r3 := @parameter0: org.eclipse.jetty.servlet.FilterMapping;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        if i0 >= 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("FilterMapping insertion pos < 0");

        throw $r5;

     label1:
        $r1 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterMapping[] getFilterMappings()>();

        if $r1 == null goto label2;

        $i1 = lengthof $r1;

        if $i1 != 0 goto label3;

     label2:
        $r2 = newarray (org.eclipse.jetty.servlet.FilterMapping)[1];

        $r2[0] = r3;

        return $r2;

     label3:
        $i2 = lengthof $r1;

        $i3 = $i2 + 1;

        r4 = newarray (org.eclipse.jetty.servlet.FilterMapping)[$i3];

        if z0 == 0 goto label4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, r4, 0, i0);

        r4[i0] = r3;

        $i15 = i0 + 1;

        $i13 = lengthof $r1;

        $i14 = $i13 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, i0, r4, $i15, $i14);

        goto label5;

     label4:
        $i4 = i0 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, r4, 0, $i4);

        $i5 = i0 + 1;

        r4[$i5] = r3;

        $i7 = lengthof $r1;

        $i6 = i0 + 1;

        if $i7 <= $i6 goto label5;

        $i12 = i0 + 1;

        $i11 = i0 + 2;

        $i9 = lengthof $r1;

        $i8 = i0 + 1;

        $i10 = $i9 - $i8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i12, r4, $i11, $i10);

     label5:
        return r4;
    }

    protected synchronized void updateNameMappings()
    {
        org.eclipse.jetty.servlet.FilterHolder[] $r2, $r14, $r15, $r19, $r21;
        org.eclipse.jetty.servlet.ServletHolder[] $r4, $r5, $r6, $r10, $r12;
        org.eclipse.jetty.servlet.FilterHolder $r16, $r20, $r22;
        java.util.Map $r1, $r3, $r8, $r17;
        int $i0, $i1, i2, i3;
        java.lang.String $r9, $r18;
        org.eclipse.jetty.servlet.ServletHandler r0;
        org.eclipse.jetty.servlet.ServletHolder $r7, $r11, $r13;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.Map _filterNameMap>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        $r2 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterHolder[] _filters>;

        if $r2 == null goto label2;

        i2 = 0;

     label1:
        $r14 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterHolder[] _filters>;

        $i1 = lengthof $r14;

        if i2 >= $i1 goto label2;

        $r17 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.Map _filterNameMap>;

        $r15 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterHolder[] _filters>;

        $r16 = $r15[i2];

        $r18 = virtualinvoke $r16.<org.eclipse.jetty.servlet.FilterHolder: java.lang.String getName()>();

        $r19 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterHolder[] _filters>;

        $r20 = $r19[i2];

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r20);

        $r21 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterHolder[] _filters>;

        $r22 = $r21[i2];

        virtualinvoke $r22.<org.eclipse.jetty.servlet.FilterHolder: void setServletHandler(org.eclipse.jetty.servlet.ServletHandler)>(r0);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r3 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.Map _servletNameMap>;

        interfaceinvoke $r3.<java.util.Map: void clear()>();

        $r4 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletHolder[] _servlets>;

        if $r4 == null goto label4;

        i3 = 0;

     label3:
        $r5 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletHolder[] _servlets>;

        $i0 = lengthof $r5;

        if i3 >= $i0 goto label4;

        $r8 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.Map _servletNameMap>;

        $r6 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletHolder[] _servlets>;

        $r7 = $r6[i3];

        $r9 = virtualinvoke $r7.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String getName()>();

        $r10 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletHolder[] _servlets>;

        $r11 = $r10[i3];

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r11);

        $r12 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletHolder[] _servlets>;

        $r13 = $r12[i3];

        virtualinvoke $r13.<org.eclipse.jetty.servlet.ServletHolder: void setServletHandler(org.eclipse.jetty.servlet.ServletHandler)>(r0);

        i3 = i3 + 1;

        goto label3;

     label4:
        return;
    }

    protected synchronized void updateMappings()
    {
        org.eclipse.jetty.servlet.ServletContextHandler $r8, $r9, $r10;
        java.util.Map $r14, $r42, $r51, $r56, $r77;
        org.eclipse.jetty.servlet.ServletHolder r110;
        java.lang.Exception $r107;
        java.lang.StringBuilder $r13, $r15, $r20, $r22, $r27, $r29, $r34, $r36, $r41, $r43, $r69, $r73, $r101, $r105, $r113, $r116, $r118, $r119, $r120, $r121, $r122;
        java.lang.Object[] $r17, $r24, $r31, $r38, $r45;
        java.util.ArrayList $r111;
        java.lang.String $r16, $r23, $r30, $r37, $r44, $r57, $r65, $r66, $r72, $r74, $r78, $r91, $r94, $r104, $r106;
        org.eclipse.jetty.servlet.ServletMapping $r55, $r60, $r63, $r71;
        java.util.concurrent.ConcurrentMap[] $r6, $r46, $r47, $r49;
        org.eclipse.jetty.util.MultiMap $r28, $r95, $r112;
        java.lang.RuntimeException $r123;
        org.eclipse.jetty.servlet.FilterMapping $r76, $r81, $r83, $r86, $r89, $r93, $r97, $r103;
        java.lang.IllegalStateException $r114, $r117;
        org.eclipse.jetty.servlet.FilterHolder r109;
        boolean $z0, $z1, $z2, $z3;
        org.eclipse.jetty.servlet.ServletHandler r0;
        org.eclipse.jetty.servlet.ServletMapping[] $r5, $r53, $r54, $r59, $r62, $r70;
        java.util.List $r21, $r98;
        java.lang.String[] $r61, $r64, $r84, $r87, $r90;
        java.util.concurrent.ConcurrentMap $r48, $r50;
        int $i0, $i1, $i2, $i3, i4, i5, i6, i7, i8, $i9, $i11;
        org.eclipse.jetty.http.PathMap $r35, $r115;
        org.eclipse.jetty.servlet.FilterMapping[] $r1, $r4, $r75, $r80, $r82, $r85, $r88, $r92, $r96, $r102;
        java.lang.Object $r58, $r79;
        org.eclipse.jetty.util.log.Logger $r7, $r12, $r19, $r26, $r33, $r40;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterMapping[] _filterMappings>;

        if $r1 != null goto label01;

        r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.List _filterPathMappings> = null;

        r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.MultiMap _filterNameMappings> = null;

        goto label08;

     label01:
        $r111 = new java.util.ArrayList;

        specialinvoke $r111.<java.util.ArrayList: void <init>()>();

        r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.List _filterPathMappings> = $r111;

        $r112 = new org.eclipse.jetty.util.MultiMap;

        specialinvoke $r112.<org.eclipse.jetty.util.MultiMap: void <init>()>();

        r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.MultiMap _filterNameMappings> = $r112;

        i4 = 0;

     label02:
        $r4 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterMapping[] _filterMappings>;

        $i0 = lengthof $r4;

        if i4 >= $i0 goto label08;

        $r77 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.Map _filterNameMap>;

        $r75 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterMapping[] _filterMappings>;

        $r76 = $r75[i4];

        $r78 = virtualinvoke $r76.<org.eclipse.jetty.servlet.FilterMapping: java.lang.String getFilterName()>();

        $r79 = interfaceinvoke $r77.<java.util.Map: java.lang.Object get(java.lang.Object)>($r78);

        r109 = (org.eclipse.jetty.servlet.FilterHolder) $r79;

        if r109 != null goto label03;

        $r114 = new java.lang.IllegalStateException;

        $r113 = new java.lang.StringBuilder;

        specialinvoke $r113.<java.lang.StringBuilder: void <init>()>();

        $r101 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No filter named ");

        $r102 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterMapping[] _filterMappings>;

        $r103 = $r102[i4];

        $r104 = virtualinvoke $r103.<org.eclipse.jetty.servlet.FilterMapping: java.lang.String getFilterName()>();

        $r105 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r104);

        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r114.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r106);

        throw $r114;

     label03:
        $r80 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterMapping[] _filterMappings>;

        $r81 = $r80[i4];

        virtualinvoke $r81.<org.eclipse.jetty.servlet.FilterMapping: void setFilterHolder(org.eclipse.jetty.servlet.FilterHolder)>(r109);

        $r82 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterMapping[] _filterMappings>;

        $r83 = $r82[i4];

        $r84 = virtualinvoke $r83.<org.eclipse.jetty.servlet.FilterMapping: java.lang.String[] getPathSpecs()>();

        if $r84 == null goto label04;

        $r98 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.List _filterPathMappings>;

        $r96 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterMapping[] _filterMappings>;

        $r97 = $r96[i4];

        interfaceinvoke $r98.<java.util.List: boolean add(java.lang.Object)>($r97);

     label04:
        $r85 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterMapping[] _filterMappings>;

        $r86 = $r85[i4];

        $r87 = virtualinvoke $r86.<org.eclipse.jetty.servlet.FilterMapping: java.lang.String[] getServletNames()>();

        if $r87 == null goto label07;

        $r88 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterMapping[] _filterMappings>;

        $r89 = $r88[i4];

        $r90 = virtualinvoke $r89.<org.eclipse.jetty.servlet.FilterMapping: java.lang.String[] getServletNames()>();

        i5 = 0;

     label05:
        $i3 = lengthof $r90;

        if i5 >= $i3 goto label07;

        $r91 = $r90[i5];

        if $r91 == null goto label06;

        $r95 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.MultiMap _filterNameMappings>;

        $r94 = $r90[i5];

        $r92 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterMapping[] _filterMappings>;

        $r93 = $r92[i4];

        virtualinvoke $r95.<org.eclipse.jetty.util.MultiMap: void add(java.lang.Object,java.lang.Object)>($r94, $r93);

     label06:
        i5 = i5 + 1;

        goto label05;

     label07:
        i4 = i4 + 1;

        goto label02;

     label08:
        $r5 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletMapping[] _servletMappings>;

        if $r5 == null goto label09;

        $r51 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.Map _servletNameMap>;

        if $r51 != null goto label10;

     label09:
        r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.http.PathMap _servletPathMap> = null;

        goto label17;

     label10:
        $r115 = new org.eclipse.jetty.http.PathMap;

        specialinvoke $r115.<org.eclipse.jetty.http.PathMap: void <init>()>();

        i6 = 0;

     label11:
        $r53 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletMapping[] _servletMappings>;

        $i1 = lengthof $r53;

        if i6 >= $i1 goto label16;

        $r56 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.Map _servletNameMap>;

        $r54 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletMapping[] _servletMappings>;

        $r55 = $r54[i6];

        $r57 = virtualinvoke $r55.<org.eclipse.jetty.servlet.ServletMapping: java.lang.String getServletName()>();

        $r58 = interfaceinvoke $r56.<java.util.Map: java.lang.Object get(java.lang.Object)>($r57);

        r110 = (org.eclipse.jetty.servlet.ServletHolder) $r58;

        if r110 != null goto label12;

        $r117 = new java.lang.IllegalStateException;

        $r116 = new java.lang.StringBuilder;

        specialinvoke $r116.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such servlet: ");

        $r70 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletMapping[] _servletMappings>;

        $r71 = $r70[i6];

        $r72 = virtualinvoke $r71.<org.eclipse.jetty.servlet.ServletMapping: java.lang.String getServletName()>();

        $r73 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72);

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r117.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r74);

        throw $r117;

     label12:
        $z3 = virtualinvoke r110.<org.eclipse.jetty.servlet.ServletHolder: boolean isEnabled()>();

        if $z3 == 0 goto label15;

        $r59 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletMapping[] _servletMappings>;

        $r60 = $r59[i6];

        $r61 = virtualinvoke $r60.<org.eclipse.jetty.servlet.ServletMapping: java.lang.String[] getPathSpecs()>();

        if $r61 == null goto label15;

        $r62 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletMapping[] _servletMappings>;

        $r63 = $r62[i6];

        $r64 = virtualinvoke $r63.<org.eclipse.jetty.servlet.ServletMapping: java.lang.String[] getPathSpecs()>();

        i7 = 0;

     label13:
        $i2 = lengthof $r64;

        if i7 >= $i2 goto label15;

        $r65 = $r64[i7];

        if $r65 == null goto label14;

        $r66 = $r64[i7];

        virtualinvoke $r115.<org.eclipse.jetty.http.PathMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r66, r110);

     label14:
        i7 = i7 + 1;

        goto label13;

     label15:
        i6 = i6 + 1;

        goto label11;

     label16:
        r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.http.PathMap _servletPathMap> = $r115;

     label17:
        $r6 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.concurrent.ConcurrentMap[] _chainCache>;

        if $r6 == null goto label19;

        $r46 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.concurrent.ConcurrentMap[] _chainCache>;

        i8 = lengthof $r46;

     label18:
        $i9 = i8;

        $i11 = (int) -1;

        i8 = i8 + $i11;

        if $i9 <= 0 goto label19;

        $r47 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.concurrent.ConcurrentMap[] _chainCache>;

        $r48 = $r47[i8];

        if $r48 == null goto label18;

        $r49 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.concurrent.ConcurrentMap[] _chainCache>;

        $r50 = $r49[i8];

        interfaceinvoke $r50.<java.util.concurrent.ConcurrentMap: void clear()>();

        goto label18;

     label19:
        $r7 = <org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $z0 = interfaceinvoke $r7.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label20;

        $r12 = <org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r118 = new java.lang.StringBuilder;

        specialinvoke $r118.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("filterNameMap=");

        $r14 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.Map _filterNameMap>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = newarray (java.lang.Object)[0];

        interfaceinvoke $r12.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r16, $r17);

        $r19 = <org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r119 = new java.lang.StringBuilder;

        specialinvoke $r119.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pathFilters=");

        $r21 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.List _filterPathMappings>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        $r24 = newarray (java.lang.Object)[0];

        interfaceinvoke $r19.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r23, $r24);

        $r26 = <org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r120 = new java.lang.StringBuilder;

        specialinvoke $r120.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("servletFilterMap=");

        $r28 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.MultiMap _filterNameMappings>;

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        $r31 = newarray (java.lang.Object)[0];

        interfaceinvoke $r26.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r30, $r31);

        $r33 = <org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r121 = new java.lang.StringBuilder;

        specialinvoke $r121.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("servletPathMap=");

        $r35 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.http.PathMap _servletPathMap>;

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        $r38 = newarray (java.lang.Object)[0];

        interfaceinvoke $r33.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r37, $r38);

        $r40 = <org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r122 = new java.lang.StringBuilder;

        specialinvoke $r122.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("servletNameMap=");

        $r42 = r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.Map _servletNameMap>;

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        $r45 = newarray (java.lang.Object)[0];

        interfaceinvoke $r40.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r44, $r45);

     label20:
        $r8 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletContextHandler _contextHandler>;

        if $r8 == null goto label21;

        $r10 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletContextHandler _contextHandler>;

        $z2 = virtualinvoke $r10.<org.eclipse.jetty.servlet.ServletContextHandler: boolean isStarted()>();

        if $z2 != 0 goto label22;

     label21:
        $r9 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletContextHandler _contextHandler>;

        if $r9 != null goto label23;

        $z1 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: boolean isStarted()>();

        if $z1 == 0 goto label23;

     label22:
        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: void initialize()>();

     label23:
        goto label25;

     label24:
        $r107 := @caughtexception;

        $r123 = new java.lang.RuntimeException;

        specialinvoke $r123.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r107);

        throw $r123;

     label25:
        return;

        catch java.lang.Exception from label20 to label23 with label24;
    }

    protected void notFound(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.io.IOException
    {
        java.lang.Object[] $r8;
        org.eclipse.jetty.servlet.ServletHandler r9;
        javax.servlet.http.HttpServletResponse r10;
        javax.servlet.http.HttpServletRequest r4;
        java.lang.StringBuilder $r1, $r3, $r6;
        org.eclipse.jetty.util.log.Logger $r0, $r2;
        java.lang.String $r5, $r7;
        boolean $z0;

        r9 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r4 := @parameter0: javax.servlet.http.HttpServletRequest;

        r10 := @parameter1: javax.servlet.http.HttpServletResponse;

        $r0 = <org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $z0 = interfaceinvoke $r0.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = <org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not Found ");

        $r5 = interfaceinvoke r4.<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = newarray (java.lang.Object)[0];

        interfaceinvoke $r2.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r7, $r8);

     label1:
        return;
    }

    public void setFilterChainsCached(boolean)
    {
        org.eclipse.jetty.servlet.ServletHandler r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        z0 := @parameter0: boolean;

        r0.<org.eclipse.jetty.servlet.ServletHandler: boolean _filterChainsCached> = z0;

        return;
    }

    public void setFilterMappings(org.eclipse.jetty.servlet.FilterMapping[])
    {
        org.eclipse.jetty.util.component.Container $r4;
        org.eclipse.jetty.servlet.ServletHandler r0;
        org.eclipse.jetty.server.Server $r1, $r3;
        org.eclipse.jetty.servlet.FilterMapping[] r2, $r5;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r2 := @parameter0: org.eclipse.jetty.servlet.FilterMapping[];

        $r1 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.server.Server getServer()>();

        if $r1 == null goto label1;

        $r3 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.server.Server getServer()>();

        $r4 = virtualinvoke $r3.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.component.Container getContainer()>();

        $r5 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterMapping[] _filterMappings>;

        virtualinvoke $r4.<org.eclipse.jetty.util.component.Container: void update(java.lang.Object,java.lang.Object[],java.lang.Object[],java.lang.String,boolean)>(r0, $r5, r2, "filterMapping", 1);

     label1:
        r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterMapping[] _filterMappings> = r2;

        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: void updateMappings()>();

        specialinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: void invalidateChainsCache()>();

        return;
    }

    public synchronized void setFilters(org.eclipse.jetty.servlet.FilterHolder[])
    {
        org.eclipse.jetty.util.component.Container $r4;
        org.eclipse.jetty.servlet.ServletHandler r0;
        org.eclipse.jetty.servlet.FilterHolder[] r2, $r5;
        org.eclipse.jetty.server.Server $r1, $r3;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r2 := @parameter0: org.eclipse.jetty.servlet.FilterHolder[];

        $r1 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.server.Server getServer()>();

        if $r1 == null goto label1;

        $r3 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.server.Server getServer()>();

        $r4 = virtualinvoke $r3.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.component.Container getContainer()>();

        $r5 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterHolder[] _filters>;

        virtualinvoke $r4.<org.eclipse.jetty.util.component.Container: void update(java.lang.Object,java.lang.Object[],java.lang.Object[],java.lang.String,boolean)>(r0, $r5, r2, "filter", 1);

     label1:
        r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterHolder[] _filters> = r2;

        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: void updateNameMappings()>();

        specialinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: void invalidateChainsCache()>();

        return;
    }

    public void setServletMappings(org.eclipse.jetty.servlet.ServletMapping[])
    {
        org.eclipse.jetty.util.component.Container $r4;
        org.eclipse.jetty.servlet.ServletHandler r0;
        org.eclipse.jetty.server.Server $r1, $r3;
        org.eclipse.jetty.servlet.ServletMapping[] r2, $r5;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r2 := @parameter0: org.eclipse.jetty.servlet.ServletMapping[];

        $r1 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.server.Server getServer()>();

        if $r1 == null goto label1;

        $r3 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.server.Server getServer()>();

        $r4 = virtualinvoke $r3.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.component.Container getContainer()>();

        $r5 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletMapping[] _servletMappings>;

        virtualinvoke $r4.<org.eclipse.jetty.util.component.Container: void update(java.lang.Object,java.lang.Object[],java.lang.Object[],java.lang.String,boolean)>(r0, $r5, r2, "servletMapping", 1);

     label1:
        r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletMapping[] _servletMappings> = r2;

        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: void updateMappings()>();

        specialinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: void invalidateChainsCache()>();

        return;
    }

    public synchronized void setServlets(org.eclipse.jetty.servlet.ServletHolder[])
    {
        org.eclipse.jetty.util.component.Container $r4;
        org.eclipse.jetty.servlet.ServletHandler r0;
        org.eclipse.jetty.servlet.ServletHolder[] r2, $r5;
        org.eclipse.jetty.server.Server $r1, $r3;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r2 := @parameter0: org.eclipse.jetty.servlet.ServletHolder[];

        $r1 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.server.Server getServer()>();

        if $r1 == null goto label1;

        $r3 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.server.Server getServer()>();

        $r4 = virtualinvoke $r3.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.component.Container getContainer()>();

        $r5 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletHolder[] _servlets>;

        virtualinvoke $r4.<org.eclipse.jetty.util.component.Container: void update(java.lang.Object,java.lang.Object[],java.lang.Object[],java.lang.String,boolean)>(r0, $r5, r2, "servlet", 1);

     label1:
        r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletHolder[] _servlets> = r2;

        virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: void updateNameMappings()>();

        specialinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: void invalidateChainsCache()>();

        return;
    }

    public int getMaxFilterChainsCacheSize()
    {
        int $i0;
        org.eclipse.jetty.servlet.ServletHandler r0;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        $i0 = r0.<org.eclipse.jetty.servlet.ServletHandler: int _maxFilterChainsCacheSize>;

        return $i0;
    }

    public void setMaxFilterChainsCacheSize(int)
    {
        int i0;
        org.eclipse.jetty.servlet.ServletHandler r0;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        i0 := @parameter0: int;

        r0.<org.eclipse.jetty.servlet.ServletHandler: int _maxFilterChainsCacheSize> = i0;

        return;
    }

    void destroyServlet(javax.servlet.Servlet)
    {
        org.eclipse.jetty.servlet.ServletContextHandler $r1, $r3;
        org.eclipse.jetty.servlet.ServletHandler r0;
        javax.servlet.Servlet r2;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r2 := @parameter0: javax.servlet.Servlet;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletContextHandler _contextHandler>;

        if $r1 == null goto label1;

        $r3 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletContextHandler _contextHandler>;

        virtualinvoke $r3.<org.eclipse.jetty.servlet.ServletContextHandler: void destroyServlet(javax.servlet.Servlet)>(r2);

     label1:
        return;
    }

    void destroyFilter(javax.servlet.Filter)
    {
        org.eclipse.jetty.servlet.ServletContextHandler $r1, $r3;
        org.eclipse.jetty.servlet.ServletHandler r0;
        javax.servlet.Filter r2;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r2 := @parameter0: javax.servlet.Filter;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletContextHandler _contextHandler>;

        if $r1 == null goto label1;

        $r3 = r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletContextHandler _contextHandler>;

        virtualinvoke $r3.<org.eclipse.jetty.servlet.ServletContextHandler: void destroyFilter(javax.servlet.Filter)>(r2);

     label1:
        return;
    }

    public void dump(java.lang.Appendable, java.lang.String) throws java.io.IOException
    {
        org.eclipse.jetty.servlet.ServletHandler r0;
        java.lang.Appendable r1;
        java.util.Collection $r6;
        org.eclipse.jetty.servlet.FilterHolder[] $r9;
        org.eclipse.jetty.server.Handler[] $r4;
        org.eclipse.jetty.servlet.FilterMapping[] $r7;
        org.eclipse.jetty.servlet.ServletMapping[] $r11;
        java.util.List $r5, $r8, $r10, $r12, $r14;
        org.eclipse.jetty.servlet.ServletHolder[] $r13;
        java.util.Collection[] $r3;
        java.lang.String r2;

        r0 := @this: org.eclipse.jetty.servlet.ServletHandler;

        r1 := @parameter0: java.lang.Appendable;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.eclipse.jetty.server.handler.ScopedHandler: void dumpThis(java.lang.Appendable)>(r1);

        $r3 = newarray (java.util.Collection)[6];

        $r4 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.server.Handler[] getHandlers()>();

        $r5 = staticinvoke <org.eclipse.jetty.util.TypeUtil: java.util.List asList(java.lang.Object[])>($r4);

        $r3[0] = $r5;

        $r6 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: java.util.Collection getBeans()>();

        $r3[1] = $r6;

        $r7 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterMapping[] getFilterMappings()>();

        $r8 = staticinvoke <org.eclipse.jetty.util.TypeUtil: java.util.List asList(java.lang.Object[])>($r7);

        $r3[2] = $r8;

        $r9 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterHolder[] getFilters()>();

        $r10 = staticinvoke <org.eclipse.jetty.util.TypeUtil: java.util.List asList(java.lang.Object[])>($r9);

        $r3[3] = $r10;

        $r11 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletMapping[] getServletMappings()>();

        $r12 = staticinvoke <org.eclipse.jetty.util.TypeUtil: java.util.List asList(java.lang.Object[])>($r11);

        $r3[4] = $r12;

        $r13 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletHolder[] getServlets()>();

        $r14 = staticinvoke <org.eclipse.jetty.util.TypeUtil: java.util.List asList(java.lang.Object[])>($r13);

        $r3[5] = $r14;

        staticinvoke <org.eclipse.jetty.servlet.ServletHandler: void dump(java.lang.Appendable,java.lang.String,java.util.Collection[])>(r1, r2, $r3);

        return;
    }

    static org.eclipse.jetty.util.log.Logger access$000()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = <org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.log.Logger LOG>;

        return $r0;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        <org.eclipse.jetty.servlet.ServletHandler: java.lang.String __DEFAULT_SERVLET> = "default";

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/servlet/ServletHandler;");

        <org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
