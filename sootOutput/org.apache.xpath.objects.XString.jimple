public class org.apache.xpath.objects.XString extends org.apache.xpath.objects.XObject implements org.apache.xml.utils.XMLString
{
    public static org.apache.xpath.objects.XString EMPTYSTRING;

    protected void <init>(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.xpath.objects.XString r0;

        r0 := @this: org.apache.xpath.objects.XString;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<org.apache.xpath.objects.XObject: void <init>(java.lang.Object)>(r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.apache.xpath.objects.XString r0;

        r0 := @this: org.apache.xpath.objects.XString;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.xpath.objects.XObject: void <init>(java.lang.Object)>(r1);

        return;
    }

    public int getType()
    {
        org.apache.xpath.objects.XString r0;

        r0 := @this: org.apache.xpath.objects.XString;

        return 3;
    }

    public java.lang.String getTypeString()
    {
        org.apache.xpath.objects.XString r0;

        r0 := @this: org.apache.xpath.objects.XString;

        return "#STRING";
    }

    public boolean hasString()
    {
        org.apache.xpath.objects.XString r0;

        r0 := @this: org.apache.xpath.objects.XString;

        return 1;
    }

    public double num()
    {
        org.apache.xpath.objects.XString r0;
        double $d0;

        r0 := @this: org.apache.xpath.objects.XString;

        $d0 = virtualinvoke r0.<org.apache.xpath.objects.XString: double toDouble()>();

        return $d0;
    }

    public double toDouble()
    {
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i4, $i5, i7, i8, i9, i10, i11, i13, $i14, $i15, $i16, $i17, $i18, $i20;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6, d7, d8;
        char $c1, $c2, $c3, $c6, $c12;
        org.apache.xpath.objects.XString r0;

        r0 := @this: org.apache.xpath.objects.XString;

        $i0 = virtualinvoke r0.<org.apache.xpath.objects.XString: int length()>();

        if 0 != $i0 goto label01;

        return #NaN;

     label01:
        d6 = 0.0;

        i7 = 0;

        i8 = $i0 - 1;

        i9 = 0;

        goto label04;

     label02:
        $c1 = virtualinvoke r0.<org.apache.xpath.objects.XString: char charAt(int)>(i9);

        $z0 = staticinvoke <org.apache.xml.utils.XMLCharacterRecognizer: boolean isWhiteSpace(char)>($c1);

        if $z0 != 0 goto label03;

        goto label05;

     label03:
        i7 = i7 + 1;

        i9 = i9 + 1;

     label04:
        if i9 < $i0 goto label02;

     label05:
        d7 = 1.0;

        if i7 >= $i0 goto label06;

        $c6 = virtualinvoke r0.<org.apache.xpath.objects.XString: char charAt(int)>(i7);

        $i14 = (int) $c6;

        if $i14 != 45 goto label06;

        d7 = -1.0;

        i7 = i7 + 1;

     label06:
        i10 = 0;

        i11 = i7;

        goto label12;

     label07:
        $c2 = virtualinvoke r0.<org.apache.xpath.objects.XString: char charAt(int)>(i11);

        $i15 = (int) $c2;

        if $i15 == 46 goto label10;

        $z3 = staticinvoke <org.apache.xml.utils.XMLCharacterRecognizer: boolean isWhiteSpace(char)>($c2);

        if $z3 == 0 goto label08;

        goto label13;

     label08:
        $z4 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c2);

        if $z4 == 0 goto label09;

        $d5 = d6 * 10.0;

        $i16 = (int) $c2;

        $i5 = $i16 - 48;

        $d4 = (double) $i5;

        d6 = $d5 + $d4;

        i10 = i10 + 1;

        goto label11;

     label09:
        return #NaN;

     label10:
        i8 = i11;

        goto label13;

     label11:
        i11 = i11 + 1;

     label12:
        if i11 < $i0 goto label07;

     label13:
        $c12 = virtualinvoke r0.<org.apache.xpath.objects.XString: char charAt(int)>(i8);

        $i17 = (int) $c12;

        if $i17 != 46 goto label20;

        d8 = 0.0;

        i13 = $i0 - 1;

        goto label18;

     label14:
        $c3 = virtualinvoke r0.<org.apache.xpath.objects.XString: char charAt(int)>(i13);

        $z1 = staticinvoke <org.apache.xml.utils.XMLCharacterRecognizer: boolean isWhiteSpace(char)>($c3);

        if $z1 == 0 goto label15;

        goto label19;

     label15:
        $z2 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c3);

        if $z2 == 0 goto label16;

        $d2 = d8 / 10.0;

        $i18 = (int) $c3;

        $i4 = $i18 - 48;

        $d1 = (double) $i4;

        d8 = $d2 + $d1;

        i10 = i10 + 1;

        goto label17;

     label16:
        return #NaN;

     label17:
        $i20 = (int) -1;

        i13 = i13 + $i20;

     label18:
        if i13 > i8 goto label14;

     label19:
        $d3 = d8 / 10.0;

        d6 = d6 + $d3;

     label20:
        if 0 != i10 goto label21;

        return #NaN;

     label21:
        $d0 = d6 * d7;

        return $d0;
    }

    public boolean bool()
    {
        int $i0;
        java.lang.String $r1;
        org.apache.xpath.objects.XString r0;
        boolean $z0;

        r0 := @this: org.apache.xpath.objects.XString;

        $r1 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.apache.xml.utils.XMLString xstr()
    {
        org.apache.xpath.objects.XString r0;

        r0 := @this: org.apache.xpath.objects.XString;

        return r0;
    }

    public java.lang.String str()
    {
        java.lang.Object $r1, $r2;
        java.lang.String $r3;
        org.apache.xpath.objects.XString r0;

        r0 := @this: org.apache.xpath.objects.XString;

        $r1 = r0.<org.apache.xpath.objects.XObject: java.lang.Object m_obj>;

        if null == $r1 goto label1;

        $r2 = r0.<org.apache.xpath.objects.XObject: java.lang.Object m_obj>;

        $r3 = (java.lang.String) $r2;

        goto label2;

     label1:
        $r3 = "";

     label2:
        return $r3;
    }

    public int rtf(org.apache.xpath.XPathContext)
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xml.dtm.DTM $r1;
        int $i0;
        java.lang.String $r3;
        org.apache.xpath.objects.XString r2;

        r2 := @this: org.apache.xpath.objects.XString;

        r0 := @parameter0: org.apache.xpath.XPathContext;

        $r1 = virtualinvoke r0.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM createDocumentFragment()>();

        $r3 = virtualinvoke r2.<org.apache.xpath.objects.XString: java.lang.String str()>();

        interfaceinvoke $r1.<org.apache.xml.dtm.DTM: void appendTextChild(java.lang.String)>($r3);

        $i0 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: int getDocument()>();

        return $i0;
    }

    public void dispatchCharactersEvents(org.xml.sax.ContentHandler) throws org.xml.sax.SAXException
    {
        int $i0;
        char[] $r3;
        java.lang.String $r1;
        org.xml.sax.ContentHandler r2;
        org.apache.xpath.objects.XString r0;

        r0 := @this: org.apache.xpath.objects.XString;

        r2 := @parameter0: org.xml.sax.ContentHandler;

        $r1 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $r3 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        interfaceinvoke r2.<org.xml.sax.ContentHandler: void characters(char[],int,int)>($r3, 0, $i0);

        return;
    }

    public void dispatchAsComment(org.xml.sax.ext.LexicalHandler) throws org.xml.sax.SAXException
    {
        org.xml.sax.ext.LexicalHandler r2;
        int $i0;
        char[] $r3;
        java.lang.String $r1;
        org.apache.xpath.objects.XString r0;

        r0 := @this: org.apache.xpath.objects.XString;

        r2 := @parameter0: org.xml.sax.ext.LexicalHandler;

        $r1 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $r3 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        interfaceinvoke r2.<org.xml.sax.ext.LexicalHandler: void comment(char[],int,int)>($r3, 0, $i0);

        return;
    }

    public int length()
    {
        int $i0;
        java.lang.String $r1;
        org.apache.xpath.objects.XString r0;

        r0 := @this: org.apache.xpath.objects.XString;

        $r1 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        return $i0;
    }

    public char charAt(int)
    {
        int i0;
        char $c1;
        java.lang.String $r1;
        org.apache.xpath.objects.XString r0;

        r0 := @this: org.apache.xpath.objects.XString;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i0);

        return $c1;
    }

    public void getChars(int, int, char[], int)
    {
        int i0, i1, i2;
        char[] r2;
        java.lang.String $r1;
        org.apache.xpath.objects.XString r0;

        r0 := @this: org.apache.xpath.objects.XString;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r2 := @parameter2: char[];

        i2 := @parameter3: int;

        $r1 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        virtualinvoke $r1.<java.lang.String: void getChars(int,int,char[],int)>(i0, i1, r2, i2);

        return;
    }

    public boolean equals(org.apache.xpath.objects.XObject)
    {
        javax.xml.transform.TransformerException $r4;
        org.apache.xml.utils.XMLString $r2, $r3;
        byte $b1;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        double $d0, $d1;
        org.apache.xml.utils.WrappedRuntimeException $r5;
        org.apache.xpath.objects.XString r1;
        org.apache.xpath.objects.XObject r0;

        r1 := @this: org.apache.xpath.objects.XString;

        r0 := @parameter0: org.apache.xpath.objects.XObject;

        $i0 = virtualinvoke r0.<org.apache.xpath.objects.XObject: int getType()>();

     label01:
        if 4 != $i0 goto label02;

        $z3 = virtualinvoke r0.<org.apache.xpath.objects.XObject: boolean equals(org.apache.xpath.objects.XObject)>(r1);

        return $z3;

     label02:
        if 1 != $i0 goto label05;

        $z1 = virtualinvoke r0.<org.apache.xpath.objects.XObject: boolean bool()>();

        $z2 = virtualinvoke r1.<org.apache.xpath.objects.XString: boolean bool()>();

        if $z1 != $z2 goto label03;

        $z4 = 1;

        goto label04;

     label03:
        $z4 = 0;

     label04:
        return $z4;

     label05:
        if 2 != $i0 goto label08;

        $d0 = virtualinvoke r0.<org.apache.xpath.objects.XObject: double num()>();

        $d1 = virtualinvoke r1.<org.apache.xpath.objects.XString: double num()>();

        $b1 = $d0 cmpl $d1;

        if $b1 != 0 goto label06;

        $z5 = 1;

        goto label07;

     label06:
        $z5 = 0;

     label07:
        return $z5;

     label08:
        goto label10;

     label09:
        $r4 := @caughtexception;

        $r5 = new org.apache.xml.utils.WrappedRuntimeException;

        specialinvoke $r5.<org.apache.xml.utils.WrappedRuntimeException: void <init>(java.lang.Exception)>($r4);

        throw $r5;

     label10:
        $r2 = virtualinvoke r1.<org.apache.xpath.objects.XString: org.apache.xml.utils.XMLString xstr()>();

        $r3 = virtualinvoke r0.<org.apache.xpath.objects.XObject: org.apache.xml.utils.XMLString xstr()>();

        $z0 = interfaceinvoke $r2.<org.apache.xml.utils.XMLString: boolean equals(org.apache.xml.utils.XMLString)>($r3);

        return $z0;

        catch javax.xml.transform.TransformerException from label01 to label08 with label09;
    }

    public boolean equals(org.apache.xml.utils.XMLString)
    {
        java.lang.String $r2, $r3;
        org.apache.xml.utils.XMLString r0;
        org.apache.xpath.objects.XString r1;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.xpath.objects.XString;

        r0 := @parameter0: org.apache.xml.utils.XMLString;

        $z0 = interfaceinvoke r0.<org.apache.xml.utils.XMLString: boolean hasString()>();

        if $z0 != 0 goto label1;

        $z2 = interfaceinvoke r0.<org.apache.xml.utils.XMLString: boolean equals(org.apache.xml.utils.XMLString)>(r1);

        return $z2;

     label1:
        $r2 = virtualinvoke r1.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $r3 = interfaceinvoke r0.<org.apache.xml.utils.XMLString: java.lang.String toString()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z1;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.xpath.objects.XString r1;
        java.lang.Object r0;
        java.lang.String $r2, $r3;
        boolean $z0, $z1, $z2, $z3, $z4;

        r1 := @this: org.apache.xpath.objects.XString;

        r0 := @parameter0: java.lang.Object;

        if null != r0 goto label1;

        return 0;

     label1:
        $z0 = r0 instanceof org.apache.xpath.objects.XNodeSet;

        if $z0 == 0 goto label2;

        $z4 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z4;

     label2:
        $z1 = r0 instanceof org.apache.xpath.objects.XNumber;

        if $z1 == 0 goto label3;

        $z3 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z3;

     label3:
        $r2 = virtualinvoke r1.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z2;
    }

    public boolean equalsIgnoreCase(java.lang.String)
    {
        java.lang.String $r1, r2;
        org.apache.xpath.objects.XString r0;
        boolean $z0;

        r0 := @this: org.apache.xpath.objects.XString;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        return $z0;
    }

    public int compareTo(org.apache.xml.utils.XMLString)
    {
        org.apache.xml.utils.XMLString r1;
        int $i0, $i1, $i2, $i5, $i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i15;
        char $c3, $c4;
        org.apache.xpath.objects.XString r0;

        r0 := @this: org.apache.xpath.objects.XString;

        r1 := @parameter0: org.apache.xml.utils.XMLString;

        $i0 = virtualinvoke r0.<org.apache.xpath.objects.XString: int length()>();

        $i1 = interfaceinvoke r1.<org.apache.xml.utils.XMLString: int length()>();

        i7 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        i8 = 0;

        i9 = 0;

        goto label3;

     label1:
        $c3 = virtualinvoke r0.<org.apache.xpath.objects.XString: char charAt(int)>(i8);

        $c4 = interfaceinvoke r1.<org.apache.xml.utils.XMLString: char charAt(int)>(i9);

        $i10 = (int) $c3;

        $i11 = (int) $c4;

        if $i10 == $i11 goto label2;

        $i12 = (int) $c3;

        $i13 = (int) $c4;

        $i5 = $i12 - $i13;

        return $i5;

     label2:
        i8 = i8 + 1;

        i9 = i9 + 1;

     label3:
        $i2 = i7;

        $i15 = (int) -1;

        i7 = i7 + $i15;

        if $i2 != 0 goto label1;

        $i6 = $i0 - $i1;

        return $i6;
    }

    public int compareToIgnoreCase(org.apache.xml.utils.XMLString)
    {
        org.apache.xml.utils.WrappedRuntimeException $r0;
        java.lang.NoSuchMethodException $r1;
        org.apache.xpath.objects.XString r2;
        org.apache.xml.utils.XMLString r3;

        r2 := @this: org.apache.xpath.objects.XString;

        r3 := @parameter0: org.apache.xml.utils.XMLString;

        $r0 = new org.apache.xml.utils.WrappedRuntimeException;

        $r1 = new java.lang.NoSuchMethodException;

        specialinvoke $r1.<java.lang.NoSuchMethodException: void <init>(java.lang.String)>("Java 1.2 method, not yet implemented");

        specialinvoke $r0.<org.apache.xml.utils.WrappedRuntimeException: void <init>(java.lang.Exception)>($r1);

        throw $r0;
    }

    public boolean startsWith(java.lang.String, int)
    {
        int i0;
        java.lang.String $r1, r2;
        org.apache.xpath.objects.XString r0;
        boolean $z0;

        r0 := @this: org.apache.xpath.objects.XString;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String,int)>(r2, i0);

        return $z0;
    }

    public boolean startsWith(java.lang.String)
    {
        java.lang.String r1;
        org.apache.xpath.objects.XString r0;
        boolean $z0;

        r0 := @this: org.apache.xpath.objects.XString;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.apache.xpath.objects.XString: boolean startsWith(java.lang.String,int)>(r1, 0);

        return $z0;
    }

    public boolean startsWith(org.apache.xml.utils.XMLString, int)
    {
        char $c4, $c5;
        org.apache.xpath.objects.XString r0;
        org.apache.xml.utils.XMLString r1;
        int i0, $i1, $i2, $i3, i6, i7, i8, $i9, $i10, $i12;

        r0 := @this: org.apache.xpath.objects.XString;

        r1 := @parameter0: org.apache.xml.utils.XMLString;

        i0 := @parameter1: int;

        i6 = i0;

        $i1 = virtualinvoke r0.<org.apache.xpath.objects.XString: int length()>();

        i7 = 0;

        $i2 = interfaceinvoke r1.<org.apache.xml.utils.XMLString: int length()>();

        i8 = $i2;

        if i0 < 0 goto label1;

        $i3 = $i1 - $i2;

        if i0 <= $i3 goto label4;

     label1:
        return 0;

     label2:
        $c4 = virtualinvoke r0.<org.apache.xpath.objects.XString: char charAt(int)>(i6);

        $c5 = interfaceinvoke r1.<org.apache.xml.utils.XMLString: char charAt(int)>(i7);

        $i9 = (int) $c4;

        $i10 = (int) $c5;

        if $i9 == $i10 goto label3;

        return 0;

     label3:
        i6 = i6 + 1;

        i7 = i7 + 1;

     label4:
        $i12 = (int) -1;

        i8 = i8 + $i12;

        if i8 >= 0 goto label2;

        return 1;
    }

    public boolean startsWith(org.apache.xml.utils.XMLString)
    {
        org.apache.xpath.objects.XString r0;
        org.apache.xml.utils.XMLString r1;
        boolean $z0;

        r0 := @this: org.apache.xpath.objects.XString;

        r1 := @parameter0: org.apache.xml.utils.XMLString;

        $z0 = virtualinvoke r0.<org.apache.xpath.objects.XString: boolean startsWith(org.apache.xml.utils.XMLString,int)>(r1, 0);

        return $z0;
    }

    public boolean endsWith(java.lang.String)
    {
        java.lang.String $r1, r2;
        org.apache.xpath.objects.XString r0;
        boolean $z0;

        r0 := @this: org.apache.xpath.objects.XString;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>(r2);

        return $z0;
    }

    public int hashCode()
    {
        int $i0;
        java.lang.String $r1;
        org.apache.xpath.objects.XString r0;

        r0 := @this: org.apache.xpath.objects.XString;

        $r1 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public int indexOf(int)
    {
        int i0, $i1;
        java.lang.String $r1;
        org.apache.xpath.objects.XString r0;

        r0 := @this: org.apache.xpath.objects.XString;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(i0);

        return $i1;
    }

    public int indexOf(int, int)
    {
        int i0, i1, $i2;
        java.lang.String $r1;
        org.apache.xpath.objects.XString r0;

        r0 := @this: org.apache.xpath.objects.XString;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int,int)>(i0, i1);

        return $i2;
    }

    public int lastIndexOf(int)
    {
        int i0, $i1;
        java.lang.String $r1;
        org.apache.xpath.objects.XString r0;

        r0 := @this: org.apache.xpath.objects.XString;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $i1 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int)>(i0);

        return $i1;
    }

    public int lastIndexOf(int, int)
    {
        int i0, i1, $i2;
        java.lang.String $r1;
        org.apache.xpath.objects.XString r0;

        r0 := @this: org.apache.xpath.objects.XString;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $i2 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int,int)>(i0, i1);

        return $i2;
    }

    public int indexOf(java.lang.String)
    {
        int $i0;
        java.lang.String $r1, r2;
        org.apache.xpath.objects.XString r0;

        r0 := @this: org.apache.xpath.objects.XString;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>(r2);

        return $i0;
    }

    public int indexOf(org.apache.xml.utils.XMLString)
    {
        int $i0;
        java.lang.String $r1, $r3;
        org.apache.xpath.objects.XString r0;
        org.apache.xml.utils.XMLString r2;

        r0 := @this: org.apache.xpath.objects.XString;

        r2 := @parameter0: org.apache.xml.utils.XMLString;

        $r1 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $r3 = interfaceinvoke r2.<org.apache.xml.utils.XMLString: java.lang.String toString()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>($r3);

        return $i0;
    }

    public int indexOf(java.lang.String, int)
    {
        int i0, $i1;
        java.lang.String $r1, r2;
        org.apache.xpath.objects.XString r0;

        r0 := @this: org.apache.xpath.objects.XString;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String,int)>(r2, i0);

        return $i1;
    }

    public int lastIndexOf(java.lang.String)
    {
        int $i0;
        java.lang.String $r1, r2;
        org.apache.xpath.objects.XString r0;

        r0 := @this: org.apache.xpath.objects.XString;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(java.lang.String)>(r2);

        return $i0;
    }

    public int lastIndexOf(java.lang.String, int)
    {
        int i0, $i1;
        java.lang.String $r1, r2;
        org.apache.xpath.objects.XString r0;

        r0 := @this: org.apache.xpath.objects.XString;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $i1 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(java.lang.String,int)>(r2, i0);

        return $i1;
    }

    public org.apache.xml.utils.XMLString substring(int)
    {
        int i0;
        java.lang.String $r2, $r3;
        org.apache.xpath.objects.XString $r0, r1;

        r1 := @this: org.apache.xpath.objects.XString;

        i0 := @parameter0: int;

        $r0 = new org.apache.xpath.objects.XString;

        $r2 = virtualinvoke r1.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>(i0);

        specialinvoke $r0.<org.apache.xpath.objects.XString: void <init>(java.lang.String)>($r3);

        return $r0;
    }

    public org.apache.xml.utils.XMLString substring(int, int)
    {
        int i0, i1;
        java.lang.String $r2, $r3;
        org.apache.xpath.objects.XString $r0, r1;

        r1 := @this: org.apache.xpath.objects.XString;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new org.apache.xpath.objects.XString;

        $r2 = virtualinvoke r1.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);

        specialinvoke $r0.<org.apache.xpath.objects.XString: void <init>(java.lang.String)>($r3);

        return $r0;
    }

    public org.apache.xml.utils.XMLString concat(java.lang.String)
    {
        java.lang.String $r2, r3, $r4;
        org.apache.xpath.objects.XString $r0, r1;

        r1 := @this: org.apache.xpath.objects.XString;

        r3 := @parameter0: java.lang.String;

        $r0 = new org.apache.xpath.objects.XString;

        $r2 = virtualinvoke r1.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String concat(java.lang.String)>(r3);

        specialinvoke $r0.<org.apache.xpath.objects.XString: void <init>(java.lang.String)>($r4);

        return $r0;
    }

    public org.apache.xml.utils.XMLString toLowerCase(java.util.Locale)
    {
        java.util.Locale r3;
        java.lang.String $r2, $r4;
        org.apache.xpath.objects.XString $r0, r1;

        r1 := @this: org.apache.xpath.objects.XString;

        r3 := @parameter0: java.util.Locale;

        $r0 = new org.apache.xpath.objects.XString;

        $r2 = virtualinvoke r1.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>(r3);

        specialinvoke $r0.<org.apache.xpath.objects.XString: void <init>(java.lang.String)>($r4);

        return $r0;
    }

    public org.apache.xml.utils.XMLString toLowerCase()
    {
        java.lang.String $r2, $r3;
        org.apache.xpath.objects.XString $r0, r1;

        r1 := @this: org.apache.xpath.objects.XString;

        $r0 = new org.apache.xpath.objects.XString;

        $r2 = virtualinvoke r1.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

        specialinvoke $r0.<org.apache.xpath.objects.XString: void <init>(java.lang.String)>($r3);

        return $r0;
    }

    public org.apache.xml.utils.XMLString toUpperCase(java.util.Locale)
    {
        java.util.Locale r3;
        java.lang.String $r2, $r4;
        org.apache.xpath.objects.XString $r0, r1;

        r1 := @this: org.apache.xpath.objects.XString;

        r3 := @parameter0: java.util.Locale;

        $r0 = new org.apache.xpath.objects.XString;

        $r2 = virtualinvoke r1.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>(r3);

        specialinvoke $r0.<org.apache.xpath.objects.XString: void <init>(java.lang.String)>($r4);

        return $r0;
    }

    public org.apache.xml.utils.XMLString toUpperCase()
    {
        java.lang.String $r2, $r3;
        org.apache.xpath.objects.XString $r0, r1;

        r1 := @this: org.apache.xpath.objects.XString;

        $r0 = new org.apache.xpath.objects.XString;

        $r2 = virtualinvoke r1.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase()>();

        specialinvoke $r0.<org.apache.xpath.objects.XString: void <init>(java.lang.String)>($r3);

        return $r0;
    }

    public org.apache.xml.utils.XMLString trim()
    {
        java.lang.String $r2, $r3;
        org.apache.xpath.objects.XString $r0, r1;

        r1 := @this: org.apache.xpath.objects.XString;

        $r0 = new org.apache.xpath.objects.XString;

        $r2 = virtualinvoke r1.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        specialinvoke $r0.<org.apache.xpath.objects.XString: void <init>(java.lang.String)>($r3);

        return $r0;
    }

    private static boolean isSpace(char)
    {
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $z0 = staticinvoke <org.apache.xml.utils.XMLCharacterRecognizer: boolean isWhiteSpace(char)>(c0);

        return $z0;
    }

    public org.apache.xml.utils.XMLString fixWhiteSpace(boolean, boolean, boolean)
    {
        org.apache.xml.utils.XMLString $r4;
        org.apache.xml.utils.XMLStringFactory $r3;
        byte b13;
        boolean $z0, $z1, z2, z3, z4, z5, z6, z7, z8;
        int $i0, $i2, $i3, $i4, $i5, $i7, i9, i10, $i14, $i15, $i16, $i17, $i18, $i20, $i21;
        java.lang.String $r5;
        char $c1, $c6, $c8, c11, c12;
        org.apache.xpath.objects.XString r0;
        char[] r1;

        r0 := @this: org.apache.xpath.objects.XString;

        z4 := @parameter0: boolean;

        z3 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        $i0 = virtualinvoke r0.<org.apache.xpath.objects.XString: int length()>();

        r1 = newarray (char)[$i0];

        virtualinvoke r0.<org.apache.xpath.objects.XString: void getChars(int,int,char[],int)>(0, $i0, r1, 0);

        z5 = 0;

        i9 = 0;

        goto label03;

     label01:
        $c1 = r1[i9];

        $z0 = staticinvoke <org.apache.xpath.objects.XString: boolean isSpace(char)>($c1);

        if $z0 == 0 goto label02;

        goto label04;

     label02:
        i9 = i9 + 1;

     label03:
        if i9 < $i0 goto label01;

     label04:
        i10 = i9;

        z6 = 0;

        goto label12;

     label05:
        c11 = r1[i9];

        $z1 = staticinvoke <org.apache.xpath.objects.XString: boolean isSpace(char)>(c11);

        if $z1 == 0 goto label10;

        if z6 != 0 goto label09;

        $i14 = (int) c11;

        if 32 == $i14 goto label06;

        z5 = 1;

     label06:
        $i3 = i10;

        i10 = i10 + 1;

        r1[$i3] = 32;

        if z2 == 0 goto label08;

        if i9 == 0 goto label08;

        $i4 = i9 - 1;

        c12 = r1[$i4];

        $i15 = (int) c12;

        if $i15 == 46 goto label07;

        $i16 = (int) c12;

        if $i16 == 33 goto label07;

        $i17 = (int) c12;

        if $i17 == 63 goto label07;

        z6 = 1;

     label07:
        goto label11;

     label08:
        z6 = 1;

        goto label11;

     label09:
        z5 = 1;

        z6 = 1;

        goto label11;

     label10:
        $i2 = i10;

        i10 = i10 + 1;

        r1[$i2] = c11;

        z6 = 0;

     label11:
        i9 = i9 + 1;

     label12:
        if i9 < $i0 goto label05;

        if z3 == 0 goto label13;

        if 1 > i10 goto label13;

        $i7 = i10 - 1;

        $c8 = r1[$i7];

        $i18 = (int) $c8;

        if 32 != $i18 goto label13;

        z5 = 1;

        $i20 = (int) -1;

        i10 = i10 + $i20;

     label13:
        z7 = 0;

        b13 = 0;

        z8 = 0;

        if z4 == 0 goto label14;

        if 0 >= i10 goto label14;

        $c6 = r1[0];

        $i21 = (int) $c6;

        if 32 != $i21 goto label14;

        z5 = 1;

        z7 = 1;

        b13 = 1;

        z8 = 1;

     label14:
        $r3 = staticinvoke <org.apache.xpath.objects.XMLStringFactoryImpl: org.apache.xml.utils.XMLStringFactory getFactory()>();

        if z5 == 0 goto label15;

        $r5 = new java.lang.String;

        $i5 = i10 - z8;

        specialinvoke $r5.<java.lang.String: void <init>(char[],int,int)>(r1, b13, $i5);

        $r4 = virtualinvoke $r3.<org.apache.xml.utils.XMLStringFactory: org.apache.xml.utils.XMLString newstr(java.lang.String)>($r5);

        goto label16;

     label15:
        $r4 = r0;

     label16:
        return $r4;
    }

    public void callVisitors(org.apache.xpath.ExpressionOwner, org.apache.xpath.XPathVisitor)
    {
        org.apache.xpath.XPathVisitor r0;
        org.apache.xpath.objects.XString r2;
        org.apache.xpath.ExpressionOwner r1;

        r2 := @this: org.apache.xpath.objects.XString;

        r1 := @parameter0: org.apache.xpath.ExpressionOwner;

        r0 := @parameter1: org.apache.xpath.XPathVisitor;

        virtualinvoke r0.<org.apache.xpath.XPathVisitor: boolean visitStringLiteral(org.apache.xpath.ExpressionOwner,org.apache.xpath.objects.XString)>(r1, r2);

        return;
    }

    static void <clinit>()
    {
        org.apache.xpath.objects.XString $r0;

        $r0 = new org.apache.xpath.objects.XString;

        specialinvoke $r0.<org.apache.xpath.objects.XString: void <init>(java.lang.String)>("");

        <org.apache.xpath.objects.XString: org.apache.xpath.objects.XString EMPTYSTRING> = $r0;

        return;
    }
}
