abstract class org.eclipse.jetty.servlets.IncludableGzipFilter$IncludableResponseWrapper extends org.eclipse.jetty.http.gzip.CompressedResponseWrapper
{
    final org.eclipse.jetty.servlets.IncludableGzipFilter this$0;

    public void <init>(org.eclipse.jetty.servlets.IncludableGzipFilter, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
    {
        javax.servlet.http.HttpServletRequest r2;
        org.eclipse.jetty.servlets.IncludableGzipFilter r1;
        javax.servlet.http.HttpServletResponse r3;
        org.eclipse.jetty.servlets.IncludableGzipFilter$IncludableResponseWrapper r0;

        r0 := @this: org.eclipse.jetty.servlets.IncludableGzipFilter$IncludableResponseWrapper;

        r1 := @parameter0: org.eclipse.jetty.servlets.IncludableGzipFilter;

        r2 := @parameter1: javax.servlet.http.HttpServletRequest;

        r3 := @parameter2: javax.servlet.http.HttpServletResponse;

        r0.<org.eclipse.jetty.servlets.IncludableGzipFilter$IncludableResponseWrapper: org.eclipse.jetty.servlets.IncludableGzipFilter this$0> = r1;

        specialinvoke r0.<org.eclipse.jetty.http.gzip.CompressedResponseWrapper: void <init>(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r2, r3);

        return;
    }

    public void setHeader(java.lang.String, java.lang.String)
    {
        javax.servlet.http.HttpServletResponse r4;
        javax.servlet.ServletResponse $r3;
        org.eclipse.jetty.servlets.IncludableGzipFilter$IncludableResponseWrapper r0;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String r1, r2, $r8;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.servlets.IncludableGzipFilter$IncludableResponseWrapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.eclipse.jetty.http.gzip.CompressedResponseWrapper: void setHeader(java.lang.String,java.lang.String)>(r1, r2);

        $r3 = virtualinvoke r0.<org.eclipse.jetty.servlets.IncludableGzipFilter$IncludableResponseWrapper: javax.servlet.ServletResponse getResponse()>();

        r4 = (javax.servlet.http.HttpServletResponse) $r3;

        $z0 = interfaceinvoke r4.<javax.servlet.http.HttpServletResponse: boolean containsHeader(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("org.eclipse.jetty.server.include.");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>($r8, r2);

     label1:
        return;
    }

    public void addHeader(java.lang.String, java.lang.String)
    {
        javax.servlet.ServletResponse $r3;
        javax.servlet.http.HttpServletResponse r4;
        org.eclipse.jetty.servlets.IncludableGzipFilter$IncludableResponseWrapper r0;
        java.lang.String r1, r2;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.servlets.IncludableGzipFilter$IncludableResponseWrapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.eclipse.jetty.http.gzip.CompressedResponseWrapper: void addHeader(java.lang.String,java.lang.String)>(r1, r2);

        $r3 = virtualinvoke r0.<org.eclipse.jetty.servlets.IncludableGzipFilter$IncludableResponseWrapper: javax.servlet.ServletResponse getResponse()>();

        r4 = (javax.servlet.http.HttpServletResponse) $r3;

        $z0 = interfaceinvoke r4.<javax.servlet.http.HttpServletResponse: boolean containsHeader(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.eclipse.jetty.servlets.IncludableGzipFilter$IncludableResponseWrapper: void setHeader(java.lang.String,java.lang.String)>(r1, r2);

     label1:
        return;
    }

    protected java.io.PrintWriter newWriter(java.io.OutputStream, java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.io.OutputStream r2;
        java.io.PrintWriter $r4;
        org.eclipse.jetty.servlets.IncludableGzipFilter $r1;
        org.eclipse.jetty.io.UncheckedPrintWriter $r6;
        java.io.OutputStreamWriter $r5;
        org.eclipse.jetty.servlets.IncludableGzipFilter$IncludableResponseWrapper r0;
        java.lang.String r3;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.servlets.IncludableGzipFilter$IncludableResponseWrapper;

        r2 := @parameter0: java.io.OutputStream;

        r3 := @parameter1: java.lang.String;

        $r1 = r0.<org.eclipse.jetty.servlets.IncludableGzipFilter$IncludableResponseWrapper: org.eclipse.jetty.servlets.IncludableGzipFilter this$0>;

        $z0 = $r1.<org.eclipse.jetty.servlets.IncludableGzipFilter: boolean _uncheckedPrintWriter>;

        if $z0 == 0 goto label3;

        if r3 != null goto label1;

        $r6 = new org.eclipse.jetty.io.UncheckedPrintWriter;

        specialinvoke $r6.<org.eclipse.jetty.io.UncheckedPrintWriter: void <init>(java.io.OutputStream)>(r2);

        goto label2;

     label1:
        $r6 = new org.eclipse.jetty.io.UncheckedPrintWriter;

        $r5 = new java.io.OutputStreamWriter;

        specialinvoke $r5.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r2, r3);

        specialinvoke $r6.<org.eclipse.jetty.io.UncheckedPrintWriter: void <init>(java.io.Writer)>($r5);

     label2:
        return $r6;

     label3:
        $r4 = specialinvoke r0.<org.eclipse.jetty.http.gzip.CompressedResponseWrapper: java.io.PrintWriter newWriter(java.io.OutputStream,java.lang.String)>(r2, r3);

        return $r4;
    }
}
