public interface  org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemaEntry extends java.lang.Object implements org.apache.xmlbeans.XmlObject
{
    public static final org.apache.xmlbeans.SchemaType type;

    public abstract java.lang.String getFilename();

    public abstract org.apache.xmlbeans.XmlToken xgetFilename();

    public abstract void setFilename(java.lang.String);

    public abstract void xsetFilename(org.apache.xmlbeans.XmlToken);

    public abstract java.lang.String getSha1();

    public abstract org.apache.xmlbeans.XmlToken xgetSha1();

    public abstract void setSha1(java.lang.String);

    public abstract void xsetSha1(org.apache.xmlbeans.XmlToken);

    public abstract java.lang.String[] getSchemaLocationArray();

    public abstract java.lang.String getSchemaLocationArray(int);

    public abstract org.apache.xmlbeans.XmlAnyURI[] xgetSchemaLocationArray();

    public abstract org.apache.xmlbeans.XmlAnyURI xgetSchemaLocationArray(int);

    public abstract int sizeOfSchemaLocationArray();

    public abstract void setSchemaLocationArray(java.lang.String[]);

    public abstract void setSchemaLocationArray(int, java.lang.String);

    public abstract void xsetSchemaLocationArray(org.apache.xmlbeans.XmlAnyURI[]);

    public abstract void xsetSchemaLocationArray(int, org.apache.xmlbeans.XmlAnyURI);

    public abstract void insertSchemaLocation(int, java.lang.String);

    public abstract void addSchemaLocation(java.lang.String);

    public abstract org.apache.xmlbeans.XmlAnyURI insertNewSchemaLocation(int);

    public abstract org.apache.xmlbeans.XmlAnyURI addNewSchemaLocation();

    public abstract void removeSchemaLocation(int);

    public abstract java.lang.String getNamespace();

    public abstract org.apache.xmlbeans.XmlAnyURI xgetNamespace();

    public abstract boolean isSetNamespace();

    public abstract void setNamespace(java.lang.String);

    public abstract void xsetNamespace(org.apache.xmlbeans.XmlAnyURI);

    public abstract void unsetNamespace();

    static void <clinit>()
    {
        org.apache.xmlbeans.SchemaTypeSystem $r2;
        java.lang.Class $r0, $r5;
        org.apache.xmlbeans.SchemaComponent $r3;
        java.lang.ClassLoader $r1;
        org.apache.xmlbeans.SchemaType $r4;

        $r0 = <org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemaEntry$1: java.lang.Class class$org$apache$xmlbeans$impl$xb$xsdownload$DownloadedSchemaEntry>;

        if $r0 != null goto label1;

        $r5 = staticinvoke <org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemaEntry$1: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemaEntry");

        <org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemaEntry$1: java.lang.Class class$org$apache$xmlbeans$impl$xb$xsdownload$DownloadedSchemaEntry> = $r5;

        goto label2;

     label1:
        $r5 = <org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemaEntry$1: java.lang.Class class$org$apache$xmlbeans$impl$xb$xsdownload$DownloadedSchemaEntry>;

     label2:
        $r1 = virtualinvoke $r5.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r2 = staticinvoke <org.apache.xmlbeans.XmlBeans: org.apache.xmlbeans.SchemaTypeSystem typeSystemForClassLoader(java.lang.ClassLoader,java.lang.String)>($r1, "schemaorg_apache_xmlbeans.system.sXMLTOOLS");

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaTypeSystem: org.apache.xmlbeans.SchemaComponent resolveHandle(java.lang.String)>("downloadedschemaentry1c75type");

        $r4 = (org.apache.xmlbeans.SchemaType) $r3;

        <org.apache.xmlbeans.impl.xb.xsdownload.DownloadedSchemaEntry: org.apache.xmlbeans.SchemaType type> = $r4;

        return;
    }
}
