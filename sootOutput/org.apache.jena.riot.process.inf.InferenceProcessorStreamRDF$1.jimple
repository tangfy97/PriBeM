class org.apache.jena.riot.process.inf.InferenceProcessorStreamRDF$1 extends org.apache.jena.riot.process.inf.InferenceProcessorRDFS
{
    final org.apache.jena.riot.system.StreamRDF val$output;
    final org.apache.jena.riot.process.inf.InferenceProcessorStreamRDF this$0;

    void <init>(org.apache.jena.riot.process.inf.InferenceProcessorStreamRDF, org.apache.jena.riot.process.inf.InferenceSetupRDFS, org.apache.jena.riot.system.StreamRDF)
    {
        org.apache.jena.riot.process.inf.InferenceProcessorStreamRDF$1 r0;
        org.apache.jena.riot.process.inf.InferenceProcessorStreamRDF r1;
        org.apache.jena.riot.system.StreamRDF r2;
        org.apache.jena.riot.process.inf.InferenceSetupRDFS r3;

        r0 := @this: org.apache.jena.riot.process.inf.InferenceProcessorStreamRDF$1;

        r1 := @parameter0: org.apache.jena.riot.process.inf.InferenceProcessorStreamRDF;

        r3 := @parameter1: org.apache.jena.riot.process.inf.InferenceSetupRDFS;

        r2 := @parameter2: org.apache.jena.riot.system.StreamRDF;

        r0.<org.apache.jena.riot.process.inf.InferenceProcessorStreamRDF$1: org.apache.jena.riot.process.inf.InferenceProcessorStreamRDF this$0> = r1;

        r0.<org.apache.jena.riot.process.inf.InferenceProcessorStreamRDF$1: org.apache.jena.riot.system.StreamRDF val$output> = r2;

        specialinvoke r0.<org.apache.jena.riot.process.inf.InferenceProcessorRDFS: void <init>(org.apache.jena.riot.process.inf.InferenceSetupRDFS)>(r3);

        return;
    }

    public void derive(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        org.apache.jena.riot.process.inf.InferenceProcessorStreamRDF$1 r0;
        org.apache.jena.riot.process.inf.InferenceProcessorStreamRDF $r1, $r2;
        org.apache.jena.riot.system.StreamRDF $r3, $r9;
        com.hp.hpl.jena.graph.Node $r4, r5, r6, r7;
        com.hp.hpl.jena.sparql.core.Quad $r8;
        com.hp.hpl.jena.graph.Triple $r10;
        boolean $z0;

        r0 := @this: org.apache.jena.riot.process.inf.InferenceProcessorStreamRDF$1;

        r5 := @parameter0: com.hp.hpl.jena.graph.Node;

        r6 := @parameter1: com.hp.hpl.jena.graph.Node;

        r7 := @parameter2: com.hp.hpl.jena.graph.Node;

        $r1 = r0.<org.apache.jena.riot.process.inf.InferenceProcessorStreamRDF$1: org.apache.jena.riot.process.inf.InferenceProcessorStreamRDF this$0>;

        $z0 = staticinvoke <org.apache.jena.riot.process.inf.InferenceProcessorStreamRDF: boolean access$000(org.apache.jena.riot.process.inf.InferenceProcessorStreamRDF)>($r1);

        if $z0 == 0 goto label1;

        $r9 = r0.<org.apache.jena.riot.process.inf.InferenceProcessorStreamRDF$1: org.apache.jena.riot.system.StreamRDF val$output>;

        $r10 = staticinvoke <com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Triple create(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r5, r6, r7);

        interfaceinvoke $r9.<org.apache.jena.riot.system.StreamRDF: void triple(com.hp.hpl.jena.graph.Triple)>($r10);

        goto label2;

     label1:
        $r3 = r0.<org.apache.jena.riot.process.inf.InferenceProcessorStreamRDF$1: org.apache.jena.riot.system.StreamRDF val$output>;

        $r2 = r0.<org.apache.jena.riot.process.inf.InferenceProcessorStreamRDF$1: org.apache.jena.riot.process.inf.InferenceProcessorStreamRDF this$0>;

        $r4 = staticinvoke <org.apache.jena.riot.process.inf.InferenceProcessorStreamRDF: com.hp.hpl.jena.graph.Node access$100(org.apache.jena.riot.process.inf.InferenceProcessorStreamRDF)>($r2);

        $r8 = staticinvoke <com.hp.hpl.jena.sparql.core.Quad: com.hp.hpl.jena.sparql.core.Quad create(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r4, r5, r6, r7);

        interfaceinvoke $r3.<org.apache.jena.riot.system.StreamRDF: void quad(com.hp.hpl.jena.sparql.core.Quad)>($r8);

     label2:
        return;
    }
}
