final class minalloy.translator.MinScopeComputer extends java.lang.Object
{
    private final edu.mit.csail.sdg.alloy4.A4Reporter rep;
    private final edu.mit.csail.sdg.alloy4compiler.ast.Command cmd;
    private int bitwidth;
    private int maxseq;
    private int maxstring;
    private final java.util.IdentityHashMap sig2scope;
    private final java.util.IdentityHashMap exact;
    private final java.util.List atoms;
    private final edu.mit.csail.sdg.alloy4.UniqueNameGenerator un;

    public int sig2scope(edu.mit.csail.sdg.alloy4compiler.ast.Sig)
    {
        java.util.IdentityHashMap $r5;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig r0;
        java.lang.Integer r7;
        minalloy.translator.MinScopeComputer r4;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig $r1, $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        java.lang.Object $r6;

        r4 := @this: minalloy.translator.MinScopeComputer;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Sig;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig SIGINT>;

        if r0 != $r1 goto label1;

        $i2 = r4.<minalloy.translator.MinScopeComputer: int bitwidth>;

        $i3 = 1 << $i2;

        return $i3;

     label1:
        $r2 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig SEQIDX>;

        if r0 != $r2 goto label2;

        $i1 = r4.<minalloy.translator.MinScopeComputer: int maxseq>;

        return $i1;

     label2:
        $r3 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig STRING>;

        if r0 != $r3 goto label3;

        $i0 = r4.<minalloy.translator.MinScopeComputer: int maxstring>;

        return $i0;

     label3:
        $r5 = r4.<minalloy.translator.MinScopeComputer: java.util.IdentityHashMap sig2scope>;

        $r6 = virtualinvoke $r5.<java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)>(r0);

        r7 = (java.lang.Integer) $r6;

        if r7 != null goto label4;

        $i6 = (int) -1;

        $i4 = $i6;

        goto label5;

     label4:
        $i4 = virtualinvoke r7.<java.lang.Integer: int intValue()>();

     label5:
        return $i4;
    }

    private void sig2scope(edu.mit.csail.sdg.alloy4compiler.ast.Sig, int) throws edu.mit.csail.sdg.alloy4.Err
    {
        java.lang.Integer $r4;
        minalloy.translator.MinScopeComputer r1;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig $r3;
        edu.mit.csail.sdg.alloy4.ErrorSyntax $r12, $r22, $r29, $r36;
        edu.mit.csail.sdg.alloy4compiler.ast.Command $r13, $r23, $r30, $r37;
        edu.mit.csail.sdg.alloy4.A4Reporter $r6;
        boolean $z0, $z1;
        java.util.IdentityHashMap $r2;
        edu.mit.csail.sdg.alloy4.Pos $r15, $r25, $r32, $r39;
        java.lang.StringBuilder $r5, $r7, $r8, $r9, $r10, $r14, $r16, $r17, $r18, $r19, $r20, $r24, $r26, $r27, $r31, $r33, $r34, $r38, $r40, $r41;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig r0;
        int i0, $i1;
        java.lang.String $r11, $r21, $r28, $r35, $r42;

        r1 := @this: minalloy.translator.MinScopeComputer;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Sig;

        i0 := @parameter1: int;

        $z0 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: boolean builtin>;

        if $z0 == 0 goto label1;

        $r36 = new edu.mit.csail.sdg.alloy4.ErrorSyntax;

        $r37 = r1.<minalloy.translator.MinScopeComputer: edu.mit.csail.sdg.alloy4compiler.ast.Command cmd>;

        $r39 = $r37.<edu.mit.csail.sdg.alloy4compiler.ast.Command: edu.mit.csail.sdg.alloy4.Pos pos>;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cannot specify a scope for the builtin signature \"");

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<edu.mit.csail.sdg.alloy4.ErrorSyntax: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r39, $r42);

        throw $r36;

     label1:
        $z1 = r0 instanceof edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig;

        if $z1 != 0 goto label2;

        $r29 = new edu.mit.csail.sdg.alloy4.ErrorSyntax;

        $r30 = r1.<minalloy.translator.MinScopeComputer: edu.mit.csail.sdg.alloy4compiler.ast.Command cmd>;

        $r32 = $r30.<edu.mit.csail.sdg.alloy4compiler.ast.Command: edu.mit.csail.sdg.alloy4.Pos pos>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cannot specify a scope for a subset signature \"");

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<edu.mit.csail.sdg.alloy4.ErrorSyntax: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r32, $r35);

        throw $r29;

     label2:
        if i0 >= 0 goto label3;

        $r22 = new edu.mit.csail.sdg.alloy4.ErrorSyntax;

        $r23 = r1.<minalloy.translator.MinScopeComputer: edu.mit.csail.sdg.alloy4compiler.ast.Command cmd>;

        $r25 = $r23.<edu.mit.csail.sdg.alloy4compiler.ast.Command: edu.mit.csail.sdg.alloy4.Pos pos>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cannot specify a negative scope for sig \"");

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<edu.mit.csail.sdg.alloy4.ErrorSyntax: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r25, $r28);

        throw $r22;

     label3:
        $i1 = virtualinvoke r1.<minalloy.translator.MinScopeComputer: int sig2scope(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r0);

        if $i1 != i0 goto label4;

        return;

     label4:
        if $i1 < 0 goto label5;

        $r12 = new edu.mit.csail.sdg.alloy4.ErrorSyntax;

        $r13 = r1.<minalloy.translator.MinScopeComputer: edu.mit.csail.sdg.alloy4compiler.ast.Command cmd>;

        $r15 = $r13.<edu.mit.csail.sdg.alloy4compiler.ast.Command: edu.mit.csail.sdg.alloy4.Pos pos>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("Sig \"");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" already has a scope of ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", so we cannot set it to be ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<edu.mit.csail.sdg.alloy4.ErrorSyntax: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r15, $r21);

        throw $r12;

     label5:
        $r2 = r1.<minalloy.translator.MinScopeComputer: java.util.IdentityHashMap sig2scope>;

        $r3 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) r0;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r2.<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = r1.<minalloy.translator.MinScopeComputer: edu.mit.csail.sdg.alloy4.A4Reporter rep>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Sig ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" scope <= ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<edu.mit.csail.sdg.alloy4.A4Reporter: void scope(java.lang.String)>($r11);

        return;
    }

    public boolean isExact(edu.mit.csail.sdg.alloy4compiler.ast.Sig)
    {
        java.util.IdentityHashMap $r5;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig r0;
        minalloy.translator.MinScopeComputer r4;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig $r1, $r2, $r3;
        boolean $z0, $z1;

        r4 := @this: minalloy.translator.MinScopeComputer;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Sig;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig SIGINT>;

        if r0 == $r1 goto label2;

        $r2 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig SEQIDX>;

        if r0 == $r2 goto label2;

        $r3 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig STRING>;

        if r0 == $r3 goto label2;

        $z0 = r0 instanceof edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig;

        if $z0 == 0 goto label1;

        $r5 = r4.<minalloy.translator.MinScopeComputer: java.util.IdentityHashMap exact>;

        $z1 = virtualinvoke $r5.<java.util.IdentityHashMap: boolean containsKey(java.lang.Object)>(r0);

        if $z1 != 0 goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    private void makeExact(edu.mit.csail.sdg.alloy4.Pos, edu.mit.csail.sdg.alloy4compiler.ast.Sig) throws edu.mit.csail.sdg.alloy4.Err
    {
        java.util.IdentityHashMap $r2;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig r0;
        minalloy.translator.MinScopeComputer r1;
        edu.mit.csail.sdg.alloy4.ErrorSyntax $r3;
        edu.mit.csail.sdg.alloy4.Pos r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;
        boolean $z0;

        r1 := @this: minalloy.translator.MinScopeComputer;

        r4 := @parameter0: edu.mit.csail.sdg.alloy4.Pos;

        r0 := @parameter1: edu.mit.csail.sdg.alloy4compiler.ast.Sig;

        $z0 = r0 instanceof edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig;

        if $z0 != 0 goto label1;

        $r3 = new edu.mit.csail.sdg.alloy4.ErrorSyntax;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cannot specify a scope for a subset signature \"");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<edu.mit.csail.sdg.alloy4.ErrorSyntax: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>(r4, $r8);

        throw $r3;

     label1:
        $r2 = r1.<minalloy.translator.MinScopeComputer: java.util.IdentityHashMap exact>;

        virtualinvoke $r2.<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r0);

        return;
    }

    private void setBitwidth(edu.mit.csail.sdg.alloy4.Pos, int) throws edu.mit.csail.sdg.alloy4.ErrorAPI, edu.mit.csail.sdg.alloy4.ErrorSyntax
    {
        java.util.IdentityHashMap $r1, $r4;
        java.lang.Integer $r3, $r6;
        minalloy.translator.MinScopeComputer r0;
        int i0, $i1, $i2;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig $r2, $r5;
        edu.mit.csail.sdg.alloy4.ErrorSyntax $r7, $r9;
        edu.mit.csail.sdg.alloy4.Pos r8;

        r0 := @this: minalloy.translator.MinScopeComputer;

        r8 := @parameter0: edu.mit.csail.sdg.alloy4.Pos;

        i0 := @parameter1: int;

        if i0 >= 1 goto label1;

        $r9 = new edu.mit.csail.sdg.alloy4.ErrorSyntax;

        specialinvoke $r9.<edu.mit.csail.sdg.alloy4.ErrorSyntax: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>(r8, "Cannot specify a bitwidth less than 1");

        throw $r9;

     label1:
        if i0 <= 30 goto label2;

        $r7 = new edu.mit.csail.sdg.alloy4.ErrorSyntax;

        specialinvoke $r7.<edu.mit.csail.sdg.alloy4.ErrorSyntax: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>(r8, "Cannot specify a bitwidth greater than 30");

        throw $r7;

     label2:
        r0.<minalloy.translator.MinScopeComputer: int bitwidth> = i0;

        r0.<minalloy.translator.MinScopeComputer: int maxseq> = 0;

        $r1 = r0.<minalloy.translator.MinScopeComputer: java.util.IdentityHashMap sig2scope>;

        $r2 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig SIGINT>;

        $i1 = r0.<minalloy.translator.MinScopeComputer: int bitwidth>;

        $i2 = 1 << $i1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r1.<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r4 = r0.<minalloy.translator.MinScopeComputer: java.util.IdentityHashMap sig2scope>;

        $r5 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig SEQIDX>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke $r4.<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        return;
    }

    private void setMaxSeq(edu.mit.csail.sdg.alloy4.Pos, int) throws edu.mit.csail.sdg.alloy4.ErrorAPI, edu.mit.csail.sdg.alloy4.ErrorSyntax
    {
        java.lang.Integer $r3;
        minalloy.translator.MinScopeComputer r0;
        int i0, $i1, $i2, $i3, $i4;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig $r2;
        edu.mit.csail.sdg.alloy4.ErrorSyntax $r4, $r11;
        java.lang.String $r10;
        java.util.IdentityHashMap $r1;
        edu.mit.csail.sdg.alloy4.Pos r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;

        r0 := @this: minalloy.translator.MinScopeComputer;

        r5 := @parameter0: edu.mit.csail.sdg.alloy4.Pos;

        i0 := @parameter1: int;

        if i0 >= 0 goto label1;

        $r11 = new edu.mit.csail.sdg.alloy4.ErrorSyntax;

        specialinvoke $r11.<edu.mit.csail.sdg.alloy4.ErrorSyntax: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>(r5, "The maximum sequence length cannot be negative.");

        throw $r11;

     label1:
        $i1 = specialinvoke r0.<minalloy.translator.MinScopeComputer: int max()>();

        if i0 <= $i1 goto label2;

        $r4 = new edu.mit.csail.sdg.alloy4.ErrorSyntax;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("With integer bitwidth of ");

        $i3 = r0.<minalloy.translator.MinScopeComputer: int bitwidth>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", you cannot have sequence length longer than ");

        $i4 = specialinvoke r0.<minalloy.translator.MinScopeComputer: int max()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<edu.mit.csail.sdg.alloy4.ErrorSyntax: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>(r5, $r10);

        throw $r4;

     label2:
        r0.<minalloy.translator.MinScopeComputer: int maxseq> = i0;

        $r1 = r0.<minalloy.translator.MinScopeComputer: java.util.IdentityHashMap sig2scope>;

        $r2 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig SEQIDX>;

        $i2 = r0.<minalloy.translator.MinScopeComputer: int maxseq>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r1.<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        return;
    }

    private int max()
    {
        int $i0, $i1, $i2, $i3;
        minalloy.translator.MinScopeComputer r0;

        r0 := @this: minalloy.translator.MinScopeComputer;

        $i0 = r0.<minalloy.translator.MinScopeComputer: int bitwidth>;

        $i1 = $i0 - 1;

        $i2 = 1 << $i1;

        $i3 = $i2 - 1;

        return $i3;
    }

    private int min()
    {
        int $i0, $i1, $i2, $i3;
        minalloy.translator.MinScopeComputer r0;

        r0 := @this: minalloy.translator.MinScopeComputer;

        $i0 = r0.<minalloy.translator.MinScopeComputer: int bitwidth>;

        $i1 = $i0 - 1;

        $i2 = 1 << $i1;

        $i3 = 0 - $i2;

        return $i3;
    }

    private boolean derive_abstract_scope(java.lang.Iterable) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Sig r3, $r13, r14, r15;
        java.lang.Iterable r0;
        minalloy.translator.MinScopeComputer r9;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig $r5;
        int $i0, $i1, $i2, i3, $i4;
        edu.mit.csail.sdg.alloy4.ErrorSyntax $r10;
        edu.mit.csail.sdg.alloy4compiler.ast.Command $r11;
        boolean $z0, $z1, z2, $z3, $z4;
        edu.mit.csail.sdg.alloy4.SafeList $r6;
        java.util.Iterator $r1, $r7;
        edu.mit.csail.sdg.alloy4.Pos $r4, $r12;
        java.lang.Object $r2, $r8;

        r9 := @this: minalloy.translator.MinScopeComputer;

        r0 := @parameter0: java.lang.Iterable;

        z2 = 0;

        $r1 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        goto label10;

     label01:
        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) $r2;

        $z0 = r3.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: boolean builtin>;

        if $z0 != 0 goto label10;

        $z1 = r3 instanceof edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig;

        if $z1 == 0 goto label10;

        $r4 = r3.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.Pos isAbstract>;

        if $r4 == null goto label10;

        $r5 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) r3;

        $r6 = virtualinvoke $r5.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4.SafeList children()>();

        $i0 = virtualinvoke $r6.<edu.mit.csail.sdg.alloy4.SafeList: int size()>();

        if $i0 != 0 goto label02;

        goto label10;

     label02:
        r14 = null;

        i3 = 0;

        $r7 = virtualinvoke $r6.<edu.mit.csail.sdg.alloy4.SafeList: java.util.Iterator iterator()>();

        goto label05;

     label03:
        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r15 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) $r8;

        $i1 = virtualinvoke r9.<minalloy.translator.MinScopeComputer: int sig2scope(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r15);

        if $i1 >= 0 goto label04;

        if r14 != null goto label10;

        r14 = r15;

        goto label05;

     label04:
        i3 = i3 + $i1;

        if i3 >= 0 goto label05;

        $r10 = new edu.mit.csail.sdg.alloy4.ErrorSyntax;

        $r11 = r9.<minalloy.translator.MinScopeComputer: edu.mit.csail.sdg.alloy4compiler.ast.Command cmd>;

        $r12 = $r11.<edu.mit.csail.sdg.alloy4compiler.ast.Command: edu.mit.csail.sdg.alloy4.Pos pos>;

        specialinvoke $r10.<edu.mit.csail.sdg.alloy4.ErrorSyntax: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r12, "The number of atoms exceeds the internal limit of 2147483647");

        throw $r10;

     label05:
        $z3 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label03;

        $i2 = virtualinvoke r9.<minalloy.translator.MinScopeComputer: int sig2scope(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r3);

        if $i2 >= 0 goto label07;

        if r14 == null goto label06;

        goto label10;

     label06:
        specialinvoke r9.<minalloy.translator.MinScopeComputer: void sig2scope(edu.mit.csail.sdg.alloy4compiler.ast.Sig,int)>(r3, i3);

        z2 = 1;

        goto label10;

     label07:
        if r14 == null goto label10;

        $r13 = r14;

        if $i2 >= i3 goto label08;

        $i4 = 0;

        goto label09;

     label08:
        $i4 = $i2 - i3;

     label09:
        specialinvoke r9.<minalloy.translator.MinScopeComputer: void sig2scope(edu.mit.csail.sdg.alloy4compiler.ast.Sig,int)>($r13, $i4);

        z2 = 1;

     label10:
        $z4 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z4 != 0 goto label01;

        return z2;
    }

    private boolean derive_overall_scope(java.lang.Iterable) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Sig r5;
        minalloy.translator.MinScopeComputer r0;
        java.lang.Iterable r3;
        int $i0, i1, $i2, $i3, $i4;
        edu.mit.csail.sdg.alloy4.ErrorSyntax $r7;
        java.lang.String $r13;
        edu.mit.csail.sdg.alloy4compiler.ast.Command $r1, $r2, $r8, $r14;
        boolean $z0, $z1, z2, $z3;
        edu.mit.csail.sdg.alloy4.ConstList $r15;
        java.util.Iterator $r16;
        edu.mit.csail.sdg.alloy4.Pos $r6, $r10;
        java.lang.Object $r4;
        java.lang.StringBuilder $r9, $r11, $r12;

        r0 := @this: minalloy.translator.MinScopeComputer;

        r3 := @parameter0: java.lang.Iterable;

        z2 = 0;

        $r1 = r0.<minalloy.translator.MinScopeComputer: edu.mit.csail.sdg.alloy4compiler.ast.Command cmd>;

        $i0 = $r1.<edu.mit.csail.sdg.alloy4compiler.ast.Command: int overall>;

        if $i0 >= 0 goto label1;

        $r14 = r0.<minalloy.translator.MinScopeComputer: edu.mit.csail.sdg.alloy4compiler.ast.Command cmd>;

        $r15 = $r14.<edu.mit.csail.sdg.alloy4compiler.ast.Command: edu.mit.csail.sdg.alloy4.ConstList scope>;

        $i3 = virtualinvoke $r15.<edu.mit.csail.sdg.alloy4.ConstList: int size()>();

        if $i3 != 0 goto label1;

        $i4 = 3;

        goto label2;

     label1:
        $r2 = r0.<minalloy.translator.MinScopeComputer: edu.mit.csail.sdg.alloy4compiler.ast.Command cmd>;

        $i4 = $r2.<edu.mit.csail.sdg.alloy4compiler.ast.Command: int overall>;

     label2:
        i1 = $i4;

        $r16 = interfaceinvoke r3.<java.lang.Iterable: java.util.Iterator iterator()>();

        goto label6;

     label3:
        $r4 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r5 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) $r4;

        $z0 = r5.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: boolean builtin>;

        if $z0 != 0 goto label6;

        $z1 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: boolean isTopLevel()>();

        if $z1 == 0 goto label6;

        $i2 = virtualinvoke r0.<minalloy.translator.MinScopeComputer: int sig2scope(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r5);

        if $i2 >= 0 goto label6;

        $r6 = r5.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.Pos isEnum>;

        if $r6 == null goto label4;

        specialinvoke r0.<minalloy.translator.MinScopeComputer: void sig2scope(edu.mit.csail.sdg.alloy4compiler.ast.Sig,int)>(r5, 0);

        goto label6;

     label4:
        if i1 >= 0 goto label5;

        $r7 = new edu.mit.csail.sdg.alloy4.ErrorSyntax;

        $r8 = r0.<minalloy.translator.MinScopeComputer: edu.mit.csail.sdg.alloy4compiler.ast.Command cmd>;

        $r10 = $r8.<edu.mit.csail.sdg.alloy4compiler.ast.Command: edu.mit.csail.sdg.alloy4.Pos pos>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("You must specify a scope for sig \"");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<edu.mit.csail.sdg.alloy4.ErrorSyntax: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r10, $r13);

        throw $r7;

     label5:
        specialinvoke r0.<minalloy.translator.MinScopeComputer: void sig2scope(edu.mit.csail.sdg.alloy4compiler.ast.Sig,int)>(r5, i1);

        z2 = 1;

     label6:
        $z3 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label3;

        return z2;
    }

    private boolean derive_scope_from_parent(java.lang.Iterable) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Sig r3, r14;
        java.lang.Iterable r0;
        minalloy.translator.MinScopeComputer r4;
        int $i0, $i1;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig $r5, r6;
        edu.mit.csail.sdg.alloy4.ErrorSyntax $r7;
        java.lang.String $r13;
        edu.mit.csail.sdg.alloy4compiler.ast.Command $r8;
        boolean $z0, $z1, $z2, z3, $z4;
        java.util.Iterator $r1;
        edu.mit.csail.sdg.alloy4.Pos $r10;
        java.lang.Object $r2;
        java.lang.StringBuilder $r9, $r11, $r12;

        r4 := @this: minalloy.translator.MinScopeComputer;

        r0 := @parameter0: java.lang.Iterable;

        z3 = 0;

        r14 = null;

        $r1 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        goto label3;

     label1:
        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) $r2;

        $z0 = r3.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: boolean builtin>;

        if $z0 != 0 goto label3;

        $z1 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: boolean isTopLevel()>();

        if $z1 != 0 goto label3;

        $i0 = virtualinvoke r4.<minalloy.translator.MinScopeComputer: int sig2scope(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r3);

        if $i0 >= 0 goto label3;

        $z2 = r3 instanceof edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig;

        if $z2 == 0 goto label3;

        $r5 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) r3;

        r6 = $r5.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig parent>;

        $i1 = virtualinvoke r4.<minalloy.translator.MinScopeComputer: int sig2scope(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r6);

        if $i1 < 0 goto label2;

        specialinvoke r4.<minalloy.translator.MinScopeComputer: void sig2scope(edu.mit.csail.sdg.alloy4compiler.ast.Sig,int)>(r3, $i1);

        z3 = 1;

        goto label3;

     label2:
        r14 = r3;

     label3:
        $z4 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z4 != 0 goto label1;

        if z3 == 0 goto label4;

        return 1;

     label4:
        if r14 != null goto label5;

        return 0;

     label5:
        $r7 = new edu.mit.csail.sdg.alloy4.ErrorSyntax;

        $r8 = r4.<minalloy.translator.MinScopeComputer: edu.mit.csail.sdg.alloy4compiler.ast.Command cmd>;

        $r10 = $r8.<edu.mit.csail.sdg.alloy4compiler.ast.Command: edu.mit.csail.sdg.alloy4.Pos pos>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("You must specify a scope for sig \"");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<edu.mit.csail.sdg.alloy4.ErrorSyntax: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r10, $r13);

        throw $r7;
    }

    private int computeLowerBound(edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) throws edu.mit.csail.sdg.alloy4.Err
    {
        java.lang.Integer $r35;
        minalloy.translator.MinScopeComputer r1;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig r0, r45;
        edu.mit.csail.sdg.alloy4.UniqueNameGenerator $r5;
        edu.mit.csail.sdg.alloy4compiler.ast.Command $r15;
        edu.mit.csail.sdg.alloy4.A4Reporter $r18, $r26, $r37;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6;
        edu.mit.csail.sdg.alloy4.SafeList $r2;
        java.util.IdentityHashMap $r34;
        java.util.List $r13;
        edu.mit.csail.sdg.alloy4.Pos $r24;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r17, $r19, $r20, $r21, $r22, $r25, $r27, $r28, $r29, $r30, $r31, $r32, $r36, $r38, $r39, $r40, $r41, $r42, $r43;
        int $i0, $i1, $i2, $i3, i4, i5, i6;
        java.lang.String $r6, $r12, $r14, $r23, $r33, $r44, r46;
        edu.mit.csail.sdg.alloy4.ConstList $r16;
        java.util.Iterator $r3;
        java.lang.Object $r4;

        r1 := @this: minalloy.translator.MinScopeComputer;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig;

        $z0 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: boolean builtin>;

        if $z0 == 0 goto label01;

        return 0;

     label01:
        $i0 = virtualinvoke r1.<minalloy.translator.MinScopeComputer: int sig2scope(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r0);

        i4 = $i0;

        i5 = 0;

        $z1 = virtualinvoke r1.<minalloy.translator.MinScopeComputer: boolean isExact(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r0);

        z6 = $z1;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4.SafeList children()>();

        $r3 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.SafeList: java.util.Iterator iterator()>();

        goto label03;

     label02:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r45 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) $r4;

        $i1 = specialinvoke r1.<minalloy.translator.MinScopeComputer: int computeLowerBound(edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig)>(r45);

        i5 = i5 + $i1;

     label03:
        $z2 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label02;

        if $i0 >= i5 goto label06;

        if $z1 == 0 goto label04;

        $r37 = r1.<minalloy.translator.MinScopeComputer: edu.mit.csail.sdg.alloy4.A4Reporter rep>;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>(java.lang.String)>("Sig ");

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" scope raised from ==");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to be ==");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r37.<edu.mit.csail.sdg.alloy4.A4Reporter: void scope(java.lang.String)>($r44);

        goto label05;

     label04:
        $r26 = r1.<minalloy.translator.MinScopeComputer: edu.mit.csail.sdg.alloy4.A4Reporter rep>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>(java.lang.String)>("Sig ");

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" scope raised from <=");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to be <=");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<edu.mit.csail.sdg.alloy4.A4Reporter: void scope(java.lang.String)>($r33);

     label05:
        i4 = i5;

        $r34 = r1.<minalloy.translator.MinScopeComputer: java.util.IdentityHashMap sig2scope>;

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        virtualinvoke $r34.<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r35);

     label06:
        if $z1 != 0 goto label07;

        $r15 = r1.<minalloy.translator.MinScopeComputer: edu.mit.csail.sdg.alloy4compiler.ast.Command cmd>;

        $r16 = $r15.<edu.mit.csail.sdg.alloy4compiler.ast.Command: edu.mit.csail.sdg.alloy4.ConstList additionalExactScopes>;

        $z5 = virtualinvoke $r16.<edu.mit.csail.sdg.alloy4.ConstList: boolean contains(java.lang.Object)>(r0);

        if $z5 == 0 goto label07;

        z6 = 1;

        $r18 = r1.<minalloy.translator.MinScopeComputer: edu.mit.csail.sdg.alloy4.A4Reporter rep>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("Sig ");

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" forced to have exactly ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" atoms.\n");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<edu.mit.csail.sdg.alloy4.A4Reporter: void scope(java.lang.String)>($r23);

        $r24 = <edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos UNKNOWN>;

        specialinvoke r1.<minalloy.translator.MinScopeComputer: void makeExact(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Sig)>($r24, r0);

     label07:
        if i4 <= i5 goto label12;

        if z6 != 0 goto label08;

        $z4 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: boolean isTopLevel()>();

        if $z4 == 0 goto label12;

     label08:
        $i3 = i4 - i5;

        $r14 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: java.lang.String label>;

        r46 = $r14;

        $z3 = virtualinvoke $r14.<java.lang.String: boolean startsWith(java.lang.String)>("this/");

        if $z3 == 0 goto label09;

        r46 = virtualinvoke $r14.<java.lang.String: java.lang.String substring(int)>(5);

     label09:
        $r5 = r1.<minalloy.translator.MinScopeComputer: edu.mit.csail.sdg.alloy4.UniqueNameGenerator un>;

        $r6 = virtualinvoke $r5.<edu.mit.csail.sdg.alloy4.UniqueNameGenerator: java.lang.String make(java.lang.String)>(r46);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        i6 = 0;

        goto label11;

     label10:
        $i2 = virtualinvoke $r7.<java.lang.StringBuilder: int length()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>(0, $i2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(36);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = r1.<minalloy.translator.MinScopeComputer: java.util.List atoms>;

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r12);

        i5 = i5 + 1;

        i6 = i6 + 1;

     label11:
        if i6 < $i3 goto label10;

     label12:
        return i5;
    }

    private void <init>(edu.mit.csail.sdg.alloy4.A4Reporter, java.lang.Iterable, edu.mit.csail.sdg.alloy4compiler.ast.Command) throws edu.mit.csail.sdg.alloy4.Err
    {
        minalloy.translator.MinScopeComputer r0;
        edu.mit.csail.sdg.alloy4.UniqueNameGenerator $r87;
        edu.mit.csail.sdg.alloy4compiler.ast.Command r6;
        java.lang.StringBuilder $r23, $r24, $r25, $r30, $r31, $r32, $r37, $r38, $r39, $r45, $r46, $r55, $r56, $r57, $r76, $r91, $r95, $r97, $r99, $r101, $r103;
        java.util.ArrayList $r86;
        java.lang.String $r26, $r33, $r40, $r44, $r47, $r58, $r77;
        edu.mit.csail.sdg.alloy4.ConstList $r7;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig $r10, $r11, $r12, $r13, $r14, $r73;
        edu.mit.csail.sdg.alloy4.ErrorSyntax $r88, $r89, $r90, $r92, $r93, $r94, $r96, $r98, $r100, $r102;
        edu.mit.csail.sdg.alloy4.A4Reporter r5;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.util.IdentityHashMap $r84, $r85;
        java.util.List $r75;
        edu.mit.csail.sdg.alloy4.Pos $r15, $r16, $r17, $r18, $r19, $r22, $r29, $r36, $r43, $r49, $r51, $r54, $r60, $r62, $r64, $r68, $r69, $r70, $r71, $r81;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig r79, r80, r83;
        java.lang.Iterable r65;
        edu.mit.csail.sdg.alloy4compiler.ast.CommandScope r78;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, $i13;
        java.util.Iterator $r8, $r66, $r82;
        java.lang.Object $r9, $r67, $r72;

        r0 := @this: minalloy.translator.MinScopeComputer;

        r5 := @parameter0: edu.mit.csail.sdg.alloy4.A4Reporter;

        r65 := @parameter1: java.lang.Iterable;

        r6 := @parameter2: edu.mit.csail.sdg.alloy4compiler.ast.Command;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<minalloy.translator.MinScopeComputer: int bitwidth> = 4;

        r0.<minalloy.translator.MinScopeComputer: int maxseq> = 4;

        $i13 = (int) -1;

        r0.<minalloy.translator.MinScopeComputer: int maxstring> = $i13;

        $r84 = new java.util.IdentityHashMap;

        specialinvoke $r84.<java.util.IdentityHashMap: void <init>()>();

        r0.<minalloy.translator.MinScopeComputer: java.util.IdentityHashMap sig2scope> = $r84;

        $r85 = new java.util.IdentityHashMap;

        specialinvoke $r85.<java.util.IdentityHashMap: void <init>()>();

        r0.<minalloy.translator.MinScopeComputer: java.util.IdentityHashMap exact> = $r85;

        $r86 = new java.util.ArrayList;

        specialinvoke $r86.<java.util.ArrayList: void <init>()>();

        r0.<minalloy.translator.MinScopeComputer: java.util.List atoms> = $r86;

        $r87 = new edu.mit.csail.sdg.alloy4.UniqueNameGenerator;

        specialinvoke $r87.<edu.mit.csail.sdg.alloy4.UniqueNameGenerator: void <init>()>();

        r0.<minalloy.translator.MinScopeComputer: edu.mit.csail.sdg.alloy4.UniqueNameGenerator un> = $r87;

        r0.<minalloy.translator.MinScopeComputer: edu.mit.csail.sdg.alloy4.A4Reporter rep> = r5;

        r0.<minalloy.translator.MinScopeComputer: edu.mit.csail.sdg.alloy4compiler.ast.Command cmd> = r6;

        $r7 = r6.<edu.mit.csail.sdg.alloy4compiler.ast.Command: edu.mit.csail.sdg.alloy4.ConstList scope>;

        $r8 = virtualinvoke $r7.<edu.mit.csail.sdg.alloy4.ConstList: java.util.Iterator iterator()>();

        goto label13;

     label01:
        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r78 = (edu.mit.csail.sdg.alloy4compiler.ast.CommandScope) $r9;

        r79 = r78.<edu.mit.csail.sdg.alloy4compiler.ast.CommandScope: edu.mit.csail.sdg.alloy4compiler.ast.Sig sig>;

        i8 = r78.<edu.mit.csail.sdg.alloy4compiler.ast.CommandScope: int startingScope>;

        z0 = r78.<edu.mit.csail.sdg.alloy4compiler.ast.CommandScope: boolean isExact>;

        $r10 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig UNIV>;

        if r79 != $r10 goto label02;

        $r88 = new edu.mit.csail.sdg.alloy4.ErrorSyntax;

        $r64 = r6.<edu.mit.csail.sdg.alloy4compiler.ast.Command: edu.mit.csail.sdg.alloy4.Pos pos>;

        specialinvoke $r88.<edu.mit.csail.sdg.alloy4.ErrorSyntax: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r64, "You cannot set a scope on \"univ\".");

        throw $r88;

     label02:
        $r11 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig SIGINT>;

        if r79 != $r11 goto label03;

        $r89 = new edu.mit.csail.sdg.alloy4.ErrorSyntax;

        $r62 = r6.<edu.mit.csail.sdg.alloy4compiler.ast.Command: edu.mit.csail.sdg.alloy4.Pos pos>;

        specialinvoke $r89.<edu.mit.csail.sdg.alloy4.ErrorSyntax: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r62, "You can no longer set a scope on \"Int\". The number of atoms in Int is always exactly equal to 2^(integer bitwidth).\n");

        throw $r89;

     label03:
        $r12 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig SEQIDX>;

        if r79 != $r12 goto label04;

        $r90 = new edu.mit.csail.sdg.alloy4.ErrorSyntax;

        $r60 = r6.<edu.mit.csail.sdg.alloy4compiler.ast.Command: edu.mit.csail.sdg.alloy4.Pos pos>;

        specialinvoke $r90.<edu.mit.csail.sdg.alloy4.ErrorSyntax: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r60, "You cannot set a scope on \"seq/Int\". To set the maximum allowed sequence length, use the seq keyword.\n");

        throw $r90;

     label04:
        $r13 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig STRING>;

        if r79 != $r13 goto label07;

        $i0 = r0.<minalloy.translator.MinScopeComputer: int maxstring>;

        if $i0 < 0 goto label05;

        $r92 = new edu.mit.csail.sdg.alloy4.ErrorSyntax;

        $r54 = r6.<edu.mit.csail.sdg.alloy4compiler.ast.Command: edu.mit.csail.sdg.alloy4.Pos pos>;

        $r91 = new java.lang.StringBuilder;

        specialinvoke $r91.<java.lang.StringBuilder: void <init>(java.lang.String)>("Sig \"String\" already has a scope of ");

        $i1 = r0.<minalloy.translator.MinScopeComputer: int maxstring>;

        $r55 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", so we cannot set it to be ");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r92.<edu.mit.csail.sdg.alloy4.ErrorSyntax: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r54, $r58);

        throw $r92;

     label05:
        if z0 != 0 goto label06;

        $r93 = new edu.mit.csail.sdg.alloy4.ErrorSyntax;

        $r51 = r6.<edu.mit.csail.sdg.alloy4compiler.ast.Command: edu.mit.csail.sdg.alloy4.Pos pos>;

        specialinvoke $r93.<edu.mit.csail.sdg.alloy4.ErrorSyntax: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r51, "Sig \"String\" must have an exact scope.");

        throw $r93;

     label06:
        r0.<minalloy.translator.MinScopeComputer: int maxstring> = i8;

        goto label13;

     label07:
        $r14 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig NONE>;

        if r79 != $r14 goto label08;

        $r94 = new edu.mit.csail.sdg.alloy4.ErrorSyntax;

        $r49 = r6.<edu.mit.csail.sdg.alloy4compiler.ast.Command: edu.mit.csail.sdg.alloy4.Pos pos>;

        specialinvoke $r94.<edu.mit.csail.sdg.alloy4.ErrorSyntax: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r49, "You cannot set a scope on \"none\".");

        throw $r94;

     label08:
        $r15 = r79.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.Pos isEnum>;

        if $r15 == null goto label09;

        $r96 = new edu.mit.csail.sdg.alloy4.ErrorSyntax;

        $r43 = r6.<edu.mit.csail.sdg.alloy4compiler.ast.Command: edu.mit.csail.sdg.alloy4.Pos pos>;

        $r95 = new java.lang.StringBuilder;

        specialinvoke $r95.<java.lang.StringBuilder: void <init>(java.lang.String)>("You cannot set a scope on the enum \"");

        $r44 = r79.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: java.lang.String label>;

        $r45 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r96.<edu.mit.csail.sdg.alloy4.ErrorSyntax: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r43, $r47);

        throw $r96;

     label09:
        $r16 = r79.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.Pos isOne>;

        if $r16 == null goto label10;

        if i8 == 1 goto label10;

        $r98 = new edu.mit.csail.sdg.alloy4.ErrorSyntax;

        $r36 = r6.<edu.mit.csail.sdg.alloy4compiler.ast.Command: edu.mit.csail.sdg.alloy4.Pos pos>;

        $r97 = new java.lang.StringBuilder;

        specialinvoke $r97.<java.lang.StringBuilder: void <init>(java.lang.String)>("Sig \"");

        $r37 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r79);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" has the multiplicity of \"one\", so its scope must be 1, and cannot be ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r98.<edu.mit.csail.sdg.alloy4.ErrorSyntax: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r36, $r40);

        throw $r98;

     label10:
        $r17 = r79.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.Pos isLone>;

        if $r17 == null goto label11;

        if i8 <= 1 goto label11;

        $r100 = new edu.mit.csail.sdg.alloy4.ErrorSyntax;

        $r29 = r6.<edu.mit.csail.sdg.alloy4compiler.ast.Command: edu.mit.csail.sdg.alloy4.Pos pos>;

        $r99 = new java.lang.StringBuilder;

        specialinvoke $r99.<java.lang.StringBuilder: void <init>(java.lang.String)>("Sig \"");

        $r30 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r79);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" has the multiplicity of \"lone\", so its scope must 0 or 1, and cannot be ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r100.<edu.mit.csail.sdg.alloy4.ErrorSyntax: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r29, $r33);

        throw $r100;

     label11:
        $r18 = r79.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.Pos isSome>;

        if $r18 == null goto label12;

        if i8 >= 1 goto label12;

        $r102 = new edu.mit.csail.sdg.alloy4.ErrorSyntax;

        $r22 = r6.<edu.mit.csail.sdg.alloy4compiler.ast.Command: edu.mit.csail.sdg.alloy4.Pos pos>;

        $r101 = new java.lang.StringBuilder;

        specialinvoke $r101.<java.lang.StringBuilder: void <init>(java.lang.String)>("Sig \"");

        $r23 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r79);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" has the multiplicity of \"some\", so its scope must 1 or above, and cannot be ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r102.<edu.mit.csail.sdg.alloy4.ErrorSyntax: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r22, $r26);

        throw $r102;

     label12:
        specialinvoke r0.<minalloy.translator.MinScopeComputer: void sig2scope(edu.mit.csail.sdg.alloy4compiler.ast.Sig,int)>(r79, i8);

        if z0 == 0 goto label13;

        $r19 = r6.<edu.mit.csail.sdg.alloy4compiler.ast.Command: edu.mit.csail.sdg.alloy4.Pos pos>;

        specialinvoke r0.<minalloy.translator.MinScopeComputer: void makeExact(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Sig)>($r19, r79);

     label13:
        $z8 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z8 != 0 goto label01;

        $r66 = interfaceinvoke r65.<java.lang.Iterable: java.util.Iterator iterator()>();

        goto label16;

     label14:
        $r67 = interfaceinvoke $r66.<java.util.Iterator: java.lang.Object next()>();

        r80 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) $r67;

        $z1 = r80 instanceof edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig;

        if $z1 == 0 goto label16;

        $r68 = r80.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.Pos isOne>;

        if $r68 == null goto label15;

        $r70 = r6.<edu.mit.csail.sdg.alloy4compiler.ast.Command: edu.mit.csail.sdg.alloy4.Pos pos>;

        specialinvoke r0.<minalloy.translator.MinScopeComputer: void makeExact(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Sig)>($r70, r80);

        specialinvoke r0.<minalloy.translator.MinScopeComputer: void sig2scope(edu.mit.csail.sdg.alloy4compiler.ast.Sig,int)>(r80, 1);

        goto label16;

     label15:
        $r69 = r80.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.Pos isLone>;

        if $r69 == null goto label16;

        $i2 = virtualinvoke r0.<minalloy.translator.MinScopeComputer: int sig2scope(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r80);

        if $i2 == 0 goto label16;

        specialinvoke r0.<minalloy.translator.MinScopeComputer: void sig2scope(edu.mit.csail.sdg.alloy4compiler.ast.Sig,int)>(r80, 1);

     label16:
        $z9 = interfaceinvoke $r66.<java.util.Iterator: boolean hasNext()>();

        if $z9 != 0 goto label14;

     label17:
        $z10 = specialinvoke r0.<minalloy.translator.MinScopeComputer: boolean derive_abstract_scope(java.lang.Iterable)>(r65);

        if $z10 == 0 goto label19;

     label18:
        $z7 = specialinvoke r0.<minalloy.translator.MinScopeComputer: boolean derive_abstract_scope(java.lang.Iterable)>(r65);

        if $z7 != 0 goto label18;

        goto label17;

     label19:
        $z2 = specialinvoke r0.<minalloy.translator.MinScopeComputer: boolean derive_overall_scope(java.lang.Iterable)>(r65);

        if $z2 == 0 goto label21;

     label20:
        $z6 = specialinvoke r0.<minalloy.translator.MinScopeComputer: boolean derive_overall_scope(java.lang.Iterable)>(r65);

        if $z6 != 0 goto label20;

        goto label17;

     label21:
        $z3 = specialinvoke r0.<minalloy.translator.MinScopeComputer: boolean derive_scope_from_parent(java.lang.Iterable)>(r65);

        if $z3 == 0 goto label23;

     label22:
        $z5 = specialinvoke r0.<minalloy.translator.MinScopeComputer: boolean derive_scope_from_parent(java.lang.Iterable)>(r65);

        if $z5 != 0 goto label22;

        goto label17;

     label23:
        i9 = r6.<edu.mit.csail.sdg.alloy4compiler.ast.Command: int maxseq>;

        i10 = r6.<edu.mit.csail.sdg.alloy4compiler.ast.Command: int bitwidth>;

        if i10 >= 0 goto label24;

        i10 = 4;

     label24:
        $r71 = r6.<edu.mit.csail.sdg.alloy4compiler.ast.Command: edu.mit.csail.sdg.alloy4.Pos pos>;

        specialinvoke r0.<minalloy.translator.MinScopeComputer: void setBitwidth(edu.mit.csail.sdg.alloy4.Pos,int)>($r71, i10);

        if i9 >= 0 goto label27;

        $i4 = r6.<edu.mit.csail.sdg.alloy4compiler.ast.Command: int overall>;

        if $i4 < 0 goto label25;

        i9 = r6.<edu.mit.csail.sdg.alloy4compiler.ast.Command: int overall>;

        goto label26;

     label25:
        i9 = 4;

     label26:
        $i5 = i10 - 1;

        $i6 = 1 << $i5;

        $i7 = $i6 - 1;

        if i9 <= $i7 goto label27;

        i9 = $i7;

     label27:
        $r81 = r6.<edu.mit.csail.sdg.alloy4compiler.ast.Command: edu.mit.csail.sdg.alloy4.Pos pos>;

        specialinvoke r0.<minalloy.translator.MinScopeComputer: void setMaxSeq(edu.mit.csail.sdg.alloy4.Pos,int)>($r81, i9);

        $r82 = interfaceinvoke r65.<java.lang.Iterable: java.util.Iterator iterator()>();

        goto label29;

     label28:
        $r72 = interfaceinvoke $r82.<java.util.Iterator: java.lang.Object next()>();

        r83 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) $r72;

        $z4 = virtualinvoke r83.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: boolean isTopLevel()>();

        if $z4 == 0 goto label29;

        $r73 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) r83;

        specialinvoke r0.<minalloy.translator.MinScopeComputer: int computeLowerBound(edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig)>($r73);

     label29:
        $z11 = interfaceinvoke $r82.<java.util.Iterator: boolean hasNext()>();

        if $z11 != 0 goto label28;

        $i3 = specialinvoke r0.<minalloy.translator.MinScopeComputer: int max()>();

        i11 = specialinvoke r0.<minalloy.translator.MinScopeComputer: int min()>();

        goto label31;

     label30:
        $r75 = r0.<minalloy.translator.MinScopeComputer: java.util.List atoms>;

        $r103 = new java.lang.StringBuilder;

        specialinvoke $r103.<java.lang.StringBuilder: void <init>()>();

        $r76 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r75.<java.util.List: boolean add(java.lang.Object)>($r77);

        i11 = i11 + 1;

     label31:
        if i11 <= $i3 goto label30;

        return;
    }

    static edu.mit.csail.sdg.alloy4.Pair compute(edu.mit.csail.sdg.alloy4.A4Reporter, minalloy.translator.MinA4Options, java.lang.Iterable, edu.mit.csail.sdg.alloy4compiler.ast.Command) throws edu.mit.csail.sdg.alloy4.Err
    {
        minalloy.translator.MinScopeComputer $r0;
        java.lang.Iterable r2;
        edu.mit.csail.sdg.alloy4.Pair $r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        java.lang.String $r8, $r11, $r18;
        edu.mit.csail.sdg.alloy4compiler.ast.Command r3;
        edu.mit.csail.sdg.alloy4.A4Reporter r1;
        minalloy.translator.MinA4Solution $r10;
        minalloy.translator.MinA4Options r12;
        java.util.Set $r4;
        java.util.List $r9, $r13;
        java.lang.StringBuilder $r5, $r6, $r7, $r15, $r16, $r17;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4.A4Reporter;

        r12 := @parameter1: minalloy.translator.MinA4Options;

        r2 := @parameter2: java.lang.Iterable;

        r3 := @parameter3: edu.mit.csail.sdg.alloy4compiler.ast.Command;

        $r0 = new minalloy.translator.MinScopeComputer;

        specialinvoke $r0.<minalloy.translator.MinScopeComputer: void <init>(edu.mit.csail.sdg.alloy4.A4Reporter,java.lang.Iterable,edu.mit.csail.sdg.alloy4compiler.ast.Command)>(r1, r2, r3);

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Command: java.util.Set getAllStringConstants(java.lang.Iterable)>(r2);

        $i0 = $r0.<minalloy.translator.MinScopeComputer: int maxstring>;

        if $i0 < 0 goto label1;

        $i6 = interfaceinvoke $r4.<java.util.Set: int size()>();

        $i7 = $r0.<minalloy.translator.MinScopeComputer: int maxstring>;

        if $i6 <= $i7 goto label1;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("Sig String expanded to contain all ");

        $i8 = interfaceinvoke $r4.<java.util.Set: int size()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" String constant(s) referenced by this command.\n");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<edu.mit.csail.sdg.alloy4.A4Reporter: void scope(java.lang.String)>($r18);

     label1:
        i9 = 0;

        goto label3;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("\"String");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r8);

        i9 = i9 + 1;

     label3:
        $i1 = interfaceinvoke $r4.<java.util.Set: int size()>();

        $i2 = $r0.<minalloy.translator.MinScopeComputer: int maxstring>;

        if $i1 < $i2 goto label2;

        $r9 = $r0.<minalloy.translator.MinScopeComputer: java.util.List atoms>;

        interfaceinvoke $r9.<java.util.List: boolean addAll(java.util.Collection)>($r4);

        $r10 = new minalloy.translator.MinA4Solution;

        $r11 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Command: java.lang.String toString()>();

        $i5 = $r0.<minalloy.translator.MinScopeComputer: int bitwidth>;

        $i4 = $r0.<minalloy.translator.MinScopeComputer: int maxseq>;

        $r13 = $r0.<minalloy.translator.MinScopeComputer: java.util.List atoms>;

        $i3 = r3.<edu.mit.csail.sdg.alloy4compiler.ast.Command: int expects>;

        specialinvoke $r10.<minalloy.translator.MinA4Solution: void <init>(java.lang.String,int,int,java.util.Set,java.util.Collection,edu.mit.csail.sdg.alloy4.A4Reporter,minalloy.translator.MinA4Options,int)>($r11, $i5, $i4, $r4, $r13, r1, r12, $i3);

        $r14 = new edu.mit.csail.sdg.alloy4.Pair;

        specialinvoke $r14.<edu.mit.csail.sdg.alloy4.Pair: void <init>(java.lang.Object,java.lang.Object)>($r10, $r0);

        return $r14;
    }
}
