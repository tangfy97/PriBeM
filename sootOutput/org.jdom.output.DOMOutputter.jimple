public class org.jdom.output.DOMOutputter extends java.lang.Object
{
    private static final java.lang.String CVS_ID;
    private static final java.lang.String DEFAULT_ADAPTER_CLASS;
    private java.lang.String adapterClass;

    public void <init>()
    {
        org.jdom.output.DOMOutputter r0;

        r0 := @this: org.jdom.output.DOMOutputter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.jdom.output.DOMOutputter r0;

        r0 := @this: org.jdom.output.DOMOutputter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.jdom.output.DOMOutputter: java.lang.String adapterClass> = r1;

        return;
    }

    private org.w3c.dom.Document createDOMDocument(org.jdom.DocType) throws org.jdom.JDOMException
    {
        org.jdom.output.DOMOutputter r0;
        org.jdom.JDOMException $r25;
        org.w3c.dom.Document $r5, $r9, $r24;
        org.jdom.DocType r4;
        java.lang.InstantiationException $r10, $r13, $r16;
        java.lang.String $r1, $r6;
        org.jdom.adapters.DOMAdapter r19, r20, $r23;
        java.lang.IllegalAccessException $r11, $r14, $r17;
        java.lang.Class $r2, $r7, $r21;
        java.lang.Object $r3, $r8, $r22;
        java.lang.ClassNotFoundException $r12, $r15, $r18;

        r0 := @this: org.jdom.output.DOMOutputter;

        r4 := @parameter0: org.jdom.DocType;

        $r1 = r0.<org.jdom.output.DOMOutputter: java.lang.String adapterClass>;

        if $r1 == null goto label05;

     label01:
        $r6 = r0.<org.jdom.output.DOMOutputter: java.lang.String adapterClass>;

        $r7 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.Object newInstance()>();

        r19 = (org.jdom.adapters.DOMAdapter) $r8;

        $r9 = interfaceinvoke r19.<org.jdom.adapters.DOMAdapter: org.w3c.dom.Document createDocument(org.jdom.DocType)>(r4);

        return $r9;

     label02:
        $r18 := @caughtexception;

        goto label09;

     label03:
        $r17 := @caughtexception;

        goto label09;

     label04:
        $r16 := @caughtexception;

        goto label09;

     label05:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.jdom.adapters.JAXPDOMAdapter");

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>();

        r20 = (org.jdom.adapters.DOMAdapter) $r3;

        $r5 = interfaceinvoke r20.<org.jdom.adapters.DOMAdapter: org.w3c.dom.Document createDocument(org.jdom.DocType)>(r4);

        return $r5;

     label06:
        $r15 := @caughtexception;

        goto label09;

     label07:
        $r14 := @caughtexception;

        goto label09;

     label08:
        $r13 := @caughtexception;

        goto label09;

     label09:
        $r21 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.jdom.adapters.XercesDOMAdapter");

        $r22 = virtualinvoke $r21.<java.lang.Class: java.lang.Object newInstance()>();

        $r23 = (org.jdom.adapters.DOMAdapter) $r22;

        $r24 = interfaceinvoke $r23.<org.jdom.adapters.DOMAdapter: org.w3c.dom.Document createDocument(org.jdom.DocType)>(r4);

        return $r24;

     label10:
        $r12 := @caughtexception;

        goto label13;

     label11:
        $r11 := @caughtexception;

        goto label13;

     label12:
        $r10 := @caughtexception;

     label13:
        $r25 = new org.jdom.JDOMException;

        specialinvoke $r25.<org.jdom.JDOMException: void <init>(java.lang.String)>("No JAXP or default parser available");

        throw $r25;

        catch java.lang.ClassNotFoundException from label01 to label02 with label02;
        catch java.lang.IllegalAccessException from label01 to label02 with label03;
        catch java.lang.InstantiationException from label01 to label02 with label04;
        catch java.lang.ClassNotFoundException from label05 to label06 with label06;
        catch java.lang.IllegalAccessException from label05 to label06 with label07;
        catch java.lang.InstantiationException from label05 to label06 with label08;
        catch java.lang.ClassNotFoundException from label09 to label10 with label10;
        catch java.lang.IllegalAccessException from label09 to label10 with label11;
        catch java.lang.InstantiationException from label09 to label10 with label12;
    }

    private static java.lang.String getXmlnsTagFor(org.jdom.Namespace)
    {
        java.lang.StringBuffer $r2, $r4, $r6, $r9;
        org.jdom.Namespace r0;
        java.lang.String $r1, $r3, $r5, $r7, $r8, r10;
        boolean $z0;

        r0 := @parameter0: org.jdom.Namespace;

        r10 = "xmlns";

        $r1 = virtualinvoke r0.<org.jdom.Namespace: java.lang.String getPrefix()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label1;

        $r2 = new java.lang.StringBuffer;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("xmlns");

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = new java.lang.StringBuffer;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r6.<java.lang.StringBuffer: void <init>(java.lang.String)>($r7);

        $r8 = virtualinvoke r0.<org.jdom.Namespace: java.lang.String getPrefix()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        return r10;
    }

    private org.w3c.dom.Attr output(org.jdom.Attribute, org.w3c.dom.Document) throws org.jdom.JDOMException
    {
        org.jdom.output.DOMOutputter r14;
        org.w3c.dom.Attr r15;
        org.jdom.JDOMException $r9;
        org.w3c.dom.Document r3;
        java.lang.StringBuffer $r10, $r12;
        org.jdom.Namespace $r1, $r2;
        java.lang.String $r4, $r5, $r6, $r7, $r11, $r13;
        org.jdom.Attribute r0;
        java.lang.Exception $r8;

        r14 := @this: org.jdom.output.DOMOutputter;

        r0 := @parameter0: org.jdom.Attribute;

        r3 := @parameter1: org.w3c.dom.Document;

     label1:
        $r1 = virtualinvoke r0.<org.jdom.Attribute: org.jdom.Namespace getNamespace()>();

        $r2 = <org.jdom.Namespace: org.jdom.Namespace NO_NAMESPACE>;

        if $r1 != $r2 goto label2;

        $r7 = virtualinvoke r0.<org.jdom.Attribute: java.lang.String getQualifiedName()>();

        r15 = interfaceinvoke r3.<org.w3c.dom.Document: org.w3c.dom.Attr createAttribute(java.lang.String)>($r7);

        goto label3;

     label2:
        $r4 = virtualinvoke r0.<org.jdom.Attribute: java.lang.String getNamespaceURI()>();

        $r5 = virtualinvoke r0.<org.jdom.Attribute: java.lang.String getQualifiedName()>();

        r15 = interfaceinvoke r3.<org.w3c.dom.Document: org.w3c.dom.Attr createAttributeNS(java.lang.String,java.lang.String)>($r4, $r5);

     label3:
        $r6 = virtualinvoke r0.<org.jdom.Attribute: java.lang.String getValue()>();

        interfaceinvoke r15.<org.w3c.dom.Attr: void setValue(java.lang.String)>($r6);

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;

        $r9 = new org.jdom.JDOMException;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>(java.lang.String)>("Exception outputting Attribute ");

        $r11 = virtualinvoke r0.<org.jdom.Attribute: java.lang.String getQualifiedName()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r9.<org.jdom.JDOMException: void <init>(java.lang.String,java.lang.Throwable)>($r13, $r8);

        throw $r9;

     label6:
        return r15;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    public org.w3c.dom.Document output(org.jdom.Document) throws org.jdom.JDOMException
    {
        java.lang.Throwable $r21;
        org.jdom.Comment r24;
        org.w3c.dom.ProcessingInstruction $r16;
        org.jdom.output.NamespaceStack $r0;
        org.jdom.output.DOMOutputter r3;
        org.jdom.Document r1;
        org.jdom.JDOMException $r8, $r22;
        org.w3c.dom.Document $r4;
        java.lang.StringBuffer $r9, $r12;
        org.jdom.DocType $r2;
        java.lang.String $r11, $r13, $r14, $r15, $r17;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.jdom.ProcessingInstruction r25;
        java.util.Iterator $r6;
        org.w3c.dom.Comment $r18;
        java.util.List $r5;
        org.w3c.dom.Element $r19, $r20;
        java.lang.Object $r7;
        java.lang.Class $r10;
        org.jdom.Element r23;

        r3 := @this: org.jdom.output.DOMOutputter;

        r1 := @parameter0: org.jdom.Document;

        $r0 = new org.jdom.output.NamespaceStack;

        specialinvoke $r0.<org.jdom.output.NamespaceStack: void <init>()>();

     label01:
        $r2 = virtualinvoke r1.<org.jdom.Document: org.jdom.DocType getDocType()>();

        $r4 = specialinvoke r3.<org.jdom.output.DOMOutputter: org.w3c.dom.Document createDOMDocument(org.jdom.DocType)>($r2);

        $r5 = virtualinvoke r1.<org.jdom.Document: java.util.List getContent()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

        goto label07;

     label02:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $z0 = $r7 instanceof org.jdom.Element;

        if $z0 == 0 goto label04;

        r23 = (org.jdom.Element) $r7;

        $r19 = specialinvoke r3.<org.jdom.output.DOMOutputter: org.w3c.dom.Element output(org.jdom.Element,org.w3c.dom.Document,org.jdom.output.NamespaceStack)>(r23, $r4, $r0);

        $r20 = interfaceinvoke $r4.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        if $r20 != null goto label03;

        interfaceinvoke $r4.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r19);

        goto label07;

     label03:
        interfaceinvoke $r4.<org.w3c.dom.Node: org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)>($r19, $r20);

        goto label07;

     label04:
        $z1 = $r7 instanceof org.jdom.Comment;

        if $z1 == 0 goto label05;

        r24 = (org.jdom.Comment) $r7;

        $r17 = virtualinvoke r24.<org.jdom.Comment: java.lang.String getText()>();

        $r18 = interfaceinvoke $r4.<org.w3c.dom.Document: org.w3c.dom.Comment createComment(java.lang.String)>($r17);

        interfaceinvoke $r4.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r18);

        goto label07;

     label05:
        $z2 = $r7 instanceof org.jdom.ProcessingInstruction;

        if $z2 == 0 goto label06;

        r25 = (org.jdom.ProcessingInstruction) $r7;

        $r14 = virtualinvoke r25.<org.jdom.ProcessingInstruction: java.lang.String getTarget()>();

        $r15 = virtualinvoke r25.<org.jdom.ProcessingInstruction: java.lang.String getData()>();

        $r16 = interfaceinvoke $r4.<org.w3c.dom.Document: org.w3c.dom.ProcessingInstruction createProcessingInstruction(java.lang.String,java.lang.String)>($r14, $r15);

        interfaceinvoke $r4.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r16);

        goto label07;

     label06:
        $z3 = $r7 instanceof org.jdom.DocType;

        if $z3 != 0 goto label07;

        $r8 = new org.jdom.JDOMException;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>(java.lang.String)>("Document contained top-level content with type:");

        $r10 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r8.<org.jdom.JDOMException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label07:
        $z4 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z4 != 0 goto label02;

     label08:
        goto label10;

     label09:
        $r21 := @caughtexception;

        $r22 = new org.jdom.JDOMException;

        specialinvoke $r22.<org.jdom.JDOMException: void <init>(java.lang.String,java.lang.Throwable)>("Exception outputting Document", $r21);

        throw $r22;

     label10:
        return $r4;

        catch java.lang.Throwable from label01 to label08 with label09;
    }

    private org.w3c.dom.Element output(org.jdom.Element, org.w3c.dom.Document, org.jdom.output.NamespaceStack) throws org.jdom.JDOMException
    {
        org.w3c.dom.Text $r50, $r53;
        org.jdom.output.DOMOutputter r18;
        org.w3c.dom.Document r4;
        org.w3c.dom.CDATASection $r52;
        org.jdom.Namespace $r2, $r3, $r7, $r8, $r20, $r21, $r27, $r55, r72, $r74, $r75;
        org.jdom.Attribute r73;
        java.lang.Exception $r63;
        org.jdom.Comment r80;
        java.lang.StringBuffer $r37, $r40, $r65, $r67;
        java.lang.String $r5, $r6, $r10, $r11, $r12, $r13, $r14, $r22, $r23, $r24, $r25, $r26, $r28, $r29, $r30, $r31, $r32, $r39, $r41, $r42, $r44, $r45, $r47, $r49, $r51, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r66, $r68, r77;
        org.jdom.Element r1, r76;
        org.w3c.dom.EntityReference $r43;
        org.jdom.JDOMException $r36, $r64;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        org.jdom.Text r79;
        org.w3c.dom.Comment $r48;
        java.util.List $r15, $r33, $r70;
        org.w3c.dom.ProcessingInstruction $r46;
        org.jdom.output.NamespaceStack r0;
        org.w3c.dom.Attr $r19;
        org.jdom.CDATA r78;
        int $i0, $i1;
        org.jdom.ProcessingInstruction r81;
        java.util.Iterator $r16, $r34, $r71;
        org.jdom.EntityRef r82;
        org.w3c.dom.Element $r54, r69;
        java.lang.Object $r9, $r17, $r35;
        java.lang.Class $r38;

        r18 := @this: org.jdom.output.DOMOutputter;

        r1 := @parameter0: org.jdom.Element;

        r4 := @parameter1: org.w3c.dom.Document;

        r0 := @parameter2: org.jdom.output.NamespaceStack;

     label01:
        $i0 = virtualinvoke r0.<org.jdom.output.NamespaceStack: int size()>();

        $r2 = virtualinvoke r1.<org.jdom.Element: org.jdom.Namespace getNamespace()>();

        $r3 = <org.jdom.Namespace: org.jdom.Namespace NO_NAMESPACE>;

        if $r2 != $r3 goto label02;

        $r62 = virtualinvoke r1.<org.jdom.Element: java.lang.String getQualifiedName()>();

        r69 = interfaceinvoke r4.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>($r62);

        goto label03;

     label02:
        $r5 = virtualinvoke r1.<org.jdom.Element: java.lang.String getNamespaceURI()>();

        $r6 = virtualinvoke r1.<org.jdom.Element: java.lang.String getQualifiedName()>();

        r69 = interfaceinvoke r4.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>($r5, $r6);

     label03:
        $r7 = virtualinvoke r1.<org.jdom.Element: org.jdom.Namespace getNamespace()>();

        $r8 = <org.jdom.Namespace: org.jdom.Namespace XML_NAMESPACE>;

        if $r7 == $r8 goto label05;

        $r55 = <org.jdom.Namespace: org.jdom.Namespace NO_NAMESPACE>;

        if $r7 != $r55 goto label04;

        $r61 = virtualinvoke r0.<org.jdom.output.NamespaceStack: java.lang.String getURI(java.lang.String)>("");

        if $r61 == null goto label05;

     label04:
        $r56 = virtualinvoke $r7.<org.jdom.Namespace: java.lang.String getPrefix()>();

        $r57 = virtualinvoke r0.<org.jdom.output.NamespaceStack: java.lang.String getURI(java.lang.String)>($r56);

        $r58 = virtualinvoke $r7.<org.jdom.Namespace: java.lang.String getURI()>();

        $z9 = virtualinvoke $r58.<java.lang.String: boolean equals(java.lang.Object)>($r57);

        if $z9 != 0 goto label05;

        virtualinvoke r0.<org.jdom.output.NamespaceStack: void push(org.jdom.Namespace)>($r7);

        $r59 = staticinvoke <org.jdom.output.DOMOutputter: java.lang.String getXmlnsTagFor(org.jdom.Namespace)>($r7);

        $r60 = virtualinvoke $r7.<org.jdom.Namespace: java.lang.String getURI()>();

        interfaceinvoke r69.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>($r59, $r60);

     label05:
        $r70 = virtualinvoke r1.<org.jdom.Element: java.util.List getAdditionalNamespaces()>();

        $r71 = interfaceinvoke $r70.<java.util.List: java.util.Iterator iterator()>();

        goto label07;

     label06:
        $r9 = interfaceinvoke $r71.<java.util.Iterator: java.lang.Object next()>();

        r72 = (org.jdom.Namespace) $r9;

        $r10 = virtualinvoke r72.<org.jdom.Namespace: java.lang.String getPrefix()>();

        $r11 = virtualinvoke r0.<org.jdom.output.NamespaceStack: java.lang.String getURI(java.lang.String)>($r10);

        $r12 = virtualinvoke r72.<org.jdom.Namespace: java.lang.String getURI()>();

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z0 != 0 goto label07;

        $r13 = staticinvoke <org.jdom.output.DOMOutputter: java.lang.String getXmlnsTagFor(org.jdom.Namespace)>(r72);

        $r14 = virtualinvoke r72.<org.jdom.Namespace: java.lang.String getURI()>();

        interfaceinvoke r69.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>($r13, $r14);

        virtualinvoke r0.<org.jdom.output.NamespaceStack: void push(org.jdom.Namespace)>(r72);

     label07:
        $z10 = interfaceinvoke $r71.<java.util.Iterator: boolean hasNext()>();

        if $z10 != 0 goto label06;

        $r15 = virtualinvoke r1.<org.jdom.Element: java.util.List getAttributes()>();

        $r16 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

        goto label11;

     label08:
        $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r73 = (org.jdom.Attribute) $r17;

        $r19 = specialinvoke r18.<org.jdom.output.DOMOutputter: org.w3c.dom.Attr output(org.jdom.Attribute,org.w3c.dom.Document)>(r73, r4);

        interfaceinvoke r69.<org.w3c.dom.Element: org.w3c.dom.Attr setAttributeNode(org.w3c.dom.Attr)>($r19);

        $r20 = virtualinvoke r73.<org.jdom.Attribute: org.jdom.Namespace getNamespace()>();

        $r21 = <org.jdom.Namespace: org.jdom.Namespace NO_NAMESPACE>;

        if $r20 == $r21 goto label09;

        $r27 = <org.jdom.Namespace: org.jdom.Namespace XML_NAMESPACE>;

        if $r20 == $r27 goto label09;

        $r28 = virtualinvoke $r20.<org.jdom.Namespace: java.lang.String getPrefix()>();

        $r29 = virtualinvoke r0.<org.jdom.output.NamespaceStack: java.lang.String getURI(java.lang.String)>($r28);

        $r30 = virtualinvoke $r20.<org.jdom.Namespace: java.lang.String getURI()>();

        $z1 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>($r29);

        if $z1 != 0 goto label09;

        $r31 = staticinvoke <org.jdom.output.DOMOutputter: java.lang.String getXmlnsTagFor(org.jdom.Namespace)>($r20);

        $r32 = virtualinvoke $r20.<org.jdom.Namespace: java.lang.String getURI()>();

        interfaceinvoke r69.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>($r31, $r32);

        virtualinvoke r0.<org.jdom.output.NamespaceStack: void push(org.jdom.Namespace)>($r20);

     label09:
        $r74 = virtualinvoke r73.<org.jdom.Attribute: org.jdom.Namespace getNamespace()>();

        $r75 = <org.jdom.Namespace: org.jdom.Namespace NO_NAMESPACE>;

        if $r74 != $r75 goto label10;

        $r25 = virtualinvoke r73.<org.jdom.Attribute: java.lang.String getQualifiedName()>();

        $r26 = virtualinvoke r73.<org.jdom.Attribute: java.lang.String getValue()>();

        interfaceinvoke r69.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>($r25, $r26);

        goto label11;

     label10:
        $r22 = virtualinvoke r73.<org.jdom.Attribute: java.lang.String getNamespaceURI()>();

        $r23 = virtualinvoke r73.<org.jdom.Attribute: java.lang.String getQualifiedName()>();

        $r24 = virtualinvoke r73.<org.jdom.Attribute: java.lang.String getValue()>();

        interfaceinvoke r69.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>($r22, $r23, $r24);

     label11:
        $z11 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z11 != 0 goto label08;

        $r33 = virtualinvoke r1.<org.jdom.Element: java.util.List getContent()>();

        $r34 = interfaceinvoke $r33.<java.util.List: java.util.Iterator iterator()>();

        goto label20;

     label12:
        $r35 = interfaceinvoke $r34.<java.util.Iterator: java.lang.Object next()>();

        $z2 = $r35 instanceof org.jdom.Element;

        if $z2 == 0 goto label13;

        r76 = (org.jdom.Element) $r35;

        $r54 = specialinvoke r18.<org.jdom.output.DOMOutputter: org.w3c.dom.Element output(org.jdom.Element,org.w3c.dom.Document,org.jdom.output.NamespaceStack)>(r76, r4, r0);

        interfaceinvoke r69.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r54);

        goto label20;

     label13:
        $z3 = $r35 instanceof java.lang.String;

        if $z3 == 0 goto label14;

        r77 = (java.lang.String) $r35;

        $r53 = interfaceinvoke r4.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>(r77);

        interfaceinvoke r69.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r53);

        goto label20;

     label14:
        $z4 = $r35 instanceof org.jdom.CDATA;

        if $z4 == 0 goto label15;

        r78 = (org.jdom.CDATA) $r35;

        $r51 = virtualinvoke r78.<org.jdom.Text: java.lang.String getText()>();

        $r52 = interfaceinvoke r4.<org.w3c.dom.Document: org.w3c.dom.CDATASection createCDATASection(java.lang.String)>($r51);

        interfaceinvoke r69.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r52);

        goto label20;

     label15:
        $z5 = $r35 instanceof org.jdom.Text;

        if $z5 == 0 goto label16;

        r79 = (org.jdom.Text) $r35;

        $r49 = virtualinvoke r79.<org.jdom.Text: java.lang.String getText()>();

        $r50 = interfaceinvoke r4.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r49);

        interfaceinvoke r69.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r50);

        goto label20;

     label16:
        $z6 = $r35 instanceof org.jdom.Comment;

        if $z6 == 0 goto label17;

        r80 = (org.jdom.Comment) $r35;

        $r47 = virtualinvoke r80.<org.jdom.Comment: java.lang.String getText()>();

        $r48 = interfaceinvoke r4.<org.w3c.dom.Document: org.w3c.dom.Comment createComment(java.lang.String)>($r47);

        interfaceinvoke r69.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r48);

        goto label20;

     label17:
        $z7 = $r35 instanceof org.jdom.ProcessingInstruction;

        if $z7 == 0 goto label18;

        r81 = (org.jdom.ProcessingInstruction) $r35;

        $r44 = virtualinvoke r81.<org.jdom.ProcessingInstruction: java.lang.String getTarget()>();

        $r45 = virtualinvoke r81.<org.jdom.ProcessingInstruction: java.lang.String getData()>();

        $r46 = interfaceinvoke r4.<org.w3c.dom.Document: org.w3c.dom.ProcessingInstruction createProcessingInstruction(java.lang.String,java.lang.String)>($r44, $r45);

        interfaceinvoke r69.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r46);

        goto label20;

     label18:
        $z8 = $r35 instanceof org.jdom.EntityRef;

        if $z8 == 0 goto label19;

        r82 = (org.jdom.EntityRef) $r35;

        $r42 = virtualinvoke r82.<org.jdom.EntityRef: java.lang.String getName()>();

        $r43 = interfaceinvoke r4.<org.w3c.dom.Document: org.w3c.dom.EntityReference createEntityReference(java.lang.String)>($r42);

        interfaceinvoke r69.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r43);

        goto label20;

     label19:
        $r36 = new org.jdom.JDOMException;

        $r37 = new java.lang.StringBuffer;

        specialinvoke $r37.<java.lang.StringBuffer: void <init>(java.lang.String)>("Element contained content with type:");

        $r38 = virtualinvoke $r35.<java.lang.Object: java.lang.Class getClass()>();

        $r39 = virtualinvoke $r38.<java.lang.Class: java.lang.String getName()>();

        $r40 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r36.<org.jdom.JDOMException: void <init>(java.lang.String)>($r41);

        throw $r36;

     label20:
        $z12 = interfaceinvoke $r34.<java.util.Iterator: boolean hasNext()>();

        if $z12 != 0 goto label12;

        goto label22;

     label21:
        virtualinvoke r0.<org.jdom.output.NamespaceStack: java.lang.String pop()>();

     label22:
        $i1 = virtualinvoke r0.<org.jdom.output.NamespaceStack: int size()>();

        if $i1 > $i0 goto label21;

        return r69;

     label23:
        $r63 := @caughtexception;

        $r64 = new org.jdom.JDOMException;

        $r65 = new java.lang.StringBuffer;

        specialinvoke $r65.<java.lang.StringBuffer: void <init>(java.lang.String)>("Exception outputting Element ");

        $r66 = virtualinvoke r1.<org.jdom.Element: java.lang.String getQualifiedName()>();

        $r67 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r66);

        $r68 = virtualinvoke $r67.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r64.<org.jdom.JDOMException: void <init>(java.lang.String,java.lang.Throwable)>($r68, $r63);

        throw $r64;

        catch java.lang.Exception from label01 to label23 with label23;
    }

    public static void <clinit>()
    {
        <org.jdom.output.DOMOutputter: java.lang.String DEFAULT_ADAPTER_CLASS> = "org.jdom.adapters.XercesDOMAdapter";

        <org.jdom.output.DOMOutputter: java.lang.String CVS_ID> = "@(#) $RCSfile: DOMOutputter.java,v $ $Revision: 1.41 $ $Date: 2004/09/03 06:03:42 $ $Name: jdom_1_0 $";

        return;
    }
}
