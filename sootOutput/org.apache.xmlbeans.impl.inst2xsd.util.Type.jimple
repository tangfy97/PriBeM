public class org.apache.xmlbeans.impl.inst2xsd.util.Type extends java.lang.Object
{
    private javax.xml.namespace.QName _name;
    private int _kind;
    public static final int SIMPLE_TYPE_SIMPLE_CONTENT;
    public static final int COMPLEX_TYPE_SIMPLE_CONTENT;
    public static final int COMPLEX_TYPE_COMPLEX_CONTENT;
    public static final int COMPLEX_TYPE_MIXED_CONTENT;
    public static final int COMPLEX_TYPE_EMPTY_CONTENT;
    private int _topParticleForComplexOrMixedContent;
    public static final int PARTICLE_SEQUENCE;
    public static final int PARTICLE_CHOICE_UNBOUNDED;
    private java.util.List _elements;
    private java.util.List _attributes;
    private org.apache.xmlbeans.impl.inst2xsd.util.Type _extensionType;
    private boolean _isGlobal;
    private java.util.List _enumerationValues;
    private boolean _acceptsEnumerationValue;
    private java.util.List _enumerationQNames;
    static final boolean $assertionsDisabled;
    static java.lang.Class class$org$apache$xmlbeans$impl$inst2xsd$util$Type;

    protected void <init>()
    {
        org.apache.xmlbeans.impl.inst2xsd.util.Type r0;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int _kind> = 1;

        r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int _topParticleForComplexOrMixedContent> = 1;

        r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: boolean _isGlobal> = 0;

        r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: boolean _acceptsEnumerationValue> = 1;

        return;
    }

    public static org.apache.xmlbeans.impl.inst2xsd.util.Type createNamedType(javax.xml.namespace.QName, int)
    {
        org.apache.xmlbeans.impl.inst2xsd.util.Type $r0;
        int i0;
        javax.xml.namespace.QName r1;
        java.lang.AssertionError $r2;
        boolean $z0;

        r1 := @parameter0: javax.xml.namespace.QName;

        i0 := @parameter1: int;

        $z0 = <org.apache.xmlbeans.impl.inst2xsd.util.Type: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r1 != null goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $r0 = new org.apache.xmlbeans.impl.inst2xsd.util.Type;

        specialinvoke $r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void <init>()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void setName(javax.xml.namespace.QName)>(r1);

        virtualinvoke $r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void setContentType(int)>(i0);

        return $r0;
    }

    public static org.apache.xmlbeans.impl.inst2xsd.util.Type createUnnamedType(int)
    {
        java.lang.AssertionError $r0;
        org.apache.xmlbeans.impl.inst2xsd.util.Type $r5;
        java.lang.StringBuffer $r1, $r2, $r3;
        int i0;
        java.lang.String $r4;
        boolean $z0;

        i0 := @parameter0: int;

        $z0 = <org.apache.xmlbeans.impl.inst2xsd.util.Type: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if i0 == 1 goto label1;

        if i0 == 2 goto label1;

        if i0 == 3 goto label1;

        if i0 == 4 goto label1;

        if i0 == 5 goto label1;

        $r0 = new java.lang.AssertionError;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unknown contentType: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.AssertionError: void <init>(java.lang.Object)>($r4);

        throw $r0;

     label1:
        $r5 = new org.apache.xmlbeans.impl.inst2xsd.util.Type;

        specialinvoke $r5.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void <init>()>();

        virtualinvoke $r5.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void setContentType(int)>(i0);

        return $r5;
    }

    public javax.xml.namespace.QName getName()
    {
        org.apache.xmlbeans.impl.inst2xsd.util.Type r0;
        javax.xml.namespace.QName $r1;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        $r1 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: javax.xml.namespace.QName _name>;

        return $r1;
    }

    public void setName(javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.inst2xsd.util.Type r0;
        javax.xml.namespace.QName r1;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        r1 := @parameter0: javax.xml.namespace.QName;

        r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: javax.xml.namespace.QName _name> = r1;

        return;
    }

    public int getContentType()
    {
        int $i0;
        org.apache.xmlbeans.impl.inst2xsd.util.Type r0;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        $i0 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int _kind>;

        return $i0;
    }

    public void setContentType(int)
    {
        int i0;
        org.apache.xmlbeans.impl.inst2xsd.util.Type r0;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        i0 := @parameter0: int;

        r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int _kind> = i0;

        return;
    }

    public java.util.List getElements()
    {
        org.apache.xmlbeans.impl.inst2xsd.util.Type r0;
        java.util.List $r1;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        specialinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void ensureElements()>();

        $r1 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List _elements>;

        return $r1;
    }

    public void addElement(org.apache.xmlbeans.impl.inst2xsd.util.Element)
    {
        org.apache.xmlbeans.impl.inst2xsd.util.Type r0;
        org.apache.xmlbeans.impl.inst2xsd.util.Element r1;
        java.util.List $r2;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        r1 := @parameter0: org.apache.xmlbeans.impl.inst2xsd.util.Element;

        specialinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void ensureElements()>();

        $r2 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List _elements>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void setElements(java.util.List)
    {
        org.apache.xmlbeans.impl.inst2xsd.util.Type r0;
        java.util.List $r1, r2, $r3;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        r2 := @parameter0: java.util.List;

        specialinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void ensureElements()>();

        $r1 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List _elements>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r3 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List _elements>;

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>(r2);

        return;
    }

    private void ensureElements()
    {
        org.apache.xmlbeans.impl.inst2xsd.util.Type r0;
        java.util.List $r1;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        $r1 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List _elements>;

        if $r1 != null goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List _elements> = $r2;

     label1:
        return;
    }

    public java.util.List getAttributes()
    {
        org.apache.xmlbeans.impl.inst2xsd.util.Type r0;
        java.util.List $r1;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        specialinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void ensureAttributes()>();

        $r1 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List _attributes>;

        return $r1;
    }

    public void addAttribute(org.apache.xmlbeans.impl.inst2xsd.util.Attribute)
    {
        org.apache.xmlbeans.impl.inst2xsd.util.Type r0;
        org.apache.xmlbeans.impl.inst2xsd.util.Attribute r1;
        java.util.List $r2;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        r1 := @parameter0: org.apache.xmlbeans.impl.inst2xsd.util.Attribute;

        specialinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void ensureAttributes()>();

        $r2 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List _attributes>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public org.apache.xmlbeans.impl.inst2xsd.util.Attribute getAttribute(javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.inst2xsd.util.Attribute r4;
        org.apache.xmlbeans.impl.inst2xsd.util.Type r0;
        java.util.List $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        javax.xml.namespace.QName $r5, r6;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        r6 := @parameter0: javax.xml.namespace.QName;

        i1 = 0;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List _attributes>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r2 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List _attributes>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (org.apache.xmlbeans.impl.inst2xsd.util.Attribute) $r3;

        $r5 = virtualinvoke r4.<org.apache.xmlbeans.impl.inst2xsd.util.Attribute: javax.xml.namespace.QName getName()>();

        $z0 = virtualinvoke $r5.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>(r6);

        if $z0 == 0 goto label2;

        return r4;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    private void ensureAttributes()
    {
        org.apache.xmlbeans.impl.inst2xsd.util.Type r0;
        java.util.List $r1;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        $r1 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List _attributes>;

        if $r1 != null goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List _attributes> = $r2;

     label1:
        return;
    }

    public boolean isComplexType()
    {
        org.apache.xmlbeans.impl.inst2xsd.util.Type r0;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        $i0 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int _kind>;

        if $i0 == 3 goto label1;

        $i1 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int _kind>;

        if $i1 == 4 goto label1;

        $i2 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int _kind>;

        if $i2 != 2 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean hasSimpleContent()
    {
        org.apache.xmlbeans.impl.inst2xsd.util.Type r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        $i0 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int _kind>;

        if $i0 == 1 goto label1;

        $i1 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int _kind>;

        if $i1 != 2 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public int getTopParticleForComplexOrMixedContent()
    {
        int $i0;
        org.apache.xmlbeans.impl.inst2xsd.util.Type r0;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        $i0 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int _topParticleForComplexOrMixedContent>;

        return $i0;
    }

    public void setTopParticleForComplexOrMixedContent(int)
    {
        int i0;
        org.apache.xmlbeans.impl.inst2xsd.util.Type r0;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        i0 := @parameter0: int;

        r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int _topParticleForComplexOrMixedContent> = i0;

        return;
    }

    public boolean isGlobal()
    {
        org.apache.xmlbeans.impl.inst2xsd.util.Type r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        $z0 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: boolean _isGlobal>;

        return $z0;
    }

    public void setGlobal(boolean)
    {
        org.apache.xmlbeans.impl.inst2xsd.util.Type r0;
        java.lang.AssertionError $r1;
        javax.xml.namespace.QName $r2;
        boolean $z0, z1;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        z1 := @parameter0: boolean;

        $z0 = <org.apache.xmlbeans.impl.inst2xsd.util.Type: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if z1 == 0 goto label1;

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: javax.xml.namespace.QName getName()>();

        if $r2 != null goto label2;

     label1:
        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label2:
        r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: boolean _isGlobal> = z1;

        return;
    }

    public org.apache.xmlbeans.impl.inst2xsd.util.Type getExtensionType()
    {
        org.apache.xmlbeans.impl.inst2xsd.util.Type r0, $r1;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        $r1 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: org.apache.xmlbeans.impl.inst2xsd.util.Type _extensionType>;

        return $r1;
    }

    public void setExtensionType(org.apache.xmlbeans.impl.inst2xsd.util.Type)
    {
        java.lang.AssertionError $r2, $r4;
        org.apache.xmlbeans.impl.inst2xsd.util.Type r0, r1;
        int $i0;
        javax.xml.namespace.QName $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        r1 := @parameter0: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        $z0 = <org.apache.xmlbeans.impl.inst2xsd.util.Type: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i0 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int _kind>;

        if $i0 == 2 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>("Extension used only for type which are COMPLEX_TYPE_SIMPLE_CONTENT");

        throw $r4;

     label1:
        $z1 = <org.apache.xmlbeans.impl.inst2xsd.util.Type: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        if r1 == null goto label2;

        $r3 = virtualinvoke r1.<org.apache.xmlbeans.impl.inst2xsd.util.Type: javax.xml.namespace.QName getName()>();

        if $r3 != null goto label3;

     label2:
        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>(java.lang.Object)>("Extended type must be a named type.");

        throw $r2;

     label3:
        r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: org.apache.xmlbeans.impl.inst2xsd.util.Type _extensionType> = r1;

        return;
    }

    public java.util.List getEnumerationValues()
    {
        org.apache.xmlbeans.impl.inst2xsd.util.Type r0;
        java.util.List $r1;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        specialinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void ensureEnumerationValues()>();

        $r1 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List _enumerationValues>;

        return $r1;
    }

    public java.util.List getEnumerationQNames()
    {
        org.apache.xmlbeans.impl.inst2xsd.util.Type r0;
        java.util.List $r1;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        specialinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void ensureEnumerationValues()>();

        $r1 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List _enumerationQNames>;

        return $r1;
    }

    public void addEnumerationValue(java.lang.String, org.apache.xmlbeans.XmlCursor)
    {
        org.apache.xmlbeans.XmlCursor r8;
        java.lang.AssertionError $r11, $r12;
        int $i0, $i1;
        java.lang.String r1;
        org.apache.xmlbeans.SchemaType $r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.xmlbeans.impl.inst2xsd.util.Type r0;
        java.util.List $r2, $r3, $r10;
        org.apache.xmlbeans.impl.inst2xsd.util.Type$1 $r7;
        javax.xml.namespace.QName $r5, $r6, $r9;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        r1 := @parameter0: java.lang.String;

        r8 := @parameter1: org.apache.xmlbeans.XmlCursor;

        $z0 = <org.apache.xmlbeans.impl.inst2xsd.util.Type: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i0 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int _kind>;

        if $i0 == 1 goto label1;

        $i1 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int _kind>;

        if $i1 == 2 goto label1;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>(java.lang.Object)>("Enumerations possible only on simple content");

        throw $r12;

     label1:
        specialinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void ensureEnumerationValues()>();

        $z4 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: boolean _acceptsEnumerationValue>;

        if $z4 == 0 goto label3;

        $r2 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List _enumerationValues>;

        $z1 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z1 != 0 goto label3;

        $r3 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List _enumerationValues>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r5 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: javax.xml.namespace.QName _name>;

        $r4 = <org.apache.xmlbeans.XmlQName: org.apache.xmlbeans.SchemaType type>;

        $r6 = interfaceinvoke $r4.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z2 = virtualinvoke $r5.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label3;

        $r7 = new org.apache.xmlbeans.impl.inst2xsd.util.Type$1;

        specialinvoke $r7.<org.apache.xmlbeans.impl.inst2xsd.util.Type$1: void <init>(org.apache.xmlbeans.impl.inst2xsd.util.Type,org.apache.xmlbeans.XmlCursor)>(r0, r8);

        $r9 = staticinvoke <org.apache.xmlbeans.impl.values.XmlQNameImpl: javax.xml.namespace.QName validateLexical(java.lang.String,org.apache.xmlbeans.impl.common.ValidationContext,org.apache.xmlbeans.impl.common.PrefixResolver)>(r1, null, $r7);

        $z3 = <org.apache.xmlbeans.impl.inst2xsd.util.Type: boolean $assertionsDisabled>;

        if $z3 != 0 goto label2;

        if $r9 != null goto label2;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>(java.lang.Object)>("The check for QName should allready have happened.");

        throw $r11;

     label2:
        $r10 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List _enumerationQNames>;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r9);

     label3:
        return;
    }

    private void ensureEnumerationValues()
    {
        org.apache.xmlbeans.impl.inst2xsd.util.Type r0;
        java.util.List $r1;
        java.util.ArrayList $r2, $r3;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        $r1 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List _enumerationValues>;

        if $r1 != null goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List _enumerationValues> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List _enumerationQNames> = $r3;

     label1:
        return;
    }

    public boolean isEnumeration()
    {
        org.apache.xmlbeans.impl.inst2xsd.util.Type r0;
        java.util.List $r1, $r2;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        $z0 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: boolean _acceptsEnumerationValue>;

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List _enumerationValues>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List _enumerationValues>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 <= 1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean isQNameEnumeration()
    {
        org.apache.xmlbeans.impl.inst2xsd.util.Type r0;
        java.util.List $r4, $r5;
        int $i0;
        javax.xml.namespace.QName $r2, $r3;
        org.apache.xmlbeans.SchemaType $r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: boolean isEnumeration()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: javax.xml.namespace.QName _name>;

        $r1 = <org.apache.xmlbeans.XmlQName: org.apache.xmlbeans.SchemaType type>;

        $r3 = interfaceinvoke $r1.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z1 = virtualinvoke $r2.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label1;

        $r4 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List _enumerationQNames>;

        if $r4 == null goto label1;

        $r5 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List _enumerationQNames>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 <= 1 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public void closeEnumeration()
    {
        org.apache.xmlbeans.impl.inst2xsd.util.Type r0;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: boolean _acceptsEnumerationValue> = 0;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r0, $r1, $r4, $r5, $r7, $r8, $r9, $r10, $r12, $r13, $r15, $r16;
        int $i0;
        java.lang.String $r17;
        org.apache.xmlbeans.impl.inst2xsd.util.Type r2, $r6;
        java.util.List $r11, $r14;
        javax.xml.namespace.QName $r3;

        r2 := @this: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Type{_name = ");

        $r3 = r2.<org.apache.xmlbeans.impl.inst2xsd.util.Type: javax.xml.namespace.QName _name>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", _extensionType = ");

        $r6 = r2.<org.apache.xmlbeans.impl.inst2xsd.util.Type: org.apache.xmlbeans.impl.inst2xsd.util.Type _extensionType>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", _kind = ");

        $i0 = r2.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int _kind>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", _elements = ");

        $r11 = r2.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List _elements>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", _attributes = ");

        $r14 = r2.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List _attributes>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r17;
    }

    public void addAllEnumerationsFrom(org.apache.xmlbeans.impl.inst2xsd.util.Type)
    {
        org.apache.xmlbeans.SchemaType $r6, $r20;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.List $r2, $r4, $r5, $r9, $r10, $r12, $r15, $r16, $r17, $r23;
        javax.xml.namespace.QName $r7, $r8, r14, $r19, $r21;
        java.lang.AssertionError $r18;
        int $i0, $i1, $i2, i3, i4, $i5;
        java.lang.String r22, r24;
        org.apache.xmlbeans.impl.inst2xsd.util.Type r0, r1;
        java.lang.Object $r3, $r11, $r13;

        r0 := @this: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        r1 := @parameter0: org.apache.xmlbeans.impl.inst2xsd.util.Type;

        $z0 = <org.apache.xmlbeans.impl.inst2xsd.util.Type: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i1 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int _kind>;

        if $i1 == 1 goto label1;

        $i2 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: int _kind>;

        if $i2 == 2 goto label1;

        $r18 = new java.lang.AssertionError;

        specialinvoke $r18.<java.lang.AssertionError: void <init>(java.lang.Object)>("Enumerations possible only on simple content");

        throw $r18;

     label1:
        specialinvoke r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: void ensureEnumerationValues()>();

        $r19 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: javax.xml.namespace.QName _name>;

        $r20 = <org.apache.xmlbeans.XmlQName: org.apache.xmlbeans.SchemaType type>;

        $r21 = interfaceinvoke $r20.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z6 = virtualinvoke $r19.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r21);

        if $z6 == 0 goto label5;

        $r7 = r1.<org.apache.xmlbeans.impl.inst2xsd.util.Type: javax.xml.namespace.QName _name>;

        $r6 = <org.apache.xmlbeans.XmlQName: org.apache.xmlbeans.SchemaType type>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $z3 = virtualinvoke $r7.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r8);

        if $z3 == 0 goto label5;

        i3 = 0;

     label2:
        $r9 = virtualinvoke r1.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List getEnumerationValues()>();

        $i0 = interfaceinvoke $r9.<java.util.List: int size()>();

        if i3 >= $i0 goto label4;

        $r10 = virtualinvoke r1.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List getEnumerationValues()>();

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i3);

        r22 = (java.lang.String) $r11;

        $r12 = virtualinvoke r1.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List getEnumerationQNames()>();

        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(i3);

        r14 = (javax.xml.namespace.QName) $r13;

        $z4 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: boolean _acceptsEnumerationValue>;

        if $z4 == 0 goto label3;

        $r15 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List _enumerationQNames>;

        $z5 = interfaceinvoke $r15.<java.util.List: boolean contains(java.lang.Object)>(r14);

        if $z5 != 0 goto label3;

        $r16 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List _enumerationValues>;

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>(r22);

        $r17 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List _enumerationQNames>;

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>(r14);

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        goto label8;

     label5:
        i4 = 0;

     label6:
        $r23 = virtualinvoke r1.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List getEnumerationValues()>();

        $i5 = interfaceinvoke $r23.<java.util.List: int size()>();

        if i4 >= $i5 goto label8;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List getEnumerationValues()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i4);

        r24 = (java.lang.String) $r3;

        $z1 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: boolean _acceptsEnumerationValue>;

        if $z1 == 0 goto label7;

        $r4 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List _enumerationValues>;

        $z2 = interfaceinvoke $r4.<java.util.List: boolean contains(java.lang.Object)>(r24);

        if $z2 != 0 goto label7;

        $r5 = r0.<org.apache.xmlbeans.impl.inst2xsd.util.Type: java.util.List _enumerationValues>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r24);

     label7:
        i4 = i4 + 1;

        goto label6;

     label8:
        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        boolean $z0, $z1;

        <org.apache.xmlbeans.impl.inst2xsd.util.Type: int PARTICLE_CHOICE_UNBOUNDED> = 2;

        <org.apache.xmlbeans.impl.inst2xsd.util.Type: int PARTICLE_SEQUENCE> = 1;

        <org.apache.xmlbeans.impl.inst2xsd.util.Type: int COMPLEX_TYPE_EMPTY_CONTENT> = 5;

        <org.apache.xmlbeans.impl.inst2xsd.util.Type: int COMPLEX_TYPE_MIXED_CONTENT> = 4;

        <org.apache.xmlbeans.impl.inst2xsd.util.Type: int COMPLEX_TYPE_COMPLEX_CONTENT> = 3;

        <org.apache.xmlbeans.impl.inst2xsd.util.Type: int COMPLEX_TYPE_SIMPLE_CONTENT> = 2;

        <org.apache.xmlbeans.impl.inst2xsd.util.Type: int SIMPLE_TYPE_SIMPLE_CONTENT> = 1;

        $r0 = <org.apache.xmlbeans.impl.inst2xsd.util.Type: java.lang.Class class$org$apache$xmlbeans$impl$inst2xsd$util$Type>;

        if $r0 != null goto label1;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.inst2xsd.util.Type: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.inst2xsd.util.Type");

        <org.apache.xmlbeans.impl.inst2xsd.util.Type: java.lang.Class class$org$apache$xmlbeans$impl$inst2xsd$util$Type> = $r1;

        goto label2;

     label1:
        $r1 = <org.apache.xmlbeans.impl.inst2xsd.util.Type: java.lang.Class class$org$apache$xmlbeans$impl$inst2xsd$util$Type>;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.apache.xmlbeans.impl.inst2xsd.util.Type: boolean $assertionsDisabled> = $z1;

        return;
    }
}
