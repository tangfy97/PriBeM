public class com.mycila.inject.internal.guava.eventbus.EventBus extends java.lang.Object
{
    private final com.mycila.inject.internal.guava.collect.SetMultimap handlersByType;
    private final java.util.logging.Logger logger;
    private final com.mycila.inject.internal.guava.eventbus.HandlerFindingStrategy finder;
    private final java.lang.ThreadLocal eventsToDispatch;
    private final java.lang.ThreadLocal isDispatching;
    private com.mycila.inject.internal.guava.cache.Cache flattenHierarchyCache;

    public void <init>()
    {
        com.mycila.inject.internal.guava.eventbus.EventBus r0;

        r0 := @this: com.mycila.inject.internal.guava.eventbus.EventBus;

        specialinvoke r0.<com.mycila.inject.internal.guava.eventbus.EventBus: void <init>(java.lang.String)>("default");

        return;
    }

    public void <init>(java.lang.String)
    {
        com.mycila.inject.internal.guava.eventbus.EventBus$2 $r5;
        com.mycila.inject.internal.guava.eventbus.EventBus$3 $r6;
        com.mycila.inject.internal.guava.eventbus.EventBus$1 $r2;
        com.mycila.inject.internal.guava.eventbus.EventBus r0;
        com.mycila.inject.internal.guava.cache.CacheBuilder $r7, $r8;
        java.lang.String $r13, r16, $r18;
        com.mycila.inject.internal.guava.cache.Cache $r10;
        com.mycila.inject.internal.guava.collect.SetMultimap $r3;
        java.util.concurrent.ConcurrentHashMap $r1;
        java.util.logging.Logger $r19;
        com.mycila.inject.internal.guava.eventbus.AnnotatedHandlerFinder $r4;
        java.lang.StringBuilder $r11, $r14, $r15, $r17;
        java.lang.Class $r12;
        com.mycila.inject.internal.guava.eventbus.EventBus$4 $r9;

        r0 := @this: com.mycila.inject.internal.guava.eventbus.EventBus;

        r16 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        $r2 = new com.mycila.inject.internal.guava.eventbus.EventBus$1;

        specialinvoke $r2.<com.mycila.inject.internal.guava.eventbus.EventBus$1: void <init>(com.mycila.inject.internal.guava.eventbus.EventBus)>(r0);

        $r3 = staticinvoke <com.mycila.inject.internal.guava.collect.Multimaps: com.mycila.inject.internal.guava.collect.SetMultimap newSetMultimap(java.util.Map,com.mycila.inject.internal.guava.base.Supplier)>($r1, $r2);

        r0.<com.mycila.inject.internal.guava.eventbus.EventBus: com.mycila.inject.internal.guava.collect.SetMultimap handlersByType> = $r3;

        $r4 = new com.mycila.inject.internal.guava.eventbus.AnnotatedHandlerFinder;

        specialinvoke $r4.<com.mycila.inject.internal.guava.eventbus.AnnotatedHandlerFinder: void <init>()>();

        r0.<com.mycila.inject.internal.guava.eventbus.EventBus: com.mycila.inject.internal.guava.eventbus.HandlerFindingStrategy finder> = $r4;

        $r5 = new com.mycila.inject.internal.guava.eventbus.EventBus$2;

        specialinvoke $r5.<com.mycila.inject.internal.guava.eventbus.EventBus$2: void <init>(com.mycila.inject.internal.guava.eventbus.EventBus)>(r0);

        r0.<com.mycila.inject.internal.guava.eventbus.EventBus: java.lang.ThreadLocal eventsToDispatch> = $r5;

        $r6 = new com.mycila.inject.internal.guava.eventbus.EventBus$3;

        specialinvoke $r6.<com.mycila.inject.internal.guava.eventbus.EventBus$3: void <init>(com.mycila.inject.internal.guava.eventbus.EventBus)>(r0);

        r0.<com.mycila.inject.internal.guava.eventbus.EventBus: java.lang.ThreadLocal isDispatching> = $r6;

        $r7 = staticinvoke <com.mycila.inject.internal.guava.cache.CacheBuilder: com.mycila.inject.internal.guava.cache.CacheBuilder newBuilder()>();

        $r8 = virtualinvoke $r7.<com.mycila.inject.internal.guava.cache.CacheBuilder: com.mycila.inject.internal.guava.cache.CacheBuilder weakKeys()>();

        $r9 = new com.mycila.inject.internal.guava.eventbus.EventBus$4;

        specialinvoke $r9.<com.mycila.inject.internal.guava.eventbus.EventBus$4: void <init>(com.mycila.inject.internal.guava.eventbus.EventBus)>(r0);

        $r10 = virtualinvoke $r8.<com.mycila.inject.internal.guava.cache.CacheBuilder: com.mycila.inject.internal.guava.cache.Cache build(com.mycila.inject.internal.guava.cache.CacheLoader)>($r9);

        r0.<com.mycila.inject.internal.guava.eventbus.EventBus: com.mycila.inject.internal.guava.cache.Cache flattenHierarchyCache> = $r10;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = class "Lcom/mycila/inject/internal/guava/eventbus/EventBus;";

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r18);

        r0.<com.mycila.inject.internal.guava.eventbus.EventBus: java.util.logging.Logger logger> = $r19;

        return;
    }

    public void register(java.lang.Object)
    {
        com.mycila.inject.internal.guava.eventbus.HandlerFindingStrategy $r2;
        com.mycila.inject.internal.guava.collect.SetMultimap $r3;
        com.mycila.inject.internal.guava.eventbus.EventBus r0;
        java.lang.Object r1;
        com.mycila.inject.internal.guava.collect.Multimap $r4;

        r0 := @this: com.mycila.inject.internal.guava.eventbus.EventBus;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<com.mycila.inject.internal.guava.eventbus.EventBus: com.mycila.inject.internal.guava.collect.SetMultimap handlersByType>;

        $r2 = r0.<com.mycila.inject.internal.guava.eventbus.EventBus: com.mycila.inject.internal.guava.eventbus.HandlerFindingStrategy finder>;

        $r4 = interfaceinvoke $r2.<com.mycila.inject.internal.guava.eventbus.HandlerFindingStrategy: com.mycila.inject.internal.guava.collect.Multimap findAllHandlers(java.lang.Object)>(r1);

        interfaceinvoke $r3.<com.mycila.inject.internal.guava.collect.SetMultimap: boolean putAll(com.mycila.inject.internal.guava.collect.Multimap)>($r4);

        return;
    }

    public void unregister(java.lang.Object)
    {
        com.mycila.inject.internal.guava.eventbus.EventBus r0;
        java.util.Map $r4;
        java.lang.String $r19;
        boolean $z0, $z1;
        java.util.Map$Entry r8;
        java.util.Iterator $r6;
        java.util.Collection r13, $r21;
        java.util.Set $r5, $r11;
        com.mycila.inject.internal.guava.collect.Multimap $r3;
        java.lang.IllegalArgumentException $r14;
        com.mycila.inject.internal.guava.eventbus.HandlerFindingStrategy $r2;
        java.lang.Object r1, $r7, $r9, $r12, $r20;
        java.lang.Class $r10;
        java.lang.StringBuilder $r15, $r16, $r17, $r18;

        r0 := @this: com.mycila.inject.internal.guava.eventbus.EventBus;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.mycila.inject.internal.guava.eventbus.EventBus: com.mycila.inject.internal.guava.eventbus.HandlerFindingStrategy finder>;

        $r3 = interfaceinvoke $r2.<com.mycila.inject.internal.guava.eventbus.HandlerFindingStrategy: com.mycila.inject.internal.guava.collect.Multimap findAllHandlers(java.lang.Object)>(r1);

        $r4 = interfaceinvoke $r3.<com.mycila.inject.internal.guava.collect.Multimap: java.util.Map asMap()>();

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map$Entry) $r7;

        $r9 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r10 = (java.lang.Class) $r9;

        $r11 = virtualinvoke r0.<com.mycila.inject.internal.guava.eventbus.EventBus: java.util.Set getHandlersForEventType(java.lang.Class)>($r10);

        $r12 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        r13 = (java.util.Collection) $r12;

        if $r11 == null goto label2;

        $r20 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r21 = (java.util.Collection) $r20;

        $z1 = interfaceinvoke $r11.<java.util.Set: boolean containsAll(java.util.Collection)>($r21);

        if $z1 != 0 goto label3;

     label2:
        $r14 = new java.lang.IllegalArgumentException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("missing event handler for an annotated method. Is ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" registered?");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r14;

     label3:
        interfaceinvoke $r11.<java.util.Set: boolean removeAll(java.util.Collection)>(r13);

        goto label1;

     label4:
        return;
    }

    public void post(java.lang.Object)
    {
        com.mycila.inject.internal.guava.eventbus.DeadEvent $r5;
        com.mycila.inject.internal.guava.eventbus.EventBus r0;
        boolean $z0, $z1, $z2, $z3, z4;
        java.util.Iterator $r4, $r9;
        java.util.Set $r3, $r8;
        com.mycila.inject.internal.guava.eventbus.EventHandler r11;
        java.lang.Object r1, $r6, $r10;
        java.lang.Class $r2, r7;

        r0 := @this: com.mycila.inject.internal.guava.eventbus.EventBus;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r0.<com.mycila.inject.internal.guava.eventbus.EventBus: java.util.Set flattenHierarchy(java.lang.Class)>($r2);

        z4 = 0;

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.Class) $r6;

        $r8 = virtualinvoke r0.<com.mycila.inject.internal.guava.eventbus.EventBus: java.util.Set getHandlersForEventType(java.lang.Class)>(r7);

        if $r8 == null goto label3;

        $z2 = interfaceinvoke $r8.<java.util.Set: boolean isEmpty()>();

        if $z2 != 0 goto label3;

        z4 = 1;

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label3;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (com.mycila.inject.internal.guava.eventbus.EventHandler) $r10;

        virtualinvoke r0.<com.mycila.inject.internal.guava.eventbus.EventBus: void enqueueEvent(java.lang.Object,com.mycila.inject.internal.guava.eventbus.EventHandler)>(r1, r11);

        goto label2;

     label3:
        goto label1;

     label4:
        if z4 != 0 goto label5;

        $z1 = r1 instanceof com.mycila.inject.internal.guava.eventbus.DeadEvent;

        if $z1 != 0 goto label5;

        $r5 = new com.mycila.inject.internal.guava.eventbus.DeadEvent;

        specialinvoke $r5.<com.mycila.inject.internal.guava.eventbus.DeadEvent: void <init>(java.lang.Object,java.lang.Object)>(r0, r1);

        virtualinvoke r0.<com.mycila.inject.internal.guava.eventbus.EventBus: void post(java.lang.Object)>($r5);

     label5:
        virtualinvoke r0.<com.mycila.inject.internal.guava.eventbus.EventBus: void dispatchQueuedEvents()>();

        return;
    }

    protected void enqueueEvent(java.lang.Object, com.mycila.inject.internal.guava.eventbus.EventHandler)
    {
        java.lang.ThreadLocal $r1;
        com.mycila.inject.internal.guava.eventbus.EventHandler r5;
        com.mycila.inject.internal.guava.eventbus.EventBus r0;
        java.lang.Object $r2, r4;
        com.mycila.inject.internal.guava.eventbus.EventBus$EventWithHandler $r3;
        java.util.concurrent.ConcurrentLinkedQueue $r6;

        r0 := @this: com.mycila.inject.internal.guava.eventbus.EventBus;

        r4 := @parameter0: java.lang.Object;

        r5 := @parameter1: com.mycila.inject.internal.guava.eventbus.EventHandler;

        $r1 = r0.<com.mycila.inject.internal.guava.eventbus.EventBus: java.lang.ThreadLocal eventsToDispatch>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r6 = (java.util.concurrent.ConcurrentLinkedQueue) $r2;

        $r3 = new com.mycila.inject.internal.guava.eventbus.EventBus$EventWithHandler;

        specialinvoke $r3.<com.mycila.inject.internal.guava.eventbus.EventBus$EventWithHandler: void <init>(java.lang.Object,com.mycila.inject.internal.guava.eventbus.EventHandler)>(r4, r5);

        virtualinvoke $r6.<java.util.concurrent.ConcurrentLinkedQueue: boolean offer(java.lang.Object)>($r3);

        return;
    }

    protected void dispatchQueuedEvents()
    {
        java.lang.Throwable $r15;
        com.mycila.inject.internal.guava.eventbus.EventBus r0;
        com.mycila.inject.internal.guava.eventbus.EventBus$EventWithHandler $r12;
        java.lang.Boolean $r3, $r5, $r14, $r17;
        boolean $z0;
        java.lang.ThreadLocal $r1, $r4, $r6, $r13, $r16;
        com.mycila.inject.internal.guava.eventbus.EventHandler $r10;
        java.lang.Object $r2, $r7, $r9, $r11;
        java.util.concurrent.ConcurrentLinkedQueue $r8;

        r0 := @this: com.mycila.inject.internal.guava.eventbus.EventBus;

        $r1 = r0.<com.mycila.inject.internal.guava.eventbus.EventBus: java.lang.ThreadLocal isDispatching>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r4 = r0.<com.mycila.inject.internal.guava.eventbus.EventBus: java.lang.ThreadLocal isDispatching>;

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r4.<java.lang.ThreadLocal: void set(java.lang.Object)>($r5);

     label2:
        $r6 = r0.<com.mycila.inject.internal.guava.eventbus.EventBus: java.lang.ThreadLocal eventsToDispatch>;

        $r7 = virtualinvoke $r6.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r8 = (java.util.concurrent.ConcurrentLinkedQueue) $r7;

        $r9 = virtualinvoke $r8.<java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object poll()>();

        $r12 = (com.mycila.inject.internal.guava.eventbus.EventBus$EventWithHandler) $r9;

        if $r12 != null goto label3;

        goto label4;

     label3:
        $r11 = $r12.<com.mycila.inject.internal.guava.eventbus.EventBus$EventWithHandler: java.lang.Object event>;

        $r10 = $r12.<com.mycila.inject.internal.guava.eventbus.EventBus$EventWithHandler: com.mycila.inject.internal.guava.eventbus.EventHandler handler>;

        virtualinvoke r0.<com.mycila.inject.internal.guava.eventbus.EventBus: void dispatch(java.lang.Object,com.mycila.inject.internal.guava.eventbus.EventHandler)>($r11, $r10);

        goto label2;

     label4:
        $r13 = r0.<com.mycila.inject.internal.guava.eventbus.EventBus: java.lang.ThreadLocal isDispatching>;

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        virtualinvoke $r13.<java.lang.ThreadLocal: void set(java.lang.Object)>($r14);

        goto label7;

     label5:
        $r15 := @caughtexception;

     label6:
        $r16 = r0.<com.mycila.inject.internal.guava.eventbus.EventBus: java.lang.ThreadLocal isDispatching>;

        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        virtualinvoke $r16.<java.lang.ThreadLocal: void set(java.lang.Object)>($r17);

        throw $r15;

     label7:
        return;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    protected void dispatch(java.lang.Object, com.mycila.inject.internal.guava.eventbus.EventHandler)
    {
        com.mycila.inject.internal.guava.eventbus.EventBus r3;
        java.util.logging.Logger $r5;
        java.lang.reflect.InvocationTargetException $r2;
        java.util.logging.Level $r6;
        com.mycila.inject.internal.guava.eventbus.EventHandler r0;
        java.lang.Object r1;
        java.lang.StringBuilder $r4, $r7, $r8, $r9, $r10;
        java.lang.String $r11;

        r3 := @this: com.mycila.inject.internal.guava.eventbus.EventBus;

        r1 := @parameter0: java.lang.Object;

        r0 := @parameter1: com.mycila.inject.internal.guava.eventbus.EventHandler;

     label1:
        virtualinvoke r0.<com.mycila.inject.internal.guava.eventbus.EventHandler: void handleEvent(java.lang.Object)>(r1);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r5 = r3.<com.mycila.inject.internal.guava.eventbus.EventBus: java.util.logging.Logger logger>;

        $r6 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not dispatch event: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to handler ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r6, $r11, $r2);

     label4:
        return;

        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
    }

    java.util.Set getHandlersForEventType(java.lang.Class)
    {
        com.mycila.inject.internal.guava.collect.SetMultimap $r2;
        com.mycila.inject.internal.guava.eventbus.EventBus r0;
        java.util.Set $r3;
        java.lang.Class r1;

        r0 := @this: com.mycila.inject.internal.guava.eventbus.EventBus;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<com.mycila.inject.internal.guava.eventbus.EventBus: com.mycila.inject.internal.guava.collect.SetMultimap handlersByType>;

        $r3 = interfaceinvoke $r2.<com.mycila.inject.internal.guava.collect.SetMultimap: java.util.Set get(java.lang.Object)>(r1);

        return $r3;
    }

    protected java.util.Set newHandlerSet()
    {
        com.mycila.inject.internal.guava.eventbus.EventBus r1;
        java.util.concurrent.CopyOnWriteArraySet $r0;

        r1 := @this: com.mycila.inject.internal.guava.eventbus.EventBus;

        $r0 = new java.util.concurrent.CopyOnWriteArraySet;

        specialinvoke $r0.<java.util.concurrent.CopyOnWriteArraySet: void <init>()>();

        return $r0;
    }

    java.util.Set flattenHierarchy(java.lang.Class)
    {
        java.lang.Throwable $r6;
        com.mycila.inject.internal.guava.eventbus.EventBus r0;
        java.util.Set $r4;
        java.lang.RuntimeException $r7;
        java.util.concurrent.ExecutionException $r5;
        java.lang.Class r1;
        java.lang.Object $r3;
        com.mycila.inject.internal.guava.cache.Cache $r2;

        r0 := @this: com.mycila.inject.internal.guava.eventbus.EventBus;

        r1 := @parameter0: java.lang.Class;

     label1:
        $r2 = r0.<com.mycila.inject.internal.guava.eventbus.EventBus: com.mycila.inject.internal.guava.cache.Cache flattenHierarchyCache>;

        $r3 = interfaceinvoke $r2.<com.mycila.inject.internal.guava.cache.Cache: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.util.Set) $r3;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        $r7 = staticinvoke <com.mycila.inject.internal.guava.base.Throwables: java.lang.RuntimeException propagate(java.lang.Throwable)>($r6);

        throw $r7;

        catch java.util.concurrent.ExecutionException from label1 to label2 with label3;
    }
}
