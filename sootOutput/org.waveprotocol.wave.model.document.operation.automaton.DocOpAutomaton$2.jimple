class org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$2 extends java.lang.Object
{
    static final int[] $SwitchMap$org$waveprotocol$wave$model$document$operation$automaton$DocOpAutomaton$DocSymbol;
    static final int[] $SwitchMap$org$waveprotocol$wave$model$document$operation$automaton$DocumentSchema$PermittedCharacters;

    static void <clinit>()
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$DocSymbol[] $r8;
        java.lang.NoSuchFieldError $r14, $r15, $r16, $r17, $r18;
        int[] $r1, $r3, $r5, $r7, $r9, $r11, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema$PermittedCharacters[] $r0;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$DocSymbol $r10, $r12;
        org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema$PermittedCharacters $r2, $r4, $r6;

        $r0 = staticinvoke <org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema$PermittedCharacters: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema$PermittedCharacters[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$2: int[] $SwitchMap$org$waveprotocol$wave$model$document$operation$automaton$DocumentSchema$PermittedCharacters> = $r1;

     label01:
        $r3 = <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$2: int[] $SwitchMap$org$waveprotocol$wave$model$document$operation$automaton$DocumentSchema$PermittedCharacters>;

        $r2 = <org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema$PermittedCharacters: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema$PermittedCharacters NONE>;

        $i1 = virtualinvoke $r2.<org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema$PermittedCharacters: int ordinal()>();

        $r3[$i1] = 1;

     label02:
        goto label04;

     label03:
        $r18 := @caughtexception;

     label04:
        $r5 = <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$2: int[] $SwitchMap$org$waveprotocol$wave$model$document$operation$automaton$DocumentSchema$PermittedCharacters>;

        $r4 = <org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema$PermittedCharacters: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema$PermittedCharacters BLIP_TEXT>;

        $i2 = virtualinvoke $r4.<org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema$PermittedCharacters: int ordinal()>();

        $r5[$i2] = 2;

     label05:
        goto label07;

     label06:
        $r17 := @caughtexception;

     label07:
        $r7 = <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$2: int[] $SwitchMap$org$waveprotocol$wave$model$document$operation$automaton$DocumentSchema$PermittedCharacters>;

        $r6 = <org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema$PermittedCharacters: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema$PermittedCharacters ANY>;

        $i3 = virtualinvoke $r6.<org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema$PermittedCharacters: int ordinal()>();

        $r7[$i3] = 3;

     label08:
        goto label10;

     label09:
        $r16 := @caughtexception;

     label10:
        $r8 = staticinvoke <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$DocSymbol: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$DocSymbol[] values()>();

        $i4 = lengthof $r8;

        $r9 = newarray (int)[$i4];

        <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$2: int[] $SwitchMap$org$waveprotocol$wave$model$document$operation$automaton$DocOpAutomaton$DocSymbol> = $r9;

     label11:
        $r11 = <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$2: int[] $SwitchMap$org$waveprotocol$wave$model$document$operation$automaton$DocOpAutomaton$DocSymbol>;

        $r10 = <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$DocSymbol: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$DocSymbol OPEN>;

        $i5 = virtualinvoke $r10.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$DocSymbol: int ordinal()>();

        $r11[$i5] = 1;

     label12:
        goto label14;

     label13:
        $r15 := @caughtexception;

     label14:
        $r13 = <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$2: int[] $SwitchMap$org$waveprotocol$wave$model$document$operation$automaton$DocOpAutomaton$DocSymbol>;

        $r12 = <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$DocSymbol: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$DocSymbol CLOSE>;

        $i6 = virtualinvoke $r12.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$DocSymbol: int ordinal()>();

        $r13[$i6] = 2;

     label15:
        goto label17;

     label16:
        $r14 := @caughtexception;

     label17:
        return;

        catch java.lang.NoSuchFieldError from label01 to label02 with label03;
        catch java.lang.NoSuchFieldError from label04 to label05 with label06;
        catch java.lang.NoSuchFieldError from label07 to label08 with label09;
        catch java.lang.NoSuchFieldError from label11 to label12 with label13;
        catch java.lang.NoSuchFieldError from label14 to label15 with label16;
    }
}
