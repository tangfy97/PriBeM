abstract class org.apache.zookeeper.ClientCnxnSocket extends java.lang.Object
{
    private static final org.slf4j.Logger LOG;
    protected boolean initialized;
    protected final java.nio.ByteBuffer lenBuffer;
    protected java.nio.ByteBuffer incomingBuffer;
    protected long sentCount;
    protected long recvCount;
    protected long lastHeard;
    protected long lastSend;
    protected long now;
    protected org.apache.zookeeper.ClientCnxn$SendThread sendThread;
    protected long sessionId;

    void <init>()
    {
        org.apache.zookeeper.ClientCnxnSocket r0;
        java.nio.ByteBuffer $r1, $r2;

        r0 := @this: org.apache.zookeeper.ClientCnxnSocket;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(4);

        r0.<org.apache.zookeeper.ClientCnxnSocket: java.nio.ByteBuffer lenBuffer> = $r1;

        $r2 = r0.<org.apache.zookeeper.ClientCnxnSocket: java.nio.ByteBuffer lenBuffer>;

        r0.<org.apache.zookeeper.ClientCnxnSocket: java.nio.ByteBuffer incomingBuffer> = $r2;

        r0.<org.apache.zookeeper.ClientCnxnSocket: long sentCount> = 0L;

        r0.<org.apache.zookeeper.ClientCnxnSocket: long recvCount> = 0L;

        return;
    }

    void introduce(org.apache.zookeeper.ClientCnxn$SendThread, long)
    {
        org.apache.zookeeper.ClientCnxnSocket r0;
        long l0;
        org.apache.zookeeper.ClientCnxn$SendThread r1;

        r0 := @this: org.apache.zookeeper.ClientCnxnSocket;

        r1 := @parameter0: org.apache.zookeeper.ClientCnxn$SendThread;

        l0 := @parameter1: long;

        r0.<org.apache.zookeeper.ClientCnxnSocket: org.apache.zookeeper.ClientCnxn$SendThread sendThread> = r1;

        r0.<org.apache.zookeeper.ClientCnxnSocket: long sessionId> = l0;

        return;
    }

    void updateNow()
    {
        org.apache.zookeeper.ClientCnxnSocket r0;
        long $l0;

        r0 := @this: org.apache.zookeeper.ClientCnxnSocket;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<org.apache.zookeeper.ClientCnxnSocket: long now> = $l0;

        return;
    }

    int getIdleRecv()
    {
        org.apache.zookeeper.ClientCnxnSocket r0;
        int $i3;
        long $l0, $l1, $l2;

        r0 := @this: org.apache.zookeeper.ClientCnxnSocket;

        $l1 = r0.<org.apache.zookeeper.ClientCnxnSocket: long now>;

        $l0 = r0.<org.apache.zookeeper.ClientCnxnSocket: long lastHeard>;

        $l2 = $l1 - $l0;

        $i3 = (int) $l2;

        return $i3;
    }

    int getIdleSend()
    {
        org.apache.zookeeper.ClientCnxnSocket r0;
        int $i3;
        long $l0, $l1, $l2;

        r0 := @this: org.apache.zookeeper.ClientCnxnSocket;

        $l1 = r0.<org.apache.zookeeper.ClientCnxnSocket: long now>;

        $l0 = r0.<org.apache.zookeeper.ClientCnxnSocket: long lastSend>;

        $l2 = $l1 - $l0;

        $i3 = (int) $l2;

        return $i3;
    }

    long getSentCount()
    {
        org.apache.zookeeper.ClientCnxnSocket r0;
        long $l0;

        r0 := @this: org.apache.zookeeper.ClientCnxnSocket;

        $l0 = r0.<org.apache.zookeeper.ClientCnxnSocket: long sentCount>;

        return $l0;
    }

    long getRecvCount()
    {
        org.apache.zookeeper.ClientCnxnSocket r0;
        long $l0;

        r0 := @this: org.apache.zookeeper.ClientCnxnSocket;

        $l0 = r0.<org.apache.zookeeper.ClientCnxnSocket: long recvCount>;

        return $l0;
    }

    void updateLastHeard()
    {
        org.apache.zookeeper.ClientCnxnSocket r0;
        long $l0;

        r0 := @this: org.apache.zookeeper.ClientCnxnSocket;

        $l0 = r0.<org.apache.zookeeper.ClientCnxnSocket: long now>;

        r0.<org.apache.zookeeper.ClientCnxnSocket: long lastHeard> = $l0;

        return;
    }

    void updateLastSend()
    {
        org.apache.zookeeper.ClientCnxnSocket r0;
        long $l0;

        r0 := @this: org.apache.zookeeper.ClientCnxnSocket;

        $l0 = r0.<org.apache.zookeeper.ClientCnxnSocket: long now>;

        r0.<org.apache.zookeeper.ClientCnxnSocket: long lastSend> = $l0;

        return;
    }

    void updateLastSendAndHeard()
    {
        org.apache.zookeeper.ClientCnxnSocket r0;
        long $l0, $l1;

        r0 := @this: org.apache.zookeeper.ClientCnxnSocket;

        $l0 = r0.<org.apache.zookeeper.ClientCnxnSocket: long now>;

        r0.<org.apache.zookeeper.ClientCnxnSocket: long lastSend> = $l0;

        $l1 = r0.<org.apache.zookeeper.ClientCnxnSocket: long now>;

        r0.<org.apache.zookeeper.ClientCnxnSocket: long lastHeard> = $l1;

        return;
    }

    protected void readLength() throws java.io.IOException
    {
        org.apache.zookeeper.ClientCnxnSocket r0;
        java.io.IOException $r2;
        java.nio.ByteBuffer $r1, $r8;
        int $i0, $i1;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: org.apache.zookeeper.ClientCnxnSocket;

        $r1 = r0.<org.apache.zookeeper.ClientCnxnSocket: java.nio.ByteBuffer incomingBuffer>;

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int getInt()>();

        if $i0 < 0 goto label1;

        $i1 = <org.apache.zookeeper.ClientCnxn: int packetLen>;

        if $i0 < $i1 goto label2;

     label1:
        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Packet len");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is out of range!");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label2:
        $r8 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i0);

        r0.<org.apache.zookeeper.ClientCnxnSocket: java.nio.ByteBuffer incomingBuffer> = $r8;

        return;
    }

    void readConnectResult() throws java.io.IOException
    {
        byte[] $r7, $r10;
        java.nio.ByteBuffer $r3, $r9, $r14;
        org.apache.zookeeper.ClientCnxn$SendThread $r6;
        byte b6;
        boolean $z0, z1;
        org.apache.zookeeper.ClientCnxnSocket r2;
        org.apache.zookeeper.server.ByteBufferInputStream $r30;
        java.lang.StringBuilder $r13, $r15, $r16, $r18, $r22, $r23, $r27, $r28, $r29;
        long $l0, $l2;
        int $i1, $i3, i4, i5, $i7;
        java.lang.String $r17, $r19, $r21, $r24;
        org.slf4j.Logger $r0, $r12, $r26;
        java.io.IOException $r25;
        org.apache.zookeeper.proto.ConnectResponse $r31;
        org.apache.jute.BinaryInputArchive $r4;

        r2 := @this: org.apache.zookeeper.ClientCnxnSocket;

        $r0 = <org.apache.zookeeper.ClientCnxnSocket: org.slf4j.Logger LOG>;

        $z0 = interfaceinvoke $r0.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label3;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>(java.lang.String)>("0x[");

        $r9 = r2.<org.apache.zookeeper.ClientCnxnSocket: java.nio.ByteBuffer incomingBuffer>;

        $r10 = virtualinvoke $r9.<java.nio.ByteBuffer: byte[] array()>();

        i4 = lengthof $r10;

        i5 = 0;

     label1:
        if i5 >= i4 goto label2;

        b6 = $r10[i5];

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $i7 = (int) b6;

        $r21 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i7);

        $r22 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        i5 = i5 + 1;

        goto label1;

     label2:
        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r12 = <org.apache.zookeeper.ClientCnxnSocket: org.slf4j.Logger LOG>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readConnectResult ");

        $r14 = r2.<org.apache.zookeeper.ClientCnxnSocket: java.nio.ByteBuffer incomingBuffer>;

        $i3 = virtualinvoke $r14.<java.nio.ByteBuffer: int remaining()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r17 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<org.slf4j.Logger: void trace(java.lang.String)>($r19);

     label3:
        $r30 = new org.apache.zookeeper.server.ByteBufferInputStream;

        $r3 = r2.<org.apache.zookeeper.ClientCnxnSocket: java.nio.ByteBuffer incomingBuffer>;

        specialinvoke $r30.<org.apache.zookeeper.server.ByteBufferInputStream: void <init>(java.nio.ByteBuffer)>($r3);

        $r4 = staticinvoke <org.apache.jute.BinaryInputArchive: org.apache.jute.BinaryInputArchive getArchive(java.io.InputStream)>($r30);

        $r31 = new org.apache.zookeeper.proto.ConnectResponse;

        specialinvoke $r31.<org.apache.zookeeper.proto.ConnectResponse: void <init>()>();

        virtualinvoke $r31.<org.apache.zookeeper.proto.ConnectResponse: void deserialize(org.apache.jute.InputArchive,java.lang.String)>($r4, "connect");

        z1 = 0;

     label4:
        z1 = virtualinvoke $r4.<org.apache.jute.BinaryInputArchive: boolean readBool(java.lang.String)>("readOnly");

     label5:
        goto label7;

     label6:
        $r25 := @caughtexception;

        $r26 = <org.apache.zookeeper.ClientCnxnSocket: org.slf4j.Logger LOG>;

        interfaceinvoke $r26.<org.slf4j.Logger: void warn(java.lang.String)>("Connected to an old server; r-o mode will be unavailable");

     label7:
        $l0 = virtualinvoke $r31.<org.apache.zookeeper.proto.ConnectResponse: long getSessionId()>();

        r2.<org.apache.zookeeper.ClientCnxnSocket: long sessionId> = $l0;

        $r6 = r2.<org.apache.zookeeper.ClientCnxnSocket: org.apache.zookeeper.ClientCnxn$SendThread sendThread>;

        $i1 = virtualinvoke $r31.<org.apache.zookeeper.proto.ConnectResponse: int getTimeOut()>();

        $l2 = r2.<org.apache.zookeeper.ClientCnxnSocket: long sessionId>;

        $r7 = virtualinvoke $r31.<org.apache.zookeeper.proto.ConnectResponse: byte[] getPasswd()>();

        virtualinvoke $r6.<org.apache.zookeeper.ClientCnxn$SendThread: void onConnected(int,long,byte[],boolean)>($i1, $l2, $r7, z1);

        return;

        catch java.io.IOException from label4 to label5 with label6;
    }

    abstract boolean isConnected();

    abstract void connect(java.net.InetSocketAddress) throws java.io.IOException;

    abstract java.net.SocketAddress getRemoteSocketAddress();

    abstract java.net.SocketAddress getLocalSocketAddress();

    abstract void cleanup();

    abstract void close();

    abstract void wakeupCnxn();

    abstract void enableWrite();

    abstract void disableWrite();

    abstract void enableReadWriteOnly();

    abstract void doTransport(int, java.util.List, java.util.LinkedList, org.apache.zookeeper.ClientCnxn) throws java.io.IOException, java.lang.InterruptedException;

    abstract void testableCloseSocket() throws java.io.IOException;

    abstract void sendPacket(org.apache.zookeeper.ClientCnxn$Packet) throws java.io.IOException;

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/zookeeper/ClientCnxnSocket;");

        <org.apache.zookeeper.ClientCnxnSocket: org.slf4j.Logger LOG> = $r0;

        return;
    }
}
