public class org.apache.cxf.test.TestUtilities extends java.lang.Object
{
    private static final java.nio.charset.Charset UTF8;
    private static java.lang.String preKeepAlive;
    private static java.lang.String basedirPath;
    protected org.apache.cxf.Bus bus;
    protected java.lang.Class classpathAnchor;
    private javax.xml.stream.XMLInputFactory xmlInputFactory;
    private java.util.Map namespaces;

    public void <init>(java.lang.Class)
    {
        javax.xml.stream.XMLInputFactory $r3;
        org.apache.cxf.test.TestUtilities r0;
        java.util.HashMap $r1;
        java.lang.Class r2;

        r0 := @this: org.apache.cxf.test.TestUtilities;

        r2 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.cxf.test.TestUtilities: java.util.Map namespaces> = $r1;

        r0.<org.apache.cxf.test.TestUtilities: java.lang.Class classpathAnchor> = r2;

        $r3 = staticinvoke <javax.xml.stream.XMLInputFactory: javax.xml.stream.XMLInputFactory newInstance()>();

        r0.<org.apache.cxf.test.TestUtilities: javax.xml.stream.XMLInputFactory xmlInputFactory> = $r3;

        return;
    }

    public static void setKeepAliveSystemProperty(boolean)
    {
        java.lang.String $r0, $r1;
        boolean z0;

        z0 := @parameter0: boolean;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("http.keepAlive");

        <org.apache.cxf.test.TestUtilities: java.lang.String preKeepAlive> = $r0;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>(z0);

        staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>("http.keepAlive", $r1);

        return;
    }

    public static void recoverKeepAliveSystemProperty()
    {
        java.lang.String $r0, $r1;

        $r0 = <org.apache.cxf.test.TestUtilities: java.lang.String preKeepAlive>;

        if $r0 == null goto label1;

        $r1 = <org.apache.cxf.test.TestUtilities: java.lang.String preKeepAlive>;

        staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>("http.keepAlive", $r1);

        goto label2;

     label1:
        staticinvoke <java.lang.System: java.lang.String clearProperty(java.lang.String)>("http.keepAlive");

     label2:
        return;
    }

    public void addDefaultNamespaces()
    {
        org.apache.cxf.test.TestUtilities r0;

        r0 := @this: org.apache.cxf.test.TestUtilities;

        virtualinvoke r0.<org.apache.cxf.test.TestUtilities: void addNamespace(java.lang.String,java.lang.String)>("s", "http://schemas.xmlsoap.org/soap/envelope/");

        virtualinvoke r0.<org.apache.cxf.test.TestUtilities: void addNamespace(java.lang.String,java.lang.String)>("xsd", "http://www.w3.org/2001/XMLSchema");

        virtualinvoke r0.<org.apache.cxf.test.TestUtilities: void addNamespace(java.lang.String,java.lang.String)>("wsdl", "http://schemas.xmlsoap.org/wsdl/");

        virtualinvoke r0.<org.apache.cxf.test.TestUtilities: void addNamespace(java.lang.String,java.lang.String)>("wsdlsoap", "http://schemas.xmlsoap.org/wsdl/soap/");

        virtualinvoke r0.<org.apache.cxf.test.TestUtilities: void addNamespace(java.lang.String,java.lang.String)>("soap", "http://schemas.xmlsoap.org/soap/");

        virtualinvoke r0.<org.apache.cxf.test.TestUtilities: void addNamespace(java.lang.String,java.lang.String)>("soap12env", "http://www.w3.org/2003/05/soap-envelope");

        virtualinvoke r0.<org.apache.cxf.test.TestUtilities: void addNamespace(java.lang.String,java.lang.String)>("xml", "http://www.w3.org/XML/1998/namespace");

        return;
    }

    public java.lang.String resolveNamespacePrefix(java.lang.String, org.w3c.dom.Node) throws java.lang.Exception
    {
        org.w3c.dom.NodeList $r2;
        org.w3c.dom.Attr r4;
        org.w3c.dom.Node r1, $r3;
        org.apache.cxf.test.TestUtilities r0;
        int $i0, i1;
        java.lang.String $r5, r6, r7;
        boolean $z0;

        r0 := @this: org.apache.cxf.test.TestUtilities;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: org.w3c.dom.Node;

        r7 = null;

        $r2 = virtualinvoke r0.<org.apache.cxf.test.TestUtilities: org.w3c.dom.NodeList assertValid(java.lang.String,org.w3c.dom.Node)>("namespace::*", r1);

        i1 = 0;

     label1:
        $i0 = interfaceinvoke $r2.<org.w3c.dom.NodeList: int getLength()>();

        if i1 >= $i0 goto label3;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i1);

        r4 = (org.w3c.dom.Attr) $r3;

        $r5 = interfaceinvoke r4.<org.w3c.dom.Attr: java.lang.String getLocalName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z0 == 0 goto label2;

        r7 = interfaceinvoke r4.<org.w3c.dom.Attr: java.lang.String getValue()>();

        goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return r7;
    }

    public org.w3c.dom.NodeList assertValid(java.lang.String, org.w3c.dom.Node) throws java.lang.Exception
    {
        org.w3c.dom.NodeList $r4;
        org.w3c.dom.Node r1;
        java.util.Map $r3;
        org.apache.cxf.test.TestUtilities r2;
        java.lang.String r0;

        r2 := @this: org.apache.cxf.test.TestUtilities;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.w3c.dom.Node;

        $r3 = r2.<org.apache.cxf.test.TestUtilities: java.util.Map namespaces>;

        $r4 = staticinvoke <org.apache.cxf.test.XPathAssert: org.w3c.dom.NodeList assertValid(java.lang.String,org.w3c.dom.Node,java.util.Map)>(r0, r1, $r3);

        return $r4;
    }

    public void assertValidBoolean(java.lang.String, org.w3c.dom.Node) throws java.lang.Exception
    {
        org.w3c.dom.Node r1;
        java.util.Map $r3;
        org.apache.cxf.test.TestUtilities r2;
        java.lang.String r0;

        r2 := @this: org.apache.cxf.test.TestUtilities;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.w3c.dom.Node;

        $r3 = r2.<org.apache.cxf.test.TestUtilities: java.util.Map namespaces>;

        staticinvoke <org.apache.cxf.test.XPathAssert: void assertValidBoolean(java.lang.String,org.w3c.dom.Node,java.util.Map)>(r0, r1, $r3);

        return;
    }

    public org.w3c.dom.NodeList assertInvalid(java.lang.String, org.w3c.dom.Node) throws java.lang.Exception
    {
        org.w3c.dom.NodeList $r4;
        org.w3c.dom.Node r1;
        java.util.Map $r3;
        org.apache.cxf.test.TestUtilities r2;
        java.lang.String r0;

        r2 := @this: org.apache.cxf.test.TestUtilities;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.w3c.dom.Node;

        $r3 = r2.<org.apache.cxf.test.TestUtilities: java.util.Map namespaces>;

        $r4 = staticinvoke <org.apache.cxf.test.XPathAssert: org.w3c.dom.NodeList assertInvalid(java.lang.String,org.w3c.dom.Node,java.util.Map)>(r0, r1, $r3);

        return $r4;
    }

    public void assertXPathEquals(java.lang.String, java.lang.String, org.w3c.dom.Node) throws java.lang.Exception
    {
        org.w3c.dom.Node r2;
        java.util.Map $r4;
        org.apache.cxf.test.TestUtilities r3;
        java.lang.String r0, r1;

        r3 := @this: org.apache.cxf.test.TestUtilities;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.w3c.dom.Node;

        $r4 = r3.<org.apache.cxf.test.TestUtilities: java.util.Map namespaces>;

        staticinvoke <org.apache.cxf.test.XPathAssert: void assertXPathEquals(java.lang.String,java.lang.String,org.w3c.dom.Node,java.util.Map)>(r0, r1, r2, $r4);

        return;
    }

    public void assertXPathEquals(java.lang.String, javax.xml.namespace.QName, org.w3c.dom.Node) throws java.lang.Exception
    {
        org.w3c.dom.Node r2;
        java.util.Map $r4;
        org.apache.cxf.test.TestUtilities r3;
        java.lang.String r0;
        javax.xml.namespace.QName r1;

        r3 := @this: org.apache.cxf.test.TestUtilities;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: javax.xml.namespace.QName;

        r2 := @parameter2: org.w3c.dom.Node;

        $r4 = r3.<org.apache.cxf.test.TestUtilities: java.util.Map namespaces>;

        staticinvoke <org.apache.cxf.test.XPathAssert: void assertXPathEquals(java.lang.String,javax.xml.namespace.QName,org.w3c.dom.Node,java.util.Map)>(r0, r1, r2, $r4);

        return;
    }

    public void assertNoFault(org.w3c.dom.Node) throws java.lang.Exception
    {
        org.apache.cxf.test.TestUtilities r1;
        org.w3c.dom.Node r0;

        r1 := @this: org.apache.cxf.test.TestUtilities;

        r0 := @parameter0: org.w3c.dom.Node;

        staticinvoke <org.apache.cxf.test.XPathAssert: void assertNoFault(org.w3c.dom.Node)>(r0);

        return;
    }

    public byte[] invokeBytes(java.lang.String, java.lang.String, java.lang.String) throws java.lang.Exception
    {
        org.apache.cxf.Bus $r3;
        org.apache.cxf.message.MessageImpl $r10;
        byte[] $r16;
        org.apache.cxf.transport.Conduit $r8;
        java.io.ByteArrayOutputStream $r15;
        org.apache.cxf.transport.ConduitInitiator $r7;
        java.lang.String r1, r6, r13, $r21;
        org.apache.cxf.transport.ConduitInitiatorManager r5;
        java.io.OutputStream r12;
        org.apache.cxf.service.model.EndpointInfo $r0;
        java.lang.RuntimeException $r17;
        org.apache.cxf.test.TestUtilities r2;
        org.apache.cxf.test.TestUtilities$TestMessageObserver $r9;
        java.lang.Object $r4, $r11;
        java.lang.StringBuilder $r18, $r19, $r20;
        java.io.InputStream $r14;

        r2 := @this: org.apache.cxf.test.TestUtilities;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        r13 := @parameter2: java.lang.String;

        $r0 = new org.apache.cxf.service.model.EndpointInfo;

        specialinvoke $r0.<org.apache.cxf.service.model.EndpointInfo: void <init>(org.apache.cxf.service.model.ServiceInfo,java.lang.String)>(null, "http://schemas.xmlsoap.org/soap/http");

        virtualinvoke $r0.<org.apache.cxf.service.model.EndpointInfo: void setAddress(java.lang.String)>(r1);

        $r3 = virtualinvoke r2.<org.apache.cxf.test.TestUtilities: org.apache.cxf.Bus getBus()>();

        $r4 = interfaceinvoke $r3.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/transport/ConduitInitiatorManager;");

        r5 = (org.apache.cxf.transport.ConduitInitiatorManager) $r4;

        $r7 = interfaceinvoke r5.<org.apache.cxf.transport.ConduitInitiatorManager: org.apache.cxf.transport.ConduitInitiator getConduitInitiator(java.lang.String)>(r6);

        $r8 = interfaceinvoke $r7.<org.apache.cxf.transport.ConduitInitiator: org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo)>($r0);

        $r9 = new org.apache.cxf.test.TestUtilities$TestMessageObserver;

        specialinvoke $r9.<org.apache.cxf.test.TestUtilities$TestMessageObserver: void <init>()>();

        interfaceinvoke $r8.<org.apache.cxf.transport.Conduit: void setMessageObserver(org.apache.cxf.transport.MessageObserver)>($r9);

        $r10 = new org.apache.cxf.message.MessageImpl;

        specialinvoke $r10.<org.apache.cxf.message.MessageImpl: void <init>()>();

        interfaceinvoke $r8.<org.apache.cxf.transport.Conduit: void prepare(org.apache.cxf.message.Message)>($r10);

        $r11 = interfaceinvoke $r10.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljava/io/OutputStream;");

        r12 = (java.io.OutputStream) $r11;

        $r14 = virtualinvoke r2.<org.apache.cxf.test.TestUtilities: java.io.InputStream getResourceAsStream(java.lang.String)>(r13);

        if $r14 != null goto label1;

        $r17 = new java.lang.RuntimeException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find resource ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String)>($r21);

        throw $r17;

     label1:
        staticinvoke <org.apache.cxf.helpers.IOUtils: int copy(java.io.InputStream,java.io.OutputStream)>($r14, r12);

        virtualinvoke r12.<java.io.OutputStream: void flush()>();

        virtualinvoke $r14.<java.io.InputStream: void close()>();

        virtualinvoke r12.<java.io.OutputStream: void close()>();

        $r15 = virtualinvoke $r9.<org.apache.cxf.test.TestUtilities$TestMessageObserver: java.io.ByteArrayOutputStream getResponseStream()>();

        $r16 = virtualinvoke $r15.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r16;
    }

    public byte[] invokeBytes(java.lang.String, java.lang.String, byte[]) throws java.lang.Exception
    {
        org.apache.cxf.Bus $r3;
        org.apache.cxf.message.MessageImpl $r10;
        byte[] r13, $r15;
        org.apache.cxf.transport.Conduit $r8;
        java.io.ByteArrayOutputStream $r14;
        org.apache.cxf.transport.ConduitInitiator $r7;
        java.lang.String r1, r6;
        org.apache.cxf.transport.ConduitInitiatorManager r5;
        java.io.OutputStream r12;
        org.apache.cxf.service.model.EndpointInfo $r0;
        org.apache.cxf.test.TestUtilities r2;
        org.apache.cxf.test.TestUtilities$TestMessageObserver $r9;
        java.lang.Object $r4, $r11;

        r2 := @this: org.apache.cxf.test.TestUtilities;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        r13 := @parameter2: byte[];

        $r0 = new org.apache.cxf.service.model.EndpointInfo;

        specialinvoke $r0.<org.apache.cxf.service.model.EndpointInfo: void <init>(org.apache.cxf.service.model.ServiceInfo,java.lang.String)>(null, "http://schemas.xmlsoap.org/soap/http");

        virtualinvoke $r0.<org.apache.cxf.service.model.EndpointInfo: void setAddress(java.lang.String)>(r1);

        $r3 = virtualinvoke r2.<org.apache.cxf.test.TestUtilities: org.apache.cxf.Bus getBus()>();

        $r4 = interfaceinvoke $r3.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/transport/ConduitInitiatorManager;");

        r5 = (org.apache.cxf.transport.ConduitInitiatorManager) $r4;

        $r7 = interfaceinvoke r5.<org.apache.cxf.transport.ConduitInitiatorManager: org.apache.cxf.transport.ConduitInitiator getConduitInitiator(java.lang.String)>(r6);

        $r8 = interfaceinvoke $r7.<org.apache.cxf.transport.ConduitInitiator: org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo)>($r0);

        $r9 = new org.apache.cxf.test.TestUtilities$TestMessageObserver;

        specialinvoke $r9.<org.apache.cxf.test.TestUtilities$TestMessageObserver: void <init>()>();

        interfaceinvoke $r8.<org.apache.cxf.transport.Conduit: void setMessageObserver(org.apache.cxf.transport.MessageObserver)>($r9);

        $r10 = new org.apache.cxf.message.MessageImpl;

        specialinvoke $r10.<org.apache.cxf.message.MessageImpl: void <init>()>();

        interfaceinvoke $r8.<org.apache.cxf.transport.Conduit: void prepare(org.apache.cxf.message.Message)>($r10);

        $r11 = interfaceinvoke $r10.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljava/io/OutputStream;");

        r12 = (java.io.OutputStream) $r11;

        virtualinvoke r12.<java.io.OutputStream: void write(byte[])>(r13);

        virtualinvoke r12.<java.io.OutputStream: void flush()>();

        virtualinvoke r12.<java.io.OutputStream: void close()>();

        $r14 = virtualinvoke $r9.<org.apache.cxf.test.TestUtilities$TestMessageObserver: java.io.ByteArrayOutputStream getResponseStream()>();

        $r15 = virtualinvoke $r14.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r15;
    }

    public org.w3c.dom.Node invoke(java.lang.String, java.lang.String, java.lang.String) throws java.lang.Exception
    {
        byte[] $r4;
        java.io.ByteArrayInputStream $r5;
        org.w3c.dom.Document $r6;
        org.apache.cxf.test.TestUtilities r0;
        java.lang.String r1, r2, r3;

        r0 := @this: org.apache.cxf.test.TestUtilities;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = virtualinvoke r0.<org.apache.cxf.test.TestUtilities: byte[] invokeBytes(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        $r5 = new java.io.ByteArrayInputStream;

        specialinvoke $r5.<java.io.ByteArrayInputStream: void <init>(byte[])>($r4);

        $r6 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: org.w3c.dom.Document read(java.io.InputStream)>($r5);

        return $r6;
    }

    public org.w3c.dom.Node invoke(java.lang.String, java.lang.String, byte[]) throws java.lang.Exception
    {
        byte[] r3, $r4;
        java.io.ByteArrayInputStream $r5;
        org.w3c.dom.Document $r6;
        org.apache.cxf.test.TestUtilities r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.cxf.test.TestUtilities;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: byte[];

        $r4 = virtualinvoke r0.<org.apache.cxf.test.TestUtilities: byte[] invokeBytes(java.lang.String,java.lang.String,byte[])>(r1, r2, r3);

        $r5 = new java.io.ByteArrayInputStream;

        specialinvoke $r5.<java.io.ByteArrayInputStream: void <init>(byte[])>($r4);

        $r6 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: org.w3c.dom.Document read(java.io.InputStream)>($r5);

        return $r6;
    }

    public java.io.InputStream getResourceAsStream(java.lang.String)
    {
        org.apache.cxf.test.TestUtilities r0;
        java.lang.Class $r2;
        java.lang.String r1;
        java.io.InputStream $r3;

        r0 := @this: org.apache.cxf.test.TestUtilities;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.cxf.test.TestUtilities: java.lang.Class classpathAnchor>;

        $r3 = virtualinvoke $r2.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>(r1);

        return $r3;
    }

    public java.io.Reader getResourceAsReader(java.lang.String)
    {
        java.nio.charset.Charset $r4;
        org.apache.cxf.test.TestUtilities r1;
        java.lang.String r2;
        java.io.InputStreamReader $r0;
        java.io.InputStream $r3;

        r1 := @this: org.apache.cxf.test.TestUtilities;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.io.InputStreamReader;

        $r3 = virtualinvoke r1.<org.apache.cxf.test.TestUtilities: java.io.InputStream getResourceAsStream(java.lang.String)>(r2);

        $r4 = <org.apache.cxf.test.TestUtilities: java.nio.charset.Charset UTF8>;

        specialinvoke $r0.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>($r3, $r4);

        return $r0;
    }

    public javax.xml.stream.XMLStreamReader getResourceAsXMLStreamReader(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        javax.xml.stream.XMLStreamReader $r4;
        javax.xml.stream.XMLInputFactory $r2;
        org.apache.cxf.test.TestUtilities r0;
        java.lang.String r1;
        java.io.InputStream $r3;

        r0 := @this: org.apache.cxf.test.TestUtilities;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.cxf.test.TestUtilities: javax.xml.stream.XMLInputFactory xmlInputFactory>;

        $r3 = virtualinvoke r0.<org.apache.cxf.test.TestUtilities: java.io.InputStream getResourceAsStream(java.lang.String)>(r1);

        $r4 = virtualinvoke $r2.<javax.xml.stream.XMLInputFactory: javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream)>($r3);

        return $r4;
    }

    public java.io.File getTestFile(java.lang.String)
    {
        org.apache.cxf.test.TestUtilities r3;
        java.lang.String $r1, r2;
        java.io.File $r0;

        r3 := @this: org.apache.cxf.test.TestUtilities;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.io.File;

        $r1 = staticinvoke <org.apache.cxf.test.TestUtilities: java.lang.String getBasedir()>();

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r1, r2);

        return $r0;
    }

    public static java.lang.String getBasedir()
    {
        java.lang.String $r0, $r1, $r2, $r3, $r5, $r6;
        java.io.File $r4;

        $r0 = <org.apache.cxf.test.TestUtilities: java.lang.String basedirPath>;

        if $r0 == null goto label1;

        $r6 = <org.apache.cxf.test.TestUtilities: java.lang.String basedirPath>;

        return $r6;

     label1:
        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("basedir");

        <org.apache.cxf.test.TestUtilities: java.lang.String basedirPath> = $r1;

        $r2 = <org.apache.cxf.test.TestUtilities: java.lang.String basedirPath>;

        if $r2 != null goto label2;

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>("");

        $r5 = virtualinvoke $r4.<java.io.File: java.lang.String getAbsolutePath()>();

        <org.apache.cxf.test.TestUtilities: java.lang.String basedirPath> = $r5;

     label2:
        $r3 = <org.apache.cxf.test.TestUtilities: java.lang.String basedirPath>;

        return $r3;
    }

    public org.w3c.dom.Document getWSDLDocument(org.apache.cxf.endpoint.Server) throws javax.wsdl.WSDLException
    {
        org.apache.cxf.endpoint.Server r1;
        javax.wsdl.factory.WSDLFactory $r3;
        javax.wsdl.Definition $r2;
        org.w3c.dom.Document $r5;
        org.apache.cxf.test.TestUtilities r0;
        javax.wsdl.xml.WSDLWriter $r4;

        r0 := @this: org.apache.cxf.test.TestUtilities;

        r1 := @parameter0: org.apache.cxf.endpoint.Server;

        $r2 = virtualinvoke r0.<org.apache.cxf.test.TestUtilities: javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.endpoint.Server)>(r1);

        $r3 = staticinvoke <javax.wsdl.factory.WSDLFactory: javax.wsdl.factory.WSDLFactory newInstance()>();

        $r4 = virtualinvoke $r3.<javax.wsdl.factory.WSDLFactory: javax.wsdl.xml.WSDLWriter newWSDLWriter()>();

        $r5 = interfaceinvoke $r4.<javax.wsdl.xml.WSDLWriter: org.w3c.dom.Document getDocument(javax.wsdl.Definition)>($r2);

        return $r5;
    }

    public javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.endpoint.Server) throws javax.wsdl.WSDLException
    {
        org.apache.cxf.Bus $r6;
        org.apache.cxf.endpoint.Server r0;
        javax.wsdl.Definition $r10;
        org.apache.cxf.wsdl11.ServiceWSDLBuilder $r3;
        org.apache.cxf.service.model.ServiceInfo $r9;
        java.util.List $r7;
        org.apache.cxf.endpoint.Endpoint $r1;
        org.apache.cxf.service.Service $r2;
        org.apache.cxf.test.TestUtilities r4;
        org.apache.cxf.service.model.ServiceInfo[] $r5;
        java.lang.Object $r8;

        r4 := @this: org.apache.cxf.test.TestUtilities;

        r0 := @parameter0: org.apache.cxf.endpoint.Server;

        $r1 = interfaceinvoke r0.<org.apache.cxf.endpoint.Server: org.apache.cxf.endpoint.Endpoint getEndpoint()>();

        $r2 = interfaceinvoke $r1.<org.apache.cxf.endpoint.Endpoint: org.apache.cxf.service.Service getService()>();

        $r3 = new org.apache.cxf.wsdl11.ServiceWSDLBuilder;

        $r6 = r4.<org.apache.cxf.test.TestUtilities: org.apache.cxf.Bus bus>;

        $r5 = newarray (org.apache.cxf.service.model.ServiceInfo)[1];

        $r7 = interfaceinvoke $r2.<org.apache.cxf.service.Service: java.util.List getServiceInfos()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(0);

        $r9 = (org.apache.cxf.service.model.ServiceInfo) $r8;

        $r5[0] = $r9;

        specialinvoke $r3.<org.apache.cxf.wsdl11.ServiceWSDLBuilder: void <init>(org.apache.cxf.Bus,org.apache.cxf.service.model.ServiceInfo[])>($r6, $r5);

        virtualinvoke $r3.<org.apache.cxf.wsdl11.ServiceWSDLBuilder: void setUseSchemaImports(boolean)>(0);

        $r10 = virtualinvoke $r3.<org.apache.cxf.wsdl11.ServiceWSDLBuilder: javax.wsdl.Definition build()>();

        return $r10;
    }

    public org.apache.cxf.endpoint.Server getServerForService(javax.xml.namespace.QName) throws javax.wsdl.WSDLException
    {
        org.apache.cxf.Bus $r1;
        org.apache.cxf.endpoint.Server r7;
        java.util.Iterator $r5;
        java.util.List $r4;
        org.apache.cxf.endpoint.Endpoint $r8;
        org.apache.cxf.service.Service $r9;
        org.apache.cxf.test.TestUtilities r0;
        java.lang.Object $r2, $r6;
        javax.xml.namespace.QName $r10, r11;
        org.apache.cxf.endpoint.ServerRegistry r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.test.TestUtilities;

        r11 := @parameter0: javax.xml.namespace.QName;

        $r1 = r0.<org.apache.cxf.test.TestUtilities: org.apache.cxf.Bus bus>;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/endpoint/ServerRegistry;");

        r3 = (org.apache.cxf.endpoint.ServerRegistry) $r2;

        $r4 = interfaceinvoke r3.<org.apache.cxf.endpoint.ServerRegistry: java.util.List getServers()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.cxf.endpoint.Server) $r6;

        $r8 = interfaceinvoke r7.<org.apache.cxf.endpoint.Server: org.apache.cxf.endpoint.Endpoint getEndpoint()>();

        $r9 = interfaceinvoke $r8.<org.apache.cxf.endpoint.Endpoint: org.apache.cxf.service.Service getService()>();

        $r10 = interfaceinvoke $r9.<org.apache.cxf.service.Service: javax.xml.namespace.QName getName()>();

        $z1 = virtualinvoke $r10.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>(r11);

        if $z1 == 0 goto label2;

        return r7;

     label2:
        goto label1;

     label3:
        return null;
    }

    public org.apache.cxf.endpoint.Server getServerForAddress(java.lang.String) throws javax.wsdl.WSDLException
    {
        org.apache.cxf.Bus $r1;
        org.apache.cxf.service.model.EndpointInfo $r10;
        org.apache.cxf.endpoint.Server r7;
        java.util.Iterator $r5;
        java.util.List $r4;
        org.apache.cxf.endpoint.Endpoint $r9;
        org.apache.cxf.test.TestUtilities r0;
        java.lang.Object $r2, $r6;
        java.lang.String r8, $r11;
        org.apache.cxf.endpoint.ServerRegistry r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.test.TestUtilities;

        r8 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.cxf.test.TestUtilities: org.apache.cxf.Bus bus>;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/endpoint/ServerRegistry;");

        r3 = (org.apache.cxf.endpoint.ServerRegistry) $r2;

        $r4 = interfaceinvoke r3.<org.apache.cxf.endpoint.ServerRegistry: java.util.List getServers()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.cxf.endpoint.Server) $r6;

        $r9 = interfaceinvoke r7.<org.apache.cxf.endpoint.Server: org.apache.cxf.endpoint.Endpoint getEndpoint()>();

        $r10 = interfaceinvoke $r9.<org.apache.cxf.endpoint.Endpoint: org.apache.cxf.service.model.EndpointInfo getEndpointInfo()>();

        $r11 = virtualinvoke $r10.<org.apache.cxf.service.model.EndpointInfo: java.lang.String getAddress()>();

        $z1 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z1 == 0 goto label2;

        return r7;

     label2:
        goto label1;

     label3:
        return null;
    }

    public void addNamespace(java.lang.String, java.lang.String)
    {
        java.util.Map $r3;
        org.apache.cxf.test.TestUtilities r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.cxf.test.TestUtilities;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.cxf.test.TestUtilities: java.util.Map namespaces>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public java.util.Map getNamespaces()
    {
        org.apache.cxf.test.TestUtilities r0;
        java.util.Map $r1;

        r0 := @this: org.apache.cxf.test.TestUtilities;

        $r1 = r0.<org.apache.cxf.test.TestUtilities: java.util.Map namespaces>;

        return $r1;
    }

    public org.apache.cxf.Bus getBus()
    {
        org.apache.cxf.test.TestUtilities r0;
        org.apache.cxf.Bus $r1;

        r0 := @this: org.apache.cxf.test.TestUtilities;

        $r1 = r0.<org.apache.cxf.test.TestUtilities: org.apache.cxf.Bus bus>;

        return $r1;
    }

    public void setBus(org.apache.cxf.Bus)
    {
        org.apache.cxf.test.TestUtilities r0;
        org.apache.cxf.Bus r1;

        r0 := @this: org.apache.cxf.test.TestUtilities;

        r1 := @parameter0: org.apache.cxf.Bus;

        r0.<org.apache.cxf.test.TestUtilities: org.apache.cxf.Bus bus> = r1;

        return;
    }

    static void <clinit>()
    {
        java.nio.charset.Charset $r0;

        $r0 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("utf-8");

        <org.apache.cxf.test.TestUtilities: java.nio.charset.Charset UTF8> = $r0;

        return;
    }
}
