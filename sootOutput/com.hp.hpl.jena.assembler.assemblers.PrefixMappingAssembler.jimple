public class com.hp.hpl.jena.assembler.assemblers.PrefixMappingAssembler extends com.hp.hpl.jena.assembler.assemblers.AssemblerBase implements com.hp.hpl.jena.assembler.Assembler
{

    public void <init>()
    {
        com.hp.hpl.jena.assembler.assemblers.PrefixMappingAssembler r0;

        r0 := @this: com.hp.hpl.jena.assembler.assemblers.PrefixMappingAssembler;

        specialinvoke r0.<com.hp.hpl.jena.assembler.assemblers.AssemblerBase: void <init>()>();

        return;
    }

    public java.lang.Object open(com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.assembler.Mode)
    {
        com.hp.hpl.jena.assembler.Assembler r3;
        com.hp.hpl.jena.assembler.Mode r6;
        com.hp.hpl.jena.assembler.assemblers.PrefixMappingAssembler r0;
        com.hp.hpl.jena.rdf.model.Resource r1, $r2;
        com.hp.hpl.jena.shared.PrefixMapping $r4, $r5;

        r0 := @this: com.hp.hpl.jena.assembler.assemblers.PrefixMappingAssembler;

        r3 := @parameter0: com.hp.hpl.jena.assembler.Assembler;

        r1 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        r6 := @parameter2: com.hp.hpl.jena.assembler.Mode;

        $r2 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Resource PrefixMapping>;

        virtualinvoke r0.<com.hp.hpl.jena.assembler.assemblers.PrefixMappingAssembler: void checkType(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Resource)>(r1, $r2);

        $r4 = staticinvoke <com.hp.hpl.jena.shared.PrefixMapping$Factory: com.hp.hpl.jena.shared.PrefixMapping create()>();

        $r5 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.PrefixMappingAssembler: com.hp.hpl.jena.shared.PrefixMapping getPrefixes(com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.shared.PrefixMapping)>(r3, r1, $r4);

        return $r5;
    }

    public static com.hp.hpl.jena.shared.PrefixMapping getPrefixes(com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.shared.PrefixMapping)
    {
        com.hp.hpl.jena.assembler.Assembler r2;
        com.hp.hpl.jena.rdf.model.Property $r3, $r4;
        com.hp.hpl.jena.rdf.model.Resource r0;
        com.hp.hpl.jena.shared.PrefixMapping r1;

        r2 := @parameter0: com.hp.hpl.jena.assembler.Assembler;

        r0 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        r1 := @parameter2: com.hp.hpl.jena.shared.PrefixMapping;

        staticinvoke <com.hp.hpl.jena.assembler.assemblers.PrefixMappingAssembler: void setSimplePrefixes(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.shared.PrefixMapping)>(r0, r1);

        $r3 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Property includes>;

        staticinvoke <com.hp.hpl.jena.assembler.assemblers.PrefixMappingAssembler: void includePrefixesFor(com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.shared.PrefixMapping,com.hp.hpl.jena.rdf.model.Property)>(r2, r0, r1, $r3);

        $r4 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Property prefixMapping>;

        staticinvoke <com.hp.hpl.jena.assembler.assemblers.PrefixMappingAssembler: void includePrefixesFor(com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.shared.PrefixMapping,com.hp.hpl.jena.rdf.model.Property)>(r2, r0, r1, $r4);

        return r1;
    }

    private static void includePrefixesFor(com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.shared.PrefixMapping, com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.assembler.Assembler r4;
        com.hp.hpl.jena.rdf.model.Statement $r3;
        com.hp.hpl.jena.rdf.model.Resource r0, $r5;
        com.hp.hpl.jena.rdf.model.StmtIterator $r2;
        com.hp.hpl.jena.rdf.model.Property r1;
        java.lang.Object $r6;
        com.hp.hpl.jena.shared.PrefixMapping r7, r8;
        boolean $z0;

        r4 := @parameter0: com.hp.hpl.jena.assembler.Assembler;

        r0 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        r8 := @parameter2: com.hp.hpl.jena.shared.PrefixMapping;

        r1 := @parameter3: com.hp.hpl.jena.rdf.model.Property;

        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.StmtIterator listProperties(com.hp.hpl.jena.rdf.model.Property)>(r1);

     label1:
        $z0 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.rdf.model.Statement nextStatement()>();

        $r5 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.PrefixMappingAssembler: com.hp.hpl.jena.rdf.model.Resource getResource(com.hp.hpl.jena.rdf.model.Statement)>($r3);

        $r6 = interfaceinvoke r4.<com.hp.hpl.jena.assembler.Assembler: java.lang.Object open(com.hp.hpl.jena.rdf.model.Resource)>($r5);

        r7 = (com.hp.hpl.jena.shared.PrefixMapping) $r6;

        interfaceinvoke r8.<com.hp.hpl.jena.shared.PrefixMapping: com.hp.hpl.jena.shared.PrefixMapping setNsPrefixes(com.hp.hpl.jena.shared.PrefixMapping)>(r7);

        goto label1;

     label2:
        return;
    }

    private static void setSimplePrefixes(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.shared.PrefixMapping)
    {
        com.hp.hpl.jena.rdf.model.Resource r0;
        com.hp.hpl.jena.rdf.model.Property $r1, $r2, $r4;
        java.lang.String $r7, $r8;
        com.hp.hpl.jena.rdf.model.Literal $r3, $r5;
        com.hp.hpl.jena.shared.PrefixMapping r6;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r6 := @parameter1: com.hp.hpl.jena.shared.PrefixMapping;

        $r1 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Property prefix>;

        $z0 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: boolean hasProperty(com.hp.hpl.jena.rdf.model.Property)>($r1);

        if $z0 == 0 goto label1;

        $r2 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Property prefix>;

        $r3 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.PrefixMappingAssembler: com.hp.hpl.jena.rdf.model.Literal getUniqueLiteral(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property)>(r0, $r2);

        $r4 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Property namespace>;

        $r5 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.PrefixMappingAssembler: com.hp.hpl.jena.rdf.model.Literal getUniqueLiteral(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property)>(r0, $r4);

        $r7 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.Literal: java.lang.String getLexicalForm()>();

        $r8 = interfaceinvoke $r5.<com.hp.hpl.jena.rdf.model.Literal: java.lang.String getLexicalForm()>();

        interfaceinvoke r6.<com.hp.hpl.jena.shared.PrefixMapping: com.hp.hpl.jena.shared.PrefixMapping setNsPrefix(java.lang.String,java.lang.String)>($r7, $r8);

     label1:
        return;
    }
}
