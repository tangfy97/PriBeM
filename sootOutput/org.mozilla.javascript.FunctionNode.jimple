public class org.mozilla.javascript.FunctionNode extends org.mozilla.javascript.ScriptOrFnNode
{
    public static final int FUNCTION_STATEMENT;
    public static final int FUNCTION_EXPRESSION;
    public static final int FUNCTION_EXPRESSION_STATEMENT;
    java.lang.String functionName;
    boolean itsNeedsActivation;
    int itsFunctionType;
    boolean itsIgnoreDynamicScope;

    public void <init>(java.lang.String)
    {
        org.mozilla.javascript.FunctionNode r0;
        java.lang.String r1;

        r0 := @this: org.mozilla.javascript.FunctionNode;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.mozilla.javascript.ScriptOrFnNode: void <init>(int)>(105);

        r0.<org.mozilla.javascript.FunctionNode: java.lang.String functionName> = r1;

        return;
    }

    public java.lang.String getFunctionName()
    {
        org.mozilla.javascript.FunctionNode r0;
        java.lang.String $r1;

        r0 := @this: org.mozilla.javascript.FunctionNode;

        $r1 = r0.<org.mozilla.javascript.FunctionNode: java.lang.String functionName>;

        return $r1;
    }

    public boolean requiresActivation()
    {
        org.mozilla.javascript.FunctionNode r0;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.FunctionNode;

        $z0 = r0.<org.mozilla.javascript.FunctionNode: boolean itsNeedsActivation>;

        return $z0;
    }

    public boolean getIgnoreDynamicScope()
    {
        org.mozilla.javascript.FunctionNode r0;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.FunctionNode;

        $z0 = r0.<org.mozilla.javascript.FunctionNode: boolean itsIgnoreDynamicScope>;

        return $z0;
    }

    public int getFunctionType()
    {
        org.mozilla.javascript.FunctionNode r0;
        int $i0;

        r0 := @this: org.mozilla.javascript.FunctionNode;

        $i0 = r0.<org.mozilla.javascript.FunctionNode: int itsFunctionType>;

        return $i0;
    }

    public static void <clinit>()
    {
        <org.mozilla.javascript.FunctionNode: int FUNCTION_EXPRESSION_STATEMENT> = 3;

        <org.mozilla.javascript.FunctionNode: int FUNCTION_EXPRESSION> = 2;

        <org.mozilla.javascript.FunctionNode: int FUNCTION_STATEMENT> = 1;

        return;
    }
}
