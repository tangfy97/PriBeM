public class org.apache.lucene.analysis.pattern.PatternReplaceFilterFactory extends org.apache.lucene.analysis.util.TokenFilterFactory
{
    final java.util.regex.Pattern pattern;
    final java.lang.String replacement;
    final boolean replaceAll;

    public void <init>(java.util.Map)
    {
        org.apache.lucene.analysis.pattern.PatternReplaceFilterFactory r0;
        java.lang.String[] $r4;
        java.lang.IllegalArgumentException $r8;
        java.util.List $r6;
        java.util.Map r1;
        java.lang.StringBuilder $r9, $r10, $r11;
        java.util.regex.Pattern $r2;
        java.lang.String $r3, $r5, $r7, $r12;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.analysis.pattern.PatternReplaceFilterFactory;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<org.apache.lucene.analysis.util.TokenFilterFactory: void <init>(java.util.Map)>(r1);

        $r2 = virtualinvoke r0.<org.apache.lucene.analysis.pattern.PatternReplaceFilterFactory: java.util.regex.Pattern getPattern(java.util.Map,java.lang.String)>(r1, "pattern");

        r0.<org.apache.lucene.analysis.pattern.PatternReplaceFilterFactory: java.util.regex.Pattern pattern> = $r2;

        $r3 = virtualinvoke r0.<org.apache.lucene.analysis.pattern.PatternReplaceFilterFactory: java.lang.String get(java.util.Map,java.lang.String)>(r1, "replacement");

        r0.<org.apache.lucene.analysis.pattern.PatternReplaceFilterFactory: java.lang.String replacement> = $r3;

        $r5 = "all";

        $r4 = newarray (java.lang.String)[2];

        $r4[0] = "all";

        $r4[1] = "first";

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        $r7 = virtualinvoke r0.<org.apache.lucene.analysis.pattern.PatternReplaceFilterFactory: java.lang.String get(java.util.Map,java.lang.String,java.util.Collection,java.lang.String)>(r1, "replace", $r6, "all");

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        r0.<org.apache.lucene.analysis.pattern.PatternReplaceFilterFactory: boolean replaceAll> = $z0;

        $z1 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown parameters: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label1:
        return;
    }

    public org.apache.lucene.analysis.pattern.PatternReplaceFilter create(org.apache.lucene.analysis.TokenStream)
    {
        org.apache.lucene.analysis.pattern.PatternReplaceFilter $r0;
        org.apache.lucene.analysis.TokenStream r1;
        org.apache.lucene.analysis.pattern.PatternReplaceFilterFactory r2;
        java.lang.String $r3;
        java.util.regex.Pattern $r4;
        boolean $z0;

        r2 := @this: org.apache.lucene.analysis.pattern.PatternReplaceFilterFactory;

        r1 := @parameter0: org.apache.lucene.analysis.TokenStream;

        $r0 = new org.apache.lucene.analysis.pattern.PatternReplaceFilter;

        $r4 = r2.<org.apache.lucene.analysis.pattern.PatternReplaceFilterFactory: java.util.regex.Pattern pattern>;

        $r3 = r2.<org.apache.lucene.analysis.pattern.PatternReplaceFilterFactory: java.lang.String replacement>;

        $z0 = r2.<org.apache.lucene.analysis.pattern.PatternReplaceFilterFactory: boolean replaceAll>;

        specialinvoke $r0.<org.apache.lucene.analysis.pattern.PatternReplaceFilter: void <init>(org.apache.lucene.analysis.TokenStream,java.util.regex.Pattern,java.lang.String,boolean)>(r1, $r4, $r3, $z0);

        return $r0;
    }

    public volatile org.apache.lucene.analysis.TokenStream create(org.apache.lucene.analysis.TokenStream)
    {
        org.apache.lucene.analysis.pattern.PatternReplaceFilter $r2;
        org.apache.lucene.analysis.TokenStream r1;
        org.apache.lucene.analysis.pattern.PatternReplaceFilterFactory r0;

        r0 := @this: org.apache.lucene.analysis.pattern.PatternReplaceFilterFactory;

        r1 := @parameter0: org.apache.lucene.analysis.TokenStream;

        $r2 = virtualinvoke r0.<org.apache.lucene.analysis.pattern.PatternReplaceFilterFactory: org.apache.lucene.analysis.pattern.PatternReplaceFilter create(org.apache.lucene.analysis.TokenStream)>(r1);

        return $r2;
    }
}
