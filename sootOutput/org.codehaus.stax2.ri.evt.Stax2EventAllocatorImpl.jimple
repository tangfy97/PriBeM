public class org.codehaus.stax2.ri.evt.Stax2EventAllocatorImpl extends java.lang.Object implements javax.xml.stream.util.XMLEventAllocator, javax.xml.stream.XMLStreamConstants
{

    public void <init>()
    {
        org.codehaus.stax2.ri.evt.Stax2EventAllocatorImpl r0;

        r0 := @this: org.codehaus.stax2.ri.evt.Stax2EventAllocatorImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public javax.xml.stream.events.XMLEvent allocate(javax.xml.stream.XMLStreamReader) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.evt.StartDocumentEventImpl $r8;
        org.codehaus.stax2.ri.evt.Stax2EventAllocatorImpl r0;
        org.codehaus.stax2.ri.evt.CharactersEventImpl $r3, $r9, $r13;
        org.codehaus.stax2.ri.evt.EndDocumentEventImpl $r7;
        javax.xml.stream.XMLStreamReader r1;
        java.lang.StringBuffer $r21, $r22, $r23, $r24;
        javax.xml.stream.XMLStreamException $r20;
        int $i0, $i1;
        org.codehaus.stax2.ri.evt.EndElementEventImpl $r18;
        java.lang.String $r4, $r10, $r12, $r14, $r16, $r17, $r25;
        javax.xml.stream.events.StartElement $r19;
        org.codehaus.stax2.ri.evt.CommentEventImpl $r11;
        org.codehaus.stax2.ri.evt.ProcInstrEventImpl $r15;
        javax.xml.stream.Location $r2;
        javax.xml.stream.events.DTD $r5;
        javax.xml.stream.events.EntityReference $r6;

        r0 := @this: org.codehaus.stax2.ri.evt.Stax2EventAllocatorImpl;

        r1 := @parameter0: javax.xml.stream.XMLStreamReader;

        $r2 = virtualinvoke r0.<org.codehaus.stax2.ri.evt.Stax2EventAllocatorImpl: javax.xml.stream.Location getLocation(javax.xml.stream.XMLStreamReader)>(r1);

        $i0 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: int getEventType()>();

        tableswitch($i0)
        {
            case 1: goto label10;
            case 2: goto label06;
            case 3: goto label07;
            case 4: goto label02;
            case 5: goto label03;
            case 6: goto label08;
            case 7: goto label09;
            case 8: goto label05;
            case 9: goto label11;
            case 10: goto label12;
            case 11: goto label04;
            case 12: goto label01;
            case 13: goto label12;
            case 14: goto label12;
            case 15: goto label12;
            default: goto label12;
        };

     label01:
        $r3 = new org.codehaus.stax2.ri.evt.CharactersEventImpl;

        $r4 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: java.lang.String getText()>();

        specialinvoke $r3.<org.codehaus.stax2.ri.evt.CharactersEventImpl: void <init>(javax.xml.stream.Location,java.lang.String,boolean)>($r2, $r4, 1);

        return $r3;

     label02:
        $r13 = new org.codehaus.stax2.ri.evt.CharactersEventImpl;

        $r14 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: java.lang.String getText()>();

        specialinvoke $r13.<org.codehaus.stax2.ri.evt.CharactersEventImpl: void <init>(javax.xml.stream.Location,java.lang.String,boolean)>($r2, $r14, 0);

        return $r13;

     label03:
        $r11 = new org.codehaus.stax2.ri.evt.CommentEventImpl;

        $r12 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: java.lang.String getText()>();

        specialinvoke $r11.<org.codehaus.stax2.ri.evt.CommentEventImpl: void <init>(javax.xml.stream.Location,java.lang.String)>($r2, $r12);

        return $r11;

     label04:
        $r5 = virtualinvoke r0.<org.codehaus.stax2.ri.evt.Stax2EventAllocatorImpl: javax.xml.stream.events.DTD createDTD(javax.xml.stream.XMLStreamReader,javax.xml.stream.Location)>(r1, $r2);

        return $r5;

     label05:
        $r7 = new org.codehaus.stax2.ri.evt.EndDocumentEventImpl;

        specialinvoke $r7.<org.codehaus.stax2.ri.evt.EndDocumentEventImpl: void <init>(javax.xml.stream.Location)>($r2);

        return $r7;

     label06:
        $r18 = new org.codehaus.stax2.ri.evt.EndElementEventImpl;

        specialinvoke $r18.<org.codehaus.stax2.ri.evt.EndElementEventImpl: void <init>(javax.xml.stream.Location,javax.xml.stream.XMLStreamReader)>($r2, r1);

        return $r18;

     label07:
        $r15 = new org.codehaus.stax2.ri.evt.ProcInstrEventImpl;

        $r16 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: java.lang.String getPITarget()>();

        $r17 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: java.lang.String getPIData()>();

        specialinvoke $r15.<org.codehaus.stax2.ri.evt.ProcInstrEventImpl: void <init>(javax.xml.stream.Location,java.lang.String,java.lang.String)>($r2, $r16, $r17);

        return $r15;

     label08:
        $r9 = new org.codehaus.stax2.ri.evt.CharactersEventImpl;

        $r10 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: java.lang.String getText()>();

        specialinvoke $r9.<org.codehaus.stax2.ri.evt.CharactersEventImpl: void <init>(javax.xml.stream.Location,java.lang.String,boolean)>($r2, $r10, 0);

        virtualinvoke $r9.<org.codehaus.stax2.ri.evt.CharactersEventImpl: void setWhitespaceStatus(boolean)>(1);

        return $r9;

     label09:
        $r8 = new org.codehaus.stax2.ri.evt.StartDocumentEventImpl;

        specialinvoke $r8.<org.codehaus.stax2.ri.evt.StartDocumentEventImpl: void <init>(javax.xml.stream.Location,javax.xml.stream.XMLStreamReader)>($r2, r1);

        return $r8;

     label10:
        $r19 = virtualinvoke r0.<org.codehaus.stax2.ri.evt.Stax2EventAllocatorImpl: javax.xml.stream.events.StartElement createStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.Location)>(r1, $r2);

        return $r19;

     label11:
        $r6 = virtualinvoke r0.<org.codehaus.stax2.ri.evt.Stax2EventAllocatorImpl: javax.xml.stream.events.EntityReference createEntityReference(javax.xml.stream.XMLStreamReader,javax.xml.stream.Location)>(r1, $r2);

        return $r6;

     label12:
        $r20 = new javax.xml.stream.XMLStreamException;

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unrecognized event type ");

        $i1 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: int getEventType()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r20.<javax.xml.stream.XMLStreamException: void <init>(java.lang.String)>($r25);

        throw $r20;
    }

    public void allocate(javax.xml.stream.XMLStreamReader, javax.xml.stream.util.XMLEventConsumer) throws javax.xml.stream.XMLStreamException
    {
        javax.xml.stream.events.XMLEvent $r3;
        javax.xml.stream.XMLStreamReader r2;
        javax.xml.stream.util.XMLEventConsumer r0;
        org.codehaus.stax2.ri.evt.Stax2EventAllocatorImpl r1;

        r1 := @this: org.codehaus.stax2.ri.evt.Stax2EventAllocatorImpl;

        r2 := @parameter0: javax.xml.stream.XMLStreamReader;

        r0 := @parameter1: javax.xml.stream.util.XMLEventConsumer;

        $r3 = virtualinvoke r1.<org.codehaus.stax2.ri.evt.Stax2EventAllocatorImpl: javax.xml.stream.events.XMLEvent allocate(javax.xml.stream.XMLStreamReader)>(r2);

        interfaceinvoke r0.<javax.xml.stream.util.XMLEventConsumer: void add(javax.xml.stream.events.XMLEvent)>($r3);

        return;
    }

    public javax.xml.stream.util.XMLEventAllocator newInstance()
    {
        org.codehaus.stax2.ri.evt.Stax2EventAllocatorImpl $r0, r1;

        r1 := @this: org.codehaus.stax2.ri.evt.Stax2EventAllocatorImpl;

        $r0 = new org.codehaus.stax2.ri.evt.Stax2EventAllocatorImpl;

        specialinvoke $r0.<org.codehaus.stax2.ri.evt.Stax2EventAllocatorImpl: void <init>()>();

        return $r0;
    }

    protected javax.xml.stream.Location getLocation(javax.xml.stream.XMLStreamReader)
    {
        javax.xml.stream.XMLStreamReader r0;
        javax.xml.stream.Location $r1;
        org.codehaus.stax2.ri.evt.Stax2EventAllocatorImpl r2;

        r2 := @this: org.codehaus.stax2.ri.evt.Stax2EventAllocatorImpl;

        r0 := @parameter0: javax.xml.stream.XMLStreamReader;

        $r1 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: javax.xml.stream.Location getLocation()>();

        return $r1;
    }

    protected javax.xml.stream.events.EntityReference createEntityReference(javax.xml.stream.XMLStreamReader, javax.xml.stream.Location) throws javax.xml.stream.XMLStreamException
    {
        javax.xml.stream.XMLStreamReader r2;
        javax.xml.stream.Location r1;
        org.codehaus.stax2.ri.evt.EntityReferenceEventImpl $r0;
        java.lang.String $r3;
        org.codehaus.stax2.ri.evt.Stax2EventAllocatorImpl r4;

        r4 := @this: org.codehaus.stax2.ri.evt.Stax2EventAllocatorImpl;

        r2 := @parameter0: javax.xml.stream.XMLStreamReader;

        r1 := @parameter1: javax.xml.stream.Location;

        $r0 = new org.codehaus.stax2.ri.evt.EntityReferenceEventImpl;

        $r3 = interfaceinvoke r2.<javax.xml.stream.XMLStreamReader: java.lang.String getLocalName()>();

        specialinvoke $r0.<org.codehaus.stax2.ri.evt.EntityReferenceEventImpl: void <init>(javax.xml.stream.Location,java.lang.String)>(r1, $r3);

        return $r0;
    }

    protected javax.xml.stream.events.DTD createDTD(javax.xml.stream.XMLStreamReader, javax.xml.stream.Location) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.XMLStreamReader2 r4;
        org.codehaus.stax2.ri.evt.DTDEventImpl $r1, $r6;
        org.codehaus.stax2.ri.evt.Stax2EventAllocatorImpl r12;
        org.codehaus.stax2.DTDInfo $r5;
        javax.xml.stream.XMLStreamReader r0;
        javax.xml.stream.Location r2;
        java.lang.Object $r11;
        java.lang.String $r3, $r7, $r8, $r9, $r10;
        boolean $z0;

        r12 := @this: org.codehaus.stax2.ri.evt.Stax2EventAllocatorImpl;

        r0 := @parameter0: javax.xml.stream.XMLStreamReader;

        r2 := @parameter1: javax.xml.stream.Location;

        $z0 = r0 instanceof org.codehaus.stax2.XMLStreamReader2;

        if $z0 == 0 goto label1;

        r4 = (org.codehaus.stax2.XMLStreamReader2) r0;

        $r5 = interfaceinvoke r4.<org.codehaus.stax2.XMLStreamReader2: org.codehaus.stax2.DTDInfo getDTDInfo()>();

        $r6 = new org.codehaus.stax2.ri.evt.DTDEventImpl;

        $r7 = interfaceinvoke $r5.<org.codehaus.stax2.DTDInfo: java.lang.String getDTDRootName()>();

        $r8 = interfaceinvoke $r5.<org.codehaus.stax2.DTDInfo: java.lang.String getDTDSystemId()>();

        $r9 = interfaceinvoke $r5.<org.codehaus.stax2.DTDInfo: java.lang.String getDTDPublicId()>();

        $r10 = interfaceinvoke $r5.<org.codehaus.stax2.DTDInfo: java.lang.String getDTDInternalSubset()>();

        $r11 = interfaceinvoke $r5.<org.codehaus.stax2.DTDInfo: java.lang.Object getProcessedDTD()>();

        specialinvoke $r6.<org.codehaus.stax2.ri.evt.DTDEventImpl: void <init>(javax.xml.stream.Location,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>(r2, $r7, $r8, $r9, $r10, $r11);

        return $r6;

     label1:
        $r1 = new org.codehaus.stax2.ri.evt.DTDEventImpl;

        $r3 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: java.lang.String getText()>();

        specialinvoke $r1.<org.codehaus.stax2.ri.evt.DTDEventImpl: void <init>(javax.xml.stream.Location,java.lang.String,java.lang.String)>(r2, null, $r3);

        return $r1;
    }

    protected javax.xml.stream.events.StartElement createStartElement(javax.xml.stream.XMLStreamReader, javax.xml.stream.Location) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.XMLStreamReader2 $r10;
        org.codehaus.stax2.ri.evt.AttributeEventImpl $r8;
        org.codehaus.stax2.ri.evt.StartElementEventImpl $r18;
        java.util.ArrayList $r1, $r2, r13, r14;
        org.codehaus.stax2.ri.evt.Stax2EventAllocatorImpl r11;
        org.codehaus.stax2.ri.evt.NamespaceEventImpl $r6;
        javax.xml.stream.XMLStreamReader r0;
        int $i0, $i1, i2, i3;
        javax.xml.namespace.NamespaceContext r12;
        java.lang.String $r4, $r5, $r9;
        boolean $z0, $z1;
        java.util.Iterator $r16, $r17;
        javax.xml.stream.Location r3;
        javax.xml.namespace.QName $r7, $r15;

        r11 := @this: org.codehaus.stax2.ri.evt.Stax2EventAllocatorImpl;

        r0 := @parameter0: javax.xml.stream.XMLStreamReader;

        r3 := @parameter1: javax.xml.stream.Location;

        r12 = null;

        $z0 = r0 instanceof org.codehaus.stax2.XMLStreamReader2;

        if $z0 == 0 goto label01;

        $r10 = (org.codehaus.stax2.XMLStreamReader2) r0;

        r12 = interfaceinvoke $r10.<org.codehaus.stax2.XMLStreamReader2: javax.xml.namespace.NamespaceContext getNonTransientNamespaceContext()>();

     label01:
        $i0 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: int getAttributeCount()>();

        if $i0 >= 1 goto label02;

        r13 = null;

        goto label04;

     label02:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0);

        r13 = $r1;

        i2 = 0;

     label03:
        if i2 >= $i0 goto label04;

        $r7 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: javax.xml.namespace.QName getAttributeName(int)>(i2);

        $r8 = new org.codehaus.stax2.ri.evt.AttributeEventImpl;

        $r9 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: java.lang.String getAttributeValue(int)>(i2);

        $z1 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: boolean isAttributeSpecified(int)>(i2);

        specialinvoke $r8.<org.codehaus.stax2.ri.evt.AttributeEventImpl: void <init>(javax.xml.stream.Location,javax.xml.namespace.QName,java.lang.String,boolean)>(r3, $r7, $r9, $z1);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r8);

        i2 = i2 + 1;

        goto label03;

     label04:
        $i1 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: int getNamespaceCount()>();

        if $i1 >= 1 goto label05;

        r14 = null;

        goto label07;

     label05:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i1);

        r14 = $r2;

        i3 = 0;

     label06:
        if i3 >= $i1 goto label07;

        $r4 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: java.lang.String getNamespacePrefix(int)>(i3);

        $r5 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: java.lang.String getNamespaceURI(int)>(i3);

        $r6 = staticinvoke <org.codehaus.stax2.ri.evt.NamespaceEventImpl: org.codehaus.stax2.ri.evt.NamespaceEventImpl constructNamespace(javax.xml.stream.Location,java.lang.String,java.lang.String)>(r3, $r4, $r5);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r6);

        i3 = i3 + 1;

        goto label06;

     label07:
        $r15 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: javax.xml.namespace.QName getName()>();

        if r13 != null goto label08;

        $r16 = staticinvoke <org.codehaus.stax2.ri.EmptyIterator: org.codehaus.stax2.ri.EmptyIterator getInstance()>();

        goto label09;

     label08:
        $r16 = interfaceinvoke r13.<java.util.List: java.util.Iterator iterator()>();

     label09:
        if r14 != null goto label10;

        $r17 = staticinvoke <org.codehaus.stax2.ri.EmptyIterator: org.codehaus.stax2.ri.EmptyIterator getInstance()>();

        goto label11;

     label10:
        $r17 = interfaceinvoke r14.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $r18 = staticinvoke <org.codehaus.stax2.ri.evt.StartElementEventImpl: org.codehaus.stax2.ri.evt.StartElementEventImpl construct(javax.xml.stream.Location,javax.xml.namespace.QName,java.util.Iterator,java.util.Iterator,javax.xml.namespace.NamespaceContext)>(r3, $r15, $r16, $r17, r12);

        return $r18;
    }
}
