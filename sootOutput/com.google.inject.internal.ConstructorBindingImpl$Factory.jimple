class com.google.inject.internal.ConstructorBindingImpl$Factory extends java.lang.Object implements com.google.inject.internal.InternalFactory
{
    private final boolean failIfNotLinked;
    private final com.google.inject.Key key;
    private boolean allowCircularProxy;
    private com.google.inject.internal.ConstructorInjector constructorInjector;

    void <init>(boolean, com.google.inject.Key)
    {
        com.google.inject.Key r1;
        com.google.inject.internal.ConstructorBindingImpl$Factory r0;
        boolean z0;

        r0 := @this: com.google.inject.internal.ConstructorBindingImpl$Factory;

        z0 := @parameter0: boolean;

        r1 := @parameter1: com.google.inject.Key;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.inject.internal.ConstructorBindingImpl$Factory: boolean failIfNotLinked> = z0;

        r0.<com.google.inject.internal.ConstructorBindingImpl$Factory: com.google.inject.Key key> = r1;

        return;
    }

    public java.lang.Object get(com.google.inject.internal.Errors, com.google.inject.internal.InternalContext, com.google.inject.spi.Dependency, boolean) throws com.google.inject.internal.ErrorsException
    {
        com.google.inject.internal.ConstructorInjector $r1, $r5;
        com.google.inject.internal.InternalContext r3;
        com.google.inject.Key $r6, $r10;
        com.google.inject.internal.ErrorsException $r12;
        boolean $z0, $z1, z2, $z3;
        com.google.inject.spi.Dependency r4;
        com.google.inject.internal.Errors r2, $r11;
        com.google.inject.internal.ConstructorBindingImpl$Factory r0;
        java.lang.Class $r8;
        java.lang.Object $r9;
        com.google.inject.TypeLiteral $r7;

        r0 := @this: com.google.inject.internal.ConstructorBindingImpl$Factory;

        r2 := @parameter0: com.google.inject.internal.Errors;

        r3 := @parameter1: com.google.inject.internal.InternalContext;

        r4 := @parameter2: com.google.inject.spi.Dependency;

        z2 := @parameter3: boolean;

        $r1 = r0.<com.google.inject.internal.ConstructorBindingImpl$Factory: com.google.inject.internal.ConstructorInjector constructorInjector>;

        if $r1 == null goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        staticinvoke <com.google.inject.internal.util.$Preconditions: void checkState(boolean,java.lang.Object)>($z3, "Constructor not ready");

        $z0 = r0.<com.google.inject.internal.ConstructorBindingImpl$Factory: boolean failIfNotLinked>;

        if $z0 == 0 goto label3;

        if z2 != 0 goto label3;

        $r10 = r0.<com.google.inject.internal.ConstructorBindingImpl$Factory: com.google.inject.Key key>;

        $r11 = virtualinvoke r2.<com.google.inject.internal.Errors: com.google.inject.internal.Errors jitDisabled(com.google.inject.Key)>($r10);

        $r12 = virtualinvoke $r11.<com.google.inject.internal.Errors: com.google.inject.internal.ErrorsException toException()>();

        throw $r12;

     label3:
        $r5 = r0.<com.google.inject.internal.ConstructorBindingImpl$Factory: com.google.inject.internal.ConstructorInjector constructorInjector>;

        $r6 = virtualinvoke r4.<com.google.inject.spi.Dependency: com.google.inject.Key getKey()>();

        $r7 = virtualinvoke $r6.<com.google.inject.Key: com.google.inject.TypeLiteral getTypeLiteral()>();

        $r8 = virtualinvoke $r7.<com.google.inject.TypeLiteral: java.lang.Class getRawType()>();

        $z1 = r0.<com.google.inject.internal.ConstructorBindingImpl$Factory: boolean allowCircularProxy>;

        $r9 = virtualinvoke $r5.<com.google.inject.internal.ConstructorInjector: java.lang.Object construct(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,java.lang.Class,boolean)>(r2, r3, $r8, $z1);

        return $r9;
    }

    static com.google.inject.internal.ConstructorInjector access$002(com.google.inject.internal.ConstructorBindingImpl$Factory, com.google.inject.internal.ConstructorInjector)
    {
        com.google.inject.internal.ConstructorInjector r1;
        com.google.inject.internal.ConstructorBindingImpl$Factory r0;

        r0 := @parameter0: com.google.inject.internal.ConstructorBindingImpl$Factory;

        r1 := @parameter1: com.google.inject.internal.ConstructorInjector;

        r0.<com.google.inject.internal.ConstructorBindingImpl$Factory: com.google.inject.internal.ConstructorInjector constructorInjector> = r1;

        return r1;
    }

    static boolean access$102(com.google.inject.internal.ConstructorBindingImpl$Factory, boolean)
    {
        com.google.inject.internal.ConstructorBindingImpl$Factory r0;
        boolean z0;

        r0 := @parameter0: com.google.inject.internal.ConstructorBindingImpl$Factory;

        z0 := @parameter1: boolean;

        r0.<com.google.inject.internal.ConstructorBindingImpl$Factory: boolean allowCircularProxy> = z0;

        return z0;
    }

    static com.google.inject.internal.ConstructorInjector access$000(com.google.inject.internal.ConstructorBindingImpl$Factory)
    {
        com.google.inject.internal.ConstructorInjector $r1;
        com.google.inject.internal.ConstructorBindingImpl$Factory r0;

        r0 := @parameter0: com.google.inject.internal.ConstructorBindingImpl$Factory;

        $r1 = r0.<com.google.inject.internal.ConstructorBindingImpl$Factory: com.google.inject.internal.ConstructorInjector constructorInjector>;

        return $r1;
    }
}
