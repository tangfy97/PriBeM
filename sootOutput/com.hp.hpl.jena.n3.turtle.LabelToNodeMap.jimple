public class com.hp.hpl.jena.n3.turtle.LabelToNodeMap extends java.lang.Object
{
    java.util.Map bNodeLabels;

    public void <init>()
    {
        com.hp.hpl.jena.n3.turtle.LabelToNodeMap r0;
        java.util.HashMap $r1;

        r0 := @this: com.hp.hpl.jena.n3.turtle.LabelToNodeMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.hp.hpl.jena.n3.turtle.LabelToNodeMap: java.util.Map bNodeLabels> = $r1;

        return;
    }

    public com.hp.hpl.jena.graph.Node asNode(java.lang.String)
    {
        com.hp.hpl.jena.n3.turtle.LabelToNodeMap r0;
        java.util.Map $r2, $r5;
        java.lang.Object $r3;
        java.lang.String r1;
        com.hp.hpl.jena.graph.Node $r4, r6;

        r0 := @this: com.hp.hpl.jena.n3.turtle.LabelToNodeMap;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.n3.turtle.LabelToNodeMap: java.util.Map bNodeLabels>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r6 = (com.hp.hpl.jena.graph.Node) $r3;

        if r6 == null goto label1;

        return r6;

     label1:
        $r4 = virtualinvoke r0.<com.hp.hpl.jena.n3.turtle.LabelToNodeMap: com.hp.hpl.jena.graph.Node allocNode()>();

        $r5 = r0.<com.hp.hpl.jena.n3.turtle.LabelToNodeMap: java.util.Map bNodeLabels>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

        return $r4;
    }

    public com.hp.hpl.jena.graph.Node allocNode()
    {
        com.hp.hpl.jena.n3.turtle.LabelToNodeMap r1;
        com.hp.hpl.jena.graph.Node $r0;

        r1 := @this: com.hp.hpl.jena.n3.turtle.LabelToNodeMap;

        $r0 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createAnon()>();

        return $r0;
    }

    public void clear()
    {
        com.hp.hpl.jena.n3.turtle.LabelToNodeMap r0;
        java.util.Map $r1;

        r0 := @this: com.hp.hpl.jena.n3.turtle.LabelToNodeMap;

        $r1 = r0.<com.hp.hpl.jena.n3.turtle.LabelToNodeMap: java.util.Map bNodeLabels>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        return;
    }
}
