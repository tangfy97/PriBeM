public class org.mortbay.jetty.ResourceCache extends org.mortbay.component.AbstractLifeCycle implements java.io.Serializable
{
    private int _maxCachedFileSize;
    private int _maxCachedFiles;
    private int _maxCacheSize;
    private org.mortbay.jetty.MimeTypes _mimeTypes;
    protected transient java.util.Map _cache;
    protected transient int _cachedSize;
    protected transient int _cachedFiles;
    protected transient org.mortbay.jetty.ResourceCache$Content _mostRecentlyUsed;
    protected transient org.mortbay.jetty.ResourceCache$Content _leastRecentlyUsed;

    public void <init>(org.mortbay.jetty.MimeTypes)
    {
        org.mortbay.jetty.ResourceCache r0;
        org.mortbay.jetty.MimeTypes r1;

        r0 := @this: org.mortbay.jetty.ResourceCache;

        r1 := @parameter0: org.mortbay.jetty.MimeTypes;

        specialinvoke r0.<org.mortbay.component.AbstractLifeCycle: void <init>()>();

        r0.<org.mortbay.jetty.ResourceCache: int _maxCachedFileSize> = 1048576;

        r0.<org.mortbay.jetty.ResourceCache: int _maxCachedFiles> = 2048;

        r0.<org.mortbay.jetty.ResourceCache: int _maxCacheSize> = 16777216;

        r0.<org.mortbay.jetty.ResourceCache: org.mortbay.jetty.MimeTypes _mimeTypes> = r1;

        return;
    }

    public int getCachedSize()
    {
        int $i0;
        org.mortbay.jetty.ResourceCache r0;

        r0 := @this: org.mortbay.jetty.ResourceCache;

        $i0 = r0.<org.mortbay.jetty.ResourceCache: int _cachedSize>;

        return $i0;
    }

    public int getCachedFiles()
    {
        int $i0;
        org.mortbay.jetty.ResourceCache r0;

        r0 := @this: org.mortbay.jetty.ResourceCache;

        $i0 = r0.<org.mortbay.jetty.ResourceCache: int _cachedFiles>;

        return $i0;
    }

    public int getMaxCachedFileSize()
    {
        int $i0;
        org.mortbay.jetty.ResourceCache r0;

        r0 := @this: org.mortbay.jetty.ResourceCache;

        $i0 = r0.<org.mortbay.jetty.ResourceCache: int _maxCachedFileSize>;

        return $i0;
    }

    public void setMaxCachedFileSize(int)
    {
        int i0;
        org.mortbay.jetty.ResourceCache r0;

        r0 := @this: org.mortbay.jetty.ResourceCache;

        i0 := @parameter0: int;

        r0.<org.mortbay.jetty.ResourceCache: int _maxCachedFileSize> = i0;

        virtualinvoke r0.<org.mortbay.jetty.ResourceCache: void flushCache()>();

        return;
    }

    public int getMaxCacheSize()
    {
        int $i0;
        org.mortbay.jetty.ResourceCache r0;

        r0 := @this: org.mortbay.jetty.ResourceCache;

        $i0 = r0.<org.mortbay.jetty.ResourceCache: int _maxCacheSize>;

        return $i0;
    }

    public void setMaxCacheSize(int)
    {
        int i0;
        org.mortbay.jetty.ResourceCache r0;

        r0 := @this: org.mortbay.jetty.ResourceCache;

        i0 := @parameter0: int;

        r0.<org.mortbay.jetty.ResourceCache: int _maxCacheSize> = i0;

        virtualinvoke r0.<org.mortbay.jetty.ResourceCache: void flushCache()>();

        return;
    }

    public int getMaxCachedFiles()
    {
        int $i0;
        org.mortbay.jetty.ResourceCache r0;

        r0 := @this: org.mortbay.jetty.ResourceCache;

        $i0 = r0.<org.mortbay.jetty.ResourceCache: int _maxCachedFiles>;

        return $i0;
    }

    public void setMaxCachedFiles(int)
    {
        int i0;
        org.mortbay.jetty.ResourceCache r0;

        r0 := @this: org.mortbay.jetty.ResourceCache;

        i0 := @parameter0: int;

        r0.<org.mortbay.jetty.ResourceCache: int _maxCachedFiles> = i0;

        return;
    }

    public void flushCache()
    {
        java.lang.Throwable $r9;
        java.util.Iterator $r5;
        java.util.Collection $r4;
        java.util.ArrayList $r2;
        org.mortbay.jetty.ResourceCache r0;
        org.mortbay.jetty.ResourceCache$Content r8;
        java.util.Map $r1, $r3, $r6;
        java.lang.Object $r7;
        boolean $z0;

        r0 := @this: org.mortbay.jetty.ResourceCache;

        $r1 = r0.<org.mortbay.jetty.ResourceCache: java.util.Map _cache>;

        if $r1 == null goto label7;

        entermonitor r0;

     label1:
        $r2 = new java.util.ArrayList;

        $r3 = r0.<org.mortbay.jetty.ResourceCache: java.util.Map _cache>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        $r5 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.mortbay.jetty.ResourceCache$Content) $r7;

        virtualinvoke r8.<org.mortbay.jetty.ResourceCache$Content: void invalidate()>();

        goto label2;

     label3:
        $r6 = r0.<org.mortbay.jetty.ResourceCache: java.util.Map _cache>;

        interfaceinvoke $r6.<java.util.Map: void clear()>();

        r0.<org.mortbay.jetty.ResourceCache: int _cachedSize> = 0;

        r0.<org.mortbay.jetty.ResourceCache: int _cachedFiles> = 0;

        r0.<org.mortbay.jetty.ResourceCache: org.mortbay.jetty.ResourceCache$Content _mostRecentlyUsed> = null;

        r0.<org.mortbay.jetty.ResourceCache: org.mortbay.jetty.ResourceCache$Content _leastRecentlyUsed> = null;

        exitmonitor r0;

     label4:
        goto label7;

     label5:
        $r9 := @caughtexception;

        exitmonitor r0;

     label6:
        throw $r9;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public org.mortbay.jetty.ResourceCache$Content lookup(java.lang.String, org.mortbay.resource.ResourceFactory) throws java.io.IOException
    {
        java.lang.Throwable $r8;
        org.mortbay.jetty.ResourceCache r0;
        org.mortbay.jetty.ResourceCache$Content $r7, r9;
        java.util.Map $r1, $r3;
        org.mortbay.resource.ResourceFactory r5;
        java.lang.Object $r4;
        org.mortbay.resource.Resource $r6;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: org.mortbay.jetty.ResourceCache;

        r2 := @parameter0: java.lang.String;

        r5 := @parameter1: org.mortbay.resource.ResourceFactory;

        $r1 = r0.<org.mortbay.jetty.ResourceCache: java.util.Map _cache>;

        entermonitor $r1;

     label1:
        $r3 = r0.<org.mortbay.jetty.ResourceCache: java.util.Map _cache>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r9 = (org.mortbay.jetty.ResourceCache$Content) $r4;

        if r9 == null goto label3;

        $z0 = virtualinvoke r9.<org.mortbay.jetty.ResourceCache$Content: boolean isValid()>();

        if $z0 == 0 goto label3;

        exitmonitor $r1;

     label2:
        return r9;

     label3:
        exitmonitor $r1;

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r8;

     label7:
        $r6 = interfaceinvoke r5.<org.mortbay.resource.ResourceFactory: org.mortbay.resource.Resource getResource(java.lang.String)>(r2);

        $r7 = specialinvoke r0.<org.mortbay.jetty.ResourceCache: org.mortbay.jetty.ResourceCache$Content load(java.lang.String,org.mortbay.resource.Resource)>(r2, $r6);

        return $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public org.mortbay.jetty.ResourceCache$Content lookup(java.lang.String, org.mortbay.resource.Resource) throws java.io.IOException
    {
        java.lang.Throwable $r7;
        org.mortbay.jetty.ResourceCache r0;
        org.mortbay.jetty.ResourceCache$Content $r6, r8;
        java.util.Map $r1, $r3;
        java.lang.Object $r4;
        org.mortbay.resource.Resource r5;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: org.mortbay.jetty.ResourceCache;

        r2 := @parameter0: java.lang.String;

        r5 := @parameter1: org.mortbay.resource.Resource;

        $r1 = r0.<org.mortbay.jetty.ResourceCache: java.util.Map _cache>;

        entermonitor $r1;

     label1:
        $r3 = r0.<org.mortbay.jetty.ResourceCache: java.util.Map _cache>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r8 = (org.mortbay.jetty.ResourceCache$Content) $r4;

        if r8 == null goto label3;

        $z0 = virtualinvoke r8.<org.mortbay.jetty.ResourceCache$Content: boolean isValid()>();

        if $z0 == 0 goto label3;

        exitmonitor $r1;

     label2:
        return r8;

     label3:
        exitmonitor $r1;

     label4:
        goto label7;

     label5:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r7;

     label7:
        $r6 = specialinvoke r0.<org.mortbay.jetty.ResourceCache: org.mortbay.jetty.ResourceCache$Content load(java.lang.String,org.mortbay.resource.Resource)>(r2, r5);

        return $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private org.mortbay.jetty.ResourceCache$Content load(java.lang.String, org.mortbay.resource.Resource) throws java.io.IOException
    {
        java.lang.Throwable $r9;
        long $l0, $l3, $l6;
        org.mortbay.jetty.ResourceCache r1;
        byte $b1, $b4, $b7;
        java.util.Map $r3, $r5;
        int $i2, $i5, $i8, $i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        org.mortbay.resource.Resource r0;
        java.lang.String r4;
        boolean $z0, $z1;
        org.mortbay.jetty.ResourceCache$Content r7, $r8, $r10;
        java.lang.Object $r6;

        r1 := @this: org.mortbay.jetty.ResourceCache;

        r4 := @parameter0: java.lang.String;

        r0 := @parameter1: org.mortbay.resource.Resource;

        if r0 == null goto label10;

        $z0 = virtualinvoke r0.<org.mortbay.resource.Resource: boolean exists()>();

        if $z0 == 0 goto label10;

        $z1 = virtualinvoke r0.<org.mortbay.resource.Resource: boolean isDirectory()>();

        if $z1 != 0 goto label10;

        $l0 = virtualinvoke r0.<org.mortbay.resource.Resource: long length()>();

        $b1 = $l0 cmp 0L;

        $i15 = (int) $b1;

        if $i15 <= 0 goto label10;

        $i2 = r1.<org.mortbay.jetty.ResourceCache: int _maxCachedFileSize>;

        $l3 = (long) $i2;

        $b4 = $l0 cmp $l3;

        $i16 = (int) $b4;

        if $i16 >= 0 goto label10;

        $i5 = r1.<org.mortbay.jetty.ResourceCache: int _maxCacheSize>;

        $l6 = (long) $i5;

        $b7 = $l0 cmp $l6;

        $i17 = (int) $b7;

        if $i17 >= 0 goto label10;

        $r10 = new org.mortbay.jetty.ResourceCache$Content;

        specialinvoke $r10.<org.mortbay.jetty.ResourceCache$Content: void <init>(org.mortbay.jetty.ResourceCache,org.mortbay.resource.Resource)>(r1, r0);

        virtualinvoke r1.<org.mortbay.jetty.ResourceCache: void fill(org.mortbay.jetty.ResourceCache$Content)>($r10);

        $r3 = r1.<org.mortbay.jetty.ResourceCache: java.util.Map _cache>;

        entermonitor $r3;

     label01:
        $r5 = r1.<org.mortbay.jetty.ResourceCache: java.util.Map _cache>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        r7 = (org.mortbay.jetty.ResourceCache$Content) $r6;

        if r7 == null goto label03;

        virtualinvoke $r10.<org.mortbay.jetty.ResourceCache$Content: void release()>();

        exitmonitor $r3;

     label02:
        return r7;

     label03:
        $i9 = r1.<org.mortbay.jetty.ResourceCache: int _maxCacheSize>;

        $i8 = (int) $l0;

        i10 = $i9 - $i8;

     label04:
        $i11 = r1.<org.mortbay.jetty.ResourceCache: int _cachedSize>;

        if $i11 > i10 goto label05;

        $i12 = r1.<org.mortbay.jetty.ResourceCache: int _maxCachedFiles>;

        if $i12 <= 0 goto label06;

        $i14 = r1.<org.mortbay.jetty.ResourceCache: int _cachedFiles>;

        $i13 = r1.<org.mortbay.jetty.ResourceCache: int _maxCachedFiles>;

        if $i14 < $i13 goto label06;

     label05:
        $r8 = r1.<org.mortbay.jetty.ResourceCache: org.mortbay.jetty.ResourceCache$Content _leastRecentlyUsed>;

        virtualinvoke $r8.<org.mortbay.jetty.ResourceCache$Content: void invalidate()>();

        goto label04;

     label06:
        virtualinvoke $r10.<org.mortbay.jetty.ResourceCache$Content: void cache(java.lang.String)>(r4);

        exitmonitor $r3;

     label07:
        return $r10;

     label08:
        $r9 := @caughtexception;

        exitmonitor $r3;

     label09:
        throw $r9;

     label10:
        return null;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public synchronized void doStart() throws java.lang.Exception
    {
        java.util.HashMap $r1;
        org.mortbay.jetty.ResourceCache r0;

        r0 := @this: org.mortbay.jetty.ResourceCache;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.mortbay.jetty.ResourceCache: java.util.Map _cache> = $r1;

        r0.<org.mortbay.jetty.ResourceCache: int _cachedSize> = 0;

        r0.<org.mortbay.jetty.ResourceCache: int _cachedFiles> = 0;

        return;
    }

    public void doStop() throws java.lang.InterruptedException
    {
        org.mortbay.jetty.ResourceCache r0;

        r0 := @this: org.mortbay.jetty.ResourceCache;

        virtualinvoke r0.<org.mortbay.jetty.ResourceCache: void flushCache()>();

        return;
    }

    protected void fill(org.mortbay.jetty.ResourceCache$Content) throws java.io.IOException
    {
        java.lang.Throwable $r6;
        long $l0;
        org.mortbay.jetty.ResourceCache r8;
        org.mortbay.jetty.ResourceCache$Content r0;
        int i1;
        org.mortbay.resource.Resource $r1, $r3, $r5, $r7;
        org.mortbay.io.ByteArrayBuffer $r4;
        java.io.InputStream $r2;

        r8 := @this: org.mortbay.jetty.ResourceCache;

        r0 := @parameter0: org.mortbay.jetty.ResourceCache$Content;

     label1:
        $r1 = virtualinvoke r0.<org.mortbay.jetty.ResourceCache$Content: org.mortbay.resource.Resource getResource()>();

        $r2 = virtualinvoke $r1.<org.mortbay.resource.Resource: java.io.InputStream getInputStream()>();

        $r3 = virtualinvoke r0.<org.mortbay.jetty.ResourceCache$Content: org.mortbay.resource.Resource getResource()>();

        $l0 = virtualinvoke $r3.<org.mortbay.resource.Resource: long length()>();

        i1 = (int) $l0;

        $r4 = new org.mortbay.io.ByteArrayBuffer;

        specialinvoke $r4.<org.mortbay.io.ByteArrayBuffer: void <init>(int)>(i1);

        interfaceinvoke $r4.<org.mortbay.io.Buffer: int readFrom(java.io.InputStream,int)>($r2, i1);

        virtualinvoke $r2.<java.io.InputStream: void close()>();

        virtualinvoke r0.<org.mortbay.jetty.ResourceCache$Content: void setBuffer(org.mortbay.io.Buffer)>($r4);

     label2:
        $r5 = virtualinvoke r0.<org.mortbay.jetty.ResourceCache$Content: org.mortbay.resource.Resource getResource()>();

        virtualinvoke $r5.<org.mortbay.resource.Resource: void release()>();

        goto label5;

     label3:
        $r6 := @caughtexception;

     label4:
        $r7 = virtualinvoke r0.<org.mortbay.jetty.ResourceCache$Content: org.mortbay.resource.Resource getResource()>();

        virtualinvoke $r7.<org.mortbay.resource.Resource: void release()>();

        throw $r6;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static org.mortbay.jetty.MimeTypes access$000(org.mortbay.jetty.ResourceCache)
    {
        org.mortbay.jetty.ResourceCache r0;
        org.mortbay.jetty.MimeTypes $r1;

        r0 := @parameter0: org.mortbay.jetty.ResourceCache;

        $r1 = r0.<org.mortbay.jetty.ResourceCache: org.mortbay.jetty.MimeTypes _mimeTypes>;

        return $r1;
    }
}
