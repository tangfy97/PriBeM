public class org.apache.batik.util.gui.xmleditor.XMLEditorKit extends javax.swing.text.DefaultEditorKit
{
    public static final java.lang.String XML_MIME_TYPE;
    protected org.apache.batik.util.gui.xmleditor.XMLContext context;
    protected javax.swing.text.ViewFactory factory;

    public void <init>()
    {
        org.apache.batik.util.gui.xmleditor.XMLEditorKit r0;

        r0 := @this: org.apache.batik.util.gui.xmleditor.XMLEditorKit;

        specialinvoke r0.<org.apache.batik.util.gui.xmleditor.XMLEditorKit: void <init>(org.apache.batik.util.gui.xmleditor.XMLContext)>(null);

        return;
    }

    public void <init>(org.apache.batik.util.gui.xmleditor.XMLContext)
    {
        org.apache.batik.util.gui.xmleditor.XMLContext r2, $r3;
        org.apache.batik.util.gui.xmleditor.XMLEditorKit r0;
        org.apache.batik.util.gui.xmleditor.XMLEditorKit$XMLViewFactory $r1;

        r0 := @this: org.apache.batik.util.gui.xmleditor.XMLEditorKit;

        r2 := @parameter0: org.apache.batik.util.gui.xmleditor.XMLContext;

        specialinvoke r0.<javax.swing.text.DefaultEditorKit: void <init>()>();

        r0.<org.apache.batik.util.gui.xmleditor.XMLEditorKit: javax.swing.text.ViewFactory factory> = null;

        $r1 = new org.apache.batik.util.gui.xmleditor.XMLEditorKit$XMLViewFactory;

        specialinvoke $r1.<org.apache.batik.util.gui.xmleditor.XMLEditorKit$XMLViewFactory: void <init>(org.apache.batik.util.gui.xmleditor.XMLEditorKit)>(r0);

        r0.<org.apache.batik.util.gui.xmleditor.XMLEditorKit: javax.swing.text.ViewFactory factory> = $r1;

        if r2 != null goto label1;

        $r3 = new org.apache.batik.util.gui.xmleditor.XMLContext;

        specialinvoke $r3.<org.apache.batik.util.gui.xmleditor.XMLContext: void <init>()>();

        r0.<org.apache.batik.util.gui.xmleditor.XMLEditorKit: org.apache.batik.util.gui.xmleditor.XMLContext context> = $r3;

        goto label2;

     label1:
        r0.<org.apache.batik.util.gui.xmleditor.XMLEditorKit: org.apache.batik.util.gui.xmleditor.XMLContext context> = r2;

     label2:
        return;
    }

    public org.apache.batik.util.gui.xmleditor.XMLContext getStylePreferences()
    {
        org.apache.batik.util.gui.xmleditor.XMLContext $r1;
        org.apache.batik.util.gui.xmleditor.XMLEditorKit r0;

        r0 := @this: org.apache.batik.util.gui.xmleditor.XMLEditorKit;

        $r1 = r0.<org.apache.batik.util.gui.xmleditor.XMLEditorKit: org.apache.batik.util.gui.xmleditor.XMLContext context>;

        return $r1;
    }

    public void install(javax.swing.JEditorPane)
    {
        java.awt.Font $r3, $r4;
        javax.swing.JEditorPane r1;
        org.apache.batik.util.gui.xmleditor.XMLContext $r2;
        org.apache.batik.util.gui.xmleditor.XMLEditorKit r0;

        r0 := @this: org.apache.batik.util.gui.xmleditor.XMLEditorKit;

        r1 := @parameter0: javax.swing.JEditorPane;

        specialinvoke r0.<javax.swing.text.EditorKit: void install(javax.swing.JEditorPane)>(r1);

        $r2 = r0.<org.apache.batik.util.gui.xmleditor.XMLEditorKit: org.apache.batik.util.gui.xmleditor.XMLContext context>;

        $r3 = virtualinvoke $r2.<org.apache.batik.util.gui.xmleditor.XMLContext: java.awt.Font getSyntaxFont(java.lang.String)>("default");

        if $r3 == null goto label1;

        $r4 = (java.awt.Font) $r3;

        virtualinvoke r1.<javax.swing.JComponent: void setFont(java.awt.Font)>($r4);

     label1:
        return;
    }

    public java.lang.String getContentType()
    {
        org.apache.batik.util.gui.xmleditor.XMLEditorKit r0;

        r0 := @this: org.apache.batik.util.gui.xmleditor.XMLEditorKit;

        return "text/xml";
    }

    public java.lang.Object clone()
    {
        org.apache.batik.util.gui.xmleditor.XMLContext $r2;
        org.apache.batik.util.gui.xmleditor.XMLEditorKit $r0, r1;

        r1 := @this: org.apache.batik.util.gui.xmleditor.XMLEditorKit;

        $r0 = new org.apache.batik.util.gui.xmleditor.XMLEditorKit;

        specialinvoke $r0.<org.apache.batik.util.gui.xmleditor.XMLEditorKit: void <init>()>();

        $r2 = r1.<org.apache.batik.util.gui.xmleditor.XMLEditorKit: org.apache.batik.util.gui.xmleditor.XMLContext context>;

        $r0.<org.apache.batik.util.gui.xmleditor.XMLEditorKit: org.apache.batik.util.gui.xmleditor.XMLContext context> = $r2;

        return $r0;
    }

    public javax.swing.text.Document createDefaultDocument()
    {
        org.apache.batik.util.gui.xmleditor.XMLContext $r2;
        org.apache.batik.util.gui.xmleditor.XMLEditorKit r1;
        org.apache.batik.util.gui.xmleditor.XMLDocument $r0;

        r1 := @this: org.apache.batik.util.gui.xmleditor.XMLEditorKit;

        $r0 = new org.apache.batik.util.gui.xmleditor.XMLDocument;

        $r2 = r1.<org.apache.batik.util.gui.xmleditor.XMLEditorKit: org.apache.batik.util.gui.xmleditor.XMLContext context>;

        specialinvoke $r0.<org.apache.batik.util.gui.xmleditor.XMLDocument: void <init>(org.apache.batik.util.gui.xmleditor.XMLContext)>($r2);

        return $r0;
    }

    public javax.swing.text.ViewFactory getViewFactory()
    {
        org.apache.batik.util.gui.xmleditor.XMLEditorKit r0;
        javax.swing.text.ViewFactory $r1;

        r0 := @this: org.apache.batik.util.gui.xmleditor.XMLEditorKit;

        $r1 = r0.<org.apache.batik.util.gui.xmleditor.XMLEditorKit: javax.swing.text.ViewFactory factory>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.batik.util.gui.xmleditor.XMLEditorKit: java.lang.String XML_MIME_TYPE> = "text/xml";

        return;
    }
}
