class org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor extends org.apache.lucene.spatial.prefix.AbstractPrefixTreeFilter$BaseTermsEnumTraverser
{
    org.apache.lucene.util.BytesRef termBytes;
    org.apache.lucene.spatial.prefix.tree.Cell nextCell;
    static final boolean $assertionsDisabled;
    final org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter this$0;

    public void <init>(org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter, org.apache.lucene.index.AtomicReaderContext, org.apache.lucene.util.Bits) throws java.io.IOException
    {
        org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter r1;
        org.apache.lucene.util.BytesRef $r4;
        org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor r0;
        org.apache.lucene.util.Bits r3;
        org.apache.lucene.index.AtomicReaderContext r2;

        r0 := @this: org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor;

        r1 := @parameter0: org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter;

        r2 := @parameter1: org.apache.lucene.index.AtomicReaderContext;

        r3 := @parameter2: org.apache.lucene.util.Bits;

        r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter this$0> = r1;

        specialinvoke r0.<org.apache.lucene.spatial.prefix.AbstractPrefixTreeFilter$BaseTermsEnumTraverser: void <init>(org.apache.lucene.spatial.prefix.AbstractPrefixTreeFilter,org.apache.lucene.index.AtomicReaderContext,org.apache.lucene.util.Bits)>(r1, r2, r3);

        $r4 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r4.<org.apache.lucene.util.BytesRef: void <init>()>();

        r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: org.apache.lucene.util.BytesRef termBytes> = $r4;

        return;
    }

    private org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet visit(org.apache.lucene.spatial.prefix.tree.Cell, org.apache.lucene.util.Bits) throws java.io.IOException
    {
        org.apache.lucene.spatial.prefix.tree.Cell r2, r10;
        com.spatial4j.core.shape.Shape $r5;
        org.apache.lucene.index.TermsEnum $r1;
        int $i0, $i1;
        org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor r0;
        com.spatial4j.core.shape.SpatialRelation $r12, $r13;
        org.apache.lucene.util.Bits r14;
        boolean $z0, $z1;
        java.util.Iterator $r7;
        java.util.Collection $r6;
        org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter $r4, $r11;
        java.lang.Object $r9;
        org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet $r3, $r8, r15;

        r0 := @this: org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor;

        r2 := @parameter0: org.apache.lucene.spatial.prefix.tree.Cell;

        r14 := @parameter1: org.apache.lucene.util.Bits;

        $r1 = r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: org.apache.lucene.index.TermsEnum termsEnum>;

        if $r1 != null goto label01;

        return null;

     label01:
        $r3 = specialinvoke r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet getLeafDocs(org.apache.lucene.spatial.prefix.tree.Cell,org.apache.lucene.util.Bits)>(r2, r14);

        r15 = null;

        $r4 = r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter this$0>;

        $r5 = $r4.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter: com.spatial4j.core.shape.Shape queryShape>;

        $r6 = virtualinvoke r2.<org.apache.lucene.spatial.prefix.tree.Cell: java.util.Collection getSubCells(com.spatial4j.core.shape.Shape)>($r5);

        $r7 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r9 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.apache.lucene.spatial.prefix.tree.Cell) $r9;

        $z1 = specialinvoke r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: boolean seekExact(org.apache.lucene.spatial.prefix.tree.Cell)>(r10);

        if $z1 != 0 goto label03;

        r15 = null;

        goto label06;

     label03:
        $i0 = virtualinvoke r10.<org.apache.lucene.spatial.prefix.tree.Cell: int getLevel()>();

        $r11 = r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter this$0>;

        $i1 = $r11.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter: int detailLevel>;

        if $i0 != $i1 goto label04;

        r15 = specialinvoke r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet getDocs(org.apache.lucene.spatial.prefix.tree.Cell,org.apache.lucene.util.Bits)>(r10, r14);

        goto label06;

     label04:
        $r12 = virtualinvoke r10.<org.apache.lucene.spatial.prefix.tree.Cell: com.spatial4j.core.shape.SpatialRelation getShapeRel()>();

        $r13 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation WITHIN>;

        if $r12 != $r13 goto label05;

        r15 = specialinvoke r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet getLeafDocs(org.apache.lucene.spatial.prefix.tree.Cell,org.apache.lucene.util.Bits)>(r10, r14);

        goto label06;

     label05:
        r15 = specialinvoke r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet visit(org.apache.lucene.spatial.prefix.tree.Cell,org.apache.lucene.util.Bits)>(r10, r14);

     label06:
        if r15 != null goto label07;

        goto label08;

     label07:
        r14 = r15;

        goto label02;

     label08:
        if r15 == null goto label10;

        if $r3 != null goto label09;

        return r15;

     label09:
        $r8 = virtualinvoke $r3.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet: org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet union(org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet)>(r15);

        return $r8;

     label10:
        return $r3;
    }

    private boolean seekExact(org.apache.lucene.spatial.prefix.tree.Cell) throws java.io.IOException
    {
        byte[] $r3, $r5, $r10;
        java.lang.AssertionError $r12;
        org.apache.lucene.spatial.prefix.tree.Cell r1;
        org.apache.lucene.index.TermsEnum $r7;
        int $i0, $i1, $i2;
        org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor r0;
        boolean $z0, $z1, $z2;
        org.apache.lucene.util.BytesRef $r2, $r4, $r6, $r8, $r9, $r11;

        r0 := @this: org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor;

        r1 := @parameter0: org.apache.lucene.spatial.prefix.tree.Cell;

        $z0 = <org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r9 = new org.apache.lucene.util.BytesRef;

        $r10 = virtualinvoke r1.<org.apache.lucene.spatial.prefix.tree.Cell: byte[] getTokenBytes()>();

        specialinvoke $r9.<org.apache.lucene.util.BytesRef: void <init>(byte[])>($r10);

        $r11 = r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: org.apache.lucene.util.BytesRef termBytes>;

        $i2 = virtualinvoke $r9.<org.apache.lucene.util.BytesRef: int compareTo(org.apache.lucene.util.BytesRef)>($r11);

        if $i2 > 0 goto label1;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label1:
        $r2 = r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: org.apache.lucene.util.BytesRef termBytes>;

        $r3 = virtualinvoke r1.<org.apache.lucene.spatial.prefix.tree.Cell: byte[] getTokenBytes()>();

        $r2.<org.apache.lucene.util.BytesRef: byte[] bytes> = $r3;

        $r6 = r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: org.apache.lucene.util.BytesRef termBytes>;

        $r4 = r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: org.apache.lucene.util.BytesRef termBytes>;

        $r5 = $r4.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i0 = lengthof $r5;

        $r6.<org.apache.lucene.util.BytesRef: int length> = $i0;

        $r7 = r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: org.apache.lucene.index.TermsEnum termsEnum>;

        $r8 = r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: org.apache.lucene.util.BytesRef termBytes>;

        $i1 = virtualinvoke r1.<org.apache.lucene.spatial.prefix.tree.Cell: int getLevel()>();

        if $i1 > 2 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        $z1 = virtualinvoke $r7.<org.apache.lucene.index.TermsEnum: boolean seekExact(org.apache.lucene.util.BytesRef,boolean)>($r8, $z2);

        return $z1;
    }

    private org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet getDocs(org.apache.lucene.spatial.prefix.tree.Cell, org.apache.lucene.util.Bits) throws java.io.IOException
    {
        byte[] $r5;
        org.apache.lucene.util.BytesRef $r3, $r6;
        java.lang.AssertionError $r7;
        org.apache.lucene.spatial.prefix.tree.Cell r4;
        org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor r0;
        org.apache.lucene.util.Bits r1;
        org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor;

        r4 := @parameter0: org.apache.lucene.spatial.prefix.tree.Cell;

        r1 := @parameter1: org.apache.lucene.util.Bits;

        $z0 = <org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r3 = new org.apache.lucene.util.BytesRef;

        $r5 = virtualinvoke r4.<org.apache.lucene.spatial.prefix.tree.Cell: byte[] getTokenBytes()>();

        specialinvoke $r3.<org.apache.lucene.util.BytesRef: void <init>(byte[])>($r5);

        $r6 = r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: org.apache.lucene.util.BytesRef termBytes>;

        $z1 = virtualinvoke $r3.<org.apache.lucene.util.BytesRef: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label1;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label1:
        $r2 = specialinvoke r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet collectDocs(org.apache.lucene.util.Bits)>(r1);

        return $r2;
    }

    private org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet getLeafDocs(org.apache.lucene.spatial.prefix.tree.Cell, org.apache.lucene.util.Bits) throws java.io.IOException
    {
        byte[] $r5, $r14;
        java.lang.AssertionError $r16;
        org.apache.lucene.spatial.prefix.tree.Cell $r4, $r7, $r8, r9, $r10;
        org.apache.lucene.index.TermsEnum $r1;
        int $i0, $i1, $i2, $i3;
        org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor r0;
        org.apache.lucene.util.Bits r11;
        boolean $z0, $z1, $z2;
        org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree $r6;
        org.apache.lucene.util.BytesRef $r2, $r13, $r15;
        org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter $r3;
        org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet $r12;

        r0 := @this: org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor;

        r9 := @parameter0: org.apache.lucene.spatial.prefix.tree.Cell;

        r11 := @parameter1: org.apache.lucene.util.Bits;

        $z0 = <org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r13 = new org.apache.lucene.util.BytesRef;

        $r14 = virtualinvoke r9.<org.apache.lucene.spatial.prefix.tree.Cell: byte[] getTokenBytes()>();

        specialinvoke $r13.<org.apache.lucene.util.BytesRef: void <init>(byte[])>($r14);

        $r15 = r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: org.apache.lucene.util.BytesRef termBytes>;

        $z2 = virtualinvoke $r13.<org.apache.lucene.util.BytesRef: boolean equals(java.lang.Object)>($r15);

        if $z2 != 0 goto label1;

        $r16 = new java.lang.AssertionError;

        specialinvoke $r16.<java.lang.AssertionError: void <init>()>();

        throw $r16;

     label1:
        $r1 = r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: org.apache.lucene.index.TermsEnum termsEnum>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.index.TermsEnum: org.apache.lucene.util.BytesRef next()>();

        if $r2 != null goto label2;

        r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: org.apache.lucene.index.TermsEnum termsEnum> = null;

        return null;

     label2:
        $r3 = r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter this$0>;

        $r6 = $r3.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter: org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree grid>;

        $r5 = $r2.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i1 = $r2.<org.apache.lucene.util.BytesRef: int offset>;

        $i0 = $r2.<org.apache.lucene.util.BytesRef: int length>;

        $r4 = r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: org.apache.lucene.spatial.prefix.tree.Cell nextCell>;

        $r7 = virtualinvoke $r6.<org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree: org.apache.lucene.spatial.prefix.tree.Cell getCell(byte[],int,int,org.apache.lucene.spatial.prefix.tree.Cell)>($r5, $i1, $i0, $r4);

        r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: org.apache.lucene.spatial.prefix.tree.Cell nextCell> = $r7;

        $r8 = r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: org.apache.lucene.spatial.prefix.tree.Cell nextCell>;

        $i2 = virtualinvoke $r8.<org.apache.lucene.spatial.prefix.tree.Cell: int getLevel()>();

        $i3 = virtualinvoke r9.<org.apache.lucene.spatial.prefix.tree.Cell: int getLevel()>();

        if $i2 != $i3 goto label3;

        $r10 = r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: org.apache.lucene.spatial.prefix.tree.Cell nextCell>;

        $z1 = virtualinvoke $r10.<org.apache.lucene.spatial.prefix.tree.Cell: boolean isLeaf()>();

        if $z1 == 0 goto label3;

        $r12 = specialinvoke r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet collectDocs(org.apache.lucene.util.Bits)>(r11);

        return $r12;

     label3:
        return null;
    }

    private org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet collectDocs(org.apache.lucene.util.Bits) throws java.io.IOException
    {
        org.apache.lucene.index.DocsEnum $r2, $r4, $r5;
        org.apache.lucene.index.TermsEnum $r3, $r6;
        int $i0, $i1, i2;
        org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor r0;
        org.apache.lucene.util.Bits r1;
        org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet $r7, r8;

        r0 := @this: org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor;

        r1 := @parameter0: org.apache.lucene.util.Bits;

        r8 = null;

        $r3 = r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: org.apache.lucene.index.TermsEnum termsEnum>;

        $r2 = r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: org.apache.lucene.index.DocsEnum docsEnum>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.index.TermsEnum: org.apache.lucene.index.DocsEnum docs(org.apache.lucene.util.Bits,org.apache.lucene.index.DocsEnum,int)>(r1, $r2, 0);

        r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: org.apache.lucene.index.DocsEnum docsEnum> = $r4;

     label1:
        $r5 = r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: org.apache.lucene.index.DocsEnum docsEnum>;

        $i0 = virtualinvoke $r5.<org.apache.lucene.index.DocsEnum: int nextDoc()>();

        if $i0 == 2147483647 goto label4;

        if r8 != null goto label3;

        $r6 = r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: org.apache.lucene.index.TermsEnum termsEnum>;

        $i1 = virtualinvoke $r6.<org.apache.lucene.index.TermsEnum: int docFreq()>();

        i2 = $i1;

        if $i1 > 0 goto label2;

        i2 = 16;

     label2:
        $r7 = new org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet;

        specialinvoke $r7.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet: void <init>(int)>(i2);

        r8 = $r7;

     label3:
        virtualinvoke r8.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet: void set(int)>($i0);

        goto label1;

     label4:
        return r8;
    }

    static org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet access$000(org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor, org.apache.lucene.spatial.prefix.tree.Cell, org.apache.lucene.util.Bits) throws java.io.IOException
    {
        org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor r0;
        org.apache.lucene.spatial.prefix.tree.Cell r1;
        org.apache.lucene.util.Bits r2;
        org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet $r3;

        r0 := @parameter0: org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor;

        r1 := @parameter1: org.apache.lucene.spatial.prefix.tree.Cell;

        r2 := @parameter2: org.apache.lucene.util.Bits;

        $r3 = specialinvoke r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet visit(org.apache.lucene.spatial.prefix.tree.Cell,org.apache.lucene.util.Bits)>(r1, r2);

        return $r3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/spatial/prefix/ContainsPrefixTreeFilter;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: boolean $assertionsDisabled> = $z1;

        return;
    }
}
