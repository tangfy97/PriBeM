final class com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty extends com.sun.xml.bind.v2.runtime.property.PropertyImpl
{
    private final com.sun.xml.bind.v2.runtime.reflect.Accessor acc;
    private final com.sun.xml.bind.v2.util.QNameMap expectedElements;
    private final javax.xml.bind.'annotation'.DomHandler domHandler;
    private final com.sun.xml.bind.v2.model.core.WildcardMode wcMode;

    public void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl, com.sun.xml.bind.v2.model.runtime.RuntimeReferencePropertyInfo)
    {
        com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty r0;
        com.sun.xml.bind.v2.util.QNameMap $r3, $r16;
        javax.xml.bind.'annotation'.DomHandler $r12;
        com.sun.xml.bind.v2.model.core.WildcardMode $r8, $r13;
        com.sun.xml.bind.v2.model.runtime.RuntimeElement r15;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r1;
        boolean $z0;
        java.util.Iterator $r7;
        java.util.Set $r6;
        com.sun.xml.bind.v2.model.runtime.RuntimeReferencePropertyInfo r2;
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r4, $r5;
        java.lang.Object $r9, $r11, $r14;
        java.lang.Class $r10;
        javax.xml.namespace.QName $r17;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r18;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r2 := @parameter1: com.sun.xml.bind.v2.model.runtime.RuntimeReferencePropertyInfo;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.property.PropertyImpl: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl,com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo)>(r1, r2);

        $r3 = new com.sun.xml.bind.v2.util.QNameMap;

        specialinvoke $r3.<com.sun.xml.bind.v2.util.QNameMap: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty: com.sun.xml.bind.v2.util.QNameMap expectedElements> = $r3;

        $r4 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeReferencePropertyInfo: com.sun.xml.bind.v2.runtime.reflect.Accessor getAccessor()>();

        $r5 = virtualinvoke $r4.<com.sun.xml.bind.v2.runtime.reflect.Accessor: com.sun.xml.bind.v2.runtime.reflect.Accessor optimize(com.sun.xml.bind.v2.runtime.JAXBContextImpl)>(r1);

        r0.<com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty: com.sun.xml.bind.v2.runtime.reflect.Accessor acc> = $r5;

        $r6 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeReferencePropertyInfo: java.util.Set getElements()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r14 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r15 = (com.sun.xml.bind.v2.model.runtime.RuntimeElement) $r14;

        $r16 = r0.<com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty: com.sun.xml.bind.v2.util.QNameMap expectedElements>;

        $r17 = interfaceinvoke r15.<com.sun.xml.bind.v2.model.runtime.RuntimeElement: javax.xml.namespace.QName getElementName()>();

        $r18 = virtualinvoke r1.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.JaxBeanInfo getOrCreate(com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfo)>(r15);

        virtualinvoke $r16.<com.sun.xml.bind.v2.util.QNameMap: void put(javax.xml.namespace.QName,java.lang.Object)>($r17, $r18);

        goto label1;

     label2:
        $r8 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeReferencePropertyInfo: com.sun.xml.bind.v2.model.core.WildcardMode getWildcard()>();

        if $r8 == null goto label3;

        $r9 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeReferencePropertyInfo: java.lang.Object getDOMHandler()>();

        $r10 = (java.lang.Class) $r9;

        $r11 = staticinvoke <com.sun.xml.bind.v2.ClassFactory: java.lang.Object create(java.lang.Class)>($r10);

        $r12 = (javax.xml.bind.'annotation'.DomHandler) $r11;

        r0.<com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty: javax.xml.bind.'annotation'.DomHandler domHandler> = $r12;

        $r13 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeReferencePropertyInfo: com.sun.xml.bind.v2.model.core.WildcardMode getWildcard()>();

        r0.<com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty: com.sun.xml.bind.v2.model.core.WildcardMode wcMode> = $r13;

        goto label4;

     label3:
        r0.<com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty: javax.xml.bind.'annotation'.DomHandler domHandler> = null;

        r0.<com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty: com.sun.xml.bind.v2.model.core.WildcardMode wcMode> = null;

     label4:
        return;
    }

    public void reset(java.lang.Object) throws com.sun.xml.bind.api.AccessorException
    {
        java.lang.Object r1;
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r2;
        com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty: com.sun.xml.bind.v2.runtime.reflect.Accessor acc>;

        virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.reflect.Accessor: void set(java.lang.Object,java.lang.Object)>(r1, null);

        return;
    }

    public java.lang.String getIdValue(java.lang.Object)
    {
        java.lang.Object r1;
        com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty;

        r1 := @parameter0: java.lang.Object;

        return null;
    }

    public void serializeBody(java.lang.Object, com.sun.xml.bind.v2.runtime.XMLSerializer, java.lang.Object) throws org.xml.sax.SAXException, com.sun.xml.bind.api.AccessorException, java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty r0;
        javax.xml.bind.JAXBException $r11;
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r2;
        com.sun.xml.bind.v2.runtime.XMLSerializer r4;
        javax.xml.bind.'annotation'.DomHandler $r8, $r10;
        java.lang.Object r1, $r3, r13;
        java.lang.Class $r7;
        java.lang.String $r9, $r12;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r6;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl $r5;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty;

        r1 := @parameter0: java.lang.Object;

        r4 := @parameter1: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r13 := @parameter2: java.lang.Object;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty: com.sun.xml.bind.v2.runtime.reflect.Accessor acc>;

        $r3 = virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.reflect.Accessor: java.lang.Object get(java.lang.Object)>(r1);

        if $r3 == null goto label5;

     label1:
        $r5 = r4.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.JAXBContextImpl grammar>;

        $r6 = virtualinvoke $r5.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.JaxBeanInfo getBeanInfo(java.lang.Object,boolean)>($r3, 1);

        $r7 = $r6.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: java.lang.Class jaxbType>;

        if $r7 != class "Ljava/lang/Object;" goto label2;

        $r8 = r0.<com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty: javax.xml.bind.'annotation'.DomHandler domHandler>;

        if $r8 == null goto label2;

        $r10 = r0.<com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty: javax.xml.bind.'annotation'.DomHandler domHandler>;

        $r9 = r0.<com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty: java.lang.String fieldName>;

        virtualinvoke r4.<com.sun.xml.bind.v2.runtime.XMLSerializer: void writeDom(java.lang.Object,javax.xml.bind.'annotation'.DomHandler,java.lang.Object,java.lang.String)>($r3, $r10, r1, $r9);

        goto label3;

     label2:
        virtualinvoke $r6.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: void serializeRoot(java.lang.Object,com.sun.xml.bind.v2.runtime.XMLSerializer)>($r3, r4);

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        $r12 = r0.<com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty: java.lang.String fieldName>;

        virtualinvoke r4.<com.sun.xml.bind.v2.runtime.XMLSerializer: void reportError(java.lang.String,java.lang.Throwable)>($r12, $r11);

     label5:
        return;

        catch javax.xml.bind.JAXBException from label1 to label3 with label4;
    }

    public void buildChildElementUnmarshallers(com.sun.xml.bind.v2.runtime.property.UnmarshallerChain, com.sun.xml.bind.v2.util.QNameMap)
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader $r6, $r14;
        com.sun.xml.bind.v2.runtime.property.UnmarshallerChain r18;
        com.sun.xml.bind.v2.runtime.unmarshaller.Loader $r21;
        com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty r0;
        com.sun.xml.bind.v2.util.QNameMap $r1, r5;
        javax.xml.bind.'annotation'.DomHandler $r4, $r9;
        com.sun.xml.bind.v2.model.core.WildcardMode $r8;
        java.lang.String $r15, $r16;
        boolean $z0;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl $r19;
        java.util.Iterator $r3;
        com.sun.xml.bind.v2.runtime.unmarshaller.WildcardLoader $r7;
        java.util.Set $r2;
        com.sun.xml.bind.v2.util.QNameMap$Entry r13;
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r11, $r22;
        java.lang.Object $r12, $r17;
        javax.xml.namespace.QName $r10;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r20;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty;

        r18 := @parameter0: com.sun.xml.bind.v2.runtime.property.UnmarshallerChain;

        r5 := @parameter1: com.sun.xml.bind.v2.util.QNameMap;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty: com.sun.xml.bind.v2.util.QNameMap expectedElements>;

        $r2 = virtualinvoke $r1.<com.sun.xml.bind.v2.util.QNameMap: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r12 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r13 = (com.sun.xml.bind.v2.util.QNameMap$Entry) $r12;

        $r15 = r13.<com.sun.xml.bind.v2.util.QNameMap$Entry: java.lang.String nsUri>;

        $r16 = r13.<com.sun.xml.bind.v2.util.QNameMap$Entry: java.lang.String localName>;

        $r14 = new com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader;

        $r17 = virtualinvoke r13.<com.sun.xml.bind.v2.util.QNameMap$Entry: java.lang.Object getValue()>();

        $r20 = (com.sun.xml.bind.v2.runtime.JaxBeanInfo) $r17;

        $r19 = r18.<com.sun.xml.bind.v2.runtime.property.UnmarshallerChain: com.sun.xml.bind.v2.runtime.JAXBContextImpl context>;

        $r21 = virtualinvoke $r20.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: com.sun.xml.bind.v2.runtime.unmarshaller.Loader getLoader(com.sun.xml.bind.v2.runtime.JAXBContextImpl,boolean)>($r19, 1);

        $r22 = r0.<com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty: com.sun.xml.bind.v2.runtime.reflect.Accessor acc>;

        specialinvoke $r14.<com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.Loader,com.sun.xml.bind.v2.runtime.unmarshaller.Receiver)>($r21, $r22);

        virtualinvoke r5.<com.sun.xml.bind.v2.util.QNameMap: void put(java.lang.String,java.lang.String,java.lang.Object)>($r15, $r16, $r14);

        goto label1;

     label2:
        $r4 = r0.<com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty: javax.xml.bind.'annotation'.DomHandler domHandler>;

        if $r4 == null goto label3;

        $r10 = <com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty: javax.xml.namespace.QName CATCH_ALL>;

        $r6 = new com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader;

        $r7 = new com.sun.xml.bind.v2.runtime.unmarshaller.WildcardLoader;

        $r9 = r0.<com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty: javax.xml.bind.'annotation'.DomHandler domHandler>;

        $r8 = r0.<com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty: com.sun.xml.bind.v2.model.core.WildcardMode wcMode>;

        specialinvoke $r7.<com.sun.xml.bind.v2.runtime.unmarshaller.WildcardLoader: void <init>(javax.xml.bind.'annotation'.DomHandler,com.sun.xml.bind.v2.model.core.WildcardMode)>($r9, $r8);

        $r11 = r0.<com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty: com.sun.xml.bind.v2.runtime.reflect.Accessor acc>;

        specialinvoke $r6.<com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.Loader,com.sun.xml.bind.v2.runtime.unmarshaller.Receiver)>($r7, $r11);

        virtualinvoke r5.<com.sun.xml.bind.v2.util.QNameMap: void put(javax.xml.namespace.QName,java.lang.Object)>($r10, $r6);

     label3:
        return;
    }

    public com.sun.xml.bind.v2.model.core.PropertyKind getKind()
    {
        com.sun.xml.bind.v2.model.core.PropertyKind $r0;
        com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty r1;

        r1 := @this: com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty;

        $r0 = <com.sun.xml.bind.v2.model.core.PropertyKind: com.sun.xml.bind.v2.model.core.PropertyKind REFERENCE>;

        return $r0;
    }

    public com.sun.xml.bind.v2.runtime.reflect.Accessor getElementPropertyAccessor(java.lang.String, java.lang.String)
    {
        com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty$1 $r8;
        com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty r0;
        com.sun.xml.bind.v2.util.QNameMap $r3;
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r6;
        com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl r7;
        java.lang.Object $r4;
        java.lang.Class $r9;
        java.lang.String r1, r2;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo r5;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty: com.sun.xml.bind.v2.util.QNameMap expectedElements>;

        $r4 = virtualinvoke $r3.<com.sun.xml.bind.v2.util.QNameMap: java.lang.Object get(java.lang.String,java.lang.String)>(r1, r2);

        r5 = (com.sun.xml.bind.v2.runtime.JaxBeanInfo) $r4;

        if r5 == null goto label2;

        $z0 = r5 instanceof com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl;

        if $z0 == 0 goto label1;

        r7 = (com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl) r5;

        $r8 = new com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty$1;

        $r9 = r7.<com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl: java.lang.Class expectedType>;

        specialinvoke $r8.<com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty$1: void <init>(com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty,java.lang.Class,com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl)>(r0, $r9, r7);

        return $r8;

     label1:
        $r6 = r0.<com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty: com.sun.xml.bind.v2.runtime.reflect.Accessor acc>;

        return $r6;

     label2:
        return null;
    }

    static com.sun.xml.bind.v2.runtime.reflect.Accessor access$000(com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty)
    {
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r1;
        com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty r0;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty: com.sun.xml.bind.v2.runtime.reflect.Accessor acc>;

        return $r1;
    }
}
