public final class com.google.inject.spi.InjectionRequest extends java.lang.Object implements com.google.inject.spi.Element
{
    private final java.lang.Object source;
    private final com.google.inject.TypeLiteral type;
    private final java.lang.Object instance;

    public void <init>(java.lang.Object, com.google.inject.TypeLiteral, java.lang.Object)
    {
        java.lang.Object r1, $r2, $r4, r6, $r7;
        com.google.inject.spi.InjectionRequest r0;
        com.google.inject.TypeLiteral r3, $r5;

        r0 := @this: com.google.inject.spi.InjectionRequest;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: com.google.inject.TypeLiteral;

        r6 := @parameter2: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "source");

        r0.<com.google.inject.spi.InjectionRequest: java.lang.Object source> = $r2;

        $r4 = staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r3, "type");

        $r5 = (com.google.inject.TypeLiteral) $r4;

        r0.<com.google.inject.spi.InjectionRequest: com.google.inject.TypeLiteral type> = $r5;

        $r7 = staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r6, "instance");

        r0.<com.google.inject.spi.InjectionRequest: java.lang.Object instance> = $r7;

        return;
    }

    public java.lang.Object getSource()
    {
        java.lang.Object $r1;
        com.google.inject.spi.InjectionRequest r0;

        r0 := @this: com.google.inject.spi.InjectionRequest;

        $r1 = r0.<com.google.inject.spi.InjectionRequest: java.lang.Object source>;

        return $r1;
    }

    public java.lang.Object getInstance()
    {
        java.lang.Object $r1;
        com.google.inject.spi.InjectionRequest r0;

        r0 := @this: com.google.inject.spi.InjectionRequest;

        $r1 = r0.<com.google.inject.spi.InjectionRequest: java.lang.Object instance>;

        return $r1;
    }

    public com.google.inject.TypeLiteral getType()
    {
        com.google.inject.spi.InjectionRequest r0;
        com.google.inject.TypeLiteral $r1;

        r0 := @this: com.google.inject.spi.InjectionRequest;

        $r1 = r0.<com.google.inject.spi.InjectionRequest: com.google.inject.TypeLiteral type>;

        return $r1;
    }

    public java.util.Set getInjectionPoints() throws com.google.inject.ConfigurationException
    {
        java.util.Set $r3;
        java.lang.Object $r1;
        java.lang.Class $r2;
        com.google.inject.spi.InjectionRequest r0;

        r0 := @this: com.google.inject.spi.InjectionRequest;

        $r1 = r0.<com.google.inject.spi.InjectionRequest: java.lang.Object instance>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = staticinvoke <com.google.inject.spi.InjectionPoint: java.util.Set forInstanceMethodsAndFields(java.lang.Class)>($r2);

        return $r3;
    }

    public java.lang.Object acceptVisitor(com.google.inject.spi.ElementVisitor)
    {
        com.google.inject.spi.ElementVisitor r0;
        java.lang.Object $r2;
        com.google.inject.spi.InjectionRequest r1;

        r1 := @this: com.google.inject.spi.InjectionRequest;

        r0 := @parameter0: com.google.inject.spi.ElementVisitor;

        $r2 = interfaceinvoke r0.<com.google.inject.spi.ElementVisitor: java.lang.Object visit(com.google.inject.spi.InjectionRequest)>(r1);

        return $r2;
    }

    public void applyTo(com.google.inject.Binder)
    {
        com.google.inject.Binder r0, $r3;
        java.lang.Object $r2, $r4;
        com.google.inject.spi.InjectionRequest r1;
        com.google.inject.TypeLiteral $r5;

        r1 := @this: com.google.inject.spi.InjectionRequest;

        r0 := @parameter0: com.google.inject.Binder;

        $r2 = virtualinvoke r1.<com.google.inject.spi.InjectionRequest: java.lang.Object getSource()>();

        $r3 = interfaceinvoke r0.<com.google.inject.Binder: com.google.inject.Binder withSource(java.lang.Object)>($r2);

        $r5 = r1.<com.google.inject.spi.InjectionRequest: com.google.inject.TypeLiteral type>;

        $r4 = r1.<com.google.inject.spi.InjectionRequest: java.lang.Object instance>;

        interfaceinvoke $r3.<com.google.inject.Binder: void requestInjection(com.google.inject.TypeLiteral,java.lang.Object)>($r5, $r4);

        return;
    }
}
