public class org.jdom.ProcessingInstruction extends org.jdom.Content
{
    private static final java.lang.String CVS_ID;
    protected java.lang.String target;
    protected java.lang.String rawData;
    protected java.util.Map mapData;

    protected void <init>()
    {
        org.jdom.ProcessingInstruction r0;

        r0 := @this: org.jdom.ProcessingInstruction;

        specialinvoke r0.<org.jdom.Content: void <init>()>();

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        org.jdom.ProcessingInstruction r0;
        java.lang.String r1, r2;

        r0 := @this: org.jdom.ProcessingInstruction;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.jdom.Content: void <init>()>();

        virtualinvoke r0.<org.jdom.ProcessingInstruction: org.jdom.ProcessingInstruction setTarget(java.lang.String)>(r1);

        virtualinvoke r0.<org.jdom.ProcessingInstruction: org.jdom.ProcessingInstruction setData(java.lang.String)>(r2);

        return;
    }

    public void <init>(java.lang.String, java.util.Map)
    {
        org.jdom.ProcessingInstruction r0;
        java.lang.String r1;
        java.util.Map r2;

        r0 := @this: org.jdom.ProcessingInstruction;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Map;

        specialinvoke r0.<org.jdom.Content: void <init>()>();

        virtualinvoke r0.<org.jdom.ProcessingInstruction: org.jdom.ProcessingInstruction setTarget(java.lang.String)>(r1);

        virtualinvoke r0.<org.jdom.ProcessingInstruction: org.jdom.ProcessingInstruction setData(java.util.Map)>(r2);

        return;
    }

    public java.lang.Object clone()
    {
        org.jdom.ProcessingInstruction r0, r2;
        java.util.Map $r3, $r5;
        java.lang.Object $r1;
        java.lang.String $r4;

        r0 := @this: org.jdom.ProcessingInstruction;

        $r1 = specialinvoke r0.<org.jdom.Content: java.lang.Object clone()>();

        r2 = (org.jdom.ProcessingInstruction) $r1;

        $r3 = r0.<org.jdom.ProcessingInstruction: java.util.Map mapData>;

        if $r3 == null goto label1;

        $r4 = r0.<org.jdom.ProcessingInstruction: java.lang.String rawData>;

        $r5 = specialinvoke r0.<org.jdom.ProcessingInstruction: java.util.Map parseData(java.lang.String)>($r4);

        r2.<org.jdom.ProcessingInstruction: java.util.Map mapData> = $r5;

     label1:
        return r2;
    }

    private static int[] extractQuotedString(java.lang.String)
    {
        char $c0;
        int[] $r1;
        int i1, i2, i3, $i4, $i5, $i6, $i7;
        java.lang.String r0;
        boolean z0;

        r0 := @parameter0: java.lang.String;

        z0 = 0;

        i1 = 34;

        i2 = 0;

        i3 = 0;

        goto label5;

     label1:
        $c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $i5 = (int) $c0;

        if $i5 == 34 goto label2;

        $i6 = (int) $c0;

        if $i6 != 39 goto label4;

     label2:
        if z0 != 0 goto label3;

        i1 = $c0;

        z0 = 1;

        i2 = i3 + 1;

        goto label4;

     label3:
        $i7 = (int) $c0;

        if i1 != $i7 goto label4;

        $r1 = newarray (int)[2];

        $r1[0] = i2;

        $r1[1] = i3;

        return $r1;

     label4:
        i3 = i3 + 1;

     label5:
        $i4 = virtualinvoke r0.<java.lang.String: int length()>();

        if i3 < $i4 goto label1;

        return null;
    }

    public java.lang.String getData()
    {
        org.jdom.ProcessingInstruction r0;
        java.lang.String $r1;

        r0 := @this: org.jdom.ProcessingInstruction;

        $r1 = r0.<org.jdom.ProcessingInstruction: java.lang.String rawData>;

        return $r1;
    }

    public java.util.List getPseudoAttributeNames()
    {
        org.jdom.ProcessingInstruction r0;
        java.util.Iterator $r4;
        java.util.Set $r2;
        java.util.ArrayList $r3;
        java.util.Map $r1;
        int $i0;
        java.lang.Object $r5;
        java.lang.String $r6, $r7;
        boolean $z0;

        r0 := @this: org.jdom.ProcessingInstruction;

        $r1 = r0.<org.jdom.ProcessingInstruction: java.util.Map mapData>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        $i0 = virtualinvoke $r6.<java.lang.String: int indexOf(java.lang.String)>("=");

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r7);

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return $r3;
    }

    public java.lang.String getPseudoAttributeValue(java.lang.String)
    {
        org.jdom.ProcessingInstruction r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1, $r4;

        r0 := @this: org.jdom.ProcessingInstruction;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.jdom.ProcessingInstruction: java.util.Map mapData>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public java.lang.String getTarget()
    {
        org.jdom.ProcessingInstruction r0;
        java.lang.String $r1;

        r0 := @this: org.jdom.ProcessingInstruction;

        $r1 = r0.<org.jdom.ProcessingInstruction: java.lang.String target>;

        return $r1;
    }

    public java.lang.String getValue()
    {
        org.jdom.ProcessingInstruction r0;
        java.lang.String $r1;

        r0 := @this: org.jdom.ProcessingInstruction;

        $r1 = r0.<org.jdom.ProcessingInstruction: java.lang.String rawData>;

        return $r1;
    }

    private java.util.Map parseData(java.lang.String)
    {
        java.util.HashMap $r11, $r12;
        int[] $r4;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i13, $i14, $i15;
        java.lang.String r1, $r2, $r3, r7, r8, r9, $r10;
        boolean $z0, $z1, $z2;
        org.jdom.ProcessingInstruction r6;
        char $c0, c12;

        r6 := @this: org.jdom.ProcessingInstruction;

        r1 := @parameter0: java.lang.String;

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        r7 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        goto label8;

     label1:
        r8 = "";

        r9 = "";

        i11 = 0;

        c12 = virtualinvoke r7.<java.lang.String: char charAt(int)>(0);

        i13 = 1;

        goto label6;

     label2:
        $c0 = virtualinvoke r7.<java.lang.String: char charAt(int)>(i13);

        $i15 = (int) $c0;

        if $i15 != 61 goto label4;

        $r2 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int,int)>(i11, i13);

        r8 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $i1 = i13 + 1;

        $r3 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int)>($i1);

        $r4 = staticinvoke <org.jdom.ProcessingInstruction: int[] extractQuotedString(java.lang.String)>($r3);

        if $r4 != null goto label3;

        $r12 = new java.util.HashMap;

        specialinvoke $r12.<java.util.HashMap: void <init>()>();

        return $r12;

     label3:
        $i2 = $r4[0];

        $i3 = $i2 + i13;

        $i7 = $i3 + 1;

        $i4 = $r4[1];

        $i5 = $i4 + i13;

        $i6 = $i5 + 1;

        r9 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int,int)>($i7, $i6);

        $i8 = $r4[1];

        $i9 = $i8 + 1;

        i13 = i13 + $i9;

        goto label7;

     label4:
        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(c12);

        if $z0 == 0 goto label5;

        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c0);

        if $z1 != 0 goto label5;

        i11 = i13;

     label5:
        c12 = $c0;

        i13 = i13 + 1;

     label6:
        $i14 = virtualinvoke r7.<java.lang.String: int length()>();

        if i13 < $i14 goto label2;

     label7:
        r7 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int)>(i13);

        $i10 = virtualinvoke r8.<java.lang.String: int length()>();

        if $i10 <= 0 goto label8;

        if r9 == null goto label8;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, r9);

     label8:
        $r10 = virtualinvoke r7.<java.lang.String: java.lang.String trim()>();

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z2 == 0 goto label1;

        return $r11;
    }

    public boolean removePseudoAttribute(java.lang.String)
    {
        org.jdom.ProcessingInstruction r0;
        java.util.Map $r2, $r4;
        java.lang.Object $r3;
        java.lang.String r1, $r5;

        r0 := @this: org.jdom.ProcessingInstruction;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.jdom.ProcessingInstruction: java.util.Map mapData>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        if $r3 == null goto label1;

        $r4 = r0.<org.jdom.ProcessingInstruction: java.util.Map mapData>;

        $r5 = specialinvoke r0.<org.jdom.ProcessingInstruction: java.lang.String toString(java.util.Map)>($r4);

        r0.<org.jdom.ProcessingInstruction: java.lang.String rawData> = $r5;

        return 1;

     label1:
        return 0;
    }

    public org.jdom.ProcessingInstruction setData(java.lang.String)
    {
        org.jdom.ProcessingInstruction r2;
        org.jdom.IllegalDataException $r4;
        java.util.Map $r3;
        java.lang.String r0, $r1;

        r2 := @this: org.jdom.ProcessingInstruction;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.jdom.Verifier: java.lang.String checkProcessingInstructionData(java.lang.String)>(r0);

        if $r1 == null goto label1;

        $r4 = new org.jdom.IllegalDataException;

        specialinvoke $r4.<org.jdom.IllegalDataException: void <init>(java.lang.String,java.lang.String)>(r0, $r1);

        throw $r4;

     label1:
        r2.<org.jdom.ProcessingInstruction: java.lang.String rawData> = r0;

        $r3 = specialinvoke r2.<org.jdom.ProcessingInstruction: java.util.Map parseData(java.lang.String)>(r0);

        r2.<org.jdom.ProcessingInstruction: java.util.Map mapData> = $r3;

        return r2;
    }

    public org.jdom.ProcessingInstruction setData(java.util.Map)
    {
        org.jdom.ProcessingInstruction r0;
        org.jdom.IllegalDataException $r4;
        java.util.Map r1;
        java.lang.String $r2, $r3;

        r0 := @this: org.jdom.ProcessingInstruction;

        r1 := @parameter0: java.util.Map;

        $r2 = specialinvoke r0.<org.jdom.ProcessingInstruction: java.lang.String toString(java.util.Map)>(r1);

        $r3 = staticinvoke <org.jdom.Verifier: java.lang.String checkProcessingInstructionData(java.lang.String)>($r2);

        if $r3 == null goto label1;

        $r4 = new org.jdom.IllegalDataException;

        specialinvoke $r4.<org.jdom.IllegalDataException: void <init>(java.lang.String,java.lang.String)>($r2, $r3);

        throw $r4;

     label1:
        r0.<org.jdom.ProcessingInstruction: java.lang.String rawData> = $r2;

        r0.<org.jdom.ProcessingInstruction: java.util.Map mapData> = r1;

        return r0;
    }

    public org.jdom.ProcessingInstruction setPseudoAttribute(java.lang.String, java.lang.String)
    {
        org.jdom.ProcessingInstruction r4;
        org.jdom.IllegalDataException $r8, $r9;
        java.util.Map $r5, $r6;
        java.lang.String r0, $r1, r2, $r3, $r7;

        r4 := @this: org.jdom.ProcessingInstruction;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r1 = staticinvoke <org.jdom.Verifier: java.lang.String checkProcessingInstructionData(java.lang.String)>(r0);

        if $r1 == null goto label1;

        $r9 = new org.jdom.IllegalDataException;

        specialinvoke $r9.<org.jdom.IllegalDataException: void <init>(java.lang.String,java.lang.String)>(r0, $r1);

        throw $r9;

     label1:
        $r3 = staticinvoke <org.jdom.Verifier: java.lang.String checkProcessingInstructionData(java.lang.String)>(r2);

        if $r3 == null goto label2;

        $r8 = new org.jdom.IllegalDataException;

        specialinvoke $r8.<org.jdom.IllegalDataException: void <init>(java.lang.String,java.lang.String)>(r2, $r3);

        throw $r8;

     label2:
        $r5 = r4.<org.jdom.ProcessingInstruction: java.util.Map mapData>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r2);

        $r6 = r4.<org.jdom.ProcessingInstruction: java.util.Map mapData>;

        $r7 = specialinvoke r4.<org.jdom.ProcessingInstruction: java.lang.String toString(java.util.Map)>($r6);

        r4.<org.jdom.ProcessingInstruction: java.lang.String rawData> = $r7;

        return r4;
    }

    public org.jdom.ProcessingInstruction setTarget(java.lang.String)
    {
        org.jdom.ProcessingInstruction r2;
        org.jdom.IllegalTargetException $r3;
        java.lang.String r0, $r1;

        r2 := @this: org.jdom.ProcessingInstruction;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.jdom.Verifier: java.lang.String checkProcessingInstructionTarget(java.lang.String)>(r0);

        if $r1 == null goto label1;

        $r3 = new org.jdom.IllegalTargetException;

        specialinvoke $r3.<org.jdom.IllegalTargetException: void <init>(java.lang.String,java.lang.String)>(r0, $r1);

        throw $r3;

     label1:
        r2.<org.jdom.ProcessingInstruction: java.lang.String target> = r0;

        return r2;
    }

    public java.lang.String toString()
    {
        org.jdom.ProcessingInstruction r3;
        org.jdom.output.XMLOutputter $r2;
        java.lang.StringBuffer $r0, $r1, $r5, $r6;
        java.lang.String $r4, $r7;

        r3 := @this: org.jdom.ProcessingInstruction;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[ProcessingInstruction: ");

        $r2 = new org.jdom.output.XMLOutputter;

        specialinvoke $r2.<org.jdom.output.XMLOutputter: void <init>()>();

        $r4 = virtualinvoke $r2.<org.jdom.output.XMLOutputter: java.lang.String outputString(org.jdom.ProcessingInstruction)>(r3);

        $r5 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }

    private java.lang.String toString(java.util.Map)
    {
        java.lang.StringBuffer $r0, $r8, $r9, $r10;
        java.util.Map r1;
        int $i0, $i1, $i2;
        java.lang.String r5, r7, $r11;
        boolean $z0;
        org.jdom.ProcessingInstruction r12;
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.lang.Object $r4, $r6;

        r12 := @this: org.jdom.ProcessingInstruction;

        r1 := @parameter0: java.util.Map;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $r6 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        r7 = (java.lang.String) $r6;

        $r8 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=\"");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" ");

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $i0 = virtualinvoke $r0.<java.lang.StringBuffer: int length()>();

        if $i0 <= 0 goto label3;

        $i1 = virtualinvoke $r0.<java.lang.StringBuffer: int length()>();

        $i2 = $i1 - 1;

        virtualinvoke $r0.<java.lang.StringBuffer: void setLength(int)>($i2);

     label3:
        $r11 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r11;
    }

    public static void <clinit>()
    {
        <org.jdom.ProcessingInstruction: java.lang.String CVS_ID> = "@(#) $RCSfile: ProcessingInstruction.java,v $ $Revision: 1.46 $ $Date: 2004/02/27 11:32:57 $ $Name: jdom_1_0 $";

        return;
    }
}
