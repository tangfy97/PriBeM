class javax.activation.DataHandler$ObjectDataSource$1 extends java.lang.Thread
{
    final javax.activation.DataContentHandler val$dch;
    final java.io.PipedOutputStream val$os;
    final javax.activation.DataHandler$ObjectDataSource this$1;

    void <init>(javax.activation.DataHandler$ObjectDataSource, java.lang.String, javax.activation.DataContentHandler, java.io.PipedOutputStream)
    {
        javax.activation.DataHandler$ObjectDataSource$1 r0;
        javax.activation.DataContentHandler r2;
        java.io.PipedOutputStream r3;
        java.lang.String r4;
        javax.activation.DataHandler$ObjectDataSource r1;

        r0 := @this: javax.activation.DataHandler$ObjectDataSource$1;

        r1 := @parameter0: javax.activation.DataHandler$ObjectDataSource;

        r4 := @parameter1: java.lang.String;

        r2 := @parameter2: javax.activation.DataContentHandler;

        r3 := @parameter3: java.io.PipedOutputStream;

        r0.<javax.activation.DataHandler$ObjectDataSource$1: javax.activation.DataHandler$ObjectDataSource this$1> = r1;

        r0.<javax.activation.DataHandler$ObjectDataSource$1: javax.activation.DataContentHandler val$dch> = r2;

        r0.<javax.activation.DataHandler$ObjectDataSource$1: java.io.PipedOutputStream val$os> = r3;

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>(r4);

        return;
    }

    public void run()
    {
        java.lang.Throwable $r9;
        java.io.IOException $r8;
        java.io.PipedOutputStream $r6, $r7, $r10;
        javax.activation.DataHandler$ObjectDataSource$1 r0;
        java.lang.Object $r3;
        javax.activation.DataContentHandler $r2;
        java.lang.String $r5;
        javax.activation.DataHandler$ObjectDataSource $r1, $r4;

        r0 := @this: javax.activation.DataHandler$ObjectDataSource$1;

     label1:
        $r2 = r0.<javax.activation.DataHandler$ObjectDataSource$1: javax.activation.DataContentHandler val$dch>;

        $r1 = r0.<javax.activation.DataHandler$ObjectDataSource$1: javax.activation.DataHandler$ObjectDataSource this$1>;

        $r3 = staticinvoke <javax.activation.DataHandler$ObjectDataSource: java.lang.Object access$100(javax.activation.DataHandler$ObjectDataSource)>($r1);

        $r4 = r0.<javax.activation.DataHandler$ObjectDataSource$1: javax.activation.DataHandler$ObjectDataSource this$1>;

        $r5 = staticinvoke <javax.activation.DataHandler$ObjectDataSource: java.lang.String access$000(javax.activation.DataHandler$ObjectDataSource)>($r4);

        $r6 = r0.<javax.activation.DataHandler$ObjectDataSource$1: java.io.PipedOutputStream val$os>;

        interfaceinvoke $r2.<javax.activation.DataContentHandler: void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream)>($r3, $r5, $r6);

     label2:
        $r7 = r0.<javax.activation.DataHandler$ObjectDataSource$1: java.io.PipedOutputStream val$os>;

        virtualinvoke $r7.<java.io.PipedOutputStream: void close()>();

        goto label5;

     label3:
        $r9 := @caughtexception;

     label4:
        $r10 = r0.<javax.activation.DataHandler$ObjectDataSource$1: java.io.PipedOutputStream val$os>;

        virtualinvoke $r10.<java.io.PipedOutputStream: void close()>();

        throw $r9;

     label5:
        goto label7;

     label6:
        $r8 := @caughtexception;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
        catch java.io.IOException from label1 to label5 with label6;
    }
}
