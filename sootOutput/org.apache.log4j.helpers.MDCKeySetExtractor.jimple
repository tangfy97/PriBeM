public final class org.apache.log4j.helpers.MDCKeySetExtractor extends java.lang.Object
{
    private final java.lang.reflect.Method getKeySetMethod;
    public static final org.apache.log4j.helpers.MDCKeySetExtractor INSTANCE;
    static java.lang.Class class$org$apache$log4j$spi$LoggingEvent;
    static java.lang.Class class$org$apache$log4j$pattern$LogEvent;

    private void <init>()
    {
        java.lang.Class $r1, $r3;
        java.lang.reflect.Method r4;
        java.lang.Exception $r2;
        org.apache.log4j.helpers.MDCKeySetExtractor r0;

        r0 := @this: org.apache.log4j.helpers.MDCKeySetExtractor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

     label1:
        $r1 = <org.apache.log4j.helpers.MDCKeySetExtractor: java.lang.Class class$org$apache$log4j$spi$LoggingEvent>;

        if $r1 != null goto label2;

        $r3 = staticinvoke <org.apache.log4j.helpers.MDCKeySetExtractor: java.lang.Class class$(java.lang.String)>("org.apache.log4j.spi.LoggingEvent");

        <org.apache.log4j.helpers.MDCKeySetExtractor: java.lang.Class class$org$apache$log4j$spi$LoggingEvent> = $r3;

        goto label3;

     label2:
        $r3 = <org.apache.log4j.helpers.MDCKeySetExtractor: java.lang.Class class$org$apache$log4j$spi$LoggingEvent>;

     label3:
        r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getPropertyKeySet", null);

     label4:
        goto label6;

     label5:
        $r2 := @caughtexception;

        r4 = null;

     label6:
        r0.<org.apache.log4j.helpers.MDCKeySetExtractor: java.lang.reflect.Method getKeySetMethod> = r4;

        return;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    public java.util.Set getPropertyKeySet(org.apache.log4j.spi.LoggingEvent) throws java.lang.Exception
    {
        byte[] $r5;
        java.io.ByteArrayOutputStream $r16;
        java.io.ObjectInputStream $r19;
        org.apache.log4j.helpers.MDCKeySetExtractor r0;
        byte $b0, $b3, $b4;
        java.io.ByteArrayInputStream $r18;
        int $i1, $i5, i6, $i7, $i8;
        java.io.ObjectOutputStream $r17;
        java.lang.String $r7;
        java.lang.reflect.Method $r1, $r12;
        boolean $z0;
        org.apache.log4j.spi.LoggingEvent r4;
        java.util.Set r14;
        char $c2;
        org.apache.log4j.pattern.LogEvent $r11;
        java.lang.Class $r6, $r15;
        java.lang.Object $r10, $r13;

        r0 := @this: org.apache.log4j.helpers.MDCKeySetExtractor;

        r4 := @parameter0: org.apache.log4j.spi.LoggingEvent;

        r14 = null;

        $r1 = r0.<org.apache.log4j.helpers.MDCKeySetExtractor: java.lang.reflect.Method getKeySetMethod>;

        if $r1 == null goto label1;

        $r12 = r0.<org.apache.log4j.helpers.MDCKeySetExtractor: java.lang.reflect.Method getKeySetMethod>;

        $r13 = virtualinvoke $r12.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r4, null);

        r14 = (java.util.Set) $r13;

        goto label8;

     label1:
        $r16 = new java.io.ByteArrayOutputStream;

        specialinvoke $r16.<java.io.ByteArrayOutputStream: void <init>()>();

        $r17 = new java.io.ObjectOutputStream;

        specialinvoke $r17.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r16);

        virtualinvoke $r17.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r4);

        virtualinvoke $r17.<java.io.ObjectOutputStream: void close()>();

        $r5 = virtualinvoke $r16.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r6 = <org.apache.log4j.helpers.MDCKeySetExtractor: java.lang.Class class$org$apache$log4j$pattern$LogEvent>;

        if $r6 != null goto label2;

        $r15 = staticinvoke <org.apache.log4j.helpers.MDCKeySetExtractor: java.lang.Class class$(java.lang.String)>("org.apache.log4j.pattern.LogEvent");

        <org.apache.log4j.helpers.MDCKeySetExtractor: java.lang.Class class$org$apache$log4j$pattern$LogEvent> = $r15;

        goto label3;

     label2:
        $r15 = <org.apache.log4j.helpers.MDCKeySetExtractor: java.lang.Class class$org$apache$log4j$pattern$LogEvent>;

     label3:
        $r7 = virtualinvoke $r15.<java.lang.Class: java.lang.String getName()>();

        $b0 = $r5[6];

        if $b0 == 0 goto label4;

        $b4 = $r5[7];

        $i5 = virtualinvoke $r7.<java.lang.String: int length()>();

        $i8 = (int) $b4;

        if $i8 != $i5 goto label8;

     label4:
        i6 = 0;

     label5:
        $i7 = virtualinvoke $r7.<java.lang.String: int length()>();

        if i6 >= $i7 goto label6;

        $i1 = 8 + i6;

        $c2 = virtualinvoke $r7.<java.lang.String: char charAt(int)>(i6);

        $b3 = (byte) $c2;

        $r5[$i1] = $b3;

        i6 = i6 + 1;

        goto label5;

     label6:
        $r18 = new java.io.ByteArrayInputStream;

        specialinvoke $r18.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5);

        $r19 = new java.io.ObjectInputStream;

        specialinvoke $r19.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r18);

        $r10 = virtualinvoke $r19.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $z0 = $r10 instanceof org.apache.log4j.pattern.LogEvent;

        if $z0 == 0 goto label7;

        $r11 = (org.apache.log4j.pattern.LogEvent) $r10;

        r14 = virtualinvoke $r11.<org.apache.log4j.pattern.LogEvent: java.util.Set getPropertyKeySet()>();

     label7:
        virtualinvoke $r19.<java.io.ObjectInputStream: void close()>();

     label8:
        return r14;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        org.apache.log4j.helpers.MDCKeySetExtractor $r0;

        $r0 = new org.apache.log4j.helpers.MDCKeySetExtractor;

        specialinvoke $r0.<org.apache.log4j.helpers.MDCKeySetExtractor: void <init>()>();

        <org.apache.log4j.helpers.MDCKeySetExtractor: org.apache.log4j.helpers.MDCKeySetExtractor INSTANCE> = $r0;

        return;
    }
}
