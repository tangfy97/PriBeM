public class org.waveprotocol.wave.federation.ProtocolHashedVersionFactory extends java.lang.Object
{
    private static final org.waveprotocol.wave.model.id.IdURIEncoderDecoder URI_CODEC;
    private static final org.waveprotocol.wave.model.version.HashedVersionFactory HASH_FACTORY;
    private static final int HASH_SIZE_BITS;

    private void <init>()
    {
        org.waveprotocol.wave.federation.ProtocolHashedVersionFactory r0;

        r0 := @this: org.waveprotocol.wave.federation.ProtocolHashedVersionFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static com.google.protobuf.ByteString nextHash(com.google.protobuf.ByteString, com.google.protobuf.ByteString)
    {
        byte[] $r2, $r4, $r5;
        java.security.MessageDigest $r0;
        java.lang.RuntimeException $r8;
        com.google.protobuf.ByteString r1, r3, $r6;
        java.security.NoSuchAlgorithmException $r7;

        r1 := @parameter0: com.google.protobuf.ByteString;

        r3 := @parameter1: com.google.protobuf.ByteString;

     label1:
        $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256");

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

     label4:
        $r2 = virtualinvoke r1.<com.google.protobuf.ByteString: byte[] toByteArray()>();

        virtualinvoke $r0.<java.security.MessageDigest: void update(byte[])>($r2);

        $r4 = virtualinvoke r3.<com.google.protobuf.ByteString: byte[] toByteArray()>();

        $r5 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest(byte[])>($r4);

        $r6 = staticinvoke <com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(byte[],int,int)>($r5, 0, 20);

        return $r6;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public static org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion createVersionZero(org.waveprotocol.wave.model.id.WaveletName)
    {
        org.waveprotocol.wave.model.id.WaveletName r0;
        byte[] $r3;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder $r4, $r5, $r7;
        com.google.protobuf.ByteString $r6;
        org.waveprotocol.wave.model.version.HashedVersionFactory $r1;
        org.waveprotocol.wave.model.version.HashedVersion $r2;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion $r8;

        r0 := @parameter0: org.waveprotocol.wave.model.id.WaveletName;

        $r1 = <org.waveprotocol.wave.federation.ProtocolHashedVersionFactory: org.waveprotocol.wave.model.version.HashedVersionFactory HASH_FACTORY>;

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.version.HashedVersionFactory: org.waveprotocol.wave.model.version.HashedVersion createVersionZero(org.waveprotocol.wave.model.id.WaveletName)>(r0);

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.model.version.HashedVersion: byte[] getHistoryHash()>();

        $r4 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder newBuilder()>();

        $r5 = virtualinvoke $r4.<org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder setVersion(long)>(0L);

        $r6 = staticinvoke <com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(byte[])>($r3);

        $r7 = virtualinvoke $r5.<org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder setHistoryHash(com.google.protobuf.ByteString)>($r6);

        $r8 = virtualinvoke $r7.<org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion build()>();

        return $r8;
    }

    public static org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion create(com.google.protobuf.ByteString, org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion, int)
    {
        long $l0, $l2, $l3;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder $r0, $r2, $r6;
        com.google.protobuf.ByteString $r3, r4, $r5;
        int i1;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion r1, $r7;

        r4 := @parameter0: com.google.protobuf.ByteString;

        r1 := @parameter1: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion;

        i1 := @parameter2: int;

        $r0 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder newBuilder()>();

        $l0 = virtualinvoke r1.<org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion: long getVersion()>();

        $l2 = (long) i1;

        $l3 = $l0 + $l2;

        $r2 = virtualinvoke $r0.<org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder setVersion(long)>($l3);

        $r3 = virtualinvoke r1.<org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion: com.google.protobuf.ByteString getHistoryHash()>();

        $r5 = staticinvoke <org.waveprotocol.wave.federation.ProtocolHashedVersionFactory: com.google.protobuf.ByteString nextHash(com.google.protobuf.ByteString,com.google.protobuf.ByteString)>($r3, r4);

        $r6 = virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder setHistoryHash(com.google.protobuf.ByteString)>($r5);

        $r7 = virtualinvoke $r6.<org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion$Builder: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion build()>();

        return $r7;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.util.escapers.jvm.JavaUrlCodec $r1;
        org.waveprotocol.wave.model.id.IdURIEncoderDecoder $r0, $r3;
        org.waveprotocol.wave.model.version.HashedVersionFactoryImpl $r2;

        <org.waveprotocol.wave.federation.ProtocolHashedVersionFactory: int HASH_SIZE_BITS> = 160;

        $r0 = new org.waveprotocol.wave.model.id.IdURIEncoderDecoder;

        $r1 = new org.waveprotocol.wave.util.escapers.jvm.JavaUrlCodec;

        specialinvoke $r1.<org.waveprotocol.wave.util.escapers.jvm.JavaUrlCodec: void <init>()>();

        specialinvoke $r0.<org.waveprotocol.wave.model.id.IdURIEncoderDecoder: void <init>(org.waveprotocol.wave.model.id.URIEncoderDecoder$PercentEncoderDecoder)>($r1);

        <org.waveprotocol.wave.federation.ProtocolHashedVersionFactory: org.waveprotocol.wave.model.id.IdURIEncoderDecoder URI_CODEC> = $r0;

        $r2 = new org.waveprotocol.wave.model.version.HashedVersionFactoryImpl;

        $r3 = <org.waveprotocol.wave.federation.ProtocolHashedVersionFactory: org.waveprotocol.wave.model.id.IdURIEncoderDecoder URI_CODEC>;

        specialinvoke $r2.<org.waveprotocol.wave.model.version.HashedVersionFactoryImpl: void <init>(org.waveprotocol.wave.model.id.IdURIEncoderDecoder)>($r3);

        <org.waveprotocol.wave.federation.ProtocolHashedVersionFactory: org.waveprotocol.wave.model.version.HashedVersionFactory HASH_FACTORY> = $r2;

        return;
    }
}
