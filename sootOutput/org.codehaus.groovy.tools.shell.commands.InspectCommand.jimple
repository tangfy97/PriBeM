public class org.codehaus.groovy.tools.shell.commands.InspectCommand extends org.codehaus.groovy.tools.shell.CommandSupport
{
    public static java.lang.Long __timeStamp;
    public static java.lang.Long __timeStamp__239_neverHappen1239119697141;
    static java.lang.Class class$java$util$List;
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$0;
    static java.lang.Class class$java$lang$Object;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$commands$InspectCommandCompletor;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$CommandSupport;
    static java.lang.Class class$groovy$inspect$swingui$ObjectBrowser;

    public void <init>(org.codehaus.groovy.tools.shell.Shell)
    {
        java.lang.Object[] $r15;
        int $i0, $i1, $i2;
        java.lang.String $r8, $r10;
        org.codehaus.groovy.tools.shell.commands.InspectCommand r4;
        java.lang.IllegalArgumentException $r11;
        java.lang.Class $r0, $r1, $r3, $r13, $r14, $r16;
        java.lang.Object $r5, $r7, $r9, $r12;
        org.codehaus.groovy.tools.shell.Shell r2, $r6;

        r4 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        r2 := @parameter0: org.codehaus.groovy.tools.shell.Shell;

        $r0 = <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r13 = staticinvoke <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.InspectCommand");

        <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$0> = $r13;

        goto label02;

     label01:
        $r13 = <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$0>;

     label02:
        $r1 = <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label03;

        $r14 = staticinvoke <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$groovy$lang$MetaClass> = $r14;

        goto label04;

     label03:
        $r14 = <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r15 = newarray (java.lang.Object)[3];

        $r15[0] = r2;

        $r15[1] = "inspect";

        $r15[2] = "\\n";

        $r3 = <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandSupport>;

        if $r3 != null goto label05;

        $r16 = staticinvoke <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandSupport");

        <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandSupport> = $r16;

        goto label06;

     label05:
        $r16 = <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandSupport>;

     label06:
        $i0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: int selectConstructorAndTransformArguments(java.lang.Object[],int,java.lang.Class)>($r15, 1, $r16);

        $i1 = $i0 & 1;

        if $i1 == 0 goto label07;

        $r12 = $r15[0];

        $r15 = (java.lang.Object[]) $r12;

     label07:
        $i2 = $i0 >> 8;

        lookupswitch($i2)
        {
            case 0: goto label08;
            default: goto label09;
        };

     label08:
        $r5 = $r15[0];

        $r6 = (org.codehaus.groovy.tools.shell.Shell) $r5;

        $r7 = $r15[1];

        $r8 = (java.lang.String) $r7;

        $r9 = $r15[2];

        $r10 = (java.lang.String) $r9;

        specialinvoke r4.<org.codehaus.groovy.tools.shell.CommandSupport: void <init>(org.codehaus.groovy.tools.shell.Shell,java.lang.String,java.lang.String)>($r6, $r8, $r10);

        goto label10;

     label09:
        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("illegal constructor number");

        throw $r11;

     label10:
        return;
    }

    protected java.util.List createCompletors()
    {
        java.lang.Object[] $r3, $r5;
        org.codehaus.groovy.tools.shell.commands.InspectCommand r6;
        java.util.List $r9, $r12;
        java.lang.Class $r0, r1, $r2, $r4, $r10, $r13, $r14, $r15, $r16;
        java.lang.Object $r7, $r8, $r11;

        r6 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        $r0 = <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r13 = staticinvoke <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.InspectCommand");

        <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$0> = $r13;

        goto label2;

     label1:
        $r13 = <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$0>;

     label2:
        r1 = $r13;

        $r2 = <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r14 = staticinvoke <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$groovy$lang$MetaClass> = $r14;

        goto label4;

     label3:
        $r14 = <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = newarray (java.lang.Object)[2];

        $r4 = <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$InspectCommandCompletor>;

        if $r4 != null goto label5;

        $r15 = staticinvoke <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.InspectCommandCompletor");

        <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$InspectCommandCompletor> = $r15;

        goto label6;

     label5:
        $r15 = <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$InspectCommandCompletor>;

     label6:
        $r5 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r6, "binding");

        $r5[0] = $r7;

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r15, $r5);

        $r3[0] = $r8;

        $r3[1] = null;

        $r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.List createList(java.lang.Object[])>($r3);

        $r10 = <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$java$util$List>;

        if $r10 != null goto label7;

        $r16 = staticinvoke <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$(java.lang.String)>("java.util.List");

        <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$java$util$List> = $r16;

        goto label8;

     label7:
        $r16 = <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$java$util$List>;

     label8:
        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r9, $r16);

        $r12 = (java.util.List) $r11;

        return $r12;
    }

    public java.lang.Object execute(java.util.List)
    {
        java.lang.Integer $r12, $r14, $r37;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.codehaus.groovy.runtime.GStringImpl $r8, $r27;
        java.util.List r3;
        java.lang.Object[] $r7, $r9, $r17, $r21, $r26, $r28, $r32, $r35, $r36, $r39, $r41, $r42;
        java.lang.String[] $r10, $r29;
        java.lang.StringBuffer $r4;
        org.codehaus.groovy.tools.shell.commands.InspectCommand r5;
        java.lang.Class $r0, r1, $r2, $r20, $r45, $r46, $r48, $r49, $r50;
        java.lang.Object $r6, $r11, $r13, $r15, $r16, $r18, $r19, $r22, $r23, $r24, $r25, $r30, $r31, $r33, $r34, $r38, $r40, $r43, $r44, r47;

        r5 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        r3 := @parameter0: java.util.List;

        $r0 = <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r45 = staticinvoke <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.InspectCommand");

        <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$0> = $r45;

        goto label02;

     label01:
        $r45 = <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$0>;

     label02:
        r1 = $r45;

        $r2 = <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r46 = staticinvoke <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$groovy$lang$MetaClass> = $r46;

        goto label04;

     label03:
        $r46 = <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>(r3, null);

        if $z0 == 0 goto label05;

        goto label06;

     label05:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>("(args != null). Values: ");

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("args = ");

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r3);

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void assertFailed(java.lang.Object,java.lang.Object)>($r4, null);

     label06:
        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "log");

        $r7 = newarray (java.lang.Object)[1];

        $r8 = new org.codehaus.groovy.runtime.GStringImpl;

        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = r3;

        $r10 = newarray (java.lang.String)[2];

        $r10[0] = "Inspecting w/args: ";

        $r10[1] = "";

        specialinvoke $r8.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r9, $r10);

        $r7[0] = $r8;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r6, "debug", $r7);

        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r3, "size");

        $r12 = new java.lang.Integer;

        specialinvoke $r12.<java.lang.Integer: void <init>(int)>(1);

        $z1 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareGreaterThan(java.lang.Object,java.lang.Object)>($r11, $r12);

        if $z1 == 0 goto label07;

        $r39 = newarray (java.lang.Object)[1];

        $r40 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "messages");

        $r41 = newarray (java.lang.Object)[2];

        $r41[0] = "error.unexpected_args";

        $r42 = newarray (java.lang.Object)[1];

        $r42[0] = " ";

        $r43 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "join", $r42);

        $r41[1] = $r43;

        $r44 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r40, "format", $r41);

        $r39[0] = $r44;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r5, "fail", $r39);

        goto label07;

     label07:
        $r13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r3, "size");

        $r14 = new java.lang.Integer;

        specialinvoke $r14.<java.lang.Integer: void <init>(int)>(1);

        $z2 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>($r13, $r14);

        if $z2 == 0 goto label08;

        $r33 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "binding");

        $r34 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r33, "variables");

        $r35 = newarray (java.lang.Object)[1];

        $r36 = newarray (java.lang.Object)[1];

        $r37 = new java.lang.Integer;

        specialinvoke $r37.<java.lang.Integer: void <init>(int)>(0);

        $r36[0] = $r37;

        $r38 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "getAt", $r36);

        $r35[0] = $r38;

        r47 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r34, "getAt", $r35);

        goto label09;

     label08:
        $r15 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "binding");

        $r16 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r15, "variables");

        $r17 = newarray (java.lang.Object)[1];

        $r17[0] = "_";

        r47 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r16, "getAt", $r17);

     label09:
        $z3 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>(r47);

        if $z3 != 0 goto label10;

        $z5 = 1;

        goto label11;

     label10:
        $z5 = 0;

     label11:
        if $z5 == 0 goto label12;

        $r30 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "io");

        $r31 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r30, "out");

        $r32 = newarray (java.lang.Object)[1];

        $r32[0] = "Subject is null; nothing to inspect";

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r31, "println", $r32);

        goto label16;

     label12:
        $r18 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "io");

        $r19 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r18, "verbose");

        $z4 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r19);

        if $z4 == 0 goto label13;

        $r24 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "io");

        $r25 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r24, "out");

        $r26 = newarray (java.lang.Object)[1];

        $r27 = new org.codehaus.groovy.runtime.GStringImpl;

        $r28 = newarray (java.lang.Object)[1];

        $r28[0] = r47;

        $r29 = newarray (java.lang.String)[2];

        $r29[0] = "Launching object browser to inspect: ";

        $r29[1] = "";

        specialinvoke $r27.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r28, $r29);

        $r26[0] = $r27;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r25, "println", $r26);

        goto label13;

     label13:
        $r20 = <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$groovy$inspect$swingui$ObjectBrowser>;

        if $r20 != null goto label14;

        $r48 = staticinvoke <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$(java.lang.String)>("groovy.inspect.swingui.ObjectBrowser");

        <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$groovy$inspect$swingui$ObjectBrowser> = $r48;

        goto label15;

     label14:
        $r48 = <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$groovy$inspect$swingui$ObjectBrowser>;

     label15:
        $r21 = newarray (java.lang.Object)[1];

        $r21[0] = r47;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r48, "inspect", $r21);

     label16:
        $r49 = <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$java$lang$Object>;

        if $r49 != null goto label17;

        $r50 = staticinvoke <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$java$lang$Object> = $r50;

        goto label18;

     label17:
        $r50 = <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$java$lang$Object>;

     label18:
        $r22 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(null, $r50);

        $r23 = (java.lang.Object) $r22;

        return $r23;
    }

    static void <clinit>()
    {
        java.lang.Long $r2, $r3, $r4, $r5;
        java.lang.Class $r0, $r1, $r6, $r7;

        $r0 = <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.InspectCommand");

        <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r2 = new java.lang.Long;

        specialinvoke $r2.<java.lang.Long: void <init>(long)>(1239119697141L);

        $r3 = (java.lang.Long) $r2;

        <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Long __timeStamp> = $r3;

        $r4 = new java.lang.Long;

        specialinvoke $r4.<java.lang.Long: void <init>(long)>(0L);

        $r5 = (java.lang.Long) $r4;

        <org.codehaus.groovy.tools.shell.commands.InspectCommand: java.lang.Long __timeStamp__239_neverHappen1239119697141> = $r5;

        return;
    }

    java.lang.String super$1$toString()
    {
        java.lang.String $r1;
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    void super$2$setProperty(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2;
        java.lang.String r1;
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void setProperty(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    org.codehaus.groovy.tools.shell.BufferManager super$2$getBuffers()
    {
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;
        org.codehaus.groovy.tools.shell.BufferManager $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: org.codehaus.groovy.tools.shell.BufferManager getBuffers()>();

        return $r1;
    }

    java.lang.String super$2$getHelp()
    {
        java.lang.String $r1;
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String getHelp()>();

        return $r1;
    }

    jline.History super$2$getHistory()
    {
        jline.History $r1;
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: jline.History getHistory()>();

        return $r1;
    }

    java.util.List super$2$createCompletors()
    {
        java.util.List $r1;
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.util.List createCompletors()>();

        return $r1;
    }

    void super$1$wait()
    {
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        specialinvoke r0.<java.lang.Object: void wait()>();

        return;
    }

    groovy.lang.MetaClass super$2$getMetaClass()
    {
        groovy.lang.MetaClass $r1;
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: groovy.lang.MetaClass getMetaClass()>();

        return $r1;
    }

    void super$2$setMetaClass(groovy.lang.MetaClass)
    {
        groovy.lang.MetaClass r1;
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        r1 := @parameter0: groovy.lang.MetaClass;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void setMetaClass(groovy.lang.MetaClass)>(r1);

        return;
    }

    java.util.Map super$2$getVariables()
    {
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;
        java.util.Map $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.util.Map getVariables()>();

        return $r1;
    }

    java.util.List super$2$getBuffer()
    {
        java.util.List $r1;
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.util.List getBuffer()>();

        return $r1;
    }

    java.lang.Class super$1$getClass()
    {
        java.lang.Class $r1;
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        return $r1;
    }

    java.lang.String super$2$getDescription()
    {
        java.lang.String $r1;
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String getDescription()>();

        return $r1;
    }

    java.lang.String super$2$getShortcut()
    {
        java.lang.String $r1;
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String getShortcut()>();

        return $r1;
    }

    java.lang.Object super$2$invokeMethod(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2, $r3;
        java.lang.String r1;
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>(r1, r2);

        return $r3;
    }

    int super$1$hashCode()
    {
        int $i0;
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        $i0 = specialinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    java.lang.Object super$2$getProperty(java.lang.String)
    {
        java.lang.Object $r2;
        java.lang.String r1;
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Object getProperty(java.lang.String)>(r1);

        return $r2;
    }

    java.lang.String super$2$getName()
    {
        java.lang.String $r1;
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String getName()>();

        return $r1;
    }

    void super$2$fail(java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        java.lang.String r1;
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void fail(java.lang.String,java.lang.Throwable)>(r1, r2);

        return;
    }

    void super$2$fail(java.lang.String)
    {
        java.lang.String r1;
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void fail(java.lang.String)>(r1);

        return;
    }

    void super$2$assertNoArguments(java.util.List)
    {
        java.util.List r1;
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void assertNoArguments(java.util.List)>(r1);

        return;
    }

    void super$1$notify()
    {
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        specialinvoke r0.<java.lang.Object: void notify()>();

        return;
    }

    void super$2$alias(java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2;
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void alias(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    void super$1$notifyAll()
    {
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        specialinvoke r0.<java.lang.Object: void notifyAll()>();

        return;
    }

    void super$2$setHidden(boolean)
    {
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void setHidden(boolean)>(z0);

        return;
    }

    jline.Completor super$2$getCompletor()
    {
        jline.Completor $r1;
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: jline.Completor getCompletor()>();

        return $r1;
    }

    java.lang.Object super$1$clone()
    {
        java.lang.Object $r1;
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        return $r1;
    }

    java.lang.String super$2$getUsage()
    {
        java.lang.String $r1;
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String getUsage()>();

        return $r1;
    }

    groovy.lang.GroovyClassLoader super$2$getClassLoader()
    {
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;
        groovy.lang.GroovyClassLoader $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: groovy.lang.GroovyClassLoader getClassLoader()>();

        return $r1;
    }

    boolean super$2$isHidden()
    {
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        $z0 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: boolean isHidden()>();

        return $z0;
    }

    void super$1$wait(long, int)
    {
        int i1;
        long l0;
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void wait(long,int)>(l0, i1);

        return;
    }

    boolean super$2$getHidden()
    {
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        $z0 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: boolean getHidden()>();

        return $z0;
    }

    groovy.lang.Binding super$2$getBinding()
    {
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;
        groovy.lang.Binding $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: groovy.lang.Binding getBinding()>();

        return $r1;
    }

    java.util.List super$2$getImports()
    {
        java.util.List $r1;
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.util.List getImports()>();

        return $r1;
    }

    java.util.List super$2$getAliases()
    {
        java.util.List $r1;
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.util.List getAliases()>();

        return $r1;
    }

    void super$1$finalize()
    {
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }

    void super$1$wait(long)
    {
        long l0;
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void wait(long)>(l0);

        return;
    }

    boolean super$1$equals(java.lang.Object)
    {
        java.lang.Object r1;
        org.codehaus.groovy.tools.shell.commands.InspectCommand r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.InspectCommand;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
