final class org.springframework.context.support.ApplicationContextAwareProcessor$1 extends java.lang.Object implements java.security.PrivilegedAction
{
    final org.springframework.context.support.ApplicationContextAwareProcessor this$0;
    private final java.lang.Object val$bean;

    void <init>(org.springframework.context.support.ApplicationContextAwareProcessor, java.lang.Object)
    {
        java.lang.Object r2;
        org.springframework.context.support.ApplicationContextAwareProcessor$1 r0;
        org.springframework.context.support.ApplicationContextAwareProcessor r1;

        r0 := @this: org.springframework.context.support.ApplicationContextAwareProcessor$1;

        r1 := @parameter0: org.springframework.context.support.ApplicationContextAwareProcessor;

        r2 := @parameter1: java.lang.Object;

        r0.<org.springframework.context.support.ApplicationContextAwareProcessor$1: org.springframework.context.support.ApplicationContextAwareProcessor this$0> = r1;

        r0.<org.springframework.context.support.ApplicationContextAwareProcessor$1: java.lang.Object val$bean> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object run()
    {
        java.lang.Object $r1;
        org.springframework.context.support.ApplicationContextAwareProcessor$1 r0;
        org.springframework.context.support.ApplicationContextAwareProcessor $r2;

        r0 := @this: org.springframework.context.support.ApplicationContextAwareProcessor$1;

        $r2 = r0.<org.springframework.context.support.ApplicationContextAwareProcessor$1: org.springframework.context.support.ApplicationContextAwareProcessor this$0>;

        $r1 = r0.<org.springframework.context.support.ApplicationContextAwareProcessor$1: java.lang.Object val$bean>;

        staticinvoke <org.springframework.context.support.ApplicationContextAwareProcessor: void access$0(org.springframework.context.support.ApplicationContextAwareProcessor,java.lang.Object)>($r2, $r1);

        return null;
    }
}
