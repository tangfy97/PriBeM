public class org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory extends java.lang.Object
{
    protected final org.apache.commons.logging.Log logger;
    private javax.xml.rpc.ServiceFactory serviceFactory;
    private java.lang.Class serviceFactoryClass;
    private java.net.URL wsdlDocumentUrl;
    private java.lang.String namespaceUri;
    private java.lang.String serviceName;
    private java.lang.Class jaxRpcServiceInterface;
    private java.util.Properties jaxRpcServiceProperties;
    private org.springframework.remoting.jaxrpc.JaxRpcServicePostProcessor[] servicePostProcessors;

    public void <init>()
    {
        java.lang.Class $r1;
        org.apache.commons.logging.Log $r2;
        org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory r0;

        r0 := @this: org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: org.apache.commons.logging.Log logger> = $r2;

        return;
    }

    public void setServiceFactory(javax.xml.rpc.ServiceFactory)
    {
        javax.xml.rpc.ServiceFactory r1;
        org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory r0;

        r0 := @this: org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory;

        r1 := @parameter0: javax.xml.rpc.ServiceFactory;

        r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: javax.xml.rpc.ServiceFactory serviceFactory> = r1;

        return;
    }

    public javax.xml.rpc.ServiceFactory getServiceFactory()
    {
        javax.xml.rpc.ServiceFactory $r1;
        org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory r0;

        r0 := @this: org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory;

        $r1 = r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: javax.xml.rpc.ServiceFactory serviceFactory>;

        return $r1;
    }

    public void setServiceFactoryClass(java.lang.Class)
    {
        org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory r1;
        java.lang.Class r0, $r2;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;

        r1 := @this: org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory;

        r0 := @parameter0: java.lang.Class;

        if r0 == null goto label1;

        $r2 = class "Ljavax/xml/rpc/ServiceFactory;";

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("\'serviceFactoryClass\' must implement [javax.xml.rpc.ServiceFactory]");

        throw $r3;

     label1:
        r1.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.lang.Class serviceFactoryClass> = r0;

        return;
    }

    public java.lang.Class getServiceFactoryClass()
    {
        java.lang.Class $r1;
        org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory r0;

        r0 := @this: org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory;

        $r1 = r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.lang.Class serviceFactoryClass>;

        return $r1;
    }

    public void setWsdlDocumentUrl(java.net.URL)
    {
        org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory r0;
        java.net.URL r1;

        r0 := @this: org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory;

        r1 := @parameter0: java.net.URL;

        r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.net.URL wsdlDocumentUrl> = r1;

        return;
    }

    public java.net.URL getWsdlDocumentUrl()
    {
        org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory r0;
        java.net.URL $r1;

        r0 := @this: org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory;

        $r1 = r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.net.URL wsdlDocumentUrl>;

        return $r1;
    }

    public void setNamespaceUri(java.lang.String)
    {
        java.lang.String r1, $r2;
        org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory r0;

        r0 := @this: org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        goto label2;

     label1:
        $r2 = null;

     label2:
        r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.lang.String namespaceUri> = $r2;

        return;
    }

    public java.lang.String getNamespaceUri()
    {
        java.lang.String $r1;
        org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory r0;

        r0 := @this: org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory;

        $r1 = r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.lang.String namespaceUri>;

        return $r1;
    }

    public void setServiceName(java.lang.String)
    {
        java.lang.String r1;
        org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory r0;

        r0 := @this: org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory;

        r1 := @parameter0: java.lang.String;

        r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.lang.String serviceName> = r1;

        return;
    }

    public java.lang.String getServiceName()
    {
        java.lang.String $r1;
        org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory r0;

        r0 := @this: org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory;

        $r1 = r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.lang.String serviceName>;

        return $r1;
    }

    public void setJaxRpcServiceInterface(java.lang.Class)
    {
        java.lang.Class r1;
        org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory r0;

        r0 := @this: org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory;

        r1 := @parameter0: java.lang.Class;

        r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.lang.Class jaxRpcServiceInterface> = r1;

        return;
    }

    public java.lang.Class getJaxRpcServiceInterface()
    {
        java.lang.Class $r1;
        org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory r0;

        r0 := @this: org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory;

        $r1 = r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.lang.Class jaxRpcServiceInterface>;

        return $r1;
    }

    public void setJaxRpcServiceProperties(java.util.Properties)
    {
        java.util.Properties r1;
        org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory r0;

        r0 := @this: org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory;

        r1 := @parameter0: java.util.Properties;

        r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.util.Properties jaxRpcServiceProperties> = r1;

        return;
    }

    public java.util.Properties getJaxRpcServiceProperties()
    {
        java.util.Properties $r1;
        org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory r0;

        r0 := @this: org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory;

        $r1 = r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.util.Properties jaxRpcServiceProperties>;

        return $r1;
    }

    public void setServicePostProcessors(org.springframework.remoting.jaxrpc.JaxRpcServicePostProcessor[])
    {
        org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory r0;
        org.springframework.remoting.jaxrpc.JaxRpcServicePostProcessor[] r1;

        r0 := @this: org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory;

        r1 := @parameter0: org.springframework.remoting.jaxrpc.JaxRpcServicePostProcessor[];

        r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: org.springframework.remoting.jaxrpc.JaxRpcServicePostProcessor[] servicePostProcessors> = r1;

        return;
    }

    public org.springframework.remoting.jaxrpc.JaxRpcServicePostProcessor[] getServicePostProcessors()
    {
        org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory r0;
        org.springframework.remoting.jaxrpc.JaxRpcServicePostProcessor[] $r1;

        r0 := @this: org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory;

        $r1 = r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: org.springframework.remoting.jaxrpc.JaxRpcServicePostProcessor[] servicePostProcessors>;

        return $r1;
    }

    public javax.xml.rpc.Service createJaxRpcService() throws javax.xml.rpc.ServiceException
    {
        org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory r0;
        javax.xml.rpc.Service $r2;
        javax.xml.rpc.ServiceFactory $r1, r3;

        r0 := @this: org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory;

        $r1 = virtualinvoke r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: javax.xml.rpc.ServiceFactory getServiceFactory()>();

        r3 = $r1;

        if $r1 != null goto label1;

        r3 = virtualinvoke r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: javax.xml.rpc.ServiceFactory createServiceFactory()>();

     label1:
        $r2 = virtualinvoke r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: javax.xml.rpc.Service createService(javax.xml.rpc.ServiceFactory)>(r3);

        virtualinvoke r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: void postProcessJaxRpcService(javax.xml.rpc.Service)>($r2);

        return $r2;
    }

    protected javax.xml.namespace.QName getQName(java.lang.String)
    {
        org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory r0;
        java.lang.String $r1, r2, $r3;
        javax.xml.namespace.QName $r4;

        r0 := @this: org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.lang.String getNamespaceUri()>();

        if $r1 == null goto label1;

        $r4 = new javax.xml.namespace.QName;

        $r3 = virtualinvoke r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.lang.String getNamespaceUri()>();

        specialinvoke $r4.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r3, r2);

        goto label2;

     label1:
        $r4 = new javax.xml.namespace.QName;

        specialinvoke $r4.<javax.xml.namespace.QName: void <init>(java.lang.String)>(r2);

     label2:
        return $r4;
    }

    protected javax.xml.rpc.ServiceFactory createServiceFactory() throws javax.xml.rpc.ServiceException
    {
        org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory r0;
        javax.xml.rpc.ServiceFactory $r2, $r5;
        java.lang.Class $r1, $r3;
        java.lang.Object $r4;

        r0 := @this: org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory;

        $r1 = virtualinvoke r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.lang.Class getServiceFactoryClass()>();

        if $r1 == null goto label1;

        $r3 = virtualinvoke r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.lang.Class getServiceFactoryClass()>();

        $r4 = staticinvoke <org.springframework.beans.BeanUtils: java.lang.Object instantiateClass(java.lang.Class)>($r3);

        $r5 = (javax.xml.rpc.ServiceFactory) $r4;

        return $r5;

     label1:
        $r2 = staticinvoke <javax.xml.rpc.ServiceFactory: javax.xml.rpc.ServiceFactory newInstance()>();

        return $r2;
    }

    protected javax.xml.rpc.Service createService(javax.xml.rpc.ServiceFactory) throws javax.xml.rpc.ServiceException
    {
        java.net.URL $r6, $r9, $r11, $r14, $r15;
        javax.xml.rpc.ServiceFactory r7;
        java.lang.String $r1, $r3;
        java.util.Properties $r5, $r12, $r17, $r19;
        java.lang.IllegalArgumentException $r23;
        org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory r0;
        javax.xml.rpc.Service $r8, $r10, $r13, $r18, $r21;
        java.lang.Class $r2, $r16, $r20, $r22;
        javax.xml.namespace.QName $r4;

        r0 := @this: org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory;

        r7 := @parameter0: javax.xml.rpc.ServiceFactory;

        $r1 = virtualinvoke r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.lang.String getServiceName()>();

        if $r1 != null goto label1;

        $r22 = virtualinvoke r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.lang.Class getJaxRpcServiceInterface()>();

        if $r22 != null goto label1;

        $r23 = new java.lang.IllegalArgumentException;

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Either \'serviceName\' or \'jaxRpcServiceInterface\' is required");

        throw $r23;

     label1:
        $r2 = virtualinvoke r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.lang.Class getJaxRpcServiceInterface()>();

        if $r2 == null goto label4;

        $r14 = virtualinvoke r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.net.URL getWsdlDocumentUrl()>();

        if $r14 != null goto label2;

        $r19 = virtualinvoke r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.util.Properties getJaxRpcServiceProperties()>();

        if $r19 == null goto label3;

     label2:
        $r15 = virtualinvoke r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.net.URL getWsdlDocumentUrl()>();

        $r16 = virtualinvoke r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.lang.Class getJaxRpcServiceInterface()>();

        $r17 = virtualinvoke r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.util.Properties getJaxRpcServiceProperties()>();

        $r18 = virtualinvoke r7.<javax.xml.rpc.ServiceFactory: javax.xml.rpc.Service loadService(java.net.URL,java.lang.Class,java.util.Properties)>($r15, $r16, $r17);

        return $r18;

     label3:
        $r20 = virtualinvoke r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.lang.Class getJaxRpcServiceInterface()>();

        $r21 = virtualinvoke r7.<javax.xml.rpc.ServiceFactory: javax.xml.rpc.Service loadService(java.lang.Class)>($r20);

        return $r21;

     label4:
        $r3 = virtualinvoke r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.lang.String getServiceName()>();

        $r4 = virtualinvoke r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: javax.xml.namespace.QName getQName(java.lang.String)>($r3);

        $r5 = virtualinvoke r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.util.Properties getJaxRpcServiceProperties()>();

        if $r5 == null goto label5;

        $r11 = virtualinvoke r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.net.URL getWsdlDocumentUrl()>();

        $r12 = virtualinvoke r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.util.Properties getJaxRpcServiceProperties()>();

        $r13 = virtualinvoke r7.<javax.xml.rpc.ServiceFactory: javax.xml.rpc.Service loadService(java.net.URL,javax.xml.namespace.QName,java.util.Properties)>($r11, $r4, $r12);

        return $r13;

     label5:
        $r6 = virtualinvoke r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.net.URL getWsdlDocumentUrl()>();

        if $r6 == null goto label6;

        $r9 = virtualinvoke r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.net.URL getWsdlDocumentUrl()>();

        $r10 = virtualinvoke r7.<javax.xml.rpc.ServiceFactory: javax.xml.rpc.Service createService(java.net.URL,javax.xml.namespace.QName)>($r9, $r4);

        return $r10;

     label6:
        $r8 = virtualinvoke r7.<javax.xml.rpc.ServiceFactory: javax.xml.rpc.Service createService(javax.xml.namespace.QName)>($r4);

        return $r8;
    }

    protected void postProcessJaxRpcService(javax.xml.rpc.Service)
    {
        org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory r0;
        org.springframework.remoting.jaxrpc.JaxRpcServicePostProcessor[] $r1;
        javax.xml.rpc.Service r2;
        int $i0, i1;
        org.springframework.remoting.jaxrpc.JaxRpcServicePostProcessor $r3;

        r0 := @this: org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory;

        r2 := @parameter0: javax.xml.rpc.Service;

        $r1 = virtualinvoke r0.<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: org.springframework.remoting.jaxrpc.JaxRpcServicePostProcessor[] getServicePostProcessors()>();

        if $r1 == null goto label3;

        i1 = 0;

        goto label2;

     label1:
        $r3 = $r1[i1];

        interfaceinvoke $r3.<org.springframework.remoting.jaxrpc.JaxRpcServicePostProcessor: void postProcessJaxRpcService(javax.xml.rpc.Service)>(r2);

        i1 = i1 + 1;

     label2:
        $i0 = lengthof $r1;

        if i1 < $i0 goto label1;

     label3:
        return;
    }
}
