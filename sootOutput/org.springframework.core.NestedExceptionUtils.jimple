public abstract class org.springframework.core.NestedExceptionUtils extends java.lang.Object
{

    public void <init>()
    {
        org.springframework.core.NestedExceptionUtils r0;

        r0 := @this: org.springframework.core.NestedExceptionUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String buildMessage(java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r0;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String r1, $r4;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Throwable;

        if r0 == null goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        if r1 == null goto label1;

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

     label1:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nested exception is ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label2:
        return r1;
    }
}
