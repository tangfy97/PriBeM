public final class org.apache.poi.hslf.record.SlideAtom extends org.apache.poi.hslf.record.RecordAtom
{
    private byte[] _header;
    private static long _type;
    public static final int MASTER_SLIDE_ID;
    public static final int USES_MASTER_SLIDE_ID;
    private int masterID;
    private int notesID;
    private boolean followMasterObjects;
    private boolean followMasterScheme;
    private boolean followMasterBackground;
    private org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom layoutAtom;
    private byte[] reserved;

    public int getMasterID()
    {
        int $i0;
        org.apache.poi.hslf.record.SlideAtom r0;

        r0 := @this: org.apache.poi.hslf.record.SlideAtom;

        $i0 = r0.<org.apache.poi.hslf.record.SlideAtom: int masterID>;

        return $i0;
    }

    public void setMasterID(int)
    {
        int i0;
        org.apache.poi.hslf.record.SlideAtom r0;

        r0 := @this: org.apache.poi.hslf.record.SlideAtom;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hslf.record.SlideAtom: int masterID> = i0;

        return;
    }

    public int getNotesID()
    {
        int $i0;
        org.apache.poi.hslf.record.SlideAtom r0;

        r0 := @this: org.apache.poi.hslf.record.SlideAtom;

        $i0 = r0.<org.apache.poi.hslf.record.SlideAtom: int notesID>;

        return $i0;
    }

    public org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom getSSlideLayoutAtom()
    {
        org.apache.poi.hslf.record.SlideAtom r0;
        org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom $r1;

        r0 := @this: org.apache.poi.hslf.record.SlideAtom;

        $r1 = r0.<org.apache.poi.hslf.record.SlideAtom: org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom layoutAtom>;

        return $r1;
    }

    public void setNotesID(int)
    {
        int i0;
        org.apache.poi.hslf.record.SlideAtom r0;

        r0 := @this: org.apache.poi.hslf.record.SlideAtom;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hslf.record.SlideAtom: int notesID> = i0;

        return;
    }

    public boolean getFollowMasterObjects()
    {
        org.apache.poi.hslf.record.SlideAtom r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hslf.record.SlideAtom;

        $z0 = r0.<org.apache.poi.hslf.record.SlideAtom: boolean followMasterObjects>;

        return $z0;
    }

    public boolean getFollowMasterScheme()
    {
        org.apache.poi.hslf.record.SlideAtom r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hslf.record.SlideAtom;

        $z0 = r0.<org.apache.poi.hslf.record.SlideAtom: boolean followMasterScheme>;

        return $z0;
    }

    public boolean getFollowMasterBackground()
    {
        org.apache.poi.hslf.record.SlideAtom r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hslf.record.SlideAtom;

        $z0 = r0.<org.apache.poi.hslf.record.SlideAtom: boolean followMasterBackground>;

        return $z0;
    }

    public void setFollowMasterObjects(boolean)
    {
        org.apache.poi.hslf.record.SlideAtom r0;
        boolean z0;

        r0 := @this: org.apache.poi.hslf.record.SlideAtom;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.hslf.record.SlideAtom: boolean followMasterObjects> = z0;

        return;
    }

    public void setFollowMasterScheme(boolean)
    {
        org.apache.poi.hslf.record.SlideAtom r0;
        boolean z0;

        r0 := @this: org.apache.poi.hslf.record.SlideAtom;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.hslf.record.SlideAtom: boolean followMasterScheme> = z0;

        return;
    }

    public void setFollowMasterBackground(boolean)
    {
        org.apache.poi.hslf.record.SlideAtom r0;
        boolean z0;

        r0 := @this: org.apache.poi.hslf.record.SlideAtom;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.hslf.record.SlideAtom: boolean followMasterBackground> = z0;

        return;
    }

    protected void <init>(byte[], int, int)
    {
        byte[] $r1, r2, $r3, $r5, $r6, $r7, $r8;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17;
        org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom $r4;
        org.apache.poi.hslf.record.SlideAtom r0;

        r0 := @this: org.apache.poi.hslf.record.SlideAtom;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        i17 := @parameter2: int;

        specialinvoke r0.<org.apache.poi.hslf.record.RecordAtom: void <init>()>();

        if i17 >= 30 goto label1;

        i17 = 30;

     label1:
        $r1 = newarray (byte)[8];

        r0.<org.apache.poi.hslf.record.SlideAtom: byte[] _header> = $r1;

        $r3 = r0.<org.apache.poi.hslf.record.SlideAtom: byte[] _header>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i0, $r3, 0, 8);

        $r8 = newarray (byte)[12];

        $i1 = i0 + 8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, $i1, $r8, 0, 12);

        $r4 = new org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom;

        specialinvoke $r4.<org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom: void <init>(byte[])>($r8);

        r0.<org.apache.poi.hslf.record.SlideAtom: org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom layoutAtom> = $r4;

        $i2 = i0 + 12;

        $i3 = $i2 + 8;

        $i4 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r2, $i3);

        r0.<org.apache.poi.hslf.record.SlideAtom: int masterID> = $i4;

        $i5 = i0 + 16;

        $i6 = $i5 + 8;

        $i7 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r2, $i6);

        r0.<org.apache.poi.hslf.record.SlideAtom: int notesID> = $i7;

        $i8 = i0 + 20;

        $i9 = $i8 + 8;

        $i10 = staticinvoke <org.apache.poi.util.LittleEndian: int getUShort(byte[],int)>(r2, $i9);

        $i11 = $i10 & 4;

        if $i11 != 4 goto label2;

        r0.<org.apache.poi.hslf.record.SlideAtom: boolean followMasterBackground> = 1;

        goto label3;

     label2:
        r0.<org.apache.poi.hslf.record.SlideAtom: boolean followMasterBackground> = 0;

     label3:
        $i12 = $i10 & 2;

        if $i12 != 2 goto label4;

        r0.<org.apache.poi.hslf.record.SlideAtom: boolean followMasterScheme> = 1;

        goto label5;

     label4:
        r0.<org.apache.poi.hslf.record.SlideAtom: boolean followMasterScheme> = 0;

     label5:
        $i13 = $i10 & 1;

        if $i13 != 1 goto label6;

        r0.<org.apache.poi.hslf.record.SlideAtom: boolean followMasterObjects> = 1;

        goto label7;

     label6:
        r0.<org.apache.poi.hslf.record.SlideAtom: boolean followMasterObjects> = 0;

     label7:
        $i14 = i17 - 30;

        $r5 = newarray (byte)[$i14];

        r0.<org.apache.poi.hslf.record.SlideAtom: byte[] reserved> = $r5;

        $i16 = i0 + 30;

        $r7 = r0.<org.apache.poi.hslf.record.SlideAtom: byte[] reserved>;

        $r6 = r0.<org.apache.poi.hslf.record.SlideAtom: byte[] reserved>;

        $i15 = lengthof $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, $i16, $r7, 0, $i15);

        return;
    }

    public void <init>()
    {
        byte[] $r1, $r2, $r3, $r4, r5, $r8;
        long $l0;
        org.apache.poi.hslf.record.SlideAtom r0;
        int $i1;
        org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom $r6, $r7;

        r0 := @this: org.apache.poi.hslf.record.SlideAtom;

        specialinvoke r0.<org.apache.poi.hslf.record.RecordAtom: void <init>()>();

        $r1 = newarray (byte)[8];

        r0.<org.apache.poi.hslf.record.SlideAtom: byte[] _header> = $r1;

        $r2 = r0.<org.apache.poi.hslf.record.SlideAtom: byte[] _header>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putUShort(byte[],int,int)>($r2, 0, 2);

        $r3 = r0.<org.apache.poi.hslf.record.SlideAtom: byte[] _header>;

        $l0 = <org.apache.poi.hslf.record.SlideAtom: long _type>;

        $i1 = (int) $l0;

        staticinvoke <org.apache.poi.util.LittleEndian: void putUShort(byte[],int,int)>($r3, 2, $i1);

        $r4 = r0.<org.apache.poi.hslf.record.SlideAtom: byte[] _header>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>($r4, 4, 24);

        r5 = newarray (byte)[12];

        $r6 = new org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom;

        specialinvoke $r6.<org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom: void <init>(byte[])>(r5);

        r0.<org.apache.poi.hslf.record.SlideAtom: org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom layoutAtom> = $r6;

        $r7 = r0.<org.apache.poi.hslf.record.SlideAtom: org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom layoutAtom>;

        virtualinvoke $r7.<org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom: void setGeometryType(int)>(16);

        r0.<org.apache.poi.hslf.record.SlideAtom: boolean followMasterObjects> = 1;

        r0.<org.apache.poi.hslf.record.SlideAtom: boolean followMasterScheme> = 1;

        r0.<org.apache.poi.hslf.record.SlideAtom: boolean followMasterBackground> = 1;

        r0.<org.apache.poi.hslf.record.SlideAtom: int masterID> = -2147483648;

        r0.<org.apache.poi.hslf.record.SlideAtom: int notesID> = 0;

        $r8 = newarray (byte)[2];

        r0.<org.apache.poi.hslf.record.SlideAtom: byte[] reserved> = $r8;

        return;
    }

    public long getRecordType()
    {
        long $l0;
        org.apache.poi.hslf.record.SlideAtom r0;

        r0 := @this: org.apache.poi.hslf.record.SlideAtom;

        $l0 = <org.apache.poi.hslf.record.SlideAtom: long _type>;

        return $l0;
    }

    public void writeOut(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r0;
        byte[] $r2, $r4;
        org.apache.poi.hslf.record.SlideAtom r1;
        short s4;
        int $i0, $i1, $i2, $i3;
        org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom $r3;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.poi.hslf.record.SlideAtom;

        r0 := @parameter0: java.io.OutputStream;

        $r2 = r1.<org.apache.poi.hslf.record.SlideAtom: byte[] _header>;

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r2);

        $r3 = r1.<org.apache.poi.hslf.record.SlideAtom: org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom layoutAtom>;

        virtualinvoke $r3.<org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom: void writeOut(java.io.OutputStream)>(r0);

        $i0 = r1.<org.apache.poi.hslf.record.SlideAtom: int masterID>;

        staticinvoke <org.apache.poi.hslf.record.SlideAtom: void writeLittleEndian(int,java.io.OutputStream)>($i0, r0);

        $i1 = r1.<org.apache.poi.hslf.record.SlideAtom: int notesID>;

        staticinvoke <org.apache.poi.hslf.record.SlideAtom: void writeLittleEndian(int,java.io.OutputStream)>($i1, r0);

        s4 = 0;

        $z0 = r1.<org.apache.poi.hslf.record.SlideAtom: boolean followMasterObjects>;

        if $z0 == 0 goto label1;

        s4 = (short) 1;

     label1:
        $z1 = r1.<org.apache.poi.hslf.record.SlideAtom: boolean followMasterScheme>;

        if $z1 == 0 goto label2;

        $i3 = s4 + 2;

        s4 = (short) $i3;

     label2:
        $z2 = r1.<org.apache.poi.hslf.record.SlideAtom: boolean followMasterBackground>;

        if $z2 == 0 goto label3;

        $i2 = s4 + 4;

        s4 = (short) $i2;

     label3:
        staticinvoke <org.apache.poi.hslf.record.SlideAtom: void writeLittleEndian(short,java.io.OutputStream)>(s4, r0);

        $r4 = r1.<org.apache.poi.hslf.record.SlideAtom: byte[] reserved>;

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r4);

        return;
    }

    static void <clinit>()
    {
        <org.apache.poi.hslf.record.SlideAtom: int USES_MASTER_SLIDE_ID> = -2147483648;

        <org.apache.poi.hslf.record.SlideAtom: int MASTER_SLIDE_ID> = 0;

        <org.apache.poi.hslf.record.SlideAtom: long _type> = 1007L;

        return;
    }
}
