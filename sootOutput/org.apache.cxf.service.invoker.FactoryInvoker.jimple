public class org.apache.cxf.service.invoker.FactoryInvoker extends org.apache.cxf.service.invoker.AbstractInvoker
{
    static final java.util.ResourceBundle BUNDLE;
    private org.apache.cxf.service.invoker.Factory factory;

    public void <init>(org.apache.cxf.service.invoker.Factory)
    {
        org.apache.cxf.service.invoker.FactoryInvoker r0;
        org.apache.cxf.service.invoker.Factory r1;

        r0 := @this: org.apache.cxf.service.invoker.FactoryInvoker;

        r1 := @parameter0: org.apache.cxf.service.invoker.Factory;

        specialinvoke r0.<org.apache.cxf.service.invoker.AbstractInvoker: void <init>()>();

        r0.<org.apache.cxf.service.invoker.FactoryInvoker: org.apache.cxf.service.invoker.Factory factory> = r1;

        return;
    }

    public void <init>()
    {
        org.apache.cxf.service.invoker.FactoryInvoker r0;

        r0 := @this: org.apache.cxf.service.invoker.FactoryInvoker;

        specialinvoke r0.<org.apache.cxf.service.invoker.AbstractInvoker: void <init>()>();

        return;
    }

    public void setFactory(org.apache.cxf.service.invoker.Factory)
    {
        org.apache.cxf.service.invoker.FactoryInvoker r0;
        org.apache.cxf.service.invoker.Factory r1;

        r0 := @this: org.apache.cxf.service.invoker.FactoryInvoker;

        r1 := @parameter0: org.apache.cxf.service.invoker.Factory;

        r0.<org.apache.cxf.service.invoker.FactoryInvoker: org.apache.cxf.service.invoker.Factory factory> = r1;

        return;
    }

    public java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)
    {
        java.lang.Throwable $r4;
        java.lang.Object[] $r7;
        org.apache.cxf.service.invoker.FactoryInvoker r0;
        org.apache.cxf.common.i18n.Message $r6;
        org.apache.cxf.message.Exchange r1;
        org.apache.cxf.service.invoker.Factory $r2;
        org.apache.cxf.interceptor.Fault $r5, $r9;
        java.util.ResourceBundle $r8;
        java.lang.Object $r3;

        r0 := @this: org.apache.cxf.service.invoker.FactoryInvoker;

        r1 := @parameter0: org.apache.cxf.message.Exchange;

     label1:
        $r2 = r0.<org.apache.cxf.service.invoker.FactoryInvoker: org.apache.cxf.service.invoker.Factory factory>;

        $r3 = interfaceinvoke $r2.<org.apache.cxf.service.invoker.Factory: java.lang.Object create(org.apache.cxf.message.Exchange)>(r1);

     label2:
        return $r3;

     label3:
        $r9 := @caughtexception;

        throw $r9;

     label4:
        $r4 := @caughtexception;

        $r5 = new org.apache.cxf.interceptor.Fault;

        $r6 = new org.apache.cxf.common.i18n.Message;

        $r8 = <org.apache.cxf.service.invoker.FactoryInvoker: java.util.ResourceBundle BUNDLE>;

        $r7 = newarray (java.lang.Object)[0];

        specialinvoke $r6.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("CREATE_SERVICE_OBJECT_EXC", $r8, $r7);

        specialinvoke $r5.<org.apache.cxf.interceptor.Fault: void <init>(org.apache.cxf.common.i18n.Message,java.lang.Throwable)>($r6, $r4);

        throw $r5;

        catch org.apache.cxf.interceptor.Fault from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void releaseServiceObject(org.apache.cxf.message.Exchange, java.lang.Object)
    {
        org.apache.cxf.service.invoker.FactoryInvoker r0;
        java.lang.Object r2;
        org.apache.cxf.message.Exchange r1;
        org.apache.cxf.service.invoker.Factory $r3;

        r0 := @this: org.apache.cxf.service.invoker.FactoryInvoker;

        r1 := @parameter0: org.apache.cxf.message.Exchange;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.cxf.service.invoker.FactoryInvoker: org.apache.cxf.service.invoker.Factory factory>;

        interfaceinvoke $r3.<org.apache.cxf.service.invoker.Factory: void release(org.apache.cxf.message.Exchange,java.lang.Object)>(r1, r2);

        return;
    }

    static void <clinit>()
    {
        java.util.ResourceBundle $r0;

        $r0 = staticinvoke <org.apache.cxf.common.i18n.BundleUtils: java.util.ResourceBundle getBundle(java.lang.Class)>(class "Lorg/apache/cxf/service/invoker/FactoryInvoker;");

        <org.apache.cxf.service.invoker.FactoryInvoker: java.util.ResourceBundle BUNDLE> = $r0;

        return;
    }
}
