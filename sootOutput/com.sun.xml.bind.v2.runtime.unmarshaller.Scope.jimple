public final class com.sun.xml.bind.v2.runtime.unmarshaller.Scope extends java.lang.Object
{
    public final com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext context;
    private java.lang.Object bean;
    private com.sun.xml.bind.v2.runtime.reflect.Accessor acc;
    private java.lang.Object pack;
    private com.sun.xml.bind.v2.runtime.reflect.Lister lister;
    static final boolean $assertionsDisabled;

    void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext)
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.Scope r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.Scope;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext context> = r1;

        return;
    }

    public boolean hasStarted()
    {
        java.lang.Object $r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.Scope r0;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.Scope;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: java.lang.Object bean>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void reset()
    {
        java.lang.Object $r1;
        java.lang.AssertionError $r2;
        com.sun.xml.bind.v2.runtime.unmarshaller.Scope r0;
        boolean $z0, $z1;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.Scope;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: java.lang.Object bean>;

        if $r1 != null goto label2;

        $z0 = <com.sun.xml.bind.v2.runtime.unmarshaller.Scope: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: boolean clean()>();

        if $z1 != 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        return;

     label2:
        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: java.lang.Object bean> = null;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: com.sun.xml.bind.v2.runtime.reflect.Accessor acc> = null;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: java.lang.Object pack> = null;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: com.sun.xml.bind.v2.runtime.reflect.Lister lister> = null;

        return;
    }

    public void finish() throws com.sun.xml.bind.api.AccessorException
    {
        com.sun.xml.bind.v2.runtime.reflect.Lister $r5;
        java.lang.AssertionError $r1;
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r2;
        java.lang.Object $r3, $r4;
        com.sun.xml.bind.v2.runtime.unmarshaller.Scope r0;
        boolean $z0, $z1, $z2;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.Scope;

        $z0 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: boolean hasStarted()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: com.sun.xml.bind.v2.runtime.reflect.Lister lister>;

        $r4 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: java.lang.Object pack>;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: java.lang.Object bean>;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: com.sun.xml.bind.v2.runtime.reflect.Accessor acc>;

        virtualinvoke $r5.<com.sun.xml.bind.v2.runtime.reflect.Lister: void endPacking(java.lang.Object,java.lang.Object,com.sun.xml.bind.v2.runtime.reflect.Accessor)>($r4, $r3, $r2);

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: void reset()>();

     label1:
        $z1 = <com.sun.xml.bind.v2.runtime.unmarshaller.Scope: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $z2 = specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: boolean clean()>();

        if $z2 != 0 goto label2;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label2:
        return;
    }

    private boolean clean()
    {
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r2;
        java.lang.Object $r1, $r3;
        com.sun.xml.bind.v2.runtime.reflect.Lister $r4;
        com.sun.xml.bind.v2.runtime.unmarshaller.Scope r0;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.Scope;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: java.lang.Object bean>;

        if $r1 != null goto label1;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: com.sun.xml.bind.v2.runtime.reflect.Accessor acc>;

        if $r2 != null goto label1;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: java.lang.Object pack>;

        if $r3 != null goto label1;

        $r4 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: com.sun.xml.bind.v2.runtime.reflect.Lister lister>;

        if $r4 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void add(com.sun.xml.bind.v2.runtime.reflect.Accessor, com.sun.xml.bind.v2.runtime.reflect.Lister, java.lang.Object) throws org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.reflect.Lister r1, $r11;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State $r5;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext $r4;
        com.sun.xml.bind.v2.runtime.reflect.Accessor r7, $r12;
        java.lang.Object r2, $r3, $r6, $r8, $r9;
        com.sun.xml.bind.v2.runtime.unmarshaller.Scope r0;
        com.sun.xml.bind.api.AccessorException $r10;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.Scope;

        r7 := @parameter0: com.sun.xml.bind.v2.runtime.reflect.Accessor;

        r1 := @parameter1: com.sun.xml.bind.v2.runtime.reflect.Lister;

        r2 := @parameter2: java.lang.Object;

     label1:
        $z0 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: boolean hasStarted()>();

        if $z0 != 0 goto label2;

        $r4 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext context>;

        $r5 = virtualinvoke $r4.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State getCurrentState()>();

        $r6 = $r5.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: java.lang.Object target>;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: java.lang.Object bean> = $r6;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: com.sun.xml.bind.v2.runtime.reflect.Accessor acc> = r7;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: com.sun.xml.bind.v2.runtime.reflect.Lister lister> = r1;

        $r8 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: java.lang.Object bean>;

        $r9 = virtualinvoke r1.<com.sun.xml.bind.v2.runtime.reflect.Lister: java.lang.Object startPacking(java.lang.Object,com.sun.xml.bind.v2.runtime.reflect.Accessor)>($r8, r7);

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: java.lang.Object pack> = $r9;

     label2:
        $r3 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: java.lang.Object pack>;

        virtualinvoke r1.<com.sun.xml.bind.v2.runtime.reflect.Lister: void addToPack(java.lang.Object,java.lang.Object)>($r3, r2);

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

        staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.Loader: void handleGenericException(java.lang.Exception,boolean)>($r10, 1);

        $r11 = staticinvoke <com.sun.xml.bind.v2.runtime.reflect.Lister: com.sun.xml.bind.v2.runtime.reflect.Lister getErrorInstance()>();

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: com.sun.xml.bind.v2.runtime.reflect.Lister lister> = $r11;

        $r12 = staticinvoke <com.sun.xml.bind.v2.runtime.reflect.Accessor: com.sun.xml.bind.v2.runtime.reflect.Accessor getErrorInstance()>();

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: com.sun.xml.bind.v2.runtime.reflect.Accessor acc> = $r12;

     label5:
        return;

        catch com.sun.xml.bind.api.AccessorException from label1 to label3 with label4;
    }

    public void start(com.sun.xml.bind.v2.runtime.reflect.Accessor, com.sun.xml.bind.v2.runtime.reflect.Lister) throws org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.reflect.Lister r5, $r9;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State $r2;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext $r1;
        com.sun.xml.bind.v2.runtime.reflect.Accessor r4, $r10;
        java.lang.Object $r3, $r6, $r7;
        com.sun.xml.bind.v2.runtime.unmarshaller.Scope r0;
        com.sun.xml.bind.api.AccessorException $r8;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.Scope;

        r4 := @parameter0: com.sun.xml.bind.v2.runtime.reflect.Accessor;

        r5 := @parameter1: com.sun.xml.bind.v2.runtime.reflect.Lister;

     label1:
        $z0 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: boolean hasStarted()>();

        if $z0 != 0 goto label2;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext context>;

        $r2 = virtualinvoke $r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State getCurrentState()>();

        $r3 = $r2.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: java.lang.Object target>;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: java.lang.Object bean> = $r3;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: com.sun.xml.bind.v2.runtime.reflect.Accessor acc> = r4;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: com.sun.xml.bind.v2.runtime.reflect.Lister lister> = r5;

        $r6 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: java.lang.Object bean>;

        $r7 = virtualinvoke r5.<com.sun.xml.bind.v2.runtime.reflect.Lister: java.lang.Object startPacking(java.lang.Object,com.sun.xml.bind.v2.runtime.reflect.Accessor)>($r6, r4);

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: java.lang.Object pack> = $r7;

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.Loader: void handleGenericException(java.lang.Exception,boolean)>($r8, 1);

        $r9 = staticinvoke <com.sun.xml.bind.v2.runtime.reflect.Lister: com.sun.xml.bind.v2.runtime.reflect.Lister getErrorInstance()>();

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: com.sun.xml.bind.v2.runtime.reflect.Lister lister> = $r9;

        $r10 = staticinvoke <com.sun.xml.bind.v2.runtime.reflect.Accessor: com.sun.xml.bind.v2.runtime.reflect.Accessor getErrorInstance()>();

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Scope: com.sun.xml.bind.v2.runtime.reflect.Accessor acc> = $r10;

     label4:
        return;

        catch com.sun.xml.bind.api.AccessorException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lcom/sun/xml/bind/v2/runtime/unmarshaller/Scope;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.sun.xml.bind.v2.runtime.unmarshaller.Scope: boolean $assertionsDisabled> = $z1;

        return;
    }
}
