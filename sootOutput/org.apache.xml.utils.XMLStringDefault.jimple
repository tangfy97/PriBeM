public class org.apache.xml.utils.XMLStringDefault extends java.lang.Object implements org.apache.xml.utils.XMLString
{
    private java.lang.String m_str;

    public void <init>(java.lang.String)
    {
        org.apache.xml.utils.XMLStringDefault r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.XMLStringDefault;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xml.utils.XMLStringDefault: java.lang.String m_str> = r1;

        return;
    }

    public void dispatchCharactersEvents(org.xml.sax.ContentHandler) throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.XMLStringDefault r0;
        org.xml.sax.ContentHandler r1;

        r0 := @this: org.apache.xml.utils.XMLStringDefault;

        r1 := @parameter0: org.xml.sax.ContentHandler;

        return;
    }

    public void dispatchAsComment(org.xml.sax.ext.LexicalHandler) throws org.xml.sax.SAXException
    {
        org.xml.sax.ext.LexicalHandler r1;
        org.apache.xml.utils.XMLStringDefault r0;

        r0 := @this: org.apache.xml.utils.XMLStringDefault;

        r1 := @parameter0: org.xml.sax.ext.LexicalHandler;

        return;
    }

    public org.apache.xml.utils.XMLString fixWhiteSpace(boolean, boolean, boolean)
    {
        org.apache.xml.utils.XMLStringDefault $r0, r1;
        java.lang.String $r2, $r3;
        boolean z0, z1, z2;

        r1 := @this: org.apache.xml.utils.XMLStringDefault;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        $r0 = new org.apache.xml.utils.XMLStringDefault;

        $r2 = r1.<org.apache.xml.utils.XMLStringDefault: java.lang.String m_str>;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        specialinvoke $r0.<org.apache.xml.utils.XMLStringDefault: void <init>(java.lang.String)>($r3);

        return $r0;
    }

    public int length()
    {
        int $i0;
        org.apache.xml.utils.XMLStringDefault r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xml.utils.XMLStringDefault;

        $r1 = r0.<org.apache.xml.utils.XMLStringDefault: java.lang.String m_str>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        return $i0;
    }

    public char charAt(int)
    {
        org.apache.xml.utils.XMLStringDefault r0;
        int i0;
        char $c1;
        java.lang.String $r1;

        r0 := @this: org.apache.xml.utils.XMLStringDefault;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xml.utils.XMLStringDefault: java.lang.String m_str>;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i0);

        return $c1;
    }

    public void getChars(int, int, char[], int)
    {
        org.apache.xml.utils.XMLStringDefault r1;
        char $c4;
        int i0, i1, i2, $i3, i5, i6;
        char[] r0;
        java.lang.String $r2;

        r1 := @this: org.apache.xml.utils.XMLStringDefault;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        r0 := @parameter2: char[];

        i0 := @parameter3: int;

        i5 = i0;

        i6 = i1;

        goto label2;

     label1:
        $i3 = i5;

        i5 = i5 + 1;

        $r2 = r1.<org.apache.xml.utils.XMLStringDefault: java.lang.String m_str>;

        $c4 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i6);

        r0[$i3] = $c4;

        i6 = i6 + 1;

     label2:
        if i6 < i2 goto label1;

        return;
    }

    public boolean equals(org.apache.xml.utils.XMLString)
    {
        org.apache.xml.utils.XMLStringDefault r0;
        java.lang.String $r2, $r3;
        org.apache.xml.utils.XMLString r1;
        boolean $z0;

        r0 := @this: org.apache.xml.utils.XMLStringDefault;

        r1 := @parameter0: org.apache.xml.utils.XMLString;

        $r2 = r0.<org.apache.xml.utils.XMLStringDefault: java.lang.String m_str>;

        $r3 = interfaceinvoke r1.<org.apache.xml.utils.XMLString: java.lang.String toString()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.xml.utils.XMLStringDefault r0;
        java.lang.Object r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.apache.xml.utils.XMLStringDefault;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.xml.utils.XMLStringDefault: java.lang.String m_str>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean equalsIgnoreCase(java.lang.String)
    {
        org.apache.xml.utils.XMLStringDefault r0;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.xml.utils.XMLStringDefault;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xml.utils.XMLStringDefault: java.lang.String m_str>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        return $z0;
    }

    public int compareTo(org.apache.xml.utils.XMLString)
    {
        org.apache.xml.utils.XMLStringDefault r0;
        int $i0;
        java.lang.String $r2, $r3;
        org.apache.xml.utils.XMLString r1;

        r0 := @this: org.apache.xml.utils.XMLStringDefault;

        r1 := @parameter0: org.apache.xml.utils.XMLString;

        $r2 = r0.<org.apache.xml.utils.XMLStringDefault: java.lang.String m_str>;

        $r3 = interfaceinvoke r1.<org.apache.xml.utils.XMLString: java.lang.String toString()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int compareTo(java.lang.String)>($r3);

        return $i0;
    }

    public int compareToIgnoreCase(org.apache.xml.utils.XMLString)
    {
        org.apache.xml.utils.XMLStringDefault r0;
        int $i0;
        java.lang.String $r2, $r3;
        org.apache.xml.utils.XMLString r1;

        r0 := @this: org.apache.xml.utils.XMLStringDefault;

        r1 := @parameter0: org.apache.xml.utils.XMLString;

        $r2 = r0.<org.apache.xml.utils.XMLStringDefault: java.lang.String m_str>;

        $r3 = interfaceinvoke r1.<org.apache.xml.utils.XMLString: java.lang.String toString()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int compareToIgnoreCase(java.lang.String)>($r3);

        return $i0;
    }

    public boolean startsWith(java.lang.String, int)
    {
        org.apache.xml.utils.XMLStringDefault r0;
        int i0;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.xml.utils.XMLStringDefault;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.xml.utils.XMLStringDefault: java.lang.String m_str>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String,int)>(r1, i0);

        return $z0;
    }

    public boolean startsWith(org.apache.xml.utils.XMLString, int)
    {
        org.apache.xml.utils.XMLStringDefault r0;
        int i0;
        java.lang.String $r2, $r3;
        org.apache.xml.utils.XMLString r1;
        boolean $z0;

        r0 := @this: org.apache.xml.utils.XMLStringDefault;

        r1 := @parameter0: org.apache.xml.utils.XMLString;

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.xml.utils.XMLStringDefault: java.lang.String m_str>;

        $r3 = interfaceinvoke r1.<org.apache.xml.utils.XMLString: java.lang.String toString()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String,int)>($r3, i0);

        return $z0;
    }

    public boolean startsWith(java.lang.String)
    {
        org.apache.xml.utils.XMLStringDefault r0;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.xml.utils.XMLStringDefault;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xml.utils.XMLStringDefault: java.lang.String m_str>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>(r1);

        return $z0;
    }

    public boolean startsWith(org.apache.xml.utils.XMLString)
    {
        org.apache.xml.utils.XMLStringDefault r0;
        java.lang.String $r2, $r3;
        org.apache.xml.utils.XMLString r1;
        boolean $z0;

        r0 := @this: org.apache.xml.utils.XMLStringDefault;

        r1 := @parameter0: org.apache.xml.utils.XMLString;

        $r2 = r0.<org.apache.xml.utils.XMLStringDefault: java.lang.String m_str>;

        $r3 = interfaceinvoke r1.<org.apache.xml.utils.XMLString: java.lang.String toString()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r3);

        return $z0;
    }

    public boolean endsWith(java.lang.String)
    {
        org.apache.xml.utils.XMLStringDefault r0;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.xml.utils.XMLStringDefault;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xml.utils.XMLStringDefault: java.lang.String m_str>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>(r1);

        return $z0;
    }

    public int hashCode()
    {
        int $i0;
        org.apache.xml.utils.XMLStringDefault r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xml.utils.XMLStringDefault;

        $r1 = r0.<org.apache.xml.utils.XMLStringDefault: java.lang.String m_str>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public int indexOf(int)
    {
        org.apache.xml.utils.XMLStringDefault r0;
        int i0, $i1;
        java.lang.String $r1;

        r0 := @this: org.apache.xml.utils.XMLStringDefault;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xml.utils.XMLStringDefault: java.lang.String m_str>;

        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(i0);

        return $i1;
    }

    public int indexOf(int, int)
    {
        org.apache.xml.utils.XMLStringDefault r0;
        int i0, i1, $i2;
        java.lang.String $r1;

        r0 := @this: org.apache.xml.utils.XMLStringDefault;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.xml.utils.XMLStringDefault: java.lang.String m_str>;

        $i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int,int)>(i0, i1);

        return $i2;
    }

    public int lastIndexOf(int)
    {
        org.apache.xml.utils.XMLStringDefault r0;
        int i0, $i1;
        java.lang.String $r1;

        r0 := @this: org.apache.xml.utils.XMLStringDefault;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xml.utils.XMLStringDefault: java.lang.String m_str>;

        $i1 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int)>(i0);

        return $i1;
    }

    public int lastIndexOf(int, int)
    {
        org.apache.xml.utils.XMLStringDefault r0;
        int i0, i1, $i2;
        java.lang.String $r1;

        r0 := @this: org.apache.xml.utils.XMLStringDefault;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.xml.utils.XMLStringDefault: java.lang.String m_str>;

        $i2 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int,int)>(i0, i1);

        return $i2;
    }

    public int indexOf(java.lang.String)
    {
        org.apache.xml.utils.XMLStringDefault r0;
        int $i0;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.xml.utils.XMLStringDefault;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xml.utils.XMLStringDefault: java.lang.String m_str>;

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>(r1);

        return $i0;
    }

    public int indexOf(org.apache.xml.utils.XMLString)
    {
        org.apache.xml.utils.XMLStringDefault r0;
        int $i0;
        java.lang.String $r2, $r3;
        org.apache.xml.utils.XMLString r1;

        r0 := @this: org.apache.xml.utils.XMLStringDefault;

        r1 := @parameter0: org.apache.xml.utils.XMLString;

        $r2 = r0.<org.apache.xml.utils.XMLStringDefault: java.lang.String m_str>;

        $r3 = interfaceinvoke r1.<org.apache.xml.utils.XMLString: java.lang.String toString()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>($r3);

        return $i0;
    }

    public int indexOf(java.lang.String, int)
    {
        org.apache.xml.utils.XMLStringDefault r0;
        int i0, $i1;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.xml.utils.XMLStringDefault;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.xml.utils.XMLStringDefault: java.lang.String m_str>;

        $i1 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String,int)>(r1, i0);

        return $i1;
    }

    public int lastIndexOf(java.lang.String)
    {
        org.apache.xml.utils.XMLStringDefault r0;
        int $i0;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.xml.utils.XMLStringDefault;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xml.utils.XMLStringDefault: java.lang.String m_str>;

        $i0 = virtualinvoke $r2.<java.lang.String: int lastIndexOf(java.lang.String)>(r1);

        return $i0;
    }

    public int lastIndexOf(java.lang.String, int)
    {
        org.apache.xml.utils.XMLStringDefault r0;
        int i0, $i1;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.xml.utils.XMLStringDefault;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.xml.utils.XMLStringDefault: java.lang.String m_str>;

        $i1 = virtualinvoke $r2.<java.lang.String: int lastIndexOf(java.lang.String,int)>(r1, i0);

        return $i1;
    }

    public org.apache.xml.utils.XMLString substring(int)
    {
        org.apache.xml.utils.XMLStringDefault $r0, r1;
        int i0;
        java.lang.String $r2, $r3;

        r1 := @this: org.apache.xml.utils.XMLStringDefault;

        i0 := @parameter0: int;

        $r0 = new org.apache.xml.utils.XMLStringDefault;

        $r2 = r1.<org.apache.xml.utils.XMLStringDefault: java.lang.String m_str>;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>(i0);

        specialinvoke $r0.<org.apache.xml.utils.XMLStringDefault: void <init>(java.lang.String)>($r3);

        return $r0;
    }

    public org.apache.xml.utils.XMLString substring(int, int)
    {
        org.apache.xml.utils.XMLStringDefault $r0, r1;
        int i0, i1;
        java.lang.String $r2, $r3;

        r1 := @this: org.apache.xml.utils.XMLStringDefault;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new org.apache.xml.utils.XMLStringDefault;

        $r2 = r1.<org.apache.xml.utils.XMLStringDefault: java.lang.String m_str>;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);

        specialinvoke $r0.<org.apache.xml.utils.XMLStringDefault: void <init>(java.lang.String)>($r3);

        return $r0;
    }

    public org.apache.xml.utils.XMLString concat(java.lang.String)
    {
        org.apache.xml.utils.XMLStringDefault $r0, r1;
        java.lang.String r2, $r3, $r4;

        r1 := @this: org.apache.xml.utils.XMLStringDefault;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.apache.xml.utils.XMLStringDefault;

        $r3 = r1.<org.apache.xml.utils.XMLStringDefault: java.lang.String m_str>;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String concat(java.lang.String)>(r2);

        specialinvoke $r0.<org.apache.xml.utils.XMLStringDefault: void <init>(java.lang.String)>($r4);

        return $r0;
    }

    public org.apache.xml.utils.XMLString toLowerCase(java.util.Locale)
    {
        org.apache.xml.utils.XMLStringDefault $r0, r1;
        java.util.Locale r2;
        java.lang.String $r3, $r4;

        r1 := @this: org.apache.xml.utils.XMLStringDefault;

        r2 := @parameter0: java.util.Locale;

        $r0 = new org.apache.xml.utils.XMLStringDefault;

        $r3 = r1.<org.apache.xml.utils.XMLStringDefault: java.lang.String m_str>;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>(r2);

        specialinvoke $r0.<org.apache.xml.utils.XMLStringDefault: void <init>(java.lang.String)>($r4);

        return $r0;
    }

    public org.apache.xml.utils.XMLString toLowerCase()
    {
        org.apache.xml.utils.XMLStringDefault $r0, r1;
        java.lang.String $r2, $r3;

        r1 := @this: org.apache.xml.utils.XMLStringDefault;

        $r0 = new org.apache.xml.utils.XMLStringDefault;

        $r2 = r1.<org.apache.xml.utils.XMLStringDefault: java.lang.String m_str>;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

        specialinvoke $r0.<org.apache.xml.utils.XMLStringDefault: void <init>(java.lang.String)>($r3);

        return $r0;
    }

    public org.apache.xml.utils.XMLString toUpperCase(java.util.Locale)
    {
        org.apache.xml.utils.XMLStringDefault $r0, r1;
        java.util.Locale r2;
        java.lang.String $r3, $r4;

        r1 := @this: org.apache.xml.utils.XMLStringDefault;

        r2 := @parameter0: java.util.Locale;

        $r0 = new org.apache.xml.utils.XMLStringDefault;

        $r3 = r1.<org.apache.xml.utils.XMLStringDefault: java.lang.String m_str>;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>(r2);

        specialinvoke $r0.<org.apache.xml.utils.XMLStringDefault: void <init>(java.lang.String)>($r4);

        return $r0;
    }

    public org.apache.xml.utils.XMLString toUpperCase()
    {
        org.apache.xml.utils.XMLStringDefault $r0, r1;
        java.lang.String $r2, $r3;

        r1 := @this: org.apache.xml.utils.XMLStringDefault;

        $r0 = new org.apache.xml.utils.XMLStringDefault;

        $r2 = r1.<org.apache.xml.utils.XMLStringDefault: java.lang.String m_str>;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase()>();

        specialinvoke $r0.<org.apache.xml.utils.XMLStringDefault: void <init>(java.lang.String)>($r3);

        return $r0;
    }

    public org.apache.xml.utils.XMLString trim()
    {
        org.apache.xml.utils.XMLStringDefault $r0, r1;
        java.lang.String $r2, $r3;

        r1 := @this: org.apache.xml.utils.XMLStringDefault;

        $r0 = new org.apache.xml.utils.XMLStringDefault;

        $r2 = r1.<org.apache.xml.utils.XMLStringDefault: java.lang.String m_str>;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        specialinvoke $r0.<org.apache.xml.utils.XMLStringDefault: void <init>(java.lang.String)>($r3);

        return $r0;
    }

    public java.lang.String toString()
    {
        org.apache.xml.utils.XMLStringDefault r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xml.utils.XMLStringDefault;

        $r1 = r0.<org.apache.xml.utils.XMLStringDefault: java.lang.String m_str>;

        return $r1;
    }

    public boolean hasString()
    {
        org.apache.xml.utils.XMLStringDefault r0;

        r0 := @this: org.apache.xml.utils.XMLStringDefault;

        return 1;
    }

    public double toDouble()
    {
        org.apache.xml.utils.XMLStringDefault r0;
        java.lang.Double $r2;
        java.lang.NumberFormatException $r3;
        java.lang.String $r1;
        double $d0;

        r0 := @this: org.apache.xml.utils.XMLStringDefault;

     label1:
        $r1 = r0.<org.apache.xml.utils.XMLStringDefault: java.lang.String m_str>;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>($r1);

        $d0 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        return $d0;

     label2:
        $r3 := @caughtexception;

        return #NaN;

        catch java.lang.NumberFormatException from label1 to label2 with label2;
    }
}
