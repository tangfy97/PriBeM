public abstract class org.apache.poi.openxml4j.opc.Package extends org.apache.poi.openxml4j.opc.OPCPackage
{

    protected void <init>(org.apache.poi.openxml4j.opc.PackageAccess)
    {
        org.apache.poi.openxml4j.opc.PackageAccess r1;
        org.apache.poi.openxml4j.opc.Package r0;

        r0 := @this: org.apache.poi.openxml4j.opc.Package;

        r1 := @parameter0: org.apache.poi.openxml4j.opc.PackageAccess;

        specialinvoke r0.<org.apache.poi.openxml4j.opc.OPCPackage: void <init>(org.apache.poi.openxml4j.opc.PackageAccess)>(r1);

        return;
    }

    public static org.apache.poi.openxml4j.opc.Package open(java.lang.String) throws org.apache.poi.openxml4j.exceptions.InvalidFormatException
    {
        java.lang.String r0;
        org.apache.poi.openxml4j.opc.PackageAccess $r1;
        org.apache.poi.openxml4j.opc.Package $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.poi.openxml4j.opc.Package: org.apache.poi.openxml4j.opc.PackageAccess defaultPackageAccess>;

        $r2 = staticinvoke <org.apache.poi.openxml4j.opc.Package: org.apache.poi.openxml4j.opc.Package open(java.lang.String,org.apache.poi.openxml4j.opc.PackageAccess)>(r0, $r1);

        return $r2;
    }

    public static org.apache.poi.openxml4j.opc.Package open(java.lang.String, org.apache.poi.openxml4j.opc.PackageAccess) throws org.apache.poi.openxml4j.exceptions.InvalidFormatException
    {
        org.apache.poi.openxml4j.opc.Package $r3;
        org.apache.poi.openxml4j.opc.OPCPackage $r2;
        java.lang.String r0;
        org.apache.poi.openxml4j.opc.PackageAccess r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.apache.poi.openxml4j.opc.PackageAccess;

        $r2 = staticinvoke <org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.OPCPackage open(java.lang.String,org.apache.poi.openxml4j.opc.PackageAccess)>(r0, r1);

        $r3 = (org.apache.poi.openxml4j.opc.Package) $r2;

        return $r3;
    }

    public static org.apache.poi.openxml4j.opc.Package open(java.io.InputStream) throws org.apache.poi.openxml4j.exceptions.InvalidFormatException, java.io.IOException
    {
        org.apache.poi.openxml4j.opc.Package $r2;
        org.apache.poi.openxml4j.opc.OPCPackage $r1;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.OPCPackage open(java.io.InputStream)>(r0);

        $r2 = (org.apache.poi.openxml4j.opc.Package) $r1;

        return $r2;
    }

    public static org.apache.poi.openxml4j.opc.Package openOrCreate(java.io.File) throws org.apache.poi.openxml4j.exceptions.InvalidFormatException
    {
        org.apache.poi.openxml4j.opc.Package $r2;
        org.apache.poi.openxml4j.opc.OPCPackage $r1;
        java.io.File r0;

        r0 := @parameter0: java.io.File;

        $r1 = staticinvoke <org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.OPCPackage openOrCreate(java.io.File)>(r0);

        $r2 = (org.apache.poi.openxml4j.opc.Package) $r1;

        return $r2;
    }

    public static org.apache.poi.openxml4j.opc.Package create(java.lang.String)
    {
        java.lang.String r0;
        org.apache.poi.openxml4j.opc.Package $r2;
        org.apache.poi.openxml4j.opc.OPCPackage $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.OPCPackage create(java.lang.String)>(r0);

        $r2 = (org.apache.poi.openxml4j.opc.Package) $r1;

        return $r2;
    }

    public static org.apache.poi.openxml4j.opc.Package create(java.io.File)
    {
        org.apache.poi.openxml4j.opc.Package $r2;
        org.apache.poi.openxml4j.opc.OPCPackage $r1;
        java.io.File r0;

        r0 := @parameter0: java.io.File;

        $r1 = staticinvoke <org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.OPCPackage create(java.io.File)>(r0);

        $r2 = (org.apache.poi.openxml4j.opc.Package) $r1;

        return $r2;
    }

    public static org.apache.poi.openxml4j.opc.Package create(java.io.OutputStream)
    {
        java.io.OutputStream r0;
        org.apache.poi.openxml4j.opc.Package $r2;
        org.apache.poi.openxml4j.opc.OPCPackage $r1;

        r0 := @parameter0: java.io.OutputStream;

        $r1 = staticinvoke <org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.OPCPackage create(java.io.OutputStream)>(r0);

        $r2 = (org.apache.poi.openxml4j.opc.Package) $r1;

        return $r2;
    }
}
