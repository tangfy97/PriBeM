public final enum class org.wiztools.restclient.bean.HTTPMethod extends java.lang.Enum
{
    public static final enum org.wiztools.restclient.bean.HTTPMethod GET;
    public static final enum org.wiztools.restclient.bean.HTTPMethod POST;
    public static final enum org.wiztools.restclient.bean.HTTPMethod PUT;
    public static final enum org.wiztools.restclient.bean.HTTPMethod PATCH;
    public static final enum org.wiztools.restclient.bean.HTTPMethod DELETE;
    public static final enum org.wiztools.restclient.bean.HTTPMethod HEAD;
    public static final enum org.wiztools.restclient.bean.HTTPMethod OPTIONS;
    public static final enum org.wiztools.restclient.bean.HTTPMethod TRACE;
    private static final java.util.logging.Logger LOG;
    private static final org.wiztools.restclient.bean.HTTPMethod[] $VALUES;

    public static org.wiztools.restclient.bean.HTTPMethod[] values()
    {
        java.lang.Object $r1;
        org.wiztools.restclient.bean.HTTPMethod[] $r0, $r2;

        $r0 = <org.wiztools.restclient.bean.HTTPMethod: org.wiztools.restclient.bean.HTTPMethod[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.wiztools.restclient.bean.HTTPMethod[]) $r1;

        return $r2;
    }

    public static org.wiztools.restclient.bean.HTTPMethod valueOf(java.lang.String)
    {
        org.wiztools.restclient.bean.HTTPMethod $r2;
        java.lang.String r0;
        java.lang.Enum $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/wiztools/restclient/bean/HTTPMethod;", r0);

        $r2 = (org.wiztools.restclient.bean.HTTPMethod) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        int i0;
        org.wiztools.restclient.bean.HTTPMethod r0;
        java.lang.String r1;

        r0 := @this: org.wiztools.restclient.bean.HTTPMethod;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public static org.wiztools.restclient.bean.HTTPMethod get(java.lang.String)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.logging.Logger $r10, $r14;
        java.lang.StringBuilder $r9, $r11, $r12;
        java.lang.String r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r13;
        org.wiztools.restclient.bean.HTTPMethod $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23;

        r0 := @parameter0: java.lang.String;

        $r1 = "GET";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r23 = <org.wiztools.restclient.bean.HTTPMethod: org.wiztools.restclient.bean.HTTPMethod GET>;

        return $r23;

     label1:
        $r2 = "POST";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

        $r22 = <org.wiztools.restclient.bean.HTTPMethod: org.wiztools.restclient.bean.HTTPMethod POST>;

        return $r22;

     label2:
        $r3 = "PUT";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label3;

        $r21 = <org.wiztools.restclient.bean.HTTPMethod: org.wiztools.restclient.bean.HTTPMethod PUT>;

        return $r21;

     label3:
        $r4 = "PATCH";

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z3 == 0 goto label4;

        $r20 = <org.wiztools.restclient.bean.HTTPMethod: org.wiztools.restclient.bean.HTTPMethod PATCH>;

        return $r20;

     label4:
        $r5 = "DELETE";

        $z4 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z4 == 0 goto label5;

        $r19 = <org.wiztools.restclient.bean.HTTPMethod: org.wiztools.restclient.bean.HTTPMethod DELETE>;

        return $r19;

     label5:
        $r6 = "HEAD";

        $z5 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z5 == 0 goto label6;

        $r18 = <org.wiztools.restclient.bean.HTTPMethod: org.wiztools.restclient.bean.HTTPMethod HEAD>;

        return $r18;

     label6:
        $r7 = "OPTIONS";

        $z6 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z6 == 0 goto label7;

        $r17 = <org.wiztools.restclient.bean.HTTPMethod: org.wiztools.restclient.bean.HTTPMethod OPTIONS>;

        return $r17;

     label7:
        $r8 = "TRACE";

        $z7 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z7 == 0 goto label8;

        $r16 = <org.wiztools.restclient.bean.HTTPMethod: org.wiztools.restclient.bean.HTTPMethod TRACE>;

        return $r16;

     label8:
        $r10 = <org.wiztools.restclient.bean.HTTPMethod: java.util.logging.Logger LOG>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown HTTP method encountered: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.util.logging.Logger: void warning(java.lang.String)>($r13);

        $r14 = <org.wiztools.restclient.bean.HTTPMethod: java.util.logging.Logger LOG>;

        virtualinvoke $r14.<java.util.logging.Logger: void warning(java.lang.String)>("Setting default HTTP method: GET");

        $r15 = <org.wiztools.restclient.bean.HTTPMethod: org.wiztools.restclient.bean.HTTPMethod GET>;

        return $r15;
    }

    static void <clinit>()
    {
        org.wiztools.restclient.bean.HTTPMethod[] $r8;
        java.lang.String $r18;
        org.wiztools.restclient.bean.HTTPMethod $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        java.util.logging.Logger $r19;
        java.lang.Class $r17;

        $r0 = new org.wiztools.restclient.bean.HTTPMethod;

        specialinvoke $r0.<org.wiztools.restclient.bean.HTTPMethod: void <init>(java.lang.String,int)>("GET", 0);

        <org.wiztools.restclient.bean.HTTPMethod: org.wiztools.restclient.bean.HTTPMethod GET> = $r0;

        $r1 = new org.wiztools.restclient.bean.HTTPMethod;

        specialinvoke $r1.<org.wiztools.restclient.bean.HTTPMethod: void <init>(java.lang.String,int)>("POST", 1);

        <org.wiztools.restclient.bean.HTTPMethod: org.wiztools.restclient.bean.HTTPMethod POST> = $r1;

        $r2 = new org.wiztools.restclient.bean.HTTPMethod;

        specialinvoke $r2.<org.wiztools.restclient.bean.HTTPMethod: void <init>(java.lang.String,int)>("PUT", 2);

        <org.wiztools.restclient.bean.HTTPMethod: org.wiztools.restclient.bean.HTTPMethod PUT> = $r2;

        $r3 = new org.wiztools.restclient.bean.HTTPMethod;

        specialinvoke $r3.<org.wiztools.restclient.bean.HTTPMethod: void <init>(java.lang.String,int)>("PATCH", 3);

        <org.wiztools.restclient.bean.HTTPMethod: org.wiztools.restclient.bean.HTTPMethod PATCH> = $r3;

        $r4 = new org.wiztools.restclient.bean.HTTPMethod;

        specialinvoke $r4.<org.wiztools.restclient.bean.HTTPMethod: void <init>(java.lang.String,int)>("DELETE", 4);

        <org.wiztools.restclient.bean.HTTPMethod: org.wiztools.restclient.bean.HTTPMethod DELETE> = $r4;

        $r5 = new org.wiztools.restclient.bean.HTTPMethod;

        specialinvoke $r5.<org.wiztools.restclient.bean.HTTPMethod: void <init>(java.lang.String,int)>("HEAD", 5);

        <org.wiztools.restclient.bean.HTTPMethod: org.wiztools.restclient.bean.HTTPMethod HEAD> = $r5;

        $r6 = new org.wiztools.restclient.bean.HTTPMethod;

        specialinvoke $r6.<org.wiztools.restclient.bean.HTTPMethod: void <init>(java.lang.String,int)>("OPTIONS", 6);

        <org.wiztools.restclient.bean.HTTPMethod: org.wiztools.restclient.bean.HTTPMethod OPTIONS> = $r6;

        $r7 = new org.wiztools.restclient.bean.HTTPMethod;

        specialinvoke $r7.<org.wiztools.restclient.bean.HTTPMethod: void <init>(java.lang.String,int)>("TRACE", 7);

        <org.wiztools.restclient.bean.HTTPMethod: org.wiztools.restclient.bean.HTTPMethod TRACE> = $r7;

        $r8 = newarray (org.wiztools.restclient.bean.HTTPMethod)[8];

        $r9 = <org.wiztools.restclient.bean.HTTPMethod: org.wiztools.restclient.bean.HTTPMethod GET>;

        $r8[0] = $r9;

        $r10 = <org.wiztools.restclient.bean.HTTPMethod: org.wiztools.restclient.bean.HTTPMethod POST>;

        $r8[1] = $r10;

        $r11 = <org.wiztools.restclient.bean.HTTPMethod: org.wiztools.restclient.bean.HTTPMethod PUT>;

        $r8[2] = $r11;

        $r12 = <org.wiztools.restclient.bean.HTTPMethod: org.wiztools.restclient.bean.HTTPMethod PATCH>;

        $r8[3] = $r12;

        $r13 = <org.wiztools.restclient.bean.HTTPMethod: org.wiztools.restclient.bean.HTTPMethod DELETE>;

        $r8[4] = $r13;

        $r14 = <org.wiztools.restclient.bean.HTTPMethod: org.wiztools.restclient.bean.HTTPMethod HEAD>;

        $r8[5] = $r14;

        $r15 = <org.wiztools.restclient.bean.HTTPMethod: org.wiztools.restclient.bean.HTTPMethod OPTIONS>;

        $r8[6] = $r15;

        $r16 = <org.wiztools.restclient.bean.HTTPMethod: org.wiztools.restclient.bean.HTTPMethod TRACE>;

        $r8[7] = $r16;

        <org.wiztools.restclient.bean.HTTPMethod: org.wiztools.restclient.bean.HTTPMethod[] $VALUES> = $r8;

        $r17 = class "Lorg/wiztools/restclient/bean/HTTPMethod;";

        $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>();

        $r19 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r18);

        <org.wiztools.restclient.bean.HTTPMethod: java.util.logging.Logger LOG> = $r19;

        return;
    }
}
