final class org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector extends org.apache.lucene.search.TermCollectingRewrite$TermCollector
{
    int docVisitCount;
    boolean hasCutOff;
    org.apache.lucene.index.TermsEnum termsEnum;
    final int docCountCutoff;
    final int termCountLimit;
    final org.apache.lucene.search.ConstantScoreAutoRewrite$TermStateByteStart array;
    final org.apache.lucene.util.BytesRefHash pendingTerms;
    static final boolean $assertionsDisabled;

    void <init>(int, int)
    {
        org.apache.lucene.util.ByteBlockPool$DirectAllocator $r4;
        org.apache.lucene.util.BytesRefHash $r2;
        org.apache.lucene.util.ByteBlockPool $r3;
        org.apache.lucene.search.ConstantScoreAutoRewrite$TermStateByteStart $r1, $r5;
        org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector r0;
        int i0, i1;

        r0 := @this: org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<org.apache.lucene.search.TermCollectingRewrite$TermCollector: void <init>()>();

        r0.<org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector: int docVisitCount> = 0;

        r0.<org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector: boolean hasCutOff> = 0;

        $r1 = new org.apache.lucene.search.ConstantScoreAutoRewrite$TermStateByteStart;

        specialinvoke $r1.<org.apache.lucene.search.ConstantScoreAutoRewrite$TermStateByteStart: void <init>(int)>(16);

        r0.<org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector: org.apache.lucene.search.ConstantScoreAutoRewrite$TermStateByteStart array> = $r1;

        $r2 = new org.apache.lucene.util.BytesRefHash;

        $r3 = new org.apache.lucene.util.ByteBlockPool;

        $r4 = new org.apache.lucene.util.ByteBlockPool$DirectAllocator;

        specialinvoke $r4.<org.apache.lucene.util.ByteBlockPool$DirectAllocator: void <init>()>();

        specialinvoke $r3.<org.apache.lucene.util.ByteBlockPool: void <init>(org.apache.lucene.util.ByteBlockPool$Allocator)>($r4);

        $r5 = r0.<org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector: org.apache.lucene.search.ConstantScoreAutoRewrite$TermStateByteStart array>;

        specialinvoke $r2.<org.apache.lucene.util.BytesRefHash: void <init>(org.apache.lucene.util.ByteBlockPool,int,org.apache.lucene.util.BytesRefHash$BytesStartArray)>($r3, 16, $r5);

        r0.<org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector: org.apache.lucene.util.BytesRefHash pendingTerms> = $r2;

        r0.<org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector: int docCountCutoff> = i0;

        r0.<org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector: int termCountLimit> = i1;

        return;
    }

    public void setNextEnum(org.apache.lucene.index.TermsEnum)
    {
        org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector r0;
        org.apache.lucene.index.TermsEnum r1;

        r0 := @this: org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector;

        r1 := @parameter0: org.apache.lucene.index.TermsEnum;

        r0.<org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector: org.apache.lucene.index.TermsEnum termsEnum> = r1;

        return;
    }

    public boolean collect(org.apache.lucene.util.BytesRef) throws java.io.IOException
    {
        org.apache.lucene.util.BytesRefHash $r2, $r4;
        org.apache.lucene.search.ConstantScoreAutoRewrite$TermStateByteStart $r7, $r14;
        org.apache.lucene.index.TermsEnum $r3, $r5, $r10, $r13, $r17, $r19;
        org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector r0;
        boolean $z0;
        org.apache.lucene.util.BytesRef r1;
        long $l10, $l14;
        java.lang.AssertionError $r20;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, i15;
        org.apache.lucene.index.TermState $r6;
        org.apache.lucene.index.TermContext $r8, $r18;
        org.apache.lucene.index.TermContext[] $r11, $r15;
        org.apache.lucene.index.AtomicReaderContext $r9, $r16;
        org.apache.lucene.index.IndexReaderContext $r12;

        r0 := @this: org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector;

        r1 := @parameter0: org.apache.lucene.util.BytesRef;

        $r2 = r0.<org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector: org.apache.lucene.util.BytesRefHash pendingTerms>;

        $i0 = virtualinvoke $r2.<org.apache.lucene.util.BytesRefHash: int add(org.apache.lucene.util.BytesRef)>(r1);

        $i1 = r0.<org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector: int docVisitCount>;

        $r3 = r0.<org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector: org.apache.lucene.index.TermsEnum termsEnum>;

        $i2 = virtualinvoke $r3.<org.apache.lucene.index.TermsEnum: int docFreq()>();

        $i3 = $i1 + $i2;

        r0.<org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector: int docVisitCount> = $i3;

        $r4 = r0.<org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector: org.apache.lucene.util.BytesRefHash pendingTerms>;

        $i4 = virtualinvoke $r4.<org.apache.lucene.util.BytesRefHash: int size()>();

        $i5 = r0.<org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector: int termCountLimit>;

        if $i4 >= $i5 goto label1;

        $i7 = r0.<org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector: int docVisitCount>;

        $i6 = r0.<org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector: int docCountCutoff>;

        if $i7 < $i6 goto label2;

     label1:
        r0.<org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector: boolean hasCutOff> = 1;

        return 0;

     label2:
        $r5 = r0.<org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector: org.apache.lucene.index.TermsEnum termsEnum>;

        $r6 = virtualinvoke $r5.<org.apache.lucene.index.TermsEnum: org.apache.lucene.index.TermState termState()>();

        $z0 = <org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        if $r6 != null goto label3;

        $r20 = new java.lang.AssertionError;

        specialinvoke $r20.<java.lang.AssertionError: void <init>()>();

        throw $r20;

     label3:
        if $i0 >= 0 goto label4;

        $i11 = neg $i0;

        i15 = $i11 - 1;

        $r14 = r0.<org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector: org.apache.lucene.search.ConstantScoreAutoRewrite$TermStateByteStart array>;

        $r15 = $r14.<org.apache.lucene.search.ConstantScoreAutoRewrite$TermStateByteStart: org.apache.lucene.index.TermContext[] termState>;

        $r18 = $r15[i15];

        $r16 = r0.<org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector: org.apache.lucene.index.AtomicReaderContext readerContext>;

        $i12 = $r16.<org.apache.lucene.index.AtomicReaderContext: int ord>;

        $r17 = r0.<org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector: org.apache.lucene.index.TermsEnum termsEnum>;

        $i13 = virtualinvoke $r17.<org.apache.lucene.index.TermsEnum: int docFreq()>();

        $r19 = r0.<org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector: org.apache.lucene.index.TermsEnum termsEnum>;

        $l14 = virtualinvoke $r19.<org.apache.lucene.index.TermsEnum: long totalTermFreq()>();

        virtualinvoke $r18.<org.apache.lucene.index.TermContext: void register(org.apache.lucene.index.TermState,int,int,long)>($r6, $i12, $i13, $l14);

        goto label5;

     label4:
        $r7 = r0.<org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector: org.apache.lucene.search.ConstantScoreAutoRewrite$TermStateByteStart array>;

        $r11 = $r7.<org.apache.lucene.search.ConstantScoreAutoRewrite$TermStateByteStart: org.apache.lucene.index.TermContext[] termState>;

        $r8 = new org.apache.lucene.index.TermContext;

        $r12 = r0.<org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector: org.apache.lucene.index.IndexReaderContext topReaderContext>;

        $r9 = r0.<org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector: org.apache.lucene.index.AtomicReaderContext readerContext>;

        $i8 = $r9.<org.apache.lucene.index.AtomicReaderContext: int ord>;

        $r10 = r0.<org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector: org.apache.lucene.index.TermsEnum termsEnum>;

        $i9 = virtualinvoke $r10.<org.apache.lucene.index.TermsEnum: int docFreq()>();

        $r13 = r0.<org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector: org.apache.lucene.index.TermsEnum termsEnum>;

        $l10 = virtualinvoke $r13.<org.apache.lucene.index.TermsEnum: long totalTermFreq()>();

        specialinvoke $r8.<org.apache.lucene.index.TermContext: void <init>(org.apache.lucene.index.IndexReaderContext,org.apache.lucene.index.TermState,int,int,long)>($r12, $r6, $i8, $i9, $l10);

        $r11[$i0] = $r8;

     label5:
        return 1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/search/ConstantScoreAutoRewrite;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.search.ConstantScoreAutoRewrite$CutOffTermCollector: boolean $assertionsDisabled> = $z1;

        return;
    }
}
