class bsh.BSHArrayInitializer extends bsh.SimpleNode
{

    void <init>(int)
    {
        int i0;
        bsh.BSHArrayInitializer r0;

        r0 := @this: bsh.BSHArrayInitializer;

        i0 := @parameter0: int;

        specialinvoke r0.<bsh.SimpleNode: void <init>(int)>(i0);

        return;
    }

    public java.lang.Object eval(bsh.CallStack, bsh.Interpreter) throws bsh.EvalError
    {
        bsh.EvalError $r0;
        bsh.Interpreter r3;
        bsh.BSHArrayInitializer r1;
        bsh.CallStack r2;

        r1 := @this: bsh.BSHArrayInitializer;

        r2 := @parameter0: bsh.CallStack;

        r3 := @parameter1: bsh.Interpreter;

        $r0 = new bsh.EvalError;

        specialinvoke $r0.<bsh.EvalError: void <init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)>("Array initializer has no base type.", r1, r2);

        throw $r0;
    }

    public java.lang.Object eval(java.lang.Class, int, bsh.CallStack, bsh.Interpreter) throws bsh.EvalError
    {
        bsh.SimpleNode r5;
        int[] r1;
        bsh.BSHArrayInitializer r0, $r15;
        boolean $z0;
        bsh.Interpreter r7;
        bsh.Node $r4;
        java.lang.ArrayStoreException $r21;
        bsh.UtilEvalError $r31;
        bsh.CallStack r6;
        java.lang.StringBuffer $r11, $r12, $r13, $r17, $r18, $r19, $r22, $r23, $r24, $r27, $r28, $r29;
        int $i0, i1, $i2, i3;
        java.lang.String $r14, $r20, $r25, $r30;
        bsh.EvalError $r10, $r16, $r32;
        java.lang.IllegalArgumentException $r26;
        bsh.Primitive $r8;
        java.lang.Class r2;
        java.lang.Object $r3, $r9, r33, r34;

        r0 := @this: bsh.BSHArrayInitializer;

        r2 := @parameter0: java.lang.Class;

        i1 := @parameter1: int;

        r6 := @parameter2: bsh.CallStack;

        r7 := @parameter3: bsh.Interpreter;

        $i0 = virtualinvoke r0.<bsh.BSHArrayInitializer: int jjtGetNumChildren()>();

        r1 = newarray (int)[i1];

        r1[0] = $i0;

        $r3 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>(r2, r1);

        i3 = 0;

        goto label15;

     label01:
        $r4 = virtualinvoke r0.<bsh.BSHArrayInitializer: bsh.Node jjtGetChild(int)>(i3);

        r5 = (bsh.SimpleNode) $r4;

        $z0 = r5 instanceof bsh.BSHArrayInitializer;

        if $z0 == 0 goto label03;

        if i1 >= 2 goto label02;

        $r16 = new bsh.EvalError;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid Location for Intializer, position: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i3);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r16.<bsh.EvalError: void <init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)>($r20, r0, r6);

        throw $r16;

     label02:
        $r15 = (bsh.BSHArrayInitializer) r5;

        $i2 = i1 - 1;

        r33 = virtualinvoke $r15.<bsh.BSHArrayInitializer: java.lang.Object eval(java.lang.Class,int,bsh.CallStack,bsh.Interpreter)>(r2, $i2, r6, r7);

        goto label04;

     label03:
        r33 = virtualinvoke r5.<bsh.SimpleNode: java.lang.Object eval(bsh.CallStack,bsh.Interpreter)>(r6, r7);

     label04:
        $r8 = <bsh.Primitive: bsh.Primitive VOID>;

        if r33 != $r8 goto label05;

        $r10 = new bsh.EvalError;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Void in array initializer, position");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i3);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r10.<bsh.EvalError: void <init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)>($r14, r0, r6);

        throw $r10;

     label05:
        r34 = r33;

        if i1 != 1 goto label10;

     label06:
        $r9 = staticinvoke <bsh.Types: java.lang.Object castObject(java.lang.Object,java.lang.Class,int)>(r33, r2, 0);

     label07:
        goto label09;

     label08:
        $r31 := @caughtexception;

        $r32 = virtualinvoke $r31.<bsh.UtilEvalError: bsh.EvalError toEvalError(java.lang.String,bsh.SimpleNode,bsh.CallStack)>("Error in array initializer", r0, r6);

        throw $r32;

     label09:
        r34 = staticinvoke <bsh.Primitive: java.lang.Object unwrap(java.lang.Object)>($r9);

     label10:
        staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>($r3, i3, r34);

     label11:
        goto label14;

     label12:
        $r26 := @caughtexception;

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("illegal arg");

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r26);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <bsh.Interpreter: void debug(java.lang.String)>($r30);

        specialinvoke r0.<bsh.BSHArrayInitializer: void throwTypeError(java.lang.Class,java.lang.Object,int,bsh.CallStack)>(r2, r33, i3, r6);

        goto label14;

     label13:
        $r21 := @caughtexception;

        $r22 = new java.lang.StringBuffer;

        specialinvoke $r22.<java.lang.StringBuffer: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("arraystore");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r21);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <bsh.Interpreter: void debug(java.lang.String)>($r25);

        specialinvoke r0.<bsh.BSHArrayInitializer: void throwTypeError(java.lang.Class,java.lang.Object,int,bsh.CallStack)>(r2, r33, i3, r6);

        goto label14;

     label14:
        i3 = i3 + 1;

     label15:
        if i3 < $i0 goto label01;

        return $r3;

        catch bsh.UtilEvalError from label06 to label07 with label08;
        catch java.lang.IllegalArgumentException from label10 to label11 with label12;
        catch java.lang.ArrayStoreException from label10 to label11 with label13;
    }

    private void throwTypeError(java.lang.Class, java.lang.Object, int, bsh.CallStack) throws bsh.EvalError
    {
        bsh.CallStack r13;
        java.lang.StringBuffer $r3, $r4, $r5, $r6, $r8, $r9, $r10;
        bsh.BSHArrayInitializer r12;
        int i0;
        java.lang.String $r11, r16;
        boolean $z0;
        bsh.EvalError $r2;
        bsh.Primitive $r14;
        java.lang.Object r0;
        java.lang.Class $r1, r7, $r15;

        r12 := @this: bsh.BSHArrayInitializer;

        r7 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        r13 := @parameter3: bsh.CallStack;

        $z0 = r0 instanceof bsh.Primitive;

        if $z0 == 0 goto label1;

        $r14 = (bsh.Primitive) r0;

        $r15 = virtualinvoke $r14.<bsh.Primitive: java.lang.Class getType()>();

        r16 = virtualinvoke $r15.<java.lang.Class: java.lang.String getName()>();

        goto label2;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r16 = staticinvoke <bsh.Reflect: java.lang.String normalizeClassName(java.lang.Class)>($r1);

     label2:
        $r2 = new bsh.EvalError;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Incompatible type: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r16);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" in initializer of array type: ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" at position: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r2.<bsh.EvalError: void <init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)>($r11, r12, r13);

        throw $r2;
    }
}
