public abstract class org.jdesktop.swingx.AbstractPatternPanel extends org.jdesktop.swingx.JXPanel
{
    public static final java.lang.String SEARCH_FIELD_LABEL;
    public static final java.lang.String SEARCH_FIELD_MNEMONIC;
    public static final java.lang.String SEARCH_TITLE;
    public static final java.lang.String MATCH_ACTION_COMMAND;
    protected javax.swing.JLabel searchLabel;
    protected javax.swing.JTextField searchField;
    protected javax.swing.JCheckBox matchCheck;
    protected org.jdesktop.swingx.search.PatternModel patternModel;
    private org.jdesktop.swingx.action.ActionContainerFactory actionFactory;

    public void <init>()
    {
        org.jdesktop.swingx.AbstractPatternPanel r0;

        r0 := @this: org.jdesktop.swingx.AbstractPatternPanel;

        specialinvoke r0.<org.jdesktop.swingx.JXPanel: void <init>()>();

        return;
    }

    public abstract void match();

    protected org.jdesktop.swingx.action.AbstractActionExt getAction(java.lang.String)
    {
        org.jdesktop.swingx.action.AbstractActionExt $r4;
        java.lang.String r2;
        javax.swing.Action $r3;
        org.jdesktop.swingx.AbstractPatternPanel r0;
        javax.swing.ActionMap $r1;

        r0 := @this: org.jdesktop.swingx.AbstractPatternPanel;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: javax.swing.ActionMap getActionMap()>();

        $r3 = virtualinvoke $r1.<javax.swing.ActionMap: javax.swing.Action get(java.lang.Object)>(r2);

        $r4 = (org.jdesktop.swingx.action.AbstractActionExt) $r3;

        return $r4;
    }

    protected void initActions()
    {
        org.jdesktop.swingx.AbstractPatternPanel r0;

        r0 := @this: org.jdesktop.swingx.AbstractPatternPanel;

        virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: void initPatternActions()>();

        virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: void initExecutables()>();

        return;
    }

    protected void initExecutables()
    {
        org.jdesktop.swingx.action.AbstractActionExt $r1;
        org.jdesktop.swingx.AbstractPatternPanel r0;
        javax.swing.ActionMap $r2, $r3;

        r0 := @this: org.jdesktop.swingx.AbstractPatternPanel;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: org.jdesktop.swingx.action.AbstractActionExt createBoundAction(java.lang.String,java.lang.String)>("match", "match");

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: javax.swing.ActionMap getActionMap()>();

        virtualinvoke $r2.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("execute", $r1);

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: javax.swing.ActionMap getActionMap()>();

        virtualinvoke $r3.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("match", $r1);

        virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: void refreshEmptyFromModel()>();

        return;
    }

    protected void initPatternActions()
    {
        org.jdesktop.swingx.search.PatternModel $r2, $r4, $r6, $r8;
        org.jdesktop.swingx.action.AbstractActionExt $r3, $r5, $r7, $r9;
        org.jdesktop.swingx.AbstractPatternPanel r0;
        javax.swing.ActionMap $r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.jdesktop.swingx.AbstractPatternPanel;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: javax.swing.ActionMap getActionMap()>();

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: org.jdesktop.swingx.search.PatternModel getPatternModel()>();

        $z0 = virtualinvoke $r2.<org.jdesktop.swingx.search.PatternModel: boolean isCaseSensitive()>();

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: org.jdesktop.swingx.action.AbstractActionExt createModelStateAction(java.lang.String,java.lang.String,boolean)>("matchCase", "setCaseSensitive", $z0);

        virtualinvoke $r1.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("matchCase", $r3);

        $r4 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: org.jdesktop.swingx.search.PatternModel getPatternModel()>();

        $z1 = virtualinvoke $r4.<org.jdesktop.swingx.search.PatternModel: boolean isWrapping()>();

        $r5 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: org.jdesktop.swingx.action.AbstractActionExt createModelStateAction(java.lang.String,java.lang.String,boolean)>("wrapSearch", "setWrapping", $z1);

        virtualinvoke $r1.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("wrapSearch", $r5);

        $r6 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: org.jdesktop.swingx.search.PatternModel getPatternModel()>();

        $z2 = virtualinvoke $r6.<org.jdesktop.swingx.search.PatternModel: boolean isBackwards()>();

        $r7 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: org.jdesktop.swingx.action.AbstractActionExt createModelStateAction(java.lang.String,java.lang.String,boolean)>("backwardsSearch", "setBackwards", $z2);

        virtualinvoke $r1.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("backwardsSearch", $r7);

        $r8 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: org.jdesktop.swingx.search.PatternModel getPatternModel()>();

        $z3 = virtualinvoke $r8.<org.jdesktop.swingx.search.PatternModel: boolean isIncremental()>();

        $r9 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: org.jdesktop.swingx.action.AbstractActionExt createModelStateAction(java.lang.String,java.lang.String,boolean)>("matchIncremental", "setIncremental", $z3);

        virtualinvoke $r1.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("matchIncremental", $r9);

        return;
    }

    protected java.lang.String getUIString(java.lang.String)
    {
        java.util.Locale $r2;
        java.lang.String r1, $r3;
        org.jdesktop.swingx.AbstractPatternPanel r0;

        r0 := @this: org.jdesktop.swingx.AbstractPatternPanel;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: java.util.Locale getLocale()>();

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: java.lang.String getUIString(java.lang.String,java.util.Locale)>(r1, $r2);

        return $r3;
    }

    protected java.lang.String getUIString(java.lang.String, java.util.Locale)
    {
        org.jdesktop.swingx.AbstractPatternPanel r7;
        java.util.Locale r5;
        java.lang.StringBuilder $r0, $r1, $r3;
        java.lang.String r2, $r4, $r6, $r8;

        r7 := @this: org.jdesktop.swingx.AbstractPatternPanel;

        r2 := @parameter0: java.lang.String;

        r5 := @parameter1: java.util.Locale;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Search.");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = staticinvoke <org.jdesktop.swingx.plaf.UIManagerExt: java.lang.String getString(java.lang.Object,java.util.Locale)>($r4, r5);

        if $r6 == null goto label1;

        $r8 = $r6;

        goto label2;

     label1:
        $r8 = r2;

     label2:
        return $r8;
    }

    protected org.jdesktop.swingx.action.AbstractActionExt createModelStateAction(java.lang.String, java.lang.String, boolean)
    {
        org.jdesktop.swingx.search.PatternModel $r4;
        org.jdesktop.swingx.action.BoundAction $r3;
        java.lang.String r1, $r2, r5;
        org.jdesktop.swingx.AbstractPatternPanel r0;
        boolean z0;

        r0 := @this: org.jdesktop.swingx.AbstractPatternPanel;

        r1 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: java.lang.String getUIString(java.lang.String)>(r1);

        $r3 = new org.jdesktop.swingx.action.BoundAction;

        specialinvoke $r3.<org.jdesktop.swingx.action.BoundAction: void <init>(java.lang.String,java.lang.String)>($r2, r1);

        virtualinvoke $r3.<org.jdesktop.swingx.action.BoundAction: void setStateAction()>();

        $r4 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: org.jdesktop.swingx.search.PatternModel getPatternModel()>();

        virtualinvoke $r3.<org.jdesktop.swingx.action.BoundAction: void registerCallback(java.lang.Object,java.lang.String)>($r4, r5);

        virtualinvoke $r3.<org.jdesktop.swingx.action.BoundAction: void setSelected(boolean)>(z0);

        return $r3;
    }

    protected org.jdesktop.swingx.action.AbstractActionExt createBoundAction(java.lang.String, java.lang.String)
    {
        org.jdesktop.swingx.action.BoundAction $r3;
        java.lang.String r1, $r2, r4;
        org.jdesktop.swingx.AbstractPatternPanel r0;

        r0 := @this: org.jdesktop.swingx.AbstractPatternPanel;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: java.lang.String getUIString(java.lang.String)>(r1);

        $r3 = new org.jdesktop.swingx.action.BoundAction;

        specialinvoke $r3.<org.jdesktop.swingx.action.BoundAction: void <init>(java.lang.String,java.lang.String)>($r2, r1);

        virtualinvoke $r3.<org.jdesktop.swingx.action.BoundAction: void registerCallback(java.lang.Object,java.lang.String)>(r0, r4);

        return $r3;
    }

    public void setLocale(java.util.Locale)
    {
        org.jdesktop.swingx.AbstractPatternPanel r0;
        java.util.Locale r1;

        r0 := @this: org.jdesktop.swingx.AbstractPatternPanel;

        r1 := @parameter0: java.util.Locale;

        virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: void updateLocaleState(java.util.Locale)>(r1);

        specialinvoke r0.<org.jdesktop.swingx.JXPanel: void setLocale(java.util.Locale)>(r1);

        return;
    }

    protected void updateLocaleState(java.util.Locale)
    {
        java.lang.Object[] $r2;
        javax.swing.Action $r8;
        org.jdesktop.swingx.AbstractPatternPanel r0;
        java.util.Locale r3;
        int i0, i1;
        java.lang.Object r4;
        java.lang.String $r5, $r6;
        javax.swing.ActionMap $r1, $r7;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.swingx.AbstractPatternPanel;

        r3 := @parameter0: java.util.Locale;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: javax.swing.ActionMap getActionMap()>();

        $r2 = virtualinvoke $r1.<javax.swing.ActionMap: java.lang.Object[] allKeys()>();

        i0 = lengthof $r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r4 = $r2[i1];

        $z0 = r4 instanceof java.lang.String;

        if $z0 == 0 goto label2;

        $r5 = (java.lang.String) r4;

        $r6 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: java.lang.String getUIString(java.lang.String,java.util.Locale)>($r5, r3);

        $z1 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label2;

        $r7 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: javax.swing.ActionMap getActionMap()>();

        $r8 = virtualinvoke $r7.<javax.swing.ActionMap: javax.swing.Action get(java.lang.Object)>(r4);

        interfaceinvoke $r8.<javax.swing.Action: void putValue(java.lang.String,java.lang.Object)>("Name", $r6);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: void bindSearchLabel(java.util.Locale)>(r3);

        return;
    }

    protected void refreshPatternFromModel()
    {
        org.jdesktop.swingx.search.PatternModel $r1;
        org.jdesktop.swingx.AbstractPatternPanel r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.AbstractPatternPanel;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: org.jdesktop.swingx.search.PatternModel getPatternModel()>();

        $z0 = virtualinvoke $r1.<org.jdesktop.swingx.search.PatternModel: boolean isIncremental()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: void match()>();

     label1:
        return;
    }

    protected org.jdesktop.swingx.search.PatternModel getPatternModel()
    {
        org.jdesktop.swingx.search.PatternModel $r1, $r2, $r3, $r4;
        java.beans.PropertyChangeListener $r5;
        org.jdesktop.swingx.AbstractPatternPanel r0;

        r0 := @this: org.jdesktop.swingx.AbstractPatternPanel;

        $r1 = r0.<org.jdesktop.swingx.AbstractPatternPanel: org.jdesktop.swingx.search.PatternModel patternModel>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: org.jdesktop.swingx.search.PatternModel createPatternModel()>();

        r0.<org.jdesktop.swingx.AbstractPatternPanel: org.jdesktop.swingx.search.PatternModel patternModel> = $r3;

        $r4 = r0.<org.jdesktop.swingx.AbstractPatternPanel: org.jdesktop.swingx.search.PatternModel patternModel>;

        $r5 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: java.beans.PropertyChangeListener getPatternModelListener()>();

        virtualinvoke $r4.<org.jdesktop.swingx.search.PatternModel: void addPropertyChangeListener(java.beans.PropertyChangeListener)>($r5);

     label1:
        $r2 = r0.<org.jdesktop.swingx.AbstractPatternPanel: org.jdesktop.swingx.search.PatternModel patternModel>;

        return $r2;
    }

    protected org.jdesktop.swingx.search.PatternModel createPatternModel()
    {
        org.jdesktop.swingx.search.PatternModel $r0;
        org.jdesktop.swingx.AbstractPatternPanel r1;

        r1 := @this: org.jdesktop.swingx.AbstractPatternPanel;

        $r0 = new org.jdesktop.swingx.search.PatternModel;

        specialinvoke $r0.<org.jdesktop.swingx.search.PatternModel: void <init>()>();

        return $r0;
    }

    protected java.beans.PropertyChangeListener getPatternModelListener()
    {
        org.jdesktop.swingx.AbstractPatternPanel$1 $r0;
        org.jdesktop.swingx.AbstractPatternPanel r1;

        r1 := @this: org.jdesktop.swingx.AbstractPatternPanel;

        $r0 = new org.jdesktop.swingx.AbstractPatternPanel$1;

        specialinvoke $r0.<org.jdesktop.swingx.AbstractPatternPanel$1: void <init>(org.jdesktop.swingx.AbstractPatternPanel)>(r1);

        return $r0;
    }

    protected void refreshEmptyFromModel()
    {
        org.jdesktop.swingx.search.PatternModel $r1;
        org.jdesktop.swingx.action.AbstractActionExt $r2;
        org.jdesktop.swingx.AbstractPatternPanel r0;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.swingx.AbstractPatternPanel;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: org.jdesktop.swingx.search.PatternModel getPatternModel()>();

        $z0 = virtualinvoke $r1.<org.jdesktop.swingx.search.PatternModel: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $r2 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: org.jdesktop.swingx.action.AbstractActionExt getAction(java.lang.String)>("match");

        virtualinvoke $r2.<org.jdesktop.swingx.action.AbstractActionExt: void setEnabled(boolean)>($z1);

        return;
    }

    protected void refreshModelFromDocument()
    {
        org.jdesktop.swingx.search.PatternModel $r1;
        javax.swing.JTextField $r2;
        java.lang.String $r3;
        org.jdesktop.swingx.AbstractPatternPanel r0;

        r0 := @this: org.jdesktop.swingx.AbstractPatternPanel;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: org.jdesktop.swingx.search.PatternModel getPatternModel()>();

        $r2 = r0.<org.jdesktop.swingx.AbstractPatternPanel: javax.swing.JTextField searchField>;

        $r3 = virtualinvoke $r2.<javax.swing.JTextField: java.lang.String getText()>();

        virtualinvoke $r1.<org.jdesktop.swingx.search.PatternModel: void setRawText(java.lang.String)>($r3);

        return;
    }

    protected void refreshDocumentFromModel()
    {
        org.jdesktop.swingx.AbstractPatternPanel$2 $r5;
        org.jdesktop.swingx.search.PatternModel $r3;
        javax.swing.JTextField $r1;
        java.lang.String $r2, $r4;
        org.jdesktop.swingx.AbstractPatternPanel r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.AbstractPatternPanel;

        $r1 = r0.<org.jdesktop.swingx.AbstractPatternPanel: javax.swing.JTextField searchField>;

        $r2 = virtualinvoke $r1.<javax.swing.JTextField: java.lang.String getText()>();

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: org.jdesktop.swingx.search.PatternModel getPatternModel()>();

        $r4 = virtualinvoke $r3.<org.jdesktop.swingx.search.PatternModel: java.lang.String getRawText()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r5 = new org.jdesktop.swingx.AbstractPatternPanel$2;

        specialinvoke $r5.<org.jdesktop.swingx.AbstractPatternPanel$2: void <init>(org.jdesktop.swingx.AbstractPatternPanel)>(r0);

        staticinvoke <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>($r5);

        return;
    }

    protected javax.swing.event.DocumentListener getSearchFieldListener()
    {
        org.jdesktop.swingx.AbstractPatternPanel$3 $r0;
        org.jdesktop.swingx.AbstractPatternPanel r1;

        r1 := @this: org.jdesktop.swingx.AbstractPatternPanel;

        $r0 = new org.jdesktop.swingx.AbstractPatternPanel$3;

        specialinvoke $r0.<org.jdesktop.swingx.AbstractPatternPanel$3: void <init>(org.jdesktop.swingx.AbstractPatternPanel)>(r1);

        return $r0;
    }

    protected void bind()
    {
        javax.swing.event.DocumentListener $r4;
        javax.swing.JTextField $r2;
        org.jdesktop.swingx.action.AbstractActionExt $r9;
        javax.swing.Action $r8;
        org.jdesktop.swingx.AbstractPatternPanel r0;
        org.jdesktop.swingx.action.ActionContainerFactory $r5;
        java.util.Locale $r1;
        javax.swing.JCheckBox $r6;
        javax.swing.text.Document $r3;
        javax.swing.ActionMap $r7;

        r0 := @this: org.jdesktop.swingx.AbstractPatternPanel;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: java.util.Locale getLocale()>();

        virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: void bindSearchLabel(java.util.Locale)>($r1);

        $r2 = r0.<org.jdesktop.swingx.AbstractPatternPanel: javax.swing.JTextField searchField>;

        $r3 = virtualinvoke $r2.<javax.swing.JTextField: javax.swing.text.Document getDocument()>();

        $r4 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: javax.swing.event.DocumentListener getSearchFieldListener()>();

        interfaceinvoke $r3.<javax.swing.text.Document: void addDocumentListener(javax.swing.event.DocumentListener)>($r4);

        $r5 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: org.jdesktop.swingx.action.ActionContainerFactory getActionContainerFactory()>();

        $r6 = r0.<org.jdesktop.swingx.AbstractPatternPanel: javax.swing.JCheckBox matchCheck>;

        $r7 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: javax.swing.ActionMap getActionMap()>();

        $r8 = virtualinvoke $r7.<javax.swing.ActionMap: javax.swing.Action get(java.lang.Object)>("matchCase");

        $r9 = (org.jdesktop.swingx.action.AbstractActionExt) $r8;

        virtualinvoke $r5.<org.jdesktop.swingx.action.ActionContainerFactory: void configureButton(javax.swing.JToggleButton,org.jdesktop.swingx.action.AbstractActionExt,javax.swing.ButtonGroup)>($r6, $r9, null);

        return;
    }

    protected void bindSearchLabel(java.util.Locale)
    {
        javax.swing.JTextField $r5;
        char $c0;
        org.jdesktop.swingx.AbstractPatternPanel r0;
        java.util.Locale r1;
        javax.swing.JLabel $r2, $r6, $r7;
        java.lang.String $r3, $r4;

        r0 := @this: org.jdesktop.swingx.AbstractPatternPanel;

        r1 := @parameter0: java.util.Locale;

        $r2 = r0.<org.jdesktop.swingx.AbstractPatternPanel: javax.swing.JLabel searchLabel>;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: java.lang.String getUIString(java.lang.String,java.util.Locale)>("searchFieldLabel", r1);

        virtualinvoke $r2.<javax.swing.JLabel: void setText(java.lang.String)>($r3);

        $r4 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: java.lang.String getUIString(java.lang.String,java.util.Locale)>("searchFieldLabel.mnemonic", r1);

        if $r4 == "searchFieldLabel.mnemonic" goto label1;

        $r7 = r0.<org.jdesktop.swingx.AbstractPatternPanel: javax.swing.JLabel searchLabel>;

        $c0 = virtualinvoke $r4.<java.lang.String: char charAt(int)>(0);

        virtualinvoke $r7.<javax.swing.JLabel: void setDisplayedMnemonic(char)>($c0);

     label1:
        $r6 = r0.<org.jdesktop.swingx.AbstractPatternPanel: javax.swing.JLabel searchLabel>;

        $r5 = r0.<org.jdesktop.swingx.AbstractPatternPanel: javax.swing.JTextField searchField>;

        virtualinvoke $r6.<javax.swing.JLabel: void setLabelFor(java.awt.Component)>($r5);

        return;
    }

    protected org.jdesktop.swingx.action.ActionContainerFactory getActionContainerFactory()
    {
        org.jdesktop.swingx.action.ActionContainerFactory $r1, $r2, $r3;
        org.jdesktop.swingx.AbstractPatternPanel r0;

        r0 := @this: org.jdesktop.swingx.AbstractPatternPanel;

        $r1 = r0.<org.jdesktop.swingx.AbstractPatternPanel: org.jdesktop.swingx.action.ActionContainerFactory actionFactory>;

        if $r1 != null goto label1;

        $r3 = new org.jdesktop.swingx.action.ActionContainerFactory;

        specialinvoke $r3.<org.jdesktop.swingx.action.ActionContainerFactory: void <init>(org.jdesktop.swingx.action.ActionManager)>(null);

        r0.<org.jdesktop.swingx.AbstractPatternPanel: org.jdesktop.swingx.action.ActionContainerFactory actionFactory> = $r3;

     label1:
        $r2 = r0.<org.jdesktop.swingx.AbstractPatternPanel: org.jdesktop.swingx.action.ActionContainerFactory actionFactory>;

        return $r2;
    }

    protected void initComponents()
    {
        javax.swing.JLabel $r1;
        int $i0;
        javax.swing.JCheckBox $r3;
        org.jdesktop.swingx.AbstractPatternPanel r0;
        org.jdesktop.swingx.AbstractPatternPanel$4 $r2;

        r0 := @this: org.jdesktop.swingx.AbstractPatternPanel;

        $r1 = new javax.swing.JLabel;

        specialinvoke $r1.<javax.swing.JLabel: void <init>()>();

        r0.<org.jdesktop.swingx.AbstractPatternPanel: javax.swing.JLabel searchLabel> = $r1;

        $r2 = new org.jdesktop.swingx.AbstractPatternPanel$4;

        $i0 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel: int getSearchFieldWidth()>();

        specialinvoke $r2.<org.jdesktop.swingx.AbstractPatternPanel$4: void <init>(org.jdesktop.swingx.AbstractPatternPanel,int)>(r0, $i0);

        r0.<org.jdesktop.swingx.AbstractPatternPanel: javax.swing.JTextField searchField> = $r2;

        $r3 = new javax.swing.JCheckBox;

        specialinvoke $r3.<javax.swing.JCheckBox: void <init>()>();

        r0.<org.jdesktop.swingx.AbstractPatternPanel: javax.swing.JCheckBox matchCheck> = $r3;

        return;
    }

    protected int getSearchFieldWidth()
    {
        org.jdesktop.swingx.AbstractPatternPanel r0;

        r0 := @this: org.jdesktop.swingx.AbstractPatternPanel;

        return 15;
    }

    static void <clinit>()
    {
        <org.jdesktop.swingx.AbstractPatternPanel: java.lang.String MATCH_ACTION_COMMAND> = "match";

        <org.jdesktop.swingx.AbstractPatternPanel: java.lang.String SEARCH_TITLE> = "searchTitle";

        <org.jdesktop.swingx.AbstractPatternPanel: java.lang.String SEARCH_FIELD_MNEMONIC> = "searchFieldLabel.mnemonic";

        <org.jdesktop.swingx.AbstractPatternPanel: java.lang.String SEARCH_FIELD_LABEL> = "searchFieldLabel";

        staticinvoke <org.jdesktop.swingx.plaf.LookAndFeelAddons: org.jdesktop.swingx.plaf.LookAndFeelAddons getAddon()>();

        return;
    }
}
