class com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1$1 extends com.mycila.inject.internal.guava.collect.Tables$AbstractCell
{
    final int rowIndex;
    final int columnIndex;
    final int val$index;
    final com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1 this$2;

    void <init>(com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1, int)
    {
        com.mycila.inject.internal.guava.collect.ImmutableList $r5, $r9;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        com.mycila.inject.internal.guava.collect.ArrayTable$CellSet $r3, $r7;
        com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1 r1, $r2, $r6;
        com.mycila.inject.internal.guava.collect.ArrayTable $r4, $r8;
        com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1$1 r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1$1;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1;

        i0 := @parameter1: int;

        r0.<com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1$1: com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1 this$2> = r1;

        r0.<com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1$1: int val$index> = i0;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.Tables$AbstractCell: void <init>()>();

        $i1 = r0.<com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1$1: int val$index>;

        $r2 = r0.<com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1$1: com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1 this$2>;

        $r3 = $r2.<com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1: com.mycila.inject.internal.guava.collect.ArrayTable$CellSet this$1>;

        $r4 = $r3.<com.mycila.inject.internal.guava.collect.ArrayTable$CellSet: com.mycila.inject.internal.guava.collect.ArrayTable this$0>;

        $r5 = staticinvoke <com.mycila.inject.internal.guava.collect.ArrayTable: com.mycila.inject.internal.guava.collect.ImmutableList access$100(com.mycila.inject.internal.guava.collect.ArrayTable)>($r4);

        $i2 = virtualinvoke $r5.<com.mycila.inject.internal.guava.collect.ImmutableList: int size()>();

        $i3 = $i1 / $i2;

        r0.<com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1$1: int rowIndex> = $i3;

        $i4 = r0.<com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1$1: int val$index>;

        $r6 = r0.<com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1$1: com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1 this$2>;

        $r7 = $r6.<com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1: com.mycila.inject.internal.guava.collect.ArrayTable$CellSet this$1>;

        $r8 = $r7.<com.mycila.inject.internal.guava.collect.ArrayTable$CellSet: com.mycila.inject.internal.guava.collect.ArrayTable this$0>;

        $r9 = staticinvoke <com.mycila.inject.internal.guava.collect.ArrayTable: com.mycila.inject.internal.guava.collect.ImmutableList access$100(com.mycila.inject.internal.guava.collect.ArrayTable)>($r8);

        $i5 = virtualinvoke $r9.<com.mycila.inject.internal.guava.collect.ImmutableList: int size()>();

        $i6 = $i4 % $i5;

        r0.<com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1$1: int columnIndex> = $i6;

        return;
    }

    public java.lang.Object getRowKey()
    {
        com.mycila.inject.internal.guava.collect.ArrayTable $r3;
        com.mycila.inject.internal.guava.collect.ArrayTable$CellSet $r2;
        int $i0;
        com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1$1 r0;
        java.lang.Object $r5;
        com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1 $r1;
        com.mycila.inject.internal.guava.collect.ImmutableList $r4;

        r0 := @this: com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1$1;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1$1: com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1 this$2>;

        $r2 = $r1.<com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1: com.mycila.inject.internal.guava.collect.ArrayTable$CellSet this$1>;

        $r3 = $r2.<com.mycila.inject.internal.guava.collect.ArrayTable$CellSet: com.mycila.inject.internal.guava.collect.ArrayTable this$0>;

        $r4 = staticinvoke <com.mycila.inject.internal.guava.collect.ArrayTable: com.mycila.inject.internal.guava.collect.ImmutableList access$200(com.mycila.inject.internal.guava.collect.ArrayTable)>($r3);

        $i0 = r0.<com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1$1: int rowIndex>;

        $r5 = virtualinvoke $r4.<com.mycila.inject.internal.guava.collect.ImmutableList: java.lang.Object get(int)>($i0);

        return $r5;
    }

    public java.lang.Object getColumnKey()
    {
        com.mycila.inject.internal.guava.collect.ArrayTable $r3;
        com.mycila.inject.internal.guava.collect.ArrayTable$CellSet $r2;
        int $i0;
        com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1$1 r0;
        java.lang.Object $r5;
        com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1 $r1;
        com.mycila.inject.internal.guava.collect.ImmutableList $r4;

        r0 := @this: com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1$1;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1$1: com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1 this$2>;

        $r2 = $r1.<com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1: com.mycila.inject.internal.guava.collect.ArrayTable$CellSet this$1>;

        $r3 = $r2.<com.mycila.inject.internal.guava.collect.ArrayTable$CellSet: com.mycila.inject.internal.guava.collect.ArrayTable this$0>;

        $r4 = staticinvoke <com.mycila.inject.internal.guava.collect.ArrayTable: com.mycila.inject.internal.guava.collect.ImmutableList access$100(com.mycila.inject.internal.guava.collect.ArrayTable)>($r3);

        $i0 = r0.<com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1$1: int columnIndex>;

        $r5 = virtualinvoke $r4.<com.mycila.inject.internal.guava.collect.ImmutableList: java.lang.Object get(int)>($i0);

        return $r5;
    }

    public java.lang.Object getValue()
    {
        java.lang.Object[] $r5;
        com.mycila.inject.internal.guava.collect.ArrayTable$CellSet $r2;
        com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1 $r1;
        java.lang.Object[][] $r4;
        com.mycila.inject.internal.guava.collect.ArrayTable $r3;
        int $i0, $i1;
        com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1$1 r0;
        java.lang.Object $r6;

        r0 := @this: com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1$1;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1$1: com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1 this$2>;

        $r2 = $r1.<com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1: com.mycila.inject.internal.guava.collect.ArrayTable$CellSet this$1>;

        $r3 = $r2.<com.mycila.inject.internal.guava.collect.ArrayTable$CellSet: com.mycila.inject.internal.guava.collect.ArrayTable this$0>;

        $r4 = staticinvoke <com.mycila.inject.internal.guava.collect.ArrayTable: java.lang.Object[][] access$300(com.mycila.inject.internal.guava.collect.ArrayTable)>($r3);

        $i0 = r0.<com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1$1: int rowIndex>;

        $r5 = $r4[$i0];

        $i1 = r0.<com.mycila.inject.internal.guava.collect.ArrayTable$CellSet$1$1: int columnIndex>;

        $r6 = $r5[$i1];

        return $r6;
    }
}
