public class com.hp.hpl.jena.sparql.expr.aggregate.AggregatorFactory extends java.lang.Object
{

    public void <init>()
    {
        com.hp.hpl.jena.sparql.expr.aggregate.AggregatorFactory r0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.aggregate.AggregatorFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.hp.hpl.jena.sparql.expr.aggregate.Aggregator createCount(boolean)
    {
        com.hp.hpl.jena.sparql.expr.aggregate.AggregatorBase $r0;
        com.hp.hpl.jena.sparql.expr.aggregate.AggCountDistinct $r1;
        boolean z0;
        com.hp.hpl.jena.sparql.expr.aggregate.AggCount $r2;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r1 = new com.hp.hpl.jena.sparql.expr.aggregate.AggCountDistinct;

        $r0 = $r1;

        specialinvoke $r1.<com.hp.hpl.jena.sparql.expr.aggregate.AggCountDistinct: void <init>()>();

        goto label2;

     label1:
        $r2 = new com.hp.hpl.jena.sparql.expr.aggregate.AggCount;

        $r0 = $r2;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.expr.aggregate.AggCount: void <init>()>();

     label2:
        return $r0;
    }

    public static com.hp.hpl.jena.sparql.expr.aggregate.Aggregator createCountExpr(boolean, com.hp.hpl.jena.sparql.expr.Expr)
    {
        com.hp.hpl.jena.sparql.expr.aggregate.AggCountVar $r3;
        com.hp.hpl.jena.sparql.expr.Expr r0;
        com.hp.hpl.jena.sparql.expr.aggregate.AggCountVarDistinct $r2;
        com.hp.hpl.jena.sparql.expr.aggregate.AggregatorBase $r1;
        boolean z0;

        z0 := @parameter0: boolean;

        r0 := @parameter1: com.hp.hpl.jena.sparql.expr.Expr;

        if z0 == 0 goto label1;

        $r2 = new com.hp.hpl.jena.sparql.expr.aggregate.AggCountVarDistinct;

        $r1 = $r2;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.expr.aggregate.AggCountVarDistinct: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>(r0);

        goto label2;

     label1:
        $r3 = new com.hp.hpl.jena.sparql.expr.aggregate.AggCountVar;

        $r1 = $r3;

        specialinvoke $r3.<com.hp.hpl.jena.sparql.expr.aggregate.AggCountVar: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>(r0);

     label2:
        return $r1;
    }

    public static com.hp.hpl.jena.sparql.expr.aggregate.Aggregator createSum(boolean, com.hp.hpl.jena.sparql.expr.Expr)
    {
        com.hp.hpl.jena.sparql.expr.aggregate.AggSum $r3;
        com.hp.hpl.jena.sparql.expr.Expr r0;
        com.hp.hpl.jena.sparql.expr.aggregate.AggregatorBase $r1;
        com.hp.hpl.jena.sparql.expr.aggregate.AggSumDistinct $r2;
        boolean z0;

        z0 := @parameter0: boolean;

        r0 := @parameter1: com.hp.hpl.jena.sparql.expr.Expr;

        if z0 == 0 goto label1;

        $r2 = new com.hp.hpl.jena.sparql.expr.aggregate.AggSumDistinct;

        $r1 = $r2;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.expr.aggregate.AggSumDistinct: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>(r0);

        goto label2;

     label1:
        $r3 = new com.hp.hpl.jena.sparql.expr.aggregate.AggSum;

        $r1 = $r3;

        specialinvoke $r3.<com.hp.hpl.jena.sparql.expr.aggregate.AggSum: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>(r0);

     label2:
        return $r1;
    }

    public static com.hp.hpl.jena.sparql.expr.aggregate.Aggregator createMin(boolean, com.hp.hpl.jena.sparql.expr.Expr)
    {
        com.hp.hpl.jena.sparql.expr.aggregate.AggMinBase $r1;
        com.hp.hpl.jena.sparql.expr.Expr r0;
        com.hp.hpl.jena.sparql.expr.aggregate.AggMinDistinct $r2;
        com.hp.hpl.jena.sparql.expr.aggregate.AggMin $r3;
        boolean z0;

        z0 := @parameter0: boolean;

        r0 := @parameter1: com.hp.hpl.jena.sparql.expr.Expr;

        if z0 == 0 goto label1;

        $r2 = new com.hp.hpl.jena.sparql.expr.aggregate.AggMinDistinct;

        $r1 = $r2;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.expr.aggregate.AggMinDistinct: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>(r0);

        goto label2;

     label1:
        $r3 = new com.hp.hpl.jena.sparql.expr.aggregate.AggMin;

        $r1 = $r3;

        specialinvoke $r3.<com.hp.hpl.jena.sparql.expr.aggregate.AggMin: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>(r0);

     label2:
        return $r1;
    }

    public static com.hp.hpl.jena.sparql.expr.aggregate.Aggregator createMax(boolean, com.hp.hpl.jena.sparql.expr.Expr)
    {
        com.hp.hpl.jena.sparql.expr.Expr r0;
        com.hp.hpl.jena.sparql.expr.aggregate.AggMaxDistinct $r2;
        com.hp.hpl.jena.sparql.expr.aggregate.AggMax $r3;
        com.hp.hpl.jena.sparql.expr.aggregate.AggMaxBase $r1;
        boolean z0;

        z0 := @parameter0: boolean;

        r0 := @parameter1: com.hp.hpl.jena.sparql.expr.Expr;

        if z0 == 0 goto label1;

        $r2 = new com.hp.hpl.jena.sparql.expr.aggregate.AggMaxDistinct;

        $r1 = $r2;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.expr.aggregate.AggMaxDistinct: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>(r0);

        goto label2;

     label1:
        $r3 = new com.hp.hpl.jena.sparql.expr.aggregate.AggMax;

        $r1 = $r3;

        specialinvoke $r3.<com.hp.hpl.jena.sparql.expr.aggregate.AggMax: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>(r0);

     label2:
        return $r1;
    }

    public static com.hp.hpl.jena.sparql.expr.aggregate.Aggregator createAvg(boolean, com.hp.hpl.jena.sparql.expr.Expr)
    {
        com.hp.hpl.jena.sparql.expr.Expr r0;
        com.hp.hpl.jena.sparql.expr.aggregate.AggregatorBase $r1;
        com.hp.hpl.jena.sparql.expr.aggregate.AggAvg $r3;
        com.hp.hpl.jena.sparql.expr.aggregate.AggAvgDistinct $r2;
        boolean z0;

        z0 := @parameter0: boolean;

        r0 := @parameter1: com.hp.hpl.jena.sparql.expr.Expr;

        if z0 == 0 goto label1;

        $r2 = new com.hp.hpl.jena.sparql.expr.aggregate.AggAvgDistinct;

        $r1 = $r2;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.expr.aggregate.AggAvgDistinct: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>(r0);

        goto label2;

     label1:
        $r3 = new com.hp.hpl.jena.sparql.expr.aggregate.AggAvg;

        $r1 = $r3;

        specialinvoke $r3.<com.hp.hpl.jena.sparql.expr.aggregate.AggAvg: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>(r0);

     label2:
        return $r1;
    }

    public static com.hp.hpl.jena.sparql.expr.aggregate.Aggregator createSample(boolean, com.hp.hpl.jena.sparql.expr.Expr)
    {
        com.hp.hpl.jena.sparql.expr.aggregate.AggSampleDistinct $r2;
        com.hp.hpl.jena.sparql.expr.Expr r0;
        com.hp.hpl.jena.sparql.expr.aggregate.AggSample $r3;
        com.hp.hpl.jena.sparql.expr.aggregate.AggregatorBase $r1;
        boolean z0;

        z0 := @parameter0: boolean;

        r0 := @parameter1: com.hp.hpl.jena.sparql.expr.Expr;

        if z0 == 0 goto label1;

        $r2 = new com.hp.hpl.jena.sparql.expr.aggregate.AggSampleDistinct;

        $r1 = $r2;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.expr.aggregate.AggSampleDistinct: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>(r0);

        goto label2;

     label1:
        $r3 = new com.hp.hpl.jena.sparql.expr.aggregate.AggSample;

        $r1 = $r3;

        specialinvoke $r3.<com.hp.hpl.jena.sparql.expr.aggregate.AggSample: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>(r0);

     label2:
        return $r1;
    }

    public static com.hp.hpl.jena.sparql.expr.aggregate.Aggregator createGroupConcat(boolean, com.hp.hpl.jena.sparql.expr.Expr, java.lang.String, com.hp.hpl.jena.sparql.expr.ExprList)
    {
        com.hp.hpl.jena.sparql.expr.aggregate.AggGroupConcatDistinct $r6;
        com.hp.hpl.jena.sparql.expr.Expr r1;
        com.hp.hpl.jena.sparql.expr.ExprList r0;
        org.apache.jena.atlas.lib.NotImplemented $r5;
        com.hp.hpl.jena.sparql.expr.aggregate.AggregatorBase $r4;
        java.lang.String r2;
        com.hp.hpl.jena.sparql.expr.aggregate.AggGroupConcat $r7;
        boolean z0, $z1;

        z0 := @parameter0: boolean;

        r1 := @parameter1: com.hp.hpl.jena.sparql.expr.Expr;

        r2 := @parameter2: java.lang.String;

        r0 := @parameter3: com.hp.hpl.jena.sparql.expr.ExprList;

        if r0 == null goto label1;

        $z1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprList: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        $r5 = new org.apache.jena.atlas.lib.NotImplemented;

        specialinvoke $r5.<org.apache.jena.atlas.lib.NotImplemented: void <init>(java.lang.String)>("GROUP_CONCAT / ORDER BY not implemented yet");

        throw $r5;

     label1:
        if z0 == 0 goto label2;

        $r6 = new com.hp.hpl.jena.sparql.expr.aggregate.AggGroupConcatDistinct;

        $r4 = $r6;

        specialinvoke $r6.<com.hp.hpl.jena.sparql.expr.aggregate.AggGroupConcatDistinct: void <init>(com.hp.hpl.jena.sparql.expr.Expr,java.lang.String)>(r1, r2);

        goto label3;

     label2:
        $r7 = new com.hp.hpl.jena.sparql.expr.aggregate.AggGroupConcat;

        $r4 = $r7;

        specialinvoke $r7.<com.hp.hpl.jena.sparql.expr.aggregate.AggGroupConcat: void <init>(com.hp.hpl.jena.sparql.expr.Expr,java.lang.String)>(r1, r2);

     label3:
        return $r4;
    }

    public static com.hp.hpl.jena.sparql.expr.aggregate.Aggregator createAggNull()
    {
        com.hp.hpl.jena.sparql.expr.aggregate.AggNull $r0;

        $r0 = new com.hp.hpl.jena.sparql.expr.aggregate.AggNull;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.expr.aggregate.AggNull: void <init>()>();

        return $r0;
    }

    private static com.hp.hpl.jena.sparql.expr.aggregate.Aggregator err(java.lang.String)
    {
        java.lang.StringBuilder $r0, $r1, $r3;
        java.lang.String r2, $r4;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not implemented: ");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.atlas.logging.Log: void fatal(java.lang.Class,java.lang.String)>(class "Lcom/hp/hpl/jena/sparql/expr/aggregate/AggregatorFactory;", $r4);

        return null;
    }
}
