class com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet extends com.google.common.collect.ForwardingSet
{
    private final java.util.Map map;
    private final java.util.Set delegate;
    final com.google.common.collect.AbstractMapBasedMultiset this$0;

    void <init>(com.google.common.collect.AbstractMapBasedMultiset, java.util.Map)
    {
        java.util.Map r2;
        com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet r0;
        com.google.common.collect.AbstractMapBasedMultiset r1;
        java.util.Set $r3;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet;

        r1 := @parameter0: com.google.common.collect.AbstractMapBasedMultiset;

        r2 := @parameter1: java.util.Map;

        r0.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet: com.google.common.collect.AbstractMapBasedMultiset this$0> = r1;

        specialinvoke r0.<com.google.common.collect.ForwardingSet: void <init>()>();

        r0.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet: java.util.Map map> = r2;

        $r3 = interfaceinvoke r2.<java.util.Map: java.util.Set keySet()>();

        r0.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet: java.util.Set delegate> = $r3;

        return;
    }

    protected java.util.Set delegate()
    {
        com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet r0;
        java.util.Set $r1;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet;

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet: java.util.Set delegate>;

        return $r1;
    }

    public java.util.Iterator iterator()
    {
        com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet$1 $r4;
        java.util.Iterator $r3;
        java.util.Map $r1;
        com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet r0;
        java.util.Set $r2;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet;

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet: java.util.Map map>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        $r4 = new com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet$1;

        specialinvoke $r4.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet$1: void <init>(com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet,java.util.Iterator)>(r0, $r3);

        return $r4;
    }

    public boolean remove(java.lang.Object)
    {
        java.util.Map $r2;
        com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet r0;
        com.google.common.collect.AbstractMapBasedMultiset $r3;
        int $i0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet: com.google.common.collect.AbstractMapBasedMultiset this$0>;

        $r2 = r0.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet: java.util.Map map>;

        $i0 = staticinvoke <com.google.common.collect.AbstractMapBasedMultiset: int access$300(com.google.common.collect.AbstractMapBasedMultiset,java.lang.Object,java.util.Map)>($r3, r1, $r2);

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean removeAll(java.util.Collection)
    {
        java.util.Iterator $r1;
        java.util.Collection r2;
        com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet;

        r2 := @parameter0: java.util.Collection;

        $r1 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet: java.util.Iterator iterator()>();

        $z0 = staticinvoke <com.google.common.collect.Iterators: boolean removeAll(java.util.Iterator,java.util.Collection)>($r1, r2);

        return $z0;
    }

    public boolean retainAll(java.util.Collection)
    {
        java.util.Iterator $r1;
        java.util.Collection r2;
        com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet;

        r2 := @parameter0: java.util.Collection;

        $r1 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet: java.util.Iterator iterator()>();

        $z0 = staticinvoke <com.google.common.collect.Iterators: boolean retainAll(java.util.Iterator,java.util.Collection)>($r1, r2);

        return $z0;
    }

    public void clear()
    {
        java.util.Iterator $r4;
        java.util.Map $r2, $r3;
        com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet r0;
        com.google.common.collect.AbstractMapBasedMultiset $r1, $r5;
        boolean $z0;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet;

        $r2 = r0.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet: java.util.Map map>;

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet: com.google.common.collect.AbstractMapBasedMultiset this$0>;

        $r3 = staticinvoke <com.google.common.collect.AbstractMapBasedMultiset: java.util.Map access$100(com.google.common.collect.AbstractMapBasedMultiset)>($r1);

        if $r2 != $r3 goto label1;

        $r5 = r0.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet: com.google.common.collect.AbstractMapBasedMultiset this$0>;

        virtualinvoke $r5.<com.google.common.collect.AbstractMapBasedMultiset: void clear()>();

        goto label3;

     label1:
        $r4 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r4.<java.util.Iterator: void remove()>();

        goto label2;

     label3:
        return;
    }

    public java.util.Map getMap()
    {
        com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet r0;
        java.util.Map $r1;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet;

        $r1 = r0.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet: java.util.Map map>;

        return $r1;
    }

    protected volatile java.util.Collection delegate()
    {
        com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet r0;
        java.util.Set $r1;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet;

        $r1 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet: java.util.Set delegate()>();

        return $r1;
    }

    protected volatile java.lang.Object delegate()
    {
        com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet r0;
        java.util.Set $r1;

        r0 := @this: com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet;

        $r1 = virtualinvoke r0.<com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet: java.util.Set delegate()>();

        return $r1;
    }
}
