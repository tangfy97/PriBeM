public class org.apache.lucene.analysis.hunspell.HunspellWord extends java.lang.Object
{
    private final char[] flags;

    public void <init>()
    {
        org.apache.lucene.analysis.hunspell.HunspellWord r0;

        r0 := @this: org.apache.lucene.analysis.hunspell.HunspellWord;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.analysis.hunspell.HunspellWord: char[] flags> = null;

        return;
    }

    public void <init>(char[])
    {
        char[] r1;
        org.apache.lucene.analysis.hunspell.HunspellWord r0;

        r0 := @this: org.apache.lucene.analysis.hunspell.HunspellWord;

        r1 := @parameter0: char[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.analysis.hunspell.HunspellWord: char[] flags> = r1;

        return;
    }

    public boolean hasFlag(char)
    {
        org.apache.lucene.analysis.hunspell.HunspellWord r0;
        int $i1;
        char[] $r1, $r2;
        char c0;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.hunspell.HunspellWord;

        c0 := @parameter0: char;

        $r1 = r0.<org.apache.lucene.analysis.hunspell.HunspellWord: char[] flags>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.lucene.analysis.hunspell.HunspellWord: char[] flags>;

        $i1 = staticinvoke <java.util.Arrays: int binarySearch(char[],char)>($r2, c0);

        if $i1 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public char[] getFlags()
    {
        char[] $r1;
        org.apache.lucene.analysis.hunspell.HunspellWord r0;

        r0 := @this: org.apache.lucene.analysis.hunspell.HunspellWord;

        $r1 = r0.<org.apache.lucene.analysis.hunspell.HunspellWord: char[] flags>;

        return $r1;
    }
}
