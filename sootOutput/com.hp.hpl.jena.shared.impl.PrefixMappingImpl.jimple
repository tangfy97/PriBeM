public class com.hp.hpl.jena.shared.impl.PrefixMappingImpl extends java.lang.Object implements com.hp.hpl.jena.shared.PrefixMapping
{
    protected java.util.Map prefixToURI;
    protected java.util.Map URItoPrefix;
    protected boolean locked;

    public void <init>()
    {
        com.hp.hpl.jena.shared.impl.PrefixMappingImpl r0;
        java.util.Map $r1, $r2;

        r0 := @this: com.hp.hpl.jena.shared.impl.PrefixMappingImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.hp.hpl.jena.util.CollectionFactory: java.util.Map createHashedMap()>();

        r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: java.util.Map prefixToURI> = $r1;

        $r2 = staticinvoke <com.hp.hpl.jena.util.CollectionFactory: java.util.Map createHashedMap()>();

        r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: java.util.Map URItoPrefix> = $r2;

        return;
    }

    protected void set(java.lang.String, java.lang.String)
    {
        java.util.Map $r3, $r4;
        java.lang.String r1, r2;
        com.hp.hpl.jena.shared.impl.PrefixMappingImpl r0;

        r0 := @this: com.hp.hpl.jena.shared.impl.PrefixMappingImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: java.util.Map prefixToURI>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r4 = r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: java.util.Map URItoPrefix>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1);

        return;
    }

    protected java.lang.String get(java.lang.String)
    {
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1, $r4;
        com.hp.hpl.jena.shared.impl.PrefixMappingImpl r0;

        r0 := @this: com.hp.hpl.jena.shared.impl.PrefixMappingImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: java.util.Map prefixToURI>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public com.hp.hpl.jena.shared.PrefixMapping lock()
    {
        com.hp.hpl.jena.shared.impl.PrefixMappingImpl r0;

        r0 := @this: com.hp.hpl.jena.shared.impl.PrefixMappingImpl;

        r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: boolean locked> = 1;

        return r0;
    }

    public com.hp.hpl.jena.shared.PrefixMapping setNsPrefix(java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2;
        java.lang.NullPointerException $r3;
        com.hp.hpl.jena.shared.impl.PrefixMappingImpl r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.shared.impl.PrefixMappingImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: void checkUnlocked()>();

        specialinvoke r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: void checkLegal(java.lang.String)>(r1);

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: void checkProper(java.lang.String)>(r2);

     label1:
        if r2 != null goto label2;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("null URIs are prohibited as arguments to setNsPrefix");

        throw $r3;

     label2:
        virtualinvoke r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: void set(java.lang.String,java.lang.String)>(r1, r2);

        return r0;
    }

    public com.hp.hpl.jena.shared.PrefixMapping removeNsPrefix(java.lang.String)
    {
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1, r4;
        com.hp.hpl.jena.shared.impl.PrefixMappingImpl r0;

        r0 := @this: com.hp.hpl.jena.shared.impl.PrefixMappingImpl;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: void checkUnlocked()>();

        $r2 = r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: java.util.Map prefixToURI>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r4 = (java.lang.String) $r3;

        virtualinvoke r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: void regenerateReverseMapping()>();

        return r0;
    }

    protected void regenerateReverseMapping()
    {
        java.util.Map$Entry r6;
        java.util.Iterator $r4;
        java.util.Set $r3;
        java.util.Map $r1, $r2, $r7;
        java.lang.Object $r5, $r8, $r9;
        com.hp.hpl.jena.shared.impl.PrefixMappingImpl r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.shared.impl.PrefixMappingImpl;

        $r1 = r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: java.util.Map URItoPrefix>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        $r2 = r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: java.util.Map prefixToURI>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r7 = r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: java.util.Map URItoPrefix>;

        $r8 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);

        goto label1;

     label2:
        return;
    }

    protected void checkUnlocked()
    {
        com.hp.hpl.jena.shared.PrefixMapping$JenaLockedException $r1;
        com.hp.hpl.jena.shared.impl.PrefixMappingImpl r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.shared.impl.PrefixMappingImpl;

        $z0 = r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: boolean locked>;

        if $z0 == 0 goto label1;

        $r1 = new com.hp.hpl.jena.shared.PrefixMapping$JenaLockedException;

        specialinvoke $r1.<com.hp.hpl.jena.shared.PrefixMapping$JenaLockedException: void <init>(com.hp.hpl.jena.shared.PrefixMapping)>(r0);

        throw $r1;

     label1:
        return;
    }

    private void checkProper(java.lang.String)
    {
        java.lang.String r1;
        com.hp.hpl.jena.shared.impl.PrefixMappingImpl r0;

        r0 := @this: com.hp.hpl.jena.shared.impl.PrefixMappingImpl;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public static boolean isNiceURI(java.lang.String)
    {
        int $i0, $i1;
        char $c2;
        java.lang.String r0;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i1);

        $z1 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.Util: boolean notNameChar(char)>($c2);

        return $z1;
    }

    public com.hp.hpl.jena.shared.PrefixMapping setNsPrefixes(com.hp.hpl.jena.shared.PrefixMapping)
    {
        java.util.Map $r2;
        com.hp.hpl.jena.shared.PrefixMapping r1, $r3;
        com.hp.hpl.jena.shared.impl.PrefixMappingImpl r0;

        r0 := @this: com.hp.hpl.jena.shared.impl.PrefixMappingImpl;

        r1 := @parameter0: com.hp.hpl.jena.shared.PrefixMapping;

        $r2 = interfaceinvoke r1.<com.hp.hpl.jena.shared.PrefixMapping: java.util.Map getNsPrefixMap()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: com.hp.hpl.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)>($r2);

        return $r3;
    }

    public com.hp.hpl.jena.shared.PrefixMapping withDefaultMappings(com.hp.hpl.jena.shared.PrefixMapping)
    {
        java.util.Map$Entry r6;
        java.util.Iterator $r4;
        java.util.Set $r3;
        java.util.Map $r2;
        java.lang.Object $r5, $r7, $r9;
        java.lang.String r8, r10, $r11, $r12;
        com.hp.hpl.jena.shared.PrefixMapping r1;
        com.hp.hpl.jena.shared.impl.PrefixMappingImpl r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.shared.impl.PrefixMappingImpl;

        r1 := @parameter0: com.hp.hpl.jena.shared.PrefixMapping;

        virtualinvoke r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: void checkUnlocked()>();

        $r2 = interfaceinvoke r1.<com.hp.hpl.jena.shared.PrefixMapping: java.util.Map getNsPrefixMap()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        r8 = (java.lang.String) $r7;

        $r9 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        r10 = (java.lang.String) $r9;

        $r11 = virtualinvoke r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: java.lang.String getNsPrefixURI(java.lang.String)>(r8);

        if $r11 != null goto label2;

        $r12 = virtualinvoke r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: java.lang.String getNsURIPrefix(java.lang.String)>(r10);

        if $r12 != null goto label2;

        virtualinvoke r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: com.hp.hpl.jena.shared.PrefixMapping setNsPrefix(java.lang.String,java.lang.String)>(r8, r10);

     label2:
        goto label1;

     label3:
        return r0;
    }

    public com.hp.hpl.jena.shared.PrefixMapping setNsPrefixes(java.util.Map)
    {
        java.util.Map$Entry r5;
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.util.Map r1;
        java.lang.Object $r4, $r6, $r8;
        java.lang.String $r7, $r9;
        com.hp.hpl.jena.shared.impl.PrefixMappingImpl r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.shared.impl.PrefixMappingImpl;

        r1 := @parameter0: java.util.Map;

        virtualinvoke r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: void checkUnlocked()>();

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r6 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = (java.lang.String) $r6;

        $r8 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (java.lang.String) $r8;

        virtualinvoke r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: com.hp.hpl.jena.shared.PrefixMapping setNsPrefix(java.lang.String,java.lang.String)>($r7, $r9);

        goto label1;

     label2:
        return r0;
    }

    private void checkLegal(java.lang.String)
    {
        com.hp.hpl.jena.shared.PrefixMapping$IllegalPrefixException $r1;
        int $i0;
        java.lang.String r0;
        boolean $z0;
        com.hp.hpl.jena.shared.impl.PrefixMappingImpl r2;

        r2 := @this: com.hp.hpl.jena.shared.impl.PrefixMappingImpl;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $z0 = staticinvoke <org.apache.xerces.util.XMLChar: boolean isValidNCName(java.lang.String)>(r0);

        if $z0 != 0 goto label1;

        $r1 = new com.hp.hpl.jena.shared.PrefixMapping$IllegalPrefixException;

        specialinvoke $r1.<com.hp.hpl.jena.shared.PrefixMapping$IllegalPrefixException: void <init>(java.lang.String)>(r0);

        throw $r1;

     label1:
        return;
    }

    public java.lang.String getNsPrefixURI(java.lang.String)
    {
        java.lang.String r1, $r2;
        com.hp.hpl.jena.shared.impl.PrefixMappingImpl r0;

        r0 := @this: com.hp.hpl.jena.shared.impl.PrefixMappingImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: java.lang.String get(java.lang.String)>(r1);

        return $r2;
    }

    public java.util.Map getNsPrefixMap()
    {
        com.hp.hpl.jena.shared.impl.PrefixMappingImpl r0;
        java.util.Map $r1, $r2;

        r0 := @this: com.hp.hpl.jena.shared.impl.PrefixMappingImpl;

        $r1 = r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: java.util.Map prefixToURI>;

        $r2 = staticinvoke <com.hp.hpl.jena.util.CollectionFactory: java.util.Map createHashedMap(java.util.Map)>($r1);

        return $r2;
    }

    public java.lang.String getNsURIPrefix(java.lang.String)
    {
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1, $r4;
        com.hp.hpl.jena.shared.impl.PrefixMappingImpl r0;

        r0 := @this: com.hp.hpl.jena.shared.impl.PrefixMappingImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: java.util.Map URItoPrefix>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public java.lang.String expandPrefix(java.lang.String)
    {
        int $i0, $i1;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String r0, $r2, $r3, $r6, $r8;
        com.hp.hpl.jena.shared.impl.PrefixMappingImpl r1;

        r1 := @this: com.hp.hpl.jena.shared.impl.PrefixMappingImpl;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(58);

        if $i0 >= 0 goto label1;

        return r0;

     label1:
        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: java.lang.String get(java.lang.String)>($r2);

        if $r3 != null goto label2;

        $r8 = r0;

        goto label3;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $i1 = $i0 + 1;

        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        return $r8;
    }

    public java.lang.String toString()
    {
        java.util.Map $r3;
        java.lang.StringBuilder $r0, $r1, $r4;
        java.lang.String $r5;
        com.hp.hpl.jena.shared.impl.PrefixMappingImpl r2;

        r2 := @this: com.hp.hpl.jena.shared.impl.PrefixMappingImpl;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pm:");

        $r3 = r2.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: java.util.Map prefixToURI>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public java.lang.String qnameFor(java.lang.String)
    {
        java.util.Map $r4;
        int $i0;
        java.lang.Object $r5;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;
        java.lang.String r0, $r1, $r2, r6, $r11;
        boolean $z0;
        com.hp.hpl.jena.shared.impl.PrefixMappingImpl r3;

        r3 := @this: com.hp.hpl.jena.shared.impl.PrefixMappingImpl;

        r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.Util: int splitNamespace(java.lang.String)>(r0);

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i0);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r4 = r3.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: java.util.Map URItoPrefix>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r6 = (java.lang.String) $r5;

        if r6 != null goto label2;

        $r11 = null;

        goto label3;

     label2:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        return $r11;
    }

    public java.lang.String shortForm(java.lang.String)
    {
        java.util.Map$Entry $r2;
        int $i0;
        java.lang.StringBuilder $r3, $r6, $r7, $r11;
        java.lang.Object $r4, $r8;
        java.lang.String r1, $r5, $r9, $r10, $r12;
        com.hp.hpl.jena.shared.impl.PrefixMappingImpl r0;

        r0 := @this: com.hp.hpl.jena.shared.impl.PrefixMappingImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: java.util.Map$Entry findMapping(java.lang.String,boolean)>(r1, 1);

        if $r2 != null goto label1;

        $r12 = r1;

        goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = (java.lang.String) $r4;

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r8 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (java.lang.String) $r8;

        $i0 = virtualinvoke $r9.<java.lang.String: int length()>();

        $r10 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return $r12;
    }

    public boolean samePrefixMappingAs(com.hp.hpl.jena.shared.PrefixMapping)
    {
        com.hp.hpl.jena.shared.PrefixMapping r0;
        boolean $z0, $z1;
        com.hp.hpl.jena.shared.impl.PrefixMappingImpl r1, $r2;

        r1 := @this: com.hp.hpl.jena.shared.impl.PrefixMappingImpl;

        r0 := @parameter0: com.hp.hpl.jena.shared.PrefixMapping;

        $z0 = r0 instanceof com.hp.hpl.jena.shared.impl.PrefixMappingImpl;

        if $z0 == 0 goto label1;

        $r2 = (com.hp.hpl.jena.shared.impl.PrefixMappingImpl) r0;

        $z1 = virtualinvoke r1.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: boolean equals(com.hp.hpl.jena.shared.impl.PrefixMappingImpl)>($r2);

        goto label2;

     label1:
        $z1 = virtualinvoke r1.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: boolean equalsByMap(com.hp.hpl.jena.shared.PrefixMapping)>(r0);

     label2:
        return $z1;
    }

    protected boolean equals(com.hp.hpl.jena.shared.impl.PrefixMappingImpl)
    {
        com.hp.hpl.jena.shared.impl.PrefixMappingImpl r0, r1;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.shared.impl.PrefixMappingImpl;

        r0 := @parameter0: com.hp.hpl.jena.shared.impl.PrefixMappingImpl;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: boolean sameAs(com.hp.hpl.jena.shared.impl.PrefixMappingImpl)>(r1);

        return $z0;
    }

    protected boolean sameAs(com.hp.hpl.jena.shared.impl.PrefixMappingImpl)
    {
        java.util.Map $r2, $r3;
        com.hp.hpl.jena.shared.impl.PrefixMappingImpl r0, r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.shared.impl.PrefixMappingImpl;

        r1 := @parameter0: com.hp.hpl.jena.shared.impl.PrefixMappingImpl;

        $r3 = r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: java.util.Map prefixToURI>;

        $r2 = r1.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: java.util.Map prefixToURI>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    protected final boolean equalsByMap(com.hp.hpl.jena.shared.PrefixMapping)
    {
        java.util.Map $r1, $r3;
        com.hp.hpl.jena.shared.PrefixMapping r2;
        com.hp.hpl.jena.shared.impl.PrefixMappingImpl r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.shared.impl.PrefixMappingImpl;

        r2 := @parameter0: com.hp.hpl.jena.shared.PrefixMapping;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: java.util.Map getNsPrefixMap()>();

        $r3 = interfaceinvoke r2.<com.hp.hpl.jena.shared.PrefixMapping: java.util.Map getNsPrefixMap()>();

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }

    private java.util.Map$Entry findMapping(java.lang.String, boolean)
    {
        java.util.Map$Entry r5;
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.util.Map $r1;
        int $i0, $i1;
        java.lang.Object $r4, $r6;
        java.lang.String r7, r8;
        com.hp.hpl.jena.shared.impl.PrefixMappingImpl r0;
        boolean $z0, $z1, z2;

        r0 := @this: com.hp.hpl.jena.shared.impl.PrefixMappingImpl;

        r8 := @parameter0: java.lang.String;

        z2 := @parameter1: boolean;

        $r1 = r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: java.util.Map prefixToURI>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r6 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        r7 = (java.lang.String) $r6;

        $z1 = virtualinvoke r8.<java.lang.String: boolean startsWith(java.lang.String)>(r7);

        if $z1 == 0 goto label3;

        if z2 != 0 goto label2;

        $i0 = virtualinvoke r7.<java.lang.String: int length()>();

        $i1 = virtualinvoke r8.<java.lang.String: int length()>();

        if $i0 != $i1 goto label3;

     label2:
        return r5;

     label3:
        goto label1;

     label4:
        return null;
    }
}
