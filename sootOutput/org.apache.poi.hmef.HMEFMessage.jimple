public final class org.apache.poi.hmef.HMEFMessage extends java.lang.Object
{
    public static final int HEADER_SIGNATURE;
    private int fileId;
    private java.util.List messageAttributes;
    private java.util.List mapiAttributes;
    private java.util.List attachments;

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        java.lang.Throwable $r10;
        java.lang.IllegalArgumentException $r5;
        java.util.ArrayList $r1, $r2, $r3;
        int $i0, $i1;
        org.apache.poi.hmef.HMEFMessage r0;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;
        java.io.InputStream r4;

        r0 := @this: org.apache.poi.hmef.HMEFMessage;

        r4 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.hmef.HMEFMessage: java.util.List messageAttributes> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.hmef.HMEFMessage: java.util.List mapiAttributes> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.hmef.HMEFMessage: java.util.List attachments> = $r3;

     label1:
        $i0 = staticinvoke <org.apache.poi.util.LittleEndian: int readInt(java.io.InputStream)>(r4);

        if $i0 == 574529400 goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TNEF signature not detected in file, expected 574529400 but got ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label2:
        $i1 = staticinvoke <org.apache.poi.util.LittleEndian: int readUShort(java.io.InputStream)>(r4);

        r0.<org.apache.poi.hmef.HMEFMessage: int fileId> = $i1;

        specialinvoke r0.<org.apache.poi.hmef.HMEFMessage: void process(java.io.InputStream)>(r4);

     label3:
        virtualinvoke r4.<java.io.InputStream: void close()>();

        goto label6;

     label4:
        $r10 := @caughtexception;

     label5:
        virtualinvoke r4.<java.io.InputStream: void close()>();

        throw $r10;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void process(java.io.InputStream) throws java.io.IOException
    {
        java.lang.IllegalStateException $r8;
        int $i0, $i2;
        org.apache.poi.hmef.HMEFMessage r1;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6;
        java.io.InputStream r0;

        r1 := @this: org.apache.poi.hmef.HMEFMessage;

        r0 := @parameter0: java.io.InputStream;

     label1:
        $i0 = virtualinvoke r0.<java.io.InputStream: int read()>();

        tableswitch($i0)
        {
            case -1: goto label4;
            case 0: goto label5;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label5;
            case 4: goto label5;
            case 5: goto label5;
            case 6: goto label5;
            case 7: goto label5;
            case 8: goto label5;
            case 9: goto label5;
            case 10: goto label4;
            case 11: goto label5;
            case 12: goto label5;
            case 13: goto label4;
            default: goto label5;
        };

     label2:
        virtualinvoke r1.<org.apache.poi.hmef.HMEFMessage: void processMessage(java.io.InputStream)>(r0);

        goto label6;

     label3:
        virtualinvoke r1.<org.apache.poi.hmef.HMEFMessage: void processAttachment(java.io.InputStream)>(r0);

        goto label6;

     label4:
        goto label6;

     label5:
        $r8 = new java.lang.IllegalStateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled level ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r8;

     label6:
        $i2 = (int) -1;

        if $i0 != $i2 goto label1;

        return;
    }

    void processMessage(java.io.InputStream) throws java.io.IOException
    {
        org.apache.poi.hmef.attribute.TNEFAttribute $r1;
        org.apache.poi.hmef.attribute.TNEFMAPIAttribute r4;
        java.util.List $r3, $r5, $r6;
        org.apache.poi.hmef.HMEFMessage r2;
        java.io.InputStream r0;
        boolean $z0;

        r2 := @this: org.apache.poi.hmef.HMEFMessage;

        r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <org.apache.poi.hmef.attribute.TNEFAttribute: org.apache.poi.hmef.attribute.TNEFAttribute create(java.io.InputStream)>(r0);

        $r3 = r2.<org.apache.poi.hmef.HMEFMessage: java.util.List messageAttributes>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        $z0 = $r1 instanceof org.apache.poi.hmef.attribute.TNEFMAPIAttribute;

        if $z0 == 0 goto label1;

        r4 = (org.apache.poi.hmef.attribute.TNEFMAPIAttribute) $r1;

        $r5 = r2.<org.apache.poi.hmef.HMEFMessage: java.util.List mapiAttributes>;

        $r6 = virtualinvoke r4.<org.apache.poi.hmef.attribute.TNEFMAPIAttribute: java.util.List getMAPIAttributes()>();

        interfaceinvoke $r5.<java.util.List: boolean addAll(java.util.Collection)>($r6);

     label1:
        return;
    }

    void processAttachment(java.io.InputStream) throws java.io.IOException
    {
        org.apache.poi.hmef.Attachment $r4, $r11;
        org.apache.poi.hmef.attribute.TNEFAttribute $r1;
        java.util.List $r3, $r5, $r8, $r9;
        org.apache.poi.hmef.attribute.TNEFProperty $r6, $r7;
        int $i0, $i1;
        org.apache.poi.hmef.HMEFMessage r2;
        java.lang.Object $r10;
        java.io.InputStream r0;
        boolean $z0;

        r2 := @this: org.apache.poi.hmef.HMEFMessage;

        r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <org.apache.poi.hmef.attribute.TNEFAttribute: org.apache.poi.hmef.attribute.TNEFAttribute create(java.io.InputStream)>(r0);

        $r3 = r2.<org.apache.poi.hmef.HMEFMessage: java.util.List attachments>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r6 = virtualinvoke $r1.<org.apache.poi.hmef.attribute.TNEFAttribute: org.apache.poi.hmef.attribute.TNEFProperty getProperty()>();

        $r7 = <org.apache.poi.hmef.attribute.TNEFProperty: org.apache.poi.hmef.attribute.TNEFProperty ID_ATTACHRENDERDATA>;

        if $r6 != $r7 goto label2;

     label1:
        $r5 = r2.<org.apache.poi.hmef.HMEFMessage: java.util.List attachments>;

        $r4 = new org.apache.poi.hmef.Attachment;

        specialinvoke $r4.<org.apache.poi.hmef.Attachment: void <init>()>();

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r4);

     label2:
        $r8 = r2.<org.apache.poi.hmef.HMEFMessage: java.util.List attachments>;

        $r9 = r2.<org.apache.poi.hmef.HMEFMessage: java.util.List attachments>;

        $i0 = interfaceinvoke $r9.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r10 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>($i1);

        $r11 = (org.apache.poi.hmef.Attachment) $r10;

        virtualinvoke $r11.<org.apache.poi.hmef.Attachment: void addAttribute(org.apache.poi.hmef.attribute.TNEFAttribute)>($r1);

        return;
    }

    public java.util.List getMessageAttributes()
    {
        org.apache.poi.hmef.HMEFMessage r0;
        java.util.List $r1;

        r0 := @this: org.apache.poi.hmef.HMEFMessage;

        $r1 = r0.<org.apache.poi.hmef.HMEFMessage: java.util.List messageAttributes>;

        return $r1;
    }

    public java.util.List getMessageMAPIAttributes()
    {
        org.apache.poi.hmef.HMEFMessage r0;
        java.util.List $r1;

        r0 := @this: org.apache.poi.hmef.HMEFMessage;

        $r1 = r0.<org.apache.poi.hmef.HMEFMessage: java.util.List mapiAttributes>;

        return $r1;
    }

    public java.util.List getAttachments()
    {
        org.apache.poi.hmef.HMEFMessage r0;
        java.util.List $r1;

        r0 := @this: org.apache.poi.hmef.HMEFMessage;

        $r1 = r0.<org.apache.poi.hmef.HMEFMessage: java.util.List attachments>;

        return $r1;
    }

    public org.apache.poi.hmef.attribute.TNEFAttribute getMessageAttribute(org.apache.poi.hmef.attribute.TNEFProperty)
    {
        java.util.Iterator $r2;
        org.apache.poi.hmef.attribute.TNEFAttribute r4;
        java.util.List $r1;
        org.apache.poi.hmef.attribute.TNEFProperty $r5, r6;
        org.apache.poi.hmef.HMEFMessage r0;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.apache.poi.hmef.HMEFMessage;

        r6 := @parameter0: org.apache.poi.hmef.attribute.TNEFProperty;

        $r1 = r0.<org.apache.poi.hmef.HMEFMessage: java.util.List messageAttributes>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.poi.hmef.attribute.TNEFAttribute) $r3;

        $r5 = virtualinvoke r4.<org.apache.poi.hmef.attribute.TNEFAttribute: org.apache.poi.hmef.attribute.TNEFProperty getProperty()>();

        if $r5 != r6 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }

    public org.apache.poi.hmef.attribute.MAPIAttribute getMessageMAPIAttribute(org.apache.poi.hsmf.datatypes.MAPIProperty)
    {
        java.util.Iterator $r2;
        org.apache.poi.hsmf.datatypes.MAPIProperty $r5, r6;
        org.apache.poi.hmef.attribute.MAPIAttribute r4;
        java.util.List $r1;
        org.apache.poi.hmef.HMEFMessage r0;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.apache.poi.hmef.HMEFMessage;

        r6 := @parameter0: org.apache.poi.hsmf.datatypes.MAPIProperty;

        $r1 = r0.<org.apache.poi.hmef.HMEFMessage: java.util.List mapiAttributes>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.poi.hmef.attribute.MAPIAttribute) $r3;

        $r5 = virtualinvoke r4.<org.apache.poi.hmef.attribute.MAPIAttribute: org.apache.poi.hsmf.datatypes.MAPIProperty getProperty()>();

        if $r5 != r6 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }

    private java.lang.String getString(org.apache.poi.hsmf.datatypes.MAPIProperty)
    {
        org.apache.poi.hsmf.datatypes.MAPIProperty r1;
        org.apache.poi.hmef.HMEFMessage r0;
        java.lang.String $r3;
        org.apache.poi.hmef.attribute.MAPIAttribute $r2;

        r0 := @this: org.apache.poi.hmef.HMEFMessage;

        r1 := @parameter0: org.apache.poi.hsmf.datatypes.MAPIProperty;

        $r2 = virtualinvoke r0.<org.apache.poi.hmef.HMEFMessage: org.apache.poi.hmef.attribute.MAPIAttribute getMessageMAPIAttribute(org.apache.poi.hsmf.datatypes.MAPIProperty)>(r1);

        $r3 = staticinvoke <org.apache.poi.hmef.attribute.MAPIStringAttribute: java.lang.String getAsString(org.apache.poi.hmef.attribute.MAPIAttribute)>($r2);

        return $r3;
    }

    public java.lang.String getSubject()
    {
        org.apache.poi.hsmf.datatypes.MAPIProperty $r1;
        org.apache.poi.hmef.HMEFMessage r0;
        java.lang.String $r2;

        r0 := @this: org.apache.poi.hmef.HMEFMessage;

        $r1 = <org.apache.poi.hsmf.datatypes.MAPIProperty: org.apache.poi.hsmf.datatypes.MAPIProperty CONVERSATION_TOPIC>;

        $r2 = specialinvoke r0.<org.apache.poi.hmef.HMEFMessage: java.lang.String getString(org.apache.poi.hsmf.datatypes.MAPIProperty)>($r1);

        return $r2;
    }

    public java.lang.String getBody()
    {
        org.apache.poi.hsmf.datatypes.MAPIProperty $r1;
        org.apache.poi.hmef.HMEFMessage r0;
        java.lang.String $r2;

        r0 := @this: org.apache.poi.hmef.HMEFMessage;

        $r1 = <org.apache.poi.hsmf.datatypes.MAPIProperty: org.apache.poi.hsmf.datatypes.MAPIProperty RTF_COMPRESSED>;

        $r2 = specialinvoke r0.<org.apache.poi.hmef.HMEFMessage: java.lang.String getString(org.apache.poi.hsmf.datatypes.MAPIProperty)>($r1);

        return $r2;
    }

    public static void <clinit>()
    {
        <org.apache.poi.hmef.HMEFMessage: int HEADER_SIGNATURE> = 574529400;

        return;
    }
}
