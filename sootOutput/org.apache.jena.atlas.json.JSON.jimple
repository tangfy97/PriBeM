public class org.apache.jena.atlas.json.JSON extends java.lang.Object
{
    private static final boolean useJavaCC;

    public void <init>()
    {
        org.apache.jena.atlas.json.JSON r0;

        r0 := @this: org.apache.jena.atlas.json.JSON;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.jena.atlas.json.JsonObject parse(java.io.InputStream)
    {
        org.apache.jena.atlas.json.io.JSONMaker $r0;
        org.apache.jena.atlas.json.JsonValue $r2;
        org.apache.jena.atlas.json.JsonObject $r3;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        $r0 = new org.apache.jena.atlas.json.io.JSONMaker;

        specialinvoke $r0.<org.apache.jena.atlas.json.io.JSONMaker: void <init>()>();

        staticinvoke <org.apache.jena.atlas.json.JSON: void _parse(java.io.InputStream,org.apache.jena.atlas.json.io.JSONMaker)>(r1, $r0);

        $r2 = virtualinvoke $r0.<org.apache.jena.atlas.json.io.JSONMaker: org.apache.jena.atlas.json.JsonValue jsonValue()>();

        $r3 = (org.apache.jena.atlas.json.JsonObject) $r2;

        return $r3;
    }

    public static org.apache.jena.atlas.json.JsonObject parse(java.lang.String)
    {
        java.lang.String r1;
        java.io.StringReader $r0;
        org.apache.jena.atlas.json.JsonObject $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.io.StringReader;

        specialinvoke $r0.<java.io.StringReader: void <init>(java.lang.String)>(r1);

        $r2 = staticinvoke <org.apache.jena.atlas.json.JSON: org.apache.jena.atlas.json.JsonObject _parse(java.io.Reader)>($r0);

        return $r2;
    }

    public static org.apache.jena.atlas.json.JsonValue parseAny(java.io.InputStream)
    {
        org.apache.jena.atlas.json.JsonValue $r2;
        org.apache.jena.atlas.json.io.JSONMaker $r0;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        $r0 = new org.apache.jena.atlas.json.io.JSONMaker;

        specialinvoke $r0.<org.apache.jena.atlas.json.io.JSONMaker: void <init>()>();

        staticinvoke <org.apache.jena.atlas.json.JSON: void _parseAny(java.io.InputStream,org.apache.jena.atlas.json.io.JSONMaker)>(r1, $r0);

        $r2 = virtualinvoke $r0.<org.apache.jena.atlas.json.io.JSONMaker: org.apache.jena.atlas.json.JsonValue jsonValue()>();

        return $r2;
    }

    public static org.apache.jena.atlas.json.JsonValue parseAny(java.lang.String)
    {
        org.apache.jena.atlas.json.JsonValue $r2;
        java.lang.String r1;
        java.io.StringReader $r0;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.io.StringReader;

        specialinvoke $r0.<java.io.StringReader: void <init>(java.lang.String)>(r1);

        $r2 = staticinvoke <org.apache.jena.atlas.json.JSON: org.apache.jena.atlas.json.JsonValue _parseAny(java.io.Reader)>($r0);

        return $r2;
    }

    public static org.apache.jena.atlas.json.JsonObject read(java.lang.String)
    {
        java.lang.Throwable $r14;
        java.io.IOException $r3;
        java.lang.RuntimeException $r9;
        org.apache.jena.atlas.json.JsonObject $r2;
        java.io.FileNotFoundException $r8;
        java.lang.StringBuilder $r4, $r5, $r6, $r10, $r11, $r12;
        java.lang.String r0, $r7, $r13;
        java.io.InputStream $r1;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <org.apache.jena.atlas.io.IO: java.io.InputStream openFileEx(java.lang.String)>(r0);

     label2:
        $r2 = staticinvoke <org.apache.jena.atlas.json.JSON: org.apache.jena.atlas.json.JsonObject parse(java.io.InputStream)>($r1);

     label3:
        virtualinvoke $r1.<java.io.InputStream: void close()>();

     label4:
        return $r2;

     label5:
        $r14 := @caughtexception;

     label6:
        virtualinvoke $r1.<java.io.InputStream: void close()>();

        throw $r14;

     label7:
        $r8 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File not found: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r13, $r8);

        throw $r9;

     label8:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IOException: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.atlas.io.IO: void exception(java.lang.String,java.io.IOException)>($r7, $r3);

        return null;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
        catch java.io.FileNotFoundException from label1 to label4 with label7;
        catch java.io.FileNotFoundException from label5 to label7 with label7;
        catch java.io.IOException from label1 to label4 with label8;
        catch java.io.IOException from label5 to label7 with label8;
    }

    public static org.apache.jena.atlas.json.JsonValue readAny(java.lang.String)
    {
        java.lang.Throwable $r14;
        java.io.IOException $r3;
        java.lang.RuntimeException $r9;
        java.io.FileNotFoundException $r8;
        org.apache.jena.atlas.json.JsonValue $r2;
        java.lang.StringBuilder $r4, $r5, $r6, $r10, $r11, $r12;
        java.lang.String r0, $r7, $r13;
        java.io.InputStream $r1;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <org.apache.jena.atlas.io.IO: java.io.InputStream openFileEx(java.lang.String)>(r0);

     label2:
        $r2 = staticinvoke <org.apache.jena.atlas.json.JSON: org.apache.jena.atlas.json.JsonValue parseAny(java.io.InputStream)>($r1);

     label3:
        virtualinvoke $r1.<java.io.InputStream: void close()>();

     label4:
        return $r2;

     label5:
        $r14 := @caughtexception;

     label6:
        virtualinvoke $r1.<java.io.InputStream: void close()>();

        throw $r14;

     label7:
        $r8 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File not found: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r13, $r8);

        throw $r9;

     label8:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IOException: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.atlas.io.IO: void exception(java.lang.String,java.io.IOException)>($r7, $r3);

        return null;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
        catch java.io.FileNotFoundException from label1 to label4 with label7;
        catch java.io.FileNotFoundException from label5 to label7 with label7;
        catch java.io.IOException from label1 to label4 with label8;
        catch java.io.IOException from label5 to label7 with label8;
    }

    private static org.apache.jena.atlas.json.JsonObject _parse(java.io.Reader)
    {
        org.apache.jena.atlas.json.io.JSONMaker $r0;
        org.apache.jena.atlas.json.JsonValue $r2;
        java.io.Reader r1;
        org.apache.jena.atlas.json.JsonObject $r3;

        r1 := @parameter0: java.io.Reader;

        $r0 = new org.apache.jena.atlas.json.io.JSONMaker;

        specialinvoke $r0.<org.apache.jena.atlas.json.io.JSONMaker: void <init>()>();

        staticinvoke <org.apache.jena.atlas.json.JSON: void _parse(java.io.Reader,org.apache.jena.atlas.json.io.JSONMaker)>(r1, $r0);

        $r2 = virtualinvoke $r0.<org.apache.jena.atlas.json.io.JSONMaker: org.apache.jena.atlas.json.JsonValue jsonValue()>();

        $r3 = (org.apache.jena.atlas.json.JsonObject) $r2;

        return $r3;
    }

    private static org.apache.jena.atlas.json.JsonValue _parseAny(java.io.Reader)
    {
        org.apache.jena.atlas.json.JsonValue $r2;
        java.io.Reader r1;
        org.apache.jena.atlas.json.io.JSONMaker $r0;

        r1 := @parameter0: java.io.Reader;

        $r0 = new org.apache.jena.atlas.json.io.JSONMaker;

        specialinvoke $r0.<org.apache.jena.atlas.json.io.JSONMaker: void <init>()>();

        staticinvoke <org.apache.jena.atlas.json.JSON: void _parseAny(java.io.Reader,org.apache.jena.atlas.json.io.JSONMaker)>(r1, $r0);

        $r2 = virtualinvoke $r0.<org.apache.jena.atlas.json.io.JSONMaker: org.apache.jena.atlas.json.JsonValue jsonValue()>();

        return $r2;
    }

    private static void _parse(java.io.Reader, org.apache.jena.atlas.json.io.JSONMaker)
    {
        java.io.Reader r0;
        org.apache.jena.atlas.json.io.JSONMaker r1;

        r0 := @parameter0: java.io.Reader;

        r1 := @parameter1: org.apache.jena.atlas.json.io.JSONMaker;

        staticinvoke <org.apache.jena.atlas.json.io.parser.JSONParser: void parse(java.io.Reader,org.apache.jena.atlas.json.io.JSONHandler)>(r0, r1);

        return;
    }

    private static void _parseAny(java.io.Reader, org.apache.jena.atlas.json.io.JSONMaker)
    {
        java.io.Reader r0;
        org.apache.jena.atlas.json.io.JSONMaker r1;

        r0 := @parameter0: java.io.Reader;

        r1 := @parameter1: org.apache.jena.atlas.json.io.JSONMaker;

        staticinvoke <org.apache.jena.atlas.json.io.parser.JSONParser: void parseAny(java.io.Reader,org.apache.jena.atlas.json.io.JSONHandler)>(r0, r1);

        return;
    }

    private static void _parse(java.io.InputStream, org.apache.jena.atlas.json.io.JSONMaker)
    {
        org.apache.jena.atlas.json.io.JSONMaker r1;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: org.apache.jena.atlas.json.io.JSONMaker;

        staticinvoke <org.apache.jena.atlas.json.io.parser.JSONParser: void parse(java.io.InputStream,org.apache.jena.atlas.json.io.JSONHandler)>(r0, r1);

        return;
    }

    private static void _parseAny(java.io.InputStream, org.apache.jena.atlas.json.io.JSONMaker)
    {
        org.apache.jena.atlas.json.io.JSONMaker r1;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: org.apache.jena.atlas.json.io.JSONMaker;

        staticinvoke <org.apache.jena.atlas.json.io.parser.JSONParser: void parseAny(java.io.InputStream,org.apache.jena.atlas.json.io.JSONHandler)>(r0, r1);

        return;
    }

    public static void write(java.io.OutputStream, org.apache.jena.atlas.json.JsonValue)
    {
        java.io.OutputStream r1;
        org.apache.jena.atlas.json.JsonValue r2;
        org.apache.jena.atlas.io.IndentedWriter $r0;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: org.apache.jena.atlas.json.JsonValue;

        $r0 = new org.apache.jena.atlas.io.IndentedWriter;

        specialinvoke $r0.<org.apache.jena.atlas.io.IndentedWriter: void <init>(java.io.OutputStream)>(r1);

        staticinvoke <org.apache.jena.atlas.json.JSON: void write(org.apache.jena.atlas.io.IndentedWriter,org.apache.jena.atlas.json.JsonValue)>($r0, r2);

        virtualinvoke $r0.<org.apache.jena.atlas.io.IndentedWriter: void flush()>();

        return;
    }

    public static void write(org.apache.jena.atlas.io.IndentedWriter, org.apache.jena.atlas.json.JsonValue)
    {
        org.apache.jena.atlas.json.JsonValue r2;
        org.apache.jena.atlas.json.io.JsonWriter $r0;
        org.apache.jena.atlas.io.IndentedWriter r1;

        r1 := @parameter0: org.apache.jena.atlas.io.IndentedWriter;

        r2 := @parameter1: org.apache.jena.atlas.json.JsonValue;

        $r0 = new org.apache.jena.atlas.json.io.JsonWriter;

        specialinvoke $r0.<org.apache.jena.atlas.json.io.JsonWriter: void <init>(org.apache.jena.atlas.io.IndentedWriter)>(r1);

        virtualinvoke $r0.<org.apache.jena.atlas.json.io.JsonWriter: void startOutput()>();

        virtualinvoke r2.<org.apache.jena.atlas.json.JsonValue: void visit(org.apache.jena.atlas.json.JsonVisitor)>($r0);

        virtualinvoke $r0.<org.apache.jena.atlas.json.io.JsonWriter: void finishOutput()>();

        return;
    }

    public static void write(org.apache.jena.atlas.json.JsonValue)
    {
        org.apache.jena.atlas.json.JsonValue r0;
        org.apache.jena.atlas.io.IndentedWriter $r1;

        r0 := @parameter0: org.apache.jena.atlas.json.JsonValue;

        $r1 = <org.apache.jena.atlas.io.IndentedWriter: org.apache.jena.atlas.io.IndentedWriter stdout>;

        staticinvoke <org.apache.jena.atlas.json.JSON: void write(org.apache.jena.atlas.io.IndentedWriter,org.apache.jena.atlas.json.JsonValue)>($r1, r0);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.jena.atlas.json.JSON: boolean useJavaCC> = 0;

        return;
    }
}
