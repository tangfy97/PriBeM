public class org.apache.xalan.client.XSLTProcessorApplet extends java.applet.Applet
{
    javax.xml.transform.TransformerFactory m_tfactory;
    private java.lang.String m_styleURL;
    private java.lang.String m_documentURL;
    private final java.lang.String PARAM_styleURL;
    private final java.lang.String PARAM_documentURL;
    private java.lang.String m_styleURLOfCached;
    private java.lang.String m_documentURLOfCached;
    private java.net.URL m_codeBase;
    private java.lang.String m_treeURL;
    private java.net.URL m_documentBase;
    private transient java.lang.Thread m_callThread;
    private transient org.apache.xalan.client.XSLTProcessorApplet$TrustedAgent m_trustedAgent;
    private transient java.lang.Thread m_trustedWorker;
    private transient java.lang.String m_htmlText;
    private transient java.lang.String m_sourceText;
    private transient java.lang.String m_nameOfIDAttrOfElemToModify;
    private transient java.lang.String m_elemIdToModify;
    private transient java.lang.String m_attrNameToSet;
    private transient java.lang.String m_attrValueToSet;
    private java.util.Enumeration m_keys;
    transient java.util.Hashtable m_parameters;

    public void <init>()
    {
        org.apache.xalan.client.XSLTProcessorApplet r0;

        r0 := @this: org.apache.xalan.client.XSLTProcessorApplet;

        specialinvoke r0.<java.applet.Applet: void <init>()>();

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String PARAM_documentURL> = "documentURL";

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String PARAM_styleURL> = "styleURL";

        r0.<org.apache.xalan.client.XSLTProcessorApplet: javax.xml.transform.TransformerFactory m_tfactory> = null;

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String PARAM_styleURL> = "styleURL";

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String PARAM_documentURL> = "documentURL";

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String m_styleURLOfCached> = null;

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String m_documentURLOfCached> = null;

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.net.URL m_codeBase> = null;

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String m_treeURL> = null;

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.net.URL m_documentBase> = null;

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.Thread m_callThread> = null;

        r0.<org.apache.xalan.client.XSLTProcessorApplet: org.apache.xalan.client.XSLTProcessorApplet$TrustedAgent m_trustedAgent> = null;

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.Thread m_trustedWorker> = null;

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String m_htmlText> = null;

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String m_sourceText> = null;

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String m_nameOfIDAttrOfElemToModify> = null;

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String m_elemIdToModify> = null;

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String m_attrNameToSet> = null;

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String m_attrValueToSet> = null;

        return;
    }

    public java.lang.String getAppletInfo()
    {
        org.apache.xalan.client.XSLTProcessorApplet r0;

        r0 := @this: org.apache.xalan.client.XSLTProcessorApplet;

        return "Name: XSLTProcessorApplet\r\nAuthor: Scott Boag";
    }

    public java.lang.String[][] getParameterInfo()
    {
        org.apache.xalan.client.XSLTProcessorApplet r3;
        java.lang.String[] $r1, $r2;
        java.lang.String[][] $r0;

        r3 := @this: org.apache.xalan.client.XSLTProcessorApplet;

        $r0 = newarray (java.lang.String[])[2];

        $r1 = newarray (java.lang.String)[3];

        $r1[0] = "styleURL";

        $r1[1] = "String";

        $r1[2] = "URL to an XSL stylesheet";

        $r0[0] = $r1;

        $r2 = newarray (java.lang.String)[3];

        $r2[0] = "documentURL";

        $r2[1] = "String";

        $r2[2] = "URL to an XML document";

        $r0[1] = $r2;

        return $r0;
    }

    public void init()
    {
        org.apache.xalan.client.XSLTProcessorApplet r0;
        java.net.URL $r4, $r5;
        java.lang.String $r1, $r3;
        java.util.Hashtable $r2;

        r0 := @this: org.apache.xalan.client.XSLTProcessorApplet;

        $r1 = virtualinvoke r0.<java.applet.Applet: java.lang.String getParameter(java.lang.String)>("styleURL");

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.util.Hashtable m_parameters> = $r2;

        if $r1 == null goto label1;

        virtualinvoke r0.<org.apache.xalan.client.XSLTProcessorApplet: void setStyleURL(java.lang.String)>($r1);

     label1:
        $r3 = virtualinvoke r0.<java.applet.Applet: java.lang.String getParameter(java.lang.String)>("documentURL");

        if $r3 == null goto label2;

        virtualinvoke r0.<org.apache.xalan.client.XSLTProcessorApplet: void setDocumentURL(java.lang.String)>($r3);

     label2:
        $r4 = virtualinvoke r0.<java.applet.Applet: java.net.URL getCodeBase()>();

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.net.URL m_codeBase> = $r4;

        $r5 = virtualinvoke r0.<java.applet.Applet: java.net.URL getDocumentBase()>();

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.net.URL m_documentBase> = $r5;

        virtualinvoke r0.<java.applet.Applet: void resize(int,int)>(320, 240);

        return;
    }

    public void start()
    {
        java.lang.Throwable $r22;
        javax.xml.transform.Transformer $r16;
        javax.xml.transform.Templates $r15;
        org.apache.xalan.client.XSLTProcessorApplet r0;
        javax.xml.transform.stream.StreamSource $r13, $r17;
        javax.xml.transform.stream.StreamResult $r18;
        java.lang.ThreadGroup $r4;
        java.lang.Thread $r2, $r3, $r6;
        org.apache.xalan.client.XSLTProcessorApplet$TrustedAgent $r1, $r5;
        java.io.PrintWriter $r10;
        java.io.PrintStream $r19, $r21;
        java.io.StringWriter $r11;
        java.lang.Exception $r20;
        java.io.StringReader $r8, $r9;
        javax.xml.transform.TransformerFactory $r7, r12, $r14;

        r0 := @this: org.apache.xalan.client.XSLTProcessorApplet;

        $r1 = new org.apache.xalan.client.XSLTProcessorApplet$TrustedAgent;

        specialinvoke $r1.<org.apache.xalan.client.XSLTProcessorApplet$TrustedAgent: void <init>(org.apache.xalan.client.XSLTProcessorApplet)>(r0);

        r0.<org.apache.xalan.client.XSLTProcessorApplet: org.apache.xalan.client.XSLTProcessorApplet$TrustedAgent m_trustedAgent> = $r1;

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r3 = new java.lang.Thread;

        $r4 = virtualinvoke $r2.<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>();

        $r5 = r0.<org.apache.xalan.client.XSLTProcessorApplet: org.apache.xalan.client.XSLTProcessorApplet$TrustedAgent m_trustedAgent>;

        specialinvoke $r3.<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)>($r4, $r5);

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.Thread m_trustedWorker> = $r3;

        $r6 = r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.Thread m_trustedWorker>;

        virtualinvoke $r6.<java.lang.Thread: void start()>();

     label1:
        $r7 = staticinvoke <javax.xml.transform.TransformerFactory: javax.xml.transform.TransformerFactory newInstance()>();

        r0.<org.apache.xalan.client.XSLTProcessorApplet: javax.xml.transform.TransformerFactory m_tfactory> = $r7;

        virtualinvoke r0.<java.applet.Applet: void showStatus(java.lang.String)>("Causing Transformer and Parser to Load and JIT...");

        $r8 = new java.io.StringReader;

        specialinvoke $r8.<java.io.StringReader: void <init>(java.lang.String)>("<?xml version=\'1.0\'?><foo/>");

        $r9 = new java.io.StringReader;

        specialinvoke $r9.<java.io.StringReader: void <init>(java.lang.String)>("<?xml version=\'1.0\'?><xsl:stylesheet xmlns:xsl=\'http://www.w3.org/1999/XSL/Transform\' version=\'1.0\'><xsl:template match=\'foo\'><out/></xsl:template></xsl:stylesheet>");

        $r10 = new java.io.PrintWriter;

        $r11 = new java.io.StringWriter;

        specialinvoke $r11.<java.io.StringWriter: void <init>()>();

        specialinvoke $r10.<java.io.PrintWriter: void <init>(java.io.Writer)>($r11);

        r12 = r0.<org.apache.xalan.client.XSLTProcessorApplet: javax.xml.transform.TransformerFactory m_tfactory>;

        entermonitor r12;

     label2:
        $r14 = r0.<org.apache.xalan.client.XSLTProcessorApplet: javax.xml.transform.TransformerFactory m_tfactory>;

        $r13 = new javax.xml.transform.stream.StreamSource;

        specialinvoke $r13.<javax.xml.transform.stream.StreamSource: void <init>(java.io.Reader)>($r9);

        $r15 = virtualinvoke $r14.<javax.xml.transform.TransformerFactory: javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)>($r13);

        $r16 = interfaceinvoke $r15.<javax.xml.transform.Templates: javax.xml.transform.Transformer newTransformer()>();

        $r17 = new javax.xml.transform.stream.StreamSource;

        specialinvoke $r17.<javax.xml.transform.stream.StreamSource: void <init>(java.io.Reader)>($r8);

        $r18 = new javax.xml.transform.stream.StreamResult;

        specialinvoke $r18.<javax.xml.transform.stream.StreamResult: void <init>(java.io.Writer)>($r10);

        virtualinvoke $r16.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r17, $r18);

        exitmonitor r12;

        goto label4;

     label3:
        $r22 := @caughtexception;

        exitmonitor r12;

        throw $r22;

     label4:
        $r19 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>("Primed the pump!");

        virtualinvoke r0.<java.applet.Applet: void showStatus(java.lang.String)>("Ready to go!");

     label5:
        goto label7;

     label6:
        $r20 := @caughtexception;

        virtualinvoke r0.<java.applet.Applet: void showStatus(java.lang.String)>("Could not prime the pump!");

        $r21 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>("Could not prime the pump!");

        virtualinvoke $r20.<java.lang.Throwable: void printStackTrace()>();

     label7:
        return;

        catch java.lang.Throwable from label2 to label3 with label3;
        catch java.lang.Exception from label1 to label5 with label6;
    }

    public void paint(java.awt.Graphics)
    {
        java.awt.Graphics r1;
        org.apache.xalan.client.XSLTProcessorApplet r0;

        r0 := @this: org.apache.xalan.client.XSLTProcessorApplet;

        r1 := @parameter0: java.awt.Graphics;

        return;
    }

    public void stop()
    {
        org.apache.xalan.client.XSLTProcessorApplet r0;
        java.lang.Thread $r1, $r2;

        r0 := @this: org.apache.xalan.client.XSLTProcessorApplet;

        $r1 = r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.Thread m_trustedWorker>;

        if null == $r1 goto label1;

        $r2 = r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.Thread m_trustedWorker>;

        virtualinvoke $r2.<java.lang.Thread: void stop()>();

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.Thread m_trustedWorker> = null;

     label1:
        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String m_styleURLOfCached> = null;

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String m_documentURLOfCached> = null;

        return;
    }

    public void destroy()
    {
        org.apache.xalan.client.XSLTProcessorApplet r0;
        java.lang.Thread $r1, $r2;

        r0 := @this: org.apache.xalan.client.XSLTProcessorApplet;

        $r1 = r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.Thread m_trustedWorker>;

        if null == $r1 goto label1;

        $r2 = r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.Thread m_trustedWorker>;

        virtualinvoke $r2.<java.lang.Thread: void stop()>();

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.Thread m_trustedWorker> = null;

     label1:
        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String m_styleURLOfCached> = null;

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String m_documentURLOfCached> = null;

        return;
    }

    public void setStyleURL(java.lang.String)
    {
        java.lang.String r1;
        org.apache.xalan.client.XSLTProcessorApplet r0;

        r0 := @this: org.apache.xalan.client.XSLTProcessorApplet;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String m_styleURL> = r1;

        return;
    }

    public void setDocumentURL(java.lang.String)
    {
        java.lang.String r1;
        org.apache.xalan.client.XSLTProcessorApplet r0;

        r0 := @this: org.apache.xalan.client.XSLTProcessorApplet;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String m_documentURL> = r1;

        return;
    }

    public void freeCache()
    {
        org.apache.xalan.client.XSLTProcessorApplet r0;

        r0 := @this: org.apache.xalan.client.XSLTProcessorApplet;

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String m_styleURLOfCached> = null;

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String m_documentURLOfCached> = null;

        return;
    }

    public void setStyleSheetAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.xalan.client.XSLTProcessorApplet r0;
        java.lang.String r1, r2, r3, r4;

        r0 := @this: org.apache.xalan.client.XSLTProcessorApplet;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String m_nameOfIDAttrOfElemToModify> = r1;

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String m_elemIdToModify> = r2;

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String m_attrNameToSet> = r3;

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String m_attrValueToSet> = r4;

        return;
    }

    public void setStylesheetParam(java.lang.String, java.lang.String)
    {
        org.apache.xalan.client.XSLTProcessorApplet r0;
        java.lang.String r1, r2;
        java.util.Hashtable $r3;

        r0 := @this: org.apache.xalan.client.XSLTProcessorApplet;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.xalan.client.XSLTProcessorApplet: java.util.Hashtable m_parameters>;

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public java.lang.String escapeString(java.lang.String)
    {
        org.apache.xalan.client.XSLTProcessorApplet r18;
        java.lang.Object[] $r3, $r14;
        java.lang.StringBuffer $r6, $r7, $r9, $r19, $r21;
        int $i0, $i2, $i4, $i5, $i6, $i7, i8, i9, $i10, $i11, $i12, $i14, $i15, $i16, $i18, $i19, $i21, $i22, $i23, $i25, $i26, $i27, $i28, $i30, $i31, $i33;
        java.lang.String r1, $r5, $r8, $r10, $r11, $r12, $r15, $r16, $r17;
        char $c1, $c3;
        java.lang.RuntimeException $r20, $r22;

        r18 := @this: org.apache.xalan.client.XSLTProcessorApplet;

        r1 := @parameter0: java.lang.String;

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        i8 = 0;

        goto label10;

     label01:
        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i8);

        $i10 = (int) $c1;

        if 60 != $i10 goto label02;

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&lt;");

        goto label09;

     label02:
        $i11 = (int) $c1;

        if 62 != $i11 goto label03;

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&gt;");

        goto label09;

     label03:
        $i12 = (int) $c1;

        if 38 != $i12 goto label04;

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&amp;");

        goto label09;

     label04:
        $i14 = (int) 55296;

        $i15 = (int) $c1;

        if $i14 > $i15 goto label08;

        $i16 = (int) $c1;

        $i18 = (int) 56320;

        if $i16 >= $i18 goto label08;

        $i2 = i8 + 1;

        if $i2 < $i0 goto label05;

        $r20 = new java.lang.RuntimeException;

        $r14 = newarray (java.lang.Object)[1];

        $i19 = (int) $c1;

        $r15 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i19);

        $r14[0] = $r15;

        $r16 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_INVALID_UTF16_SURROGATE", $r14);

        specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String)>($r16);

        throw $r20;

     label05:
        i8 = i8 + 1;

        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i8);

        $i21 = (int) 56320;

        $i22 = (int) $c3;

        if $i21 > $i22 goto label06;

        $i23 = (int) $c3;

        $i25 = (int) 57344;

        if $i23 < $i25 goto label07;

     label06:
        $r22 = new java.lang.RuntimeException;

        $r3 = newarray (java.lang.Object)[1];

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $i26 = (int) $c1;

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i26);

        $r6 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $i27 = (int) $c3;

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i27);

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        $r3[0] = $r10;

        $r11 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_INVALID_UTF16_SURROGATE", $r3);

        specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);

        throw $r22;

     label07:
        $i28 = (int) $c1;

        $i30 = (int) 55296;

        $i4 = $i28 - $i30;

        $i5 = $i4 << 10;

        $i31 = (int) $c3;

        $i6 = $i5 + $i31;

        $i33 = (int) 56320;

        $i7 = $i6 - $i33;

        i9 = $i7 + 65536;

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&#x");

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i9);

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        goto label09;

     label08:
        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

     label09:
        i8 = i8 + 1;

     label10:
        if i8 < $i0 goto label01;

        $r17 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r17;
    }

    public java.lang.String getHtmlText()
    {
        java.io.PrintStream $r6;
        java.lang.Throwable $r8;
        org.apache.xalan.client.XSLTProcessorApplet r0;
        java.lang.InterruptedException $r5;
        java.lang.Thread $r2, $r3, r9;
        java.lang.String $r4, $r7;
        org.apache.xalan.client.XSLTProcessorApplet$TrustedAgent $r1;

        r0 := @this: org.apache.xalan.client.XSLTProcessorApplet;

        $r1 = r0.<org.apache.xalan.client.XSLTProcessorApplet: org.apache.xalan.client.XSLTProcessorApplet$TrustedAgent m_trustedAgent>;

        $r1.<org.apache.xalan.client.XSLTProcessorApplet$TrustedAgent: boolean m_getData> = 1;

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.Thread m_callThread> = $r2;

     label1:
        r9 = r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.Thread m_callThread>;

        entermonitor r9;

     label2:
        $r3 = r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.Thread m_callThread>;

        virtualinvoke $r3.<java.lang.Object: void wait()>();

        exitmonitor r9;

        goto label4;

     label3:
        $r8 := @caughtexception;

        exitmonitor r9;

        throw $r8;

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r7 = virtualinvoke $r5.<java.lang.Throwable: java.lang.String getMessage()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r7);

     label6:
        $r4 = r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String m_htmlText>;

        return $r4;

        catch java.lang.Throwable from label2 to label3 with label3;
        catch java.lang.InterruptedException from label1 to label4 with label5;
    }

    public java.lang.String getTreeAsText(java.lang.String) throws java.io.IOException
    {
        java.io.PrintStream $r8;
        java.lang.Throwable $r10;
        org.apache.xalan.client.XSLTProcessorApplet r0;
        java.lang.InterruptedException $r7;
        java.lang.Thread $r4, $r5, r11;
        java.lang.String r1, $r6, $r9;
        org.apache.xalan.client.XSLTProcessorApplet$TrustedAgent $r2, $r3;

        r0 := @this: org.apache.xalan.client.XSLTProcessorApplet;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String m_treeURL> = r1;

        $r2 = r0.<org.apache.xalan.client.XSLTProcessorApplet: org.apache.xalan.client.XSLTProcessorApplet$TrustedAgent m_trustedAgent>;

        $r2.<org.apache.xalan.client.XSLTProcessorApplet$TrustedAgent: boolean m_getData> = 1;

        $r3 = r0.<org.apache.xalan.client.XSLTProcessorApplet: org.apache.xalan.client.XSLTProcessorApplet$TrustedAgent m_trustedAgent>;

        $r3.<org.apache.xalan.client.XSLTProcessorApplet$TrustedAgent: boolean m_getSource> = 1;

        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.Thread m_callThread> = $r4;

     label1:
        r11 = r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.Thread m_callThread>;

        entermonitor r11;

     label2:
        $r5 = r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.Thread m_callThread>;

        virtualinvoke $r5.<java.lang.Object: void wait()>();

        exitmonitor r11;

        goto label4;

     label3:
        $r10 := @caughtexception;

        exitmonitor r11;

        throw $r10;

     label4:
        goto label6;

     label5:
        $r7 := @caughtexception;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r9 = virtualinvoke $r7.<java.lang.Throwable: java.lang.String getMessage()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r9);

     label6:
        $r6 = r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String m_sourceText>;

        return $r6;

        catch java.lang.Throwable from label2 to label3 with label3;
        catch java.lang.InterruptedException from label1 to label4 with label5;
    }

    private java.lang.String getSource() throws javax.xml.transform.TransformerException
    {
        java.lang.Throwable $r13;
        javax.xml.transform.Transformer $r7;
        org.apache.xalan.client.XSLTProcessorApplet r3;
        java.net.URL $r5, $r18;
        javax.xml.transform.stream.StreamSource $r19;
        javax.xml.transform.stream.StreamResult $r20;
        int $i1;
        java.lang.String $r4, $r9, r14;
        java.io.PrintWriter $r17;
        java.net.MalformedURLException $r12;
        java.io.StringWriter $r16;
        java.lang.Exception $r11;
        javax.xml.transform.TransformerFactory $r6, r15;

        r3 := @this: org.apache.xalan.client.XSLTProcessorApplet;

        $r16 = new java.io.StringWriter;

        specialinvoke $r16.<java.io.StringWriter: void <init>()>();

        $r17 = new java.io.PrintWriter;

        specialinvoke $r17.<java.io.PrintWriter: void <init>(java.io.Writer,boolean)>($r16, 0);

        r14 = "";

     label1:
        $r18 = new java.net.URL;

        $r5 = r3.<org.apache.xalan.client.XSLTProcessorApplet: java.net.URL m_documentBase>;

        $r4 = r3.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String m_treeURL>;

        specialinvoke $r18.<java.net.URL: void <init>(java.net.URL,java.lang.String)>($r5, $r4);

        r15 = r3.<org.apache.xalan.client.XSLTProcessorApplet: javax.xml.transform.TransformerFactory m_tfactory>;

        entermonitor r15;

     label2:
        $r6 = r3.<org.apache.xalan.client.XSLTProcessorApplet: javax.xml.transform.TransformerFactory m_tfactory>;

        $r7 = virtualinvoke $r6.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer()>();

        $r19 = new javax.xml.transform.stream.StreamSource;

        $r9 = virtualinvoke $r18.<java.net.URL: java.lang.String toString()>();

        specialinvoke $r19.<javax.xml.transform.stream.StreamSource: void <init>(java.lang.String)>($r9);

        $r20 = new javax.xml.transform.stream.StreamResult;

        specialinvoke $r20.<javax.xml.transform.stream.StreamResult: void <init>(java.io.Writer)>($r17);

        virtualinvoke $r7.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r19, $r20);

        r14 = virtualinvoke $r16.<java.io.StringWriter: java.lang.String toString()>();

        exitmonitor r15;

        goto label4;

     label3:
        $r13 := @caughtexception;

        exitmonitor r15;

        throw $r13;

     label4:
        goto label7;

     label5:
        $r12 := @caughtexception;

        virtualinvoke $r12.<java.lang.Throwable: void printStackTrace()>();

        $i1 = (int) -1;

        staticinvoke <java.lang.System: void exit(int)>($i1);

        goto label7;

     label6:
        $r11 := @caughtexception;

        virtualinvoke $r11.<java.lang.Throwable: void printStackTrace()>();

     label7:
        return r14;

        catch java.lang.Throwable from label2 to label3 with label3;
        catch java.net.MalformedURLException from label1 to label4 with label5;
        catch java.lang.Exception from label1 to label4 with label6;
    }

    public java.lang.String getSourceTreeAsText() throws java.lang.Exception
    {
        java.lang.String $r1, $r2;
        org.apache.xalan.client.XSLTProcessorApplet r0;

        r0 := @this: org.apache.xalan.client.XSLTProcessorApplet;

        $r1 = r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String m_documentURL>;

        $r2 = virtualinvoke r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String getTreeAsText(java.lang.String)>($r1);

        return $r2;
    }

    public java.lang.String getStyleTreeAsText() throws java.lang.Exception
    {
        java.lang.String $r1, $r2;
        org.apache.xalan.client.XSLTProcessorApplet r0;

        r0 := @this: org.apache.xalan.client.XSLTProcessorApplet;

        $r1 = r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String m_styleURL>;

        $r2 = virtualinvoke r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String getTreeAsText(java.lang.String)>($r1);

        return $r2;
    }

    public java.lang.String getResultTreeAsText() throws java.lang.Exception
    {
        java.lang.String $r1, $r2;
        org.apache.xalan.client.XSLTProcessorApplet r0;

        r0 := @this: org.apache.xalan.client.XSLTProcessorApplet;

        $r1 = virtualinvoke r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String getHtmlText()>();

        $r2 = virtualinvoke r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String escapeString(java.lang.String)>($r1);

        return $r2;
    }

    public java.lang.String transformToHtml(java.lang.String, java.lang.String)
    {
        org.apache.xalan.client.XSLTProcessorApplet r2;
        java.lang.String r0, r1, $r3;

        r2 := @this: org.apache.xalan.client.XSLTProcessorApplet;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if null == r0 goto label1;

        r2.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String m_documentURL> = r0;

     label1:
        if null == r1 goto label2;

        r2.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String m_styleURL> = r1;

     label2:
        $r3 = virtualinvoke r2.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String getHtmlText()>();

        return $r3;
    }

    public java.lang.String transformToHtml(java.lang.String)
    {
        java.lang.String r0, $r2;
        org.apache.xalan.client.XSLTProcessorApplet r1;

        r1 := @this: org.apache.xalan.client.XSLTProcessorApplet;

        r0 := @parameter0: java.lang.String;

        if null == r0 goto label1;

        r1.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String m_documentURL> = r0;

     label1:
        r1.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String m_styleURL> = null;

        $r2 = virtualinvoke r1.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String getHtmlText()>();

        return $r2;
    }

    private java.lang.String processTransformation() throws javax.xml.transform.TransformerException
    {
        javax.xml.transform.Transformer $r16;
        org.apache.xalan.client.XSLTProcessorApplet r0;
        java.util.Enumeration $r18, $r19, $r20;
        java.net.URL $r7, $r12, $r32, $r34;
        javax.xml.transform.stream.StreamResult $r31;
        boolean $z0;
        java.io.PrintWriter $r30;
        java.lang.Throwable $r25;
        javax.xml.transform.stream.StreamSource $r33, $r35;
        int $i1, $i3;
        java.lang.String $r6, $r9, $r11, $r14, $r24, $r28;
        java.util.Hashtable $r17, $r22;
        java.net.MalformedURLException $r26;
        javax.xml.transform.TransformerConfigurationException $r27;
        java.io.StringWriter $r29;
        java.lang.Object $r21, $r23;
        javax.xml.transform.TransformerFactory r1, $r15;

        r0 := @this: org.apache.xalan.client.XSLTProcessorApplet;

        virtualinvoke r0.<java.applet.Applet: void showStatus(java.lang.String)>("Waiting for Transformer and Parser to finish loading and JITing...");

        r1 = r0.<org.apache.xalan.client.XSLTProcessorApplet: javax.xml.transform.TransformerFactory m_tfactory>;

        entermonitor r1;

     label01:
        $r29 = new java.io.StringWriter;

        specialinvoke $r29.<java.io.StringWriter: void <init>()>();

        $r30 = new java.io.PrintWriter;

        specialinvoke $r30.<java.io.PrintWriter: void <init>(java.io.Writer,boolean)>($r29, 0);

        $r31 = new javax.xml.transform.stream.StreamResult;

        specialinvoke $r31.<javax.xml.transform.stream.StreamResult: void <init>(java.io.Writer)>($r30);

        virtualinvoke r0.<java.applet.Applet: void showStatus(java.lang.String)>("Begin Transformation...");

     label02:
        $r32 = new java.net.URL;

        $r7 = r0.<org.apache.xalan.client.XSLTProcessorApplet: java.net.URL m_codeBase>;

        $r6 = r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String m_documentURL>;

        specialinvoke $r32.<java.net.URL: void <init>(java.net.URL,java.lang.String)>($r7, $r6);

        $r33 = new javax.xml.transform.stream.StreamSource;

        $r9 = virtualinvoke $r32.<java.net.URL: java.lang.String toString()>();

        specialinvoke $r33.<javax.xml.transform.stream.StreamSource: void <init>(java.lang.String)>($r9);

        $r34 = new java.net.URL;

        $r12 = r0.<org.apache.xalan.client.XSLTProcessorApplet: java.net.URL m_codeBase>;

        $r11 = r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String m_styleURL>;

        specialinvoke $r34.<java.net.URL: void <init>(java.net.URL,java.lang.String)>($r12, $r11);

        $r35 = new javax.xml.transform.stream.StreamSource;

        $r14 = virtualinvoke $r34.<java.net.URL: java.lang.String toString()>();

        specialinvoke $r35.<javax.xml.transform.stream.StreamSource: void <init>(java.lang.String)>($r14);

        $r15 = r0.<org.apache.xalan.client.XSLTProcessorApplet: javax.xml.transform.TransformerFactory m_tfactory>;

        $r16 = virtualinvoke $r15.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source)>($r35);

        $r17 = r0.<org.apache.xalan.client.XSLTProcessorApplet: java.util.Hashtable m_parameters>;

        $r18 = virtualinvoke $r17.<java.util.Hashtable: java.util.Enumeration keys()>();

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.util.Enumeration m_keys> = $r18;

        goto label04;

     label03:
        $r20 = r0.<org.apache.xalan.client.XSLTProcessorApplet: java.util.Enumeration m_keys>;

        $r21 = interfaceinvoke $r20.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r22 = r0.<org.apache.xalan.client.XSLTProcessorApplet: java.util.Hashtable m_parameters>;

        $r23 = virtualinvoke $r22.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r21);

        $r24 = (java.lang.String) $r21;

        virtualinvoke $r16.<javax.xml.transform.Transformer: void setParameter(java.lang.String,java.lang.Object)>($r24, $r23);

     label04:
        $r19 = r0.<org.apache.xalan.client.XSLTProcessorApplet: java.util.Enumeration m_keys>;

        $z0 = interfaceinvoke $r19.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 != 0 goto label03;

        virtualinvoke $r16.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r33, $r31);

     label05:
        goto label08;

     label06:
        $r27 := @caughtexception;

        virtualinvoke $r27.<javax.xml.transform.TransformerException: void printStackTrace()>();

        $i1 = (int) -1;

        staticinvoke <java.lang.System: void exit(int)>($i1);

        goto label08;

     label07:
        $r26 := @caughtexception;

        virtualinvoke $r26.<java.lang.Throwable: void printStackTrace()>();

        $i3 = (int) -1;

        staticinvoke <java.lang.System: void exit(int)>($i3);

     label08:
        virtualinvoke r0.<java.applet.Applet: void showStatus(java.lang.String)>("Transformation Done!");

        $r28 = virtualinvoke $r29.<java.io.StringWriter: java.lang.String toString()>();

        exitmonitor r1;

        goto label10;

     label09:
        $r25 := @caughtexception;

        exitmonitor r1;

        throw $r25;

     label10:
        return $r28;

        catch javax.xml.transform.TransformerConfigurationException from label02 to label05 with label06;
        catch java.net.MalformedURLException from label02 to label05 with label07;
        catch java.lang.Throwable from label01 to label09 with label09;
    }

    static java.lang.Thread access$000(org.apache.xalan.client.XSLTProcessorApplet)
    {
        org.apache.xalan.client.XSLTProcessorApplet r0;
        java.lang.Thread $r1;

        r0 := @parameter0: org.apache.xalan.client.XSLTProcessorApplet;

        $r1 = r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.Thread m_trustedWorker>;

        return $r1;
    }

    static java.lang.String access$102(org.apache.xalan.client.XSLTProcessorApplet, java.lang.String)
    {
        java.lang.String r1;
        org.apache.xalan.client.XSLTProcessorApplet r0;

        r0 := @parameter0: org.apache.xalan.client.XSLTProcessorApplet;

        r1 := @parameter1: java.lang.String;

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String m_htmlText> = r1;

        return r1;
    }

    static java.lang.String access$202(org.apache.xalan.client.XSLTProcessorApplet, java.lang.String)
    {
        java.lang.String r1;
        org.apache.xalan.client.XSLTProcessorApplet r0;

        r0 := @parameter0: org.apache.xalan.client.XSLTProcessorApplet;

        r1 := @parameter1: java.lang.String;

        r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String m_sourceText> = r1;

        return r1;
    }

    static java.lang.String access$300(org.apache.xalan.client.XSLTProcessorApplet) throws javax.xml.transform.TransformerException
    {
        java.lang.String $r1;
        org.apache.xalan.client.XSLTProcessorApplet r0;

        r0 := @parameter0: org.apache.xalan.client.XSLTProcessorApplet;

        $r1 = specialinvoke r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String getSource()>();

        return $r1;
    }

    static java.lang.String access$400(org.apache.xalan.client.XSLTProcessorApplet) throws javax.xml.transform.TransformerException
    {
        java.lang.String $r1;
        org.apache.xalan.client.XSLTProcessorApplet r0;

        r0 := @parameter0: org.apache.xalan.client.XSLTProcessorApplet;

        $r1 = specialinvoke r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String processTransformation()>();

        return $r1;
    }

    static java.lang.Thread access$500(org.apache.xalan.client.XSLTProcessorApplet)
    {
        org.apache.xalan.client.XSLTProcessorApplet r0;
        java.lang.Thread $r1;

        r0 := @parameter0: org.apache.xalan.client.XSLTProcessorApplet;

        $r1 = r0.<org.apache.xalan.client.XSLTProcessorApplet: java.lang.Thread m_callThread>;

        return $r1;
    }
}
