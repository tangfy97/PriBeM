public abstract class com.sun.xml.bind.v2.runtime.reflect.opt.OptimizedTransducedAccessorFactory extends java.lang.Object
{
    private static final java.util.logging.Logger logger;
    private static final java.lang.String fieldTemplateName;
    private static final java.lang.String methodTemplateName;
    private static final java.util.Map suffixMap;

    private void <init>()
    {
        com.sun.xml.bind.v2.runtime.reflect.opt.OptimizedTransducedAccessorFactory r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.reflect.opt.OptimizedTransducedAccessorFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor get(com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo)
    {
        java.util.Map $r31, $r57;
        com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor $r21;
        java.lang.StringBuilder $r6, $r8, $r9, $r11, $r13, $r16, $r18, $r28, $r30, $r34, $r39, $r40, $r42, $r46, $r47, $r49, $r54, $r56, $r60, $r65, $r66, $r68;
        java.lang.String $r7, $r10, $r12, $r17, $r19, $r29, $r33, $r35, $r37, $r38, $r41, $r43, $r45, $r48, $r50, $r52, $r55, $r59, $r61, $r63, $r64, $r67, $r69, $r70;
        com.sun.xml.bind.v2.runtime.reflect.Accessor$GetterSetterReflection r84;
        java.lang.reflect.Field r82;
        com.sun.xml.bind.v2.runtime.reflect.Accessor$FieldReflection r81;
        java.lang.InstantiationException $r77;
        java.lang.SecurityException $r71;
        java.lang.reflect.Method $r22, $r23, $r24, $r26, $r27, $r44, $r51;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.IllegalAccessException $r74;
        com.sun.xml.bind.v2.model.core.TypeInfo $r2;
        java.util.logging.Logger $r14, $r73, $r76, $r79;
        java.lang.String[] $r36, $r62;
        java.util.logging.Level $r15, $r72, $r75, $r78;
        com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo r0;
        int $i0, $i1, $i2;
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r1;
        java.lang.Object $r4, $r20, $r32, $r58;
        java.lang.Class r5, $r25, $r53, r80, $r83;
        com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo $r3;

        r0 := @parameter0: com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo;

        $r1 = interfaceinvoke r0.<com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo: com.sun.xml.bind.v2.runtime.reflect.Accessor getAccessor()>();

        r80 = null;

        $r2 = interfaceinvoke r0.<com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo: com.sun.xml.bind.v2.model.core.TypeInfo parent()>();

        $z0 = $r2 instanceof com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo;

        if $z0 != 0 goto label01;

        return null;

     label01:
        $r3 = (com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo) $r2;

        $r4 = interfaceinvoke $r3.<com.sun.xml.bind.v2.model.runtime.RuntimeClassInfo: java.lang.Object getClazz()>();

        r5 = (java.lang.Class) $r4;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = staticinvoke <com.sun.xml.bind.v2.bytecode.ClassTailor: java.lang.String toVMClassName(java.lang.Class)>(r5);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_JaxbXducedAccessor_");

        $r10 = interfaceinvoke r0.<com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo: java.lang.String getName()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = $r1 instanceof com.sun.xml.bind.v2.runtime.reflect.Accessor$FieldReflection;

        if $z1 == 0 goto label04;

        r81 = (com.sun.xml.bind.v2.runtime.reflect.Accessor$FieldReflection) $r1;

        r82 = r81.<com.sun.xml.bind.v2.runtime.reflect.Accessor$FieldReflection: java.lang.reflect.Field f>;

        $i2 = virtualinvoke r82.<java.lang.reflect.Field: int getModifiers()>();

        $z5 = staticinvoke <java.lang.reflect.Modifier: boolean isPrivate(int)>($i2);

        if $z5 != 0 goto label02;

        $z6 = staticinvoke <java.lang.reflect.Modifier: boolean isFinal(int)>($i2);

        if $z6 == 0 goto label03;

     label02:
        return null;

     label03:
        $r53 = virtualinvoke r82.<java.lang.reflect.Field: java.lang.Class getType()>();

        $z7 = virtualinvoke $r53.<java.lang.Class: boolean isPrimitive()>();

        if $z7 == 0 goto label04;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r55 = <com.sun.xml.bind.v2.runtime.reflect.opt.OptimizedTransducedAccessorFactory: java.lang.String fieldTemplateName>;

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        $r57 = <com.sun.xml.bind.v2.runtime.reflect.opt.OptimizedTransducedAccessorFactory: java.util.Map suffixMap>;

        $r58 = interfaceinvoke $r57.<java.util.Map: java.lang.Object get(java.lang.Object)>($r53);

        $r59 = (java.lang.String) $r58;

        $r60 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        $r62 = newarray (java.lang.String)[4];

        $r63 = staticinvoke <com.sun.xml.bind.v2.bytecode.ClassTailor: java.lang.String toVMClassName(java.lang.Class)>(class "Lcom/sun/xml/bind/v2/runtime/reflect/opt/Bean;");

        $r62[0] = $r63;

        $r64 = staticinvoke <com.sun.xml.bind.v2.bytecode.ClassTailor: java.lang.String toVMClassName(java.lang.Class)>(r5);

        $r62[1] = $r64;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("f_");

        $r67 = virtualinvoke $r53.<java.lang.Class: java.lang.String getName()>();

        $r68 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        $r62[2] = $r69;

        $r70 = virtualinvoke r82.<java.lang.reflect.Field: java.lang.String getName()>();

        $r62[3] = $r70;

        r80 = staticinvoke <com.sun.xml.bind.v2.runtime.reflect.opt.AccessorInjector: java.lang.Class prepare(java.lang.Class,java.lang.String,java.lang.String,java.lang.String[])>(r5, $r61, $r12, $r62);

     label04:
        $r83 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r83 != class "Lcom/sun/xml/bind/v2/runtime/reflect/Accessor$GetterSetterReflection;" goto label09;

        r84 = (com.sun.xml.bind.v2.runtime.reflect.Accessor$GetterSetterReflection) $r1;

        $r22 = r84.<com.sun.xml.bind.v2.runtime.reflect.Accessor$GetterSetterReflection: java.lang.reflect.Method getter>;

        if $r22 == null goto label05;

        $r23 = r84.<com.sun.xml.bind.v2.runtime.reflect.Accessor$GetterSetterReflection: java.lang.reflect.Method setter>;

        if $r23 != null goto label06;

     label05:
        return null;

     label06:
        $r24 = r84.<com.sun.xml.bind.v2.runtime.reflect.Accessor$GetterSetterReflection: java.lang.reflect.Method getter>;

        $r25 = virtualinvoke $r24.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r26 = r84.<com.sun.xml.bind.v2.runtime.reflect.Accessor$GetterSetterReflection: java.lang.reflect.Method getter>;

        $i0 = virtualinvoke $r26.<java.lang.reflect.Method: int getModifiers()>();

        $z2 = staticinvoke <java.lang.reflect.Modifier: boolean isPrivate(int)>($i0);

        if $z2 != 0 goto label07;

        $r27 = r84.<com.sun.xml.bind.v2.runtime.reflect.Accessor$GetterSetterReflection: java.lang.reflect.Method setter>;

        $i1 = virtualinvoke $r27.<java.lang.reflect.Method: int getModifiers()>();

        $z3 = staticinvoke <java.lang.reflect.Modifier: boolean isPrivate(int)>($i1);

        if $z3 == 0 goto label08;

     label07:
        return null;

     label08:
        $z4 = virtualinvoke $r25.<java.lang.Class: boolean isPrimitive()>();

        if $z4 == 0 goto label09;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = <com.sun.xml.bind.v2.runtime.reflect.opt.OptimizedTransducedAccessorFactory: java.lang.String methodTemplateName>;

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = <com.sun.xml.bind.v2.runtime.reflect.opt.OptimizedTransducedAccessorFactory: java.util.Map suffixMap>;

        $r32 = interfaceinvoke $r31.<java.util.Map: java.lang.Object get(java.lang.Object)>($r25);

        $r33 = (java.lang.String) $r32;

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        $r36 = newarray (java.lang.String)[6];

        $r37 = staticinvoke <com.sun.xml.bind.v2.bytecode.ClassTailor: java.lang.String toVMClassName(java.lang.Class)>(class "Lcom/sun/xml/bind/v2/runtime/reflect/opt/Bean;");

        $r36[0] = $r37;

        $r38 = staticinvoke <com.sun.xml.bind.v2.bytecode.ClassTailor: java.lang.String toVMClassName(java.lang.Class)>(r5);

        $r36[1] = $r38;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("get_");

        $r41 = virtualinvoke $r25.<java.lang.Class: java.lang.String getName()>();

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        $r36[2] = $r43;

        $r44 = r84.<com.sun.xml.bind.v2.runtime.reflect.Accessor$GetterSetterReflection: java.lang.reflect.Method getter>;

        $r45 = virtualinvoke $r44.<java.lang.reflect.Method: java.lang.String getName()>();

        $r36[3] = $r45;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("set_");

        $r48 = virtualinvoke $r25.<java.lang.Class: java.lang.String getName()>();

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        $r36[4] = $r50;

        $r51 = r84.<com.sun.xml.bind.v2.runtime.reflect.Accessor$GetterSetterReflection: java.lang.reflect.Method setter>;

        $r52 = virtualinvoke $r51.<java.lang.reflect.Method: java.lang.String getName()>();

        $r36[5] = $r52;

        r80 = staticinvoke <com.sun.xml.bind.v2.runtime.reflect.opt.AccessorInjector: java.lang.Class prepare(java.lang.Class,java.lang.String,java.lang.String,java.lang.String[])>(r5, $r35, $r12, $r36);

     label09:
        if r80 != null goto label10;

        return null;

     label10:
        $r14 = <com.sun.xml.bind.v2.runtime.reflect.opt.OptimizedTransducedAccessorFactory: java.util.logging.Logger logger>;

        $r15 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using optimized TransducedAccessor for ");

        $r17 = interfaceinvoke r0.<com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo: java.lang.String displayName()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r15, $r19);

     label11:
        $r20 = virtualinvoke r80.<java.lang.Class: java.lang.Object newInstance()>();

        $r21 = (com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor) $r20;

     label12:
        return $r21;

     label13:
        $r77 := @caughtexception;

        $r79 = <com.sun.xml.bind.v2.runtime.reflect.opt.OptimizedTransducedAccessorFactory: java.util.logging.Logger logger>;

        $r78 = <java.util.logging.Level: java.util.logging.Level INFO>;

        virtualinvoke $r79.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r78, "failed to load an optimized TransducedAccessor", $r77);

        goto label16;

     label14:
        $r74 := @caughtexception;

        $r76 = <com.sun.xml.bind.v2.runtime.reflect.opt.OptimizedTransducedAccessorFactory: java.util.logging.Logger logger>;

        $r75 = <java.util.logging.Level: java.util.logging.Level INFO>;

        virtualinvoke $r76.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r75, "failed to load an optimized TransducedAccessor", $r74);

        goto label16;

     label15:
        $r71 := @caughtexception;

        $r73 = <com.sun.xml.bind.v2.runtime.reflect.opt.OptimizedTransducedAccessorFactory: java.util.logging.Logger logger>;

        $r72 = <java.util.logging.Level: java.util.logging.Level INFO>;

        virtualinvoke $r73.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r72, "failed to load an optimized TransducedAccessor", $r71);

     label16:
        return null;

        catch java.lang.InstantiationException from label11 to label12 with label13;
        catch java.lang.IllegalAccessException from label11 to label12 with label14;
        catch java.lang.SecurityException from label11 to label12 with label15;
    }

    static void <clinit>()
    {
        java.util.Map $r13, $r15, $r17, $r19, $r21, $r23, $r25;
        java.util.logging.Logger $r0;
        java.util.HashMap $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r10;
        java.lang.Class $r1, $r6, $r12, $r14, $r16, $r18, $r20, $r22, $r24;

        $r0 = staticinvoke <com.sun.xml.bind.Util: java.util.logging.Logger getClassLogger()>();

        <com.sun.xml.bind.v2.runtime.reflect.opt.OptimizedTransducedAccessorFactory: java.util.logging.Logger logger> = $r0;

        $r1 = class "Lcom/sun/xml/bind/v2/runtime/reflect/opt/TransducedAccessor_field_Byte;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $r3 = "Byte";

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i2 = $i0 - $i1;

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        <com.sun.xml.bind.v2.runtime.reflect.opt.OptimizedTransducedAccessorFactory: java.lang.String fieldTemplateName> = $r5;

        $r6 = class "Lcom/sun/xml/bind/v2/runtime/reflect/opt/TransducedAccessor_method_Byte;";

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $i3 = virtualinvoke $r7.<java.lang.String: int length()>();

        $r8 = "Byte";

        $i4 = virtualinvoke $r8.<java.lang.String: int length()>();

        $i5 = $i3 - $i4;

        $r9 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int,int)>(0, $i5);

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        <com.sun.xml.bind.v2.runtime.reflect.opt.OptimizedTransducedAccessorFactory: java.lang.String methodTemplateName> = $r10;

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        <com.sun.xml.bind.v2.runtime.reflect.opt.OptimizedTransducedAccessorFactory: java.util.Map suffixMap> = $r11;

        $r13 = <com.sun.xml.bind.v2.runtime.reflect.opt.OptimizedTransducedAccessorFactory: java.util.Map suffixMap>;

        $r12 = <java.lang.Byte: java.lang.Class TYPE>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, "Byte");

        $r15 = <com.sun.xml.bind.v2.runtime.reflect.opt.OptimizedTransducedAccessorFactory: java.util.Map suffixMap>;

        $r14 = <java.lang.Short: java.lang.Class TYPE>;

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, "Short");

        $r17 = <com.sun.xml.bind.v2.runtime.reflect.opt.OptimizedTransducedAccessorFactory: java.util.Map suffixMap>;

        $r16 = <java.lang.Integer: java.lang.Class TYPE>;

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, "Integer");

        $r19 = <com.sun.xml.bind.v2.runtime.reflect.opt.OptimizedTransducedAccessorFactory: java.util.Map suffixMap>;

        $r18 = <java.lang.Long: java.lang.Class TYPE>;

        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, "Long");

        $r21 = <com.sun.xml.bind.v2.runtime.reflect.opt.OptimizedTransducedAccessorFactory: java.util.Map suffixMap>;

        $r20 = <java.lang.Boolean: java.lang.Class TYPE>;

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, "Boolean");

        $r23 = <com.sun.xml.bind.v2.runtime.reflect.opt.OptimizedTransducedAccessorFactory: java.util.Map suffixMap>;

        $r22 = <java.lang.Float: java.lang.Class TYPE>;

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, "Float");

        $r25 = <com.sun.xml.bind.v2.runtime.reflect.opt.OptimizedTransducedAccessorFactory: java.util.Map suffixMap>;

        $r24 = <java.lang.Double: java.lang.Class TYPE>;

        interfaceinvoke $r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, "Double");

        return;
    }
}
