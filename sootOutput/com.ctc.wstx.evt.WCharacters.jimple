public class com.ctc.wstx.evt.WCharacters extends com.ctc.wstx.evt.WEvent implements javax.xml.stream.events.Characters
{
    final java.lang.String mContent;
    final boolean mIsCData;
    final boolean mIgnorableWS;
    boolean mWhitespaceChecked;
    boolean mIsWhitespace;

    public void <init>(javax.xml.stream.Location, java.lang.String, boolean)
    {
        javax.xml.stream.Location r1;
        com.ctc.wstx.evt.WCharacters r0;
        java.lang.String r2;
        boolean z0;

        r0 := @this: com.ctc.wstx.evt.WCharacters;

        r1 := @parameter0: javax.xml.stream.Location;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.ctc.wstx.evt.WEvent: void <init>(javax.xml.stream.Location)>(r1);

        r0.<com.ctc.wstx.evt.WCharacters: boolean mWhitespaceChecked> = 0;

        r0.<com.ctc.wstx.evt.WCharacters: boolean mIsWhitespace> = 0;

        r0.<com.ctc.wstx.evt.WCharacters: java.lang.String mContent> = r2;

        r0.<com.ctc.wstx.evt.WCharacters: boolean mIsCData> = z0;

        r0.<com.ctc.wstx.evt.WCharacters: boolean mIgnorableWS> = 0;

        return;
    }

    private void <init>(javax.xml.stream.Location, java.lang.String, boolean, boolean, boolean)
    {
        javax.xml.stream.Location r1;
        com.ctc.wstx.evt.WCharacters r0;
        java.lang.String r2;
        boolean z0, z1, z2;

        r0 := @this: com.ctc.wstx.evt.WCharacters;

        r1 := @parameter0: javax.xml.stream.Location;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        specialinvoke r0.<com.ctc.wstx.evt.WEvent: void <init>(javax.xml.stream.Location)>(r1);

        r0.<com.ctc.wstx.evt.WCharacters: boolean mWhitespaceChecked> = 0;

        r0.<com.ctc.wstx.evt.WCharacters: boolean mIsWhitespace> = 0;

        r0.<com.ctc.wstx.evt.WCharacters: java.lang.String mContent> = r2;

        r0.<com.ctc.wstx.evt.WCharacters: boolean mIsCData> = z0;

        r0.<com.ctc.wstx.evt.WCharacters: boolean mIsWhitespace> = z1;

        if z1 == 0 goto label1;

        r0.<com.ctc.wstx.evt.WCharacters: boolean mWhitespaceChecked> = 1;

        r0.<com.ctc.wstx.evt.WCharacters: boolean mIgnorableWS> = z2;

        goto label2;

     label1:
        r0.<com.ctc.wstx.evt.WCharacters: boolean mWhitespaceChecked> = 0;

        r0.<com.ctc.wstx.evt.WCharacters: boolean mIgnorableWS> = 0;

     label2:
        return;
    }

    public static final com.ctc.wstx.evt.WCharacters createIgnorableWS(javax.xml.stream.Location, java.lang.String)
    {
        com.ctc.wstx.evt.WCharacters $r0;
        java.lang.String r2;
        javax.xml.stream.Location r1;

        r1 := @parameter0: javax.xml.stream.Location;

        r2 := @parameter1: java.lang.String;

        $r0 = new com.ctc.wstx.evt.WCharacters;

        specialinvoke $r0.<com.ctc.wstx.evt.WCharacters: void <init>(javax.xml.stream.Location,java.lang.String,boolean,boolean,boolean)>(r1, r2, 0, 1, 1);

        return $r0;
    }

    public static final com.ctc.wstx.evt.WCharacters createNonIgnorableWS(javax.xml.stream.Location, java.lang.String)
    {
        com.ctc.wstx.evt.WCharacters $r0;
        java.lang.String r2;
        javax.xml.stream.Location r1;

        r1 := @parameter0: javax.xml.stream.Location;

        r2 := @parameter1: java.lang.String;

        $r0 = new com.ctc.wstx.evt.WCharacters;

        specialinvoke $r0.<com.ctc.wstx.evt.WCharacters: void <init>(javax.xml.stream.Location,java.lang.String,boolean,boolean,boolean)>(r1, r2, 0, 1, 0);

        return $r0;
    }

    public javax.xml.stream.events.Characters asCharacters()
    {
        com.ctc.wstx.evt.WCharacters r0;

        r0 := @this: com.ctc.wstx.evt.WCharacters;

        return r0;
    }

    public int getEventType()
    {
        com.ctc.wstx.evt.WCharacters r0;
        byte $b0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.evt.WCharacters;

        $z0 = r0.<com.ctc.wstx.evt.WCharacters: boolean mIsCData>;

        if $z0 == 0 goto label1;

        $b0 = 12;

        goto label2;

     label1:
        $b0 = 4;

     label2:
        return $b0;
    }

    public boolean isCharacters()
    {
        com.ctc.wstx.evt.WCharacters r0;

        r0 := @this: com.ctc.wstx.evt.WCharacters;

        return 1;
    }

    public void writeAsEncodedUnicode(java.io.Writer) throws javax.xml.stream.XMLStreamException
    {
        java.io.Writer r1;
        com.ctc.wstx.evt.WCharacters r0;
        java.io.IOException $r4;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: com.ctc.wstx.evt.WCharacters;

        r1 := @parameter0: java.io.Writer;

     label1:
        $z0 = r0.<com.ctc.wstx.evt.WCharacters: boolean mIsCData>;

        if $z0 == 0 goto label2;

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("<![CDATA[");

        $r3 = r0.<com.ctc.wstx.evt.WCharacters: java.lang.String mContent>;

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r3);

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("]]>");

        goto label3;

     label2:
        $r2 = r0.<com.ctc.wstx.evt.WCharacters: java.lang.String mContent>;

        staticinvoke <com.ctc.wstx.io.TextEscaper: void writeEscapedXMLText(java.io.Writer,java.lang.String)>(r1, $r2);

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

        virtualinvoke r0.<com.ctc.wstx.evt.WCharacters: void throwFromIOE(java.io.IOException)>($r4);

     label5:
        return;

        catch java.io.IOException from label1 to label3 with label4;
    }

    public void writeUsing(javax.xml.stream.XMLStreamWriter) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.evt.WCharacters r0;
        javax.xml.stream.XMLStreamWriter r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: com.ctc.wstx.evt.WCharacters;

        r1 := @parameter0: javax.xml.stream.XMLStreamWriter;

        $z0 = r0.<com.ctc.wstx.evt.WCharacters: boolean mIsCData>;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.ctc.wstx.evt.WCharacters: java.lang.String mContent>;

        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void writeCData(java.lang.String)>($r3);

        goto label2;

     label1:
        $r2 = r0.<com.ctc.wstx.evt.WCharacters: java.lang.String mContent>;

        interfaceinvoke r1.<javax.xml.stream.XMLStreamWriter: void writeCharacters(java.lang.String)>($r2);

     label2:
        return;
    }

    public java.lang.String getData()
    {
        com.ctc.wstx.evt.WCharacters r0;
        java.lang.String $r1;

        r0 := @this: com.ctc.wstx.evt.WCharacters;

        $r1 = r0.<com.ctc.wstx.evt.WCharacters: java.lang.String mContent>;

        return $r1;
    }

    public boolean isCData()
    {
        com.ctc.wstx.evt.WCharacters r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.evt.WCharacters;

        $z0 = r0.<com.ctc.wstx.evt.WCharacters: boolean mIsCData>;

        return $z0;
    }

    public boolean isIgnorableWhiteSpace()
    {
        com.ctc.wstx.evt.WCharacters r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.evt.WCharacters;

        $z0 = r0.<com.ctc.wstx.evt.WCharacters: boolean mIgnorableWS>;

        return $z0;
    }

    public boolean isWhiteSpace()
    {
        char $c1;
        int $i0, i2, $i3;
        com.ctc.wstx.evt.WCharacters r0;
        java.lang.String r1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.ctc.wstx.evt.WCharacters;

        $z0 = r0.<com.ctc.wstx.evt.WCharacters: boolean mWhitespaceChecked>;

        if $z0 != 0 goto label6;

        r0.<com.ctc.wstx.evt.WCharacters: boolean mWhitespaceChecked> = 1;

        r1 = r0.<com.ctc.wstx.evt.WCharacters: java.lang.String mContent>;

        i2 = 0;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

     label1:
        if i2 >= $i0 goto label3;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        $i3 = (int) $c1;

        if $i3 <= 32 goto label2;

        goto label3;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        if i2 != $i0 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        r0.<com.ctc.wstx.evt.WCharacters: boolean mIsWhitespace> = $z1;

     label6:
        $z2 = r0.<com.ctc.wstx.evt.WCharacters: boolean mIsWhitespace>;

        return $z2;
    }

    public void setWhitespaceStatus(boolean)
    {
        com.ctc.wstx.evt.WCharacters r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.evt.WCharacters;

        z0 := @parameter0: boolean;

        r0.<com.ctc.wstx.evt.WCharacters: boolean mWhitespaceChecked> = 1;

        r0.<com.ctc.wstx.evt.WCharacters: boolean mIsWhitespace> = z0;

        return;
    }
}
