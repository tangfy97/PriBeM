public class org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo extends org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct implements org.eclipse.jdt.internal.compiler.env.IBinaryNestedType
{
    int innerClassNameIndex;
    int outerClassNameIndex;
    int innerNameIndex;
    private char[] innerClassName;
    private char[] outerClassName;
    private char[] innerName;
    private int accessFlags;
    private boolean readInnerClassName;
    private boolean readOuterClassName;
    private boolean readInnerName;

    public void <init>(byte[], int[], int)
    {
        byte[] r1;
        org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo r0;
        int[] r2;
        int i0, $i1, $i2, $i3, $i5, $i7, $i9, $i11;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo;

        r1 := @parameter0: byte[];

        r2 := @parameter1: int[];

        i0 := @parameter2: int;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct: void <init>(byte[],int[],int)>(r1, r2, i0);

        $i5 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int innerClassNameIndex> = $i5;

        $i7 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int outerClassNameIndex> = $i7;

        $i9 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int innerNameIndex> = $i9;

        $i11 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int accessFlags> = $i11;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: boolean readInnerClassName> = 0;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: boolean readOuterClassName> = 0;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: boolean readInnerName> = 0;

        $i1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int u2At(int)>(0);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int innerClassNameIndex> = $i1;

        $i2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int u2At(int)>(2);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int outerClassNameIndex> = $i2;

        $i3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int u2At(int)>(4);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int innerNameIndex> = $i3;

        return;
    }

    public char[] getEnclosingTypeName()
    {
        org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo r0;
        int[] $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i11, $i12;
        boolean $z0;
        char[] $r3, $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: boolean readOuterClassName>;

        if $z0 != 0 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: boolean readOuterClassName> = 1;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int outerClassNameIndex>;

        if $i0 == 0 goto label1;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int[] constantPoolOffsets>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int[] constantPoolOffsets>;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int outerClassNameIndex>;

        $i3 = $r1[$i1];

        $i2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int structOffset>;

        $i4 = $i3 - $i2;

        $i5 = $i4 + 1;

        $i6 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int u2At(int)>($i5);

        $i8 = $r2[$i6];

        $i7 = r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int structOffset>;

        i9 = $i8 - $i7;

        $i11 = i9 + 3;

        $i10 = i9 + 1;

        $i12 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int u2At(int)>($i10);

        $r3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: char[] utf8At(int,int)>($i11, $i12);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: char[] outerClassName> = $r3;

     label1:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: char[] outerClassName>;

        return $r4;
    }

    public int getModifiers()
    {
        org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo r0;
        int $i0, $i1, $i2, $i4;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int accessFlags>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int u2At(int)>(6);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int accessFlags> = $i2;

     label1:
        $i1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int accessFlags>;

        return $i1;
    }

    public char[] getName()
    {
        org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo r0;
        int[] $r1, $r2;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, i9, $i10, $i11, $i12;
        boolean $z0;
        char[] $r3, $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: boolean readInnerClassName>;

        if $z0 != 0 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: boolean readInnerClassName> = 1;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int innerClassNameIndex>;

        if $i0 == 0 goto label1;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int[] constantPoolOffsets>;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int innerClassNameIndex>;

        $i3 = $r1[$i1];

        $i2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int structOffset>;

        i4 = $i3 - $i2;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int[] constantPoolOffsets>;

        $i5 = i4 + 1;

        $i6 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int u2At(int)>($i5);

        $i8 = $r2[$i6];

        $i7 = r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int structOffset>;

        i9 = $i8 - $i7;

        $i11 = i9 + 3;

        $i10 = i9 + 1;

        $i12 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int u2At(int)>($i10);

        $r3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: char[] utf8At(int,int)>($i11, $i12);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: char[] innerClassName> = $r3;

     label1:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: char[] innerClassName>;

        return $r4;
    }

    public char[] getSourceName()
    {
        org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7;
        char[] $r2, $r3;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: boolean readInnerName>;

        if $z0 != 0 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: boolean readInnerName> = 1;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int innerNameIndex>;

        if $i0 == 0 goto label1;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int[] constantPoolOffsets>;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int innerNameIndex>;

        $i3 = $r1[$i1];

        $i2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int structOffset>;

        i4 = $i3 - $i2;

        $i6 = i4 + 3;

        $i5 = i4 + 1;

        $i7 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int u2At(int)>($i5);

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: char[] utf8At(int,int)>($i6, $i7);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: char[] innerName> = $r2;

     label1:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: char[] innerName>;

        return $r3;
    }

    public java.lang.String toString()
    {
        org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo r1;
        java.lang.StringBuffer $r0;
        char[] $r2, $r3, $r4, $r6, $r7, $r8;
        java.lang.String $r5;

        r1 := @this: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: char[] getName()>();

        if $r2 == null goto label1;

        $r8 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: char[] getName()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r8);

     label1:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r3 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: char[] getEnclosingTypeName()>();

        if $r3 == null goto label2;

        $r7 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: char[] getEnclosingTypeName()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r7);

     label2:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r4 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: char[] getSourceName()>();

        if $r4 == null goto label3;

        $r6 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: char[] getSourceName()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r6);

     label3:
        $r5 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    void initialize()
    {
        org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: int getModifiers()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: char[] getName()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: char[] getSourceName()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: char[] getEnclosingTypeName()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo: void reset()>();

        return;
    }
}
