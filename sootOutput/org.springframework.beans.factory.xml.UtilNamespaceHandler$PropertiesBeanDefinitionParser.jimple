class org.springframework.beans.factory.xml.UtilNamespaceHandler$PropertiesBeanDefinitionParser extends org.springframework.beans.factory.xml.AbstractSimpleBeanDefinitionParser
{

    private void <init>()
    {
        org.springframework.beans.factory.xml.UtilNamespaceHandler$PropertiesBeanDefinitionParser r0;

        r0 := @this: org.springframework.beans.factory.xml.UtilNamespaceHandler$PropertiesBeanDefinitionParser;

        specialinvoke r0.<org.springframework.beans.factory.xml.AbstractSimpleBeanDefinitionParser: void <init>()>();

        return;
    }

    protected java.lang.Class getBeanClass(org.w3c.dom.Element)
    {
        org.springframework.beans.factory.xml.UtilNamespaceHandler$PropertiesBeanDefinitionParser r0;
        org.w3c.dom.Element r1;

        r0 := @this: org.springframework.beans.factory.xml.UtilNamespaceHandler$PropertiesBeanDefinitionParser;

        r1 := @parameter0: org.w3c.dom.Element;

        return class "Lorg/springframework/beans/factory/config/PropertiesFactoryBean;";
    }

    protected boolean isEligibleAttribute(java.lang.String)
    {
        org.springframework.beans.factory.xml.UtilNamespaceHandler$PropertiesBeanDefinitionParser r0;
        java.lang.String r1, $r2;
        boolean $z0, $z1;

        r0 := @this: org.springframework.beans.factory.xml.UtilNamespaceHandler$PropertiesBeanDefinitionParser;

        r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<org.springframework.beans.factory.xml.AbstractSimpleBeanDefinitionParser: boolean isEligibleAttribute(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $r2 = "scope";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected void doParse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext, org.springframework.beans.factory.support.BeanDefinitionBuilder)
    {
        java.util.Properties $r5;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r3;
        org.w3c.dom.Element r1;
        org.springframework.beans.factory.xml.ParserContext r2;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate $r4;
        org.springframework.beans.factory.xml.UtilNamespaceHandler$PropertiesBeanDefinitionParser r0;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this: org.springframework.beans.factory.xml.UtilNamespaceHandler$PropertiesBeanDefinitionParser;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: org.springframework.beans.factory.xml.ParserContext;

        r3 := @parameter2: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        specialinvoke r0.<org.springframework.beans.factory.xml.AbstractSimpleBeanDefinitionParser: void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)>(r1, r2, r3);

        $r4 = virtualinvoke r2.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate getDelegate()>();

        $r5 = virtualinvoke $r4.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.util.Properties parsePropsElement(org.w3c.dom.Element)>(r1);

        virtualinvoke r3.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyValue(java.lang.String,java.lang.Object)>("properties", $r5);

        $r6 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("scope");

        $z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>($r6);

        if $z0 == 0 goto label1;

        virtualinvoke r3.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder setScope(java.lang.String)>($r6);

     label1:
        return;
    }

    void <init>(org.springframework.beans.factory.xml.UtilNamespaceHandler$PropertiesBeanDefinitionParser)
    {
        org.springframework.beans.factory.xml.UtilNamespaceHandler$PropertiesBeanDefinitionParser r0, r1;

        r0 := @this: org.springframework.beans.factory.xml.UtilNamespaceHandler$PropertiesBeanDefinitionParser;

        r1 := @parameter0: org.springframework.beans.factory.xml.UtilNamespaceHandler$PropertiesBeanDefinitionParser;

        specialinvoke r0.<org.springframework.beans.factory.xml.UtilNamespaceHandler$PropertiesBeanDefinitionParser: void <init>()>();

        return;
    }
}
