public abstract class org.apache.batik.css.engine.value.AbstractValue extends java.lang.Object implements org.apache.batik.css.engine.value.Value
{

    public void <init>()
    {
        org.apache.batik.css.engine.value.AbstractValue r0;

        r0 := @this: org.apache.batik.css.engine.value.AbstractValue;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public short getCssValueType()
    {
        org.apache.batik.css.engine.value.AbstractValue r0;

        r0 := @this: org.apache.batik.css.engine.value.AbstractValue;

        return 1;
    }

    public short getPrimitiveType()
    {
        org.apache.batik.css.engine.value.AbstractValue r0;
        org.w3c.dom.DOMException $r1;

        r0 := @this: org.apache.batik.css.engine.value.AbstractValue;

        $r1 = virtualinvoke r0.<org.apache.batik.css.engine.value.AbstractValue: org.w3c.dom.DOMException createDOMException()>();

        throw $r1;
    }

    public float getFloatValue() throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.engine.value.AbstractValue r0;
        org.w3c.dom.DOMException $r1;

        r0 := @this: org.apache.batik.css.engine.value.AbstractValue;

        $r1 = virtualinvoke r0.<org.apache.batik.css.engine.value.AbstractValue: org.w3c.dom.DOMException createDOMException()>();

        throw $r1;
    }

    public java.lang.String getStringValue() throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.engine.value.AbstractValue r0;
        org.w3c.dom.DOMException $r1;

        r0 := @this: org.apache.batik.css.engine.value.AbstractValue;

        $r1 = virtualinvoke r0.<org.apache.batik.css.engine.value.AbstractValue: org.w3c.dom.DOMException createDOMException()>();

        throw $r1;
    }

    public org.apache.batik.css.engine.value.Value getRed() throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.engine.value.AbstractValue r0;
        org.w3c.dom.DOMException $r1;

        r0 := @this: org.apache.batik.css.engine.value.AbstractValue;

        $r1 = virtualinvoke r0.<org.apache.batik.css.engine.value.AbstractValue: org.w3c.dom.DOMException createDOMException()>();

        throw $r1;
    }

    public org.apache.batik.css.engine.value.Value getGreen() throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.engine.value.AbstractValue r0;
        org.w3c.dom.DOMException $r1;

        r0 := @this: org.apache.batik.css.engine.value.AbstractValue;

        $r1 = virtualinvoke r0.<org.apache.batik.css.engine.value.AbstractValue: org.w3c.dom.DOMException createDOMException()>();

        throw $r1;
    }

    public org.apache.batik.css.engine.value.Value getBlue() throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.engine.value.AbstractValue r0;
        org.w3c.dom.DOMException $r1;

        r0 := @this: org.apache.batik.css.engine.value.AbstractValue;

        $r1 = virtualinvoke r0.<org.apache.batik.css.engine.value.AbstractValue: org.w3c.dom.DOMException createDOMException()>();

        throw $r1;
    }

    public int getLength() throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.engine.value.AbstractValue r0;
        org.w3c.dom.DOMException $r1;

        r0 := @this: org.apache.batik.css.engine.value.AbstractValue;

        $r1 = virtualinvoke r0.<org.apache.batik.css.engine.value.AbstractValue: org.w3c.dom.DOMException createDOMException()>();

        throw $r1;
    }

    public org.apache.batik.css.engine.value.Value item(int) throws org.w3c.dom.DOMException
    {
        int i0;
        org.apache.batik.css.engine.value.AbstractValue r0;
        org.w3c.dom.DOMException $r1;

        r0 := @this: org.apache.batik.css.engine.value.AbstractValue;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.batik.css.engine.value.AbstractValue: org.w3c.dom.DOMException createDOMException()>();

        throw $r1;
    }

    public org.apache.batik.css.engine.value.Value getTop() throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.engine.value.AbstractValue r0;
        org.w3c.dom.DOMException $r1;

        r0 := @this: org.apache.batik.css.engine.value.AbstractValue;

        $r1 = virtualinvoke r0.<org.apache.batik.css.engine.value.AbstractValue: org.w3c.dom.DOMException createDOMException()>();

        throw $r1;
    }

    public org.apache.batik.css.engine.value.Value getRight() throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.engine.value.AbstractValue r0;
        org.w3c.dom.DOMException $r1;

        r0 := @this: org.apache.batik.css.engine.value.AbstractValue;

        $r1 = virtualinvoke r0.<org.apache.batik.css.engine.value.AbstractValue: org.w3c.dom.DOMException createDOMException()>();

        throw $r1;
    }

    public org.apache.batik.css.engine.value.Value getBottom() throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.engine.value.AbstractValue r0;
        org.w3c.dom.DOMException $r1;

        r0 := @this: org.apache.batik.css.engine.value.AbstractValue;

        $r1 = virtualinvoke r0.<org.apache.batik.css.engine.value.AbstractValue: org.w3c.dom.DOMException createDOMException()>();

        throw $r1;
    }

    public org.apache.batik.css.engine.value.Value getLeft() throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.engine.value.AbstractValue r0;
        org.w3c.dom.DOMException $r1;

        r0 := @this: org.apache.batik.css.engine.value.AbstractValue;

        $r1 = virtualinvoke r0.<org.apache.batik.css.engine.value.AbstractValue: org.w3c.dom.DOMException createDOMException()>();

        throw $r1;
    }

    public java.lang.String getIdentifier() throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.engine.value.AbstractValue r0;
        org.w3c.dom.DOMException $r1;

        r0 := @this: org.apache.batik.css.engine.value.AbstractValue;

        $r1 = virtualinvoke r0.<org.apache.batik.css.engine.value.AbstractValue: org.w3c.dom.DOMException createDOMException()>();

        throw $r1;
    }

    public java.lang.String getListStyle() throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.engine.value.AbstractValue r0;
        org.w3c.dom.DOMException $r1;

        r0 := @this: org.apache.batik.css.engine.value.AbstractValue;

        $r1 = virtualinvoke r0.<org.apache.batik.css.engine.value.AbstractValue: org.w3c.dom.DOMException createDOMException()>();

        throw $r1;
    }

    public java.lang.String getSeparator() throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.engine.value.AbstractValue r0;
        org.w3c.dom.DOMException $r1;

        r0 := @this: org.apache.batik.css.engine.value.AbstractValue;

        $r1 = virtualinvoke r0.<org.apache.batik.css.engine.value.AbstractValue: org.w3c.dom.DOMException createDOMException()>();

        throw $r1;
    }

    protected org.w3c.dom.DOMException createDOMException()
    {
        short $s0;
        java.lang.Object[] $r0;
        org.w3c.dom.DOMException $r6;
        int $i1;
        java.lang.String $r3;
        java.lang.Integer $r5;
        org.apache.batik.css.engine.value.AbstractValue r2;

        r2 := @this: org.apache.batik.css.engine.value.AbstractValue;

        $r0 = newarray (java.lang.Object)[1];

        $r5 = new java.lang.Integer;

        $s0 = virtualinvoke r2.<org.apache.batik.css.engine.value.AbstractValue: short getCssValueType()>();

        $i1 = (int) $s0;

        specialinvoke $r5.<java.lang.Integer: void <init>(int)>($i1);

        $r0[0] = $r5;

        $r3 = staticinvoke <org.apache.batik.css.engine.value.Messages: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>("invalid.value.access", $r0);

        $r6 = new org.w3c.dom.DOMException;

        specialinvoke $r6.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(15, $r3);

        return $r6;
    }

    public abstract java.lang.String getCssText();
}
