public abstract class org.apache.batik.css.engine.value.svg.GlyphOrientationManager extends org.apache.batik.css.engine.value.AbstractValueManager
{

    public void <init>()
    {
        org.apache.batik.css.engine.value.svg.GlyphOrientationManager r0;

        r0 := @this: org.apache.batik.css.engine.value.svg.GlyphOrientationManager;

        specialinvoke r0.<org.apache.batik.css.engine.value.AbstractValueManager: void <init>()>();

        return;
    }

    public boolean isInheritedProperty()
    {
        org.apache.batik.css.engine.value.svg.GlyphOrientationManager r0;

        r0 := @this: org.apache.batik.css.engine.value.svg.GlyphOrientationManager;

        return 1;
    }

    public boolean isAnimatableProperty()
    {
        org.apache.batik.css.engine.value.svg.GlyphOrientationManager r0;

        r0 := @this: org.apache.batik.css.engine.value.svg.GlyphOrientationManager;

        return 0;
    }

    public boolean isAdditiveProperty()
    {
        org.apache.batik.css.engine.value.svg.GlyphOrientationManager r0;

        r0 := @this: org.apache.batik.css.engine.value.svg.GlyphOrientationManager;

        return 0;
    }

    public int getPropertyType()
    {
        org.apache.batik.css.engine.value.svg.GlyphOrientationManager r0;

        r0 := @this: org.apache.batik.css.engine.value.svg.GlyphOrientationManager;

        return 5;
    }

    public org.apache.batik.css.engine.value.Value createValue(org.w3c.css.sac.LexicalUnit, org.apache.batik.css.engine.CSSEngine) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.engine.CSSEngine r9;
        short $s0, $s2;
        org.apache.batik.css.engine.value.svg.GlyphOrientationManager r7;
        org.w3c.dom.DOMException $r8;
        org.w3c.css.sac.LexicalUnit r0;
        int $i1, $i3;
        org.apache.batik.css.engine.value.FloatValue $r10, $r11, $r12, $r13, $r14;
        org.apache.batik.css.engine.value.Value $r6;
        float $f0, $f1, $f2, $f3, $f4;

        r7 := @this: org.apache.batik.css.engine.value.svg.GlyphOrientationManager;

        r0 := @parameter0: org.w3c.css.sac.LexicalUnit;

        r9 := @parameter1: org.apache.batik.css.engine.CSSEngine;

        $s0 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: short getLexicalUnitType()>();

        $i3 = (int) $s0;

        tableswitch($i3)
        {
            case 12: goto label1;
            case 13: goto label5;
            case 14: goto label6;
            case 15: goto label7;
            case 16: goto label7;
            case 17: goto label7;
            case 18: goto label7;
            case 19: goto label7;
            case 20: goto label7;
            case 21: goto label7;
            case 22: goto label7;
            case 23: goto label7;
            case 24: goto label7;
            case 25: goto label7;
            case 26: goto label7;
            case 27: goto label7;
            case 28: goto label2;
            case 29: goto label3;
            case 30: goto label4;
            default: goto label7;
        };

     label1:
        $r6 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value INHERIT_VALUE>;

        return $r6;

     label2:
        $r10 = new org.apache.batik.css.engine.value.FloatValue;

        $f2 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: float getFloatValue()>();

        specialinvoke $r10.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(11, $f2);

        return $r10;

     label3:
        $r11 = new org.apache.batik.css.engine.value.FloatValue;

        $f1 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: float getFloatValue()>();

        specialinvoke $r11.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(13, $f1);

        return $r11;

     label4:
        $r12 = new org.apache.batik.css.engine.value.FloatValue;

        $f0 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: float getFloatValue()>();

        specialinvoke $r12.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(12, $f0);

        return $r12;

     label5:
        $i1 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: int getIntegerValue()>();

        $r13 = new org.apache.batik.css.engine.value.FloatValue;

        $f4 = (float) $i1;

        specialinvoke $r13.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(11, $f4);

        return $r13;

     label6:
        $f3 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: float getFloatValue()>();

        $r14 = new org.apache.batik.css.engine.value.FloatValue;

        specialinvoke $r14.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(11, $f3);

        return $r14;

     label7:
        $s2 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: short getLexicalUnitType()>();

        $r8 = virtualinvoke r7.<org.apache.batik.css.engine.value.AbstractValueFactory: org.w3c.dom.DOMException createInvalidLexicalUnitDOMException(short)>($s2);

        throw $r8;
    }

    public org.apache.batik.css.engine.value.Value createFloatValue(short, float) throws org.w3c.dom.DOMException
    {
        short s0;
        org.apache.batik.css.engine.value.FloatValue $r3;
        org.apache.batik.css.engine.value.svg.GlyphOrientationManager r1;
        org.w3c.dom.DOMException $r2;
        int $i1;
        float f0;

        r1 := @this: org.apache.batik.css.engine.value.svg.GlyphOrientationManager;

        s0 := @parameter0: short;

        f0 := @parameter1: float;

        $i1 = (int) s0;

        tableswitch($i1)
        {
            case 11: goto label1;
            case 12: goto label1;
            case 13: goto label1;
            default: goto label2;
        };

     label1:
        $r3 = new org.apache.batik.css.engine.value.FloatValue;

        specialinvoke $r3.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(s0, f0);

        return $r3;

     label2:
        $r2 = virtualinvoke r1.<org.apache.batik.css.engine.value.AbstractValueFactory: org.w3c.dom.DOMException createInvalidFloatValueDOMException(float)>(f0);

        throw $r2;
    }
}
