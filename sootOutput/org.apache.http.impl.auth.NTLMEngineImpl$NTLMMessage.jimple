class org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage extends java.lang.Object
{
    private byte[] messageContents;
    private int currentOutputPosition;

    void <init>()
    {
        org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage r0;

        r0 := @this: org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: byte[] messageContents> = null;

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: int currentOutputPosition> = 0;

        return;
    }

    void <init>(java.lang.String, int) throws org.apache.http.impl.auth.NTLMEngineException
    {
        byte[] $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r18, $r19;
        org.apache.http.impl.auth.NTLMEngineException $r22, $r23, $r25;
        byte $b7, $b8;
        java.lang.StringBuilder $r11, $r13, $r14, $r16, $r24;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, i9, $i10, $i11;
        java.lang.String r1, $r12, $r15, $r17;
        org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage r0;

        r0 := @this: org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage;

        r1 := @parameter0: java.lang.String;

        i5 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: byte[] messageContents> = null;

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: int currentOutputPosition> = 0;

        $r2 = staticinvoke <org.apache.http.util.EncodingUtils: byte[] getBytes(java.lang.String,java.lang.String)>(r1, "ASCII");

        $r3 = staticinvoke <org.apache.commons.codec.binary.Base64: byte[] decodeBase64(byte[])>($r2);

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: byte[] messageContents> = $r3;

        $r4 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: byte[] messageContents>;

        $i0 = lengthof $r4;

        $r5 = staticinvoke <org.apache.http.impl.auth.NTLMEngineImpl: byte[] access$900()>();

        $i1 = lengthof $r5;

        if $i0 >= $i1 goto label1;

        $r22 = new org.apache.http.impl.auth.NTLMEngineException;

        specialinvoke $r22.<org.apache.http.impl.auth.NTLMEngineException: void <init>(java.lang.String)>("NTLM message decoding error - packet too short");

        throw $r22;

     label1:
        i9 = 0;

     label2:
        $r6 = staticinvoke <org.apache.http.impl.auth.NTLMEngineImpl: byte[] access$900()>();

        $i2 = lengthof $r6;

        if i9 >= $i2 goto label4;

        $r18 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: byte[] messageContents>;

        $b7 = $r18[i9];

        $r19 = staticinvoke <org.apache.http.impl.auth.NTLMEngineImpl: byte[] access$900()>();

        $b8 = $r19[i9];

        $i10 = (int) $b7;

        $i11 = (int) $b8;

        if $i10 == $i11 goto label3;

        $r23 = new org.apache.http.impl.auth.NTLMEngineException;

        specialinvoke $r23.<org.apache.http.impl.auth.NTLMEngineException: void <init>(java.lang.String)>("NTLM message expected - instead got unrecognized bytes");

        throw $r23;

     label3:
        i9 = i9 + 1;

        goto label2;

     label4:
        $r7 = staticinvoke <org.apache.http.impl.auth.NTLMEngineImpl: byte[] access$900()>();

        $i3 = lengthof $r7;

        $i4 = virtualinvoke r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: int readULong(int)>($i3);

        if $i4 == i5 goto label5;

        $r25 = new org.apache.http.impl.auth.NTLMEngineException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NTLM type ");

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i5);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" message expected - instead got type ");

        $r15 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<org.apache.http.impl.auth.NTLMEngineException: void <init>(java.lang.String)>($r17);

        throw $r25;

     label5:
        $r8 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: byte[] messageContents>;

        $i6 = lengthof $r8;

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: int currentOutputPosition> = $i6;

        return;
    }

    protected int getPreambleLength()
    {
        org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage r1;
        byte[] $r0;
        int $i0, $i1;

        r1 := @this: org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage;

        $r0 = staticinvoke <org.apache.http.impl.auth.NTLMEngineImpl: byte[] access$900()>();

        $i0 = lengthof $r0;

        $i1 = $i0 + 4;

        return $i1;
    }

    protected int getMessageLength()
    {
        org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage r0;
        int $i0;

        r0 := @this: org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage;

        $i0 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: int currentOutputPosition>;

        return $i0;
    }

    protected byte readByte(int) throws org.apache.http.impl.auth.NTLMEngineException
    {
        byte[] $r1, $r2;
        org.apache.http.impl.auth.NTLMEngineException $r3;
        org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage r0;
        byte $b3;
        int i0, $i1, $i2;

        r0 := @this: org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: byte[] messageContents>;

        $i2 = lengthof $r1;

        $i1 = i0 + 1;

        if $i2 >= $i1 goto label1;

        $r3 = new org.apache.http.impl.auth.NTLMEngineException;

        specialinvoke $r3.<org.apache.http.impl.auth.NTLMEngineException: void <init>(java.lang.String)>("NTLM: Message too short");

        throw $r3;

     label1:
        $r2 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: byte[] messageContents>;

        $b3 = $r2[i0];

        return $b3;
    }

    protected void readBytes(byte[], int) throws org.apache.http.impl.auth.NTLMEngineException
    {
        byte[] $r1, r2, $r3;
        org.apache.http.impl.auth.NTLMEngineException $r4;
        org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage r0;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        $r1 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: byte[] messageContents>;

        $i3 = lengthof $r1;

        $i1 = lengthof r2;

        $i2 = i0 + $i1;

        if $i3 >= $i2 goto label1;

        $r4 = new org.apache.http.impl.auth.NTLMEngineException;

        specialinvoke $r4.<org.apache.http.impl.auth.NTLMEngineException: void <init>(java.lang.String)>("NTLM: Message too short");

        throw $r4;

     label1:
        $r3 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: byte[] messageContents>;

        $i4 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, i0, r2, 0, $i4);

        return;
    }

    protected int readUShort(int) throws org.apache.http.impl.auth.NTLMEngineException
    {
        org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage r0;
        byte[] $r1;
        int i0, $i1;

        r0 := @this: org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: byte[] messageContents>;

        $i1 = staticinvoke <org.apache.http.impl.auth.NTLMEngineImpl: int access$1000(byte[],int)>($r1, i0);

        return $i1;
    }

    protected int readULong(int) throws org.apache.http.impl.auth.NTLMEngineException
    {
        org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage r0;
        byte[] $r1;
        int i0, $i1;

        r0 := @this: org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: byte[] messageContents>;

        $i1 = staticinvoke <org.apache.http.impl.auth.NTLMEngineImpl: int access$1100(byte[],int)>($r1, i0);

        return $i1;
    }

    protected byte[] readSecurityBuffer(int) throws org.apache.http.impl.auth.NTLMEngineException
    {
        org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage r0;
        byte[] $r1, $r2;
        int i0;

        r0 := @this: org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: byte[] messageContents>;

        $r2 = staticinvoke <org.apache.http.impl.auth.NTLMEngineImpl: byte[] access$1200(byte[],int)>($r1, i0);

        return $r2;
    }

    protected void prepareResponse(int, int)
    {
        org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage r0;
        byte[] $r1, $r2;
        int i0, i1;

        r0 := @this: org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = newarray (byte)[i0];

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: byte[] messageContents> = $r1;

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: int currentOutputPosition> = 0;

        $r2 = staticinvoke <org.apache.http.impl.auth.NTLMEngineImpl: byte[] access$900()>();

        virtualinvoke r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: void addBytes(byte[])>($r2);

        virtualinvoke r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: void addULong(int)>(i1);

        return;
    }

    protected void addByte(byte)
    {
        org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage r0;
        byte[] $r1;
        byte b0;
        int $i1, $i2, $i3;

        r0 := @this: org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage;

        b0 := @parameter0: byte;

        $r1 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: byte[] messageContents>;

        $i1 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: int currentOutputPosition>;

        $r1[$i1] = b0;

        $i2 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: int currentOutputPosition>;

        $i3 = $i2 + 1;

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: int currentOutputPosition> = $i3;

        return;
    }

    protected void addBytes(byte[])
    {
        byte[] r0, $r2;
        org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage r1;
        byte b1;
        int i0, $i2, $i3, $i4, i5;

        r1 := @this: org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage;

        r0 := @parameter0: byte[];

        i0 = lengthof r0;

        i5 = 0;

     label1:
        if i5 >= i0 goto label2;

        b1 = r0[i5];

        $r2 = r1.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: byte[] messageContents>;

        $i2 = r1.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: int currentOutputPosition>;

        $r2[$i2] = b1;

        $i3 = r1.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: int currentOutputPosition>;

        $i4 = $i3 + 1;

        r1.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: int currentOutputPosition> = $i4;

        i5 = i5 + 1;

        goto label1;

     label2:
        return;
    }

    protected void addUShort(int)
    {
        org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage r0;
        byte $b2, $b5;
        int i0, $i1, $i3, $i4;

        r0 := @this: org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage;

        i0 := @parameter0: int;

        $i1 = i0 & 255;

        $b2 = (byte) $i1;

        virtualinvoke r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: void addByte(byte)>($b2);

        $i3 = i0 >> 8;

        $i4 = $i3 & 255;

        $b5 = (byte) $i4;

        virtualinvoke r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: void addByte(byte)>($b5);

        return;
    }

    protected void addULong(int)
    {
        org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage r0;
        byte $b2, $b5, $b8, $b11;
        int i0, $i1, $i3, $i4, $i6, $i7, $i9, $i10;

        r0 := @this: org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage;

        i0 := @parameter0: int;

        $i1 = i0 & 255;

        $b2 = (byte) $i1;

        virtualinvoke r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: void addByte(byte)>($b2);

        $i3 = i0 >> 8;

        $i4 = $i3 & 255;

        $b5 = (byte) $i4;

        virtualinvoke r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: void addByte(byte)>($b5);

        $i6 = i0 >> 16;

        $i7 = $i6 & 255;

        $b8 = (byte) $i7;

        virtualinvoke r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: void addByte(byte)>($b8);

        $i9 = i0 >> 24;

        $i10 = $i9 & 255;

        $b11 = (byte) $i10;

        virtualinvoke r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: void addByte(byte)>($b11);

        return;
    }

    java.lang.String getResponse()
    {
        byte[] $r1, $r2, r4, $r5, r6;
        org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage r0;
        byte $b4;
        int $i0, $i1, $i2, $i3, i5;
        java.lang.String $r3;

        r0 := @this: org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage;

        $r1 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: byte[] messageContents>;

        $i1 = lengthof $r1;

        $i0 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: int currentOutputPosition>;

        if $i1 <= $i0 goto label3;

        $i2 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: int currentOutputPosition>;

        r4 = newarray (byte)[$i2];

        i5 = 0;

     label1:
        $i3 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: int currentOutputPosition>;

        if i5 >= $i3 goto label2;

        $r5 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: byte[] messageContents>;

        $b4 = $r5[i5];

        r4[i5] = $b4;

        i5 = i5 + 1;

        goto label1;

     label2:
        r6 = r4;

        goto label4;

     label3:
        r6 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: byte[] messageContents>;

     label4:
        $r2 = staticinvoke <org.apache.commons.codec.binary.Base64: byte[] encodeBase64(byte[])>(r6);

        $r3 = staticinvoke <org.apache.http.util.EncodingUtils: java.lang.String getAsciiString(byte[])>($r2);

        return $r3;
    }
}
