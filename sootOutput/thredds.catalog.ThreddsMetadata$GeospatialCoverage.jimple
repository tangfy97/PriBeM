public class thredds.catalog.ThreddsMetadata$GeospatialCoverage extends java.lang.Object
{
    private static thredds.catalog.ThreddsMetadata$Range defaultEastwest;
    private static thredds.catalog.ThreddsMetadata$Range defaultNorthsouth;
    private static thredds.catalog.ThreddsMetadata$Range defaultUpdown;
    private static thredds.catalog.ThreddsMetadata$GeospatialCoverage empty;
    private thredds.catalog.ThreddsMetadata$Range eastwest;
    private thredds.catalog.ThreddsMetadata$Range northsouth;
    private thredds.catalog.ThreddsMetadata$Range updown;
    private boolean isGlobal;
    private java.lang.String zpositive;
    private java.util.List names;
    private volatile int hashCode;

    public void <init>()
    {
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;
        java.util.ArrayList $r1;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: boolean isGlobal> = 0;

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: java.lang.String zpositive> = "up";

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: java.util.List names> = $r1;

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: int hashCode> = 0;

        return;
    }

    public void <init>(thredds.catalog.ThreddsMetadata$Range, thredds.catalog.ThreddsMetadata$Range, thredds.catalog.ThreddsMetadata$Range, java.util.List, java.lang.String)
    {
        thredds.catalog.ThreddsMetadata$Vocab r9;
        java.util.Iterator $r7;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;
        java.util.ArrayList $r1, $r11;
        java.util.List r5;
        thredds.catalog.ThreddsMetadata$Range r2, r3, r4;
        java.lang.Object $r8;
        java.lang.String r6, $r10;
        boolean $z0, $z1;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        r2 := @parameter0: thredds.catalog.ThreddsMetadata$Range;

        r3 := @parameter1: thredds.catalog.ThreddsMetadata$Range;

        r4 := @parameter2: thredds.catalog.ThreddsMetadata$Range;

        r5 := @parameter3: java.util.List;

        r6 := @parameter4: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: boolean isGlobal> = 0;

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: java.lang.String zpositive> = "up";

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: java.util.List names> = $r1;

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: int hashCode> = 0;

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range eastwest> = r2;

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range northsouth> = r3;

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range updown> = r4;

        if r5 == null goto label1;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>(java.util.Collection)>(r5);

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: java.util.List names> = $r11;

     label1:
        if r6 == null goto label2;

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: java.lang.String zpositive> = r6;

     label2:
        if r5 == null goto label5;

        $r7 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (thredds.catalog.ThreddsMetadata$Vocab) $r8;

        $r10 = virtualinvoke r9.<thredds.catalog.ThreddsMetadata$Vocab: java.lang.String getText()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("global");

        if $z1 == 0 goto label4;

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: boolean isGlobal> = 1;

     label4:
        goto label3;

     label5:
        return;
    }

    public boolean isEmpty()
    {
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0, $r1;
        boolean $z0;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        $r1 = <thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$GeospatialCoverage empty>;

        $z0 = virtualinvoke r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public thredds.catalog.ThreddsMetadata$Range getEastWestRange()
    {
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;
        thredds.catalog.ThreddsMetadata$Range $r1;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        $r1 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range eastwest>;

        return $r1;
    }

    public thredds.catalog.ThreddsMetadata$Range getNorthSouthRange()
    {
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;
        thredds.catalog.ThreddsMetadata$Range $r1;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        $r1 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range northsouth>;

        return $r1;
    }

    public thredds.catalog.ThreddsMetadata$Range getUpDownRange()
    {
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;
        thredds.catalog.ThreddsMetadata$Range $r1;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        $r1 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range updown>;

        return $r1;
    }

    public java.util.List getNames()
    {
        java.util.List $r1;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        $r1 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: java.util.List names>;

        return $r1;
    }

    public java.lang.String getZPositive()
    {
        java.lang.String $r1;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        $r1 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: java.lang.String zpositive>;

        return $r1;
    }

    public void setZPositive(java.lang.String)
    {
        java.lang.String r1;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        r1 := @parameter0: java.lang.String;

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: java.lang.String zpositive> = r1;

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: int hashCode> = 0;

        return;
    }

    public boolean getZPositiveUp()
    {
        java.lang.String $r1;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;
        boolean $z0;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        $r1 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: java.lang.String zpositive>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("up");

        return $z0;
    }

    public void setZPositiveUp(boolean)
    {
        java.lang.String $r1;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;
        boolean z0;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r1 = "up";

        goto label2;

     label1:
        $r1 = "down";

     label2:
        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: java.lang.String zpositive> = $r1;

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: int hashCode> = 0;

        return;
    }

    public boolean isValid()
    {
        thredds.catalog.ThreddsMetadata$Range $r1, $r2;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;
        boolean $z0, $z1;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        $z0 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: boolean isGlobal>;

        if $z0 != 0 goto label1;

        $r1 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range eastwest>;

        if $r1 == null goto label2;

        $r2 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range northsouth>;

        if $r2 == null goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public boolean isGlobal()
    {
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;
        boolean $z0;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        $z0 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: boolean isGlobal>;

        return $z0;
    }

    public void setGlobal(boolean)
    {
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;
        boolean z0;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        z0 := @parameter0: boolean;

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: boolean isGlobal> = z0;

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: int hashCode> = 0;

        return;
    }

    public double getLatStart()
    {
        thredds.catalog.ThreddsMetadata$Range $r1, $r2;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;
        double $d0;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        $r1 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range northsouth>;

        if $r1 != null goto label1;

        $d0 = #NaN;

        goto label2;

     label1:
        $r2 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range northsouth>;

        $d0 = staticinvoke <thredds.catalog.ThreddsMetadata$Range: double access$000(thredds.catalog.ThreddsMetadata$Range)>($r2);

     label2:
        return $d0;
    }

    public void setLatStart(double)
    {
        thredds.catalog.ThreddsMetadata$Range $r1, $r2, $r3, $r4;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;
        double d0;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        d0 := @parameter0: double;

        $r1 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range northsouth>;

        if $r1 != null goto label1;

        $r3 = new thredds.catalog.ThreddsMetadata$Range;

        $r4 = <thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range defaultNorthsouth>;

        specialinvoke $r3.<thredds.catalog.ThreddsMetadata$Range: void <init>(thredds.catalog.ThreddsMetadata$Range)>($r4);

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range northsouth> = $r3;

     label1:
        $r2 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range northsouth>;

        staticinvoke <thredds.catalog.ThreddsMetadata$Range: double access$002(thredds.catalog.ThreddsMetadata$Range,double)>($r2, d0);

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: int hashCode> = 0;

        return;
    }

    public double getLatExtent()
    {
        thredds.catalog.ThreddsMetadata$Range $r1, $r2;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;
        double $d0;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        $r1 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range northsouth>;

        if $r1 != null goto label1;

        $d0 = #NaN;

        goto label2;

     label1:
        $r2 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range northsouth>;

        $d0 = staticinvoke <thredds.catalog.ThreddsMetadata$Range: double access$100(thredds.catalog.ThreddsMetadata$Range)>($r2);

     label2:
        return $d0;
    }

    public void setLatExtent(double)
    {
        thredds.catalog.ThreddsMetadata$Range $r1, $r2, $r3, $r4;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;
        double d0;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        d0 := @parameter0: double;

        $r1 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range northsouth>;

        if $r1 != null goto label1;

        $r3 = new thredds.catalog.ThreddsMetadata$Range;

        $r4 = <thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range defaultNorthsouth>;

        specialinvoke $r3.<thredds.catalog.ThreddsMetadata$Range: void <init>(thredds.catalog.ThreddsMetadata$Range)>($r4);

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range northsouth> = $r3;

     label1:
        $r2 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range northsouth>;

        staticinvoke <thredds.catalog.ThreddsMetadata$Range: double access$102(thredds.catalog.ThreddsMetadata$Range,double)>($r2, d0);

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: int hashCode> = 0;

        return;
    }

    public double getLatResolution()
    {
        thredds.catalog.ThreddsMetadata$Range $r1, $r2;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;
        double $d0;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        $r1 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range northsouth>;

        if $r1 != null goto label1;

        $d0 = #NaN;

        goto label2;

     label1:
        $r2 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range northsouth>;

        $d0 = staticinvoke <thredds.catalog.ThreddsMetadata$Range: double access$200(thredds.catalog.ThreddsMetadata$Range)>($r2);

     label2:
        return $d0;
    }

    public void setLatResolution(double)
    {
        thredds.catalog.ThreddsMetadata$Range $r1, $r2, $r3, $r4;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;
        double d0;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        d0 := @parameter0: double;

        $r1 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range northsouth>;

        if $r1 != null goto label1;

        $r3 = new thredds.catalog.ThreddsMetadata$Range;

        $r4 = <thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range defaultNorthsouth>;

        specialinvoke $r3.<thredds.catalog.ThreddsMetadata$Range: void <init>(thredds.catalog.ThreddsMetadata$Range)>($r4);

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range northsouth> = $r3;

     label1:
        $r2 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range northsouth>;

        staticinvoke <thredds.catalog.ThreddsMetadata$Range: double access$202(thredds.catalog.ThreddsMetadata$Range,double)>($r2, d0);

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: int hashCode> = 0;

        return;
    }

    public java.lang.String getLatUnits()
    {
        thredds.catalog.ThreddsMetadata$Range $r1, $r2;
        java.lang.String $r3;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        $r1 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range northsouth>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range northsouth>;

        $r3 = staticinvoke <thredds.catalog.ThreddsMetadata$Range: java.lang.String access$300(thredds.catalog.ThreddsMetadata$Range)>($r2);

     label2:
        return $r3;
    }

    public void setLatUnits(java.lang.String)
    {
        thredds.catalog.ThreddsMetadata$Range $r1, $r3, $r4, $r5;
        java.lang.String r2;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range northsouth>;

        if $r1 != null goto label1;

        $r4 = new thredds.catalog.ThreddsMetadata$Range;

        $r5 = <thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range defaultNorthsouth>;

        specialinvoke $r4.<thredds.catalog.ThreddsMetadata$Range: void <init>(thredds.catalog.ThreddsMetadata$Range)>($r5);

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range northsouth> = $r4;

     label1:
        $r3 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range northsouth>;

        staticinvoke <thredds.catalog.ThreddsMetadata$Range: java.lang.String access$302(thredds.catalog.ThreddsMetadata$Range,java.lang.String)>($r3, r2);

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: int hashCode> = 0;

        return;
    }

    public double getLatNorth()
    {
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;
        thredds.catalog.ThreddsMetadata$Range $r1, $r2, $r3;
        double $d0, $d1, $d2, $d3, $d4;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        $r1 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range northsouth>;

        $d0 = staticinvoke <thredds.catalog.ThreddsMetadata$Range: double access$000(thredds.catalog.ThreddsMetadata$Range)>($r1);

        $r2 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range northsouth>;

        $d1 = staticinvoke <thredds.catalog.ThreddsMetadata$Range: double access$000(thredds.catalog.ThreddsMetadata$Range)>($r2);

        $r3 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range northsouth>;

        $d2 = staticinvoke <thredds.catalog.ThreddsMetadata$Range: double access$100(thredds.catalog.ThreddsMetadata$Range)>($r3);

        $d3 = $d1 + $d2;

        $d4 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d3);

        return $d4;
    }

    public double getLatSouth()
    {
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;
        thredds.catalog.ThreddsMetadata$Range $r1, $r2, $r3;
        double $d0, $d1, $d2, $d3, $d4;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        $r1 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range northsouth>;

        $d0 = staticinvoke <thredds.catalog.ThreddsMetadata$Range: double access$000(thredds.catalog.ThreddsMetadata$Range)>($r1);

        $r2 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range northsouth>;

        $d1 = staticinvoke <thredds.catalog.ThreddsMetadata$Range: double access$000(thredds.catalog.ThreddsMetadata$Range)>($r2);

        $r3 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range northsouth>;

        $d2 = staticinvoke <thredds.catalog.ThreddsMetadata$Range: double access$100(thredds.catalog.ThreddsMetadata$Range)>($r3);

        $d3 = $d1 + $d2;

        $d4 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d3);

        return $d4;
    }

    public double getLonStart()
    {
        thredds.catalog.ThreddsMetadata$Range $r1, $r2;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;
        double $d0;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        $r1 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range eastwest>;

        if $r1 != null goto label1;

        $d0 = #NaN;

        goto label2;

     label1:
        $r2 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range eastwest>;

        $d0 = staticinvoke <thredds.catalog.ThreddsMetadata$Range: double access$000(thredds.catalog.ThreddsMetadata$Range)>($r2);

     label2:
        return $d0;
    }

    public void setLonStart(double)
    {
        thredds.catalog.ThreddsMetadata$Range $r1, $r2, $r3, $r4;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;
        double d0;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        d0 := @parameter0: double;

        $r1 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range eastwest>;

        if $r1 != null goto label1;

        $r3 = new thredds.catalog.ThreddsMetadata$Range;

        $r4 = <thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range defaultEastwest>;

        specialinvoke $r3.<thredds.catalog.ThreddsMetadata$Range: void <init>(thredds.catalog.ThreddsMetadata$Range)>($r4);

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range eastwest> = $r3;

     label1:
        $r2 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range eastwest>;

        staticinvoke <thredds.catalog.ThreddsMetadata$Range: double access$002(thredds.catalog.ThreddsMetadata$Range,double)>($r2, d0);

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: int hashCode> = 0;

        return;
    }

    public double getLonExtent()
    {
        thredds.catalog.ThreddsMetadata$Range $r1, $r2;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;
        double $d0;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        $r1 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range eastwest>;

        if $r1 != null goto label1;

        $d0 = #NaN;

        goto label2;

     label1:
        $r2 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range eastwest>;

        $d0 = staticinvoke <thredds.catalog.ThreddsMetadata$Range: double access$100(thredds.catalog.ThreddsMetadata$Range)>($r2);

     label2:
        return $d0;
    }

    public void setLonExtent(double)
    {
        thredds.catalog.ThreddsMetadata$Range $r1, $r2, $r3, $r4;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;
        double d0;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        d0 := @parameter0: double;

        $r1 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range eastwest>;

        if $r1 != null goto label1;

        $r3 = new thredds.catalog.ThreddsMetadata$Range;

        $r4 = <thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range defaultEastwest>;

        specialinvoke $r3.<thredds.catalog.ThreddsMetadata$Range: void <init>(thredds.catalog.ThreddsMetadata$Range)>($r4);

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range eastwest> = $r3;

     label1:
        $r2 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range eastwest>;

        staticinvoke <thredds.catalog.ThreddsMetadata$Range: double access$102(thredds.catalog.ThreddsMetadata$Range,double)>($r2, d0);

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: int hashCode> = 0;

        return;
    }

    public double getLonResolution()
    {
        thredds.catalog.ThreddsMetadata$Range $r1, $r2;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;
        double $d0;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        $r1 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range eastwest>;

        if $r1 != null goto label1;

        $d0 = #NaN;

        goto label2;

     label1:
        $r2 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range eastwest>;

        $d0 = staticinvoke <thredds.catalog.ThreddsMetadata$Range: double access$200(thredds.catalog.ThreddsMetadata$Range)>($r2);

     label2:
        return $d0;
    }

    public void setLonResolution(double)
    {
        thredds.catalog.ThreddsMetadata$Range $r1, $r2, $r3, $r4;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;
        double d0;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        d0 := @parameter0: double;

        $r1 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range eastwest>;

        if $r1 != null goto label1;

        $r3 = new thredds.catalog.ThreddsMetadata$Range;

        $r4 = <thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range defaultEastwest>;

        specialinvoke $r3.<thredds.catalog.ThreddsMetadata$Range: void <init>(thredds.catalog.ThreddsMetadata$Range)>($r4);

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range eastwest> = $r3;

     label1:
        $r2 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range eastwest>;

        staticinvoke <thredds.catalog.ThreddsMetadata$Range: double access$202(thredds.catalog.ThreddsMetadata$Range,double)>($r2, d0);

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: int hashCode> = 0;

        return;
    }

    public java.lang.String getLonUnits()
    {
        thredds.catalog.ThreddsMetadata$Range $r1, $r2;
        java.lang.String $r3;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        $r1 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range eastwest>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range eastwest>;

        $r3 = staticinvoke <thredds.catalog.ThreddsMetadata$Range: java.lang.String access$300(thredds.catalog.ThreddsMetadata$Range)>($r2);

     label2:
        return $r3;
    }

    public void setLonUnits(java.lang.String)
    {
        thredds.catalog.ThreddsMetadata$Range $r1, $r3, $r4, $r5;
        java.lang.String r2;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range eastwest>;

        if $r1 != null goto label1;

        $r4 = new thredds.catalog.ThreddsMetadata$Range;

        $r5 = <thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range defaultEastwest>;

        specialinvoke $r4.<thredds.catalog.ThreddsMetadata$Range: void <init>(thredds.catalog.ThreddsMetadata$Range)>($r5);

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range eastwest> = $r4;

     label1:
        $r3 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range eastwest>;

        staticinvoke <thredds.catalog.ThreddsMetadata$Range: java.lang.String access$302(thredds.catalog.ThreddsMetadata$Range,java.lang.String)>($r3, r2);

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: int hashCode> = 0;

        return;
    }

    public double getLonEast()
    {
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;
        thredds.catalog.ThreddsMetadata$Range $r1, $r2, $r3, $r4;
        double $d0, $d1, $d2, $d3, $d4;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        $r1 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range eastwest>;

        if $r1 != null goto label1;

        return #NaN;

     label1:
        $r2 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range eastwest>;

        $d0 = staticinvoke <thredds.catalog.ThreddsMetadata$Range: double access$000(thredds.catalog.ThreddsMetadata$Range)>($r2);

        $r3 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range eastwest>;

        $d1 = staticinvoke <thredds.catalog.ThreddsMetadata$Range: double access$000(thredds.catalog.ThreddsMetadata$Range)>($r3);

        $r4 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range eastwest>;

        $d2 = staticinvoke <thredds.catalog.ThreddsMetadata$Range: double access$100(thredds.catalog.ThreddsMetadata$Range)>($r4);

        $d3 = $d1 + $d2;

        $d4 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d3);

        return $d4;
    }

    public double getLonWest()
    {
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;
        thredds.catalog.ThreddsMetadata$Range $r1, $r2, $r3, $r4;
        double $d0, $d1, $d2, $d3, $d4;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        $r1 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range eastwest>;

        if $r1 != null goto label1;

        return #NaN;

     label1:
        $r2 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range eastwest>;

        $d0 = staticinvoke <thredds.catalog.ThreddsMetadata$Range: double access$000(thredds.catalog.ThreddsMetadata$Range)>($r2);

        $r3 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range eastwest>;

        $d1 = staticinvoke <thredds.catalog.ThreddsMetadata$Range: double access$000(thredds.catalog.ThreddsMetadata$Range)>($r3);

        $r4 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range eastwest>;

        $d2 = staticinvoke <thredds.catalog.ThreddsMetadata$Range: double access$100(thredds.catalog.ThreddsMetadata$Range)>($r4);

        $d3 = $d1 + $d2;

        $d4 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d3);

        return $d4;
    }

    public double getHeightStart()
    {
        thredds.catalog.ThreddsMetadata$Range $r1, $r2;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;
        double $d0;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        $r1 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range updown>;

        if $r1 != null goto label1;

        $d0 = 0.0;

        goto label2;

     label1:
        $r2 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range updown>;

        $d0 = staticinvoke <thredds.catalog.ThreddsMetadata$Range: double access$000(thredds.catalog.ThreddsMetadata$Range)>($r2);

     label2:
        return $d0;
    }

    public void setHeightStart(double)
    {
        thredds.catalog.ThreddsMetadata$Range $r1, $r2, $r3, $r4;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;
        double d0;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        d0 := @parameter0: double;

        $r1 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range updown>;

        if $r1 != null goto label1;

        $r3 = new thredds.catalog.ThreddsMetadata$Range;

        $r4 = <thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range defaultUpdown>;

        specialinvoke $r3.<thredds.catalog.ThreddsMetadata$Range: void <init>(thredds.catalog.ThreddsMetadata$Range)>($r4);

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range updown> = $r3;

     label1:
        $r2 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range updown>;

        staticinvoke <thredds.catalog.ThreddsMetadata$Range: double access$002(thredds.catalog.ThreddsMetadata$Range,double)>($r2, d0);

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: int hashCode> = 0;

        return;
    }

    public double getHeightExtent()
    {
        thredds.catalog.ThreddsMetadata$Range $r1, $r2;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;
        double $d0;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        $r1 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range updown>;

        if $r1 != null goto label1;

        $d0 = 0.0;

        goto label2;

     label1:
        $r2 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range updown>;

        $d0 = staticinvoke <thredds.catalog.ThreddsMetadata$Range: double access$100(thredds.catalog.ThreddsMetadata$Range)>($r2);

     label2:
        return $d0;
    }

    public void setHeightExtent(double)
    {
        thredds.catalog.ThreddsMetadata$Range $r1, $r2, $r3, $r4;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;
        double d0;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        d0 := @parameter0: double;

        $r1 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range updown>;

        if $r1 != null goto label1;

        $r3 = new thredds.catalog.ThreddsMetadata$Range;

        $r4 = <thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range defaultUpdown>;

        specialinvoke $r3.<thredds.catalog.ThreddsMetadata$Range: void <init>(thredds.catalog.ThreddsMetadata$Range)>($r4);

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range updown> = $r3;

     label1:
        $r2 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range updown>;

        staticinvoke <thredds.catalog.ThreddsMetadata$Range: double access$102(thredds.catalog.ThreddsMetadata$Range,double)>($r2, d0);

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: int hashCode> = 0;

        return;
    }

    public double getHeightResolution()
    {
        thredds.catalog.ThreddsMetadata$Range $r1, $r2;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;
        double $d0;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        $r1 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range updown>;

        if $r1 != null goto label1;

        $d0 = 0.0;

        goto label2;

     label1:
        $r2 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range updown>;

        $d0 = staticinvoke <thredds.catalog.ThreddsMetadata$Range: double access$200(thredds.catalog.ThreddsMetadata$Range)>($r2);

     label2:
        return $d0;
    }

    public void setHeightResolution(double)
    {
        thredds.catalog.ThreddsMetadata$Range $r1, $r2, $r3, $r4;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;
        double d0;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        d0 := @parameter0: double;

        $r1 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range updown>;

        if $r1 != null goto label1;

        $r3 = new thredds.catalog.ThreddsMetadata$Range;

        $r4 = <thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range defaultUpdown>;

        specialinvoke $r3.<thredds.catalog.ThreddsMetadata$Range: void <init>(thredds.catalog.ThreddsMetadata$Range)>($r4);

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range updown> = $r3;

     label1:
        $r2 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range updown>;

        staticinvoke <thredds.catalog.ThreddsMetadata$Range: double access$202(thredds.catalog.ThreddsMetadata$Range,double)>($r2, d0);

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: int hashCode> = 0;

        return;
    }

    public java.lang.String getHeightUnits()
    {
        thredds.catalog.ThreddsMetadata$Range $r1, $r2;
        java.lang.String $r3;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        $r1 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range updown>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range updown>;

        $r3 = staticinvoke <thredds.catalog.ThreddsMetadata$Range: java.lang.String access$300(thredds.catalog.ThreddsMetadata$Range)>($r2);

     label2:
        return $r3;
    }

    public void setHeightUnits(java.lang.String)
    {
        thredds.catalog.ThreddsMetadata$Range $r1, $r3, $r4, $r5;
        java.lang.String r2;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range updown>;

        if $r1 != null goto label1;

        $r4 = new thredds.catalog.ThreddsMetadata$Range;

        $r5 = <thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range defaultUpdown>;

        specialinvoke $r4.<thredds.catalog.ThreddsMetadata$Range: void <init>(thredds.catalog.ThreddsMetadata$Range)>($r5);

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range updown> = $r4;

     label1:
        $r3 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range updown>;

        staticinvoke <thredds.catalog.ThreddsMetadata$Range: java.lang.String access$302(thredds.catalog.ThreddsMetadata$Range,java.lang.String)>($r3, r2);

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: int hashCode> = 0;

        return;
    }

    public ucar.unidata.geoloc.LatLonRect getBoundingBox()
    {
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;
        ucar.unidata.geoloc.LatLonRect $r2;
        ucar.unidata.geoloc.LatLonPointImpl $r1;
        boolean $z0;
        double $d0, $d1, $d2, $d3;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        $z0 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: boolean isGlobal>;

        if $z0 == 0 goto label1;

        $r2 = new ucar.unidata.geoloc.LatLonRect;

        specialinvoke $r2.<ucar.unidata.geoloc.LatLonRect: void <init>()>();

        goto label2;

     label1:
        $r2 = new ucar.unidata.geoloc.LatLonRect;

        $r1 = new ucar.unidata.geoloc.LatLonPointImpl;

        $d0 = virtualinvoke r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: double getLatStart()>();

        $d1 = virtualinvoke r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: double getLonStart()>();

        specialinvoke $r1.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>($d0, $d1);

        $d2 = virtualinvoke r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: double getLatExtent()>();

        $d3 = virtualinvoke r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: double getLonExtent()>();

        specialinvoke $r2.<ucar.unidata.geoloc.LatLonRect: void <init>(ucar.unidata.geoloc.LatLonPoint,double,double)>($r1, $d2, $d3);

     label2:
        return $r2;
    }

    public void setBoundingBox(ucar.unidata.geoloc.LatLonRect)
    {
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r3;
        ucar.unidata.geoloc.LatLonRect r0;
        thredds.catalog.ThreddsMetadata$Range $r4, $r5;
        ucar.unidata.geoloc.LatLonPointImpl $r1, $r2;
        double $d0, $d1, d2, $d3, $d4, $d5;

        r3 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        r0 := @parameter0: ucar.unidata.geoloc.LatLonRect;

        $r1 = virtualinvoke r0.<ucar.unidata.geoloc.LatLonRect: ucar.unidata.geoloc.LatLonPointImpl getLowerLeftPoint()>();

        $r2 = virtualinvoke r0.<ucar.unidata.geoloc.LatLonRect: ucar.unidata.geoloc.LatLonPointImpl getUpperRightPoint()>();

        $d0 = virtualinvoke $r2.<ucar.unidata.geoloc.LatLonPointImpl: double getLatitude()>();

        $d1 = virtualinvoke $r1.<ucar.unidata.geoloc.LatLonPointImpl: double getLatitude()>();

        d2 = $d0 - $d1;

        $r4 = new thredds.catalog.ThreddsMetadata$Range;

        $d3 = virtualinvoke $r1.<ucar.unidata.geoloc.LatLonPointImpl: double getLongitude()>();

        $d4 = virtualinvoke r0.<ucar.unidata.geoloc.LatLonRect: double getWidth()>();

        specialinvoke $r4.<thredds.catalog.ThreddsMetadata$Range: void <init>(double,double,double,java.lang.String)>($d3, $d4, 0.0, "degrees_east");

        r3.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range eastwest> = $r4;

        $r5 = new thredds.catalog.ThreddsMetadata$Range;

        $d5 = virtualinvoke $r1.<ucar.unidata.geoloc.LatLonPointImpl: double getLatitude()>();

        specialinvoke $r5.<thredds.catalog.ThreddsMetadata$Range: void <init>(double,double,double,java.lang.String)>($d5, d2, 0.0, "degrees_north");

        r3.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range northsouth> = $r5;

        return;
    }

    public void setVertical(ucar.nc2.dataset.CoordinateAxis1D)
    {
        long $l0;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r2;
        ucar.nc2.dataset.CoordinateAxis1D r0;
        thredds.catalog.ThreddsMetadata$Range $r3;
        int i1, $i2;
        java.lang.String $r1;
        double $d0, $d1, d2, $d3, $d4;
        boolean $z0;

        r2 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        r0 := @parameter0: ucar.nc2.dataset.CoordinateAxis1D;

        $l0 = virtualinvoke r0.<ucar.nc2.dataset.CoordinateAxis1D: long getSize()>();

        i1 = (int) $l0;

        $i2 = i1 - 1;

        $d0 = virtualinvoke r0.<ucar.nc2.dataset.CoordinateAxis1D: double getCoordValue(int)>($i2);

        $d1 = virtualinvoke r0.<ucar.nc2.dataset.CoordinateAxis1D: double getCoordValue(int)>(0);

        d2 = $d0 - $d1;

        $d3 = virtualinvoke r0.<ucar.nc2.dataset.CoordinateAxis1D: double getIncrement()>();

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.CoordinateAxis1D: java.lang.String getUnitsString()>();

        $r3 = new thredds.catalog.ThreddsMetadata$Range;

        $d4 = virtualinvoke r0.<ucar.nc2.dataset.CoordinateAxis1D: double getCoordValue(int)>(0);

        specialinvoke $r3.<thredds.catalog.ThreddsMetadata$Range: void <init>(double,double,double,java.lang.String)>($d4, d2, $d3, $r1);

        r2.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range updown> = $r3;

        if $r1 == null goto label1;

        $z0 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>("m", $r1);

        virtualinvoke r2.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: void setZPositiveUp(boolean)>($z0);

     label1:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        int $i0, $i1;
        java.lang.Object r1;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;
        boolean $z0, $z1;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        $i1 = virtualinvoke r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: int hashCode()>();

        if $i0 != $i1 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public int hashCode()
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, $i13;
        java.lang.String $r5, $r6;
        boolean $z0, $z1;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r0;
        java.util.List $r4, $r7;
        thredds.catalog.ThreddsMetadata$Range $r1, $r2, $r3, $r8, $r9, $r10;

        r0 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        $i0 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: int hashCode>;

        if $i0 != 0 goto label8;

        i12 = 17;

        $r1 = virtualinvoke r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range getEastWestRange()>();

        if null == $r1 goto label1;

        $r10 = virtualinvoke r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range getEastWestRange()>();

        $i11 = virtualinvoke $r10.<thredds.catalog.ThreddsMetadata$Range: int hashCode()>();

        i12 = 629 + $i11;

     label1:
        $r2 = virtualinvoke r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range getNorthSouthRange()>();

        if null == $r2 goto label2;

        $i9 = 37 * i12;

        $r9 = virtualinvoke r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range getNorthSouthRange()>();

        $i10 = virtualinvoke $r9.<thredds.catalog.ThreddsMetadata$Range: int hashCode()>();

        i12 = $i9 + $i10;

     label2:
        $r3 = virtualinvoke r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range getUpDownRange()>();

        if null == $r3 goto label3;

        $i7 = 37 * i12;

        $r8 = virtualinvoke r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range getUpDownRange()>();

        $i8 = virtualinvoke $r8.<thredds.catalog.ThreddsMetadata$Range: int hashCode()>();

        i12 = $i7 + $i8;

     label3:
        $r4 = virtualinvoke r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: java.util.List getNames()>();

        if null == $r4 goto label4;

        $i5 = 37 * i12;

        $r7 = virtualinvoke r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: java.util.List getNames()>();

        $i6 = virtualinvoke $r7.<java.lang.Object: int hashCode()>();

        i12 = $i5 + $i6;

     label4:
        $r5 = virtualinvoke r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: java.lang.String getZPositive()>();

        if null == $r5 goto label5;

        $i3 = 2 * i12;

        $r6 = virtualinvoke r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: java.lang.String getZPositive()>();

        $i4 = virtualinvoke $r6.<java.lang.String: int hashCode()>();

        i12 = $i3 + $i4;

     label5:
        $i1 = 2 * i12;

        $z0 = virtualinvoke r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: boolean isGlobal()>();

        if $z0 == 0 goto label6;

        $z1 = 1;

        goto label7;

     label6:
        $z1 = 0;

     label7:
        $i2 = $i1 + $z1;

        r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: int hashCode> = $i2;

     label8:
        $i13 = r0.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: int hashCode>;

        return $i13;
    }

    public void toXML(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r5;
        org.jdom.output.Format $r4;
        thredds.catalog.parser.jdom.InvCatalogFactory10 $r0;
        org.jdom.output.XMLOutputter $r3;
        org.jdom.Element $r2;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r1;

        r1 := @this: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        r5 := @parameter0: java.io.OutputStream;

        $r0 = new thredds.catalog.parser.jdom.InvCatalogFactory10;

        specialinvoke $r0.<thredds.catalog.parser.jdom.InvCatalogFactory10: void <init>()>();

        $r2 = virtualinvoke $r0.<thredds.catalog.parser.jdom.InvCatalogFactory10: org.jdom.Element writeGeospatialCoverage(thredds.catalog.ThreddsMetadata$GeospatialCoverage)>(r1);

        $r3 = new org.jdom.output.XMLOutputter;

        $r4 = staticinvoke <org.jdom.output.Format: org.jdom.output.Format getPrettyFormat()>();

        specialinvoke $r3.<org.jdom.output.XMLOutputter: void <init>(org.jdom.output.Format)>($r4);

        virtualinvoke $r3.<org.jdom.output.XMLOutputter: void output(org.jdom.Element,java.io.OutputStream)>($r2, r5);

        return;
    }

    static void <clinit>()
    {
        thredds.catalog.ThreddsMetadata$Range $r0, $r1, $r2;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage $r3;

        $r0 = new thredds.catalog.ThreddsMetadata$Range;

        specialinvoke $r0.<thredds.catalog.ThreddsMetadata$Range: void <init>(double,double,double,java.lang.String)>(0.0, 0.0, #NaN, "degrees_east");

        <thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range defaultEastwest> = $r0;

        $r1 = new thredds.catalog.ThreddsMetadata$Range;

        specialinvoke $r1.<thredds.catalog.ThreddsMetadata$Range: void <init>(double,double,double,java.lang.String)>(0.0, 0.0, #NaN, "degrees_north");

        <thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range defaultNorthsouth> = $r1;

        $r2 = new thredds.catalog.ThreddsMetadata$Range;

        specialinvoke $r2.<thredds.catalog.ThreddsMetadata$Range: void <init>(double,double,double,java.lang.String)>(0.0, 0.0, #NaN, "km");

        <thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$Range defaultUpdown> = $r2;

        $r3 = new thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        specialinvoke $r3.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: void <init>()>();

        <thredds.catalog.ThreddsMetadata$GeospatialCoverage: thredds.catalog.ThreddsMetadata$GeospatialCoverage empty> = $r3;

        return;
    }
}
