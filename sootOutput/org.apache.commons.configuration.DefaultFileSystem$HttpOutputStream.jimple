class org.apache.commons.configuration.DefaultFileSystem$HttpOutputStream extends org.apache.commons.configuration.VerifiableOutputStream
{
    private final java.io.OutputStream stream;
    private final java.net.HttpURLConnection connection;

    public void <init>(java.io.OutputStream, java.net.HttpURLConnection)
    {
        java.io.OutputStream r1;
        java.net.HttpURLConnection r2;
        org.apache.commons.configuration.DefaultFileSystem$HttpOutputStream r0;

        r0 := @this: org.apache.commons.configuration.DefaultFileSystem$HttpOutputStream;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: java.net.HttpURLConnection;

        specialinvoke r0.<org.apache.commons.configuration.VerifiableOutputStream: void <init>()>();

        r0.<org.apache.commons.configuration.DefaultFileSystem$HttpOutputStream: java.io.OutputStream stream> = r1;

        r0.<org.apache.commons.configuration.DefaultFileSystem$HttpOutputStream: java.net.HttpURLConnection connection> = r2;

        return;
    }

    public void write(byte[]) throws java.io.IOException
    {
        java.io.OutputStream $r2;
        byte[] r1;
        org.apache.commons.configuration.DefaultFileSystem$HttpOutputStream r0;

        r0 := @this: org.apache.commons.configuration.DefaultFileSystem$HttpOutputStream;

        r1 := @parameter0: byte[];

        $r2 = r0.<org.apache.commons.configuration.DefaultFileSystem$HttpOutputStream: java.io.OutputStream stream>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>(r1);

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        java.io.OutputStream $r2;
        byte[] r1;
        int i0, i1;
        org.apache.commons.configuration.DefaultFileSystem$HttpOutputStream r0;

        r0 := @this: org.apache.commons.configuration.DefaultFileSystem$HttpOutputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.apache.commons.configuration.DefaultFileSystem$HttpOutputStream: java.io.OutputStream stream>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public void flush() throws java.io.IOException
    {
        java.io.OutputStream $r1;
        org.apache.commons.configuration.DefaultFileSystem$HttpOutputStream r0;

        r0 := @this: org.apache.commons.configuration.DefaultFileSystem$HttpOutputStream;

        $r1 = r0.<org.apache.commons.configuration.DefaultFileSystem$HttpOutputStream: java.io.OutputStream stream>;

        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

        return;
    }

    public void close() throws java.io.IOException
    {
        java.io.OutputStream $r1;
        org.apache.commons.configuration.DefaultFileSystem$HttpOutputStream r0;

        r0 := @this: org.apache.commons.configuration.DefaultFileSystem$HttpOutputStream;

        $r1 = r0.<org.apache.commons.configuration.DefaultFileSystem$HttpOutputStream: java.io.OutputStream stream>;

        virtualinvoke $r1.<java.io.OutputStream: void close()>();

        return;
    }

    public void write(int) throws java.io.IOException
    {
        int i0;
        java.io.OutputStream $r1;
        org.apache.commons.configuration.DefaultFileSystem$HttpOutputStream r0;

        r0 := @this: org.apache.commons.configuration.DefaultFileSystem$HttpOutputStream;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.commons.configuration.DefaultFileSystem$HttpOutputStream: java.io.OutputStream stream>;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(i0);

        return;
    }

    public java.lang.String toString()
    {
        java.io.OutputStream $r1;
        java.lang.String $r2;
        org.apache.commons.configuration.DefaultFileSystem$HttpOutputStream r0;

        r0 := @this: org.apache.commons.configuration.DefaultFileSystem$HttpOutputStream;

        $r1 = r0.<org.apache.commons.configuration.DefaultFileSystem$HttpOutputStream: java.io.OutputStream stream>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public void verify() throws java.io.IOException
    {
        java.net.HttpURLConnection $r1, $r5, $r8;
        java.io.IOException $r2;
        int $i0, $i1;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r10;
        java.lang.String $r9, $r11;
        org.apache.commons.configuration.DefaultFileSystem$HttpOutputStream r0;

        r0 := @this: org.apache.commons.configuration.DefaultFileSystem$HttpOutputStream;

        $r1 = r0.<org.apache.commons.configuration.DefaultFileSystem$HttpOutputStream: java.net.HttpURLConnection connection>;

        $i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>();

        if $i0 < 400 goto label1;

        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HTTP Error ");

        $r5 = r0.<org.apache.commons.configuration.DefaultFileSystem$HttpOutputStream: java.net.HttpURLConnection connection>;

        $i1 = virtualinvoke $r5.<java.net.HttpURLConnection: int getResponseCode()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r8 = r0.<org.apache.commons.configuration.DefaultFileSystem$HttpOutputStream: java.net.HttpURLConnection connection>;

        $r9 = virtualinvoke $r8.<java.net.HttpURLConnection: java.lang.String getResponseMessage()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r11);

        throw $r2;

     label1:
        return;
    }
}
