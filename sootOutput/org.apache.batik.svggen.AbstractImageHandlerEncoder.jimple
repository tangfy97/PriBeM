public abstract class org.apache.batik.svggen.AbstractImageHandlerEncoder extends org.apache.batik.svggen.DefaultImageHandler
{
    private static final java.awt.geom.AffineTransform IDENTITY;
    private java.lang.String imageDir;
    private java.lang.String urlRoot;
    private static java.lang.reflect.Method createGraphics;
    private static boolean initDone;
    private static final java.lang.Class[] paramc;
    private static java.lang.Object[] paramo;
    static java.lang.Class class$java$awt$image$BufferedImage;

    private static java.awt.Graphics2D createGraphics(java.awt.image.BufferedImage)
    {
        java.lang.Throwable $r11, $r12;
        java.lang.Object[] $r1, $r2, $r9;
        java.awt.Graphics2D $r5, r15;
        java.lang.reflect.Method $r3, $r8, $r14;
        boolean $z0;
        java.awt.image.BufferedImage r0;
        java.lang.Class[] $r7;
        java.lang.Exception $r10;
        java.lang.ThreadDeath $r13;
        java.lang.Object $r4;
        java.lang.Class $r6;

        r0 := @parameter0: java.awt.image.BufferedImage;

        $z0 = <org.apache.batik.svggen.AbstractImageHandlerEncoder: boolean initDone>;

        if $z0 != 0 goto label09;

     label01:
        $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.apache.batik.ext.awt.image.GraphicsUtil");

        $r7 = <org.apache.batik.svggen.AbstractImageHandlerEncoder: java.lang.Class[] paramc>;

        $r8 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("createGraphics", $r7);

        <org.apache.batik.svggen.AbstractImageHandlerEncoder: java.lang.reflect.Method createGraphics> = $r8;

        $r9 = newarray (java.lang.Object)[1];

        <org.apache.batik.svggen.AbstractImageHandlerEncoder: java.lang.Object[] paramo> = $r9;

     label02:
        goto label15;

     label03:
        goto label09;

     label04:
        $r13 := @caughtexception;

        throw $r13;

     label05:
        $r12 := @caughtexception;

        goto label16;

     label06:
        goto label09;

     label07:
        $r11 := @caughtexception;

        goto label17;

     label08:
        throw $r11;

     label09:
        $r14 = <org.apache.batik.svggen.AbstractImageHandlerEncoder: java.lang.reflect.Method createGraphics>;

        if $r14 != null goto label10;

        $r5 = virtualinvoke r0.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();

        return $r5;

     label10:
        $r1 = <org.apache.batik.svggen.AbstractImageHandlerEncoder: java.lang.Object[] paramo>;

        $r1[0] = r0;

        r15 = null;

     label11:
        $r3 = <org.apache.batik.svggen.AbstractImageHandlerEncoder: java.lang.reflect.Method createGraphics>;

        $r2 = <org.apache.batik.svggen.AbstractImageHandlerEncoder: java.lang.Object[] paramo>;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r2);

        r15 = (java.awt.Graphics2D) $r4;

     label12:
        goto label14;

     label13:
        $r10 := @caughtexception;

     label14:
        return r15;

     label15:
        <org.apache.batik.svggen.AbstractImageHandlerEncoder: boolean initDone> = 1;

        goto label03;

     label16:
        <org.apache.batik.svggen.AbstractImageHandlerEncoder: boolean initDone> = 1;

        goto label06;

     label17:
        <org.apache.batik.svggen.AbstractImageHandlerEncoder: boolean initDone> = 1;

        goto label08;

        catch java.lang.ThreadDeath from label01 to label02 with label04;
        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label01 to label07 with label07;
        catch java.lang.Exception from label11 to label12 with label13;
    }

    public void <init>(java.lang.String, java.lang.String) throws org.apache.batik.svggen.SVGGraphics2DIOException
    {
        java.net.URL $r4;
        org.apache.batik.svggen.SVGGraphics2DRuntimeException $r6, $r7;
        org.apache.batik.svggen.AbstractImageHandlerEncoder r0;
        java.lang.StringBuffer $r10, $r11, $r13;
        java.lang.String r1, r3, $r5, $r12, $r14;
        boolean $z0;
        java.net.MalformedURLException $r8;
        org.apache.batik.svggen.SVGGraphics2DIOException $r9;
        java.io.File $r2;

        r0 := @this: org.apache.batik.svggen.AbstractImageHandlerEncoder;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.batik.svggen.DefaultImageHandler: void <init>()>();

        r0.<org.apache.batik.svggen.AbstractImageHandlerEncoder: java.lang.String imageDir> = "";

        r0.<org.apache.batik.svggen.AbstractImageHandlerEncoder: java.lang.String urlRoot> = "";

        if r1 != null goto label1;

        $r7 = new org.apache.batik.svggen.SVGGraphics2DRuntimeException;

        specialinvoke $r7.<org.apache.batik.svggen.SVGGraphics2DRuntimeException: void <init>(java.lang.String)>("imageDir should not be null");

        throw $r7;

     label1:
        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r1);

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label2;

        $r6 = new org.apache.batik.svggen.SVGGraphics2DRuntimeException;

        specialinvoke $r6.<org.apache.batik.svggen.SVGGraphics2DRuntimeException: void <init>(java.lang.String)>("imageDir does not exist");

        throw $r6;

     label2:
        r0.<org.apache.batik.svggen.AbstractImageHandlerEncoder: java.lang.String imageDir> = r1;

        if r3 == null goto label3;

        r0.<org.apache.batik.svggen.AbstractImageHandlerEncoder: java.lang.String urlRoot> = r3;

        goto label6;

     label3:
        $r4 = virtualinvoke $r2.<java.io.File: java.net.URL toURL()>();

        $r5 = virtualinvoke $r4.<java.net.URL: java.lang.String toString()>();

        r0.<org.apache.batik.svggen.AbstractImageHandlerEncoder: java.lang.String urlRoot> = $r5;

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;

        $r9 = new org.apache.batik.svggen.SVGGraphics2DIOException;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("cannot convert imageDir to a URL value : ");

        $r12 = virtualinvoke $r8.<java.lang.Throwable: java.lang.String getMessage()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r9.<org.apache.batik.svggen.SVGGraphics2DIOException: void <init>(java.lang.String,java.io.IOException)>($r14, $r8);

        throw $r9;

     label6:
        return;

        catch java.net.MalformedURLException from label3 to label4 with label5;
    }

    protected void handleHREF(java.awt.Image, org.w3c.dom.Element, org.apache.batik.svggen.SVGGeneratorContext) throws org.apache.batik.svggen.SVGGraphics2DIOException
    {
        java.awt.Image r1;
        java.awt.image.BufferedImage $r3;
        org.apache.batik.svggen.AbstractImageHandlerEncoder r2;
        java.awt.Dimension $r0;
        org.w3c.dom.Element r5;
        java.awt.Graphics2D $r4;
        org.apache.batik.svggen.SVGGeneratorContext r6;
        int $i0, $i1;

        r2 := @this: org.apache.batik.svggen.AbstractImageHandlerEncoder;

        r1 := @parameter0: java.awt.Image;

        r5 := @parameter1: org.w3c.dom.Element;

        r6 := @parameter2: org.apache.batik.svggen.SVGGeneratorContext;

        $r0 = new java.awt.Dimension;

        $i0 = virtualinvoke r1.<java.awt.Image: int getWidth(java.awt.image.ImageObserver)>(null);

        $i1 = virtualinvoke r1.<java.awt.Image: int getHeight(java.awt.image.ImageObserver)>(null);

        specialinvoke $r0.<java.awt.Dimension: void <init>(int,int)>($i0, $i1);

        $r3 = virtualinvoke r2.<org.apache.batik.svggen.AbstractImageHandlerEncoder: java.awt.image.BufferedImage buildBufferedImage(java.awt.Dimension)>($r0);

        $r4 = staticinvoke <org.apache.batik.svggen.AbstractImageHandlerEncoder: java.awt.Graphics2D createGraphics(java.awt.image.BufferedImage)>($r3);

        virtualinvoke $r4.<java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>(r1, 0, 0, null);

        virtualinvoke $r4.<java.awt.Graphics: void dispose()>();

        specialinvoke r2.<org.apache.batik.svggen.AbstractImageHandlerEncoder: void saveBufferedImageToFile(org.w3c.dom.Element,java.awt.image.BufferedImage,org.apache.batik.svggen.SVGGeneratorContext)>(r5, $r3, r6);

        return;
    }

    protected void handleHREF(java.awt.image.RenderedImage, org.w3c.dom.Element, org.apache.batik.svggen.SVGGeneratorContext) throws org.apache.batik.svggen.SVGGraphics2DIOException
    {
        java.awt.image.BufferedImage $r3;
        java.awt.image.RenderedImage r1;
        java.awt.geom.AffineTransform $r5;
        org.apache.batik.svggen.AbstractImageHandlerEncoder r2;
        java.awt.Dimension $r0;
        org.w3c.dom.Element r6;
        java.awt.Graphics2D $r4;
        org.apache.batik.svggen.SVGGeneratorContext r7;
        int $i0, $i1;

        r2 := @this: org.apache.batik.svggen.AbstractImageHandlerEncoder;

        r1 := @parameter0: java.awt.image.RenderedImage;

        r6 := @parameter1: org.w3c.dom.Element;

        r7 := @parameter2: org.apache.batik.svggen.SVGGeneratorContext;

        $r0 = new java.awt.Dimension;

        $i0 = interfaceinvoke r1.<java.awt.image.RenderedImage: int getWidth()>();

        $i1 = interfaceinvoke r1.<java.awt.image.RenderedImage: int getHeight()>();

        specialinvoke $r0.<java.awt.Dimension: void <init>(int,int)>($i0, $i1);

        $r3 = virtualinvoke r2.<org.apache.batik.svggen.AbstractImageHandlerEncoder: java.awt.image.BufferedImage buildBufferedImage(java.awt.Dimension)>($r0);

        $r4 = staticinvoke <org.apache.batik.svggen.AbstractImageHandlerEncoder: java.awt.Graphics2D createGraphics(java.awt.image.BufferedImage)>($r3);

        $r5 = <org.apache.batik.svggen.AbstractImageHandlerEncoder: java.awt.geom.AffineTransform IDENTITY>;

        virtualinvoke $r4.<java.awt.Graphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>(r1, $r5);

        virtualinvoke $r4.<java.awt.Graphics: void dispose()>();

        specialinvoke r2.<org.apache.batik.svggen.AbstractImageHandlerEncoder: void saveBufferedImageToFile(org.w3c.dom.Element,java.awt.image.BufferedImage,org.apache.batik.svggen.SVGGeneratorContext)>(r6, $r3, r7);

        return;
    }

    protected void handleHREF(java.awt.image.renderable.RenderableImage, org.w3c.dom.Element, org.apache.batik.svggen.SVGGeneratorContext) throws org.apache.batik.svggen.SVGGraphics2DIOException
    {
        org.apache.batik.svggen.AbstractImageHandlerEncoder r2;
        java.awt.Graphics2D $r4;
        int $i0, $i1;
        java.awt.image.renderable.RenderableImage r1;
        double $d0, $d1, $d2, $d3;
        java.awt.image.BufferedImage $r3;
        java.awt.geom.AffineTransform $r5;
        java.awt.Dimension $r0;
        org.w3c.dom.Element r6;
        org.apache.batik.svggen.SVGGeneratorContext r7;
        float $f0, $f1;

        r2 := @this: org.apache.batik.svggen.AbstractImageHandlerEncoder;

        r1 := @parameter0: java.awt.image.renderable.RenderableImage;

        r6 := @parameter1: org.w3c.dom.Element;

        r7 := @parameter2: org.apache.batik.svggen.SVGGeneratorContext;

        $r0 = new java.awt.Dimension;

        $f0 = interfaceinvoke r1.<java.awt.image.renderable.RenderableImage: float getWidth()>();

        $d0 = (double) $f0;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i0 = (int) $d1;

        $f1 = interfaceinvoke r1.<java.awt.image.renderable.RenderableImage: float getHeight()>();

        $d2 = (double) $f1;

        $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2);

        $i1 = (int) $d3;

        specialinvoke $r0.<java.awt.Dimension: void <init>(int,int)>($i0, $i1);

        $r3 = virtualinvoke r2.<org.apache.batik.svggen.AbstractImageHandlerEncoder: java.awt.image.BufferedImage buildBufferedImage(java.awt.Dimension)>($r0);

        $r4 = staticinvoke <org.apache.batik.svggen.AbstractImageHandlerEncoder: java.awt.Graphics2D createGraphics(java.awt.image.BufferedImage)>($r3);

        $r5 = <org.apache.batik.svggen.AbstractImageHandlerEncoder: java.awt.geom.AffineTransform IDENTITY>;

        virtualinvoke $r4.<java.awt.Graphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>(r1, $r5);

        virtualinvoke $r4.<java.awt.Graphics: void dispose()>();

        specialinvoke r2.<org.apache.batik.svggen.AbstractImageHandlerEncoder: void saveBufferedImageToFile(org.w3c.dom.Element,java.awt.image.BufferedImage,org.apache.batik.svggen.SVGGeneratorContext)>(r6, $r3, r7);

        return;
    }

    private void saveBufferedImageToFile(org.w3c.dom.Element, java.awt.image.BufferedImage, org.apache.batik.svggen.SVGGeneratorContext) throws org.apache.batik.svggen.SVGGraphics2DIOException
    {
        org.apache.batik.svggen.SVGGraphics2DRuntimeException $r21;
        org.apache.batik.svggen.AbstractImageHandlerEncoder r1;
        java.lang.StringBuffer $r6, $r8, $r10, $r14, $r16, $r17, $r19;
        org.apache.batik.svggen.SVGIDGenerator $r2;
        java.lang.String $r3, $r4, $r7, $r9, $r11, $r15, $r18, $r20;
        boolean $z0;
        java.awt.image.BufferedImage r12;
        java.io.File $r5, r22;
        org.w3c.dom.Element r13;
        org.apache.batik.svggen.SVGGeneratorContext r0;

        r1 := @this: org.apache.batik.svggen.AbstractImageHandlerEncoder;

        r13 := @parameter0: org.w3c.dom.Element;

        r12 := @parameter1: java.awt.image.BufferedImage;

        r0 := @parameter2: org.apache.batik.svggen.SVGGeneratorContext;

        if r0 != null goto label1;

        $r21 = new org.apache.batik.svggen.SVGGraphics2DRuntimeException;

        specialinvoke $r21.<org.apache.batik.svggen.SVGGraphics2DRuntimeException: void <init>(java.lang.String)>("generatorContext should not be null");

        throw $r21;

     label1:
        r22 = null;

        goto label3;

     label2:
        $r2 = r0.<org.apache.batik.svggen.SVGGeneratorContext: org.apache.batik.svggen.SVGIDGenerator idGenerator>;

        $r3 = virtualinvoke r1.<org.apache.batik.svggen.AbstractImageHandlerEncoder: java.lang.String getPrefix()>();

        $r4 = virtualinvoke $r2.<org.apache.batik.svggen.SVGIDGenerator: java.lang.String generateID(java.lang.String)>($r3);

        $r5 = new java.io.File;

        $r7 = r1.<org.apache.batik.svggen.AbstractImageHandlerEncoder: java.lang.String imageDir>;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r9 = virtualinvoke r1.<org.apache.batik.svggen.AbstractImageHandlerEncoder: java.lang.String getSuffix()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r7, $r11);

        r22 = $r5;

        $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label3;

        r22 = null;

     label3:
        if r22 == null goto label2;

        virtualinvoke r1.<org.apache.batik.svggen.AbstractImageHandlerEncoder: void encodeImage(java.awt.image.BufferedImage,java.io.File)>(r12, r22);

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = r1.<org.apache.batik.svggen.AbstractImageHandlerEncoder: java.lang.String urlRoot>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r18 = virtualinvoke r22.<java.io.File: java.lang.String getName()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke r13.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/1999/xlink", "xlink:href", $r20);

        return;
    }

    public abstract java.lang.String getSuffix();

    public abstract java.lang.String getPrefix();

    public abstract void encodeImage(java.awt.image.BufferedImage, java.io.File) throws org.apache.batik.svggen.SVGGraphics2DIOException;

    public abstract java.awt.image.BufferedImage buildBufferedImage(java.awt.Dimension);

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }

    static void <clinit>()
    {
        java.lang.Class[] $r1;
        java.lang.Class $r2, $r3;
        java.awt.geom.AffineTransform $r0;

        $r0 = new java.awt.geom.AffineTransform;

        specialinvoke $r0.<java.awt.geom.AffineTransform: void <init>()>();

        <org.apache.batik.svggen.AbstractImageHandlerEncoder: java.awt.geom.AffineTransform IDENTITY> = $r0;

        <org.apache.batik.svggen.AbstractImageHandlerEncoder: java.lang.reflect.Method createGraphics> = null;

        <org.apache.batik.svggen.AbstractImageHandlerEncoder: boolean initDone> = 0;

        $r1 = newarray (java.lang.Class)[1];

        $r2 = <org.apache.batik.svggen.AbstractImageHandlerEncoder: java.lang.Class class$java$awt$image$BufferedImage>;

        if $r2 != null goto label1;

        $r3 = staticinvoke <org.apache.batik.svggen.AbstractImageHandlerEncoder: java.lang.Class class$(java.lang.String)>("java.awt.image.BufferedImage");

        <org.apache.batik.svggen.AbstractImageHandlerEncoder: java.lang.Class class$java$awt$image$BufferedImage> = $r3;

        goto label2;

     label1:
        $r3 = <org.apache.batik.svggen.AbstractImageHandlerEncoder: java.lang.Class class$java$awt$image$BufferedImage>;

     label2:
        $r1[0] = $r3;

        <org.apache.batik.svggen.AbstractImageHandlerEncoder: java.lang.Class[] paramc> = $r1;

        <org.apache.batik.svggen.AbstractImageHandlerEncoder: java.lang.Object[] paramo> = null;

        return;
    }
}
