public class com.jmatio.io.MatFileHeader extends java.lang.Object
{
    private static java.lang.String DEFAULT_DESCRIPTIVE_TEXT;
    private static int DEFAULT_VERSION;
    private static byte[] DEFAULT_ENDIAN_INDICATOR;
    private int version;
    private java.lang.String description;
    private byte[] endianIndicator;

    public void <init>(java.lang.String, int, byte[])
    {
        byte[] r2;
        int i0;
        java.lang.String r1;
        com.jmatio.io.MatFileHeader r0;

        r0 := @this: com.jmatio.io.MatFileHeader;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.jmatio.io.MatFileHeader: java.lang.String description> = r1;

        r0.<com.jmatio.io.MatFileHeader: int version> = i0;

        r0.<com.jmatio.io.MatFileHeader: byte[] endianIndicator> = r2;

        return;
    }

    public java.lang.String getDescription()
    {
        java.lang.String $r1;
        com.jmatio.io.MatFileHeader r0;

        r0 := @this: com.jmatio.io.MatFileHeader;

        $r1 = r0.<com.jmatio.io.MatFileHeader: java.lang.String description>;

        return $r1;
    }

    public byte[] getEndianIndicator()
    {
        byte[] $r1;
        com.jmatio.io.MatFileHeader r0;

        r0 := @this: com.jmatio.io.MatFileHeader;

        $r1 = r0.<com.jmatio.io.MatFileHeader: byte[] endianIndicator>;

        return $r1;
    }

    public int getVersion()
    {
        int $i0;
        com.jmatio.io.MatFileHeader r0;

        r0 := @this: com.jmatio.io.MatFileHeader;

        $i0 = r0.<com.jmatio.io.MatFileHeader: int version>;

        return $i0;
    }

    public static com.jmatio.io.MatFileHeader createHeader()
    {
        byte[] $r8;
        java.util.Date $r4;
        int $i0;
        java.lang.StringBuilder $r1, $r3, $r6;
        java.lang.String $r2, $r5, $r7;
        com.jmatio.io.MatFileHeader $r0;

        $r0 = new com.jmatio.io.MatFileHeader;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = <com.jmatio.io.MatFileHeader: java.lang.String DEFAULT_DESCRIPTIVE_TEXT>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = new java.util.Date;

        specialinvoke $r4.<java.util.Date: void <init>()>();

        $r5 = virtualinvoke $r4.<java.util.Date: java.lang.String toString()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = <com.jmatio.io.MatFileHeader: int DEFAULT_VERSION>;

        $r8 = <com.jmatio.io.MatFileHeader: byte[] DEFAULT_ENDIAN_INDICATOR>;

        specialinvoke $r0.<com.jmatio.io.MatFileHeader: void <init>(java.lang.String,int,byte[])>($r7, $i0, $r8);

        return $r0;
    }

    public java.lang.String toString()
    {
        byte[] $r14;
        java.lang.StringBuffer $r0;
        int $i0;
        java.lang.String $r4, $r6, $r10, $r13, $r16, $r17;
        java.lang.StringBuilder $r1, $r2, $r5, $r7, $r8, $r9, $r11, $r12, $r15;
        com.jmatio.io.MatFileHeader r3;

        r3 := @this: com.jmatio.io.MatFileHeader;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("desriptive text: ");

        $r4 = r3.<com.jmatio.io.MatFileHeader: java.lang.String description>;

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", version: ");

        $i0 = r3.<com.jmatio.io.MatFileHeader: int version>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", endianIndicator: ");

        $r13 = new java.lang.String;

        $r14 = r3.<com.jmatio.io.MatFileHeader: byte[] endianIndicator>;

        specialinvoke $r13.<java.lang.String: void <init>(byte[])>($r14);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r17 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r17;
    }

    static void <clinit>()
    {
        byte[] $r6;
        java.lang.StringBuilder $r0, $r1, $r3, $r4;
        java.lang.String $r2, $r5;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MATLAB 5.0 MAT-file, Platform: ");

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", CREATED on: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.jmatio.io.MatFileHeader: java.lang.String DEFAULT_DESCRIPTIVE_TEXT> = $r5;

        <com.jmatio.io.MatFileHeader: int DEFAULT_VERSION> = 256;

        $r6 = newarray (byte)[2];

        $r6[0] = 77;

        $r6[1] = 73;

        <com.jmatio.io.MatFileHeader: byte[] DEFAULT_ENDIAN_INDICATOR> = $r6;

        return;
    }
}
