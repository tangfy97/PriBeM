public class com.google.inject.internal.BindingBuilder extends com.google.inject.internal.AbstractBindingBuilder implements com.google.inject.binder.AnnotatedBindingBuilder
{

    public void <init>(com.google.inject.Binder, java.util.List, java.lang.Object, com.google.inject.Key)
    {
        com.google.inject.internal.BindingBuilder r0;
        java.util.List r2;
        com.google.inject.Binder r1;
        com.google.inject.Key r4;
        java.lang.Object r3;

        r0 := @this: com.google.inject.internal.BindingBuilder;

        r1 := @parameter0: com.google.inject.Binder;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: com.google.inject.Key;

        specialinvoke r0.<com.google.inject.internal.AbstractBindingBuilder: void <init>(com.google.inject.Binder,java.util.List,java.lang.Object,com.google.inject.Key)>(r1, r2, r3, r4);

        return;
    }

    public com.google.inject.internal.BindingBuilder annotatedWith(java.lang.Class)
    {
        com.google.inject.internal.BindingBuilder r0;
        java.lang.Class r1;

        r0 := @this: com.google.inject.internal.BindingBuilder;

        r1 := @parameter0: java.lang.Class;

        virtualinvoke r0.<com.google.inject.internal.BindingBuilder: com.google.inject.internal.BindingImpl annotatedWithInternal(java.lang.Class)>(r1);

        return r0;
    }

    public com.google.inject.internal.BindingBuilder annotatedWith(java.lang.'annotation'.Annotation)
    {
        com.google.inject.internal.BindingBuilder r0;
        java.lang.'annotation'.Annotation r1;

        r0 := @this: com.google.inject.internal.BindingBuilder;

        r1 := @parameter0: java.lang.'annotation'.Annotation;

        virtualinvoke r0.<com.google.inject.internal.BindingBuilder: com.google.inject.internal.BindingImpl annotatedWithInternal(java.lang.'annotation'.Annotation)>(r1);

        return r0;
    }

    public com.google.inject.internal.BindingBuilder 'to'(java.lang.Class)
    {
        com.google.inject.internal.BindingBuilder r0, $r3;
        com.google.inject.Key $r2;
        java.lang.Class r1;

        r0 := @this: com.google.inject.internal.BindingBuilder;

        r1 := @parameter0: java.lang.Class;

        $r2 = staticinvoke <com.google.inject.Key: com.google.inject.Key get(java.lang.Class)>(r1);

        $r3 = virtualinvoke r0.<com.google.inject.internal.BindingBuilder: com.google.inject.internal.BindingBuilder 'to'(com.google.inject.Key)>($r2);

        return $r3;
    }

    public com.google.inject.internal.BindingBuilder 'to'(com.google.inject.TypeLiteral)
    {
        com.google.inject.internal.BindingBuilder r0, $r3;
        com.google.inject.Key $r2;
        com.google.inject.TypeLiteral r1;

        r0 := @this: com.google.inject.internal.BindingBuilder;

        r1 := @parameter0: com.google.inject.TypeLiteral;

        $r2 = staticinvoke <com.google.inject.Key: com.google.inject.Key get(com.google.inject.TypeLiteral)>(r1);

        $r3 = virtualinvoke r0.<com.google.inject.internal.BindingBuilder: com.google.inject.internal.BindingBuilder 'to'(com.google.inject.Key)>($r2);

        return $r3;
    }

    public com.google.inject.internal.BindingBuilder 'to'(com.google.inject.Key)
    {
        com.google.inject.internal.BindingBuilder r1;
        com.google.inject.internal.Scoping $r6;
        com.google.inject.internal.BindingImpl $r2;
        com.google.inject.Key r0, $r5;
        com.google.inject.internal.LinkedBindingImpl $r3;
        java.lang.Object $r4;

        r1 := @this: com.google.inject.internal.BindingBuilder;

        r0 := @parameter0: com.google.inject.Key;

        staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r0, "linkedKey");

        virtualinvoke r1.<com.google.inject.internal.BindingBuilder: void checkNotTargetted()>();

        $r2 = virtualinvoke r1.<com.google.inject.internal.BindingBuilder: com.google.inject.internal.BindingImpl getBinding()>();

        $r3 = new com.google.inject.internal.LinkedBindingImpl;

        $r4 = virtualinvoke $r2.<com.google.inject.internal.BindingImpl: java.lang.Object getSource()>();

        $r5 = virtualinvoke $r2.<com.google.inject.internal.BindingImpl: com.google.inject.Key getKey()>();

        $r6 = virtualinvoke $r2.<com.google.inject.internal.BindingImpl: com.google.inject.internal.Scoping getScoping()>();

        specialinvoke $r3.<com.google.inject.internal.LinkedBindingImpl: void <init>(java.lang.Object,com.google.inject.Key,com.google.inject.internal.Scoping,com.google.inject.Key)>($r4, $r5, $r6, r0);

        virtualinvoke r1.<com.google.inject.internal.BindingBuilder: com.google.inject.internal.BindingImpl setBinding(com.google.inject.internal.BindingImpl)>($r3);

        return r1;
    }

    public void toInstance(java.lang.Object)
    {
        com.google.inject.internal.BindingBuilder r0;
        java.lang.Object[] $r2;
        com.google.inject.internal.Scoping $r12;
        com.google.inject.Key $r11;
        com.google.inject.ConfigurationException $r5;
        java.util.Set r7;
        com.google.inject.internal.InstanceBindingImpl $r9;
        com.google.inject.Binder $r3;
        com.google.inject.internal.BindingImpl $r8;
        java.lang.Object r1, $r6, $r10;
        java.lang.Class $r4;

        r0 := @this: com.google.inject.internal.BindingBuilder;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<com.google.inject.internal.BindingBuilder: void checkNotTargetted()>();

        if r1 == null goto label4;

     label1:
        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        r7 = staticinvoke <com.google.inject.spi.InjectionPoint: java.util.Set forInstanceMethodsAndFields(java.lang.Class)>($r4);

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        specialinvoke r0.<com.google.inject.internal.BindingBuilder: void copyErrorsToBinder(com.google.inject.ConfigurationException)>($r5);

        $r6 = virtualinvoke $r5.<com.google.inject.ConfigurationException: java.lang.Object getPartialValue()>();

        r7 = (java.util.Set) $r6;

        goto label5;

     label4:
        $r3 = r0.<com.google.inject.internal.BindingBuilder: com.google.inject.Binder binder>;

        $r2 = newarray (java.lang.Object)[0];

        interfaceinvoke $r3.<com.google.inject.Binder: void addError(java.lang.String,java.lang.Object[])>("Binding to null instances is not allowed. Use toProvider(Providers.of(null)) if this is your intended behaviour.", $r2);

        r7 = staticinvoke <com.google.inject.internal.util.$ImmutableSet: com.google.inject.internal.util.$ImmutableSet of()>();

     label5:
        $r8 = virtualinvoke r0.<com.google.inject.internal.BindingBuilder: com.google.inject.internal.BindingImpl getBinding()>();

        $r9 = new com.google.inject.internal.InstanceBindingImpl;

        $r10 = virtualinvoke $r8.<com.google.inject.internal.BindingImpl: java.lang.Object getSource()>();

        $r11 = virtualinvoke $r8.<com.google.inject.internal.BindingImpl: com.google.inject.Key getKey()>();

        $r12 = <com.google.inject.internal.Scoping: com.google.inject.internal.Scoping EAGER_SINGLETON>;

        specialinvoke $r9.<com.google.inject.internal.InstanceBindingImpl: void <init>(java.lang.Object,com.google.inject.Key,com.google.inject.internal.Scoping,java.util.Set,java.lang.Object)>($r10, $r11, $r12, r7, r1);

        virtualinvoke r0.<com.google.inject.internal.BindingBuilder: com.google.inject.internal.BindingImpl setBinding(com.google.inject.internal.BindingImpl)>($r9);

        return;

        catch com.google.inject.ConfigurationException from label1 to label2 with label3;
    }

    public com.google.inject.internal.BindingBuilder toProvider(com.google.inject.Provider)
    {
        com.google.inject.internal.BindingBuilder r1;
        com.google.inject.internal.Scoping $r7;
        com.google.inject.internal.ProviderInstanceBindingImpl $r4;
        com.google.inject.Key $r6;
        com.google.inject.ConfigurationException $r8;
        java.util.Set r10;
        com.google.inject.Provider r0;
        com.google.inject.internal.BindingImpl $r3;
        java.lang.Class $r2;
        java.lang.Object $r5, $r9;

        r1 := @this: com.google.inject.internal.BindingBuilder;

        r0 := @parameter0: com.google.inject.Provider;

        staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r0, "provider");

        virtualinvoke r1.<com.google.inject.internal.BindingBuilder: void checkNotTargetted()>();

     label1:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r10 = staticinvoke <com.google.inject.spi.InjectionPoint: java.util.Set forInstanceMethodsAndFields(java.lang.Class)>($r2);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        specialinvoke r1.<com.google.inject.internal.BindingBuilder: void copyErrorsToBinder(com.google.inject.ConfigurationException)>($r8);

        $r9 = virtualinvoke $r8.<com.google.inject.ConfigurationException: java.lang.Object getPartialValue()>();

        r10 = (java.util.Set) $r9;

     label4:
        $r3 = virtualinvoke r1.<com.google.inject.internal.BindingBuilder: com.google.inject.internal.BindingImpl getBinding()>();

        $r4 = new com.google.inject.internal.ProviderInstanceBindingImpl;

        $r5 = virtualinvoke $r3.<com.google.inject.internal.BindingImpl: java.lang.Object getSource()>();

        $r6 = virtualinvoke $r3.<com.google.inject.internal.BindingImpl: com.google.inject.Key getKey()>();

        $r7 = virtualinvoke $r3.<com.google.inject.internal.BindingImpl: com.google.inject.internal.Scoping getScoping()>();

        specialinvoke $r4.<com.google.inject.internal.ProviderInstanceBindingImpl: void <init>(java.lang.Object,com.google.inject.Key,com.google.inject.internal.Scoping,java.util.Set,com.google.inject.Provider)>($r5, $r6, $r7, r10, r0);

        virtualinvoke r1.<com.google.inject.internal.BindingBuilder: com.google.inject.internal.BindingImpl setBinding(com.google.inject.internal.BindingImpl)>($r4);

        return r1;

        catch com.google.inject.ConfigurationException from label1 to label2 with label3;
    }

    public com.google.inject.internal.BindingBuilder toProvider(java.lang.Class)
    {
        com.google.inject.internal.BindingBuilder r0, $r3;
        com.google.inject.Key $r2;
        java.lang.Class r1;

        r0 := @this: com.google.inject.internal.BindingBuilder;

        r1 := @parameter0: java.lang.Class;

        $r2 = staticinvoke <com.google.inject.Key: com.google.inject.Key get(java.lang.Class)>(r1);

        $r3 = virtualinvoke r0.<com.google.inject.internal.BindingBuilder: com.google.inject.internal.BindingBuilder toProvider(com.google.inject.Key)>($r2);

        return $r3;
    }

    public com.google.inject.internal.BindingBuilder toProvider(com.google.inject.TypeLiteral)
    {
        com.google.inject.internal.BindingBuilder r0, $r3;
        com.google.inject.Key $r2;
        com.google.inject.TypeLiteral r1;

        r0 := @this: com.google.inject.internal.BindingBuilder;

        r1 := @parameter0: com.google.inject.TypeLiteral;

        $r2 = staticinvoke <com.google.inject.Key: com.google.inject.Key get(com.google.inject.TypeLiteral)>(r1);

        $r3 = virtualinvoke r0.<com.google.inject.internal.BindingBuilder: com.google.inject.internal.BindingBuilder toProvider(com.google.inject.Key)>($r2);

        return $r3;
    }

    public com.google.inject.internal.BindingBuilder toProvider(com.google.inject.Key)
    {
        com.google.inject.internal.BindingBuilder r1;
        com.google.inject.internal.LinkedProviderBindingImpl $r3;
        com.google.inject.internal.Scoping $r6;
        com.google.inject.internal.BindingImpl $r2;
        com.google.inject.Key r0, $r5;
        java.lang.Object $r4;

        r1 := @this: com.google.inject.internal.BindingBuilder;

        r0 := @parameter0: com.google.inject.Key;

        staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r0, "providerKey");

        virtualinvoke r1.<com.google.inject.internal.BindingBuilder: void checkNotTargetted()>();

        $r2 = virtualinvoke r1.<com.google.inject.internal.BindingBuilder: com.google.inject.internal.BindingImpl getBinding()>();

        $r3 = new com.google.inject.internal.LinkedProviderBindingImpl;

        $r4 = virtualinvoke $r2.<com.google.inject.internal.BindingImpl: java.lang.Object getSource()>();

        $r5 = virtualinvoke $r2.<com.google.inject.internal.BindingImpl: com.google.inject.Key getKey()>();

        $r6 = virtualinvoke $r2.<com.google.inject.internal.BindingImpl: com.google.inject.internal.Scoping getScoping()>();

        specialinvoke $r3.<com.google.inject.internal.LinkedProviderBindingImpl: void <init>(java.lang.Object,com.google.inject.Key,com.google.inject.internal.Scoping,com.google.inject.Key)>($r4, $r5, $r6, r0);

        virtualinvoke r1.<com.google.inject.internal.BindingBuilder: com.google.inject.internal.BindingImpl setBinding(com.google.inject.internal.BindingImpl)>($r3);

        return r1;
    }

    public com.google.inject.binder.ScopedBindingBuilder toConstructor(java.lang.reflect.Constructor)
    {
        com.google.inject.internal.BindingBuilder r0;
        java.lang.Class $r2;
        java.lang.reflect.Constructor r1;
        com.google.inject.TypeLiteral $r3;
        com.google.inject.binder.ScopedBindingBuilder $r4;

        r0 := @this: com.google.inject.internal.BindingBuilder;

        r1 := @parameter0: java.lang.reflect.Constructor;

        $r2 = virtualinvoke r1.<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>();

        $r3 = staticinvoke <com.google.inject.TypeLiteral: com.google.inject.TypeLiteral get(java.lang.Class)>($r2);

        $r4 = virtualinvoke r0.<com.google.inject.internal.BindingBuilder: com.google.inject.binder.ScopedBindingBuilder toConstructor(java.lang.reflect.Constructor,com.google.inject.TypeLiteral)>(r1, $r3);

        return $r4;
    }

    public com.google.inject.binder.ScopedBindingBuilder toConstructor(java.lang.reflect.Constructor, com.google.inject.TypeLiteral)
    {
        com.google.inject.internal.BindingBuilder r2;
        com.google.inject.internal.Scoping $r8;
        com.google.inject.Key $r6;
        com.google.inject.ConfigurationException $r9, $r10;
        java.util.Set r12;
        java.lang.reflect.Constructor r0;
        com.google.inject.internal.ConstructorBindingImpl $r5;
        com.google.inject.spi.InjectionPoint $r4;
        com.google.inject.internal.BindingImpl $r3;
        java.lang.Object $r7, $r11;
        com.google.inject.TypeLiteral r1;

        r2 := @this: com.google.inject.internal.BindingBuilder;

        r0 := @parameter0: java.lang.reflect.Constructor;

        r1 := @parameter1: com.google.inject.TypeLiteral;

        staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r0, "constructor");

        staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "type");

        virtualinvoke r2.<com.google.inject.internal.BindingBuilder: void checkNotTargetted()>();

        $r3 = virtualinvoke r2.<com.google.inject.internal.BindingBuilder: com.google.inject.internal.BindingImpl getBinding()>();

     label1:
        r12 = staticinvoke <com.google.inject.spi.InjectionPoint: java.util.Set forInstanceMethodsAndFields(com.google.inject.TypeLiteral)>(r1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        specialinvoke r2.<com.google.inject.internal.BindingBuilder: void copyErrorsToBinder(com.google.inject.ConfigurationException)>($r10);

        $r11 = virtualinvoke $r10.<com.google.inject.ConfigurationException: java.lang.Object getPartialValue()>();

        r12 = (java.util.Set) $r11;

     label4:
        $r4 = staticinvoke <com.google.inject.spi.InjectionPoint: com.google.inject.spi.InjectionPoint forConstructor(java.lang.reflect.Constructor,com.google.inject.TypeLiteral)>(r0, r1);

        $r5 = new com.google.inject.internal.ConstructorBindingImpl;

        $r6 = virtualinvoke $r3.<com.google.inject.internal.BindingImpl: com.google.inject.Key getKey()>();

        $r7 = virtualinvoke $r3.<com.google.inject.internal.BindingImpl: java.lang.Object getSource()>();

        $r8 = virtualinvoke $r3.<com.google.inject.internal.BindingImpl: com.google.inject.internal.Scoping getScoping()>();

        specialinvoke $r5.<com.google.inject.internal.ConstructorBindingImpl: void <init>(com.google.inject.Key,java.lang.Object,com.google.inject.internal.Scoping,com.google.inject.spi.InjectionPoint,java.util.Set)>($r6, $r7, $r8, $r4, r12);

        virtualinvoke r2.<com.google.inject.internal.BindingBuilder: com.google.inject.internal.BindingImpl setBinding(com.google.inject.internal.BindingImpl)>($r5);

     label5:
        goto label7;

     label6:
        $r9 := @caughtexception;

        specialinvoke r2.<com.google.inject.internal.BindingBuilder: void copyErrorsToBinder(com.google.inject.ConfigurationException)>($r9);

     label7:
        return r2;

        catch com.google.inject.ConfigurationException from label1 to label2 with label3;
        catch com.google.inject.ConfigurationException from label4 to label5 with label6;
    }

    public java.lang.String toString()
    {
        com.google.inject.internal.BindingBuilder r2;
        com.google.inject.Key $r4;
        com.google.inject.internal.BindingImpl $r3;
        java.lang.StringBuilder $r0, $r1, $r6, $r7;
        java.lang.String $r8;
        com.google.inject.TypeLiteral $r5;

        r2 := @this: com.google.inject.internal.BindingBuilder;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BindingBuilder<");

        $r3 = virtualinvoke r2.<com.google.inject.internal.BindingBuilder: com.google.inject.internal.BindingImpl getBinding()>();

        $r4 = virtualinvoke $r3.<com.google.inject.internal.BindingImpl: com.google.inject.Key getKey()>();

        $r5 = virtualinvoke $r4.<com.google.inject.Key: com.google.inject.TypeLiteral getTypeLiteral()>();

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    private void copyErrorsToBinder(com.google.inject.ConfigurationException)
    {
        com.google.inject.internal.BindingBuilder r5;
        java.util.Iterator $r2;
        java.util.Collection $r1;
        com.google.inject.ConfigurationException r0;
        com.google.inject.Binder $r6;
        com.google.inject.spi.Message r4;
        java.lang.Object $r3;
        boolean $z0;

        r5 := @this: com.google.inject.internal.BindingBuilder;

        r0 := @parameter0: com.google.inject.ConfigurationException;

        $r1 = virtualinvoke r0.<com.google.inject.ConfigurationException: java.util.Collection getErrorMessages()>();

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.google.inject.spi.Message) $r3;

        $r6 = r5.<com.google.inject.internal.BindingBuilder: com.google.inject.Binder binder>;

        interfaceinvoke $r6.<com.google.inject.Binder: void addError(com.google.inject.spi.Message)>(r4);

        goto label1;

     label2:
        return;
    }

    public volatile com.google.inject.binder.LinkedBindingBuilder annotatedWith(java.lang.'annotation'.Annotation)
    {
        com.google.inject.internal.BindingBuilder r0, $r2;
        java.lang.'annotation'.Annotation r1;

        r0 := @this: com.google.inject.internal.BindingBuilder;

        r1 := @parameter0: java.lang.'annotation'.Annotation;

        $r2 = virtualinvoke r0.<com.google.inject.internal.BindingBuilder: com.google.inject.internal.BindingBuilder annotatedWith(java.lang.'annotation'.Annotation)>(r1);

        return $r2;
    }

    public volatile com.google.inject.binder.LinkedBindingBuilder annotatedWith(java.lang.Class)
    {
        com.google.inject.internal.BindingBuilder r0, $r2;
        java.lang.Class r1;

        r0 := @this: com.google.inject.internal.BindingBuilder;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<com.google.inject.internal.BindingBuilder: com.google.inject.internal.BindingBuilder annotatedWith(java.lang.Class)>(r1);

        return $r2;
    }

    public volatile com.google.inject.binder.ScopedBindingBuilder toProvider(com.google.inject.Key)
    {
        com.google.inject.internal.BindingBuilder r0, $r2;
        com.google.inject.Key r1;

        r0 := @this: com.google.inject.internal.BindingBuilder;

        r1 := @parameter0: com.google.inject.Key;

        $r2 = virtualinvoke r0.<com.google.inject.internal.BindingBuilder: com.google.inject.internal.BindingBuilder toProvider(com.google.inject.Key)>(r1);

        return $r2;
    }

    public volatile com.google.inject.binder.ScopedBindingBuilder toProvider(com.google.inject.TypeLiteral)
    {
        com.google.inject.internal.BindingBuilder r0, $r2;
        com.google.inject.TypeLiteral r1;

        r0 := @this: com.google.inject.internal.BindingBuilder;

        r1 := @parameter0: com.google.inject.TypeLiteral;

        $r2 = virtualinvoke r0.<com.google.inject.internal.BindingBuilder: com.google.inject.internal.BindingBuilder toProvider(com.google.inject.TypeLiteral)>(r1);

        return $r2;
    }

    public volatile com.google.inject.binder.ScopedBindingBuilder toProvider(java.lang.Class)
    {
        com.google.inject.internal.BindingBuilder r0, $r2;
        java.lang.Class r1;

        r0 := @this: com.google.inject.internal.BindingBuilder;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<com.google.inject.internal.BindingBuilder: com.google.inject.internal.BindingBuilder toProvider(java.lang.Class)>(r1);

        return $r2;
    }

    public volatile com.google.inject.binder.ScopedBindingBuilder toProvider(com.google.inject.Provider)
    {
        com.google.inject.internal.BindingBuilder r0, $r2;
        com.google.inject.Provider r1;

        r0 := @this: com.google.inject.internal.BindingBuilder;

        r1 := @parameter0: com.google.inject.Provider;

        $r2 = virtualinvoke r0.<com.google.inject.internal.BindingBuilder: com.google.inject.internal.BindingBuilder toProvider(com.google.inject.Provider)>(r1);

        return $r2;
    }

    public volatile com.google.inject.binder.ScopedBindingBuilder 'to'(com.google.inject.Key)
    {
        com.google.inject.internal.BindingBuilder r0, $r2;
        com.google.inject.Key r1;

        r0 := @this: com.google.inject.internal.BindingBuilder;

        r1 := @parameter0: com.google.inject.Key;

        $r2 = virtualinvoke r0.<com.google.inject.internal.BindingBuilder: com.google.inject.internal.BindingBuilder 'to'(com.google.inject.Key)>(r1);

        return $r2;
    }

    public volatile com.google.inject.binder.ScopedBindingBuilder 'to'(com.google.inject.TypeLiteral)
    {
        com.google.inject.internal.BindingBuilder r0, $r2;
        com.google.inject.TypeLiteral r1;

        r0 := @this: com.google.inject.internal.BindingBuilder;

        r1 := @parameter0: com.google.inject.TypeLiteral;

        $r2 = virtualinvoke r0.<com.google.inject.internal.BindingBuilder: com.google.inject.internal.BindingBuilder 'to'(com.google.inject.TypeLiteral)>(r1);

        return $r2;
    }

    public volatile com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)
    {
        com.google.inject.internal.BindingBuilder r0, $r2;
        java.lang.Class r1;

        r0 := @this: com.google.inject.internal.BindingBuilder;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<com.google.inject.internal.BindingBuilder: com.google.inject.internal.BindingBuilder 'to'(java.lang.Class)>(r1);

        return $r2;
    }
}
