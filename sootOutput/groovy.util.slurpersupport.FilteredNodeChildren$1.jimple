class groovy.util.slurpersupport.FilteredNodeChildren$1 extends java.lang.Object implements java.util.Iterator
{
    final java.util.Iterator iter;
    java.lang.Object next;
    private final groovy.util.slurpersupport.FilteredNodeChildren this$0;

    void <init>(groovy.util.slurpersupport.FilteredNodeChildren)
    {
        groovy.util.slurpersupport.FilteredNodeChildren$1 r0;
        groovy.util.slurpersupport.FilteredNodeChildren r1, $r2;
        java.util.Iterator $r4;
        groovy.util.slurpersupport.GPathResult $r3;

        r0 := @this: groovy.util.slurpersupport.FilteredNodeChildren$1;

        r1 := @parameter0: groovy.util.slurpersupport.FilteredNodeChildren;

        r0.<groovy.util.slurpersupport.FilteredNodeChildren$1: groovy.util.slurpersupport.FilteredNodeChildren this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r0.<groovy.util.slurpersupport.FilteredNodeChildren$1: groovy.util.slurpersupport.FilteredNodeChildren this$0>;

        $r3 = $r2.<groovy.util.slurpersupport.FilteredNodeChildren: groovy.util.slurpersupport.GPathResult parent>;

        $r4 = virtualinvoke $r3.<groovy.util.slurpersupport.GPathResult: java.util.Iterator iterator()>();

        r0.<groovy.util.slurpersupport.FilteredNodeChildren$1: java.util.Iterator iter> = $r4;

        r0.<groovy.util.slurpersupport.FilteredNodeChildren$1: java.lang.Object next> = null;

        return;
    }

    public boolean hasNext()
    {
        groovy.util.slurpersupport.FilteredNodeChildren$1 r0;
        java.util.Iterator $r1, $r2;
        groovy.util.slurpersupport.FilteredNodeChildren $r4;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: groovy.util.slurpersupport.FilteredNodeChildren$1;

     label1:
        $r1 = r0.<groovy.util.slurpersupport.FilteredNodeChildren$1: java.util.Iterator iter>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = r0.<groovy.util.slurpersupport.FilteredNodeChildren$1: java.util.Iterator iter>;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = r0.<groovy.util.slurpersupport.FilteredNodeChildren$1: groovy.util.slurpersupport.FilteredNodeChildren this$0>;

        $z1 = staticinvoke <groovy.util.slurpersupport.FilteredNodeChildren: boolean access$000(groovy.util.slurpersupport.FilteredNodeChildren,java.lang.Object)>($r4, $r3);

        if $z1 == 0 goto label2;

        r0.<groovy.util.slurpersupport.FilteredNodeChildren$1: java.lang.Object next> = $r3;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public java.lang.Object next()
    {
        groovy.util.slurpersupport.FilteredNodeChildren$1 r0;
        java.lang.Object $r1;

        r0 := @this: groovy.util.slurpersupport.FilteredNodeChildren$1;

        $r1 = r0.<groovy.util.slurpersupport.FilteredNodeChildren$1: java.lang.Object next>;

        return $r1;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        groovy.util.slurpersupport.FilteredNodeChildren$1 r1;

        r1 := @this: groovy.util.slurpersupport.FilteredNodeChildren$1;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }
}
