abstract class com.google.common.collect.CustomConcurrentHashMap$HashIterator extends java.lang.Object
{
    int nextSegmentIndex;
    int nextTableIndex;
    java.util.concurrent.atomic.AtomicReferenceArray currentTable;
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry nextEntry;
    com.google.common.collect.CustomConcurrentHashMap$WriteThroughEntry nextExternal;
    com.google.common.collect.CustomConcurrentHashMap$WriteThroughEntry lastReturned;
    final com.google.common.collect.CustomConcurrentHashMap this$0;

    void <init>(com.google.common.collect.CustomConcurrentHashMap)
    {
        com.google.common.collect.CustomConcurrentHashMap$Segment[] $r2;
        int $i0, $i1, $i3;
        com.google.common.collect.CustomConcurrentHashMap r1;
        com.google.common.collect.CustomConcurrentHashMap$HashIterator r0;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$HashIterator;

        r1 := @parameter0: com.google.common.collect.CustomConcurrentHashMap;

        r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: com.google.common.collect.CustomConcurrentHashMap this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r1.<com.google.common.collect.CustomConcurrentHashMap: com.google.common.collect.CustomConcurrentHashMap$Segment[] segments>;

        $i0 = lengthof $r2;

        $i1 = $i0 - 1;

        r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: int nextSegmentIndex> = $i1;

        $i3 = (int) -1;

        r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: int nextTableIndex> = $i3;

        virtualinvoke r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: void advance()>();

        return;
    }

    final void advance()
    {
        com.google.common.collect.CustomConcurrentHashMap$Segment r3;
        com.google.common.collect.CustomConcurrentHashMap$HashIterator r0;
        java.util.concurrent.atomic.AtomicReferenceArray $r4, $r5;
        com.google.common.collect.CustomConcurrentHashMap$Segment[] $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        com.google.common.collect.CustomConcurrentHashMap $r1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$HashIterator;

        r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: com.google.common.collect.CustomConcurrentHashMap$WriteThroughEntry nextExternal> = null;

        $z0 = virtualinvoke r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: boolean nextInChain()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = virtualinvoke r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: boolean nextInTable()>();

        if $z1 == 0 goto label2;

        return;

     label2:
        $i0 = r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: int nextSegmentIndex>;

        if $i0 < 0 goto label4;

        $r1 = r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: com.google.common.collect.CustomConcurrentHashMap this$0>;

        $r2 = $r1.<com.google.common.collect.CustomConcurrentHashMap: com.google.common.collect.CustomConcurrentHashMap$Segment[] segments>;

        $i1 = r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: int nextSegmentIndex>;

        $i2 = $i1 - 1;

        r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: int nextSegmentIndex> = $i2;

        r3 = $r2[$i1];

        $i3 = r3.<com.google.common.collect.CustomConcurrentHashMap$Segment: int count>;

        if $i3 == 0 goto label3;

        $r4 = r3.<com.google.common.collect.CustomConcurrentHashMap$Segment: java.util.concurrent.atomic.AtomicReferenceArray table>;

        r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: java.util.concurrent.atomic.AtomicReferenceArray currentTable> = $r4;

        $r5 = r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: java.util.concurrent.atomic.AtomicReferenceArray currentTable>;

        $i4 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicReferenceArray: int length()>();

        $i5 = $i4 - 1;

        r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: int nextTableIndex> = $i5;

        $z2 = virtualinvoke r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: boolean nextInTable()>();

        if $z2 == 0 goto label3;

        return;

     label3:
        goto label2;

     label4:
        return;
    }

    boolean nextInChain()
    {
        com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        com.google.common.collect.CustomConcurrentHashMap$HashIterator r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$HashIterator;

        $r1 = r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry nextEntry>;

        if $r1 == null goto label3;

        $r2 = r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry nextEntry>;

        $r3 = interfaceinvoke $r2.<com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNext()>();

        r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry nextEntry> = $r3;

     label1:
        $r4 = r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry nextEntry>;

        if $r4 == null goto label3;

        $r5 = r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry nextEntry>;

        $z0 = virtualinvoke r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: boolean advanceTo(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry)>($r5);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $r6 = r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry nextEntry>;

        $r7 = interfaceinvoke $r6.<com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNext()>();

        r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry nextEntry> = $r7;

        goto label1;

     label3:
        return 0;
    }

    boolean nextInTable()
    {
        com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry $r3, $r4;
        com.google.common.collect.CustomConcurrentHashMap$HashIterator r0;
        java.util.concurrent.atomic.AtomicReferenceArray $r1;
        int $i0, $i1, $i2;
        java.lang.Object $r2;
        boolean $z0, $z1;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$HashIterator;

     label1:
        $i2 = r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: int nextTableIndex>;

        if $i2 < 0 goto label3;

        $r1 = r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: java.util.concurrent.atomic.AtomicReferenceArray currentTable>;

        $i0 = r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: int nextTableIndex>;

        $i1 = $i0 - 1;

        r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: int nextTableIndex> = $i1;

        $r2 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>($i0);

        $r3 = (com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) $r2;

        r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry nextEntry> = $r3;

        if $r3 == null goto label1;

        $r4 = r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry nextEntry>;

        $z0 = virtualinvoke r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: boolean advanceTo(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry)>($r4);

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: boolean nextInChain()>();

        if $z1 == 0 goto label1;

     label2:
        return 1;

     label3:
        return 0;
    }

    boolean advanceTo(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry)
    {
        com.google.common.collect.CustomConcurrentHashMap$ValueReference $r2;
        com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry r0;
        com.google.common.collect.CustomConcurrentHashMap$WriteThroughEntry $r6;
        com.google.common.collect.CustomConcurrentHashMap$HashIterator r4;
        java.lang.Object $r1, $r3;
        com.google.common.collect.CustomConcurrentHashMap $r5, $r7, $r8;
        boolean $z0, $z1;

        r4 := @this: com.google.common.collect.CustomConcurrentHashMap$HashIterator;

        r0 := @parameter0: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry;

        $r1 = interfaceinvoke r0.<com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry: java.lang.Object getKey()>();

        $r2 = interfaceinvoke r0.<com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry: com.google.common.collect.CustomConcurrentHashMap$ValueReference getValueReference()>();

        $r3 = interfaceinvoke $r2.<com.google.common.collect.CustomConcurrentHashMap$ValueReference: java.lang.Object get()>();

        if $r1 == null goto label2;

        if $r3 == null goto label2;

        $r5 = r4.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: com.google.common.collect.CustomConcurrentHashMap this$0>;

        $z0 = virtualinvoke $r5.<com.google.common.collect.CustomConcurrentHashMap: boolean expires()>();

        if $z0 == 0 goto label1;

        $r8 = r4.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: com.google.common.collect.CustomConcurrentHashMap this$0>;

        $z1 = virtualinvoke $r8.<com.google.common.collect.CustomConcurrentHashMap: boolean isExpired(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry)>(r0);

        if $z1 != 0 goto label2;

     label1:
        $r6 = new com.google.common.collect.CustomConcurrentHashMap$WriteThroughEntry;

        $r7 = r4.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: com.google.common.collect.CustomConcurrentHashMap this$0>;

        specialinvoke $r6.<com.google.common.collect.CustomConcurrentHashMap$WriteThroughEntry: void <init>(com.google.common.collect.CustomConcurrentHashMap,java.lang.Object,java.lang.Object)>($r7, $r1, $r3);

        r4.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: com.google.common.collect.CustomConcurrentHashMap$WriteThroughEntry nextExternal> = $r6;

        return 1;

     label2:
        return 0;
    }

    public boolean hasNext()
    {
        com.google.common.collect.CustomConcurrentHashMap$WriteThroughEntry $r1;
        com.google.common.collect.CustomConcurrentHashMap$HashIterator r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$HashIterator;

        $r1 = r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: com.google.common.collect.CustomConcurrentHashMap$WriteThroughEntry nextExternal>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    com.google.common.collect.CustomConcurrentHashMap$WriteThroughEntry nextEntry()
    {
        com.google.common.collect.CustomConcurrentHashMap$WriteThroughEntry $r1, $r2, $r3;
        com.google.common.collect.CustomConcurrentHashMap$HashIterator r0;
        java.util.NoSuchElementException $r4;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$HashIterator;

        $r1 = r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: com.google.common.collect.CustomConcurrentHashMap$WriteThroughEntry nextExternal>;

        if $r1 != null goto label1;

        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>()>();

        throw $r4;

     label1:
        $r2 = r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: com.google.common.collect.CustomConcurrentHashMap$WriteThroughEntry nextExternal>;

        r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: com.google.common.collect.CustomConcurrentHashMap$WriteThroughEntry lastReturned> = $r2;

        virtualinvoke r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: void advance()>();

        $r3 = r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: com.google.common.collect.CustomConcurrentHashMap$WriteThroughEntry lastReturned>;

        return $r3;
    }

    public void remove()
    {
        com.google.common.collect.CustomConcurrentHashMap$WriteThroughEntry $r1, $r2;
        com.google.common.collect.CustomConcurrentHashMap $r3;
        java.lang.Object $r4;
        com.google.common.collect.CustomConcurrentHashMap$HashIterator r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$HashIterator;

        $r1 = r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: com.google.common.collect.CustomConcurrentHashMap$WriteThroughEntry lastReturned>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean)>($z0);

        $r3 = r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: com.google.common.collect.CustomConcurrentHashMap this$0>;

        $r2 = r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: com.google.common.collect.CustomConcurrentHashMap$WriteThroughEntry lastReturned>;

        $r4 = virtualinvoke $r2.<com.google.common.collect.CustomConcurrentHashMap$WriteThroughEntry: java.lang.Object getKey()>();

        virtualinvoke $r3.<com.google.common.collect.CustomConcurrentHashMap: java.lang.Object remove(java.lang.Object)>($r4);

        r0.<com.google.common.collect.CustomConcurrentHashMap$HashIterator: com.google.common.collect.CustomConcurrentHashMap$WriteThroughEntry lastReturned> = null;

        return;
    }
}
