class ucar.units.UnitDBImpl$1 extends java.lang.Object implements java.util.Comparator
{
    final ucar.units.UnitDBImpl this$0;

    void <init>(ucar.units.UnitDBImpl)
    {
        ucar.units.UnitDBImpl$1 r0;
        ucar.units.UnitDBImpl r1;

        r0 := @this: ucar.units.UnitDBImpl$1;

        r1 := @parameter0: ucar.units.UnitDBImpl;

        r0.<ucar.units.UnitDBImpl$1: ucar.units.UnitDBImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(ucar.units.Unit, ucar.units.Unit)
    {
        ucar.units.Unit r0, r2;
        int $i0;
        java.lang.String $r1, $r3;
        ucar.units.UnitDBImpl$1 r4;

        r4 := @this: ucar.units.UnitDBImpl$1;

        r0 := @parameter0: ucar.units.Unit;

        r2 := @parameter1: ucar.units.Unit;

        $r1 = interfaceinvoke r0.<ucar.units.Unit: java.lang.String getName()>();

        $r3 = interfaceinvoke r2.<ucar.units.Unit: java.lang.String getName()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int compareTo(java.lang.String)>($r3);

        return $i0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        ucar.units.Unit $r3, $r4;
        int $i0;
        java.lang.Object r1, r2;
        ucar.units.UnitDBImpl$1 r0;

        r0 := @this: ucar.units.UnitDBImpl$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (ucar.units.Unit) r1;

        $r3 = (ucar.units.Unit) r2;

        $i0 = virtualinvoke r0.<ucar.units.UnitDBImpl$1: int compare(ucar.units.Unit,ucar.units.Unit)>($r4, $r3);

        return $i0;
    }
}
