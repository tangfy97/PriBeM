public class org.apache.batik.bridge.svg12.DefaultXBLManager$ImportRemovedListener extends java.lang.Object implements org.w3c.dom.events.EventListener
{
    protected java.util.LinkedList toBeRemoved;
    private final org.apache.batik.bridge.svg12.DefaultXBLManager this$0;

    protected void <init>(org.apache.batik.bridge.svg12.DefaultXBLManager)
    {
        org.apache.batik.bridge.svg12.DefaultXBLManager r1;
        java.util.LinkedList $r2;
        org.apache.batik.bridge.svg12.DefaultXBLManager$ImportRemovedListener r0;

        r0 := @this: org.apache.batik.bridge.svg12.DefaultXBLManager$ImportRemovedListener;

        r1 := @parameter0: org.apache.batik.bridge.svg12.DefaultXBLManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.bridge.svg12.DefaultXBLManager$ImportRemovedListener: org.apache.batik.bridge.svg12.DefaultXBLManager this$0> = r1;

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.batik.bridge.svg12.DefaultXBLManager$ImportRemovedListener: java.util.LinkedList toBeRemoved> = $r2;

        return;
    }

    public void handleEvent(org.w3c.dom.events.Event)
    {
        org.w3c.dom.events.EventTarget $r3;
        org.w3c.dom.events.Event r1;
        java.util.LinkedList $r2;
        org.apache.batik.bridge.svg12.DefaultXBLManager$ImportRemovedListener r0;

        r0 := @this: org.apache.batik.bridge.svg12.DefaultXBLManager$ImportRemovedListener;

        r1 := @parameter0: org.w3c.dom.events.Event;

        $r2 = r0.<org.apache.batik.bridge.svg12.DefaultXBLManager$ImportRemovedListener: java.util.LinkedList toBeRemoved>;

        $r3 = interfaceinvoke r1.<org.w3c.dom.events.Event: org.w3c.dom.events.EventTarget getTarget()>();

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r3);

        return;
    }
}
