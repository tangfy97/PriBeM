final class org.apache.lucene.index.IndexWriter$FlushControl extends java.lang.Object
{
    private boolean flushPending;
    private boolean flushDeletes;
    private int delCount;
    private int docCount;
    private boolean flushing;
    final org.apache.lucene.index.IndexWriter this$0;

    void <init>(org.apache.lucene.index.IndexWriter)
    {
        org.apache.lucene.index.IndexWriter r1;
        org.apache.lucene.index.IndexWriter$FlushControl r0;

        r0 := @this: org.apache.lucene.index.IndexWriter$FlushControl;

        r1 := @parameter0: org.apache.lucene.index.IndexWriter;

        r0.<org.apache.lucene.index.IndexWriter$FlushControl: org.apache.lucene.index.IndexWriter this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private synchronized boolean setFlushPending(java.lang.String, boolean)
    {
        org.apache.lucene.index.IndexWriter$FlushControl r0;
        java.lang.String r6, $r8;
        boolean $z0, z1, $z2, $z3, $z4, $z5;
        java.io.PrintStream $r2;
        org.apache.lucene.index.IndexWriter $r1, $r4;
        java.lang.InterruptedException $r9;
        java.lang.StringBuilder $r3, $r5, $r7;
        org.apache.lucene.util.ThreadInterruptedException $r10;

        r0 := @this: org.apache.lucene.index.IndexWriter$FlushControl;

        r6 := @parameter0: java.lang.String;

        z1 := @parameter1: boolean;

        $z0 = r0.<org.apache.lucene.index.IndexWriter$FlushControl: boolean flushPending>;

        if $z0 != 0 goto label1;

        $z4 = r0.<org.apache.lucene.index.IndexWriter$FlushControl: boolean flushing>;

        if $z4 == 0 goto label7;

     label1:
        if z1 == 0 goto label6;

     label2:
        $z2 = r0.<org.apache.lucene.index.IndexWriter$FlushControl: boolean flushPending>;

        if $z2 != 0 goto label3;

        $z3 = r0.<org.apache.lucene.index.IndexWriter$FlushControl: boolean flushing>;

        if $z3 == 0 goto label6;

     label3:
        virtualinvoke r0.<java.lang.Object: void wait()>();

     label4:
        goto label2;

     label5:
        $r9 := @caughtexception;

        $r10 = new org.apache.lucene.util.ThreadInterruptedException;

        specialinvoke $r10.<org.apache.lucene.util.ThreadInterruptedException: void <init>(java.lang.InterruptedException)>($r9);

        throw $r10;

     label6:
        return 0;

     label7:
        $r1 = r0.<org.apache.lucene.index.IndexWriter$FlushControl: org.apache.lucene.index.IndexWriter this$0>;

        $r2 = staticinvoke <org.apache.lucene.index.IndexWriter: java.io.PrintStream access$500(org.apache.lucene.index.IndexWriter)>($r1);

        if $r2 == null goto label8;

        $r4 = r0.<org.apache.lucene.index.IndexWriter$FlushControl: org.apache.lucene.index.IndexWriter this$0>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("now trigger flush reason=");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<org.apache.lucene.index.IndexWriter: void message(java.lang.String)>($r8);

     label8:
        r0.<org.apache.lucene.index.IndexWriter$FlushControl: boolean flushPending> = 1;

        $z5 = r0.<org.apache.lucene.index.IndexWriter$FlushControl: boolean flushPending>;

        return $z5;

        catch java.lang.InterruptedException from label3 to label4 with label5;
    }

    public synchronized void setFlushPendingNoWait(java.lang.String)
    {
        org.apache.lucene.index.IndexWriter$FlushControl r0;
        java.lang.String r1;

        r0 := @this: org.apache.lucene.index.IndexWriter$FlushControl;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.lucene.index.IndexWriter$FlushControl: boolean setFlushPending(java.lang.String,boolean)>(r1, 0);

        return;
    }

    public synchronized boolean getFlushPending()
    {
        org.apache.lucene.index.IndexWriter$FlushControl r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.IndexWriter$FlushControl;

        $z0 = r0.<org.apache.lucene.index.IndexWriter$FlushControl: boolean flushPending>;

        return $z0;
    }

    public synchronized boolean getFlushDeletes()
    {
        org.apache.lucene.index.IndexWriter$FlushControl r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.IndexWriter$FlushControl;

        $z0 = r0.<org.apache.lucene.index.IndexWriter$FlushControl: boolean flushDeletes>;

        return $z0;
    }

    public synchronized void clearFlushPending()
    {
        java.io.PrintStream $r2;
        org.apache.lucene.index.IndexWriter $r1, $r3;
        org.apache.lucene.index.IndexWriter$FlushControl r0;

        r0 := @this: org.apache.lucene.index.IndexWriter$FlushControl;

        $r1 = r0.<org.apache.lucene.index.IndexWriter$FlushControl: org.apache.lucene.index.IndexWriter this$0>;

        $r2 = staticinvoke <org.apache.lucene.index.IndexWriter: java.io.PrintStream access$500(org.apache.lucene.index.IndexWriter)>($r1);

        if $r2 == null goto label1;

        $r3 = r0.<org.apache.lucene.index.IndexWriter$FlushControl: org.apache.lucene.index.IndexWriter this$0>;

        virtualinvoke $r3.<org.apache.lucene.index.IndexWriter: void message(java.lang.String)>("clearFlushPending");

     label1:
        r0.<org.apache.lucene.index.IndexWriter$FlushControl: boolean flushPending> = 0;

        r0.<org.apache.lucene.index.IndexWriter$FlushControl: boolean flushDeletes> = 0;

        r0.<org.apache.lucene.index.IndexWriter$FlushControl: int docCount> = 0;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        return;
    }

    public synchronized void clearDeletes()
    {
        org.apache.lucene.index.IndexWriter$FlushControl r0;

        r0 := @this: org.apache.lucene.index.IndexWriter$FlushControl;

        r0.<org.apache.lucene.index.IndexWriter$FlushControl: int delCount> = 0;

        return;
    }

    public synchronized boolean waitUpdate(int, int)
    {
        int i0, i1;
        org.apache.lucene.index.IndexWriter$FlushControl r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.IndexWriter$FlushControl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = virtualinvoke r0.<org.apache.lucene.index.IndexWriter$FlushControl: boolean waitUpdate(int,int,boolean)>(i0, i1, 0);

        return $z0;
    }

    public synchronized boolean waitUpdate(int, int, boolean)
    {
        int i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i13;
        org.apache.lucene.index.IndexWriter$FlushControl r0;
        boolean $z0, z1, $z2, $z3, $z4;
        org.apache.lucene.index.IndexWriter $r1, $r3;
        java.lang.InterruptedException $r5;
        org.apache.lucene.index.IndexWriterConfig $r2, $r4;
        org.apache.lucene.util.ThreadInterruptedException $r7;

        r0 := @this: org.apache.lucene.index.IndexWriter$FlushControl;

        i0 := @parameter0: int;

        i3 := @parameter1: int;

        z1 := @parameter2: boolean;

     label1:
        $z0 = r0.<org.apache.lucene.index.IndexWriter$FlushControl: boolean flushPending>;

        if $z0 == 0 goto label5;

     label2:
        virtualinvoke r0.<java.lang.Object: void wait()>();

     label3:
        goto label1;

     label4:
        $r5 := @caughtexception;

        $r7 = new org.apache.lucene.util.ThreadInterruptedException;

        specialinvoke $r7.<org.apache.lucene.util.ThreadInterruptedException: void <init>(java.lang.InterruptedException)>($r5);

        throw $r7;

     label5:
        $i1 = r0.<org.apache.lucene.index.IndexWriter$FlushControl: int docCount>;

        $i2 = $i1 + i0;

        r0.<org.apache.lucene.index.IndexWriter$FlushControl: int docCount> = $i2;

        $i4 = r0.<org.apache.lucene.index.IndexWriter$FlushControl: int delCount>;

        $i5 = $i4 + i3;

        r0.<org.apache.lucene.index.IndexWriter$FlushControl: int delCount> = $i5;

        if z1 == 0 goto label6;

        return 0;

     label6:
        $r1 = r0.<org.apache.lucene.index.IndexWriter$FlushControl: org.apache.lucene.index.IndexWriter this$0>;

        $r2 = staticinvoke <org.apache.lucene.index.IndexWriter: org.apache.lucene.index.IndexWriterConfig access$200(org.apache.lucene.index.IndexWriter)>($r1);

        $i6 = virtualinvoke $r2.<org.apache.lucene.index.IndexWriterConfig: int getMaxBufferedDocs()>();

        $i11 = (int) -1;

        if $i6 == $i11 goto label7;

        $i9 = r0.<org.apache.lucene.index.IndexWriter$FlushControl: int docCount>;

        if $i9 < $i6 goto label7;

        $z4 = specialinvoke r0.<org.apache.lucene.index.IndexWriter$FlushControl: boolean setFlushPending(java.lang.String,boolean)>("maxBufferedDocs", 1);

        return $z4;

     label7:
        $r3 = r0.<org.apache.lucene.index.IndexWriter$FlushControl: org.apache.lucene.index.IndexWriter this$0>;

        $r4 = staticinvoke <org.apache.lucene.index.IndexWriter: org.apache.lucene.index.IndexWriterConfig access$200(org.apache.lucene.index.IndexWriter)>($r3);

        $i7 = virtualinvoke $r4.<org.apache.lucene.index.IndexWriterConfig: int getMaxBufferedDeleteTerms()>();

        $i13 = (int) -1;

        if $i7 == $i13 goto label8;

        $i8 = r0.<org.apache.lucene.index.IndexWriter$FlushControl: int delCount>;

        if $i8 < $i7 goto label8;

        r0.<org.apache.lucene.index.IndexWriter$FlushControl: boolean flushDeletes> = 1;

        $z3 = specialinvoke r0.<org.apache.lucene.index.IndexWriter$FlushControl: boolean setFlushPending(java.lang.String,boolean)>("maxBufferedDeleteTerms", 1);

        return $z3;

     label8:
        $z2 = virtualinvoke r0.<org.apache.lucene.index.IndexWriter$FlushControl: boolean flushByRAMUsage(java.lang.String)>("add delete/doc");

        return $z2;

        catch java.lang.InterruptedException from label2 to label3 with label4;
    }

    public synchronized boolean flushByRAMUsage(java.lang.String)
    {
        org.apache.lucene.index.DocumentsWriter $r6, $r8, $r12;
        byte $b0, $b4, $b7;
        org.apache.lucene.index.IndexWriter$FlushControl r0;
        boolean $z0;
        org.apache.lucene.index.IndexWriter $r1, $r3, $r5, $r7, $r9, $r11;
        java.lang.StringBuilder $r14, $r16, $r18;
        org.apache.lucene.index.IndexWriterConfig $r2;
        long l1, $l2, $l3, $l5, $l6, l8, l9;
        int $i10, $i11;
        java.lang.String r15, $r17;
        double $d0, $d1, $d2;
        org.apache.lucene.index.BufferedDeletesStream $r4, $r10;

        r0 := @this: org.apache.lucene.index.IndexWriter$FlushControl;

        r15 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.lucene.index.IndexWriter$FlushControl: org.apache.lucene.index.IndexWriter this$0>;

        $r2 = staticinvoke <org.apache.lucene.index.IndexWriter: org.apache.lucene.index.IndexWriterConfig access$200(org.apache.lucene.index.IndexWriter)>($r1);

        $d0 = virtualinvoke $r2.<org.apache.lucene.index.IndexWriterConfig: double getRAMBufferSizeMB()>();

        $b0 = $d0 cmpl -1.0;

        if $b0 == 0 goto label1;

        $d1 = $d0 * 1024.0;

        $d2 = $d1 * 1024.0;

        l1 = (long) $d2;

        $r3 = r0.<org.apache.lucene.index.IndexWriter$FlushControl: org.apache.lucene.index.IndexWriter this$0>;

        $r4 = $r3.<org.apache.lucene.index.IndexWriter: org.apache.lucene.index.BufferedDeletesStream bufferedDeletesStream>;

        $l2 = virtualinvoke $r4.<org.apache.lucene.index.BufferedDeletesStream: long bytesUsed()>();

        $r5 = r0.<org.apache.lucene.index.IndexWriter$FlushControl: org.apache.lucene.index.IndexWriter this$0>;

        $r6 = staticinvoke <org.apache.lucene.index.IndexWriter: org.apache.lucene.index.DocumentsWriter access$600(org.apache.lucene.index.IndexWriter)>($r5);

        $l3 = virtualinvoke $r6.<org.apache.lucene.index.DocumentsWriter: long bytesUsed()>();

        l8 = $l2 + $l3;

        $b4 = l8 cmp l1;

        $i10 = (int) $b4;

        if $i10 < 0 goto label1;

        $r7 = r0.<org.apache.lucene.index.IndexWriter$FlushControl: org.apache.lucene.index.IndexWriter this$0>;

        $r8 = staticinvoke <org.apache.lucene.index.IndexWriter: org.apache.lucene.index.DocumentsWriter access$600(org.apache.lucene.index.IndexWriter)>($r7);

        virtualinvoke $r8.<org.apache.lucene.index.DocumentsWriter: void balanceRAM()>();

        $r9 = r0.<org.apache.lucene.index.IndexWriter$FlushControl: org.apache.lucene.index.IndexWriter this$0>;

        $r10 = $r9.<org.apache.lucene.index.IndexWriter: org.apache.lucene.index.BufferedDeletesStream bufferedDeletesStream>;

        $l5 = virtualinvoke $r10.<org.apache.lucene.index.BufferedDeletesStream: long bytesUsed()>();

        $r11 = r0.<org.apache.lucene.index.IndexWriter$FlushControl: org.apache.lucene.index.IndexWriter this$0>;

        $r12 = staticinvoke <org.apache.lucene.index.IndexWriter: org.apache.lucene.index.DocumentsWriter access$600(org.apache.lucene.index.IndexWriter)>($r11);

        $l6 = virtualinvoke $r12.<org.apache.lucene.index.DocumentsWriter: long bytesUsed()>();

        l9 = $l5 + $l6;

        $b7 = l9 cmp l1;

        $i11 = (int) $b7;

        if $i11 < 0 goto label1;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ram full: ");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = specialinvoke r0.<org.apache.lucene.index.IndexWriter$FlushControl: boolean setFlushPending(java.lang.String,boolean)>($r17, 0);

        return $z0;

     label1:
        return 0;
    }
}
