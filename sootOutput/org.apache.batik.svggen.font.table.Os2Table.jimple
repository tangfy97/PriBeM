public class org.apache.batik.svggen.font.table.Os2Table extends java.lang.Object implements org.apache.batik.svggen.font.table.Table
{
    private int version;
    private short xAvgCharWidth;
    private int usWeightClass;
    private int usWidthClass;
    private short fsType;
    private short ySubscriptXSize;
    private short ySubscriptYSize;
    private short ySubscriptXOffset;
    private short ySubscriptYOffset;
    private short ySuperscriptXSize;
    private short ySuperscriptYSize;
    private short ySuperscriptXOffset;
    private short ySuperscriptYOffset;
    private short yStrikeoutSize;
    private short yStrikeoutPosition;
    private short sFamilyClass;
    private org.apache.batik.svggen.font.table.Panose panose;
    private int ulUnicodeRange1;
    private int ulUnicodeRange2;
    private int ulUnicodeRange3;
    private int ulUnicodeRange4;
    private int achVendorID;
    private short fsSelection;
    private int usFirstCharIndex;
    private int usLastCharIndex;
    private short sTypoAscender;
    private short sTypoDescender;
    private short sTypoLineGap;
    private int usWinAscent;
    private int usWinDescent;
    private int ulCodePageRange1;
    private int ulCodePageRange2;

    protected void <init>(org.apache.batik.svggen.font.table.DirectoryEntry, java.io.RandomAccessFile) throws java.io.IOException
    {
        java.io.RandomAccessFile r1;
        byte[] r3;
        org.apache.batik.svggen.font.table.Os2Table r0;
        org.apache.batik.svggen.font.table.Panose $r4;
        long $l1;
        short $s3, $s6, $s7, $s8, $s9, $s10, $s11, $s12, $s13, $s14, $s15, $s16, $s17, $s23, $s26, $s27, $s28;
        int $i0, $i2, $i4, $i5, $i18, $i19, $i20, $i21, $i22, $i24, $i25, $i29, $i30, $i31, $i32;
        org.apache.batik.svggen.font.table.DirectoryEntry r2;

        r0 := @this: org.apache.batik.svggen.font.table.Os2Table;

        r2 := @parameter0: org.apache.batik.svggen.font.table.DirectoryEntry;

        r1 := @parameter1: java.io.RandomAccessFile;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = virtualinvoke r2.<org.apache.batik.svggen.font.table.DirectoryEntry: int getOffset()>();

        $l1 = (long) $i0;

        virtualinvoke r1.<java.io.RandomAccessFile: void seek(long)>($l1);

        $i2 = virtualinvoke r1.<java.io.RandomAccessFile: int readUnsignedShort()>();

        r0.<org.apache.batik.svggen.font.table.Os2Table: int version> = $i2;

        $s3 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.Os2Table: short xAvgCharWidth> = $s3;

        $i4 = virtualinvoke r1.<java.io.RandomAccessFile: int readUnsignedShort()>();

        r0.<org.apache.batik.svggen.font.table.Os2Table: int usWeightClass> = $i4;

        $i5 = virtualinvoke r1.<java.io.RandomAccessFile: int readUnsignedShort()>();

        r0.<org.apache.batik.svggen.font.table.Os2Table: int usWidthClass> = $i5;

        $s6 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.Os2Table: short fsType> = $s6;

        $s7 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.Os2Table: short ySubscriptXSize> = $s7;

        $s8 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.Os2Table: short ySubscriptYSize> = $s8;

        $s9 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.Os2Table: short ySubscriptXOffset> = $s9;

        $s10 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.Os2Table: short ySubscriptYOffset> = $s10;

        $s11 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.Os2Table: short ySuperscriptXSize> = $s11;

        $s12 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.Os2Table: short ySuperscriptYSize> = $s12;

        $s13 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.Os2Table: short ySuperscriptXOffset> = $s13;

        $s14 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.Os2Table: short ySuperscriptYOffset> = $s14;

        $s15 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.Os2Table: short yStrikeoutSize> = $s15;

        $s16 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.Os2Table: short yStrikeoutPosition> = $s16;

        $s17 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.Os2Table: short sFamilyClass> = $s17;

        r3 = newarray (byte)[10];

        virtualinvoke r1.<java.io.RandomAccessFile: int read(byte[])>(r3);

        $r4 = new org.apache.batik.svggen.font.table.Panose;

        specialinvoke $r4.<org.apache.batik.svggen.font.table.Panose: void <init>(byte[])>(r3);

        r0.<org.apache.batik.svggen.font.table.Os2Table: org.apache.batik.svggen.font.table.Panose panose> = $r4;

        $i18 = virtualinvoke r1.<java.io.RandomAccessFile: int readInt()>();

        r0.<org.apache.batik.svggen.font.table.Os2Table: int ulUnicodeRange1> = $i18;

        $i19 = virtualinvoke r1.<java.io.RandomAccessFile: int readInt()>();

        r0.<org.apache.batik.svggen.font.table.Os2Table: int ulUnicodeRange2> = $i19;

        $i20 = virtualinvoke r1.<java.io.RandomAccessFile: int readInt()>();

        r0.<org.apache.batik.svggen.font.table.Os2Table: int ulUnicodeRange3> = $i20;

        $i21 = virtualinvoke r1.<java.io.RandomAccessFile: int readInt()>();

        r0.<org.apache.batik.svggen.font.table.Os2Table: int ulUnicodeRange4> = $i21;

        $i22 = virtualinvoke r1.<java.io.RandomAccessFile: int readInt()>();

        r0.<org.apache.batik.svggen.font.table.Os2Table: int achVendorID> = $i22;

        $s23 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.Os2Table: short fsSelection> = $s23;

        $i24 = virtualinvoke r1.<java.io.RandomAccessFile: int readUnsignedShort()>();

        r0.<org.apache.batik.svggen.font.table.Os2Table: int usFirstCharIndex> = $i24;

        $i25 = virtualinvoke r1.<java.io.RandomAccessFile: int readUnsignedShort()>();

        r0.<org.apache.batik.svggen.font.table.Os2Table: int usLastCharIndex> = $i25;

        $s26 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.Os2Table: short sTypoAscender> = $s26;

        $s27 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.Os2Table: short sTypoDescender> = $s27;

        $s28 = virtualinvoke r1.<java.io.RandomAccessFile: short readShort()>();

        r0.<org.apache.batik.svggen.font.table.Os2Table: short sTypoLineGap> = $s28;

        $i29 = virtualinvoke r1.<java.io.RandomAccessFile: int readUnsignedShort()>();

        r0.<org.apache.batik.svggen.font.table.Os2Table: int usWinAscent> = $i29;

        $i30 = virtualinvoke r1.<java.io.RandomAccessFile: int readUnsignedShort()>();

        r0.<org.apache.batik.svggen.font.table.Os2Table: int usWinDescent> = $i30;

        $i31 = virtualinvoke r1.<java.io.RandomAccessFile: int readInt()>();

        r0.<org.apache.batik.svggen.font.table.Os2Table: int ulCodePageRange1> = $i31;

        $i32 = virtualinvoke r1.<java.io.RandomAccessFile: int readInt()>();

        r0.<org.apache.batik.svggen.font.table.Os2Table: int ulCodePageRange2> = $i32;

        return;
    }

    public int getVersion()
    {
        int $i0;
        org.apache.batik.svggen.font.table.Os2Table r0;

        r0 := @this: org.apache.batik.svggen.font.table.Os2Table;

        $i0 = r0.<org.apache.batik.svggen.font.table.Os2Table: int version>;

        return $i0;
    }

    public short getAvgCharWidth()
    {
        org.apache.batik.svggen.font.table.Os2Table r0;
        short $s0;

        r0 := @this: org.apache.batik.svggen.font.table.Os2Table;

        $s0 = r0.<org.apache.batik.svggen.font.table.Os2Table: short xAvgCharWidth>;

        return $s0;
    }

    public int getWeightClass()
    {
        int $i0;
        org.apache.batik.svggen.font.table.Os2Table r0;

        r0 := @this: org.apache.batik.svggen.font.table.Os2Table;

        $i0 = r0.<org.apache.batik.svggen.font.table.Os2Table: int usWeightClass>;

        return $i0;
    }

    public int getWidthClass()
    {
        int $i0;
        org.apache.batik.svggen.font.table.Os2Table r0;

        r0 := @this: org.apache.batik.svggen.font.table.Os2Table;

        $i0 = r0.<org.apache.batik.svggen.font.table.Os2Table: int usWidthClass>;

        return $i0;
    }

    public short getLicenseType()
    {
        org.apache.batik.svggen.font.table.Os2Table r0;
        short $s0;

        r0 := @this: org.apache.batik.svggen.font.table.Os2Table;

        $s0 = r0.<org.apache.batik.svggen.font.table.Os2Table: short fsType>;

        return $s0;
    }

    public short getSubscriptXSize()
    {
        org.apache.batik.svggen.font.table.Os2Table r0;
        short $s0;

        r0 := @this: org.apache.batik.svggen.font.table.Os2Table;

        $s0 = r0.<org.apache.batik.svggen.font.table.Os2Table: short ySubscriptXSize>;

        return $s0;
    }

    public short getSubscriptYSize()
    {
        org.apache.batik.svggen.font.table.Os2Table r0;
        short $s0;

        r0 := @this: org.apache.batik.svggen.font.table.Os2Table;

        $s0 = r0.<org.apache.batik.svggen.font.table.Os2Table: short ySubscriptYSize>;

        return $s0;
    }

    public short getSubscriptXOffset()
    {
        org.apache.batik.svggen.font.table.Os2Table r0;
        short $s0;

        r0 := @this: org.apache.batik.svggen.font.table.Os2Table;

        $s0 = r0.<org.apache.batik.svggen.font.table.Os2Table: short ySubscriptXOffset>;

        return $s0;
    }

    public short getSubscriptYOffset()
    {
        org.apache.batik.svggen.font.table.Os2Table r0;
        short $s0;

        r0 := @this: org.apache.batik.svggen.font.table.Os2Table;

        $s0 = r0.<org.apache.batik.svggen.font.table.Os2Table: short ySubscriptYOffset>;

        return $s0;
    }

    public short getSuperscriptXSize()
    {
        org.apache.batik.svggen.font.table.Os2Table r0;
        short $s0;

        r0 := @this: org.apache.batik.svggen.font.table.Os2Table;

        $s0 = r0.<org.apache.batik.svggen.font.table.Os2Table: short ySuperscriptXSize>;

        return $s0;
    }

    public short getSuperscriptYSize()
    {
        org.apache.batik.svggen.font.table.Os2Table r0;
        short $s0;

        r0 := @this: org.apache.batik.svggen.font.table.Os2Table;

        $s0 = r0.<org.apache.batik.svggen.font.table.Os2Table: short ySuperscriptYSize>;

        return $s0;
    }

    public short getSuperscriptXOffset()
    {
        org.apache.batik.svggen.font.table.Os2Table r0;
        short $s0;

        r0 := @this: org.apache.batik.svggen.font.table.Os2Table;

        $s0 = r0.<org.apache.batik.svggen.font.table.Os2Table: short ySuperscriptXOffset>;

        return $s0;
    }

    public short getSuperscriptYOffset()
    {
        org.apache.batik.svggen.font.table.Os2Table r0;
        short $s0;

        r0 := @this: org.apache.batik.svggen.font.table.Os2Table;

        $s0 = r0.<org.apache.batik.svggen.font.table.Os2Table: short ySuperscriptYOffset>;

        return $s0;
    }

    public short getStrikeoutSize()
    {
        org.apache.batik.svggen.font.table.Os2Table r0;
        short $s0;

        r0 := @this: org.apache.batik.svggen.font.table.Os2Table;

        $s0 = r0.<org.apache.batik.svggen.font.table.Os2Table: short yStrikeoutSize>;

        return $s0;
    }

    public short getStrikeoutPosition()
    {
        org.apache.batik.svggen.font.table.Os2Table r0;
        short $s0;

        r0 := @this: org.apache.batik.svggen.font.table.Os2Table;

        $s0 = r0.<org.apache.batik.svggen.font.table.Os2Table: short yStrikeoutPosition>;

        return $s0;
    }

    public short getFamilyClass()
    {
        org.apache.batik.svggen.font.table.Os2Table r0;
        short $s0;

        r0 := @this: org.apache.batik.svggen.font.table.Os2Table;

        $s0 = r0.<org.apache.batik.svggen.font.table.Os2Table: short sFamilyClass>;

        return $s0;
    }

    public org.apache.batik.svggen.font.table.Panose getPanose()
    {
        org.apache.batik.svggen.font.table.Os2Table r0;
        org.apache.batik.svggen.font.table.Panose $r1;

        r0 := @this: org.apache.batik.svggen.font.table.Os2Table;

        $r1 = r0.<org.apache.batik.svggen.font.table.Os2Table: org.apache.batik.svggen.font.table.Panose panose>;

        return $r1;
    }

    public int getUnicodeRange1()
    {
        int $i0;
        org.apache.batik.svggen.font.table.Os2Table r0;

        r0 := @this: org.apache.batik.svggen.font.table.Os2Table;

        $i0 = r0.<org.apache.batik.svggen.font.table.Os2Table: int ulUnicodeRange1>;

        return $i0;
    }

    public int getUnicodeRange2()
    {
        int $i0;
        org.apache.batik.svggen.font.table.Os2Table r0;

        r0 := @this: org.apache.batik.svggen.font.table.Os2Table;

        $i0 = r0.<org.apache.batik.svggen.font.table.Os2Table: int ulUnicodeRange2>;

        return $i0;
    }

    public int getUnicodeRange3()
    {
        int $i0;
        org.apache.batik.svggen.font.table.Os2Table r0;

        r0 := @this: org.apache.batik.svggen.font.table.Os2Table;

        $i0 = r0.<org.apache.batik.svggen.font.table.Os2Table: int ulUnicodeRange3>;

        return $i0;
    }

    public int getUnicodeRange4()
    {
        int $i0;
        org.apache.batik.svggen.font.table.Os2Table r0;

        r0 := @this: org.apache.batik.svggen.font.table.Os2Table;

        $i0 = r0.<org.apache.batik.svggen.font.table.Os2Table: int ulUnicodeRange4>;

        return $i0;
    }

    public int getVendorID()
    {
        int $i0;
        org.apache.batik.svggen.font.table.Os2Table r0;

        r0 := @this: org.apache.batik.svggen.font.table.Os2Table;

        $i0 = r0.<org.apache.batik.svggen.font.table.Os2Table: int achVendorID>;

        return $i0;
    }

    public short getSelection()
    {
        org.apache.batik.svggen.font.table.Os2Table r0;
        short $s0;

        r0 := @this: org.apache.batik.svggen.font.table.Os2Table;

        $s0 = r0.<org.apache.batik.svggen.font.table.Os2Table: short fsSelection>;

        return $s0;
    }

    public int getFirstCharIndex()
    {
        int $i0;
        org.apache.batik.svggen.font.table.Os2Table r0;

        r0 := @this: org.apache.batik.svggen.font.table.Os2Table;

        $i0 = r0.<org.apache.batik.svggen.font.table.Os2Table: int usFirstCharIndex>;

        return $i0;
    }

    public int getLastCharIndex()
    {
        int $i0;
        org.apache.batik.svggen.font.table.Os2Table r0;

        r0 := @this: org.apache.batik.svggen.font.table.Os2Table;

        $i0 = r0.<org.apache.batik.svggen.font.table.Os2Table: int usLastCharIndex>;

        return $i0;
    }

    public short getTypoAscender()
    {
        org.apache.batik.svggen.font.table.Os2Table r0;
        short $s0;

        r0 := @this: org.apache.batik.svggen.font.table.Os2Table;

        $s0 = r0.<org.apache.batik.svggen.font.table.Os2Table: short sTypoAscender>;

        return $s0;
    }

    public short getTypoDescender()
    {
        org.apache.batik.svggen.font.table.Os2Table r0;
        short $s0;

        r0 := @this: org.apache.batik.svggen.font.table.Os2Table;

        $s0 = r0.<org.apache.batik.svggen.font.table.Os2Table: short sTypoDescender>;

        return $s0;
    }

    public short getTypoLineGap()
    {
        org.apache.batik.svggen.font.table.Os2Table r0;
        short $s0;

        r0 := @this: org.apache.batik.svggen.font.table.Os2Table;

        $s0 = r0.<org.apache.batik.svggen.font.table.Os2Table: short sTypoLineGap>;

        return $s0;
    }

    public int getWinAscent()
    {
        int $i0;
        org.apache.batik.svggen.font.table.Os2Table r0;

        r0 := @this: org.apache.batik.svggen.font.table.Os2Table;

        $i0 = r0.<org.apache.batik.svggen.font.table.Os2Table: int usWinAscent>;

        return $i0;
    }

    public int getWinDescent()
    {
        int $i0;
        org.apache.batik.svggen.font.table.Os2Table r0;

        r0 := @this: org.apache.batik.svggen.font.table.Os2Table;

        $i0 = r0.<org.apache.batik.svggen.font.table.Os2Table: int usWinDescent>;

        return $i0;
    }

    public int getCodePageRange1()
    {
        int $i0;
        org.apache.batik.svggen.font.table.Os2Table r0;

        r0 := @this: org.apache.batik.svggen.font.table.Os2Table;

        $i0 = r0.<org.apache.batik.svggen.font.table.Os2Table: int ulCodePageRange1>;

        return $i0;
    }

    public int getCodePageRange2()
    {
        int $i0;
        org.apache.batik.svggen.font.table.Os2Table r0;

        r0 := @this: org.apache.batik.svggen.font.table.Os2Table;

        $i0 = r0.<org.apache.batik.svggen.font.table.Os2Table: int ulCodePageRange2>;

        return $i0;
    }

    public int getType()
    {
        org.apache.batik.svggen.font.table.Os2Table r0;

        r0 := @this: org.apache.batik.svggen.font.table.Os2Table;

        return 1330851634;
    }
}
