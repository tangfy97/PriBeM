class org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$2 extends java.lang.Object implements org.waveprotocol.wave.model.testing.RandomNindoGenerator$Mapper
{
    final org.waveprotocol.wave.model.document.operation.Attributes val$finalAttrAccu;
    final org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$AttributesChecker val$checker;
    final boolean val$valid;
    final org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator this$0;

    void <init>(org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator, org.waveprotocol.wave.model.document.operation.Attributes, org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$AttributesChecker, boolean)
    {
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator r1;
        org.waveprotocol.wave.model.document.operation.Attributes r2;
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$2 r0;
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$AttributesChecker r3;
        boolean z0;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$2;

        r1 := @parameter0: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        r3 := @parameter2: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$AttributesChecker;

        z0 := @parameter3: boolean;

        r0.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$2: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator this$0> = r1;

        r0.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$2: org.waveprotocol.wave.model.document.operation.Attributes val$finalAttrAccu> = r2;

        r0.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$2: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$AttributesChecker val$checker> = r3;

        r0.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$2: boolean val$valid> = z0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.waveprotocol.wave.model.util.Pair map(java.lang.String)
    {
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator $r3, $r4;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters $r5;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$RandomProvider $r6;
        org.waveprotocol.wave.model.util.Pair $r10;
        org.waveprotocol.wave.model.document.operation.Attributes $r2;
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$2 r0;
        java.util.List $r7;
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$2$1 $r8;
        java.lang.Object $r9;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$2;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$2: org.waveprotocol.wave.model.document.operation.Attributes val$finalAttrAccu>;

        $z0 = interfaceinvoke $r2.<org.waveprotocol.wave.model.document.operation.Attributes: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r3 = r0.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$2: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator this$0>;

        $r6 = $r3.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$RandomProvider r>;

        $r4 = r0.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$2: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator this$0>;

        $r5 = $r4.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters p>;

        $r7 = virtualinvoke $r5.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: java.util.List getAttributeValues()>();

        $r8 = new org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$2$1;

        specialinvoke $r8.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$2$1: void <init>(org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$2,java.lang.String)>(r0, r1);

        $r9 = staticinvoke <org.waveprotocol.wave.model.testing.RandomNindoGenerator: java.lang.Object access$100(org.waveprotocol.wave.model.testing.RandomDocOpGenerator$RandomProvider,java.util.List,org.waveprotocol.wave.model.testing.RandomNindoGenerator$Mapper)>($r6, $r7, $r8);

        $r10 = (org.waveprotocol.wave.model.util.Pair) $r9;

        return $r10;
    }

    public volatile java.lang.Object map(java.lang.Object)
    {
        java.lang.Object r1;
        java.lang.String $r2;
        org.waveprotocol.wave.model.util.Pair $r3;
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$2 r0;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.String) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$2: org.waveprotocol.wave.model.util.Pair map(java.lang.String)>($r2);

        return $r3;
    }
}
