public class junit.textui.ResultPrinter extends java.lang.Object implements junit.framework.TestListener
{
    java.io.PrintStream fWriter;
    int fColumn;

    public void <init>(java.io.PrintStream)
    {
        java.io.PrintStream r1;
        junit.textui.ResultPrinter r0;

        r0 := @this: junit.textui.ResultPrinter;

        r1 := @parameter0: java.io.PrintStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<junit.textui.ResultPrinter: int fColumn> = 0;

        r0.<junit.textui.ResultPrinter: java.io.PrintStream fWriter> = r1;

        return;
    }

    synchronized void print(junit.framework.TestResult, long)
    {
        long l0;
        junit.textui.ResultPrinter r0;
        junit.framework.TestResult r1;

        r0 := @this: junit.textui.ResultPrinter;

        r1 := @parameter0: junit.framework.TestResult;

        l0 := @parameter1: long;

        virtualinvoke r0.<junit.textui.ResultPrinter: void printHeader(long)>(l0);

        virtualinvoke r0.<junit.textui.ResultPrinter: void printErrors(junit.framework.TestResult)>(r1);

        virtualinvoke r0.<junit.textui.ResultPrinter: void printFailures(junit.framework.TestResult)>(r1);

        virtualinvoke r0.<junit.textui.ResultPrinter: void printFooter(junit.framework.TestResult)>(r1);

        return;
    }

    void printWaitPrompt()
    {
        java.io.PrintStream $r1, $r2;
        junit.textui.ResultPrinter r0;

        r0 := @this: junit.textui.ResultPrinter;

        $r1 = virtualinvoke r0.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        virtualinvoke $r1.<java.io.PrintStream: void println()>();

        $r2 = virtualinvoke r0.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("<RETURN> to continue");

        return;
    }

    protected void printHeader(long)
    {
        java.io.PrintStream $r1, $r2;
        long l0;
        java.lang.StringBuilder $r3, $r4, $r6;
        junit.textui.ResultPrinter r0;
        java.lang.String $r5, $r7;

        r0 := @this: junit.textui.ResultPrinter;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        virtualinvoke $r1.<java.io.PrintStream: void println()>();

        $r2 = virtualinvoke r0.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Time: ");

        $r5 = virtualinvoke r0.<junit.textui.ResultPrinter: java.lang.String elapsedTimeAsString(long)>(l0);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r7);

        return;
    }

    protected void printErrors(junit.framework.TestResult)
    {
        java.util.Enumeration $r2;
        junit.framework.TestResult r1;
        int $i0;
        junit.textui.ResultPrinter r0;

        r0 := @this: junit.textui.ResultPrinter;

        r1 := @parameter0: junit.framework.TestResult;

        $r2 = virtualinvoke r1.<junit.framework.TestResult: java.util.Enumeration errors()>();

        $i0 = virtualinvoke r1.<junit.framework.TestResult: int errorCount()>();

        virtualinvoke r0.<junit.textui.ResultPrinter: void printDefects(java.util.Enumeration,int,java.lang.String)>($r2, $i0, "error");

        return;
    }

    protected void printFailures(junit.framework.TestResult)
    {
        java.util.Enumeration $r2;
        junit.framework.TestResult r1;
        int $i0;
        junit.textui.ResultPrinter r0;

        r0 := @this: junit.textui.ResultPrinter;

        r1 := @parameter0: junit.framework.TestResult;

        $r2 = virtualinvoke r1.<junit.framework.TestResult: java.util.Enumeration failures()>();

        $i0 = virtualinvoke r1.<junit.framework.TestResult: int failureCount()>();

        virtualinvoke r0.<junit.textui.ResultPrinter: void printDefects(java.util.Enumeration,int,java.lang.String)>($r2, $i0, "failure");

        return;
    }

    protected void printDefects(java.util.Enumeration, int, java.lang.String)
    {
        java.util.Enumeration r10;
        int i0, i1;
        java.lang.String r6, $r9, $r20;
        boolean $z0;
        java.io.PrintStream $r1, $r13;
        junit.framework.TestFailure $r12;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r7, $r8, $r14, $r15, $r16, $r17, $r18, $r19;
        java.lang.Object $r11;
        junit.textui.ResultPrinter r0;

        r0 := @this: junit.textui.ResultPrinter;

        r10 := @parameter0: java.util.Enumeration;

        i0 := @parameter1: int;

        r6 := @parameter2: java.lang.String;

        if i0 != 0 goto label1;

        return;

     label1:
        if i0 != 1 goto label2;

        $r13 = virtualinvoke r0.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("There was ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r20);

        goto label3;

     label2:
        $r1 = virtualinvoke r0.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("There were ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("s:");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r9);

     label3:
        i1 = 1;

     label4:
        $z0 = interfaceinvoke r10.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label5;

        $r11 = interfaceinvoke r10.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r12 = (junit.framework.TestFailure) $r11;

        virtualinvoke r0.<junit.textui.ResultPrinter: void printDefect(junit.framework.TestFailure,int)>($r12, i1);

        i1 = i1 + 1;

        goto label4;

     label5:
        return;
    }

    public void printDefect(junit.framework.TestFailure, int)
    {
        int i0;
        junit.framework.TestFailure r1;
        junit.textui.ResultPrinter r0;

        r0 := @this: junit.textui.ResultPrinter;

        r1 := @parameter0: junit.framework.TestFailure;

        i0 := @parameter1: int;

        virtualinvoke r0.<junit.textui.ResultPrinter: void printDefectHeader(junit.framework.TestFailure,int)>(r1, i0);

        virtualinvoke r0.<junit.textui.ResultPrinter: void printDefectTrace(junit.framework.TestFailure)>(r1);

        return;
    }

    protected void printDefectHeader(junit.framework.TestFailure, int)
    {
        java.io.PrintStream $r1;
        junit.framework.Test $r6;
        junit.framework.TestFailure r5;
        int i0;
        java.lang.StringBuilder $r2, $r3, $r4, $r7;
        junit.textui.ResultPrinter r0;
        java.lang.String $r8;

        r0 := @this: junit.textui.ResultPrinter;

        r5 := @parameter0: junit.framework.TestFailure;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $r6 = virtualinvoke r5.<junit.framework.TestFailure: junit.framework.Test failedTest()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.String)>($r8);

        return;
    }

    protected void printDefectTrace(junit.framework.TestFailure)
    {
        java.io.PrintStream $r1;
        junit.framework.TestFailure r2;
        junit.textui.ResultPrinter r0;
        java.lang.String $r3, $r4;

        r0 := @this: junit.textui.ResultPrinter;

        r2 := @parameter0: junit.framework.TestFailure;

        $r1 = virtualinvoke r0.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        $r3 = virtualinvoke r2.<junit.framework.TestFailure: java.lang.String trace()>();

        $r4 = staticinvoke <junit.runner.BaseTestRunner: java.lang.String getFilteredTrace(java.lang.String)>($r3);

        virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.String)>($r4);

        return;
    }

    protected void printFooter(junit.framework.TestResult)
    {
        junit.framework.TestResult r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r12, $r23, $r24;
        boolean $z0;
        java.io.PrintStream $r2, $r3, $r4, $r13, $r14, $r15, $r16;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r17, $r18, $r19, $r20, $r21, $r22;
        junit.textui.ResultPrinter r1;

        r1 := @this: junit.textui.ResultPrinter;

        r0 := @parameter0: junit.framework.TestResult;

        $z0 = virtualinvoke r0.<junit.framework.TestResult: boolean wasSuccessful()>();

        if $z0 == 0 goto label3;

        $r14 = virtualinvoke r1.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        virtualinvoke $r14.<java.io.PrintStream: void println()>();

        $r15 = virtualinvoke r1.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        virtualinvoke $r15.<java.io.PrintStream: void print(java.lang.String)>("OK");

        $r16 = virtualinvoke r1.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i3 = virtualinvoke r0.<junit.framework.TestResult: int runCount()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" test");

        $i4 = virtualinvoke r0.<junit.framework.TestResult: int runCount()>();

        if $i4 != 1 goto label1;

        $r24 = "";

        goto label2;

     label1:
        $r24 = "s";

     label2:
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r23);

        goto label4;

     label3:
        $r2 = virtualinvoke r1.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        virtualinvoke $r2.<java.io.PrintStream: void println()>();

        $r3 = virtualinvoke r1.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("FAILURES!!!");

        $r4 = virtualinvoke r1.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tests run: ");

        $i0 = virtualinvoke r0.<junit.framework.TestResult: int runCount()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",  Failures: ");

        $i1 = virtualinvoke r0.<junit.framework.TestResult: int failureCount()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",  Errors: ");

        $i2 = virtualinvoke r0.<junit.framework.TestResult: int errorCount()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r12);

     label4:
        $r13 = virtualinvoke r1.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        virtualinvoke $r13.<java.io.PrintStream: void println()>();

        return;
    }

    protected java.lang.String elapsedTimeAsString(long)
    {
        long l0;
        java.lang.String $r1;
        junit.textui.ResultPrinter r2;
        java.text.NumberFormat $r0;
        double $d0, $d1;

        r2 := @this: junit.textui.ResultPrinter;

        l0 := @parameter0: long;

        $r0 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance()>();

        $d0 = (double) l0;

        $d1 = $d0 / 1000.0;

        $r1 = virtualinvoke $r0.<java.text.NumberFormat: java.lang.String format(double)>($d1);

        return $r1;
    }

    public java.io.PrintStream getWriter()
    {
        java.io.PrintStream $r1;
        junit.textui.ResultPrinter r0;

        r0 := @this: junit.textui.ResultPrinter;

        $r1 = r0.<junit.textui.ResultPrinter: java.io.PrintStream fWriter>;

        return $r1;
    }

    public void addError(junit.framework.Test, java.lang.Throwable)
    {
        java.io.PrintStream $r1;
        java.lang.Throwable r3;
        junit.framework.Test r2;
        junit.textui.ResultPrinter r0;

        r0 := @this: junit.textui.ResultPrinter;

        r2 := @parameter0: junit.framework.Test;

        r3 := @parameter1: java.lang.Throwable;

        $r1 = virtualinvoke r0.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.String)>("E");

        return;
    }

    public void addFailure(junit.framework.Test, junit.framework.AssertionFailedError)
    {
        java.io.PrintStream $r1;
        junit.framework.Test r2;
        junit.framework.AssertionFailedError r3;
        junit.textui.ResultPrinter r0;

        r0 := @this: junit.textui.ResultPrinter;

        r2 := @parameter0: junit.framework.Test;

        r3 := @parameter1: junit.framework.AssertionFailedError;

        $r1 = virtualinvoke r0.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.String)>("F");

        return;
    }

    public void endTest(junit.framework.Test)
    {
        junit.textui.ResultPrinter r0;
        junit.framework.Test r1;

        r0 := @this: junit.textui.ResultPrinter;

        r1 := @parameter0: junit.framework.Test;

        return;
    }

    public void startTest(junit.framework.Test)
    {
        java.io.PrintStream $r1, $r2;
        junit.framework.Test r3;
        int $i0, $i1;
        junit.textui.ResultPrinter r0;

        r0 := @this: junit.textui.ResultPrinter;

        r3 := @parameter0: junit.framework.Test;

        $r1 = virtualinvoke r0.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.String)>(".");

        $i0 = r0.<junit.textui.ResultPrinter: int fColumn>;

        $i1 = $i0 + 1;

        r0.<junit.textui.ResultPrinter: int fColumn> = $i1;

        if $i0 < 40 goto label1;

        $r2 = virtualinvoke r0.<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>();

        virtualinvoke $r2.<java.io.PrintStream: void println()>();

        r0.<junit.textui.ResultPrinter: int fColumn> = 0;

     label1:
        return;
    }
}
