public class ucar.nc2.dataset.conv.ZebraConvention extends ucar.nc2.dataset.conv.ATDRadarConvention
{

    public static boolean isMine(ucar.nc2.NetcdfFile)
    {
        ucar.nc2.NetcdfFile r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        $r1 = virtualinvoke r0.<ucar.nc2.NetcdfFile: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "Convention", "none");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("Zebra");

        return $z0;
    }

    public void <init>()
    {
        ucar.nc2.dataset.conv.ZebraConvention r0;

        r0 := @this: ucar.nc2.dataset.conv.ZebraConvention;

        specialinvoke r0.<ucar.nc2.dataset.conv.ATDRadarConvention: void <init>()>();

        r0.<ucar.nc2.dataset.conv.ZebraConvention: java.lang.String conventionName> = "Zebra";

        return;
    }

    public void augmentDataset(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.lang.Object[] $r12;
        java.util.Formatter $r13;
        ucar.nc2.util.CancelTask r1;
        ucar.nc2.Variable $r3, $r4, $r5;
        java.lang.String $r14, $r15;
        double $d0, $d1, $d2;
        boolean $z0;
        ucar.ma2.IndexIterator $r9;
        java.io.IOException $r10;
        ucar.ma2.Array $r8;
        ucar.nc2.dataset.conv.ZebraConvention r11;
        ucar.nc2.Attribute $r6, $r7;
        ucar.nc2.Dimension $r2;
        ucar.nc2.dataset.NetcdfDataset r0;

        r11 := @this: ucar.nc2.dataset.conv.ZebraConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: ucar.nc2.util.CancelTask;

        staticinvoke <ucar.nc2.ncml.NcMLReader: void wrapNcMLresource(ucar.nc2.dataset.NetcdfDataset,java.lang.String,ucar.nc2.util.CancelTask)>(r0, "resources/nj22/coords/Zebra.ncml", r1);

        $r2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>("time");

        $r3 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("base_time");

        $r4 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("time_offset");

        $r5 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("time");

        if $r2 == null goto label1;

        if $r3 == null goto label1;

        if $r4 == null goto label1;

        if $r5 != null goto label2;

     label1:
        return;

     label2:
        $r6 = virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>("units");

        if $r6 == null goto label3;

        $r15 = virtualinvoke $r6.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        goto label4;

     label3:
        $r15 = "seconds since 1970-01-01 00:00 UTC";

     label4:
        $r7 = new ucar.nc2.Attribute;

        specialinvoke $r7.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", $r15);

        virtualinvoke $r5.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r7);

     label5:
        $d0 = virtualinvoke $r3.<ucar.nc2.Variable: double readScalarDouble()>();

        $r8 = virtualinvoke $r4.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r9 = virtualinvoke $r8.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

     label6:
        $z0 = interfaceinvoke $r9.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $d1 = interfaceinvoke $r9.<ucar.ma2.IndexIterator: double getDoubleNext()>();

        $d2 = $d1 + $d0;

        interfaceinvoke $r9.<ucar.ma2.IndexIterator: void setDoubleCurrent(double)>($d2);

        goto label6;

     label7:
        goto label9;

     label8:
        $r10 := @caughtexception;

        $r13 = r11.<ucar.nc2.dataset.conv.ZebraConvention: java.util.Formatter parseInfo>;

        $r12 = newarray (java.lang.Object)[2];

        $r14 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String getLocation()>();

        $r12[0] = $r14;

        $r12[1] = $r10;

        virtualinvoke $r13.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("ZebraConvention failed to create time Coord Axis for file %s err= %s\n", $r12);

        return;

     label9:
        virtualinvoke $r5.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r8, 1);

        return;

        catch java.io.IOException from label5 to label7 with label8;
    }
}
