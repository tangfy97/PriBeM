public class com.hp.hpl.jena.tdb.migrate.LockTx extends java.lang.Object implements com.hp.hpl.jena.shared.Lock
{
    private com.hp.hpl.jena.tdb.transaction.DatasetGraphTransaction dsg;
    private com.hp.hpl.jena.tdb.migrate.LockTx$LockTxState state;

    public void <init>(com.hp.hpl.jena.tdb.transaction.DatasetGraphTransaction)
    {
        com.hp.hpl.jena.tdb.migrate.LockTx r0;
        com.hp.hpl.jena.tdb.migrate.LockTx$LockTxState $r1;
        com.hp.hpl.jena.tdb.transaction.DatasetGraphTransaction r2;

        r0 := @this: com.hp.hpl.jena.tdb.migrate.LockTx;

        r2 := @parameter0: com.hp.hpl.jena.tdb.transaction.DatasetGraphTransaction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <com.hp.hpl.jena.tdb.migrate.LockTx$LockTxState: com.hp.hpl.jena.tdb.migrate.LockTx$LockTxState TxNONE>;

        r0.<com.hp.hpl.jena.tdb.migrate.LockTx: com.hp.hpl.jena.tdb.migrate.LockTx$LockTxState state> = $r1;

        r0.<com.hp.hpl.jena.tdb.migrate.LockTx: com.hp.hpl.jena.tdb.transaction.DatasetGraphTransaction dsg> = r2;

        return;
    }

    public void enterCriticalSection(boolean)
    {
        com.hp.hpl.jena.tdb.migrate.LockTx$LockTxState $r1, $r2, $r3, $r6, $r12;
        com.hp.hpl.jena.tdb.migrate.LockTx r0;
        com.hp.hpl.jena.tdb.transaction.DatasetGraphTransaction $r5, $r8;
        com.hp.hpl.jena.tdb.transaction.TDBTransactionException $r9;
        java.lang.String $r14;
        boolean z0;
        com.hp.hpl.jena.query.ReadWrite $r4, $r7;
        java.lang.StringBuilder $r10, $r11, $r13;

        r0 := @this: com.hp.hpl.jena.tdb.migrate.LockTx;

        z0 := @parameter0: boolean;

        $r2 = r0.<com.hp.hpl.jena.tdb.migrate.LockTx: com.hp.hpl.jena.tdb.migrate.LockTx$LockTxState state>;

        $r1 = <com.hp.hpl.jena.tdb.migrate.LockTx$LockTxState: com.hp.hpl.jena.tdb.migrate.LockTx$LockTxState TxNONE>;

        if $r2 == $r1 goto label1;

        $r9 = new com.hp.hpl.jena.tdb.transaction.TDBTransactionException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal state: ");

        $r12 = r0.<com.hp.hpl.jena.tdb.migrate.LockTx: com.hp.hpl.jena.tdb.migrate.LockTx$LockTxState state>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<com.hp.hpl.jena.tdb.transaction.TDBTransactionException: void <init>(java.lang.String)>($r14);

        throw $r9;

     label1:
        if z0 == 0 goto label2;

        $r6 = <com.hp.hpl.jena.tdb.migrate.LockTx$LockTxState: com.hp.hpl.jena.tdb.migrate.LockTx$LockTxState TxREAD>;

        r0.<com.hp.hpl.jena.tdb.migrate.LockTx: com.hp.hpl.jena.tdb.migrate.LockTx$LockTxState state> = $r6;

        $r8 = r0.<com.hp.hpl.jena.tdb.migrate.LockTx: com.hp.hpl.jena.tdb.transaction.DatasetGraphTransaction dsg>;

        $r7 = <com.hp.hpl.jena.query.ReadWrite: com.hp.hpl.jena.query.ReadWrite READ>;

        virtualinvoke $r8.<com.hp.hpl.jena.tdb.transaction.DatasetGraphTransaction: void begin(com.hp.hpl.jena.query.ReadWrite)>($r7);

        goto label3;

     label2:
        $r3 = <com.hp.hpl.jena.tdb.migrate.LockTx$LockTxState: com.hp.hpl.jena.tdb.migrate.LockTx$LockTxState TxWRITE>;

        r0.<com.hp.hpl.jena.tdb.migrate.LockTx: com.hp.hpl.jena.tdb.migrate.LockTx$LockTxState state> = $r3;

        $r5 = r0.<com.hp.hpl.jena.tdb.migrate.LockTx: com.hp.hpl.jena.tdb.transaction.DatasetGraphTransaction dsg>;

        $r4 = <com.hp.hpl.jena.query.ReadWrite: com.hp.hpl.jena.query.ReadWrite WRITE>;

        virtualinvoke $r5.<com.hp.hpl.jena.tdb.transaction.DatasetGraphTransaction: void begin(com.hp.hpl.jena.query.ReadWrite)>($r4);

     label3:
        return;
    }

    public void leaveCriticalSection()
    {
        com.hp.hpl.jena.tdb.migrate.LockTx$LockTxState $r1, $r8, $r11;
        com.hp.hpl.jena.tdb.migrate.LockTx r0;
        com.hp.hpl.jena.tdb.transaction.DatasetGraphTransaction $r3, $r4;
        int[] $r2;
        int $i0, $i1;
        com.hp.hpl.jena.tdb.transaction.TDBTransactionException $r5;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.String $r10;

        r0 := @this: com.hp.hpl.jena.tdb.migrate.LockTx;

        $r2 = <com.hp.hpl.jena.tdb.migrate.LockTx$1: int[] $SwitchMap$com$hp$hpl$jena$tdb$migrate$LockTx$LockTxState>;

        $r1 = r0.<com.hp.hpl.jena.tdb.migrate.LockTx: com.hp.hpl.jena.tdb.migrate.LockTx$LockTxState state>;

        $i0 = virtualinvoke $r1.<com.hp.hpl.jena.tdb.migrate.LockTx$LockTxState: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        $r5 = new com.hp.hpl.jena.tdb.transaction.TDBTransactionException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal state: ");

        $r8 = r0.<com.hp.hpl.jena.tdb.migrate.LockTx: com.hp.hpl.jena.tdb.migrate.LockTx$LockTxState state>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<com.hp.hpl.jena.tdb.transaction.TDBTransactionException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label2:
        $r4 = r0.<com.hp.hpl.jena.tdb.migrate.LockTx: com.hp.hpl.jena.tdb.transaction.DatasetGraphTransaction dsg>;

        virtualinvoke $r4.<com.hp.hpl.jena.tdb.transaction.DatasetGraphTransaction: void close()>();

        goto label4;

     label3:
        $r3 = r0.<com.hp.hpl.jena.tdb.migrate.LockTx: com.hp.hpl.jena.tdb.transaction.DatasetGraphTransaction dsg>;

        virtualinvoke $r3.<com.hp.hpl.jena.tdb.transaction.DatasetGraphTransaction: void commit()>();

     label4:
        $r11 = <com.hp.hpl.jena.tdb.migrate.LockTx$LockTxState: com.hp.hpl.jena.tdb.migrate.LockTx$LockTxState TxNONE>;

        r0.<com.hp.hpl.jena.tdb.migrate.LockTx: com.hp.hpl.jena.tdb.migrate.LockTx$LockTxState state> = $r11;

        return;
    }
}
