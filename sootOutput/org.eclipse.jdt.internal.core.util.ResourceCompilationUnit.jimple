public class org.eclipse.jdt.internal.core.util.ResourceCompilationUnit extends org.eclipse.jdt.internal.compiler.batch.CompilationUnit
{
    private org.eclipse.core.resources.IFile file;

    public void <init>(org.eclipse.core.resources.IFile, java.net.URI)
    {
        org.eclipse.core.runtime.IPath $r3;
        org.eclipse.core.resources.IFile r2;
        org.eclipse.jdt.internal.core.util.ResourceCompilationUnit r0;
        java.net.URI r1;
        java.lang.String $r4;

        r0 := @this: org.eclipse.jdt.internal.core.util.ResourceCompilationUnit;

        r2 := @parameter0: org.eclipse.core.resources.IFile;

        r1 := @parameter1: java.net.URI;

        if r1 != null goto label1;

        $r3 = interfaceinvoke r2.<org.eclipse.core.resources.IFile: org.eclipse.core.runtime.IPath getFullPath()>();

        $r4 = interfaceinvoke $r3.<org.eclipse.core.runtime.IPath: java.lang.String toString()>();

        goto label2;

     label1:
        $r4 = virtualinvoke r1.<java.net.URI: java.lang.String getPath()>();

     label2:
        specialinvoke r0.<org.eclipse.jdt.internal.compiler.batch.CompilationUnit: void <init>(char[],java.lang.String,java.lang.String)>(null, $r4, null);

        r0.<org.eclipse.jdt.internal.core.util.ResourceCompilationUnit: org.eclipse.core.resources.IFile file> = r2;

        return;
    }

    public char[] getContents()
    {
        java.lang.Throwable $r5;
        char[] $r1, $r3, $r4, $r6;
        org.eclipse.core.resources.IFile $r2;
        org.eclipse.jdt.internal.core.util.ResourceCompilationUnit r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.ResourceCompilationUnit;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.ResourceCompilationUnit: char[] contents>;

        if $r1 == null goto label1;

        $r4 = r0.<org.eclipse.jdt.internal.core.util.ResourceCompilationUnit: char[] contents>;

        return $r4;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.core.util.ResourceCompilationUnit: org.eclipse.core.resources.IFile file>;

        $r3 = staticinvoke <org.eclipse.jdt.internal.core.util.Util: char[] getResourceContentsAsCharArray(org.eclipse.core.resources.IFile)>($r2);

     label2:
        return $r3;

     label3:
        $r5 := @caughtexception;

        $r6 = <org.eclipse.jdt.core.compiler.CharOperation: char[] NO_CHAR>;

        return $r6;

        catch org.eclipse.core.runtime.CoreException from label1 to label2 with label3;
    }
}
