public class org.eclipse.jdt.internal.core.util.WeakHashSet extends java.lang.Object
{
    org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference[] values;
    public int elementSize;
    int threshold;
    java.lang.ref.ReferenceQueue referenceQueue;

    public void <init>()
    {
        org.eclipse.jdt.internal.core.util.WeakHashSet r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.WeakHashSet;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: void <init>(int)>(5);

        return;
    }

    public void <init>(int)
    {
        org.eclipse.jdt.internal.core.util.WeakHashSet r0;
        java.lang.ref.ReferenceQueue $r1;
        int i0, $i1, i2;
        float $f0, $f1;
        org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference[] $r2;

        r0 := @this: org.eclipse.jdt.internal.core.util.WeakHashSet;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.ref.ReferenceQueue;

        specialinvoke $r1.<java.lang.ref.ReferenceQueue: void <init>()>();

        r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: java.lang.ref.ReferenceQueue referenceQueue> = $r1;

        r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: int elementSize> = 0;

        r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: int threshold> = i0;

        $f0 = (float) i0;

        $f1 = $f0 * 1.75F;

        i2 = (int) $f1;

        $i1 = r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: int threshold>;

        if $i1 != i2 goto label1;

        i2 = i2 + 1;

     label1:
        $r2 = newarray (org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference)[i2];

        r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference[] values> = $r2;

        return;
    }

    public java.lang.Object add(java.lang.Object)
    {
        org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference $r4, $r8;
        java.lang.ref.ReferenceQueue $r5;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference[] $r1, $r6, $r7;
        boolean $z0;
        org.eclipse.jdt.internal.core.util.WeakHashSet r0;
        java.lang.Object r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.core.util.WeakHashSet;

        r2 := @parameter0: java.lang.Object;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: void cleanupGarbageCollectedValues()>();

        $r1 = r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference[] values>;

        i0 = lengthof $r1;

        $i1 = virtualinvoke r2.<java.lang.Object: int hashCode()>();

        $i2 = $i1 & 2147483647;

        i6 = $i2 % i0;

        goto label3;

     label1:
        $r3 = virtualinvoke $r8.<org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference: java.lang.Object get()>();

        $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        return $r3;

     label2:
        i6 = i6 + 1;

        if i6 != i0 goto label3;

        i6 = 0;

     label3:
        $r7 = r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference[] values>;

        $r8 = $r7[i6];

        if $r8 != null goto label1;

        $r6 = r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference[] values>;

        $r4 = new org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference;

        $r5 = r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: java.lang.ref.ReferenceQueue referenceQueue>;

        specialinvoke $r4.<org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>(r2, $r5);

        $r6[i6] = $r4;

        $i3 = r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: int elementSize>;

        $i4 = $i3 + 1;

        r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: int elementSize> = $i4;

        $i5 = r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: int threshold>;

        if $i4 <= $i5 goto label4;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: void rehash()>();

     label4:
        return r2;
    }

    private void addValue(org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference)
    {
        org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference r0, $r7;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference[] $r3, $r5, $r6;
        boolean $z0;
        org.eclipse.jdt.internal.core.util.WeakHashSet r2;
        java.lang.Object $r1, $r4;

        r2 := @this: org.eclipse.jdt.internal.core.util.WeakHashSet;

        r0 := @parameter0: org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference: java.lang.Object get()>();

        if $r1 != null goto label1;

        return;

     label1:
        $r3 = r2.<org.eclipse.jdt.internal.core.util.WeakHashSet: org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference[] values>;

        i0 = lengthof $r3;

        $i1 = r0.<org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference: int hashCode>;

        $i2 = $i1 & 2147483647;

        i6 = $i2 % i0;

        goto label4;

     label2:
        $r4 = virtualinvoke $r7.<org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference: java.lang.Object get()>();

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        return;

     label3:
        i6 = i6 + 1;

        if i6 != i0 goto label4;

        i6 = 0;

     label4:
        $r6 = r2.<org.eclipse.jdt.internal.core.util.WeakHashSet: org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference[] values>;

        $r7 = $r6[i6];

        if $r7 != null goto label2;

        $r5 = r2.<org.eclipse.jdt.internal.core.util.WeakHashSet: org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference[] values>;

        $r5[i6] = r0;

        $i3 = r2.<org.eclipse.jdt.internal.core.util.WeakHashSet: int elementSize>;

        $i4 = $i3 + 1;

        r2.<org.eclipse.jdt.internal.core.util.WeakHashSet: int elementSize> = $i4;

        $i5 = r2.<org.eclipse.jdt.internal.core.util.WeakHashSet: int threshold>;

        if $i4 <= $i5 goto label5;

        specialinvoke r2.<org.eclipse.jdt.internal.core.util.WeakHashSet: void rehash()>();

     label5:
        return;
    }

    private void cleanupGarbageCollectedValues()
    {
        org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference $r3, $r5, $r9, $r12;
        java.lang.ref.ReferenceQueue $r10;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference[] $r1, $r2, $r4, $r6, $r7, $r8;
        org.eclipse.jdt.internal.core.util.WeakHashSet r0;
        java.lang.ref.Reference $r11;

        r0 := @this: org.eclipse.jdt.internal.core.util.WeakHashSet;

        goto label8;

     label1:
        i0 = $r12.<org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference: int hashCode>;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference[] values>;

        i1 = lengthof $r1;

        $i2 = i0 & 2147483647;

        i8 = $i2 % i1;

        goto label7;

     label2:
        if $r9 != $r12 goto label6;

        i9 = i8;

        goto label4;

     label3:
        i9 = $i4;

     label4:
        $r2 = r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference[] values>;

        $i3 = i9 + 1;

        $i4 = $i3 % i1;

        $r3 = $r2[$i4];

        if $r3 == null goto label5;

        $i7 = $r3.<org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference: int hashCode>;

        if $i7 == i0 goto label3;

     label5:
        $r6 = r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference[] values>;

        $r4 = r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference[] values>;

        $r5 = $r4[i9];

        $r6[i8] = $r5;

        $r7 = r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference[] values>;

        $r7[i9] = null;

        $i5 = r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: int elementSize>;

        $i6 = $i5 - 1;

        r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: int elementSize> = $i6;

        goto label8;

     label6:
        i8 = i8 + 1;

        if i8 != i1 goto label7;

        i8 = 0;

     label7:
        $r8 = r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference[] values>;

        $r9 = $r8[i8];

        if $r9 != null goto label2;

     label8:
        $r10 = r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: java.lang.ref.ReferenceQueue referenceQueue>;

        $r11 = virtualinvoke $r10.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>();

        $r12 = (org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference) $r11;

        if $r12 != null goto label1;

        return;
    }

    public boolean contains(java.lang.Object)
    {
        org.eclipse.jdt.internal.core.util.WeakHashSet r0;
        java.lang.Object r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.core.util.WeakHashSet;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: java.lang.Object get(java.lang.Object)>(r1);

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.Object get(java.lang.Object)
    {
        org.eclipse.jdt.internal.core.util.WeakHashSet r0;
        org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference $r5;
        int i0, $i1, $i2, i3;
        java.lang.Object r2, $r3;
        org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference[] $r1, $r4;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.core.util.WeakHashSet;

        r2 := @parameter0: java.lang.Object;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: void cleanupGarbageCollectedValues()>();

        $r1 = r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference[] values>;

        i0 = lengthof $r1;

        $i1 = virtualinvoke r2.<java.lang.Object: int hashCode()>();

        $i2 = $i1 & 2147483647;

        i3 = $i2 % i0;

        goto label3;

     label1:
        $r3 = virtualinvoke $r5.<org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference: java.lang.Object get()>();

        $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        return $r3;

     label2:
        i3 = i3 + 1;

        if i3 != i0 goto label3;

        i3 = 0;

     label3:
        $r4 = r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference[] values>;

        $r5 = $r4[i3];

        if $r5 != null goto label1;

        return null;
    }

    private void rehash()
    {
        org.eclipse.jdt.internal.core.util.WeakHashSet $r0, r1;
        org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference $r5;
        java.lang.ref.ReferenceQueue $r2;
        int $i0, $i1, i2, $i3, $i4, i5;
        org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference[] $r3, $r4, $r6;

        r1 := @this: org.eclipse.jdt.internal.core.util.WeakHashSet;

        $r0 = new org.eclipse.jdt.internal.core.util.WeakHashSet;

        $i0 = r1.<org.eclipse.jdt.internal.core.util.WeakHashSet: int elementSize>;

        $i1 = $i0 * 2;

        specialinvoke $r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: void <init>(int)>($i1);

        $r2 = r1.<org.eclipse.jdt.internal.core.util.WeakHashSet: java.lang.ref.ReferenceQueue referenceQueue>;

        $r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: java.lang.ref.ReferenceQueue referenceQueue> = $r2;

        i5 = 0;

        $r3 = r1.<org.eclipse.jdt.internal.core.util.WeakHashSet: org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference[] values>;

        i2 = lengthof $r3;

        goto label3;

     label1:
        $r4 = r1.<org.eclipse.jdt.internal.core.util.WeakHashSet: org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference[] values>;

        $r5 = $r4[i5];

        if $r5 == null goto label2;

        specialinvoke $r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: void addValue(org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference)>($r5);

     label2:
        i5 = i5 + 1;

     label3:
        if i5 < i2 goto label1;

        $r6 = $r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference[] values>;

        r1.<org.eclipse.jdt.internal.core.util.WeakHashSet: org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference[] values> = $r6;

        $i3 = $r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: int threshold>;

        r1.<org.eclipse.jdt.internal.core.util.WeakHashSet: int threshold> = $i3;

        $i4 = $r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: int elementSize>;

        r1.<org.eclipse.jdt.internal.core.util.WeakHashSet: int elementSize> = $i4;

        return;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        org.eclipse.jdt.internal.core.util.WeakHashSet r0;
        org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference $r6;
        int i0, $i1, $i2, $i3, $i4, i5;
        java.lang.Object r2, $r3;
        org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference[] $r1, $r4, $r5;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.core.util.WeakHashSet;

        r2 := @parameter0: java.lang.Object;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: void cleanupGarbageCollectedValues()>();

        $r1 = r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference[] values>;

        i0 = lengthof $r1;

        $i1 = virtualinvoke r2.<java.lang.Object: int hashCode()>();

        $i2 = $i1 & 2147483647;

        i5 = $i2 % i0;

        goto label3;

     label1:
        $r3 = virtualinvoke $r6.<org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference: java.lang.Object get()>();

        $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        $i3 = r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: int elementSize>;

        $i4 = $i3 - 1;

        r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: int elementSize> = $i4;

        $r4 = r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference[] values>;

        $r4[i5] = null;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: void rehash()>();

        return $r3;

     label2:
        i5 = i5 + 1;

        if i5 != i0 goto label3;

        i5 = 0;

     label3:
        $r5 = r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference[] values>;

        $r6 = $r5[i5];

        if $r6 != null goto label1;

        return null;
    }

    public int size()
    {
        int $i0;
        org.eclipse.jdt.internal.core.util.WeakHashSet r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.WeakHashSet;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.WeakHashSet: int elementSize>;

        return $i0;
    }

    public java.lang.String toString()
    {
        org.eclipse.jdt.internal.core.util.WeakHashSet r1;
        org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference r4;
        java.lang.StringBuffer $r0;
        int i0, i1;
        java.lang.Object $r5;
        java.lang.String $r6, $r7;
        org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference[] $r2, $r3;

        r1 := @this: org.eclipse.jdt.internal.core.util.WeakHashSet;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>("{");

        i1 = 0;

        $r2 = r1.<org.eclipse.jdt.internal.core.util.WeakHashSet: org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference[] values>;

        i0 = lengthof $r2;

        goto label3;

     label1:
        $r3 = r1.<org.eclipse.jdt.internal.core.util.WeakHashSet: org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference[] values>;

        r4 = $r3[i1];

        if r4 == null goto label2;

        $r5 = virtualinvoke r4.<org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference: java.lang.Object get()>();

        if $r5 == null goto label2;

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label2:
        i1 = i1 + 1;

     label3:
        if i1 < i0 goto label1;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}");

        $r7 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }
}
