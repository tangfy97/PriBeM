public class org.apache.lucene.queryparser.flexible.core.processors.RemoveDeletedQueryNodesProcessor extends org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorImpl
{

    public void <init>()
    {
        org.apache.lucene.queryparser.flexible.core.processors.RemoveDeletedQueryNodesProcessor r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.RemoveDeletedQueryNodesProcessor;

        specialinvoke r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorImpl: void <init>()>();

        return;
    }

    public org.apache.lucene.queryparser.flexible.core.nodes.QueryNode process(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode) throws org.apache.lucene.queryparser.flexible.core.QueryNodeException
    {
        org.apache.lucene.queryparser.flexible.core.nodes.MatchNoDocsQueryNode $r2;
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode $r1, r3;
        org.apache.lucene.queryparser.flexible.core.processors.RemoveDeletedQueryNodesProcessor r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.RemoveDeletedQueryNodesProcessor;

        r3 := @parameter0: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode;

        $r1 = specialinvoke r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorImpl: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode process(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)>(r3);

        $z0 = $r1 instanceof org.apache.lucene.queryparser.flexible.core.nodes.DeletedQueryNode;

        if $z0 == 0 goto label1;

        $z1 = $r1 instanceof org.apache.lucene.queryparser.flexible.core.nodes.MatchNoDocsQueryNode;

        if $z1 != 0 goto label1;

        $r2 = new org.apache.lucene.queryparser.flexible.core.nodes.MatchNoDocsQueryNode;

        specialinvoke $r2.<org.apache.lucene.queryparser.flexible.core.nodes.MatchNoDocsQueryNode: void <init>()>();

        return $r2;

     label1:
        return $r1;
    }

    protected org.apache.lucene.queryparser.flexible.core.nodes.QueryNode postProcessNode(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode) throws org.apache.lucene.queryparser.flexible.core.QueryNodeException
    {
        java.util.Iterator $r3;
        org.apache.lucene.queryparser.flexible.core.nodes.DeletedQueryNode $r2;
        org.apache.lucene.queryparser.flexible.core.processors.RemoveDeletedQueryNodesProcessor r5;
        java.util.List $r1;
        int $i0;
        java.lang.Object $r4;
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode r0;
        boolean $z0, $z1, $z2, z3;

        r5 := @this: org.apache.lucene.queryparser.flexible.core.processors.RemoveDeletedQueryNodesProcessor;

        r0 := @parameter0: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode;

        $z0 = interfaceinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.QueryNode: boolean isLeaf()>();

        if $z0 != 0 goto label5;

        $r1 = interfaceinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.QueryNode: java.util.List getChildren()>();

        if $r1 == null goto label1;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label2;

     label1:
        z3 = 1;

        goto label4;

     label2:
        z3 = 1;

        $r3 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $z2 = $r4 instanceof org.apache.lucene.queryparser.flexible.core.nodes.DeletedQueryNode;

        if $z2 != 0 goto label3;

        z3 = 0;

        goto label4;

     label4:
        if z3 == 0 goto label5;

        $r2 = new org.apache.lucene.queryparser.flexible.core.nodes.DeletedQueryNode;

        specialinvoke $r2.<org.apache.lucene.queryparser.flexible.core.nodes.DeletedQueryNode: void <init>()>();

        return $r2;

     label5:
        return r0;
    }

    protected java.util.List setChildrenOrder(java.util.List) throws org.apache.lucene.queryparser.flexible.core.QueryNodeException
    {
        org.apache.lucene.queryparser.flexible.core.processors.RemoveDeletedQueryNodesProcessor r2;
        java.util.List r0;
        int $i0, $i1, i2, $i4;
        java.lang.Object $r1;
        boolean $z0;

        r2 := @this: org.apache.lucene.queryparser.flexible.core.processors.RemoveDeletedQueryNodesProcessor;

        r0 := @parameter0: java.util.List;

        i2 = 0;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if i2 >= $i0 goto label3;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);

        $z0 = $r1 instanceof org.apache.lucene.queryparser.flexible.core.nodes.DeletedQueryNode;

        if $z0 == 0 goto label2;

        $i1 = i2;

        $i4 = (int) -1;

        i2 = i2 + $i4;

        interfaceinvoke r0.<java.util.List: java.lang.Object remove(int)>($i1);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return r0;
    }

    protected org.apache.lucene.queryparser.flexible.core.nodes.QueryNode preProcessNode(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode) throws org.apache.lucene.queryparser.flexible.core.QueryNodeException
    {
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode r0;
        org.apache.lucene.queryparser.flexible.core.processors.RemoveDeletedQueryNodesProcessor r1;

        r1 := @this: org.apache.lucene.queryparser.flexible.core.processors.RemoveDeletedQueryNodesProcessor;

        r0 := @parameter0: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode;

        return r0;
    }
}
