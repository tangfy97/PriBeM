public class com.sun.syndication.feed.impl.EqualsBean extends java.lang.Object implements java.io.Serializable
{
    private static final java.lang.Object[] NO_PARAMS;
    private java.lang.Class _beanClass;
    private java.lang.Object _obj;
    static java.lang.Class class$java$lang$Object;

    protected void <init>(java.lang.Class)
    {
        com.sun.syndication.feed.impl.EqualsBean r0;
        java.lang.Class r1;

        r0 := @this: com.sun.syndication.feed.impl.EqualsBean;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.sun.syndication.feed.impl.EqualsBean: java.lang.Class _beanClass> = r1;

        r0.<com.sun.syndication.feed.impl.EqualsBean: java.lang.Object _obj> = r0;

        return;
    }

    public void <init>(java.lang.Class, java.lang.Object)
    {
        java.lang.IllegalArgumentException $r3;
        com.sun.syndication.feed.impl.EqualsBean r0;
        java.lang.StringBuffer $r4, $r6, $r7, $r8;
        java.lang.Class r1, $r5;
        java.lang.Object r2;
        java.lang.String $r9;
        boolean $z0;

        r0 := @this: com.sun.syndication.feed.impl.EqualsBean;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = virtualinvoke r1.<java.lang.Class: boolean isInstance(java.lang.Object)>(r2);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is not instance of ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r3;

     label1:
        r0.<com.sun.syndication.feed.impl.EqualsBean: java.lang.Class _beanClass> = r1;

        r0.<com.sun.syndication.feed.impl.EqualsBean: java.lang.Object _obj> = r2;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        com.sun.syndication.feed.impl.EqualsBean r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: com.sun.syndication.feed.impl.EqualsBean;

        r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<com.sun.syndication.feed.impl.EqualsBean: boolean beanEquals(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean beanEquals(java.lang.Object)
    {
        java.lang.Object[] $r11, $r13;
        java.beans.PropertyDescriptor[] $r5;
        com.sun.syndication.feed.impl.EqualsBean r0;
        int $i0, $i1, i2;
        java.lang.reflect.Method $r7;
        boolean $z0, z1;
        java.lang.Class[] $r10;
        java.lang.RuntimeException $r16;
        java.lang.Exception $r15;
        java.beans.PropertyDescriptor $r6;
        java.lang.Object r1, r2, $r12, $r14;
        java.lang.Class $r3, $r4, $r8, $r9, $r17;

        r0 := @this: com.sun.syndication.feed.impl.EqualsBean;

        r2 := @parameter0: java.lang.Object;

        r1 = r0.<com.sun.syndication.feed.impl.EqualsBean: java.lang.Object _obj>;

        if r2 != null goto label01;

        z1 = 0;

        goto label13;

     label01:
        if r1 != null goto label02;

        if r2 != null goto label02;

        z1 = 1;

        goto label13;

     label02:
        if r1 == null goto label03;

        if r2 != null goto label04;

     label03:
        z1 = 0;

        goto label13;

     label04:
        $r3 = r0.<com.sun.syndication.feed.impl.EqualsBean: java.lang.Class _beanClass>;

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isInstance(java.lang.Object)>(r2);

        if $z0 != 0 goto label05;

        z1 = 0;

        goto label13;

     label05:
        z1 = 1;

     label06:
        $r4 = r0.<com.sun.syndication.feed.impl.EqualsBean: java.lang.Class _beanClass>;

        $r5 = staticinvoke <com.sun.syndication.feed.impl.BeanIntrospector: java.beans.PropertyDescriptor[] getPropertyDescriptors(java.lang.Class)>($r4);

        if $r5 == null goto label11;

        i2 = 0;

     label07:
        if z1 == 0 goto label11;

        $i0 = lengthof $r5;

        if i2 >= $i0 goto label11;

        $r6 = $r5[i2];

        $r7 = virtualinvoke $r6.<java.beans.PropertyDescriptor: java.lang.reflect.Method getReadMethod()>();

        if $r7 == null goto label10;

        $r8 = virtualinvoke $r7.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $r9 = <com.sun.syndication.feed.impl.EqualsBean: java.lang.Class class$java$lang$Object>;

        if $r9 != null goto label08;

        $r17 = staticinvoke <com.sun.syndication.feed.impl.EqualsBean: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <com.sun.syndication.feed.impl.EqualsBean: java.lang.Class class$java$lang$Object> = $r17;

        goto label09;

     label08:
        $r17 = <com.sun.syndication.feed.impl.EqualsBean: java.lang.Class class$java$lang$Object>;

     label09:
        if $r8 == $r17 goto label10;

        $r10 = virtualinvoke $r7.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i1 = lengthof $r10;

        if $i1 != 0 goto label10;

        $r11 = <com.sun.syndication.feed.impl.EqualsBean: java.lang.Object[] NO_PARAMS>;

        $r12 = virtualinvoke $r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r11);

        $r13 = <com.sun.syndication.feed.impl.EqualsBean: java.lang.Object[] NO_PARAMS>;

        $r14 = virtualinvoke $r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r13);

        z1 = specialinvoke r0.<com.sun.syndication.feed.impl.EqualsBean: boolean doEquals(java.lang.Object,java.lang.Object)>($r12, $r14);

     label10:
        i2 = i2 + 1;

        goto label07;

     label11:
        goto label13;

     label12:
        $r15 := @caughtexception;

        $r16 = new java.lang.RuntimeException;

        specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Could not execute equals()", $r15);

        throw $r16;

     label13:
        return z1;

        catch java.lang.Exception from label06 to label11 with label12;
    }

    public int hashCode()
    {
        int $i0;
        com.sun.syndication.feed.impl.EqualsBean r0;

        r0 := @this: com.sun.syndication.feed.impl.EqualsBean;

        $i0 = virtualinvoke r0.<com.sun.syndication.feed.impl.EqualsBean: int beanHashCode()>();

        return $i0;
    }

    public int beanHashCode()
    {
        com.sun.syndication.feed.impl.EqualsBean r0;
        int $i0;
        java.lang.Object $r1;
        java.lang.String $r2;

        r0 := @this: com.sun.syndication.feed.impl.EqualsBean;

        $r1 = r0.<com.sun.syndication.feed.impl.EqualsBean: java.lang.Object _obj>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        return $i0;
    }

    private boolean doEquals(java.lang.Object, java.lang.Object)
    {
        com.sun.syndication.feed.impl.EqualsBean r4;
        java.lang.Object r0, r1;
        java.lang.Class $r2, $r3;
        boolean $z0, $z1, z3, $z4, $z5;

        r4 := @this: com.sun.syndication.feed.impl.EqualsBean;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 != r1 goto label1;

        $z5 = 1;

        $z4 = 1;

        goto label2;

     label1:
        $z5 = 0;

        $z4 = 0;

     label2:
        z3 = $z4;

        if $z5 != 0 goto label4;

        if r0 == null goto label4;

        if r1 == null goto label4;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label3;

        $z1 = virtualinvoke $r3.<java.lang.Class: boolean isArray()>();

        if $z1 == 0 goto label3;

        z3 = specialinvoke r4.<com.sun.syndication.feed.impl.EqualsBean: boolean equalsArray(java.lang.Object,java.lang.Object)>(r0, r1);

        goto label4;

     label3:
        z3 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

     label4:
        return z3;
    }

    private boolean equalsArray(java.lang.Object, java.lang.Object)
    {
        com.sun.syndication.feed.impl.EqualsBean r4;
        int $i0, $i1, i2;
        java.lang.Object r0, r1, $r2, $r3;
        boolean z0;

        r4 := @this: com.sun.syndication.feed.impl.EqualsBean;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $i0 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(r0);

        $i1 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(r1);

        if $i0 != $i1 goto label3;

        z0 = 1;

        i2 = 0;

     label1:
        if z0 == 0 goto label2;

        if i2 >= $i0 goto label2;

        $r2 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(r0, i2);

        $r3 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(r1, i2);

        z0 = specialinvoke r4.<com.sun.syndication.feed.impl.EqualsBean: boolean doEquals(java.lang.Object,java.lang.Object)>($r2, $r3);

        i2 = i2 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        z0 = 0;

     label4:
        return z0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Object[] $r0;

        $r0 = newarray (java.lang.Object)[0];

        <com.sun.syndication.feed.impl.EqualsBean: java.lang.Object[] NO_PARAMS> = $r0;

        return;
    }
}
