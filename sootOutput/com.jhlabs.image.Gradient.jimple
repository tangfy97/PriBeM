public class com.jhlabs.image.Gradient extends com.jhlabs.image.ArrayColormap implements java.lang.Cloneable, java.io.Serializable
{
    static final long serialVersionUID;
    public static final int RGB;
    public static final int HUE_CW;
    public static final int HUE_CCW;
    public static final int LINEAR;
    public static final int SPLINE;
    public static final int CIRCLE_UP;
    public static final int CIRCLE_DOWN;
    public static final int CONSTANT;
    private static final int COLOR_MASK;
    private static final int BLEND_MASK;
    public int numKnots;
    public int[] xKnots;
    public int[] yKnots;
    public byte[] knotTypes;

    public void <init>()
    {
        byte[] $r3;
        com.jhlabs.image.Gradient r0;
        int[] $r1, $r2;
        int $i1, $i3, $i5;

        r0 := @this: com.jhlabs.image.Gradient;

        specialinvoke r0.<com.jhlabs.image.ArrayColormap: void <init>()>();

        r0.<com.jhlabs.image.Gradient: int numKnots> = 4;

        $r1 = newarray (int)[4];

        $i1 = (int) -1;

        $r1[0] = $i1;

        $r1[1] = 0;

        $r1[2] = 255;

        $r1[3] = 256;

        r0.<com.jhlabs.image.Gradient: int[] xKnots> = $r1;

        $r2 = newarray (int)[4];

        $r2[0] = -16777216;

        $r2[1] = -16777216;

        $i3 = (int) -1;

        $r2[2] = $i3;

        $i5 = (int) -1;

        $r2[3] = $i5;

        r0.<com.jhlabs.image.Gradient: int[] yKnots> = $r2;

        $r3 = newarray (byte)[4];

        $r3[0] = 32;

        $r3[1] = 32;

        $r3[2] = 32;

        $r3[3] = 32;

        r0.<com.jhlabs.image.Gradient: byte[] knotTypes> = $r3;

        specialinvoke r0.<com.jhlabs.image.Gradient: void rebuildGradient()>();

        return;
    }

    public void <init>(int[])
    {
        com.jhlabs.image.Gradient r0;
        int[] r1;

        r0 := @this: com.jhlabs.image.Gradient;

        r1 := @parameter0: int[];

        specialinvoke r0.<com.jhlabs.image.Gradient: void <init>(int[],int[],byte[])>(null, r1, null);

        return;
    }

    public void <init>(int[], int[])
    {
        com.jhlabs.image.Gradient r0;
        int[] r1, r2;

        r0 := @this: com.jhlabs.image.Gradient;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        specialinvoke r0.<com.jhlabs.image.Gradient: void <init>(int[],int[],byte[])>(r1, r2, null);

        return;
    }

    public void <init>(int[], int[], byte[])
    {
        byte[] $r3, r6;
        com.jhlabs.image.Gradient r0;
        int[] $r1, $r2, r4, r5;
        int $i1, $i3, $i5;

        r0 := @this: com.jhlabs.image.Gradient;

        r4 := @parameter0: int[];

        r5 := @parameter1: int[];

        r6 := @parameter2: byte[];

        specialinvoke r0.<com.jhlabs.image.ArrayColormap: void <init>()>();

        r0.<com.jhlabs.image.Gradient: int numKnots> = 4;

        $r1 = newarray (int)[4];

        $i1 = (int) -1;

        $r1[0] = $i1;

        $r1[1] = 0;

        $r1[2] = 255;

        $r1[3] = 256;

        r0.<com.jhlabs.image.Gradient: int[] xKnots> = $r1;

        $r2 = newarray (int)[4];

        $r2[0] = -16777216;

        $r2[1] = -16777216;

        $i3 = (int) -1;

        $r2[2] = $i3;

        $i5 = (int) -1;

        $r2[3] = $i5;

        r0.<com.jhlabs.image.Gradient: int[] yKnots> = $r2;

        $r3 = newarray (byte)[4];

        $r3[0] = 32;

        $r3[1] = 32;

        $r3[2] = 32;

        $r3[3] = 32;

        r0.<com.jhlabs.image.Gradient: byte[] knotTypes> = $r3;

        virtualinvoke r0.<com.jhlabs.image.Gradient: void setKnots(int[],int[],byte[])>(r4, r5, r6);

        return;
    }

    public java.lang.Object clone()
    {
        byte[] $r15, $r17, $r18;
        com.jhlabs.image.Gradient r0, r2;
        int[] $r3, $r5, $r6, $r7, $r9, $r10, $r11, $r13, $r14;
        java.lang.Object $r1, $r4, $r8, $r12, $r16;

        r0 := @this: com.jhlabs.image.Gradient;

        $r1 = specialinvoke r0.<com.jhlabs.image.ArrayColormap: java.lang.Object clone()>();

        r2 = (com.jhlabs.image.Gradient) $r1;

        $r3 = r0.<com.jhlabs.image.ArrayColormap: int[] map>;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Object clone()>();

        $r5 = (int[]) $r4;

        $r6 = (int[]) $r5;

        r2.<com.jhlabs.image.ArrayColormap: int[] map> = $r6;

        $r7 = r0.<com.jhlabs.image.Gradient: int[] xKnots>;

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Object clone()>();

        $r9 = (int[]) $r8;

        $r10 = (int[]) $r9;

        r2.<com.jhlabs.image.Gradient: int[] xKnots> = $r10;

        $r11 = r0.<com.jhlabs.image.Gradient: int[] yKnots>;

        $r12 = virtualinvoke $r11.<java.lang.Object: java.lang.Object clone()>();

        $r13 = (int[]) $r12;

        $r14 = (int[]) $r13;

        r2.<com.jhlabs.image.Gradient: int[] yKnots> = $r14;

        $r15 = r0.<com.jhlabs.image.Gradient: byte[] knotTypes>;

        $r16 = virtualinvoke $r15.<java.lang.Object: java.lang.Object clone()>();

        $r17 = (byte[]) $r16;

        $r18 = (byte[]) $r17;

        r2.<com.jhlabs.image.Gradient: byte[] knotTypes> = $r18;

        return r2;
    }

    public void copyTo(com.jhlabs.image.Gradient)
    {
        byte[] $r14, $r16, $r17;
        com.jhlabs.image.Gradient r0, r1;
        int[] $r2, $r4, $r5, $r6, $r8, $r9, $r10, $r12, $r13;
        int $i0;
        java.lang.Object $r3, $r7, $r11, $r15;

        r1 := @this: com.jhlabs.image.Gradient;

        r0 := @parameter0: com.jhlabs.image.Gradient;

        $i0 = r1.<com.jhlabs.image.Gradient: int numKnots>;

        r0.<com.jhlabs.image.Gradient: int numKnots> = $i0;

        $r2 = r1.<com.jhlabs.image.ArrayColormap: int[] map>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (int[]) $r3;

        $r5 = (int[]) $r4;

        r0.<com.jhlabs.image.ArrayColormap: int[] map> = $r5;

        $r6 = r1.<com.jhlabs.image.Gradient: int[] xKnots>;

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Object clone()>();

        $r8 = (int[]) $r7;

        $r9 = (int[]) $r8;

        r0.<com.jhlabs.image.Gradient: int[] xKnots> = $r9;

        $r10 = r1.<com.jhlabs.image.Gradient: int[] yKnots>;

        $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.Object clone()>();

        $r12 = (int[]) $r11;

        $r13 = (int[]) $r12;

        r0.<com.jhlabs.image.Gradient: int[] yKnots> = $r13;

        $r14 = r1.<com.jhlabs.image.Gradient: byte[] knotTypes>;

        $r15 = virtualinvoke $r14.<java.lang.Object: java.lang.Object clone()>();

        $r16 = (byte[]) $r15;

        $r17 = (byte[]) $r16;

        r0.<com.jhlabs.image.Gradient: byte[] knotTypes> = $r17;

        return;
    }

    public void setColor(int, int)
    {
        com.jhlabs.image.Gradient r0;
        int[] $r1, $r2, $r3, $r4;
        int i0, i1, i2, $i3, $i4, i5, $i6, $i7, i8, i9;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: com.jhlabs.image.Gradient;

        i2 := @parameter0: int;

        i5 := @parameter1: int;

        $r1 = r0.<com.jhlabs.image.ArrayColormap: int[] map>;

        i0 = $r1[0];

        $r2 = r0.<com.jhlabs.image.ArrayColormap: int[] map>;

        i1 = $r2[255];

        if i2 <= 0 goto label2;

        i8 = 0;

     label1:
        if i8 >= i2 goto label2;

        $r4 = r0.<com.jhlabs.image.ArrayColormap: int[] map>;

        $f4 = (float) i8;

        $f3 = (float) i2;

        $f5 = $f4 / $f3;

        $i7 = staticinvoke <com.jhlabs.image.ImageMath: int mixColors(float,int,int)>($f5, i0, i5);

        $r4[i8] = $i7;

        i8 = i8 + 1;

        goto label1;

     label2:
        if i2 >= 255 goto label4;

        i9 = i2;

     label3:
        if i9 >= 256 goto label4;

        $r3 = r0.<com.jhlabs.image.ArrayColormap: int[] map>;

        $i3 = i9 - i2;

        $f1 = (float) $i3;

        $i4 = 256 - i2;

        $f0 = (float) $i4;

        $f2 = $f1 / $f0;

        $i6 = staticinvoke <com.jhlabs.image.ImageMath: int mixColors(float,int,int)>($f2, i5, i1);

        $r3[i9] = $i6;

        i9 = i9 + 1;

        goto label3;

     label4:
        return;
    }

    public int getKnot(int)
    {
        com.jhlabs.image.Gradient r0;
        int[] $r1;
        int i0, $i1;

        r0 := @this: com.jhlabs.image.Gradient;

        i0 := @parameter0: int;

        $r1 = r0.<com.jhlabs.image.Gradient: int[] yKnots>;

        $i1 = $r1[i0];

        return $i1;
    }

    public void setKnot(int, int)
    {
        com.jhlabs.image.Gradient r0;
        int[] $r1;
        int i0, i1;

        r0 := @this: com.jhlabs.image.Gradient;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.jhlabs.image.Gradient: int[] yKnots>;

        $r1[i0] = i1;

        specialinvoke r0.<com.jhlabs.image.Gradient: void rebuildGradient()>();

        return;
    }

    public void setKnotType(int, int)
    {
        byte[] $r1, $r2;
        com.jhlabs.image.Gradient r0;
        byte $b1, $b3, $b5;
        int i0, i2, $i4, $i6;

        r0 := @this: com.jhlabs.image.Gradient;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        $r2 = r0.<com.jhlabs.image.Gradient: byte[] knotTypes>;

        $r1 = r0.<com.jhlabs.image.Gradient: byte[] knotTypes>;

        $b1 = $r1[i0];

        $b3 = $b1 & -4;

        $i6 = (int) $b3;

        $i4 = $i6 | i2;

        $b5 = (byte) $i4;

        $r2[i0] = $b5;

        specialinvoke r0.<com.jhlabs.image.Gradient: void rebuildGradient()>();

        return;
    }

    public int getKnotType(int)
    {
        byte[] $r1;
        com.jhlabs.image.Gradient r0;
        byte $b1, $b2, $b3;
        int i0, $i4;

        r0 := @this: com.jhlabs.image.Gradient;

        i0 := @parameter0: int;

        $r1 = r0.<com.jhlabs.image.Gradient: byte[] knotTypes>;

        $b1 = $r1[i0];

        $b2 = $b1 & 3;

        $b3 = (byte) $b2;

        $i4 = (int) $b3;

        return $i4;
    }

    public void setKnotBlend(int, int)
    {
        byte[] $r1, $r2;
        com.jhlabs.image.Gradient r0;
        byte $b1, $b3, $b5;
        int i0, i2, $i4, $i6;

        r0 := @this: com.jhlabs.image.Gradient;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        $r2 = r0.<com.jhlabs.image.Gradient: byte[] knotTypes>;

        $r1 = r0.<com.jhlabs.image.Gradient: byte[] knotTypes>;

        $b1 = $r1[i0];

        $b3 = $b1 & -113;

        $i6 = (int) $b3;

        $i4 = $i6 | i2;

        $b5 = (byte) $i4;

        $r2[i0] = $b5;

        specialinvoke r0.<com.jhlabs.image.Gradient: void rebuildGradient()>();

        return;
    }

    public byte getKnotBlend(int)
    {
        byte[] $r1;
        com.jhlabs.image.Gradient r0;
        byte $b1, $b2, $b3;
        int i0;

        r0 := @this: com.jhlabs.image.Gradient;

        i0 := @parameter0: int;

        $r1 = r0.<com.jhlabs.image.Gradient: byte[] knotTypes>;

        $b1 = $r1[i0];

        $b2 = $b1 & 112;

        $b3 = (byte) $b2;

        return $b3;
    }

    public void addKnot(int, int, int)
    {
        byte[] r3, $r6, $r11, $r12, $r15;
        com.jhlabs.image.Gradient r0;
        byte $b19, $b29;
        int[] r1, r2, $r4, $r5, $r7, $r8, $r9, $r10, $r13, $r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20, $i21, i22, $i23, $i24, i25, $i26, $i27, i28, $i30, $i31, $i32;

        r0 := @this: com.jhlabs.image.Gradient;

        i22 := @parameter0: int;

        i25 := @parameter1: int;

        i28 := @parameter2: int;

        $i0 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $i1 = $i0 + 1;

        r1 = newarray (int)[$i1];

        $i2 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $i3 = $i2 + 1;

        r2 = newarray (int)[$i3];

        $i4 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $i5 = $i4 + 1;

        r3 = newarray (byte)[$i5];

        $r4 = r0.<com.jhlabs.image.Gradient: int[] xKnots>;

        $i6 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r1, 0, $i6);

        $r5 = r0.<com.jhlabs.image.Gradient: int[] yKnots>;

        $i7 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r2, 0, $i7);

        $r6 = r0.<com.jhlabs.image.Gradient: byte[] knotTypes>;

        $i8 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r3, 0, $i8);

        r0.<com.jhlabs.image.Gradient: int[] xKnots> = r1;

        r0.<com.jhlabs.image.Gradient: int[] yKnots> = r2;

        r0.<com.jhlabs.image.Gradient: byte[] knotTypes> = r3;

        $r8 = r0.<com.jhlabs.image.Gradient: int[] xKnots>;

        $i12 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $r7 = r0.<com.jhlabs.image.Gradient: int[] xKnots>;

        $i9 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $i10 = $i9 - 1;

        $i11 = $r7[$i10];

        $r8[$i12] = $i11;

        $r10 = r0.<com.jhlabs.image.Gradient: int[] yKnots>;

        $i16 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $r9 = r0.<com.jhlabs.image.Gradient: int[] yKnots>;

        $i13 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $i14 = $i13 - 1;

        $i15 = $r9[$i14];

        $r10[$i16] = $i15;

        $r12 = r0.<com.jhlabs.image.Gradient: byte[] knotTypes>;

        $i20 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $r11 = r0.<com.jhlabs.image.Gradient: byte[] knotTypes>;

        $i17 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $i18 = $i17 - 1;

        $b19 = $r11[$i18];

        $r12[$i20] = $b19;

        $r13 = r0.<com.jhlabs.image.Gradient: int[] xKnots>;

        $i21 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $i23 = $i21 - 1;

        $r13[$i23] = i22;

        $r14 = r0.<com.jhlabs.image.Gradient: int[] yKnots>;

        $i24 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $i26 = $i24 - 1;

        $r14[$i26] = i25;

        $r15 = r0.<com.jhlabs.image.Gradient: byte[] knotTypes>;

        $i27 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $i30 = $i27 - 1;

        $b29 = (byte) i28;

        $r15[$i30] = $b29;

        $i31 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $i32 = $i31 + 1;

        r0.<com.jhlabs.image.Gradient: int numKnots> = $i32;

        specialinvoke r0.<com.jhlabs.image.Gradient: void sortKnots()>();

        specialinvoke r0.<com.jhlabs.image.Gradient: void rebuildGradient()>();

        return;
    }

    public void removeKnot(int)
    {
        byte[] $r7, $r8;
        com.jhlabs.image.Gradient r0;
        int[] $r1, $r2, $r3, $r4, $r5, $r6;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;

        r0 := @this: com.jhlabs.image.Gradient;

        i1 := @parameter0: int;

        $i0 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        if $i0 > 4 goto label1;

        return;

     label1:
        $i2 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $i3 = $i2 - 1;

        if i1 >= $i3 goto label2;

        $r4 = r0.<com.jhlabs.image.Gradient: int[] xKnots>;

        $i10 = i1 + 1;

        $r3 = r0.<com.jhlabs.image.Gradient: int[] xKnots>;

        $i7 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $i8 = $i7 - i1;

        $i9 = $i8 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i10, $r3, i1, $i9);

        $r6 = r0.<com.jhlabs.image.Gradient: int[] yKnots>;

        $i14 = i1 + 1;

        $r5 = r0.<com.jhlabs.image.Gradient: int[] yKnots>;

        $i11 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $i12 = $i11 - i1;

        $i13 = $i12 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, $i14, $r5, i1, $i13);

        $r8 = r0.<com.jhlabs.image.Gradient: byte[] knotTypes>;

        $i18 = i1 + 1;

        $r7 = r0.<com.jhlabs.image.Gradient: byte[] knotTypes>;

        $i15 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $i16 = $i15 - i1;

        $i17 = $i16 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, $i18, $r7, i1, $i17);

     label2:
        $i4 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $i5 = $i4 - 1;

        r0.<com.jhlabs.image.Gradient: int numKnots> = $i5;

        $r1 = r0.<com.jhlabs.image.Gradient: int[] xKnots>;

        $i6 = $r1[1];

        if $i6 <= 0 goto label3;

        $r2 = r0.<com.jhlabs.image.Gradient: int[] xKnots>;

        $r2[1] = 0;

     label3:
        specialinvoke r0.<com.jhlabs.image.Gradient: void rebuildGradient()>();

        return;
    }

    public void setKnots(int[], int[], byte[])
    {
        byte[] $r4, r7, $r8, $r9;
        com.jhlabs.image.Gradient r0;
        int[] r1, $r2, $r3, r5, $r6, $r10, $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19;

        r0 := @this: com.jhlabs.image.Gradient;

        r5 := @parameter0: int[];

        r1 := @parameter1: int[];

        r7 := @parameter2: byte[];

        $i0 = lengthof r1;

        $i1 = $i0 + 2;

        r0.<com.jhlabs.image.Gradient: int numKnots> = $i1;

        $i2 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $r2 = newarray (int)[$i2];

        r0.<com.jhlabs.image.Gradient: int[] xKnots> = $r2;

        $i3 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $r3 = newarray (int)[$i3];

        r0.<com.jhlabs.image.Gradient: int[] yKnots> = $r3;

        $i4 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $r4 = newarray (byte)[$i4];

        r0.<com.jhlabs.image.Gradient: byte[] knotTypes> = $r4;

        if r5 == null goto label1;

        $r11 = r0.<com.jhlabs.image.Gradient: int[] xKnots>;

        $i16 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $i17 = $i16 - 2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, 0, $r11, 1, $i17);

        goto label3;

     label1:
        i18 = 1;

     label2:
        $i5 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $i6 = $i5 - 1;

        if i18 <= $i6 goto label3;

        $r10 = r0.<com.jhlabs.image.Gradient: int[] xKnots>;

        $i14 = 255 * i18;

        $i12 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $i13 = $i12 - 2;

        $i15 = $i14 / $i13;

        $r10[i18] = $i15;

        i18 = i18 + 1;

        goto label2;

     label3:
        $r6 = r0.<com.jhlabs.image.Gradient: int[] yKnots>;

        $i7 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $i8 = $i7 - 2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r6, 1, $i8);

        if r7 == null goto label4;

        $r9 = r0.<com.jhlabs.image.Gradient: byte[] knotTypes>;

        $i10 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $i11 = $i10 - 2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, 0, $r9, 1, $i11);

        goto label6;

     label4:
        i19 = 0;

     label5:
        $i9 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        if i19 <= $i9 goto label6;

        $r8 = r0.<com.jhlabs.image.Gradient: byte[] knotTypes>;

        $r8[i19] = 32;

        i19 = i19 + 1;

        goto label5;

     label6:
        specialinvoke r0.<com.jhlabs.image.Gradient: void sortKnots()>();

        specialinvoke r0.<com.jhlabs.image.Gradient: void rebuildGradient()>();

        return;
    }

    public void setKnots(int[], int[], byte[], int, int)
    {
        byte[] $r3, r8, $r9;
        com.jhlabs.image.Gradient r0;
        int[] $r1, $r2, r4, $r5, r6, $r7;
        int i0, $i1, $i2, $i3, i4, $i5, $i6, $i7;

        r0 := @this: com.jhlabs.image.Gradient;

        r4 := @parameter0: int[];

        r6 := @parameter1: int[];

        r8 := @parameter2: byte[];

        i4 := @parameter3: int;

        i0 := @parameter4: int;

        r0.<com.jhlabs.image.Gradient: int numKnots> = i0;

        $i1 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $r1 = newarray (int)[$i1];

        r0.<com.jhlabs.image.Gradient: int[] xKnots> = $r1;

        $i2 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $r2 = newarray (int)[$i2];

        r0.<com.jhlabs.image.Gradient: int[] yKnots> = $r2;

        $i3 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $r3 = newarray (byte)[$i3];

        r0.<com.jhlabs.image.Gradient: byte[] knotTypes> = $r3;

        $r5 = r0.<com.jhlabs.image.Gradient: int[] xKnots>;

        $i5 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, i4, $r5, 0, $i5);

        $r7 = r0.<com.jhlabs.image.Gradient: int[] yKnots>;

        $i6 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r6, i4, $r7, 0, $i6);

        $r9 = r0.<com.jhlabs.image.Gradient: byte[] knotTypes>;

        $i7 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r8, i4, $r9, 0, $i7);

        specialinvoke r0.<com.jhlabs.image.Gradient: void sortKnots()>();

        specialinvoke r0.<com.jhlabs.image.Gradient: void rebuildGradient()>();

        return;
    }

    public void splitSpan(int)
    {
        byte[] $r3;
        com.jhlabs.image.Gradient r0;
        byte $b7;
        int[] $r1, $r2;
        int i0, $i1, $i2, $i3, $i4, i5, $i6, $i8;
        float $f0, $f1;

        r0 := @this: com.jhlabs.image.Gradient;

        i0 := @parameter0: int;

        $r1 = r0.<com.jhlabs.image.Gradient: int[] xKnots>;

        $i3 = $r1[i0];

        $r2 = r0.<com.jhlabs.image.Gradient: int[] xKnots>;

        $i1 = i0 + 1;

        $i2 = $r2[$i1];

        $i4 = $i3 + $i2;

        i5 = $i4 / 2;

        $f0 = (float) i5;

        $f1 = $f0 / 256.0F;

        $i6 = virtualinvoke r0.<com.jhlabs.image.ArrayColormap: int getColor(float)>($f1);

        $r3 = r0.<com.jhlabs.image.Gradient: byte[] knotTypes>;

        $b7 = $r3[i0];

        $i8 = (int) $b7;

        virtualinvoke r0.<com.jhlabs.image.Gradient: void addKnot(int,int,int)>(i5, $i6, $i8);

        specialinvoke r0.<com.jhlabs.image.Gradient: void rebuildGradient()>();

        return;
    }

    public void setKnotPosition(int, int)
    {
        com.jhlabs.image.Gradient r0;
        int[] $r1;
        int i0, i1, $i2;

        r0 := @this: com.jhlabs.image.Gradient;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.jhlabs.image.Gradient: int[] xKnots>;

        $i2 = staticinvoke <com.jhlabs.image.ImageMath: int clamp(int,int,int)>(i1, 0, 255);

        $r1[i0] = $i2;

        specialinvoke r0.<com.jhlabs.image.Gradient: void sortKnots()>();

        specialinvoke r0.<com.jhlabs.image.Gradient: void rebuildGradient()>();

        return;
    }

    public int knotAt(int)
    {
        com.jhlabs.image.Gradient r0;
        int[] $r1;
        int $i0, $i1, $i2, i3, $i4, i5;

        r0 := @this: com.jhlabs.image.Gradient;

        i3 := @parameter0: int;

        i5 = 1;

     label1:
        $i0 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $i1 = $i0 - 1;

        if i5 >= $i1 goto label3;

        $r1 = r0.<com.jhlabs.image.Gradient: int[] xKnots>;

        $i2 = i5 + 1;

        $i4 = $r1[$i2];

        if $i4 <= i3 goto label2;

        return i5;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        return 1;
    }

    private void rebuildGradient()
    {
        com.jhlabs.image.Gradient r0;
        byte $b33, $b34, $b35;
        float[] $r13, $r14;
        int[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r15, $r16, $r17;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, f15, f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, $i18, i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i36, i37, i38, i39, $i40, $i41, $i43, $i44, $i45, $i46;
        double $d0, $d1, $d2, $d3;

        r0 := @this: com.jhlabs.image.Gradient;

        $r1 = r0.<com.jhlabs.image.Gradient: int[] xKnots>;

        $i43 = (int) -1;

        $r1[0] = $i43;

        $r2 = r0.<com.jhlabs.image.Gradient: int[] xKnots>;

        $i0 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $i1 = $i0 - 1;

        $r2[$i1] = 256;

        $r4 = r0.<com.jhlabs.image.Gradient: int[] yKnots>;

        $r3 = r0.<com.jhlabs.image.Gradient: int[] yKnots>;

        $i2 = $r3[1];

        $r4[0] = $i2;

        $r6 = r0.<com.jhlabs.image.Gradient: int[] yKnots>;

        $i3 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $i7 = $i3 - 1;

        $r5 = r0.<com.jhlabs.image.Gradient: int[] yKnots>;

        $i4 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $i5 = $i4 - 2;

        $i6 = $r5[$i5];

        $r6[$i7] = $i6;

        i37 = 1;

     label01:
        $i8 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $i9 = $i8 - 1;

        if i37 >= $i9 goto label16;

        $r7 = r0.<com.jhlabs.image.Gradient: int[] xKnots>;

        $i10 = i37 + 1;

        $i12 = $r7[$i10];

        $r8 = r0.<com.jhlabs.image.Gradient: int[] xKnots>;

        $i11 = $r8[i37];

        $i13 = $i12 - $i11;

        f0 = (float) $i13;

        $r9 = r0.<com.jhlabs.image.Gradient: int[] xKnots>;

        $i14 = i37 + 1;

        i38 = $r9[$i14];

        $i15 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $i16 = $i15 - 2;

        if i37 != $i16 goto label02;

        i38 = i38 + 1;

     label02:
        $r10 = r0.<com.jhlabs.image.Gradient: int[] xKnots>;

        i39 = $r10[i37];

     label03:
        if i39 >= i38 goto label15;

        $r11 = r0.<com.jhlabs.image.Gradient: int[] yKnots>;

        i17 = $r11[i37];

        $r12 = r0.<com.jhlabs.image.Gradient: int[] yKnots>;

        $i18 = i37 + 1;

        i19 = $r12[$i18];

        $i20 = i17 >> 16;

        $i24 = $i20 & 255;

        $i21 = i17 >> 8;

        $i23 = $i21 & 255;

        $i22 = i17 & 255;

        $r13 = staticinvoke <java.awt.Color: float[] RGBtoHSB(int,int,int,float[])>($i24, $i23, $i22, null);

        $i25 = i19 >> 16;

        $i29 = $i25 & 255;

        $i26 = i19 >> 8;

        $i28 = $i26 & 255;

        $i27 = i19 & 255;

        $r14 = staticinvoke <java.awt.Color: float[] RGBtoHSB(int,int,int,float[])>($i29, $i28, $i27, null);

        $r15 = r0.<com.jhlabs.image.Gradient: int[] xKnots>;

        $i30 = $r15[i37];

        $i31 = i39 - $i30;

        $f1 = (float) $i31;

        f15 = $f1 / f0;

        $i32 = virtualinvoke r0.<com.jhlabs.image.Gradient: int getKnotType(int)>(i37);

        $b33 = virtualinvoke r0.<com.jhlabs.image.Gradient: byte getKnotBlend(int)>(i37);

        if i39 < 0 goto label14;

        if i39 > 255 goto label14;

        $i44 = (int) $b33;

        lookupswitch($i44)
        {
            case 16: goto label05;
            case 32: goto label06;
            case 48: goto label07;
            case 64: goto label08;
            case 80: goto label04;
            default: goto label09;
        };

     label04:
        f15 = 0.0F;

        goto label09;

     label05:
        goto label09;

     label06:
        f15 = staticinvoke <com.jhlabs.image.ImageMath: float smoothStep(float,float,float)>(0.15F, 0.85F, f15);

        goto label09;

     label07:
        f16 = f15 - 1.0F;

        $f13 = f16 * f16;

        $f14 = 1.0F - $f13;

        $d2 = (double) $f14;

        $d3 = staticinvoke <java.lang.Math: double sqrt(double)>($d2);

        f15 = (float) $d3;

        goto label09;

     label08:
        $f10 = f15 * f15;

        $f11 = 1.0F - $f10;

        $d0 = (double) $f11;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f12 = (float) $d1;

        f15 = 1.0F - $f12;

     label09:
        tableswitch($i32)
        {
            case 0: goto label10;
            case 1: goto label11;
            case 2: goto label11;
            default: goto label14;
        };

     label10:
        $r16 = r0.<com.jhlabs.image.ArrayColormap: int[] map>;

        $i36 = staticinvoke <com.jhlabs.image.ImageMath: int mixColors(float,int,int)>(f15, i17, i19);

        $r16[i39] = $i36;

        goto label14;

     label11:
        if $i32 != 1 goto label12;

        $f7 = $r14[0];

        $f6 = $r13[0];

        $b35 = $f7 cmpg $f6;

        $i45 = (int) $b35;

        if $i45 > 0 goto label13;

        $f8 = $r14[0];

        $f9 = $f8 + 1.0F;

        $r14[0] = $f9;

        goto label13;

     label12:
        $f3 = $r13[0];

        $f2 = $r14[1];

        $b34 = $f3 cmpg $f2;

        $i46 = (int) $b34;

        if $i46 > 0 goto label13;

        $f4 = $r13[0];

        $f5 = $f4 + 1.0F;

        $r13[0] = $f5;

     label13:
        $f17 = $r13[0];

        $f18 = $r14[0];

        $f19 = staticinvoke <com.jhlabs.image.ImageMath: float lerp(float,float,float)>(f15, $f17, $f18);

        $f20 = $f19 % 6.2831855F;

        $f21 = $r13[1];

        $f22 = $r14[1];

        $f23 = staticinvoke <com.jhlabs.image.ImageMath: float lerp(float,float,float)>(f15, $f21, $f22);

        $f24 = $r13[2];

        $f25 = $r14[2];

        $f26 = staticinvoke <com.jhlabs.image.ImageMath: float lerp(float,float,float)>(f15, $f24, $f25);

        $r17 = r0.<com.jhlabs.image.ArrayColormap: int[] map>;

        $i40 = staticinvoke <java.awt.Color: int HSBtoRGB(float,float,float)>($f20, $f23, $f26);

        $i41 = -16777216 | $i40;

        $r17[i39] = $i41;

     label14:
        i39 = i39 + 1;

        goto label03;

     label15:
        i37 = i37 + 1;

        goto label01;

     label16:
        return;
    }

    private void sortKnots()
    {
        byte[] $r11, $r12, $r13, $r14;
        com.jhlabs.image.Gradient r0;
        byte b6, $b7;
        int[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, i8, i9, i10, i11;

        r0 := @this: com.jhlabs.image.Gradient;

        i8 = 1;

     label1:
        $i0 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $i1 = $i0 - 1;

        if i8 >= $i1 goto label5;

        i9 = 1;

     label2:
        if i9 >= i8 goto label4;

        $r1 = r0.<com.jhlabs.image.Gradient: int[] xKnots>;

        $i3 = $r1[i8];

        $r2 = r0.<com.jhlabs.image.Gradient: int[] xKnots>;

        $i2 = $r2[i9];

        if $i3 >= $i2 goto label3;

        $r3 = r0.<com.jhlabs.image.Gradient: int[] xKnots>;

        i10 = $r3[i8];

        $r5 = r0.<com.jhlabs.image.Gradient: int[] xKnots>;

        $r4 = r0.<com.jhlabs.image.Gradient: int[] xKnots>;

        $i4 = $r4[i9];

        $r5[i8] = $i4;

        $r6 = r0.<com.jhlabs.image.Gradient: int[] xKnots>;

        $r6[i9] = i10;

        $r7 = r0.<com.jhlabs.image.Gradient: int[] yKnots>;

        i11 = $r7[i8];

        $r9 = r0.<com.jhlabs.image.Gradient: int[] yKnots>;

        $r8 = r0.<com.jhlabs.image.Gradient: int[] yKnots>;

        $i5 = $r8[i9];

        $r9[i8] = $i5;

        $r10 = r0.<com.jhlabs.image.Gradient: int[] yKnots>;

        $r10[i9] = i11;

        $r11 = r0.<com.jhlabs.image.Gradient: byte[] knotTypes>;

        b6 = $r11[i8];

        $r13 = r0.<com.jhlabs.image.Gradient: byte[] knotTypes>;

        $r12 = r0.<com.jhlabs.image.Gradient: byte[] knotTypes>;

        $b7 = $r12[i9];

        $r13[i8] = $b7;

        $r14 = r0.<com.jhlabs.image.Gradient: byte[] knotTypes>;

        $r14[i9] = b6;

     label3:
        i9 = i9 + 1;

        goto label2;

     label4:
        i8 = i8 + 1;

        goto label1;

     label5:
        return;
    }

    public void rebuild()
    {
        com.jhlabs.image.Gradient r0;

        r0 := @this: com.jhlabs.image.Gradient;

        specialinvoke r0.<com.jhlabs.image.Gradient: void sortKnots()>();

        specialinvoke r0.<com.jhlabs.image.Gradient: void rebuildGradient()>();

        return;
    }

    public void randomize()
    {
        byte[] $r3, $r10;
        com.jhlabs.image.Gradient r0;
        int[] $r1, $r2, $r4, $r5, $r6, $r7, $r8, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, $i21;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;

        r0 := @this: com.jhlabs.image.Gradient;

        $d0 = staticinvoke <java.lang.Math: double random()>();

        $d1 = 6.0 * $d0;

        $i0 = (int) $d1;

        $i1 = 4 + $i0;

        r0.<com.jhlabs.image.Gradient: int numKnots> = $i1;

        $i2 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $r1 = newarray (int)[$i2];

        r0.<com.jhlabs.image.Gradient: int[] xKnots> = $r1;

        $i3 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $r2 = newarray (int)[$i3];

        r0.<com.jhlabs.image.Gradient: int[] yKnots> = $r2;

        $i4 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $r3 = newarray (byte)[$i4];

        r0.<com.jhlabs.image.Gradient: byte[] knotTypes> = $r3;

        i19 = 0;

     label1:
        $i5 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        if i19 >= $i5 goto label2;

        $r8 = r0.<com.jhlabs.image.Gradient: int[] xKnots>;

        $d2 = staticinvoke <java.lang.Math: double random()>();

        $d3 = 255.0 * $d2;

        $i10 = (int) $d3;

        $r8[i19] = $i10;

        $r9 = r0.<com.jhlabs.image.Gradient: int[] yKnots>;

        $d4 = staticinvoke <java.lang.Math: double random()>();

        $d5 = 255.0 * $d4;

        $i11 = (int) $d5;

        $i12 = $i11 << 16;

        $i13 = -16777216 | $i12;

        $d6 = staticinvoke <java.lang.Math: double random()>();

        $d7 = 255.0 * $d6;

        $i14 = (int) $d7;

        $i15 = $i14 << 8;

        $i16 = $i13 | $i15;

        $d8 = staticinvoke <java.lang.Math: double random()>();

        $d9 = 255.0 * $d8;

        $i17 = (int) $d9;

        $i18 = $i16 | $i17;

        $r9[i19] = $i18;

        $r10 = r0.<com.jhlabs.image.Gradient: byte[] knotTypes>;

        $r10[i19] = 32;

        i19 = i19 + 1;

        goto label1;

     label2:
        $r4 = r0.<com.jhlabs.image.Gradient: int[] xKnots>;

        $i21 = (int) -1;

        $r4[0] = $i21;

        $r5 = r0.<com.jhlabs.image.Gradient: int[] xKnots>;

        $r5[1] = 0;

        $r6 = r0.<com.jhlabs.image.Gradient: int[] xKnots>;

        $i6 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $i7 = $i6 - 2;

        $r6[$i7] = 255;

        $r7 = r0.<com.jhlabs.image.Gradient: int[] xKnots>;

        $i8 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        $i9 = $i8 - 1;

        $r7[$i9] = 256;

        specialinvoke r0.<com.jhlabs.image.Gradient: void sortKnots()>();

        specialinvoke r0.<com.jhlabs.image.Gradient: void rebuildGradient()>();

        return;
    }

    public void mutate(float)
    {
        byte[] $r3;
        com.jhlabs.image.Gradient r0;
        int[] $r1, $r2;
        float f0, $f1, $f2, $f3;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, i18;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;

        r0 := @this: com.jhlabs.image.Gradient;

        f0 := @parameter0: float;

        i15 = 0;

     label1:
        $i0 = r0.<com.jhlabs.image.Gradient: int numKnots>;

        if i15 >= $i0 goto label2;

        $r1 = r0.<com.jhlabs.image.Gradient: int[] yKnots>;

        i1 = $r1[i15];

        $i2 = i1 >> 16;

        i16 = $i2 & 255;

        $i3 = i1 >> 8;

        i17 = $i3 & 255;

        i18 = i1 & 255;

        $d0 = (double) i16;

        $f1 = f0 * 255.0F;

        $d1 = (double) $f1;

        $d2 = staticinvoke <java.lang.Math: double random()>();

        $d3 = $d2 - 0.5;

        $d4 = $d1 * $d3;

        $d5 = $d0 + $d4;

        $i4 = (int) $d5;

        $i5 = staticinvoke <com.jhlabs.image.PixelUtils: int clamp(int)>($i4);

        $d6 = (double) i17;

        $f2 = f0 * 255.0F;

        $d7 = (double) $f2;

        $d8 = staticinvoke <java.lang.Math: double random()>();

        $d9 = $d8 - 0.5;

        $d10 = $d7 * $d9;

        $d11 = $d6 + $d10;

        $i6 = (int) $d11;

        $i7 = staticinvoke <com.jhlabs.image.PixelUtils: int clamp(int)>($i6);

        $d12 = (double) i18;

        $f3 = f0 * 255.0F;

        $d13 = (double) $f3;

        $d14 = staticinvoke <java.lang.Math: double random()>();

        $d15 = $d14 - 0.5;

        $d16 = $d13 * $d15;

        $d17 = $d12 + $d16;

        $i8 = (int) $d17;

        $i9 = staticinvoke <com.jhlabs.image.PixelUtils: int clamp(int)>($i8);

        $r2 = r0.<com.jhlabs.image.Gradient: int[] yKnots>;

        $i10 = $i5 << 16;

        $i12 = -16777216 | $i10;

        $i11 = $i7 << 8;

        $i13 = $i12 | $i11;

        $i14 = $i13 | $i9;

        $r2[i15] = $i14;

        $r3 = r0.<com.jhlabs.image.Gradient: byte[] knotTypes>;

        $r3[i15] = 32;

        i15 = i15 + 1;

        goto label1;

     label2:
        specialinvoke r0.<com.jhlabs.image.Gradient: void sortKnots()>();

        specialinvoke r0.<com.jhlabs.image.Gradient: void rebuildGradient()>();

        return;
    }

    public static com.jhlabs.image.Gradient randomGradient()
    {
        com.jhlabs.image.Gradient $r0;

        $r0 = new com.jhlabs.image.Gradient;

        specialinvoke $r0.<com.jhlabs.image.Gradient: void <init>()>();

        virtualinvoke $r0.<com.jhlabs.image.Gradient: void randomize()>();

        return $r0;
    }

    public static void <clinit>()
    {
        <com.jhlabs.image.Gradient: int BLEND_MASK> = 112;

        <com.jhlabs.image.Gradient: int COLOR_MASK> = 3;

        <com.jhlabs.image.Gradient: int CONSTANT> = 80;

        <com.jhlabs.image.Gradient: int CIRCLE_DOWN> = 64;

        <com.jhlabs.image.Gradient: int CIRCLE_UP> = 48;

        <com.jhlabs.image.Gradient: int SPLINE> = 32;

        <com.jhlabs.image.Gradient: int LINEAR> = 16;

        <com.jhlabs.image.Gradient: int HUE_CCW> = 2;

        <com.jhlabs.image.Gradient: int HUE_CW> = 1;

        <com.jhlabs.image.Gradient: int RGB> = 0;

        <com.jhlabs.image.Gradient: long serialVersionUID> = 1479681703781917357L;

        return;
    }
}
