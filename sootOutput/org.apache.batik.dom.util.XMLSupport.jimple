public final class org.apache.batik.dom.util.XMLSupport extends java.lang.Object implements org.apache.batik.util.XMLConstants
{

    private void <init>()
    {
        org.apache.batik.dom.util.XMLSupport r0;

        r0 := @this: org.apache.batik.dom.util.XMLSupport;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getXMLLang(org.w3c.dom.Element)
    {
        org.w3c.dom.Attr $r1, $r3;
        short $s0;
        org.w3c.dom.Element r0, $r2;
        org.w3c.dom.Node r6;
        java.lang.String $r4, $r5;

        r0 := @parameter0: org.w3c.dom.Element;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)>("http://www.w3.org/XML/1998/namespace", "lang");

        if $r1 == null goto label1;

        $r5 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        return $r5;

     label1:
        r6 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        goto label4;

     label2:
        $s0 = interfaceinvoke r6.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 != 1 goto label3;

        $r2 = (org.w3c.dom.Element) r6;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Element: org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)>("http://www.w3.org/XML/1998/namespace", "lang");

        if $r3 == null goto label3;

        $r4 = interfaceinvoke $r3.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        return $r4;

     label3:
        r6 = interfaceinvoke r6.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

     label4:
        if r6 != null goto label2;

        return "en";
    }

    public static java.lang.String getXMLSpace(org.w3c.dom.Element)
    {
        org.w3c.dom.Attr $r1, $r3;
        short $s0;
        org.w3c.dom.Element r0, $r2;
        org.w3c.dom.Node r6;
        java.lang.String $r4, $r5;

        r0 := @parameter0: org.w3c.dom.Element;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)>("http://www.w3.org/XML/1998/namespace", "space");

        if $r1 == null goto label1;

        $r5 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        return $r5;

     label1:
        r6 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        goto label4;

     label2:
        $s0 = interfaceinvoke r6.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 != 1 goto label3;

        $r2 = (org.w3c.dom.Element) r6;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Element: org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)>("http://www.w3.org/XML/1998/namespace", "space");

        if $r3 == null goto label3;

        $r4 = interfaceinvoke $r3.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        return $r4;

     label3:
        r6 = interfaceinvoke r6.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

     label4:
        if r6 != null goto label2;

        return "default";
    }

    public static java.lang.String defaultXMLSpace(java.lang.String)
    {
        char $c1;
        java.lang.StringBuffer $r4;
        int $i0, i2, $i3;
        java.lang.String r0, $r2, $r3;
        boolean z0;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(int)>($i0);

        z0 = 0;

        i2 = 0;

        goto label6;

     label1:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $i3 = (int) $c1;

        lookupswitch($i3)
        {
            case 9: goto label3;
            case 10: goto label2;
            case 13: goto label2;
            case 32: goto label3;
            default: goto label4;
        };

     label2:
        z0 = 0;

        goto label5;

     label3:
        if z0 != 0 goto label5;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        z0 = 1;

        goto label5;

     label4:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        z0 = 0;

     label5:
        i2 = i2 + 1;

     label6:
        if i2 < $i0 goto label1;

        $r2 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        return $r3;
    }

    public static java.lang.String preserveXMLSpace(java.lang.String)
    {
        char $c1;
        java.lang.StringBuffer $r3;
        int $i0, i2, $i3, $i4;
        java.lang.String r0, $r2;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(int)>($i0);

        i2 = 0;

        goto label5;

     label1:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $i4 = (int) $c1;

        tableswitch($i4)
        {
            case 9: goto label2;
            case 10: goto label2;
            case 11: goto label3;
            case 12: goto label3;
            case 13: goto label2;
            default: goto label3;
        };

     label2:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        goto label4;

     label3:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

     label4:
        i2 = i2 + 1;

     label5:
        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if i2 < $i3 goto label1;

        $r2 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }
}
