class org.apache.cxf.jaxrs.client.JaxrsClientCallback extends org.apache.cxf.endpoint.ClientCallback
{
    private final javax.ws.rs.client.InvocationCallback handler;
    private final java.lang.reflect.Type outType;
    private final java.lang.Class responseClass;

    public void <init>(javax.ws.rs.client.InvocationCallback, java.lang.Class, java.lang.reflect.Type)
    {
        java.lang.reflect.Type r2;
        javax.ws.rs.client.InvocationCallback r1;
        java.lang.Class r3;
        org.apache.cxf.jaxrs.client.JaxrsClientCallback r0;

        r0 := @this: org.apache.cxf.jaxrs.client.JaxrsClientCallback;

        r1 := @parameter0: javax.ws.rs.client.InvocationCallback;

        r3 := @parameter1: java.lang.Class;

        r2 := @parameter2: java.lang.reflect.Type;

        specialinvoke r0.<org.apache.cxf.endpoint.ClientCallback: void <init>()>();

        r0.<org.apache.cxf.jaxrs.client.JaxrsClientCallback: javax.ws.rs.client.InvocationCallback handler> = r1;

        r0.<org.apache.cxf.jaxrs.client.JaxrsClientCallback: java.lang.reflect.Type outType> = r2;

        r0.<org.apache.cxf.jaxrs.client.JaxrsClientCallback: java.lang.Class responseClass> = r3;

        return;
    }

    public javax.ws.rs.client.InvocationCallback getHandler()
    {
        javax.ws.rs.client.InvocationCallback $r1;
        org.apache.cxf.jaxrs.client.JaxrsClientCallback r0;

        r0 := @this: org.apache.cxf.jaxrs.client.JaxrsClientCallback;

        $r1 = r0.<org.apache.cxf.jaxrs.client.JaxrsClientCallback: javax.ws.rs.client.InvocationCallback handler>;

        return $r1;
    }

    public java.lang.reflect.Type getOutGenericType()
    {
        org.apache.cxf.jaxrs.client.JaxrsClientCallback r0;
        java.lang.reflect.Type $r1;

        r0 := @this: org.apache.cxf.jaxrs.client.JaxrsClientCallback;

        $r1 = r0.<org.apache.cxf.jaxrs.client.JaxrsClientCallback: java.lang.reflect.Type outType>;

        return $r1;
    }

    public java.lang.Class getResponseClass()
    {
        java.lang.Class $r1;
        org.apache.cxf.jaxrs.client.JaxrsClientCallback r0;

        r0 := @this: org.apache.cxf.jaxrs.client.JaxrsClientCallback;

        $r1 = r0.<org.apache.cxf.jaxrs.client.JaxrsClientCallback: java.lang.Class responseClass>;

        return $r1;
    }

    public boolean cancel(boolean)
    {
        java.util.concurrent.CancellationException $r3;
        javax.ws.rs.client.InvocationCallback $r1, $r4;
        org.apache.cxf.jaxrs.client.JaxrsClientCallback r0;
        javax.ws.rs.client.ClientException $r2;
        boolean z0, $z1;

        r0 := @this: org.apache.cxf.jaxrs.client.JaxrsClientCallback;

        z0 := @parameter0: boolean;

        $z1 = specialinvoke r0.<org.apache.cxf.endpoint.ClientCallback: boolean cancel(boolean)>(z0);

        if $z1 == 0 goto label1;

        $r1 = r0.<org.apache.cxf.jaxrs.client.JaxrsClientCallback: javax.ws.rs.client.InvocationCallback handler>;

        if $r1 == null goto label1;

        $r4 = r0.<org.apache.cxf.jaxrs.client.JaxrsClientCallback: javax.ws.rs.client.InvocationCallback handler>;

        $r2 = new javax.ws.rs.client.ClientException;

        $r3 = new java.util.concurrent.CancellationException;

        specialinvoke $r3.<java.util.concurrent.CancellationException: void <init>()>();

        specialinvoke $r2.<javax.ws.rs.client.ClientException: void <init>(java.lang.Throwable)>($r3);

        interfaceinvoke $r4.<javax.ws.rs.client.InvocationCallback: void failed(javax.ws.rs.client.ClientException)>($r2);

     label1:
        return $z1;
    }

    public java.util.concurrent.Future createFuture()
    {
        org.apache.cxf.jaxrs.client.JaxrsClientCallback$JaxrsResponseCallback $r0;
        org.apache.cxf.jaxrs.client.JaxrsClientCallback r1;

        r1 := @this: org.apache.cxf.jaxrs.client.JaxrsClientCallback;

        $r0 = new org.apache.cxf.jaxrs.client.JaxrsClientCallback$JaxrsResponseCallback;

        specialinvoke $r0.<org.apache.cxf.jaxrs.client.JaxrsClientCallback$JaxrsResponseCallback: void <init>(org.apache.cxf.jaxrs.client.JaxrsClientCallback)>(r1);

        return $r0;
    }

    public void handleResponse(java.util.Map, java.lang.Object[])
    {
        java.lang.Throwable $r6;
        java.lang.Object[] r2;
        java.util.Map r1;
        javax.ws.rs.client.InvocationCallback $r3, $r5;
        java.lang.Object $r4;
        org.apache.cxf.jaxrs.client.JaxrsClientCallback r0;

        r0 := @this: org.apache.cxf.jaxrs.client.JaxrsClientCallback;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.lang.Object[];

        r0.<org.apache.cxf.jaxrs.client.JaxrsClientCallback: java.util.Map context> = r1;

        r0.<org.apache.cxf.jaxrs.client.JaxrsClientCallback: java.lang.Object[] result> = r2;

        $r3 = r0.<org.apache.cxf.jaxrs.client.JaxrsClientCallback: javax.ws.rs.client.InvocationCallback handler>;

        if $r3 == null goto label1;

        $r5 = r0.<org.apache.cxf.jaxrs.client.JaxrsClientCallback: javax.ws.rs.client.InvocationCallback handler>;

        $r4 = r2[0];

        interfaceinvoke $r5.<javax.ws.rs.client.InvocationCallback: void completed(java.lang.Object)>($r4);

     label1:
        r0.<org.apache.cxf.jaxrs.client.JaxrsClientCallback: boolean done> = 1;

        entermonitor r0;

     label2:
        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        exitmonitor r0;

     label5:
        throw $r6;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void handleException(java.util.Map, java.lang.Throwable)
    {
        java.lang.Throwable r2, $r5, $r7;
        javax.ws.rs.client.ClientException $r4;
        java.util.Map r1;
        javax.ws.rs.client.InvocationCallback $r3, $r6;
        org.apache.cxf.jaxrs.client.JaxrsClientCallback r0;

        r0 := @this: org.apache.cxf.jaxrs.client.JaxrsClientCallback;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.lang.Throwable;

        r0.<org.apache.cxf.jaxrs.client.JaxrsClientCallback: java.util.Map context> = r1;

        r0.<org.apache.cxf.jaxrs.client.JaxrsClientCallback: java.lang.Throwable exception> = r2;

        $r3 = r0.<org.apache.cxf.jaxrs.client.JaxrsClientCallback: javax.ws.rs.client.InvocationCallback handler>;

        if $r3 == null goto label1;

        $r6 = r0.<org.apache.cxf.jaxrs.client.JaxrsClientCallback: javax.ws.rs.client.InvocationCallback handler>;

        $r4 = new javax.ws.rs.client.ClientException;

        $r5 = r0.<org.apache.cxf.jaxrs.client.JaxrsClientCallback: java.lang.Throwable exception>;

        specialinvoke $r4.<javax.ws.rs.client.ClientException: void <init>(java.lang.Throwable)>($r5);

        interfaceinvoke $r6.<javax.ws.rs.client.InvocationCallback: void failed(javax.ws.rs.client.ClientException)>($r4);

     label1:
        r0.<org.apache.cxf.jaxrs.client.JaxrsClientCallback: boolean done> = 1;

        entermonitor r0;

     label2:
        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        exitmonitor r0;

     label5:
        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    static javax.ws.rs.client.InvocationCallback access$000(org.apache.cxf.jaxrs.client.JaxrsClientCallback)
    {
        javax.ws.rs.client.InvocationCallback $r1;
        org.apache.cxf.jaxrs.client.JaxrsClientCallback r0;

        r0 := @parameter0: org.apache.cxf.jaxrs.client.JaxrsClientCallback;

        $r1 = r0.<org.apache.cxf.jaxrs.client.JaxrsClientCallback: javax.ws.rs.client.InvocationCallback handler>;

        return $r1;
    }
}
