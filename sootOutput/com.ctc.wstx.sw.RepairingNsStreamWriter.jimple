public class com.ctc.wstx.sw.RepairingNsStreamWriter extends com.ctc.wstx.sw.BaseNsStreamWriter
{
    final java.lang.String mAutomaticNsPrefix;
    int[] mAutoNsSeq;
    java.lang.String mSuggestedDefNs;
    java.util.HashMap mSuggestedPrefixes;

    public void <init>(com.ctc.wstx.sw.XmlWriter, java.lang.String, com.ctc.wstx.api.WriterConfig)
    {
        com.ctc.wstx.sw.XmlWriter r1;
        com.ctc.wstx.api.WriterConfig r3;
        java.lang.String r2, $r4;
        com.ctc.wstx.sw.RepairingNsStreamWriter r0;

        r0 := @this: com.ctc.wstx.sw.RepairingNsStreamWriter;

        r1 := @parameter0: com.ctc.wstx.sw.XmlWriter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.ctc.wstx.api.WriterConfig;

        specialinvoke r0.<com.ctc.wstx.sw.BaseNsStreamWriter: void <init>(com.ctc.wstx.sw.XmlWriter,java.lang.String,com.ctc.wstx.api.WriterConfig,boolean)>(r1, r2, r3, 1);

        r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: int[] mAutoNsSeq> = null;

        r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: java.lang.String mSuggestedDefNs> = null;

        r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: java.util.HashMap mSuggestedPrefixes> = null;

        $r4 = virtualinvoke r3.<com.ctc.wstx.api.WriterConfig: java.lang.String getAutomaticNsPrefix()>();

        r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: java.lang.String mAutomaticNsPrefix> = $r4;

        return;
    }

    public void writeAttribute(java.lang.String, java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.SimpleOutputElement $r3;
        java.lang.String r1, r2, $r4, r5, $r6;
        com.ctc.wstx.sw.RepairingNsStreamWriter r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.sw.RepairingNsStreamWriter;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        $z0 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: boolean mStartElementOpen>;

        if $z0 != 0 goto label1;

        $r6 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String WERR_ATTR_NO_ELEM>;

        staticinvoke <com.ctc.wstx.sw.RepairingNsStreamWriter: void throwOutputError(java.lang.String)>($r6);

     label1:
        $r3 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem>;

        $r4 = virtualinvoke r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: java.lang.String findOrCreateAttrPrefix(java.lang.String,java.lang.String,com.ctc.wstx.sw.SimpleOutputElement)>(null, r2, $r3);

        virtualinvoke r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: void doWriteAttr(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, $r4, r5);

        return;
    }

    public void writeAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.SimpleOutputElement $r4;
        java.lang.String r1, r2, r3, $r5, r6, $r7;
        com.ctc.wstx.sw.RepairingNsStreamWriter r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.sw.RepairingNsStreamWriter;

        r3 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r6 := @parameter3: java.lang.String;

        $z0 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: boolean mStartElementOpen>;

        if $z0 != 0 goto label1;

        $r7 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String WERR_ATTR_NO_ELEM>;

        staticinvoke <com.ctc.wstx.sw.RepairingNsStreamWriter: void throwOutputError(java.lang.String)>($r7);

     label1:
        $r4 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem>;

        $r5 = virtualinvoke r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: java.lang.String findOrCreateAttrPrefix(java.lang.String,java.lang.String,com.ctc.wstx.sw.SimpleOutputElement)>(r3, r2, $r4);

        virtualinvoke r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: void doWriteAttr(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, $r5, r6);

        return;
    }

    public void writeDefaultNamespace(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.SimpleOutputElement $r1, $r4;
        int $i0;
        java.lang.String $r2, r3;
        com.ctc.wstx.sw.RepairingNsStreamWriter r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.sw.RepairingNsStreamWriter;

        r3 := @parameter0: java.lang.String;

        $z0 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: boolean mStartElementOpen>;

        if $z0 != 0 goto label1;

        staticinvoke <com.ctc.wstx.sw.RepairingNsStreamWriter: void throwOutputError(java.lang.String)>("Trying to write a namespace declaration when there is no open start element.");

     label1:
        $r1 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem>;

        $r2 = virtualinvoke $r1.<com.ctc.wstx.sw.SimpleOutputElement: java.lang.String getPrefix()>();

        if $r2 == null goto label2;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        $r4 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem>;

        virtualinvoke $r4.<com.ctc.wstx.sw.SimpleOutputElement: void setDefaultNsUri(java.lang.String)>(r3);

        virtualinvoke r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: void doWriteDefaultNs(java.lang.String)>(r3);

     label2:
        return;
    }

    public void writeNamespace(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.SimpleOutputElement $r3, $r4;
        int $i0, $i1;
        java.lang.String r0, r2;
        com.ctc.wstx.sw.RepairingNsStreamWriter r1;
        boolean $z0;

        r1 := @this: com.ctc.wstx.sw.RepairingNsStreamWriter;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        virtualinvoke r1.<com.ctc.wstx.sw.RepairingNsStreamWriter: void writeDefaultNamespace(java.lang.String)>(r2);

        return;

     label2:
        $z0 = r1.<com.ctc.wstx.sw.RepairingNsStreamWriter: boolean mStartElementOpen>;

        if $z0 != 0 goto label3;

        staticinvoke <com.ctc.wstx.sw.RepairingNsStreamWriter: void throwOutputError(java.lang.String)>("Trying to write a namespace declaration when there is no open start element.");

     label3:
        $r3 = r1.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem>;

        $i1 = virtualinvoke $r3.<com.ctc.wstx.sw.SimpleOutputElement: int isPrefixValid(java.lang.String,java.lang.String,boolean)>(r0, r2, 1);

        if $i1 != 0 goto label4;

        $r4 = r1.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem>;

        virtualinvoke $r4.<com.ctc.wstx.sw.SimpleOutputElement: void addPrefix(java.lang.String,java.lang.String)>(r0, r2);

        virtualinvoke r1.<com.ctc.wstx.sw.RepairingNsStreamWriter: void doWriteNamespace(java.lang.String,java.lang.String)>(r0, r2);

     label4:
        return;
    }

    public void setDefaultNamespace(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        int $i0;
        java.lang.String r1, $r2;
        com.ctc.wstx.sw.RepairingNsStreamWriter r0;

        r0 := @this: com.ctc.wstx.sw.RepairingNsStreamWriter;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r2 = null;

        goto label3;

     label2:
        $r2 = r1;

     label3:
        r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: java.lang.String mSuggestedDefNs> = $r2;

        return;
    }

    public void doSetPrefix(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        java.util.HashMap $r2, $r3, $r11, $r12, $r13;
        int $i0;
        java.lang.String r0, r9, r10;
        com.ctc.wstx.sw.RepairingNsStreamWriter r1;
        boolean $z0, $z1;
        java.util.Map$Entry r7;
        java.util.Iterator $r5;
        java.util.Set $r4;
        java.lang.Object $r6, $r8;

        r1 := @this: com.ctc.wstx.sw.RepairingNsStreamWriter;

        r10 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label5;

     label1:
        $r2 = r1.<com.ctc.wstx.sw.RepairingNsStreamWriter: java.util.HashMap mSuggestedPrefixes>;

        if $r2 == null goto label7;

        $r3 = r1.<com.ctc.wstx.sw.RepairingNsStreamWriter: java.util.HashMap mSuggestedPrefixes>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        r9 = (java.lang.String) $r8;

        $z1 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z1 == 0 goto label3;

        interfaceinvoke $r5.<java.util.Iterator: void remove()>();

     label3:
        goto label2;

     label4:
        goto label7;

     label5:
        $r11 = r1.<com.ctc.wstx.sw.RepairingNsStreamWriter: java.util.HashMap mSuggestedPrefixes>;

        if $r11 != null goto label6;

        $r13 = new java.util.HashMap;

        specialinvoke $r13.<java.util.HashMap: void <init>(int)>(16);

        r1.<com.ctc.wstx.sw.RepairingNsStreamWriter: java.util.HashMap mSuggestedPrefixes> = $r13;

     label6:
        $r12 = r1.<com.ctc.wstx.sw.RepairingNsStreamWriter: java.util.HashMap mSuggestedPrefixes>;

        virtualinvoke $r12.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r10);

     label7:
        return;
    }

    public void writeStartElement(javax.xml.stream.events.StartElement) throws javax.xml.stream.XMLStreamException
    {
        java.util.Iterator $r6;
        javax.xml.stream.events.Attribute r8;
        java.lang.Object $r7;
        javax.xml.stream.events.StartElement r0;
        javax.xml.namespace.QName $r1, $r9;
        java.lang.String $r3, $r4, $r5, $r10, $r11, $r12, $r13;
        com.ctc.wstx.sw.RepairingNsStreamWriter r2;
        boolean $z0;

        r2 := @this: com.ctc.wstx.sw.RepairingNsStreamWriter;

        r0 := @parameter0: javax.xml.stream.events.StartElement;

        $r1 = interfaceinvoke r0.<javax.xml.stream.events.StartElement: javax.xml.namespace.QName getName()>();

        $r3 = virtualinvoke $r1.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        $r4 = virtualinvoke $r1.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r5 = virtualinvoke $r1.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        virtualinvoke r2.<com.ctc.wstx.sw.RepairingNsStreamWriter: void writeStartElement(java.lang.String,java.lang.String,java.lang.String)>($r3, $r4, $r5);

        $r6 = interfaceinvoke r0.<javax.xml.stream.events.StartElement: java.util.Iterator getAttributes()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (javax.xml.stream.events.Attribute) $r7;

        $r9 = interfaceinvoke r8.<javax.xml.stream.events.Attribute: javax.xml.namespace.QName getName()>();

        $r10 = virtualinvoke $r9.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        $r11 = virtualinvoke $r9.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r12 = virtualinvoke $r9.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r13 = interfaceinvoke r8.<javax.xml.stream.events.Attribute: java.lang.String getValue()>();

        virtualinvoke r2.<com.ctc.wstx.sw.RepairingNsStreamWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r10, $r11, $r12, $r13);

        goto label1;

     label2:
        return;
    }

    protected void writeStartOrEmpty(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.SimpleOutputElement $r3, $r5, $r6, $r7, $r8, $r11, $r12, $r13, r17, $r18, $r19;
        int $i0, $i1, $i2;
        java.lang.String r1, r2, $r4, $r9;
        com.ctc.wstx.sw.RepairingNsStreamWriter r0;
        org.codehaus.stax2.validation.XMLValidator $r10, $r14, $r15, $r16;

        r0 := @this: com.ctc.wstx.sw.RepairingNsStreamWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: void checkStartElement(java.lang.String,java.lang.String)>(r1, "");

        $r3 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem>;

        $r4 = virtualinvoke r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: java.lang.String findElemPrefix(java.lang.String,com.ctc.wstx.sw.SimpleOutputElement)>(r2, $r3);

        $r5 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mOutputElemPool>;

        if $r5 == null goto label1;

        r17 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mOutputElemPool>;

        $r18 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem>;

        $r19 = virtualinvoke r17.<com.ctc.wstx.sw.SimpleOutputElement: com.ctc.wstx.sw.SimpleOutputElement reuseAsChild(com.ctc.wstx.sw.SimpleOutputElement,java.lang.String,java.lang.String,java.lang.String)>($r18, $r4, r1, r2);

        r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mOutputElemPool> = $r19;

        $i1 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: int mPoolSize>;

        $i2 = $i1 - 1;

        r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: int mPoolSize> = $i2;

        r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem> = r17;

        goto label2;

     label1:
        $r6 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem>;

        $r7 = virtualinvoke $r6.<com.ctc.wstx.sw.SimpleOutputElement: com.ctc.wstx.sw.SimpleOutputElement createChild(java.lang.String,java.lang.String,java.lang.String)>($r4, r1, r2);

        r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem> = $r7;

     label2:
        if $r4 == null goto label4;

        $r15 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: org.codehaus.stax2.validation.XMLValidator mValidator>;

        if $r15 == null goto label3;

        $r16 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: org.codehaus.stax2.validation.XMLValidator mValidator>;

        virtualinvoke $r16.<org.codehaus.stax2.validation.XMLValidator: void validateElementStart(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, $r4);

     label3:
        virtualinvoke r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: void doWriteStartTag(java.lang.String,java.lang.String)>($r4, r1);

        goto label8;

     label4:
        $r8 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem>;

        $r9 = virtualinvoke r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: java.lang.String generateElemPrefix(java.lang.String,java.lang.String,com.ctc.wstx.sw.SimpleOutputElement)>(null, r2, $r8);

        $r10 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: org.codehaus.stax2.validation.XMLValidator mValidator>;

        if $r10 == null goto label5;

        $r14 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: org.codehaus.stax2.validation.XMLValidator mValidator>;

        virtualinvoke $r14.<org.codehaus.stax2.validation.XMLValidator: void validateElementStart(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, $r9);

     label5:
        $r11 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem>;

        virtualinvoke $r11.<com.ctc.wstx.sw.SimpleOutputElement: void setPrefix(java.lang.String)>($r9);

        virtualinvoke r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: void doWriteStartTag(java.lang.String,java.lang.String)>($r9, r1);

        if $r9 == null goto label6;

        $i0 = virtualinvoke $r9.<java.lang.String: int length()>();

        if $i0 != 0 goto label7;

     label6:
        $r12 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem>;

        virtualinvoke $r12.<com.ctc.wstx.sw.SimpleOutputElement: void setDefaultNsUri(java.lang.String)>(r2);

        virtualinvoke r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: void doWriteDefaultNs(java.lang.String)>(r2);

        goto label8;

     label7:
        $r13 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem>;

        virtualinvoke $r13.<com.ctc.wstx.sw.SimpleOutputElement: void addPrefix(java.lang.String,java.lang.String)>($r9, r2);

        virtualinvoke r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: void doWriteNamespace(java.lang.String,java.lang.String)>($r9, r2);

     label8:
        return;
    }

    protected void writeStartOrEmpty(java.lang.String, java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.SimpleOutputElement $r3, $r5, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r18, $r19, $r20, $r21, $r22, r25, r26;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String r1, r2, $r4, $r6, r24;
        com.ctc.wstx.sw.RepairingNsStreamWriter r0;
        org.codehaus.stax2.validation.XMLValidator $r7, $r16, $r17, $r23;

        r0 := @this: com.ctc.wstx.sw.RepairingNsStreamWriter;

        r24 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: void checkStartElement(java.lang.String,java.lang.String)>(r1, r24);

        $r3 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem>;

        $r4 = specialinvoke r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: java.lang.String validateElemPrefix(java.lang.String,java.lang.String,com.ctc.wstx.sw.SimpleOutputElement)>(r24, r2, $r3);

        if $r4 == null goto label04;

        $r17 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: org.codehaus.stax2.validation.XMLValidator mValidator>;

        if $r17 == null goto label01;

        $r23 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: org.codehaus.stax2.validation.XMLValidator mValidator>;

        virtualinvoke $r23.<org.codehaus.stax2.validation.XMLValidator: void validateElementStart(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, $r4);

     label01:
        $r18 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mOutputElemPool>;

        if $r18 == null goto label02;

        r25 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mOutputElemPool>;

        $r21 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem>;

        $r22 = virtualinvoke r25.<com.ctc.wstx.sw.SimpleOutputElement: com.ctc.wstx.sw.SimpleOutputElement reuseAsChild(com.ctc.wstx.sw.SimpleOutputElement,java.lang.String,java.lang.String,java.lang.String)>($r21, $r4, r1, r2);

        r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mOutputElemPool> = $r22;

        $i3 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: int mPoolSize>;

        $i4 = $i3 - 1;

        r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: int mPoolSize> = $i4;

        r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem> = r25;

        goto label03;

     label02:
        $r19 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem>;

        $r20 = virtualinvoke $r19.<com.ctc.wstx.sw.SimpleOutputElement: com.ctc.wstx.sw.SimpleOutputElement createChild(java.lang.String,java.lang.String,java.lang.String)>($r4, r1, r2);

        r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem> = $r20;

     label03:
        virtualinvoke r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: void doWriteStartTag(java.lang.String,java.lang.String)>($r4, r1);

        goto label11;

     label04:
        if r24 != null goto label05;

        r24 = "";

     label05:
        $r5 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem>;

        $r6 = virtualinvoke r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: java.lang.String generateElemPrefix(java.lang.String,java.lang.String,com.ctc.wstx.sw.SimpleOutputElement)>(r24, r2, $r5);

        $r7 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: org.codehaus.stax2.validation.XMLValidator mValidator>;

        if $r7 == null goto label06;

        $r16 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: org.codehaus.stax2.validation.XMLValidator mValidator>;

        virtualinvoke $r16.<org.codehaus.stax2.validation.XMLValidator: void validateElementStart(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, $r6);

     label06:
        $r8 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mOutputElemPool>;

        if $r8 == null goto label07;

        r26 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mOutputElemPool>;

        $r14 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem>;

        $r15 = virtualinvoke r26.<com.ctc.wstx.sw.SimpleOutputElement: com.ctc.wstx.sw.SimpleOutputElement reuseAsChild(com.ctc.wstx.sw.SimpleOutputElement,java.lang.String,java.lang.String,java.lang.String)>($r14, $r6, r1, r2);

        r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mOutputElemPool> = $r15;

        $i1 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: int mPoolSize>;

        $i2 = $i1 - 1;

        r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: int mPoolSize> = $i2;

        r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem> = r26;

        goto label08;

     label07:
        $r9 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem>;

        $r10 = virtualinvoke $r9.<com.ctc.wstx.sw.SimpleOutputElement: com.ctc.wstx.sw.SimpleOutputElement createChild(java.lang.String,java.lang.String,java.lang.String)>($r6, r1, r2);

        r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem> = $r10;

     label08:
        $r11 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem>;

        virtualinvoke $r11.<com.ctc.wstx.sw.SimpleOutputElement: void setPrefix(java.lang.String)>($r6);

        virtualinvoke r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: void doWriteStartTag(java.lang.String,java.lang.String)>($r6, r1);

        if $r6 == null goto label09;

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i0 != 0 goto label10;

     label09:
        $r12 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem>;

        virtualinvoke $r12.<com.ctc.wstx.sw.SimpleOutputElement: void setDefaultNsUri(java.lang.String)>(r2);

        virtualinvoke r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: void doWriteDefaultNs(java.lang.String)>(r2);

        goto label11;

     label10:
        $r13 = r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem>;

        virtualinvoke $r13.<com.ctc.wstx.sw.SimpleOutputElement: void addPrefix(java.lang.String,java.lang.String)>($r6, r2);

        virtualinvoke r0.<com.ctc.wstx.sw.RepairingNsStreamWriter: void doWriteNamespace(java.lang.String,java.lang.String)>($r6, r2);

     label11:
        return;
    }

    public final void copyStartElement(com.ctc.wstx.sr.InputElementStack, com.ctc.wstx.sr.AttributeCollector) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.XmlWriter $r8, $r11;
        com.ctc.wstx.sw.SimpleOutputElement $r14;
        com.ctc.wstx.sr.InputElementStack r0;
        int $i0, i1, $i2, $i3, i4, $i5, i6;
        java.lang.String $r1, $r2, $r4, $r6, $r7, $r9, $r10, $r12, $r13, $r16, $r17, r18;
        com.ctc.wstx.sw.RepairingNsStreamWriter r3;
        boolean $z0;
        com.ctc.wstx.sr.AttributeCollector r5, $r15;

        r3 := @this: com.ctc.wstx.sw.RepairingNsStreamWriter;

        r0 := @parameter0: com.ctc.wstx.sr.InputElementStack;

        r5 := @parameter1: com.ctc.wstx.sr.AttributeCollector;

        $r1 = virtualinvoke r0.<com.ctc.wstx.sr.InputElementStack: java.lang.String getPrefix()>();

        $r2 = virtualinvoke r0.<com.ctc.wstx.sr.InputElementStack: java.lang.String getNsURI()>();

        $r4 = virtualinvoke r0.<com.ctc.wstx.sr.InputElementStack: java.lang.String getLocalName()>();

        virtualinvoke r3.<com.ctc.wstx.sw.RepairingNsStreamWriter: void writeStartElement(java.lang.String,java.lang.String,java.lang.String)>($r1, $r4, $r2);

        $i0 = virtualinvoke r0.<com.ctc.wstx.sr.InputElementStack: int getCurrentNsCount()>();

        if $i0 <= 0 goto label02;

        i4 = 0;

     label01:
        if i4 >= $i0 goto label02;

        $r16 = virtualinvoke r0.<com.ctc.wstx.sr.InputElementStack: java.lang.String getLocalNsPrefix(int)>(i4);

        $r17 = virtualinvoke r0.<com.ctc.wstx.sr.InputElementStack: java.lang.String getLocalNsURI(int)>(i4);

        virtualinvoke r3.<com.ctc.wstx.sw.RepairingNsStreamWriter: void writeNamespace(java.lang.String,java.lang.String)>($r16, $r17);

        i4 = i4 + 1;

        goto label01;

     label02:
        $r15 = r3.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sr.AttributeCollector mAttrCollector>;

        $z0 = r3.<com.ctc.wstx.sw.RepairingNsStreamWriter: boolean mCfgCopyDefaultAttrs>;

        if $z0 == 0 goto label03;

        $i5 = virtualinvoke $r15.<com.ctc.wstx.sr.AttributeCollector: int getCount()>();

        goto label04;

     label03:
        $i5 = virtualinvoke $r15.<com.ctc.wstx.sr.AttributeCollector: int getSpecifiedCount()>();

     label04:
        i1 = $i5;

        if $i5 <= 0 goto label11;

        i6 = 0;

     label05:
        if i6 >= i1 goto label11;

        $r6 = virtualinvoke r5.<com.ctc.wstx.sr.AttributeCollector: java.lang.String getURI(int)>(i6);

        $r7 = virtualinvoke r5.<com.ctc.wstx.sr.AttributeCollector: java.lang.String getPrefix(int)>(i6);

        r18 = $r7;

        if $r7 == null goto label07;

        $i3 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i3 != 0 goto label06;

        goto label07;

     label06:
        $r14 = r3.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem>;

        r18 = virtualinvoke r3.<com.ctc.wstx.sw.RepairingNsStreamWriter: java.lang.String findOrCreateAttrPrefix(java.lang.String,java.lang.String,com.ctc.wstx.sw.SimpleOutputElement)>($r7, $r6, $r14);

     label07:
        if r18 == null goto label08;

        $i2 = virtualinvoke r18.<java.lang.String: int length()>();

        if $i2 != 0 goto label09;

     label08:
        $r8 = r3.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.XmlWriter mWriter>;

        $r9 = virtualinvoke r5.<com.ctc.wstx.sr.AttributeCollector: java.lang.String getLocalName(int)>(i6);

        $r10 = virtualinvoke r5.<com.ctc.wstx.sr.AttributeCollector: java.lang.String getValue(int)>(i6);

        virtualinvoke $r8.<com.ctc.wstx.sw.XmlWriter: void writeAttribute(java.lang.String,java.lang.String)>($r9, $r10);

        goto label10;

     label09:
        $r11 = r3.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.XmlWriter mWriter>;

        $r12 = virtualinvoke r5.<com.ctc.wstx.sr.AttributeCollector: java.lang.String getLocalName(int)>(i6);

        $r13 = virtualinvoke r5.<com.ctc.wstx.sr.AttributeCollector: java.lang.String getValue(int)>(i6);

        virtualinvoke $r11.<com.ctc.wstx.sw.XmlWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String)>(r18, $r12, $r13);

     label10:
        i6 = i6 + 1;

        goto label05;

     label11:
        return;
    }

    protected final java.lang.String findElemPrefix(java.lang.String, com.ctc.wstx.sw.SimpleOutputElement) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.SimpleOutputElement r1, $r4;
        int $i0, $i1;
        java.lang.String r0, $r2, $r5;
        com.ctc.wstx.sw.RepairingNsStreamWriter r3;

        r3 := @this: com.ctc.wstx.sw.RepairingNsStreamWriter;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.ctc.wstx.sw.SimpleOutputElement;

        if r0 == null goto label1;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 != 0 goto label3;

     label1:
        $r2 = virtualinvoke r1.<com.ctc.wstx.sw.SimpleOutputElement: java.lang.String getDefaultNsUri()>();

        if $r2 == null goto label2;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        return null;

     label2:
        return "";

     label3:
        $r4 = r3.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem>;

        $r5 = virtualinvoke $r4.<com.ctc.wstx.sw.SimpleOutputElement: java.lang.String getPrefix(java.lang.String)>(r0);

        return $r5;
    }

    protected final java.lang.String generateElemPrefix(java.lang.String, java.lang.String, com.ctc.wstx.sw.SimpleOutputElement) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.SimpleOutputElement r7;
        java.util.HashMap $r3, $r4;
        int[] $r6, $r8, $r10, $r11;
        int $i0;
        java.lang.String r0, $r2, $r9, $r12, r13, $r14;
        com.ctc.wstx.sw.RepairingNsStreamWriter r1;
        boolean $z0;
        java.lang.Object $r5;

        r1 := @this: com.ctc.wstx.sw.RepairingNsStreamWriter;

        r13 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        r7 := @parameter2: com.ctc.wstx.sw.SimpleOutputElement;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return "";

     label2:
        if r13 != null goto label7;

        $r2 = r1.<com.ctc.wstx.sw.RepairingNsStreamWriter: java.lang.String mSuggestedDefNs>;

        if $r2 == null goto label3;

        $r12 = r1.<com.ctc.wstx.sw.RepairingNsStreamWriter: java.lang.String mSuggestedDefNs>;

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label3;

        r13 = "";

        goto label7;

     label3:
        $r3 = r1.<com.ctc.wstx.sw.RepairingNsStreamWriter: java.util.HashMap mSuggestedPrefixes>;

        if $r3 != null goto label4;

        $r14 = null;

        goto label5;

     label4:
        $r4 = r1.<com.ctc.wstx.sw.RepairingNsStreamWriter: java.util.HashMap mSuggestedPrefixes>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        $r14 = (java.lang.String) $r5;

     label5:
        r13 = $r14;

        if $r14 != null goto label7;

        $r6 = r1.<com.ctc.wstx.sw.RepairingNsStreamWriter: int[] mAutoNsSeq>;

        if $r6 != null goto label6;

        $r10 = newarray (int)[1];

        r1.<com.ctc.wstx.sw.RepairingNsStreamWriter: int[] mAutoNsSeq> = $r10;

        $r11 = r1.<com.ctc.wstx.sw.RepairingNsStreamWriter: int[] mAutoNsSeq>;

        $r11[0] = 1;

     label6:
        $r9 = r1.<com.ctc.wstx.sw.RepairingNsStreamWriter: java.lang.String mAutomaticNsPrefix>;

        $r8 = r1.<com.ctc.wstx.sw.RepairingNsStreamWriter: int[] mAutoNsSeq>;

        r13 = virtualinvoke r7.<com.ctc.wstx.sw.SimpleOutputElement: java.lang.String generateMapping(java.lang.String,java.lang.String,int[])>($r9, r0, $r8);

     label7:
        return r13;
    }

    protected final java.lang.String findOrCreateAttrPrefix(java.lang.String, java.lang.String, com.ctc.wstx.sw.SimpleOutputElement) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.SimpleOutputElement r2, $r9;
        java.util.HashMap $r5, $r13;
        int[] $r6, $r7, $r10, $r11;
        int $i0, $i1, $i2;
        java.lang.String r0, r1, $r3, $r8, $r12, r15;
        com.ctc.wstx.sw.RepairingNsStreamWriter r4;
        java.lang.Object $r14;

        r4 := @this: com.ctc.wstx.sw.RepairingNsStreamWriter;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        r2 := @parameter2: com.ctc.wstx.sw.SimpleOutputElement;

        if r0 == null goto label01;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label02;

     label01:
        return null;

     label02:
        if r1 == null goto label04;

        $i2 = virtualinvoke r2.<com.ctc.wstx.sw.SimpleOutputElement: int isPrefixValid(java.lang.String,java.lang.String,boolean)>(r1, r0, 0);

        if $i2 != 1 goto label03;

        return r1;

     label03:
        if $i2 != 0 goto label04;

        virtualinvoke r2.<com.ctc.wstx.sw.SimpleOutputElement: void addPrefix(java.lang.String,java.lang.String)>(r1, r0);

        virtualinvoke r4.<com.ctc.wstx.sw.RepairingNsStreamWriter: void doWriteNamespace(java.lang.String,java.lang.String)>(r1, r0);

        return r1;

     label04:
        $r3 = virtualinvoke r2.<com.ctc.wstx.sw.SimpleOutputElement: java.lang.String getExplicitPrefix(java.lang.String)>(r0);

        r15 = $r3;

        if $r3 == null goto label05;

        return $r3;

     label05:
        if r1 == null goto label06;

        r15 = r1;

        goto label07;

     label06:
        $r5 = r4.<com.ctc.wstx.sw.RepairingNsStreamWriter: java.util.HashMap mSuggestedPrefixes>;

        if $r5 == null goto label07;

        $r13 = r4.<com.ctc.wstx.sw.RepairingNsStreamWriter: java.util.HashMap mSuggestedPrefixes>;

        $r14 = virtualinvoke $r13.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        r15 = (java.lang.String) $r14;

     label07:
        if r15 == null goto label09;

        $i1 = virtualinvoke r15.<java.lang.String: int length()>();

        if $i1 == 0 goto label08;

        $r12 = virtualinvoke r2.<com.ctc.wstx.sw.SimpleOutputElement: java.lang.String getNamespaceURI(java.lang.String)>(r15);

        if $r12 == null goto label09;

     label08:
        r15 = null;

     label09:
        if r15 != null goto label11;

        $r6 = r4.<com.ctc.wstx.sw.RepairingNsStreamWriter: int[] mAutoNsSeq>;

        if $r6 != null goto label10;

        $r10 = newarray (int)[1];

        r4.<com.ctc.wstx.sw.RepairingNsStreamWriter: int[] mAutoNsSeq> = $r10;

        $r11 = r4.<com.ctc.wstx.sw.RepairingNsStreamWriter: int[] mAutoNsSeq>;

        $r11[0] = 1;

     label10:
        $r9 = r4.<com.ctc.wstx.sw.RepairingNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem>;

        $r8 = r4.<com.ctc.wstx.sw.RepairingNsStreamWriter: java.lang.String mAutomaticNsPrefix>;

        $r7 = r4.<com.ctc.wstx.sw.RepairingNsStreamWriter: int[] mAutoNsSeq>;

        r15 = virtualinvoke $r9.<com.ctc.wstx.sw.SimpleOutputElement: java.lang.String generateMapping(java.lang.String,java.lang.String,int[])>($r8, r0, $r7);

     label11:
        virtualinvoke r2.<com.ctc.wstx.sw.SimpleOutputElement: void addPrefix(java.lang.String,java.lang.String)>(r15, r0);

        virtualinvoke r4.<com.ctc.wstx.sw.RepairingNsStreamWriter: void doWriteNamespace(java.lang.String,java.lang.String)>(r15, r0);

        return r15;
    }

    private final java.lang.String validateElemPrefix(java.lang.String, java.lang.String, com.ctc.wstx.sw.SimpleOutputElement) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.SimpleOutputElement r1;
        int $i0, $i1, $i2;
        java.lang.String r0, $r2, r3;
        com.ctc.wstx.sw.RepairingNsStreamWriter r4;

        r4 := @this: com.ctc.wstx.sw.RepairingNsStreamWriter;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: com.ctc.wstx.sw.SimpleOutputElement;

        if r0 == null goto label1;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 != 0 goto label4;

     label1:
        $r2 = virtualinvoke r1.<com.ctc.wstx.sw.SimpleOutputElement: java.lang.String getDefaultNsUri()>();

        if $r2 == null goto label2;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

     label2:
        return "";

     label3:
        return null;

     label4:
        $i2 = virtualinvoke r1.<com.ctc.wstx.sw.SimpleOutputElement: int isPrefixValid(java.lang.String,java.lang.String,boolean)>(r3, r0, 1);

        if $i2 != 1 goto label5;

        return r3;

     label5:
        return null;
    }
}
