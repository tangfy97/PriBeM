public class thredds.catalog.InvDatasetFcFmrc extends thredds.catalog.InvDatasetFeatureCollection
{
    private static final org.slf4j.Logger logger;
    private static final java.lang.String FMRC;
    private static final java.lang.String BEST;
    private static final java.lang.String RUNS;
    private static final java.lang.String RUN_NAME;
    private static final java.lang.String RUN_TITLE;
    private static final java.lang.String FORECAST;
    private static final java.lang.String FORECAST_NAME;
    private static final java.lang.String FORECAST_TITLE;
    private static final java.lang.String OFFSET;
    private static final java.lang.String OFFSET_NAME;
    private static final java.lang.String OFFSET_TITLE;
    private final ucar.nc2.ft.fmrc.Fmrc fmrc;
    private final java.util.Set wantDatasets;
    private thredds.catalog.InvService orgService;
    private thredds.catalog.InvService virtualService;

    public void <init>(thredds.catalog.InvDatasetImpl, java.lang.String, java.lang.String, ucar.nc2.constants.FeatureType, thredds.inventory.FeatureCollectionConfig)
    {
        java.util.Formatter $r8;
        thredds.inventory.DatasetCollectionManager $r10;
        java.lang.String r2, r3, $r15;
        ucar.nc2.constants.FeatureType r4, $r6;
        thredds.inventory.FeatureCollectionConfig r5;
        ucar.nc2.ft.fmrc.Fmrc $r9;
        java.util.Set $r12;
        java.lang.RuntimeException $r14;
        java.lang.Exception $r13;
        thredds.catalog.ThreddsMetadata $r7;
        thredds.catalog.InvDatasetFcFmrc r0;
        thredds.catalog.InvDatasetImpl r1;
        thredds.inventory.FeatureCollectionConfig$FmrcConfig $r11;

        r0 := @this: thredds.catalog.InvDatasetFcFmrc;

        r1 := @parameter0: thredds.catalog.InvDatasetImpl;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: ucar.nc2.constants.FeatureType;

        r5 := @parameter4: thredds.inventory.FeatureCollectionConfig;

        specialinvoke r0.<thredds.catalog.InvDatasetFeatureCollection: void <init>(thredds.catalog.InvDatasetImpl,java.lang.String,java.lang.String,ucar.nc2.constants.FeatureType,thredds.inventory.FeatureCollectionConfig)>(r1, r2, r3, r4, r5);

        $r7 = r0.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.ThreddsMetadata tmi>;

        $r6 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType GRID>;

        virtualinvoke $r7.<thredds.catalog.ThreddsMetadata: void setDataType(ucar.nc2.constants.FeatureType)>($r6);

        virtualinvoke r0.<thredds.catalog.InvDatasetFcFmrc: boolean finish()>();

        $r8 = new java.util.Formatter;

        specialinvoke $r8.<java.util.Formatter: void <init>()>();

     label1:
        $r9 = new ucar.nc2.ft.fmrc.Fmrc;

        $r10 = r0.<thredds.catalog.InvDatasetFcFmrc: thredds.inventory.DatasetCollectionManager dcm>;

        specialinvoke $r9.<ucar.nc2.ft.fmrc.Fmrc: void <init>(thredds.inventory.DatasetCollectionManager,thredds.inventory.FeatureCollectionConfig)>($r10, r5);

        r0.<thredds.catalog.InvDatasetFcFmrc: ucar.nc2.ft.fmrc.Fmrc fmrc> = $r9;

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

        $r14 = new java.lang.RuntimeException;

        $r15 = virtualinvoke $r8.<java.util.Formatter: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>($r15);

        throw $r14;

     label4:
        $r11 = r5.<thredds.inventory.FeatureCollectionConfig: thredds.inventory.FeatureCollectionConfig$FmrcConfig fmrcConfig>;

        $r12 = $r11.<thredds.inventory.FeatureCollectionConfig$FmrcConfig: java.util.Set datasets>;

        r0.<thredds.catalog.InvDatasetFcFmrc: java.util.Set wantDatasets> = $r12;

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void update()
    {
        ucar.nc2.ft.fmrc.Fmrc $r1;
        thredds.catalog.InvDatasetFcFmrc r0;

        r0 := @this: thredds.catalog.InvDatasetFcFmrc;

        $r1 = r0.<thredds.catalog.InvDatasetFcFmrc: ucar.nc2.ft.fmrc.Fmrc fmrc>;

        virtualinvoke $r1.<ucar.nc2.ft.fmrc.Fmrc: void update()>();

        return;
    }

    public void updateProto()
    {
        ucar.nc2.ft.fmrc.Fmrc $r1;
        thredds.catalog.InvDatasetFcFmrc r0;

        r0 := @this: thredds.catalog.InvDatasetFcFmrc;

        $r1 = r0.<thredds.catalog.InvDatasetFcFmrc: ucar.nc2.ft.fmrc.Fmrc fmrc>;

        virtualinvoke $r1.<ucar.nc2.ft.fmrc.Fmrc: void updateProto()>();

        return;
    }

    protected thredds.catalog.InvDatasetFeatureCollection$State checkState() throws java.io.IOException
    {
        thredds.catalog.ThreddsMetadata$Variables $r11;
        java.lang.Throwable $r18;
        long $l0, $l1, $l2, $l3;
        boolean $z0, $z1, z2, z3;
        thredds.catalog.InvDatasetFeatureCollection$State $r2, $r4, $r6, $r8, $r14, $r19, $r20;
        ucar.nc2.ft.fmrc.Fmrc $r3, $r5, $r7, $r9;
        thredds.catalog.InvService $r15, $r16, $r17;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage $r12;
        ucar.nc2.dt.GridDataset $r10;
        ucar.nc2.units.DateRange $r13;
        thredds.catalog.InvDatasetFcFmrc r0;
        java.lang.Object $r1;

        r0 := @this: thredds.catalog.InvDatasetFcFmrc;

        $r1 = r0.<thredds.catalog.InvDatasetFcFmrc: java.lang.Object lock>;

        entermonitor $r1;

     label01:
        z2 = 1;

        z3 = 1;

        $r2 = r0.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvDatasetFeatureCollection$State state>;

        if $r2 != null goto label02;

        $r15 = virtualinvoke r0.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvService getServiceDefault()>();

        r0.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvService orgService> = $r15;

        $r16 = r0.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvService orgService>;

        $r17 = virtualinvoke r0.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvService makeVirtualService(thredds.catalog.InvService)>($r16);

        r0.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvService virtualService> = $r17;

        goto label04;

     label02:
        $r3 = r0.<thredds.catalog.InvDatasetFcFmrc: ucar.nc2.ft.fmrc.Fmrc fmrc>;

        virtualinvoke $r3.<ucar.nc2.ft.fmrc.Fmrc: void checkNeeded(boolean)>(0);

        $r5 = r0.<thredds.catalog.InvDatasetFcFmrc: ucar.nc2.ft.fmrc.Fmrc fmrc>;

        $r4 = r0.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvDatasetFeatureCollection$State state>;

        $l0 = $r4.<thredds.catalog.InvDatasetFeatureCollection$State: long lastInvChange>;

        $z0 = virtualinvoke $r5.<ucar.nc2.ft.fmrc.Fmrc: boolean checkInvState(long)>($l0);

        z2 = $z0;

        $r7 = r0.<thredds.catalog.InvDatasetFcFmrc: ucar.nc2.ft.fmrc.Fmrc fmrc>;

        $r6 = r0.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvDatasetFeatureCollection$State state>;

        $l1 = $r6.<thredds.catalog.InvDatasetFeatureCollection$State: long lastProtoChange>;

        $z1 = virtualinvoke $r7.<ucar.nc2.ft.fmrc.Fmrc: boolean checkProtoState(long)>($l1);

        z3 = $z1;

        if $z0 != 0 goto label04;

        if $z1 != 0 goto label04;

        $r14 = r0.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvDatasetFeatureCollection$State state>;

        exitmonitor $r1;

     label03:
        return $r14;

     label04:
        $r19 = new thredds.catalog.InvDatasetFeatureCollection$State;

        $r20 = r0.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvDatasetFeatureCollection$State state>;

        specialinvoke $r19.<thredds.catalog.InvDatasetFeatureCollection$State: void <init>(thredds.catalog.InvDatasetFeatureCollection,thredds.catalog.InvDatasetFeatureCollection$State)>(r0, $r20);

        if z3 == 0 goto label06;

        $r9 = r0.<thredds.catalog.InvDatasetFcFmrc: ucar.nc2.ft.fmrc.Fmrc fmrc>;

        $r10 = virtualinvoke $r9.<ucar.nc2.ft.fmrc.Fmrc: ucar.nc2.dt.GridDataset getDataset2D(ucar.nc2.dataset.NetcdfDataset)>(null);

        if null == $r10 goto label05;

        $r11 = staticinvoke <ucar.nc2.thredds.MetadataExtractor: thredds.catalog.ThreddsMetadata$Variables extractVariables(thredds.catalog.InvDatasetImpl,ucar.nc2.dt.GridDataset)>(r0, $r10);

        $r19.<thredds.catalog.InvDatasetFeatureCollection$State: thredds.catalog.ThreddsMetadata$Variables vars> = $r11;

        $r12 = staticinvoke <ucar.nc2.thredds.MetadataExtractor: thredds.catalog.ThreddsMetadata$GeospatialCoverage extractGeospatial(ucar.nc2.dt.GridDataset)>($r10);

        $r19.<thredds.catalog.InvDatasetFeatureCollection$State: thredds.catalog.ThreddsMetadata$GeospatialCoverage gc> = $r12;

        $r13 = staticinvoke <ucar.nc2.thredds.MetadataExtractor: ucar.nc2.units.DateRange extractDateRange(ucar.nc2.dt.GridDataset)>($r10);

        $r19.<thredds.catalog.InvDatasetFeatureCollection$State: ucar.nc2.units.DateRange dateRange> = $r13;

     label05:
        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r19.<thredds.catalog.InvDatasetFeatureCollection$State: long lastProtoChange> = $l3;

     label06:
        if z2 == 0 goto label07;

        specialinvoke r0.<thredds.catalog.InvDatasetFcFmrc: void makeDatasets(thredds.catalog.InvDatasetFeatureCollection$State)>($r19);

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r19.<thredds.catalog.InvDatasetFeatureCollection$State: long lastInvChange> = $l2;

     label07:
        r0.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvDatasetFeatureCollection$State state> = $r19;

        $r8 = r0.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvDatasetFeatureCollection$State state>;

        exitmonitor $r1;

     label08:
        return $r8;

     label09:
        $r18 := @caughtexception;

        exitmonitor $r1;

     label10:
        throw $r18;

        catch java.lang.Throwable from label01 to label03 with label09;
        catch java.lang.Throwable from label04 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public thredds.catalog.InvCatalogImpl makeCatalog(java.lang.String, java.lang.String, java.net.URI)
    {
        thredds.catalog.InvDatasetScan $r20;
        java.net.URI r6;
        thredds.inventory.FeatureCollectionConfig$FmrcDatasetType $r17, $r28, $r31, $r34;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.Set $r18, $r29, $r32, $r35;
        java.lang.Exception $r37;
        thredds.catalog.InvCatalogImpl $r11, $r21, $r30, $r33, $r36;
        thredds.catalog.InvDatasetFcFmrc r9;
        java.lang.StringBuilder $r0, $r2, $r4, $r5, $r7, $r38, $r40, $r42;
        int $i0;
        java.lang.String r3, $r8, $r16, r19, $r27, $r41, $r43;
        thredds.catalog.InvDatasetFeatureCollection$State $r10;
        org.slf4j.Logger $r1, $r39, $r45;
        thredds.catalog.InvService $r12, $r15, $r22, $r23, $r26;
        java.io.IOException $r44;
        thredds.catalog.ThreddsMetadata $r14, $r25;
        thredds.catalog.InvDatasetImpl $r13, $r24;

        r9 := @this: thredds.catalog.InvDatasetFcFmrc;

        r3 := @parameter0: java.lang.String;

        r19 := @parameter1: java.lang.String;

        r6 := @parameter2: java.net.URI;

        $r1 = <thredds.catalog.InvDatasetFcFmrc: org.slf4j.Logger logger>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FMRC make catalog for ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<org.slf4j.Logger: void debug(java.lang.String)>($r8);

     label01:
        $r10 = virtualinvoke r9.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvDatasetFeatureCollection$State checkState()>();

     label02:
        goto label04;

     label03:
        $r44 := @caughtexception;

        $r45 = <thredds.catalog.InvDatasetFcFmrc: org.slf4j.Logger logger>;

        interfaceinvoke $r45.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Error in checkState", $r44);

        return null;

     label04:
        if r3 == null goto label05;

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label07;

     label05:
        $r11 = virtualinvoke r9.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvCatalogImpl makeCatalogTop(java.net.URI,thredds.catalog.InvDatasetFeatureCollection$State)>(r6, $r10);

        $r12 = r9.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvService virtualService>;

        virtualinvoke $r11.<thredds.catalog.InvCatalogImpl: void addService(thredds.catalog.InvService)>($r12);

        $r13 = virtualinvoke $r11.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvDatasetImpl getDataset()>();

        $r14 = virtualinvoke $r13.<thredds.catalog.InvDatasetImpl: thredds.catalog.ThreddsMetadata getLocalMetadataInheritable()>();

        $r15 = r9.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvService virtualService>;

        $r16 = virtualinvoke $r15.<thredds.catalog.InvService: java.lang.String getName()>();

        virtualinvoke $r14.<thredds.catalog.ThreddsMetadata: void setServiceName(java.lang.String)>($r16);

        virtualinvoke $r11.<thredds.catalog.InvCatalogImpl: boolean finish()>();

     label06:
        return $r11;

     label07:
        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("runs");

        if $z0 == 0 goto label09;

        $r35 = r9.<thredds.catalog.InvDatasetFcFmrc: java.util.Set wantDatasets>;

        $r34 = <thredds.inventory.FeatureCollectionConfig$FmrcDatasetType: thredds.inventory.FeatureCollectionConfig$FmrcDatasetType Runs>;

        $z7 = interfaceinvoke $r35.<java.util.Set: boolean contains(java.lang.Object)>($r34);

        if $z7 == 0 goto label09;

        $r36 = specialinvoke r9.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvCatalogImpl makeCatalogRuns(java.net.URI,thredds.catalog.InvDatasetFeatureCollection$State)>(r6, $r10);

     label08:
        return $r36;

     label09:
        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("offset");

        if $z1 == 0 goto label11;

        $r32 = r9.<thredds.catalog.InvDatasetFcFmrc: java.util.Set wantDatasets>;

        $r31 = <thredds.inventory.FeatureCollectionConfig$FmrcDatasetType: thredds.inventory.FeatureCollectionConfig$FmrcDatasetType ConstantOffsets>;

        $z6 = interfaceinvoke $r32.<java.util.Set: boolean contains(java.lang.Object)>($r31);

        if $z6 == 0 goto label11;

        $r33 = specialinvoke r9.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvCatalogImpl makeCatalogOffsets(java.net.URI,thredds.catalog.InvDatasetFeatureCollection$State)>(r6, $r10);

     label10:
        return $r33;

     label11:
        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("forecast");

        if $z2 == 0 goto label13;

        $r29 = r9.<thredds.catalog.InvDatasetFcFmrc: java.util.Set wantDatasets>;

        $r28 = <thredds.inventory.FeatureCollectionConfig$FmrcDatasetType: thredds.inventory.FeatureCollectionConfig$FmrcDatasetType ConstantForecasts>;

        $z5 = interfaceinvoke $r29.<java.util.Set: boolean contains(java.lang.Object)>($r28);

        if $z5 == 0 goto label13;

        $r30 = specialinvoke r9.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvCatalogImpl makeCatalogForecasts(java.net.URI,thredds.catalog.InvDatasetFeatureCollection$State)>(r6, $r10);

     label12:
        return $r30;

     label13:
        $z3 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("files");

        if $z3 == 0 goto label17;

        $r18 = r9.<thredds.catalog.InvDatasetFcFmrc: java.util.Set wantDatasets>;

        $r17 = <thredds.inventory.FeatureCollectionConfig$FmrcDatasetType: thredds.inventory.FeatureCollectionConfig$FmrcDatasetType Files>;

        $z4 = interfaceinvoke $r18.<java.util.Set: boolean contains(java.lang.Object)>($r17);

        if $z4 == 0 goto label17;

        $r20 = $r10.<thredds.catalog.InvDatasetFeatureCollection$State: thredds.catalog.InvDatasetScan scan>;

        $r21 = virtualinvoke $r20.<thredds.catalog.InvDatasetScan: thredds.catalog.InvCatalogImpl makeCatalogForDirectory(java.lang.String,java.net.URI)>(r19, r6);

        if $r21 != null goto label15;

     label14:
        return null;

     label15:
        $r22 = <thredds.catalog.InvService: thredds.catalog.InvService latest>;

        virtualinvoke $r21.<thredds.catalog.InvCatalogImpl: void addService(thredds.catalog.InvService)>($r22);

        $r23 = r9.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvService orgService>;

        virtualinvoke $r21.<thredds.catalog.InvCatalogImpl: void addService(thredds.catalog.InvService)>($r23);

        $r24 = virtualinvoke $r21.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvDatasetImpl getDataset()>();

        $r25 = virtualinvoke $r24.<thredds.catalog.InvDatasetImpl: thredds.catalog.ThreddsMetadata getLocalMetadataInheritable()>();

        $r26 = r9.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvService orgService>;

        $r27 = virtualinvoke $r26.<thredds.catalog.InvService: java.lang.String getName()>();

        virtualinvoke $r25.<thredds.catalog.ThreddsMetadata: void setServiceName(java.lang.String)>($r27);

        virtualinvoke $r21.<thredds.catalog.InvCatalogImpl: boolean finish()>();

     label16:
        return $r21;

     label17:
        goto label19;

     label18:
        $r37 := @caughtexception;

        $r39 = <thredds.catalog.InvDatasetFcFmrc: org.slf4j.Logger logger>;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error making catalog for ");

        $r41 = r9.<thredds.catalog.InvDatasetFcFmrc: java.lang.String path>;

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r39.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r43, $r37);

     label19:
        return null;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.lang.Exception from label04 to label06 with label18;
        catch java.lang.Exception from label07 to label08 with label18;
        catch java.lang.Exception from label09 to label10 with label18;
        catch java.lang.Exception from label11 to label12 with label18;
        catch java.lang.Exception from label13 to label14 with label18;
        catch java.lang.Exception from label15 to label16 with label18;
    }

    private thredds.catalog.InvCatalogImpl makeCatalogRuns(java.net.URI, thredds.catalog.InvDatasetFeatureCollection$State) throws java.io.IOException
    {
        thredds.catalog.ThreddsMetadata$Variables $r14, $r25;
        java.net.URI r3, $r5;
        java.lang.String $r4, $r7, $r8, $r19;
        thredds.catalog.InvDataset $r10;
        boolean $z0;
        thredds.catalog.InvDatasetFeatureCollection$State r13;
        thredds.catalog.InvCatalog $r1;
        thredds.catalog.InvService $r16, $r18;
        java.util.Iterator $r21;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage $r15, $r24;
        thredds.catalog.ThreddsMetadata $r12, $r17;
        java.util.List $r20;
        thredds.catalog.InvCatalogImpl r2, $r6;
        thredds.catalog.InvDatasetFcFmrc r0;
        java.lang.Object $r22;
        thredds.catalog.InvDatasetImpl $r9, $r11, r23;

        r0 := @this: thredds.catalog.InvDatasetFcFmrc;

        r3 := @parameter0: java.net.URI;

        r13 := @parameter1: thredds.catalog.InvDatasetFeatureCollection$State;

        $r1 = virtualinvoke r0.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvCatalog getParentCatalog()>();

        r2 = (thredds.catalog.InvCatalogImpl) $r1;

        $r4 = virtualinvoke r0.<thredds.catalog.InvDatasetFcFmrc: java.lang.String getCatalogHref(java.lang.String)>("runs");

        $r5 = virtualinvoke r3.<java.net.URI: java.net.URI resolve(java.lang.String)>($r4);

        $r6 = new thredds.catalog.InvCatalogImpl;

        $r7 = virtualinvoke r0.<thredds.catalog.InvDatasetFcFmrc: java.lang.String getFullName()>();

        $r8 = virtualinvoke r2.<thredds.catalog.InvCatalogImpl: java.lang.String getVersion()>();

        specialinvoke $r6.<thredds.catalog.InvCatalogImpl: void <init>(java.lang.String,java.lang.String,java.net.URI)>($r7, $r8, $r5);

        $r9 = new thredds.catalog.InvDatasetImpl;

        specialinvoke $r9.<thredds.catalog.InvDatasetImpl: void <init>(thredds.catalog.InvDatasetImpl)>(r0);

        virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: void setParent(thredds.catalog.InvDatasetImpl)>(null);

        $r10 = virtualinvoke r0.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvDataset getParent()>();

        $r11 = (thredds.catalog.InvDatasetImpl) $r10;

        virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: void transferMetadata(thredds.catalog.InvDatasetImpl,boolean)>($r11, 1);

        virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: void setName(java.lang.String)>("Forecast Model Run");

        $r12 = virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: thredds.catalog.ThreddsMetadata getLocalMetadataInheritable()>();

        $r14 = r13.<thredds.catalog.InvDatasetFeatureCollection$State: thredds.catalog.ThreddsMetadata$Variables vars>;

        if $r14 == null goto label1;

        $r25 = r13.<thredds.catalog.InvDatasetFeatureCollection$State: thredds.catalog.ThreddsMetadata$Variables vars>;

        virtualinvoke $r12.<thredds.catalog.ThreddsMetadata: void addVariables(thredds.catalog.ThreddsMetadata$Variables)>($r25);

     label1:
        $r15 = r13.<thredds.catalog.InvDatasetFeatureCollection$State: thredds.catalog.ThreddsMetadata$GeospatialCoverage gc>;

        if $r15 == null goto label2;

        $r24 = r13.<thredds.catalog.InvDatasetFeatureCollection$State: thredds.catalog.ThreddsMetadata$GeospatialCoverage gc>;

        virtualinvoke $r12.<thredds.catalog.ThreddsMetadata: void setGeospatialCoverage(thredds.catalog.ThreddsMetadata$GeospatialCoverage)>($r24);

     label2:
        virtualinvoke $r6.<thredds.catalog.InvCatalogImpl: void addDataset(thredds.catalog.InvDatasetImpl)>($r9);

        $r16 = r0.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvService virtualService>;

        virtualinvoke $r6.<thredds.catalog.InvCatalogImpl: void addService(thredds.catalog.InvService)>($r16);

        $r17 = virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: thredds.catalog.ThreddsMetadata getLocalMetadataInheritable()>();

        $r18 = r0.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvService virtualService>;

        $r19 = virtualinvoke $r18.<thredds.catalog.InvService: java.lang.String getName()>();

        virtualinvoke $r17.<thredds.catalog.ThreddsMetadata: void setServiceName(java.lang.String)>($r19);

        $r20 = specialinvoke r0.<thredds.catalog.InvDatasetFcFmrc: java.util.List makeRunDatasets()>();

        $r21 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r22 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        r23 = (thredds.catalog.InvDatasetImpl) $r22;

        virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: void addDataset(thredds.catalog.InvDatasetImpl)>(r23);

        goto label3;

     label4:
        virtualinvoke $r6.<thredds.catalog.InvCatalogImpl: boolean finish()>();

        return $r6;
    }

    private thredds.catalog.InvCatalogImpl makeCatalogOffsets(java.net.URI, thredds.catalog.InvDatasetFeatureCollection$State) throws java.io.IOException
    {
        thredds.catalog.ThreddsMetadata$Variables $r14, $r27;
        java.net.URI r3, $r5;
        java.lang.String $r4, $r7, $r8, $r20;
        thredds.catalog.InvDataset $r10;
        boolean $z0;
        thredds.catalog.InvDatasetFeatureCollection$State r13;
        thredds.catalog.InvCatalog $r1;
        thredds.catalog.InvService $r17, $r19;
        java.util.Iterator $r22;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage $r15, $r26;
        thredds.catalog.ThreddsMetadata $r12, $r18;
        ucar.nc2.units.DateRange $r16, $r25;
        java.util.List $r21;
        thredds.catalog.InvCatalogImpl r2, $r6;
        thredds.catalog.InvDatasetFcFmrc r0;
        java.lang.Object $r23;
        thredds.catalog.InvDatasetImpl $r9, $r11, r24;

        r0 := @this: thredds.catalog.InvDatasetFcFmrc;

        r3 := @parameter0: java.net.URI;

        r13 := @parameter1: thredds.catalog.InvDatasetFeatureCollection$State;

        $r1 = virtualinvoke r0.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvCatalog getParentCatalog()>();

        r2 = (thredds.catalog.InvCatalogImpl) $r1;

        $r4 = virtualinvoke r0.<thredds.catalog.InvDatasetFcFmrc: java.lang.String getCatalogHref(java.lang.String)>("offset");

        $r5 = virtualinvoke r3.<java.net.URI: java.net.URI resolve(java.lang.String)>($r4);

        $r6 = new thredds.catalog.InvCatalogImpl;

        $r7 = virtualinvoke r0.<thredds.catalog.InvDatasetFcFmrc: java.lang.String getFullName()>();

        $r8 = virtualinvoke r2.<thredds.catalog.InvCatalogImpl: java.lang.String getVersion()>();

        specialinvoke $r6.<thredds.catalog.InvCatalogImpl: void <init>(java.lang.String,java.lang.String,java.net.URI)>($r7, $r8, $r5);

        $r9 = new thredds.catalog.InvDatasetImpl;

        specialinvoke $r9.<thredds.catalog.InvDatasetImpl: void <init>(thredds.catalog.InvDatasetImpl)>(r0);

        virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: void setParent(thredds.catalog.InvDatasetImpl)>(null);

        $r10 = virtualinvoke r0.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvDataset getParent()>();

        $r11 = (thredds.catalog.InvDatasetImpl) $r10;

        virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: void transferMetadata(thredds.catalog.InvDatasetImpl,boolean)>($r11, 1);

        $r12 = virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: thredds.catalog.ThreddsMetadata getLocalMetadataInheritable()>();

        $r14 = r13.<thredds.catalog.InvDatasetFeatureCollection$State: thredds.catalog.ThreddsMetadata$Variables vars>;

        if $r14 == null goto label1;

        $r27 = r13.<thredds.catalog.InvDatasetFeatureCollection$State: thredds.catalog.ThreddsMetadata$Variables vars>;

        virtualinvoke $r12.<thredds.catalog.ThreddsMetadata: void addVariables(thredds.catalog.ThreddsMetadata$Variables)>($r27);

     label1:
        $r15 = r13.<thredds.catalog.InvDatasetFeatureCollection$State: thredds.catalog.ThreddsMetadata$GeospatialCoverage gc>;

        if $r15 == null goto label2;

        $r26 = r13.<thredds.catalog.InvDatasetFeatureCollection$State: thredds.catalog.ThreddsMetadata$GeospatialCoverage gc>;

        virtualinvoke $r12.<thredds.catalog.ThreddsMetadata: void setGeospatialCoverage(thredds.catalog.ThreddsMetadata$GeospatialCoverage)>($r26);

     label2:
        $r16 = r13.<thredds.catalog.InvDatasetFeatureCollection$State: ucar.nc2.units.DateRange dateRange>;

        if $r16 == null goto label3;

        $r25 = r13.<thredds.catalog.InvDatasetFeatureCollection$State: ucar.nc2.units.DateRange dateRange>;

        virtualinvoke $r12.<thredds.catalog.ThreddsMetadata: void setTimeCoverage(ucar.nc2.units.DateRange)>($r25);

     label3:
        virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: void setName(java.lang.String)>("Constant Forecast Offset");

        virtualinvoke $r6.<thredds.catalog.InvCatalogImpl: void addDataset(thredds.catalog.InvDatasetImpl)>($r9);

        $r17 = r0.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvService virtualService>;

        virtualinvoke $r6.<thredds.catalog.InvCatalogImpl: void addService(thredds.catalog.InvService)>($r17);

        $r18 = virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: thredds.catalog.ThreddsMetadata getLocalMetadataInheritable()>();

        $r19 = r0.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvService virtualService>;

        $r20 = virtualinvoke $r19.<thredds.catalog.InvService: java.lang.String getName()>();

        virtualinvoke $r18.<thredds.catalog.ThreddsMetadata: void setServiceName(java.lang.String)>($r20);

        $r21 = specialinvoke r0.<thredds.catalog.InvDatasetFcFmrc: java.util.List makeOffsetDatasets()>();

        $r22 = interfaceinvoke $r21.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r22.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r23 = interfaceinvoke $r22.<java.util.Iterator: java.lang.Object next()>();

        r24 = (thredds.catalog.InvDatasetImpl) $r23;

        virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: void addDataset(thredds.catalog.InvDatasetImpl)>(r24);

        goto label4;

     label5:
        virtualinvoke $r6.<thredds.catalog.InvCatalogImpl: boolean finish()>();

        return $r6;
    }

    private thredds.catalog.InvCatalogImpl makeCatalogForecasts(java.net.URI, thredds.catalog.InvDatasetFeatureCollection$State) throws java.io.IOException
    {
        thredds.catalog.ThreddsMetadata$Variables $r14, $r28;
        java.net.URI r3, $r5;
        java.lang.String $r4, $r7, $r8, $r21;
        thredds.catalog.InvDataset $r10;
        boolean $z0;
        thredds.catalog.InvDatasetFeatureCollection$State r13;
        thredds.catalog.InvCatalog $r1;
        thredds.catalog.InvService $r17, $r18, $r20;
        java.util.Iterator $r23;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage $r15, $r27;
        thredds.catalog.ThreddsMetadata $r12, $r19;
        ucar.nc2.units.DateRange $r16, $r26;
        java.util.List $r22;
        thredds.catalog.InvCatalogImpl r2, $r6;
        thredds.catalog.InvDatasetFcFmrc r0;
        java.lang.Object $r24;
        thredds.catalog.InvDatasetImpl $r9, $r11, r25;

        r0 := @this: thredds.catalog.InvDatasetFcFmrc;

        r3 := @parameter0: java.net.URI;

        r13 := @parameter1: thredds.catalog.InvDatasetFeatureCollection$State;

        $r1 = virtualinvoke r0.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvCatalog getParentCatalog()>();

        r2 = (thredds.catalog.InvCatalogImpl) $r1;

        $r4 = virtualinvoke r0.<thredds.catalog.InvDatasetFcFmrc: java.lang.String getCatalogHref(java.lang.String)>("forecast");

        $r5 = virtualinvoke r3.<java.net.URI: java.net.URI resolve(java.lang.String)>($r4);

        $r6 = new thredds.catalog.InvCatalogImpl;

        $r7 = virtualinvoke r0.<thredds.catalog.InvDatasetFcFmrc: java.lang.String getFullName()>();

        $r8 = virtualinvoke r2.<thredds.catalog.InvCatalogImpl: java.lang.String getVersion()>();

        specialinvoke $r6.<thredds.catalog.InvCatalogImpl: void <init>(java.lang.String,java.lang.String,java.net.URI)>($r7, $r8, $r5);

        $r9 = new thredds.catalog.InvDatasetImpl;

        specialinvoke $r9.<thredds.catalog.InvDatasetImpl: void <init>(thredds.catalog.InvDatasetImpl)>(r0);

        virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: void setParent(thredds.catalog.InvDatasetImpl)>(null);

        $r10 = virtualinvoke r0.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvDataset getParent()>();

        $r11 = (thredds.catalog.InvDatasetImpl) $r10;

        virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: void transferMetadata(thredds.catalog.InvDatasetImpl,boolean)>($r11, 1);

        virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: void setName(java.lang.String)>("Constant Forecast Date");

        $r12 = virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: thredds.catalog.ThreddsMetadata getLocalMetadataInheritable()>();

        $r14 = r13.<thredds.catalog.InvDatasetFeatureCollection$State: thredds.catalog.ThreddsMetadata$Variables vars>;

        if $r14 == null goto label1;

        $r28 = r13.<thredds.catalog.InvDatasetFeatureCollection$State: thredds.catalog.ThreddsMetadata$Variables vars>;

        virtualinvoke $r12.<thredds.catalog.ThreddsMetadata: void addVariables(thredds.catalog.ThreddsMetadata$Variables)>($r28);

     label1:
        $r15 = r13.<thredds.catalog.InvDatasetFeatureCollection$State: thredds.catalog.ThreddsMetadata$GeospatialCoverage gc>;

        if $r15 == null goto label2;

        $r27 = r13.<thredds.catalog.InvDatasetFeatureCollection$State: thredds.catalog.ThreddsMetadata$GeospatialCoverage gc>;

        virtualinvoke $r12.<thredds.catalog.ThreddsMetadata: void setGeospatialCoverage(thredds.catalog.ThreddsMetadata$GeospatialCoverage)>($r27);

     label2:
        $r16 = r13.<thredds.catalog.InvDatasetFeatureCollection$State: ucar.nc2.units.DateRange dateRange>;

        if $r16 == null goto label3;

        $r26 = r13.<thredds.catalog.InvDatasetFeatureCollection$State: ucar.nc2.units.DateRange dateRange>;

        virtualinvoke $r12.<thredds.catalog.ThreddsMetadata: void setTimeCoverage(ucar.nc2.units.DateRange)>($r26);

     label3:
        virtualinvoke $r6.<thredds.catalog.InvCatalogImpl: void addDataset(thredds.catalog.InvDatasetImpl)>($r9);

        $r17 = r0.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvService virtualService>;

        virtualinvoke $r6.<thredds.catalog.InvCatalogImpl: void addService(thredds.catalog.InvService)>($r17);

        $r18 = r0.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvService cdmrService>;

        virtualinvoke $r6.<thredds.catalog.InvCatalogImpl: void addService(thredds.catalog.InvService)>($r18);

        $r19 = virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: thredds.catalog.ThreddsMetadata getLocalMetadataInheritable()>();

        $r20 = r0.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvService virtualService>;

        $r21 = virtualinvoke $r20.<thredds.catalog.InvService: java.lang.String getName()>();

        virtualinvoke $r19.<thredds.catalog.ThreddsMetadata: void setServiceName(java.lang.String)>($r21);

        $r22 = specialinvoke r0.<thredds.catalog.InvDatasetFcFmrc: java.util.List makeForecastDatasets()>();

        $r23 = interfaceinvoke $r22.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r24 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        r25 = (thredds.catalog.InvDatasetImpl) $r24;

        virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: void addDataset(thredds.catalog.InvDatasetImpl)>(r25);

        goto label4;

     label5:
        virtualinvoke $r6.<thredds.catalog.InvCatalogImpl: boolean finish()>();

        return $r6;
    }

    private java.util.List makeRunDatasets() throws java.io.IOException
    {
        java.util.Date r8;
        boolean $z0;
        java.util.List $r5;
        ucar.nc2.units.DateRange $r40;
        thredds.catalog.InvDatasetFcFmrc r2;
        java.lang.StringBuilder $r9, $r11, $r12, $r13, $r15, $r19, $r21, $r22, $r23, $r24, $r25, $r27, $r28, $r29, $r30, $r31, $r32, $r35, $r36, $r37;
        ucar.nc2.units.DateFormatter $r1;
        java.util.ArrayList $r0;
        java.lang.String $r3, $r10, $r14, $r16, $r17, $r20, $r26, $r33, $r38, r41;
        ucar.nc2.ft.fmrc.Fmrc $r4, $r39;
        java.util.Iterator $r6;
        thredds.catalog.ThreddsMetadata $r34;
        java.lang.Object $r7;
        thredds.catalog.InvDatasetImpl $r18;

        r2 := @this: thredds.catalog.InvDatasetFcFmrc;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r1.<ucar.nc2.units.DateFormatter: void <init>()>();

        $r3 = virtualinvoke r2.<thredds.catalog.InvDatasetFcFmrc: java.lang.String getID()>();

        r41 = $r3;

        if $r3 != null goto label1;

        r41 = virtualinvoke r2.<thredds.catalog.InvDatasetFcFmrc: java.lang.String getPath()>();

     label1:
        $r4 = r2.<thredds.catalog.InvDatasetFcFmrc: ucar.nc2.ft.fmrc.Fmrc fmrc>;

        $r5 = virtualinvoke $r4.<ucar.nc2.ft.fmrc.Fmrc: java.util.List getRunDates()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Date) $r7;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r2.<thredds.catalog.InvDatasetFcFmrc: java.lang.String getName()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RUN_");

        $r14 = virtualinvoke $r1.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>(r8);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,char,java.lang.String)>($r16, 32, "_");

        $r18 = new thredds.catalog.InvDatasetImpl;

        specialinvoke $r18.<thredds.catalog.InvDatasetImpl: void <init>(thredds.catalog.InvDataset,java.lang.String)>(r2, $r17);

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = r2.<thredds.catalog.InvDatasetFcFmrc: java.lang.String path>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("runs");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<thredds.catalog.InvDatasetImpl: void setUrlPath(java.lang.String)>($r26);

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("runs");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<thredds.catalog.InvDatasetImpl: void setID(java.lang.String)>($r33);

        $r34 = virtualinvoke $r18.<thredds.catalog.InvDatasetImpl: thredds.catalog.ThreddsMetadata getLocalMetadata()>();

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Data from Run ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r34.<thredds.catalog.ThreddsMetadata: void addDocumentation(java.lang.String,java.lang.String)>("summary", $r38);

        $r39 = r2.<thredds.catalog.InvDatasetFcFmrc: ucar.nc2.ft.fmrc.Fmrc fmrc>;

        $r40 = virtualinvoke $r39.<ucar.nc2.ft.fmrc.Fmrc: ucar.nc2.units.DateRange getDateRangeForRun(java.util.Date)>(r8);

        if $r40 == null goto label3;

        virtualinvoke $r34.<thredds.catalog.ThreddsMetadata: void setTimeCoverage(ucar.nc2.units.DateRange)>($r40);

     label3:
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r18);

        goto label2;

     label4:
        staticinvoke <java.util.Collections: void reverse(java.util.List)>($r0);

        return $r0;
    }

    private java.util.List makeOffsetDatasets() throws java.io.IOException
    {
        ucar.nc2.units.DateRange $r37;
        thredds.catalog.InvDatasetFcFmrc r1;
        java.lang.StringBuilder $r5, $r7, $r8, $r9, $r10, $r11, $r15, $r17, $r18, $r19, $r20, $r21, $r23, $r24, $r25, $r26, $r27, $r28, $r31, $r32, $r33, $r34;
        double[] $r4;
        java.util.ArrayList $r0;
        int $i0, i1;
        java.lang.String $r2, $r6, $r12, $r13, $r16, $r22, $r29, $r35, r38;
        double d0;
        ucar.nc2.ft.fmrc.Fmrc $r3, $r36;
        thredds.catalog.ThreddsMetadata $r30;
        thredds.catalog.InvDatasetImpl $r14;

        r1 := @this: thredds.catalog.InvDatasetFcFmrc;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = virtualinvoke r1.<thredds.catalog.InvDatasetFcFmrc: java.lang.String getID()>();

        r38 = $r2;

        if $r2 != null goto label1;

        r38 = virtualinvoke r1.<thredds.catalog.InvDatasetFcFmrc: java.lang.String getPath()>();

     label1:
        $r3 = r1.<thredds.catalog.InvDatasetFcFmrc: ucar.nc2.ft.fmrc.Fmrc fmrc>;

        $r4 = virtualinvoke $r3.<ucar.nc2.ft.fmrc.Fmrc: double[] getForecastOffsets()>();

        $i0 = lengthof $r4;

        i1 = 0;

     label2:
        if i1 >= $i0 goto label4;

        d0 = $r4[i1];

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r1.<thredds.catalog.InvDatasetFcFmrc: java.lang.String getName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Offset_");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hr");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,char,java.lang.String)>($r12, 32, "_");

        $r14 = new thredds.catalog.InvDatasetImpl;

        specialinvoke $r14.<thredds.catalog.InvDatasetImpl: void <init>(thredds.catalog.InvDataset,java.lang.String)>(r1, $r13);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = r1.<thredds.catalog.InvDatasetFcFmrc: java.lang.String path>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("offset");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<thredds.catalog.InvDatasetImpl: void setUrlPath(java.lang.String)>($r22);

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("offset");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<thredds.catalog.InvDatasetImpl: void setID(java.lang.String)>($r29);

        $r30 = virtualinvoke $r14.<thredds.catalog.InvDatasetImpl: thredds.catalog.ThreddsMetadata getLocalMetadata()>();

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Data from the ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hour forecasts, across different model runs.");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r30.<thredds.catalog.ThreddsMetadata: void addDocumentation(java.lang.String,java.lang.String)>("summary", $r35);

        $r36 = r1.<thredds.catalog.InvDatasetFcFmrc: ucar.nc2.ft.fmrc.Fmrc fmrc>;

        $r37 = virtualinvoke $r36.<ucar.nc2.ft.fmrc.Fmrc: ucar.nc2.units.DateRange getDateRangeForOffset(double)>(d0);

        if $r37 == null goto label3;

        virtualinvoke $r30.<thredds.catalog.ThreddsMetadata: void setTimeCoverage(ucar.nc2.units.DateRange)>($r37);

     label3:
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r14);

        i1 = i1 + 1;

        goto label2;

     label4:
        return $r0;
    }

    private java.util.List makeForecastDatasets() throws java.io.IOException
    {
        java.util.Date r8;
        boolean $z0;
        java.util.List $r5;
        ucar.nc2.units.DateRange $r40;
        thredds.catalog.InvDatasetFcFmrc r2;
        java.lang.StringBuilder $r9, $r11, $r12, $r13, $r15, $r19, $r21, $r22, $r23, $r24, $r25, $r27, $r28, $r29, $r30, $r31, $r32, $r35, $r36, $r37, $r38;
        ucar.nc2.units.DateFormatter $r1;
        java.util.ArrayList $r0;
        java.lang.String $r3, $r10, $r14, $r16, $r17, $r20, $r26, $r33, $r39, r41;
        ucar.nc2.ft.fmrc.Fmrc $r4;
        java.util.Iterator $r6;
        thredds.catalog.ThreddsMetadata $r34;
        java.lang.Object $r7;
        thredds.catalog.InvDatasetImpl $r18;

        r2 := @this: thredds.catalog.InvDatasetFcFmrc;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r1.<ucar.nc2.units.DateFormatter: void <init>()>();

        $r3 = virtualinvoke r2.<thredds.catalog.InvDatasetFcFmrc: java.lang.String getID()>();

        r41 = $r3;

        if $r3 != null goto label1;

        r41 = virtualinvoke r2.<thredds.catalog.InvDatasetFcFmrc: java.lang.String getPath()>();

     label1:
        $r4 = r2.<thredds.catalog.InvDatasetFcFmrc: ucar.nc2.ft.fmrc.Fmrc fmrc>;

        $r5 = virtualinvoke $r4.<ucar.nc2.ft.fmrc.Fmrc: java.util.List getForecastDates()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Date) $r7;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r2.<thredds.catalog.InvDatasetFcFmrc: java.lang.String getName()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ConstantForecast_");

        $r14 = virtualinvoke $r1.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>(r8);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,char,java.lang.String)>($r16, 32, "_");

        $r18 = new thredds.catalog.InvDatasetImpl;

        specialinvoke $r18.<thredds.catalog.InvDatasetImpl: void <init>(thredds.catalog.InvDataset,java.lang.String)>(r2, $r17);

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = r2.<thredds.catalog.InvDatasetFcFmrc: java.lang.String path>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("forecast");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<thredds.catalog.InvDatasetImpl: void setUrlPath(java.lang.String)>($r26);

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("forecast");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<thredds.catalog.InvDatasetImpl: void setID(java.lang.String)>($r33);

        $r34 = virtualinvoke $r18.<thredds.catalog.InvDatasetImpl: thredds.catalog.ThreddsMetadata getLocalMetadata()>();

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Data with the same forecast date, ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", across different model runs.");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r34.<thredds.catalog.ThreddsMetadata: void addDocumentation(java.lang.String,java.lang.String)>("summary", $r39);

        $r40 = new ucar.nc2.units.DateRange;

        specialinvoke $r40.<ucar.nc2.units.DateRange: void <init>(java.util.Date,java.util.Date)>(r8, r8);

        virtualinvoke $r34.<thredds.catalog.ThreddsMetadata: void setTimeCoverage(ucar.nc2.units.DateRange)>($r40);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r18);

        goto label2;

     label3:
        return $r0;
    }

    private void makeDatasets(thredds.catalog.InvDatasetFeatureCollection$State)
    {
        thredds.inventory.DatasetCollectionManager $r20;
        thredds.catalog.InvCatalog $r24;
        thredds.catalog.InvCatalogImpl $r26;
        java.lang.StringBuilder $r25, $r28, $r29, $r30, $r52, $r54, $r55, $r57, $r60, $r62, $r63, $r64, $r66, $r67, $r68, $r69, $r72, $r73, $r74, $r77, $r79, $r80, $r81, $r84, $r86, $r87, $r88, $r90, $r91, $r92, $r93, $r97, $r99, $r100, $r101, $r104, $r106, $r107, $r108, $r110, $r111, $r112, $r113;
        thredds.inventory.FeatureCollectionConfig$FmrcConfig $r8, $r46;
        long l0;
        thredds.catalog.InvDatasetImpl $r50, $r76, $r96;
        thredds.inventory.FeatureCollectionConfig$FmrcDatasetType $r3, $r5, $r10, $r12, $r14, $r16;
        thredds.catalog.InvDatasetFeatureCollection$ScanFilter $r21;
        java.lang.Object $r49;
        thredds.catalog.InvCatalogRef $r39, $r41, $r43;
        java.util.Set $r4, $r6, $r11, $r13, $r15, $r17;
        java.util.ArrayList $r0;
        java.lang.String $r2, $r19, $r27, $r31, $r32, $r36, $r38, $r40, $r42, $r44, $r51, $r53, $r56, $r58, $r59, $r61, $r65, $r70, $r75, $r78, $r82, $r83, $r85, $r89, $r94, $r98, $r102, $r103, $r105, $r109, $r114, r116;
        thredds.inventory.FeatureCollectionConfig$BestDataset r117;
        thredds.catalog.InvDatasetFeatureCollection$State r18;
        thredds.catalog.InvDatasetScan $r23;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.List $r9, $r47;
        thredds.catalog.InvDatasetFcFmrc r1;
        java.util.regex.Pattern $r22;
        double $d0, $d1, $d2;
        thredds.inventory.FeatureCollectionConfig $r7, $r45;
        thredds.catalog.InvService $r33, $r35, $r37;
        java.util.Iterator $r48;
        thredds.catalog.ThreddsMetadata $r34, $r71, $r95, $r115;

        r1 := @this: thredds.catalog.InvDatasetFcFmrc;

        r18 := @parameter0: thredds.catalog.InvDatasetFeatureCollection$State;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = virtualinvoke r1.<thredds.catalog.InvDatasetFcFmrc: java.lang.String getID()>();

        r116 = $r2;

        if $r2 != null goto label1;

        r116 = virtualinvoke r1.<thredds.catalog.InvDatasetFcFmrc: java.lang.String getPath()>();

     label1:
        $r4 = r1.<thredds.catalog.InvDatasetFcFmrc: java.util.Set wantDatasets>;

        $r3 = <thredds.inventory.FeatureCollectionConfig$FmrcDatasetType: thredds.inventory.FeatureCollectionConfig$FmrcDatasetType TwoD>;

        $z0 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        $r96 = new thredds.catalog.InvDatasetImpl;

        specialinvoke $r96.<thredds.catalog.InvDatasetImpl: void <init>(thredds.catalog.InvDataset,java.lang.String)>(r1, "Forecast Model Run Collection (2D time coordinates)");

        $r97 = new java.lang.StringBuilder;

        specialinvoke $r97.<java.lang.StringBuilder: void <init>()>();

        $r98 = virtualinvoke r1.<thredds.catalog.InvDatasetFcFmrc: java.lang.String getName()>();

        $r99 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r98);

        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fmrc.ncd");

        $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.String toString()>();

        $r103 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,char,java.lang.String)>($r102, 32, "_");

        $r104 = new java.lang.StringBuilder;

        specialinvoke $r104.<java.lang.StringBuilder: void <init>()>();

        $r105 = r1.<thredds.catalog.InvDatasetFcFmrc: java.lang.String path>;

        $r106 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r105);

        $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r103);

        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r96.<thredds.catalog.InvDatasetImpl: void setUrlPath(java.lang.String)>($r109);

        $r110 = new java.lang.StringBuilder;

        specialinvoke $r110.<java.lang.StringBuilder: void <init>()>();

        $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r116);

        $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r103);

        $r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r96.<thredds.catalog.InvDatasetImpl: void setID(java.lang.String)>($r114);

        $r115 = virtualinvoke $r96.<thredds.catalog.InvDatasetImpl: thredds.catalog.ThreddsMetadata getLocalMetadata()>();

        virtualinvoke $r115.<thredds.catalog.ThreddsMetadata: void addDocumentation(java.lang.String,java.lang.String)>("summary", "Forecast Model Run Collection (2D time coordinates).");

        virtualinvoke $r96.<thredds.catalog.InvDatasetImpl: boolean finish()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r96);

     label2:
        $r6 = r1.<thredds.catalog.InvDatasetFcFmrc: java.util.Set wantDatasets>;

        $r5 = <thredds.inventory.FeatureCollectionConfig$FmrcDatasetType: thredds.inventory.FeatureCollectionConfig$FmrcDatasetType Best>;

        $z1 = interfaceinvoke $r6.<java.util.Set: boolean contains(java.lang.Object)>($r5);

        if $z1 == 0 goto label3;

        $r76 = new thredds.catalog.InvDatasetImpl;

        specialinvoke $r76.<thredds.catalog.InvDatasetImpl: void <init>(thredds.catalog.InvDataset,java.lang.String)>(r1, "Best Time Series");

        $r77 = new java.lang.StringBuilder;

        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();

        $r78 = virtualinvoke r1.<thredds.catalog.InvDatasetFcFmrc: java.lang.String getName()>();

        $r79 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r78);

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("best.ncd");

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        $r83 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,char,java.lang.String)>($r82, 32, "_");

        $r84 = new java.lang.StringBuilder;

        specialinvoke $r84.<java.lang.StringBuilder: void <init>()>();

        $r85 = r1.<thredds.catalog.InvDatasetFcFmrc: java.lang.String path>;

        $r86 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r85);

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r83);

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r76.<thredds.catalog.InvDatasetImpl: void setUrlPath(java.lang.String)>($r89);

        $r90 = new java.lang.StringBuilder;

        specialinvoke $r90.<java.lang.StringBuilder: void <init>()>();

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r116);

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r83);

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r76.<thredds.catalog.InvDatasetImpl: void setID(java.lang.String)>($r94);

        $r95 = virtualinvoke $r76.<thredds.catalog.InvDatasetImpl: thredds.catalog.ThreddsMetadata getLocalMetadata()>();

        virtualinvoke $r95.<thredds.catalog.ThreddsMetadata: void addDocumentation(java.lang.String,java.lang.String)>("summary", "Best time series, taking the data from the most recent run available.");

        virtualinvoke $r76.<thredds.catalog.InvDatasetImpl: boolean finish()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r76);

     label3:
        $r7 = r1.<thredds.catalog.InvDatasetFcFmrc: thredds.inventory.FeatureCollectionConfig config>;

        $r8 = $r7.<thredds.inventory.FeatureCollectionConfig: thredds.inventory.FeatureCollectionConfig$FmrcConfig fmrcConfig>;

        $r9 = virtualinvoke $r8.<thredds.inventory.FeatureCollectionConfig$FmrcConfig: java.util.List getBestDatasets()>();

        if $r9 == null goto label5;

        $r45 = r1.<thredds.catalog.InvDatasetFcFmrc: thredds.inventory.FeatureCollectionConfig config>;

        $r46 = $r45.<thredds.inventory.FeatureCollectionConfig: thredds.inventory.FeatureCollectionConfig$FmrcConfig fmrcConfig>;

        $r47 = virtualinvoke $r46.<thredds.inventory.FeatureCollectionConfig$FmrcConfig: java.util.List getBestDatasets()>();

        $r48 = interfaceinvoke $r47.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z6 = interfaceinvoke $r48.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label5;

        $r49 = interfaceinvoke $r48.<java.util.Iterator: java.lang.Object next()>();

        r117 = (thredds.inventory.FeatureCollectionConfig$BestDataset) $r49;

        $r50 = new thredds.catalog.InvDatasetImpl;

        $r51 = r117.<thredds.inventory.FeatureCollectionConfig$BestDataset: java.lang.String name>;

        specialinvoke $r50.<thredds.catalog.InvDatasetImpl: void <init>(thredds.catalog.InvDataset,java.lang.String)>(r1, $r51);

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke r1.<thredds.catalog.InvDatasetFcFmrc: java.lang.String getName()>();

        $r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r56 = r117.<thredds.inventory.FeatureCollectionConfig$BestDataset: java.lang.String name>;

        $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        $r59 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,char,java.lang.String)>($r58, 32, "_");

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r61 = r1.<thredds.catalog.InvDatasetFcFmrc: java.lang.String path>;

        $r62 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r50.<thredds.catalog.InvDatasetImpl: void setUrlPath(java.lang.String)>($r65);

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r116);

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r50.<thredds.catalog.InvDatasetImpl: void setID(java.lang.String)>($r70);

        $r71 = virtualinvoke $r50.<thredds.catalog.InvDatasetImpl: thredds.catalog.ThreddsMetadata getLocalMetadata()>();

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Best time series, excluding offset hours less than ");

        $d2 = r117.<thredds.inventory.FeatureCollectionConfig$BestDataset: double greaterThan>;

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d2);

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r71.<thredds.catalog.ThreddsMetadata: void addDocumentation(java.lang.String,java.lang.String)>("summary", $r75);

        virtualinvoke $r50.<thredds.catalog.InvDatasetImpl: boolean finish()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r50);

        goto label4;

     label5:
        $r11 = r1.<thredds.catalog.InvDatasetFcFmrc: java.util.Set wantDatasets>;

        $r10 = <thredds.inventory.FeatureCollectionConfig$FmrcDatasetType: thredds.inventory.FeatureCollectionConfig$FmrcDatasetType Runs>;

        $z2 = interfaceinvoke $r11.<java.util.Set: boolean contains(java.lang.Object)>($r10);

        if $z2 == 0 goto label6;

        $r43 = new thredds.catalog.InvCatalogRef;

        $r44 = virtualinvoke r1.<thredds.catalog.InvDatasetFcFmrc: java.lang.String getCatalogHref(java.lang.String)>("runs");

        specialinvoke $r43.<thredds.catalog.InvCatalogRef: void <init>(thredds.catalog.InvDatasetImpl,java.lang.String,java.lang.String)>(r1, "Forecast Model Run", $r44);

        virtualinvoke $r43.<thredds.catalog.InvDatasetImpl: boolean finish()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r43);

     label6:
        $r13 = r1.<thredds.catalog.InvDatasetFcFmrc: java.util.Set wantDatasets>;

        $r12 = <thredds.inventory.FeatureCollectionConfig$FmrcDatasetType: thredds.inventory.FeatureCollectionConfig$FmrcDatasetType ConstantForecasts>;

        $z3 = interfaceinvoke $r13.<java.util.Set: boolean contains(java.lang.Object)>($r12);

        if $z3 == 0 goto label7;

        $r41 = new thredds.catalog.InvCatalogRef;

        $r42 = virtualinvoke r1.<thredds.catalog.InvDatasetFcFmrc: java.lang.String getCatalogHref(java.lang.String)>("forecast");

        specialinvoke $r41.<thredds.catalog.InvCatalogRef: void <init>(thredds.catalog.InvDatasetImpl,java.lang.String,java.lang.String)>(r1, "Constant Forecast Date", $r42);

        virtualinvoke $r41.<thredds.catalog.InvDatasetImpl: boolean finish()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r41);

     label7:
        $r15 = r1.<thredds.catalog.InvDatasetFcFmrc: java.util.Set wantDatasets>;

        $r14 = <thredds.inventory.FeatureCollectionConfig$FmrcDatasetType: thredds.inventory.FeatureCollectionConfig$FmrcDatasetType ConstantOffsets>;

        $z4 = interfaceinvoke $r15.<java.util.Set: boolean contains(java.lang.Object)>($r14);

        if $z4 == 0 goto label8;

        $r39 = new thredds.catalog.InvCatalogRef;

        $r40 = virtualinvoke r1.<thredds.catalog.InvDatasetFcFmrc: java.lang.String getCatalogHref(java.lang.String)>("offset");

        specialinvoke $r39.<thredds.catalog.InvCatalogRef: void <init>(thredds.catalog.InvDatasetImpl,java.lang.String,java.lang.String)>(r1, "Constant Forecast Offset", $r40);

        virtualinvoke $r39.<thredds.catalog.InvDatasetImpl: boolean finish()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r39);

     label8:
        $r17 = r1.<thredds.catalog.InvDatasetFcFmrc: java.util.Set wantDatasets>;

        $r16 = <thredds.inventory.FeatureCollectionConfig$FmrcDatasetType: thredds.inventory.FeatureCollectionConfig$FmrcDatasetType Files>;

        $z5 = interfaceinvoke $r17.<java.util.Set: boolean contains(java.lang.Object)>($r16);

        if $z5 == 0 goto label9;

        $r19 = r1.<thredds.catalog.InvDatasetFcFmrc: java.lang.String topDirectory>;

        if $r19 == null goto label9;

        $r20 = r1.<thredds.catalog.InvDatasetFcFmrc: thredds.inventory.DatasetCollectionManager dcm>;

        $d0 = virtualinvoke $r20.<thredds.inventory.DatasetCollectionManager: double getOlderThanFilterInSecs()>();

        $d1 = 1000.0 * $d0;

        l0 = (long) $d1;

        $r21 = new thredds.catalog.InvDatasetFeatureCollection$ScanFilter;

        $r22 = r1.<thredds.catalog.InvDatasetFcFmrc: java.util.regex.Pattern filter>;

        specialinvoke $r21.<thredds.catalog.InvDatasetFeatureCollection$ScanFilter: void <init>(java.util.regex.Pattern,long)>($r22, l0);

        $r23 = new thredds.catalog.InvDatasetScan;

        $r24 = virtualinvoke r1.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvCatalog getParentCatalog()>();

        $r26 = (thredds.catalog.InvCatalogImpl) $r24;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r27 = r1.<thredds.catalog.InvDatasetFcFmrc: java.lang.String path>;

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("files");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        $r32 = r1.<thredds.catalog.InvDatasetFcFmrc: java.lang.String topDirectory>;

        specialinvoke $r23.<thredds.catalog.InvDatasetScan: void <init>(thredds.catalog.InvCatalogImpl,thredds.catalog.InvDatasetImpl,java.lang.String,java.lang.String,java.lang.String,thredds.crawlabledataset.CrawlableDatasetFilter,boolean,java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String)>($r26, r1, "File_Access", $r31, $r32, $r21, 1, "true", 0, null, null, null);

        $r33 = r1.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvService orgService>;

        virtualinvoke $r23.<thredds.catalog.InvDatasetScan: void addService(thredds.catalog.InvService)>($r33);

        $r34 = virtualinvoke $r23.<thredds.catalog.InvDatasetScan: thredds.catalog.ThreddsMetadata getLocalMetadataInheritable()>();

        $r35 = r1.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvService orgService>;

        $r36 = virtualinvoke $r35.<thredds.catalog.InvService: java.lang.String getName()>();

        virtualinvoke $r34.<thredds.catalog.ThreddsMetadata: void setServiceName(java.lang.String)>($r36);

        virtualinvoke $r34.<thredds.catalog.ThreddsMetadata: void addDocumentation(java.lang.String,java.lang.String)>("summary", "Individual data file, which comprise the Forecast Model Run Collection.");

        virtualinvoke $r34.<thredds.catalog.ThreddsMetadata: void setGeospatialCoverage(thredds.catalog.ThreddsMetadata$GeospatialCoverage)>(null);

        virtualinvoke $r34.<thredds.catalog.ThreddsMetadata: void setTimeCoverage(ucar.nc2.units.DateRange)>(null);

        $r37 = r1.<thredds.catalog.InvDatasetFcFmrc: thredds.catalog.InvService orgService>;

        $r38 = virtualinvoke $r37.<thredds.catalog.InvService: java.lang.String getName()>();

        virtualinvoke $r23.<thredds.catalog.InvDatasetScan: void setServiceName(java.lang.String)>($r38);

        virtualinvoke $r23.<thredds.catalog.InvDatasetScan: boolean finish()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r23);

        r18.<thredds.catalog.InvDatasetFeatureCollection$State: thredds.catalog.InvDatasetScan scan> = $r23;

     label9:
        r18.<thredds.catalog.InvDatasetFeatureCollection$State: java.util.List datasets> = $r0;

        r1.<thredds.catalog.InvDatasetFcFmrc: java.util.List datasets> = $r0;

        virtualinvoke r1.<thredds.catalog.InvDatasetFcFmrc: boolean finish()>();

        return;
    }

    public ucar.nc2.dt.GridDataset getGridDataset(java.lang.String) throws java.io.IOException
    {
        ucar.nc2.dt.grid.GridDataset $r63, $r66;
        java.util.Set $r30, $r38, $r46, $r52, $r56;
        java.lang.StringBuilder $r7, $r8, $r11, $r12, $r15, $r16, $r65, $r67, $r68;
        thredds.inventory.FeatureCollectionConfig$FmrcConfig $r19, $r22;
        java.lang.String r0, r1, r2, $r5, $r6, $r9, $r13, $r17, $r26, $r31, $r32, $r39, $r40, $r47, $r48, $r61, $r62;
        thredds.inventory.FeatureCollectionConfig$BestDataset r64;
        ucar.nc2.dt.GridDataset $r28, $r36, $r44, $r50, $r54, $r58;
        ucar.nc2.dataset.NetcdfDataset $r59;
        java.util.Date $r34, $r42;
        thredds.inventory.FeatureCollectionConfig$FmrcDatasetType $r29, $r37, $r45, $r51, $r55;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.io.FileNotFoundException $r60;
        java.util.List $r20, $r23;
        thredds.catalog.InvDatasetFcFmrc r4;
        ucar.nc2.units.DateFormatter $r69, $r70;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i15;
        double $d0;
        thredds.inventory.FeatureCollectionConfig $r18, $r21;
        ucar.nc2.ft.fmrc.Fmrc $r27, $r35, $r43, $r49, $r53, $r57;
        java.util.Iterator $r24;
        java.lang.Object $r25;

        r4 := @this: thredds.catalog.InvDatasetFcFmrc;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(47);

        $i13 = (int) -1;

        if $i0 <= $i13 goto label01;

        $r61 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        goto label02;

     label01:
        $r61 = r0;

     label02:
        r1 = $r61;

        $i15 = (int) -1;

        if $i0 <= $i15 goto label03;

        $i11 = $i0 + 1;

        $r62 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i11);

        goto label04;

     label03:
        $r62 = r0;

     label04:
        r2 = $r62;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r5 = r4.<thredds.catalog.InvDatasetFcFmrc: java.lang.String name>;

        $r6 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,char,java.lang.String)>($r5, 32, "_");

        $r7 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label05:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("files");

        if $z0 == 0 goto label08;

        $r59 = virtualinvoke r4.<thredds.catalog.InvDatasetFcFmrc: ucar.nc2.dataset.NetcdfDataset getNetcdfDataset(java.lang.String)>(r0);

        if $r59 != null goto label06;

        $r63 = null;

        goto label07;

     label06:
        $r66 = new ucar.nc2.dt.grid.GridDataset;

        $r63 = $r66;

        specialinvoke $r66.<ucar.nc2.dt.grid.GridDataset: void <init>(ucar.nc2.dataset.NetcdfDataset)>($r59);

     label07:
        return $r63;

     label08:
        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fmrc.ncd");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = virtualinvoke $r62.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z1 == 0 goto label10;

        $r56 = r4.<thredds.catalog.InvDatasetFcFmrc: java.util.Set wantDatasets>;

        $r55 = <thredds.inventory.FeatureCollectionConfig$FmrcDatasetType: thredds.inventory.FeatureCollectionConfig$FmrcDatasetType TwoD>;

        $z12 = interfaceinvoke $r56.<java.util.Set: boolean contains(java.lang.Object)>($r55);

        if $z12 == 0 goto label10;

        $r57 = r4.<thredds.catalog.InvDatasetFcFmrc: ucar.nc2.ft.fmrc.Fmrc fmrc>;

        $r58 = virtualinvoke $r57.<ucar.nc2.ft.fmrc.Fmrc: ucar.nc2.dt.GridDataset getDataset2D(ucar.nc2.dataset.NetcdfDataset)>(null);

     label09:
        return $r58;

     label10:
        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("best.ncd");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z2 == 0 goto label12;

        $r52 = r4.<thredds.catalog.InvDatasetFcFmrc: java.util.Set wantDatasets>;

        $r51 = <thredds.inventory.FeatureCollectionConfig$FmrcDatasetType: thredds.inventory.FeatureCollectionConfig$FmrcDatasetType Best>;

        $z11 = interfaceinvoke $r52.<java.util.Set: boolean contains(java.lang.Object)>($r51);

        if $z11 == 0 goto label12;

        $r53 = r4.<thredds.catalog.InvDatasetFcFmrc: ucar.nc2.ft.fmrc.Fmrc fmrc>;

        $r54 = virtualinvoke $r53.<ucar.nc2.ft.fmrc.Fmrc: ucar.nc2.dt.GridDataset getDatasetBest()>();

     label11:
        return $r54;

     label12:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("offset");

        if $z3 == 0 goto label16;

        $r46 = r4.<thredds.catalog.InvDatasetFcFmrc: java.util.Set wantDatasets>;

        $r45 = <thredds.inventory.FeatureCollectionConfig$FmrcDatasetType: thredds.inventory.FeatureCollectionConfig$FmrcDatasetType ConstantOffsets>;

        $z10 = interfaceinvoke $r46.<java.util.Set: boolean contains(java.lang.Object)>($r45);

        if $z10 == 0 goto label16;

        $i7 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>("Offset_");

        $i8 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>("hr");

        if $i7 < 0 goto label13;

        if $i8 >= 0 goto label14;

     label13:
        return null;

     label14:
        $r47 = "Offset_";

        $i9 = virtualinvoke $r47.<java.lang.String: int length()>();

        $i10 = $i7 + $i9;

        $r48 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>($i10, $i8);

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r48);

        $r49 = r4.<thredds.catalog.InvDatasetFcFmrc: ucar.nc2.ft.fmrc.Fmrc fmrc>;

        $r50 = virtualinvoke $r49.<ucar.nc2.ft.fmrc.Fmrc: ucar.nc2.dt.GridDataset getConstantOffsetDataset(double)>($d0);

     label15:
        return $r50;

     label16:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("runs");

        if $z4 == 0 goto label20;

        $r38 = r4.<thredds.catalog.InvDatasetFcFmrc: java.util.Set wantDatasets>;

        $r37 = <thredds.inventory.FeatureCollectionConfig$FmrcDatasetType: thredds.inventory.FeatureCollectionConfig$FmrcDatasetType Runs>;

        $z9 = interfaceinvoke $r38.<java.util.Set: boolean contains(java.lang.Object)>($r37);

        if $z9 == 0 goto label20;

        $i4 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>("RUN_");

        if $i4 >= 0 goto label18;

     label17:
        return null;

     label18:
        $r39 = "RUN_";

        $i5 = virtualinvoke $r39.<java.lang.String: int length()>();

        $i6 = $i4 + $i5;

        $r40 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i6);

        $r69 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r69.<ucar.nc2.units.DateFormatter: void <init>()>();

        $r42 = virtualinvoke $r69.<ucar.nc2.units.DateFormatter: java.util.Date getISODate(java.lang.String)>($r40);

        $r43 = r4.<thredds.catalog.InvDatasetFcFmrc: ucar.nc2.ft.fmrc.Fmrc fmrc>;

        $r44 = virtualinvoke $r43.<ucar.nc2.ft.fmrc.Fmrc: ucar.nc2.dt.GridDataset getRunTimeDataset(java.util.Date)>($r42);

     label19:
        return $r44;

     label20:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("forecast");

        if $z5 == 0 goto label24;

        $r30 = r4.<thredds.catalog.InvDatasetFcFmrc: java.util.Set wantDatasets>;

        $r29 = <thredds.inventory.FeatureCollectionConfig$FmrcDatasetType: thredds.inventory.FeatureCollectionConfig$FmrcDatasetType ConstantForecasts>;

        $z8 = interfaceinvoke $r30.<java.util.Set: boolean contains(java.lang.Object)>($r29);

        if $z8 == 0 goto label24;

        $i1 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>("ConstantForecast_");

        if $i1 >= 0 goto label22;

     label21:
        return null;

     label22:
        $r31 = "ConstantForecast_";

        $i2 = virtualinvoke $r31.<java.lang.String: int length()>();

        $i3 = $i1 + $i2;

        $r32 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3);

        $r70 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r70.<ucar.nc2.units.DateFormatter: void <init>()>();

        $r34 = virtualinvoke $r70.<ucar.nc2.units.DateFormatter: java.util.Date getISODate(java.lang.String)>($r32);

        $r35 = r4.<thredds.catalog.InvDatasetFcFmrc: ucar.nc2.ft.fmrc.Fmrc fmrc>;

        $r36 = virtualinvoke $r35.<ucar.nc2.ft.fmrc.Fmrc: ucar.nc2.dt.GridDataset getConstantForecastDataset(java.util.Date)>($r34);

     label23:
        return $r36;

     label24:
        $r18 = r4.<thredds.catalog.InvDatasetFcFmrc: thredds.inventory.FeatureCollectionConfig config>;

        $r19 = $r18.<thredds.inventory.FeatureCollectionConfig: thredds.inventory.FeatureCollectionConfig$FmrcConfig fmrcConfig>;

        $r20 = virtualinvoke $r19.<thredds.inventory.FeatureCollectionConfig$FmrcConfig: java.util.List getBestDatasets()>();

        if $r20 == null goto label28;

        $r21 = r4.<thredds.catalog.InvDatasetFcFmrc: thredds.inventory.FeatureCollectionConfig config>;

        $r22 = $r21.<thredds.inventory.FeatureCollectionConfig: thredds.inventory.FeatureCollectionConfig$FmrcConfig fmrcConfig>;

        $r23 = virtualinvoke $r22.<thredds.inventory.FeatureCollectionConfig$FmrcConfig: java.util.List getBestDatasets()>();

        $r24 = interfaceinvoke $r23.<java.util.List: java.util.Iterator iterator()>();

     label25:
        $z6 = interfaceinvoke $r24.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label28;

        $r25 = interfaceinvoke $r24.<java.util.Iterator: java.lang.Object next()>();

        r64 = (thredds.inventory.FeatureCollectionConfig$BestDataset) $r25;

        $r26 = r64.<thredds.inventory.FeatureCollectionConfig$BestDataset: java.lang.String name>;

        $z7 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>($r26);

        if $z7 == 0 goto label27;

        $r27 = r4.<thredds.catalog.InvDatasetFcFmrc: ucar.nc2.ft.fmrc.Fmrc fmrc>;

        $r28 = virtualinvoke $r27.<ucar.nc2.ft.fmrc.Fmrc: ucar.nc2.dt.GridDataset getDatasetBest(thredds.inventory.FeatureCollectionConfig$BestDataset)>(r64);

     label26:
        return $r28;

     label27:
        goto label25;

     label28:
        goto label30;

     label29:
        $r60 := @caughtexception;

        return null;

     label30:
        return null;

        catch java.io.FileNotFoundException from label05 to label07 with label29;
        catch java.io.FileNotFoundException from label08 to label09 with label29;
        catch java.io.FileNotFoundException from label10 to label11 with label29;
        catch java.io.FileNotFoundException from label12 to label13 with label29;
        catch java.io.FileNotFoundException from label14 to label15 with label29;
        catch java.io.FileNotFoundException from label16 to label17 with label29;
        catch java.io.FileNotFoundException from label18 to label19 with label29;
        catch java.io.FileNotFoundException from label20 to label21 with label29;
        catch java.io.FileNotFoundException from label22 to label23 with label29;
        catch java.io.FileNotFoundException from label24 to label26 with label29;
        catch java.io.FileNotFoundException from label27 to label28 with label29;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        <thredds.catalog.InvDatasetFcFmrc: java.lang.String OFFSET_TITLE> = "Constant Forecast Offset";

        <thredds.catalog.InvDatasetFcFmrc: java.lang.String OFFSET_NAME> = "Offset_";

        <thredds.catalog.InvDatasetFcFmrc: java.lang.String OFFSET> = "offset";

        <thredds.catalog.InvDatasetFcFmrc: java.lang.String FORECAST_TITLE> = "Constant Forecast Date";

        <thredds.catalog.InvDatasetFcFmrc: java.lang.String FORECAST_NAME> = "ConstantForecast_";

        <thredds.catalog.InvDatasetFcFmrc: java.lang.String FORECAST> = "forecast";

        <thredds.catalog.InvDatasetFcFmrc: java.lang.String RUN_TITLE> = "Forecast Model Run";

        <thredds.catalog.InvDatasetFcFmrc: java.lang.String RUN_NAME> = "RUN_";

        <thredds.catalog.InvDatasetFcFmrc: java.lang.String RUNS> = "runs";

        <thredds.catalog.InvDatasetFcFmrc: java.lang.String BEST> = "best.ncd";

        <thredds.catalog.InvDatasetFcFmrc: java.lang.String FMRC> = "fmrc.ncd";

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lthredds/catalog/InvDatasetFcFmrc;");

        <thredds.catalog.InvDatasetFcFmrc: org.slf4j.Logger logger> = $r0;

        return;
    }
}
