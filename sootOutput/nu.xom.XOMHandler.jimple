class nu.xom.XOMHandler extends java.lang.Object implements org.xml.sax.ContentHandler, org.xml.sax.ext.LexicalHandler, org.xml.sax.ext.DeclHandler, org.xml.sax.DTDHandler
{
    protected nu.xom.Document document;
    protected java.lang.String documentBaseURI;
    protected nu.xom.ParentNode parent;
    protected nu.xom.ParentNode current;
    protected java.util.ArrayList parents;
    protected boolean inProlog;
    protected boolean inDTD;
    protected int position;
    protected org.xml.sax.Locator locator;
    protected nu.xom.DocType doctype;
    protected java.lang.StringBuffer internalDTDSubset;
    protected nu.xom.NodeFactory factory;
    boolean usingCrimson;
    protected java.lang.String textString;
    protected java.lang.StringBuffer buffer;
    protected boolean inExternalSubset;
    protected boolean inCDATA;
    protected boolean finishedCDATA;

    void <init>(nu.xom.NodeFactory)
    {
        nu.xom.XOMHandler r0;
        nu.xom.NodeFactory r1;

        r0 := @this: nu.xom.XOMHandler;

        r1 := @parameter0: nu.xom.NodeFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<nu.xom.XOMHandler: boolean usingCrimson> = 0;

        r0.<nu.xom.XOMHandler: java.lang.String textString> = null;

        r0.<nu.xom.XOMHandler: java.lang.StringBuffer buffer> = null;

        r0.<nu.xom.XOMHandler: boolean inExternalSubset> = 0;

        r0.<nu.xom.XOMHandler: boolean inCDATA> = 0;

        r0.<nu.xom.XOMHandler: boolean finishedCDATA> = 0;

        r0.<nu.xom.XOMHandler: nu.xom.NodeFactory factory> = r1;

        return;
    }

    public void setDocumentLocator(org.xml.sax.Locator)
    {
        nu.xom.XOMHandler r0;
        org.xml.sax.Locator r1;

        r0 := @this: nu.xom.XOMHandler;

        r1 := @parameter0: org.xml.sax.Locator;

        r0.<nu.xom.XOMHandler: org.xml.sax.Locator locator> = r1;

        return;
    }

    nu.xom.Document getDocument()
    {
        nu.xom.XOMHandler r0;
        nu.xom.Document $r1;

        r0 := @this: nu.xom.XOMHandler;

        $r1 = r0.<nu.xom.XOMHandler: nu.xom.Document document>;

        return $r1;
    }

    void freeMemory()
    {
        nu.xom.XOMHandler r0;

        r0 := @this: nu.xom.XOMHandler;

        r0.<nu.xom.XOMHandler: nu.xom.Document document> = null;

        r0.<nu.xom.XOMHandler: nu.xom.ParentNode parent> = null;

        r0.<nu.xom.XOMHandler: nu.xom.ParentNode current> = null;

        r0.<nu.xom.XOMHandler: java.util.ArrayList parents> = null;

        r0.<nu.xom.XOMHandler: org.xml.sax.Locator locator> = null;

        r0.<nu.xom.XOMHandler: nu.xom.DocType doctype> = null;

        r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset> = null;

        return;
    }

    public void startDocument()
    {
        nu.xom.XOMHandler r0;
        org.xml.sax.Locator $r8, $r9;
        java.util.ArrayList $r5, $r7;
        nu.xom.NodeFactory $r1;
        java.lang.String $r10, $r11;
        nu.xom.Document $r2, $r3, $r4, $r6, $r12;

        r0 := @this: nu.xom.XOMHandler;

        r0.<nu.xom.XOMHandler: boolean inDTD> = 0;

        $r1 = r0.<nu.xom.XOMHandler: nu.xom.NodeFactory factory>;

        $r2 = virtualinvoke $r1.<nu.xom.NodeFactory: nu.xom.Document startMakingDocument()>();

        r0.<nu.xom.XOMHandler: nu.xom.Document document> = $r2;

        $r3 = r0.<nu.xom.XOMHandler: nu.xom.Document document>;

        r0.<nu.xom.XOMHandler: nu.xom.ParentNode parent> = $r3;

        $r4 = r0.<nu.xom.XOMHandler: nu.xom.Document document>;

        r0.<nu.xom.XOMHandler: nu.xom.ParentNode current> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<nu.xom.XOMHandler: java.util.ArrayList parents> = $r5;

        $r7 = r0.<nu.xom.XOMHandler: java.util.ArrayList parents>;

        $r6 = r0.<nu.xom.XOMHandler: nu.xom.Document document>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        r0.<nu.xom.XOMHandler: boolean inProlog> = 1;

        r0.<nu.xom.XOMHandler: int position> = 0;

        r0.<nu.xom.XOMHandler: java.lang.String textString> = null;

        r0.<nu.xom.XOMHandler: nu.xom.DocType doctype> = null;

        $r8 = r0.<nu.xom.XOMHandler: org.xml.sax.Locator locator>;

        if $r8 == null goto label1;

        $r9 = r0.<nu.xom.XOMHandler: org.xml.sax.Locator locator>;

        $r10 = interfaceinvoke $r9.<org.xml.sax.Locator: java.lang.String getSystemId()>();

        r0.<nu.xom.XOMHandler: java.lang.String documentBaseURI> = $r10;

        $r12 = r0.<nu.xom.XOMHandler: nu.xom.Document document>;

        $r11 = r0.<nu.xom.XOMHandler: java.lang.String documentBaseURI>;

        virtualinvoke $r12.<nu.xom.Document: void setBaseURI(java.lang.String)>($r11);

     label1:
        r0.<nu.xom.XOMHandler: java.lang.StringBuffer buffer> = null;

        return;
    }

    public void endDocument()
    {
        nu.xom.XOMHandler r0;
        nu.xom.NodeFactory $r2;
        int $i0, $i1;
        nu.xom.Document $r1;
        java.util.ArrayList $r3, $r4;

        r0 := @this: nu.xom.XOMHandler;

        $r2 = r0.<nu.xom.XOMHandler: nu.xom.NodeFactory factory>;

        $r1 = r0.<nu.xom.XOMHandler: nu.xom.Document document>;

        virtualinvoke $r2.<nu.xom.NodeFactory: void finishMakingDocument(nu.xom.Document)>($r1);

        $r4 = r0.<nu.xom.XOMHandler: java.util.ArrayList parents>;

        $r3 = r0.<nu.xom.XOMHandler: java.util.ArrayList parents>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $i1 = $i0 - 1;

        virtualinvoke $r4.<java.util.ArrayList: java.lang.Object remove(int)>($i1);

        return;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)
    {
        java.lang.NullPointerException $r37;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        nu.xom.Node $r29;
        nu.xom.NodeFactory $r5, $r25, $r30, $r32, $r38;
        nu.xom.Element $r6, r40;
        org.xml.sax.Locator $r11, $r33;
        java.util.ArrayList $r8;
        nu.xom.Attribute$Type $r27;
        org.xml.sax.Attributes r12;
        int $i0, $i1, $i2, i3, $i4, i5, i6, i7;
        nu.xom.Nodes $r28;
        nu.xom.ParentNode $r2, $r10, $r36;
        java.lang.String r3, r4, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r26, $r34, $r35, r39;
        nu.xom.XOMHandler r0;
        nu.xom.Attribute $r31;
        nu.xom.Document $r1, $r7, $r9;

        r0 := @this: nu.xom.XOMHandler;

        r4 := @parameter0: java.lang.String;

        r39 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r12 := @parameter3: org.xml.sax.Attributes;

        specialinvoke r0.<nu.xom.XOMHandler: void flushText()>();

        $r2 = r0.<nu.xom.XOMHandler: nu.xom.ParentNode parent>;

        $r1 = r0.<nu.xom.XOMHandler: nu.xom.Document document>;

        if $r2 == $r1 goto label01;

        $r38 = r0.<nu.xom.XOMHandler: nu.xom.NodeFactory factory>;

        r40 = virtualinvoke $r38.<nu.xom.NodeFactory: nu.xom.Element startMakingElement(java.lang.String,java.lang.String)>(r3, r4);

        goto label03;

     label01:
        $r5 = r0.<nu.xom.XOMHandler: nu.xom.NodeFactory factory>;

        $r6 = virtualinvoke $r5.<nu.xom.NodeFactory: nu.xom.Element makeRootElement(java.lang.String,java.lang.String)>(r3, r4);

        r40 = $r6;

        if $r6 != null goto label02;

        $r37 = new java.lang.NullPointerException;

        specialinvoke $r37.<java.lang.NullPointerException: void <init>(java.lang.String)>("Factory failed to create root element.");

        throw $r37;

     label02:
        $r7 = r0.<nu.xom.XOMHandler: nu.xom.Document document>;

        virtualinvoke $r7.<nu.xom.Document: void setRootElement(nu.xom.Element)>($r6);

        r0.<nu.xom.XOMHandler: boolean inProlog> = 0;

     label03:
        r0.<nu.xom.XOMHandler: nu.xom.ParentNode current> = r40;

        $r8 = r0.<nu.xom.XOMHandler: java.util.ArrayList parents>;

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r40);

        if r40 == null goto label18;

        $r10 = r0.<nu.xom.XOMHandler: nu.xom.ParentNode parent>;

        $r9 = r0.<nu.xom.XOMHandler: nu.xom.Document document>;

        if $r10 == $r9 goto label04;

        $r36 = r0.<nu.xom.XOMHandler: nu.xom.ParentNode parent>;

        virtualinvoke $r36.<nu.xom.ParentNode: void appendChild(nu.xom.Node)>(r40);

     label04:
        $r11 = r0.<nu.xom.XOMHandler: org.xml.sax.Locator locator>;

        if $r11 == null goto label05;

        $r33 = r0.<nu.xom.XOMHandler: org.xml.sax.Locator locator>;

        $r34 = interfaceinvoke $r33.<org.xml.sax.Locator: java.lang.String getSystemId()>();

        if $r34 == null goto label05;

        $r35 = r0.<nu.xom.XOMHandler: java.lang.String documentBaseURI>;

        $z9 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>($r35);

        if $z9 != 0 goto label05;

        virtualinvoke r40.<nu.xom.Element: void setActualBaseURI(java.lang.String)>($r34);

     label05:
        i3 = 0;

     label06:
        $i4 = interfaceinvoke r12.<org.xml.sax.Attributes: int getLength()>();

        if i3 >= $i4 goto label12;

        $r22 = interfaceinvoke r12.<org.xml.sax.Attributes: java.lang.String getQName(int)>(i3);

        $z6 = virtualinvoke $r22.<java.lang.String: boolean startsWith(java.lang.String)>("xmlns:");

        if $z6 != 0 goto label11;

        $z7 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z7 == 0 goto label07;

        goto label11;

     label07:
        $r23 = interfaceinvoke r12.<org.xml.sax.Attributes: java.lang.String getURI(int)>(i3);

        $r24 = interfaceinvoke r12.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i3);

        $r25 = r0.<nu.xom.XOMHandler: nu.xom.NodeFactory factory>;

        $r26 = interfaceinvoke r12.<org.xml.sax.Attributes: java.lang.String getType(int)>(i3);

        $r27 = staticinvoke <nu.xom.XOMHandler: nu.xom.Attribute$Type convertStringToType(java.lang.String)>($r26);

        $r28 = virtualinvoke $r25.<nu.xom.NodeFactory: nu.xom.Nodes makeAttribute(java.lang.String,java.lang.String,java.lang.String,nu.xom.Attribute$Type)>($r22, $r23, $r24, $r27);

        i5 = 0;

        i6 = 0;

     label08:
        $i1 = virtualinvoke $r28.<nu.xom.Nodes: int size()>();

        if i6 >= $i1 goto label11;

        $r29 = virtualinvoke $r28.<nu.xom.Nodes: nu.xom.Node get(int)>(i6);

        $z8 = virtualinvoke $r29.<nu.xom.Node: boolean isAttribute()>();

        if $z8 == 0 goto label09;

        $r32 = r0.<nu.xom.XOMHandler: nu.xom.NodeFactory factory>;

        $r31 = (nu.xom.Attribute) $r29;

        virtualinvoke $r32.<nu.xom.NodeFactory: void addAttribute(nu.xom.Element,nu.xom.Attribute)>(r40, $r31);

        goto label10;

     label09:
        $r30 = r0.<nu.xom.XOMHandler: nu.xom.NodeFactory factory>;

        $i2 = i5;

        i5 = i5 + 1;

        virtualinvoke $r30.<nu.xom.NodeFactory: void insertChild(nu.xom.Element,nu.xom.Node,int)>(r40, $r29, $i2);

     label10:
        i6 = i6 + 1;

        goto label08;

     label11:
        i3 = i3 + 1;

        goto label06;

     label12:
        i7 = 0;

     label13:
        $i0 = interfaceinvoke r12.<org.xml.sax.Attributes: int getLength()>();

        if i7 >= $i0 goto label17;

        $r13 = interfaceinvoke r12.<org.xml.sax.Attributes: java.lang.String getQName(int)>(i7);

        $z0 = virtualinvoke $r13.<java.lang.String: boolean startsWith(java.lang.String)>("xmlns:");

        if $z0 == 0 goto label15;

        $r18 = interfaceinvoke r12.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i7);

        $r19 = virtualinvoke $r13.<java.lang.String: java.lang.String substring(int)>(6);

        $r20 = virtualinvoke r40.<nu.xom.Element: java.lang.String getNamespaceURI(java.lang.String)>($r19);

        $z4 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z4 != 0 goto label14;

        $r21 = virtualinvoke r40.<nu.xom.Element: java.lang.String getNamespacePrefix()>();

        $z5 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>($r21);

        if $z5 != 0 goto label14;

        virtualinvoke r40.<nu.xom.Element: void addNamespaceDeclaration(java.lang.String,java.lang.String)>($r19, $r18);

     label14:
        goto label16;

     label15:
        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z1 == 0 goto label16;

        $r14 = interfaceinvoke r12.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i7);

        $r15 = virtualinvoke r40.<nu.xom.Element: java.lang.String getNamespaceURI(java.lang.String)>("");

        $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z2 != 0 goto label16;

        $r16 = "";

        $r17 = virtualinvoke r40.<nu.xom.Element: java.lang.String getNamespacePrefix()>();

        $z3 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z3 != 0 goto label16;

        virtualinvoke r40.<nu.xom.Element: void addNamespaceDeclaration(java.lang.String,java.lang.String)>("", $r14);

     label16:
        i7 = i7 + 1;

        goto label13;

     label17:
        r0.<nu.xom.XOMHandler: nu.xom.ParentNode parent> = r40;

     label18:
        return;
    }

    public void endElement(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.IndexOutOfBoundsException $r29;
        nu.xom.IllegalAddException $r19;
        boolean $z0, $z1, $z2, z3, z4, z5, z6;
        nu.xom.Node $r16, $r22, $r27;
        nu.xom.NodeFactory $r10;
        nu.xom.XMLException $r30;
        nu.xom.Element $r9, $r14, $r17, $r18, $r26;
        java.util.ArrayList $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        nu.xom.Nodes $r11;
        nu.xom.ParentNode $r4, $r5, $r6, $r7, $r8, $r12, $r13, $r20, $r21, $r23, $r24, $r28;
        java.lang.String r31, r32, r33;
        nu.xom.XOMHandler r0;
        nu.xom.Attribute $r25;
        nu.xom.WellformednessException $r15;
        java.lang.Object $r3;
        nu.xom.Document r34;

        r0 := @this: nu.xom.XOMHandler;

        r31 := @parameter0: java.lang.String;

        r32 := @parameter1: java.lang.String;

        r33 := @parameter2: java.lang.String;

        $r2 = r0.<nu.xom.XOMHandler: java.util.ArrayList parents>;

        $r1 = r0.<nu.xom.XOMHandler: java.util.ArrayList parents>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = $i0 - 1;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object remove(int)>($i1);

        $r4 = (nu.xom.ParentNode) $r3;

        r0.<nu.xom.XOMHandler: nu.xom.ParentNode current> = $r4;

        specialinvoke r0.<nu.xom.XOMHandler: void flushText()>();

        $r5 = r0.<nu.xom.XOMHandler: nu.xom.ParentNode current>;

        if $r5 == null goto label18;

        $r6 = r0.<nu.xom.XOMHandler: nu.xom.ParentNode current>;

        $r7 = virtualinvoke $r6.<nu.xom.ParentNode: nu.xom.ParentNode getParent()>();

        r0.<nu.xom.XOMHandler: nu.xom.ParentNode parent> = $r7;

        $r10 = r0.<nu.xom.XOMHandler: nu.xom.NodeFactory factory>;

        $r8 = r0.<nu.xom.XOMHandler: nu.xom.ParentNode current>;

        $r9 = (nu.xom.Element) $r8;

        $r11 = virtualinvoke $r10.<nu.xom.NodeFactory: nu.xom.Nodes finishMakingElement(nu.xom.Element)>($r9);

        $i2 = virtualinvoke $r11.<nu.xom.Nodes: int size()>();

        if $i2 != 1 goto label01;

        $r27 = virtualinvoke $r11.<nu.xom.Nodes: nu.xom.Node get(int)>(0);

        $r28 = r0.<nu.xom.XOMHandler: nu.xom.ParentNode current>;

        if $r27 == $r28 goto label18;

     label01:
        $r12 = r0.<nu.xom.XOMHandler: nu.xom.ParentNode parent>;

        $z0 = virtualinvoke $r12.<nu.xom.ParentNode: boolean isDocument()>();

        if $z0 != 0 goto label10;

        $r20 = r0.<nu.xom.XOMHandler: nu.xom.ParentNode parent>;

        $i5 = virtualinvoke $r20.<nu.xom.ParentNode: int getChildCount()>();

     label02:
        $r21 = r0.<nu.xom.XOMHandler: nu.xom.ParentNode parent>;

        $i6 = $i5 - 1;

        virtualinvoke $r21.<nu.xom.ParentNode: nu.xom.Node removeChild(int)>($i6);

     label03:
        goto label05;

     label04:
        $r29 := @caughtexception;

        $r30 = new nu.xom.XMLException;

        specialinvoke $r30.<nu.xom.XMLException: void <init>(java.lang.String,java.lang.Throwable)>("Factory detached element in finishMakingElement()", $r29);

        throw $r30;

     label05:
        i8 = 0;

     label06:
        $i7 = virtualinvoke $r11.<nu.xom.Nodes: int size()>();

        if i8 >= $i7 goto label09;

        $r22 = virtualinvoke $r11.<nu.xom.Nodes: nu.xom.Node get(int)>(i8);

        $z2 = virtualinvoke $r22.<nu.xom.Node: boolean isAttribute()>();

        if $z2 == 0 goto label07;

        $r24 = r0.<nu.xom.XOMHandler: nu.xom.ParentNode parent>;

        $r26 = (nu.xom.Element) $r24;

        $r25 = (nu.xom.Attribute) $r22;

        virtualinvoke $r26.<nu.xom.Element: void addAttribute(nu.xom.Attribute)>($r25);

        goto label08;

     label07:
        $r23 = r0.<nu.xom.XOMHandler: nu.xom.ParentNode parent>;

        virtualinvoke $r23.<nu.xom.ParentNode: void appendChild(nu.xom.Node)>($r22);

     label08:
        i8 = i8 + 1;

        goto label06;

     label09:
        goto label18;

     label10:
        $r13 = r0.<nu.xom.XOMHandler: nu.xom.ParentNode parent>;

        r34 = (nu.xom.Document) $r13;

        $r14 = virtualinvoke r34.<nu.xom.Document: nu.xom.Element getRootElement()>();

        z3 = 1;

        z6 = 1;

        z5 = 1;

        z4 = 1;

        i9 = 0;

     label11:
        $i3 = virtualinvoke $r11.<nu.xom.Nodes: int size()>();

        if i9 >= $i3 goto label17;

        $r16 = virtualinvoke $r11.<nu.xom.Nodes: nu.xom.Node get(int)>(i9);

        $z1 = virtualinvoke $r16.<nu.xom.Node: boolean isElement()>();

        if $z1 == 0 goto label14;

        if $r16 == $r14 goto label13;

        if z6 != 0 goto label12;

        $r19 = new nu.xom.IllegalAddException;

        specialinvoke $r19.<nu.xom.IllegalAddException: void <init>(java.lang.String)>("Factory returned multiple roots");

        throw $r19;

     label12:
        $r18 = (nu.xom.Element) $r16;

        virtualinvoke r34.<nu.xom.Document: void setRootElement(nu.xom.Element)>($r18);

     label13:
        z3 = 0;

        z6 = 0;

        z5 = 0;

        z4 = 0;

        goto label16;

     label14:
        if z4 == 0 goto label15;

        $r17 = virtualinvoke r34.<nu.xom.Document: nu.xom.Element getRootElement()>();

        $i4 = virtualinvoke r34.<nu.xom.Document: int indexOf(nu.xom.Node)>($r17);

        virtualinvoke r34.<nu.xom.Document: void insertChild(nu.xom.Node,int)>($r16, $i4);

        goto label16;

     label15:
        virtualinvoke r34.<nu.xom.Document: void appendChild(nu.xom.Node)>($r16);

     label16:
        i9 = i9 + 1;

        goto label11;

     label17:
        if z5 == 0 goto label18;

        $r15 = new nu.xom.WellformednessException;

        specialinvoke $r15.<nu.xom.WellformednessException: void <init>(java.lang.String)>("Factory attempted to remove the root element");

        throw $r15;

     label18:
        return;

        catch java.lang.IndexOutOfBoundsException from label02 to label03 with label04;
    }

    static nu.xom.Attribute$Type convertStringToType(java.lang.String)
    {
        nu.xom.Attribute$Type $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        java.lang.String r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("CDATA");

        if $z0 == 0 goto label01;

        $r12 = <nu.xom.Attribute$Type: nu.xom.Attribute$Type CDATA>;

        return $r12;

     label01:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("ID");

        if $z1 == 0 goto label02;

        $r11 = <nu.xom.Attribute$Type: nu.xom.Attribute$Type ID>;

        return $r11;

     label02:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("IDREF");

        if $z2 == 0 goto label03;

        $r10 = <nu.xom.Attribute$Type: nu.xom.Attribute$Type IDREF>;

        return $r10;

     label03:
        $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("IDREFS");

        if $z3 == 0 goto label04;

        $r9 = <nu.xom.Attribute$Type: nu.xom.Attribute$Type IDREFS>;

        return $r9;

     label04:
        $z4 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("NMTOKEN");

        if $z4 == 0 goto label05;

        $r8 = <nu.xom.Attribute$Type: nu.xom.Attribute$Type NMTOKEN>;

        return $r8;

     label05:
        $z5 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("NMTOKENS");

        if $z5 == 0 goto label06;

        $r7 = <nu.xom.Attribute$Type: nu.xom.Attribute$Type NMTOKENS>;

        return $r7;

     label06:
        $z6 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("ENTITY");

        if $z6 == 0 goto label07;

        $r6 = <nu.xom.Attribute$Type: nu.xom.Attribute$Type ENTITY>;

        return $r6;

     label07:
        $z7 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("ENTITIES");

        if $z7 == 0 goto label08;

        $r5 = <nu.xom.Attribute$Type: nu.xom.Attribute$Type ENTITIES>;

        return $r5;

     label08:
        $z8 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("NOTATION");

        if $z8 == 0 goto label09;

        $r4 = <nu.xom.Attribute$Type: nu.xom.Attribute$Type NOTATION>;

        return $r4;

     label09:
        $z9 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("ENUMERATION");

        if $z9 == 0 goto label10;

        $r3 = <nu.xom.Attribute$Type: nu.xom.Attribute$Type ENUMERATION>;

        return $r3;

     label10:
        $z10 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("(");

        if $z10 == 0 goto label11;

        $r2 = <nu.xom.Attribute$Type: nu.xom.Attribute$Type ENUMERATION>;

        return $r2;

     label11:
        $r1 = <nu.xom.Attribute$Type: nu.xom.Attribute$Type UNDECLARED>;

        return $r1;
    }

    public void characters(char[], int, int)
    {
        nu.xom.XOMHandler r0;
        java.lang.StringBuffer $r2, $r4, $r5;
        int i0, i1;
        char[] r3;
        java.lang.String $r1, $r6, $r7;
        boolean $z0;

        r0 := @this: nu.xom.XOMHandler;

        r3 := @parameter0: char[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        if i0 > 0 goto label1;

        return;

     label1:
        $r1 = r0.<nu.xom.XOMHandler: java.lang.String textString>;

        if $r1 != null goto label2;

        $r7 = new java.lang.String;

        specialinvoke $r7.<java.lang.String: void <init>(char[],int,int)>(r3, i1, i0);

        r0.<nu.xom.XOMHandler: java.lang.String textString> = $r7;

        goto label4;

     label2:
        $r2 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer buffer>;

        if $r2 != null goto label3;

        $r5 = new java.lang.StringBuffer;

        $r6 = r0.<nu.xom.XOMHandler: java.lang.String textString>;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>(java.lang.String)>($r6);

        r0.<nu.xom.XOMHandler: java.lang.StringBuffer buffer> = $r5;

     label3:
        $r4 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer buffer>;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>(r3, i1, i0);

     label4:
        $z0 = r0.<nu.xom.XOMHandler: boolean finishedCDATA>;

        if $z0 == 0 goto label5;

        r0.<nu.xom.XOMHandler: boolean inCDATA> = 0;

     label5:
        return;
    }

    private void flushText()
    {
        nu.xom.Element $r9;
        java.lang.StringBuffer $r1, $r12;
        int i0, $i1;
        nu.xom.Nodes r14;
        java.lang.String $r2, $r3, $r10, $r13;
        nu.xom.ParentNode $r6, $r7;
        boolean $z0, $z1;
        nu.xom.XOMHandler r0;
        nu.xom.Node $r5;
        nu.xom.Attribute $r8;
        nu.xom.NodeFactory $r4, $r11;

        r0 := @this: nu.xom.XOMHandler;

        $r1 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer buffer>;

        if $r1 == null goto label1;

        $r12 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer buffer>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<nu.xom.XOMHandler: java.lang.String textString> = $r13;

        r0.<nu.xom.XOMHandler: java.lang.StringBuffer buffer> = null;

     label1:
        $r2 = r0.<nu.xom.XOMHandler: java.lang.String textString>;

        if $r2 == null goto label8;

        $z0 = r0.<nu.xom.XOMHandler: boolean inCDATA>;

        if $z0 != 0 goto label2;

        $r11 = r0.<nu.xom.XOMHandler: nu.xom.NodeFactory factory>;

        $r10 = r0.<nu.xom.XOMHandler: java.lang.String textString>;

        r14 = virtualinvoke $r11.<nu.xom.NodeFactory: nu.xom.Nodes makeText(java.lang.String)>($r10);

        goto label3;

     label2:
        $r4 = r0.<nu.xom.XOMHandler: nu.xom.NodeFactory factory>;

        $r3 = r0.<nu.xom.XOMHandler: java.lang.String textString>;

        r14 = virtualinvoke $r4.<nu.xom.NodeFactory: nu.xom.Nodes makeCDATASection(java.lang.String)>($r3);

     label3:
        i0 = 0;

     label4:
        $i1 = virtualinvoke r14.<nu.xom.Nodes: int size()>();

        if i0 >= $i1 goto label7;

        $r5 = virtualinvoke r14.<nu.xom.Nodes: nu.xom.Node get(int)>(i0);

        $z1 = virtualinvoke $r5.<nu.xom.Node: boolean isAttribute()>();

        if $z1 == 0 goto label5;

        $r7 = r0.<nu.xom.XOMHandler: nu.xom.ParentNode parent>;

        $r9 = (nu.xom.Element) $r7;

        $r8 = (nu.xom.Attribute) $r5;

        virtualinvoke $r9.<nu.xom.Element: void addAttribute(nu.xom.Attribute)>($r8);

        goto label6;

     label5:
        $r6 = r0.<nu.xom.XOMHandler: nu.xom.ParentNode parent>;

        virtualinvoke $r6.<nu.xom.ParentNode: void appendChild(nu.xom.Node)>($r5);

     label6:
        i0 = i0 + 1;

        goto label4;

     label7:
        r0.<nu.xom.XOMHandler: java.lang.String textString> = null;

     label8:
        r0.<nu.xom.XOMHandler: boolean inCDATA> = 0;

        r0.<nu.xom.XOMHandler: boolean finishedCDATA> = 0;

        return;
    }

    public void ignorableWhitespace(char[], int, int)
    {
        nu.xom.XOMHandler r0;
        int i0, i1;
        char[] r1;

        r0 := @this: nu.xom.XOMHandler;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<nu.xom.XOMHandler: void characters(char[],int,int)>(r1, i0, i1);

        return;
    }

    public void processingInstruction(java.lang.String, java.lang.String)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        nu.xom.Node $r5;
        nu.xom.NodeFactory $r3;
        nu.xom.XMLException $r10;
        nu.xom.Element $r21;
        java.lang.StringBuffer $r6, $r7, $r9, $r11, $r12, $r15, $r16;
        int $i0, $i1, $i2, i3, $i4;
        nu.xom.Nodes $r4;
        java.lang.String r1, r2, $r8, $r14, $r17;
        nu.xom.ParentNode $r18, $r19, $r22;
        nu.xom.XOMHandler r0;
        nu.xom.Attribute $r20;
        java.lang.Class $r13;

        r0 := @this: nu.xom.XOMHandler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = r0.<nu.xom.XOMHandler: boolean inDTD>;

        if $z0 != 0 goto label01;

        specialinvoke r0.<nu.xom.XOMHandler: void flushText()>();

     label01:
        $z1 = r0.<nu.xom.XOMHandler: boolean inDTD>;

        if $z1 == 0 goto label02;

        $z7 = virtualinvoke r0.<nu.xom.XOMHandler: boolean inInternalSubset()>();

        if $z7 != 0 goto label02;

        return;

     label02:
        $r3 = r0.<nu.xom.XOMHandler: nu.xom.NodeFactory factory>;

        $r4 = virtualinvoke $r3.<nu.xom.NodeFactory: nu.xom.Nodes makeProcessingInstruction(java.lang.String,java.lang.String)>(r1, r2);

        i3 = 0;

     label03:
        $i4 = virtualinvoke $r4.<nu.xom.Nodes: int size()>();

        if i3 >= $i4 goto label10;

        $r5 = virtualinvoke $r4.<nu.xom.Nodes: nu.xom.Node get(int)>(i3);

        $z2 = r0.<nu.xom.XOMHandler: boolean inDTD>;

        if $z2 != 0 goto label06;

        $z5 = r0.<nu.xom.XOMHandler: boolean inProlog>;

        if $z5 == 0 goto label04;

        $r22 = r0.<nu.xom.XOMHandler: nu.xom.ParentNode parent>;

        $i0 = r0.<nu.xom.XOMHandler: int position>;

        virtualinvoke $r22.<nu.xom.ParentNode: void insertChild(nu.xom.Node,int)>($r5, $i0);

        $i1 = r0.<nu.xom.XOMHandler: int position>;

        $i2 = $i1 + 1;

        r0.<nu.xom.XOMHandler: int position> = $i2;

        goto label09;

     label04:
        $z6 = virtualinvoke $r5.<nu.xom.Node: boolean isAttribute()>();

        if $z6 == 0 goto label05;

        $r19 = r0.<nu.xom.XOMHandler: nu.xom.ParentNode parent>;

        $r21 = (nu.xom.Element) $r19;

        $r20 = (nu.xom.Attribute) $r5;

        virtualinvoke $r21.<nu.xom.Element: void addAttribute(nu.xom.Attribute)>($r20);

        goto label09;

     label05:
        $r18 = r0.<nu.xom.XOMHandler: nu.xom.ParentNode parent>;

        virtualinvoke $r18.<nu.xom.ParentNode: void appendChild(nu.xom.Node)>($r5);

        goto label09;

     label06:
        $z3 = virtualinvoke $r5.<nu.xom.Node: boolean isProcessingInstruction()>();

        if $z3 != 0 goto label07;

        $z4 = virtualinvoke $r5.<nu.xom.Node: boolean isComment()>();

        if $z4 == 0 goto label08;

     label07:
        $r6 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  ");

        $r7 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        $r8 = virtualinvoke $r5.<nu.xom.Node: java.lang.String toXML()>();

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r9 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        goto label09;

     label08:
        $r10 = new nu.xom.XMLException;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Factory tried to put a ");

        $r13 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" in the internal DTD subset");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r10.<nu.xom.XMLException: void <init>(java.lang.String)>($r17);

        throw $r10;

     label09:
        i3 = i3 + 1;

        goto label03;

     label10:
        return;
    }

    public void startPrefixMapping(java.lang.String, java.lang.String)
    {
        nu.xom.XOMHandler r0;
        java.lang.String r1, r2;

        r0 := @this: nu.xom.XOMHandler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void endPrefixMapping(java.lang.String)
    {
        nu.xom.XOMHandler r0;
        java.lang.String r1;

        r0 := @this: nu.xom.XOMHandler;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void skippedEntity(java.lang.String)
    {
        nu.xom.XOMHandler r1;
        java.lang.StringBuffer $r3, $r4, $r5;
        nu.xom.XMLException $r2;
        java.lang.String r0, $r6;
        boolean $z0;

        r1 := @this: nu.xom.XOMHandler;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("%");

        if $z0 == 0 goto label1;

        return;

     label1:
        specialinvoke r1.<nu.xom.XOMHandler: void flushText()>();

        $r2 = new nu.xom.XMLException;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not resolve entity ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r2.<nu.xom.XMLException: void <init>(java.lang.String)>($r6);

        throw $r2;
    }

    public void startDTD(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.StringBuffer $r9;
        int $i0, $i1, $i2, $i3, i4;
        nu.xom.Nodes $r5;
        java.lang.String r1, r2, r3;
        boolean $z0;
        nu.xom.DocType r8;
        nu.xom.XOMHandler r0;
        nu.xom.Node $r6;
        nu.xom.NodeFactory $r4;
        nu.xom.Document $r7;

        r0 := @this: nu.xom.XOMHandler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r0.<nu.xom.XOMHandler: boolean inDTD> = 1;

        $r4 = r0.<nu.xom.XOMHandler: nu.xom.NodeFactory factory>;

        $r5 = virtualinvoke $r4.<nu.xom.NodeFactory: nu.xom.Nodes makeDocType(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        i4 = 0;

     label1:
        $i0 = virtualinvoke $r5.<nu.xom.Nodes: int size()>();

        if i4 >= $i0 goto label3;

        $r6 = virtualinvoke $r5.<nu.xom.Nodes: nu.xom.Node get(int)>(i4);

        $r7 = r0.<nu.xom.XOMHandler: nu.xom.Document document>;

        $i1 = r0.<nu.xom.XOMHandler: int position>;

        virtualinvoke $r7.<nu.xom.Document: void insertChild(nu.xom.Node,int)>($r6, $i1);

        $i2 = r0.<nu.xom.XOMHandler: int position>;

        $i3 = $i2 + 1;

        r0.<nu.xom.XOMHandler: int position> = $i3;

        $z0 = virtualinvoke $r6.<nu.xom.Node: boolean isDocType()>();

        if $z0 == 0 goto label2;

        r8 = (nu.xom.DocType) $r6;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset> = $r9;

        r0.<nu.xom.XOMHandler: nu.xom.DocType doctype> = r8;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return;
    }

    public void endDTD()
    {
        nu.xom.XOMHandler r0;
        java.lang.StringBuffer $r2;
        java.lang.String $r4;
        nu.xom.DocType $r1, $r3;

        r0 := @this: nu.xom.XOMHandler;

        r0.<nu.xom.XOMHandler: boolean inDTD> = 0;

        $r1 = r0.<nu.xom.XOMHandler: nu.xom.DocType doctype>;

        if $r1 == null goto label1;

        $r3 = r0.<nu.xom.XOMHandler: nu.xom.DocType doctype>;

        $r2 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r3.<nu.xom.DocType: void setInternalDTDSubset(java.lang.String)>($r4);

     label1:
        return;
    }

    public void startEntity(java.lang.String)
    {
        nu.xom.XOMHandler r1;
        java.lang.String r0;
        boolean $z0;

        r1 := @this: nu.xom.XOMHandler;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("[dtd]");

        if $z0 == 0 goto label1;

        r1.<nu.xom.XOMHandler: boolean inExternalSubset> = 1;

     label1:
        return;
    }

    public void endEntity(java.lang.String)
    {
        nu.xom.XOMHandler r1;
        java.lang.String r0;
        boolean $z0;

        r1 := @this: nu.xom.XOMHandler;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("[dtd]");

        if $z0 == 0 goto label1;

        r1.<nu.xom.XOMHandler: boolean inExternalSubset> = 0;

     label1:
        return;
    }

    public void startCDATA()
    {
        nu.xom.XOMHandler r0;
        java.lang.String $r1;

        r0 := @this: nu.xom.XOMHandler;

        $r1 = r0.<nu.xom.XOMHandler: java.lang.String textString>;

        if $r1 != null goto label1;

        r0.<nu.xom.XOMHandler: boolean inCDATA> = 1;

     label1:
        r0.<nu.xom.XOMHandler: boolean finishedCDATA> = 0;

        return;
    }

    public void endCDATA()
    {
        nu.xom.XOMHandler r0;

        r0 := @this: nu.xom.XOMHandler;

        r0.<nu.xom.XOMHandler: boolean finishedCDATA> = 1;

        return;
    }

    public void comment(char[], int, int)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        nu.xom.Node $r5;
        nu.xom.NodeFactory $r3;
        nu.xom.XMLException $r10;
        nu.xom.Element $r21;
        java.lang.StringBuffer $r6, $r7, $r9, $r11, $r12, $r15, $r16;
        int i0, i1, $i2, $i3, $i4, i5, $i6;
        nu.xom.Nodes $r4;
        java.lang.String $r1, $r8, $r14, $r17;
        nu.xom.ParentNode $r18, $r19, $r22;
        nu.xom.XOMHandler r0;
        nu.xom.Attribute $r20;
        char[] r2;
        java.lang.Class $r13;

        r0 := @this: nu.xom.XOMHandler;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = r0.<nu.xom.XOMHandler: boolean inDTD>;

        if $z0 != 0 goto label01;

        specialinvoke r0.<nu.xom.XOMHandler: void flushText()>();

     label01:
        $z1 = r0.<nu.xom.XOMHandler: boolean inDTD>;

        if $z1 == 0 goto label02;

        $z7 = virtualinvoke r0.<nu.xom.XOMHandler: boolean inInternalSubset()>();

        if $z7 != 0 goto label02;

        return;

     label02:
        $r3 = r0.<nu.xom.XOMHandler: nu.xom.NodeFactory factory>;

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(r2, i0, i1);

        $r4 = virtualinvoke $r3.<nu.xom.NodeFactory: nu.xom.Nodes makeComment(java.lang.String)>($r1);

        i5 = 0;

     label03:
        $i6 = virtualinvoke $r4.<nu.xom.Nodes: int size()>();

        if i5 >= $i6 goto label10;

        $r5 = virtualinvoke $r4.<nu.xom.Nodes: nu.xom.Node get(int)>(i5);

        $z2 = r0.<nu.xom.XOMHandler: boolean inDTD>;

        if $z2 != 0 goto label06;

        $z5 = r0.<nu.xom.XOMHandler: boolean inProlog>;

        if $z5 == 0 goto label04;

        $r22 = r0.<nu.xom.XOMHandler: nu.xom.ParentNode parent>;

        $i2 = r0.<nu.xom.XOMHandler: int position>;

        virtualinvoke $r22.<nu.xom.ParentNode: void insertChild(nu.xom.Node,int)>($r5, $i2);

        $i3 = r0.<nu.xom.XOMHandler: int position>;

        $i4 = $i3 + 1;

        r0.<nu.xom.XOMHandler: int position> = $i4;

        goto label09;

     label04:
        $z6 = $r5 instanceof nu.xom.Attribute;

        if $z6 == 0 goto label05;

        $r19 = r0.<nu.xom.XOMHandler: nu.xom.ParentNode parent>;

        $r21 = (nu.xom.Element) $r19;

        $r20 = (nu.xom.Attribute) $r5;

        virtualinvoke $r21.<nu.xom.Element: void addAttribute(nu.xom.Attribute)>($r20);

        goto label09;

     label05:
        $r18 = r0.<nu.xom.XOMHandler: nu.xom.ParentNode parent>;

        virtualinvoke $r18.<nu.xom.ParentNode: void appendChild(nu.xom.Node)>($r5);

        goto label09;

     label06:
        $z3 = virtualinvoke $r5.<nu.xom.Node: boolean isComment()>();

        if $z3 != 0 goto label07;

        $z4 = virtualinvoke $r5.<nu.xom.Node: boolean isProcessingInstruction()>();

        if $z4 == 0 goto label08;

     label07:
        $r6 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  ");

        $r7 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        $r8 = virtualinvoke $r5.<nu.xom.Node: java.lang.String toXML()>();

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r9 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        goto label09;

     label08:
        $r10 = new nu.xom.XMLException;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Factory tried to put a ");

        $r13 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" in the internal DTD subset");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r10.<nu.xom.XMLException: void <init>(java.lang.String)>($r17);

        throw $r10;

     label09:
        i5 = i5 + 1;

        goto label03;

     label10:
        return;
    }

    public void elementDecl(java.lang.String, java.lang.String)
    {
        nu.xom.XOMHandler r0;
        java.lang.StringBuffer $r2, $r4, $r5, $r7, $r8, $r9;
        int $i0, $i1;
        java.lang.String r3, r6;
        boolean $z0, $z1;
        nu.xom.DocType $r1;

        r0 := @this: nu.xom.XOMHandler;

        r3 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<nu.xom.XOMHandler: boolean inInternalSubset()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<nu.xom.XOMHandler: nu.xom.DocType doctype>;

        if $r1 == null goto label2;

        $r2 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  <!ELEMENT ");

        $r4 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r7 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $i0 = virtualinvoke r6.<java.lang.String: int indexOf(java.lang.String)>("#PCDATA");

        if $i0 <= 0 goto label1;

        $i1 = virtualinvoke r6.<java.lang.String: int indexOf(int)>(124);

        if $i1 <= 0 goto label1;

        $z1 = virtualinvoke r6.<java.lang.String: boolean endsWith(java.lang.String)>(")");

        if $z1 == 0 goto label1;

        $r8 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(42);

     label1:
        $r9 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">\n");

     label2:
        return;
    }

    protected boolean inInternalSubset()
    {
        nu.xom.XOMHandler r0;
        org.xml.sax.Locator $r1;
        java.lang.String $r2, $r3, $r4;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: nu.xom.XOMHandler;

        $z0 = r0.<nu.xom.XOMHandler: boolean usingCrimson>;

        if $z0 != 0 goto label3;

        $z2 = r0.<nu.xom.XOMHandler: boolean inExternalSubset>;

        if $z2 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;

     label3:
        $r1 = r0.<nu.xom.XOMHandler: org.xml.sax.Locator locator>;

        $r2 = interfaceinvoke $r1.<org.xml.sax.Locator: java.lang.String getSystemId()>();

        $r3 = r0.<nu.xom.XOMHandler: java.lang.String documentBaseURI>;

        if $r2 != $r3 goto label4;

        return 1;

     label4:
        if $r2 != null goto label5;

        return 0;

     label5:
        $r4 = r0.<nu.xom.XOMHandler: java.lang.String documentBaseURI>;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label6;

        return 1;

     label6:
        return 0;
    }

    public void attributeDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        boolean $z0, $z1, $z2;
        java.lang.StringBuffer $r2, $r4, $r5, $r7, $r8, $r9, $r12, $r13, $r14, $r15, $r17, $r18, $r19, $r21, $r24, $r25, $r27;
        int $i0, $i1, $i3;
        java.lang.String r3, r6, r10, r11, $r16, $r22, $r23, r26;
        nu.xom.DocType $r1;
        nu.xom.XOMHandler r0;

        r0 := @this: nu.xom.XOMHandler;

        r3 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        r26 := @parameter2: java.lang.String;

        r10 := @parameter3: java.lang.String;

        r11 := @parameter4: java.lang.String;

        $z0 = virtualinvoke r26.<java.lang.String: boolean startsWith(java.lang.String)>("NOTATION ");

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r26.<java.lang.String: int indexOf(int)>(40);

        $i3 = (int) -1;

        if $i0 != $i3 goto label1;

        $z1 = virtualinvoke r26.<java.lang.String: boolean endsWith(java.lang.String)>(")");

        if $z1 != 0 goto label1;

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("NOTATION (");

        $r22 = "NOTATION ";

        $i1 = virtualinvoke $r22.<java.lang.String: int length()>();

        $r23 = virtualinvoke r26.<java.lang.String: java.lang.String substring(int)>($i1);

        $r24 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        $z2 = virtualinvoke r0.<nu.xom.XOMHandler: boolean inInternalSubset()>();

        if $z2 == 0 goto label4;

        $r1 = r0.<nu.xom.XOMHandler: nu.xom.DocType doctype>;

        if $r1 == null goto label4;

        $r2 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  <!ATTLIST ");

        $r4 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r7 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r8 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r9 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r26);

        if r10 == null goto label2;

        $r18 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r19 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r10);

     label2:
        if r11 == null goto label3;

        $r13 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r14 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        $r15 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        $r16 = staticinvoke <nu.xom.XOMHandler: java.lang.String escapeReservedCharactersInDefaultAttributeValues(java.lang.String)>(r11);

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r17 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

     label3:
        $r12 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">\n");

     label4:
        return;
    }

    public void internalEntityDecl(java.lang.String, java.lang.String)
    {
        nu.xom.XOMHandler r0;
        java.lang.StringBuffer $r2, $r4, $r5, $r7, $r9, $r10, $r11;
        java.lang.String r3, r6, $r8, $r12;
        boolean $z0, $z1;
        nu.xom.DocType $r1;

        r0 := @this: nu.xom.XOMHandler;

        r3 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<nu.xom.XOMHandler: boolean inInternalSubset()>();

        if $z0 == 0 goto label3;

        $r1 = r0.<nu.xom.XOMHandler: nu.xom.DocType doctype>;

        if $r1 == null goto label3;

        $r2 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  <!ENTITY ");

        $z1 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("%");

        if $z1 == 0 goto label1;

        $r10 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("% ");

        $r11 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        $r12 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>(1);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        goto label2;

     label1:
        $r4 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

     label2:
        $r5 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" \"");

        $r7 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        $r8 = staticinvoke <nu.xom.XOMHandler: java.lang.String escapeReservedCharactersInDeclarations(java.lang.String)>(r6);

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r9 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\">\n");

     label3:
        return;
    }

    public void externalEntityDecl(java.lang.String, java.lang.String, java.lang.String)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.xml.sax.Locator $r5, $r14;
        java.lang.StringBuffer $r2, $r4, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r16, $r17, $r19, $r20, $r21, $r23, $r24, $r25;
        java.lang.String r3, r6, $r15, $r18, $r22, $r26, r27, r28;
        nu.xom.DocType $r1;
        nu.xom.XOMHandler r0;

        r0 := @this: nu.xom.XOMHandler;

        r3 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        r27 := @parameter2: java.lang.String;

        $z0 = virtualinvoke r0.<nu.xom.XOMHandler: boolean inInternalSubset()>();

        if $z0 == 0 goto label8;

        $r1 = r0.<nu.xom.XOMHandler: nu.xom.DocType doctype>;

        if $r1 == null goto label8;

        $r2 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  <!ENTITY ");

        $z1 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("%");

        if $z1 == 0 goto label1;

        $r24 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("% ");

        $r25 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        $r26 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>(1);

        virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        goto label2;

     label1:
        $r4 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

     label2:
        $r5 = r0.<nu.xom.XOMHandler: org.xml.sax.Locator locator>;

        if $r5 == null goto label5;

        $z2 = staticinvoke <nu.xom.URIUtil: boolean isAbsolute(java.lang.String)>(r27);

        if $z2 == 0 goto label5;

        $r14 = r0.<nu.xom.XOMHandler: org.xml.sax.Locator locator>;

        $r15 = interfaceinvoke $r14.<org.xml.sax.Locator: java.lang.String getSystemId()>();

        r28 = $r15;

        if $r15 == null goto label5;

        $z3 = virtualinvoke $r15.<java.lang.String: boolean startsWith(java.lang.String)>("file:/");

        if $z3 == 0 goto label3;

        $z5 = virtualinvoke $r15.<java.lang.String: boolean startsWith(java.lang.String)>("file:///");

        if $z5 != 0 goto label3;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("file://");

        $r22 = virtualinvoke $r15.<java.lang.String: java.lang.String substring(int)>(5);

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        r28 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

     label3:
        $z6 = virtualinvoke r27.<java.lang.String: boolean startsWith(java.lang.String)>("file:/");

        if $z6 == 0 goto label4;

        $z4 = virtualinvoke r27.<java.lang.String: boolean startsWith(java.lang.String)>("file:///");

        if $z4 != 0 goto label4;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("file://");

        $r18 = virtualinvoke r27.<java.lang.String: java.lang.String substring(int)>(5);

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        r27 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

     label4:
        r27 = staticinvoke <nu.xom.URIUtil: java.lang.String relativize(java.lang.String,java.lang.String)>(r28, r27);

     label5:
        if r6 == null goto label6;

        $r10 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" PUBLIC \"");

        $r11 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r12 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" \"");

        $r13 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r27);

        goto label7;

     label6:
        $r7 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" SYSTEM \"");

        $r8 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r27);

     label7:
        $r9 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\">\n");

     label8:
        return;
    }

    public void notationDecl(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.StringBuffer $r2, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r16;
        java.lang.String r3, r5, r15;
        boolean $z0;
        nu.xom.DocType $r1;
        nu.xom.XOMHandler r0;

        r0 := @this: nu.xom.XOMHandler;

        r3 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        r15 := @parameter2: java.lang.String;

        if r15 == null goto label1;

        r15 = staticinvoke <nu.xom.XOMHandler: java.lang.String escapeReservedCharactersInDeclarations(java.lang.String)>(r15);

     label1:
        $z0 = virtualinvoke r0.<nu.xom.XOMHandler: boolean inInternalSubset()>();

        if $z0 == 0 goto label4;

        $r1 = r0.<nu.xom.XOMHandler: nu.xom.DocType doctype>;

        if $r1 == null goto label4;

        $r2 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  <!NOTATION ");

        $r4 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        if r5 == null goto label2;

        $r9 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" PUBLIC \"");

        $r10 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r11 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        if r15 == null goto label3;

        $r12 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" \"");

        $r13 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r15);

        $r14 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        goto label3;

     label2:
        $r6 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" SYSTEM \"");

        $r7 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r15);

        $r8 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

     label3:
        $r16 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">\n");

     label4:
        return;
    }

    public void unparsedEntityDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.StringBuffer $r2, $r5, $r6, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;
        java.lang.String r3, r4, r7, r10;
        boolean $z0;
        nu.xom.DocType $r1;
        nu.xom.XOMHandler r0;

        r0 := @this: nu.xom.XOMHandler;

        r4 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

        r10 := @parameter3: java.lang.String;

        $z0 = virtualinvoke r0.<nu.xom.XOMHandler: boolean inInternalSubset()>();

        if $z0 == 0 goto label3;

        $r1 = r0.<nu.xom.XOMHandler: nu.xom.DocType doctype>;

        if $r1 == null goto label3;

        $r2 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  <!ENTITY ");

        if r3 == null goto label1;

        $r13 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r14 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" PUBLIC \"");

        $r15 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r16 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" \"");

        $r17 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $r18 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" NDATA ");

        $r19 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r10);

        goto label2;

     label1:
        $r5 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r6 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" SYSTEM \"");

        $r8 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $r9 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" NDATA ");

        $r11 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r10);

     label2:
        $r12 = r0.<nu.xom.XOMHandler: java.lang.StringBuffer internalDTDSubset>;

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">\n");

     label3:
        return;
    }

    private static java.lang.String escapeReservedCharactersInDeclarations(java.lang.String)
    {
        java.lang.StringBuffer $r3;
        int $i0, i2, $i3;
        char $c1;
        java.lang.String r0, $r2;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(int)>($i0);

        i2 = 0;

     label01:
        if i2 >= $i0 goto label30;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $i3 = (int) $c1;

        tableswitch($i3)
        {
            case 13: goto label02;
            case 14: goto label03;
            case 15: goto label04;
            case 16: goto label05;
            case 17: goto label06;
            case 18: goto label07;
            case 19: goto label08;
            case 20: goto label09;
            case 21: goto label10;
            case 22: goto label11;
            case 23: goto label12;
            case 24: goto label13;
            case 25: goto label14;
            case 26: goto label15;
            case 27: goto label16;
            case 28: goto label17;
            case 29: goto label18;
            case 30: goto label19;
            case 31: goto label20;
            case 32: goto label21;
            case 33: goto label22;
            case 34: goto label23;
            case 35: goto label24;
            case 36: goto label25;
            case 37: goto label26;
            case 38: goto label27;
            default: goto label28;
        };

     label02:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&#x0D;");

        goto label29;

     label03:
        goto label29;

     label04:
        goto label29;

     label05:
        goto label29;

     label06:
        goto label29;

     label07:
        goto label29;

     label08:
        goto label29;

     label09:
        goto label29;

     label10:
        goto label29;

     label11:
        goto label29;

     label12:
        goto label29;

     label13:
        goto label29;

     label14:
        goto label29;

     label15:
        goto label29;

     label16:
        goto label29;

     label17:
        goto label29;

     label18:
        goto label29;

     label19:
        goto label29;

     label20:
        goto label29;

     label21:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        goto label29;

     label22:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(33);

        goto label29;

     label23:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&#x22;");

        goto label29;

     label24:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(35);

        goto label29;

     label25:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(36);

        goto label29;

     label26:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&#x25;");

        goto label29;

     label27:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&#x26;");

        goto label29;

     label28:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

     label29:
        i2 = i2 + 1;

        goto label01;

     label30:
        $r2 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    private static java.lang.String escapeReservedCharactersInDefaultAttributeValues(java.lang.String)
    {
        java.lang.StringBuffer $r3;
        int $i0, i2, $i3;
        char $c1;
        java.lang.String r0, $r2;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(int)>($i0);

        i2 = 0;

     label01:
        if i2 >= $i0 goto label52;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $i3 = (int) $c1;

        tableswitch($i3)
        {
            case 13: goto label02;
            case 14: goto label03;
            case 15: goto label04;
            case 16: goto label05;
            case 17: goto label06;
            case 18: goto label07;
            case 19: goto label08;
            case 20: goto label09;
            case 21: goto label10;
            case 22: goto label11;
            case 23: goto label12;
            case 24: goto label13;
            case 25: goto label14;
            case 26: goto label15;
            case 27: goto label16;
            case 28: goto label17;
            case 29: goto label18;
            case 30: goto label19;
            case 31: goto label20;
            case 32: goto label21;
            case 33: goto label22;
            case 34: goto label23;
            case 35: goto label24;
            case 36: goto label25;
            case 37: goto label26;
            case 38: goto label27;
            case 39: goto label28;
            case 40: goto label29;
            case 41: goto label30;
            case 42: goto label31;
            case 43: goto label32;
            case 44: goto label33;
            case 45: goto label34;
            case 46: goto label35;
            case 47: goto label36;
            case 48: goto label37;
            case 49: goto label38;
            case 50: goto label39;
            case 51: goto label40;
            case 52: goto label41;
            case 53: goto label42;
            case 54: goto label43;
            case 55: goto label44;
            case 56: goto label45;
            case 57: goto label46;
            case 58: goto label47;
            case 59: goto label48;
            case 60: goto label49;
            default: goto label50;
        };

     label02:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&#x0D;");

        goto label51;

     label03:
        goto label51;

     label04:
        goto label51;

     label05:
        goto label51;

     label06:
        goto label51;

     label07:
        goto label51;

     label08:
        goto label51;

     label09:
        goto label51;

     label10:
        goto label51;

     label11:
        goto label51;

     label12:
        goto label51;

     label13:
        goto label51;

     label14:
        goto label51;

     label15:
        goto label51;

     label16:
        goto label51;

     label17:
        goto label51;

     label18:
        goto label51;

     label19:
        goto label51;

     label20:
        goto label51;

     label21:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        goto label51;

     label22:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(33);

        goto label51;

     label23:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&quot;");

        goto label51;

     label24:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(35);

        goto label51;

     label25:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(36);

        goto label51;

     label26:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&#x25;");

        goto label51;

     label27:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&amp;");

        goto label51;

     label28:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        goto label51;

     label29:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(40);

        goto label51;

     label30:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        goto label51;

     label31:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(42);

        goto label51;

     label32:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(43);

        goto label51;

     label33:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        goto label51;

     label34:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(45);

        goto label51;

     label35:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

        goto label51;

     label36:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(47);

        goto label51;

     label37:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(48);

        goto label51;

     label38:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(49);

        goto label51;

     label39:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(50);

        goto label51;

     label40:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(51);

        goto label51;

     label41:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(52);

        goto label51;

     label42:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(53);

        goto label51;

     label43:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(54);

        goto label51;

     label44:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(55);

        goto label51;

     label45:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(56);

        goto label51;

     label46:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(57);

        goto label51;

     label47:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        goto label51;

     label48:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(59);

        goto label51;

     label49:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&lt;");

        goto label51;

     label50:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

     label51:
        i2 = i2 + 1;

        goto label01;

     label52:
        $r2 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }
}
