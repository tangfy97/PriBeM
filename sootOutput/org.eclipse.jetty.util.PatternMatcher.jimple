public abstract class org.eclipse.jetty.util.PatternMatcher extends java.lang.Object
{

    public void <init>()
    {
        org.eclipse.jetty.util.PatternMatcher r0;

        r0 := @this: org.eclipse.jetty.util.PatternMatcher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract void matched(java.net.URI) throws java.lang.Exception;

    public void match(java.util.regex.Pattern, java.net.URI[], boolean) throws java.lang.Exception
    {
        java.lang.String[] r3, $r11;
        java.util.ArrayList $r4;
        java.net.URI[] r0;
        int $i0, i1;
        java.lang.String $r2, $r9;
        org.eclipse.jetty.util.PatternMatcher r8;
        boolean $z0, $z1, $z2, z3;
        java.util.Iterator $r5;
        java.lang.Object $r6;
        java.util.regex.Pattern r1, r7, $r10;

        r8 := @this: org.eclipse.jetty.util.PatternMatcher;

        r1 := @parameter0: java.util.regex.Pattern;

        r0 := @parameter1: java.net.URI[];

        z3 := @parameter2: boolean;

        if r0 == null goto label8;

        if r1 != null goto label1;

        $r11 = null;

        goto label2;

     label1:
        $r2 = virtualinvoke r1.<java.util.regex.Pattern: java.lang.String pattern()>();

        $r11 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

     label2:
        r3 = $r11;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        i1 = 0;

     label3:
        if r3 == null goto label4;

        $i0 = lengthof r3;

        if i1 >= $i0 goto label4;

        $r9 = r3[i1];

        $r10 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r9);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r10);

        i1 = i1 + 1;

        goto label3;

     label4:
        $z0 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label5;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r1);

     label5:
        $z1 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label6;

        virtualinvoke r8.<org.eclipse.jetty.util.PatternMatcher: void matchPatterns(java.util.regex.Pattern,java.net.URI[],boolean)>(null, r0, z3);

        goto label8;

     label6:
        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label7:
        $z2 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label8;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.regex.Pattern) $r6;

        virtualinvoke r8.<org.eclipse.jetty.util.PatternMatcher: void matchPatterns(java.util.regex.Pattern,java.net.URI[],boolean)>(r7, r0, z3);

        goto label7;

     label8:
        return;
    }

    public void matchPatterns(java.util.regex.Pattern, java.net.URI[], boolean) throws java.lang.Exception
    {
        java.net.URI[] r0;
        java.util.regex.Matcher $r4;
        int $i0, i1;
        java.net.URI r1, $r6;
        java.lang.String $r2;
        java.util.regex.Pattern r3;
        org.eclipse.jetty.util.PatternMatcher r5;
        boolean $z0, z1;

        r5 := @this: org.eclipse.jetty.util.PatternMatcher;

        r3 := @parameter0: java.util.regex.Pattern;

        r0 := @parameter1: java.net.URI[];

        z1 := @parameter2: boolean;

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label5;

        r1 = r0[i1];

        $r2 = virtualinvoke r1.<java.net.URI: java.lang.String toString()>();

        if r3 != null goto label2;

        if z1 != 0 goto label3;

     label2:
        if r3 == null goto label4;

        $r4 = virtualinvoke r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r2);

        $z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label4;

     label3:
        $r6 = r0[i1];

        virtualinvoke r5.<org.eclipse.jetty.util.PatternMatcher: void matched(java.net.URI)>($r6);

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        return;
    }
}
