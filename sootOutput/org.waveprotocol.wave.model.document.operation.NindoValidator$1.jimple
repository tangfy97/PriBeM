final class org.waveprotocol.wave.model.document.operation.NindoValidator$1 extends java.lang.Object implements org.waveprotocol.wave.model.document.operation.Nindo$NindoCursor
{
    final org.waveprotocol.wave.model.document.operation.NindoAutomaton val$a;
    final org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector val$v;

    void <init>(org.waveprotocol.wave.model.document.operation.NindoAutomaton, org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector r2;
        org.waveprotocol.wave.model.document.operation.NindoAutomaton r1;
        org.waveprotocol.wave.model.document.operation.NindoValidator$1 r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.NindoValidator$1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.NindoAutomaton;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector;

        r0.<org.waveprotocol.wave.model.document.operation.NindoValidator$1: org.waveprotocol.wave.model.document.operation.NindoAutomaton val$a> = r1;

        r0.<org.waveprotocol.wave.model.document.operation.NindoValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector val$v> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void begin()
    {
        org.waveprotocol.wave.model.document.operation.NindoValidator$1 r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.NindoValidator$1;

        return;
    }

    public void characters(java.lang.String)
    {
        org.waveprotocol.wave.model.document.operation.NindoValidator$1 r0;
        org.waveprotocol.wave.model.document.operation.NindoValidator$IllFormed $r7;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector $r2;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r4, $r5;
        java.lang.String r1;
        org.waveprotocol.wave.model.document.operation.NindoAutomaton $r3, $r6;

        r0 := @this: org.waveprotocol.wave.model.document.operation.NindoValidator$1;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.waveprotocol.wave.model.document.operation.NindoValidator$1: org.waveprotocol.wave.model.document.operation.NindoAutomaton val$a>;

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.NindoValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector val$v>;

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.model.document.operation.NindoAutomaton: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult checkCharacters(java.lang.String,org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)>(r1, $r2);

        $r5 = <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult ILL_FORMED>;

        if $r4 != $r5 goto label1;

        $r7 = new org.waveprotocol.wave.model.document.operation.NindoValidator$IllFormed;

        specialinvoke $r7.<org.waveprotocol.wave.model.document.operation.NindoValidator$IllFormed: void <init>(org.waveprotocol.wave.model.document.operation.NindoValidator$1)>(null);

        throw $r7;

     label1:
        $r6 = r0.<org.waveprotocol.wave.model.document.operation.NindoValidator$1: org.waveprotocol.wave.model.document.operation.NindoAutomaton val$a>;

        virtualinvoke $r6.<org.waveprotocol.wave.model.document.operation.NindoAutomaton: void doCharacters(java.lang.String)>(r1);

        return;
    }

    public void deleteCharacters(int)
    {
        org.waveprotocol.wave.model.document.operation.NindoValidator$1 r0;
        org.waveprotocol.wave.model.document.operation.NindoValidator$IllFormed $r6;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector $r1;
        int i0;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r3, $r4;
        org.waveprotocol.wave.model.document.operation.NindoAutomaton $r2, $r5;

        r0 := @this: org.waveprotocol.wave.model.document.operation.NindoValidator$1;

        i0 := @parameter0: int;

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.NindoValidator$1: org.waveprotocol.wave.model.document.operation.NindoAutomaton val$a>;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.NindoValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector val$v>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.model.document.operation.NindoAutomaton: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult checkDeleteCharacters(int,org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)>(i0, $r1);

        $r4 = <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult ILL_FORMED>;

        if $r3 != $r4 goto label1;

        $r6 = new org.waveprotocol.wave.model.document.operation.NindoValidator$IllFormed;

        specialinvoke $r6.<org.waveprotocol.wave.model.document.operation.NindoValidator$IllFormed: void <init>(org.waveprotocol.wave.model.document.operation.NindoValidator$1)>(null);

        throw $r6;

     label1:
        $r5 = r0.<org.waveprotocol.wave.model.document.operation.NindoValidator$1: org.waveprotocol.wave.model.document.operation.NindoAutomaton val$a>;

        virtualinvoke $r5.<org.waveprotocol.wave.model.document.operation.NindoAutomaton: void doDeleteCharacters(int)>(i0);

        return;
    }

    public void deleteElementEnd()
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector $r1;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r3, $r4;
        org.waveprotocol.wave.model.document.operation.NindoAutomaton $r2, $r5;
        org.waveprotocol.wave.model.document.operation.NindoValidator$1 r0;
        org.waveprotocol.wave.model.document.operation.NindoValidator$IllFormed $r6;

        r0 := @this: org.waveprotocol.wave.model.document.operation.NindoValidator$1;

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.NindoValidator$1: org.waveprotocol.wave.model.document.operation.NindoAutomaton val$a>;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.NindoValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector val$v>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.model.document.operation.NindoAutomaton: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult checkDeleteElementEnd(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)>($r1);

        $r4 = <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult ILL_FORMED>;

        if $r3 != $r4 goto label1;

        $r6 = new org.waveprotocol.wave.model.document.operation.NindoValidator$IllFormed;

        specialinvoke $r6.<org.waveprotocol.wave.model.document.operation.NindoValidator$IllFormed: void <init>(org.waveprotocol.wave.model.document.operation.NindoValidator$1)>(null);

        throw $r6;

     label1:
        $r5 = r0.<org.waveprotocol.wave.model.document.operation.NindoValidator$1: org.waveprotocol.wave.model.document.operation.NindoAutomaton val$a>;

        virtualinvoke $r5.<org.waveprotocol.wave.model.document.operation.NindoAutomaton: void doDeleteElementEnd()>();

        return;
    }

    public void deleteElementStart()
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector $r1;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r3, $r4;
        org.waveprotocol.wave.model.document.operation.NindoAutomaton $r2, $r5;
        org.waveprotocol.wave.model.document.operation.NindoValidator$1 r0;
        org.waveprotocol.wave.model.document.operation.NindoValidator$IllFormed $r6;

        r0 := @this: org.waveprotocol.wave.model.document.operation.NindoValidator$1;

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.NindoValidator$1: org.waveprotocol.wave.model.document.operation.NindoAutomaton val$a>;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.NindoValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector val$v>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.model.document.operation.NindoAutomaton: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult checkDeleteElementStart(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)>($r1);

        $r4 = <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult ILL_FORMED>;

        if $r3 != $r4 goto label1;

        $r6 = new org.waveprotocol.wave.model.document.operation.NindoValidator$IllFormed;

        specialinvoke $r6.<org.waveprotocol.wave.model.document.operation.NindoValidator$IllFormed: void <init>(org.waveprotocol.wave.model.document.operation.NindoValidator$1)>(null);

        throw $r6;

     label1:
        $r5 = r0.<org.waveprotocol.wave.model.document.operation.NindoValidator$1: org.waveprotocol.wave.model.document.operation.NindoAutomaton val$a>;

        virtualinvoke $r5.<org.waveprotocol.wave.model.document.operation.NindoAutomaton: void doDeleteElementStart()>();

        return;
    }

    public void elementEnd()
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector $r1;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r3, $r4;
        org.waveprotocol.wave.model.document.operation.NindoAutomaton $r2, $r5;
        org.waveprotocol.wave.model.document.operation.NindoValidator$1 r0;
        org.waveprotocol.wave.model.document.operation.NindoValidator$IllFormed $r6;

        r0 := @this: org.waveprotocol.wave.model.document.operation.NindoValidator$1;

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.NindoValidator$1: org.waveprotocol.wave.model.document.operation.NindoAutomaton val$a>;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.NindoValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector val$v>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.model.document.operation.NindoAutomaton: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult checkElementEnd(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)>($r1);

        $r4 = <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult ILL_FORMED>;

        if $r3 != $r4 goto label1;

        $r6 = new org.waveprotocol.wave.model.document.operation.NindoValidator$IllFormed;

        specialinvoke $r6.<org.waveprotocol.wave.model.document.operation.NindoValidator$IllFormed: void <init>(org.waveprotocol.wave.model.document.operation.NindoValidator$1)>(null);

        throw $r6;

     label1:
        $r5 = r0.<org.waveprotocol.wave.model.document.operation.NindoValidator$1: org.waveprotocol.wave.model.document.operation.NindoAutomaton val$a>;

        virtualinvoke $r5.<org.waveprotocol.wave.model.document.operation.NindoAutomaton: void doElementEnd()>();

        return;
    }

    public void elementStart(java.lang.String, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.operation.Attributes r2;
        org.waveprotocol.wave.model.document.operation.NindoValidator$1 r0;
        org.waveprotocol.wave.model.document.operation.NindoValidator$IllFormed $r8;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector $r3;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r5, $r6;
        java.lang.String r1;
        org.waveprotocol.wave.model.document.operation.NindoAutomaton $r4, $r7;

        r0 := @this: org.waveprotocol.wave.model.document.operation.NindoValidator$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        $r4 = r0.<org.waveprotocol.wave.model.document.operation.NindoValidator$1: org.waveprotocol.wave.model.document.operation.NindoAutomaton val$a>;

        $r3 = r0.<org.waveprotocol.wave.model.document.operation.NindoValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector val$v>;

        $r5 = virtualinvoke $r4.<org.waveprotocol.wave.model.document.operation.NindoAutomaton: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult checkElementStart(java.lang.String,java.util.Map,org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)>(r1, r2, $r3);

        $r6 = <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult ILL_FORMED>;

        if $r5 != $r6 goto label1;

        $r8 = new org.waveprotocol.wave.model.document.operation.NindoValidator$IllFormed;

        specialinvoke $r8.<org.waveprotocol.wave.model.document.operation.NindoValidator$IllFormed: void <init>(org.waveprotocol.wave.model.document.operation.NindoValidator$1)>(null);

        throw $r8;

     label1:
        $r7 = r0.<org.waveprotocol.wave.model.document.operation.NindoValidator$1: org.waveprotocol.wave.model.document.operation.NindoAutomaton val$a>;

        virtualinvoke $r7.<org.waveprotocol.wave.model.document.operation.NindoAutomaton: void doElementStart(java.lang.String,java.util.Map)>(r1, r2);

        return;
    }

    public void endAnnotation(java.lang.String)
    {
        org.waveprotocol.wave.model.document.operation.NindoValidator$1 r0;
        org.waveprotocol.wave.model.document.operation.NindoValidator$IllFormed $r7;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector $r2;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r4, $r5;
        java.lang.String r1;
        org.waveprotocol.wave.model.document.operation.NindoAutomaton $r3, $r6;

        r0 := @this: org.waveprotocol.wave.model.document.operation.NindoValidator$1;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.waveprotocol.wave.model.document.operation.NindoValidator$1: org.waveprotocol.wave.model.document.operation.NindoAutomaton val$a>;

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.NindoValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector val$v>;

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.model.document.operation.NindoAutomaton: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult checkEndAnnotation(java.lang.String,org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)>(r1, $r2);

        $r5 = <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult ILL_FORMED>;

        if $r4 != $r5 goto label1;

        $r7 = new org.waveprotocol.wave.model.document.operation.NindoValidator$IllFormed;

        specialinvoke $r7.<org.waveprotocol.wave.model.document.operation.NindoValidator$IllFormed: void <init>(org.waveprotocol.wave.model.document.operation.NindoValidator$1)>(null);

        throw $r7;

     label1:
        $r6 = r0.<org.waveprotocol.wave.model.document.operation.NindoValidator$1: org.waveprotocol.wave.model.document.operation.NindoAutomaton val$a>;

        virtualinvoke $r6.<org.waveprotocol.wave.model.document.operation.NindoAutomaton: void doEndAnnotation(java.lang.String)>(r1);

        return;
    }

    public void finish()
    {
        org.waveprotocol.wave.model.document.operation.NindoValidator$1 r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.NindoValidator$1;

        return;
    }

    public void replaceAttributes(org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.operation.Attributes r1;
        org.waveprotocol.wave.model.document.operation.NindoValidator$1 r0;
        org.waveprotocol.wave.model.document.operation.NindoValidator$IllFormed $r7;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector $r2;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r4, $r5;
        org.waveprotocol.wave.model.document.operation.NindoAutomaton $r3, $r6;

        r0 := @this: org.waveprotocol.wave.model.document.operation.NindoValidator$1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.Attributes;

        $r3 = r0.<org.waveprotocol.wave.model.document.operation.NindoValidator$1: org.waveprotocol.wave.model.document.operation.NindoAutomaton val$a>;

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.NindoValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector val$v>;

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.model.document.operation.NindoAutomaton: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult checkSetAttributes(java.util.Map,org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)>(r1, $r2);

        $r5 = <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult ILL_FORMED>;

        if $r4 != $r5 goto label1;

        $r7 = new org.waveprotocol.wave.model.document.operation.NindoValidator$IllFormed;

        specialinvoke $r7.<org.waveprotocol.wave.model.document.operation.NindoValidator$IllFormed: void <init>(org.waveprotocol.wave.model.document.operation.NindoValidator$1)>(null);

        throw $r7;

     label1:
        $r6 = r0.<org.waveprotocol.wave.model.document.operation.NindoValidator$1: org.waveprotocol.wave.model.document.operation.NindoAutomaton val$a>;

        virtualinvoke $r6.<org.waveprotocol.wave.model.document.operation.NindoAutomaton: void doSetAttributes(java.util.Map)>(r1);

        return;
    }

    public void skip(int)
    {
        org.waveprotocol.wave.model.document.operation.NindoValidator$1 r0;
        org.waveprotocol.wave.model.document.operation.NindoValidator$IllFormed $r6;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector $r1;
        int i0;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r3, $r4;
        org.waveprotocol.wave.model.document.operation.NindoAutomaton $r2, $r5;

        r0 := @this: org.waveprotocol.wave.model.document.operation.NindoValidator$1;

        i0 := @parameter0: int;

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.NindoValidator$1: org.waveprotocol.wave.model.document.operation.NindoAutomaton val$a>;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.NindoValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector val$v>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.model.document.operation.NindoAutomaton: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult checkSkip(int,org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)>(i0, $r1);

        $r4 = <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult ILL_FORMED>;

        if $r3 != $r4 goto label1;

        $r6 = new org.waveprotocol.wave.model.document.operation.NindoValidator$IllFormed;

        specialinvoke $r6.<org.waveprotocol.wave.model.document.operation.NindoValidator$IllFormed: void <init>(org.waveprotocol.wave.model.document.operation.NindoValidator$1)>(null);

        throw $r6;

     label1:
        $r5 = r0.<org.waveprotocol.wave.model.document.operation.NindoValidator$1: org.waveprotocol.wave.model.document.operation.NindoAutomaton val$a>;

        virtualinvoke $r5.<org.waveprotocol.wave.model.document.operation.NindoAutomaton: void doSkip(int)>(i0);

        return;
    }

    public void startAnnotation(java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.model.document.operation.NindoValidator$1 r0;
        org.waveprotocol.wave.model.document.operation.NindoValidator$IllFormed $r8;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector $r3;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r5, $r6;
        java.lang.String r1, r2;
        org.waveprotocol.wave.model.document.operation.NindoAutomaton $r4, $r7;

        r0 := @this: org.waveprotocol.wave.model.document.operation.NindoValidator$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<org.waveprotocol.wave.model.document.operation.NindoValidator$1: org.waveprotocol.wave.model.document.operation.NindoAutomaton val$a>;

        $r3 = r0.<org.waveprotocol.wave.model.document.operation.NindoValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector val$v>;

        $r5 = virtualinvoke $r4.<org.waveprotocol.wave.model.document.operation.NindoAutomaton: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult checkStartAnnotation(java.lang.String,java.lang.String,org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)>(r1, r2, $r3);

        $r6 = <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult ILL_FORMED>;

        if $r5 != $r6 goto label1;

        $r8 = new org.waveprotocol.wave.model.document.operation.NindoValidator$IllFormed;

        specialinvoke $r8.<org.waveprotocol.wave.model.document.operation.NindoValidator$IllFormed: void <init>(org.waveprotocol.wave.model.document.operation.NindoValidator$1)>(null);

        throw $r8;

     label1:
        $r7 = r0.<org.waveprotocol.wave.model.document.operation.NindoValidator$1: org.waveprotocol.wave.model.document.operation.NindoAutomaton val$a>;

        virtualinvoke $r7.<org.waveprotocol.wave.model.document.operation.NindoAutomaton: void doStartAnnotation(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void updateAttributes(java.util.Map)
    {
        org.waveprotocol.wave.model.document.operation.NindoValidator$1 r0;
        org.waveprotocol.wave.model.document.operation.NindoValidator$IllFormed $r7;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector $r2;
        java.util.Map r1;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r4, $r5;
        org.waveprotocol.wave.model.document.operation.NindoAutomaton $r3, $r6;

        r0 := @this: org.waveprotocol.wave.model.document.operation.NindoValidator$1;

        r1 := @parameter0: java.util.Map;

        $r3 = r0.<org.waveprotocol.wave.model.document.operation.NindoValidator$1: org.waveprotocol.wave.model.document.operation.NindoAutomaton val$a>;

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.NindoValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector val$v>;

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.model.document.operation.NindoAutomaton: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult checkUpdateAttributes(java.util.Map,org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)>(r1, $r2);

        $r5 = <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult ILL_FORMED>;

        if $r4 != $r5 goto label1;

        $r7 = new org.waveprotocol.wave.model.document.operation.NindoValidator$IllFormed;

        specialinvoke $r7.<org.waveprotocol.wave.model.document.operation.NindoValidator$IllFormed: void <init>(org.waveprotocol.wave.model.document.operation.NindoValidator$1)>(null);

        throw $r7;

     label1:
        $r6 = r0.<org.waveprotocol.wave.model.document.operation.NindoValidator$1: org.waveprotocol.wave.model.document.operation.NindoAutomaton val$a>;

        virtualinvoke $r6.<org.waveprotocol.wave.model.document.operation.NindoAutomaton: void doUpdateAttributes(java.util.Map)>(r1);

        return;
    }
}
