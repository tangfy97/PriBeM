class org.springframework.scripting.bsh.BshScriptUtils$BshObjectInvocationHandler extends java.lang.Object implements java.lang.reflect.InvocationHandler
{
    private final bsh.XThis xt;

    public void <init>(bsh.XThis)
    {
        org.springframework.scripting.bsh.BshScriptUtils$BshObjectInvocationHandler r0;
        bsh.XThis r1;

        r0 := @this: org.springframework.scripting.bsh.BshScriptUtils$BshObjectInvocationHandler;

        r1 := @parameter0: bsh.XThis;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.scripting.bsh.BshScriptUtils$BshObjectInvocationHandler: bsh.XThis xt> = r1;

        return;
    }

    public java.lang.Object invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) throws java.lang.Throwable
    {
        java.lang.Throwable $r19;
        org.springframework.scripting.bsh.BshScriptUtils$BshExecutionException $r23;
        java.lang.Object[] r4;
        java.lang.Integer $r16;
        int $i0;
        java.lang.Boolean $r18;
        java.lang.String $r3, $r14;
        java.lang.reflect.Method r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        bsh.EvalError $r24;
        org.springframework.scripting.bsh.BshScriptUtils$BshObjectInvocationHandler r1;
        bsh.Primitive $r6, $r7, $r8;
        java.lang.Object $r5, $r9, $r17, r21;
        java.lang.StringBuilder $r12, $r13, $r22;
        bsh.XThis $r2, $r11, $r15;

        r1 := @this: org.springframework.scripting.bsh.BshScriptUtils$BshObjectInvocationHandler;

        r21 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.reflect.Method;

        r4 := @parameter2: java.lang.Object[];

        $z0 = staticinvoke <org.springframework.util.ReflectionUtils: boolean isEqualsMethod(java.lang.reflect.Method)>(r0);

        if $z0 == 0 goto label1;

        $r17 = r4[0];

        $z4 = specialinvoke r1.<org.springframework.scripting.bsh.BshScriptUtils$BshObjectInvocationHandler: boolean isProxyForSameBshObject(java.lang.Object)>($r17);

        $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4);

        return $r18;

     label1:
        $z1 = staticinvoke <org.springframework.util.ReflectionUtils: boolean isHashCodeMethod(java.lang.reflect.Method)>(r0);

        if $z1 == 0 goto label2;

        $r15 = r1.<org.springframework.scripting.bsh.BshScriptUtils$BshObjectInvocationHandler: bsh.XThis xt>;

        $i0 = virtualinvoke $r15.<java.lang.Object: int hashCode()>();

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r16;

     label2:
        $z2 = staticinvoke <org.springframework.util.ReflectionUtils: boolean isToStringMethod(java.lang.reflect.Method)>(r0);

        if $z2 == 0 goto label3;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>("BeanShell object [");

        $r11 = r1.<org.springframework.scripting.bsh.BshScriptUtils$BshObjectInvocationHandler: bsh.XThis xt>;

        $r12 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;

     label3:
        $r2 = r1.<org.springframework.scripting.bsh.BshScriptUtils$BshObjectInvocationHandler: bsh.XThis xt>;

        $r3 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.String getName()>();

        $r5 = virtualinvoke $r2.<bsh.XThis: java.lang.Object invokeMethod(java.lang.String,java.lang.Object[])>($r3, r4);

        $r6 = <bsh.Primitive: bsh.Primitive NULL>;

        if $r5 == $r6 goto label4;

        $r7 = <bsh.Primitive: bsh.Primitive VOID>;

        if $r5 != $r7 goto label5;

     label4:
        return null;

     label5:
        $z3 = $r5 instanceof bsh.Primitive;

        if $z3 == 0 goto label7;

        $r8 = (bsh.Primitive) $r5;

        $r9 = virtualinvoke $r8.<bsh.Primitive: java.lang.Object getValue()>();

     label6:
        return $r9;

     label7:
        return $r5;

     label8:
        $r19 := @caughtexception;

        $r23 = new org.springframework.scripting.bsh.BshScriptUtils$BshExecutionException;

        $r24 = (bsh.EvalError) $r19;

        specialinvoke $r23.<org.springframework.scripting.bsh.BshScriptUtils$BshExecutionException: void <init>(bsh.EvalError,org.springframework.scripting.bsh.BshScriptUtils$BshExecutionException)>($r24, null);

        throw $r23;

        catch bsh.EvalError from label3 to label4 with label8;
        catch bsh.EvalError from label5 to label6 with label8;
    }

    private boolean isProxyForSameBshObject(java.lang.Object)
    {
        org.springframework.scripting.bsh.BshScriptUtils$BshObjectInvocationHandler r3, $r4;
        java.lang.Object r0;
        java.lang.Class $r1;
        java.lang.reflect.InvocationHandler $r2;
        boolean $z0, $z1, $z2;
        bsh.XThis $r5, $r6;

        r3 := @this: org.springframework.scripting.bsh.BshScriptUtils$BshObjectInvocationHandler;

        r0 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = staticinvoke <java.lang.reflect.Proxy: boolean isProxyClass(java.lang.Class)>($r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = staticinvoke <java.lang.reflect.Proxy: java.lang.reflect.InvocationHandler getInvocationHandler(java.lang.Object)>(r0);

        $z1 = $r2 instanceof org.springframework.scripting.bsh.BshScriptUtils$BshObjectInvocationHandler;

        if $z1 == 0 goto label2;

        $r6 = r3.<org.springframework.scripting.bsh.BshScriptUtils$BshObjectInvocationHandler: bsh.XThis xt>;

        $r4 = (org.springframework.scripting.bsh.BshScriptUtils$BshObjectInvocationHandler) $r2;

        $r5 = $r4.<org.springframework.scripting.bsh.BshScriptUtils$BshObjectInvocationHandler: bsh.XThis xt>;

        $z2 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }
}
