final class org.apache.lucene.spatial.query.SpatialOperation$8 extends org.apache.lucene.spatial.query.SpatialOperation
{

    void <init>(java.lang.String, boolean, boolean, boolean)
    {
        java.lang.String r1;
        org.apache.lucene.spatial.query.SpatialOperation$8 r0;
        boolean z0, z1, z2;

        r0 := @this: org.apache.lucene.spatial.query.SpatialOperation$8;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        specialinvoke r0.<org.apache.lucene.spatial.query.SpatialOperation: void <init>(java.lang.String,boolean,boolean,boolean)>(r1, z0, z1, z2);

        return;
    }

    public boolean evaluate(com.spatial4j.core.shape.Shape, com.spatial4j.core.shape.Shape)
    {
        com.spatial4j.core.shape.Shape r0, r1;
        com.spatial4j.core.shape.SpatialRelation $r2;
        org.apache.lucene.spatial.query.SpatialOperation$8 r3;
        boolean $z0, $z1, $z2;

        r3 := @this: org.apache.lucene.spatial.query.SpatialOperation$8;

        r1 := @parameter0: com.spatial4j.core.shape.Shape;

        r0 := @parameter1: com.spatial4j.core.shape.Shape;

        $z0 = interfaceinvoke r0.<com.spatial4j.core.shape.Shape: boolean hasArea()>();

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke r1.<com.spatial4j.core.shape.Shape: com.spatial4j.core.shape.SpatialRelation relate(com.spatial4j.core.shape.Shape)>(r0);

        $z1 = virtualinvoke $r2.<com.spatial4j.core.shape.SpatialRelation: boolean intersects()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }
}
