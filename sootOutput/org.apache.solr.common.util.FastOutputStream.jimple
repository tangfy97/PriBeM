public class org.apache.solr.common.util.FastOutputStream extends java.io.OutputStream implements java.io.DataOutput
{
    protected final java.io.OutputStream out;
    protected byte[] buf;
    protected long written;
    protected int pos;

    public void <init>(java.io.OutputStream)
    {
        java.io.OutputStream r1;
        org.apache.solr.common.util.FastOutputStream r0;
        byte[] $r2;

        r0 := @this: org.apache.solr.common.util.FastOutputStream;

        r1 := @parameter0: java.io.OutputStream;

        $r2 = newarray (byte)[8192];

        specialinvoke r0.<org.apache.solr.common.util.FastOutputStream: void <init>(java.io.OutputStream,byte[],int)>(r1, $r2, 0);

        return;
    }

    public void <init>(java.io.OutputStream, byte[], int)
    {
        java.io.OutputStream r1;
        byte[] r2;
        int i0;
        org.apache.solr.common.util.FastOutputStream r0;

        r0 := @this: org.apache.solr.common.util.FastOutputStream;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        r0.<org.apache.solr.common.util.FastOutputStream: java.io.OutputStream out> = r1;

        r0.<org.apache.solr.common.util.FastOutputStream: byte[] buf> = r2;

        r0.<org.apache.solr.common.util.FastOutputStream: int pos> = i0;

        return;
    }

    public static org.apache.solr.common.util.FastOutputStream wrap(java.io.OutputStream)
    {
        java.io.OutputStream r0;
        org.apache.solr.common.util.FastOutputStream $r1;
        boolean $z0;

        r0 := @parameter0: java.io.OutputStream;

        $z0 = r0 instanceof org.apache.solr.common.util.FastOutputStream;

        if $z0 == 0 goto label1;

        $r1 = (org.apache.solr.common.util.FastOutputStream) r0;

        goto label2;

     label1:
        $r1 = new org.apache.solr.common.util.FastOutputStream;

        specialinvoke $r1.<org.apache.solr.common.util.FastOutputStream: void <init>(java.io.OutputStream)>(r0);

     label2:
        return $r1;
    }

    public void write(int) throws java.io.IOException
    {
        int i0;
        org.apache.solr.common.util.FastOutputStream r0;
        byte $b1;

        r0 := @this: org.apache.solr.common.util.FastOutputStream;

        i0 := @parameter0: int;

        $b1 = (byte) i0;

        virtualinvoke r0.<org.apache.solr.common.util.FastOutputStream: void write(byte)>($b1);

        return;
    }

    public void write(byte[]) throws java.io.IOException
    {
        int $i0;
        org.apache.solr.common.util.FastOutputStream r0;
        byte[] r1;

        r0 := @this: org.apache.solr.common.util.FastOutputStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<org.apache.solr.common.util.FastOutputStream: void write(byte[],int,int)>(r1, 0, $i0);

        return;
    }

    public void write(byte) throws java.io.IOException
    {
        byte[] $r1, $r2, $r3, $r4;
        long $l6, $l7, $l8;
        byte b4;
        int $i0, $i1, $i2, $i3, $i5, $i9;
        org.apache.solr.common.util.FastOutputStream r0;

        r0 := @this: org.apache.solr.common.util.FastOutputStream;

        b4 := @parameter0: byte;

        $i1 = r0.<org.apache.solr.common.util.FastOutputStream: int pos>;

        $r1 = r0.<org.apache.solr.common.util.FastOutputStream: byte[] buf>;

        $i0 = lengthof $r1;

        if $i1 < $i0 goto label1;

        $l7 = r0.<org.apache.solr.common.util.FastOutputStream: long written>;

        $i5 = r0.<org.apache.solr.common.util.FastOutputStream: int pos>;

        $l6 = (long) $i5;

        $l8 = $l7 + $l6;

        r0.<org.apache.solr.common.util.FastOutputStream: long written> = $l8;

        $r4 = r0.<org.apache.solr.common.util.FastOutputStream: byte[] buf>;

        $r3 = r0.<org.apache.solr.common.util.FastOutputStream: byte[] buf>;

        $i9 = lengthof $r3;

        virtualinvoke r0.<org.apache.solr.common.util.FastOutputStream: void flush(byte[],int,int)>($r4, 0, $i9);

        r0.<org.apache.solr.common.util.FastOutputStream: int pos> = 0;

     label1:
        $r2 = r0.<org.apache.solr.common.util.FastOutputStream: byte[] buf>;

        $i2 = r0.<org.apache.solr.common.util.FastOutputStream: int pos>;

        $i3 = $i2 + 1;

        r0.<org.apache.solr.common.util.FastOutputStream: int pos> = $i3;

        $r2[$i2] = b4;

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        byte[] $r1, $r2, r3, $r4, $r5, $r6, $r7, $r8, $r9;
        long $l5, $l6, $l7, $l11, $l12, $l13, $l16, $l17, $l18;
        int $i0, $i1, $i2, $i3, $i4, $i8, $i9, $i10, $i14, $i15, $i19, $i20, $i21, i22, i23;
        org.apache.solr.common.util.FastOutputStream r0;

        r0 := @this: org.apache.solr.common.util.FastOutputStream;

        r3 := @parameter0: byte[];

        i22 := @parameter1: int;

        i23 := @parameter2: int;

     label1:
        $r1 = r0.<org.apache.solr.common.util.FastOutputStream: byte[] buf>;

        $i1 = lengthof $r1;

        $i0 = r0.<org.apache.solr.common.util.FastOutputStream: int pos>;

        $i9 = $i1 - $i0;

        if i23 > $i9 goto label2;

        $r9 = r0.<org.apache.solr.common.util.FastOutputStream: byte[] buf>;

        $i19 = r0.<org.apache.solr.common.util.FastOutputStream: int pos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, i22, $r9, $i19, i23);

        $i20 = r0.<org.apache.solr.common.util.FastOutputStream: int pos>;

        $i21 = $i20 + i23;

        r0.<org.apache.solr.common.util.FastOutputStream: int pos> = $i21;

        return;

     label2:
        $r2 = r0.<org.apache.solr.common.util.FastOutputStream: byte[] buf>;

        $i2 = lengthof $r2;

        if i23 <= $i2 goto label4;

        $i10 = r0.<org.apache.solr.common.util.FastOutputStream: int pos>;

        if $i10 <= 0 goto label3;

        $r8 = r0.<org.apache.solr.common.util.FastOutputStream: byte[] buf>;

        $i14 = r0.<org.apache.solr.common.util.FastOutputStream: int pos>;

        virtualinvoke r0.<org.apache.solr.common.util.FastOutputStream: void flush(byte[],int,int)>($r8, 0, $i14);

        $l17 = r0.<org.apache.solr.common.util.FastOutputStream: long written>;

        $i15 = r0.<org.apache.solr.common.util.FastOutputStream: int pos>;

        $l16 = (long) $i15;

        $l18 = $l17 + $l16;

        r0.<org.apache.solr.common.util.FastOutputStream: long written> = $l18;

        r0.<org.apache.solr.common.util.FastOutputStream: int pos> = 0;

     label3:
        virtualinvoke r0.<org.apache.solr.common.util.FastOutputStream: void flush(byte[],int,int)>(r3, i22, i23);

        $l12 = r0.<org.apache.solr.common.util.FastOutputStream: long written>;

        $l11 = (long) i23;

        $l13 = $l12 + $l11;

        r0.<org.apache.solr.common.util.FastOutputStream: long written> = $l13;

        return;

     label4:
        $r4 = r0.<org.apache.solr.common.util.FastOutputStream: byte[] buf>;

        $i3 = r0.<org.apache.solr.common.util.FastOutputStream: int pos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, i22, $r4, $i3, $i9);

        $l6 = r0.<org.apache.solr.common.util.FastOutputStream: long written>;

        $r5 = r0.<org.apache.solr.common.util.FastOutputStream: byte[] buf>;

        $i4 = lengthof $r5;

        $l5 = (long) $i4;

        $l7 = $l6 + $l5;

        r0.<org.apache.solr.common.util.FastOutputStream: long written> = $l7;

        $r7 = r0.<org.apache.solr.common.util.FastOutputStream: byte[] buf>;

        $r6 = r0.<org.apache.solr.common.util.FastOutputStream: byte[] buf>;

        $i8 = lengthof $r6;

        virtualinvoke r0.<org.apache.solr.common.util.FastOutputStream: void flush(byte[],int,int)>($r7, 0, $i8);

        r0.<org.apache.solr.common.util.FastOutputStream: int pos> = 0;

        i22 = i22 + $i9;

        i23 = i23 - $i9;

        goto label1;
    }

    public void reserve(int) throws java.io.IOException
    {
        byte[] $r1;
        int i0, $i1, $i2, $i3;
        org.apache.solr.common.util.FastOutputStream r0;

        r0 := @this: org.apache.solr.common.util.FastOutputStream;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.solr.common.util.FastOutputStream: byte[] buf>;

        $i2 = lengthof $r1;

        $i1 = r0.<org.apache.solr.common.util.FastOutputStream: int pos>;

        $i3 = $i2 - $i1;

        if i0 <= $i3 goto label1;

        virtualinvoke r0.<org.apache.solr.common.util.FastOutputStream: void flushBuffer()>();

     label1:
        return;
    }

    public void writeBoolean(boolean) throws java.io.IOException
    {
        org.apache.solr.common.util.FastOutputStream r0;
        byte $b0;
        boolean z0;

        r0 := @this: org.apache.solr.common.util.FastOutputStream;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        virtualinvoke r0.<org.apache.solr.common.util.FastOutputStream: void write(int)>($b0);

        return;
    }

    public void writeByte(int) throws java.io.IOException
    {
        int i0;
        org.apache.solr.common.util.FastOutputStream r0;
        byte $b1;

        r0 := @this: org.apache.solr.common.util.FastOutputStream;

        i0 := @parameter0: int;

        $b1 = (byte) i0;

        virtualinvoke r0.<org.apache.solr.common.util.FastOutputStream: void write(byte)>($b1);

        return;
    }

    public void writeShort(int) throws java.io.IOException
    {
        byte $b2, $b3;
        int i0, $i1;
        org.apache.solr.common.util.FastOutputStream r0;

        r0 := @this: org.apache.solr.common.util.FastOutputStream;

        i0 := @parameter0: int;

        $i1 = i0 >>> 8;

        $b2 = (byte) $i1;

        virtualinvoke r0.<org.apache.solr.common.util.FastOutputStream: void write(byte)>($b2);

        $b3 = (byte) i0;

        virtualinvoke r0.<org.apache.solr.common.util.FastOutputStream: void write(byte)>($b3);

        return;
    }

    public void writeChar(int) throws java.io.IOException
    {
        int i0;
        org.apache.solr.common.util.FastOutputStream r0;

        r0 := @this: org.apache.solr.common.util.FastOutputStream;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.solr.common.util.FastOutputStream: void writeShort(int)>(i0);

        return;
    }

    public void writeInt(int) throws java.io.IOException
    {
        byte[] $r1, $r2, $r3, $r4;
        byte $b2, $b6, $b10, $b13;
        int i0, $i1, $i3, $i4, $i5, $i7, $i8, $i9, $i11, $i12, $i14, $i15, $i16;
        org.apache.solr.common.util.FastOutputStream r0;

        r0 := @this: org.apache.solr.common.util.FastOutputStream;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.solr.common.util.FastOutputStream: void reserve(int)>(4);

        $r1 = r0.<org.apache.solr.common.util.FastOutputStream: byte[] buf>;

        $i3 = r0.<org.apache.solr.common.util.FastOutputStream: int pos>;

        $i1 = i0 >>> 24;

        $b2 = (byte) $i1;

        $r1[$i3] = $b2;

        $r2 = r0.<org.apache.solr.common.util.FastOutputStream: byte[] buf>;

        $i4 = r0.<org.apache.solr.common.util.FastOutputStream: int pos>;

        $i7 = $i4 + 1;

        $i5 = i0 >>> 16;

        $b6 = (byte) $i5;

        $r2[$i7] = $b6;

        $r3 = r0.<org.apache.solr.common.util.FastOutputStream: byte[] buf>;

        $i8 = r0.<org.apache.solr.common.util.FastOutputStream: int pos>;

        $i11 = $i8 + 2;

        $i9 = i0 >>> 8;

        $b10 = (byte) $i9;

        $r3[$i11] = $b10;

        $r4 = r0.<org.apache.solr.common.util.FastOutputStream: byte[] buf>;

        $i12 = r0.<org.apache.solr.common.util.FastOutputStream: int pos>;

        $i14 = $i12 + 3;

        $b13 = (byte) i0;

        $r4[$i14] = $b13;

        $i15 = r0.<org.apache.solr.common.util.FastOutputStream: int pos>;

        $i16 = $i15 + 4;

        r0.<org.apache.solr.common.util.FastOutputStream: int pos> = $i16;

        return;
    }

    public void writeLong(long) throws java.io.IOException
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        byte $b3, $b8, $b13, $b18, $b23, $b28, $b33, $b37;
        long l0, $l1, $l6, $l11, $l16, $l21, $l26, $l31;
        int $i2, $i4, $i5, $i7, $i9, $i10, $i12, $i14, $i15, $i17, $i19, $i20, $i22, $i24, $i25, $i27, $i29, $i30, $i32, $i34, $i35, $i36, $i38, $i39, $i40;
        org.apache.solr.common.util.FastOutputStream r0;

        r0 := @this: org.apache.solr.common.util.FastOutputStream;

        l0 := @parameter0: long;

        virtualinvoke r0.<org.apache.solr.common.util.FastOutputStream: void reserve(int)>(8);

        $r1 = r0.<org.apache.solr.common.util.FastOutputStream: byte[] buf>;

        $i4 = r0.<org.apache.solr.common.util.FastOutputStream: int pos>;

        $l1 = l0 >>> 56;

        $i2 = (int) $l1;

        $b3 = (byte) $i2;

        $r1[$i4] = $b3;

        $r2 = r0.<org.apache.solr.common.util.FastOutputStream: byte[] buf>;

        $i5 = r0.<org.apache.solr.common.util.FastOutputStream: int pos>;

        $i9 = $i5 + 1;

        $l6 = l0 >>> 48;

        $i7 = (int) $l6;

        $b8 = (byte) $i7;

        $r2[$i9] = $b8;

        $r3 = r0.<org.apache.solr.common.util.FastOutputStream: byte[] buf>;

        $i10 = r0.<org.apache.solr.common.util.FastOutputStream: int pos>;

        $i14 = $i10 + 2;

        $l11 = l0 >>> 40;

        $i12 = (int) $l11;

        $b13 = (byte) $i12;

        $r3[$i14] = $b13;

        $r4 = r0.<org.apache.solr.common.util.FastOutputStream: byte[] buf>;

        $i15 = r0.<org.apache.solr.common.util.FastOutputStream: int pos>;

        $i19 = $i15 + 3;

        $l16 = l0 >>> 32;

        $i17 = (int) $l16;

        $b18 = (byte) $i17;

        $r4[$i19] = $b18;

        $r5 = r0.<org.apache.solr.common.util.FastOutputStream: byte[] buf>;

        $i20 = r0.<org.apache.solr.common.util.FastOutputStream: int pos>;

        $i24 = $i20 + 4;

        $l21 = l0 >>> 24;

        $i22 = (int) $l21;

        $b23 = (byte) $i22;

        $r5[$i24] = $b23;

        $r6 = r0.<org.apache.solr.common.util.FastOutputStream: byte[] buf>;

        $i25 = r0.<org.apache.solr.common.util.FastOutputStream: int pos>;

        $i29 = $i25 + 5;

        $l26 = l0 >>> 16;

        $i27 = (int) $l26;

        $b28 = (byte) $i27;

        $r6[$i29] = $b28;

        $r7 = r0.<org.apache.solr.common.util.FastOutputStream: byte[] buf>;

        $i30 = r0.<org.apache.solr.common.util.FastOutputStream: int pos>;

        $i34 = $i30 + 6;

        $l31 = l0 >>> 8;

        $i32 = (int) $l31;

        $b33 = (byte) $i32;

        $r7[$i34] = $b33;

        $r8 = r0.<org.apache.solr.common.util.FastOutputStream: byte[] buf>;

        $i35 = r0.<org.apache.solr.common.util.FastOutputStream: int pos>;

        $i38 = $i35 + 7;

        $i36 = (int) l0;

        $b37 = (byte) $i36;

        $r8[$i38] = $b37;

        $i39 = r0.<org.apache.solr.common.util.FastOutputStream: int pos>;

        $i40 = $i39 + 8;

        r0.<org.apache.solr.common.util.FastOutputStream: int pos> = $i40;

        return;
    }

    public void writeFloat(float) throws java.io.IOException
    {
        int $i0;
        org.apache.solr.common.util.FastOutputStream r0;
        float f0;

        r0 := @this: org.apache.solr.common.util.FastOutputStream;

        f0 := @parameter0: float;

        $i0 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>(f0);

        virtualinvoke r0.<org.apache.solr.common.util.FastOutputStream: void writeInt(int)>($i0);

        return;
    }

    public void writeDouble(double) throws java.io.IOException
    {
        org.apache.solr.common.util.FastOutputStream r0;
        long $l0;
        double d0;

        r0 := @this: org.apache.solr.common.util.FastOutputStream;

        d0 := @parameter0: double;

        $l0 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d0);

        virtualinvoke r0.<org.apache.solr.common.util.FastOutputStream: void writeLong(long)>($l0);

        return;
    }

    public void writeBytes(java.lang.String) throws java.io.IOException
    {
        byte $b2;
        int $i0, i3;
        org.apache.solr.common.util.FastOutputStream r1;
        char $c1;
        java.lang.String r0;

        r1 := @this: org.apache.solr.common.util.FastOutputStream;

        r0 := @parameter0: java.lang.String;

        i3 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i3 >= $i0 goto label2;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $b2 = (byte) $c1;

        virtualinvoke r1.<org.apache.solr.common.util.FastOutputStream: void write(byte)>($b2);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    public void writeChars(java.lang.String) throws java.io.IOException
    {
        int $i0, i2, $i3;
        org.apache.solr.common.util.FastOutputStream r1;
        char $c1;
        java.lang.String r0;

        r1 := @this: org.apache.solr.common.util.FastOutputStream;

        r0 := @parameter0: java.lang.String;

        i2 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i2 >= $i0 goto label2;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $i3 = (int) $c1;

        virtualinvoke r1.<org.apache.solr.common.util.FastOutputStream: void writeChar(int)>($i3);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void writeUTF(java.lang.String) throws java.io.IOException
    {
        org.apache.solr.common.util.FastOutputStream r1;
        java.lang.String r2;
        java.io.DataOutputStream $r0;

        r1 := @this: org.apache.solr.common.util.FastOutputStream;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.io.DataOutputStream;

        specialinvoke $r0.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r1);

        virtualinvoke $r0.<java.io.DataOutputStream: void writeUTF(java.lang.String)>(r2);

        return;
    }

    public void flush() throws java.io.IOException
    {
        java.io.OutputStream $r1, $r2;
        org.apache.solr.common.util.FastOutputStream r0;

        r0 := @this: org.apache.solr.common.util.FastOutputStream;

        virtualinvoke r0.<org.apache.solr.common.util.FastOutputStream: void flushBuffer()>();

        $r1 = r0.<org.apache.solr.common.util.FastOutputStream: java.io.OutputStream out>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.solr.common.util.FastOutputStream: java.io.OutputStream out>;

        virtualinvoke $r2.<java.io.OutputStream: void flush()>();

     label1:
        return;
    }

    public void close() throws java.io.IOException
    {
        java.io.OutputStream $r1, $r2;
        org.apache.solr.common.util.FastOutputStream r0;

        r0 := @this: org.apache.solr.common.util.FastOutputStream;

        virtualinvoke r0.<org.apache.solr.common.util.FastOutputStream: void flushBuffer()>();

        $r1 = r0.<org.apache.solr.common.util.FastOutputStream: java.io.OutputStream out>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.solr.common.util.FastOutputStream: java.io.OutputStream out>;

        virtualinvoke $r2.<java.io.OutputStream: void close()>();

     label1:
        return;
    }

    public void flushBuffer() throws java.io.IOException
    {
        byte[] $r1;
        long $l2, $l3, $l4;
        int $i0, $i1, $i5;
        org.apache.solr.common.util.FastOutputStream r0;

        r0 := @this: org.apache.solr.common.util.FastOutputStream;

        $i0 = r0.<org.apache.solr.common.util.FastOutputStream: int pos>;

        if $i0 <= 0 goto label1;

        $l3 = r0.<org.apache.solr.common.util.FastOutputStream: long written>;

        $i1 = r0.<org.apache.solr.common.util.FastOutputStream: int pos>;

        $l2 = (long) $i1;

        $l4 = $l3 + $l2;

        r0.<org.apache.solr.common.util.FastOutputStream: long written> = $l4;

        $r1 = r0.<org.apache.solr.common.util.FastOutputStream: byte[] buf>;

        $i5 = r0.<org.apache.solr.common.util.FastOutputStream: int pos>;

        virtualinvoke r0.<org.apache.solr.common.util.FastOutputStream: void flush(byte[],int,int)>($r1, 0, $i5);

        r0.<org.apache.solr.common.util.FastOutputStream: int pos> = 0;

     label1:
        return;
    }

    public void flush(byte[], int, int) throws java.io.IOException
    {
        java.io.OutputStream $r2;
        byte[] r1;
        int i0, i1;
        org.apache.solr.common.util.FastOutputStream r0;

        r0 := @this: org.apache.solr.common.util.FastOutputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.apache.solr.common.util.FastOutputStream: java.io.OutputStream out>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public long size()
    {
        int $i0;
        org.apache.solr.common.util.FastOutputStream r0;
        long $l1, $l2, $l3;

        r0 := @this: org.apache.solr.common.util.FastOutputStream;

        $l2 = r0.<org.apache.solr.common.util.FastOutputStream: long written>;

        $i0 = r0.<org.apache.solr.common.util.FastOutputStream: int pos>;

        $l1 = (long) $i0;

        $l3 = $l2 + $l1;

        return $l3;
    }

    public long written()
    {
        org.apache.solr.common.util.FastOutputStream r0;
        long $l0;

        r0 := @this: org.apache.solr.common.util.FastOutputStream;

        $l0 = r0.<org.apache.solr.common.util.FastOutputStream: long written>;

        return $l0;
    }

    public void setWritten(long)
    {
        org.apache.solr.common.util.FastOutputStream r0;
        long l0;

        r0 := @this: org.apache.solr.common.util.FastOutputStream;

        l0 := @parameter0: long;

        r0.<org.apache.solr.common.util.FastOutputStream: long written> = l0;

        return;
    }
}
