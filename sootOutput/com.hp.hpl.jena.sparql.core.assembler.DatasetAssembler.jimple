public class com.hp.hpl.jena.sparql.core.assembler.DatasetAssembler extends com.hp.hpl.jena.assembler.assemblers.AssemblerBase implements com.hp.hpl.jena.assembler.Assembler
{

    public void <init>()
    {
        com.hp.hpl.jena.sparql.core.assembler.DatasetAssembler r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.assembler.DatasetAssembler;

        specialinvoke r0.<com.hp.hpl.jena.assembler.assemblers.AssemblerBase: void <init>()>();

        return;
    }

    public static com.hp.hpl.jena.rdf.model.Resource getType()
    {
        com.hp.hpl.jena.rdf.model.Resource $r0;

        $r0 = <com.hp.hpl.jena.sparql.core.assembler.DatasetAssemblerVocab: com.hp.hpl.jena.rdf.model.Resource tDataset>;

        return $r0;
    }

    public java.lang.Object open(com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.assembler.Mode)
    {
        com.hp.hpl.jena.assembler.Assembler r1;
        com.hp.hpl.jena.assembler.Mode r3;
        com.hp.hpl.jena.query.Dataset $r4;
        com.hp.hpl.jena.sparql.core.assembler.DatasetAssembler r0;
        com.hp.hpl.jena.rdf.model.Resource r2;

        r0 := @this: com.hp.hpl.jena.sparql.core.assembler.DatasetAssembler;

        r1 := @parameter0: com.hp.hpl.jena.assembler.Assembler;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        r3 := @parameter2: com.hp.hpl.jena.assembler.Mode;

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.assembler.DatasetAssembler: com.hp.hpl.jena.query.Dataset createDataset(com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.assembler.Mode)>(r1, r2, r3);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.core.assembler.DatasetAssembler: java.lang.Object createTextIndex(com.hp.hpl.jena.query.Dataset,com.hp.hpl.jena.rdf.model.Resource)>($r4, r2);

        return $r4;
    }

    public com.hp.hpl.jena.query.Dataset createDataset(com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.assembler.Mode)
    {
        com.hp.hpl.jena.sparql.core.assembler.DatasetAssemblerException $r20, $r26;
        com.hp.hpl.jena.rdf.model.Property $r4, $r6, $r12, $r14, $r18, $r32;
        boolean $z0, $z1;
        com.hp.hpl.jena.rdf.model.RDFNode r10;
        com.hp.hpl.jena.sparql.util.Context $r2;
        java.util.List $r7;
        com.hp.hpl.jena.query.Dataset $r3;
        java.lang.StringBuilder $r21, $r22, $r23, $r27, $r28, $r30;
        com.hp.hpl.jena.assembler.Assembler r16;
        com.hp.hpl.jena.assembler.Mode r33;
        java.lang.String $r13, $r24, $r29, $r31;
        java.util.Iterator $r8;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r0;
        com.hp.hpl.jena.rdf.model.Resource r1, $r5, r11, $r15, $r19, r34, r36;
        com.hp.hpl.jena.rdf.model.Model $r17, r35;
        java.lang.Object $r9;
        com.hp.hpl.jena.sparql.core.assembler.DatasetAssembler r25;

        r25 := @this: com.hp.hpl.jena.sparql.core.assembler.DatasetAssembler;

        r16 := @parameter0: com.hp.hpl.jena.assembler.Assembler;

        r1 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        r33 := @parameter2: com.hp.hpl.jena.assembler.Mode;

        $r0 = staticinvoke <com.hp.hpl.jena.sparql.core.DatasetGraphFactory: com.hp.hpl.jena.sparql.core.DatasetGraph createMem()>();

        $r2 = interfaceinvoke $r0.<com.hp.hpl.jena.sparql.core.DatasetGraph: com.hp.hpl.jena.sparql.util.Context getContext()>();

        staticinvoke <com.hp.hpl.jena.sparql.core.assembler.AssemblerUtils: void setContext(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.sparql.util.Context)>(r1, $r2);

        $r3 = staticinvoke <com.hp.hpl.jena.query.DatasetFactory: com.hp.hpl.jena.query.Dataset create(com.hp.hpl.jena.sparql.core.DatasetGraph)>($r0);

        $r4 = <com.hp.hpl.jena.sparql.core.assembler.DatasetAssemblerVocab: com.hp.hpl.jena.rdf.model.Property pDefaultGraph>;

        $r5 = staticinvoke <com.hp.hpl.jena.sparql.util.graph.GraphUtils: com.hp.hpl.jena.rdf.model.Resource getResourceValue(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property)>(r1, $r4);

        r34 = $r5;

        if $r5 != null goto label1;

        $r32 = <com.hp.hpl.jena.sparql.core.assembler.DatasetAssemblerVocab: com.hp.hpl.jena.rdf.model.Property pGraph>;

        r34 = staticinvoke <com.hp.hpl.jena.sparql.util.graph.GraphUtils: com.hp.hpl.jena.rdf.model.Resource getResourceValue(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property)>(r1, $r32);

     label1:
        if r34 == null goto label2;

        r35 = interfaceinvoke r16.<com.hp.hpl.jena.assembler.Assembler: com.hp.hpl.jena.rdf.model.Model openModel(com.hp.hpl.jena.rdf.model.Resource)>(r34);

        goto label3;

     label2:
        r35 = staticinvoke <com.hp.hpl.jena.sparql.graph.GraphFactory: com.hp.hpl.jena.rdf.model.Model makePlainModel()>();

     label3:
        interfaceinvoke $r3.<com.hp.hpl.jena.query.Dataset: void setDefaultModel(com.hp.hpl.jena.rdf.model.Model)>(r35);

        $r6 = <com.hp.hpl.jena.sparql.core.assembler.DatasetAssemblerVocab: com.hp.hpl.jena.rdf.model.Property pNamedGraph>;

        $r7 = staticinvoke <com.hp.hpl.jena.sparql.util.graph.GraphUtils: java.util.List multiValue(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property)>(r1, $r6);

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (com.hp.hpl.jena.rdf.model.RDFNode) $r9;

        $z0 = r10 instanceof com.hp.hpl.jena.rdf.model.Resource;

        if $z0 != 0 goto label5;

        $r26 = new com.hp.hpl.jena.sparql.core.assembler.DatasetAssemblerException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a resource: ");

        $r29 = staticinvoke <com.hp.hpl.jena.sparql.util.FmtUtils: java.lang.String stringForRDFNode(com.hp.hpl.jena.rdf.model.RDFNode)>(r10);

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<com.hp.hpl.jena.sparql.core.assembler.DatasetAssemblerException: void <init>(com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(r1, $r31);

        throw $r26;

     label5:
        r11 = (com.hp.hpl.jena.rdf.model.Resource) r10;

        $r12 = <com.hp.hpl.jena.sparql.core.assembler.DatasetAssemblerVocab: com.hp.hpl.jena.rdf.model.Property pGraphName>;

        $r13 = staticinvoke <com.hp.hpl.jena.sparql.util.graph.GraphUtils: java.lang.String getAsStringValue(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property)>(r11, $r12);

        $r14 = <com.hp.hpl.jena.sparql.core.assembler.DatasetAssemblerVocab: com.hp.hpl.jena.rdf.model.Property pGraph>;

        $r15 = staticinvoke <com.hp.hpl.jena.sparql.util.graph.GraphUtils: com.hp.hpl.jena.rdf.model.Resource getResourceValue(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property)>(r11, $r14);

        r36 = $r15;

        if $r15 != null goto label7;

        $r18 = <com.hp.hpl.jena.sparql.core.assembler.DatasetAssemblerVocab: com.hp.hpl.jena.rdf.model.Property pGraphAlt>;

        $r19 = staticinvoke <com.hp.hpl.jena.sparql.util.graph.GraphUtils: com.hp.hpl.jena.rdf.model.Resource getResourceValue(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property)>(r11, $r18);

        r36 = $r19;

        if $r19 == null goto label6;

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String)>(r25, "Use of old vocabulary: use :graph not :graphData");

        goto label7;

     label6:
        $r20 = new com.hp.hpl.jena.sparql.core.assembler.DatasetAssemblerException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no graph for: ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<com.hp.hpl.jena.sparql.core.assembler.DatasetAssemblerException: void <init>(com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(r1, $r24);

        throw $r20;

     label7:
        $r17 = interfaceinvoke r16.<com.hp.hpl.jena.assembler.Assembler: com.hp.hpl.jena.rdf.model.Model openModel(com.hp.hpl.jena.rdf.model.Resource)>(r36);

        interfaceinvoke $r3.<com.hp.hpl.jena.query.Dataset: void addNamedModel(java.lang.String,com.hp.hpl.jena.rdf.model.Model)>($r13, $r17);

        goto label4;

     label8:
        return $r3;
    }

    public java.lang.Object createTextIndex(com.hp.hpl.jena.query.Dataset, com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.query.Dataset r1;
        java.lang.Object $r3, r4;
        com.hp.hpl.jena.sparql.core.assembler.DatasetAssembler r0;
        com.hp.hpl.jena.rdf.model.Resource r2;

        r0 := @this: com.hp.hpl.jena.sparql.core.assembler.DatasetAssembler;

        r1 := @parameter0: com.hp.hpl.jena.query.Dataset;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.assembler.DatasetAssembler: java.lang.Object createTextIndex(com.hp.hpl.jena.query.Dataset,com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(r1, r2, "org.apache.jena.larq.assembler.AssemblerLARQ");

        r4 = $r3;

        if $r3 != null goto label1;

        r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.assembler.DatasetAssembler: java.lang.Object createTextIndex(com.hp.hpl.jena.query.Dataset,com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(r1, r2, "com.hp.hpl.jena.query.larq.AssemblerLARQ");

     label1:
        return r4;
    }

    protected java.lang.Object createTextIndex(com.hp.hpl.jena.query.Dataset, com.hp.hpl.jena.rdf.model.Resource, java.lang.String)
    {
        java.lang.Throwable $r20;
        java.lang.Object[] $r8, $r21;
        com.hp.hpl.jena.rdf.model.Property $r3, $r4;
        java.lang.String r0, $r5, $r17, $r19, $r22, r24;
        java.lang.reflect.Method $r7;
        boolean $z0;
        org.slf4j.Logger $r12;
        java.lang.Class[] $r6;
        com.hp.hpl.jena.rdf.model.Resource r2;
        java.lang.Exception $r18;
        com.hp.hpl.jena.query.Dataset r9;
        java.lang.Class $r1;
        java.lang.Object $r10;
        java.lang.ClassNotFoundException $r11;
        java.lang.StringBuilder $r13, $r14, $r15, $r16;
        com.hp.hpl.jena.sparql.core.assembler.DatasetAssembler r23;

        r23 := @this: com.hp.hpl.jena.sparql.core.assembler.DatasetAssembler;

        r9 := @parameter0: com.hp.hpl.jena.query.Dataset;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        r0 := @parameter2: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        $r3 = <com.hp.hpl.jena.sparql.core.assembler.DatasetAssemblerVocab: com.hp.hpl.jena.rdf.model.Property pIndex>;

        $z0 = interfaceinvoke r2.<com.hp.hpl.jena.rdf.model.Resource: boolean hasProperty(com.hp.hpl.jena.rdf.model.Property)>($r3);

        if $z0 == 0 goto label7;

     label2:
        staticinvoke <org.apache.jena.atlas.logging.Log: void info(java.lang.Class,java.lang.String)>(class "Lcom/hp/hpl/jena/sparql/core/assembler/DatasetAssembler;", "Initializing LARQ");

        $r4 = <com.hp.hpl.jena.sparql.core.assembler.DatasetAssemblerVocab: com.hp.hpl.jena.rdf.model.Property pIndex>;

        $r5 = staticinvoke <com.hp.hpl.jena.sparql.util.graph.GraphUtils: java.lang.String getAsStringValue(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property)>(r2, $r4);

        $r6 = newarray (java.lang.Class)[2];

        $r6[0] = class "Lcom/hp/hpl/jena/query/Dataset;";

        $r6[1] = class "Ljava/lang/String;";

        $r7 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("make", $r6);

        $r8 = newarray (java.lang.Object)[2];

        $r8[0] = r9;

        $r8[1] = $r5;

        $r10 = virtualinvoke $r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, $r8);

     label3:
        return $r10;

     label4:
        $r18 := @caughtexception;

        $r19 = virtualinvoke $r18.<java.lang.Exception: java.lang.String getMessage()>();

        if $r19 == null goto label5;

        r24 = virtualinvoke $r18.<java.lang.Exception: java.lang.String getMessage()>();

        goto label6;

     label5:
        $r20 = virtualinvoke $r18.<java.lang.Exception: java.lang.Throwable getCause()>();

        r24 = virtualinvoke $r20.<java.lang.Throwable: java.lang.String getMessage()>();

     label6:
        $r21 = newarray (java.lang.Object)[2];

        $r21[0] = r0;

        $r21[1] = r24;

        $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to initialize LARQ using %s: %s", $r21);

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Class,java.lang.String)>(class "Lcom/hp/hpl/jena/sparql/core/assembler/DatasetAssembler;", $r22);

     label7:
        goto label9;

     label8:
        $r11 := @caughtexception;

        $r12 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lcom/hp/hpl/jena/sparql/core/assembler/DatasetAssembler;");

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LARQ initialization: class ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not in the classpath.");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<org.slf4j.Logger: void debug(java.lang.String)>($r17);

     label9:
        return null;

        catch java.lang.Exception from label2 to label3 with label4;
        catch java.lang.ClassNotFoundException from label1 to label3 with label8;
        catch java.lang.ClassNotFoundException from label4 to label7 with label8;
    }
}
