public class javax.ws.rs.core.MultivaluedHashMap extends javax.ws.rs.core.AbstractMultivaluedMap implements java.io.Serializable
{
    private static final long serialVersionUID;

    public void <init>()
    {
        java.util.HashMap $r1;
        javax.ws.rs.core.MultivaluedHashMap r0;

        r0 := @this: javax.ws.rs.core.MultivaluedHashMap;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        specialinvoke r0.<javax.ws.rs.core.AbstractMultivaluedMap: void <init>(java.util.Map)>($r1);

        return;
    }

    public void <init>(int)
    {
        int i0;
        java.util.HashMap $r1;
        javax.ws.rs.core.MultivaluedHashMap r0;

        r0 := @this: javax.ws.rs.core.MultivaluedHashMap;

        i0 := @parameter0: int;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>(int)>(i0);

        specialinvoke r0.<javax.ws.rs.core.AbstractMultivaluedMap: void <init>(java.util.Map)>($r1);

        return;
    }

    public void <init>(int, float)
    {
        int i0;
        float f0;
        java.util.HashMap $r1;
        javax.ws.rs.core.MultivaluedHashMap r0;

        r0 := @this: javax.ws.rs.core.MultivaluedHashMap;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>(int,float)>(i0, f0);

        specialinvoke r0.<javax.ws.rs.core.AbstractMultivaluedMap: void <init>(java.util.Map)>($r1);

        return;
    }

    public void <init>(javax.ws.rs.core.MultivaluedMap)
    {
        javax.ws.rs.core.MultivaluedMap r1;
        javax.ws.rs.core.MultivaluedHashMap r0;

        r0 := @this: javax.ws.rs.core.MultivaluedHashMap;

        r1 := @parameter0: javax.ws.rs.core.MultivaluedMap;

        specialinvoke r0.<javax.ws.rs.core.MultivaluedHashMap: void <init>()>();

        specialinvoke r0.<javax.ws.rs.core.MultivaluedHashMap: void putAll(javax.ws.rs.core.MultivaluedMap)>(r1);

        return;
    }

    private void putAll(javax.ws.rs.core.MultivaluedMap)
    {
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        java.util.Collection $r10;
        java.util.Set $r1;
        javax.ws.rs.core.MultivaluedHashMap r5;
        java.util.ArrayList $r8;
        javax.ws.rs.core.MultivaluedMap r0;
        java.util.Map $r6;
        java.lang.Object $r3, $r7, $r9;
        boolean $z0;

        r5 := @this: javax.ws.rs.core.MultivaluedHashMap;

        r0 := @parameter0: javax.ws.rs.core.MultivaluedMap;

        $r1 = interfaceinvoke r0.<javax.ws.rs.core.MultivaluedMap: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r6 = r5.<javax.ws.rs.core.MultivaluedHashMap: java.util.Map store>;

        $r7 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = new java.util.ArrayList;

        $r9 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (java.util.Collection) $r9;

        specialinvoke $r8.<java.util.ArrayList: void <init>(java.util.Collection)>($r10);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8);

        goto label1;

     label2:
        return;
    }

    public void <init>(java.util.Map)
    {
        java.util.Map$Entry r5;
        java.util.Iterator $r3;
        java.util.Set $r2;
        javax.ws.rs.core.MultivaluedHashMap r0;
        java.util.Map r1;
        java.lang.Object $r4, $r6, $r7;
        boolean $z0;

        r0 := @this: javax.ws.rs.core.MultivaluedHashMap;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<javax.ws.rs.core.MultivaluedHashMap: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r6 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r0.<javax.ws.rs.core.MultivaluedHashMap: void putSingle(java.lang.Object,java.lang.Object)>($r6, $r7);

        goto label1;

     label2:
        return;
    }

    public static void <clinit>()
    {
        <javax.ws.rs.core.MultivaluedHashMap: long serialVersionUID> = -6052320403766368902L;

        return;
    }
}
