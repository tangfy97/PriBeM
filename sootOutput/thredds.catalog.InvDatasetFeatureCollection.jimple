public abstract class thredds.catalog.InvDatasetFeatureCollection extends thredds.catalog.InvCatalogRef implements thredds.inventory.DatasetCollectionManager$TriggerListener
{
    private static final org.slf4j.Logger logger;
    protected static final java.lang.String FILES;
    protected static final java.lang.String Virtual_Services;
    private static java.lang.String context;
    private static java.lang.String catalogServletName;
    private static java.lang.String cdmrFeatureServiceUrlPath;
    protected final java.lang.String path;
    protected final ucar.nc2.constants.FeatureType featureType;
    protected final thredds.inventory.FeatureCollectionConfig config;
    protected thredds.catalog.InvService cdmrService;
    protected final thredds.inventory.DatasetCollectionManager dcm;
    protected final java.lang.String topDirectory;
    protected final java.util.regex.Pattern filter;
    protected thredds.catalog.InvDatasetFeatureCollection$State state;
    protected final java.lang.Object lock;

    public static void setContext(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        <thredds.catalog.InvDatasetFeatureCollection: java.lang.String context> = r0;

        return;
    }

    public static void setCatalogServletName(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        <thredds.catalog.InvDatasetFeatureCollection: java.lang.String catalogServletName> = r0;

        return;
    }

    private static java.lang.String buildCatalogServiceHref(java.lang.String)
    {
        java.lang.StringBuilder $r0, $r2, $r4, $r5, $r7, $r8;
        java.lang.String $r1, $r3, r6, $r9, $r10;

        r6 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = <thredds.catalog.InvDatasetFeatureCollection: java.lang.String context>;

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = <thredds.catalog.InvDatasetFeatureCollection: java.lang.String catalogServletName>;

        if $r3 != null goto label1;

        $r10 = "";

        goto label2;

     label1:
        $r10 = <thredds.catalog.InvDatasetFeatureCollection: java.lang.String catalogServletName>;

     label2:
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/catalog.xml");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public static void setCdmrFeatureServiceUrlPath(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        <thredds.catalog.InvDatasetFeatureCollection: java.lang.String cdmrFeatureServiceUrlPath> = r0;

        return;
    }

    private thredds.catalog.InvService getCdmrFeatureService()
    {
        thredds.catalog.InvService $r0;
        thredds.catalog.InvDatasetFeatureCollection r7;
        java.lang.StringBuilder $r1, $r3, $r5;
        java.lang.String $r2, $r4, $r6;

        r7 := @this: thredds.catalog.InvDatasetFeatureCollection;

        $r0 = new thredds.catalog.InvService;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = <thredds.catalog.InvDatasetFeatureCollection: java.lang.String context>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = <thredds.catalog.InvDatasetFeatureCollection: java.lang.String cdmrFeatureServiceUrlPath>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<thredds.catalog.InvService: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("cdmrFeature", "cdmrFeature", $r6, null, null);

        return $r0;
    }

    protected java.lang.String getCatalogHref(java.lang.String)
    {
        thredds.catalog.InvDatasetFeatureCollection r1;
        java.lang.StringBuilder $r0, $r3, $r4, $r6;
        java.lang.String $r2, r5, $r7, $r8;

        r1 := @this: thredds.catalog.InvDatasetFeatureCollection;

        r5 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<thredds.catalog.InvDatasetFeatureCollection: java.lang.String path>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = staticinvoke <thredds.catalog.InvDatasetFeatureCollection: java.lang.String buildCatalogServiceHref(java.lang.String)>($r7);

        return $r8;
    }

    public static thredds.catalog.InvDatasetFeatureCollection factory(thredds.catalog.InvDatasetImpl, java.lang.String, java.lang.String, ucar.nc2.constants.FeatureType, thredds.inventory.FeatureCollectionConfig)
    {
        thredds.inventory.FeatureCollectionConfig r6;
        thredds.catalog.InvDatasetFcPoint $r2;
        thredds.catalog.InvDatasetFeatureCollection r8;
        thredds.catalog.InvDatasetFcFmrc $r7;
        java.lang.String r4, r5;
        ucar.nc2.constants.FeatureType r0, $r1;
        thredds.catalog.InvDatasetImpl r3;
        boolean $z0;

        r3 := @parameter0: thredds.catalog.InvDatasetImpl;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        r0 := @parameter3: ucar.nc2.constants.FeatureType;

        r6 := @parameter4: thredds.inventory.FeatureCollectionConfig;

        r8 = null;

        $r1 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType FMRC>;

        if r0 != $r1 goto label1;

        $r7 = new thredds.catalog.InvDatasetFcFmrc;

        specialinvoke $r7.<thredds.catalog.InvDatasetFcFmrc: void <init>(thredds.catalog.InvDatasetImpl,java.lang.String,java.lang.String,ucar.nc2.constants.FeatureType,thredds.inventory.FeatureCollectionConfig)>(r3, r4, r5, r0, r6);

        r8 = $r7;

        goto label2;

     label1:
        $z0 = virtualinvoke r0.<ucar.nc2.constants.FeatureType: boolean isPointFeatureType()>();

        if $z0 == 0 goto label2;

        $r2 = new thredds.catalog.InvDatasetFcPoint;

        specialinvoke $r2.<thredds.catalog.InvDatasetFcPoint: void <init>(thredds.catalog.InvDatasetImpl,java.lang.String,java.lang.String,ucar.nc2.constants.FeatureType,thredds.inventory.FeatureCollectionConfig)>(r3, r4, r5, r0, r6);

        r8 = $r2;

     label2:
        if r8 == null goto label3;

        specialinvoke r8.<thredds.catalog.InvDatasetFeatureCollection: void finishConstruction()>();

     label3:
        return r8;
    }

    protected void <init>(thredds.catalog.InvDatasetImpl, java.lang.String, java.lang.String, ucar.nc2.constants.FeatureType, thredds.inventory.FeatureCollectionConfig)
    {
        java.util.Formatter $r11;
        thredds.catalog.InvDatasetFeatureCollection r0;
        thredds.inventory.DatasetCollectionManager $r12, $r13;
        thredds.inventory.CollectionSpecParser $r14;
        java.lang.String r2, r3, $r4, $r10, $r15, $r18;
        ucar.nc2.constants.FeatureType r6;
        boolean $z0;
        thredds.inventory.FeatureCollectionConfig r9;
        thredds.catalog.InvService $r8;
        thredds.inventory.DatasetCollectionFromCatalog $r17;
        thredds.catalog.ThreddsMetadata $r7;
        java.lang.Object $r5;
        java.util.regex.Pattern $r16;
        thredds.catalog.InvDatasetImpl r1;

        r0 := @this: thredds.catalog.InvDatasetFeatureCollection;

        r1 := @parameter0: thredds.catalog.InvDatasetImpl;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r6 := @parameter3: ucar.nc2.constants.FeatureType;

        r9 := @parameter4: thredds.inventory.FeatureCollectionConfig;

        $r4 = staticinvoke <thredds.catalog.InvDatasetFeatureCollection: java.lang.String buildCatalogServiceHref(java.lang.String)>(r3);

        specialinvoke r0.<thredds.catalog.InvCatalogRef: void <init>(thredds.catalog.InvDatasetImpl,java.lang.String,java.lang.String)>(r1, r2, $r4);

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<thredds.catalog.InvDatasetFeatureCollection: java.lang.Object lock> = $r5;

        r0.<thredds.catalog.InvDatasetFeatureCollection: java.lang.String path> = r3;

        r0.<thredds.catalog.InvDatasetFeatureCollection: ucar.nc2.constants.FeatureType featureType> = r6;

        $r7 = virtualinvoke r0.<thredds.catalog.InvDatasetFeatureCollection: thredds.catalog.ThreddsMetadata getLocalMetadataInheritable()>();

        virtualinvoke $r7.<thredds.catalog.ThreddsMetadata: void setDataType(ucar.nc2.constants.FeatureType)>(r6);

        $r8 = specialinvoke r0.<thredds.catalog.InvDatasetFeatureCollection: thredds.catalog.InvService getCdmrFeatureService()>();

        r0.<thredds.catalog.InvDatasetFeatureCollection: thredds.catalog.InvService cdmrService> = $r8;

        r0.<thredds.catalog.InvDatasetFeatureCollection: thredds.inventory.FeatureCollectionConfig config> = r9;

        $r10 = r9.<thredds.inventory.FeatureCollectionConfig: java.lang.String spec>;

        $z0 = virtualinvoke $r10.<java.lang.String: boolean startsWith(java.lang.String)>("catalog:");

        if $z0 == 0 goto label1;

        $r17 = new thredds.inventory.DatasetCollectionFromCatalog;

        $r18 = r9.<thredds.inventory.FeatureCollectionConfig: java.lang.String spec>;

        specialinvoke $r17.<thredds.inventory.DatasetCollectionFromCatalog: void <init>(java.lang.String)>($r18);

        r0.<thredds.catalog.InvDatasetFeatureCollection: thredds.inventory.DatasetCollectionManager dcm> = $r17;

        goto label2;

     label1:
        $r11 = new java.util.Formatter;

        specialinvoke $r11.<java.util.Formatter: void <init>()>();

        $r12 = new thredds.inventory.DatasetCollectionManager;

        specialinvoke $r12.<thredds.inventory.DatasetCollectionManager: void <init>(thredds.inventory.FeatureCollectionConfig,java.util.Formatter)>(r9, $r11);

        r0.<thredds.catalog.InvDatasetFeatureCollection: thredds.inventory.DatasetCollectionManager dcm> = $r12;

     label2:
        $r13 = r0.<thredds.catalog.InvDatasetFeatureCollection: thredds.inventory.DatasetCollectionManager dcm>;

        $r14 = virtualinvoke $r13.<thredds.inventory.DatasetCollectionManager: thredds.inventory.CollectionSpecParser getCollectionSpecParser()>();

        if $r14 == null goto label3;

        $r15 = virtualinvoke $r14.<thredds.inventory.CollectionSpecParser: java.lang.String getTopDir()>();

        r0.<thredds.catalog.InvDatasetFeatureCollection: java.lang.String topDirectory> = $r15;

        $r16 = virtualinvoke $r14.<thredds.inventory.CollectionSpecParser: java.util.regex.Pattern getFilter()>();

        r0.<thredds.catalog.InvDatasetFeatureCollection: java.util.regex.Pattern filter> = $r16;

        goto label4;

     label3:
        r0.<thredds.catalog.InvDatasetFeatureCollection: java.lang.String topDirectory> = null;

        r0.<thredds.catalog.InvDatasetFeatureCollection: java.util.regex.Pattern filter> = null;

     label4:
        return;
    }

    private void finishConstruction()
    {
        thredds.catalog.InvDatasetFeatureCollection r0;
        thredds.inventory.FeatureCollectionConfig $r3;
        thredds.inventory.DatasetCollectionManager $r1, $r2;
        thredds.inventory.CollectionUpdater $r4;

        r0 := @this: thredds.catalog.InvDatasetFeatureCollection;

        $r1 = r0.<thredds.catalog.InvDatasetFeatureCollection: thredds.inventory.DatasetCollectionManager dcm>;

        virtualinvoke $r1.<thredds.inventory.DatasetCollectionManager: void addEventListener(thredds.inventory.DatasetCollectionManager$TriggerListener)>(r0);

        $r4 = <thredds.inventory.CollectionUpdater: thredds.inventory.CollectionUpdater INSTANCE>;

        $r3 = r0.<thredds.catalog.InvDatasetFeatureCollection: thredds.inventory.FeatureCollectionConfig config>;

        $r2 = r0.<thredds.catalog.InvDatasetFeatureCollection: thredds.inventory.DatasetCollectionManager dcm>;

        virtualinvoke $r4.<thredds.inventory.CollectionUpdater: void scheduleTasks(thredds.inventory.FeatureCollectionConfig,thredds.inventory.CollectionManager)>($r3, $r2);

        return;
    }

    public void handleCollectionEvent(thredds.inventory.DatasetCollectionManager$TriggerEvent)
    {
        thredds.catalog.InvDatasetFeatureCollection r3;
        thredds.inventory.DatasetCollectionManager$TriggerEvent r0;
        java.lang.String $r1, $r2;
        boolean $z0, $z1;

        r3 := @this: thredds.catalog.InvDatasetFeatureCollection;

        r0 := @parameter0: thredds.inventory.DatasetCollectionManager$TriggerEvent;

        $r1 = virtualinvoke r0.<thredds.inventory.DatasetCollectionManager$TriggerEvent: java.lang.String getMessage()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("rescan");

        if $z0 == 0 goto label1;

        virtualinvoke r3.<thredds.catalog.InvDatasetFeatureCollection: void update()>();

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<thredds.inventory.DatasetCollectionManager$TriggerEvent: java.lang.String getMessage()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("proto");

        if $z1 == 0 goto label2;

        virtualinvoke r3.<thredds.catalog.InvDatasetFeatureCollection: void updateProto()>();

     label2:
        return;
    }

    public boolean triggerRescan()
    {
        thredds.catalog.InvDatasetFeatureCollection r0;
        thredds.inventory.DatasetCollectionManager $r1;
        org.slf4j.Logger $r3;
        java.io.IOException $r2;

        r0 := @this: thredds.catalog.InvDatasetFeatureCollection;

     label1:
        $r1 = r0.<thredds.catalog.InvDatasetFeatureCollection: thredds.inventory.DatasetCollectionManager dcm>;

        virtualinvoke $r1.<thredds.inventory.DatasetCollectionManager: boolean rescan()>();

     label2:
        return 1;

     label3:
        $r2 := @caughtexception;

        $r3 = <thredds.catalog.InvDatasetFeatureCollection: org.slf4j.Logger logger>;

        interfaceinvoke $r3.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("DatasetCollectionManager rescan error", $r2);

        return 0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public abstract void update();

    public abstract void updateProto();

    protected abstract thredds.catalog.InvDatasetFeatureCollection$State checkState() throws java.io.IOException;

    public java.lang.String getPath()
    {
        thredds.catalog.InvDatasetFeatureCollection r0;
        java.lang.String $r1;

        r0 := @this: thredds.catalog.InvDatasetFeatureCollection;

        $r1 = r0.<thredds.catalog.InvDatasetFeatureCollection: java.lang.String path>;

        return $r1;
    }

    public java.lang.String getTopDirectoryLocation()
    {
        thredds.catalog.InvDatasetFeatureCollection r0;
        java.lang.String $r1;

        r0 := @this: thredds.catalog.InvDatasetFeatureCollection;

        $r1 = r0.<thredds.catalog.InvDatasetFeatureCollection: java.lang.String topDirectory>;

        return $r1;
    }

    public thredds.inventory.FeatureCollectionConfig getConfig()
    {
        thredds.catalog.InvDatasetFeatureCollection r0;
        thredds.inventory.FeatureCollectionConfig $r1;

        r0 := @this: thredds.catalog.InvDatasetFeatureCollection;

        $r1 = r0.<thredds.catalog.InvDatasetFeatureCollection: thredds.inventory.FeatureCollectionConfig config>;

        return $r1;
    }

    public thredds.inventory.DatasetCollectionManager getDatasetCollectionManager()
    {
        thredds.catalog.InvDatasetFeatureCollection r0;
        thredds.inventory.DatasetCollectionManager $r1;

        r0 := @this: thredds.catalog.InvDatasetFeatureCollection;

        $r1 = r0.<thredds.catalog.InvDatasetFeatureCollection: thredds.inventory.DatasetCollectionManager dcm>;

        return $r1;
    }

    public thredds.catalog.InvDatasetScan getRawFileScan()
    {
        thredds.catalog.InvDatasetFeatureCollection r0;
        thredds.catalog.InvDatasetFeatureCollection$State $r1;
        thredds.catalog.InvDatasetScan $r2;
        org.slf4j.Logger $r4;
        java.io.IOException $r3;

        r0 := @this: thredds.catalog.InvDatasetFeatureCollection;

     label1:
        virtualinvoke r0.<thredds.catalog.InvDatasetFeatureCollection: thredds.catalog.InvDatasetFeatureCollection$State checkState()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = <thredds.catalog.InvDatasetFeatureCollection: org.slf4j.Logger logger>;

        interfaceinvoke $r4.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Error in checkState", $r3);

     label4:
        $r1 = r0.<thredds.catalog.InvDatasetFeatureCollection: thredds.catalog.InvDatasetFeatureCollection$State state>;

        $r2 = $r1.<thredds.catalog.InvDatasetFeatureCollection$State: thredds.catalog.InvDatasetScan scan>;

        return $r2;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.util.List getDatasets()
    {
        thredds.catalog.InvDatasetFeatureCollection r0;
        thredds.catalog.InvDatasetFeatureCollection$State $r1;
        java.util.List $r2;
        org.slf4j.Logger $r4;
        java.lang.Exception $r3;

        r0 := @this: thredds.catalog.InvDatasetFeatureCollection;

     label1:
        virtualinvoke r0.<thredds.catalog.InvDatasetFeatureCollection: thredds.catalog.InvDatasetFeatureCollection$State checkState()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = <thredds.catalog.InvDatasetFeatureCollection: org.slf4j.Logger logger>;

        interfaceinvoke $r4.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Error in checkState", $r3);

     label4:
        $r1 = r0.<thredds.catalog.InvDatasetFeatureCollection: thredds.catalog.InvDatasetFeatureCollection$State state>;

        $r2 = $r1.<thredds.catalog.InvDatasetFeatureCollection$State: java.util.List datasets>;

        return $r2;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected thredds.catalog.InvService makeVirtualService(thredds.catalog.InvService)
    {
        thredds.catalog.InvService r0, $r3, r9;
        java.util.Iterator $r7;
        thredds.catalog.InvDatasetFeatureCollection r12;
        java.util.List $r6;
        thredds.catalog.ServiceType $r1, $r2, $r4, $r10, $r11;
        java.lang.Object $r8;
        java.lang.String $r5;
        boolean $z0;

        r12 := @this: thredds.catalog.InvDatasetFeatureCollection;

        r0 := @parameter0: thredds.catalog.InvService;

        $r1 = virtualinvoke r0.<thredds.catalog.InvService: thredds.catalog.ServiceType getServiceType()>();

        $r2 = <thredds.catalog.ServiceType: thredds.catalog.ServiceType COMPOUND>;

        if $r1 == $r2 goto label1;

        return r0;

     label1:
        $r3 = new thredds.catalog.InvService;

        $r4 = <thredds.catalog.ServiceType: thredds.catalog.ServiceType COMPOUND>;

        $r5 = virtualinvoke $r4.<thredds.catalog.ServiceType: java.lang.String toString()>();

        specialinvoke $r3.<thredds.catalog.InvService: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("VirtualServices", $r5, null, null, null);

        $r6 = virtualinvoke r0.<thredds.catalog.InvService: java.util.List getServices()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (thredds.catalog.InvService) $r8;

        $r10 = virtualinvoke r9.<thredds.catalog.InvService: thredds.catalog.ServiceType getServiceType()>();

        $r11 = <thredds.catalog.ServiceType: thredds.catalog.ServiceType HTTPServer>;

        if $r10 == $r11 goto label3;

        virtualinvoke $r3.<thredds.catalog.InvService: void addService(thredds.catalog.InvService)>(r9);

     label3:
        goto label2;

     label4:
        return $r3;
    }

    public abstract thredds.catalog.InvCatalogImpl makeCatalog(java.lang.String, java.lang.String, java.net.URI);

    protected thredds.catalog.InvCatalogImpl makeCatalogTop(java.net.URI, thredds.catalog.InvDatasetFeatureCollection$State) throws java.io.IOException, java.net.URISyntaxException
    {
        thredds.catalog.ThreddsMetadata$Variables $r15, $r25;
        thredds.catalog.InvDatasetFeatureCollection r0;
        java.net.URI r3, $r5;
        java.lang.String $r4, $r7, $r8, $r12, r26;
        thredds.catalog.InvDataset $r10, r21;
        boolean $z0;
        thredds.catalog.InvDatasetFeatureCollection$State r14;
        thredds.catalog.InvCatalog $r1;
        java.util.Iterator $r19;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage $r16, $r24;
        thredds.catalog.ThreddsMetadata $r13;
        ucar.nc2.units.DateRange $r17, $r23;
        java.util.List $r18;
        thredds.catalog.InvCatalogImpl r2, $r6;
        java.lang.Object $r20;
        thredds.catalog.InvDatasetImpl $r9, r11, $r22;

        r0 := @this: thredds.catalog.InvDatasetFeatureCollection;

        r3 := @parameter0: java.net.URI;

        r14 := @parameter1: thredds.catalog.InvDatasetFeatureCollection$State;

        $r1 = virtualinvoke r0.<thredds.catalog.InvDatasetFeatureCollection: thredds.catalog.InvCatalog getParentCatalog()>();

        r2 = (thredds.catalog.InvCatalogImpl) $r1;

        $r4 = virtualinvoke r0.<thredds.catalog.InvDatasetFeatureCollection: java.lang.String getXlinkHref()>();

        $r5 = virtualinvoke r3.<java.net.URI: java.net.URI resolve(java.lang.String)>($r4);

        $r6 = new thredds.catalog.InvCatalogImpl;

        $r7 = virtualinvoke r0.<thredds.catalog.InvDatasetFeatureCollection: java.lang.String getName()>();

        $r8 = virtualinvoke r2.<thredds.catalog.InvCatalogImpl: java.lang.String getVersion()>();

        specialinvoke $r6.<thredds.catalog.InvCatalogImpl: void <init>(java.lang.String,java.lang.String,java.net.URI)>($r7, $r8, $r5);

        $r9 = new thredds.catalog.InvDatasetImpl;

        specialinvoke $r9.<thredds.catalog.InvDatasetImpl: void <init>(thredds.catalog.InvDatasetImpl)>(r0);

        virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: void setParent(thredds.catalog.InvDatasetImpl)>(null);

        $r10 = virtualinvoke r0.<thredds.catalog.InvDatasetFeatureCollection: thredds.catalog.InvDataset getParent()>();

        r11 = (thredds.catalog.InvDatasetImpl) $r10;

        if r11 == null goto label1;

        virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: void transferMetadata(thredds.catalog.InvDatasetImpl,boolean)>(r11, 1);

     label1:
        $r12 = virtualinvoke r0.<thredds.catalog.InvDatasetFeatureCollection: java.lang.String getID()>();

        r26 = $r12;

        if $r12 != null goto label2;

        r26 = virtualinvoke r0.<thredds.catalog.InvDatasetFeatureCollection: java.lang.String getPath()>();

     label2:
        virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: void setID(java.lang.String)>(r26);

        $r13 = virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: thredds.catalog.ThreddsMetadata getLocalMetadataInheritable()>();

        $r15 = r14.<thredds.catalog.InvDatasetFeatureCollection$State: thredds.catalog.ThreddsMetadata$Variables vars>;

        if $r15 == null goto label3;

        $r25 = r14.<thredds.catalog.InvDatasetFeatureCollection$State: thredds.catalog.ThreddsMetadata$Variables vars>;

        virtualinvoke $r13.<thredds.catalog.ThreddsMetadata: void addVariables(thredds.catalog.ThreddsMetadata$Variables)>($r25);

     label3:
        $r16 = r14.<thredds.catalog.InvDatasetFeatureCollection$State: thredds.catalog.ThreddsMetadata$GeospatialCoverage gc>;

        if $r16 == null goto label4;

        $r24 = r14.<thredds.catalog.InvDatasetFeatureCollection$State: thredds.catalog.ThreddsMetadata$GeospatialCoverage gc>;

        virtualinvoke $r13.<thredds.catalog.ThreddsMetadata: void setGeospatialCoverage(thredds.catalog.ThreddsMetadata$GeospatialCoverage)>($r24);

     label4:
        $r17 = r14.<thredds.catalog.InvDatasetFeatureCollection$State: ucar.nc2.units.DateRange dateRange>;

        if $r17 == null goto label5;

        $r23 = r14.<thredds.catalog.InvDatasetFeatureCollection$State: ucar.nc2.units.DateRange dateRange>;

        virtualinvoke $r13.<thredds.catalog.ThreddsMetadata: void setTimeCoverage(ucar.nc2.units.DateRange)>($r23);

     label5:
        virtualinvoke $r6.<thredds.catalog.InvCatalogImpl: void addDataset(thredds.catalog.InvDatasetImpl)>($r9);

        $r18 = virtualinvoke r0.<thredds.catalog.InvDatasetFeatureCollection: java.util.List getDatasets()>();

        $r19 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $z0 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r21 = (thredds.catalog.InvDataset) $r20;

        $r22 = (thredds.catalog.InvDatasetImpl) r21;

        virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: void addDataset(thredds.catalog.InvDatasetImpl)>($r22);

        goto label6;

     label7:
        virtualinvoke $r6.<thredds.catalog.InvCatalogImpl: boolean finish()>();

        return $r6;
    }

    public ucar.nc2.dt.GridDataset getGridDataset(java.lang.String) throws java.io.IOException
    {
        thredds.catalog.InvDatasetFeatureCollection r0;
        java.lang.String r1;

        r0 := @this: thredds.catalog.InvDatasetFeatureCollection;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public ucar.nc2.ft.FeatureDatasetPoint getFeatureDatasetPoint()
    {
        thredds.catalog.InvDatasetFeatureCollection r0;

        r0 := @this: thredds.catalog.InvDatasetFeatureCollection;

        return null;
    }

    public ucar.nc2.dataset.NetcdfDataset getNetcdfDataset(java.lang.String) throws java.io.IOException
    {
        thredds.catalog.InvDatasetFeatureCollection r3;
        int $i0, $i1, $i3, $i5, $i7;
        java.lang.String r0, r1, r2, $r6, $r8, $r9, $r12, $r14, $r15, $r16;
        boolean $z0, $z1;
        ucar.nc2.dt.GridDataset $r4;
        java.lang.StringBuilder $r10, $r11, $r18;
        ucar.nc2.NetcdfFile $r5;
        ucar.nc2.dataset.NetcdfDataset $r13, $r17;

        r3 := @this: thredds.catalog.InvDatasetFeatureCollection;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(47);

        $i3 = (int) -1;

        if $i0 <= $i3 goto label01;

        $r14 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        goto label02;

     label01:
        $r14 = r0;

     label02:
        r1 = $r14;

        $i5 = (int) -1;

        if $i0 <= $i5 goto label03;

        $i1 = $i0 + 1;

        $r15 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        goto label04;

     label03:
        $r15 = "";

     label04:
        r2 = $r15;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("files");

        if $z0 == 0 goto label08;

        $r6 = r3.<thredds.catalog.InvDatasetFeatureCollection: java.lang.String topDirectory>;

        if $r6 != null goto label05;

        return null;

     label05:
        $r18 = new java.lang.StringBuilder;

        $r8 = r3.<thredds.catalog.InvDatasetFeatureCollection: java.lang.String topDirectory>;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);

        $r9 = r3.<thredds.catalog.InvDatasetFeatureCollection: java.lang.String topDirectory>;

        $z1 = virtualinvoke $r9.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z1 == 0 goto label06;

        $r16 = "";

        goto label07;

     label06:
        $r16 = "/";

     label07:
        $r10 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $i7 = (int) -1;

        $r13 = staticinvoke <ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.NetcdfDataset acquireDataset(ucar.nc2.util.cache.FileFactory,java.lang.String,java.util.Set,int,ucar.nc2.util.CancelTask,java.lang.Object)>(null, $r12, null, $i7, null, null);

        return $r13;

     label08:
        $r4 = virtualinvoke r3.<thredds.catalog.InvDatasetFeatureCollection: ucar.nc2.dt.GridDataset getGridDataset(java.lang.String)>(r0);

        if $r4 != null goto label09;

        $r17 = null;

        goto label10;

     label09:
        $r5 = interfaceinvoke $r4.<ucar.nc2.dt.GridDataset: ucar.nc2.NetcdfFile getNetcdfFile()>();

        $r17 = (ucar.nc2.dataset.NetcdfDataset) $r5;

     label10:
        return $r17;
    }

    public java.io.File getFile(java.lang.String)
    {
        thredds.catalog.InvDatasetFeatureCollection r0;
        int $i0, $i1, $i2, $i3, $i5;
        java.lang.String $r1, r2, $r4, $r5, $r7, $r8, $r9;
        boolean $z0;
        java.io.File $r11;
        java.lang.StringBuilder $r10;

        r0 := @this: thredds.catalog.InvDatasetFeatureCollection;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<thredds.catalog.InvDatasetFeatureCollection: java.lang.String topDirectory>;

        if null != $r1 goto label1;

        return null;

     label1:
        $i0 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>("files");

        $r10 = new java.lang.StringBuilder;

        $r4 = r0.<thredds.catalog.InvDatasetFeatureCollection: java.lang.String topDirectory>;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r5 = r0.<thredds.catalog.InvDatasetFeatureCollection: java.lang.String topDirectory>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z0 != 0 goto label2;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

     label2:
        $i5 = (int) -1;

        if $i0 <= $i5 goto label3;

        $r8 = "files";

        $i1 = virtualinvoke $r8.<java.lang.String: int length()>();

        $i2 = $i0 + $i1;

        $i3 = $i2 + 1;

        $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3);

        goto label4;

     label3:
        $r9 = r2;

     label4:
        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = new java.io.File;

        $r7 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>($r7);

        return $r11;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        <thredds.catalog.InvDatasetFeatureCollection: java.lang.String Virtual_Services> = "VirtualServices";

        <thredds.catalog.InvDatasetFeatureCollection: java.lang.String FILES> = "files";

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lthredds/catalog/InvDatasetFeatureCollection;");

        <thredds.catalog.InvDatasetFeatureCollection: org.slf4j.Logger logger> = $r0;

        <thredds.catalog.InvDatasetFeatureCollection: java.lang.String context> = "/thredds";

        <thredds.catalog.InvDatasetFeatureCollection: java.lang.String catalogServletName> = "/catalog";

        <thredds.catalog.InvDatasetFeatureCollection: java.lang.String cdmrFeatureServiceUrlPath> = "/cdmrFeature";

        return;
    }
}
