class com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener$1 extends java.lang.Object implements com.google.inject.spi.InjectionListener
{
    final com.google.inject.Provider val$provider;
    final com.google.inject.TypeLiteral val$type;
    final com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener this$0;

    void <init>(com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener, com.google.inject.Provider, com.google.inject.TypeLiteral)
    {
        com.google.inject.Provider r2;
        com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener r1;
        com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener$1 r0;
        com.google.inject.TypeLiteral r3;

        r0 := @this: com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener$1;

        r1 := @parameter0: com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener;

        r2 := @parameter1: com.google.inject.Provider;

        r3 := @parameter2: com.google.inject.TypeLiteral;

        r0.<com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener$1: com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener this$0> = r1;

        r0.<com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener$1: com.google.inject.Provider val$provider> = r2;

        r0.<com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener$1: com.google.inject.TypeLiteral val$type> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void afterInjection(java.lang.Object)
    {
        com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener$1 r0;
        java.lang.reflect.Method r33;
        boolean $z0, $z1;
        com.mycila.inject.injector.AnnotatedMemberHandler r3;
        java.lang.'annotation'.Annotation $r25, $r31;
        com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener $r6, $r14, $r23, $r29;
        com.google.inject.TypeLiteral $r4, $r11, $r22, $r28;
        com.mycila.inject.internal.guava.base.Predicate $r8, $r16;
        java.lang.Iterable $r9, $r13, $r17;
        java.util.Iterator $r10, $r18;
        com.mycila.inject.injector.AnnotatedMember $r21, $r27;
        java.lang.reflect.Field r32;
        com.google.inject.Provider $r1;
        java.lang.Object $r2, $r19, r20, $r26;
        java.lang.Class $r5, $r7, $r12, $r15, $r24, $r30;

        r0 := @this: com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener$1;

        r20 := @parameter0: java.lang.Object;

        $r1 = r0.<com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener$1: com.google.inject.Provider val$provider>;

        $r2 = interfaceinvoke $r1.<com.google.inject.Provider: java.lang.Object get()>();

        r3 = (com.mycila.inject.injector.AnnotatedMemberHandler) $r2;

        $r4 = r0.<com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener$1: com.google.inject.TypeLiteral val$type>;

        $r5 = virtualinvoke $r4.<com.google.inject.TypeLiteral: java.lang.Class getRawType()>();

        $r6 = r0.<com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener$1: com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener this$0>;

        $r7 = staticinvoke <com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener: java.lang.Class access$000(com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener)>($r6);

        $r8 = staticinvoke <com.mycila.inject.internal.Reflect: com.mycila.inject.internal.guava.base.Predicate annotatedBy(java.lang.Class)>($r7);

        $r9 = staticinvoke <com.mycila.inject.internal.Reflect: java.lang.Iterable findFields(java.lang.Class,com.mycila.inject.internal.guava.base.Predicate)>($r5, $r8);

        $r10 = interfaceinvoke $r9.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r26 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r32 = (java.lang.reflect.Field) $r26;

        $r28 = r0.<com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener$1: com.google.inject.TypeLiteral val$type>;

        $r27 = new com.mycila.inject.injector.AnnotatedMember;

        specialinvoke $r27.<com.mycila.inject.injector.AnnotatedMember: void <init>(java.lang.reflect.Member)>(r32);

        $r29 = r0.<com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener$1: com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener this$0>;

        $r30 = staticinvoke <com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener: java.lang.Class access$000(com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener)>($r29);

        $r31 = virtualinvoke r32.<java.lang.reflect.Field: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>($r30);

        interfaceinvoke r3.<com.mycila.inject.injector.AnnotatedMemberHandler: void handle(com.google.inject.TypeLiteral,java.lang.Object,java.lang.reflect.Member,java.lang.'annotation'.Annotation)>($r28, r20, $r27, $r31);

        goto label1;

     label2:
        $r11 = r0.<com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener$1: com.google.inject.TypeLiteral val$type>;

        $r12 = virtualinvoke $r11.<com.google.inject.TypeLiteral: java.lang.Class getRawType()>();

        $r13 = staticinvoke <com.mycila.inject.internal.Reflect: java.lang.Iterable findMethods(java.lang.Class)>($r12);

        $r14 = r0.<com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener$1: com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener this$0>;

        $r15 = staticinvoke <com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener: java.lang.Class access$000(com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener)>($r14);

        $r16 = staticinvoke <com.mycila.inject.internal.Reflect: com.mycila.inject.internal.guava.base.Predicate annotatedBy(java.lang.Class)>($r15);

        $r17 = staticinvoke <com.mycila.inject.internal.guava.collect.Iterables: java.lang.Iterable filter(java.lang.Iterable,com.mycila.inject.internal.guava.base.Predicate)>($r13, $r16);

        $r18 = interfaceinvoke $r17.<java.lang.Iterable: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r19 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r33 = (java.lang.reflect.Method) $r19;

        $r22 = r0.<com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener$1: com.google.inject.TypeLiteral val$type>;

        $r21 = new com.mycila.inject.injector.AnnotatedMember;

        specialinvoke $r21.<com.mycila.inject.injector.AnnotatedMember: void <init>(java.lang.reflect.Member)>(r33);

        $r23 = r0.<com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener$1: com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener this$0>;

        $r24 = staticinvoke <com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener: java.lang.Class access$000(com.mycila.inject.injector.AnnotatedMemberHandlerTypeListener)>($r23);

        $r25 = virtualinvoke r33.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>($r24);

        interfaceinvoke r3.<com.mycila.inject.injector.AnnotatedMemberHandler: void handle(com.google.inject.TypeLiteral,java.lang.Object,java.lang.reflect.Member,java.lang.'annotation'.Annotation)>($r22, r20, $r21, $r25);

        goto label3;

     label4:
        return;
    }
}
