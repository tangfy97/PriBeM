public class org.apache.xmlbeans.impl.common.SoftCache extends java.lang.Object
{
    private java.util.HashMap map;

    public void <init>()
    {
        java.util.HashMap $r1;
        org.apache.xmlbeans.impl.common.SoftCache r0;

        r0 := @this: org.apache.xmlbeans.impl.common.SoftCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.common.SoftCache: java.util.HashMap map> = $r1;

        return;
    }

    public java.lang.Object get(java.lang.Object)
    {
        org.apache.xmlbeans.impl.common.SoftCache r0;
        java.lang.Object r1, $r3, $r5;
        java.util.HashMap $r2;
        java.lang.ref.SoftReference r4;

        r0 := @this: org.apache.xmlbeans.impl.common.SoftCache;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.xmlbeans.impl.common.SoftCache: java.util.HashMap map>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.lang.ref.SoftReference) $r3;

        if r4 != null goto label1;

        return null;

     label1:
        $r5 = virtualinvoke r4.<java.lang.ref.SoftReference: java.lang.Object get()>();

        return $r5;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        java.util.HashMap $r4;
        org.apache.xmlbeans.impl.common.SoftCache r0;
        java.lang.Object r1, r3, $r5, $r7;
        java.lang.ref.SoftReference $r2, r6;

        r0 := @this: org.apache.xmlbeans.impl.common.SoftCache;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        $r4 = r0.<org.apache.xmlbeans.impl.common.SoftCache: java.util.HashMap map>;

        $r2 = new java.lang.ref.SoftReference;

        specialinvoke $r2.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>(r3);

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r2);

        r6 = (java.lang.ref.SoftReference) $r5;

        if r6 != null goto label1;

        return null;

     label1:
        $r7 = virtualinvoke r6.<java.lang.ref.SoftReference: java.lang.Object get()>();

        virtualinvoke r6.<java.lang.ref.SoftReference: void clear()>();

        return $r7;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        org.apache.xmlbeans.impl.common.SoftCache r0;
        java.lang.Object r1, $r3, $r5;
        java.util.HashMap $r2;
        java.lang.ref.SoftReference r4;

        r0 := @this: org.apache.xmlbeans.impl.common.SoftCache;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.xmlbeans.impl.common.SoftCache: java.util.HashMap map>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        r4 = (java.lang.ref.SoftReference) $r3;

        if r4 != null goto label1;

        return null;

     label1:
        $r5 = virtualinvoke r4.<java.lang.ref.SoftReference: java.lang.Object get()>();

        virtualinvoke r4.<java.lang.ref.SoftReference: void clear()>();

        return $r5;
    }
}
