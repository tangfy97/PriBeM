public class org.eclipse.jetty.server.handler.ConnectHandler extends org.eclipse.jetty.server.handler.HandlerWrapper
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    private final org.eclipse.jetty.io.nio.SelectorManager _selectorManager;
    private volatile int _connectTimeout;
    private volatile int _writeTimeout;
    private volatile org.eclipse.jetty.util.thread.ThreadPool _threadPool;
    private volatile boolean _privateThreadPool;
    private org.eclipse.jetty.util.HostMap _white;
    private org.eclipse.jetty.util.HostMap _black;

    public void <init>()
    {
        org.eclipse.jetty.server.handler.ConnectHandler r0;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler;

        specialinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler: void <init>(org.eclipse.jetty.server.Handler)>(null);

        return;
    }

    public void <init>(java.lang.String[], java.lang.String[])
    {
        java.lang.String[] r1, r2;
        org.eclipse.jetty.server.handler.ConnectHandler r0;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: java.lang.String[];

        specialinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler: void <init>(org.eclipse.jetty.server.Handler,java.lang.String[],java.lang.String[])>(null, r1, r2);

        return;
    }

    public void <init>(org.eclipse.jetty.server.Handler)
    {
        org.eclipse.jetty.server.Handler r4;
        org.eclipse.jetty.server.handler.ConnectHandler$Manager $r1;
        org.eclipse.jetty.server.handler.ConnectHandler r0;
        org.eclipse.jetty.util.HostMap $r2, $r3;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler;

        r4 := @parameter0: org.eclipse.jetty.server.Handler;

        specialinvoke r0.<org.eclipse.jetty.server.handler.HandlerWrapper: void <init>()>();

        $r1 = new org.eclipse.jetty.server.handler.ConnectHandler$Manager;

        specialinvoke $r1.<org.eclipse.jetty.server.handler.ConnectHandler$Manager: void <init>(org.eclipse.jetty.server.handler.ConnectHandler,org.eclipse.jetty.server.handler.ConnectHandler$1)>(r0, null);

        r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.io.nio.SelectorManager _selectorManager> = $r1;

        r0.<org.eclipse.jetty.server.handler.ConnectHandler: int _connectTimeout> = 5000;

        r0.<org.eclipse.jetty.server.handler.ConnectHandler: int _writeTimeout> = 30000;

        $r2 = new org.eclipse.jetty.util.HostMap;

        specialinvoke $r2.<org.eclipse.jetty.util.HostMap: void <init>()>();

        r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.HostMap _white> = $r2;

        $r3 = new org.eclipse.jetty.util.HostMap;

        specialinvoke $r3.<org.eclipse.jetty.util.HostMap: void <init>()>();

        r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.HostMap _black> = $r3;

        virtualinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler: void setHandler(org.eclipse.jetty.server.Handler)>(r4);

        return;
    }

    public void <init>(org.eclipse.jetty.server.Handler, java.lang.String[], java.lang.String[])
    {
        org.eclipse.jetty.server.Handler r4;
        org.eclipse.jetty.server.handler.ConnectHandler r0;
        org.eclipse.jetty.util.HostMap $r2, $r3, $r6, $r8;
        java.lang.String[] r5, r7;
        org.eclipse.jetty.server.handler.ConnectHandler$Manager $r1;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler;

        r4 := @parameter0: org.eclipse.jetty.server.Handler;

        r5 := @parameter1: java.lang.String[];

        r7 := @parameter2: java.lang.String[];

        specialinvoke r0.<org.eclipse.jetty.server.handler.HandlerWrapper: void <init>()>();

        $r1 = new org.eclipse.jetty.server.handler.ConnectHandler$Manager;

        specialinvoke $r1.<org.eclipse.jetty.server.handler.ConnectHandler$Manager: void <init>(org.eclipse.jetty.server.handler.ConnectHandler,org.eclipse.jetty.server.handler.ConnectHandler$1)>(r0, null);

        r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.io.nio.SelectorManager _selectorManager> = $r1;

        r0.<org.eclipse.jetty.server.handler.ConnectHandler: int _connectTimeout> = 5000;

        r0.<org.eclipse.jetty.server.handler.ConnectHandler: int _writeTimeout> = 30000;

        $r2 = new org.eclipse.jetty.util.HostMap;

        specialinvoke $r2.<org.eclipse.jetty.util.HostMap: void <init>()>();

        r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.HostMap _white> = $r2;

        $r3 = new org.eclipse.jetty.util.HostMap;

        specialinvoke $r3.<org.eclipse.jetty.util.HostMap: void <init>()>();

        r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.HostMap _black> = $r3;

        virtualinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler: void setHandler(org.eclipse.jetty.server.Handler)>(r4);

        $r6 = r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.HostMap _white>;

        virtualinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler: void set(java.lang.String[],org.eclipse.jetty.util.HostMap)>(r5, $r6);

        $r8 = r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.HostMap _black>;

        virtualinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler: void set(java.lang.String[],org.eclipse.jetty.util.HostMap)>(r7, $r8);

        return;
    }

    public int getConnectTimeout()
    {
        int $i0;
        org.eclipse.jetty.server.handler.ConnectHandler r0;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler;

        $i0 = r0.<org.eclipse.jetty.server.handler.ConnectHandler: int _connectTimeout>;

        return $i0;
    }

    public void setConnectTimeout(int)
    {
        int i0;
        org.eclipse.jetty.server.handler.ConnectHandler r0;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler;

        i0 := @parameter0: int;

        r0.<org.eclipse.jetty.server.handler.ConnectHandler: int _connectTimeout> = i0;

        return;
    }

    public int getWriteTimeout()
    {
        int $i0;
        org.eclipse.jetty.server.handler.ConnectHandler r0;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler;

        $i0 = r0.<org.eclipse.jetty.server.handler.ConnectHandler: int _writeTimeout>;

        return $i0;
    }

    public void setWriteTimeout(int)
    {
        int i0;
        org.eclipse.jetty.server.handler.ConnectHandler r0;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler;

        i0 := @parameter0: int;

        r0.<org.eclipse.jetty.server.handler.ConnectHandler: int _writeTimeout> = i0;

        return;
    }

    public void setServer(org.eclipse.jetty.server.Server)
    {
        org.eclipse.jetty.server.handler.ConnectHandler r0;
        org.eclipse.jetty.util.thread.ThreadPool $r4;
        org.eclipse.jetty.util.component.Container $r2, $r5;
        org.eclipse.jetty.io.nio.SelectorManager $r3;
        java.lang.Boolean $r6;
        org.eclipse.jetty.server.Server r1;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler;

        r1 := @parameter0: org.eclipse.jetty.server.Server;

        specialinvoke r0.<org.eclipse.jetty.server.handler.HandlerWrapper: void setServer(org.eclipse.jetty.server.Server)>(r1);

        $r2 = virtualinvoke r1.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.component.Container getContainer()>();

        $r3 = r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.io.nio.SelectorManager _selectorManager>;

        virtualinvoke $r2.<org.eclipse.jetty.util.component.Container: void update(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.String)>(r0, null, $r3, "selectManager");

        $z0 = r0.<org.eclipse.jetty.server.handler.ConnectHandler: boolean _privateThreadPool>;

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r1.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.component.Container getContainer()>();

        $z1 = r0.<org.eclipse.jetty.server.handler.ConnectHandler: boolean _privateThreadPool>;

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        virtualinvoke $r5.<org.eclipse.jetty.util.component.Container: void update(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.String,boolean)>(r0, null, $r6, "threadpool", 1);

        goto label2;

     label1:
        $r4 = virtualinvoke r1.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.thread.ThreadPool getThreadPool()>();

        r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.thread.ThreadPool _threadPool> = $r4;

     label2:
        return;
    }

    public org.eclipse.jetty.util.thread.ThreadPool getThreadPool()
    {
        org.eclipse.jetty.server.handler.ConnectHandler r0;
        org.eclipse.jetty.util.thread.ThreadPool $r1;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.thread.ThreadPool _threadPool>;

        return $r1;
    }

    public void setThreadPool(org.eclipse.jetty.util.thread.ThreadPool)
    {
        org.eclipse.jetty.server.handler.ConnectHandler r0;
        org.eclipse.jetty.util.thread.ThreadPool r2, $r5;
        org.eclipse.jetty.util.component.Container $r4;
        org.eclipse.jetty.server.Server $r1, $r3;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler;

        r2 := @parameter0: org.eclipse.jetty.util.thread.ThreadPool;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.server.Server getServer()>();

        if $r1 == null goto label3;

        $r3 = virtualinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.server.Server getServer()>();

        $r4 = virtualinvoke $r3.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.component.Container getContainer()>();

        $z0 = r0.<org.eclipse.jetty.server.handler.ConnectHandler: boolean _privateThreadPool>;

        if $z0 == 0 goto label1;

        $r5 = r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.thread.ThreadPool _threadPool>;

        goto label2;

     label1:
        $r5 = null;

     label2:
        virtualinvoke $r4.<org.eclipse.jetty.util.component.Container: void update(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.String,boolean)>(r0, $r5, r2, "threadpool", 1);

     label3:
        if r2 == null goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        r0.<org.eclipse.jetty.server.handler.ConnectHandler: boolean _privateThreadPool> = $z1;

        r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.thread.ThreadPool _threadPool> = r2;

        return;
    }

    protected void doStart() throws java.lang.Exception
    {
        org.eclipse.jetty.util.component.LifeCycle $r4, $r6;
        org.eclipse.jetty.server.handler.ConnectHandler r0;
        org.eclipse.jetty.util.thread.ThreadPool $r1, $r2, $r3, $r5, $r8;
        org.eclipse.jetty.io.nio.SelectorManager $r9;
        org.eclipse.jetty.server.Server $r7;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler;

        specialinvoke r0.<org.eclipse.jetty.server.handler.HandlerWrapper: void doStart()>();

        $r1 = r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.thread.ThreadPool _threadPool>;

        if $r1 != null goto label1;

        $r7 = virtualinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.server.Server getServer()>();

        $r8 = virtualinvoke $r7.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.thread.ThreadPool getThreadPool()>();

        r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.thread.ThreadPool _threadPool> = $r8;

        r0.<org.eclipse.jetty.server.handler.ConnectHandler: boolean _privateThreadPool> = 0;

     label1:
        $r2 = r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.thread.ThreadPool _threadPool>;

        $z0 = $r2 instanceof org.eclipse.jetty.util.component.LifeCycle;

        if $z0 == 0 goto label2;

        $r3 = r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.thread.ThreadPool _threadPool>;

        $r4 = (org.eclipse.jetty.util.component.LifeCycle) $r3;

        $z1 = interfaceinvoke $r4.<org.eclipse.jetty.util.component.LifeCycle: boolean isRunning()>();

        if $z1 != 0 goto label2;

        $r5 = r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.thread.ThreadPool _threadPool>;

        $r6 = (org.eclipse.jetty.util.component.LifeCycle) $r5;

        interfaceinvoke $r6.<org.eclipse.jetty.util.component.LifeCycle: void start()>();

     label2:
        $r9 = r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.io.nio.SelectorManager _selectorManager>;

        virtualinvoke $r9.<org.eclipse.jetty.io.nio.SelectorManager: void start()>();

        return;
    }

    protected void doStop() throws java.lang.Exception
    {
        org.eclipse.jetty.io.nio.SelectorManager $r1;
        org.eclipse.jetty.util.component.LifeCycle $r4;
        org.eclipse.jetty.server.handler.ConnectHandler r0;
        org.eclipse.jetty.util.thread.ThreadPool r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.io.nio.SelectorManager _selectorManager>;

        virtualinvoke $r1.<org.eclipse.jetty.io.nio.SelectorManager: void stop()>();

        r2 = r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.thread.ThreadPool _threadPool>;

        $z0 = r0.<org.eclipse.jetty.server.handler.ConnectHandler: boolean _privateThreadPool>;

        if $z0 == 0 goto label1;

        $r3 = r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.thread.ThreadPool _threadPool>;

        if $r3 == null goto label1;

        $z1 = r2 instanceof org.eclipse.jetty.util.component.LifeCycle;

        if $z1 == 0 goto label1;

        $r4 = (org.eclipse.jetty.util.component.LifeCycle) r2;

        interfaceinvoke $r4.<org.eclipse.jetty.util.component.LifeCycle: void stop()>();

     label1:
        specialinvoke r0.<org.eclipse.jetty.server.handler.HandlerWrapper: void doStop()>();

        return;
    }

    public void handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException, java.io.IOException
    {
        org.eclipse.jetty.server.Request r5;
        java.lang.Object[] $r7, $r20;
        org.eclipse.jetty.server.handler.ConnectHandler r3;
        javax.servlet.http.HttpServletRequest r0;
        org.eclipse.jetty.http.HttpURI $r15;
        java.lang.String $r1, $r2, r4, $r9, $r10, $r19;
        boolean $z0;
        javax.servlet.http.HttpServletResponse r6;
        java.lang.Exception $r11;
        java.lang.StringBuilder $r12, $r14, $r16, $r17, $r18;
        org.eclipse.jetty.util.log.Logger $r8, $r13, $r21;

        r3 := @this: org.eclipse.jetty.server.handler.ConnectHandler;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: org.eclipse.jetty.server.Request;

        r0 := @parameter2: javax.servlet.http.HttpServletRequest;

        r6 := @parameter3: javax.servlet.http.HttpServletResponse;

        $r1 = "CONNECT";

        $r2 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label4;

        $r8 = <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r7 = newarray (java.lang.Object)[1];

        $r9 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>();

        $r7[0] = $r9;

        interfaceinvoke $r8.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("CONNECT request for {}", $r7);

     label1:
        $r10 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>();

        virtualinvoke r3.<org.eclipse.jetty.server.handler.ConnectHandler: void handleConnect(org.eclipse.jetty.server.Request,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>(r5, r0, r6, $r10);

     label2:
        goto label5;

     label3:
        $r11 := @caughtexception;

        $r13 = <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ConnectHandler ");

        $r15 = virtualinvoke r5.<org.eclipse.jetty.server.Request: org.eclipse.jetty.http.HttpURI getUri()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = newarray (java.lang.Object)[0];

        interfaceinvoke $r13.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r19, $r20);

        $r21 = <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r21.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>($r11);

        goto label5;

     label4:
        specialinvoke r3.<org.eclipse.jetty.server.handler.HandlerWrapper: void handle(java.lang.String,org.eclipse.jetty.server.Request,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r4, r5, r0, r6);

     label5:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void handleConnect(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String) throws javax.servlet.ServletException, java.io.IOException
    {
        org.eclipse.jetty.server.Request r12;
        org.eclipse.jetty.http.Generator $r50;
        java.nio.channels.SocketChannel $r4;
        org.eclipse.jetty.io.Buffer $r8, $r11;
        boolean $z0, $z1;
        java.util.concurrent.ConcurrentHashMap $r47;
        org.eclipse.jetty.http.HttpParser $r7, $r10;
        java.lang.StringBuilder $r14, $r16, $r17, $r22, $r24, $r26, $r30, $r32, $r34, $r38, $r40, $r42;
        java.lang.Object[] $r19, $r28, $r36, $r44;
        org.eclipse.jetty.server.handler.ConnectHandler r0;
        org.eclipse.jetty.server.AbstractHttpConnection $r5, $r49;
        org.eclipse.jetty.http.Parser $r6, $r9;
        org.eclipse.jetty.io.nio.IndirectNIOBuffer $r13, r46;
        javax.servlet.http.HttpServletRequest r1;
        java.net.SocketException $r37;
        javax.servlet.ServletOutputStream $r51;
        java.net.SocketTimeoutException $r29;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6;
        java.lang.String r3, $r18, $r20, $r25, $r27, $r33, $r35, $r41, $r43, r45;
        javax.servlet.http.HttpServletResponse r2;
        java.io.IOException $r21;
        org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection $r48;
        org.eclipse.jetty.util.log.Logger $r15, $r23, $r31, $r39;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler;

        r12 := @parameter0: org.eclipse.jetty.server.Request;

        r1 := @parameter1: javax.servlet.http.HttpServletRequest;

        r2 := @parameter2: javax.servlet.http.HttpServletResponse;

        r3 := @parameter3: java.lang.String;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler: boolean handleAuthentication(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>(r1, r2, r3);

        if $z0 != 0 goto label01;

        return;

     label01:
        r45 = r3;

        i4 = 80;

        $i0 = virtualinvoke r3.<java.lang.String: int indexOf(int)>(58);

        if $i0 <= 0 goto label02;

        r45 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i3 = $i0 + 1;

        $r20 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>($i3);

        i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r20);

     label02:
        $z1 = virtualinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler: boolean validateDestination(java.lang.String)>(r45);

        if $z1 != 0 goto label03;

        $r15 = <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ProxyHandler: Forbidden destination ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r45);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = newarray (java.lang.Object)[0];

        interfaceinvoke $r15.<org.eclipse.jetty.util.log.Logger: void info(java.lang.String,java.lang.Object[])>($r18, $r19);

        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(403);

        virtualinvoke r12.<org.eclipse.jetty.server.Request: void setHandled(boolean)>(1);

        return;

     label03:
        $r4 = specialinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler: java.nio.channels.SocketChannel connectToServer(javax.servlet.http.HttpServletRequest,java.lang.String,int)>(r1, r45, i4);

     label04:
        goto label08;

     label05:
        $r37 := @caughtexception;

        $r39 = <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ConnectHandler: SocketException ");

        $r41 = virtualinvoke $r37.<java.net.SocketException: java.lang.String getMessage()>();

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        $r44 = newarray (java.lang.Object)[0];

        interfaceinvoke $r39.<org.eclipse.jetty.util.log.Logger: void info(java.lang.String,java.lang.Object[])>($r43, $r44);

        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(500);

        virtualinvoke r12.<org.eclipse.jetty.server.Request: void setHandled(boolean)>(1);

        return;

     label06:
        $r29 := @caughtexception;

        $r31 = <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ConnectHandler: SocketTimeoutException");

        $r33 = virtualinvoke $r29.<java.net.SocketTimeoutException: java.lang.String getMessage()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        $r36 = newarray (java.lang.Object)[0];

        interfaceinvoke $r31.<org.eclipse.jetty.util.log.Logger: void info(java.lang.String,java.lang.Object[])>($r35, $r36);

        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(504);

        virtualinvoke r12.<org.eclipse.jetty.server.Request: void setHandled(boolean)>(1);

        return;

     label07:
        $r21 := @caughtexception;

        $r23 = <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ConnectHandler: IOException");

        $r25 = virtualinvoke $r21.<java.io.IOException: java.lang.String getMessage()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = newarray (java.lang.Object)[0];

        interfaceinvoke $r23.<org.eclipse.jetty.util.log.Logger: void info(java.lang.String,java.lang.Object[])>($r27, $r28);

        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(500);

        virtualinvoke r12.<org.eclipse.jetty.server.Request: void setHandled(boolean)>(1);

        return;

     label08:
        $r5 = staticinvoke <org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.server.AbstractHttpConnection getCurrentConnection()>();

        $r6 = virtualinvoke $r5.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.http.Parser getParser()>();

        $r7 = (org.eclipse.jetty.http.HttpParser) $r6;

        $r8 = virtualinvoke $r7.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.io.Buffer getHeaderBuffer()>();

        $r9 = virtualinvoke $r5.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.http.Parser getParser()>();

        $r10 = (org.eclipse.jetty.http.HttpParser) $r9;

        $r11 = virtualinvoke $r10.<org.eclipse.jetty.http.HttpParser: org.eclipse.jetty.io.Buffer getBodyBuffer()>();

        if $r8 != null goto label09;

        $i5 = 0;

        goto label10;

     label09:
        $i5 = interfaceinvoke $r8.<org.eclipse.jetty.io.Buffer: int length()>();

     label10:
        $i1 = $i5;

        if $r11 != null goto label11;

        $i6 = 0;

        goto label12;

     label11:
        $i6 = interfaceinvoke $r11.<org.eclipse.jetty.io.Buffer: int length()>();

     label12:
        $i2 = $i1 + $i6;

        r46 = null;

        if $i2 <= 0 goto label14;

        $r13 = new org.eclipse.jetty.io.nio.IndirectNIOBuffer;

        specialinvoke $r13.<org.eclipse.jetty.io.nio.IndirectNIOBuffer: void <init>(int)>($i2);

        r46 = $r13;

        if $r8 == null goto label13;

        virtualinvoke $r13.<org.eclipse.jetty.io.nio.IndirectNIOBuffer: int put(org.eclipse.jetty.io.Buffer)>($r8);

        interfaceinvoke $r8.<org.eclipse.jetty.io.Buffer: void clear()>();

     label13:
        if $r11 == null goto label14;

        virtualinvoke $r13.<org.eclipse.jetty.io.nio.IndirectNIOBuffer: int put(org.eclipse.jetty.io.Buffer)>($r11);

        interfaceinvoke $r11.<org.eclipse.jetty.io.Buffer: void clear()>();

     label14:
        $r47 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r47.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        virtualinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler: void prepareContext(javax.servlet.http.HttpServletRequest,java.util.concurrent.ConcurrentMap)>(r1, $r47);

        $r48 = specialinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection prepareConnections(java.util.concurrent.ConcurrentMap,java.nio.channels.SocketChannel,org.eclipse.jetty.io.Buffer)>($r47, $r4, r46);

        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(200);

        $r49 = virtualinvoke r12.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AbstractHttpConnection getConnection()>();

        $r50 = virtualinvoke $r49.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.http.Generator getGenerator()>();

        interfaceinvoke $r50.<org.eclipse.jetty.http.Generator: void setPersistent(boolean)>(1);

        $r51 = interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: javax.servlet.ServletOutputStream getOutputStream()>();

        virtualinvoke $r51.<javax.servlet.ServletOutputStream: void close()>();

        specialinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler: void upgradeConnection(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.eclipse.jetty.io.Connection)>(r1, r2, $r48);

        return;

        catch java.net.SocketException from label03 to label04 with label05;
        catch java.net.SocketTimeoutException from label03 to label04 with label06;
        catch java.io.IOException from label03 to label04 with label07;
    }

    private org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection prepareConnections(java.util.concurrent.ConcurrentMap, java.nio.channels.SocketChannel, org.eclipse.jetty.io.Buffer)
    {
        org.eclipse.jetty.io.EndPoint $r6;
        org.eclipse.jetty.server.handler.ConnectHandler r1;
        org.eclipse.jetty.server.AbstractHttpConnection $r0;
        long $l0;
        org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection $r7;
        java.util.concurrent.ConcurrentMap r2;
        java.nio.channels.SocketChannel r5;
        org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection $r4;
        org.eclipse.jetty.io.Buffer r3;

        r1 := @this: org.eclipse.jetty.server.handler.ConnectHandler;

        r2 := @parameter0: java.util.concurrent.ConcurrentMap;

        r5 := @parameter1: java.nio.channels.SocketChannel;

        r3 := @parameter2: org.eclipse.jetty.io.Buffer;

        $r0 = staticinvoke <org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.server.AbstractHttpConnection getCurrentConnection()>();

        $r4 = virtualinvoke r1.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection newProxyToServerConnection(java.util.concurrent.ConcurrentMap,org.eclipse.jetty.io.Buffer)>(r2, r3);

        $r6 = virtualinvoke $r0.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.io.EndPoint getEndPoint()>();

        $l0 = virtualinvoke $r0.<org.eclipse.jetty.server.AbstractHttpConnection: long getTimeStamp()>();

        $r7 = virtualinvoke r1.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection newClientToProxyConnection(java.util.concurrent.ConcurrentMap,java.nio.channels.SocketChannel,org.eclipse.jetty.io.EndPoint,long)>(r2, r5, $r6, $l0);

        virtualinvoke $r7.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: void setConnection(org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection)>($r4);

        virtualinvoke $r4.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: void setConnection(org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection)>($r7);

        return $r7;
    }

    protected boolean handleAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String) throws javax.servlet.ServletException, java.io.IOException
    {
        javax.servlet.http.HttpServletRequest r1;
        org.eclipse.jetty.server.handler.ConnectHandler r0;
        javax.servlet.http.HttpServletResponse r2;
        java.lang.String r3;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: javax.servlet.http.HttpServletResponse;

        r3 := @parameter2: java.lang.String;

        return 1;
    }

    protected org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection newClientToProxyConnection(java.util.concurrent.ConcurrentMap, java.nio.channels.SocketChannel, org.eclipse.jetty.io.EndPoint, long)
    {
        java.nio.channels.SocketChannel r3;
        org.eclipse.jetty.io.EndPoint r4;
        org.eclipse.jetty.server.handler.ConnectHandler r1;
        long l0;
        org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection $r0;
        java.util.concurrent.ConcurrentMap r2;

        r1 := @this: org.eclipse.jetty.server.handler.ConnectHandler;

        r2 := @parameter0: java.util.concurrent.ConcurrentMap;

        r3 := @parameter1: java.nio.channels.SocketChannel;

        r4 := @parameter2: org.eclipse.jetty.io.EndPoint;

        l0 := @parameter3: long;

        $r0 = new org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection;

        specialinvoke $r0.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: void <init>(org.eclipse.jetty.server.handler.ConnectHandler,java.util.concurrent.ConcurrentMap,java.nio.channels.SocketChannel,org.eclipse.jetty.io.EndPoint,long)>(r1, r2, r3, r4, l0);

        return $r0;
    }

    protected org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection newProxyToServerConnection(java.util.concurrent.ConcurrentMap, org.eclipse.jetty.io.Buffer)
    {
        org.eclipse.jetty.server.handler.ConnectHandler r1;
        org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection $r0;
        org.eclipse.jetty.io.Buffer r3;
        java.util.concurrent.ConcurrentMap r2;

        r1 := @this: org.eclipse.jetty.server.handler.ConnectHandler;

        r2 := @parameter0: java.util.concurrent.ConcurrentMap;

        r3 := @parameter1: org.eclipse.jetty.io.Buffer;

        $r0 = new org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection;

        specialinvoke $r0.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: void <init>(org.eclipse.jetty.server.handler.ConnectHandler,java.util.concurrent.ConcurrentMap,org.eclipse.jetty.io.Buffer)>(r1, r2, r3);

        return $r0;
    }

    private java.nio.channels.SocketChannel connectToServer(javax.servlet.http.HttpServletRequest, java.lang.String, int) throws java.io.IOException
    {
        javax.servlet.http.HttpServletRequest r1;
        java.nio.channels.SocketChannel $r3;
        org.eclipse.jetty.server.handler.ConnectHandler r0;
        int i0;
        java.lang.String r2;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r3 = virtualinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler: java.nio.channels.SocketChannel connect(javax.servlet.http.HttpServletRequest,java.lang.String,int)>(r1, r2, i0);

        virtualinvoke $r3.<java.nio.channels.SocketChannel: java.nio.channels.SelectableChannel configureBlocking(boolean)>(0);

        return $r3;
    }

    protected java.nio.channels.SocketChannel connect(javax.servlet.http.HttpServletRequest, java.lang.String, int) throws java.io.IOException
    {
        java.lang.Integer $r4, $r11;
        java.nio.channels.SocketChannel $r0;
        java.net.InetSocketAddress $r7;
        java.lang.StringBuilder $r13, $r14, $r15, $r16, $r17, $r22, $r24, $r25, $r26, $r27;
        java.net.Socket $r5, $r6;
        java.lang.Object[] $r1, $r9;
        org.eclipse.jetty.server.handler.ConnectHandler r8;
        javax.servlet.http.HttpServletRequest r29;
        int i0, $i1;
        java.lang.String r2, $r18, $r28;
        java.io.IOException $r12, $r19, $r21;
        org.eclipse.jetty.util.log.Logger $r3, $r10, $r20, $r23;

        r8 := @this: org.eclipse.jetty.server.handler.ConnectHandler;

        r29 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r0 = staticinvoke <java.nio.channels.SocketChannel: java.nio.channels.SocketChannel open()>();

        if $r0 != null goto label1;

        $r12 = new java.io.IOException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to connect to ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>($r18);

        throw $r12;

     label1:
        $r3 = <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = r2;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[1] = $r4;

        interfaceinvoke $r3.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("Establishing connection to {}:{}", $r1);

        $r5 = virtualinvoke $r0.<java.nio.channels.SocketChannel: java.net.Socket socket()>();

        virtualinvoke $r5.<java.net.Socket: void setTcpNoDelay(boolean)>(1);

        $r6 = virtualinvoke $r0.<java.nio.channels.SocketChannel: java.net.Socket socket()>();

        $r7 = new java.net.InetSocketAddress;

        specialinvoke $r7.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>(r2, i0);

        $i1 = virtualinvoke r8.<org.eclipse.jetty.server.handler.ConnectHandler: int getConnectTimeout()>();

        virtualinvoke $r6.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r7, $i1);

        $r10 = <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = r2;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r9[1] = $r11;

        interfaceinvoke $r10.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("Established connection to {}:{}", $r9);

     label2:
        return $r0;

     label3:
        $r21 := @caughtexception;

        $r23 = <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to establish connection to ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r23.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Throwable)>($r28, $r21);

     label4:
        virtualinvoke $r0.<java.nio.channels.SocketChannel: void close()>();

     label5:
        goto label7;

     label6:
        $r19 := @caughtexception;

        $r20 = <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r20.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r19);

     label7:
        throw $r21;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.io.IOException from label4 to label5 with label6;
    }

    protected void prepareContext(javax.servlet.http.HttpServletRequest, java.util.concurrent.ConcurrentMap)
    {
        javax.servlet.http.HttpServletRequest r1;
        org.eclipse.jetty.server.handler.ConnectHandler r0;
        java.util.concurrent.ConcurrentMap r2;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: java.util.concurrent.ConcurrentMap;

        return;
    }

    private void upgradeConnection(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.eclipse.jetty.io.Connection) throws java.io.IOException
    {
        javax.servlet.http.HttpServletRequest r0;
        java.lang.Object[] $r3;
        org.eclipse.jetty.io.Connection r1;
        org.eclipse.jetty.server.handler.ConnectHandler r5;
        javax.servlet.http.HttpServletResponse r2;
        org.eclipse.jetty.util.log.Logger $r4;

        r5 := @this: org.eclipse.jetty.server.handler.ConnectHandler;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: javax.servlet.http.HttpServletResponse;

        r1 := @parameter2: org.eclipse.jetty.io.Connection;

        interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: void setAttribute(java.lang.String,java.lang.Object)>("org.eclipse.jetty.io.Connection", r1);

        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(101);

        $r4 = <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r1;

        interfaceinvoke $r4.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("Upgraded connection to {}", $r3);

        return;
    }

    private void register(java.nio.channels.SocketChannel, org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection) throws java.io.IOException
    {
        org.eclipse.jetty.io.nio.SelectorManager $r3;
        java.nio.channels.SocketChannel r1;
        org.eclipse.jetty.server.handler.ConnectHandler r0;
        int $i0;
        org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection r2;
        long $l1;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler;

        r1 := @parameter0: java.nio.channels.SocketChannel;

        r2 := @parameter1: org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection;

        $r3 = r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.io.nio.SelectorManager _selectorManager>;

        virtualinvoke $r3.<org.eclipse.jetty.io.nio.SelectorManager: void register(java.nio.channels.SocketChannel,java.lang.Object)>(r1, r2);

        $i0 = r0.<org.eclipse.jetty.server.handler.ConnectHandler: int _connectTimeout>;

        $l1 = (long) $i0;

        virtualinvoke r2.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: void waitReady(long)>($l1);

        return;
    }

    protected int read(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.io.Buffer, java.util.concurrent.ConcurrentMap) throws java.io.IOException
    {
        org.eclipse.jetty.io.EndPoint r0;
        org.eclipse.jetty.server.handler.ConnectHandler r2;
        int $i0;
        org.eclipse.jetty.io.Buffer r1;
        java.util.concurrent.ConcurrentMap r3;

        r2 := @this: org.eclipse.jetty.server.handler.ConnectHandler;

        r0 := @parameter0: org.eclipse.jetty.io.EndPoint;

        r1 := @parameter1: org.eclipse.jetty.io.Buffer;

        r3 := @parameter2: java.util.concurrent.ConcurrentMap;

        $i0 = interfaceinvoke r0.<org.eclipse.jetty.io.EndPoint: int fill(org.eclipse.jetty.io.Buffer)>(r1);

        return $i0;
    }

    protected int write(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.io.Buffer, java.util.concurrent.ConcurrentMap) throws java.io.IOException
    {
        java.lang.Object[] $r4;
        org.eclipse.jetty.io.EndPoint r3;
        org.eclipse.jetty.server.handler.ConnectHandler r8;
        long $l4;
        java.lang.Integer $r6;
        java.util.concurrent.ConcurrentMap r10;
        int $i0, $i1, $i2, $i3, $i5;
        org.eclipse.jetty.io.Buffer r0;
        boolean $z0, $z1, $z2, $z3;
        java.io.IOException $r9;
        java.lang.StringBuilder r2, $r7, $r11;
        org.eclipse.jetty.util.log.Logger $r1, $r5;

        r8 := @this: org.eclipse.jetty.server.handler.ConnectHandler;

        r3 := @parameter0: org.eclipse.jetty.io.EndPoint;

        r0 := @parameter1: org.eclipse.jetty.io.Buffer;

        r10 := @parameter2: java.util.concurrent.ConcurrentMap;

        if r0 != null goto label1;

        return 0;

     label1:
        $i0 = interfaceinvoke r0.<org.eclipse.jetty.io.Buffer: int length()>();

        $r1 = <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $z0 = interfaceinvoke $r1.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label2;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        goto label3;

     label2:
        $r11 = null;

     label3:
        r2 = $r11;

        $i1 = interfaceinvoke r3.<org.eclipse.jetty.io.EndPoint: int flush(org.eclipse.jetty.io.Buffer)>(r0);

        if $r11 == null goto label4;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

     label4:
        $i5 = interfaceinvoke r0.<org.eclipse.jetty.io.Buffer: int length()>();

        if $i5 <= 0 goto label6;

        $z1 = interfaceinvoke r3.<org.eclipse.jetty.io.EndPoint: boolean isOutputShutdown()>();

        if $z1 != 0 goto label6;

        $z2 = interfaceinvoke r3.<org.eclipse.jetty.io.EndPoint: boolean isBlocking()>();

        if $z2 != 0 goto label5;

        $i3 = virtualinvoke r8.<org.eclipse.jetty.server.handler.ConnectHandler: int getWriteTimeout()>();

        $l4 = (long) $i3;

        $z3 = interfaceinvoke r3.<org.eclipse.jetty.io.EndPoint: boolean blockWritable(long)>($l4);

        if $z3 != 0 goto label5;

        $r9 = new java.io.IOException;

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>("Write timeout");

        throw $r9;

     label5:
        $i2 = interfaceinvoke r3.<org.eclipse.jetty.io.EndPoint: int flush(org.eclipse.jetty.io.Buffer)>(r0);

        if r2 == null goto label4;

        $r7 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        goto label4;

     label6:
        $r5 = <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r4 = newarray (java.lang.Object)[3];

        $r4[0] = r2;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4[1] = $r6;

        $r4[2] = r3;

        interfaceinvoke $r5.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("Written {}/{} bytes {}", $r4);

        interfaceinvoke r0.<org.eclipse.jetty.io.Buffer: void compact()>();

        return $i0;
    }

    public void addWhite(java.lang.String)
    {
        org.eclipse.jetty.util.HostMap $r2;
        java.lang.String r1;
        org.eclipse.jetty.server.handler.ConnectHandler r0;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.HostMap _white>;

        specialinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler: void add(java.lang.String,org.eclipse.jetty.util.HostMap)>(r1, $r2);

        return;
    }

    public void addBlack(java.lang.String)
    {
        org.eclipse.jetty.util.HostMap $r2;
        java.lang.String r1;
        org.eclipse.jetty.server.handler.ConnectHandler r0;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.HostMap _black>;

        specialinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler: void add(java.lang.String,org.eclipse.jetty.util.HostMap)>(r1, $r2);

        return;
    }

    public void setWhite(java.lang.String[])
    {
        java.lang.String[] r1;
        org.eclipse.jetty.util.HostMap $r2;
        org.eclipse.jetty.server.handler.ConnectHandler r0;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler;

        r1 := @parameter0: java.lang.String[];

        $r2 = r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.HostMap _white>;

        virtualinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler: void set(java.lang.String[],org.eclipse.jetty.util.HostMap)>(r1, $r2);

        return;
    }

    public void setBlack(java.lang.String[])
    {
        java.lang.String[] r1;
        org.eclipse.jetty.util.HostMap $r2;
        org.eclipse.jetty.server.handler.ConnectHandler r0;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler;

        r1 := @parameter0: java.lang.String[];

        $r2 = r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.HostMap _black>;

        virtualinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler: void set(java.lang.String[],org.eclipse.jetty.util.HostMap)>(r1, $r2);

        return;
    }

    protected void set(java.lang.String[], org.eclipse.jetty.util.HostMap)
    {
        org.eclipse.jetty.server.handler.ConnectHandler r3;
        int $i0, i1, i2;
        org.eclipse.jetty.util.HostMap r0;
        java.lang.String[] r1;
        java.lang.String r2;

        r3 := @this: org.eclipse.jetty.server.handler.ConnectHandler;

        r1 := @parameter0: java.lang.String[];

        r0 := @parameter1: org.eclipse.jetty.util.HostMap;

        virtualinvoke r0.<org.eclipse.jetty.util.HostMap: void clear()>();

        if r1 == null goto label2;

        $i0 = lengthof r1;

        if $i0 <= 0 goto label2;

        i1 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        r2 = r1[i2];

        specialinvoke r3.<org.eclipse.jetty.server.handler.ConnectHandler: void add(java.lang.String,org.eclipse.jetty.util.HostMap)>(r2, r0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    private void add(java.lang.String, org.eclipse.jetty.util.HostMap)
    {
        org.eclipse.jetty.server.handler.ConnectHandler r3;
        int $i0;
        org.eclipse.jetty.util.HostMap r1;
        java.lang.Object $r2;
        java.lang.String $r0, r4;

        r3 := @this: org.eclipse.jetty.server.handler.ConnectHandler;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: org.eclipse.jetty.util.HostMap;

        if r4 == null goto label1;

        $i0 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r0 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>();

        $r2 = virtualinvoke r1.<org.eclipse.jetty.util.HostMap: java.lang.Object get(java.lang.Object)>($r0);

        if $r2 != null goto label1;

        virtualinvoke r1.<org.eclipse.jetty.util.HostMap: java.lang.Object put(java.lang.String,java.lang.Object)>($r0, $r0);

     label1:
        return;
    }

    public boolean validateDestination(java.lang.String)
    {
        org.eclipse.jetty.server.handler.ConnectHandler r0;
        org.eclipse.jetty.util.HostMap $r1, $r2, $r4, $r6;
        int $i0, $i1;
        java.lang.Object $r5, $r7;
        java.lang.String r3;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.HostMap _white>;

        $i0 = virtualinvoke $r1.<org.eclipse.jetty.util.HostMap: int size()>();

        if $i0 <= 0 goto label1;

        $r6 = r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.HostMap _white>;

        $r7 = virtualinvoke $r6.<org.eclipse.jetty.util.HostMap: java.lang.Object getLazyMatches(java.lang.String)>(r3);

        if $r7 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.HostMap _black>;

        $i1 = virtualinvoke $r2.<org.eclipse.jetty.util.HostMap: int size()>();

        if $i1 <= 0 goto label2;

        $r4 = r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.HostMap _black>;

        $r5 = virtualinvoke $r4.<org.eclipse.jetty.util.HostMap: java.lang.Object getLazyMatches(java.lang.String)>(r3);

        if $r5 == null goto label2;

        return 0;

     label2:
        return 1;
    }

    public void dump(java.lang.Appendable, java.lang.String) throws java.io.IOException
    {
        org.eclipse.jetty.io.nio.SelectorManager[] $r4;
        java.lang.Object[] $r11;
        org.eclipse.jetty.server.handler.ConnectHandler r0;
        org.eclipse.jetty.io.nio.SelectorManager $r5, $r13;
        java.lang.String r2;
        boolean $z0;
        java.lang.Appendable r1;
        java.util.Collection $r9, $r17;
        org.eclipse.jetty.server.Handler[] $r7, $r15;
        org.eclipse.jetty.util.thread.ThreadPool $r12;
        java.util.List $r6, $r8, $r14, $r16;
        java.util.Collection[] $r3, $r10;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler;

        r1 := @parameter0: java.lang.Appendable;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler: void dumpThis(java.lang.Appendable)>(r1);

        $z0 = r0.<org.eclipse.jetty.server.handler.ConnectHandler: boolean _privateThreadPool>;

        if $z0 == 0 goto label1;

        $r10 = newarray (java.util.Collection)[3];

        $r11 = newarray (java.lang.Object)[2];

        $r12 = r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.thread.ThreadPool _threadPool>;

        $r11[0] = $r12;

        $r13 = r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.io.nio.SelectorManager _selectorManager>;

        $r11[1] = $r13;

        $r14 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r11);

        $r10[0] = $r14;

        $r15 = virtualinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.server.Handler[] getHandlers()>();

        $r16 = staticinvoke <org.eclipse.jetty.util.TypeUtil: java.util.List asList(java.lang.Object[])>($r15);

        $r10[1] = $r16;

        $r17 = virtualinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler: java.util.Collection getBeans()>();

        $r10[2] = $r17;

        staticinvoke <org.eclipse.jetty.server.handler.ConnectHandler: void dump(java.lang.Appendable,java.lang.String,java.util.Collection[])>(r1, r2, $r10);

        goto label2;

     label1:
        $r3 = newarray (java.util.Collection)[3];

        $r4 = newarray (org.eclipse.jetty.io.nio.SelectorManager)[1];

        $r5 = r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.io.nio.SelectorManager _selectorManager>;

        $r4[0] = $r5;

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        $r3[0] = $r6;

        $r7 = virtualinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.server.Handler[] getHandlers()>();

        $r8 = staticinvoke <org.eclipse.jetty.util.TypeUtil: java.util.List asList(java.lang.Object[])>($r7);

        $r3[1] = $r8;

        $r9 = virtualinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler: java.util.Collection getBeans()>();

        $r3[2] = $r9;

        staticinvoke <org.eclipse.jetty.server.handler.ConnectHandler: void dump(java.lang.Appendable,java.lang.String,java.util.Collection[])>(r1, r2, $r3);

     label2:
        return;
    }

    static int access$100(org.eclipse.jetty.server.handler.ConnectHandler)
    {
        int $i0;
        org.eclipse.jetty.server.handler.ConnectHandler r0;

        r0 := @parameter0: org.eclipse.jetty.server.handler.ConnectHandler;

        $i0 = r0.<org.eclipse.jetty.server.handler.ConnectHandler: int _writeTimeout>;

        return $i0;
    }

    static org.eclipse.jetty.util.thread.ThreadPool access$200(org.eclipse.jetty.server.handler.ConnectHandler)
    {
        org.eclipse.jetty.server.handler.ConnectHandler r0;
        org.eclipse.jetty.util.thread.ThreadPool $r1;

        r0 := @parameter0: org.eclipse.jetty.server.handler.ConnectHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.thread.ThreadPool _threadPool>;

        return $r1;
    }

    static org.eclipse.jetty.util.log.Logger access$300()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger LOG>;

        return $r0;
    }

    static void access$500(org.eclipse.jetty.server.handler.ConnectHandler, java.nio.channels.SocketChannel, org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection) throws java.io.IOException
    {
        org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection r2;
        java.nio.channels.SocketChannel r1;
        org.eclipse.jetty.server.handler.ConnectHandler r0;

        r0 := @parameter0: org.eclipse.jetty.server.handler.ConnectHandler;

        r1 := @parameter1: java.nio.channels.SocketChannel;

        r2 := @parameter2: org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection;

        specialinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler: void register(java.nio.channels.SocketChannel,org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection)>(r1, r2);

        return;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/server/handler/ConnectHandler;");

        <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
