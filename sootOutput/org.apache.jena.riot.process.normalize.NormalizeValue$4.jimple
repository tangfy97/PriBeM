final class org.apache.jena.riot.process.normalize.NormalizeValue$4 extends java.lang.Object implements org.apache.jena.riot.process.normalize.DatatypeHandler
{

    void <init>()
    {
        org.apache.jena.riot.process.normalize.NormalizeValue$4 r0;

        r0 := @this: org.apache.jena.riot.process.normalize.NormalizeValue$4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.hp.hpl.jena.graph.Node handle(com.hp.hpl.jena.graph.Node, java.lang.String, com.hp.hpl.jena.datatypes.RDFDatatype)
    {
        com.hp.hpl.jena.graph.Node $r5, r6;
        org.apache.jena.riot.process.normalize.NormalizeValue$4 r10;
        java.math.BigDecimal $r2, $r12;
        com.hp.hpl.jena.datatypes.RDFDatatype r4;
        int $i0, $i2;
        java.lang.StringBuilder $r8, $r9, $r13;
        java.lang.String r1, $r3, r11;
        boolean $z0;

        r10 := @this: org.apache.jena.riot.process.normalize.NormalizeValue$4;

        r6 := @parameter0: com.hp.hpl.jena.graph.Node;

        r1 := @parameter1: java.lang.String;

        r4 := @parameter2: com.hp.hpl.jena.datatypes.RDFDatatype;

        $r12 = new java.math.BigDecimal;

        specialinvoke $r12.<java.math.BigDecimal: void <init>(java.lang.String)>(r1);

        $r2 = virtualinvoke $r12.<java.math.BigDecimal: java.math.BigDecimal stripTrailingZeros()>();

        $r3 = virtualinvoke $r2.<java.math.BigDecimal: java.lang.String toPlainString()>();

        r11 = $r3;

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>(46);

        $i2 = (int) -1;

        if $i0 != $i2 goto label1;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".0");

        r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $z0 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return r6;

     label2:
        $r5 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(java.lang.String,java.lang.String,com.hp.hpl.jena.datatypes.RDFDatatype)>(r11, null, r4);

        return $r5;
    }
}
