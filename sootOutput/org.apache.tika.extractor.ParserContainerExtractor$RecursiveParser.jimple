class org.apache.tika.extractor.ParserContainerExtractor$RecursiveParser extends org.apache.tika.parser.AbstractParser
{
    private final org.apache.tika.extractor.ContainerExtractor extractor;
    private final org.apache.tika.extractor.EmbeddedResourceHandler handler;
    final org.apache.tika.extractor.ParserContainerExtractor this$0;

    private void <init>(org.apache.tika.extractor.ParserContainerExtractor, org.apache.tika.extractor.ContainerExtractor, org.apache.tika.extractor.EmbeddedResourceHandler)
    {
        org.apache.tika.extractor.ParserContainerExtractor$RecursiveParser r0;
        org.apache.tika.extractor.EmbeddedResourceHandler r3;
        org.apache.tika.extractor.ParserContainerExtractor r1;
        org.apache.tika.extractor.ContainerExtractor r2;

        r0 := @this: org.apache.tika.extractor.ParserContainerExtractor$RecursiveParser;

        r1 := @parameter0: org.apache.tika.extractor.ParserContainerExtractor;

        r2 := @parameter1: org.apache.tika.extractor.ContainerExtractor;

        r3 := @parameter2: org.apache.tika.extractor.EmbeddedResourceHandler;

        r0.<org.apache.tika.extractor.ParserContainerExtractor$RecursiveParser: org.apache.tika.extractor.ParserContainerExtractor this$0> = r1;

        specialinvoke r0.<org.apache.tika.parser.AbstractParser: void <init>()>();

        r0.<org.apache.tika.extractor.ParserContainerExtractor$RecursiveParser: org.apache.tika.extractor.ContainerExtractor extractor> = r2;

        r0.<org.apache.tika.extractor.ParserContainerExtractor$RecursiveParser: org.apache.tika.extractor.EmbeddedResourceHandler handler> = r3;

        return;
    }

    public java.util.Set getSupportedTypes(org.apache.tika.parser.ParseContext)
    {
        org.apache.tika.extractor.ParserContainerExtractor$RecursiveParser r0;
        org.apache.tika.parser.Parser $r2;
        org.apache.tika.parser.ParseContext r3;
        java.util.Set $r4;
        org.apache.tika.extractor.ParserContainerExtractor $r1;

        r0 := @this: org.apache.tika.extractor.ParserContainerExtractor$RecursiveParser;

        r3 := @parameter0: org.apache.tika.parser.ParseContext;

        $r1 = r0.<org.apache.tika.extractor.ParserContainerExtractor$RecursiveParser: org.apache.tika.extractor.ParserContainerExtractor this$0>;

        $r2 = staticinvoke <org.apache.tika.extractor.ParserContainerExtractor: org.apache.tika.parser.Parser access$100(org.apache.tika.extractor.ParserContainerExtractor)>($r1);

        $r4 = interfaceinvoke $r2.<org.apache.tika.parser.Parser: java.util.Set getSupportedTypes(org.apache.tika.parser.ParseContext)>(r3);

        return $r4;
    }

    public void parse(java.io.InputStream, org.xml.sax.ContentHandler, org.apache.tika.metadata.Metadata, org.apache.tika.parser.ParseContext) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        java.lang.Throwable $r17, $r18;
        org.apache.tika.mime.MediaType $r8;
        org.apache.tika.metadata.Metadata r3;
        org.apache.tika.extractor.ParserContainerExtractor$RecursiveParser r5;
        org.apache.tika.io.TikaInputStream $r2, $r11;
        java.lang.String $r4;
        org.xml.sax.ContentHandler r19;
        org.apache.tika.io.TemporaryResources $r0;
        org.apache.tika.extractor.ParserContainerExtractor $r6;
        org.apache.tika.extractor.ContainerExtractor $r9, $r14, $r15;
        org.apache.tika.detect.Detector $r7;
        java.io.File $r10;
        org.apache.tika.extractor.EmbeddedResourceHandler $r12, $r13, $r16;
        org.apache.tika.parser.ParseContext r20;
        java.io.InputStream r1;

        r5 := @this: org.apache.tika.extractor.ParserContainerExtractor$RecursiveParser;

        r1 := @parameter0: java.io.InputStream;

        r19 := @parameter1: org.xml.sax.ContentHandler;

        r3 := @parameter2: org.apache.tika.metadata.Metadata;

        r20 := @parameter3: org.apache.tika.parser.ParseContext;

        $r0 = new org.apache.tika.io.TemporaryResources;

        specialinvoke $r0.<org.apache.tika.io.TemporaryResources: void <init>()>();

     label01:
        $r2 = staticinvoke <org.apache.tika.io.TikaInputStream: org.apache.tika.io.TikaInputStream get(java.io.InputStream,org.apache.tika.io.TemporaryResources)>(r1, $r0);

        $r4 = virtualinvoke r3.<org.apache.tika.metadata.Metadata: java.lang.String get(java.lang.String)>("resourceName");

        $r6 = r5.<org.apache.tika.extractor.ParserContainerExtractor$RecursiveParser: org.apache.tika.extractor.ParserContainerExtractor this$0>;

        $r7 = staticinvoke <org.apache.tika.extractor.ParserContainerExtractor: org.apache.tika.detect.Detector access$200(org.apache.tika.extractor.ParserContainerExtractor)>($r6);

        $r8 = interfaceinvoke $r7.<org.apache.tika.detect.Detector: org.apache.tika.mime.MediaType detect(java.io.InputStream,org.apache.tika.metadata.Metadata)>($r2, r3);

        $r9 = r5.<org.apache.tika.extractor.ParserContainerExtractor$RecursiveParser: org.apache.tika.extractor.ContainerExtractor extractor>;

        if $r9 != null goto label02;

        $r16 = r5.<org.apache.tika.extractor.ParserContainerExtractor$RecursiveParser: org.apache.tika.extractor.EmbeddedResourceHandler handler>;

        interfaceinvoke $r16.<org.apache.tika.extractor.EmbeddedResourceHandler: void handle(java.lang.String,org.apache.tika.mime.MediaType,java.io.InputStream)>($r4, $r8, $r2);

        goto label08;

     label02:
        $r10 = virtualinvoke $r2.<org.apache.tika.io.TikaInputStream: java.io.File getFile()>();

        $r11 = staticinvoke <org.apache.tika.io.TikaInputStream: org.apache.tika.io.TikaInputStream get(java.io.File)>($r10);

     label03:
        $r12 = r5.<org.apache.tika.extractor.ParserContainerExtractor$RecursiveParser: org.apache.tika.extractor.EmbeddedResourceHandler handler>;

        interfaceinvoke $r12.<org.apache.tika.extractor.EmbeddedResourceHandler: void handle(java.lang.String,org.apache.tika.mime.MediaType,java.io.InputStream)>($r4, $r8, $r11);

     label04:
        virtualinvoke $r11.<java.io.InputStream: void close()>();

        goto label07;

     label05:
        $r18 := @caughtexception;

     label06:
        virtualinvoke $r11.<java.io.InputStream: void close()>();

        throw $r18;

     label07:
        $r15 = r5.<org.apache.tika.extractor.ParserContainerExtractor$RecursiveParser: org.apache.tika.extractor.ContainerExtractor extractor>;

        $r14 = r5.<org.apache.tika.extractor.ParserContainerExtractor$RecursiveParser: org.apache.tika.extractor.ContainerExtractor extractor>;

        $r13 = r5.<org.apache.tika.extractor.ParserContainerExtractor$RecursiveParser: org.apache.tika.extractor.EmbeddedResourceHandler handler>;

        interfaceinvoke $r15.<org.apache.tika.extractor.ContainerExtractor: void extract(org.apache.tika.io.TikaInputStream,org.apache.tika.extractor.ContainerExtractor,org.apache.tika.extractor.EmbeddedResourceHandler)>($r2, $r14, $r13);

     label08:
        virtualinvoke $r0.<org.apache.tika.io.TemporaryResources: void dispose()>();

        goto label11;

     label09:
        $r17 := @caughtexception;

     label10:
        virtualinvoke $r0.<org.apache.tika.io.TemporaryResources: void dispose()>();

        throw $r17;

     label11:
        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    void <init>(org.apache.tika.extractor.ParserContainerExtractor, org.apache.tika.extractor.ContainerExtractor, org.apache.tika.extractor.EmbeddedResourceHandler, org.apache.tika.extractor.ParserContainerExtractor$1)
    {
        org.apache.tika.extractor.ParserContainerExtractor$RecursiveParser r0;
        org.apache.tika.extractor.EmbeddedResourceHandler r3;
        org.apache.tika.extractor.ParserContainerExtractor$1 r4;
        org.apache.tika.extractor.ParserContainerExtractor r1;
        org.apache.tika.extractor.ContainerExtractor r2;

        r0 := @this: org.apache.tika.extractor.ParserContainerExtractor$RecursiveParser;

        r1 := @parameter0: org.apache.tika.extractor.ParserContainerExtractor;

        r2 := @parameter1: org.apache.tika.extractor.ContainerExtractor;

        r3 := @parameter2: org.apache.tika.extractor.EmbeddedResourceHandler;

        r4 := @parameter3: org.apache.tika.extractor.ParserContainerExtractor$1;

        specialinvoke r0.<org.apache.tika.extractor.ParserContainerExtractor$RecursiveParser: void <init>(org.apache.tika.extractor.ParserContainerExtractor,org.apache.tika.extractor.ContainerExtractor,org.apache.tika.extractor.EmbeddedResourceHandler)>(r1, r2, r3);

        return;
    }
}
