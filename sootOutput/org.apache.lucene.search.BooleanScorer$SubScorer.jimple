final class org.apache.lucene.search.BooleanScorer$SubScorer extends java.lang.Object
{
    public org.apache.lucene.search.Scorer scorer;
    public boolean prohibited;
    public org.apache.lucene.search.Collector collector;
    public org.apache.lucene.search.BooleanScorer$SubScorer next;

    public void <init>(org.apache.lucene.search.Scorer, boolean, boolean, org.apache.lucene.search.Collector, org.apache.lucene.search.BooleanScorer$SubScorer)
    {
        org.apache.lucene.search.Scorer r1;
        org.apache.lucene.search.BooleanScorer$SubScorer r0, r3;
        org.apache.lucene.search.Collector r2;
        java.lang.IllegalArgumentException $r4;
        boolean z0, z1;

        r0 := @this: org.apache.lucene.search.BooleanScorer$SubScorer;

        r1 := @parameter0: org.apache.lucene.search.Scorer;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r2 := @parameter3: org.apache.lucene.search.Collector;

        r3 := @parameter4: org.apache.lucene.search.BooleanScorer$SubScorer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if z0 == 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("this scorer cannot handle required=true");

        throw $r4;

     label1:
        r0.<org.apache.lucene.search.BooleanScorer$SubScorer: org.apache.lucene.search.Scorer scorer> = r1;

        r0.<org.apache.lucene.search.BooleanScorer$SubScorer: boolean prohibited> = z1;

        r0.<org.apache.lucene.search.BooleanScorer$SubScorer: org.apache.lucene.search.Collector collector> = r2;

        r0.<org.apache.lucene.search.BooleanScorer$SubScorer: org.apache.lucene.search.BooleanScorer$SubScorer next> = r3;

        return;
    }
}
