public class com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter extends java.lang.Object
{
    protected com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine engine;
    protected com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreterContext iContext;
    protected boolean isComplete;
    protected com.hp.hpl.jena.graph.Node[] tVars;
    protected com.hp.hpl.jena.graph.Node[] argVars;
    protected com.hp.hpl.jena.graph.Node[] pVars;
    protected com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame;
    protected com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject cpFrame;
    protected java.util.ArrayList trail;
    protected com.hp.hpl.jena.reasoner.rulesys.RuleContext context;
    protected com.hp.hpl.jena.reasoner.rulesys.impl.TopLevelTripleMatchFrame topTMFrame;
    protected com.hp.hpl.jena.reasoner.TriplePattern goal;
    static org.slf4j.Logger logger;

    public void <init>(com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine, com.hp.hpl.jena.reasoner.TriplePattern)
    {
        java.util.List $r4;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore $r3;
        com.hp.hpl.jena.reasoner.TriplePattern r2;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter r0;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine r1;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter;

        r1 := @parameter0: com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine;

        r2 := @parameter1: com.hp.hpl.jena.reasoner.TriplePattern;

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine: com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore getRuleStore()>();

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore: java.util.List codeFor(com.hp.hpl.jena.reasoner.TriplePattern)>(r2);

        specialinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: void <init>(com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine,com.hp.hpl.jena.reasoner.TriplePattern,java.util.List,boolean)>(r1, r2, $r4, 1);

        return;
    }

    public void <init>(com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine, com.hp.hpl.jena.reasoner.TriplePattern, boolean)
    {
        java.util.List $r4;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore $r3;
        com.hp.hpl.jena.reasoner.TriplePattern r2;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter r0;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine r1;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter;

        r1 := @parameter0: com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine;

        r2 := @parameter1: com.hp.hpl.jena.reasoner.TriplePattern;

        z0 := @parameter2: boolean;

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine: com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore getRuleStore()>();

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore: java.util.List codeFor(com.hp.hpl.jena.reasoner.TriplePattern)>(r2);

        specialinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: void <init>(com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine,com.hp.hpl.jena.reasoner.TriplePattern,java.util.List,boolean)>(r1, r2, $r4, z0);

        return;
    }

    public void <init>(com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine, com.hp.hpl.jena.reasoner.TriplePattern, java.util.List, boolean)
    {
        com.hp.hpl.jena.graph.Node $r13, $r14, $r18, $r19, $r23, $r24;
        com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode $r7, $r31;
        com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject $r34;
        boolean $z0, $z1, z2, $z3, $z4;
        com.hp.hpl.jena.graph.Node[] $r1, $r2, $r11, $r12, $r16, $r17, $r21, $r22, $r28;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore $r26;
        com.hp.hpl.jena.reasoner.rulesys.impl.TopLevelTripleMatchFrame $r32, $r33, $r35, $r36;
        java.util.List r25;
        com.hp.hpl.jena.reasoner.TriplePattern r5;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter r0;
        com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrameWithDerivation $r29, $r30;
        com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame $r6, $r8, $r10, $r15, $r20, $r27;
        java.util.HashMap $r9;
        java.util.ArrayList $r3;
        int $i0;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine r4;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter;

        r4 := @parameter0: com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine;

        r5 := @parameter1: com.hp.hpl.jena.reasoner.TriplePattern;

        r25 := @parameter2: java.util.List;

        z2 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: boolean isComplete> = 0;

        $r1 = newarray (com.hp.hpl.jena.graph.Node)[8];

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] tVars> = $r1;

        $r2 = newarray (com.hp.hpl.jena.graph.Node)[8];

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars> = $r2;

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] pVars> = null;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: java.util.ArrayList trail> = $r3;

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine engine> = r4;

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.TriplePattern goal> = r5;

        $z0 = virtualinvoke r4.<com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine: boolean getDerivationLogging()>();

        if $z0 == 0 goto label1;

        $r30 = new com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrameWithDerivation;

        $r31 = <com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode: com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode returnCodeBlock>;

        specialinvoke $r30.<com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrameWithDerivation: void <init>(com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode)>($r31);

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame> = $r30;

        goto label2;

     label1:
        $r6 = new com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame;

        $r7 = <com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode: com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode returnCodeBlock>;

        specialinvoke $r6.<com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame: void <init>(com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode)>($r7);

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame> = $r6;

     label2:
        $r8 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame>;

        virtualinvoke $r8.<com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame: void allocate(int)>(15);

        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        $r10 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame>;

        $r11 = $r10.<com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame: com.hp.hpl.jena.graph.Node[] pVars>;

        $r12 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        $r13 = virtualinvoke r5.<com.hp.hpl.jena.reasoner.TriplePattern: com.hp.hpl.jena.graph.Node getSubject()>();

        $r14 = specialinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node standardize(com.hp.hpl.jena.graph.Node,java.util.Map)>($r13, $r9);

        $r12[0] = $r14;

        $r11[0] = $r14;

        $r15 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame>;

        $r16 = $r15.<com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame: com.hp.hpl.jena.graph.Node[] pVars>;

        $r17 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        $r18 = virtualinvoke r5.<com.hp.hpl.jena.reasoner.TriplePattern: com.hp.hpl.jena.graph.Node getPredicate()>();

        $r19 = specialinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node standardize(com.hp.hpl.jena.graph.Node,java.util.Map)>($r18, $r9);

        $r17[1] = $r19;

        $r16[1] = $r19;

        $r20 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame>;

        $r21 = $r20.<com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame: com.hp.hpl.jena.graph.Node[] pVars>;

        $r22 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        $r23 = virtualinvoke r5.<com.hp.hpl.jena.reasoner.TriplePattern: com.hp.hpl.jena.graph.Node getObject()>();

        $r24 = specialinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node standardize(com.hp.hpl.jena.graph.Node,java.util.Map)>($r23, $r9);

        $r22[2] = $r24;

        $r21[2] = $r24;

        $z1 = virtualinvoke r4.<com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine: boolean getDerivationLogging()>();

        if $z1 == 0 goto label3;

        $r27 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame>;

        $r29 = (com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrameWithDerivation) $r27;

        $r28 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        virtualinvoke $r29.<com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrameWithDerivation: void initDerivationRecord(com.hp.hpl.jena.graph.Node[])>($r28);

     label3:
        if r25 == null goto label5;

        $i0 = interfaceinvoke r25.<java.util.List: int size()>();

        if $i0 <= 0 goto label5;

        if z2 == 0 goto label4;

        $r26 = virtualinvoke r4.<com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine: com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore getRuleStore()>();

        $z4 = virtualinvoke $r26.<com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore: boolean isTabled(com.hp.hpl.jena.reasoner.TriplePattern)>(r5);

        if $z4 == 0 goto label4;

        specialinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: void setupTabledCall(int,int)>(0, 0);

        goto label5;

     label4:
        $z3 = virtualinvoke r5.<com.hp.hpl.jena.reasoner.TriplePattern: boolean isGround()>();

        specialinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: void setupClauseCall(int,int,java.util.List,boolean)>(0, 0, r25, $z3);

     label5:
        $r32 = new com.hp.hpl.jena.reasoner.rulesys.impl.TopLevelTripleMatchFrame;

        specialinvoke $r32.<com.hp.hpl.jena.reasoner.rulesys.impl.TopLevelTripleMatchFrame: void <init>(com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter,com.hp.hpl.jena.reasoner.TriplePattern)>(r0, r5);

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.TopLevelTripleMatchFrame topTMFrame> = $r32;

        $r33 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.TopLevelTripleMatchFrame topTMFrame>;

        $r34 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject cpFrame>;

        virtualinvoke $r33.<com.hp.hpl.jena.reasoner.rulesys.impl.TopLevelTripleMatchFrame: void linkTo(com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject)>($r34);

        $r35 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.TopLevelTripleMatchFrame topTMFrame>;

        virtualinvoke $r35.<com.hp.hpl.jena.reasoner.rulesys.impl.TopLevelTripleMatchFrame: void setContinuation(int,int)>(0, 0);

        $r36 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.TopLevelTripleMatchFrame topTMFrame>;

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject cpFrame> = $r36;

        return;
    }

    public void setTopInterpreter(com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreterContext)
    {
        com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject $r3;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreterContext r1;
        com.hp.hpl.jena.reasoner.rulesys.impl.TopLevelTripleMatchFrame $r2;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter r0;
        com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame $r4;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter;

        r1 := @parameter0: com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreterContext;

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreterContext iContext> = r1;

        $r2 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.TopLevelTripleMatchFrame topTMFrame>;

        $r3 = virtualinvoke $r2.<com.hp.hpl.jena.reasoner.rulesys.impl.TopLevelTripleMatchFrame: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject getLink()>();

        $z0 = $r3 instanceof com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame;

        if $z0 == 0 goto label1;

        $r4 = (com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame) $r3;

        $r4.<com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame: com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreterContext context> = r1;

     label1:
        return;
    }

    public void close()
    {
        com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject $r2, $r3;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter r0;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine $r1;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter;

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: boolean isComplete> = 1;

        $r1 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine engine>;

        virtualinvoke $r1.<com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine: void detach(com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter)>(r0);

        $r2 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject cpFrame>;

        if $r2 == null goto label1;

        $r3 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject cpFrame>;

        virtualinvoke $r3.<com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject: void close()>();

     label1:
        return;
    }

    public void setState(com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreterState)
    {
        com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreterContext $r2;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter r1;
        com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame $r3;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreterState r0;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter;

        r0 := @parameter0: com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreterState;

        $z0 = r0 instanceof com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame;

        if $z0 == 0 goto label1;

        $r3 = (com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame) r0;

        virtualinvoke r1.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: void restoreState(com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame)>($r3);

        goto label2;

     label1:
        $r2 = (com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreterContext) r0;

        r1.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreterContext iContext> = $r2;

     label2:
        return;
    }

    public java.lang.Object next()
    {
        com.hp.hpl.jena.graph.Node $r8, $r9, $r11, $r12, $r14, $r15;
        com.hp.hpl.jena.reasoner.rulesys.impl.StateFlag $r2, $r3, $r4, $r5;
        java.lang.String $r20, $r29;
        boolean $z0;
        com.hp.hpl.jena.graph.Node[] $r7, $r10, $r13;
        org.slf4j.Logger $r17, $r24;
        com.hp.hpl.jena.reasoner.rulesys.impl.TopLevelTripleMatchFrame $r21, $r26;
        com.hp.hpl.jena.graph.Triple $r6, $r22, $r27;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter r0;
        java.lang.StringBuilder $r16, $r18, $r19, $r23, $r25, $r28;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine $r1;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter;

        $r1 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine engine>;

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine: boolean isTraceOn()>();

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.StateFlag run()>();

        $r3 = <com.hp.hpl.jena.reasoner.rulesys.impl.StateFlag: com.hp.hpl.jena.reasoner.rulesys.impl.StateFlag FAIL>;

        if $r2 == $r3 goto label1;

        $r4 = <com.hp.hpl.jena.reasoner.rulesys.impl.StateFlag: com.hp.hpl.jena.reasoner.rulesys.impl.StateFlag SUSPEND>;

        if $r2 != $r4 goto label2;

     label1:
        return $r2;

     label2:
        $r5 = <com.hp.hpl.jena.reasoner.rulesys.impl.StateFlag: com.hp.hpl.jena.reasoner.rulesys.impl.StateFlag SATISFIED>;

        if $r2 != $r5 goto label4;

        if $z0 == 0 goto label3;

        $r24 = <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: org.slf4j.Logger logger>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RETURN: ");

        $r26 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.TopLevelTripleMatchFrame topTMFrame>;

        $r27 = $r26.<com.hp.hpl.jena.reasoner.rulesys.impl.TopLevelTripleMatchFrame: com.hp.hpl.jena.graph.Triple lastMatch>;

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r24.<org.slf4j.Logger: void info(java.lang.String)>($r29);

     label3:
        $r21 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.TopLevelTripleMatchFrame topTMFrame>;

        $r22 = $r21.<com.hp.hpl.jena.reasoner.rulesys.impl.TopLevelTripleMatchFrame: com.hp.hpl.jena.graph.Triple lastMatch>;

        return $r22;

     label4:
        $r6 = new com.hp.hpl.jena.graph.Triple;

        $r7 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] pVars>;

        $r8 = $r7[0];

        $r9 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node deref(com.hp.hpl.jena.graph.Node)>($r8);

        $r10 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] pVars>;

        $r11 = $r10[1];

        $r12 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node deref(com.hp.hpl.jena.graph.Node)>($r11);

        $r13 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] pVars>;

        $r14 = $r13[2];

        $r15 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node derefPossFunctor(com.hp.hpl.jena.graph.Node)>($r14);

        specialinvoke $r6.<com.hp.hpl.jena.graph.Triple: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r9, $r12, $r15);

        if $z0 == 0 goto label5;

        $r17 = <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: org.slf4j.Logger logger>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RETURN: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r17.<org.slf4j.Logger: void info(java.lang.String)>($r20);

     label5:
        return $r6;
    }

    public com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine getEngine()
    {
        com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter r0;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine $r1;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter;

        $r1 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine engine>;

        return $r1;
    }

    public com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject getChoiceFrame()
    {
        com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter r0;
        com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject $r1;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter;

        $r1 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject cpFrame>;

        return $r1;
    }

    public com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreterContext getContext()
    {
        com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter r0;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreterContext $r1;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter;

        $r1 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreterContext iContext>;

        return $r1;
    }

    protected com.hp.hpl.jena.reasoner.rulesys.impl.StateFlag run()
    {
        com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode $r275, $r301, r307;
        com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame r310;
        com.hp.hpl.jena.graph.Triple $r111;
        com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState$RuleClauseCodeList $r51, $r152;
        com.hp.hpl.jena.reasoner.rulesys.Builtin r326;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine $r1, $r2, $r40, $r42, $r54, $r96, $r113, $r311;
        com.hp.hpl.jena.reasoner.rulesys.RuleDerivation $r352;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter r0;
        com.hp.hpl.jena.reasoner.rulesys.RuleContext $r82, $r83, $r85;
        int $i0, $i1, $i3, $i4, $i5, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, i34, i35, i36, i39, i42, i46, i47, i48, i51, i54, i57, i60, i63, i68, i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95;
        com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext $r354;
        com.hp.hpl.jena.graph.Node $r22, $r23, $r30, $r31, $r38, $r39, $r47, $r48, $r53, $r60, $r61, $r62, $r67, $r69, $r72, $r73, $r103, $r139, $r141, $r148, $r155, $r157, $r159, $r161, $r164, $r170, $r173, $r177, $r178, $r185, $r195, r313, r314, r317;
        com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame $r10, $r11, $r17, $r63, $r64, $r104, $r105, $r106, $r107, $r109, $r110, $r116, $r118, $r120, $r197, $r198, $r244, $r245, $r247, $r248, $r277, $r278, $r279, $r280, $r292, $r300, $r312, $r322, $r324, $r325, $r329;
        java.util.ArrayList $r12, $r246, $r283;
        java.lang.String $r28, $r36, $r78, $r92, $r94, $r102, $r128, $r136, $r138, $r145, $r146, $r183, $r193, $r208, $r215, $r224, $r233, $r242, $r257, $r259, $r264, $r273, $r289, $r291, $r304;
        com.hp.hpl.jena.reasoner.rulesys.impl.Generator $r221;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, z31, $z32;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore $r41, $r43, $r55;
        java.util.List $r49, $r112, $r153, r320;
        com.hp.hpl.jena.reasoner.rulesys.BackwardRuleInfGraphI $r97, $r114;
        com.hp.hpl.jena.reasoner.rulesys.Rule $r84, $r108, $r117;
        byte[] $r19;
        com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject $r4, $r5, $r6, $r7, $r9, $r119, $r121, $r202, $r203, $r209, $r210, $r225, $r234, $r235, $r243, $r265, $r266, $r274, $r296, $r306, $r323;
        byte $b2, b6, $b10, b37, b38, b40, b41, b43, b44, b45, b49, b50, b52, b53, b55, b56, b58, b59, b61, b62, b64, b65, b66, b67;
        com.hp.hpl.jena.reasoner.rulesys.impl.ChoicePointFrame r305;
        java.lang.StringBuilder $r26, $r27, $r34, $r35, $r76, $r77, $r89, $r90, $r91, $r93, $r126, $r127, $r134, $r135, $r181, $r182, $r191, $r192, $r206, $r207, $r213, $r214, $r218, $r219, $r220, $r223, $r229, $r231, $r232, $r238, $r240, $r241, $r253, $r255, $r256, $r258, $r262, $r263, $r269, $r271, $r272, $r286, $r287, $r288, $r290, $r299, $r302, $r303, $r327, $r330, $r331, $r332, $r333, $r334, $r335, $r336, $r337, $r338, $r340, $r341, $r342, $r344, $r345, $r346, $r351, $r356;
        java.lang.Object[] $r20;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreterContext $r201;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPBindingEnvironment $r355;
        com.hp.hpl.jena.reasoner.TriplePattern $r199, $r222, $r230, $r239, $r249, $r254, $r270, $r349, $r350, $r353;
        com.hp.hpl.jena.reasoner.rulesys.impl.StateFlag $r3, $r13, $r14, $r15, $r16, $r226;
        com.hp.hpl.jena.reasoner.ReasonerException $r339, $r357;
        com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable $r140, $r150, $r194, $r343, $r347, $r348;
        org.slf4j.Logger $r25, $r33, $r75, $r88, $r125, $r133, $r180, $r190, $r205, $r212, $r217, $r228, $r237, $r252, $r261, $r268, $r285, $r298;
        java.lang.Object $r50, $r81, $r99, $r129, $r144, $r151, $r169, $r188;
        com.hp.hpl.jena.graph.Node[] $r18, $r21, $r29, $r37, $r45, $r46, $r52, $r57, $r58, $r59, $r65, $r66, $r68, $r70, $r71, $r80, $r86, $r100, $r101, $r131, $r137, $r142, $r147, $r149, $r154, $r156, $r158, $r160, $r162, $r163, $r165, $r167, $r168, $r171, $r172, $r174, $r175, $r176, $r184, $r186, $r187, $r281, $r282, $r293, r316, r319;
        com.hp.hpl.jena.reasoner.rulesys.impl.TopLevelTripleMatchFrame r309;
        com.hp.hpl.jena.reasoner.rulesys.impl.TripleMatchFrame r308;
        com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrameWithDerivation r122, $r200, $r250, $r294, r321, $r328;
        com.hp.hpl.jena.reasoner.rulesys.Functor r130, r315, r318;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter;

        r305 = null;

        $r1 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine engine>;

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine: boolean isTraceOn()>();

        $r2 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine engine>;

        $z1 = virtualinvoke $r2.<com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine: boolean getDerivationLogging()>();

     label01:
        $r306 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject cpFrame>;

        if $r306 == null goto label72;

        $r4 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject cpFrame>;

        $z2 = $r4 instanceof com.hp.hpl.jena.reasoner.rulesys.impl.ChoicePointFrame;

        if $z2 == 0 goto label08;

        $r274 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject cpFrame>;

        r305 = (com.hp.hpl.jena.reasoner.rulesys.impl.ChoicePointFrame) $r274;

        $z30 = virtualinvoke r305.<com.hp.hpl.jena.reasoner.rulesys.impl.ChoicePointFrame: boolean hasNext()>();

        if $z30 != 0 goto label02;

        $r296 = virtualinvoke r305.<com.hp.hpl.jena.reasoner.rulesys.impl.ChoicePointFrame: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject getLink()>();

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject cpFrame> = $r296;

        if $z0 == 0 goto label01;

        $r298 = <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: org.slf4j.Logger logger>;

        $r327 = new java.lang.StringBuilder;

        specialinvoke $r327.<java.lang.StringBuilder: void <init>()>();

        $r299 = virtualinvoke $r327.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FAIL in clause ");

        $r300 = r305.<com.hp.hpl.jena.reasoner.rulesys.impl.ChoicePointFrame: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame>;

        $r301 = $r300.<com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame: com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode clause>;

        $r302 = virtualinvoke $r299.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r301);

        $r303 = virtualinvoke $r302.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" choices exhausted");

        $r304 = virtualinvoke $r303.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r298.<org.slf4j.Logger: void info(java.lang.String)>($r304);

        goto label01;

     label02:
        $r275 = virtualinvoke r305.<com.hp.hpl.jena.reasoner.rulesys.impl.ChoicePointFrame: com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode nextClause()>();

        r307 = $r275;

        if $z1 == 0 goto label03;

        $r328 = new com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrameWithDerivation;

        specialinvoke $r328.<com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrameWithDerivation: void <init>(com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode)>($r275);

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame> = $r328;

        goto label04;

     label03:
        $r329 = new com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame;

        specialinvoke $r329.<com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame: void <init>(com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode)>($r275);

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame> = $r329;

     label04:
        $r278 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame>;

        $r277 = r305.<com.hp.hpl.jena.reasoner.rulesys.impl.ChoicePointFrame: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame>;

        virtualinvoke $r278.<com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame: void linkTo(com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject)>($r277);

        $r279 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame>;

        $i30 = r305.<com.hp.hpl.jena.reasoner.rulesys.impl.ChoicePointFrame: int cpc>;

        $r279.<com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame: int cpc> = $i30;

        $r280 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame>;

        $i31 = r305.<com.hp.hpl.jena.reasoner.rulesys.impl.ChoicePointFrame: int cac>;

        $r280.<com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame: int cac> = $i31;

        $r282 = r305.<com.hp.hpl.jena.reasoner.rulesys.impl.ChoicePointFrame: com.hp.hpl.jena.graph.Node[] argVars>;

        $r281 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r282, 0, $r281, 0, 8);

        $i33 = r305.<com.hp.hpl.jena.reasoner.rulesys.impl.ChoicePointFrame: int trailIndex>;

        $r283 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: java.util.ArrayList trail>;

        $i32 = virtualinvoke $r283.<java.util.ArrayList: int size()>();

        if $i33 >= $i32 goto label05;

        virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: void unwindTrail(int)>($i33);

     label05:
        i34 = 0;

        i35 = 0;

        if $z1 == 0 goto label06;

        $r292 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame>;

        $r294 = (com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrameWithDerivation) $r292;

        $r293 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        virtualinvoke $r294.<com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrameWithDerivation: void initDerivationRecord(com.hp.hpl.jena.graph.Node[])>($r293);

     label06:
        if $z0 == 0 goto label07;

        $r285 = <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: org.slf4j.Logger logger>;

        $r330 = new java.lang.StringBuilder;

        specialinvoke $r330.<java.lang.StringBuilder: void <init>()>();

        $r286 = virtualinvoke $r330.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ENTER ");

        $r287 = virtualinvoke $r286.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r275);

        $r288 = virtualinvoke $r287.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r289 = specialinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: java.lang.String getArgTrace()>();

        $r290 = virtualinvoke $r288.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r289);

        $r291 = virtualinvoke $r290.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r285.<org.slf4j.Logger: void info(java.lang.String)>($r291);

     label07:
        goto label23;

     label08:
        $r5 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject cpFrame>;

        $z3 = $r5 instanceof com.hp.hpl.jena.reasoner.rulesys.impl.TripleMatchFrame;

        if $z3 == 0 goto label13;

        $r243 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject cpFrame>;

        r308 = (com.hp.hpl.jena.reasoner.rulesys.impl.TripleMatchFrame) $r243;

        $r244 = r308.<com.hp.hpl.jena.reasoner.rulesys.impl.TripleMatchFrame: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame>;

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame> = $r244;

        $r245 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame>;

        r307 = $r245.<com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame: com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode clause>;

        i36 = r308.<com.hp.hpl.jena.reasoner.rulesys.impl.TripleMatchFrame: int trailIndex>;

        $r246 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: java.util.ArrayList trail>;

        $i28 = virtualinvoke $r246.<java.util.ArrayList: int size()>();

        if i36 >= $i28 goto label09;

        virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: void unwindTrail(int)>(i36);

     label09:
        $z28 = virtualinvoke r308.<com.hp.hpl.jena.reasoner.rulesys.impl.TripleMatchFrame: boolean nextMatch(com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter)>(r0);

        if $z28 != 0 goto label10;

        $r265 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject cpFrame>;

        $r266 = virtualinvoke $r265.<com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject getLink()>();

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject cpFrame> = $r266;

        if $z0 == 0 goto label01;

        $r268 = <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: org.slf4j.Logger logger>;

        $r331 = new java.lang.StringBuilder;

        specialinvoke $r331.<java.lang.StringBuilder: void <init>()>();

        $r269 = virtualinvoke $r331.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TRIPLE match (");

        $r270 = r308.<com.hp.hpl.jena.reasoner.rulesys.impl.TripleMatchFrame: com.hp.hpl.jena.reasoner.TriplePattern goal>;

        $r271 = virtualinvoke $r269.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r270);

        $r272 = virtualinvoke $r271.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") -> FAIL");

        $r273 = virtualinvoke $r272.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r268.<org.slf4j.Logger: void info(java.lang.String)>($r273);

        goto label01;

     label10:
        if $z0 == 0 goto label11;

        $r252 = <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: org.slf4j.Logger logger>;

        $r332 = new java.lang.StringBuilder;

        specialinvoke $r332.<java.lang.StringBuilder: void <init>()>();

        $r253 = virtualinvoke $r332.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TRIPLE match (");

        $r254 = r308.<com.hp.hpl.jena.reasoner.rulesys.impl.TripleMatchFrame: com.hp.hpl.jena.reasoner.TriplePattern goal>;

        $r255 = virtualinvoke $r253.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r254);

        $r256 = virtualinvoke $r255.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") -> ");

        $r257 = specialinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: java.lang.String getArgTrace()>();

        $r258 = virtualinvoke $r256.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r257);

        $r259 = virtualinvoke $r258.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r252.<org.slf4j.Logger: void info(java.lang.String)>($r259);

        $r261 = <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: org.slf4j.Logger logger>;

        $r333 = new java.lang.StringBuilder;

        specialinvoke $r333.<java.lang.StringBuilder: void <init>()>();

        $r262 = virtualinvoke $r333.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RENTER ");

        $r263 = virtualinvoke $r262.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r307);

        $r264 = virtualinvoke $r263.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r261.<org.slf4j.Logger: void info(java.lang.String)>($r264);

     label11:
        $i29 = r308.<com.hp.hpl.jena.reasoner.rulesys.impl.TripleMatchFrame: int cpc>;

        i35 = $i29;

        i34 = r308.<com.hp.hpl.jena.reasoner.rulesys.impl.TripleMatchFrame: int cac>;

        if $z1 == 0 goto label12;

        $r247 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame>;

        $z29 = $r247 instanceof com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrameWithDerivation;

        if $z29 == 0 goto label12;

        $r248 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame>;

        $r250 = (com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrameWithDerivation) $r248;

        $r249 = r308.<com.hp.hpl.jena.reasoner.rulesys.impl.TripleMatchFrame: com.hp.hpl.jena.reasoner.TriplePattern goal>;

        virtualinvoke $r250.<com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrameWithDerivation: void noteMatch(com.hp.hpl.jena.reasoner.TriplePattern,int)>($r249, $i29);

     label12:
        goto label23;

     label13:
        $r6 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject cpFrame>;

        $z4 = $r6 instanceof com.hp.hpl.jena.reasoner.rulesys.impl.TopLevelTripleMatchFrame;

        if $z4 == 0 goto label16;

        $r225 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject cpFrame>;

        r309 = (com.hp.hpl.jena.reasoner.rulesys.impl.TopLevelTripleMatchFrame) $r225;

        $z27 = virtualinvoke r309.<com.hp.hpl.jena.reasoner.rulesys.impl.TopLevelTripleMatchFrame: boolean nextMatch(com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter)>(r0);

        if $z27 != 0 goto label14;

        $r234 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject cpFrame>;

        $r235 = virtualinvoke $r234.<com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject getLink()>();

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject cpFrame> = $r235;

        if $z0 == 0 goto label01;

        $r237 = <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: org.slf4j.Logger logger>;

        $r334 = new java.lang.StringBuilder;

        specialinvoke $r334.<java.lang.StringBuilder: void <init>()>();

        $r238 = virtualinvoke $r334.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TRIPLE match (");

        $r239 = r309.<com.hp.hpl.jena.reasoner.rulesys.impl.TopLevelTripleMatchFrame: com.hp.hpl.jena.reasoner.TriplePattern goal>;

        $r240 = virtualinvoke $r238.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r239);

        $r241 = virtualinvoke $r240.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") -> FAIL");

        $r242 = virtualinvoke $r241.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r237.<org.slf4j.Logger: void info(java.lang.String)>($r242);

        goto label01;

     label14:
        if $z0 == 0 goto label15;

        $r228 = <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: org.slf4j.Logger logger>;

        $r335 = new java.lang.StringBuilder;

        specialinvoke $r335.<java.lang.StringBuilder: void <init>()>();

        $r229 = virtualinvoke $r335.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TRIPLE match (");

        $r230 = r309.<com.hp.hpl.jena.reasoner.rulesys.impl.TopLevelTripleMatchFrame: com.hp.hpl.jena.reasoner.TriplePattern goal>;

        $r231 = virtualinvoke $r229.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r230);

        $r232 = virtualinvoke $r231.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ->");

        $r233 = virtualinvoke $r232.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r228.<org.slf4j.Logger: void info(java.lang.String)>($r233);

     label15:
        $r226 = <com.hp.hpl.jena.reasoner.rulesys.impl.StateFlag: com.hp.hpl.jena.reasoner.rulesys.impl.StateFlag SATISFIED>;

        return $r226;

     label16:
        $r7 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject cpFrame>;

        $z5 = $r7 instanceof com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame;

        if $z5 == 0 goto label22;

        $r9 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject cpFrame>;

        r310 = (com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame) $r9;

        $r10 = r310.<com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame>;

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame> = $r10;

        $r11 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame>;

        r307 = $r11.<com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame: com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode clause>;

        if $z0 == 0 goto label17;

        $r217 = <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: org.slf4j.Logger logger>;

        $r336 = new java.lang.StringBuilder;

        specialinvoke $r336.<java.lang.StringBuilder: void <init>()>();

        $r218 = virtualinvoke $r336.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RESTORE ");

        $r219 = virtualinvoke $r218.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r307);

        $r220 = virtualinvoke $r219.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", due to tabled goal ");

        $r221 = r310.<com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame: com.hp.hpl.jena.reasoner.rulesys.impl.Generator generator>;

        $r222 = $r221.<com.hp.hpl.jena.reasoner.rulesys.impl.Generator: com.hp.hpl.jena.reasoner.TriplePattern goal>;

        $r223 = virtualinvoke $r220.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r222);

        $r224 = virtualinvoke $r223.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r217.<org.slf4j.Logger: void info(java.lang.String)>($r224);

     label17:
        $i27 = r310.<com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame: int trailIndex>;

        $r12 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: java.util.ArrayList trail>;

        $i0 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        if $i27 >= $i0 goto label18;

        virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: void unwindTrail(int)>($i27);

     label18:
        $r13 = virtualinvoke r310.<com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame: com.hp.hpl.jena.reasoner.rulesys.impl.StateFlag nextMatch(com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter)>(r0);

        $r14 = <com.hp.hpl.jena.reasoner.rulesys.impl.StateFlag: com.hp.hpl.jena.reasoner.rulesys.impl.StateFlag FAIL>;

        if $r13 != $r14 goto label19;

        $r209 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject cpFrame>;

        $r210 = virtualinvoke $r209.<com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject getLink()>();

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject cpFrame> = $r210;

        if $z0 == 0 goto label01;

        $r212 = <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: org.slf4j.Logger logger>;

        $r337 = new java.lang.StringBuilder;

        specialinvoke $r337.<java.lang.StringBuilder: void <init>()>();

        $r213 = virtualinvoke $r337.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FAIL ");

        $r214 = virtualinvoke $r213.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r307);

        $r215 = virtualinvoke $r214.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r212.<org.slf4j.Logger: void info(java.lang.String)>($r215);

        goto label01;

     label19:
        $r15 = <com.hp.hpl.jena.reasoner.rulesys.impl.StateFlag: com.hp.hpl.jena.reasoner.rulesys.impl.StateFlag SUSPEND>;

        if $r13 != $r15 goto label20;

        virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: void preserveState(com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame)>(r310);

        $r201 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreterContext iContext>;

        interfaceinvoke $r201.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreterContext: void notifyBlockedOn(com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame)>(r310);

        $r202 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject cpFrame>;

        $r203 = virtualinvoke $r202.<com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject getLink()>();

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject cpFrame> = $r203;

        if $z0 == 0 goto label01;

        $r205 = <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: org.slf4j.Logger logger>;

        $r338 = new java.lang.StringBuilder;

        specialinvoke $r338.<java.lang.StringBuilder: void <init>()>();

        $r206 = virtualinvoke $r338.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SUSPEND ");

        $r207 = virtualinvoke $r206.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r307);

        $r208 = virtualinvoke $r207.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r205.<org.slf4j.Logger: void info(java.lang.String)>($r208);

        goto label01;

     label20:
        i35 = r310.<com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame: int cpc>;

        i34 = r310.<com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame: int cac>;

        if $z1 == 0 goto label21;

        $r197 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame>;

        $z26 = $r197 instanceof com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrameWithDerivation;

        if $z26 == 0 goto label21;

        $r198 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame>;

        $r200 = (com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrameWithDerivation) $r198;

        $r199 = r310.<com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame: com.hp.hpl.jena.reasoner.TriplePattern goal>;

        virtualinvoke $r200.<com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrameWithDerivation: void noteMatch(com.hp.hpl.jena.reasoner.TriplePattern,int)>($r199, i35);

     label21:
        goto label23;

     label22:
        $r339 = new com.hp.hpl.jena.reasoner.ReasonerException;

        specialinvoke $r339.<com.hp.hpl.jena.reasoner.ReasonerException: void <init>(java.lang.String)>("Internal error in backward rule system, unrecognized choice point");

        throw $r339;

     label23:
        $r311 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine engine>;

        virtualinvoke $r311.<com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine: void incrementProfile(com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode)>(r307);

     label24:
        $r312 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame>;

        if $r312 == null goto label71;

        $r17 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame>;

        $r18 = $r17.<com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame: com.hp.hpl.jena.graph.Node[] pVars>;

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] pVars> = $r18;

        $r19 = virtualinvoke r307.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode: byte[] getCode()>();

        $r20 = virtualinvoke r307.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode: java.lang.Object[] getArgs()>();

     label25:
        $i1 = i35;

        i35 = i35 + 1;

        $b2 = $r19[$i1];

        $i70 = (int) $b2;

        tableswitch($i70)
        {
            case 1: goto label31;
            case 2: goto label29;
            case 3: goto label44;
            case 4: goto label30;
            case 5: goto label50;
            case 6: goto label46;
            case 7: goto label47;
            case 8: goto label49;
            case 9: goto label53;
            case 10: goto label34;
            case 11: goto label63;
            case 12: goto label52;
            case 13: goto label67;
            case 14: goto label69;
            case 15: goto label69;
            case 16: goto label51;
            case 17: goto label58;
            case 18: goto label45;
            case 19: goto label53;
            case 20: goto label48;
            case 21: goto label69;
            case 22: goto label28;
            case 23: goto label56;
            case 24: goto label59;
            case 25: goto label60;
            case 26: goto label69;
            case 27: goto label69;
            case 28: goto label69;
            case 29: goto label69;
            case 30: goto label69;
            case 31: goto label69;
            case 32: goto label26;
            case 33: goto label27;
            default: goto label69;
        };

     label26:
        $i4 = i35;

        i35 = i35 + 1;

        b37 = $r19[$i4];

        $r29 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        $i71 = (int) b37;

        $r30 = $r29[$i71];

        $r31 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node deref(com.hp.hpl.jena.graph.Node)>($r30);

        $z7 = virtualinvoke $r31.<com.hp.hpl.jena.graph.Node: boolean isVariable()>();

        if $z7 == 0 goto label70;

        if $z0 == 0 goto label01;

        $r33 = <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: org.slf4j.Logger logger>;

        $r340 = new java.lang.StringBuilder;

        specialinvoke $r340.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r340.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FAIL ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r307);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r33.<org.slf4j.Logger: void info(java.lang.String)>($r36);

        goto label01;

     label27:
        $i3 = i35;

        i35 = i35 + 1;

        b38 = $r19[$i3];

        $r21 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        $i72 = (int) b38;

        $r22 = $r21[$i72];

        $r23 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node deref(com.hp.hpl.jena.graph.Node)>($r22);

        $z6 = virtualinvoke $r23.<com.hp.hpl.jena.graph.Node: boolean isVariable()>();

        if $z6 != 0 goto label70;

        if $z0 == 0 goto label01;

        $r25 = <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: org.slf4j.Logger logger>;

        $r341 = new java.lang.StringBuilder;

        specialinvoke $r341.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r341.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FAIL ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r307);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r25.<org.slf4j.Logger: void info(java.lang.String)>($r28);

        goto label01;

     label28:
        $i5 = i35;

        i35 = i35 + 1;

        b6 = $r19[$i5];

        $r63 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame>;

        $i73 = (int) b6;

        virtualinvoke $r63.<com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame: void allocate(int)>($i73);

        $r64 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame>;

        $r65 = $r64.<com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame: com.hp.hpl.jena.graph.Node[] pVars>;

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] pVars> = $r65;

        goto label70;

     label29:
        i39 = i35 + 1;

        b40 = $r19[i35];

        i35 = i39 + 1;

        b41 = $r19[i39];

        $r186 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] pVars>;

        $r184 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        $i74 = (int) b41;

        $r185 = $r184[$i74];

        $i75 = (int) b40;

        $r186[$i75] = $r185;

        goto label70;

     label30:
        i42 = i35 + 1;

        b43 = $r19[i35];

        i35 = i42 + 1;

        b44 = $r19[i42];

        $r174 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] tVars>;

        $r172 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        $i76 = (int) b44;

        $r173 = $r172[$i76];

        $i77 = (int) b43;

        $r174[$i77] = $r173;

        goto label70;

     label31:
        $i25 = i35;

        i35 = i35 + 1;

        b45 = $r19[$i25];

        $r187 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        $i78 = (int) b45;

        r313 = $r187[$i78];

        $z23 = r313 instanceof com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable;

        if $z23 == 0 goto label32;

        $r194 = (com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable) r313;

        r313 = virtualinvoke $r194.<com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable: com.hp.hpl.jena.graph.Node deref()>();

     label32:
        $i26 = i34;

        i34 = i34 + 1;

        $r188 = $r20[$i26];

        $r195 = (com.hp.hpl.jena.graph.Node) $r188;

        $z24 = r313 instanceof com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable;

        if $z24 == 0 goto label33;

        virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: void bind(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r313, $r195);

        goto label70;

     label33:
        $z25 = virtualinvoke r313.<com.hp.hpl.jena.graph.Node: boolean sameValueAs(java.lang.Object)>($r195);

        if $z25 != 0 goto label70;

        if $z0 == 0 goto label01;

        $r190 = <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: org.slf4j.Logger logger>;

        $r342 = new java.lang.StringBuilder;

        specialinvoke $r342.<java.lang.StringBuilder: void <init>()>();

        $r191 = virtualinvoke $r342.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FAIL ");

        $r192 = virtualinvoke $r191.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r307);

        $r193 = virtualinvoke $r192.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r190.<org.slf4j.Logger: void info(java.lang.String)>($r193);

        goto label01;

     label34:
        $i14 = i34;

        i34 = i34 + 1;

        $r129 = $r20[$i14];

        r130 = (com.hp.hpl.jena.reasoner.rulesys.Functor) $r129;

        z31 = 0;

        $r131 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        r314 = $r131[2];

        $z14 = r314 instanceof com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable;

        if $z14 == 0 goto label35;

        $r150 = (com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable) r314;

        r314 = virtualinvoke $r150.<com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable: com.hp.hpl.jena.graph.Node deref()>();

     label35:
        $z15 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.Functor: boolean isFunctor(com.hp.hpl.jena.graph.Node)>(r314);

        if $z15 == 0 goto label39;

        $r144 = virtualinvoke r314.<com.hp.hpl.jena.graph.Node: java.lang.Object getLiteralValue()>();

        r315 = (com.hp.hpl.jena.reasoner.rulesys.Functor) $r144;

        $r145 = virtualinvoke r315.<com.hp.hpl.jena.reasoner.rulesys.Functor: java.lang.String getName()>();

        $r146 = virtualinvoke r130.<com.hp.hpl.jena.reasoner.rulesys.Functor: java.lang.String getName()>();

        $z18 = virtualinvoke $r145.<java.lang.String: boolean equals(java.lang.Object)>($r146);

        if $z18 == 0 goto label38;

        $i19 = virtualinvoke r315.<com.hp.hpl.jena.reasoner.rulesys.Functor: int getArgLength()>();

        $i20 = virtualinvoke r130.<com.hp.hpl.jena.reasoner.rulesys.Functor: int getArgLength()>();

        if $i19 != $i20 goto label38;

        $r147 = virtualinvoke r315.<com.hp.hpl.jena.reasoner.rulesys.Functor: com.hp.hpl.jena.graph.Node[] getArgs()>();

        i46 = 0;

     label36:
        $i21 = lengthof $r147;

        if i46 >= $i21 goto label37;

        $r149 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        $i22 = i46 + 3;

        $r148 = $r147[i46];

        $r149[$i22] = $r148;

        i46 = i46 + 1;

        goto label36;

     label37:
        z31 = 1;

     label38:
        goto label43;

     label39:
        $z16 = virtualinvoke r314.<com.hp.hpl.jena.graph.Node: boolean isVariable()>();

        if $z16 == 0 goto label43;

        $i15 = virtualinvoke r130.<com.hp.hpl.jena.reasoner.rulesys.Functor: int getArgLength()>();

        r316 = newarray (com.hp.hpl.jena.graph.Node)[$i15];

        $r137 = virtualinvoke r130.<com.hp.hpl.jena.reasoner.rulesys.Functor: com.hp.hpl.jena.graph.Node[] getArgs()>();

        i47 = 0;

     label40:
        $i16 = lengthof r316;

        if i47 >= $i16 goto label42;

        r317 = $r137[i47];

        $z17 = virtualinvoke r317.<com.hp.hpl.jena.graph.Node: boolean isVariable()>();

        if $z17 == 0 goto label41;

        $r343 = new com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable;

        $i18 = i47 + 3;

        specialinvoke $r343.<com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable: void <init>(java.lang.String,int)>(null, $i18);

        r317 = $r343;

     label41:
        r316[i47] = r317;

        $r142 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        $i17 = i47 + 3;

        $r142[$i17] = r317;

        i47 = i47 + 1;

        goto label40;

     label42:
        $r138 = virtualinvoke r130.<com.hp.hpl.jena.reasoner.rulesys.Functor: java.lang.String getName()>();

        $r139 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.Functor: com.hp.hpl.jena.graph.Node makeFunctorNode(java.lang.String,com.hp.hpl.jena.graph.Node[])>($r138, r316);

        $r140 = (com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable) r314;

        $r141 = virtualinvoke $r140.<com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable: com.hp.hpl.jena.graph.Node deref()>();

        virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: void bind(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r141, $r139);

        z31 = 1;

     label43:
        if z31 != 0 goto label70;

        if $z0 == 0 goto label01;

        $r133 = <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: org.slf4j.Logger logger>;

        $r344 = new java.lang.StringBuilder;

        specialinvoke $r344.<java.lang.StringBuilder: void <init>()>();

        $r134 = virtualinvoke $r344.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FAIL ");

        $r135 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r307);

        $r136 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r133.<org.slf4j.Logger: void info(java.lang.String)>($r136);

        goto label01;

     label44:
        i48 = i35 + 1;

        b49 = $r19[i35];

        i35 = i48 + 1;

        b50 = $r19[i48];

        $r175 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        $i79 = (int) b50;

        $r178 = $r175[$i79];

        $r176 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] pVars>;

        $i80 = (int) b49;

        $r177 = $r176[$i80];

        $z22 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: boolean unify(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r178, $r177);

        if $z22 != 0 goto label70;

        if $z0 == 0 goto label01;

        $r180 = <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: org.slf4j.Logger logger>;

        $r345 = new java.lang.StringBuilder;

        specialinvoke $r345.<java.lang.StringBuilder: void <init>()>();

        $r181 = virtualinvoke $r345.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FAIL ");

        $r182 = virtualinvoke $r181.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r307);

        $r183 = virtualinvoke $r182.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r180.<org.slf4j.Logger: void info(java.lang.String)>($r183);

        goto label01;

     label45:
        i51 = i35 + 1;

        b52 = $r19[i35];

        i35 = i51 + 1;

        b53 = $r19[i51];

        $r70 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        $i81 = (int) b53;

        $r73 = $r70[$i81];

        $r71 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] tVars>;

        $i82 = (int) b52;

        $r72 = $r71[$i82];

        $z10 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: boolean unify(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r73, $r72);

        if $z10 != 0 goto label70;

        if $z0 == 0 goto label01;

        $r75 = <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: org.slf4j.Logger logger>;

        $r346 = new java.lang.StringBuilder;

        specialinvoke $r346.<java.lang.StringBuilder: void <init>()>();

        $r76 = virtualinvoke $r346.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FAIL ");

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r307);

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r75.<org.slf4j.Logger: void info(java.lang.String)>($r78);

        goto label01;

     label46:
        i54 = i35 + 1;

        b55 = $r19[i35];

        i35 = i54 + 1;

        b56 = $r19[i54];

        $r167 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        $r168 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] pVars>;

        $r347 = new com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable;

        $i83 = (int) b55;

        specialinvoke $r347.<com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable: void <init>(java.lang.String,int)>(null, $i83);

        $i84 = (int) b55;

        $r168[$i84] = $r347;

        $i85 = (int) b56;

        $r167[$i85] = $r347;

        goto label70;

     label47:
        i57 = i35 + 1;

        b58 = $r19[i35];

        i35 = i57 + 1;

        b59 = $r19[i57];

        $r165 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        $r163 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] pVars>;

        $i86 = (int) b58;

        $r164 = $r163[$i86];

        $i87 = (int) b59;

        $r165[$i87] = $r164;

        goto label70;

     label48:
        i60 = i35 + 1;

        b61 = $r19[i35];

        i35 = i60 + 1;

        b62 = $r19[i60];

        $r68 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        $r66 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] pVars>;

        $i88 = (int) b61;

        $r67 = $r66[$i88];

        $r69 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node deref(com.hp.hpl.jena.graph.Node)>($r67);

        $i89 = (int) b62;

        $r68[$i89] = $r69;

        goto label70;

     label49:
        i63 = i35 + 1;

        b64 = $r19[i35];

        i35 = i63 + 1;

        b65 = $r19[i63];

        $r162 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        $r160 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] tVars>;

        $i90 = (int) b64;

        $r161 = $r160[$i90];

        $i91 = (int) b65;

        $r162[$i91] = $r161;

        goto label70;

     label50:
        $i23 = i35;

        i35 = i35 + 1;

        b66 = $r19[$i23];

        $r171 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        $i24 = i34;

        i34 = i34 + 1;

        $r169 = $r20[$i24];

        $r170 = (com.hp.hpl.jena.graph.Node) $r169;

        $i92 = (int) b66;

        $r171[$i92] = $r170;

        goto label70;

     label51:
        $i7 = i35;

        i35 = i35 + 1;

        b67 = $r19[$i7];

        $r80 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        $r348 = new com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable;

        $i93 = (int) b67;

        specialinvoke $r348.<com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable: void <init>(java.lang.String,int)>(null, $i93);

        $i94 = (int) b67;

        $r80[$i94] = $r348;

        goto label70;

     label52:
        $i11 = i34;

        i34 = i34 + 1;

        $r99 = $r20[$i11];

        r318 = (com.hp.hpl.jena.reasoner.rulesys.Functor) $r99;

        $i12 = virtualinvoke r318.<com.hp.hpl.jena.reasoner.rulesys.Functor: int getArgLength()>();

        r319 = newarray (com.hp.hpl.jena.graph.Node)[$i12];

        $r100 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        $i13 = lengthof r319;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r100, 3, r319, 0, $i13);

        $r101 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        $r102 = virtualinvoke r318.<com.hp.hpl.jena.reasoner.rulesys.Functor: java.lang.String getName()>();

        $r103 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.Functor: com.hp.hpl.jena.graph.Node makeFunctorNode(java.lang.String,com.hp.hpl.jena.graph.Node[])>($r102, r319);

        $r101[2] = $r103;

        goto label70;

     label53:
        i68 = i34 + 1;

        $r151 = $r20[i34];

        $r152 = (com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState$RuleClauseCodeList) $r151;

        $r153 = virtualinvoke $r152.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState$RuleClauseCodeList: java.util.List getList()>();

        $r154 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        $r155 = $r154[0];

        $z19 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: boolean isGrounded(com.hp.hpl.jena.graph.Node)>($r155);

        if $z19 == 0 goto label54;

        $r156 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        $r157 = $r156[1];

        $z20 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: boolean isGrounded(com.hp.hpl.jena.graph.Node)>($r157);

        if $z20 == 0 goto label54;

        $r158 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        $r159 = $r158[2];

        $z21 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: boolean isGrounded(com.hp.hpl.jena.graph.Node)>($r159);

        if $z21 == 0 goto label54;

        $z32 = 1;

        goto label55;

     label54:
        $z32 = 0;

     label55:
        specialinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: void setupClauseCall(int,int,java.util.List,boolean)>(i35, i68, $r153, $z32);

        specialinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: void setupTripleMatchCall(int,int)>(i35, i68);

        goto label01;

     label56:
        i69 = i34 + 1;

        $r50 = $r20[i34];

        $r51 = (com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState$RuleClauseCodeList) $r50;

        r320 = virtualinvoke $r51.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode$CompileState$RuleClauseCodeList: java.util.List getList()>();

        $r52 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        $r53 = $r52[2];

        $z9 = virtualinvoke $r53.<com.hp.hpl.jena.graph.Node: boolean isVariable()>();

        if $z9 != 0 goto label57;

        $r54 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine engine>;

        $r55 = virtualinvoke $r54.<com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine: com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore getRuleStore()>();

        $r349 = new com.hp.hpl.jena.reasoner.TriplePattern;

        $r57 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        $r62 = $r57[0];

        $r58 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        $r61 = $r58[1];

        $r59 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        $r60 = $r59[2];

        specialinvoke $r349.<com.hp.hpl.jena.reasoner.TriplePattern: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r62, $r61, $r60);

        r320 = virtualinvoke $r55.<com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore: java.util.List codeFor(com.hp.hpl.jena.reasoner.TriplePattern)>($r349);

     label57:
        specialinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: void setupClauseCall(int,int,java.util.List,boolean)>(i35, i69, r320, 0);

        specialinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: void setupTripleMatchCall(int,int)>(i35, i69);

        goto label01;

     label58:
        specialinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: void setupTripleMatchCall(int,int)>(i35, i34);

        goto label01;

     label59:
        specialinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: void setupTabledCall(int,int)>(i35, i34);

        goto label01;

     label60:
        $r37 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        $r38 = $r37[1];

        $r39 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node deref(com.hp.hpl.jena.graph.Node)>($r38);

        $r40 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine engine>;

        $r41 = virtualinvoke $r40.<com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine: com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore getRuleStore()>();

        $z8 = virtualinvoke $r41.<com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore: boolean isTabled(com.hp.hpl.jena.graph.Node)>($r39);

        if $z8 == 0 goto label61;

        specialinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: void setupTabledCall(int,int)>(i35, i34);

        goto label01;

     label61:
        $r42 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine engine>;

        $r43 = virtualinvoke $r42.<com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine: com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore getRuleStore()>();

        $r350 = new com.hp.hpl.jena.reasoner.TriplePattern;

        $r45 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        $r48 = $r45[0];

        $r46 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        $r47 = $r46[2];

        specialinvoke $r350.<com.hp.hpl.jena.reasoner.TriplePattern: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r48, $r39, $r47);

        $r49 = virtualinvoke $r43.<com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore: java.util.List codeFor(com.hp.hpl.jena.reasoner.TriplePattern)>($r350);

        if $r49 == null goto label62;

        specialinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: void setupClauseCall(int,int,java.util.List,boolean)>(i35, i34, $r49, 0);

     label62:
        specialinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: void setupTripleMatchCall(int,int)>(i35, i34);

        goto label01;

     label63:
        $r104 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame>;

        i35 = $r104.<com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame: int cpc>;

        $r105 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame>;

        i34 = $r105.<com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame: int cac>;

        if $z0 == 0 goto label64;

        $r125 = <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: org.slf4j.Logger logger>;

        $r351 = new java.lang.StringBuilder;

        specialinvoke $r351.<java.lang.StringBuilder: void <init>()>();

        $r126 = virtualinvoke $r351.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EXIT ");

        $r127 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r307);

        $r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r125.<org.slf4j.Logger: void info(java.lang.String)>($r128);

     label64:
        if r305 == null goto label65;

        virtualinvoke r305.<com.hp.hpl.jena.reasoner.rulesys.impl.ChoicePointFrame: void noteSuccess()>();

     label65:
        if $z1 == 0 goto label66;

        $r107 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame>;

        $r108 = virtualinvoke $r107.<com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame: com.hp.hpl.jena.reasoner.rulesys.Rule getRule()>();

        if $r108 == null goto label66;

        $r109 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame>;

        $z12 = $r109 instanceof com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrameWithDerivation;

        if $z12 == 0 goto label66;

        $r110 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame>;

        r321 = (com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrameWithDerivation) $r110;

        $r111 = virtualinvoke r321.<com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrameWithDerivation: com.hp.hpl.jena.graph.Triple getResult()>();

        $r112 = virtualinvoke r321.<com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrameWithDerivation: java.util.List getMatchList()>();

        $r113 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine engine>;

        $r114 = virtualinvoke $r113.<com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine: com.hp.hpl.jena.reasoner.rulesys.BackwardRuleInfGraphI getInfGraph()>();

        $r352 = new com.hp.hpl.jena.reasoner.rulesys.RuleDerivation;

        $r116 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame>;

        $r117 = virtualinvoke $r116.<com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame: com.hp.hpl.jena.reasoner.rulesys.Rule getRule()>();

        specialinvoke $r352.<com.hp.hpl.jena.reasoner.rulesys.RuleDerivation: void <init>(com.hp.hpl.jena.reasoner.rulesys.Rule,com.hp.hpl.jena.graph.Triple,java.util.List,com.hp.hpl.jena.reasoner.InfGraph)>($r117, $r111, $r112, $r114);

        interfaceinvoke $r114.<com.hp.hpl.jena.reasoner.rulesys.BackwardRuleInfGraphI: void logDerivation(com.hp.hpl.jena.graph.Triple,com.hp.hpl.jena.reasoner.Derivation)>($r111, $r352);

        $r118 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame>;

        $r119 = $r118.<com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject link>;

        $z13 = $r119 instanceof com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrameWithDerivation;

        if $z13 == 0 goto label66;

        $r120 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame>;

        $r121 = $r120.<com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject link>;

        r122 = (com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrameWithDerivation) $r121;

        $r353 = new com.hp.hpl.jena.reasoner.TriplePattern;

        specialinvoke $r353.<com.hp.hpl.jena.reasoner.TriplePattern: void <init>(com.hp.hpl.jena.graph.Triple)>($r111);

        virtualinvoke r122.<com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrameWithDerivation: void noteMatch(com.hp.hpl.jena.reasoner.TriplePattern,int)>($r353, i35);

     label66:
        $r322 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame>;

        $r323 = $r322.<com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject link>;

        $r324 = (com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame) $r323;

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame> = $r324;

        $r325 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame>;

        if $r325 == null goto label24;

        $r106 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame envFrame>;

        r307 = $r106.<com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame: com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode clause>;

        goto label24;

     label67:
        $i8 = i34;

        i34 = i34 + 1;

        $r81 = $r20[$i8];

        r326 = (com.hp.hpl.jena.reasoner.rulesys.Builtin) $r81;

        $r82 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.RuleContext context>;

        if $r82 != null goto label68;

        $r354 = new com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext;

        $r96 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine engine>;

        $r97 = virtualinvoke $r96.<com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine: com.hp.hpl.jena.reasoner.rulesys.BackwardRuleInfGraphI getInfGraph()>();

        specialinvoke $r354.<com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext: void <init>(com.hp.hpl.jena.reasoner.rulesys.BackwardRuleInfGraphI)>($r97);

        $r355 = new com.hp.hpl.jena.reasoner.rulesys.impl.LPBindingEnvironment;

        specialinvoke $r355.<com.hp.hpl.jena.reasoner.rulesys.impl.LPBindingEnvironment: void <init>(com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter)>(r0);

        virtualinvoke $r354.<com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext: void setEnv(com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment)>($r355);

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.RuleContext context> = $r354;

     label68:
        $r83 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.RuleContext context>;

        $r84 = virtualinvoke r307.<com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode: com.hp.hpl.jena.reasoner.rulesys.Rule getRule()>();

        interfaceinvoke $r83.<com.hp.hpl.jena.reasoner.rulesys.RuleContext: void setRule(com.hp.hpl.jena.reasoner.rulesys.Rule)>($r84);

        $r86 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        $i9 = i35;

        i35 = i35 + 1;

        $b10 = $r19[$i9];

        $r85 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.RuleContext context>;

        $i95 = (int) $b10;

        $z11 = interfaceinvoke r326.<com.hp.hpl.jena.reasoner.rulesys.Builtin: boolean bodyCall(com.hp.hpl.jena.graph.Node[],int,com.hp.hpl.jena.reasoner.rulesys.RuleContext)>($r86, $i95, $r85);

        if $z11 != 0 goto label70;

        if $z0 == 0 goto label01;

        $r88 = <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: org.slf4j.Logger logger>;

        $r356 = new java.lang.StringBuilder;

        specialinvoke $r356.<java.lang.StringBuilder: void <init>()>();

        $r89 = virtualinvoke $r356.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FAIL ");

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r307);

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", due to ");

        $r92 = interfaceinvoke r326.<com.hp.hpl.jena.reasoner.rulesys.Builtin: java.lang.String getName()>();

        $r93 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r92);

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r88.<org.slf4j.Logger: void info(java.lang.String)>($r94);

        goto label01;

     label69:
        $r357 = new com.hp.hpl.jena.reasoner.ReasonerException;

        specialinvoke $r357.<com.hp.hpl.jena.reasoner.ReasonerException: void <init>(java.lang.String)>("Internal error in backward rule system\nIllegal op code");

        throw $r357;

     label70:
        goto label25;

     label71:
        $r16 = <com.hp.hpl.jena.reasoner.rulesys.impl.StateFlag: com.hp.hpl.jena.reasoner.rulesys.impl.StateFlag ACTIVE>;

        return $r16;

     label72:
        $r3 = <com.hp.hpl.jena.reasoner.rulesys.impl.StateFlag: com.hp.hpl.jena.reasoner.rulesys.impl.StateFlag FAIL>;

        return $r3;
    }

    private java.lang.String getArgTrace()
    {
        com.hp.hpl.jena.graph.Node[] $r2, $r6, $r10;
        com.hp.hpl.jena.graph.Node $r3, $r4, $r7, $r8, $r11, $r12;
        java.lang.StringBuffer $r0;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter r1;
        java.lang.String $r5, $r9, $r13, $r14;

        r1 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        $r3 = $r2[0];

        $r4 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node deref(com.hp.hpl.jena.graph.Node)>($r3);

        $r5 = staticinvoke <com.hp.hpl.jena.util.PrintUtil: java.lang.String print(com.hp.hpl.jena.graph.Node)>($r4);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r6 = r1.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        $r7 = $r6[1];

        $r8 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node deref(com.hp.hpl.jena.graph.Node)>($r7);

        $r9 = staticinvoke <com.hp.hpl.jena.util.PrintUtil: java.lang.String print(com.hp.hpl.jena.graph.Node)>($r8);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r10 = r1.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node[] argVars>;

        $r11 = $r10[2];

        $r12 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node deref(com.hp.hpl.jena.graph.Node)>($r11);

        $r13 = staticinvoke <com.hp.hpl.jena.util.PrintUtil: java.lang.String print(com.hp.hpl.jena.graph.Node)>($r12);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r14 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r14;
    }

    private void setupTripleMatchCall(int, int)
    {
        com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject $r2;
        com.hp.hpl.jena.reasoner.rulesys.impl.TripleMatchFrame $r0;
        int i0, i1;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter r1;

        r1 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new com.hp.hpl.jena.reasoner.rulesys.impl.TripleMatchFrame;

        specialinvoke $r0.<com.hp.hpl.jena.reasoner.rulesys.impl.TripleMatchFrame: void <init>(com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter)>(r1);

        virtualinvoke $r0.<com.hp.hpl.jena.reasoner.rulesys.impl.TripleMatchFrame: void setContinuation(int,int)>(i0, i1);

        $r2 = r1.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject cpFrame>;

        virtualinvoke $r0.<com.hp.hpl.jena.reasoner.rulesys.impl.TripleMatchFrame: void linkTo(com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject)>($r2);

        r1.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject cpFrame> = $r0;

        return;
    }

    private void setupClauseCall(int, int, java.util.List, boolean)
    {
        com.hp.hpl.jena.reasoner.rulesys.impl.ChoicePointFrame $r0;
        com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject $r3;
        java.util.List r2;
        int i0, i1;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter r1;
        boolean z0;

        r1 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r2 := @parameter2: java.util.List;

        z0 := @parameter3: boolean;

        $r0 = new com.hp.hpl.jena.reasoner.rulesys.impl.ChoicePointFrame;

        specialinvoke $r0.<com.hp.hpl.jena.reasoner.rulesys.impl.ChoicePointFrame: void <init>(com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter,java.util.List,boolean)>(r1, r2, z0);

        $r3 = r1.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject cpFrame>;

        virtualinvoke $r0.<com.hp.hpl.jena.reasoner.rulesys.impl.ChoicePointFrame: void linkTo(com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject)>($r3);

        virtualinvoke $r0.<com.hp.hpl.jena.reasoner.rulesys.impl.ChoicePointFrame: void setContinuation(int,int)>(i0, i1);

        r1.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject cpFrame> = $r0;

        return;
    }

    private void setupTabledCall(int, int)
    {
        com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject $r2;
        int i0, i1;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter r1;
        com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame $r0;

        r1 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame;

        specialinvoke $r0.<com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame: void <init>(com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter)>(r1);

        $r2 = r1.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject cpFrame>;

        virtualinvoke $r0.<com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame: void linkTo(com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject)>($r2);

        virtualinvoke $r0.<com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame: void setContinuation(int,int)>(i0, i1);

        r1.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject cpFrame> = $r0;

        return;
    }

    public void preserveState(com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame)
    {
        com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter r1;
        com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame r0;
        java.util.ArrayList $r2;

        r1 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter;

        r0 := @parameter0: com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame;

        $r2 = r1.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: java.util.ArrayList trail>;

        virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame: void preserveState(java.util.List)>($r2);

        return;
    }

    public void restoreState(com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame)
    {
        com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter r0;
        com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame r1;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreterContext $r2;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter;

        r1 := @parameter0: com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame;

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject cpFrame> = r1;

        virtualinvoke r1.<com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame: void restoreState(com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter)>(r0);

        $r2 = r1.<com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame: com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreterContext context>;

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreterContext iContext> = $r2;

        return;
    }

    public boolean unify(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable $r3, $r4;
        com.hp.hpl.jena.graph.Node r0, r1, r5, r6;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter r2;
        boolean $z0, $z1, $z2, $z3, $z4;

        r2 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        r1 := @parameter1: com.hp.hpl.jena.graph.Node;

        r5 = r0;

        $z0 = r0 instanceof com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable;

        if $z0 == 0 goto label1;

        $r4 = (com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable) r0;

        r5 = virtualinvoke $r4.<com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable: com.hp.hpl.jena.graph.Node deref()>();

     label1:
        r6 = r1;

        $z1 = r1 instanceof com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable;

        if $z1 == 0 goto label2;

        $r3 = (com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable) r1;

        r6 = virtualinvoke $r3.<com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable: com.hp.hpl.jena.graph.Node deref()>();

     label2:
        $z2 = r5 instanceof com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable;

        if $z2 == 0 goto label3;

        virtualinvoke r2.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: void bind(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r5, r6);

        return 1;

     label3:
        $z3 = r6 instanceof com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable;

        if $z3 == 0 goto label4;

        virtualinvoke r2.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: void bind(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r6, r5);

        return 1;

     label4:
        $z4 = virtualinvoke r5.<com.hp.hpl.jena.graph.Node: boolean sameValueAs(java.lang.Object)>(r6);

        return $z4;
    }

    public void bind(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable $r2;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter r3;
        com.hp.hpl.jena.graph.Node r0, r1;
        java.util.ArrayList $r4;

        r3 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        r1 := @parameter1: com.hp.hpl.jena.graph.Node;

        $r2 = (com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable) r0;

        virtualinvoke $r2.<com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable: void simpleBind(com.hp.hpl.jena.graph.Node)>(r1);

        $r4 = r3.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: java.util.ArrayList trail>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

        return;
    }

    public void unwindTrail(int)
    {
        com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable r4;
        java.util.ArrayList $r1, $r2, $r5;
        int $i0, i1, i2, $i4;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter r0;
        java.lang.Object $r3;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter;

        i1 := @parameter0: int;

        $r1 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: java.util.ArrayList trail>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i2 = $i0 - 1;

     label1:
        if i2 < i1 goto label2;

        $r2 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: java.util.ArrayList trail>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r4 = (com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable) $r3;

        virtualinvoke r4.<com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable: void unbind()>();

        $r5 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: java.util.ArrayList trail>;

        virtualinvoke $r5.<java.util.ArrayList: java.lang.Object remove(int)>(i2);

        $i4 = (int) -1;

        i2 = i2 + $i4;

        goto label1;

     label2:
        return;
    }

    public static com.hp.hpl.jena.graph.Node deref(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable $r1;
        com.hp.hpl.jena.graph.Node r0, $r2;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        $z0 = r0 instanceof com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable;

        if $z0 == 0 goto label1;

        $r1 = (com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable) r0;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable: com.hp.hpl.jena.graph.Node deref()>();

        return $r2;

     label1:
        return r0;
    }

    public static boolean isGrounded(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.Node r0, $r1;
        boolean $z0, $z1;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r1 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node deref(com.hp.hpl.jena.graph.Node)>(r0);

        $z0 = $r1 instanceof com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static com.hp.hpl.jena.graph.Triple deref(com.hp.hpl.jena.reasoner.TriplePattern)
    {
        com.hp.hpl.jena.graph.Node $r2, $r3, $r4, $r5, $r6, $r7;
        com.hp.hpl.jena.graph.Triple $r1;
        com.hp.hpl.jena.reasoner.TriplePattern r0;

        r0 := @parameter0: com.hp.hpl.jena.reasoner.TriplePattern;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new com.hp.hpl.jena.graph.Triple;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.TriplePattern: com.hp.hpl.jena.graph.Node getSubject()>();

        $r3 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node deref(com.hp.hpl.jena.graph.Node)>($r2);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.TriplePattern: com.hp.hpl.jena.graph.Node getPredicate()>();

        $r5 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node deref(com.hp.hpl.jena.graph.Node)>($r4);

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.TriplePattern: com.hp.hpl.jena.graph.Node getObject()>();

        $r7 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node deref(com.hp.hpl.jena.graph.Node)>($r6);

        specialinvoke $r1.<com.hp.hpl.jena.graph.Triple: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r3, $r5, $r7);

        return $r1;
    }

    public static com.hp.hpl.jena.graph.Node derefPossFunctor(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.Node r0, $r2, $r7, $r8, $r9, r11;
        int $i0, $i1, $i2, i3, i4;
        java.lang.String $r6;
        com.hp.hpl.jena.reasoner.ReasonerException $r10;
        boolean $z0, $z1, $z2, $z3, z4;
        com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable $r1;
        com.hp.hpl.jena.graph.Node[] $r5, r12;
        java.lang.Object $r3;
        com.hp.hpl.jena.reasoner.rulesys.Functor r4;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        $z0 = r0 instanceof com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable;

        if $z0 == 0 goto label9;

        $r1 = (com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable) r0;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable: com.hp.hpl.jena.graph.Node deref()>();

        r11 = $r2;

        $z1 = virtualinvoke $r2.<com.hp.hpl.jena.graph.Node: boolean isVariable()>();

        if $z1 == 0 goto label1;

        $r10 = new com.hp.hpl.jena.reasoner.ReasonerException;

        specialinvoke $r10.<com.hp.hpl.jena.reasoner.ReasonerException: void <init>(java.lang.String)>("Internal error in LP reasoner: variable in triple result");

        throw $r10;

     label1:
        $z2 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.Functor: boolean isFunctor(com.hp.hpl.jena.graph.Node)>($r2);

        if $z2 == 0 goto label8;

        $r3 = virtualinvoke $r2.<com.hp.hpl.jena.graph.Node: java.lang.Object getLiteralValue()>();

        r4 = (com.hp.hpl.jena.reasoner.rulesys.Functor) $r3;

        $r5 = virtualinvoke r4.<com.hp.hpl.jena.reasoner.rulesys.Functor: com.hp.hpl.jena.graph.Node[] getArgs()>();

        z4 = 0;

        i3 = 0;

     label2:
        $i0 = lengthof $r5;

        if i3 >= $i0 goto label4;

        $r9 = $r5[i3];

        $z3 = virtualinvoke $r9.<com.hp.hpl.jena.graph.Node: boolean isVariable()>();

        if $z3 == 0 goto label3;

        z4 = 1;

        goto label4;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        if z4 == 0 goto label7;

        $i1 = lengthof $r5;

        r12 = newarray (com.hp.hpl.jena.graph.Node)[$i1];

        i4 = 0;

     label5:
        $i2 = lengthof $r5;

        if i4 >= $i2 goto label6;

        $r7 = $r5[i4];

        $r8 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node deref(com.hp.hpl.jena.graph.Node)>($r7);

        r12[i4] = $r8;

        i4 = i4 + 1;

        goto label5;

     label6:
        $r6 = virtualinvoke r4.<com.hp.hpl.jena.reasoner.rulesys.Functor: java.lang.String getName()>();

        r11 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.Functor: com.hp.hpl.jena.graph.Node makeFunctorNode(java.lang.String,com.hp.hpl.jena.graph.Node[])>($r6, r12);

     label7:
        return r11;

     label8:
        return $r2;

     label9:
        return r0;
    }

    private com.hp.hpl.jena.graph.Node standardize(com.hp.hpl.jena.graph.Node, java.util.Map)
    {
        com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable $r3, $r4, $r7;
        com.hp.hpl.jena.graph.Node r0, $r1, $r2, r9;
        java.util.Map r5;
        com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter r8;
        java.lang.Object $r6;
        boolean $z0;

        r8 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        r5 := @parameter1: java.util.Map;

        $r1 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: com.hp.hpl.jena.graph.Node deref(com.hp.hpl.jena.graph.Node)>(r0);

        $r2 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        if r0 == $r2 goto label1;

        $r4 = <com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable: com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable WILD>;

        if r0 != $r4 goto label2;

     label1:
        $r3 = new com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable;

        specialinvoke $r3.<com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable: void <init>(java.lang.String,int)>(null, 0);

        return $r3;

     label2:
        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.graph.Node: boolean isVariable()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r9 = (com.hp.hpl.jena.graph.Node) $r6;

        if r9 != null goto label3;

        $r7 = new com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable;

        specialinvoke $r7.<com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable: void <init>(java.lang.String,int)>(null, 0);

        r9 = $r7;

        interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r7);

     label3:
        return r9;

     label4:
        return $r1;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lcom/hp/hpl/jena/reasoner/rulesys/impl/LPInterpreter;");

        <com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter: org.slf4j.Logger logger> = $r0;

        return;
    }
}
