public abstract class org.jdesktop.swingx.decorator.AbstractHighlighter extends java.lang.Object implements org.jdesktop.swingx.decorator.Highlighter
{
    private transient javax.swing.event.ChangeEvent changeEvent;
    protected org.jdesktop.swingx.event.WeakEventListenerList listenerList;
    private org.jdesktop.swingx.decorator.HighlightPredicate predicate;

    public void <init>()
    {
        org.jdesktop.swingx.decorator.AbstractHighlighter r0;

        r0 := @this: org.jdesktop.swingx.decorator.AbstractHighlighter;

        specialinvoke r0.<org.jdesktop.swingx.decorator.AbstractHighlighter: void <init>(org.jdesktop.swingx.decorator.HighlightPredicate)>(null);

        return;
    }

    public void <init>(org.jdesktop.swingx.decorator.HighlightPredicate)
    {
        org.jdesktop.swingx.event.WeakEventListenerList $r1;
        org.jdesktop.swingx.decorator.HighlightPredicate r2;
        org.jdesktop.swingx.decorator.AbstractHighlighter r0;

        r0 := @this: org.jdesktop.swingx.decorator.AbstractHighlighter;

        r2 := @parameter0: org.jdesktop.swingx.decorator.HighlightPredicate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.jdesktop.swingx.event.WeakEventListenerList;

        specialinvoke $r1.<org.jdesktop.swingx.event.WeakEventListenerList: void <init>()>();

        r0.<org.jdesktop.swingx.decorator.AbstractHighlighter: org.jdesktop.swingx.event.WeakEventListenerList listenerList> = $r1;

        virtualinvoke r0.<org.jdesktop.swingx.decorator.AbstractHighlighter: void setHighlightPredicate(org.jdesktop.swingx.decorator.HighlightPredicate)>(r2);

        return;
    }

    public void setHighlightPredicate(org.jdesktop.swingx.decorator.HighlightPredicate)
    {
        org.jdesktop.swingx.decorator.HighlightPredicate $r1, r2;
        org.jdesktop.swingx.decorator.AbstractHighlighter r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.decorator.AbstractHighlighter;

        r2 := @parameter0: org.jdesktop.swingx.decorator.HighlightPredicate;

        if r2 != null goto label1;

        r2 = <org.jdesktop.swingx.decorator.HighlightPredicate: org.jdesktop.swingx.decorator.HighlightPredicate ALWAYS>;

     label1:
        $r1 = virtualinvoke r0.<org.jdesktop.swingx.decorator.AbstractHighlighter: org.jdesktop.swingx.decorator.HighlightPredicate getHighlightPredicate()>();

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.decorator.AbstractHighlighter: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r1);

        if $z0 == 0 goto label2;

        return;

     label2:
        r0.<org.jdesktop.swingx.decorator.AbstractHighlighter: org.jdesktop.swingx.decorator.HighlightPredicate predicate> = r2;

        virtualinvoke r0.<org.jdesktop.swingx.decorator.AbstractHighlighter: void fireStateChanged()>();

        return;
    }

    public org.jdesktop.swingx.decorator.HighlightPredicate getHighlightPredicate()
    {
        org.jdesktop.swingx.decorator.HighlightPredicate $r1;
        org.jdesktop.swingx.decorator.AbstractHighlighter r0;

        r0 := @this: org.jdesktop.swingx.decorator.AbstractHighlighter;

        $r1 = r0.<org.jdesktop.swingx.decorator.AbstractHighlighter: org.jdesktop.swingx.decorator.HighlightPredicate predicate>;

        return $r1;
    }

    public java.awt.Component highlight(java.awt.Component, org.jdesktop.swingx.decorator.ComponentAdapter)
    {
        org.jdesktop.swingx.decorator.HighlightPredicate $r2;
        org.jdesktop.swingx.decorator.AbstractHighlighter r0;
        org.jdesktop.swingx.decorator.ComponentAdapter r1;
        java.awt.Component r3;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.swingx.decorator.AbstractHighlighter;

        r3 := @parameter0: java.awt.Component;

        r1 := @parameter1: org.jdesktop.swingx.decorator.ComponentAdapter;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.decorator.AbstractHighlighter: boolean canHighlight(java.awt.Component,org.jdesktop.swingx.decorator.ComponentAdapter)>(r3, r1);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.decorator.AbstractHighlighter: org.jdesktop.swingx.decorator.HighlightPredicate getHighlightPredicate()>();

        $z1 = interfaceinvoke $r2.<org.jdesktop.swingx.decorator.HighlightPredicate: boolean isHighlighted(java.awt.Component,org.jdesktop.swingx.decorator.ComponentAdapter)>(r3, r1);

        if $z1 == 0 goto label1;

        r3 = virtualinvoke r0.<org.jdesktop.swingx.decorator.AbstractHighlighter: java.awt.Component doHighlight(java.awt.Component,org.jdesktop.swingx.decorator.ComponentAdapter)>(r3, r1);

     label1:
        return r3;
    }

    protected boolean canHighlight(java.awt.Component, org.jdesktop.swingx.decorator.ComponentAdapter)
    {
        org.jdesktop.swingx.decorator.ComponentAdapter r2;
        org.jdesktop.swingx.decorator.AbstractHighlighter r0;
        java.awt.Component r1;

        r0 := @this: org.jdesktop.swingx.decorator.AbstractHighlighter;

        r1 := @parameter0: java.awt.Component;

        r2 := @parameter1: org.jdesktop.swingx.decorator.ComponentAdapter;

        return 1;
    }

    protected abstract java.awt.Component doHighlight(java.awt.Component, org.jdesktop.swingx.decorator.ComponentAdapter);

    protected boolean areEqual(java.lang.Object, java.lang.Object)
    {
        org.jdesktop.swingx.decorator.AbstractHighlighter r2;
        java.lang.Object r0, r1;
        boolean $z0;

        r2 := @this: org.jdesktop.swingx.decorator.AbstractHighlighter;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        if r1 != null goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        return $z0;

     label2:
        return 0;
    }

    public final void addChangeListener(javax.swing.event.ChangeListener)
    {
        javax.swing.event.ChangeListener r1;
        org.jdesktop.swingx.event.WeakEventListenerList $r2;
        org.jdesktop.swingx.decorator.AbstractHighlighter r0;

        r0 := @this: org.jdesktop.swingx.decorator.AbstractHighlighter;

        r1 := @parameter0: javax.swing.event.ChangeListener;

        $r2 = r0.<org.jdesktop.swingx.decorator.AbstractHighlighter: org.jdesktop.swingx.event.WeakEventListenerList listenerList>;

        virtualinvoke $r2.<org.jdesktop.swingx.event.WeakEventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "Ljavax/swing/event/ChangeListener;", r1);

        return;
    }

    public final void removeChangeListener(javax.swing.event.ChangeListener)
    {
        javax.swing.event.ChangeListener r1;
        org.jdesktop.swingx.event.WeakEventListenerList $r2;
        org.jdesktop.swingx.decorator.AbstractHighlighter r0;

        r0 := @this: org.jdesktop.swingx.decorator.AbstractHighlighter;

        r1 := @parameter0: javax.swing.event.ChangeListener;

        $r2 = r0.<org.jdesktop.swingx.decorator.AbstractHighlighter: org.jdesktop.swingx.event.WeakEventListenerList listenerList>;

        virtualinvoke $r2.<org.jdesktop.swingx.event.WeakEventListenerList: void remove(java.lang.Class,java.util.EventListener)>(class "Ljavax/swing/event/ChangeListener;", r1);

        return;
    }

    public final javax.swing.event.ChangeListener[] getChangeListeners()
    {
        java.util.EventListener[] $r2;
        org.jdesktop.swingx.decorator.AbstractHighlighter r0;
        javax.swing.event.ChangeListener[] $r3, $r4;
        org.jdesktop.swingx.event.WeakEventListenerList $r1;

        r0 := @this: org.jdesktop.swingx.decorator.AbstractHighlighter;

        $r1 = r0.<org.jdesktop.swingx.decorator.AbstractHighlighter: org.jdesktop.swingx.event.WeakEventListenerList listenerList>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.event.WeakEventListenerList: java.util.EventListener[] getListeners(java.lang.Class)>(class "Ljavax/swing/event/ChangeListener;");

        $r3 = (javax.swing.event.ChangeListener[]) $r2;

        $r4 = (javax.swing.event.ChangeListener[]) $r3;

        return $r4;
    }

    protected final void fireStateChanged()
    {
        javax.swing.event.ChangeEvent $r4, $r6, $r9;
        java.lang.Object[] $r2;
        org.jdesktop.swingx.decorator.AbstractHighlighter r0;
        int $i0, $i1, i2, $i4;
        java.lang.Object $r3, $r5;
        org.jdesktop.swingx.event.WeakEventListenerList $r1;
        javax.swing.event.ChangeListener $r7;

        r0 := @this: org.jdesktop.swingx.decorator.AbstractHighlighter;

        $r1 = r0.<org.jdesktop.swingx.decorator.AbstractHighlighter: org.jdesktop.swingx.event.WeakEventListenerList listenerList>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.event.WeakEventListenerList: java.lang.Object[] getListenerList()>();

        $i0 = lengthof $r2;

        i2 = $i0 - 2;

     label1:
        if i2 < 0 goto label4;

        $r3 = $r2[i2];

        if $r3 != class "Ljavax/swing/event/ChangeListener;" goto label3;

        $r4 = r0.<org.jdesktop.swingx.decorator.AbstractHighlighter: javax.swing.event.ChangeEvent changeEvent>;

        if $r4 != null goto label2;

        $r9 = new javax.swing.event.ChangeEvent;

        specialinvoke $r9.<javax.swing.event.ChangeEvent: void <init>(java.lang.Object)>(r0);

        r0.<org.jdesktop.swingx.decorator.AbstractHighlighter: javax.swing.event.ChangeEvent changeEvent> = $r9;

     label2:
        $i1 = i2 + 1;

        $r5 = $r2[$i1];

        $r7 = (javax.swing.event.ChangeListener) $r5;

        $r6 = r0.<org.jdesktop.swingx.decorator.AbstractHighlighter: javax.swing.event.ChangeEvent changeEvent>;

        interfaceinvoke $r7.<javax.swing.event.ChangeListener: void stateChanged(javax.swing.event.ChangeEvent)>($r6);

     label3:
        $i4 = (int) -2;

        i2 = i2 + $i4;

        goto label1;

     label4:
        return;
    }
}
