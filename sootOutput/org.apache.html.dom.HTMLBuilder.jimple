public class org.apache.html.dom.HTMLBuilder extends java.lang.Object implements org.xml.sax.DocumentHandler
{
    protected org.apache.html.dom.HTMLDocumentImpl _document;
    protected org.apache.xerces.dom.ElementImpl _current;
    private boolean _ignoreWhitespace;
    private boolean _done;
    protected java.util.Vector _preRootNodes;

    public void <init>()
    {
        org.apache.html.dom.HTMLBuilder r0;

        r0 := @this: org.apache.html.dom.HTMLBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.html.dom.HTMLBuilder: boolean _ignoreWhitespace> = 1;

        r0.<org.apache.html.dom.HTMLBuilder: boolean _done> = 1;

        return;
    }

    public void startDocument() throws org.xml.sax.SAXException
    {
        org.apache.html.dom.HTMLBuilder r0;
        boolean $z0;
        org.xml.sax.SAXException $r1;

        r0 := @this: org.apache.html.dom.HTMLBuilder;

        $z0 = r0.<org.apache.html.dom.HTMLBuilder: boolean _done>;

        if $z0 != 0 goto label1;

        $r1 = new org.xml.sax.SAXException;

        specialinvoke $r1.<org.xml.sax.SAXException: void <init>(java.lang.String)>("HTM001 State error: startDocument fired twice on one builder.");

        throw $r1;

     label1:
        r0.<org.apache.html.dom.HTMLBuilder: org.apache.html.dom.HTMLDocumentImpl _document> = null;

        r0.<org.apache.html.dom.HTMLBuilder: boolean _done> = 0;

        return;
    }

    public void endDocument() throws org.xml.sax.SAXException
    {
        org.apache.html.dom.HTMLDocumentImpl $r1;
        org.xml.sax.SAXException $r3, $r4;
        org.apache.xerces.dom.ElementImpl $r2;
        org.apache.html.dom.HTMLBuilder r0;

        r0 := @this: org.apache.html.dom.HTMLBuilder;

        $r1 = r0.<org.apache.html.dom.HTMLBuilder: org.apache.html.dom.HTMLDocumentImpl _document>;

        if $r1 != null goto label1;

        $r4 = new org.xml.sax.SAXException;

        specialinvoke $r4.<org.xml.sax.SAXException: void <init>(java.lang.String)>("HTM002 State error: document never started or missing document element.");

        throw $r4;

     label1:
        $r2 = r0.<org.apache.html.dom.HTMLBuilder: org.apache.xerces.dom.ElementImpl _current>;

        if $r2 == null goto label2;

        $r3 = new org.xml.sax.SAXException;

        specialinvoke $r3.<org.xml.sax.SAXException: void <init>(java.lang.String)>("HTM003 State error: document ended before end of document element.");

        throw $r3;

     label2:
        r0.<org.apache.html.dom.HTMLBuilder: org.apache.xerces.dom.ElementImpl _current> = null;

        r0.<org.apache.html.dom.HTMLBuilder: boolean _done> = 1;

        return;
    }

    public synchronized void startElement(java.lang.String, org.xml.sax.AttributeList) throws org.xml.sax.SAXException
    {
        org.xml.sax.AttributeList r7;
        org.apache.html.dom.HTMLDocumentImpl $r2, $r4, $r12, $r18, $r25;
        java.util.Vector $r15, $r16, $r17;
        org.w3c.dom.Node $r20;
        int $i0, $i1, i2, i3, $i5;
        java.lang.String r0, $r8, $r9;
        org.apache.xerces.dom.ElementImpl $r3, $r6, $r14, r23;
        org.apache.html.dom.HTMLBuilder r1;
        org.w3c.dom.Element $r5, $r13;
        org.xml.sax.SAXException $r24, $r26, $r27;
        java.lang.Object $r19;

        r1 := @this: org.apache.html.dom.HTMLBuilder;

        r0 := @parameter0: java.lang.String;

        r7 := @parameter1: org.xml.sax.AttributeList;

        if r0 != null goto label01;

        $r24 = new org.xml.sax.SAXException;

        specialinvoke $r24.<org.xml.sax.SAXException: void <init>(java.lang.String)>("HTM004 Argument \'tagName\' is null.");

        throw $r24;

     label01:
        $r2 = r1.<org.apache.html.dom.HTMLBuilder: org.apache.html.dom.HTMLDocumentImpl _document>;

        if $r2 != null goto label05;

        $r25 = new org.apache.html.dom.HTMLDocumentImpl;

        specialinvoke $r25.<org.apache.html.dom.HTMLDocumentImpl: void <init>()>();

        r1.<org.apache.html.dom.HTMLBuilder: org.apache.html.dom.HTMLDocumentImpl _document> = $r25;

        $r12 = r1.<org.apache.html.dom.HTMLBuilder: org.apache.html.dom.HTMLDocumentImpl _document>;

        $r13 = virtualinvoke $r12.<org.apache.html.dom.HTMLDocumentImpl: org.w3c.dom.Element getDocumentElement()>();

        r23 = (org.apache.xerces.dom.ElementImpl) $r13;

        r1.<org.apache.html.dom.HTMLBuilder: org.apache.xerces.dom.ElementImpl _current> = r23;

        $r14 = r1.<org.apache.html.dom.HTMLBuilder: org.apache.xerces.dom.ElementImpl _current>;

        if $r14 != null goto label02;

        $r26 = new org.xml.sax.SAXException;

        specialinvoke $r26.<org.xml.sax.SAXException: void <init>(java.lang.String)>("HTM005 State error: Document.getDocumentElement returns null.");

        throw $r26;

     label02:
        $r15 = r1.<org.apache.html.dom.HTMLBuilder: java.util.Vector _preRootNodes>;

        if $r15 == null goto label07;

        $r16 = r1.<org.apache.html.dom.HTMLBuilder: java.util.Vector _preRootNodes>;

        i2 = virtualinvoke $r16.<java.util.Vector: int size()>();

        goto label04;

     label03:
        $r18 = r1.<org.apache.html.dom.HTMLBuilder: org.apache.html.dom.HTMLDocumentImpl _document>;

        $r17 = r1.<org.apache.html.dom.HTMLBuilder: java.util.Vector _preRootNodes>;

        $r19 = virtualinvoke $r17.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        $r20 = (org.w3c.dom.Node) $r19;

        virtualinvoke $r18.<org.apache.html.dom.HTMLDocumentImpl: org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)>($r20, r23);

     label04:
        $i1 = i2;

        $i5 = (int) -1;

        i2 = i2 + $i5;

        if $i1 > 0 goto label03;

        r1.<org.apache.html.dom.HTMLBuilder: java.util.Vector _preRootNodes> = null;

        goto label07;

     label05:
        $r3 = r1.<org.apache.html.dom.HTMLBuilder: org.apache.xerces.dom.ElementImpl _current>;

        if $r3 != null goto label06;

        $r27 = new org.xml.sax.SAXException;

        specialinvoke $r27.<org.xml.sax.SAXException: void <init>(java.lang.String)>("HTM006 State error: startElement called after end of document element.");

        throw $r27;

     label06:
        $r4 = r1.<org.apache.html.dom.HTMLBuilder: org.apache.html.dom.HTMLDocumentImpl _document>;

        $r5 = virtualinvoke $r4.<org.apache.html.dom.HTMLDocumentImpl: org.w3c.dom.Element createElement(java.lang.String)>(r0);

        r23 = (org.apache.xerces.dom.ElementImpl) $r5;

        $r6 = r1.<org.apache.html.dom.HTMLBuilder: org.apache.xerces.dom.ElementImpl _current>;

        virtualinvoke $r6.<org.apache.xerces.dom.ElementImpl: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r23);

        r1.<org.apache.html.dom.HTMLBuilder: org.apache.xerces.dom.ElementImpl _current> = r23;

     label07:
        if r7 == null goto label10;

        i3 = 0;

        goto label09;

     label08:
        $r8 = interfaceinvoke r7.<org.xml.sax.AttributeList: java.lang.String getName(int)>(i3);

        $r9 = interfaceinvoke r7.<org.xml.sax.AttributeList: java.lang.String getValue(int)>(i3);

        virtualinvoke r23.<org.apache.xerces.dom.ElementImpl: void setAttribute(java.lang.String,java.lang.String)>($r8, $r9);

        i3 = i3 + 1;

     label09:
        $i0 = interfaceinvoke r7.<org.xml.sax.AttributeList: int getLength()>();

        if i3 < $i0 goto label08;

     label10:
        return;
    }

    public void endElement(java.lang.String) throws org.xml.sax.SAXException
    {
        org.w3c.dom.Document $r8;
        java.lang.StringBuffer $r13, $r14, $r15, $r16, $r17;
        org.w3c.dom.Node $r6, $r10;
        java.lang.String $r3, r4, $r18;
        boolean $z0;
        org.apache.xerces.dom.ElementImpl $r1, $r2, $r5, $r7, $r9, $r11;
        org.apache.html.dom.HTMLBuilder r0;
        org.xml.sax.SAXException $r12, $r19;

        r0 := @this: org.apache.html.dom.HTMLBuilder;

        r4 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.html.dom.HTMLBuilder: org.apache.xerces.dom.ElementImpl _current>;

        if $r1 != null goto label1;

        $r19 = new org.xml.sax.SAXException;

        specialinvoke $r19.<org.xml.sax.SAXException: void <init>(java.lang.String)>("HTM007 State error: endElement called with no current node.");

        throw $r19;

     label1:
        $r2 = r0.<org.apache.html.dom.HTMLBuilder: org.apache.xerces.dom.ElementImpl _current>;

        $r3 = virtualinvoke $r2.<org.apache.xerces.dom.ElementImpl: java.lang.String getNodeName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r4);

        if $z0 != 0 goto label2;

        $r12 = new org.xml.sax.SAXException;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("HTM008 State error: mismatch in closing tag name ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r12.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r18);

        throw $r12;

     label2:
        $r5 = r0.<org.apache.html.dom.HTMLBuilder: org.apache.xerces.dom.ElementImpl _current>;

        $r6 = virtualinvoke $r5.<org.apache.xerces.dom.ElementImpl: org.w3c.dom.Node getParentNode()>();

        $r7 = r0.<org.apache.html.dom.HTMLBuilder: org.apache.xerces.dom.ElementImpl _current>;

        $r8 = virtualinvoke $r7.<org.apache.xerces.dom.ElementImpl: org.w3c.dom.Document getOwnerDocument()>();

        if $r6 != $r8 goto label3;

        r0.<org.apache.html.dom.HTMLBuilder: org.apache.xerces.dom.ElementImpl _current> = null;

        goto label4;

     label3:
        $r9 = r0.<org.apache.html.dom.HTMLBuilder: org.apache.xerces.dom.ElementImpl _current>;

        $r10 = virtualinvoke $r9.<org.apache.xerces.dom.ElementImpl: org.w3c.dom.Node getParentNode()>();

        $r11 = (org.apache.xerces.dom.ElementImpl) $r10;

        r0.<org.apache.html.dom.HTMLBuilder: org.apache.xerces.dom.ElementImpl _current> = $r11;

     label4:
        return;
    }

    public void characters(java.lang.String) throws org.xml.sax.SAXException
    {
        org.w3c.dom.Text $r5;
        org.apache.html.dom.HTMLDocumentImpl $r3;
        org.xml.sax.SAXException $r6;
        org.apache.xerces.dom.ElementImpl $r1, $r4;
        java.lang.String r2;
        org.apache.html.dom.HTMLBuilder r0;

        r0 := @this: org.apache.html.dom.HTMLBuilder;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.html.dom.HTMLBuilder: org.apache.xerces.dom.ElementImpl _current>;

        if $r1 != null goto label1;

        $r6 = new org.xml.sax.SAXException;

        specialinvoke $r6.<org.xml.sax.SAXException: void <init>(java.lang.String)>("HTM009 State error: character data found outside of root element.");

        throw $r6;

     label1:
        $r4 = r0.<org.apache.html.dom.HTMLBuilder: org.apache.xerces.dom.ElementImpl _current>;

        $r3 = r0.<org.apache.html.dom.HTMLBuilder: org.apache.html.dom.HTMLDocumentImpl _document>;

        $r5 = virtualinvoke $r3.<org.apache.html.dom.HTMLDocumentImpl: org.w3c.dom.Text createTextNode(java.lang.String)>(r2);

        virtualinvoke $r4.<org.apache.xerces.dom.ElementImpl: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r5);

        return;
    }

    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        org.w3c.dom.Text $r6;
        org.apache.xerces.dom.ElementImpl $r1, $r4;
        org.apache.html.dom.HTMLBuilder r0;
        org.apache.html.dom.HTMLDocumentImpl $r5;
        org.xml.sax.SAXException $r7;
        int i0, i1;
        char[] r3;
        java.lang.String $r2;

        r0 := @this: org.apache.html.dom.HTMLBuilder;

        r3 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = r0.<org.apache.html.dom.HTMLBuilder: org.apache.xerces.dom.ElementImpl _current>;

        if $r1 != null goto label1;

        $r7 = new org.xml.sax.SAXException;

        specialinvoke $r7.<org.xml.sax.SAXException: void <init>(java.lang.String)>("HTM010 State error: character data found outside of root element.");

        throw $r7;

     label1:
        $r4 = r0.<org.apache.html.dom.HTMLBuilder: org.apache.xerces.dom.ElementImpl _current>;

        $r5 = r0.<org.apache.html.dom.HTMLBuilder: org.apache.html.dom.HTMLDocumentImpl _document>;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>(r3, i0, i1);

        $r6 = virtualinvoke $r5.<org.apache.html.dom.HTMLDocumentImpl: org.w3c.dom.Text createTextNode(java.lang.String)>($r2);

        virtualinvoke $r4.<org.apache.xerces.dom.ElementImpl: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r6);

        return;
    }

    public void ignorableWhitespace(char[], int, int) throws org.xml.sax.SAXException
    {
        org.w3c.dom.Text $r5;
        org.apache.xerces.dom.ElementImpl $r3;
        org.apache.html.dom.HTMLBuilder r0;
        org.apache.html.dom.HTMLDocumentImpl $r4;
        int i0, i1;
        char[] r2;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.html.dom.HTMLBuilder;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = r0.<org.apache.html.dom.HTMLBuilder: boolean _ignoreWhitespace>;

        if $z0 != 0 goto label1;

        $r3 = r0.<org.apache.html.dom.HTMLBuilder: org.apache.xerces.dom.ElementImpl _current>;

        $r4 = r0.<org.apache.html.dom.HTMLBuilder: org.apache.html.dom.HTMLDocumentImpl _document>;

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(r2, i0, i1);

        $r5 = virtualinvoke $r4.<org.apache.html.dom.HTMLDocumentImpl: org.w3c.dom.Text createTextNode(java.lang.String)>($r1);

        virtualinvoke $r3.<org.apache.xerces.dom.ElementImpl: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r5);

     label1:
        return;
    }

    public void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xerces.dom.ProcessingInstructionImpl $r14;
        org.w3c.dom.ProcessingInstruction $r7, $r11;
        org.apache.html.dom.HTMLDocumentImpl $r5, $r8, $r9, $r10, $r12;
        java.util.Vector $r13, $r15, $r16;
        java.lang.String r3, r4;
        org.apache.xerces.dom.ElementImpl $r1, $r2, $r6;
        org.apache.html.dom.HTMLBuilder r0;

        r0 := @this: org.apache.html.dom.HTMLBuilder;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r1 = r0.<org.apache.html.dom.HTMLBuilder: org.apache.xerces.dom.ElementImpl _current>;

        if $r1 != null goto label2;

        $r12 = r0.<org.apache.html.dom.HTMLBuilder: org.apache.html.dom.HTMLDocumentImpl _document>;

        if $r12 != null goto label2;

        $r13 = r0.<org.apache.html.dom.HTMLBuilder: java.util.Vector _preRootNodes>;

        if $r13 != null goto label1;

        $r16 = new java.util.Vector;

        specialinvoke $r16.<java.util.Vector: void <init>()>();

        r0.<org.apache.html.dom.HTMLBuilder: java.util.Vector _preRootNodes> = $r16;

     label1:
        $r15 = r0.<org.apache.html.dom.HTMLBuilder: java.util.Vector _preRootNodes>;

        $r14 = new org.apache.xerces.dom.ProcessingInstructionImpl;

        specialinvoke $r14.<org.apache.xerces.dom.ProcessingInstructionImpl: void <init>(org.apache.xerces.dom.CoreDocumentImpl,java.lang.String,java.lang.String)>(null, r3, r4);

        virtualinvoke $r15.<java.util.Vector: void addElement(java.lang.Object)>($r14);

        goto label4;

     label2:
        $r2 = r0.<org.apache.html.dom.HTMLBuilder: org.apache.xerces.dom.ElementImpl _current>;

        if $r2 != null goto label3;

        $r8 = r0.<org.apache.html.dom.HTMLBuilder: org.apache.html.dom.HTMLDocumentImpl _document>;

        if $r8 == null goto label3;

        $r10 = r0.<org.apache.html.dom.HTMLBuilder: org.apache.html.dom.HTMLDocumentImpl _document>;

        $r9 = r0.<org.apache.html.dom.HTMLBuilder: org.apache.html.dom.HTMLDocumentImpl _document>;

        $r11 = virtualinvoke $r9.<org.apache.html.dom.HTMLDocumentImpl: org.w3c.dom.ProcessingInstruction createProcessingInstruction(java.lang.String,java.lang.String)>(r3, r4);

        virtualinvoke $r10.<org.apache.html.dom.HTMLDocumentImpl: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r11);

        goto label4;

     label3:
        $r6 = r0.<org.apache.html.dom.HTMLBuilder: org.apache.xerces.dom.ElementImpl _current>;

        $r5 = r0.<org.apache.html.dom.HTMLBuilder: org.apache.html.dom.HTMLDocumentImpl _document>;

        $r7 = virtualinvoke $r5.<org.apache.html.dom.HTMLDocumentImpl: org.w3c.dom.ProcessingInstruction createProcessingInstruction(java.lang.String,java.lang.String)>(r3, r4);

        virtualinvoke $r6.<org.apache.xerces.dom.ElementImpl: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r7);

     label4:
        return;
    }

    public org.w3c.dom.html.HTMLDocument getHTMLDocument()
    {
        org.apache.html.dom.HTMLDocumentImpl $r1;
        org.apache.html.dom.HTMLBuilder r0;

        r0 := @this: org.apache.html.dom.HTMLBuilder;

        $r1 = r0.<org.apache.html.dom.HTMLBuilder: org.apache.html.dom.HTMLDocumentImpl _document>;

        return $r1;
    }

    public void setDocumentLocator(org.xml.sax.Locator)
    {
        org.apache.html.dom.HTMLBuilder r0;
        org.xml.sax.Locator r1;

        r0 := @this: org.apache.html.dom.HTMLBuilder;

        r1 := @parameter0: org.xml.sax.Locator;

        return;
    }
}
