public class org.waveprotocol.box.server.waveserver.WaveletDeltaRecord extends java.lang.Object
{
    public final org.waveprotocol.wave.model.version.HashedVersion appliedAtVersion;
    public final org.waveprotocol.box.server.waveserver.ByteStringMessage applied;
    public final org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta transformed;

    public void <init>(org.waveprotocol.wave.model.version.HashedVersion, org.waveprotocol.box.server.waveserver.ByteStringMessage, org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta)
    {
        org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta r1;
        org.waveprotocol.wave.model.version.HashedVersion r2;
        org.waveprotocol.box.server.waveserver.WaveletDeltaRecord r0;
        org.waveprotocol.box.server.waveserver.ByteStringMessage r3;

        r0 := @this: org.waveprotocol.box.server.waveserver.WaveletDeltaRecord;

        r2 := @parameter0: org.waveprotocol.wave.model.version.HashedVersion;

        r3 := @parameter1: org.waveprotocol.box.server.waveserver.ByteStringMessage;

        r1 := @parameter2: org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "null appliedAtVersion");

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "null transformed delta");

        r0.<org.waveprotocol.box.server.waveserver.WaveletDeltaRecord: org.waveprotocol.wave.model.version.HashedVersion appliedAtVersion> = r2;

        r0.<org.waveprotocol.box.server.waveserver.WaveletDeltaRecord: org.waveprotocol.box.server.waveserver.ByteStringMessage applied> = r3;

        r0.<org.waveprotocol.box.server.waveserver.WaveletDeltaRecord: org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta transformed> = r1;

        return;
    }

    public org.waveprotocol.box.server.waveserver.ByteStringMessage getAppliedDelta()
    {
        org.waveprotocol.box.server.waveserver.WaveletDeltaRecord r0;
        org.waveprotocol.box.server.waveserver.ByteStringMessage $r1;

        r0 := @this: org.waveprotocol.box.server.waveserver.WaveletDeltaRecord;

        $r1 = r0.<org.waveprotocol.box.server.waveserver.WaveletDeltaRecord: org.waveprotocol.box.server.waveserver.ByteStringMessage applied>;

        return $r1;
    }

    public org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta getTransformedDelta()
    {
        org.waveprotocol.box.server.waveserver.WaveletDeltaRecord r0;
        org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta $r1;

        r0 := @this: org.waveprotocol.box.server.waveserver.WaveletDeltaRecord;

        $r1 = r0.<org.waveprotocol.box.server.waveserver.WaveletDeltaRecord: org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta transformed>;

        return $r1;
    }

    public boolean isEmpty()
    {
        org.waveprotocol.box.server.waveserver.WaveletDeltaRecord r0;
        org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.server.waveserver.WaveletDeltaRecord;

        $r1 = r0.<org.waveprotocol.box.server.waveserver.WaveletDeltaRecord: org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta transformed>;

        $z0 = virtualinvoke $r1.<org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta: boolean isEmpty()>();

        return $z0;
    }

    public org.waveprotocol.wave.model.version.HashedVersion getAppliedAtVersion()
    {
        org.waveprotocol.wave.model.version.HashedVersion $r1;
        org.waveprotocol.box.server.waveserver.WaveletDeltaRecord r0;

        r0 := @this: org.waveprotocol.box.server.waveserver.WaveletDeltaRecord;

        $r1 = r0.<org.waveprotocol.box.server.waveserver.WaveletDeltaRecord: org.waveprotocol.wave.model.version.HashedVersion appliedAtVersion>;

        return $r1;
    }

    public org.waveprotocol.wave.model.wave.ParticipantId getAuthor()
    {
        org.waveprotocol.box.server.waveserver.WaveletDeltaRecord r0;
        org.waveprotocol.wave.model.wave.ParticipantId $r2;
        org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta $r1;

        r0 := @this: org.waveprotocol.box.server.waveserver.WaveletDeltaRecord;

        $r1 = r0.<org.waveprotocol.box.server.waveserver.WaveletDeltaRecord: org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta transformed>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta: org.waveprotocol.wave.model.wave.ParticipantId getAuthor()>();

        return $r2;
    }

    public org.waveprotocol.wave.model.version.HashedVersion getResultingVersion()
    {
        org.waveprotocol.wave.model.version.HashedVersion $r2;
        org.waveprotocol.box.server.waveserver.WaveletDeltaRecord r0;
        org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta $r1;

        r0 := @this: org.waveprotocol.box.server.waveserver.WaveletDeltaRecord;

        $r1 = r0.<org.waveprotocol.box.server.waveserver.WaveletDeltaRecord: org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta transformed>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta: org.waveprotocol.wave.model.version.HashedVersion getResultingVersion()>();

        return $r2;
    }

    public long getApplicationTimestamp()
    {
        org.waveprotocol.box.server.waveserver.WaveletDeltaRecord r0;
        long $l0;
        org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta $r1;

        r0 := @this: org.waveprotocol.box.server.waveserver.WaveletDeltaRecord;

        $r1 = r0.<org.waveprotocol.box.server.waveserver.WaveletDeltaRecord: org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta transformed>;

        $l0 = virtualinvoke $r1.<org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta: long getApplicationTimestamp()>();

        return $l0;
    }

    public int hashCode()
    {
        org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta $r3, $r4;
        org.waveprotocol.box.server.waveserver.ByteStringMessage $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4;
        org.waveprotocol.box.server.waveserver.WaveletDeltaRecord r0;

        r0 := @this: org.waveprotocol.box.server.waveserver.WaveletDeltaRecord;

        $r1 = r0.<org.waveprotocol.box.server.waveserver.WaveletDeltaRecord: org.waveprotocol.box.server.waveserver.ByteStringMessage applied>;

        if $r1 != null goto label1;

        $i3 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.waveprotocol.box.server.waveserver.WaveletDeltaRecord: org.waveprotocol.box.server.waveserver.ByteStringMessage applied>;

        $i3 = virtualinvoke $r2.<org.waveprotocol.box.server.waveserver.ByteStringMessage: int hashCode()>();

     label2:
        $i2 = 31 + $i3;

        $i0 = 31 * $i2;

        $r3 = r0.<org.waveprotocol.box.server.waveserver.WaveletDeltaRecord: org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta transformed>;

        if $r3 != null goto label3;

        $i4 = 0;

        goto label4;

     label3:
        $r4 = r0.<org.waveprotocol.box.server.waveserver.WaveletDeltaRecord: org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta transformed>;

        $i4 = virtualinvoke $r4.<org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta: int hashCode()>();

     label4:
        $i1 = $i0 + $i4;

        return $i1;
    }

    public boolean equals(java.lang.Object)
    {
        org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta $r8, $r9, $r10, $r11;
        org.waveprotocol.box.server.waveserver.ByteStringMessage $r5, $r6, $r7, $r12;
        org.waveprotocol.box.server.waveserver.WaveletDeltaRecord r0, r4;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.box.server.waveserver.WaveletDeltaRecord;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

        return 0;

     label3:
        r4 = (org.waveprotocol.box.server.waveserver.WaveletDeltaRecord) r1;

        $r5 = r0.<org.waveprotocol.box.server.waveserver.WaveletDeltaRecord: org.waveprotocol.box.server.waveserver.ByteStringMessage applied>;

        if $r5 != null goto label4;

        $r12 = r4.<org.waveprotocol.box.server.waveserver.WaveletDeltaRecord: org.waveprotocol.box.server.waveserver.ByteStringMessage applied>;

        if $r12 == null goto label5;

        return 0;

     label4:
        $r7 = r0.<org.waveprotocol.box.server.waveserver.WaveletDeltaRecord: org.waveprotocol.box.server.waveserver.ByteStringMessage applied>;

        $r6 = r4.<org.waveprotocol.box.server.waveserver.WaveletDeltaRecord: org.waveprotocol.box.server.waveserver.ByteStringMessage applied>;

        $z0 = virtualinvoke $r7.<org.waveprotocol.box.server.waveserver.ByteStringMessage: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label5;

        return 0;

     label5:
        $r8 = r0.<org.waveprotocol.box.server.waveserver.WaveletDeltaRecord: org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta transformed>;

        if $r8 != null goto label6;

        $r11 = r4.<org.waveprotocol.box.server.waveserver.WaveletDeltaRecord: org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta transformed>;

        if $r11 == null goto label7;

        return 0;

     label6:
        $r10 = r0.<org.waveprotocol.box.server.waveserver.WaveletDeltaRecord: org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta transformed>;

        $r9 = r4.<org.waveprotocol.box.server.waveserver.WaveletDeltaRecord: org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta transformed>;

        $z1 = virtualinvoke $r10.<org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta: boolean equals(java.lang.Object)>($r9);

        if $z1 != 0 goto label7;

        return 0;

     label7:
        return 1;
    }
}
