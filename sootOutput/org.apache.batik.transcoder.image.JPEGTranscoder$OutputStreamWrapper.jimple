class org.apache.batik.transcoder.image.JPEGTranscoder$OutputStreamWrapper extends java.io.OutputStream
{
    java.io.OutputStream os;

    void <init>(java.io.OutputStream)
    {
        java.io.OutputStream r1;
        org.apache.batik.transcoder.image.JPEGTranscoder$OutputStreamWrapper r0;

        r0 := @this: org.apache.batik.transcoder.image.JPEGTranscoder$OutputStreamWrapper;

        r1 := @parameter0: java.io.OutputStream;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        r0.<org.apache.batik.transcoder.image.JPEGTranscoder$OutputStreamWrapper: java.io.OutputStream os> = r1;

        return;
    }

    public void close() throws java.io.IOException
    {
        java.io.OutputStream $r1, $r2;
        java.io.IOException $r3;
        org.apache.batik.transcoder.image.JPEGTranscoder$OutputStreamWrapper r0;

        r0 := @this: org.apache.batik.transcoder.image.JPEGTranscoder$OutputStreamWrapper;

        $r1 = r0.<org.apache.batik.transcoder.image.JPEGTranscoder$OutputStreamWrapper: java.io.OutputStream os>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<org.apache.batik.transcoder.image.JPEGTranscoder$OutputStreamWrapper: java.io.OutputStream os>;

        virtualinvoke $r2.<java.io.OutputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r0.<org.apache.batik.transcoder.image.JPEGTranscoder$OutputStreamWrapper: java.io.OutputStream os> = null;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void flush() throws java.io.IOException
    {
        java.io.OutputStream $r1, $r2;
        java.io.IOException $r3;
        org.apache.batik.transcoder.image.JPEGTranscoder$OutputStreamWrapper r0;

        r0 := @this: org.apache.batik.transcoder.image.JPEGTranscoder$OutputStreamWrapper;

        $r1 = r0.<org.apache.batik.transcoder.image.JPEGTranscoder$OutputStreamWrapper: java.io.OutputStream os>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<org.apache.batik.transcoder.image.JPEGTranscoder$OutputStreamWrapper: java.io.OutputStream os>;

        virtualinvoke $r2.<java.io.OutputStream: void flush()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r0.<org.apache.batik.transcoder.image.JPEGTranscoder$OutputStreamWrapper: java.io.OutputStream os> = null;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void write(byte[]) throws java.io.IOException
    {
        java.io.OutputStream $r1, $r3;
        byte[] r2;
        java.io.IOException $r4;
        org.apache.batik.transcoder.image.JPEGTranscoder$OutputStreamWrapper r0;

        r0 := @this: org.apache.batik.transcoder.image.JPEGTranscoder$OutputStreamWrapper;

        r2 := @parameter0: byte[];

        $r1 = r0.<org.apache.batik.transcoder.image.JPEGTranscoder$OutputStreamWrapper: java.io.OutputStream os>;

        if $r1 != null goto label1;

        return;

     label1:
        $r3 = r0.<org.apache.batik.transcoder.image.JPEGTranscoder$OutputStreamWrapper: java.io.OutputStream os>;

        virtualinvoke $r3.<java.io.OutputStream: void write(byte[])>(r2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r0.<org.apache.batik.transcoder.image.JPEGTranscoder$OutputStreamWrapper: java.io.OutputStream os> = null;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        java.io.OutputStream $r1, $r3;
        byte[] r2;
        int i0, i1;
        java.io.IOException $r4;
        org.apache.batik.transcoder.image.JPEGTranscoder$OutputStreamWrapper r0;

        r0 := @this: org.apache.batik.transcoder.image.JPEGTranscoder$OutputStreamWrapper;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = r0.<org.apache.batik.transcoder.image.JPEGTranscoder$OutputStreamWrapper: java.io.OutputStream os>;

        if $r1 != null goto label1;

        return;

     label1:
        $r3 = r0.<org.apache.batik.transcoder.image.JPEGTranscoder$OutputStreamWrapper: java.io.OutputStream os>;

        virtualinvoke $r3.<java.io.OutputStream: void write(byte[],int,int)>(r2, i0, i1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r0.<org.apache.batik.transcoder.image.JPEGTranscoder$OutputStreamWrapper: java.io.OutputStream os> = null;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void write(int) throws java.io.IOException
    {
        java.io.OutputStream $r1, $r2;
        int i0;
        java.io.IOException $r3;
        org.apache.batik.transcoder.image.JPEGTranscoder$OutputStreamWrapper r0;

        r0 := @this: org.apache.batik.transcoder.image.JPEGTranscoder$OutputStreamWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.batik.transcoder.image.JPEGTranscoder$OutputStreamWrapper: java.io.OutputStream os>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<org.apache.batik.transcoder.image.JPEGTranscoder$OutputStreamWrapper: java.io.OutputStream os>;

        virtualinvoke $r2.<java.io.OutputStream: void write(int)>(i0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r0.<org.apache.batik.transcoder.image.JPEGTranscoder$OutputStreamWrapper: java.io.OutputStream os> = null;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
