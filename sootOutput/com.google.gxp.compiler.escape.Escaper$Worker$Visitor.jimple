class com.google.gxp.compiler.escape.Escaper$Worker$Visitor extends com.google.gxp.compiler.base.ExhaustiveExpressionVisitor implements com.google.gxp.compiler.base.CallVisitor
{
    private final com.google.gxp.compiler.schema.Schema schema;
    private final java.util.Deque attrStack;
    private final com.google.gxp.com.google.common.base.Function parameterTransformer;
    private com.google.gxp.compiler.base.TypeVisitor typeVisitor;
    final com.google.gxp.compiler.escape.Escaper$Worker this$1;

    void <init>(com.google.gxp.compiler.escape.Escaper$Worker, com.google.gxp.compiler.schema.Schema)
    {
        com.google.gxp.compiler.escape.Escaper$Worker r1;
        com.google.gxp.compiler.schema.Schema r5, $r7;
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        java.lang.Object $r6;
        java.util.ArrayDeque $r2;
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor$2 $r4;
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor$1 $r3;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.escape.Escaper$Worker;

        r5 := @parameter1: com.google.gxp.compiler.schema.Schema;

        r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.escape.Escaper$Worker this$1> = r1;

        specialinvoke r0.<com.google.gxp.compiler.base.ExhaustiveExpressionVisitor: void <init>()>();

        $r2 = new java.util.ArrayDeque;

        specialinvoke $r2.<java.util.ArrayDeque: void <init>()>();

        r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: java.util.Deque attrStack> = $r2;

        $r3 = new com.google.gxp.compiler.escape.Escaper$Worker$Visitor$1;

        specialinvoke $r3.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor$1: void <init>(com.google.gxp.compiler.escape.Escaper$Worker$Visitor)>(r0);

        r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.com.google.common.base.Function parameterTransformer> = $r3;

        $r4 = new com.google.gxp.compiler.escape.Escaper$Worker$Visitor$2;

        specialinvoke $r4.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor$2: void <init>(com.google.gxp.compiler.escape.Escaper$Worker$Visitor)>(r0);

        r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.TypeVisitor typeVisitor> = $r4;

        $r6 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r5);

        $r7 = (com.google.gxp.compiler.schema.Schema) $r6;

        r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.schema.Schema schema> = $r7;

        return;
    }

    protected com.google.gxp.compiler.base.Expression postProcess(com.google.gxp.compiler.base.Expression)
    {
        com.google.gxp.compiler.base.Expression r1;
        com.google.gxp.compiler.escape.Escaper$Worker $r4;
        com.google.gxp.compiler.schema.Schema $r2, $r3, $r7, $r9;
        com.google.gxp.compiler.base.StringConstant $r8;
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        com.google.gxp.compiler.alerts.AlertSink $r5;
        boolean $z0;
        com.google.gxp.compiler.escape.TypeError $r6;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.Expression;

        $r2 = r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.schema.Schema schema>;

        $r3 = virtualinvoke r1.<com.google.gxp.compiler.base.Expression: com.google.gxp.compiler.schema.Schema getSchema()>();

        $z0 = virtualinvoke $r2.<com.google.gxp.compiler.schema.Schema: boolean allows(com.google.gxp.compiler.schema.Schema)>($r3);

        if $z0 != 0 goto label1;

        $r4 = r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.escape.Escaper$Worker this$1>;

        $r5 = staticinvoke <com.google.gxp.compiler.escape.Escaper$Worker: com.google.gxp.compiler.alerts.AlertSink access$000(com.google.gxp.compiler.escape.Escaper$Worker)>($r4);

        $r6 = new com.google.gxp.compiler.escape.TypeError;

        $r7 = r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.schema.Schema schema>;

        specialinvoke $r6.<com.google.gxp.compiler.escape.TypeError: void <init>(com.google.gxp.compiler.schema.Schema,com.google.gxp.compiler.base.Expression)>($r7, r1);

        interfaceinvoke $r5.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r6);

        $r8 = new com.google.gxp.compiler.base.StringConstant;

        $r9 = r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.schema.Schema schema>;

        specialinvoke $r8.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String)>(r1, $r9, "");

        return $r8;

     label1:
        return r1;
    }

    public com.google.gxp.compiler.base.Template visitTemplate(com.google.gxp.compiler.base.Template)
    {
        com.google.gxp.compiler.base.Expression $r4;
        com.google.gxp.compiler.schema.Schema $r3, $r5;
        java.lang.AssertionError $r6;
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        com.google.gxp.compiler.base.Template r1, $r2;
        boolean $z0;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.Template;

        $r2 = specialinvoke r0.<com.google.gxp.compiler.base.ExhaustiveExpressionVisitor: com.google.gxp.compiler.base.Template visitTemplate(com.google.gxp.compiler.base.Template)>(r1);

        $r3 = r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.schema.Schema schema>;

        $r4 = virtualinvoke $r2.<com.google.gxp.compiler.base.Template: com.google.gxp.compiler.base.Expression getContent()>();

        $r5 = virtualinvoke $r4.<com.google.gxp.compiler.base.Expression: com.google.gxp.compiler.schema.Schema getSchema()>();

        $z0 = virtualinvoke $r3.<com.google.gxp.compiler.schema.Schema: boolean allows(com.google.gxp.compiler.schema.Schema)>($r5);

        if $z0 != 0 goto label1;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label1:
        return $r2;
    }

    protected com.google.gxp.com.google.common.base.Function getParameterTransformer()
    {
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        com.google.gxp.com.google.common.base.Function $r1;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        $r1 = r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.com.google.common.base.Function parameterTransformer>;

        return $r1;
    }

    public com.google.gxp.compiler.base.Expression visitAbbrExpression(com.google.gxp.compiler.base.AbbrExpression)
    {
        com.google.gxp.compiler.base.TypeVisitor $r3;
        com.google.gxp.compiler.base.Expression $r6, $r7, $r8, $r9, $r11;
        com.google.gxp.compiler.base.AbbrExpression r0, $r10;
        com.google.gxp.compiler.base.Type $r1;
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r2, r5;
        java.lang.Object $r4;

        r2 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r0 := @parameter0: com.google.gxp.compiler.base.AbbrExpression;

        $r1 = virtualinvoke r0.<com.google.gxp.compiler.base.AbbrExpression: com.google.gxp.compiler.base.Type getType()>();

        $r3 = r2.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.TypeVisitor typeVisitor>;

        $r4 = virtualinvoke $r1.<com.google.gxp.compiler.base.Type: java.lang.Object acceptTypeVisitor(com.google.gxp.compiler.base.TypeVisitor)>($r3);

        r5 = (com.google.gxp.compiler.escape.Escaper$Worker$Visitor) $r4;

        $r6 = virtualinvoke r0.<com.google.gxp.compiler.base.AbbrExpression: com.google.gxp.compiler.base.Expression getValue()>();

        $r7 = virtualinvoke r5.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression apply(com.google.gxp.compiler.base.Expression)>($r6);

        $r8 = virtualinvoke r0.<com.google.gxp.compiler.base.AbbrExpression: com.google.gxp.compiler.base.Expression getContent()>();

        $r9 = virtualinvoke r2.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression apply(com.google.gxp.compiler.base.Expression)>($r8);

        $r10 = virtualinvoke r0.<com.google.gxp.compiler.base.AbbrExpression: com.google.gxp.compiler.base.AbbrExpression withValueAndContent(com.google.gxp.compiler.base.Expression,com.google.gxp.compiler.base.Expression)>($r7, $r9);

        $r11 = virtualinvoke r2.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression postProcess(com.google.gxp.compiler.base.Expression)>($r10);

        return $r11;
    }

    public com.google.gxp.compiler.base.Expression visitStringConstant(com.google.gxp.compiler.base.StringConstant)
    {
        com.google.gxp.compiler.base.Expression $r10;
        com.google.gxp.compiler.schema.ContentFamily $r2;
        com.google.gxp.compiler.schema.Schema $r1, $r5;
        com.google.gxp.compiler.schema.ContentFamilyVisitor $r6;
        com.google.gxp.compiler.base.StringConstant $r3, r4;
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        java.lang.Object $r8;
        java.lang.String $r7, $r9;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r4 := @parameter0: com.google.gxp.compiler.base.StringConstant;

        $r1 = r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.schema.Schema schema>;

        $r2 = virtualinvoke $r1.<com.google.gxp.compiler.schema.Schema: com.google.gxp.compiler.schema.ContentFamily getContentFamily()>();

        $r3 = new com.google.gxp.compiler.base.StringConstant;

        $r5 = r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.schema.Schema schema>;

        $r6 = staticinvoke <com.google.gxp.compiler.escape.Escaper: com.google.gxp.compiler.schema.ContentFamilyVisitor access$200()>();

        $r7 = virtualinvoke r4.<com.google.gxp.compiler.base.StringConstant: java.lang.String evaluate()>();

        $r8 = virtualinvoke $r2.<com.google.gxp.compiler.schema.ContentFamily: java.lang.Object acceptVisitor(com.google.gxp.compiler.schema.ContentFamilyVisitor,java.lang.Object)>($r6, $r7);

        $r9 = (java.lang.String) $r8;

        specialinvoke $r3.<com.google.gxp.compiler.base.StringConstant: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema,java.lang.String)>(r4, $r5, $r9);

        $r10 = virtualinvoke r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression postProcess(com.google.gxp.compiler.base.Expression)>($r3);

        return $r10;
    }

    public com.google.gxp.compiler.base.Expression visitAttrBundleParam(com.google.gxp.compiler.base.AttrBundleParam)
    {
        com.google.gxp.compiler.base.AttrBundleParam r1, $r5;
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0, $r4;
        com.google.gxp.compiler.base.Expression $r6;
        com.google.gxp.compiler.escape.Escaper$Worker $r2;
        com.google.gxp.compiler.schema.Schema $r3;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.AttrBundleParam;

        $r2 = r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.escape.Escaper$Worker this$1>;

        $r3 = virtualinvoke r1.<com.google.gxp.compiler.base.AttrBundleParam: com.google.gxp.compiler.schema.Schema getSchema()>();

        $r4 = staticinvoke <com.google.gxp.compiler.escape.Escaper$Worker: com.google.gxp.compiler.escape.Escaper$Worker$Visitor access$300(com.google.gxp.compiler.escape.Escaper$Worker,com.google.gxp.compiler.schema.Schema)>($r2, $r3);

        $r5 = virtualinvoke r1.<com.google.gxp.compiler.base.AttrBundleParam: com.google.gxp.compiler.base.AttrBundleParam transform(com.google.gxp.compiler.base.ExhaustiveExpressionVisitor)>($r4);

        $r6 = virtualinvoke r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression postProcess(com.google.gxp.compiler.base.Expression)>($r5);

        return $r6;
    }

    public com.google.gxp.compiler.base.Expression visitBooleanConstant(com.google.gxp.compiler.base.BooleanConstant)
    {
        com.google.gxp.compiler.base.BooleanConstant r2;
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r4;
        com.google.gxp.compiler.schema.Schema $r3;
        com.google.gxp.compiler.base.EscapeExpression $r1;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r2 := @parameter0: com.google.gxp.compiler.base.BooleanConstant;

        $r1 = new com.google.gxp.compiler.base.EscapeExpression;

        $r3 = r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.schema.Schema schema>;

        specialinvoke $r1.<com.google.gxp.compiler.base.EscapeExpression: void <init>(com.google.gxp.compiler.schema.Schema,com.google.gxp.compiler.base.Expression)>($r3, r2);

        $r4 = virtualinvoke r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression postProcess(com.google.gxp.compiler.base.Expression)>($r1);

        return $r4;
    }

    public com.google.gxp.compiler.base.Expression visitObjectConstant(com.google.gxp.compiler.base.ObjectConstant)
    {
        com.google.gxp.compiler.base.ObjectConstant r2;
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r4;
        com.google.gxp.compiler.schema.Schema $r3;
        com.google.gxp.compiler.base.EscapeExpression $r1;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r2 := @parameter0: com.google.gxp.compiler.base.ObjectConstant;

        $r1 = new com.google.gxp.compiler.base.EscapeExpression;

        $r3 = r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.schema.Schema schema>;

        specialinvoke $r1.<com.google.gxp.compiler.base.EscapeExpression: void <init>(com.google.gxp.compiler.schema.Schema,com.google.gxp.compiler.base.Expression)>($r3, r2);

        $r4 = virtualinvoke r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression postProcess(com.google.gxp.compiler.base.Expression)>($r1);

        return $r4;
    }

    public com.google.gxp.compiler.base.Expression visitConstructedConstant(com.google.gxp.compiler.base.ConstructedConstant)
    {
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r4;
        com.google.gxp.compiler.schema.Schema $r3;
        com.google.gxp.compiler.base.ConstructedConstant r2;
        com.google.gxp.compiler.base.EscapeExpression $r1;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r2 := @parameter0: com.google.gxp.compiler.base.ConstructedConstant;

        $r1 = new com.google.gxp.compiler.base.EscapeExpression;

        $r3 = r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.schema.Schema schema>;

        specialinvoke $r1.<com.google.gxp.compiler.base.EscapeExpression: void <init>(com.google.gxp.compiler.schema.Schema,com.google.gxp.compiler.base.Expression)>($r3, r2);

        $r4 = virtualinvoke r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression postProcess(com.google.gxp.compiler.base.Expression)>($r1);

        return $r4;
    }

    public com.google.gxp.compiler.base.Expression visitNativeExpression(com.google.gxp.compiler.base.NativeExpression)
    {
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r4;
        com.google.gxp.compiler.base.NativeExpression r2;
        com.google.gxp.compiler.schema.Schema $r3;
        com.google.gxp.compiler.base.EscapeExpression $r1;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r2 := @parameter0: com.google.gxp.compiler.base.NativeExpression;

        $r1 = new com.google.gxp.compiler.base.EscapeExpression;

        $r3 = r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.schema.Schema schema>;

        specialinvoke $r1.<com.google.gxp.compiler.base.EscapeExpression: void <init>(com.google.gxp.compiler.schema.Schema,com.google.gxp.compiler.base.Expression)>($r3, r2);

        $r4 = virtualinvoke r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression postProcess(com.google.gxp.compiler.base.Expression)>($r1);

        return $r4;
    }

    public com.google.gxp.compiler.base.Expression visitConcatenation(com.google.gxp.compiler.base.Concatenation)
    {
        com.google.gxp.compiler.alerts.SourcePosition $r2;
        com.google.gxp.compiler.base.Expression $r6, $r7;
        com.google.gxp.compiler.schema.Schema $r3;
        com.google.gxp.com.google.common.collect.ImmutableList $r5;
        com.google.gxp.compiler.base.Concatenation r1;
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        java.util.List $r4;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.Concatenation;

        $r2 = virtualinvoke r1.<com.google.gxp.compiler.base.Concatenation: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r3 = r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.schema.Schema schema>;

        $r4 = virtualinvoke r1.<com.google.gxp.compiler.base.Concatenation: java.util.List getValues()>();

        $r5 = staticinvoke <com.google.gxp.compiler.base.Util: com.google.gxp.com.google.common.collect.ImmutableList map(java.util.List,com.google.gxp.com.google.common.base.Function)>($r4, r0);

        $r6 = staticinvoke <com.google.gxp.compiler.base.Concatenation: com.google.gxp.compiler.base.Expression create(com.google.gxp.compiler.alerts.SourcePosition,com.google.gxp.compiler.schema.Schema,java.util.List)>($r2, $r3, $r5);

        $r7 = virtualinvoke r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression postProcess(com.google.gxp.compiler.base.Expression)>($r6);

        return $r7;
    }

    public com.google.gxp.compiler.base.Expression visitOutputElement(com.google.gxp.compiler.base.OutputElement)
    {
        com.google.gxp.compiler.base.Expression $r7, $r9, $r11;
        com.google.gxp.compiler.escape.Escaper$Worker $r3;
        com.google.gxp.compiler.schema.Schema $r1;
        com.google.gxp.com.google.common.collect.ImmutableList $r6;
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r2, $r12;
        java.util.List $r4;
        com.google.gxp.com.google.common.base.Function $r5;
        com.google.gxp.compiler.base.OutputElement r0, $r10;
        java.lang.Object $r8;

        r2 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r0 := @parameter0: com.google.gxp.compiler.base.OutputElement;

        $r1 = virtualinvoke r0.<com.google.gxp.compiler.base.OutputElement: com.google.gxp.compiler.schema.Schema getInnerSchema()>();

        if $r1 != null goto label1;

        $r12 = r2;

        goto label2;

     label1:
        $r3 = r2.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.escape.Escaper$Worker this$1>;

        $r12 = staticinvoke <com.google.gxp.compiler.escape.Escaper$Worker: com.google.gxp.compiler.escape.Escaper$Worker$Visitor access$300(com.google.gxp.compiler.escape.Escaper$Worker,com.google.gxp.compiler.schema.Schema)>($r3, $r1);

     label2:
        $r4 = virtualinvoke r0.<com.google.gxp.compiler.base.OutputElement: java.util.List getAttributes()>();

        $r5 = virtualinvoke r2.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.com.google.common.base.Function getAttributeFunction()>();

        $r6 = staticinvoke <com.google.gxp.compiler.base.Util: com.google.gxp.com.google.common.collect.ImmutableList map(java.util.List,com.google.gxp.com.google.common.base.Function)>($r4, $r5);

        $r7 = virtualinvoke r0.<com.google.gxp.compiler.base.OutputElement: com.google.gxp.compiler.base.Expression getContent()>();

        $r8 = virtualinvoke $r7.<com.google.gxp.compiler.base.Expression: java.lang.Object acceptVisitor(com.google.gxp.compiler.base.ExpressionVisitor)>($r12);

        $r9 = (com.google.gxp.compiler.base.Expression) $r8;

        $r10 = virtualinvoke r0.<com.google.gxp.compiler.base.OutputElement: com.google.gxp.compiler.base.OutputElement withAttributesAndContent(java.util.List,com.google.gxp.compiler.base.Expression)>($r6, $r9);

        $r11 = virtualinvoke r2.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression postProcess(com.google.gxp.compiler.base.Expression)>($r10);

        return $r11;
    }

    public com.google.gxp.compiler.reparent.Attribute visitAttribute(com.google.gxp.compiler.reparent.Attribute)
    {
        com.google.gxp.compiler.base.Expression $r7, $r9;
        com.google.gxp.compiler.escape.Escaper$Worker $r5;
        com.google.gxp.compiler.schema.Schema $r2;
        java.util.Deque $r1, $r4;
        com.google.gxp.compiler.reparent.Attribute $r3, r10;
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0, $r6;
        java.lang.Object $r8;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r10 := @parameter0: com.google.gxp.compiler.reparent.Attribute;

        $r1 = r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: java.util.Deque attrStack>;

        interfaceinvoke $r1.<java.util.Deque: void push(java.lang.Object)>(r10);

        $r2 = virtualinvoke r10.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.schema.Schema getInnerSchema()>();

        if $r2 == null goto label1;

        $r5 = r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.escape.Escaper$Worker this$1>;

        $r6 = staticinvoke <com.google.gxp.compiler.escape.Escaper$Worker: com.google.gxp.compiler.escape.Escaper$Worker$Visitor access$300(com.google.gxp.compiler.escape.Escaper$Worker,com.google.gxp.compiler.schema.Schema)>($r5, $r2);

        $r7 = virtualinvoke r10.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.base.Expression getValue()>();

        $r8 = virtualinvoke $r7.<com.google.gxp.compiler.base.Expression: java.lang.Object acceptVisitor(com.google.gxp.compiler.base.ExpressionVisitor)>($r6);

        $r9 = (com.google.gxp.compiler.base.Expression) $r8;

        r10 = virtualinvoke r10.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.reparent.Attribute withValue(com.google.gxp.compiler.base.Expression)>($r9);

     label1:
        $r3 = specialinvoke r0.<com.google.gxp.compiler.base.ExhaustiveExpressionVisitor: com.google.gxp.compiler.reparent.Attribute visitAttribute(com.google.gxp.compiler.reparent.Attribute)>(r10);

        $r4 = r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: java.util.Deque attrStack>;

        interfaceinvoke $r4.<java.util.Deque: java.lang.Object pop()>();

        return $r3;
    }

    public com.google.gxp.compiler.base.Expression visitConditional(com.google.gxp.compiler.base.Conditional)
    {
        com.google.gxp.compiler.base.Conditional$Clause r11, $r12;
        com.google.gxp.compiler.base.Expression $r5, $r6, $r9;
        java.util.Iterator $r3;
        com.google.gxp.compiler.base.Conditional r1, $r8;
        com.google.gxp.compiler.schema.Schema $r7;
        java.util.ArrayList $r0;
        java.util.List $r2;
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r4;
        java.lang.Object $r10;
        boolean $z0;

        r4 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.Conditional;

        $r0 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

        $r2 = virtualinvoke r1.<com.google.gxp.compiler.base.Conditional: java.util.List getClauses()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r11 = (com.google.gxp.compiler.base.Conditional$Clause) $r10;

        $r12 = virtualinvoke r4.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Conditional$Clause visitClause(com.google.gxp.compiler.base.Conditional$Clause)>(r11);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r12);

        goto label1;

     label2:
        $r5 = virtualinvoke r1.<com.google.gxp.compiler.base.Conditional: com.google.gxp.compiler.base.Expression getElseExpression()>();

        $r6 = virtualinvoke r4.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression apply(com.google.gxp.compiler.base.Expression)>($r5);

        $r7 = r4.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.schema.Schema schema>;

        $r8 = virtualinvoke r1.<com.google.gxp.compiler.base.Conditional: com.google.gxp.compiler.base.Conditional withSchemaAndClauses(com.google.gxp.compiler.schema.Schema,java.util.List,com.google.gxp.compiler.base.Expression)>($r7, $r0, $r6);

        $r9 = virtualinvoke r4.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression postProcess(com.google.gxp.compiler.base.Expression)>($r8);

        return $r9;
    }

    public com.google.gxp.compiler.base.Expression visitUnextractedMessage(com.google.gxp.compiler.base.UnextractedMessage)
    {
        com.google.gxp.compiler.base.Expression $r2, $r7, $r13, $r19;
        com.google.gxp.compiler.escape.Escaper$Worker $r4, $r14;
        com.google.gxp.compiler.schema.Schema $r1, $r9, $r10, $r11, $r12, $r17, r18;
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r3, $r5;
        com.google.gxp.compiler.alerts.AlertSink $r15;
        boolean $z0, $z1;
        com.google.gxp.compiler.base.EscapeExpression $r21;
        com.google.gxp.compiler.escape.UntranslatableMsgError $r20;
        java.lang.Object $r6;
        com.google.gxp.compiler.base.UnextractedMessage r0, $r8;

        r3 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r0 := @parameter0: com.google.gxp.compiler.base.UnextractedMessage;

        $r1 = virtualinvoke r0.<com.google.gxp.compiler.base.UnextractedMessage: com.google.gxp.compiler.schema.Schema getSchema()>();

        r18 = $r1;

        if $r1 != null goto label1;

        $r17 = r3.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.schema.Schema schema>;

        r18 = virtualinvoke $r17.<com.google.gxp.compiler.schema.Schema: com.google.gxp.compiler.schema.Schema getMsgSchema()>();

     label1:
        $r2 = virtualinvoke r0.<com.google.gxp.compiler.base.UnextractedMessage: com.google.gxp.compiler.base.Expression getContent()>();

        $r4 = r3.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.escape.Escaper$Worker this$1>;

        $r5 = staticinvoke <com.google.gxp.compiler.escape.Escaper$Worker: com.google.gxp.compiler.escape.Escaper$Worker$Visitor access$300(com.google.gxp.compiler.escape.Escaper$Worker,com.google.gxp.compiler.schema.Schema)>($r4, r18);

        $r6 = virtualinvoke $r2.<com.google.gxp.compiler.base.Expression: java.lang.Object acceptVisitor(com.google.gxp.compiler.base.ExpressionVisitor)>($r5);

        $r7 = (com.google.gxp.compiler.base.Expression) $r6;

        $r8 = virtualinvoke r0.<com.google.gxp.compiler.base.UnextractedMessage: com.google.gxp.compiler.base.UnextractedMessage withContentAndSchema(com.google.gxp.compiler.base.Expression,com.google.gxp.compiler.schema.Schema)>($r7, r18);

        $r9 = virtualinvoke $r8.<com.google.gxp.compiler.base.Expression: com.google.gxp.compiler.schema.Schema getSchema()>();

        $z0 = virtualinvoke $r9.<com.google.gxp.compiler.schema.Schema: boolean isTranslatable()>();

        if $z0 != 0 goto label2;

        $r14 = r3.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.escape.Escaper$Worker this$1>;

        $r15 = staticinvoke <com.google.gxp.compiler.escape.Escaper$Worker: com.google.gxp.compiler.alerts.AlertSink access$000(com.google.gxp.compiler.escape.Escaper$Worker)>($r14);

        $r20 = new com.google.gxp.compiler.escape.UntranslatableMsgError;

        specialinvoke $r20.<com.google.gxp.compiler.escape.UntranslatableMsgError: void <init>(com.google.gxp.compiler.base.Expression)>($r8);

        interfaceinvoke $r15.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r20);

     label2:
        $r10 = virtualinvoke $r8.<com.google.gxp.compiler.base.Expression: com.google.gxp.compiler.schema.Schema getSchema()>();

        $r11 = r3.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.schema.Schema schema>;

        $z1 = virtualinvoke $r10.<com.google.gxp.compiler.schema.Schema: boolean equals(java.lang.Object)>($r11);

        if $z1 == 0 goto label3;

        $r19 = $r8;

        goto label4;

     label3:
        $r21 = new com.google.gxp.compiler.base.EscapeExpression;

        $r19 = $r21;

        $r12 = r3.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.schema.Schema schema>;

        specialinvoke $r21.<com.google.gxp.compiler.base.EscapeExpression: void <init>(com.google.gxp.compiler.schema.Schema,com.google.gxp.compiler.base.Expression)>($r12, $r8);

     label4:
        $r13 = virtualinvoke r3.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression postProcess(com.google.gxp.compiler.base.Expression)>($r19);

        return $r13;
    }

    public com.google.gxp.compiler.base.Expression visitCall(com.google.gxp.compiler.base.Call)
    {
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r3, $r4;
        java.lang.Object $r2;
        com.google.gxp.compiler.base.Call r1;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.Call;

        $r2 = virtualinvoke r1.<com.google.gxp.compiler.base.Call: java.lang.Object acceptCallVisitor(com.google.gxp.compiler.base.CallVisitor)>(r0);

        $r3 = (com.google.gxp.compiler.base.Expression) $r2;

        $r4 = virtualinvoke r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression postProcess(com.google.gxp.compiler.base.Expression)>($r3);

        return $r4;
    }

    public com.google.gxp.compiler.base.Expression visitBoundCall(com.google.gxp.compiler.base.BoundCall)
    {
        com.google.gxp.compiler.schema.Schema $r10, $r11, $r12, $r16, $r18;
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r8, r27;
        java.util.Map $r3;
        com.google.gxp.compiler.base.Callable $r1;
        boolean $z0, $z1, $z2, $z3;
        java.util.Set $r4;
        com.google.gxp.compiler.base.Type $r24;
        com.google.gxp.compiler.base.FormalParameter $r23;
        com.google.gxp.com.google.common.collect.ImmutableMap $r6;
        com.google.gxp.compiler.base.Expression r31;
        java.util.Deque $r9, $r13;
        com.google.gxp.com.google.common.collect.ImmutableMap$Builder $r2;
        java.lang.String r22;
        com.google.gxp.compiler.base.EscapeExpression $r17;
        com.google.gxp.compiler.base.BoundCall r0, $r7;
        com.google.gxp.compiler.base.TypeVisitor $r25;
        java.util.Map$Entry r20;
        java.util.Iterator $r5;
        com.google.gxp.compiler.reparent.Attribute $r15, $r29, $r30;
        java.lang.Object $r14, $r19, $r21, $r26, $r28;

        r8 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r0 := @parameter0: com.google.gxp.compiler.base.BoundCall;

        $r1 = virtualinvoke r0.<com.google.gxp.compiler.base.BoundCall: com.google.gxp.compiler.base.Callable getCallee()>();

        $r2 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableMap: com.google.gxp.com.google.common.collect.ImmutableMap$Builder builder()>();

        $r3 = virtualinvoke r0.<com.google.gxp.compiler.base.BoundCall: java.util.Map getAttributes()>();

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r19 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.util.Map$Entry) $r19;

        $r21 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getKey()>();

        r22 = (java.lang.String) $r21;

        $r23 = interfaceinvoke $r1.<com.google.gxp.compiler.base.Callable: com.google.gxp.compiler.base.FormalParameter getParameterByPrimary(java.lang.String)>(r22);

        $r24 = virtualinvoke $r23.<com.google.gxp.compiler.base.FormalParameter: com.google.gxp.compiler.base.Type getType()>();

        $r25 = r8.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.TypeVisitor typeVisitor>;

        $r26 = virtualinvoke $r24.<com.google.gxp.compiler.base.Type: java.lang.Object acceptTypeVisitor(com.google.gxp.compiler.base.TypeVisitor)>($r25);

        r27 = (com.google.gxp.compiler.escape.Escaper$Worker$Visitor) $r26;

        $r28 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r29 = (com.google.gxp.compiler.reparent.Attribute) $r28;

        $r30 = virtualinvoke r27.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.reparent.Attribute visitAttribute(com.google.gxp.compiler.reparent.Attribute)>($r29);

        virtualinvoke $r2.<com.google.gxp.com.google.common.collect.ImmutableMap$Builder: com.google.gxp.com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>(r22, $r30);

        goto label1;

     label2:
        $r6 = virtualinvoke $r2.<com.google.gxp.com.google.common.collect.ImmutableMap$Builder: com.google.gxp.com.google.common.collect.ImmutableMap build()>();

        $r7 = virtualinvoke r0.<com.google.gxp.compiler.base.BoundCall: com.google.gxp.compiler.base.BoundCall withParams(java.util.Map)>($r6);

        r31 = $r7;

        $r9 = r8.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: java.util.Deque attrStack>;

        $z1 = interfaceinvoke $r9.<java.util.Deque: boolean isEmpty()>();

        if $z1 != 0 goto label3;

        $r10 = virtualinvoke $r7.<com.google.gxp.compiler.base.Expression: com.google.gxp.compiler.schema.Schema getSchema()>();

        $r11 = r8.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.schema.Schema schema>;

        $z2 = virtualinvoke $r10.<com.google.gxp.compiler.schema.Schema: boolean equals(java.lang.Object)>($r11);

        if $z2 != 0 goto label3;

        $r12 = virtualinvoke $r7.<com.google.gxp.compiler.base.Expression: com.google.gxp.compiler.schema.Schema getSchema()>();

        $r13 = r8.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: java.util.Deque attrStack>;

        $r14 = interfaceinvoke $r13.<java.util.Deque: java.lang.Object peek()>();

        $r15 = (com.google.gxp.compiler.reparent.Attribute) $r14;

        $r16 = virtualinvoke $r15.<com.google.gxp.compiler.reparent.Attribute: com.google.gxp.compiler.schema.Schema getInnerSchema()>();

        $z3 = virtualinvoke $r12.<com.google.gxp.compiler.schema.Schema: boolean equals(java.lang.Object)>($r16);

        if $z3 == 0 goto label3;

        $r17 = new com.google.gxp.compiler.base.EscapeExpression;

        $r18 = r8.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.schema.Schema schema>;

        specialinvoke $r17.<com.google.gxp.compiler.base.EscapeExpression: void <init>(com.google.gxp.compiler.schema.Schema,com.google.gxp.compiler.base.Expression)>($r18, $r7);

        r31 = $r17;

     label3:
        return r31;
    }

    public com.google.gxp.compiler.base.Expression visitUnboundCall(com.google.gxp.compiler.base.UnboundCall)
    {
        com.google.gxp.compiler.base.UnexpectedNodeException $r0;
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r2;
        com.google.gxp.compiler.base.UnboundCall r1;

        r2 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.UnboundCall;

        $r0 = new com.google.gxp.compiler.base.UnexpectedNodeException;

        specialinvoke $r0.<com.google.gxp.compiler.base.UnexpectedNodeException: void <init>(com.google.gxp.compiler.base.Node)>(r1);

        throw $r0;
    }

    public com.google.gxp.compiler.base.Expression visitValidatedCall(com.google.gxp.compiler.base.ValidatedCall)
    {
        com.google.gxp.compiler.base.UnexpectedNodeException $r0;
        com.google.gxp.compiler.base.ValidatedCall r1;
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r2;

        r2 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.ValidatedCall;

        $r0 = new com.google.gxp.compiler.base.UnexpectedNodeException;

        specialinvoke $r0.<com.google.gxp.compiler.base.UnexpectedNodeException: void <init>(com.google.gxp.compiler.base.Node)>(r1);

        throw $r0;
    }

    public com.google.gxp.compiler.base.Expression visitPlaceholderStart(com.google.gxp.compiler.base.PlaceholderStart)
    {
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r4;
        com.google.gxp.compiler.base.PlaceholderStart r1, $r3;
        com.google.gxp.compiler.schema.Schema $r2;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.PlaceholderStart;

        $r2 = r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.schema.Schema schema>;

        $r3 = virtualinvoke r1.<com.google.gxp.compiler.base.PlaceholderStart: com.google.gxp.compiler.base.PlaceholderStart withSchema(com.google.gxp.compiler.schema.Schema)>($r2);

        $r4 = virtualinvoke r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression postProcess(com.google.gxp.compiler.base.Expression)>($r3);

        return $r4;
    }

    public com.google.gxp.compiler.base.Expression visitPlaceholderEnd(com.google.gxp.compiler.base.PlaceholderEnd)
    {
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r4;
        com.google.gxp.compiler.base.PlaceholderEnd r1, $r3;
        com.google.gxp.compiler.schema.Schema $r2;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.PlaceholderEnd;

        $r2 = r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.schema.Schema schema>;

        $r3 = virtualinvoke r1.<com.google.gxp.compiler.base.PlaceholderEnd: com.google.gxp.compiler.base.PlaceholderEnd withSchema(com.google.gxp.compiler.schema.Schema)>($r2);

        $r4 = virtualinvoke r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression postProcess(com.google.gxp.compiler.base.Expression)>($r3);

        return $r4;
    }

    public com.google.gxp.compiler.base.Expression visitEscapeExpression(com.google.gxp.compiler.base.EscapeExpression)
    {
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r4;
        com.google.gxp.compiler.schema.Schema $r3;
        com.google.gxp.compiler.base.EscapeExpression $r1, r2;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r2 := @parameter0: com.google.gxp.compiler.base.EscapeExpression;

        $r1 = new com.google.gxp.compiler.base.EscapeExpression;

        $r3 = r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.schema.Schema schema>;

        specialinvoke $r1.<com.google.gxp.compiler.base.EscapeExpression: void <init>(com.google.gxp.compiler.schema.Schema,com.google.gxp.compiler.base.Expression)>($r3, r2);

        $r4 = virtualinvoke r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression postProcess(com.google.gxp.compiler.base.Expression)>($r1);

        return $r4;
    }

    public com.google.gxp.compiler.base.Expression visitCollapseExpression(com.google.gxp.compiler.base.CollapseExpression)
    {
        com.google.gxp.compiler.base.UnexpectedNodeException $r0;
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r2;
        com.google.gxp.compiler.base.CollapseExpression r1;

        r2 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.CollapseExpression;

        $r0 = new com.google.gxp.compiler.base.UnexpectedNodeException;

        specialinvoke $r0.<com.google.gxp.compiler.base.UnexpectedNodeException: void <init>(com.google.gxp.compiler.base.Node)>(r1);

        throw $r0;
    }

    public com.google.gxp.compiler.base.Expression visitExtractedMessage(com.google.gxp.compiler.base.ExtractedMessage)
    {
        com.google.gxp.compiler.base.UnexpectedNodeException $r0;
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r2;
        com.google.gxp.compiler.base.ExtractedMessage r1;

        r2 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.ExtractedMessage;

        $r0 = new com.google.gxp.compiler.base.UnexpectedNodeException;

        specialinvoke $r0.<com.google.gxp.compiler.base.UnexpectedNodeException: void <init>(com.google.gxp.compiler.base.Node)>(r1);

        throw $r0;
    }

    public com.google.gxp.compiler.base.Expression visitPlaceholderNode(com.google.gxp.compiler.base.PlaceholderNode)
    {
        com.google.gxp.compiler.base.UnexpectedNodeException $r0;
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r2;
        com.google.gxp.compiler.base.PlaceholderNode r1;

        r2 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.PlaceholderNode;

        $r0 = new com.google.gxp.compiler.base.UnexpectedNodeException;

        specialinvoke $r0.<com.google.gxp.compiler.base.UnexpectedNodeException: void <init>(com.google.gxp.compiler.base.Node)>(r1);

        throw $r0;
    }

    public volatile java.lang.Object visitTemplate(com.google.gxp.compiler.base.Template)
    {
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        com.google.gxp.compiler.base.Template r1, $r2;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.Template;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Template visitTemplate(com.google.gxp.compiler.base.Template)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitUnextractedMessage(com.google.gxp.compiler.base.UnextractedMessage)
    {
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;
        com.google.gxp.compiler.base.UnextractedMessage r1;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.UnextractedMessage;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression visitUnextractedMessage(com.google.gxp.compiler.base.UnextractedMessage)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitStringConstant(com.google.gxp.compiler.base.StringConstant)
    {
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;
        com.google.gxp.compiler.base.StringConstant r1;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.StringConstant;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression visitStringConstant(com.google.gxp.compiler.base.StringConstant)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitPlaceholderStart(com.google.gxp.compiler.base.PlaceholderStart)
    {
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;
        com.google.gxp.compiler.base.PlaceholderStart r1;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.PlaceholderStart;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression visitPlaceholderStart(com.google.gxp.compiler.base.PlaceholderStart)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitPlaceholderNode(com.google.gxp.compiler.base.PlaceholderNode)
    {
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;
        com.google.gxp.compiler.base.PlaceholderNode r1;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.PlaceholderNode;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression visitPlaceholderNode(com.google.gxp.compiler.base.PlaceholderNode)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitPlaceholderEnd(com.google.gxp.compiler.base.PlaceholderEnd)
    {
        com.google.gxp.compiler.base.PlaceholderEnd r1;
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.PlaceholderEnd;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression visitPlaceholderEnd(com.google.gxp.compiler.base.PlaceholderEnd)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitOutputElement(com.google.gxp.compiler.base.OutputElement)
    {
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;
        com.google.gxp.compiler.base.OutputElement r1;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.OutputElement;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression visitOutputElement(com.google.gxp.compiler.base.OutputElement)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitObjectConstant(com.google.gxp.compiler.base.ObjectConstant)
    {
        com.google.gxp.compiler.base.ObjectConstant r1;
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.ObjectConstant;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression visitObjectConstant(com.google.gxp.compiler.base.ObjectConstant)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitNativeExpression(com.google.gxp.compiler.base.NativeExpression)
    {
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;
        com.google.gxp.compiler.base.NativeExpression r1;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.NativeExpression;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression visitNativeExpression(com.google.gxp.compiler.base.NativeExpression)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitExtractedMessage(com.google.gxp.compiler.base.ExtractedMessage)
    {
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;
        com.google.gxp.compiler.base.ExtractedMessage r1;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.ExtractedMessage;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression visitExtractedMessage(com.google.gxp.compiler.base.ExtractedMessage)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitEscapeExpression(com.google.gxp.compiler.base.EscapeExpression)
    {
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;
        com.google.gxp.compiler.base.EscapeExpression r1;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.EscapeExpression;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression visitEscapeExpression(com.google.gxp.compiler.base.EscapeExpression)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitConstructedConstant(com.google.gxp.compiler.base.ConstructedConstant)
    {
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;
        com.google.gxp.compiler.base.ConstructedConstant r1;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.ConstructedConstant;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression visitConstructedConstant(com.google.gxp.compiler.base.ConstructedConstant)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitConditional(com.google.gxp.compiler.base.Conditional)
    {
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;
        com.google.gxp.compiler.base.Conditional r1;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.Conditional;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression visitConditional(com.google.gxp.compiler.base.Conditional)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitConcatenation(com.google.gxp.compiler.base.Concatenation)
    {
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;
        com.google.gxp.compiler.base.Concatenation r1;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.Concatenation;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression visitConcatenation(com.google.gxp.compiler.base.Concatenation)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitCollapseExpression(com.google.gxp.compiler.base.CollapseExpression)
    {
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;
        com.google.gxp.compiler.base.CollapseExpression r1;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.CollapseExpression;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression visitCollapseExpression(com.google.gxp.compiler.base.CollapseExpression)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitCall(com.google.gxp.compiler.base.Call)
    {
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;
        com.google.gxp.compiler.base.Call r1;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.Call;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression visitCall(com.google.gxp.compiler.base.Call)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitBooleanConstant(com.google.gxp.compiler.base.BooleanConstant)
    {
        com.google.gxp.compiler.base.BooleanConstant r1;
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.BooleanConstant;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression visitBooleanConstant(com.google.gxp.compiler.base.BooleanConstant)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitAttrBundleParam(com.google.gxp.compiler.base.AttrBundleParam)
    {
        com.google.gxp.compiler.base.AttrBundleParam r1;
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.AttrBundleParam;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression visitAttrBundleParam(com.google.gxp.compiler.base.AttrBundleParam)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitAbbrExpression(com.google.gxp.compiler.base.AbbrExpression)
    {
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;
        com.google.gxp.compiler.base.AbbrExpression r1;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.AbbrExpression;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression visitAbbrExpression(com.google.gxp.compiler.base.AbbrExpression)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitValidatedCall(com.google.gxp.compiler.base.ValidatedCall)
    {
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        com.google.gxp.compiler.base.ValidatedCall r1;
        com.google.gxp.compiler.base.Expression $r2;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.ValidatedCall;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression visitValidatedCall(com.google.gxp.compiler.base.ValidatedCall)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitBoundCall(com.google.gxp.compiler.base.BoundCall)
    {
        com.google.gxp.compiler.base.BoundCall r1;
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.BoundCall;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression visitBoundCall(com.google.gxp.compiler.base.BoundCall)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitUnboundCall(com.google.gxp.compiler.base.UnboundCall)
    {
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;
        com.google.gxp.compiler.base.Expression $r2;
        com.google.gxp.compiler.base.UnboundCall r1;

        r0 := @this: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        r1 := @parameter0: com.google.gxp.compiler.base.UnboundCall;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.Expression visitUnboundCall(com.google.gxp.compiler.base.UnboundCall)>(r1);

        return $r2;
    }

    static com.google.gxp.compiler.base.TypeVisitor access$100(com.google.gxp.compiler.escape.Escaper$Worker$Visitor)
    {
        com.google.gxp.compiler.base.TypeVisitor $r1;
        com.google.gxp.compiler.escape.Escaper$Worker$Visitor r0;

        r0 := @parameter0: com.google.gxp.compiler.escape.Escaper$Worker$Visitor;

        $r1 = r0.<com.google.gxp.compiler.escape.Escaper$Worker$Visitor: com.google.gxp.compiler.base.TypeVisitor typeVisitor>;

        return $r1;
    }
}
