class org.apache.log4j.helpers.PatternParser$ClassNamePatternConverter extends org.apache.log4j.helpers.PatternParser$NamedPatternConverter
{
    private final org.apache.log4j.helpers.PatternParser this$0;

    void <init>(org.apache.log4j.helpers.PatternParser, org.apache.log4j.helpers.FormattingInfo, int)
    {
        org.apache.log4j.helpers.PatternParser$ClassNamePatternConverter r0;
        int i0;
        org.apache.log4j.helpers.PatternParser r2;
        org.apache.log4j.helpers.FormattingInfo r1;

        r0 := @this: org.apache.log4j.helpers.PatternParser$ClassNamePatternConverter;

        r2 := @parameter0: org.apache.log4j.helpers.PatternParser;

        r1 := @parameter1: org.apache.log4j.helpers.FormattingInfo;

        i0 := @parameter2: int;

        specialinvoke r0.<org.apache.log4j.helpers.PatternParser$NamedPatternConverter: void <init>(org.apache.log4j.helpers.FormattingInfo,int)>(r1, i0);

        r0.<org.apache.log4j.helpers.PatternParser$ClassNamePatternConverter: org.apache.log4j.helpers.PatternParser this$0> = r2;

        return;
    }

    java.lang.String getFullyQualifiedName(org.apache.log4j.spi.LoggingEvent)
    {
        org.apache.log4j.helpers.PatternParser$ClassNamePatternConverter r3;
        org.apache.log4j.spi.LoggingEvent r0;
        java.lang.String $r2;
        org.apache.log4j.spi.LocationInfo $r1;

        r3 := @this: org.apache.log4j.helpers.PatternParser$ClassNamePatternConverter;

        r0 := @parameter0: org.apache.log4j.spi.LoggingEvent;

        $r1 = virtualinvoke r0.<org.apache.log4j.spi.LoggingEvent: org.apache.log4j.spi.LocationInfo getLocationInformation()>();

        $r2 = virtualinvoke $r1.<org.apache.log4j.spi.LocationInfo: java.lang.String getClassName()>();

        return $r2;
    }
}
