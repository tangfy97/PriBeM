public class org.objectweb.asm.tree.MethodInsnNode extends org.objectweb.asm.tree.AbstractInsnNode
{
    public java.lang.String owner;
    public java.lang.String name;
    public java.lang.String desc;

    public void <init>(int, java.lang.String, java.lang.String, java.lang.String)
    {
        org.objectweb.asm.tree.MethodInsnNode r0;
        int i0;
        java.lang.String r1, r2, r3;

        r0 := @this: org.objectweb.asm.tree.MethodInsnNode;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        specialinvoke r0.<org.objectweb.asm.tree.AbstractInsnNode: void <init>(int)>(i0);

        r0.<org.objectweb.asm.tree.MethodInsnNode: java.lang.String owner> = r1;

        r0.<org.objectweb.asm.tree.MethodInsnNode: java.lang.String name> = r2;

        r0.<org.objectweb.asm.tree.MethodInsnNode: java.lang.String desc> = r3;

        return;
    }

    public void setOpcode(int)
    {
        int i0;
        org.objectweb.asm.tree.MethodInsnNode r0;

        r0 := @this: org.objectweb.asm.tree.MethodInsnNode;

        i0 := @parameter0: int;

        r0.<org.objectweb.asm.tree.MethodInsnNode: int opcode> = i0;

        return;
    }

    public int getType()
    {
        org.objectweb.asm.tree.MethodInsnNode r0;

        r0 := @this: org.objectweb.asm.tree.MethodInsnNode;

        return 5;
    }

    public void accept(org.objectweb.asm.MethodVisitor)
    {
        org.objectweb.asm.tree.MethodInsnNode r1;
        org.objectweb.asm.MethodVisitor r0;
        int $i0;
        java.lang.String $r2, $r3, $r4;

        r1 := @this: org.objectweb.asm.tree.MethodInsnNode;

        r0 := @parameter0: org.objectweb.asm.MethodVisitor;

        $i0 = r1.<org.objectweb.asm.tree.MethodInsnNode: int opcode>;

        $r4 = r1.<org.objectweb.asm.tree.MethodInsnNode: java.lang.String owner>;

        $r3 = r1.<org.objectweb.asm.tree.MethodInsnNode: java.lang.String name>;

        $r2 = r1.<org.objectweb.asm.tree.MethodInsnNode: java.lang.String desc>;

        virtualinvoke r0.<org.objectweb.asm.MethodVisitor: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)>($i0, $r4, $r3, $r2);

        return;
    }

    public org.objectweb.asm.tree.AbstractInsnNode clone(java.util.Map)
    {
        org.objectweb.asm.tree.MethodInsnNode $r0, r1;
        java.util.Map r5;
        int $i0;
        java.lang.String $r2, $r3, $r4;

        r1 := @this: org.objectweb.asm.tree.MethodInsnNode;

        r5 := @parameter0: java.util.Map;

        $r0 = new org.objectweb.asm.tree.MethodInsnNode;

        $i0 = r1.<org.objectweb.asm.tree.MethodInsnNode: int opcode>;

        $r4 = r1.<org.objectweb.asm.tree.MethodInsnNode: java.lang.String owner>;

        $r3 = r1.<org.objectweb.asm.tree.MethodInsnNode: java.lang.String name>;

        $r2 = r1.<org.objectweb.asm.tree.MethodInsnNode: java.lang.String desc>;

        specialinvoke $r0.<org.objectweb.asm.tree.MethodInsnNode: void <init>(int,java.lang.String,java.lang.String,java.lang.String)>($i0, $r4, $r3, $r2);

        return $r0;
    }
}
