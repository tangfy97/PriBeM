public class com.sun.jwt.resources.editor.editors.TimelineEditor extends javax.swing.JPanel
{
    private com.sun.jwt.resources.editor.editors.LWUITImageRenderer renderer;
    private com.sun.lwuit.util.EditableResources res;
    private java.lang.String name;
    private javax.swing.Timer refreshTimeline;
    private boolean refreshingTimelineLock;
    private javax.swing.JButton addAnimationObject;
    private javax.swing.JList animationObjectList;
    private javax.swing.JPanel animationPanel;
    private javax.swing.JLabel currentTime;
    private javax.swing.JButton duplicateObject;
    private javax.swing.JSpinner duration;
    private javax.swing.JLabel endTime;
    private javax.swing.JSpinner height;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JButton moveDown;
    private javax.swing.JButton moveUp;
    private javax.swing.JButton pause;
    private javax.swing.JButton play;
    private javax.swing.JTabbedPane propertiesTab;
    private javax.swing.JButton removeAnimationObject;
    private javax.swing.JSlider timeline;
    private javax.swing.JSpinner width;

    public void <init>(com.sun.lwuit.util.EditableResources, java.lang.String)
    {
        javax.swing.ListSelectionModel $r6;
        com.sun.lwuit.animations.AnimationObject[] $r20;
        javax.swing.SpinnerNumberModel $r12, $r14, $r16;
        com.sun.lwuit.geom.Dimension $r19;
        java.lang.String r4;
        javax.swing.JSpinner $r13, $r15, $r17;
        com.sun.jwt.resources.editor.editors.TimelineEditor$1 $r7;
        com.sun.lwuit.animations.Timeline r21;
        com.sun.jwt.resources.editor.editors.TimelineEditor$3 $r10;
        com.sun.jwt.resources.editor.editors.TimelineEditor$2 $r8;
        javax.swing.JList $r2, $r5, $r9, $r11;
        com.sun.lwuit.util.EditableResources r3;
        com.sun.lwuit.Image $r18;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;
        javax.swing.DefaultListModel $r1;

        r0 := @this: com.sun.jwt.resources.editor.editors.TimelineEditor;

        r3 := @parameter0: com.sun.lwuit.util.EditableResources;

        r4 := @parameter1: java.lang.String;

        specialinvoke r0.<javax.swing.JPanel: void <init>()>();

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: void initComponents()>();

        $r2 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JList animationObjectList>;

        $r1 = new javax.swing.DefaultListModel;

        specialinvoke $r1.<javax.swing.DefaultListModel: void <init>()>();

        virtualinvoke $r2.<javax.swing.JList: void setModel(javax.swing.ListModel)>($r1);

        r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: com.sun.lwuit.util.EditableResources res> = r3;

        r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: java.lang.String name> = r4;

        $r5 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JList animationObjectList>;

        $r6 = virtualinvoke $r5.<javax.swing.JList: javax.swing.ListSelectionModel getSelectionModel()>();

        $r7 = new com.sun.jwt.resources.editor.editors.TimelineEditor$1;

        specialinvoke $r7.<com.sun.jwt.resources.editor.editors.TimelineEditor$1: void <init>(com.sun.jwt.resources.editor.editors.TimelineEditor)>(r0);

        interfaceinvoke $r6.<javax.swing.ListSelectionModel: void addListSelectionListener(javax.swing.event.ListSelectionListener)>($r7);

        $r9 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JList animationObjectList>;

        $r8 = new com.sun.jwt.resources.editor.editors.TimelineEditor$2;

        specialinvoke $r8.<com.sun.jwt.resources.editor.editors.TimelineEditor$2: void <init>(com.sun.jwt.resources.editor.editors.TimelineEditor)>(r0);

        virtualinvoke $r9.<javax.swing.JList: void addMouseListener(java.awt.event.MouseListener)>($r8);

        $r11 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JList animationObjectList>;

        $r10 = new com.sun.jwt.resources.editor.editors.TimelineEditor$3;

        specialinvoke $r10.<com.sun.jwt.resources.editor.editors.TimelineEditor$3: void <init>(com.sun.jwt.resources.editor.editors.TimelineEditor)>(r0);

        virtualinvoke $r11.<javax.swing.JList: void setCellRenderer(javax.swing.ListCellRenderer)>($r10);

        $r13 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner duration>;

        $r12 = new javax.swing.SpinnerNumberModel;

        specialinvoke $r12.<javax.swing.SpinnerNumberModel: void <init>(int,int,int,int)>(20000, 1000, 1000000, 1000);

        virtualinvoke $r13.<javax.swing.JSpinner: void setModel(javax.swing.SpinnerModel)>($r12);

        $r15 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner width>;

        $r14 = new javax.swing.SpinnerNumberModel;

        specialinvoke $r14.<javax.swing.SpinnerNumberModel: void <init>(int,int,int,int)>(240, 10, 1000, 10);

        virtualinvoke $r15.<javax.swing.JSpinner: void setModel(javax.swing.SpinnerModel)>($r14);

        $r17 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner height>;

        $r16 = new javax.swing.SpinnerNumberModel;

        specialinvoke $r16.<javax.swing.SpinnerNumberModel: void <init>(int,int,int,int)>(320, 10, 1000, 10);

        virtualinvoke $r17.<javax.swing.JSpinner: void setModel(javax.swing.SpinnerModel)>($r16);

        $r18 = virtualinvoke r3.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.Image getImage(java.lang.String)>(r4);

        r21 = (com.sun.lwuit.animations.Timeline) $r18;

        if r21 != null goto label1;

        $r20 = newarray (com.sun.lwuit.animations.AnimationObject)[0];

        $r19 = new com.sun.lwuit.geom.Dimension;

        specialinvoke $r19.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>(100, 100);

        r21 = staticinvoke <com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.Timeline createTimeline(int,com.sun.lwuit.animations.AnimationObject[],com.sun.lwuit.geom.Dimension)>(3000, $r20, $r19);

     label1:
        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: void setImage(com.sun.lwuit.animations.Timeline)>(r21);

        virtualinvoke r21.<com.sun.lwuit.animations.Timeline: void setPause(boolean)>(1);

        return;
    }

    public static void selectFile(com.sun.jwt.resources.editor.ResourceEditorView, com.sun.lwuit.util.EditableResources, java.lang.String)
    {
        byte[] $r32;
        javax.swing.JFileChooser $r5;
        com.sun.jwt.resources.editor.ResourceEditorView r0;
        com.sun.jwt.resources.editor.editors.PreviewPane $r6;
        com.sun.lwuit.util.EditableResources r22;
        javax.imageio.stream.ImageInputStream $r18;
        java.lang.StringBuilder $r26, $r28, $r29, $r30, $r43, $r44, $r45;
        com.sun.lwuit.animations.AnimationObject[] r19;
        java.io.ByteArrayOutputStream $r25;
        java.lang.String $r3, $r4, $r13, r23, $r27, $r31, $r38, $r39, $r46;
        javax.swing.JRootPane $r8;
        javax.imageio.ImageReader r16;
        com.sun.lwuit.animations.Timeline $r21;
        java.io.IOException $r42;
        java.io.File $r9, $r12;
        java.util.prefs.Preferences $r2, $r11;
        java.awt.Point $r34;
        com.sun.lwuit.EncodedImage $r33;
        boolean $z0;
        java.awt.image.BufferedImage $r24;
        com.sun.lwuit.geom.Dimension $r20;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15;
        java.util.Iterator $r14;
        com.sun.jwt.resources.editor.editors.TimelineEditor$4 $r7;
        java.io.FileInputStream $r17;
        com.sun.lwuit.animations.AnimationObject $r35, $r36, $r37, $r40, $r41;
        java.lang.Class $r1, $r10;
        java.lang.Object $r15;

        r0 := @parameter0: com.sun.jwt.resources.editor.ResourceEditorView;

        r22 := @parameter1: com.sun.lwuit.util.EditableResources;

        r23 := @parameter2: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <java.util.prefs.Preferences: java.util.prefs.Preferences userNodeForPackage(java.lang.Class)>($r1);

        $r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.home");

        $r4 = virtualinvoke $r2.<java.util.prefs.Preferences: java.lang.String get(java.lang.String,java.lang.String)>("lastDir", $r3);

        $r5 = new javax.swing.JFileChooser;

        specialinvoke $r5.<javax.swing.JFileChooser: void <init>(java.lang.String)>($r4);

        $r6 = new com.sun.jwt.resources.editor.editors.PreviewPane;

        specialinvoke $r6.<com.sun.jwt.resources.editor.editors.PreviewPane: void <init>(javax.swing.JFileChooser)>($r5);

        $r7 = new com.sun.jwt.resources.editor.editors.TimelineEditor$4;

        specialinvoke $r7.<com.sun.jwt.resources.editor.editors.TimelineEditor$4: void <init>()>();

        virtualinvoke $r5.<javax.swing.JFileChooser: void setFileFilter(javax.swing.filechooser.FileFilter)>($r7);

        virtualinvoke $r5.<javax.swing.JFileChooser: void setFileSelectionMode(int)>(0);

        virtualinvoke $r5.<javax.swing.JFileChooser: void setMultiSelectionEnabled(boolean)>(0);

        $r8 = virtualinvoke r0.<com.sun.jwt.resources.editor.ResourceEditorView: javax.swing.JRootPane getRootPane()>();

        $i0 = virtualinvoke $r5.<javax.swing.JFileChooser: int showOpenDialog(java.awt.Component)>($r8);

        if 0 != $i0 goto label8;

        $r9 = virtualinvoke $r5.<javax.swing.JFileChooser: java.io.File getSelectedFile()>();

        $r10 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = staticinvoke <java.util.prefs.Preferences: java.util.prefs.Preferences userNodeForPackage(java.lang.Class)>($r10);

        $r12 = virtualinvoke $r9.<java.io.File: java.io.File getParentFile()>();

        $r13 = virtualinvoke $r12.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke $r11.<java.util.prefs.Preferences: void put(java.lang.String,java.lang.String)>("lastDir", $r13);

        $r14 = staticinvoke <javax.imageio.ImageIO: java.util.Iterator getImageReadersBySuffix(java.lang.String)>("gif");

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r16 = (javax.imageio.ImageReader) $r15;

     label1:
        $r17 = new java.io.FileInputStream;

        specialinvoke $r17.<java.io.FileInputStream: void <init>(java.io.File)>($r9);

        $r18 = staticinvoke <javax.imageio.ImageIO: javax.imageio.stream.ImageInputStream createImageInputStream(java.lang.Object)>($r17);

        virtualinvoke r16.<javax.imageio.ImageReader: void setInput(java.lang.Object)>($r18);

        $i1 = virtualinvoke r16.<javax.imageio.ImageReader: int getNumImages(boolean)>(1);

        r19 = newarray (com.sun.lwuit.animations.AnimationObject)[$i1];

        i14 = 0;

        i15 = 0;

     label2:
        if i15 >= $i1 goto label5;

        $r24 = virtualinvoke r16.<javax.imageio.ImageReader: java.awt.image.BufferedImage read(int)>(i15);

        $r25 = new java.io.ByteArrayOutputStream;

        specialinvoke $r25.<java.io.ByteArrayOutputStream: void <init>()>();

        staticinvoke <javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.OutputStream)>($r24, "png", $r25);

        virtualinvoke $r25.<java.io.ByteArrayOutputStream: void close()>();

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r9.<java.io.File: java.lang.String getName()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" frame:");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i15);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        $r32 = virtualinvoke $r25.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r33 = staticinvoke <com.sun.lwuit.EncodedImage: com.sun.lwuit.EncodedImage create(byte[])>($r32);

        virtualinvoke r22.<com.sun.lwuit.util.EditableResources: void setImage(java.lang.String,com.sun.lwuit.Image)>($r31, $r33);

        $i4 = staticinvoke <com.sun.lwuit.tools.resourcebuilder.AnimationImpl: int getFrameTime(javax.imageio.ImageReader,int)>(r16, i15);

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(40, $i4);

        $r34 = staticinvoke <com.sun.lwuit.tools.resourcebuilder.AnimationImpl: java.awt.Point getPixelOffsets(javax.imageio.ImageReader,int)>(r16, i15);

        $i7 = $r34.<java.awt.Point: int x>;

        $i6 = $r34.<java.awt.Point: int y>;

        $r35 = staticinvoke <com.sun.lwuit.animations.AnimationObject: com.sun.lwuit.animations.AnimationObject createAnimationImage(com.sun.lwuit.Image,int,int)>($r33, $i7, $i6);

        r19[i15] = $r35;

        $r36 = r19[i15];

        virtualinvoke $r36.<com.sun.lwuit.animations.AnimationObject: void setStartTime(int)>(i14);

        $r37 = r19[i15];

        virtualinvoke $r37.<com.sun.lwuit.animations.AnimationObject: void setEndTime(int)>(100000000);

        $r38 = staticinvoke <com.sun.jwt.resources.editor.editors.TimelineEditor: java.lang.String getDisposalMethod(javax.imageio.ImageReader,int)>(r16, i15);

        if $r38 == null goto label4;

        $r39 = "restoreToBackgroundColor";

        $z0 = virtualinvoke $r39.<java.lang.String: boolean equals(java.lang.Object)>($r38);

        if $z0 == 0 goto label4;

        $i8 = i15 + 1;

        if $i8 >= $i1 goto label3;

        $i10 = i15 + 1;

        $i11 = staticinvoke <com.sun.lwuit.tools.resourcebuilder.AnimationImpl: int getFrameTime(javax.imageio.ImageReader,int)>(r16, $i10);

        $i12 = staticinvoke <java.lang.Math: int max(int,int)>(40, $i11);

        $r41 = r19[i15];

        $i13 = i14 + $i12;

        virtualinvoke $r41.<com.sun.lwuit.animations.AnimationObject: void setEndTime(int)>($i13);

        goto label4;

     label3:
        $r40 = r19[i15];

        $i9 = i14 + $i5;

        virtualinvoke $r40.<com.sun.lwuit.animations.AnimationObject: void setEndTime(int)>($i9);

     label4:
        i14 = i14 + $i5;

        i15 = i15 + 1;

        goto label2;

     label5:
        $r20 = new com.sun.lwuit.geom.Dimension;

        $i2 = virtualinvoke r16.<javax.imageio.ImageReader: int getWidth(int)>(0);

        $i3 = virtualinvoke r16.<javax.imageio.ImageReader: int getHeight(int)>(0);

        specialinvoke $r20.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>($i2, $i3);

        $r21 = staticinvoke <com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.Timeline createTimeline(int,com.sun.lwuit.animations.AnimationObject[],com.sun.lwuit.geom.Dimension)>(i14, r19, $r20);

        virtualinvoke r22.<com.sun.lwuit.util.EditableResources: void setImage(java.lang.String,com.sun.lwuit.Image)>(r23, $r21);

        virtualinvoke r0.<com.sun.jwt.resources.editor.ResourceEditorView: void setSelectedResource(java.lang.String)>(r23);

     label6:
        goto label8;

     label7:
        $r42 := @caughtexception;

        virtualinvoke $r42.<java.io.IOException: void printStackTrace()>();

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading file ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r42);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>($r5, $r46, "IO Error", 0);

     label8:
        return;

        catch java.io.IOException from label1 to label6 with label7;
    }

    static java.lang.String getDisposalMethod(javax.imageio.ImageReader, int) throws java.io.IOException
    {
        javax.imageio.ImageReader r0;
        org.w3c.dom.NodeList $r3;
        javax.imageio.metadata.IIOMetadata $r1;
        org.w3c.dom.Node $r2, $r4, $r7;
        int i0, $i1, i2;
        org.w3c.dom.NamedNodeMap $r6;
        java.lang.String $r5, $r8;
        boolean $z0;

        r0 := @parameter0: javax.imageio.ImageReader;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<javax.imageio.ImageReader: javax.imageio.metadata.IIOMetadata getImageMetadata(int)>(i0);

        $r2 = virtualinvoke $r1.<javax.imageio.metadata.IIOMetadata: org.w3c.dom.Node getAsTree(java.lang.String)>("javax_imageio_gif_image_1.0");

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        i2 = 0;

     label1:
        $i1 = interfaceinvoke $r3.<org.w3c.dom.NodeList: int getLength()>();

        if i2 >= $i1 goto label3;

        $r4 = interfaceinvoke $r3.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i2);

        $r5 = interfaceinvoke $r4.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("GraphicControlExtension");

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r4.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>();

        $r7 = interfaceinvoke $r6.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node getNamedItem(java.lang.String)>("disposalMethod");

        $r8 = interfaceinvoke $r7.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        return $r8;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return null;
    }

    public void updatePosition(int, int, com.sun.lwuit.animations.AnimationObject, boolean)
    {
        com.sun.jwt.resources.editor.editors.AnimationObjectEditor $r25;
        boolean $z0, z1;
        com.sun.lwuit.util.EditableResources $r2, $r6;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;
        com.sun.lwuit.animations.AnimationObject[] $r23;
        com.sun.lwuit.geom.Dimension $r26;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, $i12, $i14, $i16;
        java.lang.String $r1;
        javax.swing.JSpinner $r14, $r16, $r17;
        com.sun.lwuit.animations.Timeline $r18, r24;
        javax.swing.JList $r7, $r10, $r20;
        com.sun.lwuit.Image $r3;
        com.sun.lwuit.animations.AnimationObject r5, $r12, $r13, $r19;
        javax.swing.DefaultListModel r9;
        java.lang.Object $r22;
        javax.swing.ListModel $r8, $r11, $r21;

        r0 := @this: com.sun.jwt.resources.editor.editors.TimelineEditor;

        i0 := @parameter0: int;

        i8 := @parameter1: int;

        r5 := @parameter2: com.sun.lwuit.animations.AnimationObject;

        z1 := @parameter3: boolean;

        $r2 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: com.sun.lwuit.util.EditableResources res>;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: java.lang.String name>;

        $r3 = virtualinvoke $r2.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.Image getImage(java.lang.String)>($r1);

        r24 = (com.sun.lwuit.animations.Timeline) $r3;

        $r25 = new com.sun.jwt.resources.editor.editors.AnimationObjectEditor;

        $r6 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: com.sun.lwuit.util.EditableResources res>;

        specialinvoke $r25.<com.sun.jwt.resources.editor.editors.AnimationObjectEditor: void <init>(com.sun.lwuit.util.EditableResources,com.sun.lwuit.animations.AnimationObject)>($r6, r5);

        $i14 = (int) -1;

        if i0 <= $i14 goto label1;

        virtualinvoke $r25.<com.sun.jwt.resources.editor.editors.AnimationObjectEditor: void updatePosition(int,int,boolean)>(i0, i8, z1);

     label1:
        $i1 = staticinvoke <javax.swing.JOptionPane: int showConfirmDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>(r0, $r25, "", 2);

        if $i1 != 0 goto label7;

        $r7 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JList animationObjectList>;

        $r8 = virtualinvoke $r7.<javax.swing.JList: javax.swing.ListModel getModel()>();

        r9 = (javax.swing.DefaultListModel) $r8;

        $i16 = (int) -1;

        i9 = $i16;

        i10 = 0;

     label2:
        $r10 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JList animationObjectList>;

        $r11 = virtualinvoke $r10.<javax.swing.JList: javax.swing.ListModel getModel()>();

        $i2 = interfaceinvoke $r11.<javax.swing.ListModel: int getSize()>();

        if i10 >= $i2 goto label4;

        $r20 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JList animationObjectList>;

        $r21 = virtualinvoke $r20.<javax.swing.JList: javax.swing.ListModel getModel()>();

        $r22 = interfaceinvoke $r21.<javax.swing.ListModel: java.lang.Object getElementAt(int)>(i10);

        if $r22 != r5 goto label3;

        i9 = i10;

        goto label4;

     label3:
        i10 = i10 + 1;

        goto label2;

     label4:
        $r12 = virtualinvoke $r25.<com.sun.jwt.resources.editor.editors.AnimationObjectEditor: com.sun.lwuit.animations.AnimationObject getAnimationObject()>();

        virtualinvoke r9.<javax.swing.DefaultListModel: void setElementAt(java.lang.Object,int)>($r12, i9);

        $i3 = virtualinvoke r24.<com.sun.lwuit.animations.Timeline: int getAnimationCount()>();

        $r23 = newarray (com.sun.lwuit.animations.AnimationObject)[$i3];

        i11 = 0;

     label5:
        $i12 = lengthof $r23;

        if i11 >= $i12 goto label6;

        $r19 = virtualinvoke r24.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.AnimationObject getAnimation(int)>(i11);

        $r23[i11] = $r19;

        i11 = i11 + 1;

        goto label5;

     label6:
        $r13 = virtualinvoke $r25.<com.sun.jwt.resources.editor.editors.AnimationObjectEditor: com.sun.lwuit.animations.AnimationObject getAnimationObject()>();

        $r23[i9] = $r13;

        $z0 = virtualinvoke r24.<com.sun.lwuit.animations.Timeline: boolean isPause()>();

        $i4 = virtualinvoke r24.<com.sun.lwuit.animations.Timeline: int getTime()>();

        $r14 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner duration>;

        $i5 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: int getValue(javax.swing.JSpinner)>($r14);

        $r26 = new com.sun.lwuit.geom.Dimension;

        $r16 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner width>;

        $i6 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: int getValue(javax.swing.JSpinner)>($r16);

        $r17 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner height>;

        $i7 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: int getValue(javax.swing.JSpinner)>($r17);

        specialinvoke $r26.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>($i6, $i7);

        $r18 = staticinvoke <com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.Timeline createTimeline(int,com.sun.lwuit.animations.AnimationObject[],com.sun.lwuit.geom.Dimension)>($i5, $r23, $r26);

        virtualinvoke $r18.<com.sun.lwuit.animations.Timeline: void setPause(boolean)>($z0);

        virtualinvoke $r18.<com.sun.lwuit.animations.Timeline: void setTime(int)>($i4);

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: void setImage(com.sun.lwuit.animations.Timeline)>($r18);

     label7:
        return;
    }

    public void setImage(com.sun.lwuit.animations.Timeline)
    {
        java.lang.Integer $r16, $r18, $r20;
        com.sun.jwt.resources.editor.editors.LWUITImageRenderer $r5, $r7, $r8;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String $r11, $r21;
        javax.swing.JSpinner $r15, $r17, $r19;
        com.sun.lwuit.animations.Timeline r3;
        javax.swing.JList $r4, $r6;
        com.sun.lwuit.util.EditableResources $r12, $r22;
        com.sun.lwuit.Image $r13;
        com.sun.lwuit.animations.AnimationObject $r23;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;
        javax.swing.DefaultListModel $r2;
        javax.swing.JSlider $r14;
        javax.swing.JPanel $r1, $r9, $r10;

        r0 := @this: com.sun.jwt.resources.editor.editors.TimelineEditor;

        r3 := @parameter0: com.sun.lwuit.animations.Timeline;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JPanel animationPanel>;

        virtualinvoke $r1.<javax.swing.JPanel: void removeAll()>();

        $r2 = new javax.swing.DefaultListModel;

        specialinvoke $r2.<javax.swing.DefaultListModel: void <init>()>();

        i5 = 0;

     label1:
        $i0 = virtualinvoke r3.<com.sun.lwuit.animations.Timeline: int getAnimationCount()>();

        if i5 >= $i0 goto label2;

        $r23 = virtualinvoke r3.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.AnimationObject getAnimation(int)>(i5);

        virtualinvoke $r2.<javax.swing.DefaultListModel: void addElement(java.lang.Object)>($r23);

        i5 = i5 + 1;

        goto label1;

     label2:
        $r4 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JList animationObjectList>;

        virtualinvoke $r4.<javax.swing.JList: void setModel(javax.swing.ListModel)>($r2);

        $r5 = new com.sun.jwt.resources.editor.editors.LWUITImageRenderer;

        specialinvoke $r5.<com.sun.jwt.resources.editor.editors.LWUITImageRenderer: void <init>(com.sun.lwuit.Image)>(r3);

        r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: com.sun.jwt.resources.editor.editors.LWUITImageRenderer renderer> = $r5;

        $r7 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: com.sun.jwt.resources.editor.editors.LWUITImageRenderer renderer>;

        $r6 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JList animationObjectList>;

        virtualinvoke $r7.<com.sun.jwt.resources.editor.editors.LWUITImageRenderer: void setAnimationObjectList(javax.swing.JList,com.sun.jwt.resources.editor.editors.TimelineEditor)>($r6, r0);

        $r9 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JPanel animationPanel>;

        $r8 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: com.sun.jwt.resources.editor.editors.LWUITImageRenderer renderer>;

        virtualinvoke $r9.<javax.swing.JPanel: java.awt.Component add(java.lang.String,java.awt.Component)>("Center", $r8);

        $r10 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JPanel animationPanel>;

        virtualinvoke $r10.<javax.swing.JPanel: void revalidate()>();

        $r12 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: com.sun.lwuit.util.EditableResources res>;

        $r11 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: java.lang.String name>;

        $r13 = virtualinvoke $r12.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.Image getImage(java.lang.String)>($r11);

        if r3 == $r13 goto label3;

        $r22 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: com.sun.lwuit.util.EditableResources res>;

        $r21 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: java.lang.String name>;

        virtualinvoke $r22.<com.sun.lwuit.util.EditableResources: void setImage(java.lang.String,com.sun.lwuit.Image)>($r21, r3);

     label3:
        $r14 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSlider timeline>;

        $i1 = virtualinvoke r3.<com.sun.lwuit.animations.Timeline: int getDuration()>();

        virtualinvoke $r14.<javax.swing.JSlider: void setMaximum(int)>($i1);

        $r15 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner duration>;

        $i2 = virtualinvoke r3.<com.sun.lwuit.animations.Timeline: int getDuration()>();

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r15.<javax.swing.JSpinner: void setValue(java.lang.Object)>($r16);

        $r17 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner width>;

        $i3 = virtualinvoke r3.<com.sun.lwuit.animations.Timeline: int getWidth()>();

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke $r17.<javax.swing.JSpinner: void setValue(java.lang.Object)>($r18);

        $r19 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner height>;

        $i4 = virtualinvoke r3.<com.sun.lwuit.animations.Timeline: int getHeight()>();

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        virtualinvoke $r19.<javax.swing.JSpinner: void setValue(java.lang.Object)>($r20);

        return;
    }

    private void initComponents()
    {
        javax.swing.JScrollPane $r109, $r113, $r133, $r176, $r284;
        javax.swing.JSlider $r226, $r227, $r228, $r229, $r245, $r265, $r291;
        int $i1, $i3, $i5, $i7, $i9, $i11, $i13, $i15, $i17, $i19, $i21, $i23, $i25, $i27, $i29, $i31, $i33, $i35, $i37, $i39, $i41;
        javax.swing.JList $r110, $r111, $r112, $r285;
        org.jdesktop.layout.GroupLayout$ParallelGroup $r51, $r54, $r56, $r58, $r60, $r63, $r65, $r67, $r69, $r72, $r73, $r76, $r78, $r80, $r83, $r85, $r87, $r90, $r92, $r94, $r97, $r129, $r132, $r134, $r150, $r153, $r160, $r163, $r165, $r167, $r169, $r171, $r173, $r179, $r192, $r201, $r202, $r204, $r205, $r206, $r209, $r211, $r213, $r216, $r217, $r222, $r223, $r235, $r238, $r240, $r250, $r253, $r254, $r260, $r262, $r264, $r266, $r269;
        javax.swing.JPanel $r27, $r29, $r30, $r32, $r34, $r35, $r49, $r50, $r98, $r100, $r101, $r127, $r128, $r180, $r190, $r191, $r224, $r271, $r272, $r274, $r281;
        javax.swing.JTabbedPane $r33, $r99, $r181, $r203, $r219, $r273;
        java.awt.Component[] $r154;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;
        org.jdesktop.layout.GroupLayout $r296, $r297, $r298, $r299;
        javax.swing.JSpinner $r40, $r41, $r42, $r43, $r46, $r47, $r64, $r66, $r68, $r79, $r86, $r93, $r277, $r278, $r280;
        com.sun.jwt.resources.editor.editors.TimelineEditor$FormListener $r294;
        javax.swing.JLabel $r36, $r37, $r38, $r39, $r44, $r45, $r55, $r57, $r59, $r77, $r84, $r91, $r230, $r231, $r232, $r233, $r242, $r248, $r261, $r263, $r275, $r276, $r279, $r292, $r293;
        org.jdesktop.layout.GroupLayout$SequentialGroup $r52, $r53, $r61, $r62, $r70, $r71, $r74, $r75, $r81, $r82, $r88, $r89, $r95, $r96, $r130, $r131, $r135, $r137, $r138, $r140, $r141, $r143, $r144, $r146, $r147, $r149, $r151, $r152, $r161, $r162, $r174, $r175, $r177, $r178, $r193, $r194, $r196, $r197, $r199, $r200, $r207, $r208, $r214, $r215, $r218, $r220, $r221, $r236, $r237, $r241, $r243, $r244, $r246, $r247, $r249, $r251, $r252, $r255, $r256, $r258, $r259, $r267, $r268;
        java.awt.BorderLayout $r295;
        javax.swing.JSplitPane $r26, $r31, $r225, $r239, $r257, $r270;
        javax.swing.JButton $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r114, $r115, $r116, $r117, $r118, $r119, $r120, $r121, $r122, $r123, $r124, $r125, $r136, $r139, $r142, $r145, $r148, $r155, $r156, $r157, $r158, $r159, $r164, $r166, $r168, $r170, $r172, $r182, $r183, $r184, $r185, $r186, $r187, $r188, $r195, $r198, $r210, $r212, $r282, $r283, $r286, $r287, $r288, $r289, $r290;

        r0 := @this: com.sun.jwt.resources.editor.editors.TimelineEditor;

        $r270 = new javax.swing.JSplitPane;

        specialinvoke $r270.<javax.swing.JSplitPane: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSplitPane jSplitPane1> = $r270;

        $r271 = new javax.swing.JPanel;

        specialinvoke $r271.<javax.swing.JPanel: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JPanel animationPanel> = $r271;

        $r272 = new javax.swing.JPanel;

        specialinvoke $r272.<javax.swing.JPanel: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JPanel jPanel3> = $r272;

        $r273 = new javax.swing.JTabbedPane;

        specialinvoke $r273.<javax.swing.JTabbedPane: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JTabbedPane propertiesTab> = $r273;

        $r274 = new javax.swing.JPanel;

        specialinvoke $r274.<javax.swing.JPanel: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JPanel jPanel1> = $r274;

        $r275 = new javax.swing.JLabel;

        specialinvoke $r275.<javax.swing.JLabel: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JLabel jLabel1> = $r275;

        $r276 = new javax.swing.JLabel;

        specialinvoke $r276.<javax.swing.JLabel: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JLabel jLabel2> = $r276;

        $r277 = new javax.swing.JSpinner;

        specialinvoke $r277.<javax.swing.JSpinner: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner duration> = $r277;

        $r278 = new javax.swing.JSpinner;

        specialinvoke $r278.<javax.swing.JSpinner: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner width> = $r278;

        $r279 = new javax.swing.JLabel;

        specialinvoke $r279.<javax.swing.JLabel: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JLabel jLabel4> = $r279;

        $r280 = new javax.swing.JSpinner;

        specialinvoke $r280.<javax.swing.JSpinner: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner height> = $r280;

        $r281 = new javax.swing.JPanel;

        specialinvoke $r281.<javax.swing.JPanel: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JPanel jPanel2> = $r281;

        $r282 = new javax.swing.JButton;

        specialinvoke $r282.<javax.swing.JButton: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton addAnimationObject> = $r282;

        $r283 = new javax.swing.JButton;

        specialinvoke $r283.<javax.swing.JButton: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton removeAnimationObject> = $r283;

        $r284 = new javax.swing.JScrollPane;

        specialinvoke $r284.<javax.swing.JScrollPane: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JScrollPane jScrollPane1> = $r284;

        $r285 = new javax.swing.JList;

        specialinvoke $r285.<javax.swing.JList: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JList animationObjectList> = $r285;

        $r286 = new javax.swing.JButton;

        specialinvoke $r286.<javax.swing.JButton: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton duplicateObject> = $r286;

        $r287 = new javax.swing.JButton;

        specialinvoke $r287.<javax.swing.JButton: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton moveUp> = $r287;

        $r288 = new javax.swing.JButton;

        specialinvoke $r288.<javax.swing.JButton: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton moveDown> = $r288;

        $r289 = new javax.swing.JButton;

        specialinvoke $r289.<javax.swing.JButton: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton play> = $r289;

        $r290 = new javax.swing.JButton;

        specialinvoke $r290.<javax.swing.JButton: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton pause> = $r290;

        $r291 = new javax.swing.JSlider;

        specialinvoke $r291.<javax.swing.JSlider: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSlider timeline> = $r291;

        $r292 = new javax.swing.JLabel;

        specialinvoke $r292.<javax.swing.JLabel: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JLabel currentTime> = $r292;

        $r293 = new javax.swing.JLabel;

        specialinvoke $r293.<javax.swing.JLabel: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JLabel endTime> = $r293;

        $r294 = new com.sun.jwt.resources.editor.editors.TimelineEditor$FormListener;

        specialinvoke $r294.<com.sun.jwt.resources.editor.editors.TimelineEditor$FormListener: void <init>(com.sun.jwt.resources.editor.editors.TimelineEditor)>(r0);

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: void setName(java.lang.String)>("Form");

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: void setOpaque(boolean)>(0);

        $r26 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSplitPane jSplitPane1>;

        virtualinvoke $r26.<javax.swing.JSplitPane: void setName(java.lang.String)>("jSplitPane1");

        $r27 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JPanel animationPanel>;

        virtualinvoke $r27.<javax.swing.JPanel: void setName(java.lang.String)>("animationPanel");

        $r29 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JPanel animationPanel>;

        $r295 = new java.awt.BorderLayout;

        specialinvoke $r295.<java.awt.BorderLayout: void <init>()>();

        virtualinvoke $r29.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r295);

        $r31 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSplitPane jSplitPane1>;

        $r30 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JPanel animationPanel>;

        virtualinvoke $r31.<javax.swing.JSplitPane: void setLeftComponent(java.awt.Component)>($r30);

        $r32 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JPanel jPanel3>;

        virtualinvoke $r32.<javax.swing.JPanel: void setName(java.lang.String)>("jPanel3");

        $r33 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JTabbedPane propertiesTab>;

        virtualinvoke $r33.<javax.swing.JTabbedPane: void setName(java.lang.String)>("propertiesTab");

        $r34 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JPanel jPanel1>;

        virtualinvoke $r34.<javax.swing.JPanel: void setName(java.lang.String)>("jPanel1");

        $r35 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JPanel jPanel1>;

        virtualinvoke $r35.<javax.swing.JPanel: void setOpaque(boolean)>(0);

        $r36 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JLabel jLabel1>;

        virtualinvoke $r36.<javax.swing.JLabel: void setText(java.lang.String)>("Duration");

        $r37 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JLabel jLabel1>;

        virtualinvoke $r37.<javax.swing.JLabel: void setName(java.lang.String)>("jLabel1");

        $r38 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JLabel jLabel2>;

        virtualinvoke $r38.<javax.swing.JLabel: void setText(java.lang.String)>("Width");

        $r39 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JLabel jLabel2>;

        virtualinvoke $r39.<javax.swing.JLabel: void setName(java.lang.String)>("jLabel2");

        $r40 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner duration>;

        virtualinvoke $r40.<javax.swing.JSpinner: void setName(java.lang.String)>("duration");

        $r41 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner duration>;

        virtualinvoke $r41.<javax.swing.JSpinner: void addChangeListener(javax.swing.event.ChangeListener)>($r294);

        $r42 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner width>;

        virtualinvoke $r42.<javax.swing.JSpinner: void setName(java.lang.String)>("width");

        $r43 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner width>;

        virtualinvoke $r43.<javax.swing.JSpinner: void addChangeListener(javax.swing.event.ChangeListener)>($r294);

        $r44 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JLabel jLabel4>;

        virtualinvoke $r44.<javax.swing.JLabel: void setText(java.lang.String)>("Height");

        $r45 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JLabel jLabel4>;

        virtualinvoke $r45.<javax.swing.JLabel: void setName(java.lang.String)>("jLabel4");

        $r46 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner height>;

        virtualinvoke $r46.<javax.swing.JSpinner: void setName(java.lang.String)>("height");

        $r47 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner height>;

        virtualinvoke $r47.<javax.swing.JSpinner: void addChangeListener(javax.swing.event.ChangeListener)>($r294);

        $r296 = new org.jdesktop.layout.GroupLayout;

        $r49 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JPanel jPanel1>;

        specialinvoke $r296.<org.jdesktop.layout.GroupLayout: void <init>(java.awt.Container)>($r49);

        $r50 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JPanel jPanel1>;

        virtualinvoke $r50.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r296);

        $r51 = virtualinvoke $r296.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(1);

        $r52 = virtualinvoke $r296.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$SequentialGroup createSequentialGroup()>();

        $r53 = virtualinvoke $r52.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addContainerGap()>();

        $r54 = virtualinvoke $r296.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(1);

        $r55 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JLabel jLabel1>;

        $r56 = virtualinvoke $r54.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r55);

        $r57 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JLabel jLabel2>;

        $r58 = virtualinvoke $r56.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r57);

        $r59 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JLabel jLabel4>;

        $r60 = virtualinvoke $r58.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r59);

        $r61 = virtualinvoke $r53.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(org.jdesktop.layout.GroupLayout$Group)>($r60);

        $r62 = virtualinvoke $r61.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(int,int,int)>(33, 33, 33);

        $r63 = virtualinvoke $r296.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(1);

        $r64 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner width>;

        $i1 = (int) -1;

        $r65 = virtualinvoke $r63.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component,int,int,int)>($r64, $i1, 433, 32767);

        $r66 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner duration>;

        $i3 = (int) -1;

        $r67 = virtualinvoke $r65.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component,int,int,int)>($r66, $i3, 433, 32767);

        $r68 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner height>;

        $i5 = (int) -1;

        $r69 = virtualinvoke $r67.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component,int,int,int)>($r68, $i5, 433, 32767);

        $r70 = virtualinvoke $r62.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(org.jdesktop.layout.GroupLayout$Group)>($r69);

        $r71 = virtualinvoke $r70.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addContainerGap()>();

        $r72 = virtualinvoke $r51.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(org.jdesktop.layout.GroupLayout$Group)>($r71);

        virtualinvoke $r296.<org.jdesktop.layout.GroupLayout: void setHorizontalGroup(org.jdesktop.layout.GroupLayout$Group)>($r72);

        $r73 = virtualinvoke $r296.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(1);

        $r74 = virtualinvoke $r296.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$SequentialGroup createSequentialGroup()>();

        $r75 = virtualinvoke $r74.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addContainerGap()>();

        $r76 = virtualinvoke $r296.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(3);

        $r77 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JLabel jLabel1>;

        $r78 = virtualinvoke $r76.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r77);

        $r79 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner duration>;

        $i7 = (int) -2;

        $i9 = (int) -1;

        $i11 = (int) -2;

        $r80 = virtualinvoke $r78.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component,int,int,int)>($r79, $i7, $i9, $i11);

        $r81 = virtualinvoke $r75.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(org.jdesktop.layout.GroupLayout$Group)>($r80);

        $r82 = virtualinvoke $r81.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(int)>(0);

        $r83 = virtualinvoke $r296.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(3);

        $r84 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JLabel jLabel2>;

        $r85 = virtualinvoke $r83.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r84);

        $r86 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner width>;

        $i13 = (int) -2;

        $i15 = (int) -1;

        $i17 = (int) -2;

        $r87 = virtualinvoke $r85.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component,int,int,int)>($r86, $i13, $i15, $i17);

        $r88 = virtualinvoke $r82.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(org.jdesktop.layout.GroupLayout$Group)>($r87);

        $r89 = virtualinvoke $r88.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(int)>(0);

        $r90 = virtualinvoke $r296.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(3);

        $r91 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JLabel jLabel4>;

        $r92 = virtualinvoke $r90.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r91);

        $r93 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner height>;

        $i19 = (int) -2;

        $i21 = (int) -1;

        $i23 = (int) -2;

        $r94 = virtualinvoke $r92.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component,int,int,int)>($r93, $i19, $i21, $i23);

        $r95 = virtualinvoke $r89.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(org.jdesktop.layout.GroupLayout$Group)>($r94);

        $r96 = virtualinvoke $r95.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addContainerGap(int,int)>(175, 32767);

        $r97 = virtualinvoke $r73.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(org.jdesktop.layout.GroupLayout$Group)>($r96);

        virtualinvoke $r296.<org.jdesktop.layout.GroupLayout: void setVerticalGroup(org.jdesktop.layout.GroupLayout$Group)>($r97);

        $r99 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JTabbedPane propertiesTab>;

        $r98 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JPanel jPanel1>;

        virtualinvoke $r99.<javax.swing.JTabbedPane: void addTab(java.lang.String,java.awt.Component)>("Timeline", $r98);

        $r100 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JPanel jPanel2>;

        virtualinvoke $r100.<javax.swing.JPanel: void setName(java.lang.String)>("jPanel2");

        $r101 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JPanel jPanel2>;

        virtualinvoke $r101.<javax.swing.JPanel: void setOpaque(boolean)>(0);

        $r102 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton addAnimationObject>;

        virtualinvoke $r102.<javax.swing.JButton: void setText(java.lang.String)>("Add");

        $r103 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton addAnimationObject>;

        virtualinvoke $r103.<javax.swing.JButton: void setName(java.lang.String)>("addAnimationObject");

        $r104 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton addAnimationObject>;

        virtualinvoke $r104.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r294);

        $r105 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton removeAnimationObject>;

        virtualinvoke $r105.<javax.swing.JButton: void setText(java.lang.String)>("Remove");

        $r106 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton removeAnimationObject>;

        virtualinvoke $r106.<javax.swing.JButton: void setEnabled(boolean)>(0);

        $r107 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton removeAnimationObject>;

        virtualinvoke $r107.<javax.swing.JButton: void setName(java.lang.String)>("removeAnimationObject");

        $r108 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton removeAnimationObject>;

        virtualinvoke $r108.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r294);

        $r109 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JScrollPane jScrollPane1>;

        virtualinvoke $r109.<javax.swing.JScrollPane: void setName(java.lang.String)>("jScrollPane1");

        $r110 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JList animationObjectList>;

        virtualinvoke $r110.<javax.swing.JList: void setSelectionMode(int)>(0);

        $r111 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JList animationObjectList>;

        virtualinvoke $r111.<javax.swing.JList: void setName(java.lang.String)>("animationObjectList");

        $r113 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JScrollPane jScrollPane1>;

        $r112 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JList animationObjectList>;

        virtualinvoke $r113.<javax.swing.JScrollPane: void setViewportView(java.awt.Component)>($r112);

        $r114 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton duplicateObject>;

        virtualinvoke $r114.<javax.swing.JButton: void setText(java.lang.String)>("Duplicate");

        $r115 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton duplicateObject>;

        virtualinvoke $r115.<javax.swing.JButton: void setEnabled(boolean)>(0);

        $r116 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton duplicateObject>;

        virtualinvoke $r116.<javax.swing.JButton: void setName(java.lang.String)>("duplicateObject");

        $r117 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton duplicateObject>;

        virtualinvoke $r117.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r294);

        $r118 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton moveUp>;

        virtualinvoke $r118.<javax.swing.JButton: void setText(java.lang.String)>("Move Up");

        $r119 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton moveUp>;

        virtualinvoke $r119.<javax.swing.JButton: void setEnabled(boolean)>(0);

        $r120 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton moveUp>;

        virtualinvoke $r120.<javax.swing.JButton: void setName(java.lang.String)>("moveUp");

        $r121 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton moveUp>;

        virtualinvoke $r121.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r294);

        $r122 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton moveDown>;

        virtualinvoke $r122.<javax.swing.JButton: void setText(java.lang.String)>("Move Down");

        $r123 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton moveDown>;

        virtualinvoke $r123.<javax.swing.JButton: void setEnabled(boolean)>(0);

        $r124 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton moveDown>;

        virtualinvoke $r124.<javax.swing.JButton: void setName(java.lang.String)>("moveDown");

        $r125 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton moveDown>;

        virtualinvoke $r125.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r294);

        $r297 = new org.jdesktop.layout.GroupLayout;

        $r127 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JPanel jPanel2>;

        specialinvoke $r297.<org.jdesktop.layout.GroupLayout: void <init>(java.awt.Container)>($r127);

        $r128 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JPanel jPanel2>;

        virtualinvoke $r128.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r297);

        $r129 = virtualinvoke $r297.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(1);

        $r130 = virtualinvoke $r297.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$SequentialGroup createSequentialGroup()>();

        $r131 = virtualinvoke $r130.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addContainerGap()>();

        $r132 = virtualinvoke $r297.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(1);

        $r133 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JScrollPane jScrollPane1>;

        $i25 = (int) -1;

        $r134 = virtualinvoke $r132.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component,int,int,int)>($r133, $i25, 507, 32767);

        $r135 = virtualinvoke $r297.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$SequentialGroup createSequentialGroup()>();

        $r136 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton addAnimationObject>;

        $r137 = virtualinvoke $r135.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component)>($r136);

        $r138 = virtualinvoke $r137.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(int)>(0);

        $r139 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton removeAnimationObject>;

        $r140 = virtualinvoke $r138.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component)>($r139);

        $r141 = virtualinvoke $r140.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(int)>(0);

        $r142 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton duplicateObject>;

        $r143 = virtualinvoke $r141.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component)>($r142);

        $r144 = virtualinvoke $r143.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(int)>(0);

        $r145 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton moveUp>;

        $r146 = virtualinvoke $r144.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component)>($r145);

        $r147 = virtualinvoke $r146.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(int)>(0);

        $r148 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton moveDown>;

        $r149 = virtualinvoke $r147.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component)>($r148);

        $r150 = virtualinvoke $r134.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(org.jdesktop.layout.GroupLayout$Group)>($r149);

        $r151 = virtualinvoke $r131.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(org.jdesktop.layout.GroupLayout$Group)>($r150);

        $r152 = virtualinvoke $r151.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addContainerGap()>();

        $r153 = virtualinvoke $r129.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(org.jdesktop.layout.GroupLayout$Group)>($r152);

        virtualinvoke $r297.<org.jdesktop.layout.GroupLayout: void setHorizontalGroup(org.jdesktop.layout.GroupLayout$Group)>($r153);

        $r154 = newarray (java.awt.Component)[5];

        $r155 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton addAnimationObject>;

        $r154[0] = $r155;

        $r156 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton duplicateObject>;

        $r154[1] = $r156;

        $r157 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton moveDown>;

        $r154[2] = $r157;

        $r158 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton moveUp>;

        $r154[3] = $r158;

        $r159 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton removeAnimationObject>;

        $r154[4] = $r159;

        virtualinvoke $r297.<org.jdesktop.layout.GroupLayout: void linkSize(java.awt.Component[],int)>($r154, 1);

        $r160 = virtualinvoke $r297.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(1);

        $r161 = virtualinvoke $r297.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$SequentialGroup createSequentialGroup()>();

        $r162 = virtualinvoke $r161.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addContainerGap()>();

        $r163 = virtualinvoke $r297.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(3);

        $r164 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton addAnimationObject>;

        $r165 = virtualinvoke $r163.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r164);

        $r166 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton removeAnimationObject>;

        $r167 = virtualinvoke $r165.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r166);

        $r168 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton duplicateObject>;

        $r169 = virtualinvoke $r167.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r168);

        $r170 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton moveUp>;

        $r171 = virtualinvoke $r169.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r170);

        $r172 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton moveDown>;

        $r173 = virtualinvoke $r171.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r172);

        $r174 = virtualinvoke $r162.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(org.jdesktop.layout.GroupLayout$Group)>($r173);

        $r175 = virtualinvoke $r174.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(int)>(0);

        $r176 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JScrollPane jScrollPane1>;

        $i27 = (int) -1;

        $r177 = virtualinvoke $r175.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component,int,int,int)>($r176, $i27, 207, 32767);

        $r178 = virtualinvoke $r177.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addContainerGap()>();

        $r179 = virtualinvoke $r160.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(org.jdesktop.layout.GroupLayout$Group)>($r178);

        virtualinvoke $r297.<org.jdesktop.layout.GroupLayout: void setVerticalGroup(org.jdesktop.layout.GroupLayout$Group)>($r179);

        $r181 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JTabbedPane propertiesTab>;

        $r180 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JPanel jPanel2>;

        virtualinvoke $r181.<javax.swing.JTabbedPane: void addTab(java.lang.String,java.awt.Component)>("Objects", $r180);

        $r182 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton play>;

        virtualinvoke $r182.<javax.swing.JButton: void setText(java.lang.String)>("Play");

        $r183 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton play>;

        virtualinvoke $r183.<javax.swing.JButton: void setName(java.lang.String)>("play");

        $r184 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton play>;

        virtualinvoke $r184.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r294);

        $r185 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton pause>;

        virtualinvoke $r185.<javax.swing.JButton: void setText(java.lang.String)>("Pause");

        $r186 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton pause>;

        virtualinvoke $r186.<javax.swing.JButton: void setEnabled(boolean)>(0);

        $r187 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton pause>;

        virtualinvoke $r187.<javax.swing.JButton: void setName(java.lang.String)>("pause");

        $r188 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton pause>;

        virtualinvoke $r188.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r294);

        $r298 = new org.jdesktop.layout.GroupLayout;

        $r190 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JPanel jPanel3>;

        specialinvoke $r298.<org.jdesktop.layout.GroupLayout: void <init>(java.awt.Container)>($r190);

        $r191 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JPanel jPanel3>;

        virtualinvoke $r191.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r298);

        $r192 = virtualinvoke $r298.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(1);

        $r193 = virtualinvoke $r298.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$SequentialGroup createSequentialGroup()>();

        $r194 = virtualinvoke $r193.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addContainerGap()>();

        $r195 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton play>;

        $r196 = virtualinvoke $r194.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component)>($r195);

        $r197 = virtualinvoke $r196.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(int)>(0);

        $r198 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton pause>;

        $r199 = virtualinvoke $r197.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component)>($r198);

        $r200 = virtualinvoke $r199.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addContainerGap(int,int)>(402, 32767);

        $r201 = virtualinvoke $r192.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(org.jdesktop.layout.GroupLayout$Group)>($r200);

        $r202 = virtualinvoke $r298.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(1);

        $r203 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JTabbedPane propertiesTab>;

        $i29 = (int) -1;

        $r204 = virtualinvoke $r202.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component,int,int,int)>($r203, $i29, 532, 32767);

        $r205 = virtualinvoke $r201.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(org.jdesktop.layout.GroupLayout$Group)>($r204);

        virtualinvoke $r298.<org.jdesktop.layout.GroupLayout: void setHorizontalGroup(org.jdesktop.layout.GroupLayout$Group)>($r205);

        $r206 = virtualinvoke $r298.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(1);

        $r207 = virtualinvoke $r298.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$SequentialGroup createSequentialGroup()>();

        $r208 = virtualinvoke $r207.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addContainerGap(int,int)>(297, 32767);

        $r209 = virtualinvoke $r298.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(3);

        $r210 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton play>;

        $r211 = virtualinvoke $r209.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r210);

        $r212 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton pause>;

        $r213 = virtualinvoke $r211.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r212);

        $r214 = virtualinvoke $r208.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(org.jdesktop.layout.GroupLayout$Group)>($r213);

        $r215 = virtualinvoke $r214.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addContainerGap()>();

        $r216 = virtualinvoke $r206.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(int,org.jdesktop.layout.GroupLayout$Group)>(2, $r215);

        $r217 = virtualinvoke $r298.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(1);

        $r218 = virtualinvoke $r298.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$SequentialGroup createSequentialGroup()>();

        $r219 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JTabbedPane propertiesTab>;

        $r220 = virtualinvoke $r218.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component)>($r219);

        $r221 = virtualinvoke $r220.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(int,int,int)>(45, 45, 45);

        $r222 = virtualinvoke $r217.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(org.jdesktop.layout.GroupLayout$Group)>($r221);

        $r223 = virtualinvoke $r216.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(org.jdesktop.layout.GroupLayout$Group)>($r222);

        virtualinvoke $r298.<org.jdesktop.layout.GroupLayout: void setVerticalGroup(org.jdesktop.layout.GroupLayout$Group)>($r223);

        $r225 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSplitPane jSplitPane1>;

        $r224 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JPanel jPanel3>;

        virtualinvoke $r225.<javax.swing.JSplitPane: void setRightComponent(java.awt.Component)>($r224);

        $r226 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSlider timeline>;

        virtualinvoke $r226.<javax.swing.JSlider: void setMaximum(int)>(20000);

        $r227 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSlider timeline>;

        virtualinvoke $r227.<javax.swing.JSlider: void setValue(int)>(0);

        $r228 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSlider timeline>;

        virtualinvoke $r228.<javax.swing.JSlider: void setName(java.lang.String)>("timeline");

        $r229 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSlider timeline>;

        virtualinvoke $r229.<javax.swing.JSlider: void addChangeListener(javax.swing.event.ChangeListener)>($r294);

        $r230 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JLabel currentTime>;

        virtualinvoke $r230.<javax.swing.JLabel: void setText(java.lang.String)>("0");

        $r231 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JLabel currentTime>;

        virtualinvoke $r231.<javax.swing.JLabel: void setName(java.lang.String)>("currentTime");

        $r232 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JLabel endTime>;

        virtualinvoke $r232.<javax.swing.JLabel: void setText(java.lang.String)>("20000");

        $r233 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JLabel endTime>;

        virtualinvoke $r233.<javax.swing.JLabel: void setName(java.lang.String)>("endTime");

        $r299 = new org.jdesktop.layout.GroupLayout;

        specialinvoke $r299.<org.jdesktop.layout.GroupLayout: void <init>(java.awt.Container)>(r0);

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: void setLayout(java.awt.LayoutManager)>($r299);

        $r235 = virtualinvoke $r299.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(1);

        $r236 = virtualinvoke $r299.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$SequentialGroup createSequentialGroup()>();

        $r237 = virtualinvoke $r236.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addContainerGap()>();

        $r238 = virtualinvoke $r299.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(2);

        $r239 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSplitPane jSplitPane1>;

        $i31 = (int) -1;

        $r240 = virtualinvoke $r238.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(int,java.awt.Component,int,int,int)>(1, $r239, $i31, 539, 32767);

        $r241 = virtualinvoke $r299.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$SequentialGroup createSequentialGroup()>();

        $r242 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JLabel currentTime>;

        $r243 = virtualinvoke $r241.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component)>($r242);

        $r244 = virtualinvoke $r243.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(int,int,int)>(18, 18, 18);

        $r245 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSlider timeline>;

        $i33 = (int) -1;

        $r246 = virtualinvoke $r244.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component,int,int,int)>($r245, $i33, 467, 32767);

        $r247 = virtualinvoke $r246.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(int,int,int)>(18, 18, 18);

        $r248 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JLabel endTime>;

        $r249 = virtualinvoke $r247.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component)>($r248);

        $r250 = virtualinvoke $r240.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(org.jdesktop.layout.GroupLayout$Group)>($r249);

        $r251 = virtualinvoke $r237.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(org.jdesktop.layout.GroupLayout$Group)>($r250);

        $r252 = virtualinvoke $r251.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addContainerGap()>();

        $r253 = virtualinvoke $r235.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(int,org.jdesktop.layout.GroupLayout$Group)>(2, $r252);

        virtualinvoke $r299.<org.jdesktop.layout.GroupLayout: void setHorizontalGroup(org.jdesktop.layout.GroupLayout$Group)>($r253);

        $r254 = virtualinvoke $r299.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(1);

        $r255 = virtualinvoke $r299.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$SequentialGroup createSequentialGroup()>();

        $r256 = virtualinvoke $r255.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addContainerGap()>();

        $r257 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSplitPane jSplitPane1>;

        $i35 = (int) -1;

        $r258 = virtualinvoke $r256.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component,int,int,int)>($r257, $i35, 333, 32767);

        $r259 = virtualinvoke $r258.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(int)>(1);

        $r260 = virtualinvoke $r299.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(2);

        $r261 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JLabel currentTime>;

        $r262 = virtualinvoke $r260.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r261);

        $r263 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JLabel endTime>;

        $r264 = virtualinvoke $r262.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r263);

        $r265 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSlider timeline>;

        $i37 = (int) -2;

        $i39 = (int) -1;

        $i41 = (int) -2;

        $r266 = virtualinvoke $r264.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component,int,int,int)>($r265, $i37, $i39, $i41);

        $r267 = virtualinvoke $r259.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(org.jdesktop.layout.GroupLayout$Group)>($r266);

        $r268 = virtualinvoke $r267.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addContainerGap()>();

        $r269 = virtualinvoke $r254.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(int,org.jdesktop.layout.GroupLayout$Group)>(2, $r268);

        virtualinvoke $r299.<org.jdesktop.layout.GroupLayout: void setVerticalGroup(org.jdesktop.layout.GroupLayout$Group)>($r269);

        return;
    }

    private com.sun.lwuit.animations.Timeline cloneCurrentTimeline()
    {
        com.sun.lwuit.animations.AnimationObject[] r5;
        com.sun.lwuit.geom.Dimension $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.String $r1;
        boolean $z0;
        javax.swing.JSpinner $r6, $r8, $r9;
        com.sun.lwuit.animations.Timeline r4, $r10;
        com.sun.lwuit.util.EditableResources $r2;
        com.sun.lwuit.Image $r3;
        com.sun.lwuit.animations.AnimationObject $r11;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;

        r0 := @this: com.sun.jwt.resources.editor.editors.TimelineEditor;

        $r2 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: com.sun.lwuit.util.EditableResources res>;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: java.lang.String name>;

        $r3 = virtualinvoke $r2.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.Image getImage(java.lang.String)>($r1);

        r4 = (com.sun.lwuit.animations.Timeline) $r3;

        $i0 = virtualinvoke r4.<com.sun.lwuit.animations.Timeline: int getAnimationCount()>();

        r5 = newarray (com.sun.lwuit.animations.AnimationObject)[$i0];

        i6 = 0;

     label1:
        $i1 = lengthof r5;

        if i6 >= $i1 goto label2;

        $r11 = virtualinvoke r4.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.AnimationObject getAnimation(int)>(i6);

        r5[i6] = $r11;

        i6 = i6 + 1;

        goto label1;

     label2:
        $r6 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner duration>;

        $i2 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: int getValue(javax.swing.JSpinner)>($r6);

        $r7 = new com.sun.lwuit.geom.Dimension;

        $r8 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner width>;

        $i3 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: int getValue(javax.swing.JSpinner)>($r8);

        $r9 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner height>;

        $i4 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: int getValue(javax.swing.JSpinner)>($r9);

        specialinvoke $r7.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>($i3, $i4);

        $r10 = staticinvoke <com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.Timeline createTimeline(int,com.sun.lwuit.animations.AnimationObject[],com.sun.lwuit.geom.Dimension)>($i2, r5, $r7);

        $z0 = virtualinvoke r4.<com.sun.lwuit.animations.Timeline: boolean isPause()>();

        virtualinvoke $r10.<com.sun.lwuit.animations.Timeline: void setPause(boolean)>($z0);

        $i5 = virtualinvoke r4.<com.sun.lwuit.animations.Timeline: int getTime()>();

        virtualinvoke $r10.<com.sun.lwuit.animations.Timeline: void setTime(int)>($i5);

        return $r10;
    }

    private void durationStateChanged(javax.swing.event.ChangeEvent)
    {
        com.sun.jwt.resources.editor.editors.LWUITImageRenderer $r2;
        int $i0, $i1;
        java.lang.String $r10, $r12;
        javax.swing.event.ChangeEvent r14;
        javax.swing.JSpinner $r1;
        com.sun.lwuit.animations.Timeline $r4, $r5;
        com.sun.lwuit.util.EditableResources $r13;
        com.sun.lwuit.Image $r3;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;
        javax.swing.JLabel $r7;
        javax.swing.JSlider $r11;
        java.lang.StringBuilder $r6, $r8, $r9;

        r0 := @this: com.sun.jwt.resources.editor.editors.TimelineEditor;

        r14 := @parameter0: javax.swing.event.ChangeEvent;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner duration>;

        $i0 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: int getValue(javax.swing.JSpinner)>($r1);

        $r2 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: com.sun.jwt.resources.editor.editors.LWUITImageRenderer renderer>;

        $r3 = virtualinvoke $r2.<com.sun.jwt.resources.editor.editors.LWUITImageRenderer: com.sun.lwuit.Image getImage()>();

        $r4 = (com.sun.lwuit.animations.Timeline) $r3;

        $i1 = virtualinvoke $r4.<com.sun.lwuit.animations.Timeline: int getDuration()>();

        if $i0 == $i1 goto label1;

        $r5 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: com.sun.lwuit.animations.Timeline cloneCurrentTimeline()>();

        $r7 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JLabel endTime>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<javax.swing.JLabel: void setText(java.lang.String)>($r10);

        $r11 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSlider timeline>;

        virtualinvoke $r11.<javax.swing.JSlider: void setMaximum(int)>($i0);

        $r13 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: com.sun.lwuit.util.EditableResources res>;

        $r12 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: java.lang.String name>;

        virtualinvoke $r13.<com.sun.lwuit.util.EditableResources: void setImage(java.lang.String,com.sun.lwuit.Image)>($r12, $r5);

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: void setImage(com.sun.lwuit.animations.Timeline)>($r5);

     label1:
        return;
    }

    private void widthStateChanged(javax.swing.event.ChangeEvent)
    {
        javax.swing.event.ChangeEvent r11;
        javax.swing.JSpinner $r1;
        com.sun.lwuit.animations.Timeline $r4;
        com.sun.lwuit.util.EditableResources $r10;
        com.sun.lwuit.Image $r3, $r6, $r8;
        com.sun.jwt.resources.editor.editors.LWUITImageRenderer $r2, $r5, $r7;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;
        int $i0, $i1, $i2;
        java.lang.String $r9;

        r0 := @this: com.sun.jwt.resources.editor.editors.TimelineEditor;

        r11 := @parameter0: javax.swing.event.ChangeEvent;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner width>;

        $i0 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: int getValue(javax.swing.JSpinner)>($r1);

        $r2 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: com.sun.jwt.resources.editor.editors.LWUITImageRenderer renderer>;

        $r3 = virtualinvoke $r2.<com.sun.jwt.resources.editor.editors.LWUITImageRenderer: com.sun.lwuit.Image getImage()>();

        $i1 = virtualinvoke $r3.<com.sun.lwuit.Image: int getWidth()>();

        if $i0 == $i1 goto label1;

        $r4 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: com.sun.lwuit.animations.Timeline cloneCurrentTimeline()>();

        $r5 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: com.sun.jwt.resources.editor.editors.LWUITImageRenderer renderer>;

        $r6 = virtualinvoke $r5.<com.sun.jwt.resources.editor.editors.LWUITImageRenderer: com.sun.lwuit.Image getImage()>();

        $r7 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: com.sun.jwt.resources.editor.editors.LWUITImageRenderer renderer>;

        $r8 = virtualinvoke $r7.<com.sun.jwt.resources.editor.editors.LWUITImageRenderer: com.sun.lwuit.Image getImage()>();

        $i2 = virtualinvoke $r8.<com.sun.lwuit.Image: int getHeight()>();

        virtualinvoke $r6.<com.sun.lwuit.Image: com.sun.lwuit.Image scaled(int,int)>($i0, $i2);

        $r10 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: com.sun.lwuit.util.EditableResources res>;

        $r9 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: java.lang.String name>;

        virtualinvoke $r10.<com.sun.lwuit.util.EditableResources: void setImage(java.lang.String,com.sun.lwuit.Image)>($r9, $r4);

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: void setImage(com.sun.lwuit.animations.Timeline)>($r4);

     label1:
        return;
    }

    private void heightStateChanged(javax.swing.event.ChangeEvent)
    {
        javax.swing.event.ChangeEvent r11;
        javax.swing.JSpinner $r1;
        com.sun.lwuit.animations.Timeline $r4;
        com.sun.lwuit.util.EditableResources $r10;
        com.sun.lwuit.Image $r3, $r6, $r8;
        com.sun.jwt.resources.editor.editors.LWUITImageRenderer $r2, $r5, $r7;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;
        int $i0, $i1, $i2;
        java.lang.String $r9;

        r0 := @this: com.sun.jwt.resources.editor.editors.TimelineEditor;

        r11 := @parameter0: javax.swing.event.ChangeEvent;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner height>;

        $i0 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: int getValue(javax.swing.JSpinner)>($r1);

        $r2 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: com.sun.jwt.resources.editor.editors.LWUITImageRenderer renderer>;

        $r3 = virtualinvoke $r2.<com.sun.jwt.resources.editor.editors.LWUITImageRenderer: com.sun.lwuit.Image getImage()>();

        $i1 = virtualinvoke $r3.<com.sun.lwuit.Image: int getHeight()>();

        if $i0 == $i1 goto label1;

        $r4 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: com.sun.lwuit.animations.Timeline cloneCurrentTimeline()>();

        $r5 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: com.sun.jwt.resources.editor.editors.LWUITImageRenderer renderer>;

        $r6 = virtualinvoke $r5.<com.sun.jwt.resources.editor.editors.LWUITImageRenderer: com.sun.lwuit.Image getImage()>();

        $r7 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: com.sun.jwt.resources.editor.editors.LWUITImageRenderer renderer>;

        $r8 = virtualinvoke $r7.<com.sun.jwt.resources.editor.editors.LWUITImageRenderer: com.sun.lwuit.Image getImage()>();

        $i2 = virtualinvoke $r8.<com.sun.lwuit.Image: int getWidth()>();

        virtualinvoke $r6.<com.sun.lwuit.Image: com.sun.lwuit.Image scaled(int,int)>($i2, $i0);

        $r10 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: com.sun.lwuit.util.EditableResources res>;

        $r9 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: java.lang.String name>;

        virtualinvoke $r10.<com.sun.lwuit.util.EditableResources: void setImage(java.lang.String,com.sun.lwuit.Image)>($r9, $r4);

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: void setImage(com.sun.lwuit.animations.Timeline)>($r4);

     label1:
        return;
    }

    private void timelineStateChanged(javax.swing.event.ChangeEvent)
    {
        com.sun.jwt.resources.editor.editors.LWUITImageRenderer $r7, $r11;
        int $i0, $i1;
        java.lang.String $r6;
        boolean $z0;
        javax.swing.event.ChangeEvent r12;
        com.sun.lwuit.animations.Timeline r9;
        com.sun.lwuit.Image $r8;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;
        javax.swing.JLabel $r2;
        javax.swing.JSlider $r4, $r10;
        java.lang.StringBuilder $r1, $r3, $r5;

        r0 := @this: com.sun.jwt.resources.editor.editors.TimelineEditor;

        r12 := @parameter0: javax.swing.event.ChangeEvent;

        $r2 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JLabel currentTime>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r4 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSlider timeline>;

        $i0 = virtualinvoke $r4.<javax.swing.JSlider: int getValue()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<javax.swing.JLabel: void setText(java.lang.String)>($r6);

        $z0 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: boolean refreshingTimelineLock>;

        if $z0 != 0 goto label1;

        $r7 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: com.sun.jwt.resources.editor.editors.LWUITImageRenderer renderer>;

        $r8 = virtualinvoke $r7.<com.sun.jwt.resources.editor.editors.LWUITImageRenderer: com.sun.lwuit.Image getImage()>();

        r9 = (com.sun.lwuit.animations.Timeline) $r8;

        virtualinvoke r9.<com.sun.lwuit.animations.Timeline: void setPause(boolean)>(0);

        $r10 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSlider timeline>;

        $i1 = virtualinvoke $r10.<javax.swing.JSlider: int getValue()>();

        virtualinvoke r9.<com.sun.lwuit.animations.Timeline: void setTime(int)>($i1);

        $r11 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: com.sun.jwt.resources.editor.editors.LWUITImageRenderer renderer>;

        virtualinvoke $r11.<com.sun.jwt.resources.editor.editors.LWUITImageRenderer: void updateAnimation()>();

        virtualinvoke r9.<com.sun.lwuit.animations.Timeline: void setPause(boolean)>(1);

     label1:
        return;
    }

    private void playActionPerformed(java.awt.event.ActionEvent)
    {
        javax.swing.JButton $r4, $r5;
        com.sun.lwuit.animations.Timeline r3;
        com.sun.jwt.resources.editor.editors.TimelineEditor$5 $r7;
        com.sun.lwuit.Image $r2;
        java.awt.event.ActionEvent r10;
        com.sun.jwt.resources.editor.editors.LWUITImageRenderer $r1;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;
        javax.swing.Timer $r6, $r8, $r9;

        r0 := @this: com.sun.jwt.resources.editor.editors.TimelineEditor;

        r10 := @parameter0: java.awt.event.ActionEvent;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: com.sun.jwt.resources.editor.editors.LWUITImageRenderer renderer>;

        $r2 = virtualinvoke $r1.<com.sun.jwt.resources.editor.editors.LWUITImageRenderer: com.sun.lwuit.Image getImage()>();

        r3 = (com.sun.lwuit.animations.Timeline) $r2;

        virtualinvoke r3.<com.sun.lwuit.animations.Timeline: void setPause(boolean)>(0);

        $r4 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton play>;

        virtualinvoke $r4.<javax.swing.JButton: void setEnabled(boolean)>(0);

        $r5 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton pause>;

        virtualinvoke $r5.<javax.swing.JButton: void setEnabled(boolean)>(1);

        $r6 = new javax.swing.Timer;

        $r7 = new com.sun.jwt.resources.editor.editors.TimelineEditor$5;

        specialinvoke $r7.<com.sun.jwt.resources.editor.editors.TimelineEditor$5: void <init>(com.sun.jwt.resources.editor.editors.TimelineEditor,com.sun.lwuit.animations.Timeline)>(r0, r3);

        specialinvoke $r6.<javax.swing.Timer: void <init>(int,java.awt.event.ActionListener)>(500, $r7);

        r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.Timer refreshTimeline> = $r6;

        $r8 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.Timer refreshTimeline>;

        virtualinvoke $r8.<javax.swing.Timer: void setRepeats(boolean)>(1);

        $r9 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.Timer refreshTimeline>;

        virtualinvoke $r9.<javax.swing.Timer: void start()>();

        return;
    }

    private void pauseActionPerformed(java.awt.event.ActionEvent)
    {
        javax.swing.JButton $r4, $r5;
        com.sun.lwuit.animations.Timeline r3;
        com.sun.lwuit.Image $r2;
        java.awt.event.ActionEvent r8;
        com.sun.jwt.resources.editor.editors.LWUITImageRenderer $r1;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;
        javax.swing.Timer $r6, $r7;

        r0 := @this: com.sun.jwt.resources.editor.editors.TimelineEditor;

        r8 := @parameter0: java.awt.event.ActionEvent;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: com.sun.jwt.resources.editor.editors.LWUITImageRenderer renderer>;

        $r2 = virtualinvoke $r1.<com.sun.jwt.resources.editor.editors.LWUITImageRenderer: com.sun.lwuit.Image getImage()>();

        r3 = (com.sun.lwuit.animations.Timeline) $r2;

        virtualinvoke r3.<com.sun.lwuit.animations.Timeline: void setPause(boolean)>(1);

        $r4 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton play>;

        virtualinvoke $r4.<javax.swing.JButton: void setEnabled(boolean)>(1);

        $r5 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton pause>;

        virtualinvoke $r5.<javax.swing.JButton: void setEnabled(boolean)>(0);

        $r6 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.Timer refreshTimeline>;

        if $r6 == null goto label1;

        $r7 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.Timer refreshTimeline>;

        virtualinvoke $r7.<javax.swing.Timer: void stop()>();

        r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.Timer refreshTimeline> = null;

     label1:
        return;
    }

    private int getValue(javax.swing.JSpinner)
    {
        javax.swing.JSpinner r0;
        int $i0;
        java.lang.Object $r1;
        java.lang.Number $r2;
        com.sun.jwt.resources.editor.editors.TimelineEditor r3;

        r3 := @this: com.sun.jwt.resources.editor.editors.TimelineEditor;

        r0 := @parameter0: javax.swing.JSpinner;

        $r1 = virtualinvoke r0.<javax.swing.JSpinner: java.lang.Object getValue()>();

        $r2 = (java.lang.Number) $r1;

        $i0 = virtualinvoke $r2.<java.lang.Number: int intValue()>();

        return $i0;
    }

    private void addAnimationObjectActionPerformed(java.awt.event.ActionEvent)
    {
        com.sun.jwt.resources.editor.editors.AnimationObjectEditor $r0;
        boolean $z0;
        com.sun.lwuit.util.EditableResources $r2, $r9;
        com.sun.jwt.resources.editor.editors.TimelineEditor r1;
        javax.swing.JSlider $r3;
        com.sun.lwuit.animations.AnimationObject[] r12;
        com.sun.lwuit.geom.Dimension $r15;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12;
        java.lang.String $r8;
        javax.swing.JSpinner $r14, $r16, $r17;
        com.sun.lwuit.animations.Timeline r11, $r18;
        javax.swing.JList $r4;
        com.sun.lwuit.animations.AnimationObject $r7, $r13, $r19;
        com.sun.lwuit.Image $r10;
        java.awt.event.ActionEvent r20;
        javax.swing.DefaultListModel $r6;
        javax.swing.ListModel $r5;

        r1 := @this: com.sun.jwt.resources.editor.editors.TimelineEditor;

        r20 := @parameter0: java.awt.event.ActionEvent;

        $r0 = new com.sun.jwt.resources.editor.editors.AnimationObjectEditor;

        $r2 = r1.<com.sun.jwt.resources.editor.editors.TimelineEditor: com.sun.lwuit.util.EditableResources res>;

        specialinvoke $r0.<com.sun.jwt.resources.editor.editors.AnimationObjectEditor: void <init>(com.sun.lwuit.util.EditableResources,com.sun.lwuit.animations.AnimationObject)>($r2, null);

        $r3 = r1.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSlider timeline>;

        $i0 = virtualinvoke $r3.<javax.swing.JSlider: int getValue()>();

        virtualinvoke $r0.<com.sun.jwt.resources.editor.editors.AnimationObjectEditor: void setStartTime(int)>($i0);

        $i1 = staticinvoke <javax.swing.JOptionPane: int showConfirmDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>(r1, $r0, "", 2);

        if $i1 != 0 goto label3;

        $r4 = r1.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JList animationObjectList>;

        $r5 = virtualinvoke $r4.<javax.swing.JList: javax.swing.ListModel getModel()>();

        $r6 = (javax.swing.DefaultListModel) $r5;

        $r7 = virtualinvoke $r0.<com.sun.jwt.resources.editor.editors.AnimationObjectEditor: com.sun.lwuit.animations.AnimationObject getAnimationObject()>();

        virtualinvoke $r6.<javax.swing.DefaultListModel: void addElement(java.lang.Object)>($r7);

        $r9 = r1.<com.sun.jwt.resources.editor.editors.TimelineEditor: com.sun.lwuit.util.EditableResources res>;

        $r8 = r1.<com.sun.jwt.resources.editor.editors.TimelineEditor: java.lang.String name>;

        $r10 = virtualinvoke $r9.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.Image getImage(java.lang.String)>($r8);

        r11 = (com.sun.lwuit.animations.Timeline) $r10;

        $i2 = virtualinvoke r11.<com.sun.lwuit.animations.Timeline: int getAnimationCount()>();

        $i3 = $i2 + 1;

        r12 = newarray (com.sun.lwuit.animations.AnimationObject)[$i3];

        i12 = 0;

     label1:
        $i4 = lengthof r12;

        $i5 = $i4 - 1;

        if i12 >= $i5 goto label2;

        $r19 = virtualinvoke r11.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.AnimationObject getAnimation(int)>(i12);

        r12[i12] = $r19;

        i12 = i12 + 1;

        goto label1;

     label2:
        $i6 = lengthof r12;

        $i7 = $i6 - 1;

        $r13 = virtualinvoke $r0.<com.sun.jwt.resources.editor.editors.AnimationObjectEditor: com.sun.lwuit.animations.AnimationObject getAnimationObject()>();

        r12[$i7] = $r13;

        $r14 = r1.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner duration>;

        $i8 = specialinvoke r1.<com.sun.jwt.resources.editor.editors.TimelineEditor: int getValue(javax.swing.JSpinner)>($r14);

        $r15 = new com.sun.lwuit.geom.Dimension;

        $r16 = r1.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner width>;

        $i9 = specialinvoke r1.<com.sun.jwt.resources.editor.editors.TimelineEditor: int getValue(javax.swing.JSpinner)>($r16);

        $r17 = r1.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner height>;

        $i10 = specialinvoke r1.<com.sun.jwt.resources.editor.editors.TimelineEditor: int getValue(javax.swing.JSpinner)>($r17);

        specialinvoke $r15.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>($i9, $i10);

        $r18 = staticinvoke <com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.Timeline createTimeline(int,com.sun.lwuit.animations.AnimationObject[],com.sun.lwuit.geom.Dimension)>($i8, r12, $r15);

        $z0 = virtualinvoke r11.<com.sun.lwuit.animations.Timeline: boolean isPause()>();

        virtualinvoke $r18.<com.sun.lwuit.animations.Timeline: void setPause(boolean)>($z0);

        $i11 = virtualinvoke r11.<com.sun.lwuit.animations.Timeline: int getTime()>();

        virtualinvoke $r18.<com.sun.lwuit.animations.Timeline: void setTime(int)>($i11);

        virtualinvoke r1.<com.sun.jwt.resources.editor.editors.TimelineEditor: void setImage(com.sun.lwuit.animations.Timeline)>($r18);

     label3:
        return;
    }

    private void removeAnimationObjectActionPerformed(java.awt.event.ActionEvent)
    {
        boolean $z0;
        com.sun.lwuit.util.EditableResources $r2;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;
        com.sun.lwuit.animations.AnimationObject[] r5;
        com.sun.lwuit.geom.Dimension $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        java.lang.String $r1;
        javax.swing.JSpinner $r10, $r12, $r13;
        javax.swing.JButton $r16, $r17, $r18, $r19;
        com.sun.lwuit.animations.Timeline r4, $r14;
        javax.swing.JList $r6, $r8, $r15, $r20;
        com.sun.lwuit.Image $r3;
        com.sun.lwuit.animations.AnimationObject $r21;
        java.awt.event.ActionEvent r22;
        javax.swing.DefaultListModel $r9;
        javax.swing.ListModel $r7;

        r0 := @this: com.sun.jwt.resources.editor.editors.TimelineEditor;

        r22 := @parameter0: java.awt.event.ActionEvent;

        $r2 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: com.sun.lwuit.util.EditableResources res>;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: java.lang.String name>;

        $r3 = virtualinvoke $r2.<com.sun.lwuit.util.EditableResources: com.sun.lwuit.Image getImage(java.lang.String)>($r1);

        r4 = (com.sun.lwuit.animations.Timeline) $r3;

        $i0 = virtualinvoke r4.<com.sun.lwuit.animations.Timeline: int getAnimationCount()>();

        $i1 = $i0 - 1;

        r5 = newarray (com.sun.lwuit.animations.AnimationObject)[$i1];

        i8 = 0;

        i9 = 0;

     label1:
        $i2 = virtualinvoke r4.<com.sun.lwuit.animations.Timeline: int getAnimationCount()>();

        if i9 >= $i2 goto label3;

        $r20 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JList animationObjectList>;

        $i7 = virtualinvoke $r20.<javax.swing.JList: int getSelectedIndex()>();

        if i9 == $i7 goto label2;

        $r21 = virtualinvoke r4.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.AnimationObject getAnimation(int)>(i9);

        r5[i8] = $r21;

        i8 = i8 + 1;

     label2:
        i9 = i9 + 1;

        goto label1;

     label3:
        $r6 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JList animationObjectList>;

        $r7 = virtualinvoke $r6.<javax.swing.JList: javax.swing.ListModel getModel()>();

        $r9 = (javax.swing.DefaultListModel) $r7;

        $r8 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JList animationObjectList>;

        $i3 = virtualinvoke $r8.<javax.swing.JList: int getSelectedIndex()>();

        virtualinvoke $r9.<javax.swing.DefaultListModel: java.lang.Object remove(int)>($i3);

        $r10 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner duration>;

        $i4 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: int getValue(javax.swing.JSpinner)>($r10);

        $r11 = new com.sun.lwuit.geom.Dimension;

        $r12 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner width>;

        $i5 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: int getValue(javax.swing.JSpinner)>($r12);

        $r13 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner height>;

        $i6 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: int getValue(javax.swing.JSpinner)>($r13);

        specialinvoke $r11.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>($i5, $i6);

        $r14 = staticinvoke <com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.Timeline createTimeline(int,com.sun.lwuit.animations.AnimationObject[],com.sun.lwuit.geom.Dimension)>($i4, r5, $r11);

        $z0 = virtualinvoke r4.<com.sun.lwuit.animations.Timeline: boolean isPause()>();

        virtualinvoke $r14.<com.sun.lwuit.animations.Timeline: void setPause(boolean)>($z0);

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: void setImage(com.sun.lwuit.animations.Timeline)>($r14);

        $r15 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JList animationObjectList>;

        virtualinvoke $r15.<javax.swing.JList: void clearSelection()>();

        $r16 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton duplicateObject>;

        virtualinvoke $r16.<javax.swing.JButton: void setEnabled(boolean)>(0);

        $r17 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton moveDown>;

        virtualinvoke $r17.<javax.swing.JButton: void setEnabled(boolean)>(0);

        $r18 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton moveUp>;

        virtualinvoke $r18.<javax.swing.JButton: void setEnabled(boolean)>(0);

        $r19 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton removeAnimationObject>;

        virtualinvoke $r19.<javax.swing.JButton: void setEnabled(boolean)>(0);

        return;
    }

    private void duplicateObjectActionPerformed(java.awt.event.ActionEvent)
    {
        boolean $z0;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;
        com.sun.lwuit.animations.AnimationObject[] r12;
        com.sun.lwuit.geom.Dimension $r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        javax.swing.JSpinner $r13, $r15, $r16;
        javax.swing.JButton $r19, $r20, $r21, $r22;
        com.sun.lwuit.animations.Timeline $r1, $r17;
        javax.swing.JList $r2, $r4, $r9, $r18;
        com.sun.lwuit.animations.AnimationObject $r7, $r8, $r23;
        java.awt.event.ActionEvent r24;
        javax.swing.DefaultListModel $r5, $r11;
        java.lang.Object $r6;
        javax.swing.ListModel $r3, $r10;

        r0 := @this: com.sun.jwt.resources.editor.editors.TimelineEditor;

        r24 := @parameter0: java.awt.event.ActionEvent;

        $r1 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: com.sun.lwuit.animations.Timeline cloneCurrentTimeline()>();

        $r2 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JList animationObjectList>;

        $r3 = virtualinvoke $r2.<javax.swing.JList: javax.swing.ListModel getModel()>();

        $r5 = (javax.swing.DefaultListModel) $r3;

        $r4 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JList animationObjectList>;

        $i0 = virtualinvoke $r4.<javax.swing.JList: int getSelectedIndex()>();

        $r6 = virtualinvoke $r5.<javax.swing.DefaultListModel: java.lang.Object get(int)>($i0);

        $r7 = (com.sun.lwuit.animations.AnimationObject) $r6;

        $r8 = staticinvoke <com.sun.lwuit.animations.AnimationAccessor: com.sun.lwuit.animations.AnimationObject clone(com.sun.lwuit.animations.AnimationObject)>($r7);

        $r9 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JList animationObjectList>;

        $r10 = virtualinvoke $r9.<javax.swing.JList: javax.swing.ListModel getModel()>();

        $r11 = (javax.swing.DefaultListModel) $r10;

        virtualinvoke $r11.<javax.swing.DefaultListModel: void addElement(java.lang.Object)>($r8);

        $i1 = virtualinvoke $r1.<com.sun.lwuit.animations.Timeline: int getAnimationCount()>();

        $i2 = $i1 + 1;

        r12 = newarray (com.sun.lwuit.animations.AnimationObject)[$i2];

        i10 = 0;

     label1:
        $i3 = lengthof r12;

        $i4 = $i3 - 1;

        if i10 >= $i4 goto label2;

        $r23 = virtualinvoke $r1.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.AnimationObject getAnimation(int)>(i10);

        r12[i10] = $r23;

        i10 = i10 + 1;

        goto label1;

     label2:
        $i5 = lengthof r12;

        $i6 = $i5 - 1;

        r12[$i6] = $r8;

        $r13 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner duration>;

        $i7 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: int getValue(javax.swing.JSpinner)>($r13);

        $r14 = new com.sun.lwuit.geom.Dimension;

        $r15 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner width>;

        $i8 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: int getValue(javax.swing.JSpinner)>($r15);

        $r16 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner height>;

        $i9 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: int getValue(javax.swing.JSpinner)>($r16);

        specialinvoke $r14.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>($i8, $i9);

        $r17 = staticinvoke <com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.Timeline createTimeline(int,com.sun.lwuit.animations.AnimationObject[],com.sun.lwuit.geom.Dimension)>($i7, r12, $r14);

        $z0 = virtualinvoke $r1.<com.sun.lwuit.animations.Timeline: boolean isPause()>();

        virtualinvoke $r17.<com.sun.lwuit.animations.Timeline: void setPause(boolean)>($z0);

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: void setImage(com.sun.lwuit.animations.Timeline)>($r17);

        $r18 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JList animationObjectList>;

        virtualinvoke $r18.<javax.swing.JList: void clearSelection()>();

        $r19 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton duplicateObject>;

        virtualinvoke $r19.<javax.swing.JButton: void setEnabled(boolean)>(0);

        $r20 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton moveDown>;

        virtualinvoke $r20.<javax.swing.JButton: void setEnabled(boolean)>(0);

        $r21 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton moveUp>;

        virtualinvoke $r21.<javax.swing.JButton: void setEnabled(boolean)>(0);

        $r22 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton removeAnimationObject>;

        virtualinvoke $r22.<javax.swing.JButton: void setEnabled(boolean)>(0);

        return;
    }

    private void moveUpActionPerformed(java.awt.event.ActionEvent)
    {
        com.sun.lwuit.animations.AnimationObject[] r3;
        com.sun.lwuit.geom.Dimension $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        boolean $z0, $z1;
        javax.swing.JSpinner $r5, $r7, $r8;
        javax.swing.JButton $r10, $r11;
        com.sun.lwuit.animations.Timeline $r2, $r9;
        javax.swing.JList $r1, $r12;
        com.sun.lwuit.animations.AnimationObject $r4, $r13, r15;
        java.awt.event.ActionEvent r14;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;

        r0 := @this: com.sun.jwt.resources.editor.editors.TimelineEditor;

        r14 := @parameter0: java.awt.event.ActionEvent;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JList animationObjectList>;

        $i0 = virtualinvoke $r1.<javax.swing.JList: int getSelectedIndex()>();

        $r2 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: com.sun.lwuit.animations.Timeline cloneCurrentTimeline()>();

        $i1 = virtualinvoke $r2.<com.sun.lwuit.animations.Timeline: int getAnimationCount()>();

        r3 = newarray (com.sun.lwuit.animations.AnimationObject)[$i1];

        i9 = 0;

     label1:
        $i2 = lengthof r3;

        if i9 >= $i2 goto label2;

        $r13 = virtualinvoke $r2.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.AnimationObject getAnimation(int)>(i9);

        r3[i9] = $r13;

        i9 = i9 + 1;

        goto label1;

     label2:
        $i3 = $i0 - 1;

        r15 = r3[$i3];

        $i4 = $i0 - 1;

        $r4 = r3[$i0];

        r3[$i4] = $r4;

        r3[$i0] = r15;

        $r5 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner duration>;

        $i5 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: int getValue(javax.swing.JSpinner)>($r5);

        $r6 = new com.sun.lwuit.geom.Dimension;

        $r7 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner width>;

        $i6 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: int getValue(javax.swing.JSpinner)>($r7);

        $r8 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner height>;

        $i7 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: int getValue(javax.swing.JSpinner)>($r8);

        specialinvoke $r6.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>($i6, $i7);

        $r9 = staticinvoke <com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.Timeline createTimeline(int,com.sun.lwuit.animations.AnimationObject[],com.sun.lwuit.geom.Dimension)>($i5, r3, $r6);

        $z0 = virtualinvoke $r2.<com.sun.lwuit.animations.Timeline: boolean isPause()>();

        virtualinvoke $r9.<com.sun.lwuit.animations.Timeline: void setPause(boolean)>($z0);

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: void setImage(com.sun.lwuit.animations.Timeline)>($r9);

        $r10 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton moveUp>;

        if $i0 <= 1 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        virtualinvoke $r10.<javax.swing.JButton: void setEnabled(boolean)>($z1);

        $r11 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton moveDown>;

        virtualinvoke $r11.<javax.swing.JButton: void setEnabled(boolean)>(1);

        $r12 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JList animationObjectList>;

        $i8 = $i0 - 1;

        virtualinvoke $r12.<javax.swing.JList: void setSelectedIndex(int)>($i8);

        return;
    }

    private void moveDownActionPerformed(java.awt.event.ActionEvent)
    {
        com.sun.lwuit.animations.AnimationObject[] r3;
        com.sun.lwuit.geom.Dimension $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11;
        boolean $z0, $z1;
        javax.swing.JSpinner $r5, $r7, $r8;
        javax.swing.JButton $r10, $r11;
        com.sun.lwuit.animations.Timeline $r2, $r9;
        javax.swing.JList $r1, $r12;
        com.sun.lwuit.animations.AnimationObject $r4, $r13, r15;
        java.awt.event.ActionEvent r14;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;

        r0 := @this: com.sun.jwt.resources.editor.editors.TimelineEditor;

        r14 := @parameter0: java.awt.event.ActionEvent;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JList animationObjectList>;

        $i0 = virtualinvoke $r1.<javax.swing.JList: int getSelectedIndex()>();

        $r2 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: com.sun.lwuit.animations.Timeline cloneCurrentTimeline()>();

        $i1 = virtualinvoke $r2.<com.sun.lwuit.animations.Timeline: int getAnimationCount()>();

        r3 = newarray (com.sun.lwuit.animations.AnimationObject)[$i1];

        i11 = 0;

     label1:
        $i2 = lengthof r3;

        if i11 >= $i2 goto label2;

        $r13 = virtualinvoke $r2.<com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.AnimationObject getAnimation(int)>(i11);

        r3[i11] = $r13;

        i11 = i11 + 1;

        goto label1;

     label2:
        $i3 = $i0 + 1;

        r15 = r3[$i3];

        $i4 = $i0 + 1;

        $r4 = r3[$i0];

        r3[$i4] = $r4;

        r3[$i0] = r15;

        $r5 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner duration>;

        $i5 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: int getValue(javax.swing.JSpinner)>($r5);

        $r6 = new com.sun.lwuit.geom.Dimension;

        $r7 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner width>;

        $i6 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: int getValue(javax.swing.JSpinner)>($r7);

        $r8 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner height>;

        $i7 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: int getValue(javax.swing.JSpinner)>($r8);

        specialinvoke $r6.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>($i6, $i7);

        $r9 = staticinvoke <com.sun.lwuit.animations.Timeline: com.sun.lwuit.animations.Timeline createTimeline(int,com.sun.lwuit.animations.AnimationObject[],com.sun.lwuit.geom.Dimension)>($i5, r3, $r6);

        $z0 = virtualinvoke $r2.<com.sun.lwuit.animations.Timeline: boolean isPause()>();

        virtualinvoke $r9.<com.sun.lwuit.animations.Timeline: void setPause(boolean)>($z0);

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: void setImage(com.sun.lwuit.animations.Timeline)>($r9);

        $r10 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton moveDown>;

        $i8 = lengthof r3;

        $i9 = $i8 - 1;

        if $i0 >= $i9 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        virtualinvoke $r10.<javax.swing.JButton: void setEnabled(boolean)>($z1);

        $r11 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton moveUp>;

        virtualinvoke $r11.<javax.swing.JButton: void setEnabled(boolean)>(1);

        $r12 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JList animationObjectList>;

        $i10 = $i0 + 1;

        virtualinvoke $r12.<javax.swing.JList: void setSelectedIndex(int)>($i10);

        return;
    }

    static javax.swing.JList access$000(com.sun.jwt.resources.editor.editors.TimelineEditor)
    {
        javax.swing.JList $r1;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.TimelineEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JList animationObjectList>;

        return $r1;
    }

    static javax.swing.JButton access$100(com.sun.jwt.resources.editor.editors.TimelineEditor)
    {
        javax.swing.JButton $r1;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.TimelineEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton removeAnimationObject>;

        return $r1;
    }

    static javax.swing.JButton access$200(com.sun.jwt.resources.editor.editors.TimelineEditor)
    {
        javax.swing.JButton $r1;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.TimelineEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton duplicateObject>;

        return $r1;
    }

    static javax.swing.JButton access$300(com.sun.jwt.resources.editor.editors.TimelineEditor)
    {
        javax.swing.JButton $r1;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.TimelineEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton moveUp>;

        return $r1;
    }

    static javax.swing.JButton access$400(com.sun.jwt.resources.editor.editors.TimelineEditor)
    {
        javax.swing.JButton $r1;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.TimelineEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton moveDown>;

        return $r1;
    }

    static java.lang.String access$500(com.sun.jwt.resources.editor.editors.TimelineEditor)
    {
        java.lang.String $r1;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.TimelineEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: java.lang.String name>;

        return $r1;
    }

    static com.sun.lwuit.util.EditableResources access$600(com.sun.jwt.resources.editor.editors.TimelineEditor)
    {
        com.sun.lwuit.util.EditableResources $r1;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.TimelineEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: com.sun.lwuit.util.EditableResources res>;

        return $r1;
    }

    static com.sun.jwt.resources.editor.editors.LWUITImageRenderer access$700(com.sun.jwt.resources.editor.editors.TimelineEditor)
    {
        com.sun.jwt.resources.editor.editors.LWUITImageRenderer $r1;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.TimelineEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: com.sun.jwt.resources.editor.editors.LWUITImageRenderer renderer>;

        return $r1;
    }

    static javax.swing.JButton access$800(com.sun.jwt.resources.editor.editors.TimelineEditor)
    {
        javax.swing.JButton $r1;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.TimelineEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton addAnimationObject>;

        return $r1;
    }

    static void access$900(com.sun.jwt.resources.editor.editors.TimelineEditor, java.awt.event.ActionEvent)
    {
        java.awt.event.ActionEvent r1;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.TimelineEditor;

        r1 := @parameter1: java.awt.event.ActionEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: void addAnimationObjectActionPerformed(java.awt.event.ActionEvent)>(r1);

        return;
    }

    static void access$1000(com.sun.jwt.resources.editor.editors.TimelineEditor, java.awt.event.ActionEvent)
    {
        java.awt.event.ActionEvent r1;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.TimelineEditor;

        r1 := @parameter1: java.awt.event.ActionEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: void removeAnimationObjectActionPerformed(java.awt.event.ActionEvent)>(r1);

        return;
    }

    static void access$1100(com.sun.jwt.resources.editor.editors.TimelineEditor, java.awt.event.ActionEvent)
    {
        java.awt.event.ActionEvent r1;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.TimelineEditor;

        r1 := @parameter1: java.awt.event.ActionEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: void duplicateObjectActionPerformed(java.awt.event.ActionEvent)>(r1);

        return;
    }

    static javax.swing.JButton access$1200(com.sun.jwt.resources.editor.editors.TimelineEditor)
    {
        javax.swing.JButton $r1;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.TimelineEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton play>;

        return $r1;
    }

    static void access$1300(com.sun.jwt.resources.editor.editors.TimelineEditor, java.awt.event.ActionEvent)
    {
        java.awt.event.ActionEvent r1;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.TimelineEditor;

        r1 := @parameter1: java.awt.event.ActionEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: void playActionPerformed(java.awt.event.ActionEvent)>(r1);

        return;
    }

    static javax.swing.JButton access$1400(com.sun.jwt.resources.editor.editors.TimelineEditor)
    {
        javax.swing.JButton $r1;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.TimelineEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JButton pause>;

        return $r1;
    }

    static void access$1500(com.sun.jwt.resources.editor.editors.TimelineEditor, java.awt.event.ActionEvent)
    {
        java.awt.event.ActionEvent r1;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.TimelineEditor;

        r1 := @parameter1: java.awt.event.ActionEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: void pauseActionPerformed(java.awt.event.ActionEvent)>(r1);

        return;
    }

    static void access$1600(com.sun.jwt.resources.editor.editors.TimelineEditor, java.awt.event.ActionEvent)
    {
        java.awt.event.ActionEvent r1;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.TimelineEditor;

        r1 := @parameter1: java.awt.event.ActionEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: void moveUpActionPerformed(java.awt.event.ActionEvent)>(r1);

        return;
    }

    static void access$1700(com.sun.jwt.resources.editor.editors.TimelineEditor, java.awt.event.ActionEvent)
    {
        java.awt.event.ActionEvent r1;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.TimelineEditor;

        r1 := @parameter1: java.awt.event.ActionEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: void moveDownActionPerformed(java.awt.event.ActionEvent)>(r1);

        return;
    }

    static javax.swing.JSpinner access$1800(com.sun.jwt.resources.editor.editors.TimelineEditor)
    {
        javax.swing.JSpinner $r1;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.TimelineEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner duration>;

        return $r1;
    }

    static void access$1900(com.sun.jwt.resources.editor.editors.TimelineEditor, javax.swing.event.ChangeEvent)
    {
        javax.swing.event.ChangeEvent r1;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.TimelineEditor;

        r1 := @parameter1: javax.swing.event.ChangeEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: void durationStateChanged(javax.swing.event.ChangeEvent)>(r1);

        return;
    }

    static javax.swing.JSpinner access$2000(com.sun.jwt.resources.editor.editors.TimelineEditor)
    {
        javax.swing.JSpinner $r1;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.TimelineEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner width>;

        return $r1;
    }

    static void access$2100(com.sun.jwt.resources.editor.editors.TimelineEditor, javax.swing.event.ChangeEvent)
    {
        javax.swing.event.ChangeEvent r1;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.TimelineEditor;

        r1 := @parameter1: javax.swing.event.ChangeEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: void widthStateChanged(javax.swing.event.ChangeEvent)>(r1);

        return;
    }

    static javax.swing.JSpinner access$2200(com.sun.jwt.resources.editor.editors.TimelineEditor)
    {
        javax.swing.JSpinner $r1;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.TimelineEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSpinner height>;

        return $r1;
    }

    static void access$2300(com.sun.jwt.resources.editor.editors.TimelineEditor, javax.swing.event.ChangeEvent)
    {
        javax.swing.event.ChangeEvent r1;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.TimelineEditor;

        r1 := @parameter1: javax.swing.event.ChangeEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: void heightStateChanged(javax.swing.event.ChangeEvent)>(r1);

        return;
    }

    static javax.swing.JSlider access$2400(com.sun.jwt.resources.editor.editors.TimelineEditor)
    {
        javax.swing.JSlider $r1;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.TimelineEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.JSlider timeline>;

        return $r1;
    }

    static void access$2500(com.sun.jwt.resources.editor.editors.TimelineEditor, javax.swing.event.ChangeEvent)
    {
        javax.swing.event.ChangeEvent r1;
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.TimelineEditor;

        r1 := @parameter1: javax.swing.event.ChangeEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: void timelineStateChanged(javax.swing.event.ChangeEvent)>(r1);

        return;
    }

    static javax.swing.Timer access$2600(com.sun.jwt.resources.editor.editors.TimelineEditor)
    {
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;
        javax.swing.Timer $r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.TimelineEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.Timer refreshTimeline>;

        return $r1;
    }

    static javax.swing.Timer access$2602(com.sun.jwt.resources.editor.editors.TimelineEditor, javax.swing.Timer)
    {
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;
        javax.swing.Timer r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.TimelineEditor;

        r1 := @parameter1: javax.swing.Timer;

        r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: javax.swing.Timer refreshTimeline> = r1;

        return r1;
    }

    static boolean access$2702(com.sun.jwt.resources.editor.editors.TimelineEditor, boolean)
    {
        com.sun.jwt.resources.editor.editors.TimelineEditor r0;
        boolean z0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.TimelineEditor;

        z0 := @parameter1: boolean;

        r0.<com.sun.jwt.resources.editor.editors.TimelineEditor: boolean refreshingTimelineLock> = z0;

        return z0;
    }
}
