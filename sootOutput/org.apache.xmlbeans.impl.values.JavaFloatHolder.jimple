public abstract class org.apache.xmlbeans.impl.values.JavaFloatHolder extends org.apache.xmlbeans.impl.values.XmlObjectBase
{
    private float _value;

    public void <init>()
    {
        org.apache.xmlbeans.impl.values.JavaFloatHolder r0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaFloatHolder;

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlObjectBase: void <init>()>();

        return;
    }

    public org.apache.xmlbeans.SchemaType schemaType()
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl $r0;
        org.apache.xmlbeans.impl.values.JavaFloatHolder r1;

        r1 := @this: org.apache.xmlbeans.impl.values.JavaFloatHolder;

        $r0 = <org.apache.xmlbeans.impl.schema.BuiltinSchemaTypeSystem: org.apache.xmlbeans.impl.schema.SchemaTypeImpl ST_FLOAT>;

        return $r0;
    }

    protected java.lang.String compute_text(org.apache.xmlbeans.impl.values.NamespaceManager)
    {
        org.apache.xmlbeans.impl.values.JavaFloatHolder r0;
        float $f0;
        org.apache.xmlbeans.impl.values.NamespaceManager r2;
        java.lang.String $r1;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaFloatHolder;

        r2 := @parameter0: org.apache.xmlbeans.impl.values.NamespaceManager;

        $f0 = r0.<org.apache.xmlbeans.impl.values.JavaFloatHolder: float _value>;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.values.JavaFloatHolder: java.lang.String serialize(float)>($f0);

        return $r1;
    }

    public static java.lang.String serialize(float)
    {
        byte $b0, $b1, $b2;
        float f0;
        java.lang.String $r0;

        f0 := @parameter0: float;

        $b0 = f0 cmpl #InfinityF;

        if $b0 != 0 goto label1;

        return "INF";

     label1:
        $b1 = f0 cmpl #-InfinityF;

        if $b1 != 0 goto label2;

        return "-INF";

     label2:
        $b2 = f0 cmpl #NaNF;

        if $b2 != 0 goto label3;

        return "NaN";

     label3:
        $r0 = staticinvoke <java.lang.Float: java.lang.String toString(float)>(f0);

        return $r0;
    }

    protected void set_text(java.lang.String)
    {
        org.apache.xmlbeans.impl.common.ValidationContext $r2;
        org.apache.xmlbeans.impl.values.JavaFloatHolder r0;
        float $f0;
        java.lang.String r1;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaFloatHolder;

        r1 := @parameter0: java.lang.String;

        $r2 = <org.apache.xmlbeans.impl.values.JavaFloatHolder: org.apache.xmlbeans.impl.common.ValidationContext _voorVc>;

        $f0 = staticinvoke <org.apache.xmlbeans.impl.values.JavaFloatHolder: float validateLexical(java.lang.String,org.apache.xmlbeans.impl.common.ValidationContext)>(r1, $r2);

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.JavaFloatHolder: void set_float(float)>($f0);

        return;
    }

    public static float validateLexical(java.lang.String, org.apache.xmlbeans.impl.common.ValidationContext)
    {
        java.lang.Object[] $r3;
        org.apache.xmlbeans.impl.common.ValidationContext r2;
        float $f0;
        java.lang.NumberFormatException $r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.xmlbeans.impl.common.ValidationContext;

     label1:
        $f0 = staticinvoke <org.apache.xmlbeans.impl.util.XsTypeConverter: float lexFloat(java.lang.CharSequence)>(r0);

     label2:
        return $f0;

     label3:
        $r1 := @caughtexception;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r0;

        interfaceinvoke r2.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("float", $r3);

        return #NaNF;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    protected void set_nil()
    {
        org.apache.xmlbeans.impl.values.JavaFloatHolder r0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaFloatHolder;

        r0.<org.apache.xmlbeans.impl.values.JavaFloatHolder: float _value> = 0.0F;

        return;
    }

    public java.math.BigDecimal getBigDecimalValue()
    {
        java.math.BigDecimal $r1;
        org.apache.xmlbeans.impl.values.JavaFloatHolder r0;
        float $f0;
        double $d0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaFloatHolder;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.JavaFloatHolder: void check_dated()>();

        $r1 = new java.math.BigDecimal;

        $f0 = r0.<org.apache.xmlbeans.impl.values.JavaFloatHolder: float _value>;

        $d0 = (double) $f0;

        specialinvoke $r1.<java.math.BigDecimal: void <init>(double)>($d0);

        return $r1;
    }

    public double getDoubleValue()
    {
        float $f0;
        org.apache.xmlbeans.impl.values.JavaFloatHolder r0;
        double $d0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaFloatHolder;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.JavaFloatHolder: void check_dated()>();

        $f0 = r0.<org.apache.xmlbeans.impl.values.JavaFloatHolder: float _value>;

        $d0 = (double) $f0;

        return $d0;
    }

    public float getFloatValue()
    {
        float $f0;
        org.apache.xmlbeans.impl.values.JavaFloatHolder r0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaFloatHolder;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.JavaFloatHolder: void check_dated()>();

        $f0 = r0.<org.apache.xmlbeans.impl.values.JavaFloatHolder: float _value>;

        return $f0;
    }

    protected void set_double(double)
    {
        float $f0;
        org.apache.xmlbeans.impl.values.JavaFloatHolder r0;
        double d0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaFloatHolder;

        d0 := @parameter0: double;

        $f0 = (float) d0;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.JavaFloatHolder: void set_float(float)>($f0);

        return;
    }

    protected void set_float(float)
    {
        float f0;
        org.apache.xmlbeans.impl.values.JavaFloatHolder r0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaFloatHolder;

        f0 := @parameter0: float;

        r0.<org.apache.xmlbeans.impl.values.JavaFloatHolder: float _value> = f0;

        return;
    }

    protected void set_long(long)
    {
        float $f0;
        long l0;
        org.apache.xmlbeans.impl.values.JavaFloatHolder r0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaFloatHolder;

        l0 := @parameter0: long;

        $f0 = (float) l0;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.JavaFloatHolder: void set_float(float)>($f0);

        return;
    }

    protected void set_BigDecimal(java.math.BigDecimal)
    {
        java.math.BigDecimal r1;
        float $f0;
        org.apache.xmlbeans.impl.values.JavaFloatHolder r0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaFloatHolder;

        r1 := @parameter0: java.math.BigDecimal;

        $f0 = virtualinvoke r1.<java.math.BigDecimal: float floatValue()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.JavaFloatHolder: void set_float(float)>($f0);

        return;
    }

    protected void set_BigInteger(java.math.BigInteger)
    {
        float $f0;
        java.math.BigInteger r1;
        org.apache.xmlbeans.impl.values.JavaFloatHolder r0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaFloatHolder;

        r1 := @parameter0: java.math.BigInteger;

        $f0 = virtualinvoke r1.<java.math.BigInteger: float floatValue()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.JavaFloatHolder: void set_float(float)>($f0);

        return;
    }

    protected int compare_to(org.apache.xmlbeans.XmlObject)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase $r2;
        org.apache.xmlbeans.impl.values.JavaFloatHolder r0;
        int $i0;
        float $f0, $f1;
        org.apache.xmlbeans.XmlObject r1;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaFloatHolder;

        r1 := @parameter0: org.apache.xmlbeans.XmlObject;

        $f0 = r0.<org.apache.xmlbeans.impl.values.JavaFloatHolder: float _value>;

        $r2 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r1;

        $f1 = virtualinvoke $r2.<org.apache.xmlbeans.impl.values.XmlObjectBase: float floatValue()>();

        $i0 = staticinvoke <org.apache.xmlbeans.impl.values.JavaFloatHolder: int compare(float,float)>($f0, $f1);

        return $i0;
    }

    static int compare(float, float)
    {
        byte $b0, $b1, $b4;
        int $i2, $i3, $i5, $i7, $i8;
        float f0, f1;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $b0 = f0 cmpg f1;

        $i5 = (int) $b0;

        if $i5 >= 0 goto label1;

        $i7 = (int) -1;

        return $i7;

     label1:
        $b1 = f0 cmpl f1;

        $i8 = (int) $b1;

        if $i8 <= 0 goto label2;

        return 1;

     label2:
        $i2 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0);

        $i3 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f1);

        if $i2 != $i3 goto label3;

        $b4 = 0;

        goto label5;

     label3:
        if $i2 >= $i3 goto label4;

        $b4 = -1;

        goto label5;

     label4:
        $b4 = 1;

     label5:
        return $b4;
    }

    protected boolean equal_to(org.apache.xmlbeans.XmlObject)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase $r2;
        org.apache.xmlbeans.impl.values.JavaFloatHolder r0;
        int $i0;
        float $f0, $f1;
        org.apache.xmlbeans.XmlObject r1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaFloatHolder;

        r1 := @parameter0: org.apache.xmlbeans.XmlObject;

        $f0 = r0.<org.apache.xmlbeans.impl.values.JavaFloatHolder: float _value>;

        $r2 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r1;

        $f1 = virtualinvoke $r2.<org.apache.xmlbeans.impl.values.XmlObjectBase: float floatValue()>();

        $i0 = staticinvoke <org.apache.xmlbeans.impl.values.JavaFloatHolder: int compare(float,float)>($f0, $f1);

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected int value_hash_code()
    {
        int $i0;
        float $f0;
        org.apache.xmlbeans.impl.values.JavaFloatHolder r0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaFloatHolder;

        $f0 = r0.<org.apache.xmlbeans.impl.values.JavaFloatHolder: float _value>;

        $i0 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0);

        return $i0;
    }
}
