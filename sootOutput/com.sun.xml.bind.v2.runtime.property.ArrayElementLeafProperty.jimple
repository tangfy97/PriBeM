final class com.sun.xml.bind.v2.runtime.property.ArrayElementLeafProperty extends com.sun.xml.bind.v2.runtime.property.ArrayElementProperty
{
    private final com.sun.xml.bind.v2.runtime.Transducer xducer;
    static final boolean $assertionsDisabled;

    public void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl, com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo)
    {
        com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef $r5;
        java.lang.AssertionError $r8, $r10;
        java.util.List $r3, $r9;
        com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo r2;
        int $i0;
        java.lang.Object $r4;
        com.sun.xml.bind.v2.runtime.Transducer $r6, $r7;
        com.sun.xml.bind.v2.runtime.property.ArrayElementLeafProperty r0;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r1;
        boolean $z0, $z1;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.ArrayElementLeafProperty;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r2 := @parameter1: com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.property.ArrayElementProperty: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl,com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo)>(r1, r2);

        $z0 = <com.sun.xml.bind.v2.runtime.property.ArrayElementLeafProperty: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r9 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo: java.util.List getTypes()>();

        $i0 = interfaceinvoke $r9.<java.util.List: int size()>();

        if $i0 == 1 goto label1;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label1:
        $r3 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo: java.util.List getTypes()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef) $r4;

        $r6 = interfaceinvoke $r5.<com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef: com.sun.xml.bind.v2.runtime.Transducer getTransducer()>();

        r0.<com.sun.xml.bind.v2.runtime.property.ArrayElementLeafProperty: com.sun.xml.bind.v2.runtime.Transducer xducer> = $r6;

        $z1 = <com.sun.xml.bind.v2.runtime.property.ArrayElementLeafProperty: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r7 = r0.<com.sun.xml.bind.v2.runtime.property.ArrayElementLeafProperty: com.sun.xml.bind.v2.runtime.Transducer xducer>;

        if $r7 != null goto label2;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label2:
        return;
    }

    public void serializeItem(com.sun.xml.bind.v2.runtime.JaxBeanInfo, java.lang.Object, com.sun.xml.bind.v2.runtime.XMLSerializer) throws org.xml.sax.SAXException, com.sun.xml.bind.api.AccessorException, java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer r2;
        java.lang.Object r1;
        com.sun.xml.bind.v2.runtime.Transducer $r3, $r5;
        java.lang.String $r4;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo r6;
        com.sun.xml.bind.v2.runtime.property.ArrayElementLeafProperty r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.ArrayElementLeafProperty;

        r6 := @parameter0: com.sun.xml.bind.v2.runtime.JaxBeanInfo;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: com.sun.xml.bind.v2.runtime.XMLSerializer;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.property.ArrayElementLeafProperty: com.sun.xml.bind.v2.runtime.Transducer xducer>;

        interfaceinvoke $r3.<com.sun.xml.bind.v2.runtime.Transducer: void declareNamespace(java.lang.Object,com.sun.xml.bind.v2.runtime.XMLSerializer)>(r1, r2);

        virtualinvoke r2.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endNamespaceDecls(java.lang.Object)>(r1);

        virtualinvoke r2.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endAttributes()>();

        $r5 = r0.<com.sun.xml.bind.v2.runtime.property.ArrayElementLeafProperty: com.sun.xml.bind.v2.runtime.Transducer xducer>;

        $r4 = r0.<com.sun.xml.bind.v2.runtime.property.ArrayElementLeafProperty: java.lang.String fieldName>;

        interfaceinvoke $r5.<com.sun.xml.bind.v2.runtime.Transducer: void writeText(com.sun.xml.bind.v2.runtime.XMLSerializer,java.lang.Object,java.lang.String)>(r2, r1, $r4);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lcom/sun/xml/bind/v2/runtime/property/ArrayElementLeafProperty;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.sun.xml.bind.v2.runtime.property.ArrayElementLeafProperty: boolean $assertionsDisabled> = $z1;

        return;
    }
}
