public class com.jidesoft.spinner.PointFormatter extends javax.swing.text.DefaultFormatter
{
    private static javax.swing.JFormattedTextField$AbstractFormatter formatter;

    public static synchronized javax.swing.JFormattedTextField$AbstractFormatter getInstance()
    {
        javax.swing.JFormattedTextField$AbstractFormatter $r0, $r1;
        com.jidesoft.spinner.PointFormatter $r2;

        $r0 = <com.jidesoft.spinner.PointFormatter: javax.swing.JFormattedTextField$AbstractFormatter formatter>;

        if $r0 != null goto label1;

        $r2 = new com.jidesoft.spinner.PointFormatter;

        specialinvoke $r2.<com.jidesoft.spinner.PointFormatter: void <init>()>();

        <com.jidesoft.spinner.PointFormatter: javax.swing.JFormattedTextField$AbstractFormatter formatter> = $r2;

     label1:
        $r1 = <com.jidesoft.spinner.PointFormatter: javax.swing.JFormattedTextField$AbstractFormatter formatter>;

        return $r1;
    }

    private void <init>()
    {
        com.jidesoft.spinner.PointFormatter r0;

        r0 := @this: com.jidesoft.spinner.PointFormatter;

        specialinvoke r0.<javax.swing.text.DefaultFormatter: void <init>()>();

        return;
    }

    public java.lang.Object stringToValue(java.lang.String) throws java.text.ParseException
    {
        java.lang.String[] $r6;
        java.awt.Point $r7;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r0, r4, r5, $r8, $r9, $r10, $r11;
        java.text.ParseException $r2;
        boolean $z0, $z1;
        com.jidesoft.spinner.PointFormatter r3;
        java.lang.Exception $r1;

        r3 := @this: com.jidesoft.spinner.PointFormatter;

        r4 := @parameter0: java.lang.String;

        $r0 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>();

        r5 = $r0;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("(");

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke $r0.<java.lang.String: boolean endsWith(java.lang.String)>(")");

        if $z1 == 0 goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        r5 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(1, $i1);

     label1:
        $r6 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $r7 = new java.awt.Point;

        $r8 = $r6[0];

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        $r10 = $r6[1];

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String trim()>();

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

        specialinvoke $r7.<java.awt.Point: void <init>(int,int)>($i2, $i3);

     label2:
        return $r7;

     label3:
        $r1 := @caughtexception;

        $r2 = new java.text.ParseException;

        specialinvoke $r2.<java.text.ParseException: void <init>(java.lang.String,int)>(r5, 0);

        throw $r2;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.lang.String valueToString(java.lang.Object) throws java.text.ParseException
    {
        com.jidesoft.spinner.PointFormatter r1;
        java.awt.Point r3;
        int $i0, $i1;
        java.lang.Object r0;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9;
        java.lang.String $r2, $r10;
        boolean $z0;

        r1 := @this: com.jidesoft.spinner.PointFormatter;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.awt.Point;

        if $z0 == 0 goto label1;

        r3 = (java.awt.Point) r0;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $i0 = r3.<java.awt.Point: int x>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i1 = r3.<java.awt.Point: int y>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;

     label1:
        $r2 = specialinvoke r1.<javax.swing.text.DefaultFormatter: java.lang.String valueToString(java.lang.Object)>(r0);

        return $r2;
    }

    public static void main(java.lang.String[])
    {
        java.io.PrintStream $r2, $r4;
        java.lang.String[] r7;
        java.awt.Point r9, $r10;
        javax.swing.JFormattedTextField$AbstractFormatter $r1;
        int $i1;
        java.lang.Object $r3;
        java.lang.String r8;
        java.text.ParseException $r5, $r6;

        r7 := @parameter0: java.lang.String[];

        $r10 = new java.awt.Point;

        $i1 = (int) -5;

        specialinvoke $r10.<java.awt.Point: void <init>(int,int)>(5, $i1);

        $r1 = staticinvoke <com.jidesoft.spinner.PointFormatter: javax.swing.JFormattedTextField$AbstractFormatter getInstance()>();

     label1:
        r8 = virtualinvoke $r1.<javax.swing.JFormattedTextField$AbstractFormatter: java.lang.String valueToString(java.lang.Object)>($r10);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r8 = null;

     label4:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(r8);

     label5:
        $r3 = virtualinvoke $r1.<javax.swing.JFormattedTextField$AbstractFormatter: java.lang.Object stringToValue(java.lang.String)>("(3, -3)");

        r9 = (java.awt.Point) $r3;

     label6:
        goto label8;

     label7:
        $r5 := @caughtexception;

        r9 = null;

     label8:
        $r4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.Object)>(r9);

        return;

        catch java.text.ParseException from label1 to label2 with label3;
        catch java.text.ParseException from label5 to label6 with label7;
    }
}
