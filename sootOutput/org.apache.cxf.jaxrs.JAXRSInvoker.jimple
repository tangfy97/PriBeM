public class org.apache.cxf.jaxrs.JAXRSInvoker extends org.apache.cxf.service.invoker.AbstractInvoker
{
    private static final java.util.logging.Logger LOG;
    private static final java.util.ResourceBundle BUNDLE;
    private static final java.lang.String SERVICE_LOADER_AS_CONTEXT;
    private static final java.lang.String SERVICE_OBJECT_SCOPE;
    private static final java.lang.String REQUEST_SCOPE;
    private static final java.lang.String LAST_SERVICE_OBJECT;
    private static final java.lang.String REQUEST_WAS_SUSPENDED;
    private static final java.lang.String PROXY_INVOCATION_ERROR_FRAGMENT;

    public void <init>()
    {
        org.apache.cxf.jaxrs.JAXRSInvoker r0;

        r0 := @this: org.apache.cxf.jaxrs.JAXRSInvoker;

        specialinvoke r0.<org.apache.cxf.service.invoker.AbstractInvoker: void <init>()>();

        return;
    }

    public java.lang.Object invoke(org.apache.cxf.message.Exchange, java.lang.Object)
    {
        org.apache.cxf.jaxrs.lifecycle.ResourceProvider $r5;
        org.apache.cxf.interceptor.InterceptorChain $r17, $r30, $r44, $r54;
        org.apache.cxf.message.MessageContentsList $r2, $r34;
        javax.ws.rs.container.AsyncResponse r4;
        java.lang.Throwable $r22;
        org.apache.cxf.jaxrs.impl.AsyncResponseImpl r57;
        org.apache.cxf.message.Exchange r1;
        boolean $z0, $z1, $z2, $z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, z14, z16, z18, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27;
        javax.ws.rs.InternalServerErrorException $r33;
        org.apache.cxf.jaxrs.provider.ProviderFactory $r12, $r25, $r39, $r49;
        java.lang.Boolean $r13, $r26, $r40, $r50;
        org.apache.cxf.message.Message $r11, $r14, $r15, $r16, $r24, $r27, $r28, $r29, $r35, $r38, $r41, $r42, $r43, $r48, $r51, $r52, $r53;
        org.apache.cxf.interceptor.InterceptorChain$State $r18, $r19, $r31, $r32, $r45, $r46, $r55, $r56;
        org.apache.cxf.jaxrs.JAXRSInvoker r0;
        java.lang.Object $r3, $r6, $r7, r8, $r9, $r10, $r20, $r21, $r23, $r36, $r37, $r47, r58;

        r0 := @this: org.apache.cxf.jaxrs.JAXRSInvoker;

        r1 := @parameter0: org.apache.cxf.message.Exchange;

        r8 := @parameter1: java.lang.Object;

        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.JAXRSInvoker: org.apache.cxf.message.MessageContentsList checkExchangeForResponse(org.apache.cxf.message.Exchange)>(r1);

        if $r2 == null goto label01;

        return $r2;

     label01:
        $r3 = interfaceinvoke r1.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Ljavax/ws/rs/container/AsyncResponse;");

        r4 = (javax.ws.rs.container.AsyncResponse) $r3;

        if r4 == null goto label02;

        r57 = (org.apache.cxf.jaxrs.impl.AsyncResponseImpl) r4;

        virtualinvoke r57.<org.apache.cxf.jaxrs.impl.AsyncResponseImpl: void prepareContinuation()>();

        virtualinvoke r57.<org.apache.cxf.jaxrs.impl.AsyncResponseImpl: void handleTimeout()>();

        $r20 = virtualinvoke r57.<org.apache.cxf.jaxrs.impl.AsyncResponseImpl: java.lang.Object getResponseObject()>();

        $r21 = specialinvoke r0.<org.apache.cxf.jaxrs.JAXRSInvoker: java.lang.Object handleAsyncResponse(org.apache.cxf.message.Exchange,java.lang.Object)>(r1, $r20);

        return $r21;

     label02:
        $r5 = specialinvoke r0.<org.apache.cxf.jaxrs.JAXRSInvoker: org.apache.cxf.jaxrs.lifecycle.ResourceProvider getResourceProvider(org.apache.cxf.message.Exchange)>(r1);

        r58 = null;

     label03:
        $r6 = virtualinvoke r0.<org.apache.cxf.jaxrs.JAXRSInvoker: java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)>(r1);

        r58 = $r6;

        $r7 = virtualinvoke r0.<org.apache.cxf.jaxrs.JAXRSInvoker: java.lang.Object getActualServiceObject(org.apache.cxf.message.Exchange,java.lang.Object)>(r1, $r6);

        $r9 = virtualinvoke r0.<org.apache.cxf.jaxrs.JAXRSInvoker: java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)>(r1, r8, $r7);

     label04:
        $r10 = interfaceinvoke r1.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Object)>("org.apache.cxf.suspended.invocation");

        $z0 = staticinvoke <org.apache.cxf.common.util.PropertyUtils: boolean isTrue(java.lang.Object)>($r10);

        if $z0 != 0 goto label05;

        $r16 = interfaceinvoke r1.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        $r17 = interfaceinvoke $r16.<org.apache.cxf.message.Message: org.apache.cxf.interceptor.InterceptorChain getInterceptorChain()>();

        $r18 = interfaceinvoke $r17.<org.apache.cxf.interceptor.InterceptorChain: org.apache.cxf.interceptor.InterceptorChain$State getState()>();

        $r19 = <org.apache.cxf.interceptor.InterceptorChain$State: org.apache.cxf.interceptor.InterceptorChain$State SUSPENDED>;

        if $r18 != $r19 goto label06;

     label05:
        $z21 = 1;

        $z20 = 1;

        goto label07;

     label06:
        $z21 = 0;

        $z20 = 0;

     label07:
        z14 = $z21;

        $z1 = interfaceinvoke r1.<org.apache.cxf.message.Exchange: boolean isOneWay()>();

        if $z1 != 0 goto label08;

        if $z20 == 0 goto label09;

     label08:
        $r11 = interfaceinvoke r1.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        $r12 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.message.Message)>($r11);

        virtualinvoke $r12.<org.apache.cxf.jaxrs.provider.ProviderFactory: void clearThreadLocalProxies()>();

     label09:
        if z14 != 0 goto label10;

        $r14 = interfaceinvoke r1.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        $z2 = specialinvoke r0.<org.apache.cxf.jaxrs.JAXRSInvoker: boolean isServiceObjectRequestScope(org.apache.cxf.message.Message)>($r14);

        if $z2 != 0 goto label10;

        $r15 = interfaceinvoke r1.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        interfaceinvoke $r5.<org.apache.cxf.jaxrs.lifecycle.ResourceProvider: void releaseInstance(org.apache.cxf.message.Message,java.lang.Object)>($r15, $r6);

        goto label11;

     label10:
        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z14);

        interfaceinvoke r1.<org.apache.cxf.message.Exchange: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.cxf.service.request.suspended", $r13);

        specialinvoke r0.<org.apache.cxf.jaxrs.JAXRSInvoker: void persistRoots(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)>(r1, $r6, $r5);

     label11:
        return $r9;

     label12:
        $r33 := @caughtexception;

        $r34 = specialinvoke r0.<org.apache.cxf.jaxrs.JAXRSInvoker: org.apache.cxf.message.MessageContentsList checkExchangeForResponse(org.apache.cxf.message.Exchange)>(r1);

        if $r34 == null goto label21;

     label13:
        $r47 = interfaceinvoke r1.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Object)>("org.apache.cxf.suspended.invocation");

        $z10 = staticinvoke <org.apache.cxf.common.util.PropertyUtils: boolean isTrue(java.lang.Object)>($r47);

        if $z10 != 0 goto label14;

        $r53 = interfaceinvoke r1.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        $r54 = interfaceinvoke $r53.<org.apache.cxf.message.Message: org.apache.cxf.interceptor.InterceptorChain getInterceptorChain()>();

        $r55 = interfaceinvoke $r54.<org.apache.cxf.interceptor.InterceptorChain: org.apache.cxf.interceptor.InterceptorChain$State getState()>();

        $r56 = <org.apache.cxf.interceptor.InterceptorChain$State: org.apache.cxf.interceptor.InterceptorChain$State SUSPENDED>;

        if $r55 != $r56 goto label15;

     label14:
        $z23 = 1;

        $z22 = 1;

        goto label16;

     label15:
        $z23 = 0;

        $z22 = 0;

     label16:
        z16 = $z22;

        $z11 = interfaceinvoke r1.<org.apache.cxf.message.Exchange: boolean isOneWay()>();

        if $z11 != 0 goto label17;

        if $z23 == 0 goto label18;

     label17:
        $r48 = interfaceinvoke r1.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        $r49 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.message.Message)>($r48);

        virtualinvoke $r49.<org.apache.cxf.jaxrs.provider.ProviderFactory: void clearThreadLocalProxies()>();

     label18:
        if z16 != 0 goto label19;

        $r51 = interfaceinvoke r1.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        $z12 = specialinvoke r0.<org.apache.cxf.jaxrs.JAXRSInvoker: boolean isServiceObjectRequestScope(org.apache.cxf.message.Message)>($r51);

        if $z12 != 0 goto label19;

        $r52 = interfaceinvoke r1.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        interfaceinvoke $r5.<org.apache.cxf.jaxrs.lifecycle.ResourceProvider: void releaseInstance(org.apache.cxf.message.Message,java.lang.Object)>($r52, r58);

        goto label20;

     label19:
        $r50 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z16);

        interfaceinvoke r1.<org.apache.cxf.message.Exchange: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.cxf.service.request.suspended", $r50);

        specialinvoke r0.<org.apache.cxf.jaxrs.JAXRSInvoker: void persistRoots(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)>(r1, r58, $r5);

     label20:
        return $r34;

     label21:
        $r35 = interfaceinvoke r1.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        $r36 = specialinvoke r0.<org.apache.cxf.jaxrs.JAXRSInvoker: java.lang.Object handleFault(java.lang.Throwable,org.apache.cxf.message.Message)>($r33, $r35);

     label22:
        $r37 = interfaceinvoke r1.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Object)>("org.apache.cxf.suspended.invocation");

        $z7 = staticinvoke <org.apache.cxf.common.util.PropertyUtils: boolean isTrue(java.lang.Object)>($r37);

        if $z7 != 0 goto label23;

        $r43 = interfaceinvoke r1.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        $r44 = interfaceinvoke $r43.<org.apache.cxf.message.Message: org.apache.cxf.interceptor.InterceptorChain getInterceptorChain()>();

        $r45 = interfaceinvoke $r44.<org.apache.cxf.interceptor.InterceptorChain: org.apache.cxf.interceptor.InterceptorChain$State getState()>();

        $r46 = <org.apache.cxf.interceptor.InterceptorChain$State: org.apache.cxf.interceptor.InterceptorChain$State SUSPENDED>;

        if $r45 != $r46 goto label24;

     label23:
        $z27 = 1;

        $z26 = 1;

        goto label25;

     label24:
        $z27 = 0;

        $z26 = 0;

     label25:
        z18 = $z27;

        $z8 = interfaceinvoke r1.<org.apache.cxf.message.Exchange: boolean isOneWay()>();

        if $z8 != 0 goto label26;

        if $z26 == 0 goto label27;

     label26:
        $r38 = interfaceinvoke r1.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        $r39 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.message.Message)>($r38);

        virtualinvoke $r39.<org.apache.cxf.jaxrs.provider.ProviderFactory: void clearThreadLocalProxies()>();

     label27:
        if z18 != 0 goto label28;

        $r41 = interfaceinvoke r1.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        $z9 = specialinvoke r0.<org.apache.cxf.jaxrs.JAXRSInvoker: boolean isServiceObjectRequestScope(org.apache.cxf.message.Message)>($r41);

        if $z9 != 0 goto label28;

        $r42 = interfaceinvoke r1.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        interfaceinvoke $r5.<org.apache.cxf.jaxrs.lifecycle.ResourceProvider: void releaseInstance(org.apache.cxf.message.Message,java.lang.Object)>($r42, r58);

        goto label29;

     label28:
        $r40 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z18);

        interfaceinvoke r1.<org.apache.cxf.message.Exchange: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.cxf.service.request.suspended", $r40);

        specialinvoke r0.<org.apache.cxf.jaxrs.JAXRSInvoker: void persistRoots(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)>(r1, r58, $r5);

     label29:
        return $r36;

     label30:
        $r22 := @caughtexception;

     label31:
        $r23 = interfaceinvoke r1.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Object)>("org.apache.cxf.suspended.invocation");

        $z3 = staticinvoke <org.apache.cxf.common.util.PropertyUtils: boolean isTrue(java.lang.Object)>($r23);

        if $z3 != 0 goto label32;

        $r29 = interfaceinvoke r1.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        $r30 = interfaceinvoke $r29.<org.apache.cxf.message.Message: org.apache.cxf.interceptor.InterceptorChain getInterceptorChain()>();

        $r31 = interfaceinvoke $r30.<org.apache.cxf.interceptor.InterceptorChain: org.apache.cxf.interceptor.InterceptorChain$State getState()>();

        $r32 = <org.apache.cxf.interceptor.InterceptorChain$State: org.apache.cxf.interceptor.InterceptorChain$State SUSPENDED>;

        if $r31 != $r32 goto label33;

     label32:
        $z25 = 1;

        $z24 = 1;

        goto label34;

     label33:
        $z25 = 0;

        $z24 = 0;

     label34:
        z4 = $z24;

        $z5 = interfaceinvoke r1.<org.apache.cxf.message.Exchange: boolean isOneWay()>();

        if $z5 != 0 goto label35;

        if $z25 == 0 goto label36;

     label35:
        $r24 = interfaceinvoke r1.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        $r25 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.message.Message)>($r24);

        virtualinvoke $r25.<org.apache.cxf.jaxrs.provider.ProviderFactory: void clearThreadLocalProxies()>();

     label36:
        if z4 != 0 goto label37;

        $r27 = interfaceinvoke r1.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        $z6 = specialinvoke r0.<org.apache.cxf.jaxrs.JAXRSInvoker: boolean isServiceObjectRequestScope(org.apache.cxf.message.Message)>($r27);

        if $z6 != 0 goto label37;

        $r28 = interfaceinvoke r1.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        interfaceinvoke $r5.<org.apache.cxf.jaxrs.lifecycle.ResourceProvider: void releaseInstance(org.apache.cxf.message.Message,java.lang.Object)>($r28, r58);

        goto label38;

     label37:
        $r26 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z4);

        interfaceinvoke r1.<org.apache.cxf.message.Exchange: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.cxf.service.request.suspended", $r26);

        specialinvoke r0.<org.apache.cxf.jaxrs.JAXRSInvoker: void persistRoots(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)>(r1, r58, $r5);

     label38:
        throw $r22;

        catch javax.ws.rs.InternalServerErrorException from label03 to label04 with label12;
        catch java.lang.Throwable from label03 to label04 with label30;
        catch java.lang.Throwable from label12 to label13 with label30;
        catch java.lang.Throwable from label21 to label22 with label30;
        catch java.lang.Throwable from label30 to label31 with label30;
    }

    private java.lang.Object handleAsyncResponse(org.apache.cxf.message.Exchange, java.lang.Object)
    {
        java.lang.Throwable $r7;
        java.lang.Object[] $r5;
        org.apache.cxf.message.Message $r3, $r8;
        org.apache.cxf.message.MessageContentsList $r4;
        org.apache.cxf.message.Exchange r2;
        org.apache.cxf.jaxrs.JAXRSInvoker r1;
        org.apache.cxf.interceptor.Fault $r6;
        java.lang.Object r0, $r9;
        boolean $z0;

        r1 := @this: org.apache.cxf.jaxrs.JAXRSInvoker;

        r2 := @parameter0: org.apache.cxf.message.Exchange;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof java.lang.Throwable;

        if $z0 == 0 goto label1;

        $r6 = new org.apache.cxf.interceptor.Fault;

        $r7 = (java.lang.Throwable) r0;

        specialinvoke $r6.<org.apache.cxf.interceptor.Fault: void <init>(java.lang.Throwable)>($r7);

        $r8 = interfaceinvoke r2.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        $r9 = specialinvoke r1.<org.apache.cxf.jaxrs.JAXRSInvoker: java.lang.Object handleFault(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo,java.lang.reflect.Method)>($r6, $r8, null, null);

        return $r9;

     label1:
        $r3 = interfaceinvoke r2.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        specialinvoke r1.<org.apache.cxf.jaxrs.JAXRSInvoker: void setResponseContentTypeIfNeeded(org.apache.cxf.message.Message,java.lang.Object)>($r3, r0);

        $r4 = new org.apache.cxf.message.MessageContentsList;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r0;

        specialinvoke $r4.<org.apache.cxf.message.MessageContentsList: void <init>(java.lang.Object[])>($r5);

        return $r4;
    }

    private void persistRoots(org.apache.cxf.message.Exchange, java.lang.Object, java.lang.Object)
    {
        org.apache.cxf.jaxrs.JAXRSInvoker r3;
        java.lang.Object r1, r2;
        org.apache.cxf.message.Exchange r0;

        r3 := @this: org.apache.cxf.jaxrs.JAXRSInvoker;

        r0 := @parameter0: org.apache.cxf.message.Exchange;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        interfaceinvoke r0.<org.apache.cxf.message.Exchange: java.lang.Object put(java.lang.Object,java.lang.Object)>("service.root.instance", r1);

        interfaceinvoke r0.<org.apache.cxf.message.Exchange: java.lang.Object put(java.lang.Object,java.lang.Object)>("service.root.provider", r2);

        return;
    }

    public java.lang.Object invoke(org.apache.cxf.message.Exchange, java.lang.Object, java.lang.Object)
    {
        org.apache.cxf.message.MessageContentsList $r25, $r39, $r56, $r60;
        org.apache.cxf.jaxrs.model.OperationResourceInfo r2, $r21;
        org.apache.cxf.common.classloader.ClassLoaderUtils$ClassLoaderHolder r71;
        javax.ws.rs.WebApplicationException $r52;
        java.lang.ClassLoader $r38;
        java.lang.Throwable $r62;
        java.lang.Object[] $r26, $r29, $r40, $r57, $r61;
        org.apache.cxf.jaxrs.impl.AsyncResponseImpl r72;
        java.util.ResourceBundle $r30;
        java.lang.String r14, $r32, $r48, $r55, r75, r76;
        java.io.IOException $r58;
        org.apache.cxf.message.Exchange r0;
        java.lang.reflect.Method $r43, $r44, $r67, r69;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.util.logging.Logger $r31;
        javax.ws.rs.NotFoundException $r33;
        java.util.List $r22, $r23, $r34, $r41, r70;
        javax.ws.rs.core.Response $r53, $r59, r77, r78;
        org.apache.cxf.jaxrs.model.ClassResourceInfo $r3, $r20, r74;
        org.apache.cxf.jaxrs.provider.ProviderFactory $r5;
        org.apache.cxf.common.i18n.Message $r28;
        org.apache.cxf.jaxrs.model.ProviderInfo r65;
        org.apache.cxf.interceptor.Fault $r63;
        org.apache.cxf.message.Message $r4;
        org.apache.cxf.jaxrs.JAXRSInvoker r10;
        javax.ws.rs.core.MultivaluedMap $r11;
        org.apache.cxf.endpoint.Endpoint $r46;
        java.lang.Object $r1, $r6, r7, $r8, r9, $r12, $r13, $r15, $r16, $r17, $r24, $r27, $r35, $r36, $r49, $r50, $r54, $r64, r73;
        java.lang.Class $r18, $r19, $r37, $r47, $r51, $r68;
        org.apache.cxf.jaxrs.model.MethodDispatcher $r42, $r45, $r66;

        r10 := @this: org.apache.cxf.jaxrs.JAXRSInvoker;

        r0 := @parameter0: org.apache.cxf.message.Exchange;

        r9 := @parameter1: java.lang.Object;

        r7 := @parameter2: java.lang.Object;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/model/OperationResourceInfo;");

        r2 = (org.apache.cxf.jaxrs.model.OperationResourceInfo) $r1;

        $r3 = virtualinvoke r2.<org.apache.cxf.jaxrs.model.OperationResourceInfo: org.apache.cxf.jaxrs.model.ClassResourceInfo getClassResourceInfo()>();

        $r4 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        $r5 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.message.Message)>($r4);

        $r6 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: java.lang.Object remove(java.lang.Object)>("org.apache.cxf.service.request.suspended");

        if $r6 == null goto label01;

        $z8 = 1;

        goto label02;

     label01:
        $z8 = 0;

     label02:
        if $z8 != 0 goto label03;

        $r51 = staticinvoke <org.apache.cxf.common.util.ClassHelper: java.lang.Class getRealClass(java.lang.Object)>(r7);

        specialinvoke r10.<org.apache.cxf.jaxrs.JAXRSInvoker: void pushOntoStack(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Class,org.apache.cxf.message.Message)>(r2, $r51, $r4);

     label03:
        $z0 = virtualinvoke $r3.<org.apache.cxf.jaxrs.model.ClassResourceInfo: boolean contextsAvailable()>();

        $z1 = virtualinvoke $r3.<org.apache.cxf.jaxrs.model.ClassResourceInfo: boolean paramsAvailable()>();

        if $z0 != 0 goto label04;

        if $z1 == 0 goto label06;

     label04:
        $r8 = staticinvoke <org.apache.cxf.common.util.ClassHelper: java.lang.Object getRealObject(java.lang.Object)>(r7);

        if $z1 == 0 goto label05;

        staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: void injectParameters(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,org.apache.cxf.message.Message)>(r2, $r8, $r4);

     label05:
        if $z0 == 0 goto label06;

        staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: void injectContexts(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)>($r8, $r3, $r4);

     label06:
        $z9 = virtualinvoke $r3.<org.apache.cxf.jaxrs.model.ClassResourceInfo: boolean isRoot()>();

        if $z9 == 0 goto label07;

        $r46 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: org.apache.cxf.endpoint.Endpoint getEndpoint()>();

        $r47 = class "Ljavax/ws/rs/core/Application;";

        $r48 = virtualinvoke $r47.<java.lang.Class: java.lang.String getName()>();

        $r49 = interfaceinvoke $r46.<org.apache.cxf.endpoint.Endpoint: java.lang.Object get(java.lang.Object)>($r48);

        r65 = (org.apache.cxf.jaxrs.model.ProviderInfo) $r49;

        if r65 == null goto label07;

        $r50 = virtualinvoke r65.<org.apache.cxf.jaxrs.model.ProviderInfo: java.lang.Object getProvider()>();

        staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: void injectContexts(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)>($r50, r65, $r4);

     label07:
        $r66 = virtualinvoke $r3.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.MethodDispatcher getMethodDispatcher()>();

        $r67 = virtualinvoke $r66.<org.apache.cxf.jaxrs.model.MethodDispatcher: java.lang.reflect.Method getMethod(org.apache.cxf.jaxrs.model.OperationResourceInfo)>(r2);

        $r68 = class "Ljava/lang/reflect/Proxy;";

        $z10 = virtualinvoke $r68.<java.lang.Class: boolean isInstance(java.lang.Object)>(r7);

        if $z10 == 0 goto label08;

        $r42 = virtualinvoke $r3.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.MethodDispatcher getMethodDispatcher()>();

        $r43 = virtualinvoke $r42.<org.apache.cxf.jaxrs.model.MethodDispatcher: java.lang.reflect.Method getProxyMethod(java.lang.reflect.Method)>($r67);

        r69 = $r43;

        if $r43 != null goto label09;

        $r44 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: java.lang.reflect.Method checkProxy(java.lang.reflect.Method,java.lang.Object)>($r67, r7);

        r69 = $r44;

        $r45 = virtualinvoke $r3.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.MethodDispatcher getMethodDispatcher()>();

        virtualinvoke $r45.<org.apache.cxf.jaxrs.model.MethodDispatcher: void addProxyMethod(java.lang.reflect.Method,java.lang.reflect.Method)>($r67, $r44);

        goto label09;

     label08:
        r69 = $r67;

     label09:
        r70 = null;

        $z11 = r9 instanceof java.util.List;

        if $z11 == 0 goto label10;

        $r41 = (java.util.List) r9;

        r70 = staticinvoke <org.apache.cxf.helpers.CastUtils: java.util.List cast(java.util.List)>($r41);

        goto label11;

     label10:
        if r9 == null goto label11;

        $r39 = new org.apache.cxf.message.MessageContentsList;

        $r40 = newarray (java.lang.Object)[1];

        $r40[0] = r9;

        specialinvoke $r39.<org.apache.cxf.message.MessageContentsList: void <init>(java.lang.Object[])>($r40);

        r70 = $r39;

     label11:
        r71 = null;

     label12:
        $z12 = specialinvoke r10.<org.apache.cxf.jaxrs.JAXRSInvoker: boolean setServiceLoaderAsContextLoader(org.apache.cxf.message.Message)>($r4);

        if $z12 == 0 goto label13;

        $r37 = virtualinvoke r7.<java.lang.Object: java.lang.Class getClass()>();

        $r38 = virtualinvoke $r37.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r71 = staticinvoke <org.apache.cxf.common.classloader.ClassLoaderUtils: org.apache.cxf.common.classloader.ClassLoaderUtils$ClassLoaderHolder setThreadContextClassloader(java.lang.ClassLoader)>($r38);

     label13:
        r72 = null;

        $z2 = virtualinvoke r2.<org.apache.cxf.jaxrs.model.OperationResourceInfo: boolean isSubResourceLocator()>();

        if $z2 != 0 goto label14;

        $r36 = interfaceinvoke $r4.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Class)>(class "Ljavax/ws/rs/container/AsyncResponse;");

        r72 = (org.apache.cxf.jaxrs.impl.AsyncResponseImpl) $r36;

     label14:
        r73 = virtualinvoke r10.<org.apache.cxf.jaxrs.JAXRSInvoker: java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List)>(r0, r7, r69, r70);

        if r72 == null goto label16;

        $z5 = virtualinvoke r72.<org.apache.cxf.jaxrs.impl.AsyncResponseImpl: boolean isSuspended()>();

        if $z5 != 0 goto label15;

        $z6 = virtualinvoke r72.<org.apache.cxf.jaxrs.impl.AsyncResponseImpl: boolean isResumedByApplication()>();

        if $z6 != 0 goto label15;

        virtualinvoke r72.<org.apache.cxf.jaxrs.impl.AsyncResponseImpl: void suspendContinuation()>();

        virtualinvoke $r5.<org.apache.cxf.jaxrs.provider.ProviderFactory: void clearThreadLocalProxies()>();

        goto label16;

     label15:
        $r35 = virtualinvoke r72.<org.apache.cxf.jaxrs.impl.AsyncResponseImpl: java.lang.Object getResponseObject()>();

        r73 = specialinvoke r10.<org.apache.cxf.jaxrs.JAXRSInvoker: java.lang.Object handleAsyncResponse(org.apache.cxf.message.Exchange,java.lang.Object)>(r0, $r35);

     label16:
        interfaceinvoke r0.<org.apache.cxf.message.Exchange: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.cxf.service.object.last", r7);

        if r71 == null goto label23;

        virtualinvoke r71.<org.apache.cxf.common.classloader.ClassLoaderUtils$ClassLoaderHolder: void reset()>();

        goto label23;

     label17:
        $r63 := @caughtexception;

        $r64 = specialinvoke r10.<org.apache.cxf.jaxrs.JAXRSInvoker: java.lang.Object handleFault(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo,java.lang.reflect.Method)>($r63, $r4, $r3, r69);

     label18:
        interfaceinvoke r0.<org.apache.cxf.message.Exchange: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.cxf.service.object.last", r7);

        if r71 == null goto label19;

        virtualinvoke r71.<org.apache.cxf.common.classloader.ClassLoaderUtils$ClassLoaderHolder: void reset()>();

     label19:
        return $r64;

     label20:
        $r62 := @caughtexception;

     label21:
        interfaceinvoke r0.<org.apache.cxf.message.Exchange: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.cxf.service.object.last", r7);

        if r71 == null goto label22;

        virtualinvoke r71.<org.apache.cxf.common.classloader.ClassLoaderUtils$ClassLoaderHolder: void reset()>();

     label22:
        throw $r62;

     label23:
        r74 = null;

        $z3 = virtualinvoke r2.<org.apache.cxf.jaxrs.model.OperationResourceInfo: boolean isSubResourceLocator()>();

        if $z3 == 0 goto label35;

     label24:
        $r11 = virtualinvoke r10.<org.apache.cxf.jaxrs.JAXRSInvoker: javax.ws.rs.core.MultivaluedMap getTemplateValues(org.apache.cxf.message.Message)>($r4);

        $r12 = interfaceinvoke $r11.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("FINAL_MATCH_GROUP");

        r75 = (java.lang.String) $r12;

        $r13 = interfaceinvoke $r4.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("org.apache.cxf.request.method");

        r14 = (java.lang.String) $r13;

        $r15 = interfaceinvoke $r4.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("Content-Type");

        r76 = (java.lang.String) $r15;

        if r76 != null goto label25;

        r76 = "*/*";

     label25:
        $r16 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Object)>("Accept");

        $r34 = (java.util.List) $r16;

        $r17 = staticinvoke <org.apache.cxf.jaxrs.JAXRSInvoker: java.lang.Object checkResultObject(java.lang.Object,java.lang.String)>(r73, r75);

        $r18 = virtualinvoke r69.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r19 = staticinvoke <org.apache.cxf.common.util.ClassHelper: java.lang.Class getRealClass(java.lang.Object)>($r17);

        $r20 = virtualinvoke $r3.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.ClassResourceInfo getSubResource(java.lang.Class,java.lang.Class,java.lang.Object)>($r18, $r19, $r17);

        r74 = $r20;

        if $r20 != null goto label26;

        $r28 = new org.apache.cxf.common.i18n.Message;

        $r30 = <org.apache.cxf.jaxrs.JAXRSInvoker: java.util.ResourceBundle BUNDLE>;

        $r29 = newarray (java.lang.Object)[1];

        $r29[0] = r75;

        specialinvoke $r28.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("NO_SUBRESOURCE_FOUND", $r30, $r29);

        $r31 = <org.apache.cxf.jaxrs.JAXRSInvoker: java.util.logging.Logger LOG>;

        $r32 = virtualinvoke $r28.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        virtualinvoke $r31.<java.util.logging.Logger: void severe(java.lang.String)>($r32);

        $r33 = new javax.ws.rs.NotFoundException;

        specialinvoke $r33.<javax.ws.rs.NotFoundException: void <init>()>();

        throw $r33;

     label26:
        $r21 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List,boolean)>($r20, $r4, r14, $r11, r76, $r34, 1);

        interfaceinvoke r0.<org.apache.cxf.message.Exchange: void put(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/jaxrs/model/OperationResourceInfo;", $r21);

        interfaceinvoke $r4.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("jaxrs.template.parameters", $r11);

        $r22 = virtualinvoke $r21.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.util.List getNameBindings()>();

        $z4 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: boolean runContainerRequestFilters(org.apache.cxf.jaxrs.provider.ProviderFactory,org.apache.cxf.message.Message,boolean,java.util.List)>($r5, $r4, 0, $r22);

        if $z4 == 0 goto label28;

        $r25 = new org.apache.cxf.message.MessageContentsList;

        $r26 = newarray (java.lang.Object)[1];

        $r27 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Ljavax/ws/rs/core/Response;");

        $r26[0] = $r27;

        specialinvoke $r25.<org.apache.cxf.message.MessageContentsList: void <init>(java.lang.Object[])>($r26);

     label27:
        return $r25;

     label28:
        $r23 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List processParameters(org.apache.cxf.jaxrs.model.OperationResourceInfo,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message)>($r21, $r11, $r4);

        interfaceinvoke $r4.<org.apache.cxf.message.Message: void setContent(java.lang.Class,java.lang.Object)>(class "Ljava/util/List;", $r23);

        $r24 = virtualinvoke r10.<org.apache.cxf.jaxrs.JAXRSInvoker: java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)>(r0, $r23, $r17);

     label29:
        return $r24;

     label30:
        $r58 := @caughtexception;

        $r59 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.Response convertFaultToResponse(java.lang.Throwable,org.apache.cxf.message.Message)>($r58, $r4);

        r77 = $r59;

        if $r59 != null goto label31;

        r77 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.Response convertFaultToResponse(java.lang.Throwable,org.apache.cxf.message.Message)>($r58, $r4);

     label31:
        $r60 = new org.apache.cxf.message.MessageContentsList;

        $r61 = newarray (java.lang.Object)[1];

        $r61[0] = r77;

        specialinvoke $r60.<org.apache.cxf.message.MessageContentsList: void <init>(java.lang.Object[])>($r61);

        return $r60;

     label32:
        $r52 := @caughtexception;

        $r53 = virtualinvoke $r52.<javax.ws.rs.WebApplicationException: javax.ws.rs.core.Response getResponse()>();

        $r54 = interfaceinvoke $r4.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("org.apache.cxf.request.method");

        $r55 = (java.lang.String) $r54;

        $z7 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: boolean noResourceMethodForOptions(javax.ws.rs.core.Response,java.lang.String)>($r53, $r55);

        if $z7 == 0 goto label33;

        r78 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.Response createResponse(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,int,boolean)>(r74, null, null, 200, 1);

        goto label34;

     label33:
        r78 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.Response convertFaultToResponse(java.lang.Throwable,org.apache.cxf.message.Message)>($r52, $r4);

     label34:
        $r56 = new org.apache.cxf.message.MessageContentsList;

        $r57 = newarray (java.lang.Object)[1];

        $r57[0] = r78;

        specialinvoke $r56.<org.apache.cxf.message.MessageContentsList: void <init>(java.lang.Object[])>($r57);

        return $r56;

     label35:
        specialinvoke r10.<org.apache.cxf.jaxrs.JAXRSInvoker: void setResponseContentTypeIfNeeded(org.apache.cxf.message.Message,java.lang.Object)>($r4, r73);

        return r73;

        catch org.apache.cxf.interceptor.Fault from label12 to label16 with label17;
        catch java.lang.Throwable from label12 to label16 with label20;
        catch java.lang.Throwable from label17 to label18 with label20;
        catch java.lang.Throwable from label20 to label21 with label20;
        catch java.io.IOException from label24 to label27 with label30;
        catch java.io.IOException from label28 to label29 with label30;
        catch javax.ws.rs.WebApplicationException from label24 to label27 with label32;
        catch javax.ws.rs.WebApplicationException from label28 to label29 with label32;
    }

    private org.apache.cxf.message.MessageContentsList checkExchangeForResponse(org.apache.cxf.message.Exchange)
    {
        org.apache.cxf.jaxrs.JAXRSInvoker r6;
        java.lang.Object[] $r5;
        javax.ws.rs.core.Response r2;
        org.apache.cxf.message.Message $r3;
        org.apache.cxf.message.MessageContentsList $r4;
        java.lang.Object $r1;
        org.apache.cxf.message.Exchange r0;

        r6 := @this: org.apache.cxf.jaxrs.JAXRSInvoker;

        r0 := @parameter0: org.apache.cxf.message.Exchange;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Ljavax/ws/rs/core/Response;");

        r2 = (javax.ws.rs.core.Response) $r1;

        if r2 == null goto label1;

        $r3 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: void setMessageContentType(org.apache.cxf.message.Message,javax.ws.rs.core.Response)>($r3, r2);

        $r4 = new org.apache.cxf.message.MessageContentsList;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r2;

        specialinvoke $r4.<org.apache.cxf.message.MessageContentsList: void <init>(java.lang.Object[])>($r5);

        return $r4;

     label1:
        return null;
    }

    private void setResponseContentTypeIfNeeded(org.apache.cxf.message.Message, java.lang.Object)
    {
        org.apache.cxf.jaxrs.JAXRSInvoker r3;
        javax.ws.rs.core.Response $r2;
        org.apache.cxf.message.Message r1;
        java.lang.Object r0;
        boolean $z0;

        r3 := @this: org.apache.cxf.jaxrs.JAXRSInvoker;

        r1 := @parameter0: org.apache.cxf.message.Message;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof javax.ws.rs.core.Response;

        if $z0 == 0 goto label1;

        $r2 = (javax.ws.rs.core.Response) r0;

        staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: void setMessageContentType(org.apache.cxf.message.Message,javax.ws.rs.core.Response)>(r1, $r2);

     label1:
        return;
    }

    private java.lang.Object handleFault(java.lang.Throwable, org.apache.cxf.message.Message)
    {
        org.apache.cxf.jaxrs.JAXRSInvoker r0;
        java.lang.Throwable r2;
        org.apache.cxf.interceptor.Fault $r1;
        org.apache.cxf.message.Message r3;
        java.lang.Object $r4;

        r0 := @this: org.apache.cxf.jaxrs.JAXRSInvoker;

        r2 := @parameter0: java.lang.Throwable;

        r3 := @parameter1: org.apache.cxf.message.Message;

        $r1 = new org.apache.cxf.interceptor.Fault;

        specialinvoke $r1.<org.apache.cxf.interceptor.Fault: void <init>(java.lang.Throwable)>(r2);

        $r4 = specialinvoke r0.<org.apache.cxf.jaxrs.JAXRSInvoker: java.lang.Object handleFault(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo,java.lang.reflect.Method)>($r1, r3, null, null);

        return $r4;
    }

    private java.lang.Object handleFault(org.apache.cxf.interceptor.Fault, org.apache.cxf.message.Message, org.apache.cxf.jaxrs.model.ClassResourceInfo, java.lang.reflect.Method)
    {
        java.lang.Throwable $r22;
        java.lang.Object[] $r4, $r14;
        org.apache.cxf.message.MessageContentsList $r3;
        org.apache.cxf.jaxrs.provider.ProviderFactory $r5;
        org.apache.cxf.common.i18n.Message $r13;
        org.apache.cxf.interceptor.Fault r0;
        java.util.ResourceBundle $r16;
        java.lang.Boolean $r11;
        java.lang.String $r1, $r10, $r18, $r20;
        java.lang.reflect.Method r15;
        boolean $z0, $z1;
        org.apache.cxf.message.Message r2;
        java.util.logging.Logger $r19;
        org.apache.cxf.message.Exchange $r6, $r9;
        org.apache.cxf.jaxrs.JAXRSInvoker r21;
        javax.ws.rs.core.Response $r23;
        org.apache.cxf.jaxrs.model.ClassResourceInfo r8, r12;
        java.lang.Object $r7;
        java.lang.Class $r17;

        r21 := @this: org.apache.cxf.jaxrs.JAXRSInvoker;

        r0 := @parameter0: org.apache.cxf.interceptor.Fault;

        r2 := @parameter1: org.apache.cxf.message.Message;

        r12 := @parameter2: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        r15 := @parameter3: java.lang.reflect.Method;

        $r1 = virtualinvoke r0.<org.apache.cxf.interceptor.Fault: java.lang.String getMessage()>();

        if $r1 == null goto label1;

        if r12 == null goto label1;

        $z1 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("object is not an instance of declaring class");

        if $z1 == 0 goto label1;

        $r13 = new org.apache.cxf.common.i18n.Message;

        $r16 = <org.apache.cxf.jaxrs.JAXRSInvoker: java.util.ResourceBundle BUNDLE>;

        $r14 = newarray (java.lang.Object)[2];

        $r14[0] = r15;

        $r17 = virtualinvoke r12.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.Class getServiceClass()>();

        $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>();

        $r14[1] = $r18;

        specialinvoke $r13.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("PROXY_INVOCATION_FAILURE", $r16, $r14);

        $r19 = <org.apache.cxf.jaxrs.JAXRSInvoker: java.util.logging.Logger LOG>;

        $r20 = virtualinvoke $r13.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        virtualinvoke $r19.<java.util.logging.Logger: void severe(java.lang.String)>($r20);

     label1:
        $r22 = virtualinvoke r0.<org.apache.cxf.interceptor.Fault: java.lang.Throwable getCause()>();

        $r23 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.Response convertFaultToResponse(java.lang.Throwable,org.apache.cxf.message.Message)>($r22, r2);

        if $r23 != null goto label3;

        $r5 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.message.Message)>(r2);

        virtualinvoke $r5.<org.apache.cxf.jaxrs.provider.ProviderFactory: void clearThreadLocalProxies()>();

        $r6 = interfaceinvoke r2.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r7 = interfaceinvoke $r6.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Object)>("root.resource.class");

        r8 = (org.apache.cxf.jaxrs.model.ClassResourceInfo) $r7;

        if r8 == null goto label2;

        virtualinvoke r8.<org.apache.cxf.jaxrs.model.ClassResourceInfo: void clearThreadLocalProxies()>();

     label2:
        $r9 = interfaceinvoke r2.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r10 = <org.apache.cxf.message.Message: java.lang.String PROPOGATE_EXCEPTION>;

        $z0 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: boolean propogateException(org.apache.cxf.message.Message)>(r2);

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        interfaceinvoke $r9.<org.apache.cxf.message.Exchange: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11);

        throw r0;

     label3:
        $r3 = new org.apache.cxf.message.MessageContentsList;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r23;

        specialinvoke $r3.<org.apache.cxf.message.MessageContentsList: void <init>(java.lang.Object[])>($r4);

        return $r3;
    }

    protected javax.ws.rs.core.MultivaluedMap getTemplateValues(org.apache.cxf.message.Message)
    {
        javax.ws.rs.core.MultivaluedMap r3;
        org.apache.cxf.jaxrs.JAXRSInvoker r4;
        org.apache.cxf.message.Message r1;
        org.apache.cxf.jaxrs.impl.MetadataMap $r0;
        java.lang.Object $r2;

        r4 := @this: org.apache.cxf.jaxrs.JAXRSInvoker;

        r1 := @parameter0: org.apache.cxf.message.Message;

        $r0 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        specialinvoke $r0.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>()>();

        $r2 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("jaxrs.template.parameters");

        r3 = (javax.ws.rs.core.MultivaluedMap) $r2;

        if r3 == null goto label1;

        interfaceinvoke $r0.<javax.ws.rs.core.MultivaluedMap: void putAll(java.util.Map)>(r3);

     label1:
        return $r0;
    }

    private boolean setServiceLoaderAsContextLoader(org.apache.cxf.message.Message)
    {
        org.apache.cxf.message.Message r0;
        org.apache.cxf.jaxrs.JAXRSInvoker r4;
        java.lang.Boolean $r2;
        java.lang.Object $r1;
        java.lang.String $r3;
        boolean $z0, $z1, $z2;

        r4 := @this: org.apache.cxf.jaxrs.JAXRSInvoker;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>("org.apache.cxf.serviceloader-context");

        $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r3 = "true";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    private boolean isServiceObjectRequestScope(org.apache.cxf.message.Message)
    {
        org.apache.cxf.jaxrs.JAXRSInvoker r3;
        org.apache.cxf.message.Message r0;
        java.lang.Object $r1;
        java.lang.String $r2;
        boolean $z0;

        r3 := @this: org.apache.cxf.jaxrs.JAXRSInvoker;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>("org.apache.cxf.service.scope");

        $r2 = "request";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    private org.apache.cxf.jaxrs.lifecycle.ResourceProvider getResourceProvider(org.apache.cxf.message.Exchange)
    {
        org.apache.cxf.jaxrs.lifecycle.ResourceProvider $r2, $r6;
        org.apache.cxf.jaxrs.model.OperationResourceInfo r4;
        org.apache.cxf.message.Exchange r0;
        org.apache.cxf.jaxrs.JAXRSInvoker r7;
        org.apache.cxf.jaxrs.model.ClassResourceInfo $r5;
        java.lang.Object $r1, $r3;

        r7 := @this: org.apache.cxf.jaxrs.JAXRSInvoker;

        r0 := @parameter0: org.apache.cxf.message.Exchange;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: java.lang.Object remove(java.lang.Object)>("service.root.provider");

        if $r1 != null goto label1;

        $r3 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/model/OperationResourceInfo;");

        r4 = (org.apache.cxf.jaxrs.model.OperationResourceInfo) $r3;

        $r5 = virtualinvoke r4.<org.apache.cxf.jaxrs.model.OperationResourceInfo: org.apache.cxf.jaxrs.model.ClassResourceInfo getClassResourceInfo()>();

        $r6 = virtualinvoke $r5.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.lifecycle.ResourceProvider getResourceProvider()>();

        return $r6;

     label1:
        $r2 = (org.apache.cxf.jaxrs.lifecycle.ResourceProvider) $r1;

        return $r2;
    }

    public java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)
    {
        org.apache.cxf.jaxrs.lifecycle.ResourceProvider $r5;
        org.apache.cxf.message.Message $r6;
        org.apache.cxf.jaxrs.model.OperationResourceInfo r3;
        org.apache.cxf.message.Exchange r0;
        org.apache.cxf.jaxrs.JAXRSInvoker r8;
        org.apache.cxf.jaxrs.model.ClassResourceInfo $r4;
        java.lang.Object $r1, $r2, $r7;

        r8 := @this: org.apache.cxf.jaxrs.JAXRSInvoker;

        r0 := @parameter0: org.apache.cxf.message.Exchange;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: java.lang.Object remove(java.lang.Object)>("service.root.instance");

        if $r1 == null goto label1;

        return $r1;

     label1:
        $r2 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/model/OperationResourceInfo;");

        r3 = (org.apache.cxf.jaxrs.model.OperationResourceInfo) $r2;

        $r4 = virtualinvoke r3.<org.apache.cxf.jaxrs.model.OperationResourceInfo: org.apache.cxf.jaxrs.model.ClassResourceInfo getClassResourceInfo()>();

        $r5 = virtualinvoke $r4.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.lifecycle.ResourceProvider getResourceProvider()>();

        $r6 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        $r7 = interfaceinvoke $r5.<org.apache.cxf.jaxrs.lifecycle.ResourceProvider: java.lang.Object getInstance(org.apache.cxf.message.Message)>($r6);

        return $r7;
    }

    protected java.lang.Object getActualServiceObject(org.apache.cxf.message.Exchange, java.lang.Object)
    {
        org.apache.cxf.jaxrs.JAXRSInvoker r3;
        java.lang.Object $r1, r2, $r4;
        org.apache.cxf.message.Exchange r0;

        r3 := @this: org.apache.cxf.jaxrs.JAXRSInvoker;

        r0 := @parameter0: org.apache.cxf.message.Exchange;

        r2 := @parameter1: java.lang.Object;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Object)>("org.apache.cxf.service.object.last");

        if $r1 == null goto label1;

        $r4 = $r1;

        goto label2;

     label1:
        $r4 = r2;

     label2:
        return $r4;
    }

    private static java.lang.Object checkResultObject(java.lang.Object, java.lang.String)
    {
        java.lang.Object[] $r1, $r8, $r9;
        org.apache.cxf.message.MessageContentsList $r11;
        org.apache.cxf.common.i18n.Message $r0;
        java.util.ResourceBundle $r3;
        java.lang.String r2, $r5;
        boolean $z0, $z1, $z2;
        java.util.logging.Logger $r4;
        javax.ws.rs.NotFoundException $r6;
        java.util.List $r10;
        java.lang.Class $r7;
        java.lang.Object r12;

        r12 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        if r12 == null goto label3;

        $z0 = r12 instanceof org.apache.cxf.message.MessageContentsList;

        if $z0 == 0 goto label1;

        $r11 = (org.apache.cxf.message.MessageContentsList) r12;

        r12 = virtualinvoke $r11.<org.apache.cxf.message.MessageContentsList: java.lang.Object get(int)>(0);

        goto label3;

     label1:
        $z1 = r12 instanceof java.util.List;

        if $z1 == 0 goto label2;

        $r10 = (java.util.List) r12;

        r12 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(0);

        goto label3;

     label2:
        $r7 = virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>();

        $z2 = virtualinvoke $r7.<java.lang.Class: boolean isArray()>();

        if $z2 == 0 goto label3;

        $r8 = (java.lang.Object[]) r12;

        $r9 = (java.lang.Object[]) $r8;

        r12 = $r9[0];

     label3:
        if r12 != null goto label4;

        $r0 = new org.apache.cxf.common.i18n.Message;

        $r3 = <org.apache.cxf.jaxrs.JAXRSInvoker: java.util.ResourceBundle BUNDLE>;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = r2;

        specialinvoke $r0.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("NULL_SUBRESOURCE", $r3, $r1);

        $r4 = <org.apache.cxf.jaxrs.JAXRSInvoker: java.util.logging.Logger LOG>;

        $r5 = virtualinvoke $r0.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        virtualinvoke $r4.<java.util.logging.Logger: void info(java.lang.String)>($r5);

        $r6 = new javax.ws.rs.NotFoundException;

        specialinvoke $r6.<javax.ws.rs.NotFoundException: void <init>()>();

        throw $r6;

     label4:
        return r12;
    }

    private void pushOntoStack(org.apache.cxf.jaxrs.model.OperationResourceInfo, java.lang.Class, org.apache.cxf.message.Message)
    {
        org.apache.cxf.jaxrs.model.OperationResourceInfo r4;
        org.apache.cxf.jaxrs.model.Parameter r10;
        java.util.ArrayList $r6;
        org.apache.cxf.jaxrs.model.ParameterType $r11, $r12;
        org.apache.cxf.jaxrs.model.OperationResourceInfoStack $r16, r19;
        int $i0, $i1, $i2;
        java.lang.String $r13;
        boolean $z0;
        java.util.Iterator $r8;
        org.apache.cxf.message.Message r0;
        javax.ws.rs.core.MultivaluedMap $r17;
        org.apache.cxf.jaxrs.JAXRSInvoker r18;
        java.util.List $r7, r15, r20;
        java.lang.Object $r1, $r2, $r9, $r14;
        java.lang.Class r5;
        org.apache.cxf.jaxrs.model.MethodInvocationInfo $r3;

        r18 := @this: org.apache.cxf.jaxrs.JAXRSInvoker;

        r4 := @parameter0: org.apache.cxf.jaxrs.model.OperationResourceInfo;

        r5 := @parameter1: java.lang.Class;

        r0 := @parameter2: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/model/OperationResourceInfoStack;");

        r19 = (org.apache.cxf.jaxrs.model.OperationResourceInfoStack) $r1;

        if r19 != null goto label1;

        $r16 = new org.apache.cxf.jaxrs.model.OperationResourceInfoStack;

        specialinvoke $r16.<org.apache.cxf.jaxrs.model.OperationResourceInfoStack: void <init>()>();

        r19 = $r16;

        interfaceinvoke r0.<org.apache.cxf.message.Message: void put(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/jaxrs/model/OperationResourceInfoStack;", $r16);

     label1:
        $r2 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("jaxrs.template.parameters");

        $r17 = (javax.ws.rs.core.MultivaluedMap) $r2;

        if $r17 == null goto label2;

        $i0 = interfaceinvoke $r17.<javax.ws.rs.core.MultivaluedMap: int size()>();

        if $i0 != 1 goto label3;

     label2:
        r20 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        goto label6;

     label3:
        $r6 = new java.util.ArrayList;

        $i1 = interfaceinvoke $r17.<javax.ws.rs.core.MultivaluedMap: int size()>();

        $i2 = $i1 - 1;

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i2);

        r20 = $r6;

        $r7 = virtualinvoke r4.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.util.List getParameters()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.apache.cxf.jaxrs.model.Parameter) $r9;

        $r11 = virtualinvoke r10.<org.apache.cxf.jaxrs.model.Parameter: org.apache.cxf.jaxrs.model.ParameterType getType()>();

        $r12 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType PATH>;

        if $r11 != $r12 goto label5;

        $r13 = virtualinvoke r10.<org.apache.cxf.jaxrs.model.Parameter: java.lang.String getName()>();

        $r14 = interfaceinvoke $r17.<javax.ws.rs.core.MultivaluedMap: java.lang.Object get(java.lang.Object)>($r13);

        r15 = (java.util.List) $r14;

        if r15 == null goto label5;

        interfaceinvoke $r6.<java.util.List: boolean addAll(java.util.Collection)>(r15);

     label5:
        goto label4;

     label6:
        $r3 = new org.apache.cxf.jaxrs.model.MethodInvocationInfo;

        specialinvoke $r3.<org.apache.cxf.jaxrs.model.MethodInvocationInfo: void <init>(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Class,java.util.List)>(r4, r5, r20);

        virtualinvoke r19.<org.apache.cxf.jaxrs.model.OperationResourceInfoStack: java.lang.Object push(java.lang.Object)>($r3);

        return;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;
        java.util.ResourceBundle $r1;

        <org.apache.cxf.jaxrs.JAXRSInvoker: java.lang.String PROXY_INVOCATION_ERROR_FRAGMENT> = "object is not an instance of declaring class";

        <org.apache.cxf.jaxrs.JAXRSInvoker: java.lang.String REQUEST_WAS_SUSPENDED> = "org.apache.cxf.service.request.suspended";

        <org.apache.cxf.jaxrs.JAXRSInvoker: java.lang.String LAST_SERVICE_OBJECT> = "org.apache.cxf.service.object.last";

        <org.apache.cxf.jaxrs.JAXRSInvoker: java.lang.String REQUEST_SCOPE> = "request";

        <org.apache.cxf.jaxrs.JAXRSInvoker: java.lang.String SERVICE_OBJECT_SCOPE> = "org.apache.cxf.service.scope";

        <org.apache.cxf.jaxrs.JAXRSInvoker: java.lang.String SERVICE_LOADER_AS_CONTEXT> = "org.apache.cxf.serviceloader-context";

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/JAXRSInvoker;");

        <org.apache.cxf.jaxrs.JAXRSInvoker: java.util.logging.Logger LOG> = $r0;

        $r1 = staticinvoke <org.apache.cxf.common.i18n.BundleUtils: java.util.ResourceBundle getBundle(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/JAXRSInvoker;");

        <org.apache.cxf.jaxrs.JAXRSInvoker: java.util.ResourceBundle BUNDLE> = $r1;

        return;
    }
}
