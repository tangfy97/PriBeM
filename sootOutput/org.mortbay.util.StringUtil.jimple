public class org.mortbay.util.StringUtil extends java.lang.Object
{
    public static final java.lang.String CRLF;
    public static final java.lang.String __LINE_SEPARATOR;
    public static final java.lang.String __ISO_8859_1;
    public static final java.lang.String __UTF8;
    public static final java.lang.String __UTF8Alt;
    public static final java.lang.String __UTF16;
    private static char[] lowercases;

    public void <init>()
    {
        org.mortbay.util.StringUtil r0;

        r0 := @this: org.mortbay.util.StringUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String asciiToLowerCase(java.lang.String)
    {
        int $i0, i6, $i7, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17;
        java.lang.String r0, $r5, $r6;
        char $c1, $c2, $c3, $c4, c5;
        char[] $r1, $r2, $r3, r4;

        r0 := @parameter0: java.lang.String;

        r4 = null;

        i6 = virtualinvoke r0.<java.lang.String: int length()>();

     label1:
        $i0 = i6;

        $i9 = (int) -1;

        i6 = i6 + $i9;

        if $i0 <= 0 goto label3;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

        $i10 = (int) $c4;

        if $i10 > 127 goto label2;

        $r2 = <org.mortbay.util.StringUtil: char[] lowercases>;

        $i11 = (int) $c4;

        c5 = $r2[$i11];

        $i12 = (int) $c4;

        $i13 = (int) c5;

        if $i12 == $i13 goto label2;

        $r3 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        r4 = $r3;

        $r3[i6] = c5;

        goto label3;

     label2:
        goto label1;

     label3:
        $i7 = i6;

        $i15 = (int) -1;

        i6 = i6 + $i15;

        if $i7 <= 0 goto label4;

        $c1 = r4[i6];

        $i16 = (int) $c1;

        if $i16 > 127 goto label3;

        $r1 = <org.mortbay.util.StringUtil: char[] lowercases>;

        $c2 = r4[i6];

        $i17 = (int) $c2;

        $c3 = $r1[$i17];

        r4[i6] = $c3;

        goto label3;

     label4:
        if r4 != null goto label5;

        $r5 = r0;

        goto label6;

     label5:
        $r6 = new java.lang.String;

        $r5 = $r6;

        specialinvoke $r6.<java.lang.String: void <init>(char[])>(r4);

     label6:
        return $r5;
    }

    public static boolean startsWithIgnoreCase(java.lang.String, java.lang.String)
    {
        int $i0, $i1, $i2, i5, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.lang.String r0, r1;
        char $c3, $c4, c6, c7;
        char[] $r2, $r3;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label3;

     label2:
        return 0;

     label3:
        i5 = 0;

     label4:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if i5 >= $i2 goto label8;

        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i5);

        c6 = $c3;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i5);

        c7 = $c4;

        $i8 = (int) $c3;

        $i9 = (int) $c4;

        if $i8 == $i9 goto label7;

        $i10 = (int) $c3;

        if $i10 > 127 goto label5;

        $r3 = <org.mortbay.util.StringUtil: char[] lowercases>;

        $i11 = (int) $c3;

        c6 = $r3[$i11];

     label5:
        $i12 = (int) $c4;

        if $i12 > 127 goto label6;

        $r2 = <org.mortbay.util.StringUtil: char[] lowercases>;

        $i13 = (int) $c4;

        c7 = $r2[$i13];

     label6:
        $i14 = (int) c6;

        $i15 = (int) c7;

        if $i14 == $i15 goto label7;

        return 0;

     label7:
        i5 = i5 + 1;

        goto label4;

     label8:
        return 1;
    }

    public static boolean endsWithIgnoreCase(java.lang.String, java.lang.String)
    {
        int $i0, $i1, $i2, i5, i6, $i10, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        java.lang.String r0, r1;
        char $c3, $c4, c7, c8;
        char[] $r2, $r3;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        i5 = $i0;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label3;

        return 0;

     label3:
        i6 = $i1;

     label4:
        $i2 = i6;

        $i10 = (int) -1;

        i6 = i6 + $i10;

        if $i2 <= 0 goto label8;

        $i12 = (int) -1;

        i5 = i5 + $i12;

        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i5);

        c7 = $c3;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

        c8 = $c4;

        $i13 = (int) $c3;

        $i14 = (int) $c4;

        if $i13 == $i14 goto label7;

        $i15 = (int) $c3;

        if $i15 > 127 goto label5;

        $r3 = <org.mortbay.util.StringUtil: char[] lowercases>;

        $i16 = (int) $c3;

        c7 = $r3[$i16];

     label5:
        $i17 = (int) $c4;

        if $i17 > 127 goto label6;

        $r2 = <org.mortbay.util.StringUtil: char[] lowercases>;

        $i18 = (int) $c4;

        c8 = $r2[$i18];

     label6:
        $i19 = (int) c7;

        $i20 = (int) c8;

        if $i19 == $i20 goto label7;

        return 0;

     label7:
        goto label4;

     label8:
        return 1;
    }

    public static int indexFrom(java.lang.String, java.lang.String)
    {
        char $c1;
        int $i0, $i2, i3, $i4, $i6;
        java.lang.String r0, r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i3 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i3 >= $i0 goto label3;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $i4 = (int) $c1;

        $i2 = virtualinvoke r1.<java.lang.String: int indexOf(int)>($i4);

        if $i2 < 0 goto label2;

        return i3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $i6 = (int) -1;

        return $i6;
    }

    public static java.lang.String replace(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r7;
        java.lang.StringBuffer $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, $i12, $i14;
        java.lang.String r0, r1, r3, $r4, $r5, $r6;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i9 = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>(r1, 0);

        i10 = $i0;

        $i12 = (int) -1;

        if $i0 != $i12 goto label1;

        return r0;

     label1:
        $r8 = new java.lang.StringBuffer;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = virtualinvoke r3.<java.lang.String: int length()>();

        $i3 = $i1 + $i2;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>(int)>($i3);

        entermonitor $r8;

     label2:
        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i9, i10);

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $i4 = virtualinvoke r1.<java.lang.String: int length()>();

        $i6 = i10 + $i4;

        i9 = $i6;

        $i5 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>(r1, $i6);

        i10 = $i5;

        $i14 = (int) -1;

        if $i5 != $i14 goto label2;

        $i7 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i6 >= $i7 goto label3;

        $i8 = virtualinvoke r0.<java.lang.String: int length()>();

        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i6, $i8);

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

     label3:
        $r5 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        exitmonitor $r8;

     label4:
        return $r5;

     label5:
        $r7 := @caughtexception;

        exitmonitor $r8;

     label6:
        throw $r7;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static java.lang.String unquote(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.mortbay.util.QuotedStringTokenizer: java.lang.String unquote(java.lang.String)>(r0);

        return $r1;
    }

    public static void append(java.lang.StringBuffer, java.lang.String, int, int)
    {
        java.lang.Throwable $r2;
        char $c4;
        java.lang.StringBuffer r0;
        int i0, i1, i2, $i3, i5;
        java.lang.String r1;

        r0 := @parameter0: java.lang.StringBuffer;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        entermonitor r0;

     label1:
        i2 = i0 + i1;

        i5 = i0;

     label2:
        if i5 >= i2 goto label4;

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        if i5 < $i3 goto label3;

        goto label4;

     label3:
        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i5);

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c4);

        i5 = i5 + 1;

        goto label2;

     label4:
        exitmonitor r0;

     label5:
        goto label8;

     label6:
        $r2 := @caughtexception;

        exitmonitor r0;

     label7:
        throw $r2;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public static void append(java.lang.StringBuffer, byte, int)
    {
        short s1, $s15;
        byte b0;
        java.lang.StringBuffer r0;
        int i2, $i3, $i4, $i6, $i8, $i9, $i10, $i11, $i12, i13, i14, $i16, $i17;
        char $c5, $c7;

        r0 := @parameter0: java.lang.StringBuffer;

        b0 := @parameter1: byte;

        i2 := @parameter2: int;

        $s15 = (short) b0;

        s1 = 255 & $s15;

        $i16 = (int) s1;

        $i3 = $i16 / i2;

        $i4 = $i3 % i2;

        i13 = 48 + $i4;

        if i13 <= 57 goto label1;

        $i10 = i13 - 48;

        $i11 = $i10 - 10;

        i13 = 97 + $i11;

     label1:
        $c5 = (char) i13;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c5);

        $i17 = (int) s1;

        $i6 = $i17 % i2;

        $i12 = 48 + $i6;

        i14 = $i12;

        if $i12 <= 57 goto label2;

        $i8 = $i12 - 48;

        $i9 = $i8 - 10;

        i14 = 97 + $i9;

     label2:
        $c7 = (char) i14;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c7);

        return;
    }

    public static void append2digits(java.lang.StringBuffer, int)
    {
        char $c3, $c6;
        java.lang.StringBuffer r0;
        int i0, $i1, $i2, $i4, $i5;

        r0 := @parameter0: java.lang.StringBuffer;

        i0 := @parameter1: int;

        if i0 >= 100 goto label1;

        $i1 = i0 / 10;

        $i2 = $i1 + 48;

        $c3 = (char) $i2;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        $i4 = i0 % 10;

        $i5 = $i4 + 48;

        $c6 = (char) $i5;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c6);

     label1:
        return;
    }

    public static java.lang.String nonNull(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return "";

     label1:
        return r0;
    }

    public static boolean equals(java.lang.String, char[], int, int)
    {
        char $c4, $c5;
        int $i0, i1, i2, $i3, i6, $i7, $i8;
        char[] r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: char[];

        i2 := @parameter2: int;

        i1 := @parameter3: int;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 == i1 goto label1;

        return 0;

     label1:
        i6 = 0;

     label2:
        if i6 >= i1 goto label4;

        $i3 = i2 + i6;

        $c4 = r1[$i3];

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

        $i7 = (int) $c4;

        $i8 = (int) $c5;

        if $i7 == $i8 goto label3;

        return 0;

     label3:
        i6 = i6 + 1;

        goto label2;

     label4:
        return 1;
    }

    public static java.lang.String toUTF8String(byte[], int, int)
    {
        byte[] r1;
        int i0, i1;
        java.lang.String $r0, $r3;
        java.io.UnsupportedEncodingException $r4;
        org.mortbay.util.Utf8StringBuffer $r2;

        r1 := @parameter0: byte[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

     label1:
        if i0 >= 32 goto label3;

        $r2 = new org.mortbay.util.Utf8StringBuffer;

        specialinvoke $r2.<org.mortbay.util.Utf8StringBuffer: void <init>(int)>(i0);

        virtualinvoke $r2.<org.mortbay.util.Utf8StringBuffer: void append(byte[],int,int)>(r1, i1, i0);

        $r3 = virtualinvoke $r2.<org.mortbay.util.Utf8StringBuffer: java.lang.String toString()>();

     label2:
        return $r3;

     label3:
        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r1, i1, i0, "UTF-8");

     label4:
        return $r0;

     label5:
        $r4 := @caughtexception;

        virtualinvoke $r4.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        return null;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label5;
        catch java.io.UnsupportedEncodingException from label3 to label4 with label5;
    }

    public static java.lang.String toString(byte[], int, int, java.lang.String)
    {
        byte[] r1;
        int i0, i1;
        java.lang.String r0, $r2, $r3;
        java.io.UnsupportedEncodingException $r4;
        boolean $z0;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0 := @parameter3: java.lang.String;

        if r0 == null goto label1;

        $z0 = staticinvoke <org.mortbay.util.StringUtil: boolean isUTF8(java.lang.String)>(r0);

        if $z0 == 0 goto label2;

     label1:
        $r2 = staticinvoke <org.mortbay.util.StringUtil: java.lang.String toUTF8String(byte[],int,int)>(r1, i0, i1);

        return $r2;

     label2:
        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r1, i0, i1, r0);

     label3:
        return $r3;

     label4:
        $r4 := @caughtexception;

        virtualinvoke $r4.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        return null;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
    }

    public static boolean isUTF8(java.lang.String)
    {
        java.lang.String r0, $r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.String;

        if r0 == "UTF-8" goto label1;

        $r1 = "UTF-8";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z0 != 0 goto label1;

        $r2 = "UTF8";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public static java.lang.String printable(java.lang.String)
    {
        char $c2;
        java.lang.StringBuffer $r1;
        int $i0, $i1, i3;
        java.lang.String r0, $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new java.lang.StringBuffer;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>($i0);

        i3 = 0;

     label2:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i3 >= $i1 goto label4;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $z0 = staticinvoke <java.lang.Character: boolean isISOControl(char)>($c2);

        if $z0 != 0 goto label3;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    static void <clinit>()
    {
        byte[] $r3;
        char[] $r6;
        java.lang.String $r0, $r1, $r2, r5;
        java.io.UnsupportedEncodingException $r4;

        <org.mortbay.util.StringUtil: java.lang.String __UTF16> = "UTF-16";

        <org.mortbay.util.StringUtil: java.lang.String __UTF8Alt> = "UTF8";

        <org.mortbay.util.StringUtil: java.lang.String __UTF8> = "UTF-8";

        <org.mortbay.util.StringUtil: java.lang.String CRLF> = "\r\n";

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("line.separator", "\n");

        <org.mortbay.util.StringUtil: java.lang.String __LINE_SEPARATOR> = $r0;

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("ISO_8859_1");

        r5 = $r1;

        if $r1 != null goto label4;

     label1:
        $r2 = new java.lang.String;

        $r3 = newarray (byte)[1];

        $r3[0] = 20;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.lang.String)>($r3, "ISO-8859-1");

        r5 = "ISO-8859-1";

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r5 = "ISO8859_1";

     label4:
        <org.mortbay.util.StringUtil: java.lang.String __ISO_8859_1> = r5;

        $r6 = newarray (char)[128];

        $r6[0] = 0;

        $r6[1] = 1;

        $r6[2] = 2;

        $r6[3] = 3;

        $r6[4] = 4;

        $r6[5] = 5;

        $r6[6] = 6;

        $r6[7] = 7;

        $r6[8] = 8;

        $r6[9] = 9;

        $r6[10] = 10;

        $r6[11] = 11;

        $r6[12] = 12;

        $r6[13] = 13;

        $r6[14] = 14;

        $r6[15] = 15;

        $r6[16] = 16;

        $r6[17] = 17;

        $r6[18] = 18;

        $r6[19] = 19;

        $r6[20] = 20;

        $r6[21] = 21;

        $r6[22] = 22;

        $r6[23] = 23;

        $r6[24] = 24;

        $r6[25] = 25;

        $r6[26] = 26;

        $r6[27] = 27;

        $r6[28] = 28;

        $r6[29] = 29;

        $r6[30] = 30;

        $r6[31] = 31;

        $r6[32] = 32;

        $r6[33] = 33;

        $r6[34] = 34;

        $r6[35] = 35;

        $r6[36] = 36;

        $r6[37] = 37;

        $r6[38] = 38;

        $r6[39] = 39;

        $r6[40] = 40;

        $r6[41] = 41;

        $r6[42] = 42;

        $r6[43] = 43;

        $r6[44] = 44;

        $r6[45] = 45;

        $r6[46] = 46;

        $r6[47] = 47;

        $r6[48] = 48;

        $r6[49] = 49;

        $r6[50] = 50;

        $r6[51] = 51;

        $r6[52] = 52;

        $r6[53] = 53;

        $r6[54] = 54;

        $r6[55] = 55;

        $r6[56] = 56;

        $r6[57] = 57;

        $r6[58] = 58;

        $r6[59] = 59;

        $r6[60] = 60;

        $r6[61] = 61;

        $r6[62] = 62;

        $r6[63] = 63;

        $r6[64] = 64;

        $r6[65] = 97;

        $r6[66] = 98;

        $r6[67] = 99;

        $r6[68] = 100;

        $r6[69] = 101;

        $r6[70] = 102;

        $r6[71] = 103;

        $r6[72] = 104;

        $r6[73] = 105;

        $r6[74] = 106;

        $r6[75] = 107;

        $r6[76] = 108;

        $r6[77] = 109;

        $r6[78] = 110;

        $r6[79] = 111;

        $r6[80] = 112;

        $r6[81] = 113;

        $r6[82] = 114;

        $r6[83] = 115;

        $r6[84] = 116;

        $r6[85] = 117;

        $r6[86] = 118;

        $r6[87] = 119;

        $r6[88] = 120;

        $r6[89] = 121;

        $r6[90] = 122;

        $r6[91] = 91;

        $r6[92] = 92;

        $r6[93] = 93;

        $r6[94] = 94;

        $r6[95] = 95;

        $r6[96] = 96;

        $r6[97] = 97;

        $r6[98] = 98;

        $r6[99] = 99;

        $r6[100] = 100;

        $r6[101] = 101;

        $r6[102] = 102;

        $r6[103] = 103;

        $r6[104] = 104;

        $r6[105] = 105;

        $r6[106] = 106;

        $r6[107] = 107;

        $r6[108] = 108;

        $r6[109] = 109;

        $r6[110] = 110;

        $r6[111] = 111;

        $r6[112] = 112;

        $r6[113] = 113;

        $r6[114] = 114;

        $r6[115] = 115;

        $r6[116] = 116;

        $r6[117] = 117;

        $r6[118] = 118;

        $r6[119] = 119;

        $r6[120] = 120;

        $r6[121] = 121;

        $r6[122] = 122;

        $r6[123] = 123;

        $r6[124] = 124;

        $r6[125] = 125;

        $r6[126] = 126;

        $r6[127] = 127;

        <org.mortbay.util.StringUtil: char[] lowercases> = $r6;

        return;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }
}
