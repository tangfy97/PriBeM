public class org.bouncycastle.crypto.engines.NullEngine extends java.lang.Object implements org.bouncycastle.crypto.BlockCipher
{
    private boolean initialised;
    protected static final int BLOCK_SIZE;

    public void <init>()
    {
        org.bouncycastle.crypto.engines.NullEngine r0;

        r0 := @this: org.bouncycastle.crypto.engines.NullEngine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException
    {
        org.bouncycastle.crypto.engines.NullEngine r0;
        boolean z0;
        org.bouncycastle.crypto.CipherParameters r1;

        r0 := @this: org.bouncycastle.crypto.engines.NullEngine;

        z0 := @parameter0: boolean;

        r1 := @parameter1: org.bouncycastle.crypto.CipherParameters;

        r0.<org.bouncycastle.crypto.engines.NullEngine: boolean initialised> = 1;

        return;
    }

    public java.lang.String getAlgorithmName()
    {
        org.bouncycastle.crypto.engines.NullEngine r0;

        r0 := @this: org.bouncycastle.crypto.engines.NullEngine;

        return "Null";
    }

    public int getBlockSize()
    {
        org.bouncycastle.crypto.engines.NullEngine r0;

        r0 := @this: org.bouncycastle.crypto.engines.NullEngine;

        return 1;
    }

    public int processBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        byte[] r1, r2;
        java.lang.IllegalStateException $r5;
        org.bouncycastle.crypto.DataLengthException $r3, $r4;
        byte $b7;
        int i0, $i1, $i2, i3, $i4, $i5, $i6, $i8, i9;
        boolean $z0;
        org.bouncycastle.crypto.engines.NullEngine r0;

        r0 := @this: org.bouncycastle.crypto.engines.NullEngine;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r2 := @parameter2: byte[];

        i3 := @parameter3: int;

        $z0 = r0.<org.bouncycastle.crypto.engines.NullEngine: boolean initialised>;

        if $z0 != 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Null engine not initialised");

        throw $r5;

     label1:
        $i2 = i0 + 1;

        $i1 = lengthof r1;

        if $i2 <= $i1 goto label2;

        $r4 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r4.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("input buffer too short");

        throw $r4;

     label2:
        $i5 = i3 + 1;

        $i4 = lengthof r2;

        if $i5 <= $i4 goto label3;

        $r3 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r3.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("output buffer too short");

        throw $r3;

     label3:
        i9 = 0;

     label4:
        if i9 >= 1 goto label5;

        $i8 = i3 + i9;

        $i6 = i0 + i9;

        $b7 = r1[$i6];

        r2[$i8] = $b7;

        i9 = i9 + 1;

        goto label4;

     label5:
        return 1;
    }

    public void reset()
    {
        org.bouncycastle.crypto.engines.NullEngine r0;

        r0 := @this: org.bouncycastle.crypto.engines.NullEngine;

        return;
    }

    public static void <clinit>()
    {
        <org.bouncycastle.crypto.engines.NullEngine: int BLOCK_SIZE> = 1;

        return;
    }
}
