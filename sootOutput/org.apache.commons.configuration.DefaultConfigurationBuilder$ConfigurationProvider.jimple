public class org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider extends org.apache.commons.configuration.beanutils.DefaultBeanFactory
{
    private java.lang.Class configurationClass;
    private java.lang.String configurationClassName;

    public void <init>()
    {
        org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider r0;

        r0 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider;

        specialinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider: void <init>(java.lang.Class)>(null);

        return;
    }

    public void <init>(java.lang.Class)
    {
        org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider r0;
        java.lang.Class r1;

        r0 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.apache.commons.configuration.beanutils.DefaultBeanFactory: void <init>()>();

        virtualinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider: void setConfigurationClass(java.lang.Class)>(r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.configuration.beanutils.DefaultBeanFactory: void <init>()>();

        virtualinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider: void setConfigurationClassName(java.lang.String)>(r1);

        return;
    }

    public java.lang.Class getConfigurationClass()
    {
        org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider r0;
        java.lang.Class $r1;

        r0 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider;

        $r1 = r0.<org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider: java.lang.Class configurationClass>;

        return $r1;
    }

    public void setConfigurationClass(java.lang.Class)
    {
        org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider r0;
        java.lang.Class r1;

        r0 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider;

        r1 := @parameter0: java.lang.Class;

        r0.<org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider: java.lang.Class configurationClass> = r1;

        return;
    }

    public java.lang.String getConfigurationClassName()
    {
        org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider;

        $r1 = r0.<org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider: java.lang.String configurationClassName>;

        return $r1;
    }

    public void setConfigurationClassName(java.lang.String)
    {
        org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider: java.lang.String configurationClassName> = r1;

        return;
    }

    public org.apache.commons.configuration.AbstractConfiguration getConfiguration(org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationDeclaration) throws java.lang.Exception
    {
        org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationDeclaration r2;
        org.apache.commons.configuration.AbstractConfiguration $r4;
        org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider r0;
        java.lang.Class $r1;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider;

        r2 := @parameter0: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationDeclaration;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider: java.lang.Class fetchConfigurationClass()>();

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider: java.lang.Object createBean(java.lang.Class,org.apache.commons.configuration.beanutils.BeanDeclaration,java.lang.Object)>($r1, r2, null);

        $r4 = (org.apache.commons.configuration.AbstractConfiguration) $r3;

        return $r4;
    }

    public org.apache.commons.configuration.AbstractConfiguration getEmptyConfiguration(org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationDeclaration) throws java.lang.Exception
    {
        org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationDeclaration r1;
        org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider r0;

        r0 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider;

        r1 := @parameter0: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationDeclaration;

        return null;
    }

    protected synchronized java.lang.Class fetchConfigurationClass() throws java.lang.Exception
    {
        org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider r0;
        java.lang.Class $r1, $r2, $r4;
        java.lang.String $r3;

        r0 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider: java.lang.Class getConfigurationClass()>();

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider: java.lang.String getConfigurationClassName()>();

        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider: java.lang.Class loadClass(java.lang.String)>($r3);

        virtualinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider: void setConfigurationClass(java.lang.Class)>($r4);

     label1:
        $r2 = virtualinvoke r0.<org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider: java.lang.Class getConfigurationClass()>();

        return $r2;
    }

    protected java.lang.Class loadClass(java.lang.String) throws java.lang.ClassNotFoundException
    {
        org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider r1;
        java.lang.Class $r2, $r4;
        java.lang.String r0;
        java.lang.ClassLoader $r3;

        r1 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r0, 1, $r3);

        goto label2;

     label1:
        $r4 = null;

     label2:
        return $r4;
    }
}
