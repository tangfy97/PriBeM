public class ucar.units.Test extends java.lang.Object
{

    public void <init>()
    {
        ucar.units.Test r0;

        r0 := @this: ucar.units.Test;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void myAssert(boolean)
    {
        java.lang.AssertionError $r0;
        boolean z0;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>()>();

        throw $r0;

     label1:
        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.StringBuilder $r3, $r5, $r6, $r8, $r10, $r11, $r13, $r15, $r16, $r18, $r20, $r21, $r23, $r25, $r27, $r28, $r30, $r32, $r34, $r35, $r37, $r39, $r41, $r42, $r44, $r46, $r48, $r49, $r51, $r53, $r56, $r57, $r59, $r61, $r63, $r64, $r66, $r68, $r70, $r71, $r73, $r75, $r78, $r79, $r81, $r83, $r85, $r86, $r88, $r90, $r93, $r94, $r96, $r98, $r100, $r101, $r103, $r105, $r108, $r109, $r113, $r115, $r117, $r118, $r120, $r122, $r124, $r125, $r140, $r142, $r144, $r145, $r147, $r149, $r151, $r152, $r157, $r159, $r161, $r162, $r164, $r166, $r168, $r169, $r171, $r173, $r176, $r177, $r179, $r181, $r184, $r185, $r187, $r189, $r192, $r193;
        int $i0, $i1;
        java.io.PrintStream $r4, $r9, $r14, $r19, $r24, $r31, $r38, $r45, $r52, $r60, $r67, $r74, $r82, $r89, $r97, $r104, $r114, $r121, $r141, $r148, $r158, $r165, $r172, $r180, $r188;
        ucar.units.Converter $r116, $r123, $r143, $r150;
        java.lang.String $r7, $r12, $r17, $r22, $r29, $r36, $r43, $r50, $r55, $r58, $r65, $r72, $r77, $r80, $r87, $r92, $r95, $r102, $r107, $r110, $r119, $r126, $r146, $r153, $r160, $r163, $r167, $r170, $r175, $r178, $r183, $r186, $r191, $r194;
        ucar.units.UnitFormat $r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        ucar.units.UnitName $r128, $r130, $r133, $r136, $r155;
        ucar.units.Unit $r1, $r2, $r26, $r33, $r40, $r47, $r54, $r62, $r69, $r76, $r84, $r91, $r99, $r106, $r111, $r112, $r127, $r129, $r131, $r132, $r134, $r135, $r137, $r138, $r139, $r154, $r156, $r174, $r182, $r190;
        float $f0, $f1, $f2;
        java.lang.String[] r195;
        double $d0, $d1;

        r195 := @parameter0: java.lang.String[];

        $r0 = staticinvoke <ucar.units.UnitFormatManager: ucar.units.UnitFormat instance()>();

        $r1 = interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>("secs since 1970-01-01 00:00:00");

        $r2 = interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>("secs since 1999-02-03 00:00:00");

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("t1 = ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r7);

        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("t2 = ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r12);

        $r14 = <java.lang.System: java.io.PrintStream out>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("t1.isCompatible(t2) = ");

        $z0 = interfaceinvoke $r1.<ucar.units.Unit: boolean isCompatible(ucar.units.Unit)>($r2);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r17);

        $r19 = <java.lang.System: java.io.PrintStream out>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("t2.convertTo(0.0, t1) = ");

        $d0 = interfaceinvoke $r2.<ucar.units.Unit: double convertTo(double,ucar.units.Unit)>(0.0, $r1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r22);

        interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>("years since 1930-07-27");

        interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>("years since 1930");

        interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>("12 secs since 1970-01-02T00:00:00Z");

        $r24 = <java.lang.System: java.io.PrintStream out>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("format.parse(\"\") = \"");

        $r26 = interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>("");

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r29);

        $r31 = <java.lang.System: java.io.PrintStream out>;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("format.parse(\"s\") = \"");

        $r33 = interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>("s");

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r36);

        $r38 = <java.lang.System: java.io.PrintStream out>;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("format.parse(\"SeCoNd\") = \"");

        $r40 = interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>("SeCoNd");

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>($r43);

        $r45 = <java.lang.System: java.io.PrintStream out>;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("format.parse(\"min\") = \"");

        $r47 = interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>("min");

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r47);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r45.<java.io.PrintStream: void println(java.lang.String)>($r50);

        $r52 = <java.lang.System: java.io.PrintStream out>;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("format.parse(\"min\").toString() = \"");

        $r54 = interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>("min");

        $r55 = virtualinvoke $r54.<java.lang.Object: java.lang.String toString()>();

        $r56 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r52.<java.io.PrintStream: void println(java.lang.String)>($r58);

        $r60 = <java.lang.System: java.io.PrintStream out>;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("format.parse(\"60 s\") = \"");

        $r62 = interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>("60 s");

        $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r62);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r60.<java.io.PrintStream: void println(java.lang.String)>($r65);

        $r67 = <java.lang.System: java.io.PrintStream out>;

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("format.parse(\"Cel\") = \"");

        $r69 = interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>("Cel");

        $r70 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r69);

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r67.<java.io.PrintStream: void println(java.lang.String)>($r72);

        $r74 = <java.lang.System: java.io.PrintStream out>;

        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        $r75 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("format.parse(\"Cel\").toString() = \"");

        $r76 = interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>("Cel");

        $r77 = virtualinvoke $r76.<java.lang.Object: java.lang.String toString()>();

        $r78 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r77);

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r74.<java.io.PrintStream: void println(java.lang.String)>($r80);

        $r82 = <java.lang.System: java.io.PrintStream out>;

        $r81 = new java.lang.StringBuilder;

        specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();

        $r83 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("format.parse(\"min @ 1970-01-01 00:00:00 UTC\") = \"");

        $r84 = interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>("min @ 1970-01-01 00:00:00 UTC");

        $r85 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r84);

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r82.<java.io.PrintStream: void println(java.lang.String)>($r87);

        $r89 = <java.lang.System: java.io.PrintStream out>;

        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        $r90 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("format.parse(\"min @ 2000-01-01 00 UTC\").toString() = \"");

        $r91 = interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>("min @ 2000-01-01 00 UTC");

        $r92 = virtualinvoke $r91.<java.lang.Object: java.lang.String toString()>();

        $r93 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r92);

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r89.<java.io.PrintStream: void println(java.lang.String)>($r95);

        $r97 = <java.lang.System: java.io.PrintStream out>;

        $r96 = new java.lang.StringBuilder;

        specialinvoke $r96.<java.lang.StringBuilder: void <init>()>();

        $r98 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("format.parse(\"g/kg\") = \"");

        $r99 = interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>("g/kg");

        $r100 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r99);

        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r97.<java.io.PrintStream: void println(java.lang.String)>($r102);

        $r104 = <java.lang.System: java.io.PrintStream out>;

        $r103 = new java.lang.StringBuilder;

        specialinvoke $r103.<java.lang.StringBuilder: void <init>()>();

        $r105 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("format.longFormat(format.parse(\"g/kg\")) = \"");

        $r106 = interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>("g/kg");

        $r107 = interfaceinvoke $r0.<ucar.units.UnitFormat: java.lang.String longFormat(ucar.units.Unit)>($r106);

        $r108 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r107);

        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r104.<java.io.PrintStream: void println(java.lang.String)>($r110);

        $r111 = interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>("Cel");

        $r112 = interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>("K");

        $r114 = <java.lang.System: java.io.PrintStream out>;

        $r113 = new java.lang.StringBuilder;

        specialinvoke $r113.<java.lang.StringBuilder: void <init>()>();

        $r115 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("celsius.getConverterTo(kelvin).convert(0) = \"");

        $r116 = interfaceinvoke $r111.<ucar.units.Unit: ucar.units.Converter getConverterTo(ucar.units.Unit)>($r112);

        $f0 = interfaceinvoke $r116.<ucar.units.Converter: float convert(float)>(0.0F);

        $r117 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r114.<java.io.PrintStream: void println(java.lang.String)>($r119);

        $r121 = <java.lang.System: java.io.PrintStream out>;

        $r120 = new java.lang.StringBuilder;

        specialinvoke $r120.<java.lang.StringBuilder: void <init>()>();

        $r122 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("kelvin.getConverterTo(celsius).convert(273.15) = \"");

        $r123 = interfaceinvoke $r112.<ucar.units.Unit: ucar.units.Converter getConverterTo(ucar.units.Unit)>($r111);

        $d1 = interfaceinvoke $r123.<ucar.units.Converter: double convert(double)>(273.15);

        $r124 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r125 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r126 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r121.<java.io.PrintStream: void println(java.lang.String)>($r126);

        $z1 = interfaceinvoke $r112.<ucar.units.Unit: boolean isCompatible(ucar.units.Unit)>($r111);

        staticinvoke <ucar.units.Test: void myAssert(boolean)>($z1);

        $z2 = virtualinvoke $r112.<java.lang.Object: boolean equals(java.lang.Object)>($r111);

        if $z2 != 0 goto label1;

        $z6 = 1;

        goto label2;

     label1:
        $z6 = 0;

     label2:
        staticinvoke <ucar.units.Test: void myAssert(boolean)>($z6);

        $i0 = virtualinvoke $r112.<java.lang.Object: int hashCode()>();

        $i1 = virtualinvoke $r111.<java.lang.Object: int hashCode()>();

        if $i0 == $i1 goto label3;

        $z7 = 1;

        goto label4;

     label3:
        $z7 = 0;

     label4:
        staticinvoke <ucar.units.Test: void myAssert(boolean)>($z7);

        $r127 = interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>("fahrenheit");

        $r128 = staticinvoke <ucar.units.UnitName: ucar.units.UnitName newUnitName(java.lang.String)>("fahrenheit");

        $r129 = interfaceinvoke $r127.<ucar.units.Unit: ucar.units.Unit clone(ucar.units.UnitName)>($r128);

        $r130 = staticinvoke <ucar.units.UnitName: ucar.units.UnitName newUnitName(java.lang.String)>("kelvin");

        $r131 = interfaceinvoke $r112.<ucar.units.Unit: ucar.units.Unit clone(ucar.units.UnitName)>($r130);

        $z3 = interfaceinvoke $r131.<ucar.units.Unit: boolean isCompatible(ucar.units.Unit)>($r129);

        staticinvoke <ucar.units.Test: void myAssert(boolean)>($z3);

        $z4 = interfaceinvoke $r129.<ucar.units.Unit: boolean isCompatible(ucar.units.Unit)>($r131);

        staticinvoke <ucar.units.Test: void myAssert(boolean)>($z4);

        $r132 = interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>("kelvin");

        $r133 = staticinvoke <ucar.units.UnitName: ucar.units.UnitName newUnitName(java.lang.String)>("kelvin");

        $r134 = interfaceinvoke $r132.<ucar.units.Unit: ucar.units.Unit clone(ucar.units.UnitName)>($r133);

        $r135 = interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>("fahrenheit");

        $r136 = staticinvoke <ucar.units.UnitName: ucar.units.UnitName newUnitName(java.lang.String)>("fahrenheit");

        $r137 = interfaceinvoke $r135.<ucar.units.Unit: ucar.units.Unit clone(ucar.units.UnitName)>($r136);

        $z5 = interfaceinvoke $r134.<ucar.units.Unit: boolean isCompatible(ucar.units.Unit)>($r137);

        staticinvoke <ucar.units.Test: void myAssert(boolean)>($z5);

        $r138 = interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>("s");

        $r139 = interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>("min");

        $r141 = <java.lang.System: java.io.PrintStream out>;

        $r140 = new java.lang.StringBuilder;

        specialinvoke $r140.<java.lang.StringBuilder: void <init>()>();

        $r142 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("second.getConverterTo(minute).convert(60) = \"");

        $r143 = interfaceinvoke $r138.<ucar.units.Unit: ucar.units.Converter getConverterTo(ucar.units.Unit)>($r139);

        $f1 = interfaceinvoke $r143.<ucar.units.Converter: float convert(float)>(60.0F);

        $r144 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r145 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r146 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r141.<java.io.PrintStream: void println(java.lang.String)>($r146);

        $r148 = <java.lang.System: java.io.PrintStream out>;

        $r147 = new java.lang.StringBuilder;

        specialinvoke $r147.<java.lang.StringBuilder: void <init>()>();

        $r149 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("minute.getConverterTo(second).convert(1) = \"");

        $r150 = interfaceinvoke $r139.<ucar.units.Unit: ucar.units.Converter getConverterTo(ucar.units.Unit)>($r138);

        $f2 = interfaceinvoke $r150.<ucar.units.Converter: float convert(float)>(1.0F);

        $r151 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r152 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r153 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r148.<java.io.PrintStream: void println(java.lang.String)>($r153);

        $r154 = interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>("g/kg");

        $r155 = staticinvoke <ucar.units.UnitName: ucar.units.UnitName newUnitName(java.lang.String)>("mixing ratio");

        $r156 = interfaceinvoke $r154.<ucar.units.Unit: ucar.units.Unit clone(ucar.units.UnitName)>($r155);

        $r158 = <java.lang.System: java.io.PrintStream out>;

        $r157 = new java.lang.StringBuilder;

        specialinvoke $r157.<java.lang.StringBuilder: void <init>()>();

        $r159 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mixingRatio.toString() = \"");

        $r160 = virtualinvoke $r156.<java.lang.Object: java.lang.String toString()>();

        $r161 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r160);

        $r162 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r163 = virtualinvoke $r162.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r158.<java.io.PrintStream: void println(java.lang.String)>($r163);

        $r165 = <java.lang.System: java.io.PrintStream out>;

        $r164 = new java.lang.StringBuilder;

        specialinvoke $r164.<java.lang.StringBuilder: void <init>()>();

        $r166 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("format.longFormat(mixingRatio) = \"");

        $r167 = interfaceinvoke $r0.<ucar.units.UnitFormat: java.lang.String longFormat(ucar.units.Unit)>($r156);

        $r168 = virtualinvoke $r166.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r167);

        $r169 = virtualinvoke $r168.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r170 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r165.<java.io.PrintStream: void println(java.lang.String)>($r170);

        $r172 = <java.lang.System: java.io.PrintStream out>;

        $r171 = new java.lang.StringBuilder;

        specialinvoke $r171.<java.lang.StringBuilder: void <init>()>();

        $r173 = virtualinvoke $r171.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("format.longFormat(format.parse(\"(g/kg)/(lb/ton)\")) = \"");

        $r174 = interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>("(g/kg)/(lb/ton)");

        $r175 = interfaceinvoke $r0.<ucar.units.UnitFormat: java.lang.String longFormat(ucar.units.Unit)>($r174);

        $r176 = virtualinvoke $r173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r175);

        $r177 = virtualinvoke $r176.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r178 = virtualinvoke $r177.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r172.<java.io.PrintStream: void println(java.lang.String)>($r178);

        $r180 = <java.lang.System: java.io.PrintStream out>;

        $r179 = new java.lang.StringBuilder;

        specialinvoke $r179.<java.lang.StringBuilder: void <init>()>();

        $r181 = virtualinvoke $r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("format.parse(\"(g/mol)/(lb/kmol)\").toString() = \"");

        $r182 = interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>("(g/mol)/(lb/kmol)");

        $r183 = virtualinvoke $r182.<java.lang.Object: java.lang.String toString()>();

        $r184 = virtualinvoke $r181.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r183);

        $r185 = virtualinvoke $r184.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r186 = virtualinvoke $r185.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r180.<java.io.PrintStream: void println(java.lang.String)>($r186);

        $r188 = <java.lang.System: java.io.PrintStream out>;

        $r187 = new java.lang.StringBuilder;

        specialinvoke $r187.<java.lang.StringBuilder: void <init>()>();

        $r189 = virtualinvoke $r187.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("format.longFormat(format.parse(\"(g/mol)/(lb/kmol)\")) = \"");

        $r190 = interfaceinvoke $r0.<ucar.units.UnitFormat: ucar.units.Unit parse(java.lang.String)>("(g/mol)/(lb/kmol)");

        $r191 = interfaceinvoke $r0.<ucar.units.UnitFormat: java.lang.String longFormat(ucar.units.Unit)>($r190);

        $r192 = virtualinvoke $r189.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r191);

        $r193 = virtualinvoke $r192.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r194 = virtualinvoke $r193.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r188.<java.io.PrintStream: void println(java.lang.String)>($r194);

        return;
    }
}
