public class groovyjarjarantlr.debug.InputBufferEventSupport extends java.lang.Object
{
    private java.lang.Object source;
    private java.util.Vector inputBufferListeners;
    private groovyjarjarantlr.debug.InputBufferEvent inputBufferEvent;
    protected static final int CONSUME;
    protected static final int LA;
    protected static final int MARK;
    protected static final int REWIND;

    public void <init>(java.lang.Object)
    {
        groovyjarjarantlr.debug.InputBufferEvent $r1;
        java.lang.Object r2;
        groovyjarjarantlr.debug.InputBufferEventSupport r0;

        r0 := @this: groovyjarjarantlr.debug.InputBufferEventSupport;

        r2 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new groovyjarjarantlr.debug.InputBufferEvent;

        specialinvoke $r1.<groovyjarjarantlr.debug.InputBufferEvent: void <init>(java.lang.Object)>(r2);

        r0.<groovyjarjarantlr.debug.InputBufferEventSupport: groovyjarjarantlr.debug.InputBufferEvent inputBufferEvent> = $r1;

        r0.<groovyjarjarantlr.debug.InputBufferEventSupport: java.lang.Object source> = r2;

        return;
    }

    public void addInputBufferListener(groovyjarjarantlr.debug.InputBufferListener)
    {
        java.util.Vector $r1, $r3, $r4;
        groovyjarjarantlr.debug.InputBufferListener r2;
        groovyjarjarantlr.debug.InputBufferEventSupport r0;

        r0 := @this: groovyjarjarantlr.debug.InputBufferEventSupport;

        r2 := @parameter0: groovyjarjarantlr.debug.InputBufferListener;

        $r1 = r0.<groovyjarjarantlr.debug.InputBufferEventSupport: java.util.Vector inputBufferListeners>;

        if $r1 != null goto label1;

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        r0.<groovyjarjarantlr.debug.InputBufferEventSupport: java.util.Vector inputBufferListeners> = $r4;

     label1:
        $r3 = r0.<groovyjarjarantlr.debug.InputBufferEventSupport: java.util.Vector inputBufferListeners>;

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>(r2);

        return;
    }

    public void fireConsume(char)
    {
        groovyjarjarantlr.debug.InputBufferEvent $r1;
        java.util.Vector $r2;
        char c0;
        groovyjarjarantlr.debug.InputBufferEventSupport r0;

        r0 := @this: groovyjarjarantlr.debug.InputBufferEventSupport;

        c0 := @parameter0: char;

        $r1 = r0.<groovyjarjarantlr.debug.InputBufferEventSupport: groovyjarjarantlr.debug.InputBufferEvent inputBufferEvent>;

        virtualinvoke $r1.<groovyjarjarantlr.debug.InputBufferEvent: void setValues(int,char,int)>(0, c0, 0);

        $r2 = r0.<groovyjarjarantlr.debug.InputBufferEventSupport: java.util.Vector inputBufferListeners>;

        virtualinvoke r0.<groovyjarjarantlr.debug.InputBufferEventSupport: void fireEvents(int,java.util.Vector)>(0, $r2);

        return;
    }

    public void fireEvent(int, groovyjarjarantlr.debug.ListenerBase)
    {
        groovyjarjarantlr.debug.InputBufferEvent $r2, $r4, $r6, $r8;
        java.lang.StringBuffer $r11, $r12, $r13, $r14;
        int i0;
        java.lang.String $r15;
        groovyjarjarantlr.debug.InputBufferEventSupport r1;
        groovyjarjarantlr.debug.InputBufferListener $r3, $r5, $r7, $r9;
        java.lang.IllegalArgumentException $r10;
        groovyjarjarantlr.debug.ListenerBase r0;

        r1 := @this: groovyjarjarantlr.debug.InputBufferEventSupport;

        i0 := @parameter0: int;

        r0 := @parameter1: groovyjarjarantlr.debug.ListenerBase;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label5;
        };

     label1:
        $r9 = (groovyjarjarantlr.debug.InputBufferListener) r0;

        $r8 = r1.<groovyjarjarantlr.debug.InputBufferEventSupport: groovyjarjarantlr.debug.InputBufferEvent inputBufferEvent>;

        interfaceinvoke $r9.<groovyjarjarantlr.debug.InputBufferListener: void inputBufferConsume(groovyjarjarantlr.debug.InputBufferEvent)>($r8);

        goto label6;

     label2:
        $r7 = (groovyjarjarantlr.debug.InputBufferListener) r0;

        $r6 = r1.<groovyjarjarantlr.debug.InputBufferEventSupport: groovyjarjarantlr.debug.InputBufferEvent inputBufferEvent>;

        interfaceinvoke $r7.<groovyjarjarantlr.debug.InputBufferListener: void inputBufferLA(groovyjarjarantlr.debug.InputBufferEvent)>($r6);

        goto label6;

     label3:
        $r5 = (groovyjarjarantlr.debug.InputBufferListener) r0;

        $r4 = r1.<groovyjarjarantlr.debug.InputBufferEventSupport: groovyjarjarantlr.debug.InputBufferEvent inputBufferEvent>;

        interfaceinvoke $r5.<groovyjarjarantlr.debug.InputBufferListener: void inputBufferMark(groovyjarjarantlr.debug.InputBufferEvent)>($r4);

        goto label6;

     label4:
        $r3 = (groovyjarjarantlr.debug.InputBufferListener) r0;

        $r2 = r1.<groovyjarjarantlr.debug.InputBufferEventSupport: groovyjarjarantlr.debug.InputBufferEvent inputBufferEvent>;

        interfaceinvoke $r3.<groovyjarjarantlr.debug.InputBufferListener: void inputBufferRewind(groovyjarjarantlr.debug.InputBufferEvent)>($r2);

        goto label6;

     label5:
        $r10 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("bad type ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" for fireEvent()");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r10;

     label6:
        return;
    }

    public void fireEvents(int, java.util.Vector)
    {
        java.lang.Throwable $r4;
        java.util.Vector r1, r5;
        groovyjarjarantlr.debug.ListenerBase r6;
        int $i0, i1, i2;
        java.lang.Object $r2, $r3;
        groovyjarjarantlr.debug.InputBufferEventSupport r0;

        r0 := @this: groovyjarjarantlr.debug.InputBufferEventSupport;

        i1 := @parameter0: int;

        r1 := @parameter1: java.util.Vector;

        entermonitor r0;

     label1:
        if r1 != null goto label3;

        exitmonitor r0;

     label2:
        return;

     label3:
        $r2 = virtualinvoke r1.<java.util.Vector: java.lang.Object clone()>();

        r5 = (java.util.Vector) $r2;

        exitmonitor r0;

     label4:
        goto label7;

     label5:
        $r4 := @caughtexception;

        exitmonitor r0;

     label6:
        throw $r4;

     label7:
        if r5 == null goto label9;

        i2 = 0;

     label8:
        $i0 = virtualinvoke r5.<java.util.Vector: int size()>();

        if i2 >= $i0 goto label9;

        $r3 = virtualinvoke r5.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        r6 = (groovyjarjarantlr.debug.ListenerBase) $r3;

        virtualinvoke r0.<groovyjarjarantlr.debug.InputBufferEventSupport: void fireEvent(int,groovyjarjarantlr.debug.ListenerBase)>(i1, r6);

        i2 = i2 + 1;

        goto label8;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void fireLA(char, int)
    {
        groovyjarjarantlr.debug.InputBufferEvent $r1;
        java.util.Vector $r2;
        int i1;
        char c0;
        groovyjarjarantlr.debug.InputBufferEventSupport r0;

        r0 := @this: groovyjarjarantlr.debug.InputBufferEventSupport;

        c0 := @parameter0: char;

        i1 := @parameter1: int;

        $r1 = r0.<groovyjarjarantlr.debug.InputBufferEventSupport: groovyjarjarantlr.debug.InputBufferEvent inputBufferEvent>;

        virtualinvoke $r1.<groovyjarjarantlr.debug.InputBufferEvent: void setValues(int,char,int)>(1, c0, i1);

        $r2 = r0.<groovyjarjarantlr.debug.InputBufferEventSupport: java.util.Vector inputBufferListeners>;

        virtualinvoke r0.<groovyjarjarantlr.debug.InputBufferEventSupport: void fireEvents(int,java.util.Vector)>(1, $r2);

        return;
    }

    public void fireMark(int)
    {
        groovyjarjarantlr.debug.InputBufferEvent $r1;
        java.util.Vector $r2;
        int i0;
        groovyjarjarantlr.debug.InputBufferEventSupport r0;

        r0 := @this: groovyjarjarantlr.debug.InputBufferEventSupport;

        i0 := @parameter0: int;

        $r1 = r0.<groovyjarjarantlr.debug.InputBufferEventSupport: groovyjarjarantlr.debug.InputBufferEvent inputBufferEvent>;

        virtualinvoke $r1.<groovyjarjarantlr.debug.InputBufferEvent: void setValues(int,char,int)>(2, 32, i0);

        $r2 = r0.<groovyjarjarantlr.debug.InputBufferEventSupport: java.util.Vector inputBufferListeners>;

        virtualinvoke r0.<groovyjarjarantlr.debug.InputBufferEventSupport: void fireEvents(int,java.util.Vector)>(2, $r2);

        return;
    }

    public void fireRewind(int)
    {
        groovyjarjarantlr.debug.InputBufferEvent $r1;
        java.util.Vector $r2;
        int i0;
        groovyjarjarantlr.debug.InputBufferEventSupport r0;

        r0 := @this: groovyjarjarantlr.debug.InputBufferEventSupport;

        i0 := @parameter0: int;

        $r1 = r0.<groovyjarjarantlr.debug.InputBufferEventSupport: groovyjarjarantlr.debug.InputBufferEvent inputBufferEvent>;

        virtualinvoke $r1.<groovyjarjarantlr.debug.InputBufferEvent: void setValues(int,char,int)>(3, 32, i0);

        $r2 = r0.<groovyjarjarantlr.debug.InputBufferEventSupport: java.util.Vector inputBufferListeners>;

        virtualinvoke r0.<groovyjarjarantlr.debug.InputBufferEventSupport: void fireEvents(int,java.util.Vector)>(3, $r2);

        return;
    }

    public java.util.Vector getInputBufferListeners()
    {
        java.util.Vector $r1;
        groovyjarjarantlr.debug.InputBufferEventSupport r0;

        r0 := @this: groovyjarjarantlr.debug.InputBufferEventSupport;

        $r1 = r0.<groovyjarjarantlr.debug.InputBufferEventSupport: java.util.Vector inputBufferListeners>;

        return $r1;
    }

    protected void refresh(java.util.Vector)
    {
        java.lang.Throwable $r5;
        java.util.Vector r0, r2;
        groovyjarjarantlr.debug.ListenerBase $r4;
        int $i0, i1;
        java.lang.Object $r1, $r3;
        groovyjarjarantlr.debug.InputBufferEventSupport r6;

        r6 := @this: groovyjarjarantlr.debug.InputBufferEventSupport;

        r0 := @parameter0: java.util.Vector;

        entermonitor r0;

     label1:
        $r1 = virtualinvoke r0.<java.util.Vector: java.lang.Object clone()>();

        r2 = (java.util.Vector) $r1;

        exitmonitor r0;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r5;

     label5:
        if r2 == null goto label7;

        i1 = 0;

     label6:
        $i0 = virtualinvoke r2.<java.util.Vector: int size()>();

        if i1 >= $i0 goto label7;

        $r3 = virtualinvoke r2.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        $r4 = (groovyjarjarantlr.debug.ListenerBase) $r3;

        interfaceinvoke $r4.<groovyjarjarantlr.debug.ListenerBase: void refresh()>();

        i1 = i1 + 1;

        goto label6;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void refreshListeners()
    {
        java.util.Vector $r1;
        groovyjarjarantlr.debug.InputBufferEventSupport r0;

        r0 := @this: groovyjarjarantlr.debug.InputBufferEventSupport;

        $r1 = r0.<groovyjarjarantlr.debug.InputBufferEventSupport: java.util.Vector inputBufferListeners>;

        virtualinvoke r0.<groovyjarjarantlr.debug.InputBufferEventSupport: void refresh(java.util.Vector)>($r1);

        return;
    }

    public void removeInputBufferListener(groovyjarjarantlr.debug.InputBufferListener)
    {
        java.util.Vector $r1, $r3;
        groovyjarjarantlr.debug.InputBufferListener r2;
        groovyjarjarantlr.debug.InputBufferEventSupport r0;

        r0 := @this: groovyjarjarantlr.debug.InputBufferEventSupport;

        r2 := @parameter0: groovyjarjarantlr.debug.InputBufferListener;

        $r1 = r0.<groovyjarjarantlr.debug.InputBufferEventSupport: java.util.Vector inputBufferListeners>;

        if $r1 == null goto label1;

        $r3 = r0.<groovyjarjarantlr.debug.InputBufferEventSupport: java.util.Vector inputBufferListeners>;

        virtualinvoke $r3.<java.util.Vector: boolean removeElement(java.lang.Object)>(r2);

     label1:
        return;
    }

    public static void <clinit>()
    {
        <groovyjarjarantlr.debug.InputBufferEventSupport: int REWIND> = 3;

        <groovyjarjarantlr.debug.InputBufferEventSupport: int MARK> = 2;

        <groovyjarjarantlr.debug.InputBufferEventSupport: int LA> = 1;

        <groovyjarjarantlr.debug.InputBufferEventSupport: int CONSUME> = 0;

        return;
    }
}
