public class groovy.swing.impl.TableLayoutCell extends java.lang.Object implements groovy.swing.impl.ContainerFacade
{
    protected static final java.util.logging.Logger LOG;
    private groovy.swing.impl.TableLayoutRow parent;
    private java.awt.Component component;
    private java.awt.GridBagConstraints constraints;
    private java.lang.String align;
    private java.lang.String valign;
    private int colspan;
    private int rowspan;
    private boolean colfill;
    private boolean rowfill;
    static java.lang.Class class$groovy$swing$impl$TableLayoutCell;

    public int getColspan()
    {
        groovy.swing.impl.TableLayoutCell r0;
        int $i0;

        r0 := @this: groovy.swing.impl.TableLayoutCell;

        $i0 = r0.<groovy.swing.impl.TableLayoutCell: int colspan>;

        return $i0;
    }

    public int getRowspan()
    {
        groovy.swing.impl.TableLayoutCell r0;
        int $i0;

        r0 := @this: groovy.swing.impl.TableLayoutCell;

        $i0 = r0.<groovy.swing.impl.TableLayoutCell: int rowspan>;

        return $i0;
    }

    public void <init>(groovy.swing.impl.TableLayoutRow)
    {
        groovy.swing.impl.TableLayoutCell r0;
        groovy.swing.impl.TableLayoutRow r1;

        r0 := @this: groovy.swing.impl.TableLayoutCell;

        r1 := @parameter0: groovy.swing.impl.TableLayoutRow;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<groovy.swing.impl.TableLayoutCell: int colspan> = 1;

        r0.<groovy.swing.impl.TableLayoutCell: int rowspan> = 1;

        r0.<groovy.swing.impl.TableLayoutCell: groovy.swing.impl.TableLayoutRow parent> = r1;

        return;
    }

    public void addComponent(java.awt.Component)
    {
        groovy.swing.impl.TableLayoutCell r0;
        java.util.logging.Logger $r5;
        java.awt.Component $r1, r2;
        java.util.logging.Level $r6;
        groovy.swing.impl.TableLayoutRow $r3;
        java.lang.StringBuffer $r4, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: groovy.swing.impl.TableLayoutCell;

        r2 := @parameter0: java.awt.Component;

        $r1 = r0.<groovy.swing.impl.TableLayoutCell: java.awt.Component component>;

        if $r1 == null goto label1;

        $r5 = <groovy.swing.impl.TableLayoutCell: java.util.logging.Logger LOG>;

        $r6 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("This td cell already has a component: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r5.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r6, $r9);

     label1:
        r0.<groovy.swing.impl.TableLayoutCell: java.awt.Component component> = r2;

        $r3 = r0.<groovy.swing.impl.TableLayoutCell: groovy.swing.impl.TableLayoutRow parent>;

        virtualinvoke $r3.<groovy.swing.impl.TableLayoutRow: void addCell(groovy.swing.impl.TableLayoutCell)>(r0);

        return;
    }

    public java.awt.Component getComponent()
    {
        groovy.swing.impl.TableLayoutCell r0;
        java.awt.Component $r1;

        r0 := @this: groovy.swing.impl.TableLayoutCell;

        $r1 = r0.<groovy.swing.impl.TableLayoutCell: java.awt.Component component>;

        return $r1;
    }

    public void setAlign(java.lang.String)
    {
        groovy.swing.impl.TableLayoutCell r0;
        java.lang.String r1;

        r0 := @this: groovy.swing.impl.TableLayoutCell;

        r1 := @parameter0: java.lang.String;

        r0.<groovy.swing.impl.TableLayoutCell: java.lang.String align> = r1;

        return;
    }

    public void setValign(java.lang.String)
    {
        groovy.swing.impl.TableLayoutCell r0;
        java.lang.String r1;

        r0 := @this: groovy.swing.impl.TableLayoutCell;

        r1 := @parameter0: java.lang.String;

        r0.<groovy.swing.impl.TableLayoutCell: java.lang.String valign> = r1;

        return;
    }

    public void setColspan(int)
    {
        groovy.swing.impl.TableLayoutCell r0;
        int i0;

        r0 := @this: groovy.swing.impl.TableLayoutCell;

        i0 := @parameter0: int;

        r0.<groovy.swing.impl.TableLayoutCell: int colspan> = i0;

        return;
    }

    public void setRowspan(int)
    {
        groovy.swing.impl.TableLayoutCell r0;
        int i0;

        r0 := @this: groovy.swing.impl.TableLayoutCell;

        i0 := @parameter0: int;

        r0.<groovy.swing.impl.TableLayoutCell: int rowspan> = i0;

        return;
    }

    public boolean isColfill()
    {
        groovy.swing.impl.TableLayoutCell r0;
        boolean $z0;

        r0 := @this: groovy.swing.impl.TableLayoutCell;

        $z0 = r0.<groovy.swing.impl.TableLayoutCell: boolean colfill>;

        return $z0;
    }

    public boolean isRowfill()
    {
        groovy.swing.impl.TableLayoutCell r0;
        boolean $z0;

        r0 := @this: groovy.swing.impl.TableLayoutCell;

        $z0 = r0.<groovy.swing.impl.TableLayoutCell: boolean rowfill>;

        return $z0;
    }

    public void setColfill(boolean)
    {
        groovy.swing.impl.TableLayoutCell r0;
        boolean z0;

        r0 := @this: groovy.swing.impl.TableLayoutCell;

        z0 := @parameter0: boolean;

        r0.<groovy.swing.impl.TableLayoutCell: boolean colfill> = z0;

        return;
    }

    public void setRowfill(boolean)
    {
        groovy.swing.impl.TableLayoutCell r0;
        boolean z0;

        r0 := @this: groovy.swing.impl.TableLayoutCell;

        z0 := @parameter0: boolean;

        r0.<groovy.swing.impl.TableLayoutCell: boolean rowfill> = z0;

        return;
    }

    public java.awt.GridBagConstraints getConstraints()
    {
        groovy.swing.impl.TableLayoutCell r0;
        java.awt.GridBagConstraints $r1, $r2, $r3;

        r0 := @this: groovy.swing.impl.TableLayoutCell;

        $r1 = r0.<groovy.swing.impl.TableLayoutCell: java.awt.GridBagConstraints constraints>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<groovy.swing.impl.TableLayoutCell: java.awt.GridBagConstraints createConstraints()>();

        r0.<groovy.swing.impl.TableLayoutCell: java.awt.GridBagConstraints constraints> = $r3;

     label1:
        $r2 = r0.<groovy.swing.impl.TableLayoutCell: java.awt.GridBagConstraints constraints>;

        return $r2;
    }

    protected java.awt.GridBagConstraints createConstraints()
    {
        groovy.swing.impl.TableLayoutCell r1;
        java.awt.GridBagConstraints $r0;
        byte $b3, $b4;
        int $i0, $i1, $i2, $i5, $i6;
        boolean $z0, $z1, $z2;

        r1 := @this: groovy.swing.impl.TableLayoutCell;

        $r0 = new java.awt.GridBagConstraints;

        specialinvoke $r0.<java.awt.GridBagConstraints: void <init>()>();

        $i0 = virtualinvoke r1.<groovy.swing.impl.TableLayoutCell: int getAnchor()>();

        $r0.<java.awt.GridBagConstraints: int anchor> = $i0;

        $i1 = r1.<groovy.swing.impl.TableLayoutCell: int colspan>;

        if $i1 >= 1 goto label1;

        r1.<groovy.swing.impl.TableLayoutCell: int colspan> = 1;

     label1:
        $i2 = r1.<groovy.swing.impl.TableLayoutCell: int rowspan>;

        if $i2 >= 1 goto label2;

        r1.<groovy.swing.impl.TableLayoutCell: int rowspan> = 1;

     label2:
        $z0 = virtualinvoke r1.<groovy.swing.impl.TableLayoutCell: boolean isColfill()>();

        if $z0 == 0 goto label5;

        $z2 = virtualinvoke r1.<groovy.swing.impl.TableLayoutCell: boolean isRowfill()>();

        if $z2 == 0 goto label3;

        $b3 = 1;

        goto label4;

     label3:
        $b3 = 2;

     label4:
        $r0.<java.awt.GridBagConstraints: int fill> = $b3;

        goto label8;

     label5:
        $z1 = virtualinvoke r1.<groovy.swing.impl.TableLayoutCell: boolean isRowfill()>();

        if $z1 == 0 goto label6;

        $b4 = 3;

        goto label7;

     label6:
        $b4 = 0;

     label7:
        $r0.<java.awt.GridBagConstraints: int fill> = $b4;

     label8:
        $r0.<java.awt.GridBagConstraints: double weightx> = 0.2;

        $r0.<java.awt.GridBagConstraints: double weighty> = 0.0;

        $i5 = r1.<groovy.swing.impl.TableLayoutCell: int colspan>;

        $r0.<java.awt.GridBagConstraints: int gridwidth> = $i5;

        $i6 = r1.<groovy.swing.impl.TableLayoutCell: int rowspan>;

        $r0.<java.awt.GridBagConstraints: int gridheight> = $i6;

        return $r0;
    }

    protected int getAnchor()
    {
        groovy.swing.impl.TableLayoutCell r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: groovy.swing.impl.TableLayoutCell;

        $r2 = "top";

        $r1 = r0.<groovy.swing.impl.TableLayoutCell: java.lang.String valign>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        $r4 = "bottom";

        $r3 = r0.<groovy.swing.impl.TableLayoutCell: java.lang.String valign>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        $r6 = "center";

        $r5 = r0.<groovy.swing.impl.TableLayoutCell: java.lang.String align>;

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r5);

        if $z2 == 0 goto label3;

        if $z0 == 0 goto label1;

        return 11;

     label1:
        if $z1 == 0 goto label2;

        return 15;

     label2:
        return 10;

     label3:
        $r8 = "right";

        $r7 = r0.<groovy.swing.impl.TableLayoutCell: java.lang.String align>;

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r7);

        if $z3 == 0 goto label6;

        if $z0 == 0 goto label4;

        return 12;

     label4:
        if $z1 == 0 goto label5;

        return 14;

     label5:
        return 13;

     label6:
        if $z0 == 0 goto label7;

        return 18;

     label7:
        if $z1 == 0 goto label8;

        return 16;

     label8:
        return 17;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r3;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = <groovy.swing.impl.TableLayoutCell: java.lang.Class class$groovy$swing$impl$TableLayoutCell>;

        if $r0 != null goto label1;

        $r3 = staticinvoke <groovy.swing.impl.TableLayoutCell: java.lang.Class class$(java.lang.String)>("groovy.swing.impl.TableLayoutCell");

        <groovy.swing.impl.TableLayoutCell: java.lang.Class class$groovy$swing$impl$TableLayoutCell> = $r3;

        goto label2;

     label1:
        $r3 = <groovy.swing.impl.TableLayoutCell: java.lang.Class class$groovy$swing$impl$TableLayoutCell>;

     label2:
        $r1 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <groovy.swing.impl.TableLayoutCell: java.util.logging.Logger LOG> = $r2;

        return;
    }
}
