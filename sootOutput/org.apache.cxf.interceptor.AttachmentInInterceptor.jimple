public class org.apache.cxf.interceptor.AttachmentInInterceptor extends org.apache.cxf.phase.AbstractPhaseInterceptor
{
    private static final java.util.logging.Logger LOG;
    private static final java.util.List TYPES;

    public void <init>()
    {
        org.apache.cxf.interceptor.AttachmentInInterceptor r0;

        r0 := @this: org.apache.cxf.interceptor.AttachmentInInterceptor;

        specialinvoke r0.<org.apache.cxf.phase.AbstractPhaseInterceptor: void <init>(java.lang.String)>("receive");

        return;
    }

    public void handleMessage(org.apache.cxf.message.Message)
    {
        org.apache.cxf.interceptor.AttachmentInInterceptor r0;
        org.apache.cxf.message.Message r1;
        java.io.IOException $r9;
        java.util.logging.Logger $r8;
        org.apache.cxf.attachment.AttachmentDeserializer $r6;
        java.util.List $r5, $r7;
        org.apache.cxf.interceptor.Fault $r10;
        java.lang.Object $r2, $r3;
        java.lang.String r4;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.interceptor.AttachmentInInterceptor;

        r1 := @parameter0: org.apache.cxf.message.Message;

        $z0 = virtualinvoke r0.<org.apache.cxf.interceptor.AttachmentInInterceptor: boolean isGET(org.apache.cxf.message.Message)>(r1);

        if $z0 == 0 goto label1;

        $r8 = <org.apache.cxf.interceptor.AttachmentInInterceptor: java.util.logging.Logger LOG>;

        virtualinvoke $r8.<java.util.logging.Logger: void fine(java.lang.String)>("AttachmentInInterceptor skipped in HTTP GET method");

        return;

     label1:
        $r2 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljava/io/InputStream;");

        if $r2 != null goto label2;

        return;

     label2:
        $r3 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("Content-Type");

        r4 = (java.lang.String) $r3;

        $r5 = virtualinvoke r0.<org.apache.cxf.interceptor.AttachmentInInterceptor: java.util.List getSupportedTypes()>();

        $z1 = staticinvoke <org.apache.cxf.attachment.AttachmentUtil: boolean isTypeSupported(java.lang.String,java.util.List)>(r4, $r5);

        if $z1 == 0 goto label6;

        $r6 = new org.apache.cxf.attachment.AttachmentDeserializer;

        $r7 = virtualinvoke r0.<org.apache.cxf.interceptor.AttachmentInInterceptor: java.util.List getSupportedTypes()>();

        specialinvoke $r6.<org.apache.cxf.attachment.AttachmentDeserializer: void <init>(org.apache.cxf.message.Message,java.util.List)>(r1, $r7);

     label3:
        virtualinvoke $r6.<org.apache.cxf.attachment.AttachmentDeserializer: void initializeAttachments()>();

     label4:
        goto label6;

     label5:
        $r9 := @caughtexception;

        $r10 = new org.apache.cxf.interceptor.Fault;

        specialinvoke $r10.<org.apache.cxf.interceptor.Fault: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

     label6:
        return;

        catch java.io.IOException from label3 to label4 with label5;
    }

    public void handleFault(org.apache.cxf.message.Message)
    {
        org.apache.cxf.interceptor.AttachmentInInterceptor r0;
        org.apache.cxf.message.Message r1;

        r0 := @this: org.apache.cxf.interceptor.AttachmentInInterceptor;

        r1 := @parameter0: org.apache.cxf.message.Message;

        return;
    }

    protected java.util.List getSupportedTypes()
    {
        org.apache.cxf.interceptor.AttachmentInInterceptor r1;
        java.util.List $r0;

        r1 := @this: org.apache.cxf.interceptor.AttachmentInInterceptor;

        $r0 = <org.apache.cxf.interceptor.AttachmentInInterceptor: java.util.List TYPES>;

        return $r0;
    }

    static void <clinit>()
    {
        java.util.List $r1;
        java.util.logging.Logger $r0;

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/interceptor/AttachmentInInterceptor;");

        <org.apache.cxf.interceptor.AttachmentInInterceptor: java.util.logging.Logger LOG> = $r0;

        $r1 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>("multipart/related");

        <org.apache.cxf.interceptor.AttachmentInInterceptor: java.util.List TYPES> = $r1;

        return;
    }
}
