public class ucar.nc2.dataset.conv.CEDRICRadarConvention extends ucar.nc2.dataset.conv.CF1Convention
{

    public static boolean isMine(ucar.nc2.NetcdfFile)
    {
        ucar.nc2.Dimension $r1;
        ucar.nc2.Variable $r2;
        ucar.nc2.NetcdfFile r0;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        $r1 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension findDimension(java.lang.String)>("cedric_general_scaling_factor");

        $r2 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>("cedric_run_date");

        if $r2 == null goto label1;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public void <init>()
    {
        ucar.nc2.dataset.conv.CEDRICRadarConvention r0;

        r0 := @this: ucar.nc2.dataset.conv.CEDRICRadarConvention;

        specialinvoke r0.<ucar.nc2.dataset.conv.CF1Convention: void <init>()>();

        r0.<ucar.nc2.dataset.conv.CEDRICRadarConvention: java.lang.String conventionName> = "CEDRICRadar";

        return;
    }

    public void augmentDataset(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.lang.Float $r6, $r8;
        java.util.Date r22;
        long $l0, $l1;
        ucar.nc2.util.CancelTask r1;
        ucar.nc2.Variable $r2, $r3, $r4, $r9, $r10, $r11;
        java.lang.String $r12, $r13, $r18;
        double $d0, $d1, $d2;
        java.lang.Exception $r21;
        ucar.nc2.Attribute $r5, $r7;
        ucar.ma2.ArrayDouble$D1 $r19;
        ucar.nc2.dataset.conv.CEDRICRadarConvention r20;
        float f0, f1;
        java.lang.StringBuilder $r14, $r15, $r16, $r17;
        ucar.nc2.dataset.NetcdfDataset r0;

        r20 := @this: ucar.nc2.dataset.conv.CEDRICRadarConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: ucar.nc2.util.CancelTask;

        staticinvoke <ucar.nc2.ncml.NcMLReader: void wrapNcMLresource(ucar.nc2.dataset.NetcdfDataset,java.lang.String,ucar.nc2.util.CancelTask)>(r0, "resources/nj22/coords/CEDRICRadar.ncml", r1);

        $r2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("radar_latitude");

        $r3 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("radar_longitude");

        $d0 = virtualinvoke $r2.<ucar.nc2.Variable: double readScalarDouble()>();

        f0 = (float) $d0;

        $d1 = virtualinvoke $r3.<ucar.nc2.Variable: double readScalarDouble()>();

        f1 = (float) $d1;

        $r4 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("Projection");

        $r5 = new ucar.nc2.Attribute;

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f1);

        specialinvoke $r5.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("longitude_of_projection_origin", $r6);

        virtualinvoke $r4.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r5);

        $r7 = new ucar.nc2.Attribute;

        $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        specialinvoke $r7.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("latitude_of_projection_origin", $r8);

        virtualinvoke $r4.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r7);

        $r9 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("start_date");

        $r10 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("start_time");

        $r11 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("time");

        $r12 = virtualinvoke $r9.<ucar.nc2.Variable: java.lang.String readScalarString()>();

        $r13 = virtualinvoke $r10.<ucar.nc2.Variable: java.lang.String readScalarString()>();

        r22 = null;

     label1:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        r22 = staticinvoke <ucar.unidata.util.DateUtil: java.util.Date parse(java.lang.String)>($r18);

     label2:
        goto label4;

     label3:
        $r21 := @caughtexception;

     label4:
        $r19 = new ucar.ma2.ArrayDouble$D1;

        specialinvoke $r19.<ucar.ma2.ArrayDouble$D1: void <init>(int)>(1);

        $l0 = virtualinvoke r22.<java.util.Date: long getTime()>();

        $l1 = $l0 / 1000L;

        $d2 = (double) $l1;

        virtualinvoke $r19.<ucar.ma2.ArrayDouble$D1: void setDouble(int,double)>(0, $d2);

        virtualinvoke $r11.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r19, 0);

        specialinvoke r20.<ucar.nc2.dataset.conv.CF1Convention: void augmentDataset(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.util.CancelTask)>(r0, r1);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
