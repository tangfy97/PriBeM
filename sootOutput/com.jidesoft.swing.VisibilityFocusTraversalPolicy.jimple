public class com.jidesoft.swing.VisibilityFocusTraversalPolicy extends java.awt.FocusTraversalPolicy
{
    private java.awt.FocusTraversalPolicy _defaultPolicy;
    private java.util.Set _containers;

    public void <init>(java.awt.FocusTraversalPolicy)
    {
        com.jidesoft.swing.VisibilityFocusTraversalPolicy r0;
        java.awt.FocusTraversalPolicy r1;

        r0 := @this: com.jidesoft.swing.VisibilityFocusTraversalPolicy;

        r1 := @parameter0: java.awt.FocusTraversalPolicy;

        specialinvoke r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: void <init>(java.awt.FocusTraversalPolicy,java.awt.Container)>(r1, null);

        return;
    }

    public void <init>(java.awt.FocusTraversalPolicy, java.awt.Container)
    {
        com.jidesoft.swing.VisibilityFocusTraversalPolicy r0;
        java.util.HashSet $r3;
        java.awt.FocusTraversalPolicy r1;
        java.util.Set $r4;
        java.awt.Container r2;
        java.lang.IllegalArgumentException $r5;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.VisibilityFocusTraversalPolicy;

        r1 := @parameter0: java.awt.FocusTraversalPolicy;

        r2 := @parameter1: java.awt.Container;

        specialinvoke r0.<java.awt.FocusTraversalPolicy: void <init>()>();

        if r1 == null goto label1;

        $z0 = staticinvoke <com.jidesoft.utils.ReflectionUtils: boolean isSubClassOf(java.lang.Object,java.lang.String)>(r1, "LegacyGlueFocusTraversalPolicy");

        if $z0 == 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("VisibilityFocusTraversalPolicy can\'t work well with LegacyGlueFocusTraversalPolicy.");

        throw $r5;

     label1:
        r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.awt.FocusTraversalPolicy _defaultPolicy> = r1;

        if r2 == null goto label2;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.util.Set _containers> = $r3;

        $r4 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.util.Set _containers>;

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>(r2);

     label2:
        return;
    }

    public void addContainer(java.awt.Container)
    {
        com.jidesoft.swing.VisibilityFocusTraversalPolicy r0;
        java.util.HashSet $r4;
        java.util.Set $r1, $r3;
        java.awt.Container r2;

        r0 := @this: com.jidesoft.swing.VisibilityFocusTraversalPolicy;

        r2 := @parameter0: java.awt.Container;

        $r1 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.util.Set _containers>;

        if $r1 != null goto label1;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.util.Set _containers> = $r4;

     label1:
        $r3 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.util.Set _containers>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(r2);

        return;
    }

    public void removeContainer(java.awt.Container)
    {
        com.jidesoft.swing.VisibilityFocusTraversalPolicy r0;
        java.util.Set $r1, $r3;
        java.awt.Container r2;

        r0 := @this: com.jidesoft.swing.VisibilityFocusTraversalPolicy;

        r2 := @parameter0: java.awt.Container;

        $r1 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.util.Set _containers>;

        if $r1 == null goto label1;

        $r3 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.util.Set _containers>;

        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>(r2);

     label1:
        return;
    }

    public java.awt.Container[] getContainers()
    {
        java.lang.Object[] $r5;
        java.util.Set $r1, $r2, $r3;
        java.awt.Container[] $r4, $r6, $r7;
        com.jidesoft.swing.VisibilityFocusTraversalPolicy r0;
        int $i0;

        r0 := @this: com.jidesoft.swing.VisibilityFocusTraversalPolicy;

        $r1 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.util.Set _containers>;

        if $r1 != null goto label1;

        $r7 = newarray (java.awt.Container)[0];

        return $r7;

     label1:
        $r3 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.util.Set _containers>;

        $r2 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.util.Set _containers>;

        $i0 = interfaceinvoke $r2.<java.util.Set: int size()>();

        $r4 = newarray (java.awt.Container)[$i0];

        $r5 = interfaceinvoke $r3.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (java.awt.Container[]) $r5;

        return $r6;
    }

    public java.awt.FocusTraversalPolicy getDefaultPolicy()
    {
        com.jidesoft.swing.VisibilityFocusTraversalPolicy r0;
        java.awt.FocusTraversalPolicy $r1;

        r0 := @this: com.jidesoft.swing.VisibilityFocusTraversalPolicy;

        $r1 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.awt.FocusTraversalPolicy _defaultPolicy>;

        return $r1;
    }

    public java.awt.Component getComponentAfter(java.awt.Container, java.awt.Component)
    {
        com.jidesoft.swing.VisibilityFocusTraversalPolicy r0;
        boolean $z0, $z1, z2;
        java.awt.FocusTraversalPolicy $r1, $r4, $r15;
        java.util.Set $r5;
        java.awt.Component r3, r14;
        java.awt.Rectangle $r9, $r12, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.awt.Container r2, r8, $r10, $r11;
        java.util.Iterator $r6;
        java.lang.Object $r7;

        r0 := @this: com.jidesoft.swing.VisibilityFocusTraversalPolicy;

        r2 := @parameter0: java.awt.Container;

        r3 := @parameter1: java.awt.Component;

        $r1 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.awt.FocusTraversalPolicy _defaultPolicy>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r4 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.awt.FocusTraversalPolicy _defaultPolicy>;

        r14 = virtualinvoke $r4.<java.awt.FocusTraversalPolicy: java.awt.Component getComponentAfter(java.awt.Container,java.awt.Component)>(r2, r3);

        z2 = 1;

     label2:
        if r14 == null goto label7;

        if r3 == r14 goto label7;

        if z2 == 0 goto label7;

        z2 = 0;

        $r5 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.util.Set _containers>;

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.awt.Container) $r7;

        $z1 = virtualinvoke r8.<java.awt.Container: boolean isAncestorOf(java.awt.Component)>(r14);

        if $z1 == 0 goto label5;

        $r9 = virtualinvoke r8.<java.awt.Container: java.awt.Rectangle getBounds()>();

        $r10 = virtualinvoke r8.<java.awt.Container: java.awt.Container getParent()>();

        $r11 = virtualinvoke r14.<java.awt.Component: java.awt.Container getParent()>();

        $r12 = virtualinvoke r14.<java.awt.Component: java.awt.Rectangle getBounds()>();

        $r13 = staticinvoke <javax.swing.SwingUtilities: java.awt.Rectangle convertRectangle(java.awt.Component,java.awt.Rectangle,java.awt.Component)>($r11, $r12, $r10);

        $i3 = $r13.<java.awt.Rectangle: int x>;

        $i1 = $r9.<java.awt.Rectangle: int x>;

        $i0 = $r9.<java.awt.Rectangle: int width>;

        $i2 = $i1 + $i0;

        if $i3 >= $i2 goto label4;

        $i5 = $r13.<java.awt.Rectangle: int x>;

        $i4 = $r13.<java.awt.Rectangle: int width>;

        $i7 = $i5 + $i4;

        $i6 = $r9.<java.awt.Rectangle: int x>;

        if $i7 <= $i6 goto label4;

        $i11 = $r13.<java.awt.Rectangle: int y>;

        $i9 = $r9.<java.awt.Rectangle: int y>;

        $i8 = $r9.<java.awt.Rectangle: int height>;

        $i10 = $i9 + $i8;

        if $i11 >= $i10 goto label4;

        $i13 = $r13.<java.awt.Rectangle: int y>;

        $i12 = $r13.<java.awt.Rectangle: int height>;

        $i15 = $i13 + $i12;

        $i14 = $r9.<java.awt.Rectangle: int y>;

        if $i15 <= $i14 goto label4;

        return r14;

     label4:
        $r15 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.awt.FocusTraversalPolicy _defaultPolicy>;

        r14 = virtualinvoke $r15.<java.awt.FocusTraversalPolicy: java.awt.Component getComponentAfter(java.awt.Container,java.awt.Component)>(r2, r14);

        z2 = 1;

        goto label6;

     label5:
        goto label3;

     label6:
        goto label2;

     label7:
        return r14;
    }

    public java.awt.Component getComponentBefore(java.awt.Container, java.awt.Component)
    {
        com.jidesoft.swing.VisibilityFocusTraversalPolicy r0;
        boolean $z0, $z1, z2;
        java.awt.FocusTraversalPolicy $r1, $r4, $r15;
        java.util.Set $r5;
        java.awt.Component r3, r14;
        java.awt.Rectangle $r9, $r12, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.awt.Container r2, r8, $r10, $r11;
        java.util.Iterator $r6;
        java.lang.Object $r7;

        r0 := @this: com.jidesoft.swing.VisibilityFocusTraversalPolicy;

        r2 := @parameter0: java.awt.Container;

        r3 := @parameter1: java.awt.Component;

        $r1 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.awt.FocusTraversalPolicy _defaultPolicy>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r4 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.awt.FocusTraversalPolicy _defaultPolicy>;

        r14 = virtualinvoke $r4.<java.awt.FocusTraversalPolicy: java.awt.Component getComponentBefore(java.awt.Container,java.awt.Component)>(r2, r3);

        z2 = 1;

     label2:
        if r14 == null goto label7;

        if r3 == r14 goto label7;

        if z2 == 0 goto label7;

        z2 = 0;

        $r5 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.util.Set _containers>;

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.awt.Container) $r7;

        $z1 = virtualinvoke r8.<java.awt.Container: boolean isAncestorOf(java.awt.Component)>(r14);

        if $z1 == 0 goto label5;

        $r9 = virtualinvoke r8.<java.awt.Container: java.awt.Rectangle getBounds()>();

        $r10 = virtualinvoke r8.<java.awt.Container: java.awt.Container getParent()>();

        $r11 = virtualinvoke r14.<java.awt.Component: java.awt.Container getParent()>();

        $r12 = virtualinvoke r14.<java.awt.Component: java.awt.Rectangle getBounds()>();

        $r13 = staticinvoke <javax.swing.SwingUtilities: java.awt.Rectangle convertRectangle(java.awt.Component,java.awt.Rectangle,java.awt.Component)>($r11, $r12, $r10);

        $i3 = $r13.<java.awt.Rectangle: int x>;

        $i1 = $r9.<java.awt.Rectangle: int x>;

        $i0 = $r9.<java.awt.Rectangle: int width>;

        $i2 = $i1 + $i0;

        if $i3 >= $i2 goto label4;

        $i5 = $r13.<java.awt.Rectangle: int x>;

        $i4 = $r13.<java.awt.Rectangle: int width>;

        $i7 = $i5 + $i4;

        $i6 = $r9.<java.awt.Rectangle: int x>;

        if $i7 <= $i6 goto label4;

        $i11 = $r13.<java.awt.Rectangle: int y>;

        $i9 = $r9.<java.awt.Rectangle: int y>;

        $i8 = $r9.<java.awt.Rectangle: int height>;

        $i10 = $i9 + $i8;

        if $i11 >= $i10 goto label4;

        $i13 = $r13.<java.awt.Rectangle: int y>;

        $i12 = $r13.<java.awt.Rectangle: int height>;

        $i15 = $i13 + $i12;

        $i14 = $r9.<java.awt.Rectangle: int y>;

        if $i15 <= $i14 goto label4;

        return r14;

     label4:
        $r15 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.awt.FocusTraversalPolicy _defaultPolicy>;

        r14 = virtualinvoke $r15.<java.awt.FocusTraversalPolicy: java.awt.Component getComponentBefore(java.awt.Container,java.awt.Component)>(r2, r14);

        z2 = 1;

        goto label6;

     label5:
        goto label3;

     label6:
        goto label2;

     label7:
        return r14;
    }

    public java.awt.Component getFirstComponent(java.awt.Container)
    {
        com.jidesoft.swing.VisibilityFocusTraversalPolicy r0;
        boolean $z0, z1, $z2;
        java.awt.FocusTraversalPolicy $r1, $r3, $r15;
        java.util.Set $r5;
        java.awt.Component $r4, r14;
        java.awt.Rectangle $r9, $r12, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.awt.Container r2, r8, $r10, $r11;
        java.util.Iterator $r6;
        java.lang.Object $r7;

        r0 := @this: com.jidesoft.swing.VisibilityFocusTraversalPolicy;

        r2 := @parameter0: java.awt.Container;

        $r1 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.awt.FocusTraversalPolicy _defaultPolicy>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.awt.FocusTraversalPolicy _defaultPolicy>;

        $r4 = virtualinvoke $r3.<java.awt.FocusTraversalPolicy: java.awt.Component getFirstComponent(java.awt.Container)>(r2);

        r14 = $r4;

     label2:
        z1 = 0;

        $r5 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.util.Set _containers>;

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.awt.Container) $r7;

        $z0 = virtualinvoke r8.<java.awt.Container: boolean isAncestorOf(java.awt.Component)>(r14);

        if $z0 == 0 goto label5;

        $r9 = virtualinvoke r8.<java.awt.Container: java.awt.Rectangle getBounds()>();

        $r10 = virtualinvoke r8.<java.awt.Container: java.awt.Container getParent()>();

        $r11 = virtualinvoke r14.<java.awt.Component: java.awt.Container getParent()>();

        $r12 = virtualinvoke r14.<java.awt.Component: java.awt.Rectangle getBounds()>();

        $r13 = staticinvoke <javax.swing.SwingUtilities: java.awt.Rectangle convertRectangle(java.awt.Component,java.awt.Rectangle,java.awt.Component)>($r11, $r12, $r10);

        $i3 = $r13.<java.awt.Rectangle: int x>;

        $i1 = $r9.<java.awt.Rectangle: int x>;

        $i0 = $r9.<java.awt.Rectangle: int width>;

        $i2 = $i1 + $i0;

        if $i3 >= $i2 goto label4;

        $i5 = $r13.<java.awt.Rectangle: int x>;

        $i4 = $r13.<java.awt.Rectangle: int width>;

        $i7 = $i5 + $i4;

        $i6 = $r9.<java.awt.Rectangle: int x>;

        if $i7 <= $i6 goto label4;

        $i11 = $r13.<java.awt.Rectangle: int y>;

        $i9 = $r9.<java.awt.Rectangle: int y>;

        $i8 = $r9.<java.awt.Rectangle: int height>;

        $i10 = $i9 + $i8;

        if $i11 >= $i10 goto label4;

        $i13 = $r13.<java.awt.Rectangle: int y>;

        $i12 = $r13.<java.awt.Rectangle: int height>;

        $i15 = $i13 + $i12;

        $i14 = $r9.<java.awt.Rectangle: int y>;

        if $i15 <= $i14 goto label4;

        return r14;

     label4:
        $r15 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.awt.FocusTraversalPolicy _defaultPolicy>;

        r14 = virtualinvoke $r15.<java.awt.FocusTraversalPolicy: java.awt.Component getComponentAfter(java.awt.Container,java.awt.Component)>(r2, r14);

        z1 = 1;

        goto label6;

     label5:
        goto label3;

     label6:
        if r14 == null goto label7;

        if $r4 == r14 goto label7;

        if z1 != 0 goto label2;

     label7:
        return r14;
    }

    public java.awt.Component getLastComponent(java.awt.Container)
    {
        com.jidesoft.swing.VisibilityFocusTraversalPolicy r0;
        boolean $z0, z1, $z2;
        java.awt.FocusTraversalPolicy $r1, $r3, $r15;
        java.util.Set $r5;
        java.awt.Component $r4, r14;
        java.awt.Rectangle $r9, $r12, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.awt.Container r2, r8, $r10, $r11;
        java.util.Iterator $r6;
        java.lang.Object $r7;

        r0 := @this: com.jidesoft.swing.VisibilityFocusTraversalPolicy;

        r2 := @parameter0: java.awt.Container;

        $r1 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.awt.FocusTraversalPolicy _defaultPolicy>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.awt.FocusTraversalPolicy _defaultPolicy>;

        $r4 = virtualinvoke $r3.<java.awt.FocusTraversalPolicy: java.awt.Component getLastComponent(java.awt.Container)>(r2);

        r14 = $r4;

     label2:
        z1 = 0;

        $r5 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.util.Set _containers>;

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.awt.Container) $r7;

        $z0 = virtualinvoke r8.<java.awt.Container: boolean isAncestorOf(java.awt.Component)>(r14);

        if $z0 == 0 goto label5;

        $r9 = virtualinvoke r8.<java.awt.Container: java.awt.Rectangle getBounds()>();

        $r10 = virtualinvoke r8.<java.awt.Container: java.awt.Container getParent()>();

        $r11 = virtualinvoke r14.<java.awt.Component: java.awt.Container getParent()>();

        $r12 = virtualinvoke r14.<java.awt.Component: java.awt.Rectangle getBounds()>();

        $r13 = staticinvoke <javax.swing.SwingUtilities: java.awt.Rectangle convertRectangle(java.awt.Component,java.awt.Rectangle,java.awt.Component)>($r11, $r12, $r10);

        $i3 = $r13.<java.awt.Rectangle: int x>;

        $i1 = $r9.<java.awt.Rectangle: int x>;

        $i0 = $r9.<java.awt.Rectangle: int width>;

        $i2 = $i1 + $i0;

        if $i3 >= $i2 goto label4;

        $i5 = $r13.<java.awt.Rectangle: int x>;

        $i4 = $r13.<java.awt.Rectangle: int width>;

        $i7 = $i5 + $i4;

        $i6 = $r9.<java.awt.Rectangle: int x>;

        if $i7 <= $i6 goto label4;

        $i11 = $r13.<java.awt.Rectangle: int y>;

        $i9 = $r9.<java.awt.Rectangle: int y>;

        $i8 = $r9.<java.awt.Rectangle: int height>;

        $i10 = $i9 + $i8;

        if $i11 >= $i10 goto label4;

        $i13 = $r13.<java.awt.Rectangle: int y>;

        $i12 = $r13.<java.awt.Rectangle: int height>;

        $i15 = $i13 + $i12;

        $i14 = $r9.<java.awt.Rectangle: int y>;

        if $i15 <= $i14 goto label4;

        return r14;

     label4:
        $r15 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.awt.FocusTraversalPolicy _defaultPolicy>;

        r14 = virtualinvoke $r15.<java.awt.FocusTraversalPolicy: java.awt.Component getComponentBefore(java.awt.Container,java.awt.Component)>(r2, r14);

        z1 = 1;

        goto label6;

     label5:
        goto label3;

     label6:
        if r14 == null goto label7;

        if $r4 == r14 goto label7;

        if z1 != 0 goto label2;

     label7:
        return r14;
    }

    public java.awt.Component getDefaultComponent(java.awt.Container)
    {
        com.jidesoft.swing.VisibilityFocusTraversalPolicy r0;
        boolean $z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, $z9, $z10;
        java.awt.FocusTraversalPolicy $r1, $r3, $r5, $r6, $r16, $r17, $r19, $r21, $r24, $r25, $r28, $r31, $r33;
        java.util.Set $r29;
        java.awt.Component $r4, r15, r27, r32;
        java.lang.Throwable $r23;
        java.awt.Rectangle $r10, $r13, $r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        javax.swing.SortingFocusTraversalPolicy $r7, $r18, $r20, $r22, $r26;
        java.awt.Container r2, r9, $r11, $r12;
        java.util.Iterator $r30;
        java.lang.Object $r8;

        r0 := @this: com.jidesoft.swing.VisibilityFocusTraversalPolicy;

        r2 := @parameter0: java.awt.Container;

        $r1 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.awt.FocusTraversalPolicy _defaultPolicy>;

        if $r1 != null goto label01;

        return null;

     label01:
        $r3 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.awt.FocusTraversalPolicy _defaultPolicy>;

        $r4 = virtualinvoke $r3.<java.awt.FocusTraversalPolicy: java.awt.Component getDefaultComponent(java.awt.Container)>(r2);

        r27 = $r4;

        $r5 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.awt.FocusTraversalPolicy _defaultPolicy>;

        $z0 = $r5 instanceof javax.swing.SortingFocusTraversalPolicy;

        if $z0 == 0 goto label02;

        $r21 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.awt.FocusTraversalPolicy _defaultPolicy>;

        $r22 = (javax.swing.SortingFocusTraversalPolicy) $r21;

        $z4 = virtualinvoke $r22.<javax.swing.SortingFocusTraversalPolicy: boolean getImplicitDownCycleTraversal()>();

        if $z4 == 0 goto label02;

        $z6 = 1;

        goto label03;

     label02:
        $z6 = 0;

     label03:
        z1 = $z6;

        $r28 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.awt.FocusTraversalPolicy _defaultPolicy>;

        $z7 = $r28 instanceof javax.swing.SortingFocusTraversalPolicy;

        if $z7 == 0 goto label04;

        $r19 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.awt.FocusTraversalPolicy _defaultPolicy>;

        $r20 = (javax.swing.SortingFocusTraversalPolicy) $r19;

        virtualinvoke $r20.<javax.swing.SortingFocusTraversalPolicy: void setImplicitDownCycleTraversal(boolean)>(0);

     label04:
        z8 = 0;

        $r29 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.util.Set _containers>;

        $r30 = interfaceinvoke $r29.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z9 = interfaceinvoke $r30.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label10;

        $r8 = interfaceinvoke $r30.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.awt.Container) $r8;

        $z2 = virtualinvoke r9.<java.awt.Container: boolean isAncestorOf(java.awt.Component)>(r27);

        if $z2 == 0 goto label09;

        $r10 = virtualinvoke r9.<java.awt.Container: java.awt.Rectangle getBounds()>();

        $r11 = virtualinvoke r9.<java.awt.Container: java.awt.Container getParent()>();

        $r12 = virtualinvoke r27.<java.awt.Component: java.awt.Container getParent()>();

        $r13 = virtualinvoke r27.<java.awt.Component: java.awt.Rectangle getBounds()>();

        $r14 = staticinvoke <javax.swing.SwingUtilities: java.awt.Rectangle convertRectangle(java.awt.Component,java.awt.Rectangle,java.awt.Component)>($r12, $r13, $r11);

        $i3 = $r14.<java.awt.Rectangle: int x>;

        $i1 = $r10.<java.awt.Rectangle: int x>;

        $i0 = $r10.<java.awt.Rectangle: int width>;

        $i2 = $i1 + $i0;

        if $i3 >= $i2 goto label08;

        $i5 = $r14.<java.awt.Rectangle: int x>;

        $i4 = $r14.<java.awt.Rectangle: int width>;

        $i7 = $i5 + $i4;

        $i6 = $r10.<java.awt.Rectangle: int x>;

        if $i7 <= $i6 goto label08;

        $i11 = $r14.<java.awt.Rectangle: int y>;

        $i9 = $r10.<java.awt.Rectangle: int y>;

        $i8 = $r10.<java.awt.Rectangle: int height>;

        $i10 = $i9 + $i8;

        if $i11 >= $i10 goto label08;

        $i13 = $r14.<java.awt.Rectangle: int y>;

        $i12 = $r14.<java.awt.Rectangle: int height>;

        $i15 = $i13 + $i12;

        $i14 = $r10.<java.awt.Rectangle: int y>;

        if $i15 <= $i14 goto label08;

        r15 = r27;

     label06:
        $r16 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.awt.FocusTraversalPolicy _defaultPolicy>;

        $z3 = $r16 instanceof javax.swing.SortingFocusTraversalPolicy;

        if $z3 == 0 goto label07;

        $r17 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.awt.FocusTraversalPolicy _defaultPolicy>;

        $r18 = (javax.swing.SortingFocusTraversalPolicy) $r17;

        virtualinvoke $r18.<javax.swing.SortingFocusTraversalPolicy: void setImplicitDownCycleTraversal(boolean)>(z1);

     label07:
        return r15;

     label08:
        $r31 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.awt.FocusTraversalPolicy _defaultPolicy>;

        r27 = virtualinvoke $r31.<java.awt.FocusTraversalPolicy: java.awt.Component getComponentAfter(java.awt.Container,java.awt.Component)>(r2, r27);

        z8 = 1;

        goto label10;

     label09:
        goto label05;

     label10:
        if r27 == null goto label11;

        if $r4 == r27 goto label11;

        if z8 != 0 goto label04;

     label11:
        r32 = r27;

     label12:
        $r33 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.awt.FocusTraversalPolicy _defaultPolicy>;

        $z10 = $r33 instanceof javax.swing.SortingFocusTraversalPolicy;

        if $z10 == 0 goto label13;

        $r6 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.awt.FocusTraversalPolicy _defaultPolicy>;

        $r7 = (javax.swing.SortingFocusTraversalPolicy) $r6;

        virtualinvoke $r7.<javax.swing.SortingFocusTraversalPolicy: void setImplicitDownCycleTraversal(boolean)>(z1);

     label13:
        return r32;

     label14:
        $r23 := @caughtexception;

     label15:
        $r24 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.awt.FocusTraversalPolicy _defaultPolicy>;

        $z5 = $r24 instanceof javax.swing.SortingFocusTraversalPolicy;

        if $z5 == 0 goto label16;

        $r25 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.awt.FocusTraversalPolicy _defaultPolicy>;

        $r26 = (javax.swing.SortingFocusTraversalPolicy) $r25;

        virtualinvoke $r26.<javax.swing.SortingFocusTraversalPolicy: void setImplicitDownCycleTraversal(boolean)>(z1);

     label16:
        throw $r23;

        catch java.lang.Throwable from label04 to label06 with label14;
        catch java.lang.Throwable from label08 to label12 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    public java.awt.Component getInitialComponent(java.awt.Window)
    {
        com.jidesoft.swing.VisibilityFocusTraversalPolicy r0;
        java.awt.FocusTraversalPolicy $r1, $r3;
        java.awt.Window r2;
        java.awt.Component $r4;

        r0 := @this: com.jidesoft.swing.VisibilityFocusTraversalPolicy;

        r2 := @parameter0: java.awt.Window;

        $r1 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.awt.FocusTraversalPolicy _defaultPolicy>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = r0.<com.jidesoft.swing.VisibilityFocusTraversalPolicy: java.awt.FocusTraversalPolicy _defaultPolicy>;

        $r4 = virtualinvoke $r3.<java.awt.FocusTraversalPolicy: java.awt.Component getInitialComponent(java.awt.Window)>(r2);

        return $r4;
    }
}
