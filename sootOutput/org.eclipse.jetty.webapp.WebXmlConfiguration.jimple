public class org.eclipse.jetty.webapp.WebXmlConfiguration extends org.eclipse.jetty.webapp.AbstractConfiguration
{
    private static final org.eclipse.jetty.util.log.Logger LOG;

    public void <init>()
    {
        org.eclipse.jetty.webapp.WebXmlConfiguration r0;

        r0 := @this: org.eclipse.jetty.webapp.WebXmlConfiguration;

        specialinvoke r0.<org.eclipse.jetty.webapp.AbstractConfiguration: void <init>()>();

        return;
    }

    public void preConfigure(org.eclipse.jetty.webapp.WebAppContext) throws java.lang.Exception
    {
        org.eclipse.jetty.webapp.WebAppContext r0;
        org.eclipse.jetty.webapp.MetaData $r8, $r9, $r11, $r14, $r17;
        org.eclipse.jetty.webapp.WebXmlConfiguration r2;
        org.eclipse.jetty.webapp.WebDescriptor $r12, $r15;
        org.eclipse.jetty.server.handler.ContextHandler$Context $r10, $r13;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r1, r6;
        boolean $z0;
        java.util.Iterator $r4;
        java.util.List $r3;
        org.eclipse.jetty.util.resource.Resource $r7, $r16, r18, $r19, r20;
        java.lang.Object $r5;

        r2 := @this: org.eclipse.jetty.webapp.WebXmlConfiguration;

        r0 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: java.lang.String getDefaultsDescriptor()>();

        if $r1 == null goto label2;

        $i3 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i3 <= 0 goto label2;

        $r16 = staticinvoke <org.eclipse.jetty.util.resource.Resource: org.eclipse.jetty.util.resource.Resource newSystemResource(java.lang.String)>($r1);

        r18 = $r16;

        if $r16 != null goto label1;

        r18 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.util.resource.Resource newResource(java.lang.String)>($r1);

     label1:
        $r17 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        virtualinvoke $r17.<org.eclipse.jetty.webapp.MetaData: void setDefaults(org.eclipse.jetty.util.resource.Resource)>(r18);

     label2:
        $r19 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebXmlConfiguration: org.eclipse.jetty.util.resource.Resource findWebXml(org.eclipse.jetty.webapp.WebAppContext)>(r0);

        if $r19 == null goto label3;

        $r9 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        virtualinvoke $r9.<org.eclipse.jetty.webapp.MetaData: void setWebXml(org.eclipse.jetty.util.resource.Resource)>($r19);

        $r10 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.handler.ContextHandler$Context getServletContext()>();

        $r11 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r12 = virtualinvoke $r11.<org.eclipse.jetty.webapp.MetaData: org.eclipse.jetty.webapp.WebDescriptor getWebXml()>();

        $i1 = virtualinvoke $r12.<org.eclipse.jetty.webapp.WebDescriptor: int getMajorVersion()>();

        virtualinvoke $r10.<org.eclipse.jetty.server.handler.ContextHandler$Context: void setEffectiveMajorVersion(int)>($i1);

        $r13 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.handler.ContextHandler$Context getServletContext()>();

        $r14 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r15 = virtualinvoke $r14.<org.eclipse.jetty.webapp.MetaData: org.eclipse.jetty.webapp.WebDescriptor getWebXml()>();

        $i2 = virtualinvoke $r15.<org.eclipse.jetty.webapp.WebDescriptor: int getMinorVersion()>();

        virtualinvoke $r13.<org.eclipse.jetty.server.handler.ContextHandler$Context: void setEffectiveMinorVersion(int)>($i2);

     label3:
        $r3 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: java.util.List getOverrideDescriptors()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        if r6 == null goto label6;

        $i0 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i0 <= 0 goto label6;

        $r7 = staticinvoke <org.eclipse.jetty.util.resource.Resource: org.eclipse.jetty.util.resource.Resource newSystemResource(java.lang.String)>(r6);

        r20 = $r7;

        if $r7 != null goto label5;

        r20 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.util.resource.Resource newResource(java.lang.String)>(r6);

     label5:
        $r8 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        virtualinvoke $r8.<org.eclipse.jetty.webapp.MetaData: void addOverride(org.eclipse.jetty.util.resource.Resource)>(r20);

     label6:
        goto label4;

     label7:
        return;
    }

    public void configure(org.eclipse.jetty.webapp.WebAppContext) throws java.lang.Exception
    {
        org.eclipse.jetty.webapp.MetaData $r1;
        org.eclipse.jetty.webapp.WebAppContext r0;
        org.eclipse.jetty.webapp.WebXmlConfiguration r5;
        java.lang.Object[] $r3;
        org.eclipse.jetty.webapp.StandardDescriptorProcessor $r2;
        org.eclipse.jetty.util.log.Logger $r4;
        boolean $z0;

        r5 := @this: org.eclipse.jetty.webapp.WebXmlConfiguration;

        r0 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: boolean isStarted()>();

        if $z0 == 0 goto label1;

        $r4 = <org.eclipse.jetty.webapp.WebXmlConfiguration: org.eclipse.jetty.util.log.Logger LOG>;

        $r3 = newarray (java.lang.Object)[0];

        interfaceinvoke $r4.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("Cannot configure webapp after it is started", $r3);

        return;

     label1:
        $r1 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r2 = new org.eclipse.jetty.webapp.StandardDescriptorProcessor;

        specialinvoke $r2.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: void <init>()>();

        virtualinvoke $r1.<org.eclipse.jetty.webapp.MetaData: void addDescriptorProcessor(org.eclipse.jetty.webapp.DescriptorProcessor)>($r2);

        return;
    }

    protected org.eclipse.jetty.util.resource.Resource findWebXml(org.eclipse.jetty.webapp.WebAppContext) throws java.io.IOException, java.net.MalformedURLException
    {
        org.eclipse.jetty.webapp.WebAppContext r0;
        java.lang.Object[] $r11;
        org.eclipse.jetty.webapp.WebXmlConfiguration r13;
        java.lang.String $r1, $r7, $r10;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.eclipse.jetty.util.resource.Resource $r2, $r12, $r14;
        java.lang.StringBuilder $r4, $r6, $r8, $r9;
        org.eclipse.jetty.util.log.Logger $r3, $r5;

        r13 := @this: org.eclipse.jetty.webapp.WebXmlConfiguration;

        r0 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: java.lang.String getDescriptor()>();

        if $r1 == null goto label1;

        $r12 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.util.resource.Resource newResource(java.lang.String)>($r1);

        $z3 = virtualinvoke $r12.<org.eclipse.jetty.util.resource.Resource: boolean exists()>();

        if $z3 == 0 goto label1;

        $z4 = virtualinvoke $r12.<org.eclipse.jetty.util.resource.Resource: boolean isDirectory()>();

        if $z4 != 0 goto label1;

        return $r12;

     label1:
        $r14 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.util.resource.Resource getWebInf()>();

        if $r14 == null goto label3;

        $z0 = virtualinvoke $r14.<org.eclipse.jetty.util.resource.Resource: boolean isDirectory()>();

        if $z0 == 0 goto label3;

        $r2 = virtualinvoke $r14.<org.eclipse.jetty.util.resource.Resource: org.eclipse.jetty.util.resource.Resource addPath(java.lang.String)>("web.xml");

        $z1 = virtualinvoke $r2.<org.eclipse.jetty.util.resource.Resource: boolean exists()>();

        if $z1 == 0 goto label2;

        return $r2;

     label2:
        $r3 = <org.eclipse.jetty.webapp.WebXmlConfiguration: org.eclipse.jetty.util.log.Logger LOG>;

        $z2 = interfaceinvoke $r3.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z2 == 0 goto label3;

        $r5 = <org.eclipse.jetty.webapp.WebXmlConfiguration: org.eclipse.jetty.util.log.Logger LOG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No WEB-INF/web.xml in ");

        $r7 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: java.lang.String getWar()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Serving files and default/dynamic servlets only");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = newarray (java.lang.Object)[0];

        interfaceinvoke $r5.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r10, $r11);

     label3:
        return null;
    }

    public void deconfigure(org.eclipse.jetty.webapp.WebAppContext) throws java.lang.Exception
    {
        org.eclipse.jetty.webapp.WebAppContext r0;
        org.eclipse.jetty.webapp.WebXmlConfiguration r5;
        org.eclipse.jetty.servlet.ServletHandler $r1;
        org.eclipse.jetty.server.handler.ErrorHandler $r2, $r3;
        org.eclipse.jetty.servlet.ErrorPageErrorHandler $r4;
        boolean $z0;

        r5 := @this: org.eclipse.jetty.webapp.WebXmlConfiguration;

        r0 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.servlet.ServletHandler getServletHandler()>();

        virtualinvoke $r1.<org.eclipse.jetty.servlet.ServletHandler: void setFilters(org.eclipse.jetty.servlet.FilterHolder[])>(null);

        virtualinvoke $r1.<org.eclipse.jetty.servlet.ServletHandler: void setFilterMappings(org.eclipse.jetty.servlet.FilterMapping[])>(null);

        virtualinvoke $r1.<org.eclipse.jetty.servlet.ServletHandler: void setServlets(org.eclipse.jetty.servlet.ServletHolder[])>(null);

        virtualinvoke $r1.<org.eclipse.jetty.servlet.ServletHandler: void setServletMappings(org.eclipse.jetty.servlet.ServletMapping[])>(null);

        virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: void setEventListeners(java.util.EventListener[])>(null);

        virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: void setWelcomeFiles(java.lang.String[])>(null);

        $r2 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.handler.ErrorHandler getErrorHandler()>();

        $z0 = $r2 instanceof org.eclipse.jetty.servlet.ErrorPageErrorHandler;

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.handler.ErrorHandler getErrorHandler()>();

        $r4 = (org.eclipse.jetty.servlet.ErrorPageErrorHandler) $r3;

        virtualinvoke $r4.<org.eclipse.jetty.servlet.ErrorPageErrorHandler: void setErrorPages(java.util.Map)>(null);

     label1:
        return;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/webapp/WebXmlConfiguration;");

        <org.eclipse.jetty.webapp.WebXmlConfiguration: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
