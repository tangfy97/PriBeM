public class org.apache.xalan.lib.Extensions extends java.lang.Object
{
    static java.lang.Class class$java$util$Hashtable;
    static java.lang.Class class$java$lang$String;

    private void <init>()
    {
        org.apache.xalan.lib.Extensions r0;

        r0 := @this: org.apache.xalan.lib.Extensions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.xpath.NodeSet nodeset(org.apache.xalan.extensions.ExpressionContext, java.lang.Object)
    {
        org.w3c.dom.Text $r14;
        java.lang.Double $r2;
        org.apache.xalan.extensions.ExpressionContext r9;
        org.w3c.dom.Document $r13;
        java.lang.Boolean $r4;
        java.lang.String r10;
        org.apache.xpath.NodeSet $r5, $r16;
        boolean $z0, $z1, $z2, $z3, $z4;
        double $d0;
        org.apache.xml.utils.WrappedRuntimeException $r8;
        org.apache.xpath.objects.XNumber $r1;
        org.apache.xpath.objects.XBoolean $r3;
        org.w3c.dom.DocumentFragment $r15;
        org.w3c.dom.traversal.NodeIterator $r6;
        javax.xml.parsers.ParserConfigurationException $r7;
        javax.xml.parsers.DocumentBuilder $r12;
        java.lang.Object r0;
        javax.xml.parsers.DocumentBuilderFactory $r11;

        r9 := @parameter0: org.apache.xalan.extensions.ExpressionContext;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof org.w3c.dom.traversal.NodeIterator;

        if $z0 == 0 goto label1;

        $r5 = new org.apache.xpath.NodeSet;

        $r6 = (org.w3c.dom.traversal.NodeIterator) r0;

        specialinvoke $r5.<org.apache.xpath.NodeSet: void <init>(org.w3c.dom.traversal.NodeIterator)>($r6);

        return $r5;

     label1:
        $z1 = r0 instanceof java.lang.String;

        if $z1 == 0 goto label2;

        r10 = (java.lang.String) r0;

        goto label5;

     label2:
        $z2 = r0 instanceof java.lang.Boolean;

        if $z2 == 0 goto label3;

        $r3 = new org.apache.xpath.objects.XBoolean;

        $r4 = (java.lang.Boolean) r0;

        $z4 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        specialinvoke $r3.<org.apache.xpath.objects.XBoolean: void <init>(boolean)>($z4);

        r10 = virtualinvoke $r3.<org.apache.xpath.objects.XBoolean: java.lang.String str()>();

        goto label5;

     label3:
        $z3 = r0 instanceof java.lang.Double;

        if $z3 == 0 goto label4;

        $r1 = new org.apache.xpath.objects.XNumber;

        $r2 = (java.lang.Double) r0;

        $d0 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        specialinvoke $r1.<org.apache.xpath.objects.XNumber: void <init>(double)>($d0);

        r10 = virtualinvoke $r1.<org.apache.xpath.objects.XNumber: java.lang.String str()>();

        goto label5;

     label4:
        r10 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

     label5:
        $r11 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        $r12 = virtualinvoke $r11.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r13 = virtualinvoke $r12.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document newDocument()>();

        $r14 = interfaceinvoke $r13.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>(r10);

        $r15 = interfaceinvoke $r13.<org.w3c.dom.Document: org.w3c.dom.DocumentFragment createDocumentFragment()>();

        interfaceinvoke $r15.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r14);

        $r16 = new org.apache.xpath.NodeSet;

        specialinvoke $r16.<org.apache.xpath.NodeSet: void <init>(org.w3c.dom.Node)>($r15);

        return $r16;

     label6:
        $r7 := @caughtexception;

        $r8 = new org.apache.xml.utils.WrappedRuntimeException;

        specialinvoke $r8.<org.apache.xml.utils.WrappedRuntimeException: void <init>(java.lang.Exception)>($r7);

        throw $r8;

        catch javax.xml.parsers.ParserConfigurationException from label5 to label6 with label6;
    }

    public static org.w3c.dom.NodeList intersection(org.w3c.dom.NodeList, org.w3c.dom.NodeList)
    {
        org.w3c.dom.NodeList r0, r1, $r2;

        r0 := @parameter0: org.w3c.dom.NodeList;

        r1 := @parameter1: org.w3c.dom.NodeList;

        $r2 = staticinvoke <org.apache.xalan.lib.ExsltSets: org.w3c.dom.NodeList intersection(org.w3c.dom.NodeList,org.w3c.dom.NodeList)>(r0, r1);

        return $r2;
    }

    public static org.w3c.dom.NodeList difference(org.w3c.dom.NodeList, org.w3c.dom.NodeList)
    {
        org.w3c.dom.NodeList r0, r1, $r2;

        r0 := @parameter0: org.w3c.dom.NodeList;

        r1 := @parameter1: org.w3c.dom.NodeList;

        $r2 = staticinvoke <org.apache.xalan.lib.ExsltSets: org.w3c.dom.NodeList difference(org.w3c.dom.NodeList,org.w3c.dom.NodeList)>(r0, r1);

        return $r2;
    }

    public static org.w3c.dom.NodeList distinct(org.w3c.dom.NodeList)
    {
        org.w3c.dom.NodeList r0, $r1;

        r0 := @parameter0: org.w3c.dom.NodeList;

        $r1 = staticinvoke <org.apache.xalan.lib.ExsltSets: org.w3c.dom.NodeList distinct(org.w3c.dom.NodeList)>(r0);

        return $r1;
    }

    public static boolean hasSameNodes(org.w3c.dom.NodeList, org.w3c.dom.NodeList)
    {
        org.w3c.dom.NodeList r1, r3;
        org.w3c.dom.Node $r4;
        int $i0, $i1, $i2, i3;
        org.apache.xpath.NodeSet $r0, $r2;
        boolean $z0;

        r1 := @parameter0: org.w3c.dom.NodeList;

        r3 := @parameter1: org.w3c.dom.NodeList;

        $r0 = new org.apache.xpath.NodeSet;

        specialinvoke $r0.<org.apache.xpath.NodeSet: void <init>(org.w3c.dom.NodeList)>(r1);

        $r2 = new org.apache.xpath.NodeSet;

        specialinvoke $r2.<org.apache.xpath.NodeSet: void <init>(org.w3c.dom.NodeList)>(r3);

        $i0 = virtualinvoke $r0.<org.apache.xpath.NodeSet: int getLength()>();

        $i1 = virtualinvoke $r2.<org.apache.xpath.NodeSet: int getLength()>();

        if $i0 == $i1 goto label1;

        return 0;

     label1:
        i3 = 0;

        goto label4;

     label2:
        $r4 = virtualinvoke $r0.<org.apache.xpath.NodeSet: org.w3c.dom.Node elementAt(int)>(i3);

        $z0 = virtualinvoke $r2.<org.apache.xpath.NodeSet: boolean contains(org.w3c.dom.Node)>($r4);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        i3 = i3 + 1;

     label4:
        $i2 = virtualinvoke $r0.<org.apache.xpath.NodeSet: int getLength()>();

        if i3 < $i2 goto label2;

        return 1;
    }

    public static org.apache.xpath.objects.XObject evaluate(org.apache.xalan.extensions.ExpressionContext, java.lang.String) throws org.xml.sax.SAXNotSupportedException
    {
        org.apache.xpath.objects.XObject $r2;
        java.lang.String r1;
        org.apache.xalan.extensions.ExpressionContext r0;

        r0 := @parameter0: org.apache.xalan.extensions.ExpressionContext;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.apache.xalan.lib.ExsltDynamic: org.apache.xpath.objects.XObject evaluate(org.apache.xalan.extensions.ExpressionContext,java.lang.String)>(r0, r1);

        return $r2;
    }

    public static org.w3c.dom.NodeList tokenize(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r7;
        org.w3c.dom.Text $r6;
        org.w3c.dom.Document $r0;
        java.util.StringTokenizer $r1;
        java.lang.String r2, r3, $r5;
        org.apache.xpath.NodeSet $r4;
        boolean $z0;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r0 = staticinvoke <org.apache.xalan.lib.Extensions$DocumentHolder: org.w3c.dom.Document access$000()>();

        $r1 = new java.util.StringTokenizer;

        specialinvoke $r1.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r2, r3);

        $r4 = new org.apache.xpath.NodeSet;

        specialinvoke $r4.<org.apache.xpath.NodeSet: void <init>()>();

        entermonitor $r0;

     label1:
        goto label3;

     label2:
        $r5 = virtualinvoke $r1.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r6 = interfaceinvoke $r0.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r5);

        virtualinvoke $r4.<org.apache.xpath.NodeSet: void addNode(org.w3c.dom.Node)>($r6);

     label3:
        $z0 = virtualinvoke $r1.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 != 0 goto label2;

        exitmonitor $r0;

        goto label5;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r0;

        throw $r7;

     label5:
        return $r4;

        catch java.lang.Throwable from label1 to label4 with label4;
    }

    public static org.w3c.dom.NodeList tokenize(java.lang.String)
    {
        java.lang.String r0;
        org.w3c.dom.NodeList $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.xalan.lib.Extensions: org.w3c.dom.NodeList tokenize(java.lang.String,java.lang.String)>(r0, " \t\n\r");

        return $r1;
    }

    public static org.w3c.dom.Node checkEnvironment(org.apache.xalan.extensions.ExpressionContext)
    {
        org.apache.xml.utils.WrappedRuntimeException $r9, $r11;
        org.apache.xalan.extensions.ExpressionContext r3;
        java.lang.Exception $r8;
        org.w3c.dom.Element $r7;
        javax.xml.parsers.ParserConfigurationException $r10;
        org.w3c.dom.Document $r2;
        javax.xml.parsers.DocumentBuilder $r1;
        org.w3c.dom.Node $r4;
        javax.xml.parsers.DocumentBuilderFactory $r0;
        org.apache.xalan.xslt.EnvironmentCheck $r5;
        java.util.Hashtable $r6;

        r3 := @parameter0: org.apache.xalan.extensions.ExpressionContext;

     label1:
        $r0 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        $r1 = virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r2 = virtualinvoke $r1.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document newDocument()>();

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        $r11 = new org.apache.xml.utils.WrappedRuntimeException;

        specialinvoke $r11.<org.apache.xml.utils.WrappedRuntimeException: void <init>(java.lang.Exception)>($r10);

        throw $r11;

     label4:
        $r4 = staticinvoke <org.apache.xalan.lib.Extensions: org.w3c.dom.Node checkEnvironmentUsingWhich(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.Document)>(r3, $r2);

        if null == $r4 goto label5;

        return $r4;

     label5:
        $r5 = new org.apache.xalan.xslt.EnvironmentCheck;

        specialinvoke $r5.<org.apache.xalan.xslt.EnvironmentCheck: void <init>()>();

        $r6 = virtualinvoke $r5.<org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable getEnvironmentHash()>();

        $r7 = interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("checkEnvironmentExtension");

        virtualinvoke $r5.<org.apache.xalan.xslt.EnvironmentCheck: void appendEnvironmentReport(org.w3c.dom.Node,org.w3c.dom.Document,java.util.Hashtable)>($r7, $r2, $r6);

     label6:
        goto label8;

     label7:
        $r8 := @caughtexception;

        $r9 = new org.apache.xml.utils.WrappedRuntimeException;

        specialinvoke $r9.<org.apache.xml.utils.WrappedRuntimeException: void <init>(java.lang.Exception)>($r8);

        throw $r9;

     label8:
        return $r7;

        catch javax.xml.parsers.ParserConfigurationException from label1 to label2 with label3;
        catch java.lang.Exception from label4 to label6 with label7;
    }

    private static org.w3c.dom.Node checkEnvironmentUsingWhich(org.apache.xalan.extensions.ExpressionContext, org.w3c.dom.Document)
    {
        java.lang.Throwable $r11;
        java.lang.Object[] $r8;
        org.apache.xalan.extensions.ExpressionContext r12;
        org.w3c.dom.Document r9;
        java.lang.reflect.Method $r6;
        java.util.Hashtable $r7;
        java.lang.Class[] $r0;
        org.w3c.dom.Element $r10;
        java.lang.Class $r1, $r2, $r3, $r5, $r13, $r14, $r15;
        java.lang.ClassLoader $r4;

        r12 := @parameter0: org.apache.xalan.extensions.ExpressionContext;

        r9 := @parameter1: org.w3c.dom.Document;

        $r0 = newarray (java.lang.Class)[3];

        $r1 = <org.apache.xalan.lib.Extensions: java.lang.Class class$java$util$Hashtable>;

        if $r1 != null goto label1;

        $r13 = staticinvoke <org.apache.xalan.lib.Extensions: java.lang.Class class$(java.lang.String)>("java.util.Hashtable");

        <org.apache.xalan.lib.Extensions: java.lang.Class class$java$util$Hashtable> = $r13;

        goto label2;

     label1:
        $r13 = <org.apache.xalan.lib.Extensions: java.lang.Class class$java$util$Hashtable>;

     label2:
        $r0[0] = $r13;

        $r2 = <org.apache.xalan.lib.Extensions: java.lang.Class class$java$lang$String>;

        if $r2 != null goto label3;

        $r14 = staticinvoke <org.apache.xalan.lib.Extensions: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xalan.lib.Extensions: java.lang.Class class$java$lang$String> = $r14;

        goto label4;

     label3:
        $r14 = <org.apache.xalan.lib.Extensions: java.lang.Class class$java$lang$String>;

     label4:
        $r0[1] = $r14;

        $r3 = <org.apache.xalan.lib.Extensions: java.lang.Class class$java$lang$String>;

        if $r3 != null goto label5;

        $r15 = staticinvoke <org.apache.xalan.lib.Extensions: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xalan.lib.Extensions: java.lang.Class class$java$lang$String> = $r15;

        goto label6;

     label5:
        $r15 = <org.apache.xalan.lib.Extensions: java.lang.Class class$java$lang$String>;

     label6:
        $r0[2] = $r15;

     label7:
        $r4 = staticinvoke <org.apache.xalan.lib.ObjectFactory: java.lang.ClassLoader findClassLoader()>();

        $r5 = staticinvoke <org.apache.xalan.lib.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>("org.apache.env.Which", $r4, 1);

        if null != $r5 goto label8;

        return null;

     label8:
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("which", $r0);

        $r7 = new java.util.Hashtable;

        specialinvoke $r7.<java.util.Hashtable: void <init>()>();

        $r8 = newarray (java.lang.Object)[3];

        $r8[0] = $r7;

        $r8[1] = "XmlCommons;Xalan;Xerces;Crimson;Ant";

        $r8[2] = "";

        virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r8);

        $r10 = interfaceinvoke r9.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("checkEnvironmentExtension");

        staticinvoke <org.apache.xml.utils.Hashtree2Node: void appendHashToNode(java.util.Hashtable,java.lang.String,org.w3c.dom.Node,org.w3c.dom.Document)>($r7, "whichReport", $r10, r9);

        return $r10;

     label9:
        $r11 := @caughtexception;

        return null;

        catch java.lang.Throwable from label7 to label9 with label9;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
