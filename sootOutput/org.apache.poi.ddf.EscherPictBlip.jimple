public final class org.apache.poi.ddf.EscherPictBlip extends org.apache.poi.ddf.EscherBlipRecord
{
    private static final org.apache.poi.util.POILogger log;
    public static final short RECORD_ID_EMF;
    public static final short RECORD_ID_WMF;
    public static final short RECORD_ID_PICT;
    private static final int HEADER_SIZE;
    private byte[] field_1_UID;
    private int field_2_cb;
    private int field_3_rcBounds_x1;
    private int field_3_rcBounds_y1;
    private int field_3_rcBounds_x2;
    private int field_3_rcBounds_y2;
    private int field_4_ptSize_w;
    private int field_4_ptSize_h;
    private int field_5_cbSave;
    private byte field_6_fCompression;
    private byte field_7_fFilter;
    private byte[] raw_pictureData;

    public void <init>()
    {
        org.apache.poi.ddf.EscherPictBlip r0;

        r0 := @this: org.apache.poi.ddf.EscherPictBlip;

        specialinvoke r0.<org.apache.poi.ddf.EscherBlipRecord: void <init>()>();

        return;
    }

    public int fillFields(byte[], int, org.apache.poi.ddf.EscherRecordFactory)
    {
        byte[] r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        byte $b10, $b11, $b14;
        org.apache.poi.ddf.EscherPictBlip r0;
        org.apache.poi.ddf.EscherRecordFactory r9;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i12, $i13, $i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27;

        r0 := @this: org.apache.poi.ddf.EscherPictBlip;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r9 := @parameter2: org.apache.poi.ddf.EscherRecordFactory;

        $i1 = virtualinvoke r0.<org.apache.poi.ddf.EscherPictBlip: int readHeader(byte[],int)>(r1, i0);

        i16 = i0 + 8;

        $r2 = newarray (byte)[16];

        r0.<org.apache.poi.ddf.EscherPictBlip: byte[] field_1_UID> = $r2;

        $r3 = r0.<org.apache.poi.ddf.EscherPictBlip: byte[] field_1_UID>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i16, $r3, 0, 16);

        i17 = i16 + 16;

        $i2 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r1, i17);

        r0.<org.apache.poi.ddf.EscherPictBlip: int field_2_cb> = $i2;

        i18 = i17 + 4;

        $i3 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r1, i18);

        r0.<org.apache.poi.ddf.EscherPictBlip: int field_3_rcBounds_x1> = $i3;

        i19 = i18 + 4;

        $i4 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r1, i19);

        r0.<org.apache.poi.ddf.EscherPictBlip: int field_3_rcBounds_y1> = $i4;

        i20 = i19 + 4;

        $i5 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r1, i20);

        r0.<org.apache.poi.ddf.EscherPictBlip: int field_3_rcBounds_x2> = $i5;

        i21 = i20 + 4;

        $i6 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r1, i21);

        r0.<org.apache.poi.ddf.EscherPictBlip: int field_3_rcBounds_y2> = $i6;

        i22 = i21 + 4;

        $i7 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r1, i22);

        r0.<org.apache.poi.ddf.EscherPictBlip: int field_4_ptSize_w> = $i7;

        i23 = i22 + 4;

        $i8 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r1, i23);

        r0.<org.apache.poi.ddf.EscherPictBlip: int field_4_ptSize_h> = $i8;

        i24 = i23 + 4;

        $i9 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r1, i24);

        r0.<org.apache.poi.ddf.EscherPictBlip: int field_5_cbSave> = $i9;

        i25 = i24 + 4;

        $b10 = r1[i25];

        r0.<org.apache.poi.ddf.EscherPictBlip: byte field_6_fCompression> = $b10;

        i26 = i25 + 1;

        $b11 = r1[i26];

        r0.<org.apache.poi.ddf.EscherPictBlip: byte field_7_fFilter> = $b11;

        i27 = i26 + 1;

        $i12 = r0.<org.apache.poi.ddf.EscherPictBlip: int field_5_cbSave>;

        $r4 = newarray (byte)[$i12];

        r0.<org.apache.poi.ddf.EscherPictBlip: byte[] raw_pictureData> = $r4;

        $r5 = r0.<org.apache.poi.ddf.EscherPictBlip: byte[] raw_pictureData>;

        $i13 = r0.<org.apache.poi.ddf.EscherPictBlip: int field_5_cbSave>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i27, $r5, 0, $i13);

        $b14 = r0.<org.apache.poi.ddf.EscherPictBlip: byte field_6_fCompression>;

        if $b14 != 0 goto label1;

        $r7 = r0.<org.apache.poi.ddf.EscherPictBlip: byte[] raw_pictureData>;

        $r8 = staticinvoke <org.apache.poi.ddf.EscherPictBlip: byte[] inflatePictureData(byte[])>($r7);

        r0.<org.apache.poi.ddf.EscherPictBlip: byte[] field_pictureData> = $r8;

        goto label2;

     label1:
        $r6 = r0.<org.apache.poi.ddf.EscherPictBlip: byte[] raw_pictureData>;

        r0.<org.apache.poi.ddf.EscherPictBlip: byte[] field_pictureData> = $r6;

     label2:
        $i15 = $i1 + 8;

        return $i15;
    }

    public int serialize(int, byte[], org.apache.poi.ddf.EscherSerializationListener)
    {
        byte[] r2, $r3, $r4, $r5, $r6;
        org.apache.poi.ddf.EscherSerializationListener r0;
        byte $b14, $b15;
        org.apache.poi.ddf.EscherPictBlip r1;
        short $s1, $s2, $s3, $s19;
        int i0, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i16, $i17, $i18, $i20, $i21, $i22, i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35, i36;

        r1 := @this: org.apache.poi.ddf.EscherPictBlip;

        i0 := @parameter0: int;

        r2 := @parameter1: byte[];

        r0 := @parameter2: org.apache.poi.ddf.EscherSerializationListener;

        $s1 = virtualinvoke r1.<org.apache.poi.ddf.EscherPictBlip: short getRecordId()>();

        interfaceinvoke r0.<org.apache.poi.ddf.EscherSerializationListener: void beforeRecordSerialize(int,short,org.apache.poi.ddf.EscherRecord)>(i0, $s1, r1);

        $s2 = virtualinvoke r1.<org.apache.poi.ddf.EscherPictBlip: short getOptions()>();

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>(r2, i0, $s2);

        i23 = i0 + 2;

        $s3 = virtualinvoke r1.<org.apache.poi.ddf.EscherPictBlip: short getRecordId()>();

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>(r2, i23, $s3);

        i24 = i23 + 2;

        $i4 = virtualinvoke r1.<org.apache.poi.ddf.EscherPictBlip: int getRecordSize()>();

        $i5 = $i4 - 8;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r2, 0, $i5);

        i25 = i24 + 4;

        $r3 = r1.<org.apache.poi.ddf.EscherPictBlip: byte[] field_1_UID>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r2, i25, 16);

        i26 = i25 + 16;

        $i6 = r1.<org.apache.poi.ddf.EscherPictBlip: int field_2_cb>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r2, i26, $i6);

        i27 = i26 + 4;

        $i7 = r1.<org.apache.poi.ddf.EscherPictBlip: int field_3_rcBounds_x1>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r2, i27, $i7);

        i28 = i27 + 4;

        $i8 = r1.<org.apache.poi.ddf.EscherPictBlip: int field_3_rcBounds_y1>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r2, i28, $i8);

        i29 = i28 + 4;

        $i9 = r1.<org.apache.poi.ddf.EscherPictBlip: int field_3_rcBounds_x2>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r2, i29, $i9);

        i30 = i29 + 4;

        $i10 = r1.<org.apache.poi.ddf.EscherPictBlip: int field_3_rcBounds_y2>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r2, i30, $i10);

        i31 = i30 + 4;

        $i11 = r1.<org.apache.poi.ddf.EscherPictBlip: int field_4_ptSize_w>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r2, i31, $i11);

        i32 = i31 + 4;

        $i12 = r1.<org.apache.poi.ddf.EscherPictBlip: int field_4_ptSize_h>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r2, i32, $i12);

        i33 = i32 + 4;

        $i13 = r1.<org.apache.poi.ddf.EscherPictBlip: int field_5_cbSave>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r2, i33, $i13);

        i34 = i33 + 4;

        $b14 = r1.<org.apache.poi.ddf.EscherPictBlip: byte field_6_fCompression>;

        r2[i34] = $b14;

        i35 = i34 + 1;

        $b15 = r1.<org.apache.poi.ddf.EscherPictBlip: byte field_7_fFilter>;

        r2[i35] = $b15;

        i36 = i35 + 1;

        $r5 = r1.<org.apache.poi.ddf.EscherPictBlip: byte[] raw_pictureData>;

        $r4 = r1.<org.apache.poi.ddf.EscherPictBlip: byte[] raw_pictureData>;

        $i16 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r2, i36, $i16);

        $i17 = virtualinvoke r1.<org.apache.poi.ddf.EscherPictBlip: int getRecordSize()>();

        $i18 = i0 + $i17;

        $s19 = virtualinvoke r1.<org.apache.poi.ddf.EscherPictBlip: short getRecordId()>();

        $i20 = virtualinvoke r1.<org.apache.poi.ddf.EscherPictBlip: int getRecordSize()>();

        interfaceinvoke r0.<org.apache.poi.ddf.EscherSerializationListener: void afterRecordSerialize(int,short,int,org.apache.poi.ddf.EscherRecord)>($i18, $s19, $i20, r1);

        $r6 = r1.<org.apache.poi.ddf.EscherPictBlip: byte[] raw_pictureData>;

        $i21 = lengthof $r6;

        $i22 = 25 + $i21;

        return $i22;
    }

    private static byte[] inflatePictureData(byte[])
    {
        byte[] r2, r4, $r5;
        java.io.ByteArrayOutputStream $r3;
        java.util.zip.InflaterInputStream $r0;
        java.io.IOException $r6;
        org.apache.poi.util.POILogger $r7;
        java.io.ByteArrayInputStream $r1;
        int $i0;

        r2 := @parameter0: byte[];

     label1:
        $r0 = new java.util.zip.InflaterInputStream;

        $r1 = new java.io.ByteArrayInputStream;

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>(r2);

        specialinvoke $r0.<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream)>($r1);

        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

        r4 = newarray (byte)[4096];

     label2:
        $i0 = virtualinvoke $r0.<java.util.zip.InflaterInputStream: int read(byte[])>(r4);

        if $i0 <= 0 goto label3;

        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r4, 0, $i0);

        goto label2;

     label3:
        $r5 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label4:
        return $r5;

     label5:
        $r6 := @caughtexception;

        $r7 = <org.apache.poi.ddf.EscherPictBlip: org.apache.poi.util.POILogger log>;

        virtualinvoke $r7.<org.apache.poi.util.POILogger: void log(int,java.lang.Object,java.lang.Throwable)>(3, "Possibly corrupt compression or non-compressed data", $r6);

        return r2;

        catch java.io.IOException from label1 to label4 with label5;
    }

    public int getRecordSize()
    {
        org.apache.poi.ddf.EscherPictBlip r0;
        byte[] $r1;
        int $i0, $i1;

        r0 := @this: org.apache.poi.ddf.EscherPictBlip;

        $r1 = r0.<org.apache.poi.ddf.EscherPictBlip: byte[] raw_pictureData>;

        $i0 = lengthof $r1;

        $i1 = 58 + $i0;

        return $i1;
    }

    public byte[] getUID()
    {
        org.apache.poi.ddf.EscherPictBlip r0;
        byte[] $r1;

        r0 := @this: org.apache.poi.ddf.EscherPictBlip;

        $r1 = r0.<org.apache.poi.ddf.EscherPictBlip: byte[] field_1_UID>;

        return $r1;
    }

    public void setUID(byte[])
    {
        org.apache.poi.ddf.EscherPictBlip r0;
        byte[] r1;

        r0 := @this: org.apache.poi.ddf.EscherPictBlip;

        r1 := @parameter0: byte[];

        r0.<org.apache.poi.ddf.EscherPictBlip: byte[] field_1_UID> = r1;

        return;
    }

    public int getUncompressedSize()
    {
        org.apache.poi.ddf.EscherPictBlip r0;
        int $i0;

        r0 := @this: org.apache.poi.ddf.EscherPictBlip;

        $i0 = r0.<org.apache.poi.ddf.EscherPictBlip: int field_2_cb>;

        return $i0;
    }

    public void setUncompressedSize(int)
    {
        org.apache.poi.ddf.EscherPictBlip r0;
        int i0;

        r0 := @this: org.apache.poi.ddf.EscherPictBlip;

        i0 := @parameter0: int;

        r0.<org.apache.poi.ddf.EscherPictBlip: int field_2_cb> = i0;

        return;
    }

    public java.awt.Rectangle getBounds()
    {
        org.apache.poi.ddf.EscherPictBlip r1;
        java.awt.Rectangle $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r1 := @this: org.apache.poi.ddf.EscherPictBlip;

        $r0 = new java.awt.Rectangle;

        $i7 = r1.<org.apache.poi.ddf.EscherPictBlip: int field_3_rcBounds_x1>;

        $i6 = r1.<org.apache.poi.ddf.EscherPictBlip: int field_3_rcBounds_y1>;

        $i1 = r1.<org.apache.poi.ddf.EscherPictBlip: int field_3_rcBounds_x2>;

        $i0 = r1.<org.apache.poi.ddf.EscherPictBlip: int field_3_rcBounds_x1>;

        $i5 = $i1 - $i0;

        $i3 = r1.<org.apache.poi.ddf.EscherPictBlip: int field_3_rcBounds_y2>;

        $i2 = r1.<org.apache.poi.ddf.EscherPictBlip: int field_3_rcBounds_y1>;

        $i4 = $i3 - $i2;

        specialinvoke $r0.<java.awt.Rectangle: void <init>(int,int,int,int)>($i7, $i6, $i5, $i4);

        return $r0;
    }

    public void setBounds(java.awt.Rectangle)
    {
        org.apache.poi.ddf.EscherPictBlip r0;
        java.awt.Rectangle r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.apache.poi.ddf.EscherPictBlip;

        r1 := @parameter0: java.awt.Rectangle;

        $i0 = r1.<java.awt.Rectangle: int x>;

        r0.<org.apache.poi.ddf.EscherPictBlip: int field_3_rcBounds_x1> = $i0;

        $i1 = r1.<java.awt.Rectangle: int y>;

        r0.<org.apache.poi.ddf.EscherPictBlip: int field_3_rcBounds_y1> = $i1;

        $i3 = r1.<java.awt.Rectangle: int x>;

        $i2 = r1.<java.awt.Rectangle: int width>;

        $i4 = $i3 + $i2;

        r0.<org.apache.poi.ddf.EscherPictBlip: int field_3_rcBounds_x2> = $i4;

        $i6 = r1.<java.awt.Rectangle: int y>;

        $i5 = r1.<java.awt.Rectangle: int height>;

        $i7 = $i6 + $i5;

        r0.<org.apache.poi.ddf.EscherPictBlip: int field_3_rcBounds_y2> = $i7;

        return;
    }

    public java.awt.Dimension getSizeEMU()
    {
        org.apache.poi.ddf.EscherPictBlip r1;
        java.awt.Dimension $r0;
        int $i0, $i1;

        r1 := @this: org.apache.poi.ddf.EscherPictBlip;

        $r0 = new java.awt.Dimension;

        $i1 = r1.<org.apache.poi.ddf.EscherPictBlip: int field_4_ptSize_w>;

        $i0 = r1.<org.apache.poi.ddf.EscherPictBlip: int field_4_ptSize_h>;

        specialinvoke $r0.<java.awt.Dimension: void <init>(int,int)>($i1, $i0);

        return $r0;
    }

    public void setSizeEMU(java.awt.Dimension)
    {
        org.apache.poi.ddf.EscherPictBlip r0;
        java.awt.Dimension r1;
        int $i0, $i1;

        r0 := @this: org.apache.poi.ddf.EscherPictBlip;

        r1 := @parameter0: java.awt.Dimension;

        $i0 = r1.<java.awt.Dimension: int width>;

        r0.<org.apache.poi.ddf.EscherPictBlip: int field_4_ptSize_w> = $i0;

        $i1 = r1.<java.awt.Dimension: int height>;

        r0.<org.apache.poi.ddf.EscherPictBlip: int field_4_ptSize_h> = $i1;

        return;
    }

    public int getCompressedSize()
    {
        org.apache.poi.ddf.EscherPictBlip r0;
        int $i0;

        r0 := @this: org.apache.poi.ddf.EscherPictBlip;

        $i0 = r0.<org.apache.poi.ddf.EscherPictBlip: int field_5_cbSave>;

        return $i0;
    }

    public void setCompressedSize(int)
    {
        org.apache.poi.ddf.EscherPictBlip r0;
        int i0;

        r0 := @this: org.apache.poi.ddf.EscherPictBlip;

        i0 := @parameter0: int;

        r0.<org.apache.poi.ddf.EscherPictBlip: int field_5_cbSave> = i0;

        return;
    }

    public boolean isCompressed()
    {
        org.apache.poi.ddf.EscherPictBlip r0;
        byte $b0;
        boolean $z0;

        r0 := @this: org.apache.poi.ddf.EscherPictBlip;

        $b0 = r0.<org.apache.poi.ddf.EscherPictBlip: byte field_6_fCompression>;

        if $b0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setCompressed(boolean)
    {
        org.apache.poi.ddf.EscherPictBlip r0;
        byte $b0;
        boolean z0;

        r0 := @this: org.apache.poi.ddf.EscherPictBlip;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $b0 = 0;

        goto label2;

     label1:
        $b0 = -2;

     label2:
        r0.<org.apache.poi.ddf.EscherPictBlip: byte field_6_fCompression> = $b0;

        return;
    }

    public java.lang.String toString()
    {
        byte[] $r1, $r22;
        byte $b5, $b6;
        java.awt.Dimension $r35;
        java.lang.StringBuilder $r3, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r15, $r16, $r17, $r19, $r20, $r21, $r24, $r25, $r26, $r28, $r29, $r30, $r32, $r33, $r34, $r36, $r37, $r38, $r40, $r41, $r42, $r44, $r45, $r46, $r48, $r49, $r50, $r51, $r52;
        org.apache.poi.ddf.EscherPictBlip r0;
        java.awt.Rectangle $r31;
        short $s0, $s1, $s2;
        int $i3, $i4;
        java.lang.String $r2, $r5, $r10, $r14, $r18, $r23, $r27, $r39, $r43, $r47, $r53;
        java.lang.Class $r4;

        r0 := @this: org.apache.poi.ddf.EscherPictBlip;

        $r1 = r0.<org.apache.poi.ddf.EscherPictBlip: byte[] field_pictureData>;

        $r2 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(byte[],int)>($r1, 32);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  RecordId: 0x");

        $s0 = virtualinvoke r0.<org.apache.poi.ddf.EscherPictBlip: short getRecordId()>();

        $r10 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Version: 0x");

        $s1 = virtualinvoke r0.<org.apache.poi.ddf.EscherPictBlip: short getVersion()>();

        $r14 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s1);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Instance: 0x");

        $s2 = virtualinvoke r0.<org.apache.poi.ddf.EscherPictBlip: short getInstance()>();

        $r18 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s2);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  UID: 0x");

        $r22 = r0.<org.apache.poi.ddf.EscherPictBlip: byte[] field_1_UID>;

        $r23 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(byte[])>($r22);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Uncompressed Size: ");

        $i3 = r0.<org.apache.poi.ddf.EscherPictBlip: int field_2_cb>;

        $r27 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(int)>($i3);

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Bounds: ");

        $r31 = virtualinvoke r0.<org.apache.poi.ddf.EscherPictBlip: java.awt.Rectangle getBounds()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Size in EMU: ");

        $r35 = virtualinvoke r0.<org.apache.poi.ddf.EscherPictBlip: java.awt.Dimension getSizeEMU()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Compressed Size: ");

        $i4 = r0.<org.apache.poi.ddf.EscherPictBlip: int field_5_cbSave>;

        $r39 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(int)>($i4);

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Compression: ");

        $b5 = r0.<org.apache.poi.ddf.EscherPictBlip: byte field_6_fCompression>;

        $r43 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(byte)>($b5);

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Filter: ");

        $b6 = r0.<org.apache.poi.ddf.EscherPictBlip: byte field_7_fFilter>;

        $r47 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(byte)>($b6);

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Extra Data:");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r53;
    }

    public java.lang.String toXml(java.lang.String)
    {
        byte[] $r14;
        byte $b5, $b6;
        java.lang.StringBuilder $r0, $r2, $r10, $r11, $r12, $r13, $r16, $r17, $r18, $r19, $r20, $r22, $r23, $r24, $r25, $r26, $r28, $r29, $r30, $r31, $r32, $r34, $r35, $r36, $r37, $r38, $r40, $r41, $r42, $r43, $r44, $r46, $r47, $r48, $r49, $r50, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r62;
        short $s0, $s1, $s2;
        java.lang.String r1, $r5, $r6, $r7, $r8, $r9, $r15, $r21, $r39, $r45, $r51, $r61, $r63;
        java.awt.Dimension $r33;
        org.apache.poi.ddf.EscherPictBlip r3;
        java.awt.Rectangle $r27;
        int $i3, $i4;
        java.lang.Class $r4, $r60;

        r3 := @this: org.apache.poi.ddf.EscherPictBlip;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r4 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>();

        $s0 = virtualinvoke r3.<org.apache.poi.ddf.EscherPictBlip: short getRecordId()>();

        $r6 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s0);

        $s1 = virtualinvoke r3.<org.apache.poi.ddf.EscherPictBlip: short getVersion()>();

        $r7 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s1);

        $s2 = virtualinvoke r3.<org.apache.poi.ddf.EscherPictBlip: short getInstance()>();

        $r8 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s2);

        $r9 = virtualinvoke r3.<org.apache.poi.ddf.EscherPictBlip: java.lang.String formatXmlRecordHeader(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r5, $r6, $r7, $r8);

        $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<UID>0x");

        $r14 = r3.<org.apache.poi.ddf.EscherPictBlip: byte[] field_1_UID>;

        $r15 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(byte[])>($r14);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</UID>\n");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<UncompressedSize>0x");

        $i3 = r3.<org.apache.poi.ddf.EscherPictBlip: int field_2_cb>;

        $r21 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(int)>($i3);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</UncompressedSize>\n");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<Bounds>");

        $r27 = virtualinvoke r3.<org.apache.poi.ddf.EscherPictBlip: java.awt.Rectangle getBounds()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</Bounds>\n");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<SizeInEMU>");

        $r33 = virtualinvoke r3.<org.apache.poi.ddf.EscherPictBlip: java.awt.Dimension getSizeEMU()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</SizeInEMU>\n");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<CompressedSize>0x");

        $i4 = r3.<org.apache.poi.ddf.EscherPictBlip: int field_5_cbSave>;

        $r39 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(int)>($i4);

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</CompressedSize>\n");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<Compression>0x");

        $b5 = r3.<org.apache.poi.ddf.EscherPictBlip: byte field_6_fCompression>;

        $r45 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(byte)>($b5);

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</Compression>\n");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<Filter>0x");

        $b6 = r3.<org.apache.poi.ddf.EscherPictBlip: byte field_7_fFilter>;

        $r51 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(byte)>($b6);

        $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</Filter>\n");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<ExtraData>");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</ExtraData>\n");

        $r58 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");

        $r60 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r61 = virtualinvoke $r60.<java.lang.Class: java.lang.String getSimpleName()>();

        $r62 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        $r63 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r63;
    }

    static void <clinit>()
    {
        org.apache.poi.util.POILogger $r0;

        <org.apache.poi.ddf.EscherPictBlip: int HEADER_SIZE> = 8;

        <org.apache.poi.ddf.EscherPictBlip: short RECORD_ID_PICT> = -4068;

        <org.apache.poi.ddf.EscherPictBlip: short RECORD_ID_WMF> = -4069;

        <org.apache.poi.ddf.EscherPictBlip: short RECORD_ID_EMF> = -4070;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/ddf/EscherPictBlip;");

        <org.apache.poi.ddf.EscherPictBlip: org.apache.poi.util.POILogger log> = $r0;

        return;
    }
}
