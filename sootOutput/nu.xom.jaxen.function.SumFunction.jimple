public class nu.xom.jaxen.function.SumFunction extends java.lang.Object implements nu.xom.jaxen.Function
{

    public void <init>()
    {
        nu.xom.jaxen.function.SumFunction r0;

        r0 := @this: nu.xom.jaxen.function.SumFunction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object call(nu.xom.jaxen.Context, java.util.List) throws nu.xom.jaxen.FunctionCallException
    {
        nu.xom.jaxen.FunctionCallException $r1;
        java.lang.Double $r5;
        nu.xom.jaxen.function.SumFunction r6;
        java.util.List r0;
        int $i0;
        java.lang.Object $r2;
        nu.xom.jaxen.Context r3;
        nu.xom.jaxen.Navigator $r4;

        r6 := @this: nu.xom.jaxen.function.SumFunction;

        r3 := @parameter0: nu.xom.jaxen.Context;

        r0 := @parameter1: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 != 1 goto label1;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = virtualinvoke r3.<nu.xom.jaxen.Context: nu.xom.jaxen.Navigator getNavigator()>();

        $r5 = staticinvoke <nu.xom.jaxen.function.SumFunction: java.lang.Double evaluate(java.lang.Object,nu.xom.jaxen.Navigator)>($r2, $r4);

        return $r5;

     label1:
        $r1 = new nu.xom.jaxen.FunctionCallException;

        specialinvoke $r1.<nu.xom.jaxen.FunctionCallException: void <init>(java.lang.String)>("sum() requires one argument.");

        throw $r1;
    }

    public static java.lang.Double evaluate(java.lang.Object, nu.xom.jaxen.Navigator) throws nu.xom.jaxen.FunctionCallException
    {
        nu.xom.jaxen.FunctionCallException $r1;
        java.util.Iterator $r3;
        java.lang.Double $r4, $r7;
        java.util.List $r2;
        java.lang.Object r0, $r5;
        nu.xom.jaxen.Navigator r6;
        boolean $z0, $z1;
        double $d0, d1;

        r0 := @parameter0: java.lang.Object;

        r6 := @parameter1: nu.xom.jaxen.Navigator;

        d1 = 0.0;

        $z0 = r0 instanceof java.util.List;

        if $z0 == 0 goto label3;

        $r2 = (java.util.List) r0;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r7 = staticinvoke <nu.xom.jaxen.function.NumberFunction: java.lang.Double evaluate(java.lang.Object,nu.xom.jaxen.Navigator)>($r5, r6);

        $d0 = virtualinvoke $r7.<java.lang.Double: double doubleValue()>();

        d1 = d1 + $d0;

        goto label1;

     label2:
        goto label4;

     label3:
        $r1 = new nu.xom.jaxen.FunctionCallException;

        specialinvoke $r1.<nu.xom.jaxen.FunctionCallException: void <init>(java.lang.String)>("The argument to the sum function must be a node-set");

        throw $r1;

     label4:
        $r4 = new java.lang.Double;

        specialinvoke $r4.<java.lang.Double: void <init>(double)>(d1);

        return $r4;
    }
}
