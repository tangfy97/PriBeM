final class org.springframework.context.'annotation'.ConfigurationClassMethod extends java.lang.Object
{
    private final org.springframework.core.type.MethodMetadata metadata;
    private final org.springframework.context.'annotation'.ConfigurationClass configurationClass;

    public void <init>(org.springframework.core.type.MethodMetadata, org.springframework.context.'annotation'.ConfigurationClass)
    {
        org.springframework.context.'annotation'.ConfigurationClassMethod r0;
        org.springframework.core.type.MethodMetadata r1;
        org.springframework.context.'annotation'.ConfigurationClass r2;

        r0 := @this: org.springframework.context.'annotation'.ConfigurationClassMethod;

        r1 := @parameter0: org.springframework.core.type.MethodMetadata;

        r2 := @parameter1: org.springframework.context.'annotation'.ConfigurationClass;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.context.'annotation'.ConfigurationClassMethod: org.springframework.core.type.MethodMetadata metadata> = r1;

        r0.<org.springframework.context.'annotation'.ConfigurationClassMethod: org.springframework.context.'annotation'.ConfigurationClass configurationClass> = r2;

        return;
    }

    public org.springframework.core.type.MethodMetadata getMetadata()
    {
        org.springframework.context.'annotation'.ConfigurationClassMethod r0;
        org.springframework.core.type.MethodMetadata $r1;

        r0 := @this: org.springframework.context.'annotation'.ConfigurationClassMethod;

        $r1 = r0.<org.springframework.context.'annotation'.ConfigurationClassMethod: org.springframework.core.type.MethodMetadata metadata>;

        return $r1;
    }

    public org.springframework.context.'annotation'.ConfigurationClass getConfigurationClass()
    {
        org.springframework.context.'annotation'.ConfigurationClassMethod r0;
        org.springframework.context.'annotation'.ConfigurationClass $r1;

        r0 := @this: org.springframework.context.'annotation'.ConfigurationClassMethod;

        $r1 = r0.<org.springframework.context.'annotation'.ConfigurationClassMethod: org.springframework.context.'annotation'.ConfigurationClass configurationClass>;

        return $r1;
    }

    public org.springframework.beans.factory.parsing.Location getResourceLocation()
    {
        org.springframework.context.'annotation'.ConfigurationClassMethod r1;
        org.springframework.core.type.MethodMetadata $r4;
        org.springframework.beans.factory.parsing.Location $r0;
        org.springframework.context.'annotation'.ConfigurationClass $r2;
        org.springframework.core.io.Resource $r3;

        r1 := @this: org.springframework.context.'annotation'.ConfigurationClassMethod;

        $r0 = new org.springframework.beans.factory.parsing.Location;

        $r2 = r1.<org.springframework.context.'annotation'.ConfigurationClassMethod: org.springframework.context.'annotation'.ConfigurationClass configurationClass>;

        $r3 = virtualinvoke $r2.<org.springframework.context.'annotation'.ConfigurationClass: org.springframework.core.io.Resource getResource()>();

        $r4 = r1.<org.springframework.context.'annotation'.ConfigurationClassMethod: org.springframework.core.type.MethodMetadata metadata>;

        specialinvoke $r0.<org.springframework.beans.factory.parsing.Location: void <init>(org.springframework.core.io.Resource,java.lang.Object)>($r3, $r4);

        return $r0;
    }

    public void validate(org.springframework.beans.factory.parsing.ProblemReporter)
    {
        org.springframework.context.'annotation'.ConfigurationClassMethod$StaticMethodError $r7;
        org.springframework.context.'annotation'.ConfigurationClassMethod r0;
        org.springframework.core.type.MethodMetadata $r5, $r8;
        org.springframework.core.type.AnnotationMetadata $r2;
        org.springframework.context.'annotation'.ConfigurationClassMethod$NonOverridableMethodError $r9;
        org.springframework.beans.factory.parsing.ProblemReporter r6;
        org.springframework.context.'annotation'.ConfigurationClass $r1;
        java.lang.Class $r3;
        java.lang.String $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: org.springframework.context.'annotation'.ConfigurationClassMethod;

        r6 := @parameter0: org.springframework.beans.factory.parsing.ProblemReporter;

        $r1 = r0.<org.springframework.context.'annotation'.ConfigurationClassMethod: org.springframework.context.'annotation'.ConfigurationClass configurationClass>;

        $r2 = virtualinvoke $r1.<org.springframework.context.'annotation'.ConfigurationClass: org.springframework.core.type.AnnotationMetadata getMetadata()>();

        $r3 = class "Lorg/springframework/context/annotation/Configuration;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $z0 = interfaceinvoke $r2.<org.springframework.core.type.AnnotationMetadata: boolean isAnnotated(java.lang.String)>($r4);

        if $z0 == 0 goto label1;

        $r8 = virtualinvoke r0.<org.springframework.context.'annotation'.ConfigurationClassMethod: org.springframework.core.type.MethodMetadata getMetadata()>();

        $z2 = interfaceinvoke $r8.<org.springframework.core.type.MethodMetadata: boolean isOverridable()>();

        if $z2 != 0 goto label2;

        $r9 = new org.springframework.context.'annotation'.ConfigurationClassMethod$NonOverridableMethodError;

        specialinvoke $r9.<org.springframework.context.'annotation'.ConfigurationClassMethod$NonOverridableMethodError: void <init>(org.springframework.context.'annotation'.ConfigurationClassMethod)>(r0);

        interfaceinvoke r6.<org.springframework.beans.factory.parsing.ProblemReporter: void error(org.springframework.beans.factory.parsing.Problem)>($r9);

        goto label2;

     label1:
        $r5 = virtualinvoke r0.<org.springframework.context.'annotation'.ConfigurationClassMethod: org.springframework.core.type.MethodMetadata getMetadata()>();

        $z1 = interfaceinvoke $r5.<org.springframework.core.type.MethodMetadata: boolean isStatic()>();

        if $z1 == 0 goto label2;

        $r7 = new org.springframework.context.'annotation'.ConfigurationClassMethod$StaticMethodError;

        specialinvoke $r7.<org.springframework.context.'annotation'.ConfigurationClassMethod$StaticMethodError: void <init>(org.springframework.context.'annotation'.ConfigurationClassMethod)>(r0);

        interfaceinvoke r6.<org.springframework.beans.factory.parsing.ProblemReporter: void error(org.springframework.beans.factory.parsing.Problem)>($r7);

     label2:
        return;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r0;
        org.springframework.context.'annotation'.ConfigurationClassMethod r1;
        org.springframework.core.type.MethodMetadata $r4, $r6;
        java.lang.Class $r2;
        java.lang.String $r3, $r5, $r7, $r8;

        r1 := @this: org.springframework.context.'annotation'.ConfigurationClassMethod;

        $r0 = newarray (java.lang.Object)[3];

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        $r0[0] = $r3;

        $r4 = virtualinvoke r1.<org.springframework.context.'annotation'.ConfigurationClassMethod: org.springframework.core.type.MethodMetadata getMetadata()>();

        $r5 = interfaceinvoke $r4.<org.springframework.core.type.MethodMetadata: java.lang.String getMethodName()>();

        $r0[1] = $r5;

        $r6 = virtualinvoke r1.<org.springframework.context.'annotation'.ConfigurationClassMethod: org.springframework.core.type.MethodMetadata getMetadata()>();

        $r7 = interfaceinvoke $r6.<org.springframework.core.type.MethodMetadata: java.lang.String getDeclaringClassName()>();

        $r0[2] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%s:name=%s,declaringClass=%s]", $r0);

        return $r8;
    }
}
