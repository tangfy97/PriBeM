class com.jidesoft.hints.AbstractIntelliHints$8 extends java.lang.Object implements javax.swing.event.DocumentListener
{
    private javax.swing.Timer timer;
    final com.jidesoft.hints.AbstractIntelliHints this$0;

    void <init>(com.jidesoft.hints.AbstractIntelliHints)
    {
        com.jidesoft.hints.AbstractIntelliHints$8$1 $r4;
        int $i0;
        com.jidesoft.hints.AbstractIntelliHints$8 r0;
        com.jidesoft.hints.AbstractIntelliHints r1, $r3;
        javax.swing.Timer $r2;

        r0 := @this: com.jidesoft.hints.AbstractIntelliHints$8;

        r1 := @parameter0: com.jidesoft.hints.AbstractIntelliHints;

        r0.<com.jidesoft.hints.AbstractIntelliHints$8: com.jidesoft.hints.AbstractIntelliHints this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new javax.swing.Timer;

        $r3 = r0.<com.jidesoft.hints.AbstractIntelliHints$8: com.jidesoft.hints.AbstractIntelliHints this$0>;

        $i0 = virtualinvoke $r3.<com.jidesoft.hints.AbstractIntelliHints: int getShowHintsDelay()>();

        $r4 = new com.jidesoft.hints.AbstractIntelliHints$8$1;

        specialinvoke $r4.<com.jidesoft.hints.AbstractIntelliHints$8$1: void <init>(com.jidesoft.hints.AbstractIntelliHints$8)>(r0);

        specialinvoke $r2.<javax.swing.Timer: void <init>(int,java.awt.event.ActionListener)>($i0, $r4);

        r0.<com.jidesoft.hints.AbstractIntelliHints$8: javax.swing.Timer timer> = $r2;

        return;
    }

    public void insertUpdate(javax.swing.event.DocumentEvent)
    {
        javax.swing.event.DocumentEvent r1;
        com.jidesoft.hints.AbstractIntelliHints$8 r0;

        r0 := @this: com.jidesoft.hints.AbstractIntelliHints$8;

        r1 := @parameter0: javax.swing.event.DocumentEvent;

        virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints$8: void startTimer()>();

        return;
    }

    public void removeUpdate(javax.swing.event.DocumentEvent)
    {
        javax.swing.event.DocumentEvent r1;
        com.jidesoft.hints.AbstractIntelliHints$8 r0;

        r0 := @this: com.jidesoft.hints.AbstractIntelliHints$8;

        r1 := @parameter0: javax.swing.event.DocumentEvent;

        virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints$8: void startTimer()>();

        return;
    }

    public void changedUpdate(javax.swing.event.DocumentEvent)
    {
        javax.swing.event.DocumentEvent r1;
        com.jidesoft.hints.AbstractIntelliHints$8 r0;

        r0 := @this: com.jidesoft.hints.AbstractIntelliHints$8;

        r1 := @parameter0: javax.swing.event.DocumentEvent;

        return;
    }

    void startTimer()
    {
        int $i0, $i1, $i2, $i3;
        javax.swing.Timer $r1, $r2, $r4, $r6, $r7, $r9, $r11, $r12;
        boolean $z0;
        com.jidesoft.hints.AbstractIntelliHints$8 r0;
        com.jidesoft.hints.AbstractIntelliHints $r3, $r5, $r8, $r10;

        r0 := @this: com.jidesoft.hints.AbstractIntelliHints$8;

        $r1 = r0.<com.jidesoft.hints.AbstractIntelliHints$8: javax.swing.Timer timer>;

        $z0 = virtualinvoke $r1.<javax.swing.Timer: boolean isRunning()>();

        if $z0 == 0 goto label1;

        $r9 = r0.<com.jidesoft.hints.AbstractIntelliHints$8: javax.swing.Timer timer>;

        $r8 = r0.<com.jidesoft.hints.AbstractIntelliHints$8: com.jidesoft.hints.AbstractIntelliHints this$0>;

        $i2 = virtualinvoke $r8.<com.jidesoft.hints.AbstractIntelliHints: int getShowHintsDelay()>();

        virtualinvoke $r9.<javax.swing.Timer: void setInitialDelay(int)>($i2);

        $r11 = r0.<com.jidesoft.hints.AbstractIntelliHints$8: javax.swing.Timer timer>;

        $r10 = r0.<com.jidesoft.hints.AbstractIntelliHints$8: com.jidesoft.hints.AbstractIntelliHints this$0>;

        $i3 = virtualinvoke $r10.<com.jidesoft.hints.AbstractIntelliHints: int getShowHintsDelay()>();

        virtualinvoke $r11.<javax.swing.Timer: void setDelay(int)>($i3);

        $r12 = r0.<com.jidesoft.hints.AbstractIntelliHints$8: javax.swing.Timer timer>;

        virtualinvoke $r12.<javax.swing.Timer: void restart()>();

        goto label2;

     label1:
        $r2 = r0.<com.jidesoft.hints.AbstractIntelliHints$8: javax.swing.Timer timer>;

        virtualinvoke $r2.<javax.swing.Timer: void setRepeats(boolean)>(0);

        $r4 = r0.<com.jidesoft.hints.AbstractIntelliHints$8: javax.swing.Timer timer>;

        $r3 = r0.<com.jidesoft.hints.AbstractIntelliHints$8: com.jidesoft.hints.AbstractIntelliHints this$0>;

        $i0 = virtualinvoke $r3.<com.jidesoft.hints.AbstractIntelliHints: int getShowHintsDelay()>();

        virtualinvoke $r4.<javax.swing.Timer: void setInitialDelay(int)>($i0);

        $r6 = r0.<com.jidesoft.hints.AbstractIntelliHints$8: javax.swing.Timer timer>;

        $r5 = r0.<com.jidesoft.hints.AbstractIntelliHints$8: com.jidesoft.hints.AbstractIntelliHints this$0>;

        $i1 = virtualinvoke $r5.<com.jidesoft.hints.AbstractIntelliHints: int getShowHintsDelay()>();

        virtualinvoke $r6.<javax.swing.Timer: void setDelay(int)>($i1);

        $r7 = r0.<com.jidesoft.hints.AbstractIntelliHints$8: javax.swing.Timer timer>;

        virtualinvoke $r7.<javax.swing.Timer: void start()>();

     label2:
        return;
    }
}
