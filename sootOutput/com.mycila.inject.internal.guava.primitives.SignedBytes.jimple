public final class com.mycila.inject.internal.guava.primitives.SignedBytes extends java.lang.Object
{
    public static final byte MAX_POWER_OF_TWO;

    private void <init>()
    {
        com.mycila.inject.internal.guava.primitives.SignedBytes r0;

        r0 := @this: com.mycila.inject.internal.guava.primitives.SignedBytes;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte checkedCast(long)
    {
        java.lang.Object[] $r0;
        long l0, $l3;
        byte b2, $b4;
        java.lang.Long $r1;
        int $i1;
        boolean $z0;

        l0 := @parameter0: long;

        $i1 = (int) l0;

        b2 = (byte) $i1;

        $l3 = (long) b2;

        $b4 = $l3 cmp l0;

        if $b4 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r0 = newarray (java.lang.Object)[1];

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r0[0] = $r1;

        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z0, "Out of range: %s", $r0);

        return b2;
    }

    public static byte saturatedCast(long)
    {
        byte $b1, $b2, $b4;
        int $i3, $i5, $i6;
        long l0;

        l0 := @parameter0: long;

        $b1 = l0 cmp 127L;

        $i5 = (int) $b1;

        if $i5 <= 0 goto label1;

        return 127;

     label1:
        $b2 = l0 cmp -128L;

        $i6 = (int) $b2;

        if $i6 >= 0 goto label2;

        return -128;

     label2:
        $i3 = (int) l0;

        $b4 = (byte) $i3;

        return $b4;
    }

    public static int compare(byte, byte)
    {
        byte b0, b1;
        int $i2, $i3, $i4;

        b0 := @parameter0: byte;

        b1 := @parameter1: byte;

        $i3 = (int) b0;

        $i4 = (int) b1;

        $i2 = $i3 - $i4;

        return $i2;
    }

    public static transient byte min(byte[])
    {
        byte[] r0;
        byte $b1, b2;
        int $i0, i3, $i4, $i5, $i6;
        boolean $z0;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: void checkArgument(boolean)>($z0);

        b2 = r0[0];

        i3 = 1;

     label3:
        $i4 = lengthof r0;

        if i3 >= $i4 goto label5;

        $b1 = r0[i3];

        $i5 = (int) $b1;

        $i6 = (int) b2;

        if $i5 >= $i6 goto label4;

        b2 = r0[i3];

     label4:
        i3 = i3 + 1;

        goto label3;

     label5:
        return b2;
    }

    public static transient byte max(byte[])
    {
        byte[] r0;
        byte $b1, b2;
        int $i0, i3, $i4, $i5, $i6;
        boolean $z0;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: void checkArgument(boolean)>($z0);

        b2 = r0[0];

        i3 = 1;

     label3:
        $i4 = lengthof r0;

        if i3 >= $i4 goto label5;

        $b1 = r0[i3];

        $i5 = (int) $b1;

        $i6 = (int) b2;

        if $i5 <= $i6 goto label4;

        b2 = r0[i3];

     label4:
        i3 = i3 + 1;

        goto label3;

     label5:
        return b2;
    }

    public static transient java.lang.String join(java.lang.String, byte[])
    {
        byte[] r1;
        byte $b3, $b5;
        int $i0, $i1, $i2, $i4, i6, $i7, $i8;
        java.lang.StringBuilder $r4, $r5;
        java.lang.String r0, $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: byte[];

        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $i0 = lengthof r1;

        if $i0 != 0 goto label1;

        return "";

     label1:
        $r5 = new java.lang.StringBuilder;

        $i1 = lengthof r1;

        $i2 = $i1 * 5;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>($i2);

        $b3 = r1[0];

        $i7 = (int) $b3;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        i6 = 1;

     label2:
        $i4 = lengthof r1;

        if i6 >= $i4 goto label3;

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $b5 = r1[i6];

        $i8 = (int) $b5;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        i6 = i6 + 1;

        goto label2;

     label3:
        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static java.util.Comparator lexicographicalComparator()
    {
        com.mycila.inject.internal.guava.primitives.SignedBytes$LexicographicalComparator $r0;

        $r0 = <com.mycila.inject.internal.guava.primitives.SignedBytes$LexicographicalComparator: com.mycila.inject.internal.guava.primitives.SignedBytes$LexicographicalComparator INSTANCE>;

        return $r0;
    }

    public static void <clinit>()
    {
        <com.mycila.inject.internal.guava.primitives.SignedBytes: byte MAX_POWER_OF_TWO> = 64;

        return;
    }
}
