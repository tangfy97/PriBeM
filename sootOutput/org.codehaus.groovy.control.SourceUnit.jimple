public class org.codehaus.groovy.control.SourceUnit extends org.codehaus.groovy.control.ProcessingUnit
{
    private org.codehaus.groovy.control.ParserPlugin parserPlugin;
    protected org.codehaus.groovy.control.io.ReaderSource source;
    protected java.lang.String name;
    protected org.codehaus.groovy.syntax.Reduction cst;
    protected org.codehaus.groovy.ast.ModuleNode ast;

    public void <init>(java.lang.String, org.codehaus.groovy.control.io.ReaderSource, org.codehaus.groovy.control.CompilerConfiguration, groovy.lang.GroovyClassLoader, org.codehaus.groovy.control.ErrorCollector)
    {
        org.codehaus.groovy.control.ErrorCollector r3;
        org.codehaus.groovy.control.SourceUnit r0;
        org.codehaus.groovy.control.io.ReaderSource r5;
        java.lang.String r4;
        org.codehaus.groovy.control.CompilerConfiguration r1;
        groovy.lang.GroovyClassLoader r2;

        r0 := @this: org.codehaus.groovy.control.SourceUnit;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: org.codehaus.groovy.control.io.ReaderSource;

        r1 := @parameter2: org.codehaus.groovy.control.CompilerConfiguration;

        r2 := @parameter3: groovy.lang.GroovyClassLoader;

        r3 := @parameter4: org.codehaus.groovy.control.ErrorCollector;

        specialinvoke r0.<org.codehaus.groovy.control.ProcessingUnit: void <init>(org.codehaus.groovy.control.CompilerConfiguration,groovy.lang.GroovyClassLoader,org.codehaus.groovy.control.ErrorCollector)>(r1, r2, r3);

        r0.<org.codehaus.groovy.control.SourceUnit: java.lang.String name> = r4;

        r0.<org.codehaus.groovy.control.SourceUnit: org.codehaus.groovy.control.io.ReaderSource source> = r5;

        return;
    }

    public void <init>(java.io.File, org.codehaus.groovy.control.CompilerConfiguration, groovy.lang.GroovyClassLoader, org.codehaus.groovy.control.ErrorCollector)
    {
        org.codehaus.groovy.control.io.FileReaderSource $r3;
        org.codehaus.groovy.control.ErrorCollector r6;
        org.codehaus.groovy.control.SourceUnit r0;
        java.lang.String $r2;
        org.codehaus.groovy.control.CompilerConfiguration r4;
        groovy.lang.GroovyClassLoader r5;
        java.io.File r1;

        r0 := @this: org.codehaus.groovy.control.SourceUnit;

        r1 := @parameter0: java.io.File;

        r4 := @parameter1: org.codehaus.groovy.control.CompilerConfiguration;

        r5 := @parameter2: groovy.lang.GroovyClassLoader;

        r6 := @parameter3: org.codehaus.groovy.control.ErrorCollector;

        $r2 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        $r3 = new org.codehaus.groovy.control.io.FileReaderSource;

        specialinvoke $r3.<org.codehaus.groovy.control.io.FileReaderSource: void <init>(java.io.File,org.codehaus.groovy.control.CompilerConfiguration)>(r1, r4);

        specialinvoke r0.<org.codehaus.groovy.control.SourceUnit: void <init>(java.lang.String,org.codehaus.groovy.control.io.ReaderSource,org.codehaus.groovy.control.CompilerConfiguration,groovy.lang.GroovyClassLoader,org.codehaus.groovy.control.ErrorCollector)>($r2, $r3, r4, r5, r6);

        return;
    }

    public void <init>(java.net.URL, org.codehaus.groovy.control.CompilerConfiguration, groovy.lang.GroovyClassLoader, org.codehaus.groovy.control.ErrorCollector)
    {
        org.codehaus.groovy.control.ErrorCollector r6;
        org.codehaus.groovy.control.io.URLReaderSource $r3;
        org.codehaus.groovy.control.SourceUnit r0;
        java.net.URL r1;
        java.lang.String $r2;
        org.codehaus.groovy.control.CompilerConfiguration r4;
        groovy.lang.GroovyClassLoader r5;

        r0 := @this: org.codehaus.groovy.control.SourceUnit;

        r1 := @parameter0: java.net.URL;

        r4 := @parameter1: org.codehaus.groovy.control.CompilerConfiguration;

        r5 := @parameter2: groovy.lang.GroovyClassLoader;

        r6 := @parameter3: org.codehaus.groovy.control.ErrorCollector;

        $r2 = virtualinvoke r1.<java.net.URL: java.lang.String getPath()>();

        $r3 = new org.codehaus.groovy.control.io.URLReaderSource;

        specialinvoke $r3.<org.codehaus.groovy.control.io.URLReaderSource: void <init>(java.net.URL,org.codehaus.groovy.control.CompilerConfiguration)>(r1, r4);

        specialinvoke r0.<org.codehaus.groovy.control.SourceUnit: void <init>(java.lang.String,org.codehaus.groovy.control.io.ReaderSource,org.codehaus.groovy.control.CompilerConfiguration,groovy.lang.GroovyClassLoader,org.codehaus.groovy.control.ErrorCollector)>($r2, $r3, r4, r5, r6);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, org.codehaus.groovy.control.CompilerConfiguration, groovy.lang.GroovyClassLoader, org.codehaus.groovy.control.ErrorCollector)
    {
        org.codehaus.groovy.control.ErrorCollector r6;
        org.codehaus.groovy.control.SourceUnit r0;
        org.codehaus.groovy.control.io.StringReaderSource $r2;
        java.lang.String r1, r3;
        org.codehaus.groovy.control.CompilerConfiguration r4;
        groovy.lang.GroovyClassLoader r5;

        r0 := @this: org.codehaus.groovy.control.SourceUnit;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: org.codehaus.groovy.control.CompilerConfiguration;

        r5 := @parameter3: groovy.lang.GroovyClassLoader;

        r6 := @parameter4: org.codehaus.groovy.control.ErrorCollector;

        $r2 = new org.codehaus.groovy.control.io.StringReaderSource;

        specialinvoke $r2.<org.codehaus.groovy.control.io.StringReaderSource: void <init>(java.lang.String,org.codehaus.groovy.control.CompilerConfiguration)>(r3, r4);

        specialinvoke r0.<org.codehaus.groovy.control.SourceUnit: void <init>(java.lang.String,org.codehaus.groovy.control.io.ReaderSource,org.codehaus.groovy.control.CompilerConfiguration,groovy.lang.GroovyClassLoader,org.codehaus.groovy.control.ErrorCollector)>(r1, $r2, r4, r5, r6);

        return;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        org.codehaus.groovy.control.SourceUnit r0;

        r0 := @this: org.codehaus.groovy.control.SourceUnit;

        $r1 = r0.<org.codehaus.groovy.control.SourceUnit: java.lang.String name>;

        return $r1;
    }

    public org.codehaus.groovy.syntax.Reduction getCST()
    {
        org.codehaus.groovy.syntax.Reduction $r1;
        org.codehaus.groovy.control.SourceUnit r0;

        r0 := @this: org.codehaus.groovy.control.SourceUnit;

        $r1 = r0.<org.codehaus.groovy.control.SourceUnit: org.codehaus.groovy.syntax.Reduction cst>;

        return $r1;
    }

    public org.codehaus.groovy.ast.ModuleNode getAST()
    {
        org.codehaus.groovy.control.SourceUnit r0;
        org.codehaus.groovy.ast.ModuleNode $r1;

        r0 := @this: org.codehaus.groovy.control.SourceUnit;

        $r1 = r0.<org.codehaus.groovy.control.SourceUnit: org.codehaus.groovy.ast.ModuleNode ast>;

        return $r1;
    }

    public boolean failedWithUnexpectedEOF()
    {
        java.lang.Throwable r12;
        groovyjarjarantlr.NoViableAltException $r8;
        int $i0, $i3, $i5, $i6, $i8;
        groovyjarjarantlr.MismatchedTokenException $r4;
        groovyjarjarantlr.MismatchedCharException $r6;
        groovyjarjarantlr.Token $r5, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        org.codehaus.groovy.control.ErrorCollector $r1, $r2;
        org.codehaus.groovy.control.SourceUnit r0;
        org.codehaus.groovy.control.messages.Message $r3;
        org.codehaus.groovy.control.messages.SyntaxErrorMessage $r10;
        char c1, c2;
        groovyjarjarantlr.NoViableAltForCharException $r7;
        org.codehaus.groovy.syntax.SyntaxException $r11;

        r0 := @this: org.codehaus.groovy.control.SourceUnit;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.control.SourceUnit: org.codehaus.groovy.control.ErrorCollector getErrorCollector()>();

        $z0 = virtualinvoke $r1.<org.codehaus.groovy.control.ErrorCollector: boolean hasErrors()>();

        if $z0 == 0 goto label9;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.control.SourceUnit: org.codehaus.groovy.control.ErrorCollector getErrorCollector()>();

        $r3 = virtualinvoke $r2.<org.codehaus.groovy.control.ErrorCollector: org.codehaus.groovy.control.messages.Message getLastError()>();

        r12 = null;

        $z1 = $r3 instanceof org.codehaus.groovy.control.messages.SyntaxErrorMessage;

        if $z1 == 0 goto label1;

        $r10 = (org.codehaus.groovy.control.messages.SyntaxErrorMessage) $r3;

        $r11 = virtualinvoke $r10.<org.codehaus.groovy.control.messages.SyntaxErrorMessage: org.codehaus.groovy.syntax.SyntaxException getCause()>();

        r12 = virtualinvoke $r11.<org.codehaus.groovy.syntax.SyntaxException: java.lang.Throwable getCause()>();

     label1:
        if r12 == null goto label9;

        $z2 = r12 instanceof groovyjarjarantlr.NoViableAltException;

        if $z2 == 0 goto label2;

        $r8 = (groovyjarjarantlr.NoViableAltException) r12;

        $r9 = $r8.<groovyjarjarantlr.NoViableAltException: groovyjarjarantlr.Token token>;

        $z7 = virtualinvoke r0.<org.codehaus.groovy.control.SourceUnit: boolean isEofToken(groovyjarjarantlr.Token)>($r9);

        return $z7;

     label2:
        $z3 = r12 instanceof groovyjarjarantlr.NoViableAltForCharException;

        if $z3 == 0 goto label5;

        $r7 = (groovyjarjarantlr.NoViableAltForCharException) r12;

        c1 = $r7.<groovyjarjarantlr.NoViableAltForCharException: char foundChar>;

        $i3 = (int) c1;

        $i5 = (int) 65535;

        if $i3 != $i5 goto label3;

        $z8 = 1;

        goto label4;

     label3:
        $z8 = 0;

     label4:
        return $z8;

     label5:
        $z4 = r12 instanceof groovyjarjarantlr.MismatchedCharException;

        if $z4 == 0 goto label8;

        $r6 = (groovyjarjarantlr.MismatchedCharException) r12;

        $i0 = $r6.<groovyjarjarantlr.MismatchedCharException: int foundChar>;

        c2 = (char) $i0;

        $i6 = (int) c2;

        $i8 = (int) 65535;

        if $i6 != $i8 goto label6;

        $z9 = 1;

        goto label7;

     label6:
        $z9 = 0;

     label7:
        return $z9;

     label8:
        $z5 = r12 instanceof groovyjarjarantlr.MismatchedTokenException;

        if $z5 == 0 goto label9;

        $r4 = (groovyjarjarantlr.MismatchedTokenException) r12;

        $r5 = $r4.<groovyjarjarantlr.MismatchedTokenException: groovyjarjarantlr.Token token>;

        $z6 = virtualinvoke r0.<org.codehaus.groovy.control.SourceUnit: boolean isEofToken(groovyjarjarantlr.Token)>($r5);

        return $z6;

     label9:
        return 0;
    }

    protected boolean isEofToken(groovyjarjarantlr.Token)
    {
        org.codehaus.groovy.control.SourceUnit r1;
        int $i0;
        groovyjarjarantlr.Token r0;
        boolean $z0;

        r1 := @this: org.codehaus.groovy.control.SourceUnit;

        r0 := @parameter0: groovyjarjarantlr.Token;

        $i0 = virtualinvoke r0.<groovyjarjarantlr.Token: int getType()>();

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static org.codehaus.groovy.control.SourceUnit create(java.lang.String, java.lang.String)
    {
        org.codehaus.groovy.control.ErrorCollector $r4;
        org.codehaus.groovy.control.SourceUnit $r1;
        java.lang.String r2, r3;
        org.codehaus.groovy.control.CompilerConfiguration $r0;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r0 = new org.codehaus.groovy.control.CompilerConfiguration;

        specialinvoke $r0.<org.codehaus.groovy.control.CompilerConfiguration: void <init>()>();

        virtualinvoke $r0.<org.codehaus.groovy.control.CompilerConfiguration: void setTolerance(int)>(1);

        $r1 = new org.codehaus.groovy.control.SourceUnit;

        $r4 = new org.codehaus.groovy.control.ErrorCollector;

        specialinvoke $r4.<org.codehaus.groovy.control.ErrorCollector: void <init>(org.codehaus.groovy.control.CompilerConfiguration)>($r0);

        specialinvoke $r1.<org.codehaus.groovy.control.SourceUnit: void <init>(java.lang.String,java.lang.String,org.codehaus.groovy.control.CompilerConfiguration,groovy.lang.GroovyClassLoader,org.codehaus.groovy.control.ErrorCollector)>(r2, r3, $r0, null, $r4);

        return $r1;
    }

    public static org.codehaus.groovy.control.SourceUnit create(java.lang.String, java.lang.String, int)
    {
        org.codehaus.groovy.control.ErrorCollector $r4;
        org.codehaus.groovy.control.SourceUnit $r1;
        int i0;
        java.lang.String r2, r3;
        org.codehaus.groovy.control.CompilerConfiguration $r0;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r0 = new org.codehaus.groovy.control.CompilerConfiguration;

        specialinvoke $r0.<org.codehaus.groovy.control.CompilerConfiguration: void <init>()>();

        virtualinvoke $r0.<org.codehaus.groovy.control.CompilerConfiguration: void setTolerance(int)>(i0);

        $r1 = new org.codehaus.groovy.control.SourceUnit;

        $r4 = new org.codehaus.groovy.control.ErrorCollector;

        specialinvoke $r4.<org.codehaus.groovy.control.ErrorCollector: void <init>(org.codehaus.groovy.control.CompilerConfiguration)>($r0);

        specialinvoke $r1.<org.codehaus.groovy.control.SourceUnit: void <init>(java.lang.String,java.lang.String,org.codehaus.groovy.control.CompilerConfiguration,groovy.lang.GroovyClassLoader,org.codehaus.groovy.control.ErrorCollector)>(r2, r3, $r0, null, $r4);

        return $r1;
    }

    public void parse() throws org.codehaus.groovy.control.CompilationFailedException
    {
        java.lang.Throwable $r10;
        org.codehaus.groovy.syntax.Reduction $r7;
        int $i0, $i1;
        java.lang.String $r15;
        org.codehaus.groovy.control.ErrorCollector $r13;
        org.codehaus.groovy.control.messages.SimpleMessage $r14;
        org.codehaus.groovy.control.SourceUnit r0;
        org.codehaus.groovy.control.io.ReaderSource $r1;
        java.io.IOException $r9, $r11, $r12, $r16;
        java.io.Reader $r2, r17;
        org.codehaus.groovy.control.CompilerConfiguration $r3;
        org.codehaus.groovy.GroovyBugError $r8;
        org.codehaus.groovy.control.ParserPluginFactory $r4;
        org.codehaus.groovy.control.ParserPlugin $r5, $r6;

        r0 := @this: org.codehaus.groovy.control.SourceUnit;

        $i0 = r0.<org.codehaus.groovy.control.SourceUnit: int phase>;

        if $i0 <= 2 goto label01;

        $r8 = new org.codehaus.groovy.GroovyBugError;

        specialinvoke $r8.<org.codehaus.groovy.GroovyBugError: void <init>(java.lang.String)>("parsing is already complete");

        throw $r8;

     label01:
        $i1 = r0.<org.codehaus.groovy.control.SourceUnit: int phase>;

        if $i1 != 1 goto label02;

        virtualinvoke r0.<org.codehaus.groovy.control.SourceUnit: void nextPhase()>();

     label02:
        r17 = null;

     label03:
        $r1 = r0.<org.codehaus.groovy.control.SourceUnit: org.codehaus.groovy.control.io.ReaderSource source>;

        $r2 = interfaceinvoke $r1.<org.codehaus.groovy.control.io.ReaderSource: java.io.Reader getReader()>();

        r17 = $r2;

        $r3 = virtualinvoke r0.<org.codehaus.groovy.control.SourceUnit: org.codehaus.groovy.control.CompilerConfiguration getConfiguration()>();

        $r4 = virtualinvoke $r3.<org.codehaus.groovy.control.CompilerConfiguration: org.codehaus.groovy.control.ParserPluginFactory getPluginFactory()>();

        $r5 = virtualinvoke $r4.<org.codehaus.groovy.control.ParserPluginFactory: org.codehaus.groovy.control.ParserPlugin createParserPlugin()>();

        r0.<org.codehaus.groovy.control.SourceUnit: org.codehaus.groovy.control.ParserPlugin parserPlugin> = $r5;

        $r6 = r0.<org.codehaus.groovy.control.SourceUnit: org.codehaus.groovy.control.ParserPlugin parserPlugin>;

        $r7 = interfaceinvoke $r6.<org.codehaus.groovy.control.ParserPlugin: org.codehaus.groovy.syntax.Reduction parseCST(org.codehaus.groovy.control.SourceUnit,java.io.Reader)>(r0, $r2);

        r0.<org.codehaus.groovy.control.SourceUnit: org.codehaus.groovy.syntax.Reduction cst> = $r7;

        virtualinvoke $r2.<java.io.Reader: void close()>();

     label04:
        if $r2 == null goto label19;

     label05:
        virtualinvoke $r2.<java.io.Reader: void close()>();

     label06:
        goto label19;

     label07:
        $r16 := @caughtexception;

        goto label19;

     label08:
        $r12 := @caughtexception;

        $r13 = virtualinvoke r0.<org.codehaus.groovy.control.SourceUnit: org.codehaus.groovy.control.ErrorCollector getErrorCollector()>();

        $r14 = new org.codehaus.groovy.control.messages.SimpleMessage;

        $r15 = virtualinvoke $r12.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r14.<org.codehaus.groovy.control.messages.SimpleMessage: void <init>(java.lang.String,org.codehaus.groovy.control.ProcessingUnit)>($r15, r0);

        virtualinvoke $r13.<org.codehaus.groovy.control.ErrorCollector: void addFatalError(org.codehaus.groovy.control.messages.Message)>($r14);

     label09:
        if r17 == null goto label19;

     label10:
        virtualinvoke r17.<java.io.Reader: void close()>();

     label11:
        goto label19;

     label12:
        $r11 := @caughtexception;

        goto label19;

     label13:
        $r10 := @caughtexception;

     label14:
        if r17 == null goto label18;

     label15:
        virtualinvoke r17.<java.io.Reader: void close()>();

     label16:
        goto label18;

     label17:
        $r9 := @caughtexception;

     label18:
        throw $r10;

     label19:
        return;

        catch java.io.IOException from label05 to label06 with label07;
        catch java.io.IOException from label03 to label04 with label08;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.io.IOException from label15 to label16 with label17;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public void convert() throws org.codehaus.groovy.control.CompilationFailedException
    {
        org.codehaus.groovy.ast.ModuleNode $r4, $r6, $r10;
        org.codehaus.groovy.control.SourceUnit$1 $r7;
        org.codehaus.groovy.syntax.Reduction $r1;
        int $i0, $i1;
        java.lang.String $r5, $r9, $r11, $r16;
        boolean $z0, $z1;
        org.codehaus.groovy.control.ErrorCollector $r14;
        org.codehaus.groovy.control.SourceUnit r0;
        org.codehaus.groovy.control.messages.SyntaxErrorMessage $r15;
        org.codehaus.groovy.GroovyBugError $r12;
        org.codehaus.groovy.control.ParserPlugin $r3;
        java.lang.Object $r8;
        groovy.lang.GroovyClassLoader $r2;
        org.codehaus.groovy.syntax.SyntaxException $r13;

        r0 := @this: org.codehaus.groovy.control.SourceUnit;

        $i0 = r0.<org.codehaus.groovy.control.SourceUnit: int phase>;

        if $i0 != 2 goto label1;

        $z1 = r0.<org.codehaus.groovy.control.SourceUnit: boolean phaseComplete>;

        if $z1 == 0 goto label1;

        virtualinvoke r0.<org.codehaus.groovy.control.SourceUnit: void gotoPhase(int)>(3);

     label1:
        $i1 = r0.<org.codehaus.groovy.control.SourceUnit: int phase>;

        if $i1 == 3 goto label2;

        $r12 = new org.codehaus.groovy.GroovyBugError;

        specialinvoke $r12.<org.codehaus.groovy.GroovyBugError: void <init>(java.lang.String)>("SourceUnit not ready for convert()");

        throw $r12;

     label2:
        $r3 = r0.<org.codehaus.groovy.control.SourceUnit: org.codehaus.groovy.control.ParserPlugin parserPlugin>;

        $r2 = r0.<org.codehaus.groovy.control.SourceUnit: groovy.lang.GroovyClassLoader classLoader>;

        $r1 = r0.<org.codehaus.groovy.control.SourceUnit: org.codehaus.groovy.syntax.Reduction cst>;

        $r4 = interfaceinvoke $r3.<org.codehaus.groovy.control.ParserPlugin: org.codehaus.groovy.ast.ModuleNode buildAST(org.codehaus.groovy.control.SourceUnit,java.lang.ClassLoader,org.codehaus.groovy.syntax.Reduction)>(r0, $r2, $r1);

        r0.<org.codehaus.groovy.control.SourceUnit: org.codehaus.groovy.ast.ModuleNode ast> = $r4;

        $r6 = r0.<org.codehaus.groovy.control.SourceUnit: org.codehaus.groovy.ast.ModuleNode ast>;

        $r5 = r0.<org.codehaus.groovy.control.SourceUnit: java.lang.String name>;

        virtualinvoke $r6.<org.codehaus.groovy.ast.ModuleNode: void setDescription(java.lang.String)>($r5);

     label3:
        goto label5;

     label4:
        $r13 := @caughtexception;

        $r14 = virtualinvoke r0.<org.codehaus.groovy.control.SourceUnit: org.codehaus.groovy.control.ErrorCollector getErrorCollector()>();

        $r15 = new org.codehaus.groovy.control.messages.SyntaxErrorMessage;

        specialinvoke $r15.<org.codehaus.groovy.control.messages.SyntaxErrorMessage: void <init>(org.codehaus.groovy.syntax.SyntaxException,org.codehaus.groovy.control.SourceUnit)>($r13, r0);

        virtualinvoke $r14.<org.codehaus.groovy.control.ErrorCollector: void addError(org.codehaus.groovy.control.messages.Message)>($r15);

     label5:
        $r7 = new org.codehaus.groovy.control.SourceUnit$1;

        specialinvoke $r7.<org.codehaus.groovy.control.SourceUnit$1: void <init>(org.codehaus.groovy.control.SourceUnit)>(r0);

        $r8 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r7);

        $r16 = (java.lang.String) $r8;

        $r9 = "xml";

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z0 == 0 goto label6;

        $r11 = r0.<org.codehaus.groovy.control.SourceUnit: java.lang.String name>;

        $r10 = r0.<org.codehaus.groovy.control.SourceUnit: org.codehaus.groovy.ast.ModuleNode ast>;

        specialinvoke r0.<org.codehaus.groovy.control.SourceUnit: void saveAsXML(java.lang.String,org.codehaus.groovy.ast.ModuleNode)>($r11, $r10);

     label6:
        return;

        catch org.codehaus.groovy.syntax.SyntaxException from label2 to label3 with label4;
    }

    private void saveAsXML(java.lang.String, org.codehaus.groovy.ast.ModuleNode)
    {
        com.thoughtworks.xstream.XStream $r0;
        org.codehaus.groovy.ast.ModuleNode r1;
        java.lang.StringBuffer $r3, $r5, $r6, $r8, $r10, $r11, $r12, $r15, $r17, $r18, $r19;
        java.lang.String r4, $r7, $r13, $r20;
        java.io.PrintStream $r9, $r16;
        org.codehaus.groovy.control.SourceUnit r21;
        java.io.FileWriter $r2;
        java.lang.Exception $r14;

        r21 := @this: org.codehaus.groovy.control.SourceUnit;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: org.codehaus.groovy.ast.ModuleNode;

        $r0 = new com.thoughtworks.xstream.XStream;

        specialinvoke $r0.<com.thoughtworks.xstream.XStream: void <init>()>();

     label1:
        $r2 = new java.io.FileWriter;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".xml");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r2.<java.io.FileWriter: void <init>(java.lang.String)>($r7);

        virtualinvoke $r0.<com.thoughtworks.xstream.XStream: void toXML(java.lang.Object,java.io.Writer)>(r1, $r2);

        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Written AST to ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".xml");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r13);

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        $r16 = <java.lang.System: java.io.PrintStream out>;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Couldn\'t write to ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".xml");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r20);

        virtualinvoke $r14.<java.lang.Exception: void printStackTrace()>();

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.lang.String getSample(int, int, org.codehaus.groovy.control.Janitor)
    {
        org.codehaus.groovy.control.io.ReaderSource $r2;
        org.codehaus.groovy.control.Janitor r1;
        java.lang.StringBuffer $r4, $r6, $r7, $r9, $r10, $r11, $r13, $r14, $r15, $r16, $r17, $r19, $r21, $r22, $r24;
        int i0, i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String $r3, $r5, $r8, $r12, $r18, $r20, $r23, r25;
        org.codehaus.groovy.control.SourceUnit r0;

        r0 := @this: org.codehaus.groovy.control.SourceUnit;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: org.codehaus.groovy.control.Janitor;

        r25 = null;

        $r2 = r0.<org.codehaus.groovy.control.SourceUnit: org.codehaus.groovy.control.io.ReaderSource source>;

        $r3 = interfaceinvoke $r2.<org.codehaus.groovy.control.io.ReaderSource: java.lang.String getLine(int,org.codehaus.groovy.control.Janitor)>(i0, r1);

        if $r3 == null goto label6;

        if i1 <= 0 goto label5;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $i2 = i1 - 1;

        $r5 = staticinvoke <org.codehaus.groovy.tools.Utilities: java.lang.String repeatString(java.lang.String,int)>(" ", $i2);

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("^");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        if i1 <= 40 goto label3;

        $i3 = i1 - 30;

        i4 = $i3 - 1;

        $i5 = i1 + 10;

        $i6 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i5 <= $i6 goto label1;

        $i9 = virtualinvoke $r3.<java.lang.String: int length()>();

        goto label2;

     label1:
        $i7 = i1 + 10;

        $i9 = $i7 - 1;

     label2:
        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("   ");

        $r18 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(i4, $i9);

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = staticinvoke <org.codehaus.groovy.tools.Utilities: java.lang.String eol()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("   ");

        $i8 = virtualinvoke $r8.<java.lang.String: int length()>();

        $r23 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int,int)>(i4, $i8);

        $r24 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label4;

     label3:
        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("   ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r12 = staticinvoke <org.codehaus.groovy.tools.Utilities: java.lang.String eol()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("   ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        r25 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

     label4:
        goto label6;

     label5:
        r25 = $r3;

     label6:
        return r25;
    }

    public void addException(java.lang.Exception) throws org.codehaus.groovy.control.CompilationFailedException
    {
        org.codehaus.groovy.control.ErrorCollector $r1;
        org.codehaus.groovy.control.SourceUnit r0;
        java.lang.Exception r2;

        r0 := @this: org.codehaus.groovy.control.SourceUnit;

        r2 := @parameter0: java.lang.Exception;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.control.SourceUnit: org.codehaus.groovy.control.ErrorCollector getErrorCollector()>();

        virtualinvoke $r1.<org.codehaus.groovy.control.ErrorCollector: void addException(java.lang.Exception,org.codehaus.groovy.control.SourceUnit)>(r2, r0);

        return;
    }

    public void addError(org.codehaus.groovy.syntax.SyntaxException) throws org.codehaus.groovy.control.CompilationFailedException
    {
        org.codehaus.groovy.control.ErrorCollector $r1;
        org.codehaus.groovy.control.SourceUnit r0;
        org.codehaus.groovy.syntax.SyntaxException r2;

        r0 := @this: org.codehaus.groovy.control.SourceUnit;

        r2 := @parameter0: org.codehaus.groovy.syntax.SyntaxException;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.control.SourceUnit: org.codehaus.groovy.control.ErrorCollector getErrorCollector()>();

        virtualinvoke $r1.<org.codehaus.groovy.control.ErrorCollector: void addError(org.codehaus.groovy.syntax.SyntaxException,org.codehaus.groovy.control.SourceUnit)>(r2, r0);

        return;
    }
}
