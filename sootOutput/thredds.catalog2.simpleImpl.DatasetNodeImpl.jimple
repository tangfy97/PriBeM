class thredds.catalog2.simpleImpl.DatasetNodeImpl extends java.lang.Object implements thredds.catalog2.DatasetNode, thredds.catalog2.builder.DatasetNodeBuilder
{
    private java.lang.String id;
    private java.lang.String idAuthority;
    private java.lang.String name;
    private thredds.catalog2.simpleImpl.PropertyContainer propertyContainer;
    private thredds.catalog2.simpleImpl.ThreddsMetadataImpl threddsMetadataImpl;
    private java.util.List metadataImplList;
    private thredds.catalog2.simpleImpl.CatalogImpl parentCatalog;
    protected thredds.catalog2.simpleImpl.DatasetNodeImpl parent;
    private thredds.catalog2.simpleImpl.DatasetNodeContainer parentDatasetContainer;
    private thredds.catalog2.simpleImpl.DatasetNodeContainer datasetContainer;
    private boolean isBuilt;

    void <init>(java.lang.String, thredds.catalog2.simpleImpl.CatalogImpl, thredds.catalog2.simpleImpl.DatasetNodeImpl)
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0, r3, $r5, $r11;
        java.lang.String r1;
        thredds.catalog2.simpleImpl.CatalogImpl r2, $r6, $r9;
        thredds.catalog2.simpleImpl.PropertyContainer $r4;
        java.lang.IllegalArgumentException $r13;
        thredds.catalog2.simpleImpl.DatasetNodeContainer $r7, $r8, $r10, $r12, $r14, $r15;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: thredds.catalog2.simpleImpl.CatalogImpl;

        r3 := @parameter2: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: boolean isBuilt> = 0;

        if r1 != null goto label1;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("DatasetNode name must not be null.");

        throw $r13;

     label1:
        r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.lang.String name> = r1;

        r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.CatalogImpl parentCatalog> = r2;

        r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.DatasetNodeImpl parent> = r3;

        $r4 = new thredds.catalog2.simpleImpl.PropertyContainer;

        specialinvoke $r4.<thredds.catalog2.simpleImpl.PropertyContainer: void <init>()>();

        r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.PropertyContainer propertyContainer> = $r4;

        $r5 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.DatasetNodeImpl parent>;

        if $r5 == null goto label2;

        $r11 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.DatasetNodeImpl parent>;

        $r12 = virtualinvoke $r11.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer getDatasetNodeContainer()>();

        r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer parentDatasetContainer> = $r12;

        goto label4;

     label2:
        $r6 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.CatalogImpl parentCatalog>;

        if $r6 == null goto label3;

        $r9 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.CatalogImpl parentCatalog>;

        $r10 = virtualinvoke $r9.<thredds.catalog2.simpleImpl.CatalogImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer getDatasetNodeContainer()>();

        r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer parentDatasetContainer> = $r10;

        goto label4;

     label3:
        r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer parentDatasetContainer> = null;

     label4:
        $r14 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer parentDatasetContainer>;

        if $r14 == null goto label5;

        $r8 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer parentDatasetContainer>;

        $r15 = virtualinvoke $r8.<thredds.catalog2.simpleImpl.DatasetNodeContainer: thredds.catalog2.simpleImpl.DatasetNodeContainer getRootContainer()>();

        goto label6;

     label5:
        $r15 = null;

     label6:
        $r7 = new thredds.catalog2.simpleImpl.DatasetNodeContainer;

        specialinvoke $r7.<thredds.catalog2.simpleImpl.DatasetNodeContainer: void <init>(thredds.catalog2.simpleImpl.DatasetNodeContainer)>($r15);

        r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer datasetContainer> = $r7;

        return;
    }

    thredds.catalog2.simpleImpl.DatasetNodeContainer getDatasetNodeContainer()
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0;
        thredds.catalog2.simpleImpl.DatasetNodeContainer $r1;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        $r1 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer datasetContainer>;

        return $r1;
    }

    public void setId(java.lang.String)
    {
        java.lang.IllegalStateException $r6, $r16, $r17;
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0;
        java.lang.String $r1, r2, $r7, $r12, $r14;
        boolean $z0, $z1, $z2, $z3;
        thredds.catalog2.simpleImpl.DatasetNodeContainer $r3, $r4, $r5, $r8, $r9, $r10, $r11, $r13, $r15;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        r2 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r17 = new java.lang.IllegalStateException;

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNodeBuilder has been finished().");

        throw $r17;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.lang.String id>;

        if $r1 == null goto label5;

        $r7 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.lang.String id>;

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 != 0 goto label8;

        $z3 = virtualinvoke r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: boolean isDatasetIdInUseGlobally(java.lang.String)>(r2);

        if $z3 == 0 goto label2;

        $r16 = new java.lang.IllegalStateException;

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>()>();

        throw $r16;

     label2:
        $r8 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer parentDatasetContainer>;

        if $r8 == null goto label3;

        $r13 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer parentDatasetContainer>;

        $r12 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.lang.String id>;

        virtualinvoke $r13.<thredds.catalog2.simpleImpl.DatasetNodeContainer: boolean removeDatasetNodeByGloballyUniqueId(java.lang.String)>($r12);

        $r15 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer parentDatasetContainer>;

        $r14 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.lang.String id>;

        virtualinvoke $r15.<thredds.catalog2.simpleImpl.DatasetNodeContainer: boolean removeDatasetNodeFromLocalById(java.lang.String)>($r14);

     label3:
        if r2 != null goto label4;

        r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.lang.String id> = null;

        return;

     label4:
        r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.lang.String id> = r2;

        $r9 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer parentDatasetContainer>;

        if $r9 == null goto label8;

        $r10 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer parentDatasetContainer>;

        virtualinvoke $r10.<thredds.catalog2.simpleImpl.DatasetNodeContainer: boolean addDatasetNodeByGloballyUniqueId(thredds.catalog2.simpleImpl.DatasetNodeImpl)>(r0);

        $r11 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer parentDatasetContainer>;

        virtualinvoke $r11.<thredds.catalog2.simpleImpl.DatasetNodeContainer: boolean addDatasetNodeToLocalById(thredds.catalog2.simpleImpl.DatasetNodeImpl)>(r0);

        goto label8;

     label5:
        if r2 != null goto label6;

        return;

     label6:
        $z1 = virtualinvoke r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: boolean isDatasetIdInUseGlobally(java.lang.String)>(r2);

        if $z1 == 0 goto label7;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>()>();

        throw $r6;

     label7:
        r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.lang.String id> = r2;

        $r3 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer parentDatasetContainer>;

        if $r3 == null goto label8;

        $r4 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer parentDatasetContainer>;

        virtualinvoke $r4.<thredds.catalog2.simpleImpl.DatasetNodeContainer: boolean addDatasetNodeByGloballyUniqueId(thredds.catalog2.simpleImpl.DatasetNodeImpl)>(r0);

        $r5 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer parentDatasetContainer>;

        virtualinvoke $r5.<thredds.catalog2.simpleImpl.DatasetNodeContainer: boolean addDatasetNodeToLocalById(thredds.catalog2.simpleImpl.DatasetNodeImpl)>(r0);

     label8:
        return;
    }

    public java.lang.String getId()
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0;
        java.lang.String $r1;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        $r1 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.lang.String id>;

        return $r1;
    }

    public void setIdAuthority(java.lang.String)
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0;
        java.lang.IllegalStateException $r2;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNodeBuilder has been finished().");

        throw $r2;

     label1:
        r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.lang.String idAuthority> = r1;

        return;
    }

    public java.lang.String getIdAuthority()
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0;
        java.lang.String $r1;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        $r1 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.lang.String idAuthority>;

        return $r1;
    }

    public void setName(java.lang.String)
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0;
        java.lang.IllegalStateException $r3;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r2;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNodeBuilder has been finished().");

        throw $r3;

     label1:
        if r1 != null goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("DatasetNode name must not be null.");

        throw $r2;

     label2:
        r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.lang.String name> = r1;

        return;
    }

    public java.lang.String getName()
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0;
        java.lang.String $r1;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        $r1 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.lang.String name>;

        return $r1;
    }

    public void addProperty(java.lang.String, java.lang.String)
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0;
        java.lang.IllegalStateException $r4;
        thredds.catalog2.simpleImpl.PropertyContainer $r3;
        java.lang.String r1, r2;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNodeBuilder has been built.");

        throw $r4;

     label1:
        $r3 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.PropertyContainer propertyContainer>;

        virtualinvoke $r3.<thredds.catalog2.simpleImpl.PropertyContainer: void addProperty(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public boolean removeProperty(java.lang.String)
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0;
        java.lang.IllegalStateException $r3;
        thredds.catalog2.simpleImpl.PropertyContainer $r2;
        java.lang.String r1;
        boolean $z0, $z1;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNodeBuilder has been built.");

        throw $r3;

     label1:
        $r2 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.PropertyContainer propertyContainer>;

        $z1 = virtualinvoke $r2.<thredds.catalog2.simpleImpl.PropertyContainer: boolean removeProperty(java.lang.String)>(r1);

        return $z1;
    }

    public java.util.List getPropertyNames()
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0;
        java.lang.IllegalStateException $r3;
        java.util.List $r2;
        thredds.catalog2.simpleImpl.PropertyContainer $r1;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNodeBuilder has been finished().");

        throw $r3;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.PropertyContainer propertyContainer>;

        $r2 = virtualinvoke $r1.<thredds.catalog2.simpleImpl.PropertyContainer: java.util.List getPropertyNames()>();

        return $r2;
    }

    public java.lang.String getPropertyValue(java.lang.String)
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0;
        java.lang.IllegalStateException $r4;
        thredds.catalog2.simpleImpl.PropertyContainer $r2;
        java.lang.String r1, $r3;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNodeBuilder has been finished().");

        throw $r4;

     label1:
        $r2 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.PropertyContainer propertyContainer>;

        $r3 = virtualinvoke $r2.<thredds.catalog2.simpleImpl.PropertyContainer: java.lang.String getPropertyValue(java.lang.String)>(r1);

        return $r3;
    }

    public java.util.List getProperties()
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0;
        java.lang.IllegalStateException $r3;
        java.util.List $r2;
        thredds.catalog2.simpleImpl.PropertyContainer $r1;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: boolean isBuilt>;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNode has escaped from its DatasetNodeBuilder before build() was called.");

        throw $r3;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.PropertyContainer propertyContainer>;

        $r2 = virtualinvoke $r1.<thredds.catalog2.simpleImpl.PropertyContainer: java.util.List getProperties()>();

        return $r2;
    }

    public thredds.catalog2.Property getPropertyByName(java.lang.String)
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0;
        java.lang.IllegalStateException $r4;
        thredds.catalog2.simpleImpl.PropertyContainer $r2;
        thredds.catalog2.Property $r3;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: boolean isBuilt>;

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNode has escaped from its ServiceBuilder before build() was called.");

        throw $r4;

     label1:
        $r2 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.PropertyContainer propertyContainer>;

        $r3 = virtualinvoke $r2.<thredds.catalog2.simpleImpl.PropertyContainer: thredds.catalog2.Property getPropertyByName(java.lang.String)>(r1);

        return $r3;
    }

    public thredds.catalog2.builder.ThreddsMetadataBuilder setNewThreddsMetadataBuilder()
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0;
        java.lang.IllegalStateException $r3;
        thredds.catalog2.simpleImpl.ThreddsMetadataImpl $r1, $r2;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNodeBuilder has been built.");

        throw $r3;

     label1:
        $r1 = new thredds.catalog2.simpleImpl.ThreddsMetadataImpl;

        specialinvoke $r1.<thredds.catalog2.simpleImpl.ThreddsMetadataImpl: void <init>()>();

        r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.ThreddsMetadataImpl threddsMetadataImpl> = $r1;

        $r2 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.ThreddsMetadataImpl threddsMetadataImpl>;

        return $r2;
    }

    public boolean removeThreddsMetadataBuilder()
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0;
        java.lang.IllegalStateException $r1;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNodeBuilder has been built.");

        throw $r1;

     label1:
        r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.ThreddsMetadataImpl threddsMetadataImpl> = null;

        return 1;
    }

    public thredds.catalog2.builder.ThreddsMetadataBuilder getThreddsMetadataBuilder()
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0;
        java.lang.IllegalStateException $r2;
        thredds.catalog2.simpleImpl.ThreddsMetadataImpl $r1;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNodeBuilder has been built.");

        throw $r2;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.ThreddsMetadataImpl threddsMetadataImpl>;

        return $r1;
    }

    public thredds.catalog2.ThreddsMetadata getThreddsMetadata()
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0;
        java.lang.IllegalStateException $r2;
        thredds.catalog2.simpleImpl.ThreddsMetadataImpl $r1;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: boolean isBuilt>;

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNode has escaped its DatasetNodeBuilder before being built.");

        throw $r2;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.ThreddsMetadataImpl threddsMetadataImpl>;

        return $r1;
    }

    public thredds.catalog2.builder.MetadataBuilder addMetadata()
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0;
        java.lang.IllegalStateException $r5;
        thredds.catalog2.simpleImpl.MetadataImpl $r1;
        java.util.List $r2, $r3;
        boolean $z0;
        java.util.ArrayList $r4;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNodeBuilder has been built.");

        throw $r5;

     label1:
        $r1 = new thredds.catalog2.simpleImpl.MetadataImpl;

        specialinvoke $r1.<thredds.catalog2.simpleImpl.MetadataImpl: void <init>()>();

        $r2 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.util.List metadataImplList>;

        if $r2 != null goto label2;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.util.List metadataImplList> = $r4;

     label2:
        $r3 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.util.List metadataImplList>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        return $r1;
    }

    public boolean removeMetadata(thredds.catalog2.builder.MetadataBuilder)
    {
        java.lang.IllegalStateException $r5;
        thredds.catalog2.simpleImpl.MetadataImpl $r3;
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0;
        java.util.List $r2, $r4;
        thredds.catalog2.builder.MetadataBuilder r1;
        boolean $z0, $z1;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        r1 := @parameter0: thredds.catalog2.builder.MetadataBuilder;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNodeBuilder has been built.");

        throw $r5;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r2 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.util.List metadataImplList>;

        if $r2 != null goto label3;

        return 0;

     label3:
        $r4 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.util.List metadataImplList>;

        $r3 = (thredds.catalog2.simpleImpl.MetadataImpl) r1;

        $z1 = interfaceinvoke $r4.<java.util.List: boolean remove(java.lang.Object)>($r3);

        return $z1;
    }

    public java.util.List getMetadata()
    {
        java.lang.IllegalStateException $r6;
        java.util.ArrayList $r2;
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0;
        java.util.List $r1, $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: boolean isBuilt>;

        if $z0 != 0 goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNode has escaped its DatasetNodeBuilder before being built.");

        throw $r6;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.util.List metadataImplList>;

        if $r1 != null goto label2;

        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r5;

     label2:
        $r2 = new java.util.ArrayList;

        $r3 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.util.List metadataImplList>;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        $r4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r4;
    }

    public java.util.List getMetadataBuilders()
    {
        java.lang.IllegalStateException $r6;
        java.util.ArrayList $r2;
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0;
        java.util.List $r1, $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: boolean isBuilt>;

        if $z0 != 0 goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNode has escaped its DatasetNodeBuilder before being built.");

        throw $r6;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.util.List metadataImplList>;

        if $r1 != null goto label2;

        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r5;

     label2:
        $r2 = new java.util.ArrayList;

        $r3 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.util.List metadataImplList>;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        $r4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r4;
    }

    public thredds.catalog2.Catalog getParentCatalog()
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0;
        thredds.catalog2.simpleImpl.CatalogImpl $r1;
        java.lang.IllegalStateException $r2;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: boolean isBuilt>;

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNode has escaped its DatasetNodeBuilder before being built.");

        throw $r2;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.CatalogImpl parentCatalog>;

        return $r1;
    }

    public thredds.catalog2.DatasetNode getParent()
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0, $r1;
        java.lang.IllegalStateException $r2;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: boolean isBuilt>;

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNode has escaped its DatasetNodeBuilder before being built.");

        throw $r2;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.DatasetNodeImpl parent>;

        return $r1;
    }

    public thredds.catalog2.builder.CatalogBuilder getParentCatalogBuilder()
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0;
        thredds.catalog2.simpleImpl.CatalogImpl $r1;
        java.lang.IllegalStateException $r2;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNodeBuilder has been built.");

        throw $r2;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.CatalogImpl parentCatalog>;

        return $r1;
    }

    public thredds.catalog2.builder.DatasetNodeBuilder getParentDatasetBuilder()
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0, $r1;
        java.lang.IllegalStateException $r2;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNodeBuilder has been built.");

        throw $r2;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.DatasetNodeImpl parent>;

        return $r1;
    }

    public boolean isCollection()
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0;
        thredds.catalog2.simpleImpl.DatasetNodeContainer $r1;
        boolean $z0, $z1;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        $r1 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer datasetContainer>;

        $z0 = virtualinvoke $r1.<thredds.catalog2.simpleImpl.DatasetNodeContainer: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean isDatasetIdInUseGlobally(java.lang.String)
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0;
        java.lang.String r1;
        thredds.catalog2.simpleImpl.DatasetNodeContainer $r2;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer datasetContainer>;

        $z0 = virtualinvoke $r2.<thredds.catalog2.simpleImpl.DatasetNodeContainer: boolean isDatasetNodeIdInUseGlobally(java.lang.String)>(r1);

        return $z0;
    }

    public thredds.catalog2.builder.DatasetBuilder addDataset(java.lang.String)
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0;
        thredds.catalog2.simpleImpl.CatalogImpl $r3;
        java.lang.IllegalStateException $r5;
        thredds.catalog2.simpleImpl.DatasetImpl $r1;
        java.lang.String r2;
        thredds.catalog2.simpleImpl.DatasetNodeContainer $r4;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        r2 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNodeBuilder has been built.");

        throw $r5;

     label1:
        $r1 = new thredds.catalog2.simpleImpl.DatasetImpl;

        $r3 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.CatalogImpl parentCatalog>;

        specialinvoke $r1.<thredds.catalog2.simpleImpl.DatasetImpl: void <init>(java.lang.String,thredds.catalog2.simpleImpl.CatalogImpl,thredds.catalog2.simpleImpl.DatasetNodeImpl)>(r2, $r3, r0);

        $r4 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer datasetContainer>;

        virtualinvoke $r4.<thredds.catalog2.simpleImpl.DatasetNodeContainer: void addDatasetNode(thredds.catalog2.simpleImpl.DatasetNodeImpl)>($r1);

        return $r1;
    }

    public thredds.catalog2.builder.CatalogRefBuilder addCatalogRef(java.lang.String, java.net.URI)
    {
        thredds.catalog2.simpleImpl.CatalogImpl $r4;
        java.lang.IllegalStateException $r6;
        thredds.catalog2.simpleImpl.CatalogRefImpl $r1;
        thredds.catalog2.simpleImpl.DatasetNodeContainer $r5;
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0;
        java.lang.String r2;
        java.net.URI r3;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.net.URI;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNodeBuilder has been built.");

        throw $r6;

     label1:
        $r1 = new thredds.catalog2.simpleImpl.CatalogRefImpl;

        $r4 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.CatalogImpl parentCatalog>;

        specialinvoke $r1.<thredds.catalog2.simpleImpl.CatalogRefImpl: void <init>(java.lang.String,java.net.URI,thredds.catalog2.simpleImpl.CatalogImpl,thredds.catalog2.simpleImpl.DatasetNodeImpl)>(r2, r3, $r4, r0);

        $r5 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer datasetContainer>;

        virtualinvoke $r5.<thredds.catalog2.simpleImpl.DatasetNodeContainer: void addDatasetNode(thredds.catalog2.simpleImpl.DatasetNodeImpl)>($r1);

        return $r1;
    }

    public boolean removeDatasetNode(thredds.catalog2.builder.DatasetNodeBuilder)
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0, $r2;
        java.lang.IllegalStateException $r4;
        thredds.catalog2.simpleImpl.DatasetNodeContainer $r3;
        boolean $z0, $z1;
        thredds.catalog2.builder.DatasetNodeBuilder r1;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        r1 := @parameter0: thredds.catalog2.builder.DatasetNodeBuilder;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNodeBuilder has been built.");

        throw $r4;

     label1:
        $r3 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer datasetContainer>;

        $r2 = (thredds.catalog2.simpleImpl.DatasetNodeImpl) r1;

        $z1 = virtualinvoke $r3.<thredds.catalog2.simpleImpl.DatasetNodeContainer: boolean removeDatasetNode(thredds.catalog2.simpleImpl.DatasetNodeImpl)>($r2);

        return $z1;
    }

    public java.util.List getDatasets()
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0;
        java.lang.IllegalStateException $r3;
        java.util.List $r2;
        thredds.catalog2.simpleImpl.DatasetNodeContainer $r1;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: boolean isBuilt>;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNode has escaped its DatasetNodeBuilder before being built.");

        throw $r3;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer datasetContainer>;

        $r2 = virtualinvoke $r1.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List getDatasets()>();

        return $r2;
    }

    public thredds.catalog2.DatasetNode getDatasetById(java.lang.String)
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0;
        java.lang.IllegalStateException $r4;
        thredds.catalog2.DatasetNode $r3;
        java.lang.String r1;
        thredds.catalog2.simpleImpl.DatasetNodeContainer $r2;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: boolean isBuilt>;

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNode has escaped its DatasetNodeBuilder before being built.");

        throw $r4;

     label1:
        $r2 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer datasetContainer>;

        $r3 = virtualinvoke $r2.<thredds.catalog2.simpleImpl.DatasetNodeContainer: thredds.catalog2.DatasetNode getDatasetById(java.lang.String)>(r1);

        return $r3;
    }

    public java.util.List getDatasetNodeBuilders()
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0;
        java.lang.IllegalStateException $r3;
        java.util.List $r2;
        thredds.catalog2.simpleImpl.DatasetNodeContainer $r1;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNodeBuilder has been built.");

        throw $r3;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer datasetContainer>;

        $r2 = virtualinvoke $r1.<thredds.catalog2.simpleImpl.DatasetNodeContainer: java.util.List getDatasetNodeBuilders()>();

        return $r2;
    }

    public thredds.catalog2.builder.DatasetNodeBuilder getDatasetNodeBuilderById(java.lang.String)
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0;
        java.lang.IllegalStateException $r4;
        java.lang.String r1;
        thredds.catalog2.simpleImpl.DatasetNodeContainer $r2;
        boolean $z0;
        thredds.catalog2.builder.DatasetNodeBuilder $r3;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This DatasetNodeBuilder has been built.");

        throw $r4;

     label1:
        $r2 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer datasetContainer>;

        $r3 = virtualinvoke $r2.<thredds.catalog2.simpleImpl.DatasetNodeContainer: thredds.catalog2.builder.DatasetNodeBuilder getDatasetNodeBuilderById(java.lang.String)>(r1);

        return $r3;
    }

    public thredds.catalog2.builder.DatasetNodeBuilder findDatasetNodeBuilderByIdGlobally(java.lang.String)
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0, $r3;
        java.lang.String r1;
        thredds.catalog2.simpleImpl.DatasetNodeContainer $r2;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer datasetContainer>;

        $r3 = virtualinvoke $r2.<thredds.catalog2.simpleImpl.DatasetNodeContainer: thredds.catalog2.simpleImpl.DatasetNodeImpl getDatasetNodeByGloballyUniqueId(java.lang.String)>(r1);

        return $r3;
    }

    public boolean isBuilt()
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: boolean isBuilt>;

        return $z0;
    }

    public thredds.catalog2.builder.BuilderIssues getIssues()
    {
        thredds.catalog2.simpleImpl.MetadataImpl r7;
        java.util.Iterator $r5;
        thredds.catalog2.builder.BuilderIssues $r2, $r8;
        thredds.catalog2.simpleImpl.DatasetNodeContainer $r1;
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0;
        java.util.List $r3, $r4;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        $r1 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer datasetContainer>;

        $r2 = virtualinvoke $r1.<thredds.catalog2.simpleImpl.DatasetNodeContainer: thredds.catalog2.builder.BuilderIssues getIssues()>();

        $r3 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.util.List metadataImplList>;

        if $r3 == null goto label2;

        $r4 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.util.List metadataImplList>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (thredds.catalog2.simpleImpl.MetadataImpl) $r6;

        $r8 = interfaceinvoke r7.<thredds.catalog2.builder.MetadataBuilder: thredds.catalog2.builder.BuilderIssues getIssues()>();

        virtualinvoke $r2.<thredds.catalog2.builder.BuilderIssues: void addAllIssues(thredds.catalog2.builder.BuilderIssues)>($r8);

        goto label1;

     label2:
        return $r2;
    }

    public thredds.catalog2.DatasetNode build() throws thredds.catalog2.builder.BuilderException
    {
        thredds.catalog2.simpleImpl.MetadataImpl r6;
        java.util.Iterator $r4;
        thredds.catalog2.simpleImpl.DatasetNodeContainer $r2;
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0;
        java.util.List $r1, $r3;
        java.lang.Object $r5;
        boolean $z0, $z1;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        $z0 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: boolean isBuilt>;

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r1 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.util.List metadataImplList>;

        if $r1 == null goto label3;

        $r3 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: java.util.List metadataImplList>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (thredds.catalog2.simpleImpl.MetadataImpl) $r5;

        interfaceinvoke r6.<thredds.catalog2.builder.MetadataBuilder: thredds.catalog2.Metadata build()>();

        goto label2;

     label3:
        $r2 = r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.simpleImpl.DatasetNodeContainer datasetContainer>;

        virtualinvoke $r2.<thredds.catalog2.simpleImpl.DatasetNodeContainer: void build()>();

        r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: boolean isBuilt> = 1;

        return r0;
    }

    public volatile java.lang.Object build() throws thredds.catalog2.builder.BuilderException
    {
        thredds.catalog2.simpleImpl.DatasetNodeImpl r0;
        thredds.catalog2.DatasetNode $r1;

        r0 := @this: thredds.catalog2.simpleImpl.DatasetNodeImpl;

        $r1 = virtualinvoke r0.<thredds.catalog2.simpleImpl.DatasetNodeImpl: thredds.catalog2.DatasetNode build()>();

        return $r1;
    }
}
