public class groovyjarjarasm.asm.tree.LookupSwitchInsnNode extends groovyjarjarasm.asm.tree.AbstractInsnNode
{
    public groovyjarjarasm.asm.Label dflt;
    public final java.util.List keys;
    public final java.util.List labels;

    public void <init>(groovyjarjarasm.asm.Label, int[], groovyjarjarasm.asm.Label[])
    {
        groovyjarjarasm.asm.Label[] r5;
        java.lang.Integer $r8;
        java.util.ArrayList $r2, $r4;
        java.util.List $r6, $r7, $r9;
        int[] r3;
        int $i0, $i1, $i2, $i3, i4;
        groovyjarjarasm.asm.tree.LookupSwitchInsnNode r0;
        groovyjarjarasm.asm.Label r1;

        r0 := @this: groovyjarjarasm.asm.tree.LookupSwitchInsnNode;

        r1 := @parameter0: groovyjarjarasm.asm.Label;

        r3 := @parameter1: int[];

        r5 := @parameter2: groovyjarjarasm.asm.Label[];

        specialinvoke r0.<groovyjarjarasm.asm.tree.AbstractInsnNode: void <init>(int)>(171);

        r0.<groovyjarjarasm.asm.tree.LookupSwitchInsnNode: groovyjarjarasm.asm.Label dflt> = r1;

        $r2 = new java.util.ArrayList;

        if r3 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = lengthof r3;

     label2:
        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i2);

        r0.<groovyjarjarasm.asm.tree.LookupSwitchInsnNode: java.util.List keys> = $r2;

        $r4 = new java.util.ArrayList;

        if r5 != null goto label3;

        $i3 = 0;

        goto label4;

     label3:
        $i3 = lengthof r5;

     label4:
        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i3);

        r0.<groovyjarjarasm.asm.tree.LookupSwitchInsnNode: java.util.List labels> = $r4;

        if r3 == null goto label6;

        i4 = 0;

     label5:
        $i0 = lengthof r3;

        if i4 >= $i0 goto label6;

        $r9 = r0.<groovyjarjarasm.asm.tree.LookupSwitchInsnNode: java.util.List keys>;

        $r8 = new java.lang.Integer;

        $i1 = r3[i4];

        specialinvoke $r8.<java.lang.Integer: void <init>(int)>($i1);

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r8);

        i4 = i4 + 1;

        goto label5;

     label6:
        if r5 == null goto label7;

        $r6 = r0.<groovyjarjarasm.asm.tree.LookupSwitchInsnNode: java.util.List labels>;

        $r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r5);

        interfaceinvoke $r6.<java.util.List: boolean addAll(java.util.Collection)>($r7);

     label7:
        return;
    }

    public void accept(groovyjarjarasm.asm.MethodVisitor)
    {
        groovyjarjarasm.asm.Label[] r10;
        java.lang.Integer $r9;
        groovyjarjarasm.asm.MethodVisitor r5;
        int[] r2;
        int $i0, $i1, $i2, $i3, i4;
        groovyjarjarasm.asm.tree.LookupSwitchInsnNode r0;
        groovyjarjarasm.asm.Label $r6;
        java.util.List $r1, $r3, $r4, $r7;
        java.lang.Object $r8;

        r0 := @this: groovyjarjarasm.asm.tree.LookupSwitchInsnNode;

        r5 := @parameter0: groovyjarjarasm.asm.MethodVisitor;

        $r1 = r0.<groovyjarjarasm.asm.tree.LookupSwitchInsnNode: java.util.List keys>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        r2 = newarray (int)[$i0];

        i4 = 0;

     label1:
        $i1 = lengthof r2;

        if i4 >= $i1 goto label2;

        $r7 = r0.<groovyjarjarasm.asm.tree.LookupSwitchInsnNode: java.util.List keys>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i4);

        $r9 = (java.lang.Integer) $r8;

        $i3 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        r2[i4] = $i3;

        i4 = i4 + 1;

        goto label1;

     label2:
        $r3 = r0.<groovyjarjarasm.asm.tree.LookupSwitchInsnNode: java.util.List labels>;

        $i2 = interfaceinvoke $r3.<java.util.List: int size()>();

        r10 = newarray (groovyjarjarasm.asm.Label)[$i2];

        $r4 = r0.<groovyjarjarasm.asm.tree.LookupSwitchInsnNode: java.util.List labels>;

        interfaceinvoke $r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r10);

        $r6 = r0.<groovyjarjarasm.asm.tree.LookupSwitchInsnNode: groovyjarjarasm.asm.Label dflt>;

        interfaceinvoke r5.<groovyjarjarasm.asm.MethodVisitor: void visitLookupSwitchInsn(groovyjarjarasm.asm.Label,int[],groovyjarjarasm.asm.Label[])>($r6, r2, r10);

        return;
    }

    public int getType()
    {
        groovyjarjarasm.asm.tree.LookupSwitchInsnNode r0;

        r0 := @this: groovyjarjarasm.asm.tree.LookupSwitchInsnNode;

        return 11;
    }
}
