public final class org.waveprotocol.wave.federation.ProtocolDocumentOperationUtil$ComponentUtil$UpdateAttributesUtil extends java.lang.Object
{

    private void <init>()
    {
        org.waveprotocol.wave.federation.ProtocolDocumentOperationUtil$ComponentUtil$UpdateAttributesUtil r0;

        r0 := @this: org.waveprotocol.wave.federation.ProtocolDocumentOperationUtil$ComponentUtil$UpdateAttributesUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isEqual(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes, org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes)
    {
        org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes r0, r1;
        java.util.List $r2, $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @parameter0: org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes;

        r1 := @parameter1: org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes;

        $z0 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes: boolean hasEmpty()>();

        $z1 = interfaceinvoke r1.<org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes: boolean hasEmpty()>();

        if $z0 == $z1 goto label1;

        return 0;

     label1:
        $z2 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes: boolean hasEmpty()>();

        if $z2 == 0 goto label2;

        $z4 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes: boolean getEmpty()>();

        $z5 = interfaceinvoke r1.<org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes: boolean getEmpty()>();

        if $z4 == $z5 goto label2;

        return 0;

     label2:
        $r2 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes: java.util.List getAttributeUpdate()>();

        $r3 = interfaceinvoke r1.<org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes: java.util.List getAttributeUpdate()>();

        $z3 = staticinvoke <org.waveprotocol.wave.federation.ProtocolDocumentOperationUtil$ComponentUtil$KeyValueUpdateUtil: boolean areAllEqual(java.util.List,java.util.List)>($r2, $r3);

        if $z3 != 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    public static boolean areAllEqual(java.util.List, java.util.List)
    {
        java.util.Iterator $r2, $r3;
        org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes $r5, $r7;
        java.util.List r0, r1;
        int $i0, $i1;
        java.lang.Object $r4, $r6;
        boolean $z0, $z1;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 == $i1 goto label1;

        return 0;

     label1:
        $r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

        $r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes) $r4;

        $r6 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes) $r6;

        $z1 = staticinvoke <org.waveprotocol.wave.federation.ProtocolDocumentOperationUtil$ComponentUtil$UpdateAttributesUtil: boolean isEqual(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes,org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes)>($r5, $r7);

        if $z1 != 0 goto label2;

        return 0;

     label3:
        return 1;
    }

    public static int getHashCode(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes)
    {
        org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes r0;
        java.util.List $r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Boolean $r2;
        boolean $z0, $z1;

        r0 := @parameter0: org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes;

        $z0 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes: boolean hasEmpty()>();

        if $z0 == 0 goto label1;

        $z1 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes: boolean getEmpty()>();

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $i4 = virtualinvoke $r2.<java.lang.Boolean: int hashCode()>();

        goto label2;

     label1:
        $i4 = 0;

     label2:
        $i2 = 31 + $i4;

        $i0 = 31 * $i2;

        $r1 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes: java.util.List getAttributeUpdate()>();

        $i1 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i3 = $i0 + $i1;

        return $i3;
    }
}
