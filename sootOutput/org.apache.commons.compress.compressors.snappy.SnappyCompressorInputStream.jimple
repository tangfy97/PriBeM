public class org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream extends org.apache.commons.compress.compressors.CompressorInputStream
{
    private static final int TAG_MASK;
    public static final int DEFAULT_BLOCK_SIZE;
    private final byte[] decompressBuf;
    private int writeIndex;
    private int readIndex;
    private final int blockSize;
    private final java.io.InputStream in;
    private final int size;
    private int uncompressedBytesRemaining;
    private final byte[] oneByte;
    private boolean endReached;

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        int $i1;
        org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream;

        r1 := @parameter0: java.io.InputStream;

        $i1 = (int) 32768;

        specialinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: void <init>(java.io.InputStream,int)>(r1, $i1);

        return;
    }

    public void <init>(java.io.InputStream, int) throws java.io.IOException
    {
        byte[] $r1, $r3;
        long $l2;
        org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream r0;
        int i0, $i1, $i3;
        java.io.InputStream r2;

        r0 := @this: org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream;

        r2 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.commons.compress.compressors.CompressorInputStream: void <init>()>();

        $r1 = newarray (byte)[1];

        r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: byte[] oneByte> = $r1;

        r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: boolean endReached> = 0;

        r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: java.io.InputStream in> = r2;

        r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int blockSize> = i0;

        $i1 = i0 * 3;

        $r3 = newarray (byte)[$i1];

        r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: byte[] decompressBuf> = $r3;

        r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int readIndex> = 0;

        r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int writeIndex> = 0;

        $l2 = specialinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: long readSize()>();

        $i3 = (int) $l2;

        r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int size> = $i3;

        r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int uncompressedBytesRemaining> = $i3;

        return;
    }

    public int read() throws java.io.IOException
    {
        byte[] $r1, $r2;
        org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream r0;
        short $s2;
        byte $b1;
        int $i0, $i4;

        r0 := @this: org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream;

        $r1 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: byte[] oneByte>;

        $i0 = virtualinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int read(byte[],int,int)>($r1, 0, 1);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $s2 = -1;

        goto label2;

     label1:
        $r2 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: byte[] oneByte>;

        $b1 = $r2[0];

        $s2 = $b1 & 255;

     label2:
        return $s2;
    }

    public void close() throws java.io.IOException
    {
        org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream;

        $r1 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: java.io.InputStream in>;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

        return;
    }

    public int available()
    {
        org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream r0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream;

        $i1 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int writeIndex>;

        $i0 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int readIndex>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        byte[] r1, $r2;
        org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream r0;
        int $i0, i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12;
        boolean $z0;

        r0 := @this: org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream;

        r1 := @parameter0: byte[];

        i4 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: boolean endReached>;

        if $z0 == 0 goto label1;

        $i12 = (int) -1;

        return $i12;

     label1:
        $i0 = virtualinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int available()>();

        if i1 <= $i0 goto label2;

        $i10 = i1 - $i0;

        specialinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: void fill(int)>($i10);

     label2:
        $i2 = virtualinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int available()>();

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>(i1, $i2);

        $r2 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: byte[] decompressBuf>;

        $i5 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int readIndex>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i5, r1, i4, $i3);

        $i6 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int readIndex>;

        $i7 = $i6 + $i3;

        r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int readIndex> = $i7;

        $i9 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int readIndex>;

        $i8 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int blockSize>;

        if $i9 <= $i8 goto label3;

        specialinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: void slideBuffer()>();

     label3:
        return $i3;
    }

    private void fill(int) throws java.io.IOException
    {
        boolean $z0, $z1, $z2, $z3;
        long $l9, $l12, $l14, $l15, $l20, $l26, l30, l31, l32, l33, l34, l35, l36, l37;
        org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream r0;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i13, $i16, $i17, $i18, $i19, $i21, $i22, $i23, $i24, $i25, $i27, i28, i29, $i38, $i39;

        r0 := @this: org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream;

        i1 := @parameter0: int;

        $i0 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int uncompressedBytesRemaining>;

        if $i0 != 0 goto label1;

        r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: boolean endReached> = 1;

     label1:
        $i2 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int uncompressedBytesRemaining>;

        i28 = staticinvoke <java.lang.Math: int min(int,int)>(i1, $i2);

     label2:
        if i28 <= 0 goto label8;

        $i3 = specialinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int readOneByte()>();

        i29 = 0;

        $i4 = $i3 & 3;

        tableswitch($i4)
        {
            case 0: goto label3;
            case 1: goto label4;
            case 2: goto label5;
            case 3: goto label6;
            default: goto label7;
        };

     label3:
        $i27 = specialinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int readLiteralLength(int)>($i3);

        i29 = $i27;

        $z3 = specialinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: boolean expandLiteral(int)>($i27);

        if $z3 == 0 goto label7;

        return;

     label4:
        $i21 = $i3 >> 2;

        $i22 = $i21 & 7;

        i29 = 4 + $i22;

        $i23 = $i3 & 224;

        $i24 = $i23 << 3;

        l30 = (long) $i24;

        $i25 = specialinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int readOneByte()>();

        $l26 = (long) $i25;

        l31 = l30 | $l26;

        $z2 = specialinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: boolean expandCopy(long,int)>(l31, i29);

        if $z2 == 0 goto label7;

        return;

     label5:
        $i16 = $i3 >> 2;

        i29 = $i16 + 1;

        $i17 = specialinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int readOneByte()>();

        l32 = (long) $i17;

        $i18 = specialinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int readOneByte()>();

        $i19 = $i18 << 8;

        $l20 = (long) $i19;

        l33 = l32 | $l20;

        $z1 = specialinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: boolean expandCopy(long,int)>(l33, i29);

        if $z1 == 0 goto label7;

        return;

     label6:
        $i5 = $i3 >> 2;

        i29 = $i5 + 1;

        $i6 = specialinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int readOneByte()>();

        l34 = (long) $i6;

        $i7 = specialinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int readOneByte()>();

        $i8 = $i7 << 8;

        $l9 = (long) $i8;

        l35 = l34 | $l9;

        $i10 = specialinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int readOneByte()>();

        $i11 = $i10 << 16;

        $l12 = (long) $i11;

        l36 = l35 | $l12;

        $i13 = specialinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int readOneByte()>();

        $l14 = (long) $i13;

        $l15 = $l14 << 24;

        l37 = l36 | $l15;

        $z0 = specialinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: boolean expandCopy(long,int)>(l37, i29);

        if $z0 == 0 goto label7;

        return;

     label7:
        i28 = i28 - i29;

        $i38 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int uncompressedBytesRemaining>;

        $i39 = $i38 - i29;

        r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int uncompressedBytesRemaining> = $i39;

        goto label2;

     label8:
        return;
    }

    private void slideBuffer()
    {
        byte[] $r1, $r2;
        org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream;

        $r2 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: byte[] decompressBuf>;

        $i2 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int blockSize>;

        $r1 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: byte[] decompressBuf>;

        $i0 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int blockSize>;

        $i1 = $i0 * 2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i2, $r1, 0, $i1);

        $i4 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int writeIndex>;

        $i3 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int blockSize>;

        $i5 = $i4 - $i3;

        r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int writeIndex> = $i5;

        $i7 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int readIndex>;

        $i6 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int blockSize>;

        $i8 = $i7 - $i6;

        r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int readIndex> = $i8;

        return;
    }

    private int readLiteralLength(int) throws java.io.IOException
    {
        long $l7, $l9, $l10, $l11;
        org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, i21, i22, i23, $i24;

        r0 := @this: org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream;

        i0 := @parameter0: int;

        $i1 = i0 >> 2;

        tableswitch($i1)
        {
            case 60: goto label1;
            case 61: goto label2;
            case 62: goto label3;
            case 63: goto label4;
            default: goto label5;
        };

     label1:
        i20 = specialinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int readOneByte()>();

        goto label6;

     label2:
        $i17 = specialinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int readOneByte()>();

        $i18 = specialinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int readOneByte()>();

        $i19 = $i18 << 8;

        i20 = $i17 | $i19;

        goto label6;

     label3:
        $i12 = specialinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int readOneByte()>();

        $i13 = specialinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int readOneByte()>();

        $i14 = $i13 << 8;

        i21 = $i12 | $i14;

        $i15 = specialinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int readOneByte()>();

        $i16 = $i15 << 16;

        i20 = i21 | $i16;

        goto label6;

     label4:
        $i2 = specialinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int readOneByte()>();

        $i3 = specialinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int readOneByte()>();

        $i4 = $i3 << 8;

        i22 = $i2 | $i4;

        $i5 = specialinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int readOneByte()>();

        $i6 = $i5 << 16;

        i23 = i22 | $i6;

        $l7 = (long) i23;

        $i8 = specialinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int readOneByte()>();

        $l9 = (long) $i8;

        $l10 = $l9 << 24;

        $l11 = $l7 | $l10;

        i20 = (int) $l11;

        goto label6;

     label5:
        i20 = i0 >> 2;

     label6:
        $i24 = i20 + 1;

        return $i24;
    }

    private boolean expandLiteral(int) throws java.io.IOException
    {
        byte[] $r1;
        java.io.IOException $r3;
        org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.io.InputStream $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream;

        i0 := @parameter0: int;

        $r2 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: java.io.InputStream in>;

        $r1 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: byte[] decompressBuf>;

        $i1 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int writeIndex>;

        $i2 = staticinvoke <org.apache.commons.compress.utils.IOUtils: int readFully(java.io.InputStream,byte[],int,int)>($r2, $r1, $i1, i0);

        virtualinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: void count(int)>($i2);

        if i0 == $i2 goto label1;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Premature end of stream");

        throw $r3;

     label1:
        $i3 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int writeIndex>;

        $i4 = $i3 + i0;

        r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int writeIndex> = $i4;

        $i7 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int writeIndex>;

        $i5 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int blockSize>;

        $i6 = 2 * $i5;

        if $i7 < $i6 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private boolean expandCopy(long, int) throws java.io.IOException
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        byte $b3, b27;
        boolean $z0;
        long l0, $l2;
        org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream r0;
        int $i1, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, i28, i29, i30, $i31, $i32, $i33, $i34, $i36;
        java.io.IOException $r10;

        r0 := @this: org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream;

        l0 := @parameter0: long;

        i5 := @parameter1: int;

        $i1 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int blockSize>;

        $l2 = (long) $i1;

        $b3 = l0 cmp $l2;

        $i34 = (int) $b3;

        if $i34 <= 0 goto label01;

        $r10 = new java.io.IOException;

        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>("Offset is larger than block size");

        throw $r10;

     label01:
        i4 = (int) l0;

        if i4 != 1 goto label04;

        $r7 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: byte[] decompressBuf>;

        $i23 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int writeIndex>;

        $i24 = $i23 - 1;

        b27 = $r7[$i24];

        i28 = 0;

     label02:
        if i28 >= i5 goto label03;

        $r8 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: byte[] decompressBuf>;

        $i25 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int writeIndex>;

        $i26 = $i25 + 1;

        r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int writeIndex> = $i26;

        $r8[$i25] = b27;

        i28 = i28 + 1;

        goto label02;

     label03:
        goto label08;

     label04:
        if i5 >= i4 goto label05;

        $r6 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: byte[] decompressBuf>;

        $i18 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int writeIndex>;

        $i20 = $i18 - i4;

        $r5 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: byte[] decompressBuf>;

        $i19 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int writeIndex>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, $i20, $r5, $i19, i5);

        $i21 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int writeIndex>;

        $i22 = $i21 + i5;

        r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int writeIndex> = $i22;

        goto label08;

     label05:
        i29 = i5 / i4;

        $i6 = i4 * i29;

        i30 = i5 - $i6;

     label06:
        $i7 = i29;

        $i36 = (int) -1;

        i29 = i29 + $i36;

        if $i7 == 0 goto label07;

        $r4 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: byte[] decompressBuf>;

        $i13 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int writeIndex>;

        $i15 = $i13 - i4;

        $r3 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: byte[] decompressBuf>;

        $i14 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int writeIndex>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i15, $r3, $i14, i4);

        $i16 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int writeIndex>;

        $i17 = $i16 + i4;

        r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int writeIndex> = $i17;

        goto label06;

     label07:
        if i30 <= 0 goto label08;

        $r2 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: byte[] decompressBuf>;

        $i8 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int writeIndex>;

        $i10 = $i8 - i4;

        $r1 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: byte[] decompressBuf>;

        $i9 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int writeIndex>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i10, $r1, $i9, i30);

        $i11 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int writeIndex>;

        $i12 = $i11 + i30;

        r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int writeIndex> = $i12;

     label08:
        $i31 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int writeIndex>;

        $i32 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int blockSize>;

        $i33 = 2 * $i32;

        if $i31 < $i33 goto label09;

        $z0 = 1;

        goto label10;

     label09:
        $z0 = 0;

     label10:
        return $z0;
    }

    private int readOneByte() throws java.io.IOException
    {
        org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream r0;
        int $i0, $i1, $i3;
        java.io.IOException $r3;
        java.io.InputStream $r1;

        r0 := @this: org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream;

        $r1 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: java.io.InputStream in>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        $i3 = (int) -1;

        if $i0 != $i3 goto label1;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Premature end of stream");

        throw $r3;

     label1:
        virtualinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: void count(int)>(1);

        $i1 = $i0 & 255;

        return $i1;
    }

    private long readSize() throws java.io.IOException
    {
        long $l5, $l7, l9;
        org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i6, i8;

        r0 := @this: org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream;

        i8 = 0;

        l9 = 0L;

     label1:
        $i0 = specialinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int readOneByte()>();

        $i3 = $i0 & 127;

        $i1 = i8;

        i8 = i8 + 1;

        $i2 = $i1 * 7;

        $i4 = $i3 << $i2;

        $l5 = (long) $i4;

        $l7 = l9 | $l5;

        l9 = $l7;

        $i6 = $i0 & 128;

        if 0 != $i6 goto label1;

        return $l7;
    }

    public int getSize()
    {
        int $i0;
        org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream r0;

        r0 := @this: org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream;

        $i0 = r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int size>;

        return $i0;
    }

    public static void <clinit>()
    {
        <org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int DEFAULT_BLOCK_SIZE> = 32768;

        <org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int TAG_MASK> = 3;

        return;
    }
}
