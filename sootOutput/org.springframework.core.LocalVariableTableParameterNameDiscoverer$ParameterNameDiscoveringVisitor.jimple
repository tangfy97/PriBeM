class org.springframework.core.LocalVariableTableParameterNameDiscoverer$ParameterNameDiscoveringVisitor extends org.springframework.asm.commons.EmptyVisitor
{
    private static final java.lang.String STATIC_CLASS_INIT;
    private final java.lang.Class clazz;
    private final java.util.Map memberMap;

    public void <init>(java.lang.Class, java.util.Map)
    {
        java.lang.Class r1;
        org.springframework.core.LocalVariableTableParameterNameDiscoverer$ParameterNameDiscoveringVisitor r0;
        java.util.Map r2;

        r0 := @this: org.springframework.core.LocalVariableTableParameterNameDiscoverer$ParameterNameDiscoveringVisitor;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.util.Map;

        specialinvoke r0.<org.springframework.asm.commons.EmptyVisitor: void <init>()>();

        r0.<org.springframework.core.LocalVariableTableParameterNameDiscoverer$ParameterNameDiscoveringVisitor: java.lang.Class clazz> = r1;

        r0.<org.springframework.core.LocalVariableTableParameterNameDiscoverer$ParameterNameDiscoveringVisitor: java.util.Map memberMap> = r2;

        return;
    }

    public org.springframework.asm.MethodVisitor visitMethod(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor $r2;
        org.springframework.core.LocalVariableTableParameterNameDiscoverer$ParameterNameDiscoveringVisitor r3;
        java.lang.String[] r8;
        java.util.Map $r6;
        int i0;
        java.lang.Class $r5;
        java.lang.String r0, $r1, r4, r7;
        boolean $z0, $z1, $z2;

        r3 := @this: org.springframework.core.LocalVariableTableParameterNameDiscoverer$ParameterNameDiscoveringVisitor;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r7 := @parameter3: java.lang.String;

        r8 := @parameter4: java.lang.String[];

        $z0 = staticinvoke <org.springframework.core.LocalVariableTableParameterNameDiscoverer$ParameterNameDiscoveringVisitor: boolean isSyntheticOrBridged(int)>(i0);

        if $z0 != 0 goto label1;

        $r1 = "<clinit>";

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 != 0 goto label1;

        $r2 = new org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor;

        $r5 = r3.<org.springframework.core.LocalVariableTableParameterNameDiscoverer$ParameterNameDiscoveringVisitor: java.lang.Class clazz>;

        $r6 = r3.<org.springframework.core.LocalVariableTableParameterNameDiscoverer$ParameterNameDiscoveringVisitor: java.util.Map memberMap>;

        $z2 = staticinvoke <org.springframework.core.LocalVariableTableParameterNameDiscoverer$ParameterNameDiscoveringVisitor: boolean isStatic(int)>(i0);

        specialinvoke $r2.<org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor: void <init>(java.lang.Class,java.util.Map,java.lang.String,java.lang.String,boolean)>($r5, $r6, r0, r4, $z2);

        return $r2;

     label1:
        return null;
    }

    private static boolean isSyntheticOrBridged(int)
    {
        int i0, $i1, $i2, $i3;

        i0 := @parameter0: int;

        $i2 = i0 & 4096;

        $i1 = i0 & 64;

        $i3 = $i2 | $i1;

        if $i3 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static boolean isStatic(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 & 8;

        if $i1 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static void <clinit>()
    {
        <org.springframework.core.LocalVariableTableParameterNameDiscoverer$ParameterNameDiscoveringVisitor: java.lang.String STATIC_CLASS_INIT> = "<clinit>";

        return;
    }
}
