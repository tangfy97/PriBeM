final class com.mycila.inject.internal.guava.base.CharMatcher$10 extends com.mycila.inject.internal.guava.base.CharMatcher
{
    final char val$match1;
    final char val$match2;

    void <init>(char, char)
    {
        char c0, c1;
        com.mycila.inject.internal.guava.base.CharMatcher$10 r0;

        r0 := @this: com.mycila.inject.internal.guava.base.CharMatcher$10;

        c0 := @parameter0: char;

        c1 := @parameter1: char;

        r0.<com.mycila.inject.internal.guava.base.CharMatcher$10: char val$match1> = c0;

        r0.<com.mycila.inject.internal.guava.base.CharMatcher$10: char val$match2> = c1;

        specialinvoke r0.<com.mycila.inject.internal.guava.base.CharMatcher: void <init>()>();

        return;
    }

    public boolean matches(char)
    {
        char c0, $c1, $c2;
        int $i3, $i4, $i5, $i6;
        com.mycila.inject.internal.guava.base.CharMatcher$10 r0;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.base.CharMatcher$10;

        c0 := @parameter0: char;

        $c1 = r0.<com.mycila.inject.internal.guava.base.CharMatcher$10: char val$match1>;

        $i3 = (int) c0;

        $i4 = (int) $c1;

        if $i3 == $i4 goto label1;

        $c2 = r0.<com.mycila.inject.internal.guava.base.CharMatcher$10: char val$match2>;

        $i5 = (int) c0;

        $i6 = (int) $c2;

        if $i5 != $i6 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    void setBits(com.mycila.inject.internal.guava.base.CharMatcher$LookupTable)
    {
        com.mycila.inject.internal.guava.base.CharMatcher$LookupTable r0;
        char $c0, $c1;
        com.mycila.inject.internal.guava.base.CharMatcher$10 r1;

        r1 := @this: com.mycila.inject.internal.guava.base.CharMatcher$10;

        r0 := @parameter0: com.mycila.inject.internal.guava.base.CharMatcher$LookupTable;

        $c0 = r1.<com.mycila.inject.internal.guava.base.CharMatcher$10: char val$match1>;

        virtualinvoke r0.<com.mycila.inject.internal.guava.base.CharMatcher$LookupTable: void set(char)>($c0);

        $c1 = r1.<com.mycila.inject.internal.guava.base.CharMatcher$10: char val$match2>;

        virtualinvoke r0.<com.mycila.inject.internal.guava.base.CharMatcher$LookupTable: void set(char)>($c1);

        return;
    }

    public com.mycila.inject.internal.guava.base.CharMatcher precomputed()
    {
        com.mycila.inject.internal.guava.base.CharMatcher$10 r0;

        r0 := @this: com.mycila.inject.internal.guava.base.CharMatcher$10;

        return r0;
    }

    public volatile boolean apply(java.lang.Object)
    {
        java.lang.Character $r2;
        java.lang.Object r1;
        com.mycila.inject.internal.guava.base.CharMatcher$10 r0;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.base.CharMatcher$10;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Character) r1;

        $z0 = specialinvoke r0.<com.mycila.inject.internal.guava.base.CharMatcher: boolean apply(java.lang.Character)>($r2);

        return $z0;
    }
}
