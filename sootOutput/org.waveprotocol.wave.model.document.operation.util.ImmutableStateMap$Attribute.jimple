public final class org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute extends java.lang.Object implements java.util.Map$Entry
{
    private final java.lang.String name;
    private final java.lang.String value;

    public void <init>(java.util.Map$Entry)
    {
        java.util.Map$Entry r1;
        java.lang.Object $r2, $r4;
        org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute r0;
        java.lang.String $r3, $r5;

        r0 := @this: org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute;

        r1 := @parameter0: java.util.Map$Entry;

        $r2 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = (java.lang.String) $r2;

        $r4 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r5 = (java.lang.String) $r4;

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute: void <init>(java.lang.String,java.lang.String)>($r3, $r5);

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute r0;
        java.lang.String r1, r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "Null attribute name");

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "Null attribute value");

        r0.<org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute: java.lang.String name> = r1;

        r0.<org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute: java.lang.String value> = r2;

        return;
    }

    public java.lang.String getKey()
    {
        org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute r0;
        java.lang.String $r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute: java.lang.String name>;

        return $r1;
    }

    public java.lang.String getValue()
    {
        org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute r0;
        java.lang.String $r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute: java.lang.String value>;

        return $r1;
    }

    public java.lang.String setValue(java.lang.String)
    {
        java.lang.UnsupportedOperationException $r0;
        org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute r1;
        java.lang.String r2;

        r1 := @this: org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Attempt to modify an immutable map entry.");

        throw $r0;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.Map$Entry r1;
        org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute r2;
        java.lang.Object r0, $r5, $r8, $r9, $r10;
        java.lang.String $r3, $r4, $r6, $r7;
        boolean $z0, $z1, $z2, $z3;

        r2 := @this: org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.util.Map$Entry;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (java.util.Map$Entry) r0;

        $r3 = r2.<org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute: java.lang.String name>;

        if $r3 != null goto label2;

        $r10 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        if $r10 != null goto label6;

        goto label3;

     label2:
        $r4 = r2.<org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute: java.lang.String name>;

        $r5 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label6;

     label3:
        $r6 = r2.<org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute: java.lang.String value>;

        if $r6 != null goto label4;

        $r9 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r9 != null goto label6;

        goto label5;

     label4:
        $r7 = r2.<org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute: java.lang.String value>;

        $r8 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z2 == 0 goto label6;

     label5:
        $z3 = 1;

        goto label7;

     label6:
        $z3 = 0;

     label7:
        return $z3;
    }

    public int hashCode()
    {
        org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute r0;
        int $i0, $i1, $i2;
        java.lang.String $r1, $r2, $r3, $r4;

        r0 := @this: org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute: java.lang.String name>;

        if $r1 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute: java.lang.String name>;

        $i0 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

     label2:
        $r3 = r0.<org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute: java.lang.String value>;

        if $r3 != null goto label3;

        $i1 = 0;

        goto label4;

     label3:
        $r4 = r0.<org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute: java.lang.String value>;

        $i1 = virtualinvoke $r4.<java.lang.String: int hashCode()>();

     label4:
        $i2 = $i0 ^ $i1;

        return $i2;
    }

    public java.lang.String toString()
    {
        org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8;
        java.lang.String $r3, $r6, $r9;

        r2 := @this: org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attribute(");

        $r3 = r2.<org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute: java.lang.String name>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r6 = r2.<org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute: java.lang.String value>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public volatile java.lang.Object setValue(java.lang.Object)
    {
        java.lang.Object r1;
        org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute r0;
        java.lang.String $r2, $r3;

        r0 := @this: org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.String) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute: java.lang.String setValue(java.lang.String)>($r2);

        return $r3;
    }

    public volatile java.lang.Object getValue()
    {
        org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute r0;
        java.lang.String $r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute: java.lang.String getValue()>();

        return $r1;
    }

    public volatile java.lang.Object getKey()
    {
        org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute r0;
        java.lang.String $r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute: java.lang.String getKey()>();

        return $r1;
    }

    static java.lang.String access$100(org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute)
    {
        org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute r0;
        java.lang.String $r1;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute: java.lang.String name>;

        return $r1;
    }

    static java.lang.String access$200(org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute)
    {
        org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute r0;
        java.lang.String $r1;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute: java.lang.String value>;

        return $r1;
    }
}
