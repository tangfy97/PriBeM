public class ucar.nc2.dt.point.WriterStationObsDataset extends java.lang.Object
{
    private static final java.lang.String recordDimName;
    private static final java.lang.String stationDimName;
    private static final java.lang.String latName;
    private static final java.lang.String lonName;
    private static final java.lang.String altName;
    private static final java.lang.String timeName;
    private static final java.lang.String idName;
    private static final java.lang.String descName;
    private static final java.lang.String wmoName;
    private static final java.lang.String firstChildName;
    private static final java.lang.String lastChildName;
    private static final java.lang.String numChildName;
    private static final java.lang.String nextChildName;
    private static final java.lang.String prevChildName;
    private static final java.lang.String parentName;
    private ucar.nc2.units.DateFormatter dateFormatter;
    private int name_strlen;
    private int desc_strlen;
    private int wmo_strlen;
    private ucar.nc2.NetcdfFileWriteable ncfile;
    private java.lang.String title;
    private java.util.Set dimSet;
    private java.util.List recordDims;
    private java.util.List stationDims;
    private java.util.List stnList;
    private java.util.Date minDate;
    private java.util.Date maxDate;
    private boolean useAlt;
    private boolean useWmoId;
    private boolean debug;
    private java.util.HashMap stationMap;
    private int recno;
    private ucar.ma2.ArrayObject$D1 timeArray;
    private ucar.ma2.ArrayInt$D1 prevArray;
    private ucar.ma2.ArrayInt$D1 parentArray;
    private int[] origin;
    private int[] originTime;

    public void <init>(java.lang.String, java.lang.String) throws java.io.IOException
    {
        ucar.nc2.NetcdfFileWriteable $r11, $r12;
        ucar.ma2.ArrayObject$D1 $r5;
        java.util.ArrayList $r3, $r4;
        java.util.HashSet $r2;
        ucar.ma2.ArrayInt$D1 $r6, $r7;
        int[] $r8, $r9;
        ucar.nc2.dt.point.WriterStationObsDataset r0;
        java.lang.String r10, r13;
        ucar.nc2.units.DateFormatter $r1;

        r0 := @this: ucar.nc2.dt.point.WriterStationObsDataset;

        r10 := @parameter0: java.lang.String;

        r13 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r1.<ucar.nc2.units.DateFormatter: void <init>()>();

        r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.units.DateFormatter dateFormatter> = $r1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<ucar.nc2.dt.point.WriterStationObsDataset: java.util.Set dimSet> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.dt.point.WriterStationObsDataset: java.util.List recordDims> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.dt.point.WriterStationObsDataset: java.util.List stationDims> = $r4;

        r0.<ucar.nc2.dt.point.WriterStationObsDataset: java.util.Date minDate> = null;

        r0.<ucar.nc2.dt.point.WriterStationObsDataset: java.util.Date maxDate> = null;

        r0.<ucar.nc2.dt.point.WriterStationObsDataset: boolean useAlt> = 0;

        r0.<ucar.nc2.dt.point.WriterStationObsDataset: boolean useWmoId> = 0;

        r0.<ucar.nc2.dt.point.WriterStationObsDataset: boolean debug> = 0;

        r0.<ucar.nc2.dt.point.WriterStationObsDataset: int recno> = 0;

        $r5 = new ucar.ma2.ArrayObject$D1;

        specialinvoke $r5.<ucar.ma2.ArrayObject$D1: void <init>(java.lang.Class,int)>(class "Ljava/lang/String;", 1);

        r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.ma2.ArrayObject$D1 timeArray> = $r5;

        $r6 = new ucar.ma2.ArrayInt$D1;

        specialinvoke $r6.<ucar.ma2.ArrayInt$D1: void <init>(int)>(1);

        r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.ma2.ArrayInt$D1 prevArray> = $r6;

        $r7 = new ucar.ma2.ArrayInt$D1;

        specialinvoke $r7.<ucar.ma2.ArrayInt$D1: void <init>(int)>(1);

        r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.ma2.ArrayInt$D1 parentArray> = $r7;

        $r8 = newarray (int)[1];

        r0.<ucar.nc2.dt.point.WriterStationObsDataset: int[] origin> = $r8;

        $r9 = newarray (int)[2];

        r0.<ucar.nc2.dt.point.WriterStationObsDataset: int[] originTime> = $r9;

        $r11 = staticinvoke <ucar.nc2.NetcdfFileWriteable: ucar.nc2.NetcdfFileWriteable createNew(java.lang.String,boolean)>(r10, 0);

        r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile> = $r11;

        $r12 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r12.<ucar.nc2.NetcdfFileWriteable: void setFill(boolean)>(0);

        r0.<ucar.nc2.dt.point.WriterStationObsDataset: java.lang.String title> = r13;

        return;
    }

    public void setLength(long)
    {
        long l0;
        ucar.nc2.NetcdfFileWriteable $r1;
        ucar.nc2.dt.point.WriterStationObsDataset r0;

        r0 := @this: ucar.nc2.dt.point.WriterStationObsDataset;

        l0 := @parameter0: long;

        $r1 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r1.<ucar.nc2.NetcdfFileWriteable: void setLength(long)>(l0);

        return;
    }

    public void writeHeader(java.util.List, java.util.List) throws java.io.IOException
    {
        java.lang.IllegalStateException $r15;
        ucar.nc2.NetcdfFileWriteable $r3, $r7, $r11, $r12;
        java.util.Date $r2, $r6;
        ucar.nc2.dt.point.WriterStationObsDataset r0;
        java.lang.Boolean $r14;
        java.lang.String $r5, $r9;
        boolean $z0;
        java.util.List r1, r10;
        java.lang.Object $r13;
        ucar.nc2.units.DateFormatter $r4, $r8;

        r0 := @this: ucar.nc2.dt.point.WriterStationObsDataset;

        r1 := @parameter0: java.util.List;

        r10 := @parameter1: java.util.List;

        specialinvoke r0.<ucar.nc2.dt.point.WriterStationObsDataset: void createGlobalAttributes()>();

        specialinvoke r0.<ucar.nc2.dt.point.WriterStationObsDataset: void createStations(java.util.List)>(r1);

        $r3 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r4 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.units.DateFormatter dateFormatter>;

        $r2 = new java.util.Date;

        specialinvoke $r2.<java.util.Date: void <init>()>();

        $r5 = virtualinvoke $r4.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>($r2);

        virtualinvoke $r3.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addGlobalAttribute(java.lang.String,java.lang.String)>("time_coverage_start", $r5);

        $r7 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r8 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.units.DateFormatter dateFormatter>;

        $r6 = new java.util.Date;

        specialinvoke $r6.<java.util.Date: void <init>()>();

        $r9 = virtualinvoke $r8.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>($r6);

        virtualinvoke $r7.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addGlobalAttribute(java.lang.String,java.lang.String)>("time_coverage_end", $r9);

        specialinvoke r0.<ucar.nc2.dt.point.WriterStationObsDataset: void createDataVariables(java.util.List)>(r10);

        $r11 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r11.<ucar.nc2.NetcdfFileWriteable: void create()>();

        specialinvoke r0.<ucar.nc2.dt.point.WriterStationObsDataset: void writeStationData(java.util.List)>(r1);

        $r12 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r13 = virtualinvoke $r12.<ucar.nc2.NetcdfFileWriteable: java.lang.Object sendIospMessage(java.lang.Object)>("AddRecordStructure");

        $r14 = (java.lang.Boolean) $r13;

        $z0 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label1;

        $r15 = new java.lang.IllegalStateException;

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>("can\'t add record variable");

        throw $r15;

     label1:
        return;
    }

    private void createGlobalAttributes()
    {
        ucar.nc2.NetcdfFileWriteable $r1, $r2, $r4, $r5;
        ucar.nc2.dt.point.WriterStationObsDataset r0;
        java.lang.String $r3;

        r0 := @this: ucar.nc2.dt.point.WriterStationObsDataset;

        $r1 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r1.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addGlobalAttribute(java.lang.String,java.lang.String)>("Conventions", "Unidata Observation Dataset v1.0");

        $r2 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r2.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addGlobalAttribute(java.lang.String,java.lang.String)>("cdm_datatype", "Station");

        $r4 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r3 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: java.lang.String title>;

        virtualinvoke $r4.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addGlobalAttribute(java.lang.String,java.lang.String)>("title", $r3);

        $r5 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r5.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addGlobalAttribute(java.lang.String,java.lang.String)>("desc", "Extracted by THREDDS/Netcdf Subset Service");

        return;
    }

    private void createStations(java.util.List) throws java.io.IOException
    {
        ucar.nc2.Attribute $r24, $r26, $r31, $r33, $r38, $r43, $r48, $r53, $r58, $r63, $r68, $r73, $r78, $r83, $r88, $r90;
        ucar.nc2.NetcdfFileWriteable $r3, $r6, $r9, $r12, $r15, $r18, $r22, $r25, $r27, $r29, $r32, $r34, $r36, $r39, $r41, $r44, $r46, $r49, $r51, $r54, $r56, $r59, $r61, $r64, $r66, $r69, $r71, $r74, $r76, $r79, $r81, $r84, $r86, $r89, $r91;
        java.lang.String $r5, $r8, $r11, $r14, $r93, $r94, $r95, $r97, $r98, $r99;
        ucar.unidata.geoloc.LatLonRect $r2;
        ucar.nc2.Dimension $r16, $r19;
        ucar.unidata.geoloc.LatLonPointImpl $r4, $r7, $r10, $r13;
        ucar.nc2.dt.point.WriterStationObsDataset r1;
        boolean $z0, $z1, $z2, $z3;
        ucar.ma2.DataType $r21, $r28, $r45, $r50, $r55, $r65, $r70, $r75, $r85;
        java.util.List r0, $r17, $r20, $r35, $r40, $r60, $r80;
        ucar.unidata.geoloc.Station r100, r101;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15;
        ucar.nc2.Variable $r23, $r30, $r37, $r42, $r47, $r52, $r57, $r62, $r67, $r72, $r77, $r82, $r87;
        double $d0, $d1, $d2, $d3, $d4;
        java.lang.Object $r92, $r96;

        r1 := @this: ucar.nc2.dt.point.WriterStationObsDataset;

        r0 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        i14 = 0;

     label1:
        if i14 >= $i0 goto label4;

        $r96 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i14);

        r100 = (ucar.unidata.geoloc.Station) $r96;

        $d4 = interfaceinvoke r100.<ucar.unidata.geoloc.Station: double getAltitude()>();

        $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d4);

        if $z3 != 0 goto label2;

        r1.<ucar.nc2.dt.point.WriterStationObsDataset: boolean useAlt> = 1;

     label2:
        $r97 = interfaceinvoke r100.<ucar.unidata.geoloc.Station: java.lang.String getWmoId()>();

        if $r97 == null goto label3;

        $r98 = interfaceinvoke r100.<ucar.unidata.geoloc.Station: java.lang.String getWmoId()>();

        $r99 = virtualinvoke $r98.<java.lang.String: java.lang.String trim()>();

        $i13 = virtualinvoke $r99.<java.lang.String: int length()>();

        if $i13 <= 0 goto label3;

        r1.<ucar.nc2.dt.point.WriterStationObsDataset: boolean useWmoId> = 1;

     label3:
        i14 = i14 + 1;

        goto label1;

     label4:
        i15 = 0;

     label5:
        if i15 >= $i0 goto label7;

        $r92 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i15);

        r101 = (ucar.unidata.geoloc.Station) $r92;

        $i4 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: int name_strlen>;

        $r93 = interfaceinvoke r101.<ucar.unidata.geoloc.Station: java.lang.String getName()>();

        $i5 = virtualinvoke $r93.<java.lang.String: int length()>();

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i5);

        r1.<ucar.nc2.dt.point.WriterStationObsDataset: int name_strlen> = $i6;

        $i7 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: int desc_strlen>;

        $r94 = interfaceinvoke r101.<ucar.unidata.geoloc.Station: java.lang.String getDescription()>();

        $i8 = virtualinvoke $r94.<java.lang.String: int length()>();

        $i9 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i8);

        r1.<ucar.nc2.dt.point.WriterStationObsDataset: int desc_strlen> = $i9;

        $z2 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: boolean useWmoId>;

        if $z2 == 0 goto label6;

        $i10 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: int wmo_strlen>;

        $r95 = interfaceinvoke r101.<ucar.unidata.geoloc.Station: java.lang.String getName()>();

        $i11 = virtualinvoke $r95.<java.lang.String: int length()>();

        $i12 = staticinvoke <java.lang.Math: int max(int,int)>($i10, $i11);

        r1.<ucar.nc2.dt.point.WriterStationObsDataset: int wmo_strlen> = $i12;

     label6:
        i15 = i15 + 1;

        goto label5;

     label7:
        $r2 = specialinvoke r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.unidata.geoloc.LatLonRect getBoundingBox(java.util.List)>(r0);

        $r3 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r4 = virtualinvoke $r2.<ucar.unidata.geoloc.LatLonRect: ucar.unidata.geoloc.LatLonPointImpl getLowerLeftPoint()>();

        $d0 = virtualinvoke $r4.<ucar.unidata.geoloc.LatLonPointImpl: double getLatitude()>();

        $r5 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d0);

        virtualinvoke $r3.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addGlobalAttribute(java.lang.String,java.lang.String)>("geospatial_lat_min", $r5);

        $r6 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r7 = virtualinvoke $r2.<ucar.unidata.geoloc.LatLonRect: ucar.unidata.geoloc.LatLonPointImpl getUpperRightPoint()>();

        $d1 = virtualinvoke $r7.<ucar.unidata.geoloc.LatLonPointImpl: double getLatitude()>();

        $r8 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d1);

        virtualinvoke $r6.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addGlobalAttribute(java.lang.String,java.lang.String)>("geospatial_lat_max", $r8);

        $r9 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r10 = virtualinvoke $r2.<ucar.unidata.geoloc.LatLonRect: ucar.unidata.geoloc.LatLonPointImpl getLowerLeftPoint()>();

        $d2 = virtualinvoke $r10.<ucar.unidata.geoloc.LatLonPointImpl: double getLongitude()>();

        $r11 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d2);

        virtualinvoke $r9.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addGlobalAttribute(java.lang.String,java.lang.String)>("geospatial_lon_min", $r11);

        $r12 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r13 = virtualinvoke $r2.<ucar.unidata.geoloc.LatLonRect: ucar.unidata.geoloc.LatLonPointImpl getUpperRightPoint()>();

        $d3 = virtualinvoke $r13.<ucar.unidata.geoloc.LatLonPointImpl: double getLongitude()>();

        $r14 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d3);

        virtualinvoke $r12.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addGlobalAttribute(java.lang.String,java.lang.String)>("geospatial_lon_max", $r14);

        $r15 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r16 = virtualinvoke $r15.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Dimension addUnlimitedDimension(java.lang.String)>("record");

        $r17 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: java.util.List recordDims>;

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r16);

        $r18 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r19 = virtualinvoke $r18.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Dimension addDimension(java.lang.String,int)>("station", $i0);

        $r20 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: java.util.List stationDims>;

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>($r19);

        $r22 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r21 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r23 = virtualinvoke $r22.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Variable addVariable(java.lang.String,ucar.ma2.DataType,java.lang.String)>("latitude", $r21, "station");

        $r25 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r24 = new ucar.nc2.Attribute;

        specialinvoke $r24.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "degrees_north");

        virtualinvoke $r25.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r23, $r24);

        $r27 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r26 = new ucar.nc2.Attribute;

        specialinvoke $r26.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "station latitude");

        virtualinvoke $r27.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r23, $r26);

        $r29 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r28 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r30 = virtualinvoke $r29.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Variable addVariable(java.lang.String,ucar.ma2.DataType,java.lang.String)>("longitude", $r28, "station");

        $r32 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r31 = new ucar.nc2.Attribute;

        specialinvoke $r31.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "degrees_east");

        virtualinvoke $r32.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r30, $r31);

        $r34 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r33 = new ucar.nc2.Attribute;

        specialinvoke $r33.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "station longitude");

        virtualinvoke $r34.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r30, $r33);

        $z0 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: boolean useAlt>;

        if $z0 == 0 goto label8;

        $r86 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r85 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r87 = virtualinvoke $r86.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Variable addVariable(java.lang.String,ucar.ma2.DataType,java.lang.String)>("altitude", $r85, "station");

        $r89 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r88 = new ucar.nc2.Attribute;

        specialinvoke $r88.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "meters");

        virtualinvoke $r89.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r87, $r88);

        $r91 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r90 = new ucar.nc2.Attribute;

        specialinvoke $r90.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "station altitude");

        virtualinvoke $r91.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r87, $r90);

     label8:
        $r36 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r35 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: java.util.List stationDims>;

        $i1 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: int name_strlen>;

        $r37 = virtualinvoke $r36.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Variable addStringVariable(java.lang.String,java.util.List,int)>("station_id", $r35, $i1);

        $r39 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r38 = new ucar.nc2.Attribute;

        specialinvoke $r38.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "station identifier");

        virtualinvoke $r39.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r37, $r38);

        $r41 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r40 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: java.util.List stationDims>;

        $i2 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: int desc_strlen>;

        $r42 = virtualinvoke $r41.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Variable addStringVariable(java.lang.String,java.util.List,int)>("station_description", $r40, $i2);

        $r44 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r43 = new ucar.nc2.Attribute;

        specialinvoke $r43.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "station description");

        virtualinvoke $r44.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r42, $r43);

        $z1 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: boolean useWmoId>;

        if $z1 == 0 goto label9;

        $r81 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r80 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: java.util.List stationDims>;

        $i3 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: int wmo_strlen>;

        $r82 = virtualinvoke $r81.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Variable addStringVariable(java.lang.String,java.util.List,int)>("wmo_id", $r80, $i3);

        $r84 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r83 = new ucar.nc2.Attribute;

        specialinvoke $r83.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "station WMO id");

        virtualinvoke $r84.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r82, $r83);

     label9:
        $r46 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r45 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        $r47 = virtualinvoke $r46.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Variable addVariable(java.lang.String,ucar.ma2.DataType,java.lang.String)>("numChildren", $r45, "station");

        $r49 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r48 = new ucar.nc2.Attribute;

        specialinvoke $r48.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "number of children in linked list for this station");

        virtualinvoke $r49.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r47, $r48);

        $r51 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r50 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        $r52 = virtualinvoke $r51.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Variable addVariable(java.lang.String,ucar.ma2.DataType,java.lang.String)>("lastChild", $r50, "station");

        $r54 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r53 = new ucar.nc2.Attribute;

        specialinvoke $r53.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "record number of last child in linked list for this station");

        virtualinvoke $r54.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r52, $r53);

        $r56 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r55 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        $r57 = virtualinvoke $r56.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Variable addVariable(java.lang.String,ucar.ma2.DataType,java.lang.String)>("firstChild", $r55, "station");

        $r59 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r58 = new ucar.nc2.Attribute;

        specialinvoke $r58.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "record number of first child in linked list for this station");

        virtualinvoke $r59.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r57, $r58);

        $r61 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r60 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: java.util.List recordDims>;

        $r62 = virtualinvoke $r61.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Variable addStringVariable(java.lang.String,java.util.List,int)>("time", $r60, 20);

        $r64 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r63 = new ucar.nc2.Attribute;

        specialinvoke $r63.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "ISO-8601 Date");

        virtualinvoke $r64.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r62, $r63);

        $r66 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r65 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        $r67 = virtualinvoke $r66.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Variable addVariable(java.lang.String,ucar.ma2.DataType,java.lang.String)>("prevChild", $r65, "record");

        $r69 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r68 = new ucar.nc2.Attribute;

        specialinvoke $r68.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "record number of previous child in linked list");

        virtualinvoke $r69.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r67, $r68);

        $r71 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r70 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        $r72 = virtualinvoke $r71.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Variable addVariable(java.lang.String,ucar.ma2.DataType,java.lang.String)>("parent_index", $r70, "record");

        $r74 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r73 = new ucar.nc2.Attribute;

        specialinvoke $r73.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "index of parent station");

        virtualinvoke $r74.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r72, $r73);

        $r76 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r75 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        $r77 = virtualinvoke $r76.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Variable addVariable(java.lang.String,ucar.ma2.DataType,java.lang.String)>("nextChild", $r75, "record");

        $r79 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r78 = new ucar.nc2.Attribute;

        specialinvoke $r78.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "record number of next child in linked list");

        virtualinvoke $r79.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r77, $r78);

        return;
    }

    private void createDataVariables(java.util.List) throws java.io.IOException
    {
        ucar.nc2.dt.point.WriterStationObsDataset r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.util.Set $r3, $r28;
        ucar.ma2.DataType $r12;
        java.util.List r0, $r7, $r15, $r27;
        ucar.nc2.Attribute r18;
        ucar.nc2.VariableSimpleIF r29, r31;
        java.lang.StringBuilder $r8, $r21;
        ucar.nc2.NetcdfFileWriteable $r10, $r19, $r24;
        int $i0;
        ucar.nc2.Variable $r14;
        java.lang.String $r11, $r13, $r22, $r25;
        java.util.Iterator $r1, $r4, $r5, $r9, $r16;
        java.lang.Object $r6, $r17, $r20, $r23, $r26;
        ucar.nc2.Dimension r30, r32;

        r2 := @this: ucar.nc2.dt.point.WriterStationObsDataset;

        r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r26 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r29 = (ucar.nc2.VariableSimpleIF) $r26;

        $r27 = interfaceinvoke r29.<ucar.nc2.VariableSimpleIF: java.util.List getDimensions()>();

        $r28 = r2.<ucar.nc2.dt.point.WriterStationObsDataset: java.util.Set dimSet>;

        interfaceinvoke $r28.<java.util.Set: boolean addAll(java.util.Collection)>($r27);

        goto label01;

     label02:
        $r3 = r2.<ucar.nc2.dt.point.WriterStationObsDataset: java.util.Set dimSet>;

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label05;

        $r23 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r30 = (ucar.nc2.Dimension) $r23;

        $z6 = virtualinvoke r30.<ucar.nc2.Dimension: boolean isUnlimited()>();

        if $z6 != 0 goto label04;

        $r24 = r2.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r25 = virtualinvoke r30.<ucar.nc2.Dimension: java.lang.String getName()>();

        $i0 = virtualinvoke r30.<ucar.nc2.Dimension: int getLength()>();

        $z7 = virtualinvoke r30.<ucar.nc2.Dimension: boolean isShared()>();

        $z8 = virtualinvoke r30.<ucar.nc2.Dimension: boolean isVariableLength()>();

        virtualinvoke $r24.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Dimension addDimension(java.lang.String,int,boolean,boolean,boolean)>($r25, $i0, $z7, 0, $z8);

     label04:
        goto label03;

     label05:
        $r5 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z2 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label12;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r31 = (ucar.nc2.VariableSimpleIF) $r6;

        $r7 = interfaceinvoke r31.<ucar.nc2.VariableSimpleIF: java.util.List getDimensions()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("record");

        $r9 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z3 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label09;

        $r20 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r32 = (ucar.nc2.Dimension) $r20;

        $z5 = virtualinvoke r32.<ucar.nc2.Dimension: boolean isUnlimited()>();

        if $z5 != 0 goto label08;

        $r21 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r22 = virtualinvoke r32.<ucar.nc2.Dimension: java.lang.String getName()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

     label08:
        goto label07;

     label09:
        $r10 = r2.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r11 = interfaceinvoke r31.<ucar.nc2.VariableSimpleIF: java.lang.String getName()>();

        $r12 = interfaceinvoke r31.<ucar.nc2.VariableSimpleIF: ucar.ma2.DataType getDataType()>();

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = virtualinvoke $r10.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Variable addVariable(java.lang.String,ucar.ma2.DataType,java.lang.String)>($r11, $r12, $r13);

        $r15 = interfaceinvoke r31.<ucar.nc2.VariableSimpleIF: java.util.List getAttributes()>();

        $r16 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z4 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label11;

        $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r18 = (ucar.nc2.Attribute) $r17;

        $r19 = r2.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r19.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r14, r18);

        goto label10;

     label11:
        goto label06;

     label12:
        return;
    }

    private void writeStationData(java.util.List) throws java.io.IOException
    {
        java.lang.IllegalStateException $r25;
        ucar.nc2.dt.point.WriterStationObsDataset r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        ucar.ma2.ArrayObject$D1 $r6, $r7, $r8;
        java.util.List r1;
        ucar.ma2.ArrayDouble$D1 $r3, $r4, $r5;
        ucar.nc2.dt.point.WriterStationObsDataset$StationTracker $r19;
        ucar.nc2.NetcdfFileWriteable $r9, $r10, $r11, $r12, $r13, $r14;
        ucar.unidata.geoloc.Station r16;
        java.util.HashMap $r2, $r17;
        int $i0, $i1, i2, $i3;
        java.lang.String $r18, $r20, $r21, $r22;
        double $d0, $d1, $d2;
        java.io.PrintStream $r23;
        ucar.ma2.InvalidRangeException $r24;
        java.lang.Object $r15;

        r0 := @this: ucar.nc2.dt.point.WriterStationObsDataset;

        r1 := @parameter0: java.util.List;

        r0.<ucar.nc2.dt.point.WriterStationObsDataset: java.util.List stnList> = r1;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $r2 = new java.util.HashMap;

        $i1 = 2 * $i0;

        specialinvoke $r2.<java.util.HashMap: void <init>(int)>($i1);

        r0.<ucar.nc2.dt.point.WriterStationObsDataset: java.util.HashMap stationMap> = $r2;

        $z0 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: boolean debug>;

        if $z0 == 0 goto label1;

        $r23 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>("stationMap created");

     label1:
        $r3 = new ucar.ma2.ArrayDouble$D1;

        specialinvoke $r3.<ucar.ma2.ArrayDouble$D1: void <init>(int)>($i0);

        $r4 = new ucar.ma2.ArrayDouble$D1;

        specialinvoke $r4.<ucar.ma2.ArrayDouble$D1: void <init>(int)>($i0);

        $r5 = new ucar.ma2.ArrayDouble$D1;

        specialinvoke $r5.<ucar.ma2.ArrayDouble$D1: void <init>(int)>($i0);

        $r6 = new ucar.ma2.ArrayObject$D1;

        specialinvoke $r6.<ucar.ma2.ArrayObject$D1: void <init>(java.lang.Class,int)>(class "Ljava/lang/String;", $i0);

        $r7 = new ucar.ma2.ArrayObject$D1;

        specialinvoke $r7.<ucar.ma2.ArrayObject$D1: void <init>(java.lang.Class,int)>(class "Ljava/lang/String;", $i0);

        $r8 = new ucar.ma2.ArrayObject$D1;

        specialinvoke $r8.<ucar.ma2.ArrayObject$D1: void <init>(java.lang.Class,int)>(class "Ljava/lang/String;", $i0);

        i2 = 0;

     label2:
        $i3 = interfaceinvoke r1.<java.util.List: int size()>();

        if i2 >= $i3 goto label5;

        $r15 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        r16 = (ucar.unidata.geoloc.Station) $r15;

        $r17 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: java.util.HashMap stationMap>;

        $r18 = interfaceinvoke r16.<ucar.unidata.geoloc.Station: java.lang.String getName()>();

        $r19 = new ucar.nc2.dt.point.WriterStationObsDataset$StationTracker;

        specialinvoke $r19.<ucar.nc2.dt.point.WriterStationObsDataset$StationTracker: void <init>(ucar.nc2.dt.point.WriterStationObsDataset,int)>(r0, i2);

        virtualinvoke $r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r19);

        $d0 = interfaceinvoke r16.<ucar.unidata.geoloc.Station: double getLatitude()>();

        virtualinvoke $r3.<ucar.ma2.ArrayDouble$D1: void set(int,double)>(i2, $d0);

        $d1 = interfaceinvoke r16.<ucar.unidata.geoloc.Station: double getLongitude()>();

        virtualinvoke $r4.<ucar.ma2.ArrayDouble$D1: void set(int,double)>(i2, $d1);

        $z3 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: boolean useAlt>;

        if $z3 == 0 goto label3;

        $d2 = interfaceinvoke r16.<ucar.unidata.geoloc.Station: double getAltitude()>();

        virtualinvoke $r5.<ucar.ma2.ArrayDouble$D1: void set(int,double)>(i2, $d2);

     label3:
        $r20 = interfaceinvoke r16.<ucar.unidata.geoloc.Station: java.lang.String getName()>();

        virtualinvoke $r6.<ucar.ma2.ArrayObject$D1: void set(int,java.lang.Object)>(i2, $r20);

        $r21 = interfaceinvoke r16.<ucar.unidata.geoloc.Station: java.lang.String getDescription()>();

        virtualinvoke $r7.<ucar.ma2.ArrayObject$D1: void set(int,java.lang.Object)>(i2, $r21);

        $z4 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: boolean useWmoId>;

        if $z4 == 0 goto label4;

        $r22 = interfaceinvoke r16.<ucar.unidata.geoloc.Station: java.lang.String getWmoId()>();

        virtualinvoke $r8.<ucar.ma2.ArrayObject$D1: void set(int,java.lang.Object)>(i2, $r22);

     label4:
        i2 = i2 + 1;

        goto label2;

     label5:
        $r9 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r9.<ucar.nc2.NetcdfFileWriteable: void write(java.lang.String,ucar.ma2.Array)>("latitude", $r3);

        $r10 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r10.<ucar.nc2.NetcdfFileWriteable: void write(java.lang.String,ucar.ma2.Array)>("longitude", $r4);

        $z1 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: boolean useAlt>;

        if $z1 == 0 goto label6;

        $r14 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r14.<ucar.nc2.NetcdfFileWriteable: void write(java.lang.String,ucar.ma2.Array)>("altitude", $r5);

     label6:
        $r11 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r11.<ucar.nc2.NetcdfFileWriteable: void writeStringData(java.lang.String,ucar.ma2.Array)>("station_id", $r6);

        $r12 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r12.<ucar.nc2.NetcdfFileWriteable: void writeStringData(java.lang.String,ucar.ma2.Array)>("station_description", $r7);

        $z2 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: boolean useWmoId>;

        if $z2 == 0 goto label7;

        $r13 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r13.<ucar.nc2.NetcdfFileWriteable: void writeStringData(java.lang.String,ucar.ma2.Array)>("wmo_id", $r8);

     label7:
        goto label9;

     label8:
        $r24 := @caughtexception;

        virtualinvoke $r24.<ucar.ma2.InvalidRangeException: void printStackTrace()>();

        $r25 = new java.lang.IllegalStateException;

        specialinvoke $r25.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r24);

        throw $r25;

     label9:
        return;

        catch ucar.ma2.InvalidRangeException from label5 to label7 with label8;
    }

    private void writeDataFinish() throws java.io.IOException
    {
        java.lang.Integer r37, r39, $r42, r45;
        ucar.nc2.Attribute $r53, $r54;
        ucar.nc2.dt.point.WriterStationObsDataset$StationTracker r31;
        ucar.nc2.NetcdfFileWriteable $r7, $r8, $r9, $r10, $r16, $r21;
        java.lang.String $r17, $r22, $r29;
        ucar.ma2.ArrayInt$D1 $r46, $r47, $r48, $r49;
        ucar.ma2.InvalidRangeException $r43;
        java.lang.IllegalStateException $r50;
        java.util.Date $r11, $r12, $r14, $r19, $r51, $r52;
        ucar.nc2.dt.point.WriterStationObsDataset r1;
        java.util.List $r2, $r6, $r25, $r32, $r33, r34, $r40;
        ucar.nc2.units.DateFormatter $r15, $r20;
        ucar.unidata.geoloc.Station r27;
        java.util.HashMap $r28;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, $i16, i17, $i19, $i21;
        java.lang.Object $r26, $r30, $r35, $r36, $r38, $r41;

        r1 := @this: ucar.nc2.dt.point.WriterStationObsDataset;

        $r46 = new ucar.ma2.ArrayInt$D1;

        $i0 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: int recno>;

        specialinvoke $r46.<ucar.ma2.ArrayInt$D1: void <init>(int)>($i0);

        $r2 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: java.util.List stnList>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r47 = new ucar.ma2.ArrayInt$D1;

        specialinvoke $r47.<ucar.ma2.ArrayInt$D1: void <init>(int)>($i1);

        $r48 = new ucar.ma2.ArrayInt$D1;

        specialinvoke $r48.<ucar.ma2.ArrayInt$D1: void <init>(int)>($i1);

        $r49 = new ucar.ma2.ArrayInt$D1;

        specialinvoke $r49.<ucar.ma2.ArrayInt$D1: void <init>(int)>($i1);

        i15 = 0;

     label01:
        $r6 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: java.util.List stnList>;

        $i2 = interfaceinvoke $r6.<java.util.List: int size()>();

        if i15 >= $i2 goto label07;

        $r25 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: java.util.List stnList>;

        $r26 = interfaceinvoke $r25.<java.util.List: java.lang.Object get(int)>(i15);

        r27 = (ucar.unidata.geoloc.Station) $r26;

        $r28 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: java.util.HashMap stationMap>;

        $r29 = interfaceinvoke r27.<ucar.unidata.geoloc.Station: java.lang.String getName()>();

        $r30 = virtualinvoke $r28.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r29);

        r31 = (ucar.nc2.dt.point.WriterStationObsDataset$StationTracker) $r30;

        $i3 = r31.<ucar.nc2.dt.point.WriterStationObsDataset$StationTracker: int lastChild>;

        virtualinvoke $r48.<ucar.ma2.ArrayInt$D1: void set(int,int)>(i15, $i3);

        $i4 = r31.<ucar.nc2.dt.point.WriterStationObsDataset$StationTracker: int numChildren>;

        virtualinvoke $r49.<ucar.ma2.ArrayInt$D1: void set(int,int)>(i15, $i4);

        $r32 = r31.<ucar.nc2.dt.point.WriterStationObsDataset$StationTracker: java.util.List link>;

        $i5 = interfaceinvoke $r32.<java.util.List: int size()>();

        if $i5 <= 0 goto label02;

        $r40 = r31.<ucar.nc2.dt.point.WriterStationObsDataset$StationTracker: java.util.List link>;

        $r41 = interfaceinvoke $r40.<java.util.List: java.lang.Object get(int)>(0);

        $r42 = (java.lang.Integer) $r41;

        $i16 = virtualinvoke $r42.<java.lang.Integer: int intValue()>();

        goto label03;

     label02:
        $i19 = (int) -1;

        $i16 = $i19;

     label03:
        virtualinvoke $r47.<ucar.ma2.ArrayInt$D1: void set(int,int)>(i15, $i16);

        $r33 = r31.<ucar.nc2.dt.point.WriterStationObsDataset$StationTracker: java.util.List link>;

        $i6 = interfaceinvoke $r33.<java.util.List: int size()>();

        if $i6 <= 0 goto label06;

        r34 = r31.<ucar.nc2.dt.point.WriterStationObsDataset$StationTracker: java.util.List link>;

        i17 = 0;

     label04:
        $i7 = interfaceinvoke r34.<java.util.List: int size()>();

        $i8 = $i7 - 1;

        if i17 >= $i8 goto label05;

        $r36 = interfaceinvoke r34.<java.util.List: java.lang.Object get(int)>(i17);

        r37 = (java.lang.Integer) $r36;

        $i12 = i17 + 1;

        $r38 = interfaceinvoke r34.<java.util.List: java.lang.Object get(int)>($i12);

        r39 = (java.lang.Integer) $r38;

        $i13 = virtualinvoke r37.<java.lang.Integer: int intValue()>();

        $i14 = virtualinvoke r39.<java.lang.Integer: int intValue()>();

        virtualinvoke $r46.<ucar.ma2.ArrayInt$D1: void set(int,int)>($i13, $i14);

        i17 = i17 + 1;

        goto label04;

     label05:
        $i9 = interfaceinvoke r34.<java.util.List: int size()>();

        $i10 = $i9 - 1;

        $r35 = interfaceinvoke r34.<java.util.List: java.lang.Object get(int)>($i10);

        r45 = (java.lang.Integer) $r35;

        $i11 = virtualinvoke r45.<java.lang.Integer: int intValue()>();

        $i21 = (int) -1;

        virtualinvoke $r46.<ucar.ma2.ArrayInt$D1: void set(int,int)>($i11, $i21);

     label06:
        i15 = i15 + 1;

        goto label01;

     label07:
        $r7 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r7.<ucar.nc2.NetcdfFileWriteable: void write(java.lang.String,ucar.ma2.Array)>("firstChild", $r47);

        $r8 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r8.<ucar.nc2.NetcdfFileWriteable: void write(java.lang.String,ucar.ma2.Array)>("lastChild", $r48);

        $r9 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r9.<ucar.nc2.NetcdfFileWriteable: void write(java.lang.String,ucar.ma2.Array)>("numChildren", $r49);

        $r10 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r10.<ucar.nc2.NetcdfFileWriteable: void write(java.lang.String,ucar.ma2.Array)>("nextChild", $r46);

     label08:
        goto label10;

     label09:
        $r43 := @caughtexception;

        virtualinvoke $r43.<ucar.ma2.InvalidRangeException: void printStackTrace()>();

        $r50 = new java.lang.IllegalStateException;

        specialinvoke $r50.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r43);

        throw $r50;

     label10:
        $r11 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: java.util.Date minDate>;

        if $r11 != null goto label11;

        $r51 = new java.util.Date;

        specialinvoke $r51.<java.util.Date: void <init>()>();

        r1.<ucar.nc2.dt.point.WriterStationObsDataset: java.util.Date minDate> = $r51;

     label11:
        $r12 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: java.util.Date maxDate>;

        if $r12 != null goto label12;

        $r52 = new java.util.Date;

        specialinvoke $r52.<java.util.Date: void <init>()>();

        r1.<ucar.nc2.dt.point.WriterStationObsDataset: java.util.Date maxDate> = $r52;

     label12:
        $r16 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r53 = new ucar.nc2.Attribute;

        $r15 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.units.DateFormatter dateFormatter>;

        $r14 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: java.util.Date minDate>;

        $r17 = virtualinvoke $r15.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>($r14);

        specialinvoke $r53.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("time_coverage_start", $r17);

        virtualinvoke $r16.<ucar.nc2.NetcdfFileWriteable: void updateAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>(null, $r53);

        $r21 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r54 = new ucar.nc2.Attribute;

        $r20 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.units.DateFormatter dateFormatter>;

        $r19 = r1.<ucar.nc2.dt.point.WriterStationObsDataset: java.util.Date maxDate>;

        $r22 = virtualinvoke $r20.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>($r19);

        specialinvoke $r54.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("time_coverage_end", $r22);

        virtualinvoke $r21.<ucar.nc2.NetcdfFileWriteable: void updateAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>(null, $r54);

        return;

        catch ucar.ma2.InvalidRangeException from label07 to label08 with label09;
    }

    public void writeRecord(ucar.nc2.dt.StationObsDatatype, ucar.ma2.StructureData) throws java.io.IOException
    {
        java.io.PrintStream $r7;
        java.util.Date $r4;
        ucar.unidata.geoloc.Station $r2, $r11;
        ucar.ma2.StructureData r5;
        ucar.nc2.dt.StationObsDatatype r1;
        ucar.nc2.dt.point.WriterStationObsDataset r0;
        java.lang.StringBuilder $r6, $r8, $r9, $r10, $r12;
        java.lang.String $r3, $r13;
        boolean $z0;

        r0 := @this: ucar.nc2.dt.point.WriterStationObsDataset;

        r1 := @parameter0: ucar.nc2.dt.StationObsDatatype;

        r5 := @parameter1: ucar.ma2.StructureData;

        $z0 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: boolean debug>;

        if $z0 == 0 goto label1;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sobs= ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; station = ");

        $r11 = interfaceinvoke r1.<ucar.nc2.dt.StationObsDatatype: ucar.unidata.geoloc.Station getStation()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r13);

     label1:
        $r2 = interfaceinvoke r1.<ucar.nc2.dt.StationObsDatatype: ucar.unidata.geoloc.Station getStation()>();

        $r3 = interfaceinvoke $r2.<ucar.unidata.geoloc.Station: java.lang.String getName()>();

        $r4 = interfaceinvoke r1.<ucar.nc2.dt.StationObsDatatype: java.util.Date getObservationTimeAsDate()>();

        virtualinvoke r0.<ucar.nc2.dt.point.WriterStationObsDataset: void writeRecord(java.lang.String,java.util.Date,ucar.ma2.StructureData)>($r3, $r4, r5);

        return;
    }

    public void writeRecord(java.lang.String, java.util.Date, ucar.ma2.StructureData) throws java.io.IOException
    {
        java.lang.IllegalStateException $r14;
        java.util.Date $r9, r10, $r11, $r12, $r15;
        java.lang.Integer $r22;
        ucar.ma2.StructureData r6;
        int[] $r8, $r23, $r24, $r26, $r28, $r31, $r34;
        ucar.nc2.dt.point.WriterStationObsDataset r0;
        boolean $z0, $z1;
        ucar.ma2.ArrayObject$D1 $r16, $r29;
        java.util.List $r21;
        ucar.ma2.StructureMembers $r7;
        ucar.nc2.dt.point.WriterStationObsDataset$StationTracker r4;
        ucar.nc2.units.DateFormatter $r17;
        ucar.nc2.NetcdfFileWriteable $r25, $r27, $r30, $r33;
        java.util.HashMap $r2;
        ucar.ma2.ArrayStructureW $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String r1, $r18;
        ucar.ma2.ArrayInt$D1 $r19, $r20, $r32, $r35;
        ucar.ma2.InvalidRangeException $r13;
        java.lang.Object $r3;

        r0 := @this: ucar.nc2.dt.point.WriterStationObsDataset;

        r1 := @parameter0: java.lang.String;

        r10 := @parameter1: java.util.Date;

        r6 := @parameter2: ucar.ma2.StructureData;

        $r2 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: java.util.HashMap stationMap>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (ucar.nc2.dt.point.WriterStationObsDataset$StationTracker) $r3;

        $r5 = new ucar.ma2.ArrayStructureW;

        $r7 = virtualinvoke r6.<ucar.ma2.StructureData: ucar.ma2.StructureMembers getStructureMembers()>();

        $r8 = newarray (int)[1];

        $r8[0] = 1;

        specialinvoke $r5.<ucar.ma2.ArrayStructureW: void <init>(ucar.ma2.StructureMembers,int[])>($r7, $r8);

        virtualinvoke $r5.<ucar.ma2.ArrayStructureW: void setStructureData(ucar.ma2.StructureData,int)>(r6, 0);

        $r9 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: java.util.Date minDate>;

        if $r9 == null goto label1;

        $r12 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: java.util.Date minDate>;

        $z1 = virtualinvoke $r12.<java.util.Date: boolean after(java.util.Date)>(r10);

        if $z1 == 0 goto label2;

     label1:
        r0.<ucar.nc2.dt.point.WriterStationObsDataset: java.util.Date minDate> = r10;

     label2:
        $r15 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: java.util.Date maxDate>;

        if $r15 == null goto label3;

        $r11 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: java.util.Date maxDate>;

        $z0 = virtualinvoke $r11.<java.util.Date: boolean before(java.util.Date)>(r10);

        if $z0 == 0 goto label4;

     label3:
        r0.<ucar.nc2.dt.point.WriterStationObsDataset: java.util.Date maxDate> = r10;

     label4:
        $r16 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.ma2.ArrayObject$D1 timeArray>;

        $r17 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.units.DateFormatter dateFormatter>;

        $r18 = virtualinvoke $r17.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>(r10);

        virtualinvoke $r16.<ucar.ma2.ArrayObject$D1: void set(int,java.lang.Object)>(0, $r18);

        $r19 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.ma2.ArrayInt$D1 prevArray>;

        $i2 = r4.<ucar.nc2.dt.point.WriterStationObsDataset$StationTracker: int lastChild>;

        virtualinvoke $r19.<ucar.ma2.ArrayInt$D1: void set(int,int)>(0, $i2);

        $r20 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.ma2.ArrayInt$D1 parentArray>;

        $i3 = r4.<ucar.nc2.dt.point.WriterStationObsDataset$StationTracker: int parent_index>;

        virtualinvoke $r20.<ucar.ma2.ArrayInt$D1: void set(int,int)>(0, $i3);

        $r21 = r4.<ucar.nc2.dt.point.WriterStationObsDataset$StationTracker: java.util.List link>;

        $i4 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: int recno>;

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r22);

        $i5 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: int recno>;

        r4.<ucar.nc2.dt.point.WriterStationObsDataset$StationTracker: int lastChild> = $i5;

        $i6 = r4.<ucar.nc2.dt.point.WriterStationObsDataset$StationTracker: int numChildren>;

        $i7 = $i6 + 1;

        r4.<ucar.nc2.dt.point.WriterStationObsDataset$StationTracker: int numChildren> = $i7;

        $r23 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: int[] origin>;

        $i8 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: int recno>;

        $r23[0] = $i8;

        $r24 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: int[] originTime>;

        $i9 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: int recno>;

        $r24[0] = $i9;

     label5:
        $r25 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r26 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: int[] origin>;

        virtualinvoke $r25.<ucar.nc2.NetcdfFileWriteable: void write(java.lang.String,int[],ucar.ma2.Array)>("record", $r26, $r5);

        $r27 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r28 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: int[] originTime>;

        $r29 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.ma2.ArrayObject$D1 timeArray>;

        virtualinvoke $r27.<ucar.nc2.NetcdfFileWriteable: void writeStringData(java.lang.String,int[],ucar.ma2.Array)>("time", $r28, $r29);

        $r30 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r31 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: int[] originTime>;

        $r32 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.ma2.ArrayInt$D1 prevArray>;

        virtualinvoke $r30.<ucar.nc2.NetcdfFileWriteable: void write(java.lang.String,int[],ucar.ma2.Array)>("prevChild", $r31, $r32);

        $r33 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r34 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: int[] originTime>;

        $r35 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.ma2.ArrayInt$D1 parentArray>;

        virtualinvoke $r33.<ucar.nc2.NetcdfFileWriteable: void write(java.lang.String,int[],ucar.ma2.Array)>("parent_index", $r34, $r35);

     label6:
        goto label8;

     label7:
        $r13 := @caughtexception;

        virtualinvoke $r13.<ucar.ma2.InvalidRangeException: void printStackTrace()>();

        $r14 = new java.lang.IllegalStateException;

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r13);

        throw $r14;

     label8:
        $i0 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: int recno>;

        $i1 = $i0 + 1;

        r0.<ucar.nc2.dt.point.WriterStationObsDataset: int recno> = $i1;

        return;

        catch ucar.ma2.InvalidRangeException from label5 to label6 with label7;
    }

    public void finish() throws java.io.IOException
    {
        ucar.nc2.NetcdfFileWriteable $r1;
        ucar.nc2.dt.point.WriterStationObsDataset r0;

        r0 := @this: ucar.nc2.dt.point.WriterStationObsDataset;

        specialinvoke r0.<ucar.nc2.dt.point.WriterStationObsDataset: void writeDataFinish()>();

        $r1 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r1.<ucar.nc2.NetcdfFileWriteable: void close()>();

        return;
    }

    private ucar.unidata.geoloc.LatLonRect getBoundingBox(java.util.List)
    {
        ucar.unidata.geoloc.Station r6, r7;
        ucar.unidata.geoloc.LatLonRect $r3;
        java.util.List r0;
        ucar.nc2.dt.point.WriterStationObsDataset r5;
        int $i0, i1;
        java.lang.Object $r1, $r4;
        ucar.unidata.geoloc.LatLonPointImpl $r2;
        double $d0, $d1, $d2, $d3;

        r5 := @this: ucar.nc2.dt.point.WriterStationObsDataset;

        r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        r6 = (ucar.unidata.geoloc.Station) $r1;

        $r2 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r2.<ucar.unidata.geoloc.LatLonPointImpl: void <init>()>();

        $d0 = interfaceinvoke r6.<ucar.unidata.geoloc.Station: double getLatitude()>();

        $d1 = interfaceinvoke r6.<ucar.unidata.geoloc.Station: double getLongitude()>();

        virtualinvoke $r2.<ucar.unidata.geoloc.LatLonPointImpl: void set(double,double)>($d0, $d1);

        $r3 = new ucar.unidata.geoloc.LatLonRect;

        specialinvoke $r3.<ucar.unidata.geoloc.LatLonRect: void <init>(ucar.unidata.geoloc.LatLonPoint,double,double)>($r2, 0.001, 0.001);

        i1 = 1;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        r7 = (ucar.unidata.geoloc.Station) $r4;

        $d2 = interfaceinvoke r7.<ucar.unidata.geoloc.Station: double getLatitude()>();

        $d3 = interfaceinvoke r7.<ucar.unidata.geoloc.Station: double getLongitude()>();

        virtualinvoke $r2.<ucar.unidata.geoloc.LatLonPointImpl: void set(double,double)>($d2, $d3);

        virtualinvoke $r3.<ucar.unidata.geoloc.LatLonRect: void extend(ucar.unidata.geoloc.LatLonPoint)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r3;
    }

    private void write(ucar.nc2.dt.StationObsDataset) throws java.io.IOException
    {
        java.lang.IllegalStateException $r32, $r36;
        java.util.Date $r5, $r9, $r25;
        ucar.ma2.StructureData $r23;
        ucar.nc2.dt.StationObsDatatype r22;
        int[] $r31, r38, r39;
        ucar.nc2.dt.point.WriterStationObsDataset r0;
        ucar.nc2.dt.StationObsDataset r1;
        boolean $z0, $z1;
        ucar.nc2.dt.DataIterator $r19;
        ucar.ma2.ArrayObject$D1 $r18;
        java.util.List $r2, $r11, $r12, $r14;
        ucar.ma2.StructureMembers $r30;
        ucar.nc2.Attribute r37;
        ucar.nc2.units.DateFormatter $r4, $r8, $r24;
        ucar.nc2.NetcdfFileWriteable $r3, $r7, $r13, $r15, $r20, $r27, $r28, $r34;
        ucar.ma2.ArrayStructureW $r29, r40;
        int $i0, i1, i2;
        java.lang.Boolean $r17;
        java.lang.String $r6, $r10, $r26;
        ucar.ma2.InvalidRangeException $r35;
        java.lang.Object $r16, $r21, $r33;

        r0 := @this: ucar.nc2.dt.point.WriterStationObsDataset;

        r1 := @parameter0: ucar.nc2.dt.StationObsDataset;

        specialinvoke r0.<ucar.nc2.dt.point.WriterStationObsDataset: void createGlobalAttributes()>();

        $r2 = interfaceinvoke r1.<ucar.nc2.dt.StationObsDataset: java.util.List getStations()>();

        specialinvoke r0.<ucar.nc2.dt.point.WriterStationObsDataset: void createStations(java.util.List)>($r2);

        $r3 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r4 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.units.DateFormatter dateFormatter>;

        $r5 = interfaceinvoke r1.<ucar.nc2.dt.StationObsDataset: java.util.Date getStartDate()>();

        $r6 = virtualinvoke $r4.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>($r5);

        virtualinvoke $r3.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addGlobalAttribute(java.lang.String,java.lang.String)>("time_coverage_start", $r6);

        $r7 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r8 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.units.DateFormatter dateFormatter>;

        $r9 = interfaceinvoke r1.<ucar.nc2.dt.StationObsDataset: java.util.Date getEndDate()>();

        $r10 = virtualinvoke $r8.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>($r9);

        virtualinvoke $r7.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addGlobalAttribute(java.lang.String,java.lang.String)>("time_coverage_end", $r10);

        $r11 = interfaceinvoke r1.<ucar.nc2.dt.StationObsDataset: java.util.List getDataVariables()>();

        specialinvoke r0.<ucar.nc2.dt.point.WriterStationObsDataset: void createDataVariables(java.util.List)>($r11);

        $r12 = interfaceinvoke r1.<ucar.nc2.dt.StationObsDataset: java.util.List getGlobalAttributes()>();

        i1 = 0;

     label01:
        $i0 = interfaceinvoke $r12.<java.util.List: int size()>();

        if i1 >= $i0 goto label02;

        $r33 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(i1);

        r37 = (ucar.nc2.Attribute) $r33;

        $r34 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r34.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addGlobalAttribute(ucar.nc2.Attribute)>(r37);

        i1 = i1 + 1;

        goto label01;

     label02:
        $r13 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r13.<ucar.nc2.NetcdfFileWriteable: void create()>();

        $r14 = interfaceinvoke r1.<ucar.nc2.dt.StationObsDataset: java.util.List getStations()>();

        specialinvoke r0.<ucar.nc2.dt.point.WriterStationObsDataset: void writeStationData(java.util.List)>($r14);

        $r15 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r16 = virtualinvoke $r15.<ucar.nc2.NetcdfFileWriteable: java.lang.Object sendIospMessage(java.lang.Object)>("AddRecordStructure");

        $r17 = (java.lang.Boolean) $r16;

        $z0 = virtualinvoke $r17.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label03;

        $r32 = new java.lang.IllegalStateException;

        specialinvoke $r32.<java.lang.IllegalStateException: void <init>(java.lang.String)>("can\'t add record variable");

        throw $r32;

     label03:
        r38 = newarray (int)[1];

        r39 = newarray (int)[2];

        i2 = 0;

        r40 = null;

        $r18 = new ucar.ma2.ArrayObject$D1;

        specialinvoke $r18.<ucar.ma2.ArrayObject$D1: void <init>(java.lang.Class,int)>(class "Ljava/lang/String;", 1);

        $r19 = interfaceinvoke r1.<ucar.nc2.dt.StationObsDataset: ucar.nc2.dt.DataIterator getDataIterator(int)>(1000000);

     label04:
        $z1 = interfaceinvoke $r19.<ucar.nc2.dt.DataIterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r21 = interfaceinvoke $r19.<ucar.nc2.dt.DataIterator: java.lang.Object nextData()>();

        r22 = (ucar.nc2.dt.StationObsDatatype) $r21;

        $r23 = interfaceinvoke r22.<ucar.nc2.dt.StationObsDatatype: ucar.ma2.StructureData getData()>();

        if r40 != null goto label05;

        $r29 = new ucar.ma2.ArrayStructureW;

        $r30 = virtualinvoke $r23.<ucar.ma2.StructureData: ucar.ma2.StructureMembers getStructureMembers()>();

        $r31 = newarray (int)[1];

        $r31[0] = 1;

        specialinvoke $r29.<ucar.ma2.ArrayStructureW: void <init>(ucar.ma2.StructureMembers,int[])>($r30, $r31);

        r40 = $r29;

     label05:
        virtualinvoke r40.<ucar.ma2.ArrayStructureW: void setStructureData(ucar.ma2.StructureData,int)>($r23, 0);

        $r24 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.units.DateFormatter dateFormatter>;

        $r25 = interfaceinvoke r22.<ucar.nc2.dt.StationObsDatatype: java.util.Date getObservationTimeAsDate()>();

        $r26 = virtualinvoke $r24.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>($r25);

        virtualinvoke $r18.<ucar.ma2.ArrayObject$D1: void set(int,java.lang.Object)>(0, $r26);

        r38[0] = i2;

        r39[0] = i2;

     label06:
        $r27 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r27.<ucar.nc2.NetcdfFileWriteable: void write(java.lang.String,int[],ucar.ma2.Array)>("record", r38, r40);

        $r28 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r28.<ucar.nc2.NetcdfFileWriteable: void writeStringData(java.lang.String,int[],ucar.ma2.Array)>("time", r39, $r18);

     label07:
        goto label09;

     label08:
        $r35 := @caughtexception;

        virtualinvoke $r35.<ucar.ma2.InvalidRangeException: void printStackTrace()>();

        $r36 = new java.lang.IllegalStateException;

        specialinvoke $r36.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r35);

        throw $r36;

     label09:
        i2 = i2 + 1;

        goto label04;

     label10:
        $r20 = r0.<ucar.nc2.dt.point.WriterStationObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r20.<ucar.nc2.NetcdfFileWriteable: void close()>();

        return;

        catch ucar.ma2.InvalidRangeException from label06 to label07 with label08;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        ucar.unidata.geoloc.Station r8;
        long $l0, $l1, l2;
        java.lang.String[] r19;
        java.util.ArrayList $r6, $r9;
        ucar.ma2.StructureData $r18;
        ucar.nc2.dt.TypedDataset $r2;
        ucar.nc2.dt.StationObsDatatype r20;
        ucar.nc2.dt.point.WriterStationObsDataset $r4;
        ucar.nc2.dt.StationObsDataset r3;
        java.lang.String $r16;
        ucar.nc2.constants.FeatureType $r1;
        ucar.nc2.dt.DataIterator $r11;
        boolean $z0;
        java.io.PrintStream $r13;
        java.util.List $r5;
        ucar.nc2.VariableSimpleIF $r10;
        java.lang.StringBuilder $r0, $r12, $r14, $r15;
        java.lang.Object $r7, $r17;

        r19 := @parameter0: java.lang.String[];

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType STATION>;

        $r2 = staticinvoke <ucar.nc2.dt.TypedDatasetFactory: ucar.nc2.dt.TypedDataset open(ucar.nc2.constants.FeatureType,java.lang.String,ucar.nc2.util.CancelTask,java.lang.StringBuilder)>($r1, "C:/data/metars/Surface_METAR_20070513_0000.nc", null, $r0);

        r3 = (ucar.nc2.dt.StationObsDataset) $r2;

        $r4 = new ucar.nc2.dt.point.WriterStationObsDataset;

        specialinvoke $r4.<ucar.nc2.dt.point.WriterStationObsDataset: void <init>(java.lang.String,java.lang.String)>("C:/temp/Surface_METAR_20070513_0000.rewrite.nc", "test");

        $r5 = interfaceinvoke r3.<ucar.nc2.dt.StationObsDataset: java.util.List getStations()>();

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r7 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

        r8 = (ucar.unidata.geoloc.Station) $r7;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r8);

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        $r10 = interfaceinvoke r3.<ucar.nc2.dt.StationObsDataset: ucar.nc2.VariableSimpleIF getDataVariable(java.lang.String)>("wind_speed");

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r10);

        virtualinvoke $r4.<ucar.nc2.dt.point.WriterStationObsDataset: void writeHeader(java.util.List,java.util.List)>($r6, $r9);

        $r11 = interfaceinvoke r3.<ucar.nc2.dt.StationObsDataset: ucar.nc2.dt.DataIterator getDataIterator(ucar.unidata.geoloc.Station)>(r8);

     label1:
        $z0 = interfaceinvoke $r11.<ucar.nc2.dt.DataIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r17 = interfaceinvoke $r11.<ucar.nc2.dt.DataIterator: java.lang.Object nextData()>();

        r20 = (ucar.nc2.dt.StationObsDatatype) $r17;

        $r18 = interfaceinvoke r20.<ucar.nc2.dt.StationObsDatatype: ucar.ma2.StructureData getData()>();

        virtualinvoke $r4.<ucar.nc2.dt.point.WriterStationObsDataset: void writeRecord(ucar.nc2.dt.StationObsDatatype,ucar.ma2.StructureData)>(r20, $r18);

        goto label1;

     label2:
        virtualinvoke $r4.<ucar.nc2.dt.point.WriterStationObsDataset: void finish()>();

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l2 = $l1 - $l0;

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("That took = ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r16);

        return;
    }

    public static void rewrite(java.lang.String, java.lang.String) throws java.io.IOException
    {
        ucar.ma2.StructureData $r31;
        ucar.nc2.dt.StationObsDatatype r30;
        ucar.nc2.dt.point.WriterStationObsDataset $r9;
        ucar.nc2.dt.StationObsDataset r6;
        ucar.nc2.constants.FeatureType $r4;
        boolean $z0, $z1;
        ucar.nc2.dt.DataIterator $r28;
        java.util.List $r7, $r8;
        java.lang.StringBuilder $r3, $r11, $r12, $r13, $r17, $r19, $r20, $r21, $r22, $r23, $r24;
        ucar.nc2.NetcdfFile $r1;
        ucar.unidata.geoloc.Station r27;
        long $l0, $l1, $l2, l3;
        ucar.nc2.dt.TypedDataset $r5;
        java.lang.String r0, r10, $r14, $r25;
        java.io.PrintStream $r18;
        java.util.Iterator $r16;
        java.io.File $r15;
        java.lang.Object $r26, $r29;
        ucar.nc2.dataset.NetcdfDataset $r2;

        r0 := @parameter0: java.lang.String;

        r10 := @parameter1: java.lang.String;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1 = staticinvoke <ucar.nc2.NetcdfFile: ucar.nc2.NetcdfFile openInMemory(java.lang.String)>(r0);

        $r2 = new ucar.nc2.dataset.NetcdfDataset;

        specialinvoke $r2.<ucar.nc2.dataset.NetcdfDataset: void <init>(ucar.nc2.NetcdfFile)>($r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType STATION>;

        $r5 = staticinvoke <ucar.nc2.dt.TypedDatasetFactory: ucar.nc2.dt.TypedDataset open(ucar.nc2.constants.FeatureType,ucar.nc2.dataset.NetcdfDataset,ucar.nc2.util.CancelTask,java.lang.StringBuilder)>($r4, $r2, null, $r3);

        r6 = (ucar.nc2.dt.StationObsDataset) $r5;

        $r7 = interfaceinvoke r6.<ucar.nc2.dt.StationObsDataset: java.util.List getStations()>();

        $r8 = interfaceinvoke r6.<ucar.nc2.dt.StationObsDataset: java.util.List getDataVariables()>();

        $r9 = new ucar.nc2.dt.point.WriterStationObsDataset;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rewrite ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<ucar.nc2.dt.point.WriterStationObsDataset: void <init>(java.lang.String,java.lang.String)>(r10, $r14);

        $r15 = new java.io.File;

        specialinvoke $r15.<java.io.File: void <init>(java.lang.String)>(r0);

        $l1 = virtualinvoke $r15.<java.io.File: long length()>();

        virtualinvoke $r9.<ucar.nc2.dt.point.WriterStationObsDataset: void setLength(long)>($l1);

        virtualinvoke $r9.<ucar.nc2.dt.point.WriterStationObsDataset: void writeHeader(java.util.List,java.util.List)>($r7, $r8);

        $r16 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r26 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r27 = (ucar.unidata.geoloc.Station) $r26;

        $r28 = interfaceinvoke r6.<ucar.nc2.dt.StationObsDataset: ucar.nc2.dt.DataIterator getDataIterator(ucar.unidata.geoloc.Station)>(r27);

     label2:
        $z1 = interfaceinvoke $r28.<ucar.nc2.dt.DataIterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r29 = interfaceinvoke $r28.<ucar.nc2.dt.DataIterator: java.lang.Object nextData()>();

        r30 = (ucar.nc2.dt.StationObsDatatype) $r29;

        $r31 = interfaceinvoke r30.<ucar.nc2.dt.StationObsDatatype: ucar.ma2.StructureData getData()>();

        virtualinvoke $r9.<ucar.nc2.dt.point.WriterStationObsDataset: void writeRecord(ucar.nc2.dt.StationObsDatatype,ucar.ma2.StructureData)>(r30, $r31);

        goto label2;

     label3:
        goto label1;

     label4:
        virtualinvoke $r9.<ucar.nc2.dt.point.WriterStationObsDataset: void finish()>();

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l3 = $l2 - $l0;

        $r18 = <java.lang.System: java.io.PrintStream out>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rewrite ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" took = ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l3);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r25);

        return;
    }

    public static void main2(java.lang.String[]) throws java.io.IOException
    {
        boolean $z0;
        java.lang.StringBuilder $r1, $r3, $r4, $r5, $r6, $r10, $r12, $r13, $r18, $r19, $r21;
        long $l0, $l2, l5;
        java.lang.String[] r0;
        int $i1, $i3, i4;
        java.lang.String $r7, $r14, $r16, $r17, $r20, $r22, r23, r24;
        java.io.PrintStream $r2, $r11;
        java.io.File $r8, r15;
        java.io.File[] $r9;

        r0 := @parameter0: java.lang.String[];

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r23 = "C:/temp2/";

        r24 = "C:/data/metars/";

        $i1 = lengthof r0;

        if $i1 <= 1 goto label1;

        r24 = r0[0];

        r23 = r0[1];

     label1:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rewrite .nc files from ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r7);

        $r8 = new java.io.File;

        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>(r24);

        $r9 = virtualinvoke $r8.<java.io.File: java.io.File[] listFiles()>();

        $i3 = lengthof $r9;

        i4 = 0;

     label2:
        if i4 >= $i3 goto label4;

        r15 = $r9[i4];

        $r16 = virtualinvoke r15.<java.io.File: java.lang.String getName()>();

        $z0 = virtualinvoke $r16.<java.lang.String: boolean endsWith(java.lang.String)>(".nc");

        if $z0 == 0 goto label3;

        $r17 = virtualinvoke r15.<java.io.File: java.lang.String getAbsolutePath()>();

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        $r20 = virtualinvoke r15.<java.io.File: java.lang.String getName()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <ucar.nc2.dt.point.WriterStationObsDataset: void rewrite(java.lang.String,java.lang.String)>($r17, $r22);

     label3:
        i4 = i4 + 1;

        goto label2;

     label4:
        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l5 = $l2 - $l0;

        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("That took = ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l5);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r14);

        return;
    }

    public static void <clinit>()
    {
        <ucar.nc2.dt.point.WriterStationObsDataset: java.lang.String parentName> = "parent_index";

        <ucar.nc2.dt.point.WriterStationObsDataset: java.lang.String prevChildName> = "prevChild";

        <ucar.nc2.dt.point.WriterStationObsDataset: java.lang.String nextChildName> = "nextChild";

        <ucar.nc2.dt.point.WriterStationObsDataset: java.lang.String numChildName> = "numChildren";

        <ucar.nc2.dt.point.WriterStationObsDataset: java.lang.String lastChildName> = "lastChild";

        <ucar.nc2.dt.point.WriterStationObsDataset: java.lang.String firstChildName> = "firstChild";

        <ucar.nc2.dt.point.WriterStationObsDataset: java.lang.String wmoName> = "wmo_id";

        <ucar.nc2.dt.point.WriterStationObsDataset: java.lang.String descName> = "station_description";

        <ucar.nc2.dt.point.WriterStationObsDataset: java.lang.String idName> = "station_id";

        <ucar.nc2.dt.point.WriterStationObsDataset: java.lang.String timeName> = "time";

        <ucar.nc2.dt.point.WriterStationObsDataset: java.lang.String altName> = "altitude";

        <ucar.nc2.dt.point.WriterStationObsDataset: java.lang.String lonName> = "longitude";

        <ucar.nc2.dt.point.WriterStationObsDataset: java.lang.String latName> = "latitude";

        <ucar.nc2.dt.point.WriterStationObsDataset: java.lang.String stationDimName> = "station";

        <ucar.nc2.dt.point.WriterStationObsDataset: java.lang.String recordDimName> = "record";

        return;
    }
}
