public interface  com.mycila.inject.internal.asm.Opcodes extends java.lang.Object
{
    public static final int V1_1;
    public static final int V1_2;
    public static final int V1_3;
    public static final int V1_4;
    public static final int V1_5;
    public static final int V1_6;
    public static final int V1_7;
    public static final int ACC_PUBLIC;
    public static final int ACC_PRIVATE;
    public static final int ACC_PROTECTED;
    public static final int ACC_STATIC;
    public static final int ACC_FINAL;
    public static final int ACC_SUPER;
    public static final int ACC_SYNCHRONIZED;
    public static final int ACC_VOLATILE;
    public static final int ACC_BRIDGE;
    public static final int ACC_VARARGS;
    public static final int ACC_TRANSIENT;
    public static final int ACC_NATIVE;
    public static final int ACC_INTERFACE;
    public static final int ACC_ABSTRACT;
    public static final int ACC_STRICT;
    public static final int ACC_SYNTHETIC;
    public static final int ACC_ANNOTATION;
    public static final int ACC_ENUM;
    public static final int ACC_DEPRECATED;
    public static final int T_BOOLEAN;
    public static final int T_CHAR;
    public static final int T_FLOAT;
    public static final int T_DOUBLE;
    public static final int T_BYTE;
    public static final int T_SHORT;
    public static final int T_INT;
    public static final int T_LONG;
    public static final int F_NEW;
    public static final int F_FULL;
    public static final int F_APPEND;
    public static final int F_CHOP;
    public static final int F_SAME;
    public static final int F_SAME1;
    public static final java.lang.Integer TOP;
    public static final java.lang.Integer INTEGER;
    public static final java.lang.Integer FLOAT;
    public static final java.lang.Integer DOUBLE;
    public static final java.lang.Integer LONG;
    public static final java.lang.Integer NULL;
    public static final java.lang.Integer UNINITIALIZED_THIS;
    public static final java.lang.String INVOKEDYNAMIC_OWNER;
    public static final int NOP;
    public static final int ACONST_NULL;
    public static final int ICONST_M1;
    public static final int ICONST_0;
    public static final int ICONST_1;
    public static final int ICONST_2;
    public static final int ICONST_3;
    public static final int ICONST_4;
    public static final int ICONST_5;
    public static final int LCONST_0;
    public static final int LCONST_1;
    public static final int FCONST_0;
    public static final int FCONST_1;
    public static final int FCONST_2;
    public static final int DCONST_0;
    public static final int DCONST_1;
    public static final int BIPUSH;
    public static final int SIPUSH;
    public static final int LDC;
    public static final int ILOAD;
    public static final int LLOAD;
    public static final int FLOAD;
    public static final int DLOAD;
    public static final int ALOAD;
    public static final int IALOAD;
    public static final int LALOAD;
    public static final int FALOAD;
    public static final int DALOAD;
    public static final int AALOAD;
    public static final int BALOAD;
    public static final int CALOAD;
    public static final int SALOAD;
    public static final int ISTORE;
    public static final int LSTORE;
    public static final int FSTORE;
    public static final int DSTORE;
    public static final int ASTORE;
    public static final int IASTORE;
    public static final int LASTORE;
    public static final int FASTORE;
    public static final int DASTORE;
    public static final int AASTORE;
    public static final int BASTORE;
    public static final int CASTORE;
    public static final int SASTORE;
    public static final int POP;
    public static final int POP2;
    public static final int DUP;
    public static final int DUP_X1;
    public static final int DUP_X2;
    public static final int DUP2;
    public static final int DUP2_X1;
    public static final int DUP2_X2;
    public static final int SWAP;
    public static final int IADD;
    public static final int LADD;
    public static final int FADD;
    public static final int DADD;
    public static final int ISUB;
    public static final int LSUB;
    public static final int FSUB;
    public static final int DSUB;
    public static final int IMUL;
    public static final int LMUL;
    public static final int FMUL;
    public static final int DMUL;
    public static final int IDIV;
    public static final int LDIV;
    public static final int FDIV;
    public static final int DDIV;
    public static final int IREM;
    public static final int LREM;
    public static final int FREM;
    public static final int DREM;
    public static final int INEG;
    public static final int LNEG;
    public static final int FNEG;
    public static final int DNEG;
    public static final int ISHL;
    public static final int LSHL;
    public static final int ISHR;
    public static final int LSHR;
    public static final int IUSHR;
    public static final int LUSHR;
    public static final int IAND;
    public static final int LAND;
    public static final int IOR;
    public static final int LOR;
    public static final int IXOR;
    public static final int LXOR;
    public static final int IINC;
    public static final int I2L;
    public static final int I2F;
    public static final int I2D;
    public static final int L2I;
    public static final int L2F;
    public static final int L2D;
    public static final int F2I;
    public static final int F2L;
    public static final int F2D;
    public static final int D2I;
    public static final int D2L;
    public static final int D2F;
    public static final int I2B;
    public static final int I2C;
    public static final int I2S;
    public static final int LCMP;
    public static final int FCMPL;
    public static final int FCMPG;
    public static final int DCMPL;
    public static final int DCMPG;
    public static final int IFEQ;
    public static final int IFNE;
    public static final int IFLT;
    public static final int IFGE;
    public static final int IFGT;
    public static final int IFLE;
    public static final int IF_ICMPEQ;
    public static final int IF_ICMPNE;
    public static final int IF_ICMPLT;
    public static final int IF_ICMPGE;
    public static final int IF_ICMPGT;
    public static final int IF_ICMPLE;
    public static final int IF_ACMPEQ;
    public static final int IF_ACMPNE;
    public static final int GOTO;
    public static final int JSR;
    public static final int RET;
    public static final int TABLESWITCH;
    public static final int LOOKUPSWITCH;
    public static final int IRETURN;
    public static final int LRETURN;
    public static final int FRETURN;
    public static final int DRETURN;
    public static final int ARETURN;
    public static final int RETURN;
    public static final int GETSTATIC;
    public static final int PUTSTATIC;
    public static final int GETFIELD;
    public static final int PUTFIELD;
    public static final int INVOKEVIRTUAL;
    public static final int INVOKESPECIAL;
    public static final int INVOKESTATIC;
    public static final int INVOKEINTERFACE;
    public static final int INVOKEDYNAMIC;
    public static final int NEW;
    public static final int NEWARRAY;
    public static final int ANEWARRAY;
    public static final int ARRAYLENGTH;
    public static final int ATHROW;
    public static final int CHECKCAST;
    public static final int INSTANCEOF;
    public static final int MONITORENTER;
    public static final int MONITOREXIT;
    public static final int MULTIANEWARRAY;
    public static final int IFNULL;
    public static final int IFNONNULL;

    static void <clinit>()
    {
        java.lang.Integer $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        <com.mycila.inject.internal.asm.Opcodes: int IFNONNULL> = 199;

        <com.mycila.inject.internal.asm.Opcodes: int IFNULL> = 198;

        <com.mycila.inject.internal.asm.Opcodes: int MULTIANEWARRAY> = 197;

        <com.mycila.inject.internal.asm.Opcodes: int MONITOREXIT> = 195;

        <com.mycila.inject.internal.asm.Opcodes: int MONITORENTER> = 194;

        <com.mycila.inject.internal.asm.Opcodes: int INSTANCEOF> = 193;

        <com.mycila.inject.internal.asm.Opcodes: int CHECKCAST> = 192;

        <com.mycila.inject.internal.asm.Opcodes: int ATHROW> = 191;

        <com.mycila.inject.internal.asm.Opcodes: int ARRAYLENGTH> = 190;

        <com.mycila.inject.internal.asm.Opcodes: int ANEWARRAY> = 189;

        <com.mycila.inject.internal.asm.Opcodes: int NEWARRAY> = 188;

        <com.mycila.inject.internal.asm.Opcodes: int NEW> = 187;

        <com.mycila.inject.internal.asm.Opcodes: int INVOKEDYNAMIC> = 186;

        <com.mycila.inject.internal.asm.Opcodes: int INVOKEINTERFACE> = 185;

        <com.mycila.inject.internal.asm.Opcodes: int INVOKESTATIC> = 184;

        <com.mycila.inject.internal.asm.Opcodes: int INVOKESPECIAL> = 183;

        <com.mycila.inject.internal.asm.Opcodes: int INVOKEVIRTUAL> = 182;

        <com.mycila.inject.internal.asm.Opcodes: int PUTFIELD> = 181;

        <com.mycila.inject.internal.asm.Opcodes: int GETFIELD> = 180;

        <com.mycila.inject.internal.asm.Opcodes: int PUTSTATIC> = 179;

        <com.mycila.inject.internal.asm.Opcodes: int GETSTATIC> = 178;

        <com.mycila.inject.internal.asm.Opcodes: int RETURN> = 177;

        <com.mycila.inject.internal.asm.Opcodes: int ARETURN> = 176;

        <com.mycila.inject.internal.asm.Opcodes: int DRETURN> = 175;

        <com.mycila.inject.internal.asm.Opcodes: int FRETURN> = 174;

        <com.mycila.inject.internal.asm.Opcodes: int LRETURN> = 173;

        <com.mycila.inject.internal.asm.Opcodes: int IRETURN> = 172;

        <com.mycila.inject.internal.asm.Opcodes: int LOOKUPSWITCH> = 171;

        <com.mycila.inject.internal.asm.Opcodes: int TABLESWITCH> = 170;

        <com.mycila.inject.internal.asm.Opcodes: int RET> = 169;

        <com.mycila.inject.internal.asm.Opcodes: int JSR> = 168;

        <com.mycila.inject.internal.asm.Opcodes: int GOTO> = 167;

        <com.mycila.inject.internal.asm.Opcodes: int IF_ACMPNE> = 166;

        <com.mycila.inject.internal.asm.Opcodes: int IF_ACMPEQ> = 165;

        <com.mycila.inject.internal.asm.Opcodes: int IF_ICMPLE> = 164;

        <com.mycila.inject.internal.asm.Opcodes: int IF_ICMPGT> = 163;

        <com.mycila.inject.internal.asm.Opcodes: int IF_ICMPGE> = 162;

        <com.mycila.inject.internal.asm.Opcodes: int IF_ICMPLT> = 161;

        <com.mycila.inject.internal.asm.Opcodes: int IF_ICMPNE> = 160;

        <com.mycila.inject.internal.asm.Opcodes: int IF_ICMPEQ> = 159;

        <com.mycila.inject.internal.asm.Opcodes: int IFLE> = 158;

        <com.mycila.inject.internal.asm.Opcodes: int IFGT> = 157;

        <com.mycila.inject.internal.asm.Opcodes: int IFGE> = 156;

        <com.mycila.inject.internal.asm.Opcodes: int IFLT> = 155;

        <com.mycila.inject.internal.asm.Opcodes: int IFNE> = 154;

        <com.mycila.inject.internal.asm.Opcodes: int IFEQ> = 153;

        <com.mycila.inject.internal.asm.Opcodes: int DCMPG> = 152;

        <com.mycila.inject.internal.asm.Opcodes: int DCMPL> = 151;

        <com.mycila.inject.internal.asm.Opcodes: int FCMPG> = 150;

        <com.mycila.inject.internal.asm.Opcodes: int FCMPL> = 149;

        <com.mycila.inject.internal.asm.Opcodes: int LCMP> = 148;

        <com.mycila.inject.internal.asm.Opcodes: int I2S> = 147;

        <com.mycila.inject.internal.asm.Opcodes: int I2C> = 146;

        <com.mycila.inject.internal.asm.Opcodes: int I2B> = 145;

        <com.mycila.inject.internal.asm.Opcodes: int D2F> = 144;

        <com.mycila.inject.internal.asm.Opcodes: int D2L> = 143;

        <com.mycila.inject.internal.asm.Opcodes: int D2I> = 142;

        <com.mycila.inject.internal.asm.Opcodes: int F2D> = 141;

        <com.mycila.inject.internal.asm.Opcodes: int F2L> = 140;

        <com.mycila.inject.internal.asm.Opcodes: int F2I> = 139;

        <com.mycila.inject.internal.asm.Opcodes: int L2D> = 138;

        <com.mycila.inject.internal.asm.Opcodes: int L2F> = 137;

        <com.mycila.inject.internal.asm.Opcodes: int L2I> = 136;

        <com.mycila.inject.internal.asm.Opcodes: int I2D> = 135;

        <com.mycila.inject.internal.asm.Opcodes: int I2F> = 134;

        <com.mycila.inject.internal.asm.Opcodes: int I2L> = 133;

        <com.mycila.inject.internal.asm.Opcodes: int IINC> = 132;

        <com.mycila.inject.internal.asm.Opcodes: int LXOR> = 131;

        <com.mycila.inject.internal.asm.Opcodes: int IXOR> = 130;

        <com.mycila.inject.internal.asm.Opcodes: int LOR> = 129;

        <com.mycila.inject.internal.asm.Opcodes: int IOR> = 128;

        <com.mycila.inject.internal.asm.Opcodes: int LAND> = 127;

        <com.mycila.inject.internal.asm.Opcodes: int IAND> = 126;

        <com.mycila.inject.internal.asm.Opcodes: int LUSHR> = 125;

        <com.mycila.inject.internal.asm.Opcodes: int IUSHR> = 124;

        <com.mycila.inject.internal.asm.Opcodes: int LSHR> = 123;

        <com.mycila.inject.internal.asm.Opcodes: int ISHR> = 122;

        <com.mycila.inject.internal.asm.Opcodes: int LSHL> = 121;

        <com.mycila.inject.internal.asm.Opcodes: int ISHL> = 120;

        <com.mycila.inject.internal.asm.Opcodes: int DNEG> = 119;

        <com.mycila.inject.internal.asm.Opcodes: int FNEG> = 118;

        <com.mycila.inject.internal.asm.Opcodes: int LNEG> = 117;

        <com.mycila.inject.internal.asm.Opcodes: int INEG> = 116;

        <com.mycila.inject.internal.asm.Opcodes: int DREM> = 115;

        <com.mycila.inject.internal.asm.Opcodes: int FREM> = 114;

        <com.mycila.inject.internal.asm.Opcodes: int LREM> = 113;

        <com.mycila.inject.internal.asm.Opcodes: int IREM> = 112;

        <com.mycila.inject.internal.asm.Opcodes: int DDIV> = 111;

        <com.mycila.inject.internal.asm.Opcodes: int FDIV> = 110;

        <com.mycila.inject.internal.asm.Opcodes: int LDIV> = 109;

        <com.mycila.inject.internal.asm.Opcodes: int IDIV> = 108;

        <com.mycila.inject.internal.asm.Opcodes: int DMUL> = 107;

        <com.mycila.inject.internal.asm.Opcodes: int FMUL> = 106;

        <com.mycila.inject.internal.asm.Opcodes: int LMUL> = 105;

        <com.mycila.inject.internal.asm.Opcodes: int IMUL> = 104;

        <com.mycila.inject.internal.asm.Opcodes: int DSUB> = 103;

        <com.mycila.inject.internal.asm.Opcodes: int FSUB> = 102;

        <com.mycila.inject.internal.asm.Opcodes: int LSUB> = 101;

        <com.mycila.inject.internal.asm.Opcodes: int ISUB> = 100;

        <com.mycila.inject.internal.asm.Opcodes: int DADD> = 99;

        <com.mycila.inject.internal.asm.Opcodes: int FADD> = 98;

        <com.mycila.inject.internal.asm.Opcodes: int LADD> = 97;

        <com.mycila.inject.internal.asm.Opcodes: int IADD> = 96;

        <com.mycila.inject.internal.asm.Opcodes: int SWAP> = 95;

        <com.mycila.inject.internal.asm.Opcodes: int DUP2_X2> = 94;

        <com.mycila.inject.internal.asm.Opcodes: int DUP2_X1> = 93;

        <com.mycila.inject.internal.asm.Opcodes: int DUP2> = 92;

        <com.mycila.inject.internal.asm.Opcodes: int DUP_X2> = 91;

        <com.mycila.inject.internal.asm.Opcodes: int DUP_X1> = 90;

        <com.mycila.inject.internal.asm.Opcodes: int DUP> = 89;

        <com.mycila.inject.internal.asm.Opcodes: int POP2> = 88;

        <com.mycila.inject.internal.asm.Opcodes: int POP> = 87;

        <com.mycila.inject.internal.asm.Opcodes: int SASTORE> = 86;

        <com.mycila.inject.internal.asm.Opcodes: int CASTORE> = 85;

        <com.mycila.inject.internal.asm.Opcodes: int BASTORE> = 84;

        <com.mycila.inject.internal.asm.Opcodes: int AASTORE> = 83;

        <com.mycila.inject.internal.asm.Opcodes: int DASTORE> = 82;

        <com.mycila.inject.internal.asm.Opcodes: int FASTORE> = 81;

        <com.mycila.inject.internal.asm.Opcodes: int LASTORE> = 80;

        <com.mycila.inject.internal.asm.Opcodes: int IASTORE> = 79;

        <com.mycila.inject.internal.asm.Opcodes: int ASTORE> = 58;

        <com.mycila.inject.internal.asm.Opcodes: int DSTORE> = 57;

        <com.mycila.inject.internal.asm.Opcodes: int FSTORE> = 56;

        <com.mycila.inject.internal.asm.Opcodes: int LSTORE> = 55;

        <com.mycila.inject.internal.asm.Opcodes: int ISTORE> = 54;

        <com.mycila.inject.internal.asm.Opcodes: int SALOAD> = 53;

        <com.mycila.inject.internal.asm.Opcodes: int CALOAD> = 52;

        <com.mycila.inject.internal.asm.Opcodes: int BALOAD> = 51;

        <com.mycila.inject.internal.asm.Opcodes: int AALOAD> = 50;

        <com.mycila.inject.internal.asm.Opcodes: int DALOAD> = 49;

        <com.mycila.inject.internal.asm.Opcodes: int FALOAD> = 48;

        <com.mycila.inject.internal.asm.Opcodes: int LALOAD> = 47;

        <com.mycila.inject.internal.asm.Opcodes: int IALOAD> = 46;

        <com.mycila.inject.internal.asm.Opcodes: int ALOAD> = 25;

        <com.mycila.inject.internal.asm.Opcodes: int DLOAD> = 24;

        <com.mycila.inject.internal.asm.Opcodes: int FLOAD> = 23;

        <com.mycila.inject.internal.asm.Opcodes: int LLOAD> = 22;

        <com.mycila.inject.internal.asm.Opcodes: int ILOAD> = 21;

        <com.mycila.inject.internal.asm.Opcodes: int LDC> = 18;

        <com.mycila.inject.internal.asm.Opcodes: int SIPUSH> = 17;

        <com.mycila.inject.internal.asm.Opcodes: int BIPUSH> = 16;

        <com.mycila.inject.internal.asm.Opcodes: int DCONST_1> = 15;

        <com.mycila.inject.internal.asm.Opcodes: int DCONST_0> = 14;

        <com.mycila.inject.internal.asm.Opcodes: int FCONST_2> = 13;

        <com.mycila.inject.internal.asm.Opcodes: int FCONST_1> = 12;

        <com.mycila.inject.internal.asm.Opcodes: int FCONST_0> = 11;

        <com.mycila.inject.internal.asm.Opcodes: int LCONST_1> = 10;

        <com.mycila.inject.internal.asm.Opcodes: int LCONST_0> = 9;

        <com.mycila.inject.internal.asm.Opcodes: int ICONST_5> = 8;

        <com.mycila.inject.internal.asm.Opcodes: int ICONST_4> = 7;

        <com.mycila.inject.internal.asm.Opcodes: int ICONST_3> = 6;

        <com.mycila.inject.internal.asm.Opcodes: int ICONST_2> = 5;

        <com.mycila.inject.internal.asm.Opcodes: int ICONST_1> = 4;

        <com.mycila.inject.internal.asm.Opcodes: int ICONST_0> = 3;

        <com.mycila.inject.internal.asm.Opcodes: int ICONST_M1> = 2;

        <com.mycila.inject.internal.asm.Opcodes: int ACONST_NULL> = 1;

        <com.mycila.inject.internal.asm.Opcodes: int NOP> = 0;

        <com.mycila.inject.internal.asm.Opcodes: java.lang.String INVOKEDYNAMIC_OWNER> = "java/lang/dyn/Dynamic";

        <com.mycila.inject.internal.asm.Opcodes: int F_SAME1> = 4;

        <com.mycila.inject.internal.asm.Opcodes: int F_SAME> = 3;

        <com.mycila.inject.internal.asm.Opcodes: int F_CHOP> = 2;

        <com.mycila.inject.internal.asm.Opcodes: int F_APPEND> = 1;

        <com.mycila.inject.internal.asm.Opcodes: int F_FULL> = 0;

        <com.mycila.inject.internal.asm.Opcodes: int F_NEW> = -1;

        <com.mycila.inject.internal.asm.Opcodes: int T_LONG> = 11;

        <com.mycila.inject.internal.asm.Opcodes: int T_INT> = 10;

        <com.mycila.inject.internal.asm.Opcodes: int T_SHORT> = 9;

        <com.mycila.inject.internal.asm.Opcodes: int T_BYTE> = 8;

        <com.mycila.inject.internal.asm.Opcodes: int T_DOUBLE> = 7;

        <com.mycila.inject.internal.asm.Opcodes: int T_FLOAT> = 6;

        <com.mycila.inject.internal.asm.Opcodes: int T_CHAR> = 5;

        <com.mycila.inject.internal.asm.Opcodes: int T_BOOLEAN> = 4;

        <com.mycila.inject.internal.asm.Opcodes: int ACC_DEPRECATED> = 131072;

        <com.mycila.inject.internal.asm.Opcodes: int ACC_ENUM> = 16384;

        <com.mycila.inject.internal.asm.Opcodes: int ACC_ANNOTATION> = 8192;

        <com.mycila.inject.internal.asm.Opcodes: int ACC_SYNTHETIC> = 4096;

        <com.mycila.inject.internal.asm.Opcodes: int ACC_STRICT> = 2048;

        <com.mycila.inject.internal.asm.Opcodes: int ACC_ABSTRACT> = 1024;

        <com.mycila.inject.internal.asm.Opcodes: int ACC_INTERFACE> = 512;

        <com.mycila.inject.internal.asm.Opcodes: int ACC_NATIVE> = 256;

        <com.mycila.inject.internal.asm.Opcodes: int ACC_TRANSIENT> = 128;

        <com.mycila.inject.internal.asm.Opcodes: int ACC_VARARGS> = 128;

        <com.mycila.inject.internal.asm.Opcodes: int ACC_BRIDGE> = 64;

        <com.mycila.inject.internal.asm.Opcodes: int ACC_VOLATILE> = 64;

        <com.mycila.inject.internal.asm.Opcodes: int ACC_SYNCHRONIZED> = 32;

        <com.mycila.inject.internal.asm.Opcodes: int ACC_SUPER> = 32;

        <com.mycila.inject.internal.asm.Opcodes: int ACC_FINAL> = 16;

        <com.mycila.inject.internal.asm.Opcodes: int ACC_STATIC> = 8;

        <com.mycila.inject.internal.asm.Opcodes: int ACC_PROTECTED> = 4;

        <com.mycila.inject.internal.asm.Opcodes: int ACC_PRIVATE> = 2;

        <com.mycila.inject.internal.asm.Opcodes: int ACC_PUBLIC> = 1;

        <com.mycila.inject.internal.asm.Opcodes: int V1_7> = 51;

        <com.mycila.inject.internal.asm.Opcodes: int V1_6> = 50;

        <com.mycila.inject.internal.asm.Opcodes: int V1_5> = 49;

        <com.mycila.inject.internal.asm.Opcodes: int V1_4> = 48;

        <com.mycila.inject.internal.asm.Opcodes: int V1_3> = 47;

        <com.mycila.inject.internal.asm.Opcodes: int V1_2> = 46;

        <com.mycila.inject.internal.asm.Opcodes: int V1_1> = 196653;

        $r0 = new java.lang.Integer;

        specialinvoke $r0.<java.lang.Integer: void <init>(int)>(0);

        <com.mycila.inject.internal.asm.Opcodes: java.lang.Integer TOP> = $r0;

        $r1 = new java.lang.Integer;

        specialinvoke $r1.<java.lang.Integer: void <init>(int)>(1);

        <com.mycila.inject.internal.asm.Opcodes: java.lang.Integer INTEGER> = $r1;

        $r2 = new java.lang.Integer;

        specialinvoke $r2.<java.lang.Integer: void <init>(int)>(2);

        <com.mycila.inject.internal.asm.Opcodes: java.lang.Integer FLOAT> = $r2;

        $r3 = new java.lang.Integer;

        specialinvoke $r3.<java.lang.Integer: void <init>(int)>(3);

        <com.mycila.inject.internal.asm.Opcodes: java.lang.Integer DOUBLE> = $r3;

        $r4 = new java.lang.Integer;

        specialinvoke $r4.<java.lang.Integer: void <init>(int)>(4);

        <com.mycila.inject.internal.asm.Opcodes: java.lang.Integer LONG> = $r4;

        $r5 = new java.lang.Integer;

        specialinvoke $r5.<java.lang.Integer: void <init>(int)>(5);

        <com.mycila.inject.internal.asm.Opcodes: java.lang.Integer NULL> = $r5;

        $r6 = new java.lang.Integer;

        specialinvoke $r6.<java.lang.Integer: void <init>(int)>(6);

        <com.mycila.inject.internal.asm.Opcodes: java.lang.Integer UNINITIALIZED_THIS> = $r6;

        return;
    }
}
