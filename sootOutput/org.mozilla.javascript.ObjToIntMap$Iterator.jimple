public class org.mozilla.javascript.ObjToIntMap$Iterator extends java.lang.Object
{
    org.mozilla.javascript.ObjToIntMap master;
    private int cursor;
    private int remaining;
    private java.lang.Object[] keys;
    private int[] values;

    void <init>(org.mozilla.javascript.ObjToIntMap)
    {
        org.mozilla.javascript.ObjToIntMap$Iterator r0;
        org.mozilla.javascript.ObjToIntMap r1;

        r0 := @this: org.mozilla.javascript.ObjToIntMap$Iterator;

        r1 := @parameter0: org.mozilla.javascript.ObjToIntMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.mozilla.javascript.ObjToIntMap$Iterator: org.mozilla.javascript.ObjToIntMap master> = r1;

        return;
    }

    final void init(java.lang.Object[], int[], int)
    {
        org.mozilla.javascript.ObjToIntMap$Iterator r0;
        java.lang.Object[] r1;
        int[] r2;
        int i0, $i2;

        r0 := @this: org.mozilla.javascript.ObjToIntMap$Iterator;

        r1 := @parameter0: java.lang.Object[];

        r2 := @parameter1: int[];

        i0 := @parameter2: int;

        r0.<org.mozilla.javascript.ObjToIntMap$Iterator: java.lang.Object[] keys> = r1;

        r0.<org.mozilla.javascript.ObjToIntMap$Iterator: int[] values> = r2;

        $i2 = (int) -1;

        r0.<org.mozilla.javascript.ObjToIntMap$Iterator: int cursor> = $i2;

        r0.<org.mozilla.javascript.ObjToIntMap$Iterator: int remaining> = i0;

        return;
    }

    public void start()
    {
        org.mozilla.javascript.ObjToIntMap$Iterator r0;
        org.mozilla.javascript.ObjToIntMap $r1;

        r0 := @this: org.mozilla.javascript.ObjToIntMap$Iterator;

        $r1 = r0.<org.mozilla.javascript.ObjToIntMap$Iterator: org.mozilla.javascript.ObjToIntMap master>;

        virtualinvoke $r1.<org.mozilla.javascript.ObjToIntMap: void initIterator(org.mozilla.javascript.ObjToIntMap$Iterator)>(r0);

        virtualinvoke r0.<org.mozilla.javascript.ObjToIntMap$Iterator: void next()>();

        return;
    }

    public boolean done()
    {
        org.mozilla.javascript.ObjToIntMap$Iterator r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.ObjToIntMap$Iterator;

        $i0 = r0.<org.mozilla.javascript.ObjToIntMap$Iterator: int remaining>;

        if $i0 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void next()
    {
        java.lang.Object[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i12, $i14;
        org.mozilla.javascript.ObjToIntMap$Iterator r0;
        java.lang.Object $r2, $r3;

        r0 := @this: org.mozilla.javascript.ObjToIntMap$Iterator;

        $i0 = r0.<org.mozilla.javascript.ObjToIntMap$Iterator: int remaining>;

        $i10 = (int) -1;

        if $i0 != $i10 goto label1;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label1:
        $i1 = r0.<org.mozilla.javascript.ObjToIntMap$Iterator: int remaining>;

        if $i1 != 0 goto label2;

        $i12 = (int) -1;

        r0.<org.mozilla.javascript.ObjToIntMap$Iterator: int remaining> = $i12;

        $i14 = (int) -1;

        r0.<org.mozilla.javascript.ObjToIntMap$Iterator: int cursor> = $i14;

        goto label5;

     label2:
        $i2 = r0.<org.mozilla.javascript.ObjToIntMap$Iterator: int cursor>;

        $i3 = $i2 + 1;

        r0.<org.mozilla.javascript.ObjToIntMap$Iterator: int cursor> = $i3;

     label3:
        $r1 = r0.<org.mozilla.javascript.ObjToIntMap$Iterator: java.lang.Object[] keys>;

        $i4 = r0.<org.mozilla.javascript.ObjToIntMap$Iterator: int cursor>;

        $r2 = $r1[$i4];

        if $r2 == null goto label4;

        $r3 = staticinvoke <org.mozilla.javascript.ObjToIntMap: java.lang.Object access$000()>();

        if $r2 == $r3 goto label4;

        $i7 = r0.<org.mozilla.javascript.ObjToIntMap$Iterator: int remaining>;

        $i8 = $i7 - 1;

        r0.<org.mozilla.javascript.ObjToIntMap$Iterator: int remaining> = $i8;

        goto label5;

     label4:
        $i5 = r0.<org.mozilla.javascript.ObjToIntMap$Iterator: int cursor>;

        $i6 = $i5 + 1;

        r0.<org.mozilla.javascript.ObjToIntMap$Iterator: int cursor> = $i6;

        goto label3;

     label5:
        return;
    }

    public java.lang.Object getKey()
    {
        org.mozilla.javascript.ObjToIntMap$Iterator r0;
        java.lang.Object[] $r1;
        org.mozilla.javascript.UniqueTag $r2;
        int $i0;
        java.lang.Object r3;

        r0 := @this: org.mozilla.javascript.ObjToIntMap$Iterator;

        $r1 = r0.<org.mozilla.javascript.ObjToIntMap$Iterator: java.lang.Object[] keys>;

        $i0 = r0.<org.mozilla.javascript.ObjToIntMap$Iterator: int cursor>;

        r3 = $r1[$i0];

        $r2 = <org.mozilla.javascript.UniqueTag: org.mozilla.javascript.UniqueTag NULL_VALUE>;

        if r3 != $r2 goto label1;

        r3 = null;

     label1:
        return r3;
    }

    public int getValue()
    {
        org.mozilla.javascript.ObjToIntMap$Iterator r0;
        int[] $r1;
        int $i0, $i1;

        r0 := @this: org.mozilla.javascript.ObjToIntMap$Iterator;

        $r1 = r0.<org.mozilla.javascript.ObjToIntMap$Iterator: int[] values>;

        $i0 = r0.<org.mozilla.javascript.ObjToIntMap$Iterator: int cursor>;

        $i1 = $r1[$i0];

        return $i1;
    }

    public void setValue(int)
    {
        org.mozilla.javascript.ObjToIntMap$Iterator r0;
        int[] $r1;
        int i0, $i1;

        r0 := @this: org.mozilla.javascript.ObjToIntMap$Iterator;

        i0 := @parameter0: int;

        $r1 = r0.<org.mozilla.javascript.ObjToIntMap$Iterator: int[] values>;

        $i1 = r0.<org.mozilla.javascript.ObjToIntMap$Iterator: int cursor>;

        $r1[$i1] = i0;

        return;
    }
}
