class com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2 extends com.google.inject.util.Modules$ModuleWriter
{
    final java.util.Set val$overriddenKeys;
    final java.util.Map val$scopeInstancesInUse;
    final java.util.List val$scopeBindings;
    final com.google.inject.util.Modules$RealOverriddenModuleBuilder$1 this$1;

    void <init>(com.google.inject.util.Modules$RealOverriddenModuleBuilder$1, com.google.inject.Binder, java.util.Set, java.util.Map, java.util.List)
    {
        com.google.inject.util.Modules$RealOverriddenModuleBuilder$1 r1;
        java.util.List r4;
        com.google.inject.Binder r5;
        java.util.Map r3;
        java.util.Set r2;
        com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2 r0;

        r0 := @this: com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2;

        r1 := @parameter0: com.google.inject.util.Modules$RealOverriddenModuleBuilder$1;

        r5 := @parameter1: com.google.inject.Binder;

        r2 := @parameter2: java.util.Set;

        r3 := @parameter3: java.util.Map;

        r4 := @parameter4: java.util.List;

        r0.<com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2: com.google.inject.util.Modules$RealOverriddenModuleBuilder$1 this$1> = r1;

        r0.<com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2: java.util.Set val$overriddenKeys> = r2;

        r0.<com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2: java.util.Map val$scopeInstancesInUse> = r3;

        r0.<com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2: java.util.List val$scopeBindings> = r4;

        specialinvoke r0.<com.google.inject.util.Modules$ModuleWriter: void <init>(com.google.inject.Binder)>(r5);

        return;
    }

    public java.lang.Void visit(com.google.inject.Binding)
    {
        com.google.inject.util.Modules$RealOverriddenModuleBuilder$1 $r4;
        com.google.inject.Key $r3;
        java.util.Set $r2;
        com.google.inject.Scope $r5;
        com.google.inject.Binding r1;
        java.util.Map $r6;
        com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2 r0;
        java.lang.Object $r7;
        boolean $z0;

        r0 := @this: com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2;

        r1 := @parameter0: com.google.inject.Binding;

        $r2 = r0.<com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2: java.util.Set val$overriddenKeys>;

        $r3 = interfaceinvoke r1.<com.google.inject.Binding: com.google.inject.Key getKey()>();

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.google.inject.util.Modules$ModuleWriter: java.lang.Object visit(com.google.inject.Binding)>(r1);

        $r4 = r0.<com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2: com.google.inject.util.Modules$RealOverriddenModuleBuilder$1 this$1>;

        $r5 = staticinvoke <com.google.inject.util.Modules$RealOverriddenModuleBuilder$1: com.google.inject.Scope access$200(com.google.inject.util.Modules$RealOverriddenModuleBuilder$1,com.google.inject.Binding)>($r4, r1);

        if $r5 == null goto label1;

        $r6 = r0.<com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2: java.util.Map val$scopeInstancesInUse>;

        $r7 = interfaceinvoke r1.<com.google.inject.Binding: java.lang.Object getSource()>();

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

     label1:
        return null;
    }

    void rewrite(com.google.inject.Binder, com.google.inject.spi.PrivateElements, java.util.Set)
    {
        com.google.inject.Key $r14, r19;
        java.util.HashSet $r5;
        com.google.inject.Binder r0, $r3;
        com.google.inject.spi.PrivateElements r1, $r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.google.inject.PrivateBinder $r4, $r18;
        java.util.Iterator $r7, $r9;
        java.util.Set $r6, r16;
        com.google.inject.Binding $r13;
        java.util.List $r8;
        com.google.inject.spi.Element r20;
        java.lang.Object $r2, $r10, $r15, $r17;
        com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2 r11;

        r11 := @this: com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2;

        r0 := @parameter0: com.google.inject.Binder;

        r1 := @parameter1: com.google.inject.spi.PrivateElements;

        r16 := @parameter2: java.util.Set;

        $r2 = interfaceinvoke r1.<com.google.inject.spi.PrivateElements: java.lang.Object getSource()>();

        $r3 = interfaceinvoke r0.<com.google.inject.Binder: com.google.inject.Binder withSource(java.lang.Object)>($r2);

        $r4 = interfaceinvoke $r3.<com.google.inject.Binder: com.google.inject.PrivateBinder newPrivateBinder()>();

        $r5 = staticinvoke <com.google.inject.internal.util.$Sets: java.util.HashSet newHashSet()>();

        $r6 = interfaceinvoke r1.<com.google.inject.spi.PrivateElements: java.util.Set getExposedKeys()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r15 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r19 = (com.google.inject.Key) $r15;

        $z4 = interfaceinvoke r16.<java.util.Set: boolean remove(java.lang.Object)>(r19);

        if $z4 == 0 goto label2;

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>(r19);

        goto label3;

     label2:
        $r17 = interfaceinvoke r1.<com.google.inject.spi.PrivateElements: java.lang.Object getExposedSource(com.google.inject.Key)>(r19);

        $r18 = interfaceinvoke $r4.<com.google.inject.PrivateBinder: com.google.inject.PrivateBinder withSource(java.lang.Object)>($r17);

        interfaceinvoke $r18.<com.google.inject.PrivateBinder: void expose(com.google.inject.Key)>(r19);

     label3:
        goto label1;

     label4:
        $r8 = interfaceinvoke r1.<com.google.inject.spi.PrivateElements: java.util.List getElements()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z5 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label8;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r20 = (com.google.inject.spi.Element) $r10;

        $z1 = r20 instanceof com.google.inject.Binding;

        if $z1 == 0 goto label6;

        $r13 = (com.google.inject.Binding) r20;

        $r14 = interfaceinvoke $r13.<com.google.inject.Binding: com.google.inject.Key getKey()>();

        $z3 = interfaceinvoke $r5.<java.util.Set: boolean remove(java.lang.Object)>($r14);

        if $z3 == 0 goto label6;

        goto label5;

     label6:
        $z2 = r20 instanceof com.google.inject.spi.PrivateElements;

        if $z2 == 0 goto label7;

        $r12 = (com.google.inject.spi.PrivateElements) r20;

        virtualinvoke r11.<com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2: void rewrite(com.google.inject.Binder,com.google.inject.spi.PrivateElements,java.util.Set)>($r4, $r12, $r5);

        goto label5;

     label7:
        interfaceinvoke r20.<com.google.inject.spi.Element: void applyTo(com.google.inject.Binder)>($r4);

        goto label5;

     label8:
        return;
    }

    public java.lang.Void visit(com.google.inject.spi.PrivateElements)
    {
        com.google.inject.Binder $r3;
        java.util.Set $r2;
        com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2 r0;
        com.google.inject.spi.PrivateElements r1;

        r0 := @this: com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2;

        r1 := @parameter0: com.google.inject.spi.PrivateElements;

        $r3 = r0.<com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2: com.google.inject.Binder binder>;

        $r2 = r0.<com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2: java.util.Set val$overriddenKeys>;

        virtualinvoke r0.<com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2: void rewrite(com.google.inject.Binder,com.google.inject.spi.PrivateElements,java.util.Set)>($r3, r1, $r2);

        return null;
    }

    public java.lang.Void visit(com.google.inject.spi.ScopeBinding)
    {
        com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2 r0;
        java.util.List $r2;
        com.google.inject.spi.ScopeBinding r1;

        r0 := @this: com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2;

        r1 := @parameter0: com.google.inject.spi.ScopeBinding;

        $r2 = r0.<com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2: java.util.List val$scopeBindings>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return null;
    }

    public volatile java.lang.Object visit(com.google.inject.spi.PrivateElements)
    {
        java.lang.Void $r2;
        com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2 r0;
        com.google.inject.spi.PrivateElements r1;

        r0 := @this: com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2;

        r1 := @parameter0: com.google.inject.spi.PrivateElements;

        $r2 = virtualinvoke r0.<com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2: java.lang.Void visit(com.google.inject.spi.PrivateElements)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visit(com.google.inject.spi.ScopeBinding)
    {
        java.lang.Void $r2;
        com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2 r0;
        com.google.inject.spi.ScopeBinding r1;

        r0 := @this: com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2;

        r1 := @parameter0: com.google.inject.spi.ScopeBinding;

        $r2 = virtualinvoke r0.<com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2: java.lang.Void visit(com.google.inject.spi.ScopeBinding)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visit(com.google.inject.Binding)
    {
        java.lang.Void $r2;
        com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2 r0;
        com.google.inject.Binding r1;

        r0 := @this: com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2;

        r1 := @parameter0: com.google.inject.Binding;

        $r2 = virtualinvoke r0.<com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2: java.lang.Void visit(com.google.inject.Binding)>(r1);

        return $r2;
    }
}
