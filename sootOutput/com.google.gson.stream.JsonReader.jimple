public final class com.google.gson.stream.JsonReader extends java.lang.Object implements java.io.Closeable
{
    private static final char[] NON_EXECUTE_PREFIX;
    private final java.io.Reader in;
    private boolean lenient;
    private final char[] buffer;
    private int pos;
    private int limit;
    private final java.util.List stack;
    private boolean hasToken;
    private com.google.gson.stream.JsonToken token;
    private java.lang.String name;
    private java.lang.String value;
    private boolean skipping;

    public void <init>(java.io.Reader)
    {
        com.google.gson.stream.JsonScope $r3;
        char[] $r1;
        java.io.Reader r4;
        com.google.gson.stream.JsonReader r0;
        java.lang.NullPointerException $r5;
        java.util.ArrayList $r2;

        r0 := @this: com.google.gson.stream.JsonReader;

        r4 := @parameter0: java.io.Reader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.gson.stream.JsonReader: boolean lenient> = 0;

        $r1 = newarray (char)[1024];

        r0.<com.google.gson.stream.JsonReader: char[] buffer> = $r1;

        r0.<com.google.gson.stream.JsonReader: int pos> = 0;

        r0.<com.google.gson.stream.JsonReader: int limit> = 0;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.google.gson.stream.JsonReader: java.util.List stack> = $r2;

        $r3 = <com.google.gson.stream.JsonScope: com.google.gson.stream.JsonScope EMPTY_DOCUMENT>;

        specialinvoke r0.<com.google.gson.stream.JsonReader: void push(com.google.gson.stream.JsonScope)>($r3);

        r0.<com.google.gson.stream.JsonReader: boolean skipping> = 0;

        if r4 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("in == null");

        throw $r5;

     label1:
        r0.<com.google.gson.stream.JsonReader: java.io.Reader in> = r4;

        return;
    }

    public void setLenient(boolean)
    {
        com.google.gson.stream.JsonReader r0;
        boolean z0;

        r0 := @this: com.google.gson.stream.JsonReader;

        z0 := @parameter0: boolean;

        r0.<com.google.gson.stream.JsonReader: boolean lenient> = z0;

        return;
    }

    public boolean isLenient()
    {
        com.google.gson.stream.JsonReader r0;
        boolean $z0;

        r0 := @this: com.google.gson.stream.JsonReader;

        $z0 = r0.<com.google.gson.stream.JsonReader: boolean lenient>;

        return $z0;
    }

    public void beginArray() throws java.io.IOException
    {
        com.google.gson.stream.JsonToken $r1;
        com.google.gson.stream.JsonReader r0;

        r0 := @this: com.google.gson.stream.JsonReader;

        $r1 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BEGIN_ARRAY>;

        specialinvoke r0.<com.google.gson.stream.JsonReader: void expect(com.google.gson.stream.JsonToken)>($r1);

        return;
    }

    public void endArray() throws java.io.IOException
    {
        com.google.gson.stream.JsonToken $r1;
        com.google.gson.stream.JsonReader r0;

        r0 := @this: com.google.gson.stream.JsonReader;

        $r1 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_ARRAY>;

        specialinvoke r0.<com.google.gson.stream.JsonReader: void expect(com.google.gson.stream.JsonToken)>($r1);

        return;
    }

    public void beginObject() throws java.io.IOException
    {
        com.google.gson.stream.JsonToken $r1;
        com.google.gson.stream.JsonReader r0;

        r0 := @this: com.google.gson.stream.JsonReader;

        $r1 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BEGIN_OBJECT>;

        specialinvoke r0.<com.google.gson.stream.JsonReader: void expect(com.google.gson.stream.JsonToken)>($r1);

        return;
    }

    public void endObject() throws java.io.IOException
    {
        com.google.gson.stream.JsonToken $r1;
        com.google.gson.stream.JsonReader r0;

        r0 := @this: com.google.gson.stream.JsonReader;

        $r1 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_OBJECT>;

        specialinvoke r0.<com.google.gson.stream.JsonReader: void expect(com.google.gson.stream.JsonToken)>($r1);

        return;
    }

    private void expect(com.google.gson.stream.JsonToken) throws java.io.IOException
    {
        java.lang.IllegalStateException $r3;
        com.google.gson.stream.JsonReader r0;
        com.google.gson.stream.JsonToken r1, $r2, $r8;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r9;
        java.lang.String $r10;

        r0 := @this: com.google.gson.stream.JsonReader;

        r1 := @parameter0: com.google.gson.stream.JsonToken;

        specialinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken quickPeek()>();

        $r2 = r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken token>;

        if $r2 == r1 goto label1;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but was ");

        $r8 = virtualinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        throw $r3;

     label1:
        specialinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken advance()>();

        return;
    }

    public boolean hasNext() throws java.io.IOException
    {
        com.google.gson.stream.JsonToken $r1, $r2, $r3, $r4;
        com.google.gson.stream.JsonReader r0;
        boolean $z0;

        r0 := @this: com.google.gson.stream.JsonReader;

        specialinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken quickPeek()>();

        $r2 = r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken token>;

        $r1 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_OBJECT>;

        if $r2 == $r1 goto label1;

        $r4 = r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken token>;

        $r3 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_ARRAY>;

        if $r4 == $r3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public com.google.gson.stream.JsonToken peek() throws java.io.IOException
    {
        com.google.gson.stream.JsonToken $r1, $r2;
        com.google.gson.stream.JsonReader r0;

        r0 := @this: com.google.gson.stream.JsonReader;

        specialinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken quickPeek()>();

        $r1 = r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken token>;

        if $r1 != null goto label1;

        specialinvoke r0.<com.google.gson.stream.JsonReader: void decodeLiteral()>();

     label1:
        $r2 = r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken token>;

        return $r2;
    }

    private com.google.gson.stream.JsonToken quickPeek() throws java.io.IOException
    {
        java.lang.IllegalStateException $r3;
        java.lang.AssertionError $r15;
        com.google.gson.stream.JsonReader r0;
        int[] $r1;
        int $i0, $i1;
        boolean $z0, $z1, $z2, $z3;
        com.google.gson.stream.JsonScope $r2, $r11;
        java.io.IOException $r5;
        java.io.EOFException $r17;
        com.google.gson.stream.JsonToken $r4, $r6, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r16, $r18;

        r0 := @this: com.google.gson.stream.JsonReader;

        $z0 = r0.<com.google.gson.stream.JsonReader: boolean hasToken>;

        if $z0 == 0 goto label01;

        $r16 = r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken token>;

        return $r16;

     label01:
        $r1 = <com.google.gson.stream.JsonReader$1: int[] $SwitchMap$com$google$gson$stream$JsonScope>;

        $r2 = specialinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonScope peekStack()>();

        $i0 = virtualinvoke $r2.<com.google.gson.stream.JsonScope: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label02;
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label07;
            case 5: goto label08;
            case 6: goto label09;
            case 7: goto label10;
            case 8: goto label14;
            default: goto label15;
        };

     label02:
        $z2 = r0.<com.google.gson.stream.JsonReader: boolean lenient>;

        if $z2 == 0 goto label03;

        specialinvoke r0.<com.google.gson.stream.JsonReader: void consumeNonExecutePrefix()>();

     label03:
        $r11 = <com.google.gson.stream.JsonScope: com.google.gson.stream.JsonScope NONEMPTY_DOCUMENT>;

        specialinvoke r0.<com.google.gson.stream.JsonReader: void replaceTop(com.google.gson.stream.JsonScope)>($r11);

        $r12 = specialinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>();

        $z3 = r0.<com.google.gson.stream.JsonReader: boolean lenient>;

        if $z3 != 0 goto label04;

        $r13 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BEGIN_ARRAY>;

        if $r12 == $r13 goto label04;

        $r14 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BEGIN_OBJECT>;

        if $r12 == $r14 goto label04;

        specialinvoke r0.<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>("Expected JSON document to start with \'[\' or \'{\'");

     label04:
        return $r12;

     label05:
        $r10 = specialinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInArray(boolean)>(1);

        return $r10;

     label06:
        $r9 = specialinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInArray(boolean)>(0);

        return $r9;

     label07:
        $r8 = specialinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInObject(boolean)>(1);

        return $r8;

     label08:
        $r7 = specialinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken objectValue()>();

        return $r7;

     label09:
        $r6 = specialinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInObject(boolean)>(0);

        return $r6;

     label10:
        $r4 = specialinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>();

        $z1 = r0.<com.google.gson.stream.JsonReader: boolean lenient>;

        if $z1 == 0 goto label12;

     label11:
        return $r4;

     label12:
        $r5 = specialinvoke r0.<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>("Expected EOF");

        throw $r5;

     label13:
        $r17 := @caughtexception;

        r0.<com.google.gson.stream.JsonReader: boolean hasToken> = 1;

        $r18 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_DOCUMENT>;

        r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken token> = $r18;

        return $r18;

     label14:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("JsonReader is closed");

        throw $r3;

     label15:
        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>()>();

        throw $r15;

        catch java.io.EOFException from label10 to label11 with label13;
        catch java.io.EOFException from label12 to label13 with label13;
    }

    private void consumeNonExecutePrefix() throws java.io.IOException
    {
        com.google.gson.stream.JsonReader r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i13, i14, $i15, $i16, $i17;
        boolean $z0;
        char $c11, $c12;
        char[] $r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: com.google.gson.stream.JsonReader;

        specialinvoke r0.<com.google.gson.stream.JsonReader: int nextNonWhitespace()>();

        $i0 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i1 = $i0 - 1;

        r0.<com.google.gson.stream.JsonReader: int pos> = $i1;

        $i3 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $r1 = <com.google.gson.stream.JsonReader: char[] NON_EXECUTE_PREFIX>;

        $i2 = lengthof $r1;

        $i5 = $i3 + $i2;

        $i4 = r0.<com.google.gson.stream.JsonReader: int limit>;

        if $i5 <= $i4 goto label1;

        $r5 = <com.google.gson.stream.JsonReader: char[] NON_EXECUTE_PREFIX>;

        $i13 = lengthof $r5;

        $z0 = specialinvoke r0.<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>($i13);

        if $z0 != 0 goto label1;

        return;

     label1:
        i14 = 0;

     label2:
        $r6 = <com.google.gson.stream.JsonReader: char[] NON_EXECUTE_PREFIX>;

        $i15 = lengthof $r6;

        if i14 >= $i15 goto label4;

        $r3 = r0.<com.google.gson.stream.JsonReader: char[] buffer>;

        $i9 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i10 = $i9 + i14;

        $c12 = $r3[$i10];

        $r4 = <com.google.gson.stream.JsonReader: char[] NON_EXECUTE_PREFIX>;

        $c11 = $r4[i14];

        $i16 = (int) $c12;

        $i17 = (int) $c11;

        if $i16 == $i17 goto label3;

        return;

     label3:
        i14 = i14 + 1;

        goto label2;

     label4:
        $i7 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $r2 = <com.google.gson.stream.JsonReader: char[] NON_EXECUTE_PREFIX>;

        $i6 = lengthof $r2;

        $i8 = $i7 + $i6;

        r0.<com.google.gson.stream.JsonReader: int pos> = $i8;

        return;
    }

    private com.google.gson.stream.JsonToken advance() throws java.io.IOException
    {
        com.google.gson.stream.JsonToken r1;
        com.google.gson.stream.JsonReader r0;

        r0 := @this: com.google.gson.stream.JsonReader;

        specialinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken quickPeek()>();

        r1 = r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken token>;

        r0.<com.google.gson.stream.JsonReader: boolean hasToken> = 0;

        r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken token> = null;

        r0.<com.google.gson.stream.JsonReader: java.lang.String value> = null;

        r0.<com.google.gson.stream.JsonReader: java.lang.String name> = null;

        return r1;
    }

    public java.lang.String nextName() throws java.io.IOException
    {
        java.lang.IllegalStateException $r4;
        com.google.gson.stream.JsonReader r0;
        com.google.gson.stream.JsonToken $r1, $r2, $r7;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String r3, $r9;

        r0 := @this: com.google.gson.stream.JsonReader;

        specialinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken quickPeek()>();

        $r2 = r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken token>;

        $r1 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NAME>;

        if $r2 == $r1 goto label1;

        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected a name but was ");

        $r7 = virtualinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label1:
        r3 = r0.<com.google.gson.stream.JsonReader: java.lang.String name>;

        specialinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken advance()>();

        return r3;
    }

    public java.lang.String nextString() throws java.io.IOException
    {
        java.lang.IllegalStateException $r2;
        com.google.gson.stream.JsonReader r0;
        com.google.gson.stream.JsonToken $r5, $r8, $r9, $r10, $r11;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r1, $r7, $r12;

        r0 := @this: com.google.gson.stream.JsonReader;

        virtualinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>();

        $r1 = r0.<com.google.gson.stream.JsonReader: java.lang.String value>;

        if $r1 == null goto label1;

        $r9 = r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken token>;

        $r8 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken STRING>;

        if $r9 == $r8 goto label2;

        $r11 = r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken token>;

        $r10 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NUMBER>;

        if $r11 == $r10 goto label2;

     label1:
        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected a string but was ");

        $r5 = virtualinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label2:
        $r12 = r0.<com.google.gson.stream.JsonReader: java.lang.String value>;

        specialinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken advance()>();

        return $r12;
    }

    public boolean nextBoolean() throws java.io.IOException
    {
        java.lang.IllegalStateException $r2, $r12;
        com.google.gson.stream.JsonReader r0;
        java.lang.String $r1, $r7, $r10, $r11, $r15, $r17;
        boolean $z0, $z1, z2;
        com.google.gson.stream.JsonToken $r5, $r8, $r9;
        java.lang.StringBuilder $r3, $r4, $r6, $r13, $r14, $r16;

        r0 := @this: com.google.gson.stream.JsonReader;

        specialinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken quickPeek()>();

        $r1 = r0.<com.google.gson.stream.JsonReader: java.lang.String value>;

        if $r1 == null goto label1;

        $r9 = r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken token>;

        $r8 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken STRING>;

        if $r9 != $r8 goto label2;

     label1:
        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected a boolean but was ");

        $r5 = virtualinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label2:
        $r10 = r0.<com.google.gson.stream.JsonReader: java.lang.String value>;

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        if $z0 == 0 goto label3;

        z2 = 1;

        goto label5;

     label3:
        $r11 = r0.<com.google.gson.stream.JsonReader: java.lang.String value>;

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("false");

        if $z1 == 0 goto label4;

        z2 = 0;

        goto label5;

     label4:
        $r12 = new java.lang.IllegalStateException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a boolean: ");

        $r15 = r0.<com.google.gson.stream.JsonReader: java.lang.String value>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r17);

        throw $r12;

     label5:
        specialinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken advance()>();

        return z2;
    }

    public void nextNull() throws java.io.IOException
    {
        java.lang.IllegalStateException $r2, $r11;
        com.google.gson.stream.JsonReader r0;
        java.lang.String $r1, $r7, $r10, $r14, $r16;
        boolean $z0;
        com.google.gson.stream.JsonToken $r5, $r8, $r9;
        java.lang.StringBuilder $r3, $r4, $r6, $r12, $r13, $r15;

        r0 := @this: com.google.gson.stream.JsonReader;

        specialinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken quickPeek()>();

        $r1 = r0.<com.google.gson.stream.JsonReader: java.lang.String value>;

        if $r1 == null goto label1;

        $r9 = r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken token>;

        $r8 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken STRING>;

        if $r9 != $r8 goto label2;

     label1:
        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected null but was ");

        $r5 = virtualinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label2:
        $r10 = r0.<com.google.gson.stream.JsonReader: java.lang.String value>;

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("null");

        if $z0 != 0 goto label3;

        $r11 = new java.lang.IllegalStateException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a null: ");

        $r14 = r0.<com.google.gson.stream.JsonReader: java.lang.String value>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r16);

        throw $r11;

     label3:
        specialinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken advance()>();

        return;
    }

    public double nextDouble() throws java.io.IOException
    {
        java.lang.IllegalStateException $r23;
        com.google.gson.stream.JsonReader r0;
        byte $b0;
        int $i1;
        java.lang.String $r1, $r2, $r6, $r8, $r9, $r13, $r15, $r21;
        double $d0;
        boolean $z0, $z1, $z2, $z3;
        java.lang.NumberFormatException $r25, $r27;
        com.google.gson.stream.JsonToken $r19;
        java.lang.StringBuilder $r5, $r7, $r12, $r14, $r18, $r20, $r22, $r24, $r26;

        r0 := @this: com.google.gson.stream.JsonReader;

        specialinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken quickPeek()>();

        $r1 = r0.<com.google.gson.stream.JsonReader: java.lang.String value>;

        if $r1 != null goto label1;

        $r23 = new java.lang.IllegalStateException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected a double but was ");

        $r19 = virtualinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r21);

        throw $r23;

     label1:
        $r2 = r0.<com.google.gson.stream.JsonReader: java.lang.String value>;

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r2);

        $b0 = $d0 cmpl 1.0;

        $i1 = (int) $b0;

        if $i1 < 0 goto label2;

        $r9 = r0.<com.google.gson.stream.JsonReader: java.lang.String value>;

        $z3 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("0");

        if $z3 == 0 goto label2;

        $r25 = new java.lang.NumberFormatException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JSON forbids octal prefixes: ");

        $r13 = r0.<com.google.gson.stream.JsonReader: java.lang.String value>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r15);

        throw $r25;

     label2:
        $z0 = r0.<com.google.gson.stream.JsonReader: boolean lenient>;

        if $z0 != 0 goto label4;

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z1 != 0 goto label3;

        $z2 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d0);

        if $z2 == 0 goto label4;

     label3:
        $r27 = new java.lang.NumberFormatException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JSON forbids NaN and infinities: ");

        $r6 = r0.<com.google.gson.stream.JsonReader: java.lang.String value>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r8);

        throw $r27;

     label4:
        specialinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken advance()>();

        return $d0;
    }

    public long nextLong() throws java.io.IOException
    {
        java.lang.IllegalStateException $r21;
        long l2;
        com.google.gson.stream.JsonReader r0;
        byte $b0, $b1;
        int $i3;
        java.lang.String $r1, $r2, $r3, $r7, $r9, $r15, $r17, $r19;
        boolean $z0;
        double $d0, $d1;
        java.lang.NumberFormatException $r16, $r22, $r24;
        com.google.gson.stream.JsonToken $r13;
        java.lang.StringBuilder $r6, $r8, $r12, $r14, $r20, $r23;

        r0 := @this: com.google.gson.stream.JsonReader;

        specialinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken quickPeek()>();

        $r1 = r0.<com.google.gson.stream.JsonReader: java.lang.String value>;

        if $r1 != null goto label1;

        $r21 = new java.lang.IllegalStateException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected a long but was ");

        $r13 = virtualinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r15);

        throw $r21;

     label1:
        $r2 = r0.<com.google.gson.stream.JsonReader: java.lang.String value>;

        l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r2);

     label2:
        goto label4;

     label3:
        $r16 := @caughtexception;

        $r17 = r0.<com.google.gson.stream.JsonReader: java.lang.String value>;

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r17);

        l2 = (long) $d0;

        $d1 = (double) l2;

        $b1 = $d1 cmpl $d0;

        if $b1 == 0 goto label4;

        $r22 = new java.lang.NumberFormatException;

        $r19 = r0.<com.google.gson.stream.JsonReader: java.lang.String value>;

        specialinvoke $r22.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r19);

        throw $r22;

     label4:
        $b0 = l2 cmp 1L;

        $i3 = (int) $b0;

        if $i3 < 0 goto label5;

        $r3 = r0.<com.google.gson.stream.JsonReader: java.lang.String value>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("0");

        if $z0 == 0 goto label5;

        $r24 = new java.lang.NumberFormatException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JSON forbids octal prefixes: ");

        $r7 = r0.<com.google.gson.stream.JsonReader: java.lang.String value>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r9);

        throw $r24;

     label5:
        specialinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken advance()>();

        return l2;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public int nextInt() throws java.io.IOException
    {
        java.lang.IllegalStateException $r21;
        long $l0;
        com.google.gson.stream.JsonReader r0;
        byte $b1, $b2;
        int i3, $i4;
        java.lang.String $r1, $r2, $r3, $r7, $r9, $r15, $r17, $r19;
        boolean $z0;
        double $d0, $d1;
        java.lang.NumberFormatException $r16, $r22, $r24;
        com.google.gson.stream.JsonToken $r13;
        java.lang.StringBuilder $r6, $r8, $r12, $r14, $r20, $r23;

        r0 := @this: com.google.gson.stream.JsonReader;

        specialinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken quickPeek()>();

        $r1 = r0.<com.google.gson.stream.JsonReader: java.lang.String value>;

        if $r1 != null goto label1;

        $r21 = new java.lang.IllegalStateException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected an int but was ");

        $r13 = virtualinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r15);

        throw $r21;

     label1:
        $r2 = r0.<com.google.gson.stream.JsonReader: java.lang.String value>;

        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

     label2:
        goto label4;

     label3:
        $r16 := @caughtexception;

        $r17 = r0.<com.google.gson.stream.JsonReader: java.lang.String value>;

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r17);

        i3 = (int) $d0;

        $d1 = (double) i3;

        $b2 = $d1 cmpl $d0;

        if $b2 == 0 goto label4;

        $r22 = new java.lang.NumberFormatException;

        $r19 = r0.<com.google.gson.stream.JsonReader: java.lang.String value>;

        specialinvoke $r22.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r19);

        throw $r22;

     label4:
        $l0 = (long) i3;

        $b1 = $l0 cmp 1L;

        $i4 = (int) $b1;

        if $i4 < 0 goto label5;

        $r3 = r0.<com.google.gson.stream.JsonReader: java.lang.String value>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("0");

        if $z0 == 0 goto label5;

        $r24 = new java.lang.NumberFormatException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JSON forbids octal prefixes: ");

        $r7 = r0.<com.google.gson.stream.JsonReader: java.lang.String value>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r9);

        throw $r24;

     label5:
        specialinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken advance()>();

        return i3;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public void close() throws java.io.IOException
    {
        com.google.gson.stream.JsonScope $r2;
        java.util.List $r1, $r3;
        java.io.Reader $r4;
        com.google.gson.stream.JsonReader r0;

        r0 := @this: com.google.gson.stream.JsonReader;

        r0.<com.google.gson.stream.JsonReader: boolean hasToken> = 0;

        r0.<com.google.gson.stream.JsonReader: java.lang.String value> = null;

        r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken token> = null;

        $r1 = r0.<com.google.gson.stream.JsonReader: java.util.List stack>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r3 = r0.<com.google.gson.stream.JsonReader: java.util.List stack>;

        $r2 = <com.google.gson.stream.JsonScope: com.google.gson.stream.JsonScope CLOSED>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

        $r4 = r0.<com.google.gson.stream.JsonReader: java.io.Reader in>;

        virtualinvoke $r4.<java.io.Reader: void close()>();

        return;
    }

    public void skipValue() throws java.io.IOException
    {
        java.lang.Throwable $r6;
        com.google.gson.stream.JsonReader r0;
        com.google.gson.stream.JsonToken $r1, $r2, $r3, $r4, $r5;
        int i0, $i2;

        r0 := @this: com.google.gson.stream.JsonReader;

        r0.<com.google.gson.stream.JsonReader: boolean skipping> = 1;

     label01:
        i0 = 0;

     label02:
        $r1 = specialinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken advance()>();

        $r2 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BEGIN_ARRAY>;

        if $r1 == $r2 goto label03;

        $r3 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BEGIN_OBJECT>;

        if $r1 != $r3 goto label04;

     label03:
        i0 = i0 + 1;

        goto label06;

     label04:
        $r4 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_ARRAY>;

        if $r1 == $r4 goto label05;

        $r5 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_OBJECT>;

        if $r1 != $r5 goto label06;

     label05:
        $i2 = (int) -1;

        i0 = i0 + $i2;

     label06:
        if i0 != 0 goto label02;

     label07:
        r0.<com.google.gson.stream.JsonReader: boolean skipping> = 0;

        goto label10;

     label08:
        $r6 := @caughtexception;

     label09:
        r0.<com.google.gson.stream.JsonReader: boolean skipping> = 0;

        throw $r6;

     label10:
        return;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private com.google.gson.stream.JsonScope peekStack()
    {
        com.google.gson.stream.JsonScope $r4;
        java.util.List $r1, $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        com.google.gson.stream.JsonReader r0;

        r0 := @this: com.google.gson.stream.JsonReader;

        $r2 = r0.<com.google.gson.stream.JsonReader: java.util.List stack>;

        $r1 = r0.<com.google.gson.stream.JsonReader: java.util.List stack>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (com.google.gson.stream.JsonScope) $r3;

        return $r4;
    }

    private com.google.gson.stream.JsonScope pop()
    {
        com.google.gson.stream.JsonScope $r4;
        java.util.List $r1, $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        com.google.gson.stream.JsonReader r0;

        r0 := @this: com.google.gson.stream.JsonReader;

        $r2 = r0.<com.google.gson.stream.JsonReader: java.util.List stack>;

        $r1 = r0.<com.google.gson.stream.JsonReader: java.util.List stack>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object remove(int)>($i1);

        $r4 = (com.google.gson.stream.JsonScope) $r3;

        return $r4;
    }

    private void push(com.google.gson.stream.JsonScope)
    {
        com.google.gson.stream.JsonScope r1;
        java.util.List $r2;
        com.google.gson.stream.JsonReader r0;

        r0 := @this: com.google.gson.stream.JsonReader;

        r1 := @parameter0: com.google.gson.stream.JsonScope;

        $r2 = r0.<com.google.gson.stream.JsonReader: java.util.List stack>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    private void replaceTop(com.google.gson.stream.JsonScope)
    {
        com.google.gson.stream.JsonScope r3;
        java.util.List $r1, $r2;
        int $i0, $i1;
        com.google.gson.stream.JsonReader r0;

        r0 := @this: com.google.gson.stream.JsonReader;

        r3 := @parameter0: com.google.gson.stream.JsonScope;

        $r2 = r0.<com.google.gson.stream.JsonReader: java.util.List stack>;

        $r1 = r0.<com.google.gson.stream.JsonReader: java.util.List stack>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i1, r3);

        return;
    }

    private com.google.gson.stream.JsonToken nextInArray(boolean) throws java.io.IOException
    {
        com.google.gson.stream.JsonScope $r6;
        java.io.IOException $r5;
        com.google.gson.stream.JsonReader r0;
        com.google.gson.stream.JsonToken $r1, $r2, $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean z0;

        r0 := @this: com.google.gson.stream.JsonReader;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r6 = <com.google.gson.stream.JsonScope: com.google.gson.stream.JsonScope NONEMPTY_ARRAY>;

        specialinvoke r0.<com.google.gson.stream.JsonReader: void replaceTop(com.google.gson.stream.JsonScope)>($r6);

        goto label6;

     label1:
        $i0 = specialinvoke r0.<com.google.gson.stream.JsonReader: int nextNonWhitespace()>();

        lookupswitch($i0)
        {
            case 44: goto label4;
            case 59: goto label3;
            case 93: goto label2;
            default: goto label5;
        };

     label2:
        specialinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonScope pop()>();

        r0.<com.google.gson.stream.JsonReader: boolean hasToken> = 1;

        $r1 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_ARRAY>;

        r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken token> = $r1;

        return $r1;

     label3:
        specialinvoke r0.<com.google.gson.stream.JsonReader: void checkLenient()>();

     label4:
        goto label6;

     label5:
        $r5 = specialinvoke r0.<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>("Unterminated array");

        throw $r5;

     label6:
        $i1 = specialinvoke r0.<com.google.gson.stream.JsonReader: int nextNonWhitespace()>();

        lookupswitch($i1)
        {
            case 44: goto label8;
            case 59: goto label8;
            case 93: goto label7;
            default: goto label9;
        };

     label7:
        if z0 == 0 goto label8;

        specialinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonScope pop()>();

        r0.<com.google.gson.stream.JsonReader: boolean hasToken> = 1;

        $r3 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_ARRAY>;

        r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken token> = $r3;

        return $r3;

     label8:
        specialinvoke r0.<com.google.gson.stream.JsonReader: void checkLenient()>();

        $i2 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i3 = $i2 - 1;

        r0.<com.google.gson.stream.JsonReader: int pos> = $i3;

        r0.<com.google.gson.stream.JsonReader: boolean hasToken> = 1;

        r0.<com.google.gson.stream.JsonReader: java.lang.String value> = "null";

        $r2 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NULL>;

        r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken token> = $r2;

        return $r2;

     label9:
        $i4 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i5 = $i4 - 1;

        r0.<com.google.gson.stream.JsonReader: int pos> = $i5;

        $r4 = specialinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>();

        return $r4;
    }

    private com.google.gson.stream.JsonToken nextInObject(boolean) throws java.io.IOException
    {
        com.google.gson.stream.JsonReader r0;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String $r2, $r5, $r6;
        boolean z0;
        com.google.gson.stream.JsonScope $r3;
        char $c2;
        java.io.IOException $r7, $r8;
        com.google.gson.stream.JsonToken $r1, $r4, $r9;

        r0 := @this: com.google.gson.stream.JsonReader;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label03;

        $i6 = specialinvoke r0.<com.google.gson.stream.JsonReader: int nextNonWhitespace()>();

        lookupswitch($i6)
        {
            case 125: goto label01;
            default: goto label02;
        };

     label01:
        specialinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonScope pop()>();

        r0.<com.google.gson.stream.JsonReader: boolean hasToken> = 1;

        $r9 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_OBJECT>;

        r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken token> = $r9;

        return $r9;

     label02:
        $i7 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i8 = $i7 - 1;

        r0.<com.google.gson.stream.JsonReader: int pos> = $i8;

        goto label07;

     label03:
        $i0 = specialinvoke r0.<com.google.gson.stream.JsonReader: int nextNonWhitespace()>();

        lookupswitch($i0)
        {
            case 44: goto label05;
            case 59: goto label05;
            case 125: goto label04;
            default: goto label06;
        };

     label04:
        specialinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonScope pop()>();

        r0.<com.google.gson.stream.JsonReader: boolean hasToken> = 1;

        $r1 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_OBJECT>;

        r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken token> = $r1;

        return $r1;

     label05:
        goto label07;

     label06:
        $r8 = specialinvoke r0.<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>("Unterminated object");

        throw $r8;

     label07:
        $i1 = specialinvoke r0.<com.google.gson.stream.JsonReader: int nextNonWhitespace()>();

        lookupswitch($i1)
        {
            case 34: goto label09;
            case 39: goto label08;
            default: goto label10;
        };

     label08:
        specialinvoke r0.<com.google.gson.stream.JsonReader: void checkLenient()>();

     label09:
        $c2 = (char) $i1;

        $r2 = specialinvoke r0.<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>($c2);

        r0.<com.google.gson.stream.JsonReader: java.lang.String name> = $r2;

        goto label11;

     label10:
        specialinvoke r0.<com.google.gson.stream.JsonReader: void checkLenient()>();

        $i3 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i4 = $i3 - 1;

        r0.<com.google.gson.stream.JsonReader: int pos> = $i4;

        $r5 = specialinvoke r0.<com.google.gson.stream.JsonReader: java.lang.String nextLiteral()>();

        r0.<com.google.gson.stream.JsonReader: java.lang.String name> = $r5;

        $r6 = r0.<com.google.gson.stream.JsonReader: java.lang.String name>;

        $i5 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i5 != 0 goto label11;

        $r7 = specialinvoke r0.<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>("Expected name");

        throw $r7;

     label11:
        $r3 = <com.google.gson.stream.JsonScope: com.google.gson.stream.JsonScope DANGLING_NAME>;

        specialinvoke r0.<com.google.gson.stream.JsonReader: void replaceTop(com.google.gson.stream.JsonScope)>($r3);

        r0.<com.google.gson.stream.JsonReader: boolean hasToken> = 1;

        $r4 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NAME>;

        r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken token> = $r4;

        return $r4;
    }

    private com.google.gson.stream.JsonToken objectValue() throws java.io.IOException
    {
        com.google.gson.stream.JsonScope $r3;
        char $c4;
        java.io.IOException $r2;
        com.google.gson.stream.JsonReader r0;
        com.google.gson.stream.JsonToken $r4;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7;
        char[] $r1;
        boolean $z0;

        r0 := @this: com.google.gson.stream.JsonReader;

        $i0 = specialinvoke r0.<com.google.gson.stream.JsonReader: int nextNonWhitespace()>();

        lookupswitch($i0)
        {
            case 58: goto label1;
            case 61: goto label2;
            default: goto label4;
        };

     label1:
        goto label5;

     label2:
        specialinvoke r0.<com.google.gson.stream.JsonReader: void checkLenient()>();

        $i2 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i1 = r0.<com.google.gson.stream.JsonReader: int limit>;

        if $i2 < $i1 goto label3;

        $z0 = specialinvoke r0.<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>(1);

        if $z0 == 0 goto label5;

     label3:
        $r1 = r0.<com.google.gson.stream.JsonReader: char[] buffer>;

        $i3 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $c4 = $r1[$i3];

        $i7 = (int) $c4;

        if $i7 != 62 goto label5;

        $i5 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i6 = $i5 + 1;

        r0.<com.google.gson.stream.JsonReader: int pos> = $i6;

        goto label5;

     label4:
        $r2 = specialinvoke r0.<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>("Expected \':\'");

        throw $r2;

     label5:
        $r3 = <com.google.gson.stream.JsonScope: com.google.gson.stream.JsonScope NONEMPTY_OBJECT>;

        specialinvoke r0.<com.google.gson.stream.JsonReader: void replaceTop(com.google.gson.stream.JsonScope)>($r3);

        $r4 = specialinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>();

        return $r4;
    }

    private com.google.gson.stream.JsonToken nextValue() throws java.io.IOException
    {
        com.google.gson.stream.JsonScope $r1, $r3;
        char $c1;
        com.google.gson.stream.JsonReader r0;
        com.google.gson.stream.JsonToken $r2, $r4, $r6, $r7;
        int $i0, $i2, $i3;
        java.lang.String $r5;

        r0 := @this: com.google.gson.stream.JsonReader;

        $i0 = specialinvoke r0.<com.google.gson.stream.JsonReader: int nextNonWhitespace()>();

        lookupswitch($i0)
        {
            case 34: goto label4;
            case 39: goto label3;
            case 91: goto label2;
            case 123: goto label1;
            default: goto label5;
        };

     label1:
        $r1 = <com.google.gson.stream.JsonScope: com.google.gson.stream.JsonScope EMPTY_OBJECT>;

        specialinvoke r0.<com.google.gson.stream.JsonReader: void push(com.google.gson.stream.JsonScope)>($r1);

        r0.<com.google.gson.stream.JsonReader: boolean hasToken> = 1;

        $r2 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BEGIN_OBJECT>;

        r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken token> = $r2;

        return $r2;

     label2:
        $r3 = <com.google.gson.stream.JsonScope: com.google.gson.stream.JsonScope EMPTY_ARRAY>;

        specialinvoke r0.<com.google.gson.stream.JsonReader: void push(com.google.gson.stream.JsonScope)>($r3);

        r0.<com.google.gson.stream.JsonReader: boolean hasToken> = 1;

        $r4 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BEGIN_ARRAY>;

        r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken token> = $r4;

        return $r4;

     label3:
        specialinvoke r0.<com.google.gson.stream.JsonReader: void checkLenient()>();

     label4:
        $c1 = (char) $i0;

        $r5 = specialinvoke r0.<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>($c1);

        r0.<com.google.gson.stream.JsonReader: java.lang.String value> = $r5;

        r0.<com.google.gson.stream.JsonReader: boolean hasToken> = 1;

        $r6 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken STRING>;

        r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken token> = $r6;

        return $r6;

     label5:
        $i2 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i3 = $i2 - 1;

        r0.<com.google.gson.stream.JsonReader: int pos> = $i3;

        $r7 = specialinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken readLiteral()>();

        return $r7;
    }

    private boolean fillBuffer(int) throws java.io.IOException
    {
        com.google.gson.stream.JsonReader r0;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17;
        java.io.Reader $r3;
        char[] $r1, $r2, $r4, $r5;

        r0 := @this: com.google.gson.stream.JsonReader;

        i4 := @parameter0: int;

        $i1 = r0.<com.google.gson.stream.JsonReader: int limit>;

        $i0 = r0.<com.google.gson.stream.JsonReader: int pos>;

        if $i1 == $i0 goto label1;

        $i7 = r0.<com.google.gson.stream.JsonReader: int limit>;

        $i6 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i8 = $i7 - $i6;

        r0.<com.google.gson.stream.JsonReader: int limit> = $i8;

        $r2 = r0.<com.google.gson.stream.JsonReader: char[] buffer>;

        $i10 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $r1 = r0.<com.google.gson.stream.JsonReader: char[] buffer>;

        $i9 = r0.<com.google.gson.stream.JsonReader: int limit>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i10, $r1, 0, $i9);

        goto label2;

     label1:
        r0.<com.google.gson.stream.JsonReader: int limit> = 0;

     label2:
        r0.<com.google.gson.stream.JsonReader: int pos> = 0;

     label3:
        $r3 = r0.<com.google.gson.stream.JsonReader: java.io.Reader in>;

        $r4 = r0.<com.google.gson.stream.JsonReader: char[] buffer>;

        $i11 = r0.<com.google.gson.stream.JsonReader: int limit>;

        $r5 = r0.<com.google.gson.stream.JsonReader: char[] buffer>;

        $i12 = lengthof $r5;

        $i13 = r0.<com.google.gson.stream.JsonReader: int limit>;

        $i14 = $i12 - $i13;

        $i15 = virtualinvoke $r3.<java.io.Reader: int read(char[],int,int)>($r4, $i11, $i14);

        $i17 = (int) -1;

        if $i15 == $i17 goto label4;

        $i2 = r0.<com.google.gson.stream.JsonReader: int limit>;

        $i3 = $i2 + $i15;

        r0.<com.google.gson.stream.JsonReader: int limit> = $i3;

        $i5 = r0.<com.google.gson.stream.JsonReader: int limit>;

        if $i5 < i4 goto label3;

        return 1;

     label4:
        return 0;
    }

    private int nextNonWhitespace() throws java.io.IOException
    {
        com.google.gson.stream.JsonReader r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        boolean $z0, $z1, $z2;
        java.io.IOException $r3;
        char $c11, $c12;
        java.io.EOFException $r5;
        char[] $r1, $r2;

        r0 := @this: com.google.gson.stream.JsonReader;

     label01:
        $i13 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i14 = r0.<com.google.gson.stream.JsonReader: int limit>;

        if $i13 < $i14 goto label02;

        $z2 = specialinvoke r0.<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>(1);

        if $z2 == 0 goto label12;

     label02:
        $r1 = r0.<com.google.gson.stream.JsonReader: char[] buffer>;

        $i0 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i1 = $i0 + 1;

        r0.<com.google.gson.stream.JsonReader: int pos> = $i1;

        $c12 = $r1[$i0];

        $i15 = (int) $c12;

        lookupswitch($i15)
        {
            case 9: goto label03;
            case 10: goto label03;
            case 13: goto label03;
            case 32: goto label03;
            case 35: goto label10;
            case 47: goto label04;
            default: goto label11;
        };

     label03:
        goto label01;

     label04:
        $i3 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i2 = r0.<com.google.gson.stream.JsonReader: int limit>;

        if $i3 != $i2 goto label05;

        $z1 = specialinvoke r0.<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>(1);

        if $z1 != 0 goto label05;

        $i16 = (int) $c12;

        return $i16;

     label05:
        specialinvoke r0.<com.google.gson.stream.JsonReader: void checkLenient()>();

        $r2 = r0.<com.google.gson.stream.JsonReader: char[] buffer>;

        $i4 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $c11 = $r2[$i4];

        $i17 = (int) $c11;

        lookupswitch($i17)
        {
            case 42: goto label06;
            case 47: goto label08;
            default: goto label09;
        };

     label06:
        $i7 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i8 = $i7 + 1;

        r0.<com.google.gson.stream.JsonReader: int pos> = $i8;

        $z0 = specialinvoke r0.<com.google.gson.stream.JsonReader: boolean skipTo(java.lang.String)>("*/");

        if $z0 != 0 goto label07;

        $r3 = specialinvoke r0.<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>("Unterminated comment");

        throw $r3;

     label07:
        $i9 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i10 = $i9 + 2;

        r0.<com.google.gson.stream.JsonReader: int pos> = $i10;

        goto label01;

     label08:
        $i5 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i6 = $i5 + 1;

        r0.<com.google.gson.stream.JsonReader: int pos> = $i6;

        specialinvoke r0.<com.google.gson.stream.JsonReader: void skipToEndOfLine()>();

        goto label01;

     label09:
        $i18 = (int) $c12;

        return $i18;

     label10:
        specialinvoke r0.<com.google.gson.stream.JsonReader: void checkLenient()>();

        specialinvoke r0.<com.google.gson.stream.JsonReader: void skipToEndOfLine()>();

        goto label01;

     label11:
        $i19 = (int) $c12;

        return $i19;

     label12:
        $r5 = new java.io.EOFException;

        specialinvoke $r5.<java.io.EOFException: void <init>(java.lang.String)>("End of input");

        throw $r5;
    }

    private void checkLenient() throws java.io.IOException
    {
        java.io.IOException $r1;
        com.google.gson.stream.JsonReader r0;
        boolean $z0;

        r0 := @this: com.google.gson.stream.JsonReader;

        $z0 = r0.<com.google.gson.stream.JsonReader: boolean lenient>;

        if $z0 != 0 goto label1;

        $r1 = specialinvoke r0.<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>("Use JsonReader.setLenient(true) to accept malformed JSON");

        throw $r1;

     label1:
        return;
    }

    private void skipToEndOfLine() throws java.io.IOException
    {
        char $c4;
        com.google.gson.stream.JsonReader r0;
        int $i0, $i1, $i2, $i3, $i5, $i6;
        char[] $r1;
        boolean $z0;

        r0 := @this: com.google.gson.stream.JsonReader;

     label1:
        $i1 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i0 = r0.<com.google.gson.stream.JsonReader: int limit>;

        if $i1 < $i0 goto label2;

        $z0 = specialinvoke r0.<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>(1);

        if $z0 == 0 goto label4;

     label2:
        $r1 = r0.<com.google.gson.stream.JsonReader: char[] buffer>;

        $i2 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i3 = $i2 + 1;

        r0.<com.google.gson.stream.JsonReader: int pos> = $i3;

        $c4 = $r1[$i2];

        $i5 = (int) $c4;

        if $i5 == 13 goto label4;

        $i6 = (int) $c4;

        if $i6 != 10 goto label3;

        goto label4;

     label3:
        goto label1;

     label4:
        return;
    }

    private boolean skipTo(java.lang.String) throws java.io.IOException
    {
        com.google.gson.stream.JsonReader r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i8, $i9, $i10, i11, $i12, $i13, $i14;
        java.lang.String r1;
        boolean $z0;
        char $c6, $c7;
        char[] $r2;

        r0 := @this: com.google.gson.stream.JsonReader;

        r1 := @parameter0: java.lang.String;

     label1:
        $i0 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i3 = $i0 + $i1;

        $i2 = r0.<com.google.gson.stream.JsonReader: int limit>;

        if $i3 < $i2 goto label2;

        $i10 = virtualinvoke r1.<java.lang.String: int length()>();

        $z0 = specialinvoke r0.<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>($i10);

        if $z0 == 0 goto label7;

     label2:
        i11 = 0;

     label3:
        $i12 = virtualinvoke r1.<java.lang.String: int length()>();

        if i11 >= $i12 goto label5;

        $r2 = r0.<com.google.gson.stream.JsonReader: char[] buffer>;

        $i4 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i5 = $i4 + i11;

        $c6 = $r2[$i5];

        $c7 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i11);

        $i13 = (int) $c6;

        $i14 = (int) $c7;

        if $i13 == $i14 goto label4;

        goto label6;

     label4:
        i11 = i11 + 1;

        goto label3;

     label5:
        return 1;

     label6:
        $i8 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i9 = $i8 + 1;

        r0.<com.google.gson.stream.JsonReader: int pos> = $i9;

        goto label1;

     label7:
        return 0;
    }

    private java.lang.String nextString(char) throws java.io.IOException
    {
        boolean $z0, $z1;
        java.lang.StringBuilder r11, $r13, $r14;
        com.google.gson.stream.JsonReader r0;
        int $i0, $i1, $i2, $i3, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15, i16, $i17, $i18, $i19, $i20, $i21;
        java.lang.String $r8, $r12;
        java.io.IOException $r2;
        char c4, c5, $c9;
        char[] $r1, $r4, $r5, $r7, $r10;

        r0 := @this: com.google.gson.stream.JsonReader;

        c5 := @parameter0: char;

        r11 = null;

     label1:
        i16 = r0.<com.google.gson.stream.JsonReader: int pos>;

     label2:
        $i17 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i18 = r0.<com.google.gson.stream.JsonReader: int limit>;

        if $i17 >= $i18 goto label8;

        $r4 = r0.<com.google.gson.stream.JsonReader: char[] buffer>;

        $i2 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i3 = $i2 + 1;

        r0.<com.google.gson.stream.JsonReader: int pos> = $i3;

        c4 = $r4[$i2];

        $i19 = (int) c4;

        $i20 = (int) c5;

        if $i19 != $i20 goto label5;

        $z1 = r0.<com.google.gson.stream.JsonReader: boolean skipping>;

        if $z1 == 0 goto label3;

        return "skipped!";

     label3:
        if r11 != null goto label4;

        $r12 = new java.lang.String;

        $r10 = r0.<com.google.gson.stream.JsonReader: char[] buffer>;

        $i13 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i14 = $i13 - i16;

        $i15 = $i14 - 1;

        specialinvoke $r12.<java.lang.String: void <init>(char[],int,int)>($r10, i16, $i15);

        return $r12;

     label4:
        $r7 = r0.<com.google.gson.stream.JsonReader: char[] buffer>;

        $i10 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i11 = $i10 - i16;

        $i12 = $i11 - 1;

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r7, i16, $i12);

        $r8 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;

     label5:
        $i21 = (int) c4;

        if $i21 != 92 goto label7;

        if r11 != null goto label6;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        r11 = $r13;

     label6:
        $r5 = r0.<com.google.gson.stream.JsonReader: char[] buffer>;

        $i6 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i7 = $i6 - i16;

        $i8 = $i7 - 1;

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r5, i16, $i8);

        $c9 = specialinvoke r0.<com.google.gson.stream.JsonReader: char readEscapeCharacter()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c9);

        i16 = r0.<com.google.gson.stream.JsonReader: int pos>;

     label7:
        goto label2;

     label8:
        if r11 != null goto label9;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        r11 = $r14;

     label9:
        $r1 = r0.<com.google.gson.stream.JsonReader: char[] buffer>;

        $i0 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i1 = $i0 - i16;

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r1, i16, $i1);

        $z0 = specialinvoke r0.<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>(1);

        if $z0 != 0 goto label1;

        $r2 = specialinvoke r0.<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>("Unterminated string");

        throw $r2;
    }

    private java.lang.String nextLiteral() throws java.io.IOException
    {
        com.google.gson.stream.JsonReader r0;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        java.lang.String $r2, $r6, $r10;
        boolean $z0, $z1;
        char c5;
        char[] $r1, $r4, $r5, $r8;
        java.lang.StringBuilder r9, $r11;

        r0 := @this: com.google.gson.stream.JsonReader;

        r9 = null;

     label1:
        $i2 = r0.<com.google.gson.stream.JsonReader: int pos>;

     label2:
        $i12 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i13 = r0.<com.google.gson.stream.JsonReader: int limit>;

        if $i12 >= $i13 goto label8;

        $r4 = r0.<com.google.gson.stream.JsonReader: char[] buffer>;

        $i3 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i4 = $i3 + 1;

        r0.<com.google.gson.stream.JsonReader: int pos> = $i4;

        c5 = $r4[$i3];

        $i14 = (int) c5;

        lookupswitch($i14)
        {
            case 9: goto label4;
            case 10: goto label4;
            case 12: goto label4;
            case 13: goto label4;
            case 32: goto label4;
            case 35: goto label3;
            case 44: goto label4;
            case 47: goto label3;
            case 58: goto label4;
            case 59: goto label3;
            case 61: goto label3;
            case 91: goto label4;
            case 92: goto label3;
            case 93: goto label4;
            case 123: goto label4;
            case 125: goto label4;
            default: goto label7;
        };

     label3:
        specialinvoke r0.<com.google.gson.stream.JsonReader: void checkLenient()>();

     label4:
        $i6 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i7 = $i6 - 1;

        r0.<com.google.gson.stream.JsonReader: int pos> = $i7;

        $z1 = r0.<com.google.gson.stream.JsonReader: boolean skipping>;

        if $z1 == 0 goto label5;

        return "skipped!";

     label5:
        if r9 != null goto label6;

        $r10 = new java.lang.String;

        $r8 = r0.<com.google.gson.stream.JsonReader: char[] buffer>;

        $i10 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i11 = $i10 - $i2;

        specialinvoke $r10.<java.lang.String: void <init>(char[],int,int)>($r8, $i2, $i11);

        return $r10;

     label6:
        $r5 = r0.<com.google.gson.stream.JsonReader: char[] buffer>;

        $i8 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i9 = $i8 - $i2;

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r5, $i2, $i9);

        $r6 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;

     label7:
        goto label2;

     label8:
        if r9 != null goto label9;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        r9 = $r11;

     label9:
        $r1 = r0.<com.google.gson.stream.JsonReader: char[] buffer>;

        $i0 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i1 = $i0 - $i2;

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r1, $i2, $i1);

        $z0 = specialinvoke r0.<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>(1);

        if $z0 != 0 goto label1;

        $r2 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public java.lang.String toString()
    {
        java.lang.CharSequence $r6;
        com.google.gson.stream.JsonReader r1;
        java.lang.StringBuilder $r0, $r4, $r5, $r7;
        java.lang.Class $r2;
        java.lang.String $r3, $r8;

        r1 := @this: com.google.gson.stream.JsonReader;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" near ");

        $r6 = specialinvoke r1.<com.google.gson.stream.JsonReader: java.lang.CharSequence getSnippet()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    private char readEscapeCharacter() throws java.io.IOException
    {
        com.google.gson.stream.JsonReader r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i13;
        java.lang.String $r6;
        boolean $z0, $z1;
        char $c11, $c12;
        java.io.IOException $r4, $r5;
        char[] $r1, $r3;

        r0 := @this: com.google.gson.stream.JsonReader;

        $i1 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i0 = r0.<com.google.gson.stream.JsonReader: int limit>;

        if $i1 != $i0 goto label1;

        $z1 = specialinvoke r0.<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>(1);

        if $z1 != 0 goto label1;

        $r5 = specialinvoke r0.<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>("Unterminated escape sequence");

        throw $r5;

     label1:
        $r1 = r0.<com.google.gson.stream.JsonReader: char[] buffer>;

        $i2 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i3 = $i2 + 1;

        r0.<com.google.gson.stream.JsonReader: int pos> = $i3;

        $c12 = $r1[$i2];

        $i13 = (int) $c12;

        lookupswitch($i13)
        {
            case 34: goto label9;
            case 39: goto label9;
            case 92: goto label9;
            case 98: goto label5;
            case 102: goto label8;
            case 110: goto label6;
            case 114: goto label7;
            case 116: goto label4;
            case 117: goto label2;
            default: goto label9;
        };

     label2:
        $i4 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i6 = $i4 + 4;

        $i5 = r0.<com.google.gson.stream.JsonReader: int limit>;

        if $i6 <= $i5 goto label3;

        $z0 = specialinvoke r0.<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>(4);

        if $z0 != 0 goto label3;

        $r4 = specialinvoke r0.<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>("Unterminated escape sequence");

        throw $r4;

     label3:
        $r6 = new java.lang.String;

        $r3 = r0.<com.google.gson.stream.JsonReader: char[] buffer>;

        $i7 = r0.<com.google.gson.stream.JsonReader: int pos>;

        specialinvoke $r6.<java.lang.String: void <init>(char[],int,int)>($r3, $i7, 4);

        $i8 = r0.<com.google.gson.stream.JsonReader: int pos>;

        $i9 = $i8 + 4;

        r0.<com.google.gson.stream.JsonReader: int pos> = $i9;

        $i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r6, 16);

        $c11 = (char) $i10;

        return $c11;

     label4:
        return 9;

     label5:
        return 8;

     label6:
        return 10;

     label7:
        return 13;

     label8:
        return 12;

     label9:
        return $c12;
    }

    private com.google.gson.stream.JsonToken readLiteral() throws java.io.IOException
    {
        int $i0;
        java.io.IOException $r2;
        java.lang.String $r1;
        com.google.gson.stream.JsonReader r0;

        r0 := @this: com.google.gson.stream.JsonReader;

        $r1 = specialinvoke r0.<com.google.gson.stream.JsonReader: java.lang.String nextLiteral()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $r2 = specialinvoke r0.<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>("Expected literal value");

        throw $r2;

     label1:
        r0.<com.google.gson.stream.JsonReader: java.lang.String value> = $r1;

        r0.<com.google.gson.stream.JsonReader: boolean hasToken> = 1;

        r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken token> = null;

        return null;
    }

    private void decodeLiteral() throws java.io.IOException
    {
        java.lang.NumberFormatException $r8;
        com.google.gson.stream.JsonReader r0;
        com.google.gson.stream.JsonToken $r3, $r6, $r7, $r9;
        java.lang.String $r1, $r2, $r4, $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: com.google.gson.stream.JsonReader;

        $r1 = r0.<com.google.gson.stream.JsonReader: java.lang.String value>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("null");

        if $z0 == 0 goto label1;

        $r7 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NULL>;

        r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken token> = $r7;

        goto label6;

     label1:
        $r2 = r0.<com.google.gson.stream.JsonReader: java.lang.String value>;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        if $z1 != 0 goto label2;

        $r4 = r0.<com.google.gson.stream.JsonReader: java.lang.String value>;

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("false");

        if $z2 == 0 goto label3;

     label2:
        $r3 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BOOLEAN>;

        r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken token> = $r3;

        goto label6;

     label3:
        $r5 = r0.<com.google.gson.stream.JsonReader: java.lang.String value>;

        staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r5);

        $r6 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NUMBER>;

        r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken token> = $r6;

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;

        specialinvoke r0.<com.google.gson.stream.JsonReader: void checkLenient()>();

        $r9 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken STRING>;

        r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken token> = $r9;

     label6:
        return;

        catch java.lang.NumberFormatException from label3 to label4 with label5;
    }

    private java.io.IOException syntaxError(java.lang.String) throws java.io.IOException
    {
        java.lang.CharSequence $r6;
        com.google.gson.stream.JsonReader r5;
        com.google.gson.stream.MalformedJsonException $r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r7;
        java.lang.String r2, $r8;

        r5 := @this: com.google.gson.stream.JsonReader;

        r2 := @parameter0: java.lang.String;

        $r0 = new com.google.gson.stream.MalformedJsonException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" near ");

        $r6 = specialinvoke r5.<com.google.gson.stream.JsonReader: java.lang.CharSequence getSnippet()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<com.google.gson.stream.MalformedJsonException: void <init>(java.lang.String)>($r8);

        throw $r0;
    }

    private java.lang.CharSequence getSnippet()
    {
        com.google.gson.stream.JsonReader r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        char[] $r2, $r3;
        java.lang.StringBuilder $r0;

        r1 := @this: com.google.gson.stream.JsonReader;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $i0 = r1.<com.google.gson.stream.JsonReader: int pos>;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i0, 20);

        $r2 = r1.<com.google.gson.stream.JsonReader: char[] buffer>;

        $i2 = r1.<com.google.gson.stream.JsonReader: int pos>;

        $i3 = $i2 - $i1;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r2, $i3, $i1);

        $i5 = r1.<com.google.gson.stream.JsonReader: int limit>;

        $i4 = r1.<com.google.gson.stream.JsonReader: int pos>;

        $i6 = $i5 - $i4;

        $i7 = staticinvoke <java.lang.Math: int min(int,int)>($i6, 20);

        $r3 = r1.<com.google.gson.stream.JsonReader: char[] buffer>;

        $i8 = r1.<com.google.gson.stream.JsonReader: int pos>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r3, $i8, $i7);

        return $r0;
    }

    static void <clinit>()
    {
        char[] $r1;
        java.lang.String $r0;

        $r0 = ")]}\'\n";

        $r1 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        <com.google.gson.stream.JsonReader: char[] NON_EXECUTE_PREFIX> = $r1;

        return;
    }
}
