public class org.apache.batik.dom.GenericDocumentType extends org.apache.batik.dom.AbstractChildNode implements org.w3c.dom.DocumentType
{
    protected java.lang.String qualifiedName;
    protected java.lang.String publicId;
    protected java.lang.String systemId;

    public void <init>(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.batik.dom.GenericDocumentType r0;
        java.lang.String r1, r2, r3;

        r0 := @this: org.apache.batik.dom.GenericDocumentType;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<org.apache.batik.dom.AbstractChildNode: void <init>()>();

        r0.<org.apache.batik.dom.GenericDocumentType: java.lang.String qualifiedName> = r1;

        r0.<org.apache.batik.dom.GenericDocumentType: java.lang.String publicId> = r2;

        r0.<org.apache.batik.dom.GenericDocumentType: java.lang.String systemId> = r3;

        return;
    }

    public java.lang.String getNodeName()
    {
        java.lang.String $r1;
        org.apache.batik.dom.GenericDocumentType r0;

        r0 := @this: org.apache.batik.dom.GenericDocumentType;

        $r1 = r0.<org.apache.batik.dom.GenericDocumentType: java.lang.String qualifiedName>;

        return $r1;
    }

    public short getNodeType()
    {
        org.apache.batik.dom.GenericDocumentType r0;

        r0 := @this: org.apache.batik.dom.GenericDocumentType;

        return 10;
    }

    public boolean isReadonly()
    {
        org.apache.batik.dom.GenericDocumentType r0;

        r0 := @this: org.apache.batik.dom.GenericDocumentType;

        return 1;
    }

    public void setReadonly(boolean)
    {
        org.apache.batik.dom.GenericDocumentType r0;
        boolean z0;

        r0 := @this: org.apache.batik.dom.GenericDocumentType;

        z0 := @parameter0: boolean;

        return;
    }

    public java.lang.String getName()
    {
        org.apache.batik.dom.GenericDocumentType r0;

        r0 := @this: org.apache.batik.dom.GenericDocumentType;

        return null;
    }

    public org.w3c.dom.NamedNodeMap getEntities()
    {
        org.apache.batik.dom.GenericDocumentType r0;

        r0 := @this: org.apache.batik.dom.GenericDocumentType;

        return null;
    }

    public org.w3c.dom.NamedNodeMap getNotations()
    {
        org.apache.batik.dom.GenericDocumentType r0;

        r0 := @this: org.apache.batik.dom.GenericDocumentType;

        return null;
    }

    public java.lang.String getPublicId()
    {
        java.lang.String $r1;
        org.apache.batik.dom.GenericDocumentType r0;

        r0 := @this: org.apache.batik.dom.GenericDocumentType;

        $r1 = r0.<org.apache.batik.dom.GenericDocumentType: java.lang.String publicId>;

        return $r1;
    }

    public java.lang.String getSystemId()
    {
        java.lang.String $r1;
        org.apache.batik.dom.GenericDocumentType r0;

        r0 := @this: org.apache.batik.dom.GenericDocumentType;

        $r1 = r0.<org.apache.batik.dom.GenericDocumentType: java.lang.String systemId>;

        return $r1;
    }

    public java.lang.String getInternalSubset()
    {
        org.apache.batik.dom.GenericDocumentType r0;

        r0 := @this: org.apache.batik.dom.GenericDocumentType;

        return null;
    }

    protected org.w3c.dom.Node newNode()
    {
        org.apache.batik.dom.GenericDocumentType $r0, r1;
        java.lang.String $r2, $r3, $r4;

        r1 := @this: org.apache.batik.dom.GenericDocumentType;

        $r0 = new org.apache.batik.dom.GenericDocumentType;

        $r4 = r1.<org.apache.batik.dom.GenericDocumentType: java.lang.String qualifiedName>;

        $r3 = r1.<org.apache.batik.dom.GenericDocumentType: java.lang.String publicId>;

        $r2 = r1.<org.apache.batik.dom.GenericDocumentType: java.lang.String systemId>;

        specialinvoke $r0.<org.apache.batik.dom.GenericDocumentType: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r4, $r3, $r2);

        return $r0;
    }
}
