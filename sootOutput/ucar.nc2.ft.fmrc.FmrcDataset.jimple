class ucar.nc2.ft.fmrc.FmrcDataset extends java.lang.Object
{
    private static final org.slf4j.Logger logger;
    private static final boolean debugEnhance;
    private static final boolean debugRead;
    private final thredds.inventory.FeatureCollectionConfig config;
    private ucar.nc2.ft.fmrc.FmrcDataset$State state;
    private final java.lang.Object lock;

    void <init>(thredds.inventory.FeatureCollectionConfig)
    {
        ucar.nc2.ft.fmrc.FmrcDataset r0;
        thredds.inventory.FeatureCollectionConfig r2;
        java.lang.Object $r1;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcDataset;

        r2 := @parameter0: thredds.inventory.FeatureCollectionConfig;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.ft.fmrc.FmrcDataset: java.lang.Object lock> = $r1;

        r0.<ucar.nc2.ft.fmrc.FmrcDataset: thredds.inventory.FeatureCollectionConfig config> = r2;

        return;
    }

    java.util.List getRunDates()
    {
        java.lang.Throwable $r5;
        ucar.nc2.ft.fmrc.FmrcInvLite $r3;
        java.util.List $r4;
        ucar.nc2.ft.fmrc.FmrcDataset$State r2;
        ucar.nc2.ft.fmrc.FmrcDataset r0;
        java.lang.Object $r1;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcDataset;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcDataset: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        r2 = r0.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.ft.fmrc.FmrcDataset$State state>;

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

     label5:
        $r3 = r2.<ucar.nc2.ft.fmrc.FmrcDataset$State: ucar.nc2.ft.fmrc.FmrcInvLite lite>;

        $r4 = virtualinvoke $r3.<ucar.nc2.ft.fmrc.FmrcInvLite: java.util.List getRunDates()>();

        return $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    java.util.List getForecastDates()
    {
        java.lang.Throwable $r5;
        ucar.nc2.ft.fmrc.FmrcInvLite $r3;
        java.util.List $r4;
        ucar.nc2.ft.fmrc.FmrcDataset$State r2;
        ucar.nc2.ft.fmrc.FmrcDataset r0;
        java.lang.Object $r1;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcDataset;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcDataset: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        r2 = r0.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.ft.fmrc.FmrcDataset$State state>;

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

     label5:
        $r3 = r2.<ucar.nc2.ft.fmrc.FmrcDataset$State: ucar.nc2.ft.fmrc.FmrcInvLite lite>;

        $r4 = virtualinvoke $r3.<ucar.nc2.ft.fmrc.FmrcInvLite: java.util.List getForecastDates()>();

        return $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    double[] getForecastOffsets()
    {
        java.lang.Throwable $r5;
        ucar.nc2.ft.fmrc.FmrcInvLite $r3;
        ucar.nc2.ft.fmrc.FmrcDataset$State r2;
        ucar.nc2.ft.fmrc.FmrcDataset r0;
        double[] $r4;
        java.lang.Object $r1;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcDataset;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcDataset: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        r2 = r0.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.ft.fmrc.FmrcDataset$State state>;

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

     label5:
        $r3 = r2.<ucar.nc2.ft.fmrc.FmrcDataset$State: ucar.nc2.ft.fmrc.FmrcInvLite lite>;

        $r4 = virtualinvoke $r3.<ucar.nc2.ft.fmrc.FmrcInvLite: double[] getForecastOffsets()>();

        return $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public ucar.nc2.units.DateRange getDateRangeForRun(java.util.Date)
    {
        java.lang.Throwable $r17;
        java.util.Date r3, $r10, $r11, $r13, $r14;
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset r16;
        ucar.nc2.ft.fmrc.FmrcDataset$State r2;
        int $i0, $i1, i2;
        boolean $z0, $z1;
        double $d0, d1, d2;
        java.util.Iterator $r7;
        ucar.nc2.ft.fmrc.FmrcDataset r0;
        ucar.nc2.ft.fmrc.FmrcInvLite $r4, $r5, $r9, $r12;
        java.util.List $r6;
        ucar.nc2.units.DateRange $r8;
        java.lang.Object $r1, $r15;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcDataset;

        r3 := @parameter0: java.util.Date;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcDataset: java.lang.Object lock>;

        entermonitor $r1;

     label01:
        r2 = r0.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.ft.fmrc.FmrcDataset$State state>;

        exitmonitor $r1;

     label02:
        goto label05;

     label03:
        $r17 := @caughtexception;

        exitmonitor $r1;

     label04:
        throw $r17;

     label05:
        $r4 = r2.<ucar.nc2.ft.fmrc.FmrcDataset$State: ucar.nc2.ft.fmrc.FmrcInvLite lite>;

        $i0 = virtualinvoke $r4.<ucar.nc2.ft.fmrc.FmrcInvLite: int findRunIndex(java.util.Date)>(r3);

        if $i0 >= 0 goto label06;

        return null;

     label06:
        d1 = 1.7976931348623157E308;

        d2 = 4.9E-324;

        $r5 = r2.<ucar.nc2.ft.fmrc.FmrcDataset$State: ucar.nc2.ft.fmrc.FmrcInvLite lite>;

        $r6 = $r5.<ucar.nc2.ft.fmrc.FmrcInvLite: java.util.List gridSets>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r15 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r16 = (ucar.nc2.ft.fmrc.FmrcInvLite$Gridset) $r15;

        i2 = 0;

     label08:
        $i1 = r16.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets>;

        if i2 >= $i1 goto label11;

        $d0 = virtualinvoke r16.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: double getTimeCoord(int,int)>($i0, i2);

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z1 == 0 goto label09;

        goto label10;

     label09:
        d1 = staticinvoke <java.lang.Math: double min(double,double)>(d1, $d0);

        d2 = staticinvoke <java.lang.Math: double max(double,double)>(d2, $d0);

     label10:
        i2 = i2 + 1;

        goto label08;

     label11:
        goto label07;

     label12:
        $r8 = new ucar.nc2.units.DateRange;

        $r9 = r2.<ucar.nc2.ft.fmrc.FmrcDataset$State: ucar.nc2.ft.fmrc.FmrcInvLite lite>;

        $r10 = $r9.<ucar.nc2.ft.fmrc.FmrcInvLite: java.util.Date base>;

        $r11 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInv: java.util.Date makeOffsetDate(java.util.Date,double)>($r10, d1);

        $r12 = r2.<ucar.nc2.ft.fmrc.FmrcDataset$State: ucar.nc2.ft.fmrc.FmrcInvLite lite>;

        $r13 = $r12.<ucar.nc2.ft.fmrc.FmrcInvLite: java.util.Date base>;

        $r14 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInv: java.util.Date makeOffsetDate(java.util.Date,double)>($r13, d2);

        specialinvoke $r8.<ucar.nc2.units.DateRange: void <init>(java.util.Date,java.util.Date)>($r11, $r14);

        return $r8;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
    }

    public ucar.nc2.units.DateRange getDateRangeForOffset(double)
    {
        java.lang.Throwable $r12;
        java.util.Date $r7, $r8, $r10, $r11;
        ucar.nc2.ft.fmrc.FmrcDataset$State r2;
        int $i0, $i1;
        double d0;
        ucar.nc2.ft.fmrc.FmrcDataset r0;
        ucar.nc2.ft.fmrc.FmrcInvLite $r3;
        java.util.List $r4;
        ucar.nc2.units.DateRange $r5;
        java.lang.Object $r1, $r6, $r9;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcDataset;

        d0 := @parameter0: double;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcDataset: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        r2 = r0.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.ft.fmrc.FmrcDataset$State state>;

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r12 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r12;

     label5:
        $r3 = r2.<ucar.nc2.ft.fmrc.FmrcDataset$State: ucar.nc2.ft.fmrc.FmrcInvLite lite>;

        $r4 = virtualinvoke $r3.<ucar.nc2.ft.fmrc.FmrcInvLite: java.util.List getRunDates()>();

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $r5 = new ucar.nc2.units.DateRange;

        $r6 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (java.util.Date) $r6;

        $r8 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInv: java.util.Date makeOffsetDate(java.util.Date,double)>($r7, d0);

        $i1 = $i0 - 1;

        $r9 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i1);

        $r10 = (java.util.Date) $r9;

        $r11 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInv: java.util.Date makeOffsetDate(java.util.Date,double)>($r10, d0);

        specialinvoke $r5.<ucar.nc2.units.DateRange: void <init>(java.util.Date,java.util.Date)>($r8, $r11);

        return $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    ucar.nc2.dt.GridDataset getNetcdfDataset2D(ucar.nc2.dataset.NetcdfDataset) throws java.io.IOException
    {
        java.lang.Throwable $r7;
        ucar.nc2.ft.fmrc.FmrcDataset r0;
        ucar.nc2.dt.GridDataset $r6;
        ucar.nc2.ft.fmrc.FmrcInvLite $r4;
        ucar.nc2.ft.fmrc.FmrcDataset$State r2;
        java.lang.Object $r1;
        ucar.nc2.dataset.NetcdfDataset r3, $r5;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcDataset;

        r3 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcDataset: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        r2 = r0.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.ft.fmrc.FmrcDataset$State state>;

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r7;

     label5:
        $r5 = r2.<ucar.nc2.ft.fmrc.FmrcDataset$State: ucar.nc2.dataset.NetcdfDataset proto>;

        $r4 = r2.<ucar.nc2.ft.fmrc.FmrcDataset$State: ucar.nc2.ft.fmrc.FmrcInvLite lite>;

        $r6 = specialinvoke r0.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.dt.GridDataset buildDataset2D(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.dataset.NetcdfDataset,ucar.nc2.ft.fmrc.FmrcInvLite)>(r3, $r5, $r4);

        return $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    ucar.nc2.dt.GridDataset getBest() throws java.io.IOException
    {
        java.lang.Throwable $r8;
        ucar.nc2.ft.fmrc.FmrcDataset r0;
        ucar.nc2.ft.fmrc.TimeInventory $r6;
        ucar.nc2.dt.GridDataset $r7;
        ucar.nc2.ft.fmrc.FmrcInvLite $r3, $r5;
        ucar.nc2.ft.fmrc.FmrcDataset$State r2;
        java.lang.Object $r1;
        ucar.nc2.dataset.NetcdfDataset $r4;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcDataset;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcDataset: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        r2 = r0.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.ft.fmrc.FmrcDataset$State state>;

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r8;

     label5:
        $r4 = r2.<ucar.nc2.ft.fmrc.FmrcDataset$State: ucar.nc2.dataset.NetcdfDataset proto>;

        $r5 = r2.<ucar.nc2.ft.fmrc.FmrcDataset$State: ucar.nc2.ft.fmrc.FmrcInvLite lite>;

        $r3 = r2.<ucar.nc2.ft.fmrc.FmrcDataset$State: ucar.nc2.ft.fmrc.FmrcInvLite lite>;

        $r6 = virtualinvoke $r3.<ucar.nc2.ft.fmrc.FmrcInvLite: ucar.nc2.ft.fmrc.TimeInventory makeBestDatasetInventory()>();

        $r7 = specialinvoke r0.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.dt.GridDataset buildDataset1D(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.ft.fmrc.FmrcInvLite,ucar.nc2.ft.fmrc.TimeInventory)>($r4, $r5, $r6);

        return $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    ucar.nc2.dt.GridDataset getBest(thredds.inventory.FeatureCollectionConfig$BestDataset) throws java.io.IOException
    {
        java.lang.Throwable $r9;
        ucar.nc2.ft.fmrc.FmrcDataset r0;
        ucar.nc2.ft.fmrc.TimeInventory $r7;
        ucar.nc2.dt.GridDataset $r8;
        ucar.nc2.ft.fmrc.FmrcInvLite $r4, $r6;
        ucar.nc2.ft.fmrc.FmrcDataset$State r2;
        java.lang.Object $r1;
        thredds.inventory.FeatureCollectionConfig$BestDataset r3;
        ucar.nc2.dataset.NetcdfDataset $r5;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcDataset;

        r3 := @parameter0: thredds.inventory.FeatureCollectionConfig$BestDataset;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcDataset: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        r2 = r0.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.ft.fmrc.FmrcDataset$State state>;

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r9;

     label5:
        $r5 = r2.<ucar.nc2.ft.fmrc.FmrcDataset$State: ucar.nc2.dataset.NetcdfDataset proto>;

        $r6 = r2.<ucar.nc2.ft.fmrc.FmrcDataset$State: ucar.nc2.ft.fmrc.FmrcInvLite lite>;

        $r4 = r2.<ucar.nc2.ft.fmrc.FmrcDataset$State: ucar.nc2.ft.fmrc.FmrcInvLite lite>;

        $r7 = virtualinvoke $r4.<ucar.nc2.ft.fmrc.FmrcInvLite: ucar.nc2.ft.fmrc.TimeInventory makeBestDatasetInventory(thredds.inventory.FeatureCollectionConfig$BestDataset)>(r3);

        $r8 = specialinvoke r0.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.dt.GridDataset buildDataset1D(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.ft.fmrc.FmrcInvLite,ucar.nc2.ft.fmrc.TimeInventory)>($r5, $r6, $r7);

        return $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    ucar.nc2.dt.GridDataset getRunTimeDataset(java.util.Date) throws java.io.IOException
    {
        java.lang.Throwable $r9;
        java.util.Date r3;
        ucar.nc2.ft.fmrc.FmrcDataset r0;
        ucar.nc2.ft.fmrc.TimeInventory $r7;
        ucar.nc2.dt.GridDataset $r8;
        ucar.nc2.ft.fmrc.FmrcInvLite $r4, $r6;
        ucar.nc2.ft.fmrc.FmrcDataset$State r2;
        java.lang.Object $r1;
        ucar.nc2.dataset.NetcdfDataset $r5;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcDataset;

        r3 := @parameter0: java.util.Date;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcDataset: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        r2 = r0.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.ft.fmrc.FmrcDataset$State state>;

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r9;

     label5:
        $r5 = r2.<ucar.nc2.ft.fmrc.FmrcDataset$State: ucar.nc2.dataset.NetcdfDataset proto>;

        $r6 = r2.<ucar.nc2.ft.fmrc.FmrcDataset$State: ucar.nc2.ft.fmrc.FmrcInvLite lite>;

        $r4 = r2.<ucar.nc2.ft.fmrc.FmrcDataset$State: ucar.nc2.ft.fmrc.FmrcInvLite lite>;

        $r7 = virtualinvoke $r4.<ucar.nc2.ft.fmrc.FmrcInvLite: ucar.nc2.ft.fmrc.TimeInventory makeRunTimeDatasetInventory(java.util.Date)>(r3);

        $r8 = specialinvoke r0.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.dt.GridDataset buildDataset1D(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.ft.fmrc.FmrcInvLite,ucar.nc2.ft.fmrc.TimeInventory)>($r5, $r6, $r7);

        return $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    ucar.nc2.dt.GridDataset getConstantForecastDataset(java.util.Date) throws java.io.IOException
    {
        java.lang.Throwable $r9;
        java.util.Date r3;
        ucar.nc2.ft.fmrc.FmrcDataset r0;
        ucar.nc2.ft.fmrc.TimeInventory $r7;
        ucar.nc2.dt.GridDataset $r8;
        ucar.nc2.ft.fmrc.FmrcInvLite $r4, $r6;
        ucar.nc2.ft.fmrc.FmrcDataset$State r2;
        java.lang.Object $r1;
        ucar.nc2.dataset.NetcdfDataset $r5;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcDataset;

        r3 := @parameter0: java.util.Date;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcDataset: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        r2 = r0.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.ft.fmrc.FmrcDataset$State state>;

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r9;

     label5:
        $r5 = r2.<ucar.nc2.ft.fmrc.FmrcDataset$State: ucar.nc2.dataset.NetcdfDataset proto>;

        $r6 = r2.<ucar.nc2.ft.fmrc.FmrcDataset$State: ucar.nc2.ft.fmrc.FmrcInvLite lite>;

        $r4 = r2.<ucar.nc2.ft.fmrc.FmrcDataset$State: ucar.nc2.ft.fmrc.FmrcInvLite lite>;

        $r7 = virtualinvoke $r4.<ucar.nc2.ft.fmrc.FmrcInvLite: ucar.nc2.ft.fmrc.TimeInventory getConstantForecastDataset(java.util.Date)>(r3);

        $r8 = specialinvoke r0.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.dt.GridDataset buildDataset1D(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.ft.fmrc.FmrcInvLite,ucar.nc2.ft.fmrc.TimeInventory)>($r5, $r6, $r7);

        return $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    ucar.nc2.dt.GridDataset getConstantOffsetDataset(double) throws java.io.IOException
    {
        java.lang.Throwable $r8;
        ucar.nc2.ft.fmrc.FmrcDataset r0;
        ucar.nc2.ft.fmrc.TimeInventory $r6;
        ucar.nc2.dt.GridDataset $r7;
        ucar.nc2.ft.fmrc.FmrcInvLite $r3, $r5;
        ucar.nc2.ft.fmrc.FmrcDataset$State r2;
        java.lang.Object $r1;
        ucar.nc2.dataset.NetcdfDataset $r4;
        double d0;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcDataset;

        d0 := @parameter0: double;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcDataset: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        r2 = r0.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.ft.fmrc.FmrcDataset$State state>;

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r8;

     label5:
        $r4 = r2.<ucar.nc2.ft.fmrc.FmrcDataset$State: ucar.nc2.dataset.NetcdfDataset proto>;

        $r5 = r2.<ucar.nc2.ft.fmrc.FmrcDataset$State: ucar.nc2.ft.fmrc.FmrcInvLite lite>;

        $r3 = r2.<ucar.nc2.ft.fmrc.FmrcDataset$State: ucar.nc2.ft.fmrc.FmrcInvLite lite>;

        $r6 = virtualinvoke $r3.<ucar.nc2.ft.fmrc.FmrcInvLite: ucar.nc2.ft.fmrc.TimeInventory getConstantOffsetDataset(double)>(d0);

        $r7 = specialinvoke r0.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.dt.GridDataset buildDataset1D(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.ft.fmrc.FmrcInvLite,ucar.nc2.ft.fmrc.TimeInventory)>($r4, $r5, $r6);

        return $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void setInventory(ucar.nc2.ft.fmrc.FmrcInv, boolean) throws java.io.IOException
    {
        thredds.inventory.FeatureCollectionConfig $r3;
        java.lang.Throwable $r7;
        ucar.nc2.ft.fmrc.FmrcDataset r0;
        ucar.nc2.ft.fmrc.FmrcInv r2;
        ucar.nc2.ft.fmrc.FmrcInvLite $r9;
        ucar.nc2.ft.fmrc.FmrcDataset$State $r1, $r5, $r6;
        java.lang.Object $r10;
        thredds.inventory.FeatureCollectionConfig$ProtoConfig $r4;
        ucar.nc2.dataset.NetcdfDataset r8;
        boolean z0;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcDataset;

        r2 := @parameter0: ucar.nc2.ft.fmrc.FmrcInv;

        z0 := @parameter1: boolean;

        r8 = null;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.ft.fmrc.FmrcDataset$State state>;

        if $r1 == null goto label1;

        if z0 == 0 goto label2;

     label1:
        $r3 = r0.<ucar.nc2.ft.fmrc.FmrcDataset: thredds.inventory.FeatureCollectionConfig config>;

        $r4 = $r3.<thredds.inventory.FeatureCollectionConfig: thredds.inventory.FeatureCollectionConfig$ProtoConfig protoConfig>;

        r8 = specialinvoke r0.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.dataset.NetcdfDataset buildProto(ucar.nc2.ft.fmrc.FmrcInv,thredds.inventory.FeatureCollectionConfig$ProtoConfig)>(r2, $r4);

     label2:
        $r9 = new ucar.nc2.ft.fmrc.FmrcInvLite;

        specialinvoke $r9.<ucar.nc2.ft.fmrc.FmrcInvLite: void <init>(ucar.nc2.ft.fmrc.FmrcInv)>(r2);

        $r10 = r0.<ucar.nc2.ft.fmrc.FmrcDataset: java.lang.Object lock>;

        entermonitor $r10;

     label3:
        if r8 != null goto label4;

        $r6 = r0.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.ft.fmrc.FmrcDataset$State state>;

        r8 = $r6.<ucar.nc2.ft.fmrc.FmrcDataset$State: ucar.nc2.dataset.NetcdfDataset proto>;

     label4:
        $r5 = new ucar.nc2.ft.fmrc.FmrcDataset$State;

        specialinvoke $r5.<ucar.nc2.ft.fmrc.FmrcDataset$State: void <init>(ucar.nc2.ft.fmrc.FmrcDataset,ucar.nc2.dataset.NetcdfDataset,ucar.nc2.ft.fmrc.FmrcInvLite,ucar.nc2.ft.fmrc.FmrcDataset$1)>(r0, r8, $r9, null);

        r0.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.ft.fmrc.FmrcDataset$State state> = $r5;

        exitmonitor $r10;

     label5:
        goto label8;

     label6:
        $r7 := @caughtexception;

        exitmonitor $r10;

     label7:
        throw $r7;

     label8:
        return;

        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private ucar.nc2.dataset.NetcdfDataset buildProto(ucar.nc2.ft.fmrc.FmrcInv, thredds.inventory.FeatureCollectionConfig$ProtoConfig) throws java.io.IOException
    {
        ucar.nc2.dt.GridDatatype r164;
        byte $b4;
        ucar.nc2.constants.FeatureType $r13, $r16;
        ucar.nc2.Attribute $r24, $r38, $r39, $r40, $r41, $r68, $r180, $r181, $r182, $r184, $r191, $r192, $r193, $r194, $r195, $r196, $r197, $r198, $r199;
        java.lang.StringBuilder $r20, $r22, $r95, $r98, $r100, $r101, $r110, $r112, $r122, $r124, $r128, $r130, $r131, $r133, $r134, $r136, $r144, $r146, $r150, $r152, $r173, $r174, $r178, $r179, $r183, $r186, $r189, $r190;
        long $l3, $l10;
        java.util.Calendar $r7;
        ucar.nc2.ft.fmrc.FmrcDataset r35;
        ucar.ma2.Array $r107;
        org.jdom.Element $r34, $r36;
        java.util.Date $r132, $r139;
        java.util.Random $r176;
        ucar.nc2.ft.fmrc.FmrcInv r1;
        int[] $r5;
        java.util.TimeZone $r8;
        int $i0, $i1, $i2, $i5, $i6, $i7, $i8, $i9, $i11, $i12, i13, i14, i15, $i16, $i17;
        ucar.nc2.Variable $r44, $r57, $r84, r162, r163, r171;
        org.slf4j.Logger $r97, $r109, $r119, $r121, $r127, $r143, $r160;
        java.lang.Object $r37, $r42, $r55, $r82, $r89, $r103, $r106, $r114, $r138, $r156;
        ucar.nc2.ft.fmrc.GridDatasetInv r161;
        ucar.nc2.dataset.CoordinateAxis r165, r167;
        ucar.nc2.constants.AxisType $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r78, $r79, $r80, $r81, $r90, $r91, $r92, $r93, $r169, $r170;
        ucar.nc2.dt.grid.GridDataset $r188;
        java.util.Set $r159;
        ucar.nc2.Group $r10, $r117, $r118;
        ucar.nc2.ft.fmrc.FmrInv r155, $r157;
        ucar.nc2.dt.GridCoordSystem $r46;
        java.lang.Throwable $r154;
        java.util.ArrayList $r185;
        java.lang.String $r6, $r14, $r17, $r21, $r23, $r43, $r50, $r56, $r69, $r77, $r83, $r88, $r94, $r99, $r102, $r104, $r111, $r113, $r115, $r123, $r125, $r129, $r135, $r137, $r140, $r145, $r147, $r151, $r153, $r168;
        ucar.nc2.dataset.NetcdfDataset $r116, $r172;
        java.lang.IllegalStateException $r175;
        ucar.nc2.dataset.TransformType $r85, $r86;
        java.util.Formatter $r187;
        thredds.inventory.FeatureCollectionConfig$ProtoChoice $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.util.List $r2, $r26, $r30, $r32, $r47, $r51, $r53;
        ucar.nc2.ft.fmrc.FmrcInv$UberGrid $r105;
        java.util.HashMap $r177;
        ucar.nc2.dataset.CoordinateTransform r166;
        thredds.inventory.FeatureCollectionConfig$ProtoConfig r3;
        java.util.Iterator $r9, $r27, $r31, $r33, $r48, $r52, $r54;

        r35 := @this: ucar.nc2.ft.fmrc.FmrcDataset;

        r1 := @parameter0: ucar.nc2.ft.fmrc.FmrcInv;

        r3 := @parameter1: thredds.inventory.FeatureCollectionConfig$ProtoConfig;

        $r172 = new ucar.nc2.dataset.NetcdfDataset;

        specialinvoke $r172.<ucar.nc2.dataset.NetcdfDataset: void <init>()>();

        $r2 = virtualinvoke r1.<ucar.nc2.ft.fmrc.FmrcInv: java.util.List getFmrInv()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 != 0 goto label01;

        $r143 = <ucar.nc2.ft.fmrc.FmrcDataset: org.slf4j.Logger logger>;

        $r173 = new java.lang.StringBuilder;

        specialinvoke $r173.<java.lang.StringBuilder: void <init>()>();

        $r144 = virtualinvoke $r173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fmrc collection is empty =");

        $r145 = virtualinvoke r1.<ucar.nc2.ft.fmrc.FmrcInv: java.lang.String getName()>();

        $r146 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r145);

        $r147 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r143.<org.slf4j.Logger: void error(java.lang.String)>($r147);

        $r175 = new java.lang.IllegalStateException;

        $r174 = new java.lang.StringBuilder;

        specialinvoke $r174.<java.lang.StringBuilder: void <init>()>();

        $r150 = virtualinvoke $r174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fmrc collection is empty =");

        $r151 = virtualinvoke r1.<ucar.nc2.ft.fmrc.FmrcInv: java.lang.String getName()>();

        $r152 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r151);

        $r153 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r175.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r153);

        throw $r175;

     label01:
        i13 = 0;

        $r5 = <ucar.nc2.ft.fmrc.FmrcDataset$1: int[] $SwitchMap$thredds$inventory$FeatureCollectionConfig$ProtoChoice>;

        $r4 = r3.<thredds.inventory.FeatureCollectionConfig$ProtoConfig: thredds.inventory.FeatureCollectionConfig$ProtoChoice choice>;

        $i1 = virtualinvoke $r4.<thredds.inventory.FeatureCollectionConfig$ProtoChoice: int ordinal()>();

        $i2 = $r5[$i1];

        tableswitch($i2)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            default: goto label10;
        };

     label02:
        i13 = 0;

        goto label10;

     label03:
        $r176 = new java.util.Random;

        $l10 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke $r176.<java.util.Random: void <init>(long)>($l10);

        $i11 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i12 = $i11 - 1;

        i13 = virtualinvoke $r176.<java.util.Random: int nextInt(int)>($i12);

        goto label10;

     label04:
        $i8 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i9 = $i8 - 2;

        i13 = staticinvoke <java.lang.Math: int max(int,int)>($i9, 0);

        goto label10;

     label05:
        $i6 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i7 = $i6 - 1;

        i13 = staticinvoke <java.lang.Math: int max(int,int)>($i7, 0);

        goto label10;

     label06:
        i14 = 0;

        $r6 = r3.<thredds.inventory.FeatureCollectionConfig$ProtoConfig: java.lang.String param>;

        if $r6 == null goto label07;

        $r140 = r3.<thredds.inventory.FeatureCollectionConfig$ProtoConfig: java.lang.String param>;

        i14 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r140);

     label07:
        $r7 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r8 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        virtualinvoke $r7.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>($r8);

        i15 = 0;

     label08:
        $i16 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i15 >= $i16 goto label10;

        $r138 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i15);

        r155 = (ucar.nc2.ft.fmrc.FmrInv) $r138;

        $r139 = virtualinvoke r155.<ucar.nc2.ft.fmrc.FmrInv: java.util.Date getRunDate()>();

        virtualinvoke $r7.<java.util.Calendar: void setTime(java.util.Date)>($r139);

        $i5 = virtualinvoke $r7.<java.util.Calendar: int get(int)>(11);

        if $i5 != i14 goto label09;

        i13 = i15;

     label09:
        i15 = i15 + 1;

        goto label08;

     label10:
        $r156 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i13);

        $r157 = (ucar.nc2.ft.fmrc.FmrInv) $r156;

        $r177 = new java.util.HashMap;

        specialinvoke $r177.<java.util.HashMap: void <init>()>();

     label11:
        $r159 = virtualinvoke $r157.<ucar.nc2.ft.fmrc.FmrInv: java.util.Set getFiles()>();

        $r160 = <ucar.nc2.ft.fmrc.FmrcDataset: org.slf4j.Logger logger>;

        $z7 = interfaceinvoke $r160.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z7 == 0 goto label12;

        $r127 = <ucar.nc2.ft.fmrc.FmrcDataset: org.slf4j.Logger logger>;

        $r178 = new java.lang.StringBuilder;

        specialinvoke $r178.<java.lang.StringBuilder: void <init>()>();

        $r128 = virtualinvoke $r178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FmrcDataset: proto= ");

        $r129 = virtualinvoke $r157.<ucar.nc2.ft.fmrc.FmrInv: java.lang.String getName()>();

        $r130 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r129);

        $r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r132 = virtualinvoke $r157.<ucar.nc2.ft.fmrc.FmrInv: java.util.Date getRunDate()>();

        $r133 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r132);

        $r134 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" collection= ");

        $r135 = virtualinvoke r1.<ucar.nc2.ft.fmrc.FmrcInv: java.lang.String getName()>();

        $r136 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r135);

        $r137 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r127.<org.slf4j.Logger: void debug(java.lang.String)>($r137);

     label12:
        $r9 = interfaceinvoke $r159.<java.util.Set: java.util.Iterator iterator()>();

     label13:
        $z8 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label15;

        $r114 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r161 = (ucar.nc2.ft.fmrc.GridDatasetInv) $r114;

        $r115 = virtualinvoke r161.<ucar.nc2.ft.fmrc.GridDatasetInv: java.lang.String getLocation()>();

        $r116 = specialinvoke r35.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.dataset.NetcdfDataset open(java.lang.String,java.util.HashMap)>($r115, $r177);

        $r117 = virtualinvoke $r116.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r118 = virtualinvoke $r172.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        specialinvoke r35.<ucar.nc2.ft.fmrc.FmrcDataset: void transferGroup(ucar.nc2.Group,ucar.nc2.Group,ucar.nc2.dataset.NetcdfDataset)>($r117, $r118, $r172);

        $r119 = <ucar.nc2.ft.fmrc.FmrcDataset: org.slf4j.Logger logger>;

        $z6 = interfaceinvoke $r119.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z6 == 0 goto label14;

        $r121 = <ucar.nc2.ft.fmrc.FmrcDataset: org.slf4j.Logger logger>;

        $r179 = new java.lang.StringBuilder;

        specialinvoke $r179.<java.lang.StringBuilder: void <init>()>();

        $r122 = virtualinvoke $r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FmrcDataset: proto dataset= ");

        $r123 = virtualinvoke r161.<ucar.nc2.ft.fmrc.GridDatasetInv: java.lang.String getLocation()>();

        $r124 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r123);

        $r125 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r121.<org.slf4j.Logger: void debug(java.lang.String)>($r125);

     label14:
        goto label13;

     label15:
        $r10 = virtualinvoke $r172.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r180 = new ucar.nc2.Attribute;

        specialinvoke $r180.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("Conventions", "CF-1.4, _Coordinates");

        virtualinvoke $r10.<ucar.nc2.Group: void addAttribute(ucar.nc2.Attribute)>($r180);

        $r181 = new ucar.nc2.Attribute;

        $r13 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType GRID>;

        $r14 = virtualinvoke $r13.<ucar.nc2.constants.FeatureType: java.lang.String toString()>();

        specialinvoke $r181.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("cdm_data_type", $r14);

        virtualinvoke $r10.<ucar.nc2.Group: void addAttribute(ucar.nc2.Attribute)>($r181);

        $r182 = new ucar.nc2.Attribute;

        $r16 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType GRID>;

        $r17 = virtualinvoke $r16.<ucar.nc2.constants.FeatureType: java.lang.String toString()>();

        specialinvoke $r182.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("CF:feature_type", $r17);

        virtualinvoke $r10.<ucar.nc2.Group: void addAttribute(ucar.nc2.Attribute)>($r182);

        $r184 = new ucar.nc2.Attribute;

        $r183 = new java.lang.StringBuilder;

        specialinvoke $r183.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r183.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Proto ");

        $r21 = virtualinvoke r1.<ucar.nc2.ft.fmrc.FmrcInv: java.lang.String getName()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r184.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("location", $r23);

        virtualinvoke $r10.<ucar.nc2.Group: void addAttribute(ucar.nc2.Attribute)>($r184);

        $r24 = virtualinvoke $r10.<ucar.nc2.Group: ucar.nc2.Attribute findAttribute(java.lang.String)>("_CoordinateModelRunDate");

        virtualinvoke $r10.<ucar.nc2.Group: boolean remove(ucar.nc2.Attribute)>($r24);

        $r185 = new java.util.ArrayList;

        $r26 = virtualinvoke $r10.<ucar.nc2.Group: java.util.List getVariables()>();

        specialinvoke $r185.<java.util.ArrayList: void <init>(java.util.Collection)>($r26);

        $r27 = interfaceinvoke $r185.<java.util.List: java.util.Iterator iterator()>();

     label16:
        $z0 = interfaceinvoke $r27.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label19;

        $r103 = interfaceinvoke $r27.<java.util.Iterator: java.lang.Object next()>();

        r162 = (ucar.nc2.Variable) $r103;

        $r104 = virtualinvoke r162.<ucar.nc2.Variable: java.lang.String getName()>();

        $r105 = virtualinvoke r1.<ucar.nc2.ft.fmrc.FmrcInv: ucar.nc2.ft.fmrc.FmrcInv$UberGrid findUberGrid(java.lang.String)>($r104);

        if $r105 != null goto label18;

        $r106 = virtualinvoke r162.<ucar.nc2.Variable: java.lang.Object getSPobject()>();

        r163 = (ucar.nc2.Variable) $r106;

        $l3 = virtualinvoke r163.<ucar.nc2.Variable: long getSize()>();

        $b4 = $l3 cmp 10000000L;

        $i17 = (int) $b4;

        if $i17 <= 0 goto label17;

        $r109 = <ucar.nc2.ft.fmrc.FmrcDataset: org.slf4j.Logger logger>;

        $r186 = new java.lang.StringBuilder;

        specialinvoke $r186.<java.lang.StringBuilder: void <init>()>();

        $r110 = virtualinvoke $r186.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FMRCDataset build Proto cache >10M var= ");

        $r111 = virtualinvoke r163.<ucar.nc2.Variable: java.lang.String getNameAndDimensions()>();

        $r112 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r111);

        $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r109.<org.slf4j.Logger: void info(java.lang.String)>($r113);

     label17:
        $r107 = virtualinvoke r163.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        virtualinvoke r162.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array)>($r107);

     label18:
        virtualinvoke r162.<ucar.nc2.Variable: void setSPobject(java.lang.Object)>(null);

        goto label16;

     label19:
        virtualinvoke $r172.<ucar.nc2.dataset.NetcdfDataset: void finish()>();

        virtualinvoke $r172.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordSysBuilderIF enhance()>();

        $r187 = new java.util.Formatter;

        specialinvoke $r187.<java.util.Formatter: void <init>()>();

        $r188 = new ucar.nc2.dt.grid.GridDataset;

        specialinvoke $r188.<ucar.nc2.dt.grid.GridDataset: void <init>(ucar.nc2.dataset.NetcdfDataset,java.util.Formatter)>($r172, $r187);

        $r30 = interfaceinvoke $r188.<ucar.nc2.dt.GridDataset: java.util.List getGrids()>();

        $r31 = interfaceinvoke $r30.<java.util.List: java.util.Iterator iterator()>();

     label20:
        $z9 = interfaceinvoke $r31.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label37;

        $r42 = interfaceinvoke $r31.<java.util.Iterator: java.lang.Object next()>();

        r164 = (ucar.nc2.dt.GridDatatype) $r42;

        $r43 = interfaceinvoke r164.<ucar.nc2.dt.GridDatatype: java.lang.String getName()>();

        $r44 = virtualinvoke $r172.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>($r43);

        if $r44 != null goto label21;

        $r97 = <ucar.nc2.ft.fmrc.FmrcDataset: org.slf4j.Logger logger>;

        $r189 = new java.lang.StringBuilder;

        specialinvoke $r189.<java.lang.StringBuilder: void <init>()>();

        $r98 = virtualinvoke $r189.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FmrcDataset cant find ");

        $r99 = interfaceinvoke r164.<ucar.nc2.dt.GridDatatype: java.lang.String getName()>();

        $r100 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r99);

        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in proto gds ");

        $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r97.<org.slf4j.Logger: void warn(java.lang.String)>($r102);

        goto label20;

     label21:
        $r190 = new java.lang.StringBuilder;

        specialinvoke $r190.<java.lang.StringBuilder: void <init>()>();

        $r46 = interfaceinvoke r164.<ucar.nc2.dt.GridDatatype: ucar.nc2.dt.GridCoordSystem getCoordinateSystem()>();

        $r47 = interfaceinvoke $r46.<ucar.nc2.dt.GridCoordSystem: java.util.List getCoordinateAxes()>();

        $r48 = interfaceinvoke $r47.<java.util.List: java.util.Iterator iterator()>();

     label22:
        $z2 = interfaceinvoke $r48.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label24;

        $r89 = interfaceinvoke $r48.<java.util.Iterator: java.lang.Object next()>();

        r165 = (ucar.nc2.dataset.CoordinateAxis) $r89;

        $r90 = virtualinvoke r165.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.constants.AxisType getAxisType()>();

        $r91 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        if $r90 == $r91 goto label23;

        $r92 = virtualinvoke r165.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.constants.AxisType getAxisType()>();

        $r93 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType RunTime>;

        if $r92 == $r93 goto label23;

        $r94 = virtualinvoke r165.<ucar.nc2.dataset.CoordinateAxis: java.lang.String getName()>();

        $r95 = virtualinvoke $r190.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r94);

        virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label23:
        goto label22;

     label24:
        $r191 = new ucar.nc2.Attribute;

        $r50 = virtualinvoke $r190.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r191.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("coordinates", $r50);

        virtualinvoke $r44.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r191);

        $r51 = interfaceinvoke $r46.<ucar.nc2.dt.GridCoordSystem: java.util.List getCoordinateTransforms()>();

        $r52 = interfaceinvoke $r51.<java.util.List: java.util.Iterator iterator()>();

     label25:
        $z3 = interfaceinvoke $r52.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label27;

        $r82 = interfaceinvoke $r52.<java.util.Iterator: java.lang.Object next()>();

        r166 = (ucar.nc2.dataset.CoordinateTransform) $r82;

        $r83 = virtualinvoke r166.<ucar.nc2.dataset.CoordinateTransform: java.lang.String getName()>();

        $r84 = virtualinvoke $r172.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>($r83);

        if $r84 == null goto label26;

        $r85 = virtualinvoke r166.<ucar.nc2.dataset.CoordinateTransform: ucar.nc2.dataset.TransformType getTransformType()>();

        $r86 = <ucar.nc2.dataset.TransformType: ucar.nc2.dataset.TransformType Projection>;

        if $r85 != $r86 goto label26;

        $r192 = new ucar.nc2.Attribute;

        $r88 = virtualinvoke $r84.<ucar.nc2.Variable: java.lang.String getName()>();

        specialinvoke $r192.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("grid_mapping", $r88);

        virtualinvoke $r44.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r192);

     label26:
        goto label25;

     label27:
        $r53 = interfaceinvoke $r46.<ucar.nc2.dt.GridCoordSystem: java.util.List getCoordinateAxes()>();

        $r54 = interfaceinvoke $r53.<java.util.List: java.util.Iterator iterator()>();

     label28:
        $z4 = interfaceinvoke $r54.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label36;

        $r55 = interfaceinvoke $r54.<java.util.Iterator: java.lang.Object next()>();

        r167 = (ucar.nc2.dataset.CoordinateAxis) $r55;

        $r56 = virtualinvoke r167.<ucar.nc2.dataset.CoordinateAxis: java.lang.String getName()>();

        $r57 = virtualinvoke $r172.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>($r56);

        $r58 = virtualinvoke r167.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.constants.AxisType getAxisType()>();

        $r59 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        if $r58 == $r59 goto label29;

        $r78 = virtualinvoke r167.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.constants.AxisType getAxisType()>();

        $r79 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Pressure>;

        if $r78 == $r79 goto label29;

        $r80 = virtualinvoke r167.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.constants.AxisType getAxisType()>();

        $r81 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoZ>;

        if $r80 != $r81 goto label30;

     label29:
        $r168 = virtualinvoke r167.<ucar.nc2.dataset.CoordinateAxis: java.lang.String getPositive()>();

        if null == $r168 goto label30;

        $r193 = new ucar.nc2.Attribute;

        $r77 = virtualinvoke r167.<ucar.nc2.dataset.CoordinateAxis: java.lang.String getPositive()>();

        specialinvoke $r193.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("positive", $r77);

        virtualinvoke $r57.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r193);

     label30:
        $r169 = virtualinvoke r167.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.constants.AxisType getAxisType()>();

        $r170 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        if $r169 != $r170 goto label31;

        $r194 = new ucar.nc2.Attribute;

        specialinvoke $r194.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "degrees_north");

        virtualinvoke $r57.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r194);

        $r195 = new ucar.nc2.Attribute;

        specialinvoke $r195.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", "latitude");

        virtualinvoke $r57.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r195);

     label31:
        $r60 = virtualinvoke r167.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.constants.AxisType getAxisType()>();

        $r61 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        if $r60 != $r61 goto label32;

        $r196 = new ucar.nc2.Attribute;

        specialinvoke $r196.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "degrees_east");

        virtualinvoke $r57.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r196);

        $r197 = new ucar.nc2.Attribute;

        specialinvoke $r197.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", "longitude");

        virtualinvoke $r57.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r197);

     label32:
        $r62 = virtualinvoke r167.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.constants.AxisType getAxisType()>();

        $r63 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoX>;

        if $r62 != $r63 goto label33;

        $r198 = new ucar.nc2.Attribute;

        specialinvoke $r198.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", "projection_x_coordinate");

        virtualinvoke $r57.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r198);

     label33:
        $r64 = virtualinvoke r167.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.constants.AxisType getAxisType()>();

        $r65 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoY>;

        if $r64 != $r65 goto label34;

        $r199 = new ucar.nc2.Attribute;

        specialinvoke $r199.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", "projection_y_coordinate");

        virtualinvoke $r57.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r199);

     label34:
        $r66 = virtualinvoke r167.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.constants.AxisType getAxisType()>();

        $r67 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        if $r66 != $r67 goto label35;

        $r68 = virtualinvoke r167.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute findAttribute(java.lang.String)>("bounds");

        if $r68 == null goto label35;

        $z5 = virtualinvoke $r68.<ucar.nc2.Attribute: boolean isString()>();

        if $z5 == 0 goto label35;

        $r69 = virtualinvoke $r68.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        virtualinvoke $r172.<ucar.nc2.dataset.NetcdfDataset: boolean removeVariable(ucar.nc2.Group,java.lang.String)>(null, $r69);

     label35:
        goto label28;

     label36:
        goto label20;

     label37:
        $r32 = virtualinvoke $r172.<ucar.nc2.dataset.NetcdfDataset: java.util.List getVariables()>();

        $r33 = interfaceinvoke $r32.<java.util.List: java.util.Iterator iterator()>();

     label38:
        $z1 = interfaceinvoke $r33.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label43;

        $r37 = interfaceinvoke $r33.<java.util.Iterator: java.lang.Object next()>();

        r171 = (ucar.nc2.Variable) $r37;

        $r38 = virtualinvoke r171.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>("_CoordinateAxes");

        if null == $r38 goto label39;

        virtualinvoke r171.<ucar.nc2.Variable: boolean remove(ucar.nc2.Attribute)>($r38);

     label39:
        $r39 = virtualinvoke r171.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>("_CoordinateSystems");

        if null == $r39 goto label40;

        virtualinvoke r171.<ucar.nc2.Variable: boolean remove(ucar.nc2.Attribute)>($r39);

     label40:
        $r40 = virtualinvoke r171.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>("_CoordinateSystemFor");

        if null == $r40 goto label41;

        virtualinvoke r171.<ucar.nc2.Variable: boolean remove(ucar.nc2.Attribute)>($r40);

     label41:
        $r41 = virtualinvoke r171.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>("_CoordinateTransforms");

        if null == $r41 goto label42;

        virtualinvoke r171.<ucar.nc2.Variable: boolean remove(ucar.nc2.Attribute)>($r41);

     label42:
        goto label38;

     label43:
        $r34 = r3.<thredds.inventory.FeatureCollectionConfig$ProtoConfig: org.jdom.Element outerNcml>;

        if $r34 == null goto label44;

        $r36 = r3.<thredds.inventory.FeatureCollectionConfig$ProtoConfig: org.jdom.Element outerNcml>;

        staticinvoke <ucar.nc2.ncml.NcMLReader: ucar.nc2.dataset.NetcdfDataset mergeNcMLdirect(ucar.nc2.dataset.NetcdfDataset,org.jdom.Element)>($r172, $r36);

     label44:
        specialinvoke r35.<ucar.nc2.ft.fmrc.FmrcDataset: void closeAll(java.util.HashMap)>($r177);

        return $r172;

     label45:
        $r154 := @caughtexception;

     label46:
        specialinvoke r35.<ucar.nc2.ft.fmrc.FmrcDataset: void closeAll(java.util.HashMap)>($r177);

        throw $r154;

        catch java.lang.Throwable from label11 to label44 with label45;
        catch java.lang.Throwable from label45 to label46 with label45;
    }

    private void transferGroup(ucar.nc2.Group, ucar.nc2.Group, ucar.nc2.dataset.NetcdfDataset) throws java.io.IOException
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        ucar.nc2.dataset.VariableDS $r22, $r34;
        ucar.ma2.DataType $r24;
        ucar.nc2.Group r0, r1, $r10, $r13, r43, r44;
        java.util.List $r2, $r4, $r6, $r15;
        int $i0;
        ucar.nc2.Variable $r21, r41, r42;
        java.lang.String $r9, $r14, $r20, $r23, $r25, $r26, $r27, $r30, $r31, $r32, $r33, $r36, $r39;
        java.util.Iterator $r3, $r5, $r7, $r16;
        ucar.nc2.ft.fmrc.FmrcDataset r11;
        ucar.ma2.Array $r28;
        ucar.nc2.EnumTypedef r18;
        ucar.nc2.dataset.StructureDS $r29;
        java.lang.Object $r8, $r17, $r19, $r35;
        ucar.nc2.Dimension $r37, $r38, r40;
        ucar.nc2.dataset.NetcdfDataset r12;

        r11 := @this: ucar.nc2.ft.fmrc.FmrcDataset;

        r0 := @parameter0: ucar.nc2.Group;

        r1 := @parameter1: ucar.nc2.Group;

        r12 := @parameter2: ucar.nc2.dataset.NetcdfDataset;

        staticinvoke <ucar.nc2.dataset.DatasetConstructor: void transferGroupAttributes(ucar.nc2.Group,ucar.nc2.Group)>(r0, r1);

        $r2 = virtualinvoke r0.<ucar.nc2.Group: java.util.List getDimensions()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r35 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r40 = (ucar.nc2.Dimension) $r35;

        $r36 = virtualinvoke r40.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r37 = virtualinvoke r1.<ucar.nc2.Group: ucar.nc2.Dimension findDimensionLocal(java.lang.String)>($r36);

        if null != $r37 goto label02;

        $r38 = new ucar.nc2.Dimension;

        $r39 = virtualinvoke r40.<ucar.nc2.Dimension: java.lang.String getName()>();

        $i0 = virtualinvoke r40.<ucar.nc2.Dimension: int getLength()>();

        $z6 = virtualinvoke r40.<ucar.nc2.Dimension: boolean isShared()>();

        $z7 = virtualinvoke r40.<ucar.nc2.Dimension: boolean isUnlimited()>();

        $z8 = virtualinvoke r40.<ucar.nc2.Dimension: boolean isVariableLength()>();

        specialinvoke $r38.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean,boolean,boolean)>($r39, $i0, $z6, $z7, $z8);

        virtualinvoke r1.<ucar.nc2.Group: void addDimension(ucar.nc2.Dimension)>($r38);

     label02:
        goto label01;

     label03:
        $r4 = virtualinvoke r0.<ucar.nc2.Group: java.util.List getVariables()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r19 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r41 = (ucar.nc2.Variable) $r19;

        $r20 = virtualinvoke r41.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r21 = virtualinvoke r1.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>($r20);

        if null != $r21 goto label08;

        $z4 = r41 instanceof ucar.nc2.Structure;

        if $z4 == 0 goto label05;

        $r29 = new ucar.nc2.dataset.StructureDS;

        $r30 = virtualinvoke r41.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r31 = virtualinvoke r41.<ucar.nc2.Variable: java.lang.String getDimensionsString()>();

        $r32 = virtualinvoke r41.<ucar.nc2.Variable: java.lang.String getUnitsString()>();

        $r33 = virtualinvoke r41.<ucar.nc2.Variable: java.lang.String getDescription()>();

        specialinvoke $r29.<ucar.nc2.dataset.StructureDS: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r12, r1, null, $r30, $r31, $r32, $r33);

        r42 = $r29;

        goto label06;

     label05:
        $r22 = new ucar.nc2.dataset.VariableDS;

        $r23 = virtualinvoke r41.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r24 = virtualinvoke r41.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r25 = virtualinvoke r41.<ucar.nc2.Variable: java.lang.String getDimensionsString()>();

        $r26 = virtualinvoke r41.<ucar.nc2.Variable: java.lang.String getUnitsString()>();

        $r27 = virtualinvoke r41.<ucar.nc2.Variable: java.lang.String getDescription()>();

        specialinvoke $r22.<ucar.nc2.dataset.VariableDS: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r12, r1, null, $r23, $r24, $r25, $r26, $r27);

        r42 = $r22;

     label06:
        staticinvoke <ucar.nc2.dataset.DatasetConstructor: void transferVariableAttributes(ucar.nc2.Variable,ucar.nc2.Variable)>(r41, r42);

        $r34 = (ucar.nc2.dataset.VariableDS) r41;

        virtualinvoke r42.<ucar.nc2.Variable: void setSPobject(java.lang.Object)>($r34);

        $z5 = virtualinvoke $r34.<ucar.nc2.dataset.VariableDS: boolean hasCachedDataRecurse()>();

        if $z5 == 0 goto label07;

        $r28 = virtualinvoke $r34.<ucar.nc2.dataset.VariableDS: ucar.ma2.Array read()>();

        virtualinvoke r42.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array)>($r28);

     label07:
        virtualinvoke r1.<ucar.nc2.Group: void addVariable(ucar.nc2.Variable)>(r42);

     label08:
        goto label04;

     label09:
        $r6 = virtualinvoke r0.<ucar.nc2.Group: java.util.List getGroups()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z2 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label13;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r43 = (ucar.nc2.Group) $r8;

        $r9 = virtualinvoke r43.<ucar.nc2.Group: java.lang.String getShortName()>();

        $r10 = virtualinvoke r1.<ucar.nc2.Group: ucar.nc2.Group findGroup(java.lang.String)>($r9);

        r44 = $r10;

        if null != $r10 goto label12;

        $r13 = new ucar.nc2.Group;

        $r14 = virtualinvoke r43.<ucar.nc2.Group: java.lang.String getShortName()>();

        specialinvoke $r13.<ucar.nc2.Group: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,java.lang.String)>(r12, r1, $r14);

        r44 = $r13;

        virtualinvoke r1.<ucar.nc2.Group: void addGroup(ucar.nc2.Group)>($r13);

        $r15 = virtualinvoke r43.<ucar.nc2.Group: java.util.List getEnumTypedefs()>();

        $r16 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z3 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label12;

        $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r18 = (ucar.nc2.EnumTypedef) $r17;

        virtualinvoke r1.<ucar.nc2.Group: void addEnumeration(ucar.nc2.EnumTypedef)>(r18);

        goto label11;

     label12:
        specialinvoke r11.<ucar.nc2.ft.fmrc.FmrcDataset: void transferGroup(ucar.nc2.Group,ucar.nc2.Group,ucar.nc2.dataset.NetcdfDataset)>(r43, r44, r12);

        goto label10;

     label13:
        return;
    }

    private java.lang.String getRunDimensionName()
    {
        ucar.nc2.ft.fmrc.FmrcDataset r0;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcDataset;

        return "run";
    }

    private java.lang.String makeCoordinateList(ucar.nc2.dataset.VariableDS, java.lang.String, boolean)
    {
        java.lang.String r3, $r7, $r13, $r15, $r21, r22;
        boolean z0;
        ucar.nc2.dataset.VariableDS r0;
        ucar.nc2.ft.fmrc.FmrcDataset r6;
        ucar.nc2.Attribute $r1, r23;
        java.lang.StringBuilder $r2, $r4, $r5, $r8, $r9, $r10, $r11, $r12, $r14, $r16, $r17, $r18, $r19, $r20;

        r6 := @this: ucar.nc2.ft.fmrc.FmrcDataset;

        r0 := @parameter0: ucar.nc2.dataset.VariableDS;

        r3 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r22 = "";

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute findAttribute(java.lang.String)>("coordinates");

        r23 = $r1;

        if $r1 != null goto label1;

        r23 = virtualinvoke r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute findAttribute(java.lang.String)>("_CoordinateAxes");

     label1:
        if r23 == null goto label2;

        r22 = virtualinvoke r23.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

     label2:
        if z0 == 0 goto label3;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = specialinvoke r6.<ucar.nc2.ft.fmrc.FmrcDataset: java.lang.String getRunDimensionName()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r21;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r7 = specialinvoke r6.<ucar.nc2.ft.fmrc.FmrcDataset: java.lang.String getRunDimensionName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    private void addAttributeInfo(ucar.nc2.dataset.NetcdfDataset, java.lang.String, java.lang.String)
    {
        ucar.nc2.ft.fmrc.FmrcDataset r12;
        ucar.nc2.Attribute $r2, $r4, $r11;
        java.lang.StringBuilder $r5, $r6, $r7, $r9;
        java.lang.String r1, $r3, r8, $r10;
        ucar.nc2.dataset.NetcdfDataset r0;

        r12 := @this: ucar.nc2.ft.fmrc.FmrcDataset;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: java.lang.String;

        r8 := @parameter2: java.lang.String;

        $r2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>(r1);

        if $r2 != null goto label1;

        $r11 = new ucar.nc2.Attribute;

        specialinvoke $r11.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>(r1, r8);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r11);

        goto label2;

     label1:
        $r3 = virtualinvoke $r2.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $r4 = new ucar.nc2.Attribute;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ;\n");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>(r1, $r10);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r4);

     label2:
        return;
    }

    private ucar.nc2.dt.GridDataset buildDataset2D(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.dataset.NetcdfDataset, ucar.nc2.ft.fmrc.FmrcInvLite) throws java.io.IOException
    {
        ucar.nc2.Attribute $r11, $r12, $r13, $r20, $r48, $r49, $r50, $r57, $r59, $r77, $r92, $r101;
        java.lang.StringBuilder $r14, $r15, $r18, $r39, $r41, $r42, $r44, $r51, $r52, $r55, $r78, $r80, $r82, $r83, $r85, $r87, $r89, $r90, $r95, $r96, $r97, $r99, $r102, $r103, $r105, $r111, $r113, $r115;
        ucar.nc2.ft.fmrc.FmrcDataset r2;
        ucar.ma2.Array $r27, $r66, $r110;
        java.util.Date $r16, $r53;
        int[] $r25, $r64, $r107;
        ucar.nc2.dataset.VariableDS $r10, $r46, $r94, r123;
        ucar.ma2.DataType $r26, r38, $r63, $r109, $r119;
        ucar.nc2.units.DateFormatter $r8;
        int $i0, $i1, $i2, $i3;
        ucar.nc2.Variable $r72;
        org.slf4j.Logger $r24, $r79, $r112;
        ucar.nc2.ft.fmrc.FmrcInvLite r0;
        java.lang.Object $r33, $r70;
        ucar.nc2.ft.fmrc.FmrcDataset$ProxyReader2D $r9;
        ucar.nc2.constants.AxisType $r21, $r60;
        ucar.nc2.dt.grid.GridDataset $r32;
        ucar.nc2.Group $r4, $r5, $r34;
        java.lang.Double $r58;
        double[] $r65, $r67, $r108, $r118;
        java.lang.String $r1, $r6, $r17, $r19, $r22, $r23, $r36, $r37, $r40, $r43, $r45, $r47, $r54, $r56, $r61, $r62, $r71, $r75, $r76, $r81, $r84, $r86, $r88, $r91, $r98, $r100, $r104, $r106, $r114, $r116;
        ucar.nc2.Dimension $r7, $r35, $r93;
        ucar.nc2.dataset.NetcdfDataset r3, $r117, r120;
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$Grid r122;
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset r121;
        java.util.Formatter $r31;
        boolean $z0, $z1, $z2;
        java.util.List $r28, $r29, $r68, $r73, $r74;
        java.util.Iterator $r30, $r69;

        r2 := @this: ucar.nc2.ft.fmrc.FmrcDataset;

        r120 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r3 := @parameter1: ucar.nc2.dataset.NetcdfDataset;

        r0 := @parameter2: ucar.nc2.ft.fmrc.FmrcInvLite;

        if r120 != null goto label1;

        $r117 = new ucar.nc2.dataset.NetcdfDataset;

        specialinvoke $r117.<ucar.nc2.dataset.NetcdfDataset: void <init>()>();

        r120 = $r117;

     label1:
        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite: java.lang.String collectionName>;

        virtualinvoke r120.<ucar.nc2.dataset.NetcdfDataset: void setLocation(java.lang.String)>($r1);

        $r4 = virtualinvoke r3.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r5 = virtualinvoke r120.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        specialinvoke r2.<ucar.nc2.ft.fmrc.FmrcDataset: void transferGroup(ucar.nc2.Group,ucar.nc2.Group,ucar.nc2.dataset.NetcdfDataset)>($r4, $r5, r120);

        virtualinvoke r120.<ucar.nc2.dataset.NetcdfDataset: void finish()>();

        specialinvoke r2.<ucar.nc2.ft.fmrc.FmrcDataset: void addAttributeInfo(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r120, "history", "FMRC 2D Dataset");

        $r118 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite: double[] runOffset>;

        $r6 = specialinvoke r2.<ucar.nc2.ft.fmrc.FmrcDataset: java.lang.String getRunDimensionName()>();

        $i3 = lengthof $r118;

        $r7 = new ucar.nc2.Dimension;

        specialinvoke $r7.<ucar.nc2.Dimension: void <init>(java.lang.String,int)>($r6, $i3);

        virtualinvoke r120.<ucar.nc2.dataset.NetcdfDataset: boolean removeDimension(ucar.nc2.Group,java.lang.String)>(null, $r6);

        virtualinvoke r120.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r7);

        $r8 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r8.<ucar.nc2.units.DateFormatter: void <init>()>();

        $r9 = new ucar.nc2.ft.fmrc.FmrcDataset$ProxyReader2D;

        specialinvoke $r9.<ucar.nc2.ft.fmrc.FmrcDataset$ProxyReader2D: void <init>(ucar.nc2.ft.fmrc.FmrcDataset,ucar.nc2.ft.fmrc.FmrcDataset$1)>(r2, null);

        $r119 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r10 = new ucar.nc2.dataset.VariableDS;

        specialinvoke $r10.<ucar.nc2.dataset.VariableDS: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r120, null, null, $r6, $r119, $r6, null, null);

        $r11 = new ucar.nc2.Attribute;

        specialinvoke $r11.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "Run time for ForecastModelRunCollection");

        virtualinvoke $r10.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r11);

        $r12 = new ucar.nc2.Attribute;

        specialinvoke $r12.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", "forecast_reference_time");

        virtualinvoke $r10.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r12);

        $r13 = new ucar.nc2.Attribute;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hours since ");

        $r16 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite: java.util.Date base>;

        $r17 = virtualinvoke $r8.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>($r16);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", $r19);

        virtualinvoke $r10.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r13);

        $r20 = new ucar.nc2.Attribute;

        $r21 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType RunTime>;

        $r22 = virtualinvoke $r21.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r20.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r22);

        virtualinvoke $r10.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r20);

        $r23 = virtualinvoke $r10.<ucar.nc2.dataset.VariableDS: java.lang.String getShortName()>();

        virtualinvoke r120.<ucar.nc2.dataset.NetcdfDataset: boolean removeVariable(ucar.nc2.Group,java.lang.String)>(null, $r23);

        virtualinvoke r120.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r10);

        $r24 = <ucar.nc2.ft.fmrc.FmrcDataset: org.slf4j.Logger logger>;

        $z0 = interfaceinvoke $r24.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label2;

        $r112 = <ucar.nc2.ft.fmrc.FmrcDataset: org.slf4j.Logger logger>;

        $r111 = new java.lang.StringBuilder;

        specialinvoke $r111.<java.lang.StringBuilder: void <init>()>();

        $r113 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FmrcDataset: added runtimeCoordVar ");

        $r114 = virtualinvoke $r10.<ucar.nc2.dataset.VariableDS: java.lang.String getName()>();

        $r115 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r114);

        $r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r112.<org.slf4j.Logger: void debug(java.lang.String)>($r116);

     label2:
        $r26 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r25 = newarray (int)[1];

        $r25[0] = $i3;

        $r27 = staticinvoke <ucar.ma2.ArrayDouble: ucar.ma2.Array factory(ucar.ma2.DataType,int[],java.lang.Object)>($r26, $r25, $r118);

        virtualinvoke $r10.<ucar.nc2.dataset.VariableDS: void setCachedData(ucar.ma2.Array)>($r27);

        $r28 = virtualinvoke r120.<ucar.nc2.dataset.NetcdfDataset: java.util.List getVariables()>();

        $r29 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite: java.util.List gridSets>;

        $r30 = interfaceinvoke $r29.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r30.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r33 = interfaceinvoke $r30.<java.util.Iterator: java.lang.Object next()>();

        r121 = (ucar.nc2.ft.fmrc.FmrcInvLite$Gridset) $r33;

        $r34 = virtualinvoke r120.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r35 = new ucar.nc2.Dimension;

        $r36 = r121.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: java.lang.String gridsetName>;

        $i0 = r121.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets>;

        specialinvoke $r35.<ucar.nc2.Dimension: void <init>(java.lang.String,int)>($r36, $i0);

        $r37 = r121.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: java.lang.String gridsetName>;

        virtualinvoke r120.<ucar.nc2.dataset.NetcdfDataset: boolean removeDimension(ucar.nc2.Group,java.lang.String)>(null, $r37);

        virtualinvoke r120.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r35);

        r38 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = specialinvoke r2.<ucar.nc2.ft.fmrc.FmrcDataset: java.lang.String getRunDimensionName()>();

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r43 = r121.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: java.lang.String gridsetName>;

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        $r46 = new ucar.nc2.dataset.VariableDS;

        $r47 = r121.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: java.lang.String gridsetName>;

        specialinvoke $r46.<ucar.nc2.dataset.VariableDS: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r120, $r34, null, $r47, r38, $r45, null, null);

        $r48 = new ucar.nc2.Attribute;

        specialinvoke $r48.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "Forecast time for ForecastModelRunCollection");

        virtualinvoke $r46.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r48);

        $r49 = new ucar.nc2.Attribute;

        specialinvoke $r49.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", "time");

        virtualinvoke $r46.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r49);

        $r50 = new ucar.nc2.Attribute;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hours since ");

        $r53 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite: java.util.Date base>;

        $r54 = virtualinvoke $r8.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>($r53);

        $r55 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r50.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", $r56);

        virtualinvoke $r46.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r50);

        $r57 = new ucar.nc2.Attribute;

        $r58 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(#NaN);

        specialinvoke $r57.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("missing_value", $r58);

        virtualinvoke $r46.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r57);

        $r59 = new ucar.nc2.Attribute;

        $r60 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r61 = virtualinvoke $r60.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r59.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r61);

        virtualinvoke $r46.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r59);

        $r62 = r121.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: java.lang.String gridsetName>;

        virtualinvoke $r34.<ucar.nc2.Group: boolean removeVariable(java.lang.String)>($r62);

        virtualinvoke $r34.<ucar.nc2.Group: void addVariable(ucar.nc2.Variable)>($r46);

        $r63 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r64 = virtualinvoke $r46.<ucar.nc2.dataset.VariableDS: int[] getShape()>();

        $r65 = r121.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: double[] timeOffset>;

        $r66 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[],java.lang.Object)>($r63, $r64, $r65);

        virtualinvoke $r46.<ucar.nc2.dataset.VariableDS: void setCachedData(ucar.ma2.Array)>($r66);

        $r67 = r121.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: double[] timeBounds>;

        if $r67 == null goto label4;

        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        $r88 = virtualinvoke $r46.<ucar.nc2.dataset.VariableDS: java.lang.String getShortName()>();

        $r89 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r88);

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_bounds");

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();

        $r92 = new ucar.nc2.Attribute;

        specialinvoke $r92.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("bounds", $r91);

        virtualinvoke $r46.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r92);

        $r93 = staticinvoke <ucar.nc2.dataset.DatasetConstructor: ucar.nc2.Dimension getBoundsDimension(ucar.nc2.NetcdfFile)>(r120);

        $r94 = new ucar.nc2.dataset.VariableDS;

        $r95 = new java.lang.StringBuilder;

        specialinvoke $r95.<java.lang.StringBuilder: void <init>()>();

        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r98 = virtualinvoke $r93.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r99 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r98);

        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r94.<ucar.nc2.dataset.VariableDS: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r120, $r34, null, $r91, r38, $r100, null, null);

        $r101 = new ucar.nc2.Attribute;

        $r102 = new java.lang.StringBuilder;

        specialinvoke $r102.<java.lang.StringBuilder: void <init>()>();

        $r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bounds for ");

        $r104 = virtualinvoke $r46.<ucar.nc2.dataset.VariableDS: java.lang.String getShortName()>();

        $r105 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r104);

        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r101.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", $r106);

        virtualinvoke $r94.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r101);

        $r109 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r107 = newarray (int)[3];

        $r107[0] = $i3;

        $i2 = r121.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: int noffsets>;

        $r107[1] = $i2;

        $r107[2] = 2;

        $r108 = r121.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: double[] timeBounds>;

        $r110 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[],java.lang.Object)>($r109, $r107, $r108);

        virtualinvoke $r94.<ucar.nc2.dataset.VariableDS: void setCachedData(ucar.ma2.Array)>($r110);

        virtualinvoke $r34.<ucar.nc2.Group: void addVariable(ucar.nc2.Variable)>($r94);

     label4:
        $r68 = r121.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: java.util.List grids>;

        $r69 = interfaceinvoke $r68.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke $r69.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r70 = interfaceinvoke $r69.<java.util.Iterator: java.lang.Object next()>();

        r122 = (ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$Grid) $r70;

        $r71 = r122.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$Grid: java.lang.String name>;

        $r72 = virtualinvoke r120.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>($r71);

        r123 = (ucar.nc2.dataset.VariableDS) $r72;

        if r123 != null goto label6;

        $r79 = <ucar.nc2.ft.fmrc.FmrcDataset: org.slf4j.Logger logger>;

        $r78 = new java.lang.StringBuilder;

        specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();

        $r80 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cant find ugrid variable ");

        $r81 = r122.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$Grid: java.lang.String name>;

        $r82 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81);

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in collection ");

        $r84 = r0.<ucar.nc2.ft.fmrc.FmrcInvLite: java.lang.String collectionName>;

        $r85 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r84);

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r79.<org.slf4j.Logger: void error(java.lang.String)>($r86);

        goto label5;

     label6:
        $r73 = virtualinvoke r123.<ucar.nc2.dataset.VariableDS: java.util.List getDimensions()>();

        $i1 = interfaceinvoke $r73.<java.util.List: int size()>();

        $r74 = interfaceinvoke $r73.<java.util.List: java.util.List subList(int,int)>(1, $i1);

        interfaceinvoke $r74.<java.util.List: void add(int,java.lang.Object)>(0, $r35);

        interfaceinvoke $r74.<java.util.List: void add(int,java.lang.Object)>(0, $r7);

        virtualinvoke r123.<ucar.nc2.dataset.VariableDS: void setDimensions(java.util.List)>($r74);

        virtualinvoke r123.<ucar.nc2.dataset.VariableDS: void setProxyReader(ucar.nc2.ProxyReader)>($r9);

        virtualinvoke r123.<ucar.nc2.dataset.VariableDS: void setSPobject(java.lang.Object)>(r122);

        interfaceinvoke $r28.<java.util.List: boolean remove(java.lang.Object)>(r123);

        $r75 = r121.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: java.lang.String gridsetName>;

        $r76 = specialinvoke r2.<ucar.nc2.ft.fmrc.FmrcDataset: java.lang.String makeCoordinateList(ucar.nc2.dataset.VariableDS,java.lang.String,boolean)>(r123, $r75, 1);

        virtualinvoke r123.<ucar.nc2.dataset.VariableDS: boolean removeAttribute(java.lang.String)>("_CoordinateAxes");

        $r77 = new ucar.nc2.Attribute;

        specialinvoke $r77.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("coordinates", $r76);

        virtualinvoke r123.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r77);

        goto label5;

     label7:
        goto label3;

     label8:
        virtualinvoke r120.<ucar.nc2.dataset.NetcdfDataset: void finish()>();

        $r31 = new java.util.Formatter;

        specialinvoke $r31.<java.util.Formatter: void <init>()>();

        $r32 = new ucar.nc2.dt.grid.GridDataset;

        specialinvoke $r32.<ucar.nc2.dt.grid.GridDataset: void <init>(ucar.nc2.dataset.NetcdfDataset,java.util.Formatter)>(r120, $r31);

        return $r32;
    }

    private ucar.nc2.dataset.CoordinateSystem findReplacementCs(ucar.nc2.dataset.CoordinateSystem, java.lang.String, ucar.nc2.dataset.NetcdfDataset)
    {
        java.util.ArrayList $r4;
        ucar.nc2.dataset.CoordinateAxis r10, $r12, $r14, r22;
        ucar.nc2.constants.AxisType $r15, $r16, $r18;
        java.lang.String $r2, $r11, $r19, r21;
        boolean $z0, $z1;
        ucar.nc2.dataset.VariableDS $r13;
        java.util.Iterator $r6;
        ucar.nc2.ft.fmrc.FmrcDataset r20;
        java.util.List $r5, $r8;
        ucar.nc2.Attribute $r17;
        java.lang.Object $r9;
        ucar.nc2.dataset.CoordinateSystem r1, $r3, $r7;
        ucar.nc2.dataset.NetcdfDataset r0;

        r20 := @this: ucar.nc2.ft.fmrc.FmrcDataset;

        r1 := @parameter0: ucar.nc2.dataset.CoordinateSystem;

        r21 := @parameter1: java.lang.String;

        r0 := @parameter2: ucar.nc2.dataset.NetcdfDataset;

        $r2 = virtualinvoke r1.<ucar.nc2.dataset.CoordinateSystem: java.lang.String getName()>();

        $r3 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateSystem findCoordinateSystem(java.lang.String)>($r2);

        if $r3 == null goto label1;

        return $r3;

     label1:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = virtualinvoke r1.<ucar.nc2.dataset.CoordinateSystem: java.util.List getCoordinateAxes()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r9 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r10 = (ucar.nc2.dataset.CoordinateAxis) $r9;

        $r11 = virtualinvoke r10.<ucar.nc2.dataset.CoordinateAxis: java.lang.String getName()>();

        $r12 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis findCoordinateAxis(java.lang.String)>($r11);

        $z1 = $r12 instanceof ucar.nc2.dataset.CoordinateAxis;

        if $z1 == 0 goto label3;

        r22 = (ucar.nc2.dataset.CoordinateAxis) $r12;

        goto label4;

     label3:
        $r13 = (ucar.nc2.dataset.VariableDS) $r12;

        $r14 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r13);

        r22 = $r14;

        $r15 = virtualinvoke r10.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.constants.AxisType getAxisType()>();

        if $r15 == null goto label4;

        $r16 = virtualinvoke r10.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.constants.AxisType getAxisType()>();

        virtualinvoke $r14.<ucar.nc2.dataset.CoordinateAxis: void setAxisType(ucar.nc2.constants.AxisType)>($r16);

        $r17 = new ucar.nc2.Attribute;

        $r18 = virtualinvoke r10.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.constants.AxisType getAxisType()>();

        $r19 = virtualinvoke $r18.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r17.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r19);

        virtualinvoke $r14.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r17);

     label4:
        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r22);

        goto label2;

     label5:
        $r7 = new ucar.nc2.dataset.CoordinateSystem;

        $r8 = virtualinvoke r1.<ucar.nc2.dataset.CoordinateSystem: java.util.List getCoordinateTransforms()>();

        specialinvoke $r7.<ucar.nc2.dataset.CoordinateSystem: void <init>(ucar.nc2.dataset.NetcdfDataset,java.util.Collection,java.util.Collection)>(r0, $r4, $r8);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: void addCoordinateSystem(ucar.nc2.dataset.CoordinateSystem)>($r7);

        return $r7;
    }

    private ucar.nc2.dt.GridDataset buildDataset1D(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.ft.fmrc.FmrcInvLite, ucar.nc2.ft.fmrc.TimeInventory) throws java.io.IOException
    {
        ucar.nc2.dt.grid.GridDataset $r20;
        ucar.nc2.ft.fmrc.FmrcDataset$Vstate1D $r50;
        ucar.nc2.Group $r5, $r6, $r27;
        ucar.nc2.Attribute $r52;
        java.lang.StringBuilder $r7, $r8, $r11, $r12, $r31, $r32, $r33, $r36, $r37, $r38, $r53, $r55, $r57, $r58, $r60;
        ucar.nc2.ft.fmrc.FmrcInvLite$ValueB $r30;
        double[] $r35, $r40;
        java.lang.String $r2, $r10, $r13, $r22, r28, $r34, $r39, $r45, $r51, $r56, $r59, $r61, $r68;
        ucar.nc2.ft.fmrc.FmrcDataset r3;
        ucar.ma2.Array $r25;
        ucar.nc2.Dimension $r29;
        ucar.nc2.dataset.NetcdfDataset $r0, r4;
        java.util.Date $r62, $r63, $r64;
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$Grid r44, r70;
        ucar.nc2.ft.fmrc.FmrcInvLite$Gridset r69;
        boolean $z0, $z1, $z2, $z3, $z4;
        ucar.nc2.dataset.VariableDS r47, r72;
        ucar.nc2.ft.fmrc.TimeInventory r9;
        java.util.List $r16, $r17, $r41, $r48, $r49, $r65;
        ucar.nc2.units.DateFormatter $r14;
        int $i0, $i1;
        ucar.nc2.Variable $r23, $r46, r71;
        ucar.nc2.ProxyReader $r24;
        org.slf4j.Logger $r54;
        java.util.Iterator $r18, $r19, $r42, $r66;
        ucar.nc2.ft.fmrc.FmrcInvLite r1;
        ucar.nc2.ft.fmrc.FmrcDataset$ProxyReader1D $r15;
        java.lang.Object $r21, $r26, $r43, $r67;

        r3 := @this: ucar.nc2.ft.fmrc.FmrcDataset;

        r4 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: ucar.nc2.ft.fmrc.FmrcInvLite;

        r9 := @parameter2: ucar.nc2.ft.fmrc.TimeInventory;

        $r0 = new ucar.nc2.dataset.NetcdfDataset;

        specialinvoke $r0.<ucar.nc2.dataset.NetcdfDataset: void <init>()>();

        $r2 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite: java.lang.String collectionName>;

        virtualinvoke $r0.<ucar.nc2.dataset.NetcdfDataset: void setLocation(java.lang.String)>($r2);

        $r5 = virtualinvoke r4.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r6 = virtualinvoke $r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        specialinvoke r3.<ucar.nc2.ft.fmrc.FmrcDataset: void transferGroup(ucar.nc2.Group,ucar.nc2.Group,ucar.nc2.dataset.NetcdfDataset)>($r5, $r6, $r0);

        virtualinvoke $r0.<ucar.nc2.dataset.NetcdfDataset: void finish()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FMRC ");

        $r10 = interfaceinvoke r9.<ucar.nc2.ft.fmrc.TimeInventory: java.lang.String getName()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Dataset");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r3.<ucar.nc2.ft.fmrc.FmrcDataset: void addAttributeInfo(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>($r0, "history", $r13);

        $r14 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r14.<ucar.nc2.units.DateFormatter: void <init>()>();

        $r15 = new ucar.nc2.ft.fmrc.FmrcDataset$ProxyReader1D;

        specialinvoke $r15.<ucar.nc2.ft.fmrc.FmrcDataset$ProxyReader1D: void <init>(ucar.nc2.ft.fmrc.FmrcDataset,ucar.nc2.ft.fmrc.FmrcDataset$1)>(r3, null);

        $r16 = virtualinvoke $r0.<ucar.nc2.dataset.NetcdfDataset: java.util.List getVariables()>();

        $r17 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite: java.util.List gridSets>;

        $r18 = interfaceinvoke $r17.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z3 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label11;

        $r26 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r69 = (ucar.nc2.ft.fmrc.FmrcInvLite$Gridset) $r26;

        $r27 = virtualinvoke $r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        r28 = r69.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: java.lang.String gridsetName>;

        $i0 = interfaceinvoke r9.<ucar.nc2.ft.fmrc.TimeInventory: int getTimeLength(ucar.nc2.ft.fmrc.FmrcInvLite$Gridset)>(r69);

        if $i0 != 0 goto label04;

        $r65 = r69.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: java.util.List grids>;

        $r66 = interfaceinvoke $r65.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z2 = interfaceinvoke $r66.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label03;

        $r67 = interfaceinvoke $r66.<java.util.Iterator: java.lang.Object next()>();

        r70 = (ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$Grid) $r67;

        $r68 = r70.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$Grid: java.lang.String name>;

        virtualinvoke $r0.<ucar.nc2.dataset.NetcdfDataset: boolean removeVariable(ucar.nc2.Group,java.lang.String)>($r27, $r68);

        goto label02;

     label03:
        goto label01;

     label04:
        $r29 = new ucar.nc2.Dimension;

        specialinvoke $r29.<ucar.nc2.Dimension: void <init>(java.lang.String,int)>(r28, $i0);

        virtualinvoke $r0.<ucar.nc2.dataset.NetcdfDataset: boolean removeDimension(ucar.nc2.Group,java.lang.String)>($r27, r28);

        virtualinvoke $r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>($r27, $r29);

        virtualinvoke $r27.<ucar.nc2.Group: boolean removeVariable(java.lang.String)>(r28);

        $r30 = interfaceinvoke r9.<ucar.nc2.ft.fmrc.TimeInventory: ucar.nc2.ft.fmrc.FmrcInvLite$ValueB getTimeCoords(ucar.nc2.ft.fmrc.FmrcInvLite$Gridset)>(r69);

        if $r30 == null goto label05;

        $r64 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite: java.util.Date base>;

        specialinvoke r3.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.dataset.VariableDS makeTimeCoordinate(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,java.util.Date,ucar.nc2.ft.fmrc.FmrcInvLite$ValueB,ucar.nc2.units.DateFormatter)>($r0, $r27, r28, $r64, $r30, $r14);

     label05:
        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_run");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<ucar.nc2.Group: boolean removeVariable(java.lang.String)>($r34);

        $r35 = interfaceinvoke r9.<ucar.nc2.ft.fmrc.TimeInventory: double[] getRunTimeCoords(ucar.nc2.ft.fmrc.FmrcInvLite$Gridset)>(r69);

        if $r35 == null goto label06;

        $r63 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite: java.util.Date base>;

        specialinvoke r3.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.dataset.VariableDS makeRunTimeCoordinate(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,java.util.Date,double[],ucar.nc2.units.DateFormatter)>($r0, $r27, r28, $r63, $r35, $r14);

     label06:
        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_offset");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<ucar.nc2.Group: boolean removeVariable(java.lang.String)>($r39);

        $r40 = interfaceinvoke r9.<ucar.nc2.ft.fmrc.TimeInventory: double[] getOffsetCoords(ucar.nc2.ft.fmrc.FmrcInvLite$Gridset)>(r69);

        if $r40 == null goto label07;

        $r62 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite: java.util.Date base>;

        specialinvoke r3.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.dataset.VariableDS makeOffsetCoordinate(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,java.util.Date,double[],ucar.nc2.units.DateFormatter)>($r0, $r27, r28, $r62, $r40, $r14);

     label07:
        $r41 = r69.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset: java.util.List grids>;

        $r42 = interfaceinvoke $r41.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z4 = interfaceinvoke $r42.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label10;

        $r43 = interfaceinvoke $r42.<java.util.Iterator: java.lang.Object next()>();

        r44 = (ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$Grid) $r43;

        $r45 = r44.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$Grid: java.lang.String name>;

        $r46 = virtualinvoke $r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>($r45);

        r47 = (ucar.nc2.dataset.VariableDS) $r46;

        if r47 != null goto label09;

        $r54 = <ucar.nc2.ft.fmrc.FmrcDataset: org.slf4j.Logger logger>;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cant find ugrid variable ");

        $r56 = r44.<ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$Grid: java.lang.String name>;

        $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in collection ");

        $r59 = r1.<ucar.nc2.ft.fmrc.FmrcInvLite: java.lang.String collectionName>;

        $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r54.<org.slf4j.Logger: void error(java.lang.String)>($r61);

        goto label08;

     label09:
        $r48 = virtualinvoke r47.<ucar.nc2.dataset.VariableDS: java.util.List getDimensions()>();

        $i1 = interfaceinvoke $r48.<java.util.List: int size()>();

        $r49 = interfaceinvoke $r48.<java.util.List: java.util.List subList(int,int)>(1, $i1);

        interfaceinvoke $r49.<java.util.List: void add(int,java.lang.Object)>(0, $r29);

        virtualinvoke r47.<ucar.nc2.dataset.VariableDS: void setDimensions(java.util.List)>($r49);

        virtualinvoke r47.<ucar.nc2.dataset.VariableDS: void setProxyReader(ucar.nc2.ProxyReader)>($r15);

        $r50 = new ucar.nc2.ft.fmrc.FmrcDataset$Vstate1D;

        specialinvoke $r50.<ucar.nc2.ft.fmrc.FmrcDataset$Vstate1D: void <init>(ucar.nc2.ft.fmrc.FmrcDataset,ucar.nc2.ft.fmrc.FmrcInvLite$Gridset$Grid,ucar.nc2.ft.fmrc.TimeInventory,ucar.nc2.ft.fmrc.FmrcDataset$1)>(r3, r44, r9, null);

        virtualinvoke r47.<ucar.nc2.dataset.VariableDS: void setSPobject(java.lang.Object)>($r50);

        interfaceinvoke $r16.<java.util.List: boolean remove(java.lang.Object)>(r47);

        $r51 = specialinvoke r3.<ucar.nc2.ft.fmrc.FmrcDataset: java.lang.String makeCoordinateList(ucar.nc2.dataset.VariableDS,java.lang.String,boolean)>(r47, r28, 0);

        virtualinvoke r47.<ucar.nc2.dataset.VariableDS: boolean removeAttribute(java.lang.String)>("_CoordinateAxes");

        $r52 = new ucar.nc2.Attribute;

        specialinvoke $r52.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("coordinates", $r51);

        virtualinvoke r47.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r52);

        goto label08;

     label10:
        goto label01;

     label11:
        virtualinvoke $r0.<ucar.nc2.dataset.NetcdfDataset: void finish()>();

        $r19 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $z0 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label15;

        $r21 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r71 = (ucar.nc2.Variable) $r21;

        $r22 = virtualinvoke r71.<ucar.nc2.Variable: java.lang.String getName()>();

        $r23 = virtualinvoke r4.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>($r22);

        r72 = (ucar.nc2.dataset.VariableDS) $r23;

        $z1 = virtualinvoke r72.<ucar.nc2.dataset.VariableDS: boolean hasCachedDataRecurse()>();

        if $z1 == 0 goto label13;

        $r25 = virtualinvoke r72.<ucar.nc2.dataset.VariableDS: ucar.ma2.Array read()>();

        virtualinvoke r71.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array)>($r25);

        goto label14;

     label13:
        $r24 = virtualinvoke r72.<ucar.nc2.dataset.VariableDS: ucar.nc2.ProxyReader getProxyReader()>();

        virtualinvoke r71.<ucar.nc2.Variable: void setProxyReader(ucar.nc2.ProxyReader)>($r24);

     label14:
        goto label12;

     label15:
        virtualinvoke $r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordSysBuilderIF enhance()>();

        $r20 = new ucar.nc2.dt.grid.GridDataset;

        specialinvoke $r20.<ucar.nc2.dt.grid.GridDataset: void <init>(ucar.nc2.dataset.NetcdfDataset)>($r0);

        return $r20;
    }

    private ucar.nc2.dataset.VariableDS makeTimeCoordinate(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.Group, java.lang.String, java.util.Date, ucar.nc2.ft.fmrc.FmrcInvLite$ValueB, ucar.nc2.units.DateFormatter)
    {
        java.util.Date r11;
        int[] $r22, $r47;
        ucar.nc2.constants.AxisType $r18;
        ucar.nc2.dataset.VariableDS $r1, $r34;
        ucar.ma2.DataType r0, $r24, $r49;
        ucar.nc2.Group r3;
        ucar.nc2.Attribute $r5, $r6, $r7, $r15, $r17, $r32, $r41;
        java.lang.StringBuilder $r8, $r9, $r13, $r27, $r29, $r30, $r35, $r36, $r37, $r39, $r42, $r43, $r45;
        ucar.nc2.units.DateFormatter r10;
        ucar.nc2.ft.fmrc.FmrcInvLite$ValueB r20;
        java.lang.Double $r16;
        double[] $r21, $r23, $r26, $r48;
        int i0;
        java.lang.String r4, $r12, $r14, $r19, $r28, $r31, $r38, $r40, $r44, $r46;
        ucar.nc2.ft.fmrc.FmrcDataset r51;
        ucar.ma2.Array $r25, $r50;
        ucar.nc2.Dimension $r33;
        ucar.nc2.dataset.NetcdfDataset r2;

        r51 := @this: ucar.nc2.ft.fmrc.FmrcDataset;

        r2 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r3 := @parameter1: ucar.nc2.Group;

        r4 := @parameter2: java.lang.String;

        r11 := @parameter3: java.util.Date;

        r20 := @parameter4: ucar.nc2.ft.fmrc.FmrcInvLite$ValueB;

        r10 := @parameter5: ucar.nc2.units.DateFormatter;

        r0 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r1 = new ucar.nc2.dataset.VariableDS;

        specialinvoke $r1.<ucar.nc2.dataset.VariableDS: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r2, r3, null, r4, r0, r4, null, null);

        $r5 = new ucar.nc2.Attribute;

        specialinvoke $r5.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "Forecast time for ForecastModelRunCollection");

        virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r5);

        $r6 = new ucar.nc2.Attribute;

        specialinvoke $r6.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", "time");

        virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r6);

        $r7 = new ucar.nc2.Attribute;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hours since ");

        $r12 = virtualinvoke r10.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>(r11);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", $r14);

        virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r7);

        $r15 = new ucar.nc2.Attribute;

        $r16 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(#NaN);

        specialinvoke $r15.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("missing_value", $r16);

        virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r15);

        $r17 = new ucar.nc2.Attribute;

        $r18 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r19 = virtualinvoke $r18.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r17.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r19);

        virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r17);

        $r21 = r20.<ucar.nc2.ft.fmrc.FmrcInvLite$ValueB: double[] offset>;

        i0 = lengthof $r21;

        $r24 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r22 = newarray (int)[1];

        $r22[0] = i0;

        $r23 = r20.<ucar.nc2.ft.fmrc.FmrcInvLite$ValueB: double[] offset>;

        $r25 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[],java.lang.Object)>($r24, $r22, $r23);

        virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: void setCachedData(ucar.ma2.Array)>($r25);

        virtualinvoke r3.<ucar.nc2.Group: void addVariable(ucar.nc2.Variable)>($r1);

        $r26 = r20.<ucar.nc2.ft.fmrc.FmrcInvLite$ValueB: double[] bounds>;

        if $r26 == null goto label1;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: java.lang.String getShortName()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_bounds");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        $r32 = new ucar.nc2.Attribute;

        specialinvoke $r32.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("bounds", $r31);

        virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r32);

        $r33 = staticinvoke <ucar.nc2.dataset.DatasetConstructor: ucar.nc2.Dimension getBoundsDimension(ucar.nc2.NetcdfFile)>(r2);

        $r34 = new ucar.nc2.dataset.VariableDS;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r38 = virtualinvoke $r33.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r34.<ucar.nc2.dataset.VariableDS: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r2, r3, null, $r31, r0, $r40, null, null);

        $r41 = new ucar.nc2.Attribute;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bounds for ");

        $r44 = virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: java.lang.String getShortName()>();

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r41.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", $r46);

        virtualinvoke $r34.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r41);

        $r49 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r47 = newarray (int)[2];

        $r47[0] = i0;

        $r47[1] = 2;

        $r48 = r20.<ucar.nc2.ft.fmrc.FmrcInvLite$ValueB: double[] bounds>;

        $r50 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[],java.lang.Object)>($r49, $r47, $r48);

        virtualinvoke $r34.<ucar.nc2.dataset.VariableDS: void setCachedData(ucar.ma2.Array)>($r50);

        virtualinvoke r3.<ucar.nc2.Group: void addVariable(ucar.nc2.Variable)>($r34);

     label1:
        return $r1;
    }

    private ucar.nc2.dataset.VariableDS makeRunTimeCoordinate(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.Group, java.lang.String, java.util.Date, double[], ucar.nc2.units.DateFormatter)
    {
        java.util.Date r19;
        int[] $r29;
        ucar.nc2.constants.AxisType $r26;
        ucar.nc2.dataset.VariableDS $r1;
        ucar.ma2.DataType r0, $r30;
        ucar.nc2.Group r3;
        ucar.nc2.Attribute $r9, $r14, $r15, $r23, $r25;
        ucar.ma2.ArrayDouble$D1 r32;
        java.lang.StringBuilder $r4, $r6, $r7, $r10, $r11, $r12, $r16, $r17, $r21;
        ucar.nc2.units.DateFormatter r18;
        java.lang.Double $r24;
        double[] r28;
        int i0;
        java.lang.String r5, $r8, $r13, $r20, $r22, $r27;
        ucar.nc2.ft.fmrc.FmrcDataset r33;
        ucar.ma2.Array $r31;
        ucar.nc2.dataset.NetcdfDataset r2;

        r33 := @this: ucar.nc2.ft.fmrc.FmrcDataset;

        r2 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r3 := @parameter1: ucar.nc2.Group;

        r5 := @parameter2: java.lang.String;

        r19 := @parameter3: java.util.Date;

        r28 := @parameter4: double[];

        r18 := @parameter5: ucar.nc2.units.DateFormatter;

        r0 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r1 = new ucar.nc2.dataset.VariableDS;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_run");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<ucar.nc2.dataset.VariableDS: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r2, r3, null, $r8, r0, r5, null, null);

        $r9 = new ucar.nc2.Attribute;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("run times for coordinate = ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", $r13);

        virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r9);

        $r14 = new ucar.nc2.Attribute;

        specialinvoke $r14.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", "forecast_reference_time");

        virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r14);

        $r15 = new ucar.nc2.Attribute;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hours since ");

        $r20 = virtualinvoke r18.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>(r19);

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", $r22);

        virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r15);

        $r23 = new ucar.nc2.Attribute;

        $r24 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(#NaN);

        specialinvoke $r23.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("missing_value", $r24);

        virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r23);

        $r25 = new ucar.nc2.Attribute;

        $r26 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType RunTime>;

        $r27 = virtualinvoke $r26.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r25.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r27);

        virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r25);

        i0 = lengthof r28;

        $r30 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r29 = newarray (int)[1];

        $r29[0] = i0;

        $r31 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[],java.lang.Object)>($r30, $r29, r28);

        r32 = (ucar.ma2.ArrayDouble$D1) $r31;

        virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: void setCachedData(ucar.ma2.Array)>(r32);

        virtualinvoke r3.<ucar.nc2.Group: void addVariable(ucar.nc2.Variable)>($r1);

        return $r1;
    }

    private ucar.nc2.dataset.VariableDS makeOffsetCoordinate(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.Group, java.lang.String, java.util.Date, double[], ucar.nc2.units.DateFormatter)
    {
        java.util.Date r19;
        int[] $r26;
        ucar.nc2.dataset.VariableDS $r1;
        ucar.ma2.DataType r0, $r27;
        ucar.nc2.Group r3;
        ucar.nc2.Attribute $r9, $r14, $r15, $r23;
        ucar.ma2.ArrayDouble$D1 r29;
        java.lang.StringBuilder $r4, $r6, $r7, $r10, $r11, $r12, $r16, $r17, $r21;
        ucar.nc2.units.DateFormatter r18;
        java.lang.Double $r24;
        double[] r25;
        int i0;
        java.lang.String r5, $r8, $r13, $r20, $r22;
        ucar.nc2.ft.fmrc.FmrcDataset r30;
        ucar.ma2.Array $r28;
        ucar.nc2.dataset.NetcdfDataset r2;

        r30 := @this: ucar.nc2.ft.fmrc.FmrcDataset;

        r2 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r3 := @parameter1: ucar.nc2.Group;

        r5 := @parameter2: java.lang.String;

        r19 := @parameter3: java.util.Date;

        r25 := @parameter4: double[];

        r18 := @parameter5: ucar.nc2.units.DateFormatter;

        r0 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r1 = new ucar.nc2.dataset.VariableDS;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_offset");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<ucar.nc2.dataset.VariableDS: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r2, r3, null, $r8, r0, r5, null, null);

        $r9 = new ucar.nc2.Attribute;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("offset hour from start of run for coordinate = ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", $r13);

        virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r9);

        $r14 = new ucar.nc2.Attribute;

        specialinvoke $r14.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", "forecast_period");

        virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r14);

        $r15 = new ucar.nc2.Attribute;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hours since ");

        $r20 = virtualinvoke r18.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>(r19);

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", $r22);

        virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r15);

        $r23 = new ucar.nc2.Attribute;

        $r24 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(#NaN);

        specialinvoke $r23.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("missing_value", $r24);

        virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r23);

        i0 = lengthof r25;

        $r27 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r26 = newarray (int)[1];

        $r26[0] = i0;

        $r28 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[],java.lang.Object)>($r27, $r26, r25);

        r29 = (ucar.ma2.ArrayDouble$D1) $r28;

        virtualinvoke $r1.<ucar.nc2.dataset.VariableDS: void setCachedData(ucar.ma2.Array)>(r29);

        virtualinvoke r3.<ucar.nc2.Group: void addVariable(ucar.nc2.Variable)>($r1);

        return $r1;
    }

    private ucar.ma2.Array read(ucar.nc2.ft.fmrc.TimeInventory$Instance, java.lang.String, java.util.List, java.util.HashMap) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.ma2.Range $r7;
        ucar.ma2.Section $r8;
        ucar.nc2.ft.fmrc.TimeInventory$Instance r1;
        ucar.nc2.ft.fmrc.FmrcDataset r0;
        java.util.HashMap r3;
        ucar.ma2.Array $r10;
        java.util.List r9;
        int $i0, $i1;
        ucar.nc2.Variable $r6;
        java.lang.String $r2, r5;
        ucar.nc2.dataset.NetcdfDataset $r4;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcDataset;

        r1 := @parameter0: ucar.nc2.ft.fmrc.TimeInventory$Instance;

        r5 := @parameter1: java.lang.String;

        r9 := @parameter2: java.util.List;

        r3 := @parameter3: java.util.HashMap;

        $r2 = interfaceinvoke r1.<ucar.nc2.ft.fmrc.TimeInventory$Instance: java.lang.String getDatasetLocation()>();

        $r4 = specialinvoke r0.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.dataset.NetcdfDataset open(java.lang.String,java.util.HashMap)>($r2, r3);

        if $r4 != null goto label1;

        return null;

     label1:
        $r6 = virtualinvoke $r4.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>(r5);

        if $r6 != null goto label2;

        return null;

     label2:
        $r7 = new ucar.ma2.Range;

        $i0 = interfaceinvoke r1.<ucar.nc2.ft.fmrc.TimeInventory$Instance: int getDatasetIndex()>();

        $i1 = interfaceinvoke r1.<ucar.nc2.ft.fmrc.TimeInventory$Instance: int getDatasetIndex()>();

        specialinvoke $r7.<ucar.ma2.Range: void <init>(int,int)>($i0, $i1);

        $r8 = new ucar.ma2.Section;

        specialinvoke $r8.<ucar.ma2.Section: void <init>(java.util.List)>(r9);

        virtualinvoke $r8.<ucar.ma2.Section: ucar.ma2.Section insertRange(int,ucar.ma2.Range)>(0, $r7);

        $r10 = virtualinvoke $r6.<ucar.nc2.Variable: ucar.ma2.Array read(ucar.ma2.Section)>($r8);

        return $r10;
    }

    private ucar.nc2.dataset.NetcdfDataset open(java.lang.String, java.util.HashMap)
    {
        thredds.inventory.FeatureCollectionConfig $r2, $r6;
        org.slf4j.Logger $r11;
        ucar.nc2.ft.fmrc.FmrcDataset r1;
        java.util.HashMap r0;
        java.io.IOException $r10;
        java.lang.Object $r9;
        java.lang.String r4;
        ucar.nc2.NetcdfFile $r5;
        org.jdom.Element $r3, $r7;
        ucar.nc2.dataset.NetcdfDataset $r8, r12, r13;

        r1 := @this: ucar.nc2.ft.fmrc.FmrcDataset;

        r4 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.HashMap;

        if r0 == null goto label1;

        $r9 = virtualinvoke r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4);

        r12 = (ucar.nc2.dataset.NetcdfDataset) $r9;

        if r12 == null goto label1;

        return r12;

     label1:
        $r2 = r1.<ucar.nc2.ft.fmrc.FmrcDataset: thredds.inventory.FeatureCollectionConfig config>;

        $r3 = $r2.<thredds.inventory.FeatureCollectionConfig: org.jdom.Element innerNcml>;

        if $r3 != null goto label2;

        r13 = staticinvoke <ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.NetcdfDataset acquireDataset(java.lang.String,ucar.nc2.util.CancelTask)>(r4, null);

        goto label3;

     label2:
        $r5 = staticinvoke <ucar.nc2.dataset.NetcdfDataset: ucar.nc2.NetcdfFile acquireFile(java.lang.String,ucar.nc2.util.CancelTask)>(r4, null);

        $r6 = r1.<ucar.nc2.ft.fmrc.FmrcDataset: thredds.inventory.FeatureCollectionConfig config>;

        $r7 = $r6.<thredds.inventory.FeatureCollectionConfig: org.jdom.Element innerNcml>;

        $r8 = staticinvoke <ucar.nc2.ncml.NcMLReader: ucar.nc2.dataset.NetcdfDataset mergeNcML(ucar.nc2.NetcdfFile,org.jdom.Element)>($r5, $r7);

        r13 = $r8;

        virtualinvoke $r8.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordSysBuilderIF enhance()>();

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

        $r11 = <ucar.nc2.ft.fmrc.FmrcDataset: org.slf4j.Logger logger>;

        interfaceinvoke $r11.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Cant open file ", $r10);

        return null;

     label5:
        if r0 == null goto label6;

        if r13 == null goto label6;

        virtualinvoke r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r13);

     label6:
        return r13;

        catch java.io.IOException from label1 to label3 with label4;
    }

    private void closeAll(java.util.HashMap) throws java.io.IOException
    {
        java.util.Iterator $r2;
        java.util.Collection $r1;
        ucar.nc2.ft.fmrc.FmrcDataset r5;
        java.util.HashMap r0;
        java.lang.Object $r3;
        ucar.nc2.dataset.NetcdfDataset r4;
        boolean $z0;

        r5 := @this: ucar.nc2.ft.fmrc.FmrcDataset;

        r0 := @parameter0: java.util.HashMap;

        $r1 = virtualinvoke r0.<java.util.HashMap: java.util.Collection values()>();

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (ucar.nc2.dataset.NetcdfDataset) $r3;

        virtualinvoke r4.<ucar.nc2.dataset.NetcdfDataset: void close()>();

        goto label1;

     label2:
        virtualinvoke r0.<java.util.HashMap: void clear()>();

        return;
    }

    protected ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile, ucar.nc2.Variable)
    {
        ucar.nc2.ft.fmrc.FmrcDataset r6;
        ucar.nc2.dataset.VariableEnhanced r4;
        ucar.nc2.Variable r1, $r3, r7;
        ucar.nc2.NetcdfFile r0;
        java.lang.String $r2, $r5;

        r6 := @this: ucar.nc2.ft.fmrc.FmrcDataset;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        r1 := @parameter1: ucar.nc2.Variable;

        $r2 = virtualinvoke r1.<ucar.nc2.Variable: java.lang.String getName()>();

        $r3 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>($r2);

        r7 = $r3;

        if $r3 != null goto label1;

        r4 = (ucar.nc2.dataset.VariableEnhanced) r1;

        $r5 = interfaceinvoke r4.<ucar.nc2.dataset.VariableEnhanced: java.lang.String getOriginalName()>();

        r7 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>($r5);

     label1:
        return r7;
    }

    public void showDetails(java.util.Formatter)
    {
        java.lang.Object[] $r1;
        ucar.nc2.ft.fmrc.FmrcDataset$State $r3;
        ucar.nc2.ft.fmrc.FmrcDataset r2;
        ucar.nc2.dataset.NetcdfDataset $r4;
        java.util.Formatter r0;

        r2 := @this: ucar.nc2.ft.fmrc.FmrcDataset;

        r0 := @parameter0: java.util.Formatter;

        $r1 = newarray (java.lang.Object)[1];

        $r3 = r2.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.ft.fmrc.FmrcDataset$State state>;

        $r4 = $r3.<ucar.nc2.ft.fmrc.FmrcDataset$State: ucar.nc2.dataset.NetcdfDataset proto>;

        $r1[0] = $r4;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("==========================%nproto=%n%s%n", $r1);

        return;
    }

    static ucar.ma2.Array access$200(ucar.nc2.ft.fmrc.FmrcDataset, ucar.nc2.ft.fmrc.TimeInventory$Instance, java.lang.String, java.util.List, java.util.HashMap) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        java.util.List r3;
        ucar.nc2.ft.fmrc.TimeInventory$Instance r1;
        ucar.nc2.ft.fmrc.FmrcDataset r0;
        java.util.HashMap r4;
        java.lang.String r2;
        ucar.ma2.Array $r5;

        r0 := @parameter0: ucar.nc2.ft.fmrc.FmrcDataset;

        r1 := @parameter1: ucar.nc2.ft.fmrc.TimeInventory$Instance;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.util.List;

        r4 := @parameter4: java.util.HashMap;

        $r5 = specialinvoke r0.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.ma2.Array read(ucar.nc2.ft.fmrc.TimeInventory$Instance,java.lang.String,java.util.List,java.util.HashMap)>(r1, r2, r3, r4);

        return $r5;
    }

    static void access$300(ucar.nc2.ft.fmrc.FmrcDataset, java.util.HashMap) throws java.io.IOException
    {
        ucar.nc2.ft.fmrc.FmrcDataset r0;
        java.util.HashMap r1;

        r0 := @parameter0: ucar.nc2.ft.fmrc.FmrcDataset;

        r1 := @parameter1: java.util.HashMap;

        specialinvoke r0.<ucar.nc2.ft.fmrc.FmrcDataset: void closeAll(java.util.HashMap)>(r1);

        return;
    }

    static org.slf4j.Logger access$600()
    {
        org.slf4j.Logger $r0;

        $r0 = <ucar.nc2.ft.fmrc.FmrcDataset: org.slf4j.Logger logger>;

        return $r0;
    }

    static ucar.nc2.ft.fmrc.FmrcDataset$State access$700(ucar.nc2.ft.fmrc.FmrcDataset)
    {
        ucar.nc2.ft.fmrc.FmrcDataset r0;
        ucar.nc2.ft.fmrc.FmrcDataset$State $r1;

        r0 := @parameter0: ucar.nc2.ft.fmrc.FmrcDataset;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.ft.fmrc.FmrcDataset$State state>;

        return $r1;
    }

    static ucar.nc2.dataset.NetcdfDataset access$800(ucar.nc2.ft.fmrc.FmrcDataset, java.lang.String, java.util.HashMap)
    {
        ucar.nc2.ft.fmrc.FmrcDataset r0;
        java.util.HashMap r2;
        java.lang.String r1;
        ucar.nc2.dataset.NetcdfDataset $r3;

        r0 := @parameter0: ucar.nc2.ft.fmrc.FmrcDataset;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.HashMap;

        $r3 = specialinvoke r0.<ucar.nc2.ft.fmrc.FmrcDataset: ucar.nc2.dataset.NetcdfDataset open(java.lang.String,java.util.HashMap)>(r1, r2);

        return $r3;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        <ucar.nc2.ft.fmrc.FmrcDataset: boolean debugRead> = 0;

        <ucar.nc2.ft.fmrc.FmrcDataset: boolean debugEnhance> = 0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lucar/nc2/ft/fmrc/FmrcDataset;");

        <ucar.nc2.ft.fmrc.FmrcDataset: org.slf4j.Logger logger> = $r0;

        return;
    }
}
