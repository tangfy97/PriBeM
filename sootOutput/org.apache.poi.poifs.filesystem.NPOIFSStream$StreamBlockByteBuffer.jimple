public class org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer extends java.io.OutputStream
{
    byte[] oneByte;
    java.nio.ByteBuffer buffer;
    org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector loopDetector;
    int prevBlock;
    int nextBlock;
    final org.apache.poi.poifs.filesystem.NPOIFSStream this$0;

    protected void <init>(org.apache.poi.poifs.filesystem.NPOIFSStream) throws java.io.IOException
    {
        byte[] $r2;
        org.apache.poi.poifs.filesystem.BlockStore $r3;
        int $i0, $i2;
        org.apache.poi.poifs.filesystem.NPOIFSStream r1;
        org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector $r4;
        org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer r0;

        r0 := @this: org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer;

        r1 := @parameter0: org.apache.poi.poifs.filesystem.NPOIFSStream;

        r0.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer: org.apache.poi.poifs.filesystem.NPOIFSStream this$0> = r1;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        $r2 = newarray (byte)[1];

        r0.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer: byte[] oneByte> = $r2;

        $r3 = staticinvoke <org.apache.poi.poifs.filesystem.NPOIFSStream: org.apache.poi.poifs.filesystem.BlockStore access$000(org.apache.poi.poifs.filesystem.NPOIFSStream)>(r1);

        $r4 = virtualinvoke $r3.<org.apache.poi.poifs.filesystem.BlockStore: org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector getChainLoopDetector()>();

        r0.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer: org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector loopDetector> = $r4;

        $i2 = (int) -2;

        r0.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer: int prevBlock> = $i2;

        $i0 = staticinvoke <org.apache.poi.poifs.filesystem.NPOIFSStream: int access$100(org.apache.poi.poifs.filesystem.NPOIFSStream)>(r1);

        r0.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer: int nextBlock> = $i0;

        return;
    }

    protected void createBlockIfNeeded() throws java.io.IOException
    {
        java.nio.ByteBuffer $r1, $r14, $r17;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i8, $i10, $i12, $i14, $i16;
        boolean $z0;
        org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector $r2, $r7;
        org.apache.poi.poifs.filesystem.BlockStore $r4, $r6, $r9, $r13, $r16;
        org.apache.poi.poifs.filesystem.NPOIFSStream $r3, $r5, $r8, $r10, $r11, $r12, $r15;
        org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer r0;

        r0 := @this: org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer;

        $r1 = r0.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer: java.nio.ByteBuffer buffer>;

        if $r1 == null goto label1;

        $r14 = r0.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer: java.nio.ByteBuffer buffer>;

        $z0 = virtualinvoke $r14.<java.nio.ByteBuffer: boolean hasRemaining()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $i5 = r0.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer: int nextBlock>;

        i6 = $i5;

        $i8 = (int) -2;

        if $i5 != $i8 goto label3;

        $r5 = r0.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer: org.apache.poi.poifs.filesystem.NPOIFSStream this$0>;

        $r6 = staticinvoke <org.apache.poi.poifs.filesystem.NPOIFSStream: org.apache.poi.poifs.filesystem.BlockStore access$000(org.apache.poi.poifs.filesystem.NPOIFSStream)>($r5);

        $i1 = virtualinvoke $r6.<org.apache.poi.poifs.filesystem.BlockStore: int getFreeBlock()>();

        i6 = $i1;

        $r7 = r0.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer: org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector loopDetector>;

        virtualinvoke $r7.<org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector: void claim(int)>($i1);

        $i10 = (int) -2;

        r0.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer: int nextBlock> = $i10;

        $i2 = r0.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer: int prevBlock>;

        $i12 = (int) -2;

        if $i2 == $i12 goto label2;

        $r12 = r0.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer: org.apache.poi.poifs.filesystem.NPOIFSStream this$0>;

        $r13 = staticinvoke <org.apache.poi.poifs.filesystem.NPOIFSStream: org.apache.poi.poifs.filesystem.BlockStore access$000(org.apache.poi.poifs.filesystem.NPOIFSStream)>($r12);

        $i4 = r0.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer: int prevBlock>;

        virtualinvoke $r13.<org.apache.poi.poifs.filesystem.BlockStore: void setNextBlock(int,int)>($i4, $i1);

     label2:
        $r8 = r0.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer: org.apache.poi.poifs.filesystem.NPOIFSStream this$0>;

        $r9 = staticinvoke <org.apache.poi.poifs.filesystem.NPOIFSStream: org.apache.poi.poifs.filesystem.BlockStore access$000(org.apache.poi.poifs.filesystem.NPOIFSStream)>($r8);

        $i14 = (int) -2;

        virtualinvoke $r9.<org.apache.poi.poifs.filesystem.BlockStore: void setNextBlock(int,int)>($i1, $i14);

        $r10 = r0.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer: org.apache.poi.poifs.filesystem.NPOIFSStream this$0>;

        $i3 = staticinvoke <org.apache.poi.poifs.filesystem.NPOIFSStream: int access$100(org.apache.poi.poifs.filesystem.NPOIFSStream)>($r10);

        $i16 = (int) -2;

        if $i3 != $i16 goto label4;

        $r11 = r0.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer: org.apache.poi.poifs.filesystem.NPOIFSStream this$0>;

        staticinvoke <org.apache.poi.poifs.filesystem.NPOIFSStream: int access$102(org.apache.poi.poifs.filesystem.NPOIFSStream,int)>($r11, $i1);

        goto label4;

     label3:
        $r2 = r0.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer: org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector loopDetector>;

        virtualinvoke $r2.<org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector: void claim(int)>($i5);

        $r3 = r0.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer: org.apache.poi.poifs.filesystem.NPOIFSStream this$0>;

        $r4 = staticinvoke <org.apache.poi.poifs.filesystem.NPOIFSStream: org.apache.poi.poifs.filesystem.BlockStore access$000(org.apache.poi.poifs.filesystem.NPOIFSStream)>($r3);

        $i0 = virtualinvoke $r4.<org.apache.poi.poifs.filesystem.BlockStore: int getNextBlock(int)>($i5);

        r0.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer: int nextBlock> = $i0;

     label4:
        $r15 = r0.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer: org.apache.poi.poifs.filesystem.NPOIFSStream this$0>;

        $r16 = staticinvoke <org.apache.poi.poifs.filesystem.NPOIFSStream: org.apache.poi.poifs.filesystem.BlockStore access$000(org.apache.poi.poifs.filesystem.NPOIFSStream)>($r15);

        $r17 = virtualinvoke $r16.<org.apache.poi.poifs.filesystem.BlockStore: java.nio.ByteBuffer createBlockIfNeeded(int)>(i6);

        r0.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer: java.nio.ByteBuffer buffer> = $r17;

        r0.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer: int prevBlock> = i6;

        return;
    }

    public void write(int) throws java.io.IOException
    {
        byte[] $r1, $r2;
        byte $b2;
        int i0, $i1;
        org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer r0;

        r0 := @this: org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer: byte[] oneByte>;

        $i1 = i0 & 255;

        $b2 = (byte) $i1;

        $r1[0] = $b2;

        $r2 = r0.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer: byte[] oneByte>;

        virtualinvoke r0.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer: void write(byte[])>($r2);

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        byte[] r0;
        java.lang.IndexOutOfBoundsException $r4;
        java.nio.ByteBuffer $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8;
        org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer r1;

        r1 := @this: org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer;

        r0 := @parameter0: byte[];

        i7 := @parameter1: int;

        i8 := @parameter2: int;

        if i7 < 0 goto label1;

        $i0 = lengthof r0;

        if i7 > $i0 goto label1;

        if i8 < 0 goto label1;

        $i2 = i7 + i8;

        $i1 = lengthof r0;

        if $i2 > $i1 goto label1;

        $i3 = i7 + i8;

        if $i3 >= 0 goto label2;

     label1:
        $r4 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r4.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r4;

     label2:
        if i8 != 0 goto label3;

        return;

     label3:
        virtualinvoke r1.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer: void createBlockIfNeeded()>();

        $r2 = r1.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer: java.nio.ByteBuffer buffer>;

        $i4 = virtualinvoke $r2.<java.nio.ByteBuffer: int remaining()>();

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i4, i8);

        $r3 = r1.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer: java.nio.ByteBuffer buffer>;

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>(r0, i7, $i5);

        i7 = i7 + $i5;

        $i6 = i8 - $i5;

        i8 = $i6;

        if $i6 > 0 goto label3;

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector $r4;
        org.apache.poi.poifs.filesystem.BlockStore $r3, $r6;
        int $i0, $i1, $i3;
        org.apache.poi.poifs.filesystem.NPOIFSStream $r2, $r5, $r7;
        org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer r1;

        r1 := @this: org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer;

        $r7 = new org.apache.poi.poifs.filesystem.NPOIFSStream;

        $r2 = r1.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer: org.apache.poi.poifs.filesystem.NPOIFSStream this$0>;

        $r3 = staticinvoke <org.apache.poi.poifs.filesystem.NPOIFSStream: org.apache.poi.poifs.filesystem.BlockStore access$000(org.apache.poi.poifs.filesystem.NPOIFSStream)>($r2);

        $i0 = r1.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer: int nextBlock>;

        specialinvoke $r7.<org.apache.poi.poifs.filesystem.NPOIFSStream: void <init>(org.apache.poi.poifs.filesystem.BlockStore,int)>($r3, $i0);

        $r4 = r1.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer: org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector loopDetector>;

        staticinvoke <org.apache.poi.poifs.filesystem.NPOIFSStream: void access$200(org.apache.poi.poifs.filesystem.NPOIFSStream,org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector)>($r7, $r4);

        $r5 = r1.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer: org.apache.poi.poifs.filesystem.NPOIFSStream this$0>;

        $r6 = staticinvoke <org.apache.poi.poifs.filesystem.NPOIFSStream: org.apache.poi.poifs.filesystem.BlockStore access$000(org.apache.poi.poifs.filesystem.NPOIFSStream)>($r5);

        $i1 = r1.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer: int prevBlock>;

        $i3 = (int) -2;

        virtualinvoke $r6.<org.apache.poi.poifs.filesystem.BlockStore: void setNextBlock(int,int)>($i1, $i3);

        return;
    }
}
