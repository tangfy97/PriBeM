public class com.hp.hpl.jena.graph.GraphEvents extends java.lang.Object
{
    public static final com.hp.hpl.jena.graph.GraphEvents removeAll;
    public static final com.hp.hpl.jena.graph.GraphEvents startRead;
    public static final com.hp.hpl.jena.graph.GraphEvents finishRead;
    private final java.lang.String title;
    protected final java.lang.Object content;

    public void <init>(java.lang.String, java.lang.Object)
    {
        com.hp.hpl.jena.graph.GraphEvents r0;
        java.lang.Object r2;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.graph.GraphEvents;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.graph.GraphEvents: java.lang.String title> = r1;

        r0.<com.hp.hpl.jena.graph.GraphEvents: java.lang.Object content> = r2;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        com.hp.hpl.jena.graph.GraphEvents r1, $r2;
        java.lang.Object r0;
        boolean $z0, $z1, $z2;

        r1 := @this: com.hp.hpl.jena.graph.GraphEvents;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof com.hp.hpl.jena.graph.GraphEvents;

        if $z0 == 0 goto label1;

        $r2 = (com.hp.hpl.jena.graph.GraphEvents) r0;

        $z1 = virtualinvoke r1.<com.hp.hpl.jena.graph.GraphEvents: boolean same(com.hp.hpl.jena.graph.GraphEvents)>($r2);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean same(com.hp.hpl.jena.graph.GraphEvents)
    {
        com.hp.hpl.jena.graph.GraphEvents r0, r1;
        java.lang.Object $r4, $r5;
        java.lang.String $r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: com.hp.hpl.jena.graph.GraphEvents;

        r1 := @parameter0: com.hp.hpl.jena.graph.GraphEvents;

        $r3 = r0.<com.hp.hpl.jena.graph.GraphEvents: java.lang.String title>;

        $r2 = r1.<com.hp.hpl.jena.graph.GraphEvents: java.lang.String title>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r5 = r0.<com.hp.hpl.jena.graph.GraphEvents: java.lang.Object content>;

        $r4 = r1.<com.hp.hpl.jena.graph.GraphEvents: java.lang.Object content>;

        $z1 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public static com.hp.hpl.jena.graph.GraphEvents remove(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.GraphEvents$2 $r0;
        com.hp.hpl.jena.graph.Node r1, r2, r3;
        com.hp.hpl.jena.graph.Triple $r4;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        r3 := @parameter2: com.hp.hpl.jena.graph.Node;

        $r0 = new com.hp.hpl.jena.graph.GraphEvents$2;

        $r4 = staticinvoke <com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Triple create(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r1, r2, r3);

        specialinvoke $r0.<com.hp.hpl.jena.graph.GraphEvents$2: void <init>(java.lang.String,java.lang.Object)>("remove", $r4);

        return $r0;
    }

    public java.lang.String toString()
    {
        com.hp.hpl.jena.graph.GraphEvents r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5;
        java.lang.String $r3, $r6;

        r2 := @this: com.hp.hpl.jena.graph.GraphEvents;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<GE ");

        $r3 = r2.<com.hp.hpl.jena.graph.GraphEvents: java.lang.String title>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public com.hp.hpl.jena.graph.Triple getTriple()
    {
        com.hp.hpl.jena.graph.GraphEvents r0;

        r0 := @this: com.hp.hpl.jena.graph.GraphEvents;

        return null;
    }

    public java.lang.Object getContent()
    {
        com.hp.hpl.jena.graph.GraphEvents r0;
        java.lang.Object $r1;

        r0 := @this: com.hp.hpl.jena.graph.GraphEvents;

        $r1 = r0.<com.hp.hpl.jena.graph.GraphEvents: java.lang.Object content>;

        return $r1;
    }

    public java.lang.Object getTitle()
    {
        com.hp.hpl.jena.graph.GraphEvents r0;
        java.lang.String $r1;

        r0 := @this: com.hp.hpl.jena.graph.GraphEvents;

        $r1 = r0.<com.hp.hpl.jena.graph.GraphEvents: java.lang.String title>;

        return $r1;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.graph.GraphEvents $r1, $r2;
        com.hp.hpl.jena.graph.GraphEvents$1 $r0;

        $r0 = new com.hp.hpl.jena.graph.GraphEvents$1;

        specialinvoke $r0.<com.hp.hpl.jena.graph.GraphEvents$1: void <init>(java.lang.String,java.lang.Object)>("removeAll", "");

        <com.hp.hpl.jena.graph.GraphEvents: com.hp.hpl.jena.graph.GraphEvents removeAll> = $r0;

        $r1 = new com.hp.hpl.jena.graph.GraphEvents;

        specialinvoke $r1.<com.hp.hpl.jena.graph.GraphEvents: void <init>(java.lang.String,java.lang.Object)>("startRead", "");

        <com.hp.hpl.jena.graph.GraphEvents: com.hp.hpl.jena.graph.GraphEvents startRead> = $r1;

        $r2 = new com.hp.hpl.jena.graph.GraphEvents;

        specialinvoke $r2.<com.hp.hpl.jena.graph.GraphEvents: void <init>(java.lang.String,java.lang.Object)>("finishRead", "");

        <com.hp.hpl.jena.graph.GraphEvents: com.hp.hpl.jena.graph.GraphEvents finishRead> = $r2;

        return;
    }
}
