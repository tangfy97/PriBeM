class org.mozilla.javascript.tools.debugger.EvalWindow extends javax.swing.JInternalFrame implements java.awt.event.ActionListener
{
    private static final long serialVersionUID;
    private org.mozilla.javascript.tools.debugger.EvalTextArea evalTextArea;

    public void <init>(java.lang.String, org.mozilla.javascript.tools.debugger.SwingGui)
    {
        javax.swing.JScrollPane $r6;
        org.mozilla.javascript.tools.debugger.EvalTextArea $r2, $r4, $r5, $r7;
        java.lang.String r1;
        org.mozilla.javascript.tools.debugger.EvalWindow r0;
        org.mozilla.javascript.tools.debugger.SwingGui r3;

        r0 := @this: org.mozilla.javascript.tools.debugger.EvalWindow;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: org.mozilla.javascript.tools.debugger.SwingGui;

        specialinvoke r0.<javax.swing.JInternalFrame: void <init>(java.lang.String,boolean,boolean,boolean,boolean)>(r1, 1, 0, 1, 1);

        $r2 = new org.mozilla.javascript.tools.debugger.EvalTextArea;

        specialinvoke $r2.<org.mozilla.javascript.tools.debugger.EvalTextArea: void <init>(org.mozilla.javascript.tools.debugger.SwingGui)>(r3);

        r0.<org.mozilla.javascript.tools.debugger.EvalWindow: org.mozilla.javascript.tools.debugger.EvalTextArea evalTextArea> = $r2;

        $r4 = r0.<org.mozilla.javascript.tools.debugger.EvalWindow: org.mozilla.javascript.tools.debugger.EvalTextArea evalTextArea>;

        virtualinvoke $r4.<org.mozilla.javascript.tools.debugger.EvalTextArea: void setRows(int)>(24);

        $r5 = r0.<org.mozilla.javascript.tools.debugger.EvalWindow: org.mozilla.javascript.tools.debugger.EvalTextArea evalTextArea>;

        virtualinvoke $r5.<org.mozilla.javascript.tools.debugger.EvalTextArea: void setColumns(int)>(80);

        $r6 = new javax.swing.JScrollPane;

        $r7 = r0.<org.mozilla.javascript.tools.debugger.EvalWindow: org.mozilla.javascript.tools.debugger.EvalTextArea evalTextArea>;

        specialinvoke $r6.<javax.swing.JScrollPane: void <init>(java.awt.Component)>($r7);

        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.EvalWindow: void setContentPane(java.awt.Container)>($r6);

        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.EvalWindow: void pack()>();

        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.EvalWindow: void setVisible(boolean)>(1);

        return;
    }

    public void setEnabled(boolean)
    {
        org.mozilla.javascript.tools.debugger.EvalTextArea $r1;
        org.mozilla.javascript.tools.debugger.EvalWindow r0;
        boolean z0;

        r0 := @this: org.mozilla.javascript.tools.debugger.EvalWindow;

        z0 := @parameter0: boolean;

        specialinvoke r0.<javax.swing.JInternalFrame: void setEnabled(boolean)>(z0);

        $r1 = r0.<org.mozilla.javascript.tools.debugger.EvalWindow: org.mozilla.javascript.tools.debugger.EvalTextArea evalTextArea>;

        virtualinvoke $r1.<org.mozilla.javascript.tools.debugger.EvalTextArea: void setEnabled(boolean)>(z0);

        return;
    }

    public void actionPerformed(java.awt.event.ActionEvent)
    {
        java.awt.event.ActionEvent r0;
        org.mozilla.javascript.tools.debugger.EvalTextArea $r3, $r4, $r5;
        java.lang.String $r1;
        boolean $z0, $z1, $z2;
        org.mozilla.javascript.tools.debugger.EvalWindow r2;

        r2 := @this: org.mozilla.javascript.tools.debugger.EvalWindow;

        r0 := @parameter0: java.awt.event.ActionEvent;

        $r1 = virtualinvoke r0.<java.awt.event.ActionEvent: java.lang.String getActionCommand()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Cut");

        if $z0 == 0 goto label1;

        $r5 = r2.<org.mozilla.javascript.tools.debugger.EvalWindow: org.mozilla.javascript.tools.debugger.EvalTextArea evalTextArea>;

        virtualinvoke $r5.<org.mozilla.javascript.tools.debugger.EvalTextArea: void cut()>();

        goto label3;

     label1:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Copy");

        if $z1 == 0 goto label2;

        $r4 = r2.<org.mozilla.javascript.tools.debugger.EvalWindow: org.mozilla.javascript.tools.debugger.EvalTextArea evalTextArea>;

        virtualinvoke $r4.<org.mozilla.javascript.tools.debugger.EvalTextArea: void copy()>();

        goto label3;

     label2:
        $z2 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Paste");

        if $z2 == 0 goto label3;

        $r3 = r2.<org.mozilla.javascript.tools.debugger.EvalWindow: org.mozilla.javascript.tools.debugger.EvalTextArea evalTextArea>;

        virtualinvoke $r3.<org.mozilla.javascript.tools.debugger.EvalTextArea: void paste()>();

     label3:
        return;
    }

    public static void <clinit>()
    {
        <org.mozilla.javascript.tools.debugger.EvalWindow: long serialVersionUID> = -2860585845212160176L;

        return;
    }
}
