public class com.google.gxp.compiler.codegen.IllegalExpressionError extends com.google.gxp.compiler.alerts.ErrorAlert
{

    public void <init>(com.google.gxp.compiler.alerts.SourcePosition, java.lang.String, java.lang.String)
    {
        com.google.gxp.compiler.codegen.IllegalExpressionError r0;
        com.google.gxp.compiler.alerts.SourcePosition r1;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r8;
        java.lang.String r4, r7, $r9;

        r0 := @this: com.google.gxp.compiler.codegen.IllegalExpressionError;

        r1 := @parameter0: com.google.gxp.compiler.alerts.SourcePosition;

        r4 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal ");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expression: ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.google.gxp.compiler.alerts.ErrorAlert: void <init>(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String)>(r1, $r9);

        return;
    }

    public void <init>(com.google.gxp.compiler.base.NativeExpression, com.google.gxp.compiler.base.OutputLanguage)
    {
        com.google.gxp.compiler.codegen.IllegalExpressionError r0;
        com.google.gxp.compiler.alerts.SourcePosition $r2;
        com.google.gxp.compiler.base.NativeExpression r1;
        com.google.gxp.compiler.base.OutputLanguage r3;
        java.lang.String $r4, $r5;

        r0 := @this: com.google.gxp.compiler.codegen.IllegalExpressionError;

        r1 := @parameter0: com.google.gxp.compiler.base.NativeExpression;

        r3 := @parameter1: com.google.gxp.compiler.base.OutputLanguage;

        $r2 = virtualinvoke r1.<com.google.gxp.compiler.base.NativeExpression: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r4 = virtualinvoke r3.<com.google.gxp.compiler.base.OutputLanguage: java.lang.String getDisplay()>();

        $r5 = virtualinvoke r1.<com.google.gxp.compiler.base.NativeExpression: java.lang.String getNativeCode(com.google.gxp.compiler.base.OutputLanguage)>(r3);

        specialinvoke r0.<com.google.gxp.compiler.codegen.IllegalExpressionError: void <init>(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String,java.lang.String)>($r2, $r4, $r5);

        return;
    }
}
