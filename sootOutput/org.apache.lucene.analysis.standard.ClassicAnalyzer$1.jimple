class org.apache.lucene.analysis.standard.ClassicAnalyzer$1 extends org.apache.lucene.analysis.Analyzer$TokenStreamComponents
{
    final org.apache.lucene.analysis.standard.ClassicTokenizer val$src;
    final org.apache.lucene.analysis.standard.ClassicAnalyzer this$0;

    void <init>(org.apache.lucene.analysis.standard.ClassicAnalyzer, org.apache.lucene.analysis.Tokenizer, org.apache.lucene.analysis.TokenStream, org.apache.lucene.analysis.standard.ClassicTokenizer)
    {
        org.apache.lucene.analysis.Tokenizer r3;
        org.apache.lucene.analysis.standard.ClassicAnalyzer$1 r0;
        org.apache.lucene.analysis.TokenStream r4;
        org.apache.lucene.analysis.standard.ClassicAnalyzer r1;
        org.apache.lucene.analysis.standard.ClassicTokenizer r2;

        r0 := @this: org.apache.lucene.analysis.standard.ClassicAnalyzer$1;

        r1 := @parameter0: org.apache.lucene.analysis.standard.ClassicAnalyzer;

        r3 := @parameter1: org.apache.lucene.analysis.Tokenizer;

        r4 := @parameter2: org.apache.lucene.analysis.TokenStream;

        r2 := @parameter3: org.apache.lucene.analysis.standard.ClassicTokenizer;

        r0.<org.apache.lucene.analysis.standard.ClassicAnalyzer$1: org.apache.lucene.analysis.standard.ClassicAnalyzer this$0> = r1;

        r0.<org.apache.lucene.analysis.standard.ClassicAnalyzer$1: org.apache.lucene.analysis.standard.ClassicTokenizer val$src> = r2;

        specialinvoke r0.<org.apache.lucene.analysis.Analyzer$TokenStreamComponents: void <init>(org.apache.lucene.analysis.Tokenizer,org.apache.lucene.analysis.TokenStream)>(r3, r4);

        return;
    }

    protected void setReader(java.io.Reader) throws java.io.IOException
    {
        org.apache.lucene.analysis.standard.ClassicAnalyzer$1 r0;
        org.apache.lucene.analysis.standard.ClassicAnalyzer $r1;
        int $i0;
        java.io.Reader r3;
        org.apache.lucene.analysis.standard.ClassicTokenizer $r2;

        r0 := @this: org.apache.lucene.analysis.standard.ClassicAnalyzer$1;

        r3 := @parameter0: java.io.Reader;

        $r2 = r0.<org.apache.lucene.analysis.standard.ClassicAnalyzer$1: org.apache.lucene.analysis.standard.ClassicTokenizer val$src>;

        $r1 = r0.<org.apache.lucene.analysis.standard.ClassicAnalyzer$1: org.apache.lucene.analysis.standard.ClassicAnalyzer this$0>;

        $i0 = staticinvoke <org.apache.lucene.analysis.standard.ClassicAnalyzer: int access$000(org.apache.lucene.analysis.standard.ClassicAnalyzer)>($r1);

        virtualinvoke $r2.<org.apache.lucene.analysis.standard.ClassicTokenizer: void setMaxTokenLength(int)>($i0);

        specialinvoke r0.<org.apache.lucene.analysis.Analyzer$TokenStreamComponents: void setReader(java.io.Reader)>(r3);

        return;
    }
}
