final class kodkod.util.ints.Ints$UnmodifiableIntSet extends kodkod.util.ints.AbstractIntSet
{
    private final kodkod.util.ints.IntSet s;

    void <init>(kodkod.util.ints.IntSet)
    {
        kodkod.util.ints.Ints$UnmodifiableIntSet r0;
        kodkod.util.ints.IntSet r1;

        r0 := @this: kodkod.util.ints.Ints$UnmodifiableIntSet;

        r1 := @parameter0: kodkod.util.ints.IntSet;

        specialinvoke r0.<kodkod.util.ints.AbstractIntSet: void <init>()>();

        r0.<kodkod.util.ints.Ints$UnmodifiableIntSet: kodkod.util.ints.IntSet s> = r1;

        return;
    }

    public int size()
    {
        int $i0;
        kodkod.util.ints.Ints$UnmodifiableIntSet r0;
        kodkod.util.ints.IntSet $r1;

        r0 := @this: kodkod.util.ints.Ints$UnmodifiableIntSet;

        $r1 = r0.<kodkod.util.ints.Ints$UnmodifiableIntSet: kodkod.util.ints.IntSet s>;

        $i0 = interfaceinvoke $r1.<kodkod.util.ints.IntSet: int size()>();

        return $i0;
    }

    public boolean contains(int)
    {
        kodkod.util.ints.Ints$UnmodifiableIntSet r0;
        kodkod.util.ints.IntSet $r1;
        int i0;
        boolean $z0;

        r0 := @this: kodkod.util.ints.Ints$UnmodifiableIntSet;

        i0 := @parameter0: int;

        $r1 = r0.<kodkod.util.ints.Ints$UnmodifiableIntSet: kodkod.util.ints.IntSet s>;

        $z0 = interfaceinvoke $r1.<kodkod.util.ints.IntSet: boolean contains(int)>(i0);

        return $z0;
    }

    public int min()
    {
        int $i0;
        kodkod.util.ints.Ints$UnmodifiableIntSet r0;
        kodkod.util.ints.IntSet $r1;

        r0 := @this: kodkod.util.ints.Ints$UnmodifiableIntSet;

        $r1 = r0.<kodkod.util.ints.Ints$UnmodifiableIntSet: kodkod.util.ints.IntSet s>;

        $i0 = interfaceinvoke $r1.<kodkod.util.ints.IntSet: int min()>();

        return $i0;
    }

    public int max()
    {
        int $i0;
        kodkod.util.ints.Ints$UnmodifiableIntSet r0;
        kodkod.util.ints.IntSet $r1;

        r0 := @this: kodkod.util.ints.Ints$UnmodifiableIntSet;

        $r1 = r0.<kodkod.util.ints.Ints$UnmodifiableIntSet: kodkod.util.ints.IntSet s>;

        $i0 = interfaceinvoke $r1.<kodkod.util.ints.IntSet: int max()>();

        return $i0;
    }

    public boolean containsAll(kodkod.util.ints.IntSet)
    {
        kodkod.util.ints.Ints$UnmodifiableIntSet r0;
        kodkod.util.ints.IntSet r1, $r2;
        boolean $z0;

        r0 := @this: kodkod.util.ints.Ints$UnmodifiableIntSet;

        r1 := @parameter0: kodkod.util.ints.IntSet;

        $r2 = r0.<kodkod.util.ints.Ints$UnmodifiableIntSet: kodkod.util.ints.IntSet s>;

        $z0 = interfaceinvoke $r2.<kodkod.util.ints.IntSet: boolean containsAll(kodkod.util.ints.IntCollection)>(r1);

        return $z0;
    }

    public kodkod.util.ints.IntIterator iterator(int, int)
    {
        kodkod.util.ints.Ints$UnmodifiableIntSet$1 $r0;
        kodkod.util.ints.Ints$UnmodifiableIntSet r1;
        int i0, i1;

        r1 := @this: kodkod.util.ints.Ints$UnmodifiableIntSet;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new kodkod.util.ints.Ints$UnmodifiableIntSet$1;

        specialinvoke $r0.<kodkod.util.ints.Ints$UnmodifiableIntSet$1: void <init>(kodkod.util.ints.Ints$UnmodifiableIntSet,int,int)>(r1, i0, i1);

        return $r0;
    }

    public int floor(int)
    {
        kodkod.util.ints.Ints$UnmodifiableIntSet r0;
        kodkod.util.ints.IntSet $r1;
        int i0, $i1;

        r0 := @this: kodkod.util.ints.Ints$UnmodifiableIntSet;

        i0 := @parameter0: int;

        $r1 = r0.<kodkod.util.ints.Ints$UnmodifiableIntSet: kodkod.util.ints.IntSet s>;

        $i1 = interfaceinvoke $r1.<kodkod.util.ints.IntSet: int floor(int)>(i0);

        return $i1;
    }

    public int ceil(int)
    {
        kodkod.util.ints.Ints$UnmodifiableIntSet r0;
        kodkod.util.ints.IntSet $r1;
        int i0, $i1;

        r0 := @this: kodkod.util.ints.Ints$UnmodifiableIntSet;

        i0 := @parameter0: int;

        $r1 = r0.<kodkod.util.ints.Ints$UnmodifiableIntSet: kodkod.util.ints.IntSet s>;

        $i1 = interfaceinvoke $r1.<kodkod.util.ints.IntSet: int ceil(int)>(i0);

        return $i1;
    }

    public kodkod.util.ints.IntSet clone() throws java.lang.CloneNotSupportedException
    {
        kodkod.util.ints.Ints$UnmodifiableIntSet r0;
        kodkod.util.ints.IntSet $r1, $r2;

        r0 := @this: kodkod.util.ints.Ints$UnmodifiableIntSet;

        $r1 = r0.<kodkod.util.ints.Ints$UnmodifiableIntSet: kodkod.util.ints.IntSet s>;

        $r2 = interfaceinvoke $r1.<kodkod.util.ints.IntSet: kodkod.util.ints.IntSet clone()>();

        return $r2;
    }

    static kodkod.util.ints.IntSet access$0(kodkod.util.ints.Ints$UnmodifiableIntSet)
    {
        kodkod.util.ints.Ints$UnmodifiableIntSet r0;
        kodkod.util.ints.IntSet $r1;

        r0 := @parameter0: kodkod.util.ints.Ints$UnmodifiableIntSet;

        $r1 = r0.<kodkod.util.ints.Ints$UnmodifiableIntSet: kodkod.util.ints.IntSet s>;

        return $r1;
    }
}
