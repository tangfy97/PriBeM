public class org.apache.lucene.analysis.core.LetterTokenizer extends org.apache.lucene.analysis.util.CharTokenizer
{

    public void <init>(org.apache.lucene.util.Version, java.io.Reader)
    {
        java.io.Reader r2;
        org.apache.lucene.util.Version r1;
        org.apache.lucene.analysis.core.LetterTokenizer r0;

        r0 := @this: org.apache.lucene.analysis.core.LetterTokenizer;

        r1 := @parameter0: org.apache.lucene.util.Version;

        r2 := @parameter1: java.io.Reader;

        specialinvoke r0.<org.apache.lucene.analysis.util.CharTokenizer: void <init>(org.apache.lucene.util.Version,java.io.Reader)>(r1, r2);

        return;
    }

    public void <init>(org.apache.lucene.util.Version, org.apache.lucene.util.AttributeSource$AttributeFactory, java.io.Reader)
    {
        org.apache.lucene.util.AttributeSource$AttributeFactory r2;
        java.io.Reader r3;
        org.apache.lucene.util.Version r1;
        org.apache.lucene.analysis.core.LetterTokenizer r0;

        r0 := @this: org.apache.lucene.analysis.core.LetterTokenizer;

        r1 := @parameter0: org.apache.lucene.util.Version;

        r2 := @parameter1: org.apache.lucene.util.AttributeSource$AttributeFactory;

        r3 := @parameter2: java.io.Reader;

        specialinvoke r0.<org.apache.lucene.analysis.util.CharTokenizer: void <init>(org.apache.lucene.util.Version,org.apache.lucene.util.AttributeSource$AttributeFactory,java.io.Reader)>(r1, r2, r3);

        return;
    }

    protected boolean isTokenChar(int)
    {
        int i0;
        boolean $z0;
        org.apache.lucene.analysis.core.LetterTokenizer r0;

        r0 := @this: org.apache.lucene.analysis.core.LetterTokenizer;

        i0 := @parameter0: int;

        $z0 = staticinvoke <java.lang.Character: boolean isLetter(int)>(i0);

        return $z0;
    }
}
