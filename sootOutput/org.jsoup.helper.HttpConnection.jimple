public class org.jsoup.helper.HttpConnection extends java.lang.Object implements org.jsoup.Connection
{
    private org.jsoup.Connection$Request req;
    private org.jsoup.Connection$Response res;

    public static org.jsoup.Connection connect(java.lang.String)
    {
        org.jsoup.helper.HttpConnection $r0;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.jsoup.helper.HttpConnection;

        specialinvoke $r0.<org.jsoup.helper.HttpConnection: void <init>()>();

        interfaceinvoke $r0.<org.jsoup.Connection: org.jsoup.Connection url(java.lang.String)>(r1);

        return $r0;
    }

    public static org.jsoup.Connection connect(java.net.URL)
    {
        org.jsoup.helper.HttpConnection $r0;
        java.net.URL r1;

        r1 := @parameter0: java.net.URL;

        $r0 = new org.jsoup.helper.HttpConnection;

        specialinvoke $r0.<org.jsoup.helper.HttpConnection: void <init>()>();

        interfaceinvoke $r0.<org.jsoup.Connection: org.jsoup.Connection url(java.net.URL)>(r1);

        return $r0;
    }

    private void <init>()
    {
        org.jsoup.helper.HttpConnection r0;
        org.jsoup.helper.HttpConnection$Request $r1;
        org.jsoup.helper.HttpConnection$Response $r2;

        r0 := @this: org.jsoup.helper.HttpConnection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.jsoup.helper.HttpConnection$Request;

        specialinvoke $r1.<org.jsoup.helper.HttpConnection$Request: void <init>(org.jsoup.helper.HttpConnection$1)>(null);

        r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req> = $r1;

        $r2 = new org.jsoup.helper.HttpConnection$Response;

        specialinvoke $r2.<org.jsoup.helper.HttpConnection$Response: void <init>()>();

        r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Response res> = $r2;

        return;
    }

    public org.jsoup.Connection url(java.net.URL)
    {
        org.jsoup.helper.HttpConnection r0;
        org.jsoup.Connection$Request $r2;
        java.net.URL r1;

        r0 := @this: org.jsoup.helper.HttpConnection;

        r1 := @parameter0: java.net.URL;

        $r2 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;

        interfaceinvoke $r2.<org.jsoup.Connection$Request: org.jsoup.Connection$Base url(java.net.URL)>(r1);

        return r0;
    }

    public org.jsoup.Connection url(java.lang.String)
    {
        java.net.MalformedURLException $r4;
        java.net.URL $r2;
        org.jsoup.Connection$Request $r3;
        java.lang.IllegalArgumentException $r5;
        org.jsoup.helper.HttpConnection r1;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String r0, $r9;

        r1 := @this: org.jsoup.helper.HttpConnection;

        r0 := @parameter0: java.lang.String;

        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String,java.lang.String)>(r0, "Must supply a valid URL");

     label1:
        $r3 = r1.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;

        $r2 = new java.net.URL;

        specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>(r0);

        interfaceinvoke $r3.<org.jsoup.Connection$Request: org.jsoup.Connection$Base url(java.net.URL)>($r2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Malformed URL: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r9, $r4);

        throw $r5;

     label4:
        return r1;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }

    public org.jsoup.Connection userAgent(java.lang.String)
    {
        org.jsoup.helper.HttpConnection r1;
        org.jsoup.Connection$Request $r2;
        java.lang.String r0;

        r1 := @this: org.jsoup.helper.HttpConnection;

        r0 := @parameter0: java.lang.String;

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>(r0, "User agent must not be null");

        $r2 = r1.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;

        interfaceinvoke $r2.<org.jsoup.Connection$Request: org.jsoup.Connection$Base header(java.lang.String,java.lang.String)>("User-Agent", r0);

        return r1;
    }

    public org.jsoup.Connection timeout(int)
    {
        int i0;
        org.jsoup.helper.HttpConnection r0;
        org.jsoup.Connection$Request $r1;

        r0 := @this: org.jsoup.helper.HttpConnection;

        i0 := @parameter0: int;

        $r1 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;

        interfaceinvoke $r1.<org.jsoup.Connection$Request: org.jsoup.Connection$Request timeout(int)>(i0);

        return r0;
    }

    public org.jsoup.Connection maxBodySize(int)
    {
        int i0;
        org.jsoup.helper.HttpConnection r0;
        org.jsoup.Connection$Request $r1;

        r0 := @this: org.jsoup.helper.HttpConnection;

        i0 := @parameter0: int;

        $r1 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;

        interfaceinvoke $r1.<org.jsoup.Connection$Request: org.jsoup.Connection$Request maxBodySize(int)>(i0);

        return r0;
    }

    public org.jsoup.Connection followRedirects(boolean)
    {
        org.jsoup.helper.HttpConnection r0;
        org.jsoup.Connection$Request $r1;
        boolean z0;

        r0 := @this: org.jsoup.helper.HttpConnection;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;

        interfaceinvoke $r1.<org.jsoup.Connection$Request: org.jsoup.Connection$Request followRedirects(boolean)>(z0);

        return r0;
    }

    public org.jsoup.Connection referrer(java.lang.String)
    {
        org.jsoup.helper.HttpConnection r1;
        org.jsoup.Connection$Request $r2;
        java.lang.String r0;

        r1 := @this: org.jsoup.helper.HttpConnection;

        r0 := @parameter0: java.lang.String;

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>(r0, "Referrer must not be null");

        $r2 = r1.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;

        interfaceinvoke $r2.<org.jsoup.Connection$Request: org.jsoup.Connection$Base header(java.lang.String,java.lang.String)>("Referer", r0);

        return r1;
    }

    public org.jsoup.Connection method(org.jsoup.Connection$Method)
    {
        org.jsoup.helper.HttpConnection r0;
        org.jsoup.Connection$Method r1;
        org.jsoup.Connection$Request $r2;

        r0 := @this: org.jsoup.helper.HttpConnection;

        r1 := @parameter0: org.jsoup.Connection$Method;

        $r2 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;

        interfaceinvoke $r2.<org.jsoup.Connection$Request: org.jsoup.Connection$Base method(org.jsoup.Connection$Method)>(r1);

        return r0;
    }

    public org.jsoup.Connection ignoreHttpErrors(boolean)
    {
        org.jsoup.helper.HttpConnection r0;
        org.jsoup.Connection$Request $r1;
        boolean z0;

        r0 := @this: org.jsoup.helper.HttpConnection;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;

        interfaceinvoke $r1.<org.jsoup.Connection$Request: org.jsoup.Connection$Request ignoreHttpErrors(boolean)>(z0);

        return r0;
    }

    public org.jsoup.Connection ignoreContentType(boolean)
    {
        org.jsoup.helper.HttpConnection r0;
        org.jsoup.Connection$Request $r1;
        boolean z0;

        r0 := @this: org.jsoup.helper.HttpConnection;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;

        interfaceinvoke $r1.<org.jsoup.Connection$Request: org.jsoup.Connection$Request ignoreContentType(boolean)>(z0);

        return r0;
    }

    public org.jsoup.Connection data(java.lang.String, java.lang.String)
    {
        org.jsoup.helper.HttpConnection r0;
        org.jsoup.Connection$Request $r3;
        java.lang.String r1, r2;
        org.jsoup.helper.HttpConnection$KeyVal $r4;

        r0 := @this: org.jsoup.helper.HttpConnection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;

        $r4 = staticinvoke <org.jsoup.helper.HttpConnection$KeyVal: org.jsoup.helper.HttpConnection$KeyVal create(java.lang.String,java.lang.String)>(r1, r2);

        interfaceinvoke $r3.<org.jsoup.Connection$Request: org.jsoup.Connection$Request data(org.jsoup.Connection$KeyVal)>($r4);

        return r0;
    }

    public org.jsoup.Connection data(java.util.Map)
    {
        java.util.Map$Entry r5;
        java.util.Iterator $r2;
        java.util.Set $r1;
        org.jsoup.Connection$Request $r6;
        java.util.Map r0;
        org.jsoup.helper.HttpConnection r3;
        java.lang.Object $r4, $r7, $r9;
        java.lang.String $r8, $r10;
        boolean $z0;
        org.jsoup.helper.HttpConnection$KeyVal $r11;

        r3 := @this: org.jsoup.helper.HttpConnection;

        r0 := @parameter0: java.util.Map;

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>(r0, "Data map must not be null");

        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r6 = r3.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;

        $r7 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.String) $r7;

        $r9 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (java.lang.String) $r9;

        $r11 = staticinvoke <org.jsoup.helper.HttpConnection$KeyVal: org.jsoup.helper.HttpConnection$KeyVal create(java.lang.String,java.lang.String)>($r8, $r10);

        interfaceinvoke $r6.<org.jsoup.Connection$Request: org.jsoup.Connection$Request data(org.jsoup.Connection$KeyVal)>($r11);

        goto label1;

     label2:
        return r3;
    }

    public transient org.jsoup.Connection data(java.lang.String[])
    {
        java.lang.String[] r0;
        org.jsoup.Connection$Request $r4;
        int $i0, $i1, $i2, i3, $i4;
        org.jsoup.helper.HttpConnection r1;
        java.lang.String r2, r3;
        org.jsoup.helper.HttpConnection$KeyVal $r5;
        boolean $z0;

        r1 := @this: org.jsoup.helper.HttpConnection;

        r0 := @parameter0: java.lang.String[];

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>(r0, "Data key value pairs must not be null");

        $i0 = lengthof r0;

        $i1 = $i0 % 2;

        if $i1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.jsoup.helper.Validate: void isTrue(boolean,java.lang.String)>($z0, "Must supply an even number of key value pairs");

        i3 = 0;

     label3:
        $i4 = lengthof r0;

        if i3 >= $i4 goto label4;

        r2 = r0[i3];

        $i2 = i3 + 1;

        r3 = r0[$i2];

        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String,java.lang.String)>(r2, "Data key must not be empty");

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>(r3, "Data value must not be null");

        $r4 = r1.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;

        $r5 = staticinvoke <org.jsoup.helper.HttpConnection$KeyVal: org.jsoup.helper.HttpConnection$KeyVal create(java.lang.String,java.lang.String)>(r2, r3);

        interfaceinvoke $r4.<org.jsoup.Connection$Request: org.jsoup.Connection$Request data(org.jsoup.Connection$KeyVal)>($r5);

        i3 = i3 + 2;

        goto label3;

     label4:
        return r1;
    }

    public org.jsoup.Connection header(java.lang.String, java.lang.String)
    {
        org.jsoup.helper.HttpConnection r0;
        org.jsoup.Connection$Request $r3;
        java.lang.String r1, r2;

        r0 := @this: org.jsoup.helper.HttpConnection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;

        interfaceinvoke $r3.<org.jsoup.Connection$Request: org.jsoup.Connection$Base header(java.lang.String,java.lang.String)>(r1, r2);

        return r0;
    }

    public org.jsoup.Connection cookie(java.lang.String, java.lang.String)
    {
        org.jsoup.helper.HttpConnection r0;
        org.jsoup.Connection$Request $r3;
        java.lang.String r1, r2;

        r0 := @this: org.jsoup.helper.HttpConnection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;

        interfaceinvoke $r3.<org.jsoup.Connection$Request: org.jsoup.Connection$Base cookie(java.lang.String,java.lang.String)>(r1, r2);

        return r0;
    }

    public org.jsoup.Connection cookies(java.util.Map)
    {
        java.util.Map$Entry r5;
        java.util.Iterator $r2;
        java.util.Set $r1;
        org.jsoup.Connection$Request $r6;
        java.util.Map r0;
        org.jsoup.helper.HttpConnection r3;
        java.lang.Object $r4, $r7, $r9;
        java.lang.String $r8, $r10;
        boolean $z0;

        r3 := @this: org.jsoup.helper.HttpConnection;

        r0 := @parameter0: java.util.Map;

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>(r0, "Cookie map must not be null");

        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r6 = r3.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;

        $r7 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.String) $r7;

        $r9 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (java.lang.String) $r9;

        interfaceinvoke $r6.<org.jsoup.Connection$Request: org.jsoup.Connection$Base cookie(java.lang.String,java.lang.String)>($r8, $r10);

        goto label1;

     label2:
        return r3;
    }

    public org.jsoup.Connection parser(org.jsoup.parser.Parser)
    {
        org.jsoup.helper.HttpConnection r0;
        org.jsoup.Connection$Request $r2;
        org.jsoup.parser.Parser r1;

        r0 := @this: org.jsoup.helper.HttpConnection;

        r1 := @parameter0: org.jsoup.parser.Parser;

        $r2 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;

        interfaceinvoke $r2.<org.jsoup.Connection$Request: org.jsoup.Connection$Request parser(org.jsoup.parser.Parser)>(r1);

        return r0;
    }

    public org.jsoup.nodes.Document get() throws java.io.IOException
    {
        org.jsoup.Connection$Method $r1;
        org.jsoup.Connection$Response $r3;
        org.jsoup.nodes.Document $r4;
        org.jsoup.helper.HttpConnection r0;
        org.jsoup.Connection$Request $r2;

        r0 := @this: org.jsoup.helper.HttpConnection;

        $r2 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;

        $r1 = <org.jsoup.Connection$Method: org.jsoup.Connection$Method GET>;

        interfaceinvoke $r2.<org.jsoup.Connection$Request: org.jsoup.Connection$Base method(org.jsoup.Connection$Method)>($r1);

        virtualinvoke r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Response execute()>();

        $r3 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Response res>;

        $r4 = interfaceinvoke $r3.<org.jsoup.Connection$Response: org.jsoup.nodes.Document parse()>();

        return $r4;
    }

    public org.jsoup.nodes.Document post() throws java.io.IOException
    {
        org.jsoup.Connection$Method $r1;
        org.jsoup.Connection$Response $r3;
        org.jsoup.nodes.Document $r4;
        org.jsoup.helper.HttpConnection r0;
        org.jsoup.Connection$Request $r2;

        r0 := @this: org.jsoup.helper.HttpConnection;

        $r2 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;

        $r1 = <org.jsoup.Connection$Method: org.jsoup.Connection$Method POST>;

        interfaceinvoke $r2.<org.jsoup.Connection$Request: org.jsoup.Connection$Base method(org.jsoup.Connection$Method)>($r1);

        virtualinvoke r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Response execute()>();

        $r3 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Response res>;

        $r4 = interfaceinvoke $r3.<org.jsoup.Connection$Response: org.jsoup.nodes.Document parse()>();

        return $r4;
    }

    public org.jsoup.Connection$Response execute() throws java.io.IOException
    {
        org.jsoup.Connection$Response $r3;
        org.jsoup.helper.HttpConnection r0;
        org.jsoup.Connection$Request $r1;
        org.jsoup.helper.HttpConnection$Response $r2;

        r0 := @this: org.jsoup.helper.HttpConnection;

        $r1 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;

        $r2 = staticinvoke <org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request)>($r1);

        r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Response res> = $r2;

        $r3 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Response res>;

        return $r3;
    }

    public org.jsoup.Connection$Request request()
    {
        org.jsoup.helper.HttpConnection r0;
        org.jsoup.Connection$Request $r1;

        r0 := @this: org.jsoup.helper.HttpConnection;

        $r1 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req>;

        return $r1;
    }

    public org.jsoup.Connection request(org.jsoup.Connection$Request)
    {
        org.jsoup.helper.HttpConnection r0;
        org.jsoup.Connection$Request r1;

        r0 := @this: org.jsoup.helper.HttpConnection;

        r1 := @parameter0: org.jsoup.Connection$Request;

        r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Request req> = r1;

        return r0;
    }

    public org.jsoup.Connection$Response response()
    {
        org.jsoup.helper.HttpConnection r0;
        org.jsoup.Connection$Response $r1;

        r0 := @this: org.jsoup.helper.HttpConnection;

        $r1 = r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Response res>;

        return $r1;
    }

    public org.jsoup.Connection response(org.jsoup.Connection$Response)
    {
        org.jsoup.helper.HttpConnection r0;
        org.jsoup.Connection$Response r1;

        r0 := @this: org.jsoup.helper.HttpConnection;

        r1 := @parameter0: org.jsoup.Connection$Response;

        r0.<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Response res> = r1;

        return r0;
    }
}
