public final class org.apache.poi.hslf.usermodel.RichTextRun extends java.lang.Object
{
    protected org.apache.poi.util.POILogger logger;
    private org.apache.poi.hslf.model.TextRun parentRun;
    private org.apache.poi.hslf.usermodel.SlideShow slideShow;
    private int startPos;
    private int length;
    private java.lang.String _fontname;
    private org.apache.poi.hslf.model.textproperties.TextPropCollection paragraphStyle;
    private org.apache.poi.hslf.model.textproperties.TextPropCollection characterStyle;
    private boolean sharingParagraphStyle;
    private boolean sharingCharacterStyle;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.poi.hslf.model.TextRun, int, int)
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        int i0, i1;
        org.apache.poi.hslf.model.TextRun r1;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        r1 := @parameter0: org.apache.poi.hslf.model.TextRun;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: void <init>(org.apache.poi.hslf.model.TextRun,int,int,org.apache.poi.hslf.model.textproperties.TextPropCollection,org.apache.poi.hslf.model.textproperties.TextPropCollection,boolean,boolean)>(r1, i0, i1, null, null, 0, 0);

        return;
    }

    public void <init>(org.apache.poi.hslf.model.TextRun, int, int, org.apache.poi.hslf.model.textproperties.TextPropCollection, org.apache.poi.hslf.model.textproperties.TextPropCollection, boolean, boolean)
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        org.apache.poi.util.POILogger $r2;
        org.apache.poi.hslf.model.textproperties.TextPropCollection r4, r5;
        int i0, i1;
        java.lang.Class $r1;
        org.apache.poi.hslf.model.TextRun r3;
        boolean z0, z1;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        r3 := @parameter0: org.apache.poi.hslf.model.TextRun;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r4 := @parameter3: org.apache.poi.hslf.model.textproperties.TextPropCollection;

        r5 := @parameter4: org.apache.poi.hslf.model.textproperties.TextPropCollection;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>($r1);

        r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.util.POILogger logger> = $r2;

        r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.TextRun parentRun> = r3;

        r0.<org.apache.poi.hslf.usermodel.RichTextRun: int startPos> = i0;

        r0.<org.apache.poi.hslf.usermodel.RichTextRun: int length> = i1;

        r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.textproperties.TextPropCollection paragraphStyle> = r4;

        r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.textproperties.TextPropCollection characterStyle> = r5;

        r0.<org.apache.poi.hslf.usermodel.RichTextRun: boolean sharingParagraphStyle> = z0;

        r0.<org.apache.poi.hslf.usermodel.RichTextRun: boolean sharingCharacterStyle> = z1;

        return;
    }

    public void supplyTextProps(org.apache.poi.hslf.model.textproperties.TextPropCollection, org.apache.poi.hslf.model.textproperties.TextPropCollection, boolean, boolean)
    {
        java.lang.IllegalStateException $r2;
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        org.apache.poi.hslf.model.textproperties.TextPropCollection $r1, $r3, r4, r5;
        boolean z0, z1;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        r4 := @parameter0: org.apache.poi.hslf.model.textproperties.TextPropCollection;

        r5 := @parameter1: org.apache.poi.hslf.model.textproperties.TextPropCollection;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r1 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.textproperties.TextPropCollection paragraphStyle>;

        if $r1 != null goto label1;

        $r3 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.textproperties.TextPropCollection characterStyle>;

        if $r3 == null goto label2;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t call supplyTextProps if run already has some");

        throw $r2;

     label2:
        r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.textproperties.TextPropCollection paragraphStyle> = r4;

        r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.textproperties.TextPropCollection characterStyle> = r5;

        r0.<org.apache.poi.hslf.usermodel.RichTextRun: boolean sharingParagraphStyle> = z0;

        r0.<org.apache.poi.hslf.usermodel.RichTextRun: boolean sharingCharacterStyle> = z1;

        return;
    }

    public void supplySlideShow(org.apache.poi.hslf.usermodel.SlideShow)
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        org.apache.poi.hslf.usermodel.SlideShow r1;
        java.lang.String $r2, $r3;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        r1 := @parameter0: org.apache.poi.hslf.usermodel.SlideShow;

        r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.usermodel.SlideShow slideShow> = r1;

        $r2 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: java.lang.String _fontname>;

        if $r2 == null goto label1;

        $r3 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: java.lang.String _fontname>;

        virtualinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: void setFontName(java.lang.String)>($r3);

        r0.<org.apache.poi.hslf.usermodel.RichTextRun: java.lang.String _fontname> = null;

     label1:
        return;
    }

    public int getLength()
    {
        int $i0;
        org.apache.poi.hslf.usermodel.RichTextRun r0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        $i0 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: int length>;

        return $i0;
    }

    public int getStartIndex()
    {
        int $i0;
        org.apache.poi.hslf.usermodel.RichTextRun r0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        $i0 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: int startPos>;

        return $i0;
    }

    public int getEndIndex()
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        $i1 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: int startPos>;

        $i0 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: int length>;

        $i2 = $i1 + $i0;

        return $i2;
    }

    public java.lang.String getText()
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2, $r3;
        org.apache.poi.hslf.model.TextRun $r1;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        $r1 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.TextRun parentRun>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hslf.model.TextRun: java.lang.String getText()>();

        $i3 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: int startPos>;

        $i1 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: int startPos>;

        $i0 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: int length>;

        $i2 = $i1 + $i0;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>($i3, $i2);

        return $r3;
    }

    public java.lang.String getRawText()
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2, $r3;
        org.apache.poi.hslf.model.TextRun $r1;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        $r1 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.TextRun parentRun>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hslf.model.TextRun: java.lang.String getRawText()>();

        $i3 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: int startPos>;

        $i1 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: int startPos>;

        $i0 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: int length>;

        $i2 = $i1 + $i0;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>($i3, $i2);

        return $r3;
    }

    public void setText(java.lang.String)
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        java.lang.String r1, $r3;
        org.apache.poi.hslf.model.TextRun $r2;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.TextRun parentRun>;

        $r3 = virtualinvoke $r2.<org.apache.poi.hslf.model.TextRun: java.lang.String normalize(java.lang.String)>(r1);

        virtualinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: void setRawText(java.lang.String)>($r3);

        return;
    }

    public void setRawText(java.lang.String)
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        int $i0;
        java.lang.String r1;
        org.apache.poi.hslf.model.TextRun $r2;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        r0.<org.apache.poi.hslf.usermodel.RichTextRun: int length> = $i0;

        $r2 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.TextRun parentRun>;

        virtualinvoke $r2.<org.apache.poi.hslf.model.TextRun: void changeTextInRichTextRun(org.apache.poi.hslf.usermodel.RichTextRun,java.lang.String)>(r0, r1);

        return;
    }

    public void updateStartPosition(int)
    {
        int i0;
        org.apache.poi.hslf.usermodel.RichTextRun r0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hslf.usermodel.RichTextRun: int startPos> = i0;

        return;
    }

    private boolean isCharFlagsTextPropVal(int)
    {
        int i0;
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: boolean getFlag(boolean,int)>(1, i0);

        return $z0;
    }

    private boolean getFlag(boolean, int)
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        org.apache.poi.hslf.model.textproperties.TextProp $r6, $r7;
        org.apache.poi.hslf.model.Sheet $r2;
        org.apache.poi.hslf.model.textproperties.TextPropCollection r8;
        int i0, $i1, $i2;
        java.lang.String r9, r11, r12;
        boolean z0, $z1;
        org.apache.poi.util.POILogger $r3;
        org.apache.poi.hslf.model.MasterSheet $r5;
        org.apache.poi.hslf.model.TextRun $r1, $r4;
        org.apache.poi.hslf.model.textproperties.BitMaskTextProp r10;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        if z0 == 0 goto label1;

        r8 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.textproperties.TextPropCollection characterStyle>;

        r9 = "char_flags";

        r12 = "char_flags";

        r11 = "char_flags";

        goto label2;

     label1:
        r8 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.textproperties.TextPropCollection paragraphStyle>;

        r9 = "paragraph_flags";

        r12 = "paragraph_flags";

        r11 = "paragraph_flags";

     label2:
        r10 = null;

        if r8 == null goto label3;

        $r7 = virtualinvoke r8.<org.apache.poi.hslf.model.textproperties.TextPropCollection: org.apache.poi.hslf.model.textproperties.TextProp findByName(java.lang.String)>(r11);

        r10 = (org.apache.poi.hslf.model.textproperties.BitMaskTextProp) $r7;

     label3:
        if r10 != null goto label6;

        $r1 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.TextRun parentRun>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hslf.model.TextRun: org.apache.poi.hslf.model.Sheet getSheet()>();

        if $r2 == null goto label5;

        $r4 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.TextRun parentRun>;

        $i1 = virtualinvoke $r4.<org.apache.poi.hslf.model.TextRun: int getRunType()>();

        $r5 = virtualinvoke $r2.<org.apache.poi.hslf.model.Sheet: org.apache.poi.hslf.model.MasterSheet getMasterSheet()>();

        if $r5 == null goto label4;

        $i2 = virtualinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: int getIndentLevel()>();

        $r6 = virtualinvoke $r5.<org.apache.poi.hslf.model.MasterSheet: org.apache.poi.hslf.model.textproperties.TextProp getStyleAttribute(int,int,java.lang.String,boolean)>($i1, $i2, r12, z0);

        r10 = (org.apache.poi.hslf.model.textproperties.BitMaskTextProp) $r6;

     label4:
        goto label6;

     label5:
        $r3 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r3.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, "MasterSheet is not available");

     label6:
        if r10 != null goto label7;

        $z1 = 0;

        goto label8;

     label7:
        $z1 = virtualinvoke r10.<org.apache.poi.hslf.model.textproperties.BitMaskTextProp: boolean getSubValue(int)>(i0);

     label8:
        return $z1;
    }

    private void setCharFlagsTextPropVal(int, boolean)
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        int i0;
        boolean $z0, z1;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        i0 := @parameter0: int;

        z1 := @parameter1: boolean;

        $z0 = specialinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: boolean getFlag(boolean,int)>(1, i0);

        if $z0 == z1 goto label1;

        virtualinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: void setFlag(boolean,int,boolean)>(1, i0, z1);

     label1:
        return;
    }

    public void setFlag(boolean, int, boolean)
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        org.apache.poi.hslf.model.textproperties.TextProp $r5;
        org.apache.poi.hslf.model.textproperties.TextPropCollection r2, $r4;
        int i0;
        java.lang.String r3;
        org.apache.poi.hslf.model.TextRun $r1;
        org.apache.poi.hslf.model.textproperties.BitMaskTextProp $r6;
        boolean z0, z1;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        z1 := @parameter2: boolean;

        if z0 == 0 goto label1;

        r2 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.textproperties.TextPropCollection characterStyle>;

        r3 = "char_flags";

        goto label2;

     label1:
        r2 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.textproperties.TextPropCollection paragraphStyle>;

        r3 = "paragraph_flags";

     label2:
        if r2 != null goto label5;

        $r1 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.TextRun parentRun>;

        virtualinvoke $r1.<org.apache.poi.hslf.model.TextRun: void ensureStyleAtomPresent()>();

        if z0 == 0 goto label3;

        $r4 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.textproperties.TextPropCollection characterStyle>;

        goto label4;

     label3:
        $r4 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.textproperties.TextPropCollection paragraphStyle>;

     label4:
        r2 = $r4;

     label5:
        $r5 = specialinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.textproperties.TextProp fetchOrAddTextProp(org.apache.poi.hslf.model.textproperties.TextPropCollection,java.lang.String)>(r2, r3);

        $r6 = (org.apache.poi.hslf.model.textproperties.BitMaskTextProp) $r5;

        virtualinvoke $r6.<org.apache.poi.hslf.model.textproperties.BitMaskTextProp: void setSubValue(boolean,int)>(z1, i0);

        return;
    }

    private org.apache.poi.hslf.model.textproperties.TextProp fetchOrAddTextProp(org.apache.poi.hslf.model.textproperties.TextPropCollection, java.lang.String)
    {
        org.apache.poi.hslf.model.textproperties.TextPropCollection r0;
        org.apache.poi.hslf.usermodel.RichTextRun r3;
        java.lang.String r1;
        org.apache.poi.hslf.model.textproperties.TextProp $r2, r4;

        r3 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        r0 := @parameter0: org.apache.poi.hslf.model.textproperties.TextPropCollection;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.poi.hslf.model.textproperties.TextPropCollection: org.apache.poi.hslf.model.textproperties.TextProp findByName(java.lang.String)>(r1);

        r4 = $r2;

        if $r2 != null goto label1;

        r4 = virtualinvoke r0.<org.apache.poi.hslf.model.textproperties.TextPropCollection: org.apache.poi.hslf.model.textproperties.TextProp addWithName(java.lang.String)>(r1);

     label1:
        return r4;
    }

    private int getCharTextPropVal(java.lang.String)
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        org.apache.poi.hslf.model.MasterSheet $r5;
        org.apache.poi.hslf.model.textproperties.TextProp r8;
        org.apache.poi.hslf.model.Sheet $r3;
        org.apache.poi.hslf.model.textproperties.TextPropCollection $r1, $r7;
        int $i0, $i1, $i2, $i4;
        java.lang.String r6;
        org.apache.poi.hslf.model.TextRun $r2, $r4;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        r6 := @parameter0: java.lang.String;

        r8 = null;

        $r1 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.textproperties.TextPropCollection characterStyle>;

        if $r1 == null goto label1;

        $r7 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.textproperties.TextPropCollection characterStyle>;

        r8 = virtualinvoke $r7.<org.apache.poi.hslf.model.textproperties.TextPropCollection: org.apache.poi.hslf.model.textproperties.TextProp findByName(java.lang.String)>(r6);

     label1:
        if r8 != null goto label2;

        $r2 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.TextRun parentRun>;

        $r3 = virtualinvoke $r2.<org.apache.poi.hslf.model.TextRun: org.apache.poi.hslf.model.Sheet getSheet()>();

        $r4 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.TextRun parentRun>;

        $i0 = virtualinvoke $r4.<org.apache.poi.hslf.model.TextRun: int getRunType()>();

        $r5 = virtualinvoke $r3.<org.apache.poi.hslf.model.Sheet: org.apache.poi.hslf.model.MasterSheet getMasterSheet()>();

        if $r5 == null goto label2;

        $i1 = virtualinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: int getIndentLevel()>();

        r8 = virtualinvoke $r5.<org.apache.poi.hslf.model.MasterSheet: org.apache.poi.hslf.model.textproperties.TextProp getStyleAttribute(int,int,java.lang.String,boolean)>($i0, $i1, r6, 1);

     label2:
        if r8 != null goto label3;

        $i4 = (int) -1;

        $i2 = $i4;

        goto label4;

     label3:
        $i2 = virtualinvoke r8.<org.apache.poi.hslf.model.textproperties.TextProp: int getValue()>();

     label4:
        return $i2;
    }

    private int getParaTextPropVal(java.lang.String)
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        org.apache.poi.hslf.model.textproperties.TextProp $r9, r10;
        org.apache.poi.hslf.model.Sheet $r3;
        org.apache.poi.hslf.model.textproperties.TextPropCollection $r1, $r7, $r8;
        int $i0, $i1, $i2, $i3, $i5;
        java.lang.String r6;
        boolean z0, $z1;
        org.apache.poi.hslf.model.MasterSheet $r5;
        org.apache.poi.hslf.model.TextRun $r2, $r4;
        org.apache.poi.hslf.model.textproperties.BitMaskTextProp r11;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        r6 := @parameter0: java.lang.String;

        r10 = null;

        z0 = 0;

        $r1 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.textproperties.TextPropCollection paragraphStyle>;

        if $r1 == null goto label3;

        $r7 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.textproperties.TextPropCollection paragraphStyle>;

        r10 = virtualinvoke $r7.<org.apache.poi.hslf.model.textproperties.TextPropCollection: org.apache.poi.hslf.model.textproperties.TextProp findByName(java.lang.String)>(r6);

        $r8 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.textproperties.TextPropCollection paragraphStyle>;

        $r9 = virtualinvoke $r8.<org.apache.poi.hslf.model.textproperties.TextPropCollection: org.apache.poi.hslf.model.textproperties.TextProp findByName(java.lang.String)>("paragraph_flags");

        r11 = (org.apache.poi.hslf.model.textproperties.BitMaskTextProp) $r9;

        if r11 == null goto label1;

        $i2 = virtualinvoke r11.<org.apache.poi.hslf.model.textproperties.BitMaskTextProp: int getValue()>();

        if $i2 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

     label3:
        if r10 != null goto label4;

        if z0 != 0 goto label4;

        $r2 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.TextRun parentRun>;

        $r3 = virtualinvoke $r2.<org.apache.poi.hslf.model.TextRun: org.apache.poi.hslf.model.Sheet getSheet()>();

        $r4 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.TextRun parentRun>;

        $i0 = virtualinvoke $r4.<org.apache.poi.hslf.model.TextRun: int getRunType()>();

        $r5 = virtualinvoke $r3.<org.apache.poi.hslf.model.Sheet: org.apache.poi.hslf.model.MasterSheet getMasterSheet()>();

        if $r5 == null goto label4;

        $i1 = virtualinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: int getIndentLevel()>();

        r10 = virtualinvoke $r5.<org.apache.poi.hslf.model.MasterSheet: org.apache.poi.hslf.model.textproperties.TextProp getStyleAttribute(int,int,java.lang.String,boolean)>($i0, $i1, r6, 0);

     label4:
        if r10 != null goto label5;

        $i5 = (int) -1;

        $i3 = $i5;

        goto label6;

     label5:
        $i3 = virtualinvoke r10.<org.apache.poi.hslf.model.textproperties.TextProp: int getValue()>();

     label6:
        return $i3;
    }

    public void setParaTextPropVal(java.lang.String, int)
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        java.lang.AssertionError $r6;
        org.apache.poi.hslf.model.textproperties.TextProp $r4;
        org.apache.poi.hslf.model.textproperties.TextPropCollection $r1, $r3, $r5;
        int i0;
        java.lang.String r2;
        org.apache.poi.hslf.model.TextRun $r7;
        boolean $z0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.textproperties.TextPropCollection paragraphStyle>;

        if $r1 != null goto label1;

        $r7 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.TextRun parentRun>;

        virtualinvoke $r7.<org.apache.poi.hslf.model.TextRun: void ensureStyleAtomPresent()>();

     label1:
        $z0 = <org.apache.poi.hslf.usermodel.RichTextRun: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $r5 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.textproperties.TextPropCollection paragraphStyle>;

        if $r5 != null goto label2;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label2:
        $r3 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.textproperties.TextPropCollection paragraphStyle>;

        $r4 = specialinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.textproperties.TextProp fetchOrAddTextProp(org.apache.poi.hslf.model.textproperties.TextPropCollection,java.lang.String)>($r3, r2);

        virtualinvoke $r4.<org.apache.poi.hslf.model.textproperties.TextProp: void setValue(int)>(i0);

        return;
    }

    public void setCharTextPropVal(java.lang.String, int)
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        java.lang.AssertionError $r6;
        org.apache.poi.hslf.model.textproperties.TextProp $r4;
        org.apache.poi.hslf.model.textproperties.TextPropCollection $r1, $r3, $r5;
        int i0;
        java.lang.String r2;
        org.apache.poi.hslf.model.TextRun $r7;
        boolean $z0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.textproperties.TextPropCollection characterStyle>;

        if $r1 != null goto label1;

        $r7 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.TextRun parentRun>;

        virtualinvoke $r7.<org.apache.poi.hslf.model.TextRun: void ensureStyleAtomPresent()>();

     label1:
        $z0 = <org.apache.poi.hslf.usermodel.RichTextRun: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $r5 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.textproperties.TextPropCollection characterStyle>;

        if $r5 != null goto label2;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label2:
        $r3 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.textproperties.TextPropCollection characterStyle>;

        $r4 = specialinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.textproperties.TextProp fetchOrAddTextProp(org.apache.poi.hslf.model.textproperties.TextPropCollection,java.lang.String)>($r3, r2);

        virtualinvoke $r4.<org.apache.poi.hslf.model.textproperties.TextProp: void setValue(int)>(i0);

        return;
    }

    public boolean isBold()
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        $z0 = specialinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: boolean isCharFlagsTextPropVal(int)>(0);

        return $z0;
    }

    public void setBold(boolean)
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        boolean z0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: void setCharFlagsTextPropVal(int,boolean)>(0, z0);

        return;
    }

    public boolean isItalic()
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        $z0 = specialinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: boolean isCharFlagsTextPropVal(int)>(1);

        return $z0;
    }

    public void setItalic(boolean)
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        boolean z0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: void setCharFlagsTextPropVal(int,boolean)>(1, z0);

        return;
    }

    public boolean isUnderlined()
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        $z0 = specialinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: boolean isCharFlagsTextPropVal(int)>(2);

        return $z0;
    }

    public void setUnderlined(boolean)
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        boolean z0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: void setCharFlagsTextPropVal(int,boolean)>(2, z0);

        return;
    }

    public boolean isShadowed()
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        $z0 = specialinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: boolean isCharFlagsTextPropVal(int)>(4);

        return $z0;
    }

    public void setShadowed(boolean)
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        boolean z0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: void setCharFlagsTextPropVal(int,boolean)>(4, z0);

        return;
    }

    public boolean isEmbossed()
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        $z0 = specialinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: boolean isCharFlagsTextPropVal(int)>(9);

        return $z0;
    }

    public void setEmbossed(boolean)
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        boolean z0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: void setCharFlagsTextPropVal(int,boolean)>(9, z0);

        return;
    }

    public boolean isStrikethrough()
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        $z0 = specialinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: boolean isCharFlagsTextPropVal(int)>(8);

        return $z0;
    }

    public void setStrikethrough(boolean)
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        boolean z0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: void setCharFlagsTextPropVal(int,boolean)>(8, z0);

        return;
    }

    public int getSuperscript()
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        int $i0, $i1, $i3;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        $i0 = specialinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: int getCharTextPropVal(java.lang.String)>("superscript");

        $i3 = (int) -1;

        if $i0 != $i3 goto label1;

        $i1 = 0;

        goto label2;

     label1:
        $i1 = $i0;

     label2:
        return $i1;
    }

    public void setSuperscript(int)
    {
        int i0;
        org.apache.poi.hslf.usermodel.RichTextRun r0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: void setCharTextPropVal(java.lang.String,int)>("superscript", i0);

        return;
    }

    public int getFontSize()
    {
        int $i0;
        org.apache.poi.hslf.usermodel.RichTextRun r0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        $i0 = specialinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: int getCharTextPropVal(java.lang.String)>("font.size");

        return $i0;
    }

    public void setFontSize(int)
    {
        int i0;
        org.apache.poi.hslf.usermodel.RichTextRun r0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: void setCharTextPropVal(java.lang.String,int)>("font.size", i0);

        return;
    }

    public int getFontIndex()
    {
        int $i0;
        org.apache.poi.hslf.usermodel.RichTextRun r0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        $i0 = specialinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: int getCharTextPropVal(java.lang.String)>("font.index");

        return $i0;
    }

    public void setFontIndex(int)
    {
        int i0;
        org.apache.poi.hslf.usermodel.RichTextRun r0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: void setCharTextPropVal(java.lang.String,int)>("font.index", i0);

        return;
    }

    public void setFontName(java.lang.String)
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        org.apache.poi.hslf.usermodel.SlideShow $r1, $r2;
        int $i0;
        java.lang.String r4;
        org.apache.poi.hslf.record.FontCollection $r3;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        r4 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.usermodel.SlideShow slideShow>;

        if $r1 != null goto label1;

        r0.<org.apache.poi.hslf.usermodel.RichTextRun: java.lang.String _fontname> = r4;

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.usermodel.SlideShow slideShow>;

        $r3 = virtualinvoke $r2.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.FontCollection getFontCollection()>();

        $i0 = virtualinvoke $r3.<org.apache.poi.hslf.record.FontCollection: int addFont(java.lang.String)>(r4);

        virtualinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: void setCharTextPropVal(java.lang.String,int)>("font.index", $i0);

     label2:
        return;
    }

    public java.lang.String getFontName()
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        org.apache.poi.hslf.record.FontCollection $r3;
        org.apache.poi.hslf.usermodel.SlideShow $r1, $r2;
        int $i0, $i2;
        java.lang.String $r4, $r5;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        $r1 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.usermodel.SlideShow slideShow>;

        if $r1 != null goto label1;

        $r5 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: java.lang.String _fontname>;

        return $r5;

     label1:
        $i0 = specialinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: int getCharTextPropVal(java.lang.String)>("font.index");

        $i2 = (int) -1;

        if $i0 != $i2 goto label2;

        return null;

     label2:
        $r2 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.usermodel.SlideShow slideShow>;

        $r3 = virtualinvoke $r2.<org.apache.poi.hslf.usermodel.SlideShow: org.apache.poi.hslf.record.FontCollection getFontCollection()>();

        $r4 = virtualinvoke $r3.<org.apache.poi.hslf.record.FontCollection: java.lang.String getFontWithId(int)>($i0);

        return $r4;
    }

    public java.awt.Color getFontColor()
    {
        java.awt.Color $r4, $r5;
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        org.apache.poi.hslf.record.ColorSchemeAtom $r3;
        org.apache.poi.hslf.model.Sheet $r2;
        int $i0, i1, $i2, i3, $i4, $i5, $i6;
        org.apache.poi.hslf.model.TextRun $r1;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        $i0 = specialinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: int getCharTextPropVal(java.lang.String)>("font.color");

        i3 = $i0;

        i1 = $i0 >> 24;

        $i2 = $i0 % 16777216;

        if $i2 != 0 goto label1;

        $r1 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.TextRun parentRun>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hslf.model.TextRun: org.apache.poi.hslf.model.Sheet getSheet()>();

        $r3 = virtualinvoke $r2.<org.apache.poi.hslf.model.Sheet: org.apache.poi.hslf.record.ColorSchemeAtom getColorScheme()>();

        if i1 < 0 goto label1;

        if i1 > 7 goto label1;

        i3 = virtualinvoke $r3.<org.apache.poi.hslf.record.ColorSchemeAtom: int getColor(int)>(i1);

     label1:
        $r4 = new java.awt.Color;

        specialinvoke $r4.<java.awt.Color: void <init>(int,boolean)>(i3, 1);

        $r5 = new java.awt.Color;

        $i4 = virtualinvoke $r4.<java.awt.Color: int getBlue()>();

        $i5 = virtualinvoke $r4.<java.awt.Color: int getGreen()>();

        $i6 = virtualinvoke $r4.<java.awt.Color: int getRed()>();

        specialinvoke $r5.<java.awt.Color: void <init>(int,int,int)>($i4, $i5, $i6);

        return $r5;
    }

    public void setFontColor(int)
    {
        int i0;
        org.apache.poi.hslf.usermodel.RichTextRun r0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: void setCharTextPropVal(java.lang.String,int)>("font.color", i0);

        return;
    }

    public void setFontColor(java.awt.Color)
    {
        java.awt.Color $r0, r1;
        org.apache.poi.hslf.usermodel.RichTextRun r2;
        int $i0, $i1, $i2, $i3;

        r2 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        r1 := @parameter0: java.awt.Color;

        $r0 = new java.awt.Color;

        $i0 = virtualinvoke r1.<java.awt.Color: int getBlue()>();

        $i1 = virtualinvoke r1.<java.awt.Color: int getGreen()>();

        $i2 = virtualinvoke r1.<java.awt.Color: int getRed()>();

        specialinvoke $r0.<java.awt.Color: void <init>(int,int,int,int)>($i0, $i1, $i2, 254);

        $i3 = virtualinvoke $r0.<java.awt.Color: int getRGB()>();

        virtualinvoke r2.<org.apache.poi.hslf.usermodel.RichTextRun: void setFontColor(int)>($i3);

        return;
    }

    public void setAlignment(int)
    {
        int i0;
        org.apache.poi.hslf.usermodel.RichTextRun r0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: void setParaTextPropVal(java.lang.String,int)>("alignment", i0);

        return;
    }

    public int getAlignment()
    {
        int $i0;
        org.apache.poi.hslf.usermodel.RichTextRun r0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        $i0 = specialinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: int getParaTextPropVal(java.lang.String)>("alignment");

        return $i0;
    }

    public int getIndentLevel()
    {
        short $s0;
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        org.apache.poi.hslf.model.textproperties.TextPropCollection $r1, $r2;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        $r1 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.textproperties.TextPropCollection paragraphStyle>;

        if $r1 != null goto label1;

        $s0 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.textproperties.TextPropCollection paragraphStyle>;

        $s0 = virtualinvoke $r2.<org.apache.poi.hslf.model.textproperties.TextPropCollection: short getReservedField()>();

     label2:
        return $s0;
    }

    public void setIndentLevel(int)
    {
        short $s1;
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        org.apache.poi.hslf.model.textproperties.TextPropCollection $r1, $r2;
        int i0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.textproperties.TextPropCollection paragraphStyle>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.textproperties.TextPropCollection paragraphStyle>;

        $s1 = (short) i0;

        virtualinvoke $r2.<org.apache.poi.hslf.model.textproperties.TextPropCollection: void setReservedField(short)>($s1);

     label1:
        return;
    }

    public void setBullet(boolean)
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        boolean z0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: void setFlag(boolean,int,boolean)>(0, 0, z0);

        return;
    }

    public boolean isBullet()
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        $z0 = specialinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: boolean getFlag(boolean,int)>(0, 0);

        return $z0;
    }

    public boolean isBulletHard()
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        $z0 = specialinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: boolean getFlag(boolean,int)>(0, 0);

        return $z0;
    }

    public void setBulletChar(char)
    {
        int $i1;
        char c0;
        org.apache.poi.hslf.usermodel.RichTextRun r0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        virtualinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: void setParaTextPropVal(java.lang.String,int)>("bullet.char", $i1);

        return;
    }

    public char getBulletChar()
    {
        int $i0;
        char $c1;
        org.apache.poi.hslf.usermodel.RichTextRun r0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        $i0 = specialinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: int getParaTextPropVal(java.lang.String)>("bullet.char");

        $c1 = (char) $i0;

        return $c1;
    }

    public void setBulletOffset(int)
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        int i0, $i1, $i2;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        i0 := @parameter0: int;

        $i1 = i0 * 576;

        $i2 = $i1 / 72;

        virtualinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: void setParaTextPropVal(java.lang.String,int)>("bullet.offset", $i2);

        return;
    }

    public int getBulletOffset()
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        $i0 = specialinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: int getParaTextPropVal(java.lang.String)>("bullet.offset");

        $i1 = $i0 * 72;

        $i2 = $i1 / 576;

        return $i2;
    }

    public void setTextOffset(int)
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        int i0, $i1, $i2;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        i0 := @parameter0: int;

        $i1 = i0 * 576;

        $i2 = $i1 / 72;

        virtualinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: void setParaTextPropVal(java.lang.String,int)>("text.offset", $i2);

        return;
    }

    public int getTextOffset()
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        $i0 = specialinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: int getParaTextPropVal(java.lang.String)>("text.offset");

        $i1 = $i0 * 72;

        $i2 = $i1 / 576;

        return $i2;
    }

    public void setBulletSize(int)
    {
        int i0;
        org.apache.poi.hslf.usermodel.RichTextRun r0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: void setParaTextPropVal(java.lang.String,int)>("bullet.size", i0);

        return;
    }

    public int getBulletSize()
    {
        int $i0;
        org.apache.poi.hslf.usermodel.RichTextRun r0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        $i0 = specialinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: int getParaTextPropVal(java.lang.String)>("bullet.size");

        return $i0;
    }

    public void setBulletColor(java.awt.Color)
    {
        java.awt.Color $r0, r1;
        org.apache.poi.hslf.usermodel.RichTextRun r2;
        int $i0, $i1, $i2, $i3;

        r2 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        r1 := @parameter0: java.awt.Color;

        $r0 = new java.awt.Color;

        $i0 = virtualinvoke r1.<java.awt.Color: int getBlue()>();

        $i1 = virtualinvoke r1.<java.awt.Color: int getGreen()>();

        $i2 = virtualinvoke r1.<java.awt.Color: int getRed()>();

        specialinvoke $r0.<java.awt.Color: void <init>(int,int,int,int)>($i0, $i1, $i2, 254);

        $i3 = virtualinvoke $r0.<java.awt.Color: int getRGB()>();

        virtualinvoke r2.<org.apache.poi.hslf.usermodel.RichTextRun: void setParaTextPropVal(java.lang.String,int)>("bullet.color", $i3);

        return;
    }

    public java.awt.Color getBulletColor()
    {
        java.awt.Color $r4, $r7, $r8;
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        org.apache.poi.hslf.record.ColorSchemeAtom $r3;
        org.apache.poi.hslf.model.Sheet $r2;
        int $i0, i1, $i2, i3, $i4, $i5, $i6, $i8;
        org.apache.poi.hslf.model.TextRun $r1;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        $i0 = specialinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: int getParaTextPropVal(java.lang.String)>("bullet.color");

        i3 = $i0;

        $i8 = (int) -1;

        if $i0 != $i8 goto label1;

        $r4 = virtualinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: java.awt.Color getFontColor()>();

        return $r4;

     label1:
        i1 = $i0 >> 24;

        $i2 = $i0 % 16777216;

        if $i2 != 0 goto label2;

        $r1 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.TextRun parentRun>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hslf.model.TextRun: org.apache.poi.hslf.model.Sheet getSheet()>();

        $r3 = virtualinvoke $r2.<org.apache.poi.hslf.model.Sheet: org.apache.poi.hslf.record.ColorSchemeAtom getColorScheme()>();

        if i1 < 0 goto label2;

        if i1 > 7 goto label2;

        i3 = virtualinvoke $r3.<org.apache.poi.hslf.record.ColorSchemeAtom: int getColor(int)>(i1);

     label2:
        $r7 = new java.awt.Color;

        specialinvoke $r7.<java.awt.Color: void <init>(int,boolean)>(i3, 1);

        $r8 = new java.awt.Color;

        $i4 = virtualinvoke $r7.<java.awt.Color: int getBlue()>();

        $i5 = virtualinvoke $r7.<java.awt.Color: int getGreen()>();

        $i6 = virtualinvoke $r7.<java.awt.Color: int getRed()>();

        specialinvoke $r8.<java.awt.Color: void <init>(int,int,int)>($i4, $i5, $i6);

        return $r8;
    }

    public void setBulletFont(int)
    {
        int i0;
        org.apache.poi.hslf.usermodel.RichTextRun r0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: void setParaTextPropVal(java.lang.String,int)>("bullet.font", i0);

        virtualinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: void setFlag(boolean,int,boolean)>(0, 1, 1);

        return;
    }

    public int getBulletFont()
    {
        int $i0;
        org.apache.poi.hslf.usermodel.RichTextRun r0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        $i0 = specialinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: int getParaTextPropVal(java.lang.String)>("bullet.font");

        return $i0;
    }

    public void setLineSpacing(int)
    {
        int i0;
        org.apache.poi.hslf.usermodel.RichTextRun r0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: void setParaTextPropVal(java.lang.String,int)>("linespacing", i0);

        return;
    }

    public int getLineSpacing()
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        int $i0, $i1, $i3;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        $i0 = specialinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: int getParaTextPropVal(java.lang.String)>("linespacing");

        $i3 = (int) -1;

        if $i0 != $i3 goto label1;

        $i1 = 0;

        goto label2;

     label1:
        $i1 = $i0;

     label2:
        return $i1;
    }

    public void setSpaceBefore(int)
    {
        int i0;
        org.apache.poi.hslf.usermodel.RichTextRun r0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: void setParaTextPropVal(java.lang.String,int)>("spacebefore", i0);

        return;
    }

    public int getSpaceBefore()
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        int $i0, $i1, $i3;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        $i0 = specialinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: int getParaTextPropVal(java.lang.String)>("spacebefore");

        $i3 = (int) -1;

        if $i0 != $i3 goto label1;

        $i1 = 0;

        goto label2;

     label1:
        $i1 = $i0;

     label2:
        return $i1;
    }

    public void setSpaceAfter(int)
    {
        int i0;
        org.apache.poi.hslf.usermodel.RichTextRun r0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: void setParaTextPropVal(java.lang.String,int)>("spaceafter", i0);

        return;
    }

    public int getSpaceAfter()
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        int $i0, $i1, $i3;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        $i0 = specialinvoke r0.<org.apache.poi.hslf.usermodel.RichTextRun: int getParaTextPropVal(java.lang.String)>("spaceafter");

        $i3 = (int) -1;

        if $i0 != $i3 goto label1;

        $i1 = 0;

        goto label2;

     label1:
        $i1 = $i0;

     label2:
        return $i1;
    }

    public org.apache.poi.hslf.model.textproperties.TextPropCollection _getRawParagraphStyle()
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        org.apache.poi.hslf.model.textproperties.TextPropCollection $r1;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        $r1 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.textproperties.TextPropCollection paragraphStyle>;

        return $r1;
    }

    public org.apache.poi.hslf.model.textproperties.TextPropCollection _getRawCharacterStyle()
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        org.apache.poi.hslf.model.textproperties.TextPropCollection $r1;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        $r1 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: org.apache.poi.hslf.model.textproperties.TextPropCollection characterStyle>;

        return $r1;
    }

    public boolean _isParagraphStyleShared()
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        $z0 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: boolean sharingParagraphStyle>;

        return $z0;
    }

    public boolean _isCharacterStyleShared()
    {
        org.apache.poi.hslf.usermodel.RichTextRun r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hslf.usermodel.RichTextRun;

        $z0 = r0.<org.apache.poi.hslf.usermodel.RichTextRun: boolean sharingCharacterStyle>;

        return $z0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/poi/hslf/usermodel/RichTextRun;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.poi.hslf.usermodel.RichTextRun: boolean $assertionsDisabled> = $z1;

        return;
    }
}
