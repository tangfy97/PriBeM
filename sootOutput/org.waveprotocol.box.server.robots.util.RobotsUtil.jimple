public class org.waveprotocol.box.server.robots.util.RobotsUtil extends java.lang.Object
{
    private static final org.waveprotocol.wave.model.id.IdURIEncoderDecoder URI_CODEC;
    private static final org.waveprotocol.wave.model.version.HashedVersionFactory HASH_FACTORY;

    public static org.waveprotocol.box.server.robots.RobotWaveletData createEmptyRobotWavelet(org.waveprotocol.wave.model.wave.ParticipantId, org.waveprotocol.wave.model.id.WaveletName)
    {
        org.waveprotocol.wave.model.id.WaveletName r0;
        org.waveprotocol.wave.model.version.HashedVersionFactory $r1;
        org.waveprotocol.box.server.robots.RobotWaveletData $r5;
        org.waveprotocol.wave.model.wave.data.ObservableWaveletData $r4;
        org.waveprotocol.wave.model.version.HashedVersion $r2;
        long $l0;
        org.waveprotocol.wave.model.wave.ParticipantId r3;

        r3 := @parameter0: org.waveprotocol.wave.model.wave.ParticipantId;

        r0 := @parameter1: org.waveprotocol.wave.model.id.WaveletName;

        $r1 = <org.waveprotocol.box.server.robots.util.RobotsUtil: org.waveprotocol.wave.model.version.HashedVersionFactory HASH_FACTORY>;

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.version.HashedVersionFactory: org.waveprotocol.wave.model.version.HashedVersion createVersionZero(org.waveprotocol.wave.model.id.WaveletName)>(r0);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r4 = staticinvoke <org.waveprotocol.box.server.util.WaveletDataUtil: org.waveprotocol.wave.model.wave.data.ObservableWaveletData createEmptyWavelet(org.waveprotocol.wave.model.id.WaveletName,org.waveprotocol.wave.model.wave.ParticipantId,org.waveprotocol.wave.model.version.HashedVersion,long)>(r0, r3, $r2, $l0);

        $r5 = new org.waveprotocol.box.server.robots.RobotWaveletData;

        specialinvoke $r5.<org.waveprotocol.box.server.robots.RobotWaveletData: void <init>(org.waveprotocol.wave.model.wave.data.ReadableWaveletData,org.waveprotocol.wave.model.version.HashedVersion)>($r4, $r2);

        return $r5;
    }

    public static void copyBlipContents(com.google.wave.api.Blip, com.google.wave.api.Blip)
    {
        java.lang.String[] $r11;
        com.google.wave.api.BlipContentRefs $r1, $r9;
        com.google.wave.api.Blip r0, r8;
        com.google.wave.api.Annotations $r4;
        int $i0, $i1, $i2, $i3;
        com.google.wave.api.Annotation r15;
        java.lang.String $r10, $r12;
        com.google.wave.api.BlipContent r14;
        boolean $z0, $z1;
        java.util.Iterator $r3, $r5;
        java.util.List $r2;
        com.google.wave.api.Range $r7;
        java.lang.Object $r6, $r13;

        r0 := @parameter0: com.google.wave.api.Blip;

        r8 := @parameter1: com.google.wave.api.Blip;

        $r1 = virtualinvoke r0.<com.google.wave.api.Blip: com.google.wave.api.BlipContentRefs all()>();

        $r2 = virtualinvoke $r1.<com.google.wave.api.BlipContentRefs: java.util.List values()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r13 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r14 = (com.google.wave.api.BlipContent) $r13;

        virtualinvoke r8.<com.google.wave.api.Blip: com.google.wave.api.BlipContentRefs append(com.google.wave.api.BlipContent)>(r14);

        goto label1;

     label2:
        $r4 = virtualinvoke r0.<com.google.wave.api.Blip: com.google.wave.api.Annotations getAnnotations()>();

        $r5 = virtualinvoke $r4.<com.google.wave.api.Annotations: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r15 = (com.google.wave.api.Annotation) $r6;

        $r7 = virtualinvoke r15.<com.google.wave.api.Annotation: com.google.wave.api.Range getRange()>();

        $i0 = virtualinvoke $r7.<com.google.wave.api.Range: int getStart()>();

        $i1 = $i0 + 1;

        $i2 = virtualinvoke $r7.<com.google.wave.api.Range: int getEnd()>();

        $i3 = $i2 + 1;

        $r9 = virtualinvoke r8.<com.google.wave.api.Blip: com.google.wave.api.BlipContentRefs range(int,int)>($i1, $i3);

        $r10 = virtualinvoke r15.<com.google.wave.api.Annotation: java.lang.String getName()>();

        $r11 = newarray (java.lang.String)[1];

        $r12 = virtualinvoke r15.<com.google.wave.api.Annotation: java.lang.String getValue()>();

        $r11[0] = $r12;

        virtualinvoke $r9.<com.google.wave.api.BlipContentRefs: com.google.wave.api.BlipContentRefs annotate(java.lang.String,java.lang.String[])>($r10, $r11);

        goto label3;

     label4:
        return;
    }

    private void <init>()
    {
        org.waveprotocol.box.server.robots.util.RobotsUtil r0;

        r0 := @this: org.waveprotocol.box.server.robots.util.RobotsUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.model.version.HashedVersionZeroFactoryImpl $r2;
        org.waveprotocol.wave.util.escapers.jvm.JavaUrlCodec $r1;
        org.waveprotocol.wave.model.id.IdURIEncoderDecoder $r0, $r3;

        $r0 = new org.waveprotocol.wave.model.id.IdURIEncoderDecoder;

        $r1 = new org.waveprotocol.wave.util.escapers.jvm.JavaUrlCodec;

        specialinvoke $r1.<org.waveprotocol.wave.util.escapers.jvm.JavaUrlCodec: void <init>()>();

        specialinvoke $r0.<org.waveprotocol.wave.model.id.IdURIEncoderDecoder: void <init>(org.waveprotocol.wave.model.id.URIEncoderDecoder$PercentEncoderDecoder)>($r1);

        <org.waveprotocol.box.server.robots.util.RobotsUtil: org.waveprotocol.wave.model.id.IdURIEncoderDecoder URI_CODEC> = $r0;

        $r2 = new org.waveprotocol.wave.model.version.HashedVersionZeroFactoryImpl;

        $r3 = <org.waveprotocol.box.server.robots.util.RobotsUtil: org.waveprotocol.wave.model.id.IdURIEncoderDecoder URI_CODEC>;

        specialinvoke $r2.<org.waveprotocol.wave.model.version.HashedVersionZeroFactoryImpl: void <init>(org.waveprotocol.wave.model.id.IdURIEncoderDecoder)>($r3);

        <org.waveprotocol.box.server.robots.util.RobotsUtil: org.waveprotocol.wave.model.version.HashedVersionFactory HASH_FACTORY> = $r2;

        return;
    }
}
