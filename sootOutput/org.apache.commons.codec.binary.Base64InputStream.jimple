public class org.apache.commons.codec.binary.Base64InputStream extends org.apache.commons.codec.binary.BaseNCodecInputStream
{

    public void <init>(java.io.InputStream)
    {
        org.apache.commons.codec.binary.Base64InputStream r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.commons.codec.binary.Base64InputStream;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<org.apache.commons.codec.binary.Base64InputStream: void <init>(java.io.InputStream,boolean)>(r1, 0);

        return;
    }

    public void <init>(java.io.InputStream, boolean)
    {
        org.apache.commons.codec.binary.Base64InputStream r0;
        org.apache.commons.codec.binary.Base64 $r2;
        java.io.InputStream r1;
        boolean z0;

        r0 := @this: org.apache.commons.codec.binary.Base64InputStream;

        r1 := @parameter0: java.io.InputStream;

        z0 := @parameter1: boolean;

        $r2 = new org.apache.commons.codec.binary.Base64;

        specialinvoke $r2.<org.apache.commons.codec.binary.Base64: void <init>(boolean)>(0);

        specialinvoke r0.<org.apache.commons.codec.binary.BaseNCodecInputStream: void <init>(java.io.InputStream,org.apache.commons.codec.binary.BaseNCodec,boolean)>(r1, $r2, z0);

        return;
    }

    public void <init>(java.io.InputStream, boolean, int, byte[])
    {
        byte[] r3;
        int i0;
        org.apache.commons.codec.binary.Base64InputStream r0;
        org.apache.commons.codec.binary.Base64 $r2;
        java.io.InputStream r1;
        boolean z0;

        r0 := @this: org.apache.commons.codec.binary.Base64InputStream;

        r1 := @parameter0: java.io.InputStream;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        r3 := @parameter3: byte[];

        $r2 = new org.apache.commons.codec.binary.Base64;

        specialinvoke $r2.<org.apache.commons.codec.binary.Base64: void <init>(int,byte[])>(i0, r3);

        specialinvoke r0.<org.apache.commons.codec.binary.BaseNCodecInputStream: void <init>(java.io.InputStream,org.apache.commons.codec.binary.BaseNCodec,boolean)>(r1, $r2, z0);

        return;
    }
}
