public class org.codehaus.groovy.syntax.Token extends org.codehaus.groovy.syntax.CSTNode
{
    public static final org.codehaus.groovy.syntax.Token NULL;
    public static final org.codehaus.groovy.syntax.Token EOF;
    private int type;
    private int meaning;
    private java.lang.String text;
    private int startLine;
    private int startColumn;

    public void <init>(int, java.lang.String, int, int)
    {
        int i0, i1, i2, $i4, $i6;
        java.lang.String r1;
        org.codehaus.groovy.syntax.Token r0;

        r0 := @this: org.codehaus.groovy.syntax.Token;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<org.codehaus.groovy.syntax.CSTNode: void <init>()>();

        r0.<org.codehaus.groovy.syntax.Token: int type> = 0;

        r0.<org.codehaus.groovy.syntax.Token: int meaning> = 0;

        r0.<org.codehaus.groovy.syntax.Token: java.lang.String text> = "";

        $i4 = (int) -1;

        r0.<org.codehaus.groovy.syntax.Token: int startLine> = $i4;

        $i6 = (int) -1;

        r0.<org.codehaus.groovy.syntax.Token: int startColumn> = $i6;

        r0.<org.codehaus.groovy.syntax.Token: int type> = i0;

        r0.<org.codehaus.groovy.syntax.Token: int meaning> = i0;

        r0.<org.codehaus.groovy.syntax.Token: java.lang.String text> = r1;

        r0.<org.codehaus.groovy.syntax.Token: int startLine> = i1;

        r0.<org.codehaus.groovy.syntax.Token: int startColumn> = i2;

        return;
    }

    private void <init>()
    {
        int $i1, $i3;
        org.codehaus.groovy.syntax.Token r0;

        r0 := @this: org.codehaus.groovy.syntax.Token;

        specialinvoke r0.<org.codehaus.groovy.syntax.CSTNode: void <init>()>();

        r0.<org.codehaus.groovy.syntax.Token: int type> = 0;

        r0.<org.codehaus.groovy.syntax.Token: int meaning> = 0;

        r0.<org.codehaus.groovy.syntax.Token: java.lang.String text> = "";

        $i1 = (int) -1;

        r0.<org.codehaus.groovy.syntax.Token: int startLine> = $i1;

        $i3 = (int) -1;

        r0.<org.codehaus.groovy.syntax.Token: int startColumn> = $i3;

        return;
    }

    public org.codehaus.groovy.syntax.Token dup()
    {
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2;
        org.codehaus.groovy.syntax.Token $r0, r1;

        r1 := @this: org.codehaus.groovy.syntax.Token;

        $r0 = new org.codehaus.groovy.syntax.Token;

        $i2 = r1.<org.codehaus.groovy.syntax.Token: int type>;

        $r2 = r1.<org.codehaus.groovy.syntax.Token: java.lang.String text>;

        $i1 = r1.<org.codehaus.groovy.syntax.Token: int startLine>;

        $i0 = r1.<org.codehaus.groovy.syntax.Token: int startColumn>;

        specialinvoke $r0.<org.codehaus.groovy.syntax.Token: void <init>(int,java.lang.String,int,int)>($i2, $r2, $i1, $i0);

        $i3 = r1.<org.codehaus.groovy.syntax.Token: int meaning>;

        virtualinvoke $r0.<org.codehaus.groovy.syntax.Token: org.codehaus.groovy.syntax.CSTNode setMeaning(int)>($i3);

        return $r0;
    }

    public int getMeaning()
    {
        int $i0;
        org.codehaus.groovy.syntax.Token r0;

        r0 := @this: org.codehaus.groovy.syntax.Token;

        $i0 = r0.<org.codehaus.groovy.syntax.Token: int meaning>;

        return $i0;
    }

    public org.codehaus.groovy.syntax.CSTNode setMeaning(int)
    {
        int i0;
        org.codehaus.groovy.syntax.Token r0;

        r0 := @this: org.codehaus.groovy.syntax.Token;

        i0 := @parameter0: int;

        r0.<org.codehaus.groovy.syntax.Token: int meaning> = i0;

        return r0;
    }

    public int getType()
    {
        int $i0;
        org.codehaus.groovy.syntax.Token r0;

        r0 := @this: org.codehaus.groovy.syntax.Token;

        $i0 = r0.<org.codehaus.groovy.syntax.Token: int type>;

        return $i0;
    }

    public int size()
    {
        org.codehaus.groovy.syntax.Token r0;

        r0 := @this: org.codehaus.groovy.syntax.Token;

        return 1;
    }

    public org.codehaus.groovy.syntax.CSTNode get(int)
    {
        int i0;
        org.codehaus.groovy.GroovyBugError $r1;
        org.codehaus.groovy.syntax.Token r0;

        r0 := @this: org.codehaus.groovy.syntax.Token;

        i0 := @parameter0: int;

        if i0 <= 0 goto label1;

        $r1 = new org.codehaus.groovy.GroovyBugError;

        specialinvoke $r1.<org.codehaus.groovy.GroovyBugError: void <init>(java.lang.String)>("attempt to access Token element other than root");

        throw $r1;

     label1:
        return r0;
    }

    public org.codehaus.groovy.syntax.Token getRoot()
    {
        org.codehaus.groovy.syntax.Token r0;

        r0 := @this: org.codehaus.groovy.syntax.Token;

        return r0;
    }

    public java.lang.String getRootText()
    {
        java.lang.String $r1;
        org.codehaus.groovy.syntax.Token r0;

        r0 := @this: org.codehaus.groovy.syntax.Token;

        $r1 = r0.<org.codehaus.groovy.syntax.Token: java.lang.String text>;

        return $r1;
    }

    public java.lang.String getText()
    {
        java.lang.String $r1;
        org.codehaus.groovy.syntax.Token r0;

        r0 := @this: org.codehaus.groovy.syntax.Token;

        $r1 = r0.<org.codehaus.groovy.syntax.Token: java.lang.String text>;

        return $r1;
    }

    public void setText(java.lang.String)
    {
        java.lang.String r1;
        org.codehaus.groovy.syntax.Token r0;

        r0 := @this: org.codehaus.groovy.syntax.Token;

        r1 := @parameter0: java.lang.String;

        r0.<org.codehaus.groovy.syntax.Token: java.lang.String text> = r1;

        return;
    }

    public int getStartLine()
    {
        int $i0;
        org.codehaus.groovy.syntax.Token r0;

        r0 := @this: org.codehaus.groovy.syntax.Token;

        $i0 = r0.<org.codehaus.groovy.syntax.Token: int startLine>;

        return $i0;
    }

    public int getStartColumn()
    {
        int $i0;
        org.codehaus.groovy.syntax.Token r0;

        r0 := @this: org.codehaus.groovy.syntax.Token;

        $i0 = r0.<org.codehaus.groovy.syntax.Token: int startColumn>;

        return $i0;
    }

    public org.codehaus.groovy.syntax.Reduction asReduction()
    {
        org.codehaus.groovy.syntax.Reduction $r0;
        org.codehaus.groovy.syntax.Token r1;

        r1 := @this: org.codehaus.groovy.syntax.Token;

        $r0 = new org.codehaus.groovy.syntax.Reduction;

        specialinvoke $r0.<org.codehaus.groovy.syntax.Reduction: void <init>(org.codehaus.groovy.syntax.Token)>(r1);

        return $r0;
    }

    public org.codehaus.groovy.syntax.Reduction asReduction(org.codehaus.groovy.syntax.CSTNode)
    {
        org.codehaus.groovy.syntax.Reduction $r1;
        org.codehaus.groovy.syntax.Token r0;
        org.codehaus.groovy.syntax.CSTNode r2;

        r0 := @this: org.codehaus.groovy.syntax.Token;

        r2 := @parameter0: org.codehaus.groovy.syntax.CSTNode;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.syntax.Token: org.codehaus.groovy.syntax.Reduction asReduction()>();

        virtualinvoke $r1.<org.codehaus.groovy.syntax.Reduction: org.codehaus.groovy.syntax.CSTNode add(org.codehaus.groovy.syntax.CSTNode)>(r2);

        return $r1;
    }

    public org.codehaus.groovy.syntax.Reduction asReduction(org.codehaus.groovy.syntax.CSTNode, org.codehaus.groovy.syntax.CSTNode)
    {
        org.codehaus.groovy.syntax.Reduction $r2;
        org.codehaus.groovy.syntax.Token r0;
        org.codehaus.groovy.syntax.CSTNode r1, r3;

        r0 := @this: org.codehaus.groovy.syntax.Token;

        r1 := @parameter0: org.codehaus.groovy.syntax.CSTNode;

        r3 := @parameter1: org.codehaus.groovy.syntax.CSTNode;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.syntax.Token: org.codehaus.groovy.syntax.Reduction asReduction(org.codehaus.groovy.syntax.CSTNode)>(r1);

        virtualinvoke $r2.<org.codehaus.groovy.syntax.Reduction: org.codehaus.groovy.syntax.CSTNode add(org.codehaus.groovy.syntax.CSTNode)>(r3);

        return $r2;
    }

    public org.codehaus.groovy.syntax.Reduction asReduction(org.codehaus.groovy.syntax.CSTNode, org.codehaus.groovy.syntax.CSTNode, org.codehaus.groovy.syntax.CSTNode)
    {
        org.codehaus.groovy.syntax.Reduction $r3;
        org.codehaus.groovy.syntax.Token r0;
        org.codehaus.groovy.syntax.CSTNode r1, r2, r4;

        r0 := @this: org.codehaus.groovy.syntax.Token;

        r1 := @parameter0: org.codehaus.groovy.syntax.CSTNode;

        r2 := @parameter1: org.codehaus.groovy.syntax.CSTNode;

        r4 := @parameter2: org.codehaus.groovy.syntax.CSTNode;

        $r3 = virtualinvoke r0.<org.codehaus.groovy.syntax.Token: org.codehaus.groovy.syntax.Reduction asReduction(org.codehaus.groovy.syntax.CSTNode,org.codehaus.groovy.syntax.CSTNode)>(r1, r2);

        virtualinvoke $r3.<org.codehaus.groovy.syntax.Reduction: org.codehaus.groovy.syntax.CSTNode add(org.codehaus.groovy.syntax.CSTNode)>(r4);

        return $r3;
    }

    public static org.codehaus.groovy.syntax.Token newKeyword(java.lang.String, int, int)
    {
        int $i0, i1, i2;
        java.lang.String r0;
        org.codehaus.groovy.syntax.Token $r1;

        r0 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i0 = staticinvoke <org.codehaus.groovy.syntax.Types: int lookupKeyword(java.lang.String)>(r0);

        if $i0 == 0 goto label1;

        $r1 = new org.codehaus.groovy.syntax.Token;

        specialinvoke $r1.<org.codehaus.groovy.syntax.Token: void <init>(int,java.lang.String,int,int)>($i0, r0, i1, i2);

        return $r1;

     label1:
        return null;
    }

    public static org.codehaus.groovy.syntax.Token newString(java.lang.String, int, int)
    {
        int i0, i1;
        java.lang.String r1;
        org.codehaus.groovy.syntax.Token $r0;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r0 = new org.codehaus.groovy.syntax.Token;

        specialinvoke $r0.<org.codehaus.groovy.syntax.Token: void <init>(int,java.lang.String,int,int)>(400, r1, i0, i1);

        return $r0;
    }

    public static org.codehaus.groovy.syntax.Token newIdentifier(java.lang.String, int, int)
    {
        int i0, i1;
        java.lang.String r1;
        org.codehaus.groovy.syntax.Token $r0;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r0 = new org.codehaus.groovy.syntax.Token;

        specialinvoke $r0.<org.codehaus.groovy.syntax.Token: void <init>(int,java.lang.String,int,int)>(440, r1, i0, i1);

        return $r0;
    }

    public static org.codehaus.groovy.syntax.Token newInteger(java.lang.String, int, int)
    {
        int i0, i1;
        java.lang.String r1;
        org.codehaus.groovy.syntax.Token $r0;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r0 = new org.codehaus.groovy.syntax.Token;

        specialinvoke $r0.<org.codehaus.groovy.syntax.Token: void <init>(int,java.lang.String,int,int)>(450, r1, i0, i1);

        return $r0;
    }

    public static org.codehaus.groovy.syntax.Token newDecimal(java.lang.String, int, int)
    {
        int i0, i1;
        java.lang.String r1;
        org.codehaus.groovy.syntax.Token $r0;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r0 = new org.codehaus.groovy.syntax.Token;

        specialinvoke $r0.<org.codehaus.groovy.syntax.Token: void <init>(int,java.lang.String,int,int)>(451, r1, i0, i1);

        return $r0;
    }

    public static org.codehaus.groovy.syntax.Token newSymbol(int, int, int)
    {
        int i0, i1, i2;
        java.lang.String $r1;
        org.codehaus.groovy.syntax.Token $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r0 = new org.codehaus.groovy.syntax.Token;

        $r1 = staticinvoke <org.codehaus.groovy.syntax.Types: java.lang.String getText(int)>(i0);

        specialinvoke $r0.<org.codehaus.groovy.syntax.Token: void <init>(int,java.lang.String,int,int)>(i0, $r1, i1, i2);

        return $r0;
    }

    public static org.codehaus.groovy.syntax.Token newSymbol(java.lang.String, int, int)
    {
        int $i0, i1, i2;
        java.lang.String r1;
        org.codehaus.groovy.syntax.Token $r0;

        r1 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r0 = new org.codehaus.groovy.syntax.Token;

        $i0 = staticinvoke <org.codehaus.groovy.syntax.Types: int lookupSymbol(java.lang.String)>(r1);

        specialinvoke $r0.<org.codehaus.groovy.syntax.Token: void <init>(int,java.lang.String,int,int)>($i0, r1, i1, i2);

        return $r0;
    }

    public static org.codehaus.groovy.syntax.Token newPlaceholder(int)
    {
        int i0, $i2, $i4;
        org.codehaus.groovy.syntax.Token $r1;

        i0 := @parameter0: int;

        $r1 = new org.codehaus.groovy.syntax.Token;

        $i2 = (int) -1;

        $i4 = (int) -1;

        specialinvoke $r1.<org.codehaus.groovy.syntax.Token: void <init>(int,java.lang.String,int,int)>(0, "", $i2, $i4);

        virtualinvoke $r1.<org.codehaus.groovy.syntax.Token: org.codehaus.groovy.syntax.CSTNode setMeaning(int)>(i0);

        return $r1;
    }

    static void <clinit>()
    {
        int $i1, $i3, $i5;
        org.codehaus.groovy.syntax.Token $r2, $r3;

        $r2 = new org.codehaus.groovy.syntax.Token;

        specialinvoke $r2.<org.codehaus.groovy.syntax.Token: void <init>()>();

        <org.codehaus.groovy.syntax.Token: org.codehaus.groovy.syntax.Token NULL> = $r2;

        $r3 = new org.codehaus.groovy.syntax.Token;

        $i1 = (int) -1;

        $i3 = (int) -1;

        $i5 = (int) -1;

        specialinvoke $r3.<org.codehaus.groovy.syntax.Token: void <init>(int,java.lang.String,int,int)>($i1, "", $i3, $i5);

        <org.codehaus.groovy.syntax.Token: org.codehaus.groovy.syntax.Token EOF> = $r3;

        return;
    }
}
