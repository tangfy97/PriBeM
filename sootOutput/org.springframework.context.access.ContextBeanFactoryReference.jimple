public class org.springframework.context.access.ContextBeanFactoryReference extends java.lang.Object implements org.springframework.beans.factory.access.BeanFactoryReference
{
    private org.springframework.context.ApplicationContext applicationContext;

    public void <init>(org.springframework.context.ApplicationContext)
    {
        org.springframework.context.access.ContextBeanFactoryReference r0;
        org.springframework.context.ApplicationContext r1;

        r0 := @this: org.springframework.context.access.ContextBeanFactoryReference;

        r1 := @parameter0: org.springframework.context.ApplicationContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.context.access.ContextBeanFactoryReference: org.springframework.context.ApplicationContext applicationContext> = r1;

        return;
    }

    public org.springframework.beans.factory.BeanFactory getFactory()
    {
        org.springframework.context.access.ContextBeanFactoryReference r0;
        java.lang.IllegalStateException $r3;
        org.springframework.context.ApplicationContext $r1, $r2;

        r0 := @this: org.springframework.context.access.ContextBeanFactoryReference;

        $r1 = r0.<org.springframework.context.access.ContextBeanFactoryReference: org.springframework.context.ApplicationContext applicationContext>;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ApplicationContext owned by this BeanFactoryReference has been released");

        throw $r3;

     label1:
        $r2 = r0.<org.springframework.context.access.ContextBeanFactoryReference: org.springframework.context.ApplicationContext applicationContext>;

        return $r2;
    }

    public void release()
    {
        org.springframework.context.access.ContextBeanFactoryReference r0;
        java.lang.Throwable $r4;
        org.springframework.context.ConfigurableApplicationContext $r3;
        org.springframework.context.ApplicationContext $r1, r2;
        boolean $z0;

        r0 := @this: org.springframework.context.access.ContextBeanFactoryReference;

        $r1 = r0.<org.springframework.context.access.ContextBeanFactoryReference: org.springframework.context.ApplicationContext applicationContext>;

        if $r1 == null goto label6;

        entermonitor r0;

     label1:
        r2 = r0.<org.springframework.context.access.ContextBeanFactoryReference: org.springframework.context.ApplicationContext applicationContext>;

        r0.<org.springframework.context.access.ContextBeanFactoryReference: org.springframework.context.ApplicationContext applicationContext> = null;

        exitmonitor r0;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r4;

     label5:
        if r2 == null goto label6;

        $z0 = r2 instanceof org.springframework.context.ConfigurableApplicationContext;

        if $z0 == 0 goto label6;

        $r3 = (org.springframework.context.ConfigurableApplicationContext) r2;

        interfaceinvoke $r3.<org.springframework.context.ConfigurableApplicationContext: void close()>();

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
