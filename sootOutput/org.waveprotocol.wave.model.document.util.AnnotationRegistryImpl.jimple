public class org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl extends java.lang.Object implements org.waveprotocol.wave.model.document.util.AnnotationRegistry
{
    private static final org.waveprotocol.wave.model.util.DataDomain handlerDataDomain;
    public static final org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl ROOT;
    private final org.waveprotocol.wave.model.util.ChainedData data;

    public void <init>()
    {
        org.waveprotocol.wave.model.util.DataDomain $r2;
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl r0;
        org.waveprotocol.wave.model.util.ChainedData $r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.waveprotocol.wave.model.util.ChainedData;

        $r2 = <org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl: org.waveprotocol.wave.model.util.DataDomain handlerDataDomain>;

        specialinvoke $r1.<org.waveprotocol.wave.model.util.ChainedData: void <init>(org.waveprotocol.wave.model.util.DataDomain)>($r2);

        r0.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl: org.waveprotocol.wave.model.util.ChainedData data> = $r1;

        return;
    }

    private void <init>(org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl)
    {
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl r0, r2;
        org.waveprotocol.wave.model.util.ChainedData $r1, $r3;

        r0 := @this: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl;

        r2 := @parameter0: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.waveprotocol.wave.model.util.ChainedData;

        $r3 = r2.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl: org.waveprotocol.wave.model.util.ChainedData data>;

        specialinvoke $r1.<org.waveprotocol.wave.model.util.ChainedData: void <init>(org.waveprotocol.wave.model.util.ChainedData)>($r3);

        r0.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl: org.waveprotocol.wave.model.util.ChainedData data> = $r1;

        return;
    }

    public org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl createExtension()
    {
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl $r0, r1;

        r1 := @this: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl;

        $r0 = new org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl;

        specialinvoke $r0.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl: void <init>(org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl)>(r1);

        return $r0;
    }

    public void registerHandler(java.lang.String, org.waveprotocol.wave.model.document.AnnotationMutationHandler)
    {
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData $r4;
        org.waveprotocol.wave.model.document.AnnotationMutationHandler r5;
        java.lang.Object $r3;
        java.lang.String r0;
        org.waveprotocol.wave.model.util.StringMap $r6;
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl r1;
        org.waveprotocol.wave.model.util.ChainedData $r2;

        r1 := @this: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl;

        r0 := @parameter0: java.lang.String;

        r5 := @parameter1: org.waveprotocol.wave.model.document.AnnotationMutationHandler;

        staticinvoke <org.waveprotocol.wave.model.document.util.AnnotationRegistry$Util: void validatePrefix(java.lang.String)>(r0);

        $r2 = r1.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl: org.waveprotocol.wave.model.util.ChainedData data>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.model.util.ChainedData: java.lang.Object modify()>();

        $r4 = (org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData) $r3;

        $r6 = $r4.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData: org.waveprotocol.wave.model.util.StringMap handlers>;

        interfaceinvoke $r6.<org.waveprotocol.wave.model.util.StringMap: void put(java.lang.String,java.lang.Object)>(r0, r5);

        return;
    }

    public void registerBehaviour(java.lang.String, org.waveprotocol.wave.model.document.AnnotationBehaviour)
    {
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData $r4;
        java.lang.Object $r3;
        java.lang.String r0;
        org.waveprotocol.wave.model.util.StringMap $r6;
        org.waveprotocol.wave.model.document.AnnotationBehaviour r5;
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl r1;
        org.waveprotocol.wave.model.util.ChainedData $r2;

        r1 := @this: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl;

        r0 := @parameter0: java.lang.String;

        r5 := @parameter1: org.waveprotocol.wave.model.document.AnnotationBehaviour;

        staticinvoke <org.waveprotocol.wave.model.document.util.AnnotationRegistry$Util: void validatePrefix(java.lang.String)>(r0);

        $r2 = r1.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl: org.waveprotocol.wave.model.util.ChainedData data>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.model.util.ChainedData: java.lang.Object modify()>();

        $r4 = (org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData) $r3;

        $r6 = $r4.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData: org.waveprotocol.wave.model.util.StringMap behaviours>;

        interfaceinvoke $r6.<org.waveprotocol.wave.model.util.StringMap: void put(java.lang.String,java.lang.Object)>(r0, r5);

        return;
    }

    public java.util.Iterator getHandlers(java.lang.String)
    {
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData $r8;
        org.waveprotocol.wave.model.util.StringMap r9;
        java.lang.StringBuilder $r0, $r2, $r3;
        java.lang.Object $r7;
        java.lang.String r1, $r4;
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$2 $r10;
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl r5;
        org.waveprotocol.wave.model.util.ChainedData $r6;

        r5 := @this: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = r5.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl: org.waveprotocol.wave.model.util.ChainedData data>;

        $r7 = virtualinvoke $r6.<org.waveprotocol.wave.model.util.ChainedData: java.lang.Object inspect()>();

        $r8 = (org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData) $r7;

        r9 = $r8.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData: org.waveprotocol.wave.model.util.StringMap handlers>;

        $r10 = new org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$2;

        specialinvoke $r10.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$2: void <init>(org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl,java.lang.String,org.waveprotocol.wave.model.util.StringMap)>(r5, $r4, r9);

        return $r10;
    }

    public java.util.Iterator getBehaviours(java.lang.String)
    {
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData $r8;
        org.waveprotocol.wave.model.util.StringMap r9;
        java.lang.StringBuilder $r0, $r2, $r3;
        java.lang.Object $r7;
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$3 $r10;
        java.lang.String r1, $r4;
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl r5;
        org.waveprotocol.wave.model.util.ChainedData $r6;

        r5 := @this: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = r5.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl: org.waveprotocol.wave.model.util.ChainedData data>;

        $r7 = virtualinvoke $r6.<org.waveprotocol.wave.model.util.ChainedData: java.lang.Object inspect()>();

        $r8 = (org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData) $r7;

        r9 = $r8.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData: org.waveprotocol.wave.model.util.StringMap behaviours>;

        $r10 = new org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$3;

        specialinvoke $r10.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$3: void <init>(org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl,java.lang.String,org.waveprotocol.wave.model.util.StringMap)>(r5, $r4, r9);

        return $r10;
    }

    public org.waveprotocol.wave.model.document.AnnotationBehaviour getClosestBehaviour(java.lang.String)
    {
        java.util.Iterator $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        org.waveprotocol.wave.model.document.AnnotationBehaviour r4;
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl;

        r1 := @parameter0: java.lang.String;

        r4 = null;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl: java.util.Iterator getBehaviours(java.lang.String)>(r1);

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.waveprotocol.wave.model.document.AnnotationBehaviour) $r3;

        goto label1;

     label2:
        return r4;
    }

    public volatile org.waveprotocol.wave.model.document.util.AnnotationRegistry createExtension()
    {
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl r0, $r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl createExtension()>();

        return $r1;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$1 $r0;
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl $r1;

        $r0 = new org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$1;

        specialinvoke $r0.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$1: void <init>()>();

        <org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl: org.waveprotocol.wave.model.util.DataDomain handlerDataDomain> = $r0;

        $r1 = new org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl;

        specialinvoke $r1.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl: void <init>()>();

        <org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl ROOT> = $r1;

        return;
    }
}
