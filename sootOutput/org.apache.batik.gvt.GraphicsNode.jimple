public interface  org.apache.batik.gvt.GraphicsNode extends java.lang.Object
{
    public static final int VISIBLE_PAINTED;
    public static final int VISIBLE_FILL;
    public static final int VISIBLE_STROKE;
    public static final int VISIBLE;
    public static final int PAINTED;
    public static final int FILL;
    public static final int STROKE;
    public static final int ALL;
    public static final int NONE;
    public static final java.awt.geom.AffineTransform IDENTITY;

    public abstract java.lang.ref.WeakReference getWeakReference();

    public abstract int getPointerEventType();

    public abstract void setPointerEventType(int);

    public abstract void setTransform(java.awt.geom.AffineTransform);

    public abstract java.awt.geom.AffineTransform getTransform();

    public abstract java.awt.geom.AffineTransform getInverseTransform();

    public abstract java.awt.geom.AffineTransform getGlobalTransform();

    public abstract void setComposite(java.awt.Composite);

    public abstract java.awt.Composite getComposite();

    public abstract void setVisible(boolean);

    public abstract boolean isVisible();

    public abstract void setClip(org.apache.batik.ext.awt.image.renderable.ClipRable);

    public abstract org.apache.batik.ext.awt.image.renderable.ClipRable getClip();

    public abstract void setRenderingHint(java.awt.RenderingHints$Key, java.lang.Object);

    public abstract void setRenderingHints(java.util.Map);

    public abstract void setRenderingHints(java.awt.RenderingHints);

    public abstract java.awt.RenderingHints getRenderingHints();

    public abstract void setMask(org.apache.batik.gvt.filter.Mask);

    public abstract org.apache.batik.gvt.filter.Mask getMask();

    public abstract void setFilter(org.apache.batik.ext.awt.image.renderable.Filter);

    public abstract org.apache.batik.ext.awt.image.renderable.Filter getFilter();

    public abstract org.apache.batik.ext.awt.image.renderable.Filter getGraphicsNodeRable(boolean);

    public abstract org.apache.batik.ext.awt.image.renderable.Filter getEnableBackgroundGraphicsNodeRable(boolean);

    public abstract void paint(java.awt.Graphics2D);

    public abstract void primitivePaint(java.awt.Graphics2D);

    public abstract org.apache.batik.gvt.CompositeGraphicsNode getParent();

    public abstract org.apache.batik.gvt.RootGraphicsNode getRoot();

    public abstract java.awt.geom.Rectangle2D getBounds();

    public abstract java.awt.geom.Rectangle2D getTransformedBounds(java.awt.geom.AffineTransform);

    public abstract java.awt.geom.Rectangle2D getPrimitiveBounds();

    public abstract java.awt.geom.Rectangle2D getTransformedPrimitiveBounds(java.awt.geom.AffineTransform);

    public abstract java.awt.geom.Rectangle2D getGeometryBounds();

    public abstract java.awt.geom.Rectangle2D getTransformedGeometryBounds(java.awt.geom.AffineTransform);

    public abstract java.awt.geom.Rectangle2D getSensitiveBounds();

    public abstract java.awt.geom.Rectangle2D getTransformedSensitiveBounds(java.awt.geom.AffineTransform);

    public abstract boolean contains(java.awt.geom.Point2D);

    public abstract boolean intersects(java.awt.geom.Rectangle2D);

    public abstract org.apache.batik.gvt.GraphicsNode nodeHitAt(java.awt.geom.Point2D);

    public abstract java.awt.Shape getOutline();

    static void <clinit>()
    {
        java.awt.geom.AffineTransform $r0;

        <org.apache.batik.gvt.GraphicsNode: int NONE> = 8;

        <org.apache.batik.gvt.GraphicsNode: int ALL> = 7;

        <org.apache.batik.gvt.GraphicsNode: int STROKE> = 6;

        <org.apache.batik.gvt.GraphicsNode: int FILL> = 5;

        <org.apache.batik.gvt.GraphicsNode: int PAINTED> = 4;

        <org.apache.batik.gvt.GraphicsNode: int VISIBLE> = 3;

        <org.apache.batik.gvt.GraphicsNode: int VISIBLE_STROKE> = 2;

        <org.apache.batik.gvt.GraphicsNode: int VISIBLE_FILL> = 1;

        <org.apache.batik.gvt.GraphicsNode: int VISIBLE_PAINTED> = 0;

        $r0 = new java.awt.geom.AffineTransform;

        specialinvoke $r0.<java.awt.geom.AffineTransform: void <init>()>();

        <org.apache.batik.gvt.GraphicsNode: java.awt.geom.AffineTransform IDENTITY> = $r0;

        return;
    }
}
