public class org.apache.pdfbox.OverlayPDF extends java.lang.Object
{
    private static final org.apache.commons.logging.Log LOG;
    private static final java.lang.String POSITION;
    private static final java.lang.String ODD;
    private static final java.lang.String EVEN;
    private static final java.lang.String FIRST;
    private static final java.lang.String LAST;
    private static final java.lang.String PAGE;
    private static final java.lang.String NONSEQ;

    public void <init>()
    {
        org.apache.pdfbox.OverlayPDF r0;

        r0 := @this: org.apache.pdfbox.OverlayPDF;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.Integer $r12;
        java.lang.Exception $r33;
        java.lang.StringBuilder $r34, $r36, $r38;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r24, $r25, $r26, $r28, $r29, $r30, $r37, $r39, $r40;
        org.apache.pdfbox.util.Overlay $r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, $z10;
        java.util.HashMap $r1;
        java.lang.String[] r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25;
        org.apache.pdfbox.util.Overlay$Position $r23, $r27, $r31, $r32;
        org.apache.commons.logging.Log $r35;

        r2 := @parameter0: java.lang.String[];

        $r0 = new org.apache.pdfbox.util.Overlay;

        specialinvoke $r0.<org.apache.pdfbox.util.Overlay: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        z9 = 0;

        i25 = 0;

     label01:
        $i0 = lengthof r2;

        if i25 >= $i0 goto label16;

        $r5 = r2[i25];

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        if i25 != 0 goto label02;

        virtualinvoke $r0.<org.apache.pdfbox.util.Overlay: void setInputFile(java.lang.String)>($r6);

        goto label15;

     label02:
        $i1 = lengthof r2;

        $i2 = $i1 - 1;

        if i25 != $i2 goto label03;

        virtualinvoke $r0.<org.apache.pdfbox.util.Overlay: void setOutputFile(java.lang.String)>($r6);

        goto label15;

     label03:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("-position");

        if $z0 == 0 goto label07;

        $i22 = i25 + 1;

        $i21 = lengthof r2;

        if $i22 >= $i21 goto label07;

        $r23 = <org.apache.pdfbox.util.Overlay$Position: org.apache.pdfbox.util.Overlay$Position FOREGROUND>;

        $r24 = virtualinvoke $r23.<org.apache.pdfbox.util.Overlay$Position: java.lang.String toString()>();

        $i23 = i25 + 1;

        $r25 = r2[$i23];

        $r26 = virtualinvoke $r25.<java.lang.String: java.lang.String trim()>();

        $z7 = virtualinvoke $r24.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r26);

        if $z7 == 0 goto label04;

        $r32 = <org.apache.pdfbox.util.Overlay$Position: org.apache.pdfbox.util.Overlay$Position FOREGROUND>;

        virtualinvoke $r0.<org.apache.pdfbox.util.Overlay: void setOverlayPosition(org.apache.pdfbox.util.Overlay$Position)>($r32);

        goto label06;

     label04:
        $r27 = <org.apache.pdfbox.util.Overlay$Position: org.apache.pdfbox.util.Overlay$Position BACKGROUND>;

        $r28 = virtualinvoke $r27.<org.apache.pdfbox.util.Overlay$Position: java.lang.String toString()>();

        $i24 = i25 + 1;

        $r29 = r2[$i24];

        $r30 = virtualinvoke $r29.<java.lang.String: java.lang.String trim()>();

        $z8 = virtualinvoke $r28.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r30);

        if $z8 == 0 goto label05;

        $r31 = <org.apache.pdfbox.util.Overlay$Position: org.apache.pdfbox.util.Overlay$Position BACKGROUND>;

        virtualinvoke $r0.<org.apache.pdfbox.util.Overlay: void setOverlayPosition(org.apache.pdfbox.util.Overlay$Position)>($r31);

        goto label06;

     label05:
        staticinvoke <org.apache.pdfbox.OverlayPDF: void usage()>();

     label06:
        i25 = i25 + 1;

        goto label15;

     label07:
        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("-odd");

        if $z1 == 0 goto label08;

        $i19 = i25 + 1;

        $i18 = lengthof r2;

        if $i19 >= $i18 goto label08;

        $i20 = i25 + 1;

        $r21 = r2[$i20];

        $r22 = virtualinvoke $r21.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $r0.<org.apache.pdfbox.util.Overlay: void setOddPageOverlayFile(java.lang.String)>($r22);

        i25 = i25 + 1;

        goto label15;

     label08:
        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("-even");

        if $z2 == 0 goto label09;

        $i16 = i25 + 1;

        $i15 = lengthof r2;

        if $i16 >= $i15 goto label09;

        $i17 = i25 + 1;

        $r19 = r2[$i17];

        $r20 = virtualinvoke $r19.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $r0.<org.apache.pdfbox.util.Overlay: void setEvenPageOverlayFile(java.lang.String)>($r20);

        i25 = i25 + 1;

        goto label15;

     label09:
        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("-first");

        if $z3 == 0 goto label10;

        $i13 = i25 + 1;

        $i12 = lengthof r2;

        if $i13 >= $i12 goto label10;

        $i14 = i25 + 1;

        $r17 = r2[$i14];

        $r18 = virtualinvoke $r17.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $r0.<org.apache.pdfbox.util.Overlay: void setFirstPageOverlayFile(java.lang.String)>($r18);

        i25 = i25 + 1;

        goto label15;

     label10:
        $z4 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("-last");

        if $z4 == 0 goto label11;

        $i10 = i25 + 1;

        $i9 = lengthof r2;

        if $i10 >= $i9 goto label11;

        $i11 = i25 + 1;

        $r15 = r2[$i11];

        $r16 = virtualinvoke $r15.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $r0.<org.apache.pdfbox.util.Overlay: void setLastPageOverlayFile(java.lang.String)>($r16);

        i25 = i25 + 1;

        goto label15;

     label11:
        $z5 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("-page");

        if $z5 == 0 goto label12;

        $i4 = i25 + 2;

        $i3 = lengthof r2;

        if $i4 >= $i3 goto label12;

        $i5 = i25 + 1;

        $r8 = r2[$i5];

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        $z6 = staticinvoke <org.apache.pdfbox.OverlayPDF: boolean isInteger(java.lang.String)>($r9);

        if $z6 == 0 goto label12;

        $i6 = i25 + 1;

        $r10 = r2[$i6];

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String trim()>();

        $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $i8 = i25 + 2;

        $r13 = r2[$i8];

        $r14 = virtualinvoke $r13.<java.lang.String: java.lang.String trim()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r14);

        i25 = i25 + 2;

        goto label15;

     label12:
        $r40 = r2[i25];

        $z10 = virtualinvoke $r40.<java.lang.String: boolean equals(java.lang.Object)>("-nonSeq");

        if $z10 == 0 goto label13;

        z9 = 1;

        goto label15;

     label13:
        $r7 = virtualinvoke $r0.<org.apache.pdfbox.util.Overlay: java.lang.String getDefaultOverlayFile()>();

        if $r7 != null goto label14;

        virtualinvoke $r0.<org.apache.pdfbox.util.Overlay: void setDefaultOverlayFile(java.lang.String)>($r6);

        goto label15;

     label14:
        staticinvoke <org.apache.pdfbox.OverlayPDF: void usage()>();

     label15:
        i25 = i25 + 1;

        goto label01;

     label16:
        $r3 = virtualinvoke $r0.<org.apache.pdfbox.util.Overlay: java.lang.String getInputFile()>();

        if $r3 == null goto label17;

        $r4 = virtualinvoke $r0.<org.apache.pdfbox.util.Overlay: java.lang.String getOutputFile()>();

        if $r4 != null goto label18;

     label17:
        staticinvoke <org.apache.pdfbox.OverlayPDF: void usage()>();

     label18:
        virtualinvoke $r0.<org.apache.pdfbox.util.Overlay: void overlay(java.util.Map,boolean)>($r1, z9);

     label19:
        goto label21;

     label20:
        $r33 := @caughtexception;

        $r35 = <org.apache.pdfbox.OverlayPDF: org.apache.commons.logging.Log LOG>;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Overlay failed: ");

        $r37 = virtualinvoke $r33.<java.lang.Exception: java.lang.String getMessage()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r35.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r39, $r33);

        throw $r33;

     label21:
        return;

        catch java.lang.Exception from label18 to label19 with label20;
    }

    private static void usage()
    {
        java.io.PrintStream $r1;
        java.lang.StringBuilder $r0;
        java.lang.String $r2;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("usage: java -jar pdfbox-app-x.y.z.jar OverlayPDF <input.pdf> [OPTIONS] <output.pdf>\n");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  <input.pdf>                                        input file\n");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  <defaultOverlay.pdf>                               default overlay file\n");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  -odd <oddPageOverlay.pdf>                          overlay file used for odd pages\n");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  -even <evenPageOverlay.pdf>                        overlay file used for even pages\n");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  -first <firstPageOverlay.pdf>                      overlay file used for the first page\n");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  -last <lastPageOverlay.pdf>                        overlay file used for the last page\n");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  -page <pageNumber> <specificPageOverlay.pdf>       overlay file used for the given page number, may occur more than once\n");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  -position foreground|background                    where to put the overlay file: foreground or background\n");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  -nonSeq                                            enables the new non-sequential parser\n");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  <output.pdf>                                       output file\n");

        $r1 = <java.lang.System: java.io.PrintStream err>;

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r2);

        staticinvoke <java.lang.System: void exit(int)>(1);

        return;
    }

    private static boolean isInteger(java.lang.String)
    {
        java.lang.NumberFormatException $r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

     label1:
        staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r0);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        return 0;

     label4:
        return 1;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        org.apache.commons.logging.Log $r0;

        <org.apache.pdfbox.OverlayPDF: java.lang.String NONSEQ> = "-nonSeq";

        <org.apache.pdfbox.OverlayPDF: java.lang.String PAGE> = "-page";

        <org.apache.pdfbox.OverlayPDF: java.lang.String LAST> = "-last";

        <org.apache.pdfbox.OverlayPDF: java.lang.String FIRST> = "-first";

        <org.apache.pdfbox.OverlayPDF: java.lang.String EVEN> = "-even";

        <org.apache.pdfbox.OverlayPDF: java.lang.String ODD> = "-odd";

        <org.apache.pdfbox.OverlayPDF: java.lang.String POSITION> = "-position";

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/apache/pdfbox/pdfparser/BaseParser;");

        <org.apache.pdfbox.OverlayPDF: org.apache.commons.logging.Log LOG> = $r0;

        return;
    }
}
