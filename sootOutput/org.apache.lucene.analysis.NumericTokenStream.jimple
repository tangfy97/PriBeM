public final class org.apache.lucene.analysis.NumericTokenStream extends org.apache.lucene.analysis.TokenStream
{
    public static final java.lang.String TOKEN_TYPE_FULL_PREC;
    public static final java.lang.String TOKEN_TYPE_LOWER_PREC;
    private final org.apache.lucene.analysis.NumericTokenStream$NumericTermAttribute numericAtt;
    private final org.apache.lucene.analysis.tokenattributes.TypeAttribute typeAtt;
    private final org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute posIncrAtt;
    private int valSize;
    private final int precisionStep;

    public void <init>()
    {
        org.apache.lucene.analysis.NumericTokenStream r0;
        org.apache.lucene.util.AttributeSource$AttributeFactory $r1;

        r0 := @this: org.apache.lucene.analysis.NumericTokenStream;

        $r1 = <org.apache.lucene.util.AttributeSource$AttributeFactory: org.apache.lucene.util.AttributeSource$AttributeFactory DEFAULT_ATTRIBUTE_FACTORY>;

        specialinvoke r0.<org.apache.lucene.analysis.NumericTokenStream: void <init>(org.apache.lucene.util.AttributeSource$AttributeFactory,int)>($r1, 4);

        return;
    }

    public void <init>(int)
    {
        int i0;
        org.apache.lucene.analysis.NumericTokenStream r0;
        org.apache.lucene.util.AttributeSource$AttributeFactory $r1;

        r0 := @this: org.apache.lucene.analysis.NumericTokenStream;

        i0 := @parameter0: int;

        $r1 = <org.apache.lucene.util.AttributeSource$AttributeFactory: org.apache.lucene.util.AttributeSource$AttributeFactory DEFAULT_ATTRIBUTE_FACTORY>;

        specialinvoke r0.<org.apache.lucene.analysis.NumericTokenStream: void <init>(org.apache.lucene.util.AttributeSource$AttributeFactory,int)>($r1, i0);

        return;
    }

    public void <init>(org.apache.lucene.util.AttributeSource$AttributeFactory, int)
    {
        org.apache.lucene.analysis.NumericTokenStream$NumericAttributeFactory $r1;
        org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute $r8;
        org.apache.lucene.util.AttributeSource$AttributeFactory r2;
        org.apache.lucene.analysis.NumericTokenStream r0;
        java.lang.IllegalArgumentException $r10;
        org.apache.lucene.analysis.NumericTokenStream$NumericTermAttribute $r4, $r9;
        int i0, $i1;
        org.apache.lucene.util.Attribute $r3, $r5, $r7;
        org.apache.lucene.analysis.tokenattributes.TypeAttribute $r6;

        r0 := @this: org.apache.lucene.analysis.NumericTokenStream;

        r2 := @parameter0: org.apache.lucene.util.AttributeSource$AttributeFactory;

        i0 := @parameter1: int;

        $r1 = new org.apache.lucene.analysis.NumericTokenStream$NumericAttributeFactory;

        specialinvoke $r1.<org.apache.lucene.analysis.NumericTokenStream$NumericAttributeFactory: void <init>(org.apache.lucene.util.AttributeSource$AttributeFactory)>(r2);

        specialinvoke r0.<org.apache.lucene.analysis.TokenStream: void <init>(org.apache.lucene.util.AttributeSource$AttributeFactory)>($r1);

        $r3 = virtualinvoke r0.<org.apache.lucene.analysis.NumericTokenStream: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/NumericTokenStream$NumericTermAttribute;");

        $r4 = (org.apache.lucene.analysis.NumericTokenStream$NumericTermAttribute) $r3;

        r0.<org.apache.lucene.analysis.NumericTokenStream: org.apache.lucene.analysis.NumericTokenStream$NumericTermAttribute numericAtt> = $r4;

        $r5 = virtualinvoke r0.<org.apache.lucene.analysis.NumericTokenStream: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/TypeAttribute;");

        $r6 = (org.apache.lucene.analysis.tokenattributes.TypeAttribute) $r5;

        r0.<org.apache.lucene.analysis.NumericTokenStream: org.apache.lucene.analysis.tokenattributes.TypeAttribute typeAtt> = $r6;

        $r7 = virtualinvoke r0.<org.apache.lucene.analysis.NumericTokenStream: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/PositionIncrementAttribute;");

        $r8 = (org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute) $r7;

        r0.<org.apache.lucene.analysis.NumericTokenStream: org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute posIncrAtt> = $r8;

        r0.<org.apache.lucene.analysis.NumericTokenStream: int valSize> = 0;

        if i0 >= 1 goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("precisionStep must be >=1");

        throw $r10;

     label1:
        r0.<org.apache.lucene.analysis.NumericTokenStream: int precisionStep> = i0;

        $r9 = r0.<org.apache.lucene.analysis.NumericTokenStream: org.apache.lucene.analysis.NumericTokenStream$NumericTermAttribute numericAtt>;

        $i1 = neg i0;

        interfaceinvoke $r9.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttribute: void setShift(int)>($i1);

        return;
    }

    public org.apache.lucene.analysis.NumericTokenStream setLongValue(long)
    {
        org.apache.lucene.analysis.NumericTokenStream$NumericTermAttribute $r1;
        int $i1, $i2, $i3;
        org.apache.lucene.analysis.NumericTokenStream r0;
        long l0;

        r0 := @this: org.apache.lucene.analysis.NumericTokenStream;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.lucene.analysis.NumericTokenStream: org.apache.lucene.analysis.NumericTokenStream$NumericTermAttribute numericAtt>;

        r0.<org.apache.lucene.analysis.NumericTokenStream: int valSize> = 64;

        $i3 = r0.<org.apache.lucene.analysis.NumericTokenStream: int precisionStep>;

        $i1 = r0.<org.apache.lucene.analysis.NumericTokenStream: int precisionStep>;

        $i2 = neg $i1;

        interfaceinvoke $r1.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttribute: void init(long,int,int,int)>(l0, 64, $i3, $i2);

        return r0;
    }

    public org.apache.lucene.analysis.NumericTokenStream setIntValue(int)
    {
        org.apache.lucene.analysis.NumericTokenStream$NumericTermAttribute $r1;
        int i0, $i2, $i3, $i4;
        org.apache.lucene.analysis.NumericTokenStream r0;
        long $l1;

        r0 := @this: org.apache.lucene.analysis.NumericTokenStream;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.analysis.NumericTokenStream: org.apache.lucene.analysis.NumericTokenStream$NumericTermAttribute numericAtt>;

        $l1 = (long) i0;

        r0.<org.apache.lucene.analysis.NumericTokenStream: int valSize> = 32;

        $i4 = r0.<org.apache.lucene.analysis.NumericTokenStream: int precisionStep>;

        $i2 = r0.<org.apache.lucene.analysis.NumericTokenStream: int precisionStep>;

        $i3 = neg $i2;

        interfaceinvoke $r1.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttribute: void init(long,int,int,int)>($l1, 32, $i4, $i3);

        return r0;
    }

    public org.apache.lucene.analysis.NumericTokenStream setDoubleValue(double)
    {
        org.apache.lucene.analysis.NumericTokenStream$NumericTermAttribute $r1;
        int $i1, $i2, $i3;
        org.apache.lucene.analysis.NumericTokenStream r0;
        long $l0;
        double d0;

        r0 := @this: org.apache.lucene.analysis.NumericTokenStream;

        d0 := @parameter0: double;

        $r1 = r0.<org.apache.lucene.analysis.NumericTokenStream: org.apache.lucene.analysis.NumericTokenStream$NumericTermAttribute numericAtt>;

        $l0 = staticinvoke <org.apache.lucene.util.NumericUtils: long doubleToSortableLong(double)>(d0);

        r0.<org.apache.lucene.analysis.NumericTokenStream: int valSize> = 64;

        $i3 = r0.<org.apache.lucene.analysis.NumericTokenStream: int precisionStep>;

        $i1 = r0.<org.apache.lucene.analysis.NumericTokenStream: int precisionStep>;

        $i2 = neg $i1;

        interfaceinvoke $r1.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttribute: void init(long,int,int,int)>($l0, 64, $i3, $i2);

        return r0;
    }

    public org.apache.lucene.analysis.NumericTokenStream setFloatValue(float)
    {
        org.apache.lucene.analysis.NumericTokenStream r0;
        long $l1;
        org.apache.lucene.analysis.NumericTokenStream$NumericTermAttribute $r1;
        int $i0, $i2, $i3, $i4;
        float f0;

        r0 := @this: org.apache.lucene.analysis.NumericTokenStream;

        f0 := @parameter0: float;

        $r1 = r0.<org.apache.lucene.analysis.NumericTokenStream: org.apache.lucene.analysis.NumericTokenStream$NumericTermAttribute numericAtt>;

        $i0 = staticinvoke <org.apache.lucene.util.NumericUtils: int floatToSortableInt(float)>(f0);

        $l1 = (long) $i0;

        r0.<org.apache.lucene.analysis.NumericTokenStream: int valSize> = 32;

        $i4 = r0.<org.apache.lucene.analysis.NumericTokenStream: int precisionStep>;

        $i2 = r0.<org.apache.lucene.analysis.NumericTokenStream: int precisionStep>;

        $i3 = neg $i2;

        interfaceinvoke $r1.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttribute: void init(long,int,int,int)>($l1, 32, $i4, $i3);

        return r0;
    }

    public void reset()
    {
        java.lang.IllegalStateException $r2;
        org.apache.lucene.analysis.NumericTokenStream$NumericTermAttribute $r1;
        int $i0, $i1, $i2;
        org.apache.lucene.analysis.NumericTokenStream r0;

        r0 := @this: org.apache.lucene.analysis.NumericTokenStream;

        $i0 = r0.<org.apache.lucene.analysis.NumericTokenStream: int valSize>;

        if $i0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call set???Value() before usage");

        throw $r2;

     label1:
        $r1 = r0.<org.apache.lucene.analysis.NumericTokenStream: org.apache.lucene.analysis.NumericTokenStream$NumericTermAttribute numericAtt>;

        $i1 = r0.<org.apache.lucene.analysis.NumericTokenStream: int precisionStep>;

        $i2 = neg $i1;

        interfaceinvoke $r1.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttribute: void setShift(int)>($i2);

        return;
    }

    public boolean incrementToken()
    {
        java.lang.IllegalStateException $r4;
        org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute $r3;
        org.apache.lucene.analysis.NumericTokenStream r0;
        byte $b3;
        org.apache.lucene.analysis.NumericTokenStream$NumericTermAttribute $r1;
        int $i0, $i1, $i2;
        java.lang.String $r5;
        org.apache.lucene.analysis.tokenattributes.TypeAttribute $r2;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.NumericTokenStream;

        $i0 = r0.<org.apache.lucene.analysis.NumericTokenStream: int valSize>;

        if $i0 != 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call set???Value() before usage");

        throw $r4;

     label1:
        virtualinvoke r0.<org.apache.lucene.analysis.NumericTokenStream: void clearAttributes()>();

        $r1 = r0.<org.apache.lucene.analysis.NumericTokenStream: org.apache.lucene.analysis.NumericTokenStream$NumericTermAttribute numericAtt>;

        $i1 = interfaceinvoke $r1.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttribute: int incShift()>();

        $r2 = r0.<org.apache.lucene.analysis.NumericTokenStream: org.apache.lucene.analysis.tokenattributes.TypeAttribute typeAtt>;

        if $i1 != 0 goto label2;

        $r5 = "fullPrecNumeric";

        goto label3;

     label2:
        $r5 = "lowerPrecNumeric";

     label3:
        interfaceinvoke $r2.<org.apache.lucene.analysis.tokenattributes.TypeAttribute: void setType(java.lang.String)>($r5);

        $r3 = r0.<org.apache.lucene.analysis.NumericTokenStream: org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute posIncrAtt>;

        if $i1 != 0 goto label4;

        $b3 = 1;

        goto label5;

     label4:
        $b3 = 0;

     label5:
        interfaceinvoke $r3.<org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute: void setPositionIncrement(int)>($b3);

        $i2 = r0.<org.apache.lucene.analysis.NumericTokenStream: int valSize>;

        if $i1 >= $i2 goto label6;

        $z0 = 1;

        goto label7;

     label6:
        $z0 = 0;

     label7:
        return $z0;
    }

    public int getPrecisionStep()
    {
        int $i0;
        org.apache.lucene.analysis.NumericTokenStream r0;

        r0 := @this: org.apache.lucene.analysis.NumericTokenStream;

        $i0 = r0.<org.apache.lucene.analysis.NumericTokenStream: int precisionStep>;

        return $i0;
    }

    public static void <clinit>()
    {
        <org.apache.lucene.analysis.NumericTokenStream: java.lang.String TOKEN_TYPE_LOWER_PREC> = "lowerPrecNumeric";

        <org.apache.lucene.analysis.NumericTokenStream: java.lang.String TOKEN_TYPE_FULL_PREC> = "fullPrecNumeric";

        return;
    }
}
