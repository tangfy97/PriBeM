public class org.codehaus.groovy.tools.groovydoc.GroovyDocTool extends java.lang.Object
{
    private final org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder rootDocBuilder;
    private final org.codehaus.groovy.tools.groovydoc.GroovyDocTemplateEngine templateEngine;

    public void <init>(org.apache.tools.ant.types.Path)
    {
        org.codehaus.groovy.tools.groovydoc.GroovyDocTool r0;
        org.apache.tools.ant.types.Path r1;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.GroovyDocTool;

        r1 := @parameter0: org.apache.tools.ant.types.Path;

        specialinvoke r0.<org.codehaus.groovy.tools.groovydoc.GroovyDocTool: void <init>(org.codehaus.groovy.tools.groovydoc.ResourceManager,org.apache.tools.ant.types.Path,java.lang.String)>(null, r1, null);

        return;
    }

    public void <init>(org.codehaus.groovy.tools.groovydoc.ResourceManager, org.apache.tools.ant.types.Path, java.lang.String)
    {
        org.codehaus.groovy.tools.groovydoc.GroovyDocTool r0;
        java.lang.String[] $r3, $r6, $r7;
        org.apache.tools.ant.types.Path r2;
        java.util.ArrayList $r5;
        org.codehaus.groovy.tools.groovydoc.ResourceManager r1;
        java.lang.String r4;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.GroovyDocTool;

        r1 := @parameter0: org.codehaus.groovy.tools.groovydoc.ResourceManager;

        r2 := @parameter1: org.apache.tools.ant.types.Path;

        r4 := @parameter2: java.lang.String;

        $r6 = newarray (java.lang.String)[0];

        $r7 = newarray (java.lang.String)[0];

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        specialinvoke r0.<org.codehaus.groovy.tools.groovydoc.GroovyDocTool: void <init>(org.codehaus.groovy.tools.groovydoc.ResourceManager,org.apache.tools.ant.types.Path,java.lang.String[],java.lang.String[],java.lang.String[],java.util.List)>(r1, r2, $r6, $r7, $r3, $r5);

        return;
    }

    public void <init>(org.codehaus.groovy.tools.groovydoc.ResourceManager, org.apache.tools.ant.types.Path, java.lang.String[], java.lang.String[], java.lang.String[], java.util.List)
    {
        org.codehaus.groovy.tools.groovydoc.GroovyDocTool r0;
        java.lang.String[] r6, r7, r8;
        org.codehaus.groovy.tools.groovydoc.GroovyDocTemplateEngine $r5;
        org.apache.tools.ant.types.Path r2;
        java.util.List r3;
        org.codehaus.groovy.tools.groovydoc.ResourceManager r4;
        org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder $r1;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.GroovyDocTool;

        r4 := @parameter0: org.codehaus.groovy.tools.groovydoc.ResourceManager;

        r2 := @parameter1: org.apache.tools.ant.types.Path;

        r6 := @parameter2: java.lang.String[];

        r7 := @parameter3: java.lang.String[];

        r8 := @parameter4: java.lang.String[];

        r3 := @parameter5: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder;

        specialinvoke $r1.<org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder: void <init>(org.codehaus.groovy.tools.groovydoc.GroovyDocTool,org.apache.tools.ant.types.Path,java.util.List)>(r0, r2, r3);

        r0.<org.codehaus.groovy.tools.groovydoc.GroovyDocTool: org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder rootDocBuilder> = $r1;

        if r4 != null goto label1;

        r0.<org.codehaus.groovy.tools.groovydoc.GroovyDocTool: org.codehaus.groovy.tools.groovydoc.GroovyDocTemplateEngine templateEngine> = null;

        goto label2;

     label1:
        $r5 = new org.codehaus.groovy.tools.groovydoc.GroovyDocTemplateEngine;

        specialinvoke $r5.<org.codehaus.groovy.tools.groovydoc.GroovyDocTemplateEngine: void <init>(org.codehaus.groovy.tools.groovydoc.GroovyDocTool,org.codehaus.groovy.tools.groovydoc.ResourceManager,java.lang.String[],java.lang.String[],java.lang.String[])>(r0, r4, r6, r7, r8);

        r0.<org.codehaus.groovy.tools.groovydoc.GroovyDocTool: org.codehaus.groovy.tools.groovydoc.GroovyDocTemplateEngine templateEngine> = $r5;

     label2:
        return;
    }

    public void add(java.util.List) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.TokenStreamException, java.io.IOException
    {
        org.codehaus.groovy.tools.groovydoc.GroovyDocTool r0;
        java.io.PrintStream $r5;
        org.codehaus.groovy.tools.groovydoc.GroovyDocTemplateEngine $r1;
        java.util.List r2;
        java.lang.StringBuffer $r4, $r6, $r7;
        org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder $r3;
        java.lang.String $r8;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.GroovyDocTool;

        r2 := @parameter0: java.util.List;

        $r1 = r0.<org.codehaus.groovy.tools.groovydoc.GroovyDocTool: org.codehaus.groovy.tools.groovydoc.GroovyDocTemplateEngine templateEngine>;

        if $r1 == null goto label1;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Loading source files for ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8);

     label1:
        $r3 = r0.<org.codehaus.groovy.tools.groovydoc.GroovyDocTool: org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder rootDocBuilder>;

        virtualinvoke $r3.<org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder: void buildTree(java.util.List)>(r2);

        return;
    }

    public org.codehaus.groovy.groovydoc.GroovyRootDoc getRootDoc()
    {
        org.codehaus.groovy.tools.groovydoc.GroovyDocTool r0;
        org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder $r1;
        org.codehaus.groovy.groovydoc.GroovyRootDoc $r2;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.GroovyDocTool;

        $r1 = r0.<org.codehaus.groovy.tools.groovydoc.GroovyDocTool: org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder rootDocBuilder>;

        $r2 = virtualinvoke $r1.<org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder: org.codehaus.groovy.groovydoc.GroovyRootDoc getRootDoc()>();

        return $r2;
    }

    public void renderToOutput(org.codehaus.groovy.tools.groovydoc.OutputTool, java.lang.String) throws java.lang.Exception
    {
        org.codehaus.groovy.tools.groovydoc.GroovyDocTool r0;
        java.lang.UnsupportedOperationException $r2;
        org.codehaus.groovy.tools.groovydoc.GroovyDocWriter $r3;
        org.codehaus.groovy.tools.groovydoc.GroovyDocTemplateEngine $r1, $r5;
        org.codehaus.groovy.groovydoc.GroovyRootDoc $r7;
        org.codehaus.groovy.tools.groovydoc.OutputTool r4;
        org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder $r6;
        java.lang.String r8;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.GroovyDocTool;

        r4 := @parameter0: org.codehaus.groovy.tools.groovydoc.OutputTool;

        r8 := @parameter1: java.lang.String;

        $r1 = r0.<org.codehaus.groovy.tools.groovydoc.GroovyDocTool: org.codehaus.groovy.tools.groovydoc.GroovyDocTemplateEngine templateEngine>;

        if $r1 == null goto label1;

        $r3 = new org.codehaus.groovy.tools.groovydoc.GroovyDocWriter;

        $r5 = r0.<org.codehaus.groovy.tools.groovydoc.GroovyDocTool: org.codehaus.groovy.tools.groovydoc.GroovyDocTemplateEngine templateEngine>;

        specialinvoke $r3.<org.codehaus.groovy.tools.groovydoc.GroovyDocWriter: void <init>(org.codehaus.groovy.tools.groovydoc.GroovyDocTool,org.codehaus.groovy.tools.groovydoc.OutputTool,org.codehaus.groovy.tools.groovydoc.GroovyDocTemplateEngine)>(r0, r4, $r5);

        $r6 = r0.<org.codehaus.groovy.tools.groovydoc.GroovyDocTool: org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder rootDocBuilder>;

        $r7 = virtualinvoke $r6.<org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder: org.codehaus.groovy.groovydoc.GroovyRootDoc getRootDoc()>();

        virtualinvoke $r3.<org.codehaus.groovy.tools.groovydoc.GroovyDocWriter: void writeRoot(org.codehaus.groovy.groovydoc.GroovyRootDoc,java.lang.String)>($r7, r8);

        virtualinvoke $r3.<org.codehaus.groovy.tools.groovydoc.GroovyDocWriter: void writePackages(org.codehaus.groovy.groovydoc.GroovyRootDoc,java.lang.String)>($r7, r8);

        virtualinvoke $r3.<org.codehaus.groovy.tools.groovydoc.GroovyDocWriter: void writeClasses(org.codehaus.groovy.groovydoc.GroovyRootDoc,java.lang.String)>($r7, r8);

        goto label2;

     label1:
        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("No template engine was found");

        throw $r2;

     label2:
        return;
    }

    java.lang.String getPath(java.lang.String)
    {
        org.codehaus.groovy.tools.groovydoc.GroovyDocTool r3;
        int $i0;
        java.lang.String r1, $r2, r4;
        java.io.File $r0;

        r3 := @this: org.codehaus.groovy.tools.groovydoc.GroovyDocTool;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r1);

        $r2 = virtualinvoke $r0.<java.io.File: java.lang.String getParent()>();

        r4 = $r2;

        if $r2 == null goto label1;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 1 goto label2;

     label1:
        r4 = "DefaultPackage";

     label2:
        return r4;
    }

    java.lang.String getFile(java.lang.String)
    {
        org.codehaus.groovy.tools.groovydoc.GroovyDocTool r3;
        java.lang.String r1, $r2;
        java.io.File $r0;

        r3 := @this: org.codehaus.groovy.tools.groovydoc.GroovyDocTool;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r1);

        $r2 = virtualinvoke $r0.<java.io.File: java.lang.String getName()>();

        return $r2;
    }
}
