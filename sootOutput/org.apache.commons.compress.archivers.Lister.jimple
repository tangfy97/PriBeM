public final class org.apache.commons.compress.archivers.Lister extends java.lang.Object
{
    private static final org.apache.commons.compress.archivers.ArchiveStreamFactory factory;

    public void <init>()
    {
        org.apache.commons.compress.archivers.Lister r0;

        r0 := @this: org.apache.commons.compress.archivers.Lister;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.io.BufferedInputStream $r9;
        org.apache.commons.compress.archivers.ArchiveInputStream r27;
        boolean $z0;
        java.lang.StringBuilder $r1, $r3, $r5, $r12, $r14, $r16, $r22, $r24, $r25;
        org.apache.commons.compress.archivers.ArchiveEntry $r28;
        java.lang.String[] r0;
        int $i0, $i1;
        java.lang.String $r4, $r6, $r8, $r15, $r17, $r19, $r20, $r26;
        org.apache.commons.compress.archivers.ArchiveStreamFactory $r11, $r21;
        java.io.PrintStream $r2, $r13, $r18, $r23;
        java.io.FileInputStream $r10;
        java.io.File $r7;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        staticinvoke <org.apache.commons.compress.archivers.Lister: void usage()>();

        return;

     label1:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Analysing ");

        $r4 = r0[0];

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r6);

        $r7 = new java.io.File;

        $r8 = r0[0];

        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>($r8);

        $z0 = virtualinvoke $r7.<java.io.File: boolean isFile()>();

        if $z0 != 0 goto label2;

        $r23 = <java.lang.System: java.io.PrintStream err>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t exist or is a directory");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r26);

     label2:
        $r9 = new java.io.BufferedInputStream;

        $r10 = new java.io.FileInputStream;

        specialinvoke $r10.<java.io.FileInputStream: void <init>(java.io.File)>($r7);

        specialinvoke $r9.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r10);

        $i1 = lengthof r0;

        if $i1 <= 1 goto label3;

        $r21 = <org.apache.commons.compress.archivers.Lister: org.apache.commons.compress.archivers.ArchiveStreamFactory factory>;

        $r20 = r0[1];

        r27 = virtualinvoke $r21.<org.apache.commons.compress.archivers.ArchiveStreamFactory: org.apache.commons.compress.archivers.ArchiveInputStream createArchiveInputStream(java.lang.String,java.io.InputStream)>($r20, $r9);

        goto label4;

     label3:
        $r11 = <org.apache.commons.compress.archivers.Lister: org.apache.commons.compress.archivers.ArchiveStreamFactory factory>;

        r27 = virtualinvoke $r11.<org.apache.commons.compress.archivers.ArchiveStreamFactory: org.apache.commons.compress.archivers.ArchiveInputStream createArchiveInputStream(java.io.InputStream)>($r9);

     label4:
        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Created ");

        $r15 = virtualinvoke r27.<java.lang.Object: java.lang.String toString()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r17);

     label5:
        $r28 = virtualinvoke r27.<org.apache.commons.compress.archivers.ArchiveInputStream: org.apache.commons.compress.archivers.ArchiveEntry getNextEntry()>();

        if $r28 == null goto label6;

        $r18 = <java.lang.System: java.io.PrintStream out>;

        $r19 = interfaceinvoke $r28.<org.apache.commons.compress.archivers.ArchiveEntry: java.lang.String getName()>();

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r19);

        goto label5;

     label6:
        virtualinvoke r27.<org.apache.commons.compress.archivers.ArchiveInputStream: void close()>();

        virtualinvoke $r9.<java.io.InputStream: void close()>();

        return;
    }

    private static void usage()
    {
        java.io.PrintStream $r0;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("Parameters: archive-name [archive-type]");

        return;
    }

    static void <clinit>()
    {
        org.apache.commons.compress.archivers.ArchiveStreamFactory $r0;

        $r0 = new org.apache.commons.compress.archivers.ArchiveStreamFactory;

        specialinvoke $r0.<org.apache.commons.compress.archivers.ArchiveStreamFactory: void <init>()>();

        <org.apache.commons.compress.archivers.Lister: org.apache.commons.compress.archivers.ArchiveStreamFactory factory> = $r0;

        return;
    }
}
