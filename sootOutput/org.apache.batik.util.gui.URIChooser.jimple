public class org.apache.batik.util.gui.URIChooser extends javax.swing.JDialog implements org.apache.batik.util.gui.resource.ActionMap
{
    public static final int OK_OPTION;
    public static final int CANCEL_OPTION;
    protected static final java.lang.String RESOURCES;
    protected static java.util.ResourceBundle bundle;
    protected static org.apache.batik.util.resources.ResourceManager resources;
    protected org.apache.batik.util.gui.resource.ButtonFactory buttonFactory;
    protected javax.swing.JTextField textField;
    protected javax.swing.JButton okButton;
    protected javax.swing.JButton clearButton;
    protected java.lang.String currentPath;
    protected javax.swing.filechooser.FileFilter fileFilter;
    protected int returnCode;
    protected java.lang.String chosenPath;
    protected java.util.Map listeners;

    public void <init>(javax.swing.JDialog)
    {
        java.util.HashMap $r2;
        javax.swing.JDialog r1;
        org.apache.batik.util.gui.URIChooser r0;

        r0 := @this: org.apache.batik.util.gui.URIChooser;

        r1 := @parameter0: javax.swing.JDialog;

        specialinvoke r0.<javax.swing.JDialog: void <init>(java.awt.Dialog)>(r1);

        r0.<org.apache.batik.util.gui.URIChooser: java.lang.String currentPath> = ".";

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>(int)>(10);

        r0.<org.apache.batik.util.gui.URIChooser: java.util.Map listeners> = $r2;

        virtualinvoke r0.<org.apache.batik.util.gui.URIChooser: void initialize()>();

        return;
    }

    public void <init>(javax.swing.JFrame)
    {
        java.util.HashMap $r2;
        javax.swing.JFrame r1;
        org.apache.batik.util.gui.URIChooser r0;

        r0 := @this: org.apache.batik.util.gui.URIChooser;

        r1 := @parameter0: javax.swing.JFrame;

        specialinvoke r0.<javax.swing.JDialog: void <init>(java.awt.Frame)>(r1);

        r0.<org.apache.batik.util.gui.URIChooser: java.lang.String currentPath> = ".";

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>(int)>(10);

        r0.<org.apache.batik.util.gui.URIChooser: java.util.Map listeners> = $r2;

        virtualinvoke r0.<org.apache.batik.util.gui.URIChooser: void initialize()>();

        return;
    }

    public int showDialog()
    {
        int $i0;
        org.apache.batik.util.gui.URIChooser r0;

        r0 := @this: org.apache.batik.util.gui.URIChooser;

        virtualinvoke r0.<java.awt.Window: void pack()>();

        virtualinvoke r0.<java.awt.Component: void setVisible(boolean)>(1);

        $i0 = r0.<org.apache.batik.util.gui.URIChooser: int returnCode>;

        return $i0;
    }

    public java.lang.String getText()
    {
        java.lang.String $r1;
        org.apache.batik.util.gui.URIChooser r0;

        r0 := @this: org.apache.batik.util.gui.URIChooser;

        $r1 = r0.<org.apache.batik.util.gui.URIChooser: java.lang.String chosenPath>;

        return $r1;
    }

    public void setFileFilter(javax.swing.filechooser.FileFilter)
    {
        javax.swing.filechooser.FileFilter r1;
        org.apache.batik.util.gui.URIChooser r0;

        r0 := @this: org.apache.batik.util.gui.URIChooser;

        r1 := @parameter0: javax.swing.filechooser.FileFilter;

        r0.<org.apache.batik.util.gui.URIChooser: javax.swing.filechooser.FileFilter fileFilter> = r1;

        return;
    }

    protected void initialize()
    {
        org.apache.batik.util.gui.resource.ButtonFactory $r11;
        org.apache.batik.util.gui.URIChooser r0;
        org.apache.batik.util.gui.URIChooser$CancelButtonAction $r5;
        org.apache.batik.util.gui.URIChooser$BrowseButtonAction $r1;
        java.util.ResourceBundle $r12;
        java.util.Map $r2, $r4, $r6, $r8;
        java.lang.String $r10;
        java.awt.Container $r13, $r15;
        org.apache.batik.util.gui.URIChooser$OKButtonAction $r3;
        org.apache.batik.util.gui.URIChooser$ClearButtonAction $r7;
        org.apache.batik.util.resources.ResourceManager $r9;
        javax.swing.JPanel $r14, $r16;

        r0 := @this: org.apache.batik.util.gui.URIChooser;

        virtualinvoke r0.<java.awt.Dialog: void setModal(boolean)>(1);

        $r2 = r0.<org.apache.batik.util.gui.URIChooser: java.util.Map listeners>;

        $r1 = new org.apache.batik.util.gui.URIChooser$BrowseButtonAction;

        specialinvoke $r1.<org.apache.batik.util.gui.URIChooser$BrowseButtonAction: void <init>(org.apache.batik.util.gui.URIChooser)>(r0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("BrowseButtonAction", $r1);

        $r4 = r0.<org.apache.batik.util.gui.URIChooser: java.util.Map listeners>;

        $r3 = new org.apache.batik.util.gui.URIChooser$OKButtonAction;

        specialinvoke $r3.<org.apache.batik.util.gui.URIChooser$OKButtonAction: void <init>(org.apache.batik.util.gui.URIChooser)>(r0);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("OKButtonAction", $r3);

        $r6 = r0.<org.apache.batik.util.gui.URIChooser: java.util.Map listeners>;

        $r5 = new org.apache.batik.util.gui.URIChooser$CancelButtonAction;

        specialinvoke $r5.<org.apache.batik.util.gui.URIChooser$CancelButtonAction: void <init>(org.apache.batik.util.gui.URIChooser)>(r0);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("CancelButtonAction", $r5);

        $r8 = r0.<org.apache.batik.util.gui.URIChooser: java.util.Map listeners>;

        $r7 = new org.apache.batik.util.gui.URIChooser$ClearButtonAction;

        specialinvoke $r7.<org.apache.batik.util.gui.URIChooser$ClearButtonAction: void <init>(org.apache.batik.util.gui.URIChooser)>(r0);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ClearButtonAction", $r7);

        $r9 = <org.apache.batik.util.gui.URIChooser: org.apache.batik.util.resources.ResourceManager resources>;

        $r10 = virtualinvoke $r9.<org.apache.batik.util.resources.ResourceManager: java.lang.String getString(java.lang.String)>("Dialog.title");

        virtualinvoke r0.<java.awt.Dialog: void setTitle(java.lang.String)>($r10);

        $r11 = new org.apache.batik.util.gui.resource.ButtonFactory;

        $r12 = <org.apache.batik.util.gui.URIChooser: java.util.ResourceBundle bundle>;

        specialinvoke $r11.<org.apache.batik.util.gui.resource.ButtonFactory: void <init>(java.util.ResourceBundle,org.apache.batik.util.gui.resource.ActionMap)>($r12, r0);

        r0.<org.apache.batik.util.gui.URIChooser: org.apache.batik.util.gui.resource.ButtonFactory buttonFactory> = $r11;

        $r13 = virtualinvoke r0.<javax.swing.JDialog: java.awt.Container getContentPane()>();

        $r14 = virtualinvoke r0.<org.apache.batik.util.gui.URIChooser: javax.swing.JPanel createURISelectionPanel()>();

        virtualinvoke $r13.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>($r14, "North");

        $r15 = virtualinvoke r0.<javax.swing.JDialog: java.awt.Container getContentPane()>();

        $r16 = virtualinvoke r0.<org.apache.batik.util.gui.URIChooser: javax.swing.JPanel createButtonsPanel()>();

        virtualinvoke $r15.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>($r16, "South");

        return;
    }

    protected javax.swing.JPanel createURISelectionPanel()
    {
        java.awt.Insets $r4;
        javax.swing.JTextField $r9, $r10, $r13;
        org.apache.batik.util.gui.resource.ButtonFactory $r14;
        org.apache.batik.util.gui.URIChooser r8;
        javax.swing.border.Border $r2;
        java.lang.String $r7;
        javax.swing.JButton $r15;
        org.apache.batik.util.gui.URIChooser$DocumentAdapter $r12;
        org.apache.batik.util.gui.ExtendedGridBagConstraints $r3;
        javax.swing.JLabel $r5;
        org.apache.batik.util.resources.ResourceManager $r6;
        javax.swing.text.Document $r11;
        java.awt.GridBagLayout $r1;
        javax.swing.JPanel $r0;

        r8 := @this: org.apache.batik.util.gui.URIChooser;

        $r0 = new javax.swing.JPanel;

        $r1 = new java.awt.GridBagLayout;

        specialinvoke $r1.<java.awt.GridBagLayout: void <init>()>();

        specialinvoke $r0.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($r1);

        $r2 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(5, 5, 5, 5);

        virtualinvoke $r0.<javax.swing.JComponent: void setBorder(javax.swing.border.Border)>($r2);

        $r3 = new org.apache.batik.util.gui.ExtendedGridBagConstraints;

        specialinvoke $r3.<org.apache.batik.util.gui.ExtendedGridBagConstraints: void <init>()>();

        $r4 = new java.awt.Insets;

        specialinvoke $r4.<java.awt.Insets: void <init>(int,int,int,int)>(5, 5, 5, 5);

        $r3.<java.awt.GridBagConstraints: java.awt.Insets insets> = $r4;

        $r3.<java.awt.GridBagConstraints: double weightx> = 0.0;

        $r3.<java.awt.GridBagConstraints: double weighty> = 0.0;

        $r3.<java.awt.GridBagConstraints: int fill> = 2;

        virtualinvoke $r3.<org.apache.batik.util.gui.ExtendedGridBagConstraints: void setGridBounds(int,int,int,int)>(0, 0, 2, 1);

        $r5 = new javax.swing.JLabel;

        $r6 = <org.apache.batik.util.gui.URIChooser: org.apache.batik.util.resources.ResourceManager resources>;

        $r7 = virtualinvoke $r6.<org.apache.batik.util.resources.ResourceManager: java.lang.String getString(java.lang.String)>("Dialog.label");

        specialinvoke $r5.<javax.swing.JLabel: void <init>(java.lang.String)>($r7);

        virtualinvoke $r0.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>($r5, $r3);

        $r9 = new javax.swing.JTextField;

        specialinvoke $r9.<javax.swing.JTextField: void <init>(int)>(30);

        r8.<org.apache.batik.util.gui.URIChooser: javax.swing.JTextField textField> = $r9;

        $r10 = r8.<org.apache.batik.util.gui.URIChooser: javax.swing.JTextField textField>;

        $r11 = virtualinvoke $r10.<javax.swing.text.JTextComponent: javax.swing.text.Document getDocument()>();

        $r12 = new org.apache.batik.util.gui.URIChooser$DocumentAdapter;

        specialinvoke $r12.<org.apache.batik.util.gui.URIChooser$DocumentAdapter: void <init>(org.apache.batik.util.gui.URIChooser)>(r8);

        interfaceinvoke $r11.<javax.swing.text.Document: void addDocumentListener(javax.swing.event.DocumentListener)>($r12);

        $r3.<java.awt.GridBagConstraints: double weightx> = 1.0;

        $r3.<java.awt.GridBagConstraints: double weighty> = 0.0;

        $r3.<java.awt.GridBagConstraints: int fill> = 2;

        virtualinvoke $r3.<org.apache.batik.util.gui.ExtendedGridBagConstraints: void setGridBounds(int,int,int,int)>(0, 1, 1, 1);

        $r13 = r8.<org.apache.batik.util.gui.URIChooser: javax.swing.JTextField textField>;

        virtualinvoke $r0.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>($r13, $r3);

        $r3.<java.awt.GridBagConstraints: double weightx> = 0.0;

        $r3.<java.awt.GridBagConstraints: double weighty> = 0.0;

        $r3.<java.awt.GridBagConstraints: int fill> = 0;

        virtualinvoke $r3.<org.apache.batik.util.gui.ExtendedGridBagConstraints: void setGridBounds(int,int,int,int)>(1, 1, 1, 1);

        $r14 = r8.<org.apache.batik.util.gui.URIChooser: org.apache.batik.util.gui.resource.ButtonFactory buttonFactory>;

        $r15 = virtualinvoke $r14.<org.apache.batik.util.gui.resource.ButtonFactory: javax.swing.JButton createJButton(java.lang.String)>("BrowseButton");

        virtualinvoke $r0.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>($r15, $r3);

        return $r0;
    }

    protected javax.swing.JPanel createButtonsPanel()
    {
        java.awt.FlowLayout $r1;
        javax.swing.JButton $r4, $r6, $r8, $r9, $r10;
        org.apache.batik.util.gui.resource.ButtonFactory $r3, $r5, $r7;
        org.apache.batik.util.gui.URIChooser r2;
        javax.swing.JPanel $r0;

        r2 := @this: org.apache.batik.util.gui.URIChooser;

        $r0 = new javax.swing.JPanel;

        $r1 = new java.awt.FlowLayout;

        specialinvoke $r1.<java.awt.FlowLayout: void <init>()>();

        specialinvoke $r0.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($r1);

        $r3 = r2.<org.apache.batik.util.gui.URIChooser: org.apache.batik.util.gui.resource.ButtonFactory buttonFactory>;

        $r4 = virtualinvoke $r3.<org.apache.batik.util.gui.resource.ButtonFactory: javax.swing.JButton createJButton(java.lang.String)>("OKButton");

        r2.<org.apache.batik.util.gui.URIChooser: javax.swing.JButton okButton> = $r4;

        virtualinvoke $r0.<java.awt.Container: java.awt.Component add(java.awt.Component)>($r4);

        $r5 = r2.<org.apache.batik.util.gui.URIChooser: org.apache.batik.util.gui.resource.ButtonFactory buttonFactory>;

        $r6 = virtualinvoke $r5.<org.apache.batik.util.gui.resource.ButtonFactory: javax.swing.JButton createJButton(java.lang.String)>("CancelButton");

        virtualinvoke $r0.<java.awt.Container: java.awt.Component add(java.awt.Component)>($r6);

        $r7 = r2.<org.apache.batik.util.gui.URIChooser: org.apache.batik.util.gui.resource.ButtonFactory buttonFactory>;

        $r8 = virtualinvoke $r7.<org.apache.batik.util.gui.resource.ButtonFactory: javax.swing.JButton createJButton(java.lang.String)>("ClearButton");

        r2.<org.apache.batik.util.gui.URIChooser: javax.swing.JButton clearButton> = $r8;

        virtualinvoke $r0.<java.awt.Container: java.awt.Component add(java.awt.Component)>($r8);

        $r9 = r2.<org.apache.batik.util.gui.URIChooser: javax.swing.JButton okButton>;

        virtualinvoke $r9.<javax.swing.AbstractButton: void setEnabled(boolean)>(0);

        $r10 = r2.<org.apache.batik.util.gui.URIChooser: javax.swing.JButton clearButton>;

        virtualinvoke $r10.<javax.swing.AbstractButton: void setEnabled(boolean)>(0);

        return $r0;
    }

    protected void updateOKButtonAction()
    {
        javax.swing.JButton $r2;
        javax.swing.JTextField $r1;
        org.apache.batik.util.gui.URIChooser r0;
        java.lang.String $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.util.gui.URIChooser;

        $r2 = r0.<org.apache.batik.util.gui.URIChooser: javax.swing.JButton okButton>;

        $r1 = r0.<org.apache.batik.util.gui.URIChooser: javax.swing.JTextField textField>;

        $r3 = virtualinvoke $r1.<javax.swing.text.JTextComponent: java.lang.String getText()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        virtualinvoke $r2.<javax.swing.AbstractButton: void setEnabled(boolean)>($z1);

        return;
    }

    protected void updateClearButtonAction()
    {
        javax.swing.JButton $r2;
        javax.swing.JTextField $r1;
        org.apache.batik.util.gui.URIChooser r0;
        java.lang.String $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.util.gui.URIChooser;

        $r2 = r0.<org.apache.batik.util.gui.URIChooser: javax.swing.JButton clearButton>;

        $r1 = r0.<org.apache.batik.util.gui.URIChooser: javax.swing.JTextField textField>;

        $r3 = virtualinvoke $r1.<javax.swing.text.JTextComponent: java.lang.String getText()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        virtualinvoke $r2.<javax.swing.AbstractButton: void setEnabled(boolean)>($z1);

        return;
    }

    public javax.swing.Action getAction(java.lang.String) throws org.apache.batik.util.gui.resource.MissingListenerException
    {
        org.apache.batik.util.gui.URIChooser r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        javax.swing.Action $r4;

        r0 := @this: org.apache.batik.util.gui.URIChooser;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.batik.util.gui.URIChooser: java.util.Map listeners>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (javax.swing.Action) $r3;

        return $r4;
    }

    static void <clinit>()
    {
        java.util.ResourceBundle $r1, $r3;
        java.util.Locale $r0;
        org.apache.batik.util.resources.ResourceManager $r2;

        <org.apache.batik.util.gui.URIChooser: java.lang.String RESOURCES> = "org.apache.batik.util.gui.resources.URIChooserMessages";

        <org.apache.batik.util.gui.URIChooser: int CANCEL_OPTION> = 1;

        <org.apache.batik.util.gui.URIChooser: int OK_OPTION> = 0;

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)>("org.apache.batik.util.gui.resources.URIChooserMessages", $r0);

        <org.apache.batik.util.gui.URIChooser: java.util.ResourceBundle bundle> = $r1;

        $r2 = new org.apache.batik.util.resources.ResourceManager;

        $r3 = <org.apache.batik.util.gui.URIChooser: java.util.ResourceBundle bundle>;

        specialinvoke $r2.<org.apache.batik.util.resources.ResourceManager: void <init>(java.util.ResourceBundle)>($r3);

        <org.apache.batik.util.gui.URIChooser: org.apache.batik.util.resources.ResourceManager resources> = $r2;

        return;
    }
}
