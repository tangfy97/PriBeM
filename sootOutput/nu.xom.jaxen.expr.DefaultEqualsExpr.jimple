class nu.xom.jaxen.expr.DefaultEqualsExpr extends nu.xom.jaxen.expr.DefaultEqualityExpr
{
    private static final long serialVersionUID;

    void <init>(nu.xom.jaxen.expr.Expr, nu.xom.jaxen.expr.Expr)
    {
        nu.xom.jaxen.expr.DefaultEqualsExpr r0;
        nu.xom.jaxen.expr.Expr r1, r2;

        r0 := @this: nu.xom.jaxen.expr.DefaultEqualsExpr;

        r1 := @parameter0: nu.xom.jaxen.expr.Expr;

        r2 := @parameter1: nu.xom.jaxen.expr.Expr;

        specialinvoke r0.<nu.xom.jaxen.expr.DefaultEqualityExpr: void <init>(nu.xom.jaxen.expr.Expr,nu.xom.jaxen.expr.Expr)>(r1, r2);

        return;
    }

    public java.lang.String getOperator()
    {
        nu.xom.jaxen.expr.DefaultEqualsExpr r0;

        r0 := @this: nu.xom.jaxen.expr.DefaultEqualsExpr;

        return "=";
    }

    public java.lang.String toString()
    {
        nu.xom.jaxen.expr.Expr $r3, $r6;
        nu.xom.jaxen.expr.DefaultEqualsExpr r2;
        java.lang.StringBuffer $r0, $r1, $r4, $r5, $r7, $r8;
        java.lang.String $r9;

        r2 := @this: nu.xom.jaxen.expr.DefaultEqualsExpr;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[(DefaultEqualsExpr): ");

        $r3 = virtualinvoke r2.<nu.xom.jaxen.expr.DefaultEqualsExpr: nu.xom.jaxen.expr.Expr getLHS()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r6 = virtualinvoke r2.<nu.xom.jaxen.expr.DefaultEqualsExpr: nu.xom.jaxen.expr.Expr getRHS()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }

    protected boolean evaluateObjectObject(java.lang.Object, java.lang.Object)
    {
        java.lang.Double $r3, $r4;
        nu.xom.jaxen.expr.DefaultEqualsExpr r0;
        java.lang.Object r1, r2;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: nu.xom.jaxen.expr.DefaultEqualsExpr;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $z0 = virtualinvoke r0.<nu.xom.jaxen.expr.DefaultEqualsExpr: boolean eitherIsNumber(java.lang.Object,java.lang.Object)>(r1, r2);

        if $z0 == 0 goto label2;

        $r3 = (java.lang.Double) r1;

        $z2 = staticinvoke <nu.xom.jaxen.function.NumberFunction: boolean isNaN(java.lang.Double)>($r3);

        if $z2 != 0 goto label1;

        $r4 = (java.lang.Double) r2;

        $z3 = staticinvoke <nu.xom.jaxen.function.NumberFunction: boolean isNaN(java.lang.Double)>($r4);

        if $z3 == 0 goto label2;

     label1:
        return 0;

     label2:
        $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        return $z1;
    }

    public static void <clinit>()
    {
        <nu.xom.jaxen.expr.DefaultEqualsExpr: long serialVersionUID> = -8327599812627931648L;

        return;
    }
}
