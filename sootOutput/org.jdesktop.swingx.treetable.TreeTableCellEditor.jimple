public class org.jdesktop.swingx.treetable.TreeTableCellEditor extends javax.swing.DefaultCellEditor
{
    private static final java.util.logging.Logger LOG;
    private final javax.swing.JTree tree;

    public void <init>(javax.swing.JTree)
    {
        org.jdesktop.swingx.treetable.TreeTableCellEditor r0;
        org.jdesktop.swingx.treetable.TreeTableCellEditor$TreeTableTextField $r1;
        javax.swing.JTree r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.jdesktop.swingx.treetable.TreeTableCellEditor;

        r2 := @parameter0: javax.swing.JTree;

        $r1 = new org.jdesktop.swingx.treetable.TreeTableCellEditor$TreeTableTextField;

        specialinvoke $r1.<org.jdesktop.swingx.treetable.TreeTableCellEditor$TreeTableTextField: void <init>()>();

        specialinvoke r0.<javax.swing.DefaultCellEditor: void <init>(javax.swing.JTextField)>($r1);

        if r2 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null tree");

        throw $r3;

     label1:
        r0.<org.jdesktop.swingx.treetable.TreeTableCellEditor: javax.swing.JTree tree> = r2;

        return;
    }

    public java.awt.Component getTableCellEditorComponent(javax.swing.JTable, java.lang.Object, boolean, int, int)
    {
        org.jdesktop.swingx.treetable.TreeTableCellEditor r0;
        int i0, i1;
        javax.swing.JTable r1;
        java.lang.Object r2;
        java.awt.Component $r3;
        boolean z0;

        r0 := @this: org.jdesktop.swingx.treetable.TreeTableCellEditor;

        r1 := @parameter0: javax.swing.JTable;

        r2 := @parameter1: java.lang.Object;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        $r3 = specialinvoke r0.<javax.swing.DefaultCellEditor: java.awt.Component getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,boolean,int,int)>(r1, r2, z0, i0, i1);

        virtualinvoke r0.<org.jdesktop.swingx.treetable.TreeTableCellEditor: void initEditorOffset(javax.swing.JTable,int,int,boolean)>(r1, i0, i1, z0);

        return $r3;
    }

    protected void initEditorOffset(javax.swing.JTable, int, int, boolean)
    {
        javax.swing.tree.TreeModel $r6;
        org.jdesktop.swingx.treetable.TreeTableCellEditor$TreeTableTextField $r15;
        int i0, i1;
        boolean $z0, $z1, z2;
        javax.swing.tree.TreePath $r3;
        javax.swing.JTree $r1, $r2, $r5, $r7, $r8, $r10, $r14;
        java.awt.Component $r11, $r12;
        javax.swing.tree.TreeCellRenderer $r9;
        org.jdesktop.swingx.treetable.TreeTableCellEditor r0;
        javax.swing.JTable r13;
        java.lang.Object $r4;

        r0 := @this: org.jdesktop.swingx.treetable.TreeTableCellEditor;

        r13 := @parameter0: javax.swing.JTable;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z2 := @parameter3: boolean;

        $r1 = r0.<org.jdesktop.swingx.treetable.TreeTableCellEditor: javax.swing.JTree tree>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<org.jdesktop.swingx.treetable.TreeTableCellEditor: javax.swing.JTree tree>;

        $r3 = virtualinvoke $r2.<javax.swing.JTree: javax.swing.tree.TreePath getPathForRow(int)>(i0);

        $r4 = virtualinvoke $r3.<javax.swing.tree.TreePath: java.lang.Object getLastPathComponent()>();

        $r5 = r0.<org.jdesktop.swingx.treetable.TreeTableCellEditor: javax.swing.JTree tree>;

        $r6 = virtualinvoke $r5.<javax.swing.JTree: javax.swing.tree.TreeModel getModel()>();

        $z0 = interfaceinvoke $r6.<javax.swing.tree.TreeModel: boolean isLeaf(java.lang.Object)>($r4);

        $r7 = r0.<org.jdesktop.swingx.treetable.TreeTableCellEditor: javax.swing.JTree tree>;

        $z1 = virtualinvoke $r7.<javax.swing.JTree: boolean isExpanded(int)>(i0);

        $r8 = r0.<org.jdesktop.swingx.treetable.TreeTableCellEditor: javax.swing.JTree tree>;

        $r9 = virtualinvoke $r8.<javax.swing.JTree: javax.swing.tree.TreeCellRenderer getCellRenderer()>();

        $r10 = r0.<org.jdesktop.swingx.treetable.TreeTableCellEditor: javax.swing.JTree tree>;

        $r11 = interfaceinvoke $r9.<javax.swing.tree.TreeCellRenderer: java.awt.Component getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean)>($r10, $r4, z2, $z1, $z0, i0, 0);

        $r12 = virtualinvoke r0.<org.jdesktop.swingx.treetable.TreeTableCellEditor: java.awt.Component getComponent()>();

        $r15 = (org.jdesktop.swingx.treetable.TreeTableCellEditor$TreeTableTextField) $r12;

        $r14 = r0.<org.jdesktop.swingx.treetable.TreeTableCellEditor: javax.swing.JTree tree>;

        virtualinvoke $r15.<org.jdesktop.swingx.treetable.TreeTableCellEditor$TreeTableTextField: void init(int,int,javax.swing.JTable,javax.swing.JTree,java.awt.Component)>(i0, i1, r13, $r14, $r11);

        return;
    }

    public boolean isCellEditable(java.util.EventObject)
    {
        org.jdesktop.swingx.treetable.TreeTableCellEditor r2;
        int $i0, $i1;
        java.awt.event.MouseEvent $r1;
        java.util.EventObject r0;
        boolean $z0, $z1;

        r2 := @this: org.jdesktop.swingx.treetable.TreeTableCellEditor;

        r0 := @parameter0: java.util.EventObject;

        $z0 = r0 instanceof java.awt.event.MouseEvent;

        if $z0 == 0 goto label3;

        $r1 = (java.awt.event.MouseEvent) r0;

        $i0 = virtualinvoke $r1.<java.awt.event.MouseEvent: int getClickCount()>();

        $i1 = r2.<org.jdesktop.swingx.treetable.TreeTableCellEditor: int clickCountToStart>;

        if $i0 < $i1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        return 1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "Lorg/jdesktop/swingx/treetable/TreeTableCellEditor;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <org.jdesktop.swingx.treetable.TreeTableCellEditor: java.util.logging.Logger LOG> = $r2;

        return;
    }
}
