public class ucar.nc2.iosp.gempak.GempakGridServiceProvider extends ucar.nc2.iosp.grid.GridServiceProvider
{
    protected ucar.nc2.iosp.gempak.GempakGridReader gemreader;
    public static boolean extendIndex;

    public void <init>()
    {
        ucar.nc2.iosp.gempak.GempakGridServiceProvider r0;

        r0 := @this: ucar.nc2.iosp.gempak.GempakGridServiceProvider;

        specialinvoke r0.<ucar.nc2.iosp.grid.GridServiceProvider: void <init>()>();

        return;
    }

    public boolean isValidFile(ucar.unidata.io.RandomAccessFile) throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile r2;
        ucar.nc2.iosp.gempak.GempakGridReader $r1, $r4;
        ucar.nc2.iosp.gempak.GempakGridServiceProvider r0;
        java.lang.String $r3;
        java.lang.Exception $r5;

        r0 := @this: ucar.nc2.iosp.gempak.GempakGridServiceProvider;

        r2 := @parameter0: ucar.unidata.io.RandomAccessFile;

     label1:
        $r1 = new ucar.nc2.iosp.gempak.GempakGridReader;

        $r3 = virtualinvoke r2.<ucar.unidata.io.RandomAccessFile: java.lang.String getLocation()>();

        specialinvoke $r1.<ucar.nc2.iosp.gempak.GempakGridReader: void <init>(java.lang.String)>($r3);

        r0.<ucar.nc2.iosp.gempak.GempakGridServiceProvider: ucar.nc2.iosp.gempak.GempakGridReader gemreader> = $r1;

        $r4 = r0.<ucar.nc2.iosp.gempak.GempakGridServiceProvider: ucar.nc2.iosp.gempak.GempakGridReader gemreader>;

        virtualinvoke $r4.<ucar.nc2.iosp.gempak.GempakGridReader: void init(ucar.unidata.io.RandomAccessFile,boolean)>(r2, 0);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        return 0;

     label4:
        return 1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.lang.String getFileTypeId()
    {
        ucar.nc2.iosp.gempak.GempakGridServiceProvider r0;

        r0 := @this: ucar.nc2.iosp.gempak.GempakGridServiceProvider;

        return "GempakGrid";
    }

    public java.lang.String getFileTypeDescription()
    {
        ucar.nc2.iosp.gempak.GempakGridServiceProvider r0;

        r0 := @this: ucar.nc2.iosp.gempak.GempakGridServiceProvider;

        return "GEMPAK Gridded Data";
    }

    public void open(ucar.unidata.io.RandomAccessFile, ucar.nc2.NetcdfFile, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile r1;
        long $l0, $l1, $l2;
        ucar.nc2.util.CancelTask r3;
        ucar.nc2.iosp.gempak.GempakGridReader $r4, $r5, $r6, $r16;
        java.lang.String $r11, $r15, $r17;
        boolean $z0;
        java.io.PrintStream $r9;
        ucar.nc2.iosp.gempak.GempakGridServiceProvider r0;
        java.lang.StringBuilder $r8, $r10, $r12, $r13, $r14;
        ucar.nc2.NetcdfFile r2;
        ucar.grid.GridIndex $r7;

        r0 := @this: ucar.nc2.iosp.gempak.GempakGridServiceProvider;

        r1 := @parameter0: ucar.unidata.io.RandomAccessFile;

        r2 := @parameter1: ucar.nc2.NetcdfFile;

        r3 := @parameter2: ucar.nc2.util.CancelTask;

        specialinvoke r0.<ucar.nc2.iosp.grid.GridServiceProvider: void open(ucar.unidata.io.RandomAccessFile,ucar.nc2.NetcdfFile,ucar.nc2.util.CancelTask)>(r1, r2, r3);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r4 = r0.<ucar.nc2.iosp.gempak.GempakGridServiceProvider: ucar.nc2.iosp.gempak.GempakGridReader gemreader>;

        if $r4 != null goto label1;

        $r16 = new ucar.nc2.iosp.gempak.GempakGridReader;

        $r17 = virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: java.lang.String getLocation()>();

        specialinvoke $r16.<ucar.nc2.iosp.gempak.GempakGridReader: void <init>(java.lang.String)>($r17);

        r0.<ucar.nc2.iosp.gempak.GempakGridServiceProvider: ucar.nc2.iosp.gempak.GempakGridReader gemreader> = $r16;

     label1:
        specialinvoke r0.<ucar.nc2.iosp.gempak.GempakGridServiceProvider: void initTables()>();

        $r5 = r0.<ucar.nc2.iosp.gempak.GempakGridServiceProvider: ucar.nc2.iosp.gempak.GempakGridReader gemreader>;

        virtualinvoke $r5.<ucar.nc2.iosp.gempak.GempakGridReader: void init(ucar.unidata.io.RandomAccessFile,boolean)>(r1, 1);

        $r6 = r0.<ucar.nc2.iosp.gempak.GempakGridServiceProvider: ucar.nc2.iosp.gempak.GempakGridReader gemreader>;

        $r7 = virtualinvoke $r6.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.grid.GridIndex getGridIndex()>();

        virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakGridServiceProvider: void open(ucar.grid.GridIndex,ucar.nc2.util.CancelTask)>($r7, r3);

        $z0 = <ucar.nc2.iosp.gempak.GempakGridServiceProvider: boolean debugOpen>;

        if $z0 == 0 goto label2;

        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" GridServiceProvider.open ");

        $r11 = virtualinvoke r2.<ucar.nc2.NetcdfFile: java.lang.String getLocation()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" took ");

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = $l1 - $l0;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r15);

     label2:
        return;
    }

    protected void open(ucar.grid.GridIndex, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.iosp.gempak.GempakLookup $r0;
        ucar.nc2.iosp.gempak.GempakGridServiceProvider r7;
        java.util.List $r2;
        ucar.nc2.util.CancelTask r8;
        ucar.nc2.iosp.grid.GridIndexToNC $r5;
        ucar.nc2.dt.fmr.FmrcCoordSys $r9;
        java.lang.Object $r3;
        ucar.nc2.iosp.gempak.GempakGridRecord $r4;
        java.lang.String $r6;
        ucar.nc2.NetcdfFile $r10, $r11;
        ucar.grid.GridIndex r1;

        r7 := @this: ucar.nc2.iosp.gempak.GempakGridServiceProvider;

        r1 := @parameter0: ucar.grid.GridIndex;

        r8 := @parameter1: ucar.nc2.util.CancelTask;

        $r0 = new ucar.nc2.iosp.gempak.GempakLookup;

        $r2 = virtualinvoke r1.<ucar.grid.GridIndex: java.util.List getGridRecords()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (ucar.nc2.iosp.gempak.GempakGridRecord) $r3;

        specialinvoke $r0.<ucar.nc2.iosp.gempak.GempakLookup: void <init>(ucar.nc2.iosp.gempak.GempakGridRecord)>($r4);

        $r5 = new ucar.nc2.iosp.grid.GridIndexToNC;

        $r6 = r1.<ucar.grid.GridIndex: java.lang.String filename>;

        specialinvoke $r5.<ucar.nc2.iosp.grid.GridIndexToNC: void <init>(java.lang.String)>($r6);

        $r10 = r7.<ucar.nc2.iosp.gempak.GempakGridServiceProvider: ucar.nc2.NetcdfFile ncfile>;

        $r9 = r7.<ucar.nc2.iosp.gempak.GempakGridServiceProvider: ucar.nc2.dt.fmr.FmrcCoordSys fmrcCoordSys>;

        virtualinvoke $r5.<ucar.nc2.iosp.grid.GridIndexToNC: void open(ucar.grid.GridIndex,ucar.grid.GridTableLookup,int,ucar.nc2.NetcdfFile,ucar.nc2.dt.fmr.FmrcCoordSys,ucar.nc2.util.CancelTask)>(r1, $r0, 4, $r10, $r9, r8);

        $r11 = r7.<ucar.nc2.iosp.gempak.GempakGridServiceProvider: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r11.<ucar.nc2.NetcdfFile: void finish()>();

        return;
    }

    public boolean sync() throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile $r2;
        ucar.nc2.iosp.gempak.GempakGridServiceProvider r0;
        long $l0, $l1;
        ucar.nc2.iosp.gempak.GempakGridReader $r1, $r3, $r4;
        byte $b2;
        int $i3;
        ucar.nc2.NetcdfFile $r6;
        ucar.grid.GridIndex $r5;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.gempak.GempakGridServiceProvider;

        $r1 = r0.<ucar.nc2.iosp.gempak.GempakGridServiceProvider: ucar.nc2.iosp.gempak.GempakGridReader gemreader>;

        $l0 = virtualinvoke $r1.<ucar.nc2.iosp.gempak.GempakGridReader: long getInitFileSize()>();

        $r2 = r0.<ucar.nc2.iosp.gempak.GempakGridServiceProvider: ucar.unidata.io.RandomAccessFile raf>;

        $l1 = virtualinvoke $r2.<ucar.unidata.io.RandomAccessFile: long length()>();

        $b2 = $l0 cmp $l1;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label1;

        $z0 = <ucar.nc2.iosp.gempak.GempakGridServiceProvider: boolean extendIndex>;

        if $z0 == 0 goto label1;

        $r3 = r0.<ucar.nc2.iosp.gempak.GempakGridServiceProvider: ucar.nc2.iosp.gempak.GempakGridReader gemreader>;

        virtualinvoke $r3.<ucar.nc2.iosp.gempak.GempakGridReader: boolean init(boolean)>(1);

        $r4 = r0.<ucar.nc2.iosp.gempak.GempakGridServiceProvider: ucar.nc2.iosp.gempak.GempakGridReader gemreader>;

        $r5 = virtualinvoke $r4.<ucar.nc2.iosp.gempak.GempakGridReader: ucar.grid.GridIndex getGridIndex()>();

        $r6 = r0.<ucar.nc2.iosp.gempak.GempakGridServiceProvider: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r6.<ucar.nc2.NetcdfFile: void empty()>();

        virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakGridServiceProvider: void open(ucar.grid.GridIndex,ucar.nc2.util.CancelTask)>($r5, null);

        return 1;

     label1:
        return 0;
    }

    protected float[] _readData(ucar.grid.GridRecord) throws java.io.IOException
    {
        ucar.nc2.iosp.gempak.GempakGridReader $r3;
        ucar.nc2.iosp.gempak.GempakGridServiceProvider r0;
        ucar.nc2.iosp.gempak.GempakGridRecord $r2;
        float[] $r4;
        ucar.grid.GridRecord r1;

        r0 := @this: ucar.nc2.iosp.gempak.GempakGridServiceProvider;

        r1 := @parameter0: ucar.grid.GridRecord;

        $r3 = r0.<ucar.nc2.iosp.gempak.GempakGridServiceProvider: ucar.nc2.iosp.gempak.GempakGridReader gemreader>;

        $r2 = (ucar.nc2.iosp.gempak.GempakGridRecord) r1;

        $r4 = virtualinvoke $r3.<ucar.nc2.iosp.gempak.GempakGridReader: float[] readGrid(ucar.grid.GridRecord)>($r2);

        return $r4;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        ucar.nc2.iosp.gempak.GempakGridServiceProvider$MakeNetcdfFile $r21;
        java.lang.StringBuilder $r6, $r9, $r10, $r11, $r13, $r15, $r17, $r23, $r25, $r27, $r31, $r33, $r34, $r35, $r40, $r42, $r43, $r44, $r47, $r49, $r50, $r53, $r55, $r56, $r61, $r63, $r64, $r65, $r66;
        java.util.Calendar $r4, $r58;
        java.lang.String $r2, $r8, $r12, $r16, $r18, $r20, $r22, $r26, $r28, $r29, $r36, $r45, $r51, $r57, $r62, $r67;
        java.io.IOException $r46;
        ucar.unidata.io.RandomAccessFile $r19;
        java.util.Date $r5, $r59;
        ucar.nc2.iosp.gempak.GempakGridServiceProvider $r0;
        java.io.FileNotFoundException $r52;
        ucar.nc2.NetcdfFile $r30;
        java.lang.String[] r3;
        int $i0, $i1;
        java.io.PrintStream $r7, $r14, $r24, $r32, $r37, $r38, $r39, $r41, $r48, $r54, $r60;
        java.lang.Class $r1;

        r3 := @parameter0: java.lang.String[];

        $r0 = new ucar.nc2.iosp.gempak.GempakGridServiceProvider;

        specialinvoke $r0.<ucar.nc2.iosp.gempak.GempakGridServiceProvider: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $i0 = lengthof r3;

        if $i0 >= 1 goto label1;

        $r32 = <java.lang.System: java.io.PrintStream out>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nUsage of ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":\n");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>($r36);

        $r37 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r37.<java.io.PrintStream: void println(java.lang.String)>("Parameters:");

        $r38 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>("\t<GEMPAK Grid File> GEMPAK grid file to read");

        $r39 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>("\t<NetCDF output file> file to store results (optional)\n");

        $r41 = <java.lang.System: java.io.PrintStream out>;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("java -Xmx256m ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" <GEMPAK Grid File> <NetCDF output file>");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r41.<java.io.PrintStream: void println(java.lang.String)>($r45);

        staticinvoke <java.lang.System: void exit(int)>(0);

     label1:
        $r4 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r5 = virtualinvoke $r4.<java.util.Calendar: java.util.Date getTime()>();

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r5.<java.util.Date: java.lang.String toString()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ... Start of ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r12);

     label2:
        $r14 = <java.lang.System: java.io.PrintStream out>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("reading GEMPAK grid file=");

        $r16 = r3[0];

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r18);

        $r19 = new ucar.unidata.io.RandomAccessFile;

        $r20 = r3[0];

        specialinvoke $r19.<ucar.unidata.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String,int)>($r20, "r", 2048);

        $r21 = new ucar.nc2.iosp.gempak.GempakGridServiceProvider$MakeNetcdfFile;

        $r22 = r3[0];

        specialinvoke $r21.<ucar.nc2.iosp.gempak.GempakGridServiceProvider$MakeNetcdfFile: void <init>(ucar.nc2.iosp.IOServiceProvider,ucar.unidata.io.RandomAccessFile,java.lang.String,ucar.nc2.util.CancelTask)>($r0, $r19, $r22, null);

        $i1 = lengthof r3;

        if $i1 != 2 goto label3;

        $r24 = <java.lang.System: java.io.PrintStream out>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("writing to netCDF file=");

        $r26 = r3[1];

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.io.PrintStream: void print(java.lang.String)>($r28);

        $r29 = r3[1];

        $r30 = staticinvoke <ucar.nc2.FileWriter: ucar.nc2.NetcdfFile writeToFile(ucar.nc2.NetcdfFile,java.lang.String)>($r21, $r29);

        virtualinvoke $r30.<ucar.nc2.NetcdfFile: void close()>();

     label3:
        virtualinvoke $r19.<ucar.unidata.io.RandomAccessFile: void close()>();

     label4:
        goto label7;

     label5:
        $r52 := @caughtexception;

        $r54 = <java.lang.System: java.io.PrintStream err>;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FileNotFoundException : ");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r52);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r54.<java.io.PrintStream: void println(java.lang.String)>($r57);

        goto label7;

     label6:
        $r46 := @caughtexception;

        $r48 = <java.lang.System: java.io.PrintStream err>;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IOException : ");

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r46);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r48.<java.io.PrintStream: void println(java.lang.String)>($r51);

     label7:
        $r58 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r59 = virtualinvoke $r58.<java.util.Calendar: java.util.Date getTime()>();

        $r60 = <java.lang.System: java.io.PrintStream out>;

        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r59.<java.util.Date: java.lang.String toString()>();

        $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ... End of ");

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r60.<java.io.PrintStream: void println(java.lang.String)>($r67);

        return;

        catch java.io.FileNotFoundException from label2 to label4 with label5;
        catch java.io.IOException from label2 to label4 with label6;
    }

    private void initTables()
    {
        java.io.PrintStream $r1;
        ucar.nc2.iosp.gempak.GempakGridServiceProvider r2;
        java.lang.Exception $r0;

        r2 := @this: ucar.nc2.iosp.gempak.GempakGridServiceProvider;

     label1:
        staticinvoke <ucar.nc2.iosp.gempak.GempakGridParameterTable: void addParameters(java.lang.String)>("resources/nj22/tables/gempak/wmogrib3.tbl");

        staticinvoke <ucar.nc2.iosp.gempak.GempakGridParameterTable: void addParameters(java.lang.String)>("resources/nj22/tables/gempak/ncepgrib2.tbl");

     label2:
        goto label4;

     label3:
        $r0 := @caughtexception;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("unable to init tables");

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static void setExtendIndex(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <ucar.nc2.iosp.gempak.GempakGridServiceProvider: boolean extendIndex> = z0;

        return;
    }

    static void <clinit>()
    {
        <ucar.nc2.iosp.gempak.GempakGridServiceProvider: boolean extendIndex> = 1;

        return;
    }
}
