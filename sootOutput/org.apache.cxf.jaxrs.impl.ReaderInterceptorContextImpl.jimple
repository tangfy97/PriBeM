public class org.apache.cxf.jaxrs.impl.ReaderInterceptorContextImpl extends org.apache.cxf.jaxrs.impl.AbstractInterceptorContextImpl implements javax.ws.rs.ext.ReaderInterceptorContext
{
    private java.util.List readers;
    private java.io.InputStream is;

    public void <init>(java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], java.io.InputStream, org.apache.cxf.message.Message, java.util.List)
    {
        org.apache.cxf.jaxrs.impl.ReaderInterceptorContextImpl r0;
        java.util.List r6;
        java.lang.reflect.Type r2;
        org.apache.cxf.message.Message r4;
        java.lang.Class r1;
        java.lang.'annotation'.Annotation[] r3;
        java.io.InputStream r5;

        r0 := @this: org.apache.cxf.jaxrs.impl.ReaderInterceptorContextImpl;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.reflect.Type;

        r3 := @parameter2: java.lang.'annotation'.Annotation[];

        r5 := @parameter3: java.io.InputStream;

        r4 := @parameter4: org.apache.cxf.message.Message;

        r6 := @parameter5: java.util.List;

        specialinvoke r0.<org.apache.cxf.jaxrs.impl.AbstractInterceptorContextImpl: void <init>(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],org.apache.cxf.message.Message)>(r1, r2, r3, r4);

        r0.<org.apache.cxf.jaxrs.impl.ReaderInterceptorContextImpl: java.io.InputStream is> = r5;

        r0.<org.apache.cxf.jaxrs.impl.ReaderInterceptorContextImpl: java.util.List readers> = r6;

        return;
    }

    public javax.ws.rs.core.MultivaluedMap getHeaders()
    {
        org.apache.cxf.jaxrs.impl.ReaderInterceptorContextImpl r1;
        org.apache.cxf.message.Message $r3;
        java.util.Map $r5;
        org.apache.cxf.jaxrs.impl.MetadataMap $r0;
        java.lang.Object $r4;
        java.lang.String $r2;

        r1 := @this: org.apache.cxf.jaxrs.impl.ReaderInterceptorContextImpl;

        $r0 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        $r3 = r1.<org.apache.cxf.jaxrs.impl.ReaderInterceptorContextImpl: org.apache.cxf.message.Message m>;

        $r2 = <org.apache.cxf.message.Message: java.lang.String PROTOCOL_HEADERS>;

        $r4 = interfaceinvoke $r3.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r2);

        $r5 = (java.util.Map) $r4;

        specialinvoke $r0.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>(java.util.Map,boolean,boolean,boolean)>($r5, 0, 0, 1);

        return $r0;
    }

    public java.io.InputStream getInputStream()
    {
        org.apache.cxf.jaxrs.impl.ReaderInterceptorContextImpl r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.cxf.jaxrs.impl.ReaderInterceptorContextImpl;

        $r1 = r0.<org.apache.cxf.jaxrs.impl.ReaderInterceptorContextImpl: java.io.InputStream is>;

        return $r1;
    }

    public java.lang.Object proceed() throws java.io.IOException
    {
        org.apache.cxf.jaxrs.impl.ReaderInterceptorContextImpl r0;
        java.util.List $r1, $r2, $r3;
        javax.ws.rs.ext.ReaderInterceptor r5;
        java.lang.Object $r4, $r6;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.impl.ReaderInterceptorContextImpl;

        $r1 = r0.<org.apache.cxf.jaxrs.impl.ReaderInterceptorContextImpl: java.util.List readers>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.cxf.jaxrs.impl.ReaderInterceptorContextImpl: java.util.List readers>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        return null;

     label2:
        $r3 = r0.<org.apache.cxf.jaxrs.impl.ReaderInterceptorContextImpl: java.util.List readers>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object remove(int)>(0);

        r5 = (javax.ws.rs.ext.ReaderInterceptor) $r4;

        $r6 = interfaceinvoke r5.<javax.ws.rs.ext.ReaderInterceptor: java.lang.Object aroundReadFrom(javax.ws.rs.ext.ReaderInterceptorContext)>(r0);

        return $r6;
    }

    public void setInputStream(java.io.InputStream)
    {
        org.apache.cxf.jaxrs.impl.ReaderInterceptorContextImpl r0;
        org.apache.cxf.message.Message $r2;
        java.io.InputStream r1;

        r0 := @this: org.apache.cxf.jaxrs.impl.ReaderInterceptorContextImpl;

        r1 := @parameter0: java.io.InputStream;

        r0.<org.apache.cxf.jaxrs.impl.ReaderInterceptorContextImpl: java.io.InputStream is> = r1;

        $r2 = r0.<org.apache.cxf.jaxrs.impl.ReaderInterceptorContextImpl: org.apache.cxf.message.Message m>;

        interfaceinvoke $r2.<org.apache.cxf.message.Message: void setContent(java.lang.Class,java.lang.Object)>(class "Ljava/io/InputStream;", r1);

        return;
    }

    public javax.ws.rs.core.MediaType getMediaType()
    {
        javax.ws.rs.core.MultivaluedMap $r1;
        org.apache.cxf.jaxrs.impl.ReaderInterceptorContextImpl r0;
        javax.ws.rs.core.MediaType $r4;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.cxf.jaxrs.impl.ReaderInterceptorContextImpl;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.ReaderInterceptorContextImpl: javax.ws.rs.core.MultivaluedMap getHeaders()>();

        $r2 = interfaceinvoke $r1.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("Content-Type");

        $r3 = (java.lang.String) $r2;

        $r4 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.MediaType toMediaType(java.lang.String)>($r3);

        return $r4;
    }

    public void setMediaType(javax.ws.rs.core.MediaType)
    {
        javax.ws.rs.core.MultivaluedMap $r3;
        org.apache.cxf.jaxrs.impl.ReaderInterceptorContextImpl r0;
        javax.ws.rs.core.MediaType $r1, r2;
        java.lang.String[] $r4;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.impl.ReaderInterceptorContextImpl;

        r2 := @parameter0: javax.ws.rs.core.MediaType;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.ReaderInterceptorContextImpl: javax.ws.rs.core.MediaType getMediaType()>();

        $z0 = virtualinvoke $r1.<javax.ws.rs.core.MediaType: boolean isCompatible(javax.ws.rs.core.MediaType)>(r2);

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.apache.cxf.jaxrs.impl.ReaderInterceptorContextImpl: void providerSelectionPropertyChanged()>();

     label1:
        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.ReaderInterceptorContextImpl: javax.ws.rs.core.MultivaluedMap getHeaders()>();

        $r4 = newarray (java.lang.String)[0];

        $r5 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String mediaTypeToString(javax.ws.rs.core.MediaType,java.lang.String[])>(r2, $r4);

        interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: void putSingle(java.lang.Object,java.lang.Object)>("Content-Type", $r5);

        return;
    }
}
