public interface  com.hp.hpl.jena.ontology.OntModel extends java.lang.Object implements com.hp.hpl.jena.rdf.model.InfModel
{

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listOntologies();

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listOntProperties();

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listAllOntProperties();

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listObjectProperties();

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listDatatypeProperties();

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listFunctionalProperties();

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listTransitiveProperties();

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listSymmetricProperties();

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listInverseFunctionalProperties();

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listIndividuals();

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listIndividuals(com.hp.hpl.jena.rdf.model.Resource);

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listClasses();

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listHierarchyRootClasses();

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listEnumeratedClasses();

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listUnionClasses();

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listComplementClasses();

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listIntersectionClasses();

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listNamedClasses();

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listRestrictions();

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listAnnotationProperties();

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listAllDifferent();

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listDataRanges();

    public abstract com.hp.hpl.jena.ontology.Ontology getOntology(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.Individual getIndividual(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.OntProperty getOntProperty(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.ObjectProperty getObjectProperty(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.TransitiveProperty getTransitiveProperty(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.SymmetricProperty getSymmetricProperty(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.InverseFunctionalProperty getInverseFunctionalProperty(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.DatatypeProperty getDatatypeProperty(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.AnnotationProperty getAnnotationProperty(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.OntResource getOntResource(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.OntResource getOntResource(com.hp.hpl.jena.rdf.model.Resource);

    public abstract com.hp.hpl.jena.ontology.OntClass getOntClass(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.ComplementClass getComplementClass(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.EnumeratedClass getEnumeratedClass(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.UnionClass getUnionClass(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.IntersectionClass getIntersectionClass(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.Restriction getRestriction(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.HasValueRestriction getHasValueRestriction(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.SomeValuesFromRestriction getSomeValuesFromRestriction(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.AllValuesFromRestriction getAllValuesFromRestriction(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.CardinalityRestriction getCardinalityRestriction(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.MinCardinalityRestriction getMinCardinalityRestriction(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.MaxCardinalityRestriction getMaxCardinalityRestriction(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.QualifiedRestriction getQualifiedRestriction(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.CardinalityQRestriction getCardinalityQRestriction(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.MinCardinalityQRestriction getMinCardinalityQRestriction(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.MaxCardinalityQRestriction getMaxCardinalityQRestriction(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.Ontology createOntology(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.Individual createIndividual(com.hp.hpl.jena.rdf.model.Resource);

    public abstract com.hp.hpl.jena.ontology.Individual createIndividual(java.lang.String, com.hp.hpl.jena.rdf.model.Resource);

    public abstract com.hp.hpl.jena.ontology.OntProperty createOntProperty(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.ObjectProperty createObjectProperty(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.ObjectProperty createObjectProperty(java.lang.String, boolean);

    public abstract com.hp.hpl.jena.ontology.TransitiveProperty createTransitiveProperty(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.TransitiveProperty createTransitiveProperty(java.lang.String, boolean);

    public abstract com.hp.hpl.jena.ontology.SymmetricProperty createSymmetricProperty(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.SymmetricProperty createSymmetricProperty(java.lang.String, boolean);

    public abstract com.hp.hpl.jena.ontology.InverseFunctionalProperty createInverseFunctionalProperty(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.InverseFunctionalProperty createInverseFunctionalProperty(java.lang.String, boolean);

    public abstract com.hp.hpl.jena.ontology.DatatypeProperty createDatatypeProperty(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.DatatypeProperty createDatatypeProperty(java.lang.String, boolean);

    public abstract com.hp.hpl.jena.ontology.AnnotationProperty createAnnotationProperty(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.OntClass createClass();

    public abstract com.hp.hpl.jena.ontology.OntClass createClass(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.ComplementClass createComplementClass(java.lang.String, com.hp.hpl.jena.rdf.model.Resource);

    public abstract com.hp.hpl.jena.ontology.EnumeratedClass createEnumeratedClass(java.lang.String, com.hp.hpl.jena.rdf.model.RDFList);

    public abstract com.hp.hpl.jena.ontology.UnionClass createUnionClass(java.lang.String, com.hp.hpl.jena.rdf.model.RDFList);

    public abstract com.hp.hpl.jena.ontology.IntersectionClass createIntersectionClass(java.lang.String, com.hp.hpl.jena.rdf.model.RDFList);

    public abstract com.hp.hpl.jena.ontology.Restriction createRestriction(com.hp.hpl.jena.rdf.model.Property);

    public abstract com.hp.hpl.jena.ontology.Restriction createRestriction(java.lang.String, com.hp.hpl.jena.rdf.model.Property);

    public abstract com.hp.hpl.jena.ontology.HasValueRestriction createHasValueRestriction(java.lang.String, com.hp.hpl.jena.rdf.model.Property, com.hp.hpl.jena.rdf.model.RDFNode);

    public abstract com.hp.hpl.jena.ontology.SomeValuesFromRestriction createSomeValuesFromRestriction(java.lang.String, com.hp.hpl.jena.rdf.model.Property, com.hp.hpl.jena.rdf.model.Resource);

    public abstract com.hp.hpl.jena.ontology.AllValuesFromRestriction createAllValuesFromRestriction(java.lang.String, com.hp.hpl.jena.rdf.model.Property, com.hp.hpl.jena.rdf.model.Resource);

    public abstract com.hp.hpl.jena.ontology.CardinalityRestriction createCardinalityRestriction(java.lang.String, com.hp.hpl.jena.rdf.model.Property, int);

    public abstract com.hp.hpl.jena.ontology.MinCardinalityRestriction createMinCardinalityRestriction(java.lang.String, com.hp.hpl.jena.rdf.model.Property, int);

    public abstract com.hp.hpl.jena.ontology.MaxCardinalityRestriction createMaxCardinalityRestriction(java.lang.String, com.hp.hpl.jena.rdf.model.Property, int);

    public abstract com.hp.hpl.jena.ontology.MaxCardinalityQRestriction createMaxCardinalityQRestriction(java.lang.String, com.hp.hpl.jena.rdf.model.Property, int, com.hp.hpl.jena.ontology.OntClass);

    public abstract com.hp.hpl.jena.ontology.MinCardinalityQRestriction createMinCardinalityQRestriction(java.lang.String, com.hp.hpl.jena.rdf.model.Property, int, com.hp.hpl.jena.ontology.OntClass);

    public abstract com.hp.hpl.jena.ontology.CardinalityQRestriction createCardinalityQRestriction(java.lang.String, com.hp.hpl.jena.rdf.model.Property, int, com.hp.hpl.jena.ontology.OntClass);

    public abstract com.hp.hpl.jena.ontology.DataRange createDataRange(com.hp.hpl.jena.rdf.model.RDFList);

    public abstract com.hp.hpl.jena.ontology.AllDifferent createAllDifferent();

    public abstract com.hp.hpl.jena.ontology.AllDifferent createAllDifferent(com.hp.hpl.jena.rdf.model.RDFList);

    public abstract com.hp.hpl.jena.ontology.OntResource createOntResource(java.lang.Class, com.hp.hpl.jena.rdf.model.Resource, java.lang.String);

    public abstract com.hp.hpl.jena.ontology.OntResource createOntResource(java.lang.String);

    public abstract void loadImports();

    public abstract java.util.Set listImportedOntologyURIs();

    public abstract java.util.Set listImportedOntologyURIs(boolean);

    public abstract boolean hasLoadedImport(java.lang.String);

    public abstract void addLoadedImport(java.lang.String);

    public abstract void removeLoadedImport(java.lang.String);

    public abstract com.hp.hpl.jena.ontology.Profile getProfile();

    public abstract com.hp.hpl.jena.rdf.model.ModelMaker getModelMaker();

    public abstract com.hp.hpl.jena.rdf.model.ModelMaker getImportModelMaker();

    public abstract java.util.List getSubGraphs();

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listImportedModels();

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listSubModels(boolean);

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listSubModels();

    public abstract int countSubModels();

    public abstract com.hp.hpl.jena.ontology.OntModel getImportedModel(java.lang.String);

    public abstract com.hp.hpl.jena.rdf.model.Model getBaseModel();

    public abstract void addSubModel(com.hp.hpl.jena.rdf.model.Model);

    public abstract void addSubModel(com.hp.hpl.jena.rdf.model.Model, boolean);

    public abstract void removeSubModel(com.hp.hpl.jena.rdf.model.Model);

    public abstract void removeSubModel(com.hp.hpl.jena.rdf.model.Model, boolean);

    public abstract boolean isInBaseModel(com.hp.hpl.jena.rdf.model.RDFNode);

    public abstract boolean isInBaseModel(com.hp.hpl.jena.rdf.model.Statement);

    public abstract boolean strictMode();

    public abstract void setStrictMode(boolean);

    public abstract void setDynamicImports(boolean);

    public abstract boolean getDynamicImports();

    public abstract com.hp.hpl.jena.ontology.OntDocumentManager getDocumentManager();

    public abstract com.hp.hpl.jena.ontology.OntModelSpec getSpecification();

    public abstract com.hp.hpl.jena.rdf.model.Model write(java.io.Writer);

    public abstract com.hp.hpl.jena.rdf.model.Model write(java.io.Writer, java.lang.String);

    public abstract com.hp.hpl.jena.rdf.model.Model write(java.io.Writer, java.lang.String, java.lang.String);

    public abstract com.hp.hpl.jena.rdf.model.Model write(java.io.OutputStream);

    public abstract com.hp.hpl.jena.rdf.model.Model write(java.io.OutputStream, java.lang.String);

    public abstract com.hp.hpl.jena.rdf.model.Model write(java.io.OutputStream, java.lang.String, java.lang.String);

    public abstract com.hp.hpl.jena.rdf.model.Model writeAll(java.io.Writer, java.lang.String, java.lang.String);

    public abstract com.hp.hpl.jena.rdf.model.Model writeAll(java.io.OutputStream, java.lang.String, java.lang.String);

    public abstract com.hp.hpl.jena.rdf.model.Model writeAll(java.io.Writer, java.lang.String);

    public abstract com.hp.hpl.jena.rdf.model.Model writeAll(java.io.OutputStream, java.lang.String);
}
