public abstract class com.hp.hpl.jena.sparql.core.DatasetGraphCollection extends com.hp.hpl.jena.sparql.core.DatasetGraphBaseFind
{

    public void <init>()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphCollection r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphCollection;

        specialinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphBaseFind: void <init>()>();

        return;
    }

    public void add(com.hp.hpl.jena.sparql.core.Quad)
    {
        com.hp.hpl.jena.shared.JenaException $r5;
        com.hp.hpl.jena.graph.Node $r2, $r8;
        com.hp.hpl.jena.sparql.core.DatasetGraphCollection r0;
        com.hp.hpl.jena.sparql.core.Quad r1;
        com.hp.hpl.jena.graph.Triple $r4;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.String $r10;
        com.hp.hpl.jena.graph.Graph $r3;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphCollection;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.Quad;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.core.Quad: com.hp.hpl.jena.graph.Node getGraph()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphCollection: com.hp.hpl.jena.graph.Graph fetchGraph(com.hp.hpl.jena.graph.Node)>($r2);

        if $r3 != null goto label1;

        $r5 = new com.hp.hpl.jena.shared.JenaException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such graph: ");

        $r8 = virtualinvoke r1.<com.hp.hpl.jena.sparql.core.Quad: com.hp.hpl.jena.graph.Node getGraph()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<com.hp.hpl.jena.shared.JenaException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label1:
        $r4 = virtualinvoke r1.<com.hp.hpl.jena.sparql.core.Quad: com.hp.hpl.jena.graph.Triple asTriple()>();

        interfaceinvoke $r3.<com.hp.hpl.jena.graph.Graph: void add(com.hp.hpl.jena.graph.Triple)>($r4);

        return;
    }

    public void delete(com.hp.hpl.jena.sparql.core.Quad)
    {
        com.hp.hpl.jena.shared.JenaException $r5;
        com.hp.hpl.jena.graph.Node $r2, $r8;
        com.hp.hpl.jena.sparql.core.DatasetGraphCollection r0;
        com.hp.hpl.jena.sparql.core.Quad r1;
        com.hp.hpl.jena.graph.Triple $r4;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.String $r10;
        com.hp.hpl.jena.graph.Graph $r3;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphCollection;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.Quad;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.core.Quad: com.hp.hpl.jena.graph.Node getGraph()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphCollection: com.hp.hpl.jena.graph.Graph fetchGraph(com.hp.hpl.jena.graph.Node)>($r2);

        if $r3 != null goto label1;

        $r5 = new com.hp.hpl.jena.shared.JenaException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such graph: ");

        $r8 = virtualinvoke r1.<com.hp.hpl.jena.sparql.core.Quad: com.hp.hpl.jena.graph.Node getGraph()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<com.hp.hpl.jena.shared.JenaException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label1:
        $r4 = virtualinvoke r1.<com.hp.hpl.jena.sparql.core.Quad: com.hp.hpl.jena.graph.Triple asTriple()>();

        interfaceinvoke $r3.<com.hp.hpl.jena.graph.Graph: void delete(com.hp.hpl.jena.graph.Triple)>($r4);

        return;
    }

    protected java.util.Iterator findInDftGraph(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r5;
        java.util.Iterator $r6;
        com.hp.hpl.jena.graph.Node r2, r3, r4;
        com.hp.hpl.jena.graph.Graph $r1;
        com.hp.hpl.jena.sparql.core.DatasetGraphCollection r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphCollection;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        r3 := @parameter1: com.hp.hpl.jena.graph.Node;

        r4 := @parameter2: com.hp.hpl.jena.graph.Node;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphCollection: com.hp.hpl.jena.graph.Graph getDefaultGraph()>();

        $r5 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.Graph: com.hp.hpl.jena.util.iterator.ExtendedIterator find(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r2, r3, r4);

        $r6 = staticinvoke <com.hp.hpl.jena.sparql.core.DatasetGraphCollection: java.util.Iterator triples2quadsDftGraph(java.util.Iterator)>($r5);

        return $r6;
    }

    protected org.apache.jena.atlas.iterator.Iter findInSpecificNamedGraph(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.Node r1, r3, r4, r5;
        com.hp.hpl.jena.sparql.core.DatasetGraphCollection r0;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r6;
        org.apache.jena.atlas.iterator.Iter $r7, $r8;
        com.hp.hpl.jena.graph.Graph $r2;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphCollection;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r3 := @parameter1: com.hp.hpl.jena.graph.Node;

        r4 := @parameter2: com.hp.hpl.jena.graph.Node;

        r5 := @parameter3: com.hp.hpl.jena.graph.Node;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphCollection: com.hp.hpl.jena.graph.Graph fetchGraph(com.hp.hpl.jena.graph.Node)>(r1);

        if r1 != null goto label1;

        $r8 = staticinvoke <org.apache.jena.atlas.iterator.Iter: org.apache.jena.atlas.iterator.Iter nullIter()>();

        return $r8;

     label1:
        $r6 = interfaceinvoke $r2.<com.hp.hpl.jena.graph.Graph: com.hp.hpl.jena.util.iterator.ExtendedIterator find(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r3, r4, r5);

        $r7 = staticinvoke <com.hp.hpl.jena.sparql.core.DatasetGraphCollection: org.apache.jena.atlas.iterator.Iter triples2quads(com.hp.hpl.jena.graph.Node,java.util.Iterator)>(r1, $r6);

        return $r7;
    }

    protected java.util.Iterator findInAnyNamedGraphs(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        java.util.Iterator $r1, r8;
        com.hp.hpl.jena.graph.Node r3, r4, r5, r6;
        com.hp.hpl.jena.sparql.core.DatasetGraphCollection r0;
        java.lang.Object $r2;
        org.apache.jena.atlas.iterator.Iter $r7;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphCollection;

        r4 := @parameter0: com.hp.hpl.jena.graph.Node;

        r5 := @parameter1: com.hp.hpl.jena.graph.Node;

        r6 := @parameter2: com.hp.hpl.jena.graph.Node;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphCollection: java.util.Iterator listGraphNodes()>();

        r8 = null;

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.hp.hpl.jena.graph.Node) $r2;

        $r7 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphCollection: org.apache.jena.atlas.iterator.Iter findInSpecificNamedGraph(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r3, r4, r5, r6);

        if $r7 == null goto label2;

        r8 = staticinvoke <org.apache.jena.atlas.iterator.Iter: java.util.Iterator append(java.util.Iterator,java.util.Iterator)>(r8, $r7);

     label2:
        goto label1;

     label3:
        return r8;
    }

    public abstract java.util.Iterator listGraphNodes();

    protected com.hp.hpl.jena.graph.Graph fetchGraph(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.Node r0, $r3;
        com.hp.hpl.jena.graph.Graph $r2, $r4;
        boolean $z0, $z1;
        com.hp.hpl.jena.sparql.core.DatasetGraphCollection r1;

        r1 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphCollection;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.core.Quad: boolean isDefaultGraph(com.hp.hpl.jena.graph.Node)>(r0);

        if $z0 != 0 goto label1;

        $r3 = <com.hp.hpl.jena.sparql.core.Quad: com.hp.hpl.jena.graph.Node tripleInQuad>;

        $z1 = staticinvoke <org.apache.jena.atlas.lib.Lib: boolean equal(java.lang.Object,java.lang.Object)>(r0, $r3);

        if $z1 == 0 goto label2;

     label1:
        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.core.DatasetGraphCollection: com.hp.hpl.jena.graph.Graph getDefaultGraph()>();

        return $r2;

     label2:
        $r4 = virtualinvoke r1.<com.hp.hpl.jena.sparql.core.DatasetGraphCollection: com.hp.hpl.jena.graph.Graph getGraph(com.hp.hpl.jena.graph.Node)>(r0);

        return $r4;
    }

    protected volatile java.util.Iterator findInSpecificNamedGraph(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.Node r1, r2, r3, r4;
        org.apache.jena.atlas.iterator.Iter $r5;
        com.hp.hpl.jena.sparql.core.DatasetGraphCollection r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphCollection;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        r3 := @parameter2: com.hp.hpl.jena.graph.Node;

        r4 := @parameter3: com.hp.hpl.jena.graph.Node;

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphCollection: org.apache.jena.atlas.iterator.Iter findInSpecificNamedGraph(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r1, r2, r3, r4);

        return $r5;
    }
}
