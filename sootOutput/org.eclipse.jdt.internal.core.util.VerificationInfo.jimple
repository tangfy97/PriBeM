public class org.eclipse.jdt.internal.core.util.VerificationInfo extends org.eclipse.jdt.internal.core.util.ClassFileStruct implements org.eclipse.jdt.core.util.IVerificationTypeInfo
{
    private int tag;
    private int offset;
    private int constantPoolIndex;
    private char[] classTypeName;
    private int readOffset;

    public void <init>(byte[], org.eclipse.jdt.core.util.IConstantPool, int) throws org.eclipse.jdt.core.util.ClassFormatException
    {
        java.lang.Throwable $r7;
        byte[] r1;
        org.eclipse.jdt.internal.core.util.VerificationInfo r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        org.eclipse.jdt.core.util.IConstantPool r2;
        org.eclipse.jdt.core.util.IConstantPoolEntry $r3;
        org.eclipse.jdt.core.util.ClassFormatException $r6;
        char[] $r4;

        r0 := @this: org.eclipse.jdt.internal.core.util.VerificationInfo;

        r1 := @parameter0: byte[];

        r2 := @parameter1: org.eclipse.jdt.core.util.IConstantPool;

        i0 := @parameter2: int;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.ClassFileStruct: void <init>()>();

        $i1 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.VerificationInfo: int u1At(byte[],int,int)>(r1, 0, i0);

        r0.<org.eclipse.jdt.internal.core.util.VerificationInfo: int tag> = $i1;

        r0.<org.eclipse.jdt.internal.core.util.VerificationInfo: int readOffset> = 1;

        tableswitch($i1)
        {
            case 7: goto label1;
            case 8: goto label4;
            default: goto label5;
        };

     label1:
        $i5 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.VerificationInfo: int u2At(byte[],int,int)>(r1, 1, i0);

        r0.<org.eclipse.jdt.internal.core.util.VerificationInfo: int constantPoolIndex> = $i5;

        if $i5 == 0 goto label3;

        $r3 = interfaceinvoke r2.<org.eclipse.jdt.core.util.IConstantPool: org.eclipse.jdt.core.util.IConstantPoolEntry decodeEntry(int)>($i5);

        $i8 = interfaceinvoke $r3.<org.eclipse.jdt.core.util.IConstantPoolEntry: int getKind()>();

        if $i8 == 7 goto label2;

        $r6 = new org.eclipse.jdt.core.util.ClassFormatException;

        specialinvoke $r6.<org.eclipse.jdt.core.util.ClassFormatException: void <init>(int)>(3);

        $r7 = (java.lang.Throwable) $r6;

        throw $r7;

     label2:
        $r4 = interfaceinvoke $r3.<org.eclipse.jdt.core.util.IConstantPoolEntry: char[] getClassInfoName()>();

        r0.<org.eclipse.jdt.internal.core.util.VerificationInfo: char[] classTypeName> = $r4;

     label3:
        $i6 = r0.<org.eclipse.jdt.internal.core.util.VerificationInfo: int readOffset>;

        $i7 = $i6 + 2;

        r0.<org.eclipse.jdt.internal.core.util.VerificationInfo: int readOffset> = $i7;

        goto label5;

     label4:
        $i2 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.VerificationInfo: int u2At(byte[],int,int)>(r1, 1, i0);

        r0.<org.eclipse.jdt.internal.core.util.VerificationInfo: int offset> = $i2;

        $i3 = r0.<org.eclipse.jdt.internal.core.util.VerificationInfo: int readOffset>;

        $i4 = $i3 + 2;

        r0.<org.eclipse.jdt.internal.core.util.VerificationInfo: int readOffset> = $i4;

     label5:
        return;
    }

    public int getTag()
    {
        int $i0;
        org.eclipse.jdt.internal.core.util.VerificationInfo r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.VerificationInfo;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.VerificationInfo: int tag>;

        return $i0;
    }

    public int getOffset()
    {
        int $i0;
        org.eclipse.jdt.internal.core.util.VerificationInfo r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.VerificationInfo;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.VerificationInfo: int offset>;

        return $i0;
    }

    public int getConstantPoolIndex()
    {
        int $i0;
        org.eclipse.jdt.internal.core.util.VerificationInfo r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.VerificationInfo;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.VerificationInfo: int constantPoolIndex>;

        return $i0;
    }

    public char[] getClassTypeName()
    {
        char[] $r1;
        org.eclipse.jdt.internal.core.util.VerificationInfo r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.VerificationInfo;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.VerificationInfo: char[] classTypeName>;

        return $r1;
    }

    public int sizeInBytes()
    {
        int $i0;
        org.eclipse.jdt.internal.core.util.VerificationInfo r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.VerificationInfo;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.VerificationInfo: int readOffset>;

        return $i0;
    }
}
