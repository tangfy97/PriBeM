public final class org.apache.pdfbox.pdmodel.graphics.color.PDColorSpaceFactory extends java.lang.Object
{

    private void <init>()
    {
        org.apache.pdfbox.pdmodel.graphics.color.PDColorSpaceFactory r0;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpaceFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace createColorSpace(org.apache.pdfbox.cos.COSBase) throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSBase r0;
        org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace $r1;

        r0 := @parameter0: org.apache.pdfbox.cos.COSBase;

        $r1 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.color.PDColorSpaceFactory: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace createColorSpace(org.apache.pdfbox.cos.COSBase,java.util.Map)>(r0, null);

        return $r1;
    }

    public static org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace createColorSpace(org.apache.pdfbox.cos.COSBase, java.util.Map) throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSBase r0;
        java.util.Map r1;
        org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace $r2;

        r0 := @parameter0: org.apache.pdfbox.cos.COSBase;

        r1 := @parameter1: java.util.Map;

        $r2 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.color.PDColorSpaceFactory: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace createColorSpace(org.apache.pdfbox.cos.COSBase,java.util.Map,java.util.Map)>(r0, r1, null);

        return $r2;
    }

    public static org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace createColorSpace(org.apache.pdfbox.cos.COSBase, java.util.Map, java.util.Map) throws java.io.IOException
    {
        java.util.Map r26, r29;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        org.apache.pdfbox.pdmodel.graphics.color.PDLab $r19;
        org.apache.pdfbox.pdmodel.graphics.color.PDICCBased $r17;
        org.apache.pdfbox.pdmodel.graphics.color.PDIndexed $r10;
        org.apache.pdfbox.cos.COSBase r0, $r7, $r28;
        java.lang.StringBuilder $r2, $r3, $r4, $r12, $r13, $r14;
        org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray $r22;
        org.apache.pdfbox.cos.COSArray r6;
        org.apache.pdfbox.cos.COSObject $r27;
        org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN $r20;
        java.lang.String $r5, $r9, $r15, $r25;
        org.apache.pdfbox.pdmodel.graphics.color.PDPattern $r16;
        org.apache.pdfbox.cos.COSName $r8, $r24;
        org.apache.pdfbox.pdmodel.graphics.color.PDCalGray $r23;
        java.io.IOException $r1, $r11;
        org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace r30;
        org.apache.pdfbox.pdmodel.graphics.color.PDSeparation $r18;
        org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB $r21;

        r0 := @parameter0: org.apache.pdfbox.cos.COSBase;

        r26 := @parameter1: java.util.Map;

        r29 := @parameter2: java.util.Map;

        $z0 = r0 instanceof org.apache.pdfbox.cos.COSObject;

        if $z0 == 0 goto label01;

        $r27 = (org.apache.pdfbox.cos.COSObject) r0;

        $r28 = virtualinvoke $r27.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase getObject()>();

        r30 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.color.PDColorSpaceFactory: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace createColorSpace(org.apache.pdfbox.cos.COSBase,java.util.Map)>($r28, r26);

        goto label17;

     label01:
        $z1 = r0 instanceof org.apache.pdfbox.cos.COSName;

        if $z1 == 0 goto label02;

        $r24 = (org.apache.pdfbox.cos.COSName) r0;

        $r25 = virtualinvoke $r24.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>();

        r30 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.color.PDColorSpaceFactory: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace createColorSpace(java.lang.String,java.util.Map)>($r25, r26);

        goto label17;

     label02:
        $z2 = r0 instanceof org.apache.pdfbox.cos.COSArray;

        if $z2 == 0 goto label16;

        r6 = (org.apache.pdfbox.cos.COSArray) r0;

        $r7 = virtualinvoke r6.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(0);

        $r8 = (org.apache.pdfbox.cos.COSName) $r7;

        $r9 = virtualinvoke $r8.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>();

        $z3 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("CalGray");

        if $z3 == 0 goto label03;

        $r23 = new org.apache.pdfbox.pdmodel.graphics.color.PDCalGray;

        specialinvoke $r23.<org.apache.pdfbox.pdmodel.graphics.color.PDCalGray: void <init>(org.apache.pdfbox.cos.COSArray)>(r6);

        r30 = $r23;

        goto label15;

     label03:
        $z4 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("DeviceRGB");

        if $z4 == 0 goto label04;

        r30 = <org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB: org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB INSTANCE>;

        goto label15;

     label04:
        $z5 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("DeviceGray");

        if $z5 == 0 goto label05;

        $r22 = new org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray;

        specialinvoke $r22.<org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray: void <init>()>();

        r30 = $r22;

        goto label15;

     label05:
        $z6 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("DeviceCMYK");

        if $z6 == 0 goto label06;

        r30 = <org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK: org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK INSTANCE>;

        goto label15;

     label06:
        $z7 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("CalRGB");

        if $z7 == 0 goto label07;

        $r21 = new org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB;

        specialinvoke $r21.<org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB: void <init>(org.apache.pdfbox.cos.COSArray)>(r6);

        r30 = $r21;

        goto label15;

     label07:
        $z8 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("DeviceN");

        if $z8 == 0 goto label08;

        $r20 = new org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN;

        specialinvoke $r20.<org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN: void <init>(org.apache.pdfbox.cos.COSArray)>(r6);

        r30 = $r20;

        goto label15;

     label08:
        $z9 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("Indexed");

        if $z9 != 0 goto label09;

        $z10 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("I");

        if $z10 == 0 goto label10;

     label09:
        $r10 = new org.apache.pdfbox.pdmodel.graphics.color.PDIndexed;

        specialinvoke $r10.<org.apache.pdfbox.pdmodel.graphics.color.PDIndexed: void <init>(org.apache.pdfbox.cos.COSArray)>(r6);

        r30 = $r10;

        goto label15;

     label10:
        $z11 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("Lab");

        if $z11 == 0 goto label11;

        $r19 = new org.apache.pdfbox.pdmodel.graphics.color.PDLab;

        specialinvoke $r19.<org.apache.pdfbox.pdmodel.graphics.color.PDLab: void <init>(org.apache.pdfbox.cos.COSArray)>(r6);

        r30 = $r19;

        goto label15;

     label11:
        $z12 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("Separation");

        if $z12 == 0 goto label12;

        $r18 = new org.apache.pdfbox.pdmodel.graphics.color.PDSeparation;

        specialinvoke $r18.<org.apache.pdfbox.pdmodel.graphics.color.PDSeparation: void <init>(org.apache.pdfbox.cos.COSArray)>(r6);

        r30 = $r18;

        goto label15;

     label12:
        $z13 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("ICCBased");

        if $z13 == 0 goto label13;

        $r17 = new org.apache.pdfbox.pdmodel.graphics.color.PDICCBased;

        specialinvoke $r17.<org.apache.pdfbox.pdmodel.graphics.color.PDICCBased: void <init>(org.apache.pdfbox.cos.COSArray)>(r6);

        r30 = $r17;

        goto label15;

     label13:
        $z14 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("Pattern");

        if $z14 == 0 goto label14;

        $r16 = new org.apache.pdfbox.pdmodel.graphics.color.PDPattern;

        specialinvoke $r16.<org.apache.pdfbox.pdmodel.graphics.color.PDPattern: void <init>(org.apache.pdfbox.cos.COSArray)>(r6);

        r30 = $r16;

        goto label15;

     label14:
        $r11 = new java.io.IOException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown colorspace array type:");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>($r15);

        throw $r11;

     label15:
        goto label17;

     label16:
        $r1 = new java.io.IOException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown colorspace type:");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label17:
        return r30;
    }

    public static org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace createColorSpace(java.lang.String) throws java.io.IOException
    {
        java.lang.String r0;
        org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.color.PDColorSpaceFactory: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace createColorSpace(java.lang.String,java.util.Map)>(r0, null);

        return $r1;
    }

    public static org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace createColorSpace(java.lang.String, java.util.Map) throws java.io.IOException
    {
        java.util.Map r2;
        java.lang.String r0, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.apache.pdfbox.pdmodel.graphics.color.PDPattern $r9;
        org.apache.pdfbox.pdmodel.graphics.color.PDLab $r10;
        java.io.IOException $r3;
        org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace r13;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.Object $r11, $r12;
        org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray $r1;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Map;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("DeviceCMYK");

        if $z0 != 0 goto label01;

        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("CMYK");

        if $z1 == 0 goto label02;

     label01:
        r13 = <org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK: org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK INSTANCE>;

        goto label10;

     label02:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("DeviceRGB");

        if $z2 != 0 goto label03;

        $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("RGB");

        if $z3 == 0 goto label04;

     label03:
        r13 = <org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB: org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB INSTANCE>;

        goto label10;

     label04:
        $z4 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("DeviceGray");

        if $z4 != 0 goto label05;

        $z5 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("G");

        if $z5 == 0 goto label06;

     label05:
        $r1 = new org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray;

        specialinvoke $r1.<org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray: void <init>()>();

        r13 = $r1;

        goto label10;

     label06:
        if r2 == null goto label07;

        $r11 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        if $r11 == null goto label07;

        $r12 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r13 = (org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace) $r12;

        goto label10;

     label07:
        $z6 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("Lab");

        if $z6 == 0 goto label08;

        $r10 = new org.apache.pdfbox.pdmodel.graphics.color.PDLab;

        specialinvoke $r10.<org.apache.pdfbox.pdmodel.graphics.color.PDLab: void <init>()>();

        r13 = $r10;

        goto label10;

     label08:
        $z7 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("Pattern");

        if $z7 == 0 goto label09;

        $r9 = new org.apache.pdfbox.pdmodel.graphics.color.PDPattern;

        specialinvoke $r9.<org.apache.pdfbox.pdmodel.graphics.color.PDPattern: void <init>()>();

        r13 = $r9;

        goto label10;

     label09:
        $r3 = new java.io.IOException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown colorspace \'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label10:
        return r13;
    }

    public static org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace createColorSpace(org.apache.pdfbox.pdmodel.PDDocument, java.awt.color.ColorSpace) throws java.io.IOException
    {
        java.lang.Throwable $r16;
        byte[] $r13;
        org.apache.pdfbox.cos.COSArray $r9;
        org.apache.pdfbox.cos.COSFloat $r14, $r15;
        java.awt.color.ColorSpace r0;
        int $i0, $i1, i2;
        java.lang.String $r5;
        java.awt.color.ICC_ColorSpace r6;
        boolean $z0, $z1;
        java.io.OutputStream $r11, r18;
        java.awt.color.ICC_Profile $r12;
        org.apache.pdfbox.pdmodel.PDDocument r8;
        org.apache.pdfbox.pdmodel.graphics.color.PDICCBased $r7;
        java.io.IOException $r1;
        org.apache.pdfbox.pdmodel.common.PDStream $r10;
        org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace r17;
        float $f0, $f1;
        java.lang.StringBuilder $r2, $r3, $r4;

        r8 := @parameter0: org.apache.pdfbox.pdmodel.PDDocument;

        r0 := @parameter1: java.awt.color.ColorSpace;

        $z0 = virtualinvoke r0.<java.awt.color.ColorSpace: boolean isCS_sRGB()>();

        if $z0 == 0 goto label01;

        r17 = <org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB: org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB INSTANCE>;

        goto label10;

     label01:
        $z1 = r0 instanceof java.awt.color.ICC_ColorSpace;

        if $z1 == 0 goto label09;

        r6 = (java.awt.color.ICC_ColorSpace) r0;

        $r7 = new org.apache.pdfbox.pdmodel.graphics.color.PDICCBased;

        specialinvoke $r7.<org.apache.pdfbox.pdmodel.graphics.color.PDICCBased: void <init>(org.apache.pdfbox.pdmodel.PDDocument)>(r8);

        r17 = $r7;

        $r9 = new org.apache.pdfbox.cos.COSArray;

        specialinvoke $r9.<org.apache.pdfbox.cos.COSArray: void <init>()>();

        i2 = 0;

     label02:
        $i0 = virtualinvoke r0.<java.awt.color.ColorSpace: int getNumComponents()>();

        if i2 >= $i0 goto label03;

        $r14 = new org.apache.pdfbox.cos.COSFloat;

        $f0 = virtualinvoke r6.<java.awt.color.ICC_ColorSpace: float getMinValue(int)>(i2);

        specialinvoke $r14.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>($f0);

        virtualinvoke $r9.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r14);

        $r15 = new org.apache.pdfbox.cos.COSFloat;

        $f1 = virtualinvoke r6.<java.awt.color.ICC_ColorSpace: float getMaxValue(int)>(i2);

        specialinvoke $r15.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>($f1);

        virtualinvoke $r9.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r15);

        i2 = i2 + 1;

        goto label02;

     label03:
        $r10 = virtualinvoke $r7.<org.apache.pdfbox.pdmodel.graphics.color.PDICCBased: org.apache.pdfbox.pdmodel.common.PDStream getPDStream()>();

        r18 = null;

     label04:
        $r11 = virtualinvoke $r10.<org.apache.pdfbox.pdmodel.common.PDStream: java.io.OutputStream createOutputStream()>();

        r18 = $r11;

        $r12 = virtualinvoke r6.<java.awt.color.ICC_ColorSpace: java.awt.color.ICC_Profile getProfile()>();

        $r13 = virtualinvoke $r12.<java.awt.color.ICC_Profile: byte[] getData()>();

        virtualinvoke $r11.<java.io.OutputStream: void write(byte[])>($r13);

        goto label11;

     label05:
        goto label08;

     label06:
        $r16 := @caughtexception;

        goto label13;

     label07:
        throw $r16;

     label08:
        $i1 = virtualinvoke r0.<java.awt.color.ColorSpace: int getNumComponents()>();

        virtualinvoke $r7.<org.apache.pdfbox.pdmodel.graphics.color.PDICCBased: void setNumberOfComponents(int)>($i1);

        goto label10;

     label09:
        $r1 = new java.io.IOException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not yet implemented:");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label10:
        return r17;

     label11:
        if $r11 == null goto label12;

        virtualinvoke $r11.<java.io.OutputStream: void close()>();

     label12:
        goto label05;

     label13:
        if r18 == null goto label14;

        virtualinvoke r18.<java.io.OutputStream: void close()>();

     label14:
        goto label07;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
    }
}
