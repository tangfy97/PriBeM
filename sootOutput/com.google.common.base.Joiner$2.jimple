class com.google.common.base.Joiner$2 extends com.google.common.base.Joiner
{
    final com.google.common.base.Joiner this$0;

    void <init>(com.google.common.base.Joiner, com.google.common.base.Joiner)
    {
        com.google.common.base.Joiner$2 r0;
        com.google.common.base.Joiner r1, r2;

        r0 := @this: com.google.common.base.Joiner$2;

        r1 := @parameter0: com.google.common.base.Joiner;

        r2 := @parameter1: com.google.common.base.Joiner;

        r0.<com.google.common.base.Joiner$2: com.google.common.base.Joiner this$0> = r1;

        specialinvoke r0.<com.google.common.base.Joiner: void <init>(com.google.common.base.Joiner,com.google.common.base.Joiner$1)>(r2, null);

        return;
    }

    public java.lang.Appendable appendTo(java.lang.Appendable, java.lang.Iterable) throws java.io.IOException
    {
        com.google.common.base.Joiner$2 r4;
        java.util.Iterator $r2;
        java.lang.CharSequence $r8, $r11;
        java.lang.Appendable r0;
        java.lang.Iterable r1;
        java.lang.Object $r3, $r9;
        java.lang.String $r6;
        boolean $z0, $z1;
        com.google.common.base.Joiner $r5, $r7, $r10;

        r4 := @this: com.google.common.base.Joiner$2;

        r0 := @parameter0: java.lang.Appendable;

        r1 := @parameter1: java.lang.Iterable;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r0, "appendable");

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "parts");

        $r2 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        if $r9 == null goto label2;

        $r10 = r4.<com.google.common.base.Joiner$2: com.google.common.base.Joiner this$0>;

        $r11 = virtualinvoke $r10.<com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>($r9);

        interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r11);

        goto label3;

     label2:
        goto label1;

     label3:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        if $r3 == null goto label4;

        $r5 = r4.<com.google.common.base.Joiner$2: com.google.common.base.Joiner this$0>;

        $r6 = staticinvoke <com.google.common.base.Joiner: java.lang.String access$100(com.google.common.base.Joiner)>($r5);

        interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r6);

        $r7 = r4.<com.google.common.base.Joiner$2: com.google.common.base.Joiner this$0>;

        $r8 = virtualinvoke $r7.<com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>($r3);

        interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r8);

     label4:
        goto label3;

     label5:
        return r0;
    }

    public com.google.common.base.Joiner useForNull(java.lang.String)
    {
        java.lang.UnsupportedOperationException $r1;
        java.lang.String r0;
        com.google.common.base.Joiner$2 r2;

        r2 := @this: com.google.common.base.Joiner$2;

        r0 := @parameter0: java.lang.String;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("already specified skipNulls");

        throw $r1;
    }

    public com.google.common.base.Joiner$MapJoiner withKeyValueSeparator(java.lang.String)
    {
        java.lang.UnsupportedOperationException $r1;
        java.lang.String r0;
        com.google.common.base.Joiner$2 r2;

        r2 := @this: com.google.common.base.Joiner$2;

        r0 := @parameter0: java.lang.String;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("can\'t use .skipNulls() with maps");

        throw $r1;
    }
}
