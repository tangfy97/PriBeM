final class org.waveprotocol.wave.client.editor.debug.DebugPopupFactory$2 extends java.lang.Object implements org.waveprotocol.wave.client.widget.popup.PopupEventListener
{
    final org.waveprotocol.wave.client.editor.debug.DebugDialog val$debugDialog;

    void <init>(org.waveprotocol.wave.client.editor.debug.DebugDialog)
    {
        org.waveprotocol.wave.client.editor.debug.DebugPopupFactory$2 r0;
        org.waveprotocol.wave.client.editor.debug.DebugDialog r1;

        r0 := @this: org.waveprotocol.wave.client.editor.debug.DebugPopupFactory$2;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.debug.DebugDialog;

        r0.<org.waveprotocol.wave.client.editor.debug.DebugPopupFactory$2: org.waveprotocol.wave.client.editor.debug.DebugDialog val$debugDialog> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onHide(org.waveprotocol.wave.client.widget.popup.PopupEventSourcer)
    {
        org.waveprotocol.wave.client.editor.debug.DebugPopupFactory$2 r0;
        org.waveprotocol.wave.client.editor.debug.DebugDialog $r1;
        org.waveprotocol.wave.client.widget.popup.PopupEventSourcer r2;

        r0 := @this: org.waveprotocol.wave.client.editor.debug.DebugPopupFactory$2;

        r2 := @parameter0: org.waveprotocol.wave.client.widget.popup.PopupEventSourcer;

        $r1 = r0.<org.waveprotocol.wave.client.editor.debug.DebugPopupFactory$2: org.waveprotocol.wave.client.editor.debug.DebugDialog val$debugDialog>;

        virtualinvoke $r1.<org.waveprotocol.wave.client.editor.debug.DebugDialog: void onHide()>();

        return;
    }

    public void onShow(org.waveprotocol.wave.client.widget.popup.PopupEventSourcer)
    {
        org.waveprotocol.wave.client.editor.debug.DebugPopupFactory$2 r0;
        org.waveprotocol.wave.client.editor.debug.DebugDialog $r1;
        org.waveprotocol.wave.client.widget.popup.PopupEventSourcer r2;

        r0 := @this: org.waveprotocol.wave.client.editor.debug.DebugPopupFactory$2;

        r2 := @parameter0: org.waveprotocol.wave.client.widget.popup.PopupEventSourcer;

        $r1 = r0.<org.waveprotocol.wave.client.editor.debug.DebugPopupFactory$2: org.waveprotocol.wave.client.editor.debug.DebugDialog val$debugDialog>;

        virtualinvoke $r1.<org.waveprotocol.wave.client.editor.debug.DebugDialog: void onShow()>();

        return;
    }
}
