final class com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$ComputedUncheckedException extends java.lang.Object implements com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$ComputedValue
{
    final java.lang.RuntimeException e;

    void <init>(java.lang.RuntimeException)
    {
        com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$ComputedUncheckedException r0;
        java.lang.RuntimeException r1;

        r0 := @this: com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$ComputedUncheckedException;

        r1 := @parameter0: java.lang.RuntimeException;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$ComputedUncheckedException: java.lang.RuntimeException e> = r1;

        return;
    }

    public java.lang.Object get()
    {
        com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$ComputedUncheckedException r1;
        java.lang.RuntimeException $r2;
        com.mycila.inject.internal.guava.util.concurrent.UncheckedExecutionException $r0;

        r1 := @this: com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$ComputedUncheckedException;

        $r0 = new com.mycila.inject.internal.guava.util.concurrent.UncheckedExecutionException;

        $r2 = r1.<com.mycila.inject.internal.guava.cache.CustomConcurrentHashMap$ComputedUncheckedException: java.lang.RuntimeException e>;

        specialinvoke $r0.<com.mycila.inject.internal.guava.util.concurrent.UncheckedExecutionException: void <init>(java.lang.Throwable)>($r2);

        throw $r0;
    }
}
