public class com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl extends com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl implements com.hp.hpl.jena.ontology.MinCardinalityQRestriction
{
    public static com.hp.hpl.jena.enhanced.Implementation factory;

    public static boolean isMinCardinalityQRestriction(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.enhanced.EnhGraph)
    {
        com.hp.hpl.jena.ontology.Profile $r3;
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.ontology.OntModel $r2;
        com.hp.hpl.jena.enhanced.EnhGraph r0;
        boolean $z0, $z1, $z2;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r0 := @parameter1: com.hp.hpl.jena.enhanced.EnhGraph;

        $z0 = r0 instanceof com.hp.hpl.jena.ontology.OntModel;

        if $z0 == 0 goto label1;

        $r2 = (com.hp.hpl.jena.ontology.OntModel) r0;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.ontology.OntModel: com.hp.hpl.jena.ontology.Profile getProfile()>();

        goto label2;

     label1:
        $r3 = null;

     label2:
        if $r3 == null goto label3;

        $z1 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: boolean isSupported(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.enhanced.EnhGraph,java.lang.Class)>(r1, r0, class "Lcom/hp/hpl/jena/ontology/MinCardinalityQRestriction;");

        if $z1 == 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    public boolean isValid()
    {
        com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl r0;
        com.hp.hpl.jena.graph.Node $r1;
        boolean $z0, $z1, $z2;
        com.hp.hpl.jena.enhanced.EnhGraph $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl;

        $z0 = specialinvoke r0.<com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl: boolean isValid()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl: com.hp.hpl.jena.graph.Node asNode()>();

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl: com.hp.hpl.jena.enhanced.EnhGraph getGraph()>();

        $z1 = staticinvoke <com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl: boolean isMinCardinalityQRestriction(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.enhanced.EnhGraph)>($r1, $r2);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public void <init>(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.enhanced.EnhGraph)
    {
        com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl r0;
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.enhanced.EnhGraph r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.enhanced.EnhGraph;

        specialinvoke r0.<com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.enhanced.EnhGraph)>(r1, r2);

        return;
    }

    public void setMinCardinalityQ(int)
    {
        com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.rdf.model.Model $r3;
        int i0;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.Literal $r4;

        r0 := @this: com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property MIN_CARDINALITY_Q()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl: com.hp.hpl.jena.rdf.model.Model getModel()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(int)>(i0);

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl: void setPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "MIN_CARDINALITY_Q", $r4);

        return;
    }

    public int getMinCardinalityQ()
    {
        com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r2;
        int $i0;
        com.hp.hpl.jena.ontology.Profile $r1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property MIN_CARDINALITY_Q()>();

        $i0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl: int objectAsInt(com.hp.hpl.jena.rdf.model.Property,java.lang.String)>($r2, "MIN_CARDINALITY_Q");

        return $i0;
    }

    public boolean hasMinCardinalityQ(int)
    {
        com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.rdf.model.Model $r3;
        int i0;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.Literal $r4;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property MIN_CARDINALITY_Q()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl: com.hp.hpl.jena.rdf.model.Model getModel()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(int)>(i0);

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl: boolean hasPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "MIN_CARDINALITY_Q", $r4);

        return $z0;
    }

    public void removeMinCardinalityQ(int)
    {
        com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.rdf.model.Model $r3;
        int i0;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.Literal $r4;

        r0 := @this: com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property MIN_CARDINALITY_Q()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl: com.hp.hpl.jena.rdf.model.Model getModel()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Literal createTypedLiteral(int)>(i0);

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl: void removePropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "MIN_CARDINALITY_Q", $r4);

        return;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl$1 $r0;

        $r0 = new com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl$1;

        specialinvoke $r0.<com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl$1: void <init>()>();

        <com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl: com.hp.hpl.jena.enhanced.Implementation factory> = $r0;

        return;
    }
}
