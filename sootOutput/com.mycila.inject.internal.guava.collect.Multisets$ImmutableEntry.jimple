final class com.mycila.inject.internal.guava.collect.Multisets$ImmutableEntry extends com.mycila.inject.internal.guava.collect.Multisets$AbstractEntry implements java.io.Serializable
{
    final java.lang.Object element;
    final int count;
    private static final long serialVersionUID;

    void <init>(java.lang.Object, int)
    {
        com.mycila.inject.internal.guava.collect.Multisets$ImmutableEntry r0;
        int i0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Multisets$ImmutableEntry;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.Multisets$AbstractEntry: void <init>()>();

        r0.<com.mycila.inject.internal.guava.collect.Multisets$ImmutableEntry: java.lang.Object element> = r1;

        r0.<com.mycila.inject.internal.guava.collect.Multisets$ImmutableEntry: int count> = i0;

        if i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: void checkArgument(boolean)>($z0);

        return;
    }

    public java.lang.Object getElement()
    {
        com.mycila.inject.internal.guava.collect.Multisets$ImmutableEntry r0;
        java.lang.Object $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.Multisets$ImmutableEntry;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.Multisets$ImmutableEntry: java.lang.Object element>;

        return $r1;
    }

    public int getCount()
    {
        int $i0;
        com.mycila.inject.internal.guava.collect.Multisets$ImmutableEntry r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Multisets$ImmutableEntry;

        $i0 = r0.<com.mycila.inject.internal.guava.collect.Multisets$ImmutableEntry: int count>;

        return $i0;
    }

    public static void <clinit>()
    {
        <com.mycila.inject.internal.guava.collect.Multisets$ImmutableEntry: long serialVersionUID> = 0L;

        return;
    }
}
