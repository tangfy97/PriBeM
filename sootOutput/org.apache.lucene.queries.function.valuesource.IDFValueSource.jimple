public class org.apache.lucene.queries.function.valuesource.IDFValueSource extends org.apache.lucene.queries.function.valuesource.DocFreqValueSource
{

    public void <init>(java.lang.String, java.lang.String, java.lang.String, org.apache.lucene.util.BytesRef)
    {
        org.apache.lucene.queries.function.valuesource.IDFValueSource r0;
        org.apache.lucene.util.BytesRef r4;
        java.lang.String r1, r2, r3;

        r0 := @this: org.apache.lucene.queries.function.valuesource.IDFValueSource;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: org.apache.lucene.util.BytesRef;

        specialinvoke r0.<org.apache.lucene.queries.function.valuesource.DocFreqValueSource: void <init>(java.lang.String,java.lang.String,java.lang.String,org.apache.lucene.util.BytesRef)>(r1, r2, r3, r4);

        return;
    }

    public java.lang.String name()
    {
        org.apache.lucene.queries.function.valuesource.IDFValueSource r0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.IDFValueSource;

        return "idf";
    }

    public org.apache.lucene.queries.function.FunctionValues getValues(java.util.Map, org.apache.lucene.index.AtomicReaderContext) throws java.io.IOException
    {
        org.apache.lucene.index.Term $r8;
        long $l1, $l3;
        java.util.Map r0;
        org.apache.lucene.search.similarities.Similarity $r3;
        int $i0, $i2;
        java.lang.String $r5, $r10;
        double $d0;
        org.apache.lucene.queries.function.valuesource.IDFValueSource r4;
        java.lang.UnsupportedOperationException $r13;
        org.apache.lucene.search.similarities.TFIDFSimilarity $r6;
        org.apache.lucene.util.BytesRef $r9;
        float $f0;
        java.lang.Object $r1;
        org.apache.lucene.queries.function.valuesource.ConstDoubleDocValues $r12;
        org.apache.lucene.index.IndexReader $r7, $r11;
        org.apache.lucene.index.AtomicReaderContext r14;
        org.apache.lucene.search.IndexSearcher r2;

        r4 := @this: org.apache.lucene.queries.function.valuesource.IDFValueSource;

        r0 := @parameter0: java.util.Map;

        r14 := @parameter1: org.apache.lucene.index.AtomicReaderContext;

        $r1 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("searcher");

        r2 = (org.apache.lucene.search.IndexSearcher) $r1;

        $r3 = virtualinvoke r2.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.similarities.Similarity getSimilarity()>();

        $r5 = r4.<org.apache.lucene.queries.function.valuesource.IDFValueSource: java.lang.String field>;

        $r6 = staticinvoke <org.apache.lucene.queries.function.valuesource.IDFValueSource: org.apache.lucene.search.similarities.TFIDFSimilarity asTFIDF(org.apache.lucene.search.similarities.Similarity,java.lang.String)>($r3, $r5);

        if $r6 != null goto label1;

        $r13 = new java.lang.UnsupportedOperationException;

        specialinvoke $r13.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("requires a TFIDFSimilarity (such as DefaultSimilarity)");

        throw $r13;

     label1:
        $r7 = virtualinvoke r2.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.index.IndexReader getIndexReader()>();

        $r8 = new org.apache.lucene.index.Term;

        $r10 = r4.<org.apache.lucene.queries.function.valuesource.IDFValueSource: java.lang.String indexedField>;

        $r9 = r4.<org.apache.lucene.queries.function.valuesource.IDFValueSource: org.apache.lucene.util.BytesRef indexedBytes>;

        specialinvoke $r8.<org.apache.lucene.index.Term: void <init>(java.lang.String,org.apache.lucene.util.BytesRef)>($r10, $r9);

        $i0 = virtualinvoke $r7.<org.apache.lucene.index.IndexReader: int docFreq(org.apache.lucene.index.Term)>($r8);

        $l1 = (long) $i0;

        $r11 = virtualinvoke r2.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.index.IndexReader getIndexReader()>();

        $i2 = virtualinvoke $r11.<org.apache.lucene.index.IndexReader: int maxDoc()>();

        $l3 = (long) $i2;

        $f0 = virtualinvoke $r6.<org.apache.lucene.search.similarities.TFIDFSimilarity: float idf(long,long)>($l1, $l3);

        $r12 = new org.apache.lucene.queries.function.valuesource.ConstDoubleDocValues;

        $d0 = (double) $f0;

        specialinvoke $r12.<org.apache.lucene.queries.function.valuesource.ConstDoubleDocValues: void <init>(double,org.apache.lucene.queries.function.ValueSource)>($d0, r4);

        return $r12;
    }

    static org.apache.lucene.search.similarities.TFIDFSimilarity asTFIDF(org.apache.lucene.search.similarities.Similarity, java.lang.String)
    {
        org.apache.lucene.search.similarities.TFIDFSimilarity $r0;
        org.apache.lucene.search.similarities.Similarity r3;
        java.lang.String r1;
        org.apache.lucene.search.similarities.PerFieldSimilarityWrapper $r2;
        boolean $z0, $z1;

        r3 := @parameter0: org.apache.lucene.search.similarities.Similarity;

        r1 := @parameter1: java.lang.String;

     label1:
        $z0 = r3 instanceof org.apache.lucene.search.similarities.PerFieldSimilarityWrapper;

        if $z0 == 0 goto label2;

        $r2 = (org.apache.lucene.search.similarities.PerFieldSimilarityWrapper) r3;

        r3 = virtualinvoke $r2.<org.apache.lucene.search.similarities.PerFieldSimilarityWrapper: org.apache.lucene.search.similarities.Similarity get(java.lang.String)>(r1);

        goto label1;

     label2:
        $z1 = r3 instanceof org.apache.lucene.search.similarities.TFIDFSimilarity;

        if $z1 == 0 goto label3;

        $r0 = (org.apache.lucene.search.similarities.TFIDFSimilarity) r3;

        return $r0;

     label3:
        return null;
    }
}
