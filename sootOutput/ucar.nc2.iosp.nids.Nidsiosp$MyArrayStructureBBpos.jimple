class ucar.nc2.iosp.nids.Nidsiosp$MyArrayStructureBBpos extends ucar.ma2.ArrayStructureBBpos
{
    int[] size;
    final ucar.nc2.iosp.nids.Nidsiosp this$0;

    void <init>(ucar.nc2.iosp.nids.Nidsiosp, ucar.ma2.StructureMembers, int[], java.nio.ByteBuffer, int[], int[])
    {
        ucar.nc2.iosp.nids.Nidsiosp$MyArrayStructureBBpos r0;
        ucar.ma2.StructureMembers r2;
        int[] r3, r5, r6;
        ucar.nc2.iosp.nids.Nidsiosp r1;
        java.nio.ByteBuffer r4;

        r0 := @this: ucar.nc2.iosp.nids.Nidsiosp$MyArrayStructureBBpos;

        r1 := @parameter0: ucar.nc2.iosp.nids.Nidsiosp;

        r2 := @parameter1: ucar.ma2.StructureMembers;

        r3 := @parameter2: int[];

        r4 := @parameter3: java.nio.ByteBuffer;

        r5 := @parameter4: int[];

        r6 := @parameter5: int[];

        r0.<ucar.nc2.iosp.nids.Nidsiosp$MyArrayStructureBBpos: ucar.nc2.iosp.nids.Nidsiosp this$0> = r1;

        specialinvoke r0.<ucar.ma2.ArrayStructureBBpos: void <init>(ucar.ma2.StructureMembers,int[],java.nio.ByteBuffer,int[])>(r2, r3, r4, r5);

        r0.<ucar.nc2.iosp.nids.Nidsiosp$MyArrayStructureBBpos: int[] size> = r6;

        return;
    }

    public java.lang.String getScalarString(int, ucar.ma2.StructureMembers$Member)
    {
        ucar.nc2.iosp.nids.Nidsiosp$MyArrayStructureBBpos r3;
        byte[] $r16;
        ucar.ma2.StructureMembers$Member r0;
        java.nio.ByteBuffer $r6;
        byte $b3, $b4;
        int[] $r4;
        int i0, $i1, $i2, $i5, i6;
        java.lang.String $r5, $r15;
        ucar.ma2.DataType $r1, $r2, $r7, $r8, $r12;
        java.lang.IllegalArgumentException $r9;
        java.lang.StringBuilder $r10, $r11, $r13, $r14;

        r3 := @this: ucar.nc2.iosp.nids.Nidsiosp$MyArrayStructureBBpos;

        i0 := @parameter0: int;

        r0 := @parameter1: ucar.ma2.StructureMembers$Member;

        $r1 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: ucar.ma2.DataType getDataType()>();

        $r2 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        if $r1 == $r2 goto label1;

        $r7 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: ucar.ma2.DataType getDataType()>();

        $r8 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        if $r7 != $r8 goto label5;

     label1:
        $i1 = virtualinvoke r3.<ucar.nc2.iosp.nids.Nidsiosp$MyArrayStructureBBpos: int calcOffsetSetOrder(int,ucar.ma2.StructureMembers$Member)>(i0, r0);

        $r4 = r3.<ucar.nc2.iosp.nids.Nidsiosp$MyArrayStructureBBpos: int[] size>;

        $i5 = $r4[i0];

        $r16 = newarray (byte)[$i5];

        i6 = 0;

     label2:
        if i6 >= $i5 goto label4;

        $r6 = r3.<ucar.nc2.iosp.nids.Nidsiosp$MyArrayStructureBBpos: java.nio.ByteBuffer bbuffer>;

        $i2 = $i1 + i6;

        $b3 = virtualinvoke $r6.<java.nio.ByteBuffer: byte get(int)>($i2);

        $r16[i6] = $b3;

        $b4 = $r16[i6];

        if 0 != $b4 goto label3;

        goto label4;

     label3:
        i6 = i6 + 1;

        goto label2;

     label4:
        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(byte[],int,int)>($r16, 0, i6);

        return $r5;

     label5:
        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Type is ");

        $r12 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: ucar.ma2.DataType getDataType()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", must be String or char");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r9;
    }
}
