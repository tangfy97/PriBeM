public class org.apache.commons.collections.bidimap.DualTreeBidiMap extends org.apache.commons.collections.bidimap.AbstractDualBidiMap implements org.apache.commons.collections.SortedBidiMap, java.io.Serializable
{
    private static final long serialVersionUID;
    protected final java.util.Comparator comparator;

    public void <init>()
    {
        org.apache.commons.collections.bidimap.DualTreeBidiMap r0;
        java.util.TreeMap $r1, $r2;

        r0 := @this: org.apache.commons.collections.bidimap.DualTreeBidiMap;

        $r1 = new java.util.TreeMap;

        specialinvoke $r1.<java.util.TreeMap: void <init>()>();

        $r2 = new java.util.TreeMap;

        specialinvoke $r2.<java.util.TreeMap: void <init>()>();

        specialinvoke r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap: void <init>(java.util.Map,java.util.Map)>($r1, $r2);

        r0.<org.apache.commons.collections.bidimap.DualTreeBidiMap: java.util.Comparator comparator> = null;

        return;
    }

    public void <init>(java.util.Map)
    {
        java.util.TreeMap $r1, $r2;
        java.util.Map r3;
        org.apache.commons.collections.bidimap.DualTreeBidiMap r0;

        r0 := @this: org.apache.commons.collections.bidimap.DualTreeBidiMap;

        r3 := @parameter0: java.util.Map;

        $r1 = new java.util.TreeMap;

        specialinvoke $r1.<java.util.TreeMap: void <init>()>();

        $r2 = new java.util.TreeMap;

        specialinvoke $r2.<java.util.TreeMap: void <init>()>();

        specialinvoke r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap: void <init>(java.util.Map,java.util.Map)>($r1, $r2);

        virtualinvoke r0.<org.apache.commons.collections.bidimap.DualTreeBidiMap: void putAll(java.util.Map)>(r3);

        r0.<org.apache.commons.collections.bidimap.DualTreeBidiMap: java.util.Comparator comparator> = null;

        return;
    }

    public void <init>(java.util.Comparator)
    {
        java.util.TreeMap $r1, $r3;
        org.apache.commons.collections.bidimap.DualTreeBidiMap r0;
        java.util.Comparator r2;

        r0 := @this: org.apache.commons.collections.bidimap.DualTreeBidiMap;

        r2 := @parameter0: java.util.Comparator;

        $r1 = new java.util.TreeMap;

        specialinvoke $r1.<java.util.TreeMap: void <init>(java.util.Comparator)>(r2);

        $r3 = new java.util.TreeMap;

        specialinvoke $r3.<java.util.TreeMap: void <init>(java.util.Comparator)>(r2);

        specialinvoke r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap: void <init>(java.util.Map,java.util.Map)>($r1, $r3);

        r0.<org.apache.commons.collections.bidimap.DualTreeBidiMap: java.util.Comparator comparator> = r2;

        return;
    }

    protected void <init>(java.util.Map, java.util.Map, org.apache.commons.collections.BidiMap)
    {
        java.util.Map r1, r2;
        org.apache.commons.collections.bidimap.DualTreeBidiMap r0;
        java.util.Comparator $r5;
        org.apache.commons.collections.BidiMap r3;
        java.util.SortedMap $r4;

        r0 := @this: org.apache.commons.collections.bidimap.DualTreeBidiMap;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: org.apache.commons.collections.BidiMap;

        specialinvoke r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap: void <init>(java.util.Map,java.util.Map,org.apache.commons.collections.BidiMap)>(r1, r2, r3);

        $r4 = (java.util.SortedMap) r1;

        $r5 = interfaceinvoke $r4.<java.util.SortedMap: java.util.Comparator comparator()>();

        r0.<org.apache.commons.collections.bidimap.DualTreeBidiMap: java.util.Comparator comparator> = $r5;

        return;
    }

    protected org.apache.commons.collections.BidiMap createBidiMap(java.util.Map, java.util.Map, org.apache.commons.collections.BidiMap)
    {
        java.util.Map r1, r2;
        org.apache.commons.collections.bidimap.DualTreeBidiMap $r0, r4;
        org.apache.commons.collections.BidiMap r3;

        r4 := @this: org.apache.commons.collections.bidimap.DualTreeBidiMap;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: org.apache.commons.collections.BidiMap;

        $r0 = new org.apache.commons.collections.bidimap.DualTreeBidiMap;

        specialinvoke $r0.<org.apache.commons.collections.bidimap.DualTreeBidiMap: void <init>(java.util.Map,java.util.Map,org.apache.commons.collections.BidiMap)>(r1, r2, r3);

        return $r0;
    }

    public java.util.Comparator comparator()
    {
        java.util.Map[] $r1;
        java.util.Map $r2;
        org.apache.commons.collections.bidimap.DualTreeBidiMap r0;
        java.util.Comparator $r4;
        java.util.SortedMap $r3;

        r0 := @this: org.apache.commons.collections.bidimap.DualTreeBidiMap;

        $r1 = r0.<org.apache.commons.collections.bidimap.DualTreeBidiMap: java.util.Map[] maps>;

        $r2 = $r1[0];

        $r3 = (java.util.SortedMap) $r2;

        $r4 = interfaceinvoke $r3.<java.util.SortedMap: java.util.Comparator comparator()>();

        return $r4;
    }

    public java.lang.Object firstKey()
    {
        java.util.Map[] $r1;
        java.util.Map $r2;
        org.apache.commons.collections.bidimap.DualTreeBidiMap r0;
        java.lang.Object $r4;
        java.util.SortedMap $r3;

        r0 := @this: org.apache.commons.collections.bidimap.DualTreeBidiMap;

        $r1 = r0.<org.apache.commons.collections.bidimap.DualTreeBidiMap: java.util.Map[] maps>;

        $r2 = $r1[0];

        $r3 = (java.util.SortedMap) $r2;

        $r4 = interfaceinvoke $r3.<java.util.SortedMap: java.lang.Object firstKey()>();

        return $r4;
    }

    public java.lang.Object lastKey()
    {
        java.util.Map[] $r1;
        java.util.Map $r2;
        org.apache.commons.collections.bidimap.DualTreeBidiMap r0;
        java.lang.Object $r4;
        java.util.SortedMap $r3;

        r0 := @this: org.apache.commons.collections.bidimap.DualTreeBidiMap;

        $r1 = r0.<org.apache.commons.collections.bidimap.DualTreeBidiMap: java.util.Map[] maps>;

        $r2 = $r1[0];

        $r3 = (java.util.SortedMap) $r2;

        $r4 = interfaceinvoke $r3.<java.util.SortedMap: java.lang.Object lastKey()>();

        return $r4;
    }

    public java.lang.Object nextKey(java.lang.Object)
    {
        java.util.Map $r2, $r4, $r12;
        boolean $z0, $z1, $z2;
        java.util.Map[] $r1, $r3, $r11;
        java.util.Iterator $r9;
        java.util.Set $r8;
        org.apache.commons.collections.OrderedMap $r13;
        org.apache.commons.collections.bidimap.DualTreeBidiMap r0;
        java.lang.Object r6, $r10, $r14;
        java.util.SortedMap r5, $r7;

        r0 := @this: org.apache.commons.collections.bidimap.DualTreeBidiMap;

        r6 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.commons.collections.bidimap.DualTreeBidiMap: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r1 = r0.<org.apache.commons.collections.bidimap.DualTreeBidiMap: java.util.Map[] maps>;

        $r2 = $r1[0];

        $z1 = $r2 instanceof org.apache.commons.collections.OrderedMap;

        if $z1 == 0 goto label2;

        $r11 = r0.<org.apache.commons.collections.bidimap.DualTreeBidiMap: java.util.Map[] maps>;

        $r12 = $r11[0];

        $r13 = (org.apache.commons.collections.OrderedMap) $r12;

        $r14 = interfaceinvoke $r13.<org.apache.commons.collections.OrderedMap: java.lang.Object nextKey(java.lang.Object)>(r6);

        return $r14;

     label2:
        $r3 = r0.<org.apache.commons.collections.bidimap.DualTreeBidiMap: java.util.Map[] maps>;

        $r4 = $r3[0];

        r5 = (java.util.SortedMap) $r4;

        $r7 = interfaceinvoke r5.<java.util.SortedMap: java.util.SortedMap tailMap(java.lang.Object)>(r6);

        $r8 = interfaceinvoke $r7.<java.util.SortedMap: java.util.Set keySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

        interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $z2 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        return $r10;

     label3:
        return null;
    }

    public java.lang.Object previousKey(java.lang.Object)
    {
        java.util.Map $r2, $r4, $r10;
        boolean $z0, $z1, $z2;
        java.util.Map[] $r1, $r3, $r9;
        org.apache.commons.collections.OrderedMap $r11;
        org.apache.commons.collections.bidimap.DualTreeBidiMap r0;
        java.lang.Object r6, $r8, $r12;
        java.util.SortedMap r5, $r7;

        r0 := @this: org.apache.commons.collections.bidimap.DualTreeBidiMap;

        r6 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.commons.collections.bidimap.DualTreeBidiMap: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r1 = r0.<org.apache.commons.collections.bidimap.DualTreeBidiMap: java.util.Map[] maps>;

        $r2 = $r1[0];

        $z1 = $r2 instanceof org.apache.commons.collections.OrderedMap;

        if $z1 == 0 goto label2;

        $r9 = r0.<org.apache.commons.collections.bidimap.DualTreeBidiMap: java.util.Map[] maps>;

        $r10 = $r9[0];

        $r11 = (org.apache.commons.collections.OrderedMap) $r10;

        $r12 = interfaceinvoke $r11.<org.apache.commons.collections.OrderedMap: java.lang.Object previousKey(java.lang.Object)>(r6);

        return $r12;

     label2:
        $r3 = r0.<org.apache.commons.collections.bidimap.DualTreeBidiMap: java.util.Map[] maps>;

        $r4 = $r3[0];

        r5 = (java.util.SortedMap) $r4;

        $r7 = interfaceinvoke r5.<java.util.SortedMap: java.util.SortedMap headMap(java.lang.Object)>(r6);

        $z2 = interfaceinvoke $r7.<java.util.SortedMap: boolean isEmpty()>();

        if $z2 == 0 goto label3;

        return null;

     label3:
        $r8 = interfaceinvoke $r7.<java.util.SortedMap: java.lang.Object lastKey()>();

        return $r8;
    }

    public org.apache.commons.collections.OrderedMapIterator orderedMapIterator()
    {
        org.apache.commons.collections.bidimap.DualTreeBidiMap r1;
        org.apache.commons.collections.bidimap.DualTreeBidiMap$BidiOrderedMapIterator $r0;

        r1 := @this: org.apache.commons.collections.bidimap.DualTreeBidiMap;

        $r0 = new org.apache.commons.collections.bidimap.DualTreeBidiMap$BidiOrderedMapIterator;

        specialinvoke $r0.<org.apache.commons.collections.bidimap.DualTreeBidiMap$BidiOrderedMapIterator: void <init>(org.apache.commons.collections.bidimap.AbstractDualBidiMap)>(r1);

        return $r0;
    }

    public org.apache.commons.collections.SortedBidiMap inverseSortedBidiMap()
    {
        org.apache.commons.collections.bidimap.DualTreeBidiMap r0;
        org.apache.commons.collections.BidiMap $r1;
        org.apache.commons.collections.SortedBidiMap $r2;

        r0 := @this: org.apache.commons.collections.bidimap.DualTreeBidiMap;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.bidimap.DualTreeBidiMap: org.apache.commons.collections.BidiMap inverseBidiMap()>();

        $r2 = (org.apache.commons.collections.SortedBidiMap) $r1;

        return $r2;
    }

    public org.apache.commons.collections.OrderedBidiMap inverseOrderedBidiMap()
    {
        org.apache.commons.collections.bidimap.DualTreeBidiMap r0;
        org.apache.commons.collections.OrderedBidiMap $r2;
        org.apache.commons.collections.BidiMap $r1;

        r0 := @this: org.apache.commons.collections.bidimap.DualTreeBidiMap;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.bidimap.DualTreeBidiMap: org.apache.commons.collections.BidiMap inverseBidiMap()>();

        $r2 = (org.apache.commons.collections.OrderedBidiMap) $r1;

        return $r2;
    }

    public java.util.SortedMap headMap(java.lang.Object)
    {
        java.util.Map[] $r1;
        java.util.Map $r2;
        org.apache.commons.collections.bidimap.DualTreeBidiMap r0;
        org.apache.commons.collections.bidimap.DualTreeBidiMap$ViewMap $r6;
        java.lang.Object r3;
        java.util.SortedMap $r4, $r5;

        r0 := @this: org.apache.commons.collections.bidimap.DualTreeBidiMap;

        r3 := @parameter0: java.lang.Object;

        $r1 = r0.<org.apache.commons.collections.bidimap.DualTreeBidiMap: java.util.Map[] maps>;

        $r2 = $r1[0];

        $r4 = (java.util.SortedMap) $r2;

        $r5 = interfaceinvoke $r4.<java.util.SortedMap: java.util.SortedMap headMap(java.lang.Object)>(r3);

        $r6 = new org.apache.commons.collections.bidimap.DualTreeBidiMap$ViewMap;

        specialinvoke $r6.<org.apache.commons.collections.bidimap.DualTreeBidiMap$ViewMap: void <init>(org.apache.commons.collections.bidimap.DualTreeBidiMap,java.util.SortedMap)>(r0, $r5);

        return $r6;
    }

    public java.util.SortedMap tailMap(java.lang.Object)
    {
        java.util.Map[] $r1;
        java.util.Map $r2;
        org.apache.commons.collections.bidimap.DualTreeBidiMap r0;
        org.apache.commons.collections.bidimap.DualTreeBidiMap$ViewMap $r6;
        java.lang.Object r3;
        java.util.SortedMap $r4, $r5;

        r0 := @this: org.apache.commons.collections.bidimap.DualTreeBidiMap;

        r3 := @parameter0: java.lang.Object;

        $r1 = r0.<org.apache.commons.collections.bidimap.DualTreeBidiMap: java.util.Map[] maps>;

        $r2 = $r1[0];

        $r4 = (java.util.SortedMap) $r2;

        $r5 = interfaceinvoke $r4.<java.util.SortedMap: java.util.SortedMap tailMap(java.lang.Object)>(r3);

        $r6 = new org.apache.commons.collections.bidimap.DualTreeBidiMap$ViewMap;

        specialinvoke $r6.<org.apache.commons.collections.bidimap.DualTreeBidiMap$ViewMap: void <init>(org.apache.commons.collections.bidimap.DualTreeBidiMap,java.util.SortedMap)>(r0, $r5);

        return $r6;
    }

    public java.util.SortedMap subMap(java.lang.Object, java.lang.Object)
    {
        java.util.Map[] $r1;
        java.util.Map $r2;
        org.apache.commons.collections.bidimap.DualTreeBidiMap r0;
        org.apache.commons.collections.bidimap.DualTreeBidiMap$ViewMap $r7;
        java.lang.Object r3, r4;
        java.util.SortedMap $r5, $r6;

        r0 := @this: org.apache.commons.collections.bidimap.DualTreeBidiMap;

        r3 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        $r1 = r0.<org.apache.commons.collections.bidimap.DualTreeBidiMap: java.util.Map[] maps>;

        $r2 = $r1[0];

        $r5 = (java.util.SortedMap) $r2;

        $r6 = interfaceinvoke $r5.<java.util.SortedMap: java.util.SortedMap subMap(java.lang.Object,java.lang.Object)>(r3, r4);

        $r7 = new org.apache.commons.collections.bidimap.DualTreeBidiMap$ViewMap;

        specialinvoke $r7.<org.apache.commons.collections.bidimap.DualTreeBidiMap$ViewMap: void <init>(org.apache.commons.collections.bidimap.DualTreeBidiMap,java.util.SortedMap)>(r0, $r6);

        return $r7;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.util.Map[] $r2;
        java.util.Map $r3;
        org.apache.commons.collections.bidimap.DualTreeBidiMap r1;
        java.io.ObjectOutputStream r0;

        r1 := @this: org.apache.commons.collections.bidimap.DualTreeBidiMap;

        r0 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r0.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $r2 = r1.<org.apache.commons.collections.bidimap.DualTreeBidiMap: java.util.Map[] maps>;

        $r3 = $r2[0];

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r3);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.util.Map[] $r4, $r7;
        java.io.ObjectInputStream r0;
        java.util.TreeMap $r2, $r5;
        java.util.Map r9;
        org.apache.commons.collections.bidimap.DualTreeBidiMap r1;
        java.lang.Object $r8;
        java.util.Comparator $r3, $r6;

        r1 := @this: org.apache.commons.collections.bidimap.DualTreeBidiMap;

        r0 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r0.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r4 = r1.<org.apache.commons.collections.bidimap.DualTreeBidiMap: java.util.Map[] maps>;

        $r2 = new java.util.TreeMap;

        $r3 = r1.<org.apache.commons.collections.bidimap.DualTreeBidiMap: java.util.Comparator comparator>;

        specialinvoke $r2.<java.util.TreeMap: void <init>(java.util.Comparator)>($r3);

        $r4[0] = $r2;

        $r7 = r1.<org.apache.commons.collections.bidimap.DualTreeBidiMap: java.util.Map[] maps>;

        $r5 = new java.util.TreeMap;

        $r6 = r1.<org.apache.commons.collections.bidimap.DualTreeBidiMap: java.util.Comparator comparator>;

        specialinvoke $r5.<java.util.TreeMap: void <init>(java.util.Comparator)>($r6);

        $r7[1] = $r5;

        $r8 = virtualinvoke r0.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        r9 = (java.util.Map) $r8;

        virtualinvoke r1.<org.apache.commons.collections.bidimap.DualTreeBidiMap: void putAll(java.util.Map)>(r9);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections.bidimap.DualTreeBidiMap: long serialVersionUID> = 721969328361809L;

        return;
    }
}
