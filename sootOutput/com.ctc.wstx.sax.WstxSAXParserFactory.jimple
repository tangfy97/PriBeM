public class com.ctc.wstx.sax.WstxSAXParserFactory extends javax.xml.parsers.SAXParserFactory
{
    final com.ctc.wstx.stax.WstxInputFactory mStaxFactory;
    boolean mFeatNsPrefixes;

    public void <init>()
    {
        com.ctc.wstx.stax.WstxInputFactory $r1;
        com.ctc.wstx.sax.WstxSAXParserFactory r0;

        r0 := @this: com.ctc.wstx.sax.WstxSAXParserFactory;

        specialinvoke r0.<javax.xml.parsers.SAXParserFactory: void <init>()>();

        r0.<com.ctc.wstx.sax.WstxSAXParserFactory: boolean mFeatNsPrefixes> = 0;

        $r1 = new com.ctc.wstx.stax.WstxInputFactory;

        specialinvoke $r1.<com.ctc.wstx.stax.WstxInputFactory: void <init>()>();

        r0.<com.ctc.wstx.sax.WstxSAXParserFactory: com.ctc.wstx.stax.WstxInputFactory mStaxFactory> = $r1;

        virtualinvoke r0.<com.ctc.wstx.sax.WstxSAXParserFactory: void setNamespaceAware(boolean)>(1);

        return;
    }

    public boolean getFeature(java.lang.String) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        com.ctc.wstx.api.ReaderConfig $r25, $r27, $r29, $r31;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.ctc.wstx.sax.WstxSAXParserFactory r23;
        org.xml.sax.SAXNotRecognizedException $r17;
        java.lang.StringBuffer $r18, $r19, $r20, $r21;
        java.lang.String r0, $r22;
        com.ctc.wstx.sax.SAXFeature $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        com.ctc.wstx.stax.WstxInputFactory $r24, $r26, $r28, $r30;

        r23 := @this: com.ctc.wstx.sax.WstxSAXParserFactory;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.ctc.wstx.sax.SAXFeature: com.ctc.wstx.sax.SAXFeature findByUri(java.lang.String)>(r0);

        $r2 = <com.ctc.wstx.sax.SAXFeature: com.ctc.wstx.sax.SAXFeature EXTERNAL_GENERAL_ENTITIES>;

        if $r1 != $r2 goto label01;

        $r30 = r23.<com.ctc.wstx.sax.WstxSAXParserFactory: com.ctc.wstx.stax.WstxInputFactory mStaxFactory>;

        $r31 = virtualinvoke $r30.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.api.ReaderConfig getConfig()>();

        $z4 = virtualinvoke $r31.<com.ctc.wstx.api.ReaderConfig: boolean willSupportExternalEntities()>();

        return $z4;

     label01:
        $r3 = <com.ctc.wstx.sax.SAXFeature: com.ctc.wstx.sax.SAXFeature EXTERNAL_PARAMETER_ENTITIES>;

        if $r1 != $r3 goto label02;

        $r28 = r23.<com.ctc.wstx.sax.WstxSAXParserFactory: com.ctc.wstx.stax.WstxInputFactory mStaxFactory>;

        $r29 = virtualinvoke $r28.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.api.ReaderConfig getConfig()>();

        $z3 = virtualinvoke $r29.<com.ctc.wstx.api.ReaderConfig: boolean willSupportExternalEntities()>();

        return $z3;

     label02:
        $r4 = <com.ctc.wstx.sax.SAXFeature: com.ctc.wstx.sax.SAXFeature IS_STANDALONE>;

        if $r1 != $r4 goto label03;

        return 0;

     label03:
        $r5 = <com.ctc.wstx.sax.SAXFeature: com.ctc.wstx.sax.SAXFeature LEXICAL_HANDLER_PARAMETER_ENTITIES>;

        if $r1 != $r5 goto label04;

        return 0;

     label04:
        $r6 = <com.ctc.wstx.sax.SAXFeature: com.ctc.wstx.sax.SAXFeature NAMESPACES>;

        if $r1 != $r6 goto label05;

        $r26 = r23.<com.ctc.wstx.sax.WstxSAXParserFactory: com.ctc.wstx.stax.WstxInputFactory mStaxFactory>;

        $r27 = virtualinvoke $r26.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.api.ReaderConfig getConfig()>();

        $z2 = virtualinvoke $r27.<com.ctc.wstx.api.ReaderConfig: boolean willSupportNamespaces()>();

        return $z2;

     label05:
        $r7 = <com.ctc.wstx.sax.SAXFeature: com.ctc.wstx.sax.SAXFeature NAMESPACE_PREFIXES>;

        if $r1 != $r7 goto label06;

        $z1 = r23.<com.ctc.wstx.sax.WstxSAXParserFactory: boolean mFeatNsPrefixes>;

        return $z1;

     label06:
        $r8 = <com.ctc.wstx.sax.SAXFeature: com.ctc.wstx.sax.SAXFeature RESOLVE_DTD_URIS>;

        if $r1 != $r8 goto label07;

        return 0;

     label07:
        $r9 = <com.ctc.wstx.sax.SAXFeature: com.ctc.wstx.sax.SAXFeature STRING_INTERNING>;

        if $r1 != $r9 goto label08;

        return 1;

     label08:
        $r10 = <com.ctc.wstx.sax.SAXFeature: com.ctc.wstx.sax.SAXFeature UNICODE_NORMALIZATION_CHECKING>;

        if $r1 != $r10 goto label09;

        return 0;

     label09:
        $r11 = <com.ctc.wstx.sax.SAXFeature: com.ctc.wstx.sax.SAXFeature USE_ATTRIBUTES2>;

        if $r1 != $r11 goto label10;

        return 1;

     label10:
        $r12 = <com.ctc.wstx.sax.SAXFeature: com.ctc.wstx.sax.SAXFeature USE_LOCATOR2>;

        if $r1 != $r12 goto label11;

        return 1;

     label11:
        $r13 = <com.ctc.wstx.sax.SAXFeature: com.ctc.wstx.sax.SAXFeature USE_ENTITY_RESOLVER2>;

        if $r1 != $r13 goto label12;

        return 1;

     label12:
        $r14 = <com.ctc.wstx.sax.SAXFeature: com.ctc.wstx.sax.SAXFeature VALIDATION>;

        if $r1 != $r14 goto label13;

        $r24 = r23.<com.ctc.wstx.sax.WstxSAXParserFactory: com.ctc.wstx.stax.WstxInputFactory mStaxFactory>;

        $r25 = virtualinvoke $r24.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.api.ReaderConfig getConfig()>();

        $z0 = virtualinvoke $r25.<com.ctc.wstx.api.ReaderConfig: boolean willValidateWithDTD()>();

        return $z0;

     label13:
        $r15 = <com.ctc.wstx.sax.SAXFeature: com.ctc.wstx.sax.SAXFeature XMLNS_URIS>;

        if $r1 != $r15 goto label14;

        return 1;

     label14:
        $r16 = <com.ctc.wstx.sax.SAXFeature: com.ctc.wstx.sax.SAXFeature XML_1_1>;

        if $r1 != $r16 goto label15;

        return 1;

     label15:
        $r17 = new org.xml.sax.SAXNotRecognizedException;

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Feature \'");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' not recognized");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r17.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>($r22);

        throw $r17;
    }

    public javax.xml.parsers.SAXParser newSAXParser()
    {
        com.ctc.wstx.sax.WstxSAXParser $r0;
        com.ctc.wstx.stax.WstxInputFactory $r2;
        com.ctc.wstx.sax.WstxSAXParserFactory r1;
        boolean $z0;

        r1 := @this: com.ctc.wstx.sax.WstxSAXParserFactory;

        $r0 = new com.ctc.wstx.sax.WstxSAXParser;

        $r2 = r1.<com.ctc.wstx.sax.WstxSAXParserFactory: com.ctc.wstx.stax.WstxInputFactory mStaxFactory>;

        $z0 = r1.<com.ctc.wstx.sax.WstxSAXParserFactory: boolean mFeatNsPrefixes>;

        specialinvoke $r0.<com.ctc.wstx.sax.WstxSAXParser: void <init>(com.ctc.wstx.stax.WstxInputFactory,boolean)>($r2, $z0);

        return $r0;
    }

    public void setFeature(java.lang.String, boolean) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.xml.sax.SAXNotSupportedException $r23, $r31;
        com.ctc.wstx.api.ReaderConfig $r39, $r41, $r43;
        boolean z0, z1, z2, $z3, $z4;
        com.ctc.wstx.sax.WstxSAXParserFactory r37;
        org.xml.sax.SAXNotRecognizedException $r17;
        java.lang.StringBuffer $r18, $r19, $r20, $r21, $r24, $r25, $r26, $r27, $r28, $r29, $r32, $r33, $r34, $r35;
        java.lang.String r0, $r22, $r30, $r36;
        com.ctc.wstx.sax.SAXFeature $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        com.ctc.wstx.stax.WstxInputFactory $r38, $r40, $r42;

        r37 := @this: com.ctc.wstx.sax.WstxSAXParserFactory;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 = 0;

        z2 = 0;

        $r1 = staticinvoke <com.ctc.wstx.sax.SAXFeature: com.ctc.wstx.sax.SAXFeature findByUri(java.lang.String)>(r0);

        $r2 = <com.ctc.wstx.sax.SAXFeature: com.ctc.wstx.sax.SAXFeature EXTERNAL_GENERAL_ENTITIES>;

        if $r1 != $r2 goto label01;

        $r42 = r37.<com.ctc.wstx.sax.WstxSAXParserFactory: com.ctc.wstx.stax.WstxInputFactory mStaxFactory>;

        $r43 = virtualinvoke $r42.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.api.ReaderConfig getConfig()>();

        virtualinvoke $r43.<com.ctc.wstx.api.ReaderConfig: void doSupportExternalEntities(boolean)>(z0);

        goto label20;

     label01:
        $r3 = <com.ctc.wstx.sax.SAXFeature: com.ctc.wstx.sax.SAXFeature EXTERNAL_PARAMETER_ENTITIES>;

        if $r1 != $r3 goto label02;

        goto label20;

     label02:
        $r4 = <com.ctc.wstx.sax.SAXFeature: com.ctc.wstx.sax.SAXFeature IS_STANDALONE>;

        if $r1 != $r4 goto label03;

        z2 = 1;

        goto label20;

     label03:
        $r5 = <com.ctc.wstx.sax.SAXFeature: com.ctc.wstx.sax.SAXFeature LEXICAL_HANDLER_PARAMETER_ENTITIES>;

        if $r1 != $r5 goto label04;

        goto label20;

     label04:
        $r6 = <com.ctc.wstx.sax.SAXFeature: com.ctc.wstx.sax.SAXFeature NAMESPACES>;

        if $r1 != $r6 goto label05;

        $r40 = r37.<com.ctc.wstx.sax.WstxSAXParserFactory: com.ctc.wstx.stax.WstxInputFactory mStaxFactory>;

        $r41 = virtualinvoke $r40.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.api.ReaderConfig getConfig()>();

        virtualinvoke $r41.<com.ctc.wstx.api.ReaderConfig: void doSupportNamespaces(boolean)>(z0);

        goto label20;

     label05:
        $r7 = <com.ctc.wstx.sax.SAXFeature: com.ctc.wstx.sax.SAXFeature NAMESPACE_PREFIXES>;

        if $r1 != $r7 goto label06;

        r37.<com.ctc.wstx.sax.WstxSAXParserFactory: boolean mFeatNsPrefixes> = z0;

        goto label20;

     label06:
        $r8 = <com.ctc.wstx.sax.SAXFeature: com.ctc.wstx.sax.SAXFeature RESOLVE_DTD_URIS>;

        if $r1 != $r8 goto label07;

        goto label20;

     label07:
        $r9 = <com.ctc.wstx.sax.SAXFeature: com.ctc.wstx.sax.SAXFeature STRING_INTERNING>;

        if $r1 != $r9 goto label10;

        if z0 != 0 goto label08;

        $z3 = 1;

        goto label09;

     label08:
        $z3 = 0;

     label09:
        z1 = $z3;

        goto label20;

     label10:
        $r10 = <com.ctc.wstx.sax.SAXFeature: com.ctc.wstx.sax.SAXFeature UNICODE_NORMALIZATION_CHECKING>;

        if $r1 != $r10 goto label11;

        z1 = z0;

        goto label20;

     label11:
        $r11 = <com.ctc.wstx.sax.SAXFeature: com.ctc.wstx.sax.SAXFeature USE_ATTRIBUTES2>;

        if $r1 != $r11 goto label12;

        z2 = 1;

        goto label20;

     label12:
        $r12 = <com.ctc.wstx.sax.SAXFeature: com.ctc.wstx.sax.SAXFeature USE_LOCATOR2>;

        if $r1 != $r12 goto label13;

        z2 = 1;

        goto label20;

     label13:
        $r13 = <com.ctc.wstx.sax.SAXFeature: com.ctc.wstx.sax.SAXFeature USE_ENTITY_RESOLVER2>;

        if $r1 != $r13 goto label14;

        z2 = 1;

        goto label20;

     label14:
        $r14 = <com.ctc.wstx.sax.SAXFeature: com.ctc.wstx.sax.SAXFeature VALIDATION>;

        if $r1 != $r14 goto label15;

        $r38 = r37.<com.ctc.wstx.sax.WstxSAXParserFactory: com.ctc.wstx.stax.WstxInputFactory mStaxFactory>;

        $r39 = virtualinvoke $r38.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.api.ReaderConfig getConfig()>();

        virtualinvoke $r39.<com.ctc.wstx.api.ReaderConfig: void doValidateWithDTD(boolean)>(z0);

        goto label20;

     label15:
        $r15 = <com.ctc.wstx.sax.SAXFeature: com.ctc.wstx.sax.SAXFeature XMLNS_URIS>;

        if $r1 != $r15 goto label18;

        if z0 != 0 goto label16;

        $z4 = 1;

        goto label17;

     label16:
        $z4 = 0;

     label17:
        z1 = $z4;

        goto label20;

     label18:
        $r16 = <com.ctc.wstx.sax.SAXFeature: com.ctc.wstx.sax.SAXFeature XML_1_1>;

        if $r1 != $r16 goto label19;

        z2 = 1;

        goto label20;

     label19:
        $r17 = new org.xml.sax.SAXNotRecognizedException;

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Feature \'");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' not recognized");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r17.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>($r22);

        throw $r17;

     label20:
        if z2 == 0 goto label21;

        $r31 = new org.xml.sax.SAXNotSupportedException;

        $r32 = new java.lang.StringBuffer;

        specialinvoke $r32.<java.lang.StringBuffer: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Feature \'");

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' is read-only, can not be modified");

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r31.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>($r36);

        throw $r31;

     label21:
        if z1 == 0 goto label22;

        $r23 = new org.xml.sax.SAXNotSupportedException;

        $r24 = new java.lang.StringBuffer;

        specialinvoke $r24.<java.lang.StringBuffer: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Trying to set invalid value for feature \'");

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\', \'");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>(z0);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r23.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>($r30);

        throw $r23;

     label22:
        return;
    }

    public static void main(java.lang.String[])
    {
        java.io.PrintStream $r2;
        java.lang.String[] r6;
        com.ctc.wstx.sax.WstxSAXParserFactory $r0;
        java.lang.StringBuffer $r1, $r3, $r4;
        java.lang.String $r5;
        boolean $z0;

        r6 := @parameter0: java.lang.String[];

        $r0 = new com.ctc.wstx.sax.WstxSAXParserFactory;

        specialinvoke $r0.<com.ctc.wstx.sax.WstxSAXParserFactory: void <init>()>();

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Ns -> ");

        $z0 = virtualinvoke $r0.<com.ctc.wstx.sax.WstxSAXParserFactory: boolean isNamespaceAware()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r5);

        return;
    }
}
