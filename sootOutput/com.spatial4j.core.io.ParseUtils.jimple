public class com.spatial4j.core.io.ParseUtils extends java.lang.Object
{

    private void <init>()
    {
        com.spatial4j.core.io.ParseUtils r0;

        r0 := @this: com.spatial4j.core.io.ParseUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String[] parsePoint(java.lang.String[], java.lang.String, int) throws com.spatial4j.core.exception.InvalidShapeException
    {
        java.lang.String[] r13;
        int i0, $i1, $i2, $i5, $i6, $i7, i8, i9, i10, i11, $i13, $i14, $i15, $i17, $i19;
        java.lang.String r0, $r10, $r11, $r12;
        char $c3, $c4;
        com.spatial4j.core.exception.InvalidShapeException $r15;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r14;

        r13 := @parameter0: java.lang.String[];

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        if r13 == null goto label01;

        $i6 = lengthof r13;

        if $i6 == i0 goto label02;

     label01:
        r13 = newarray (java.lang.String)[i0];

     label02:
        $i7 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(44);

        i8 = $i7;

        i9 = $i7;

        i10 = 0;

        i11 = 0;

        $i13 = (int) -1;

        if $i7 != $i13 goto label03;

        if i0 != 1 goto label03;

        $i5 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i5 <= 0 goto label03;

        $r12 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        r13[0] = $r12;

        i11 = 1;

        goto label10;

     label03:
        if $i7 <= 0 goto label10;

     label04:
        if i11 >= i0 goto label10;

     label05:
        if i10 >= i9 goto label06;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i10);

        $i14 = (int) $c4;

        if $i14 != 32 goto label06;

        i10 = i10 + 1;

        goto label05;

     label06:
        if i9 <= i10 goto label07;

        $i2 = i9 - 1;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i2);

        $i15 = (int) $c3;

        if $i15 != 32 goto label07;

        $i17 = (int) -1;

        i9 = i9 + $i17;

        goto label06;

     label07:
        if i10 != i9 goto label08;

        goto label10;

     label08:
        $r11 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i10, i9);

        r13[i11] = $r11;

        i10 = i8 + 1;

        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(44, i10);

        i9 = $i1;

        i8 = $i1;

        $i19 = (int) -1;

        if $i1 != $i19 goto label09;

        i9 = virtualinvoke r0.<java.lang.String: int length()>();

     label09:
        i11 = i11 + 1;

        goto label04;

     label10:
        if i11 == i0 goto label11;

        $r15 = new com.spatial4j.core.exception.InvalidShapeException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("incompatible dimension (");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") and values (");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").  Only ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" values specified");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<com.spatial4j.core.exception.InvalidShapeException: void <init>(java.lang.String)>($r10);

        throw $r15;

     label11:
        return r13;
    }

    public static double[] parsePointDouble(double[], java.lang.String, int) throws com.spatial4j.core.exception.InvalidShapeException
    {
        com.spatial4j.core.exception.InvalidShapeException $r15;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r14;
        double[] r13;
        int i0, $i1, $i2, $i5, $i6, $i7, i8, i9, i10, i11, $i13, $i14, $i15, $i17, $i19;
        java.lang.String r0, $r10, $r11, $r12;
        double $d0, $d1;
        char $c3, $c4;

        r13 := @parameter0: double[];

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        if r13 == null goto label01;

        $i6 = lengthof r13;

        if $i6 == i0 goto label02;

     label01:
        r13 = newarray (double)[i0];

     label02:
        $i7 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(44);

        i8 = $i7;

        i9 = $i7;

        i10 = 0;

        i11 = 0;

        $i13 = (int) -1;

        if $i7 != $i13 goto label03;

        if i0 != 1 goto label03;

        $i5 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i5 <= 0 goto label03;

        $r12 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r12);

        r13[0] = $d1;

        i11 = 1;

        goto label10;

     label03:
        if $i7 <= 0 goto label10;

     label04:
        if i11 >= i0 goto label10;

     label05:
        if i10 >= i9 goto label06;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i10);

        $i14 = (int) $c4;

        if $i14 != 32 goto label06;

        i10 = i10 + 1;

        goto label05;

     label06:
        if i9 <= i10 goto label07;

        $i2 = i9 - 1;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i2);

        $i15 = (int) $c3;

        if $i15 != 32 goto label07;

        $i17 = (int) -1;

        i9 = i9 + $i17;

        goto label06;

     label07:
        if i10 != i9 goto label08;

        goto label10;

     label08:
        $r11 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i10, i9);

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r11);

        r13[i11] = $d0;

        i10 = i8 + 1;

        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(44, i10);

        i9 = $i1;

        i8 = $i1;

        $i19 = (int) -1;

        if $i1 != $i19 goto label09;

        i9 = virtualinvoke r0.<java.lang.String: int length()>();

     label09:
        i11 = i11 + 1;

        goto label04;

     label10:
        if i11 == i0 goto label11;

        $r15 = new com.spatial4j.core.exception.InvalidShapeException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("incompatible dimension (");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") and values (");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").  Only ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" values specified");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<com.spatial4j.core.exception.InvalidShapeException: void <init>(java.lang.String)>($r10);

        throw $r15;

     label11:
        return r13;
    }

    public static final double[] parseLatitudeLongitude(java.lang.String) throws com.spatial4j.core.exception.InvalidShapeException
    {
        double[] $r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.spatial4j.core.io.ParseUtils: double[] parseLatitudeLongitude(double[],java.lang.String)>(null, r0);

        return $r1;
    }

    public static final double[] parseLatitudeLongitude(double[], java.lang.String) throws com.spatial4j.core.exception.InvalidShapeException
    {
        double[] $r1, r14;
        byte $b0, $b1, $b2, $b3;
        int $i4, $i5, $i6, $i7;
        java.lang.String r0, $r7, $r13;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        com.spatial4j.core.exception.InvalidShapeException $r16, $r18;
        java.lang.StringBuilder $r4, $r5, $r6, $r10, $r11, $r12, $r15, $r17;

        r14 := @parameter0: double[];

        r0 := @parameter1: java.lang.String;

        if r14 != null goto label1;

        r14 = newarray (double)[2];

     label1:
        $r1 = staticinvoke <com.spatial4j.core.io.ParseUtils: double[] parsePointDouble(double[],java.lang.String,int)>(null, r0, 2);

        $d0 = $r1[0];

        $b0 = $d0 cmpg -90.0;

        $i4 = (int) $b0;

        if $i4 < 0 goto label2;

        $d2 = $r1[0];

        $b1 = $d2 cmpl 90.0;

        $i5 = (int) $b1;

        if $i5 <= 0 goto label3;

     label2:
        $r16 = new com.spatial4j.core.exception.InvalidShapeException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid latitude: latitudes are range -90 to 90: provided lat: [");

        $d1 = $r1[0];

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<com.spatial4j.core.exception.InvalidShapeException: void <init>(java.lang.String)>($r7);

        throw $r16;

     label3:
        $d3 = $r1[0];

        r14[0] = $d3;

        $d4 = $r1[1];

        $b2 = $d4 cmpg -180.0;

        $i6 = (int) $b2;

        if $i6 < 0 goto label4;

        $d6 = $r1[1];

        $b3 = $d6 cmpl 180.0;

        $i7 = (int) $b3;

        if $i7 <= 0 goto label5;

     label4:
        $r18 = new com.spatial4j.core.exception.InvalidShapeException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid longitude: longitudes are range -180 to 180: provided lon: [");

        $d5 = $r1[1];

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d5);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<com.spatial4j.core.exception.InvalidShapeException: void <init>(java.lang.String)>($r13);

        throw $r18;

     label5:
        $d7 = $r1[1];

        r14[1] = $d7;

        return r14;
    }
}
