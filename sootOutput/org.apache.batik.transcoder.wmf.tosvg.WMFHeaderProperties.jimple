public class org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties extends org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader
{
    private static final java.lang.Integer INTEGER_0;
    protected java.io.DataInputStream stream;
    private int _bleft;
    private int _bright;
    private int _btop;
    private int _bbottom;
    private int _bwidth;
    private int _bheight;
    private int _ileft;
    private int _iright;
    private int _itop;
    private int _ibottom;
    private float scale;
    private int startX;
    private int startY;
    private int currentHorizAlign;
    private int currentVertAlign;
    private org.apache.batik.transcoder.wmf.tosvg.WMFFont wf;
    private static final java.awt.font.FontRenderContext fontCtx;
    private transient boolean firstEffectivePaint;
    public static final int PEN;
    public static final int BRUSH;
    public static final int FONT;
    public static final int NULL_PEN;
    public static final int NULL_BRUSH;
    public static final int PALETTE;
    public static final int OBJ_BITMAP;
    public static final int OBJ_REGION;

    public void <init>(java.io.File) throws java.io.IOException
    {
        java.io.DataInputStream $r1, $r5, $r6;
        java.io.BufferedInputStream $r2;
        org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties r0;
        java.io.FileInputStream $r3;
        java.io.File r4;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties;

        r4 := @parameter0: java.io.File;

        specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: void <init>()>();

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: float scale> = 1.0F;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int startX> = 0;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int startY> = 0;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int currentHorizAlign> = 0;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int currentVertAlign> = 0;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: org.apache.batik.transcoder.wmf.tosvg.WMFFont wf> = null;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: boolean firstEffectivePaint> = 1;

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: void reset()>();

        $r1 = new java.io.DataInputStream;

        $r2 = new java.io.BufferedInputStream;

        $r3 = new java.io.FileInputStream;

        specialinvoke $r3.<java.io.FileInputStream: void <init>(java.io.File)>(r4);

        specialinvoke $r2.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r3);

        specialinvoke $r1.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r2);

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: java.io.DataInputStream stream> = $r1;

        $r5 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: java.io.DataInputStream stream>;

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: void read(java.io.DataInputStream)>($r5);

        $r6 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: java.io.DataInputStream stream>;

        virtualinvoke $r6.<java.io.FilterInputStream: void close()>();

        return;
    }

    public void <init>()
    {
        org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties r0;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties;

        specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: void <init>()>();

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: float scale> = 1.0F;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int startX> = 0;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int startY> = 0;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int currentHorizAlign> = 0;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int currentVertAlign> = 0;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: org.apache.batik.transcoder.wmf.tosvg.WMFFont wf> = null;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: boolean firstEffectivePaint> = 1;

        return;
    }

    public void closeResource()
    {
        java.io.DataInputStream $r1, $r2;
        org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties r0;
        java.io.IOException $r3;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties;

     label1:
        $r1 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: java.io.DataInputStream stream>;

        if $r1 == null goto label2;

        $r2 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: java.io.DataInputStream stream>;

        virtualinvoke $r2.<java.io.FilterInputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void setFile(java.io.File) throws java.io.IOException
    {
        java.io.DataInputStream $r1, $r5, $r6;
        java.io.BufferedInputStream $r2;
        org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties r0;
        java.io.FileInputStream $r3;
        java.io.File r4;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties;

        r4 := @parameter0: java.io.File;

        $r1 = new java.io.DataInputStream;

        $r2 = new java.io.BufferedInputStream;

        $r3 = new java.io.FileInputStream;

        specialinvoke $r3.<java.io.FileInputStream: void <init>(java.io.File)>(r4);

        specialinvoke $r2.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r3);

        specialinvoke $r1.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r2);

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: java.io.DataInputStream stream> = $r1;

        $r5 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: java.io.DataInputStream stream>;

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: void read(java.io.DataInputStream)>($r5);

        $r6 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: java.io.DataInputStream stream>;

        virtualinvoke $r6.<java.io.FilterInputStream: void close()>();

        return;
    }

    public void reset()
    {
        org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties r0;
        int $i1, $i3, $i5, $i7, $i9, $i11, $i13, $i15, $i17, $i19, $i21, $i23;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int left> = 0;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int right> = 0;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int top> = 1000;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int bottom> = 1000;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int inch> = 84;

        $i1 = (int) -1;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bleft> = $i1;

        $i3 = (int) -1;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bright> = $i3;

        $i5 = (int) -1;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _btop> = $i5;

        $i7 = (int) -1;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bbottom> = $i7;

        $i9 = (int) -1;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _ileft> = $i9;

        $i11 = (int) -1;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _iright> = $i11;

        $i13 = (int) -1;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _itop> = $i13;

        $i15 = (int) -1;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _ibottom> = $i15;

        $i17 = (int) -1;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bwidth> = $i17;

        $i19 = (int) -1;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bheight> = $i19;

        $i21 = (int) -1;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int vpW> = $i21;

        $i23 = (int) -1;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int vpH> = $i23;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int vpX> = 0;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int vpY> = 0;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int startX> = 0;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int startY> = 0;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float scaleXY> = 1.0F;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: boolean firstEffectivePaint> = 1;

        return;
    }

    public java.io.DataInputStream getStream()
    {
        java.io.DataInputStream $r1;
        org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties r0;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties;

        $r1 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: java.io.DataInputStream stream>;

        return $r1;
    }

    protected boolean readRecords(java.io.DataInputStream) throws java.io.IOException
    {
        java.awt.Color $r45, $r46;
        java.lang.Integer $r12, $r36;
        java.awt.font.TextLayout $r47, $r48;
        float[] r40, r41, r42, r43;
        java.awt.font.FontRenderContext $r6, $r18;
        int[] r39;
        java.io.DataInputStream r1;
        int $i0, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i19, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i44, $i46, $i47, $i49, $i51, $i52, $i53, $i54, $i59, $i60, $i65, $i66, $i71, $i72, $i75, $i80, $i81, $i82, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i95, $i96, $i101, $i102, $i106, $i107, $i108, $i110, $i118, $i121, $i126, $i128, $i129, $i130, $i133, $i136, $i137, $i140, $i141, $i142, $i143, $i148, $i149, $i151, $i152, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, i168, i169, i170, i171, i172, i173, i174, i175, i177, i178, i179, i180, i181, i182, i185, i186, $i187, i188, i189, i190, i191, i192, i193, i194, $i195, i196, i197, i198, i199, i200, i201, i202, i203, i204, i205, i206, i207, i208, i209, i210, $i212, $i213, $i214, $i215, $i216, $i217, $i218, $i219, $i221, $i222, $i224, $i225, $i226, $i227, $i228, $i229, $i230, $i231, $i232, $i233, $i234, $i235, $i236, $i237, $i238, $i239, $i241, $i242, $i243, $i244, $i245, $i246, $i247, $i248, $i249, $i250, $i251, $i252, $i253, $i254, $i255, $i256, $i257, $i258, $i259, $i260, $i261, $i262, $i263, $i264, $i265, $i266, $i267, $i268, $i269, $i270, $i271, $i272, $i273, $i274, $i275, $i276, $i277, $i278, $i279, $i280, $i281, $i282, $i283;
        java.awt.geom.Rectangle2D$Float $r54, $r55, $r56;
        org.apache.batik.transcoder.wmf.tosvg.GdiObject $r32, $r33;
        java.lang.String $r3, $r15, r38, $r49;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.awt.Font $r7, $r19, $r28, $r50;
        double $d0, $d1, $d2, $d3;
        byte[] $r10, $r30, r37, r44;
        byte $b15, $b33, $b79, $b114, $b115, $b116, $b117, $b119, $b120, $b124, $b125, b176, $b184;
        org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties r0;
        short $s1, $s2, $s3, $s4, $s6, $s16, $s17, $s18, $s20, $s29, $s30, $s31, $s32, $s43, $s45, $s48, $s50, $s55, $s56, $s57, $s58, $s61, $s62, $s63, $s64, $s67, $s68, $s69, $s70, $s73, $s74, $s76, $s77, $s78, $s83, $s91, $s92, $s93, $s94, $s97, $s98, $s99, $s100, $s103, $s104, $s105, $s109, $s111, $s112, $s113, $s127, $s131, $s132, $s134, $s135, $s138, $s139, $s144, $s145, $s146, $s147, $s150, $s153, s164, s165, s166, s167, s183, $s240;
        java.lang.Object $r34;
        java.awt.geom.Rectangle2D $r8, $r9, $r20, $r21;
        org.apache.batik.ext.awt.geom.Polygon2D $r52;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53, $f54, $f55, $f56, $f57, $f58, $f59, $f60, $f61, $f62, $f63, $f64, $f65, $f66, $f67, $f68, $f69, $f70, $f71, $f72, $f73, $f74, $f75, $f76, $f77, $f78, $f79, $f80, $f81, $f82, $f83, $f84, $f85, $f86, $f87, $f88, $f89, $f90, $f91, $f92, $f93, $f94, $f95, $f96, $f97, $f98, $f99, $f100, $f101, $f102, $f103, $f104, $f105, $f106, $f107, $f108, $f109, $f110, $f111, $f112, $f113, $f114, $f115, $f116, $f117, $f118, $f119, $f120, $f121, $f122, $f123, $f124, $f125, $f126, $f127, $f128, $f129, $f130, $f131, $f132, $f133, $f134, $f135, $f136, $f137, $f138, $f139, $f140, $f141, $f142, $f143, $f144, $f145, $f146, $f147, $f148, $f149, $f150, $f151, f152, f153, f154, f155, f156, f157, f158, f159, f160, f161, f162, f163, f164, f165, f166, f167, f168;
        org.apache.batik.transcoder.wmf.tosvg.WMFFont $r2, $r5, $r14, $r17, $r35, $r51;
        char $c122, $c123;
        org.apache.batik.ext.awt.geom.Polyline2D $r53;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties;

        r1 := @parameter0: java.io.DataInputStream;

        s164 = 1;

        s165 = -1;

        s166 = -1;

        s167 = -1;

        goto label100;

     label001:
        $i0 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int readInt(java.io.DataInputStream)>(r1);

        $i212 = (int) -3;

        i168 = $i0 + $i212;

        $s1 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        s164 = $s1;

        $i213 = (int) $s1;

        if $i213 > 0 goto label002;

        goto label101;

     label002:
        $i214 = (int) $s1;

        lookupswitch($i214)
        {
            case 247: goto label050;
            case 259: goto label003;
            case 301: goto label053;
            case 302: goto label015;
            case 496: goto label062;
            case 523: goto label005;
            case 524: goto label006;
            case 531: goto label066;
            case 532: goto label068;
            case 762: goto label008;
            case 763: goto label034;
            case 764: goto label012;
            case 804: goto label078;
            case 805: goto label081;
            case 1046: goto label084;
            case 1048: goto label084;
            case 1051: goto label084;
            case 1313: goto label027;
            case 1336: goto label069;
            case 1564: goto label085;
            case 1565: goto label087;
            case 1583: goto label027;
            case 1791: goto label047;
            case 2071: goto label086;
            case 2074: goto label086;
            case 2096: goto label086;
            case 2368: goto label096;
            case 2610: goto label019;
            case 2881: goto label090;
            case 3907: goto label093;
            default: goto label097;
        };

     label003:
        $s153 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $i215 = (int) $s153;

        if $i215 != 8 goto label004;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: boolean isotropic> = 0;

     label004:
        goto label100;

     label005:
        $s144 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $i216 = (int) $s144;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int vpY> = $i216;

        $s145 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $i217 = (int) $s145;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int vpX> = $i217;

        goto label100;

     label006:
        $s138 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $i218 = (int) $s138;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int vpH> = $i218;

        $s139 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $i219 = (int) $s139;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int vpW> = $i219;

        $z2 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: boolean isotropic>;

        if $z2 != 0 goto label007;

        $i142 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int vpW>;

        $f150 = (float) $i142;

        $i143 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int vpH>;

        $f149 = (float) $i143;

        $f151 = $f150 / $f149;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float scaleXY> = $f151;

     label007:
        $i140 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int vpW>;

        $f147 = (float) $i140;

        $f146 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float scaleXY>;

        $f148 = $f147 * $f146;

        $i141 = (int) $f148;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int vpW> = $i141;

        goto label100;

     label008:
        $s127 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int readInt(java.io.DataInputStream)>(r1);

        $i128 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int readInt(java.io.DataInputStream)>(r1);

        i169 = $i128 & 255;

        $i221 = (int) 65280;

        $i129 = $i128 & $i221;

        i170 = $i129 >> 8;

        $i130 = $i128 & 16711680;

        i171 = $i130 >> 16;

        $r45 = new java.awt.Color;

        specialinvoke $r45.<java.awt.Color: void <init>(int,int,int)>(i169, i170, i171);

        if i168 != 6 goto label009;

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

     label009:
        $i222 = (int) $s127;

        if $i222 != 5 goto label010;

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int addObjectAt(int,java.lang.Object,int)>(4, $r45, 0);

        goto label011;

     label010:
        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int addObjectAt(int,java.lang.Object,int)>(1, $r45, 0);

     label011:
        goto label100;

     label012:
        $s105 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $i106 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int readInt(java.io.DataInputStream)>(r1);

        i172 = $i106 & 255;

        $i224 = (int) 65280;

        $i107 = $i106 & $i224;

        i173 = $i107 >> 8;

        $i108 = $i106 & 16711680;

        i174 = $i108 >> 16;

        $r46 = new java.awt.Color;

        specialinvoke $r46.<java.awt.Color: void <init>(int,int,int)>(i172, i173, i174);

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $i225 = (int) $s105;

        if $i225 != 5 goto label013;

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int addObjectAt(int,java.lang.Object,int)>(5, $r46, 0);

        goto label014;

     label013:
        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int addObjectAt(int,java.lang.Object,int)>(2, $r46, 0);

     label014:
        goto label100;

     label015:
        $s147 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        if i168 <= 1 goto label018;

        i175 = 1;

        goto label017;

     label016:
        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        i175 = i175 + 1;

     label017:
        if i175 < i168 goto label016;

     label018:
        $i226 = (int) $s147;

        $i148 = staticinvoke <org.apache.batik.transcoder.wmf.tosvg.WMFUtilities: int getHorizontalAlignment(int)>($i226);

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int currentHorizAlign> = $i148;

        $i227 = (int) $s147;

        $i149 = staticinvoke <org.apache.batik.transcoder.wmf.tosvg.WMFUtilities: int getVerticalAlignment(int)>($i227);

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int currentVertAlign> = $i149;

        goto label100;

     label019:
        $s29 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $s30 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $s31 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        b176 = 4;

        $s32 = $s31 & 4;

        if $s32 == 0 goto label020;

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        b176 = 8;

     label020:
        $i228 = (int) $s30;

        $r10 = newarray (byte)[$i228];

        i177 = 0;

        goto label022;

     label021:
        $b33 = virtualinvoke r1.<java.io.DataInputStream: byte readByte()>();

        $r10[i177] = $b33;

        i177 = i177 + 1;

     label022:
        $i229 = (int) $s30;

        if i177 < $i229 goto label021;

        $r2 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: org.apache.batik.transcoder.wmf.tosvg.WMFFont wf>;

        $r3 = staticinvoke <org.apache.batik.transcoder.wmf.tosvg.WMFUtilities: java.lang.String decodeString(org.apache.batik.transcoder.wmf.tosvg.WMFFont,byte[])>($r2, $r10);

        $i230 = (int) $s30;

        $i34 = $i230 + 1;

        $i35 = $i34 / 2;

        i178 = b176 + $i35;

        $i231 = (int) $s30;

        $i36 = $i231 % 2;

        if $i36 == 0 goto label023;

        virtualinvoke r1.<java.io.DataInputStream: byte readByte()>();

     label023:
        if i178 >= i168 goto label026;

        i179 = i178;

        goto label025;

     label024:
        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        i179 = i179 + 1;

     label025:
        if i179 < i168 goto label024;

     label026:
        $r47 = new java.awt.font.TextLayout;

        $r5 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: org.apache.batik.transcoder.wmf.tosvg.WMFFont wf>;

        $r7 = $r5.<org.apache.batik.transcoder.wmf.tosvg.WMFFont: java.awt.Font font>;

        $r6 = <org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: java.awt.font.FontRenderContext fontCtx>;

        specialinvoke $r47.<java.awt.font.TextLayout: void <init>(java.lang.String,java.awt.Font,java.awt.font.FontRenderContext)>($r3, $r7, $r6);

        $r8 = virtualinvoke $r47.<java.awt.font.TextLayout: java.awt.geom.Rectangle2D getBounds()>();

        $d0 = virtualinvoke $r8.<java.awt.geom.RectangularShape: double getWidth()>();

        $i40 = (int) $d0;

        $r9 = virtualinvoke $r47.<java.awt.font.TextLayout: java.awt.geom.Rectangle2D getBounds()>();

        $d1 = virtualinvoke $r9.<java.awt.geom.RectangularShape: double getX()>();

        $i41 = (int) $d1;

        $i37 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int currentVertAlign>;

        $f56 = specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: float getVerticalAlignmentValue(java.awt.font.TextLayout,int)>($r47, $i37);

        $i42 = (int) $f56;

        $i232 = (int) $s29;

        specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: void resizeBounds(int,int)>($i41, $i232);

        $i39 = $i41 + $i40;

        $i233 = (int) $s29;

        $i38 = $i233 + $i42;

        specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: void resizeBounds(int,int)>($i39, $i38);

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: boolean firstEffectivePaint> = 0;

        goto label100;

     label027:
        $s78 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $i234 = (int) $s78;

        r37 = newarray (byte)[$i234];

        i180 = 0;

        goto label029;

     label028:
        $b79 = virtualinvoke r1.<java.io.DataInputStream: byte readByte()>();

        r37[i180] = $b79;

        i180 = i180 + 1;

     label029:
        $i235 = (int) $s78;

        if i180 < $i235 goto label028;

        $r14 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: org.apache.batik.transcoder.wmf.tosvg.WMFFont wf>;

        $r15 = staticinvoke <org.apache.batik.transcoder.wmf.tosvg.WMFUtilities: java.lang.String decodeString(org.apache.batik.transcoder.wmf.tosvg.WMFFont,byte[])>($r14, r37);

        $i236 = (int) $s78;

        $i80 = $i236 % 2;

        if $i80 == 0 goto label030;

        virtualinvoke r1.<java.io.DataInputStream: byte readByte()>();

     label030:
        $i237 = (int) $s78;

        $i81 = $i237 + 1;

        $i82 = $i81 / 2;

        $i90 = 1 + $i82;

        $s83 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        i181 = $i90 + 2;

        if i181 >= i168 goto label033;

        i182 = i181;

        goto label032;

     label031:
        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        i182 = i182 + 1;

     label032:
        if i182 < i168 goto label031;

     label033:
        $r48 = new java.awt.font.TextLayout;

        $r17 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: org.apache.batik.transcoder.wmf.tosvg.WMFFont wf>;

        $r19 = $r17.<org.apache.batik.transcoder.wmf.tosvg.WMFFont: java.awt.Font font>;

        $r18 = <org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: java.awt.font.FontRenderContext fontCtx>;

        specialinvoke $r48.<java.awt.font.TextLayout: void <init>(java.lang.String,java.awt.Font,java.awt.font.FontRenderContext)>($r15, $r19, $r18);

        $r20 = virtualinvoke $r48.<java.awt.font.TextLayout: java.awt.geom.Rectangle2D getBounds()>();

        $d2 = virtualinvoke $r20.<java.awt.geom.RectangularShape: double getWidth()>();

        $i87 = (int) $d2;

        $r21 = virtualinvoke $r48.<java.awt.font.TextLayout: java.awt.geom.Rectangle2D getBounds()>();

        $d3 = virtualinvoke $r21.<java.awt.geom.RectangularShape: double getX()>();

        $i88 = (int) $d3;

        $i84 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int currentVertAlign>;

        $f116 = specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: float getVerticalAlignmentValue(java.awt.font.TextLayout,int)>($r48, $i84);

        $i89 = (int) $f116;

        $i238 = (int) $s83;

        specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: void resizeBounds(int,int)>($i88, $i238);

        $i86 = $i88 + $i87;

        $i239 = (int) $s83;

        $i85 = $i239 + $i89;

        specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: void resizeBounds(int,int)>($i86, $i85);

        goto label100;

     label034:
        $s109 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $f138 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float scaleY>;

        $f137 = (float) $s109;

        $f139 = $f138 * $f137;

        $i110 = (int) $f139;

        f152 = (float) $i110;

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $s111 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $s112 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $s113 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $b114 = virtualinvoke r1.<java.io.DataInputStream: byte readByte()>();

        $b115 = virtualinvoke r1.<java.io.DataInputStream: byte readByte()>();

        $b116 = virtualinvoke r1.<java.io.DataInputStream: byte readByte()>();

        $b117 = virtualinvoke r1.<java.io.DataInputStream: byte readByte()>();

        $s240 = (short) $b117;

        s183 = $s240 & 255;

        virtualinvoke r1.<java.io.DataInputStream: byte readByte()>();

        virtualinvoke r1.<java.io.DataInputStream: byte readByte()>();

        virtualinvoke r1.<java.io.DataInputStream: byte readByte()>();

        virtualinvoke r1.<java.io.DataInputStream: byte readByte()>();

        $i241 = (int) $b114;

        if $i241 <= 0 goto label035;

        $b184 = 2;

        goto label036;

     label035:
        $b184 = 0;

     label036:
        $b124 = $b184;

        $i242 = (int) $s113;

        if $i242 <= 400 goto label037;

        $z5 = 1;

        goto label038;

     label037:
        $z5 = 0;

     label038:
        $b125 = $b124 | $z5;

        $i118 = i168 - 9;

        $i126 = 2 * $i118;

        $r30 = newarray (byte)[$i126];

        i185 = 0;

        goto label040;

     label039:
        $b119 = virtualinvoke r1.<java.io.DataInputStream: byte readByte()>();

        $r30[i185] = $b119;

        i185 = i185 + 1;

     label040:
        if i185 < $i126 goto label039;

        $r49 = new java.lang.String;

        specialinvoke $r49.<java.lang.String: void <init>(byte[])>($r30);

        i186 = 0;

        goto label042;

     label041:
        i186 = i186 + 1;

     label042:
        $i187 = virtualinvoke $r49.<java.lang.String: int length()>();

        if i186 >= $i187 goto label043;

        $c122 = virtualinvoke $r49.<java.lang.String: char charAt(int)>(i186);

        $z0 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>($c122);

        if $z0 != 0 goto label041;

        $c123 = virtualinvoke $r49.<java.lang.String: char charAt(int)>(i186);

        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c123);

        if $z1 != 0 goto label041;

     label043:
        if i186 <= 0 goto label044;

        r38 = virtualinvoke $r49.<java.lang.String: java.lang.String substring(int,int)>(0, i186);

        goto label045;

     label044:
        r38 = "System";

     label045:
        $b120 = f152 cmpg 0.0F;

        $i243 = (int) $b120;

        if $i243 >= 0 goto label046;

        f152 = neg f152;

     label046:
        $r50 = new java.awt.Font;

        $i121 = (int) f152;

        specialinvoke $r50.<java.awt.Font: void <init>(java.lang.String,int,int)>(r38, $b125, $i121);

        $r28 = virtualinvoke $r50.<java.awt.Font: java.awt.Font deriveFont(float)>(f152);

        $r51 = new org.apache.batik.transcoder.wmf.tosvg.WMFFont;

        $i244 = (int) s183;

        $i245 = (int) $b115;

        $i246 = (int) $b116;

        $i247 = (int) $b114;

        $i248 = (int) $s113;

        $i249 = (int) $s112;

        $i250 = (int) $s111;

        specialinvoke $r51.<org.apache.batik.transcoder.wmf.tosvg.WMFFont: void <init>(java.awt.Font,int,int,int,int,int,int,int)>($r28, $i244, $i245, $i246, $i247, $i248, $i249, $i250);

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int addObjectAt(int,java.lang.Object,int)>(3, $r51, 0);

        goto label100;

     label047:
        i188 = 0;

        goto label049;

     label048:
        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        i188 = i188 + 1;

     label049:
        if i188 < i168 goto label048;

        $r12 = <org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: java.lang.Integer INTEGER_0>;

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int addObjectAt(int,java.lang.Object,int)>(6, $r12, 0);

        goto label100;

     label050:
        i189 = 0;

        goto label052;

     label051:
        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        i189 = i189 + 1;

     label052:
        if i189 < i168 goto label051;

        $r36 = <org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: java.lang.Integer INTEGER_0>;

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int addObjectAt(int,java.lang.Object,int)>(8, $r36, 0);

        goto label100;

     label053:
        $s150 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $i251 = (int) $s150;

        $i151 = $i251 & -2147483648;

        if $i151 == 0 goto label054;

        goto label100;

     label054:
        $i252 = (int) $s150;

        $r33 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: org.apache.batik.transcoder.wmf.tosvg.GdiObject getObject(int)>($i252);

        $z3 = $r33.<org.apache.batik.transcoder.wmf.tosvg.GdiObject: boolean used>;

        if $z3 != 0 goto label055;

        goto label100;

     label055:
        $i152 = $r33.<org.apache.batik.transcoder.wmf.tosvg.GdiObject: int type>;

        tableswitch($i152)
        {
            case 1: goto label056;
            case 2: goto label057;
            case 3: goto label058;
            case 4: goto label059;
            case 5: goto label060;
            default: goto label061;
        };

     label056:
        s166 = $s150;

        goto label061;

     label057:
        s165 = $s150;

        goto label061;

     label058:
        $r34 = $r33.<org.apache.batik.transcoder.wmf.tosvg.GdiObject: java.lang.Object obj>;

        $r35 = (org.apache.batik.transcoder.wmf.tosvg.WMFFont) $r34;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: org.apache.batik.transcoder.wmf.tosvg.WMFFont wf> = $r35;

        s167 = $s150;

        goto label061;

     label059:
        s166 = -1;

        goto label061;

     label060:
        s165 = -1;

     label061:
        goto label100;

     label062:
        $s146 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $i253 = (int) $s146;

        $r32 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: org.apache.batik.transcoder.wmf.tosvg.GdiObject getObject(int)>($i253);

        $i254 = (int) $s146;

        if $i254 != s165 goto label063;

        s165 = -1;

        goto label065;

     label063:
        $i255 = (int) $s146;

        if $i255 != s166 goto label064;

        s166 = -1;

        goto label065;

     label064:
        $i256 = (int) $s146;

        if $i256 != s167 goto label065;

        s167 = -1;

     label065:
        virtualinvoke $r32.<org.apache.batik.transcoder.wmf.tosvg.GdiObject: void clear()>();

        goto label100;

     label066:
        $s134 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $s135 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $f144 = (float) $s135;

        $f143 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float scaleXY>;

        $f145 = $f144 * $f143;

        i190 = (int) $f145;

        if s166 < 0 goto label067;

        $i137 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int startX>;

        $i136 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int startY>;

        specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: void resizeBounds(int,int)>($i137, $i136);

        $i257 = (int) $s134;

        specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: void resizeBounds(int,int)>(i190, $i257);

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: boolean firstEffectivePaint> = 0;

     label067:
        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int startX> = i190;

        $i258 = (int) $s134;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int startY> = $i258;

        goto label100;

     label068:
        $s131 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $i259 = (int) $s131;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int startY> = $i259;

        $s132 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $f141 = (float) $s132;

        $f140 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float scaleXY>;

        $f142 = $f141 * $f140;

        $i133 = (int) $f142;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int startX> = $i133;

        goto label100;

     label069:
        $s73 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $i260 = (int) $s73;

        r39 = newarray (int)[$i260];

        i191 = 0;

        goto label071;

     label070:
        $s74 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $i261 = (int) $s74;

        r39[i191] = $i261;

        $i75 = r39[i191];

        i191 = i191 + 1;

     label071:
        $i262 = (int) $s73;

        if i191 < $i262 goto label070;

        i192 = 0;

        goto label077;

     label072:
        i193 = 0;

        goto label076;

     label073:
        $s76 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $f114 = (float) $s76;

        $f113 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float scaleXY>;

        $f115 = $f114 * $f113;

        i194 = (int) $f115;

        $s77 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        if s165 >= 0 goto label074;

        if s166 < 0 goto label075;

     label074:
        $i263 = (int) $s77;

        specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: void resizeBounds(int,int)>(i194, $i263);

     label075:
        i193 = i193 + 1;

     label076:
        $i195 = r39[i192];

        if i193 < $i195 goto label073;

        i192 = i192 + 1;

     label077:
        $i264 = (int) $s73;

        if i192 < $i264 goto label072;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: boolean firstEffectivePaint> = 0;

        goto label100;

     label078:
        $s100 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $i265 = (int) $s100;

        $i101 = $i265 + 1;

        r40 = newarray (float)[$i101];

        $i266 = (int) $s100;

        $i102 = $i266 + 1;

        r41 = newarray (float)[$i102];

        i196 = 0;

        goto label080;

     label079:
        $s103 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $f132 = (float) $s103;

        $f131 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float scaleXY>;

        $f133 = $f132 * $f131;

        r40[i196] = $f133;

        $s104 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $f134 = (float) $s104;

        r41[i196] = $f134;

        i196 = i196 + 1;

     label080:
        $i267 = (int) $s100;

        if i196 < $i267 goto label079;

        $f135 = r40[0];

        $i268 = (int) $s100;

        r40[$i268] = $f135;

        $f136 = r41[0];

        $i269 = (int) $s100;

        r41[$i269] = $f136;

        $r52 = new org.apache.batik.ext.awt.geom.Polygon2D;

        $i270 = (int) $s100;

        specialinvoke $r52.<org.apache.batik.ext.awt.geom.Polygon2D: void <init>(float[],float[],int)>(r40, r41, $i270);

        specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: void paint(int,int,java.awt.Shape)>(s165, s166, $r52);

        goto label100;

     label081:
        $s97 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $i271 = (int) $s97;

        r42 = newarray (float)[$i271];

        $i272 = (int) $s97;

        r43 = newarray (float)[$i272];

        i197 = 0;

        goto label083;

     label082:
        $s98 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $f128 = (float) $s98;

        $f127 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float scaleXY>;

        $f129 = $f128 * $f127;

        r42[i197] = $f129;

        $s99 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $f130 = (float) $s99;

        r43[i197] = $f130;

        i197 = i197 + 1;

     label083:
        $i273 = (int) $s97;

        if i197 < $i273 goto label082;

        $r53 = new org.apache.batik.ext.awt.geom.Polyline2D;

        $i274 = (int) $s97;

        specialinvoke $r53.<org.apache.batik.ext.awt.geom.Polyline2D: void <init>(float[],float[],int)>(r42, r43, $i274);

        specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: void paintWithPen(int,java.awt.Shape)>(s166, $r53);

        goto label100;

     label084:
        $s91 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $s92 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $f118 = (float) $s92;

        $f117 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float scaleXY>;

        $f119 = $f118 * $f117;

        i198 = (int) $f119;

        $s93 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $s94 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $f121 = (float) $s94;

        $f120 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float scaleXY>;

        $f122 = $f121 * $f120;

        i199 = (int) $f122;

        $r54 = new java.awt.geom.Rectangle2D$Float;

        $f126 = (float) i199;

        $f125 = (float) $s93;

        $i95 = i198 - i199;

        $f124 = (float) $i95;

        $i275 = (int) $s91;

        $i276 = (int) $s93;

        $i96 = $i275 - $i276;

        $f123 = (float) $i96;

        specialinvoke $r54.<java.awt.geom.Rectangle2D$Float: void <init>(float,float,float,float)>($f126, $f125, $f124, $f123);

        specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: void paint(int,int,java.awt.Shape)>(s165, s166, $r54);

        goto label100;

     label085:
        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $s67 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $s68 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $f104 = (float) $s68;

        $f103 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float scaleXY>;

        $f105 = $f104 * $f103;

        i200 = (int) $f105;

        $s69 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $s70 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $f107 = (float) $s70;

        $f106 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float scaleXY>;

        $f108 = $f107 * $f106;

        i201 = (int) $f108;

        $r55 = new java.awt.geom.Rectangle2D$Float;

        $f112 = (float) i201;

        $f111 = (float) $s69;

        $i71 = i200 - i201;

        $f110 = (float) $i71;

        $i277 = (int) $s67;

        $i278 = (int) $s69;

        $i72 = $i277 - $i278;

        $f109 = (float) $i72;

        specialinvoke $r55.<java.awt.geom.Rectangle2D$Float: void <init>(float,float,float,float)>($f112, $f111, $f110, $f109);

        specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: void paint(int,int,java.awt.Shape)>(s165, s166, $r55);

        goto label100;

     label086:
        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $s55 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $s56 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $f88 = (float) $s56;

        $f87 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float scaleXY>;

        $f89 = $f88 * $f87;

        i202 = (int) $f89;

        $s57 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $s58 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $f91 = (float) $s58;

        $f90 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float scaleXY>;

        $f92 = $f91 * $f90;

        i203 = (int) $f92;

        $r56 = new java.awt.geom.Rectangle2D$Float;

        $f96 = (float) i203;

        $f95 = (float) $s57;

        $i59 = i202 - i203;

        $f94 = (float) $i59;

        $i279 = (int) $s55;

        $i280 = (int) $s57;

        $i60 = $i279 - $i280;

        $f93 = (float) $i60;

        specialinvoke $r56.<java.awt.geom.Rectangle2D$Float: void <init>(float,float,float,float)>($f96, $f95, $f94, $f93);

        specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: void paint(int,int,java.awt.Shape)>(s165, s166, $r56);

        goto label100;

     label087:
        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int readInt(java.io.DataInputStream)>(r1);

        $s61 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $s62 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $f98 = (float) $s62;

        $f97 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float scaleXY>;

        $f99 = $f98 * $f97;

        i204 = (int) $f99;

        $s63 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $f101 = (float) $s63;

        $f100 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float scaleXY>;

        $f102 = $f101 * $f100;

        i205 = (int) $f102;

        $s64 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        if s166 < 0 goto label088;

        $i281 = (int) $s64;

        specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: void resizeBounds(int,int)>(i205, $i281);

     label088:
        if s166 < 0 goto label089;

        $i66 = i205 + i204;

        $i282 = (int) $s64;

        $i283 = (int) $s61;

        $i65 = $i282 + $i283;

        specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: void resizeBounds(int,int)>($i66, $i65);

     label089:
        goto label100;

     label090:
        virtualinvoke r1.<java.io.DataInputStream: int readInt()>();

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $s16 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        f153 = (float) $s16;

        $s17 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $f29 = (float) $s17;

        $f28 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float scaleXY>;

        f154 = $f29 * $f28;

        $s18 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $f30 = (float) $s18;

        $f31 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float getVpWFactor()>();

        $f33 = $f30 * $f31;

        $i19 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int inch>;

        $f32 = (float) $i19;

        $f35 = $f33 * $f32;

        $f34 = <org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float PIXEL_PER_INCH>;

        f155 = $f35 / $f34;

        $s20 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $f36 = (float) $s20;

        $f37 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float getVpWFactor()>();

        $f39 = $f36 * $f37;

        $i21 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int inch>;

        $f38 = (float) $i21;

        $f41 = $f39 * $f38;

        $f40 = <org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float PIXEL_PER_INCH>;

        $f43 = $f41 / $f40;

        $f42 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float scaleXY>;

        f156 = $f43 * $f42;

        $f44 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float getVpWFactor()>();

        $f46 = f154 * $f44;

        $i22 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int inch>;

        $f45 = (float) $i22;

        $f48 = $f46 * $f45;

        $f47 = <org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float PIXEL_PER_INCH>;

        f157 = $f48 / $f47;

        $f49 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float getVpHFactor()>();

        $f51 = f153 * $f49;

        $i23 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int inch>;

        $f50 = (float) $i23;

        $f53 = $f51 * $f50;

        $f52 = <org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float PIXEL_PER_INCH>;

        f158 = $f53 / $f52;

        $i25 = (int) f156;

        $i24 = (int) f155;

        specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: void resizeImageBounds(int,int)>($i25, $i24);

        $f54 = f156 + f157;

        $i27 = (int) $f54;

        $f55 = f155 + f158;

        $i26 = (int) $f55;

        specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: void resizeImageBounds(int,int)>($i27, $i26);

        $i28 = 2 * i168;

        i206 = $i28 - 20;

        i207 = 0;

        goto label092;

     label091:
        virtualinvoke r1.<java.io.DataInputStream: byte readByte()>();

        i207 = i207 + 1;

     label092:
        if i207 < i206 goto label091;

        goto label100;

     label093:
        virtualinvoke r1.<java.io.DataInputStream: int readInt()>();

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $s2 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        f159 = (float) $s2;

        $s3 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $f1 = (float) $s3;

        $f0 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float scaleXY>;

        f160 = $f1 * $f0;

        $s4 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $f2 = (float) $s4;

        $f3 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float getVpHFactor()>();

        $f5 = $f2 * $f3;

        $i5 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int inch>;

        $f4 = (float) $i5;

        $f7 = $f5 * $f4;

        $f6 = <org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float PIXEL_PER_INCH>;

        f161 = $f7 / $f6;

        $s6 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $f8 = (float) $s6;

        $f9 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float getVpHFactor()>();

        $f11 = $f8 * $f9;

        $i7 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int inch>;

        $f10 = (float) $i7;

        $f13 = $f11 * $f10;

        $f12 = <org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float PIXEL_PER_INCH>;

        $f15 = $f13 / $f12;

        $f14 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float scaleXY>;

        f162 = $f15 * $f14;

        $f16 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float getVpWFactor()>();

        $f18 = f160 * $f16;

        $i8 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int inch>;

        $f17 = (float) $i8;

        $f20 = $f18 * $f17;

        $f19 = <org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float PIXEL_PER_INCH>;

        f163 = $f20 / $f19;

        $f21 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float getVpHFactor()>();

        $f23 = f159 * $f21;

        $i9 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int inch>;

        $f22 = (float) $i9;

        $f25 = $f23 * $f22;

        $f24 = <org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float PIXEL_PER_INCH>;

        f164 = $f25 / $f24;

        $i11 = (int) f162;

        $i10 = (int) f161;

        specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: void resizeImageBounds(int,int)>($i11, $i10);

        $f26 = f162 + f163;

        $i13 = (int) $f26;

        $f27 = f161 + f164;

        $i12 = (int) $f27;

        specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: void resizeImageBounds(int,int)>($i13, $i12);

        $i14 = 2 * i168;

        i208 = $i14 - 22;

        r44 = newarray (byte)[i208];

        i209 = 0;

        goto label095;

     label094:
        $b15 = virtualinvoke r1.<java.io.DataInputStream: byte readByte()>();

        r44[i209] = $b15;

        i209 = i209 + 1;

     label095:
        if i209 < i208 goto label094;

        goto label100;

     label096:
        virtualinvoke r1.<java.io.DataInputStream: int readInt()>();

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $s43 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $f58 = (float) $s43;

        $i44 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int inch>;

        $f57 = (float) $i44;

        $f60 = $f58 * $f57;

        $f59 = <org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float PIXEL_PER_INCH>;

        $f61 = $f60 / $f59;

        $f62 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float getVpHFactor()>();

        f165 = $f61 * $f62;

        $s45 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $f64 = (float) $s45;

        $i46 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int inch>;

        $f63 = (float) $i46;

        $f66 = $f64 * $f63;

        $f65 = <org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float PIXEL_PER_INCH>;

        $f67 = $f66 / $f65;

        $f68 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float getVpWFactor()>();

        $f70 = $f67 * $f68;

        $f69 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float scaleXY>;

        f166 = $f70 * $f69;

        $i47 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int inch>;

        $f72 = (float) $i47;

        $f71 = <org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float PIXEL_PER_INCH>;

        $f73 = $f72 / $f71;

        $f74 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float getVpHFactor()>();

        $f75 = $f73 * $f74;

        $s48 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $f76 = (float) $s48;

        f167 = $f75 * $f76;

        $i49 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int inch>;

        $f78 = (float) $i49;

        $f77 = <org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float PIXEL_PER_INCH>;

        $f79 = $f78 / $f77;

        $f80 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float getVpWFactor()>();

        $f81 = $f79 * $f80;

        $s50 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        $f82 = (float) $s50;

        $f84 = $f81 * $f82;

        $f83 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float scaleXY>;

        f168 = $f84 * $f83;

        $i52 = (int) f168;

        $i51 = (int) f167;

        specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: void resizeImageBounds(int,int)>($i52, $i51);

        $f85 = f168 + f166;

        $i54 = (int) $f85;

        $f86 = f167 + f165;

        $i53 = (int) $f86;

        specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: void resizeImageBounds(int,int)>($i54, $i53);

        goto label100;

     label097:
        i210 = 0;

        goto label099;

     label098:
        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: short readShort(java.io.DataInputStream)>(r1);

        i210 = i210 + 1;

     label099:
        if i210 < i168 goto label098;

     label100:
        if s164 > 0 goto label001;

     label101:
        $z4 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: boolean isAldus>;

        if $z4 != 0 goto label102;

        $i154 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int vpW>;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int width> = $i154;

        $i155 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int vpH>;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int height> = $i155;

        $i156 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int vpX>;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int right> = $i156;

        $i158 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int vpX>;

        $i157 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int vpW>;

        $i159 = $i158 + $i157;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int left> = $i159;

        $i160 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int vpY>;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int top> = $i160;

        $i162 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int vpY>;

        $i161 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int vpH>;

        $i163 = $i162 + $i161;

        r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int bottom> = $i163;

     label102:
        specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: void resetBounds()>();

        return 1;
    }

    public int getWidthBoundsPixels()
    {
        int $i0;
        org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties r0;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties;

        $i0 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bwidth>;

        return $i0;
    }

    public int getHeightBoundsPixels()
    {
        int $i0;
        org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties r0;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties;

        $i0 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bheight>;

        return $i0;
    }

    public int getWidthBoundsUnits()
    {
        org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties r0;
        int $i0, $i1, $i2;
        float $f0, $f1, $f2, $f3, $f4;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties;

        $i0 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int inch>;

        $f1 = (float) $i0;

        $i1 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bwidth>;

        $f0 = (float) $i1;

        $f3 = $f1 * $f0;

        $f2 = <org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float PIXEL_PER_INCH>;

        $f4 = $f3 / $f2;

        $i2 = (int) $f4;

        return $i2;
    }

    public int getHeightBoundsUnits()
    {
        org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties r0;
        int $i0, $i1, $i2;
        float $f0, $f1, $f2, $f3, $f4;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties;

        $i0 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int inch>;

        $f1 = (float) $i0;

        $i1 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bheight>;

        $f0 = (float) $i1;

        $f3 = $f1 * $f0;

        $f2 = <org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float PIXEL_PER_INCH>;

        $f4 = $f3 / $f2;

        $i2 = (int) $f4;

        return $i2;
    }

    public int getXOffset()
    {
        int $i0;
        org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties r0;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties;

        $i0 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bleft>;

        return $i0;
    }

    public int getYOffset()
    {
        int $i0;
        org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties r0;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties;

        $i0 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _btop>;

        return $i0;
    }

    private void resetBounds()
    {
        org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties r0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i63, $i65, $i67, $i69, $i71, $i73, $i75, $i77, $i79, $i81;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties;

        $i0 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int getWidthPixels()>();

        $f1 = (float) $i0;

        $i1 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int vpW>;

        $f0 = (float) $i1;

        $f2 = $f1 / $f0;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: float scale> = $f2;

        $i2 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bright>;

        $i63 = (int) -1;

        if $i2 == $i63 goto label01;

        $f24 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: float scale>;

        $i42 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int vpX>;

        $i41 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bright>;

        $i43 = $i42 + $i41;

        $f23 = (float) $i43;

        $f25 = $f24 * $f23;

        $i44 = (int) $f25;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bright> = $i44;

        $f27 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: float scale>;

        $i46 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int vpX>;

        $i45 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bleft>;

        $i47 = $i46 + $i45;

        $f26 = (float) $i47;

        $f28 = $f27 * $f26;

        $i48 = (int) $f28;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bleft> = $i48;

        $f30 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: float scale>;

        $i50 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int vpY>;

        $i49 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bbottom>;

        $i51 = $i50 + $i49;

        $f29 = (float) $i51;

        $f31 = $f30 * $f29;

        $i52 = (int) $f31;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bbottom> = $i52;

        $f33 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: float scale>;

        $i54 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int vpY>;

        $i53 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _btop>;

        $i55 = $i54 + $i53;

        $f32 = (float) $i55;

        $f34 = $f33 * $f32;

        $i56 = (int) $f34;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _btop> = $i56;

     label01:
        $i3 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _iright>;

        $i65 = (int) -1;

        if $i3 == $i65 goto label09;

        $i12 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _iright>;

        $f3 = (float) $i12;

        $i13 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int getWidthPixels()>();

        $f4 = (float) $i13;

        $f6 = $f3 * $f4;

        $i14 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int width>;

        $f5 = (float) $i14;

        $f7 = $f6 / $f5;

        $i15 = (int) $f7;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _iright> = $i15;

        $i16 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _ileft>;

        $f8 = (float) $i16;

        $i17 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int getWidthPixels()>();

        $f9 = (float) $i17;

        $f11 = $f8 * $f9;

        $i18 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int width>;

        $f10 = (float) $i18;

        $f12 = $f11 / $f10;

        $i19 = (int) $f12;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _ileft> = $i19;

        $i20 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _ibottom>;

        $f13 = (float) $i20;

        $i21 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int getWidthPixels()>();

        $f14 = (float) $i21;

        $f16 = $f13 * $f14;

        $i22 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int width>;

        $f15 = (float) $i22;

        $f17 = $f16 / $f15;

        $i23 = (int) $f17;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _ibottom> = $i23;

        $i24 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _itop>;

        $f18 = (float) $i24;

        $i25 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int getWidthPixels()>();

        $f19 = (float) $i25;

        $f21 = $f18 * $f19;

        $i26 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int width>;

        $f20 = (float) $i26;

        $f22 = $f21 / $f20;

        $i27 = (int) $f22;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _itop> = $i27;

        $i28 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bright>;

        $i67 = (int) -1;

        if $i28 == $i67 goto label02;

        $i40 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _iright>;

        $i39 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bright>;

        if $i40 <= $i39 goto label03;

     label02:
        $i29 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _iright>;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bright> = $i29;

     label03:
        $i57 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bleft>;

        $i69 = (int) -1;

        if $i57 == $i69 goto label04;

        $i38 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _ileft>;

        $i37 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bleft>;

        if $i38 >= $i37 goto label05;

     label04:
        $i30 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _ileft>;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bleft> = $i30;

     label05:
        $i58 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _btop>;

        $i71 = (int) -1;

        if $i58 == $i71 goto label06;

        $i36 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _itop>;

        $i35 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _btop>;

        if $i36 >= $i35 goto label07;

     label06:
        $i31 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _itop>;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _btop> = $i31;

     label07:
        $i59 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bbottom>;

        $i73 = (int) -1;

        if $i59 == $i73 goto label08;

        $i34 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _ibottom>;

        $i33 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bbottom>;

        if $i34 <= $i33 goto label09;

     label08:
        $i32 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _ibottom>;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bbottom> = $i32;

     label09:
        $i60 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bleft>;

        $i75 = (int) -1;

        if $i60 == $i75 goto label10;

        $i8 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bright>;

        $i77 = (int) -1;

        if $i8 == $i77 goto label10;

        $i10 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bright>;

        $i9 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bleft>;

        $i11 = $i10 - $i9;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bwidth> = $i11;

     label10:
        $i61 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _btop>;

        $i79 = (int) -1;

        if $i61 == $i79 goto label11;

        $i4 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bbottom>;

        $i81 = (int) -1;

        if $i4 == $i81 goto label11;

        $i6 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bbottom>;

        $i5 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _btop>;

        $i7 = $i6 - $i5;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bheight> = $i7;

     label11:
        return;
    }

    private void resizeBounds(int, int)
    {
        org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties r0;
        int $i0, i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i11, $i13, $i15, $i17;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties;

        i1 := @parameter0: int;

        i4 := @parameter1: int;

        $i0 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bleft>;

        $i11 = (int) -1;

        if $i0 != $i11 goto label1;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bleft> = i1;

        goto label2;

     label1:
        $i2 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bleft>;

        if i1 >= $i2 goto label2;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bleft> = i1;

     label2:
        $i7 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bright>;

        $i13 = (int) -1;

        if $i7 != $i13 goto label3;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bright> = i1;

        goto label4;

     label3:
        $i3 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bright>;

        if i1 <= $i3 goto label4;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bright> = i1;

     label4:
        $i8 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _btop>;

        $i15 = (int) -1;

        if $i8 != $i15 goto label5;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _btop> = i4;

        goto label6;

     label5:
        $i5 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _btop>;

        if i4 >= $i5 goto label6;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _btop> = i4;

     label6:
        $i9 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bbottom>;

        $i17 = (int) -1;

        if $i9 != $i17 goto label7;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bbottom> = i4;

        goto label8;

     label7:
        $i6 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bbottom>;

        if i4 <= $i6 goto label8;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _bbottom> = i4;

     label8:
        return;
    }

    private void resizeImageBounds(int, int)
    {
        org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties r0;
        int $i0, i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i11, $i13, $i15, $i17;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties;

        i1 := @parameter0: int;

        i4 := @parameter1: int;

        $i0 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _ileft>;

        $i11 = (int) -1;

        if $i0 != $i11 goto label1;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _ileft> = i1;

        goto label2;

     label1:
        $i2 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _ileft>;

        if i1 >= $i2 goto label2;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _ileft> = i1;

     label2:
        $i7 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _iright>;

        $i13 = (int) -1;

        if $i7 != $i13 goto label3;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _iright> = i1;

        goto label4;

     label3:
        $i3 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _iright>;

        if i1 <= $i3 goto label4;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _iright> = i1;

     label4:
        $i8 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _itop>;

        $i15 = (int) -1;

        if $i8 != $i15 goto label5;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _itop> = i4;

        goto label6;

     label5:
        $i5 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _itop>;

        if i4 >= $i5 goto label6;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _itop> = i4;

     label6:
        $i9 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _ibottom>;

        $i17 = (int) -1;

        if $i9 != $i17 goto label7;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _ibottom> = i4;

        goto label8;

     label7:
        $i6 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _ibottom>;

        if i4 <= $i6 goto label8;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int _ibottom> = i4;

     label8:
        return;
    }

    private java.awt.Color getColorFromObject(int)
    {
        java.awt.Color $r3;
        org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties r0;
        int i0;
        java.lang.Object $r2;
        org.apache.batik.transcoder.wmf.tosvg.GdiObject $r1;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r1 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: org.apache.batik.transcoder.wmf.tosvg.GdiObject getObject(int)>(i0);

        $r2 = $r1.<org.apache.batik.transcoder.wmf.tosvg.GdiObject: java.lang.Object obj>;

        $r3 = (java.awt.Color) $r2;

        return $r3;

     label1:
        return null;
    }

    private void paint(int, int, java.awt.Shape)
    {
        java.awt.Color $r3, r4;
        java.awt.Rectangle $r2;
        org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1;
        double $d0, $d1, $d2, $d3;
        java.awt.Shape r1;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.awt.Shape;

        if i0 >= 0 goto label1;

        if i1 < 0 goto label5;

     label1:
        if i0 < 0 goto label2;

        r4 = specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: java.awt.Color getColorFromObject(int)>(i0);

        goto label3;

     label2:
        r4 = specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: java.awt.Color getColorFromObject(int)>(i1);

     label3:
        $z0 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: boolean firstEffectivePaint>;

        if $z0 == 0 goto label4;

        $r3 = <java.awt.Color: java.awt.Color white>;

        $z1 = virtualinvoke r4.<java.awt.Color: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label5;

     label4:
        $r2 = interfaceinvoke r1.<java.awt.Shape: java.awt.Rectangle getBounds()>();

        $d0 = virtualinvoke $r2.<java.awt.geom.RectangularShape: double getMinX()>();

        $i2 = (int) $d0;

        $d1 = virtualinvoke $r2.<java.awt.geom.RectangularShape: double getMinY()>();

        $i3 = (int) $d1;

        specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: void resizeBounds(int,int)>($i2, $i3);

        $d2 = virtualinvoke $r2.<java.awt.geom.RectangularShape: double getMaxX()>();

        $i4 = (int) $d2;

        $d3 = virtualinvoke $r2.<java.awt.geom.RectangularShape: double getMaxY()>();

        $i5 = (int) $d3;

        specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: void resizeBounds(int,int)>($i4, $i5);

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: boolean firstEffectivePaint> = 0;

     label5:
        return;
    }

    private void paintWithPen(int, java.awt.Shape)
    {
        java.awt.Color $r1, $r4;
        java.awt.Rectangle $r3;
        org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties r0;
        int i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1;
        double $d0, $d1, $d2, $d3;
        java.awt.Shape r2;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties;

        i0 := @parameter0: int;

        r2 := @parameter1: java.awt.Shape;

        if i0 < 0 goto label2;

        $r1 = specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: java.awt.Color getColorFromObject(int)>(i0);

        $z0 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: boolean firstEffectivePaint>;

        if $z0 == 0 goto label1;

        $r4 = <java.awt.Color: java.awt.Color white>;

        $z1 = virtualinvoke $r1.<java.awt.Color: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label2;

     label1:
        $r3 = interfaceinvoke r2.<java.awt.Shape: java.awt.Rectangle getBounds()>();

        $d0 = virtualinvoke $r3.<java.awt.geom.RectangularShape: double getMinX()>();

        $i1 = (int) $d0;

        $d1 = virtualinvoke $r3.<java.awt.geom.RectangularShape: double getMinY()>();

        $i2 = (int) $d1;

        specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: void resizeBounds(int,int)>($i1, $i2);

        $d2 = virtualinvoke $r3.<java.awt.geom.RectangularShape: double getMaxX()>();

        $i3 = (int) $d2;

        $d3 = virtualinvoke $r3.<java.awt.geom.RectangularShape: double getMaxY()>();

        $i4 = (int) $d3;

        specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: void resizeBounds(int,int)>($i3, $i4);

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: boolean firstEffectivePaint> = 0;

     label2:
        return;
    }

    private float getVerticalAlignmentValue(java.awt.font.TextLayout, int)
    {
        java.awt.font.TextLayout r0;
        org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties r1;
        int i0;
        float $f0, $f1, $f2, $f3, $f4;

        r1 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties;

        r0 := @parameter0: java.awt.font.TextLayout;

        i0 := @parameter1: int;

        if i0 != 24 goto label1;

        $f3 = virtualinvoke r0.<java.awt.font.TextLayout: float getAscent()>();

        $f4 = neg $f3;

        return $f4;

     label1:
        if i0 != 0 goto label2;

        $f0 = virtualinvoke r0.<java.awt.font.TextLayout: float getAscent()>();

        $f1 = virtualinvoke r0.<java.awt.font.TextLayout: float getDescent()>();

        $f2 = $f0 + $f1;

        return $f2;

     label2:
        return 0.0F;
    }

    static void <clinit>()
    {
        java.awt.font.FontRenderContext $r1;
        java.awt.geom.AffineTransform $r2;
        java.lang.Integer $r0;

        <org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int OBJ_REGION> = 8;

        <org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int OBJ_BITMAP> = 7;

        <org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int PALETTE> = 6;

        <org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int NULL_BRUSH> = 5;

        <org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int NULL_PEN> = 4;

        <org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int FONT> = 3;

        <org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int BRUSH> = 2;

        <org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: int PEN> = 1;

        $r0 = new java.lang.Integer;

        specialinvoke $r0.<java.lang.Integer: void <init>(int)>(0);

        <org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: java.lang.Integer INTEGER_0> = $r0;

        $r1 = new java.awt.font.FontRenderContext;

        $r2 = new java.awt.geom.AffineTransform;

        specialinvoke $r2.<java.awt.geom.AffineTransform: void <init>()>();

        specialinvoke $r1.<java.awt.font.FontRenderContext: void <init>(java.awt.geom.AffineTransform,boolean,boolean)>($r2, 0, 1);

        <org.apache.batik.transcoder.wmf.tosvg.WMFHeaderProperties: java.awt.font.FontRenderContext fontCtx> = $r1;

        return;
    }
}
