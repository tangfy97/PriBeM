class ucar.nc2.ft.point.remote.RemoteStationCollection$RemoteStationFeatureImpl extends ucar.nc2.ft.point.StationFeatureImpl
{
    ucar.nc2.ft.point.remote.RemotePointFeatureIterator riter;
    ucar.nc2.units.DateRange dateRange;
    final ucar.nc2.ft.point.remote.RemoteStationCollection this$0;

    void <init>(ucar.nc2.ft.point.remote.RemoteStationCollection, ucar.unidata.geoloc.Station, ucar.nc2.units.DateRange)
    {
        ucar.nc2.units.DateRange r3;
        ucar.nc2.ft.point.remote.RemoteStationCollection$RemoteStationFeatureImpl r0;
        int $i1;
        ucar.unidata.geoloc.Station r2;
        ucar.nc2.ft.point.remote.RemoteStationCollection r1;

        r0 := @this: ucar.nc2.ft.point.remote.RemoteStationCollection$RemoteStationFeatureImpl;

        r1 := @parameter0: ucar.nc2.ft.point.remote.RemoteStationCollection;

        r2 := @parameter1: ucar.unidata.geoloc.Station;

        r3 := @parameter2: ucar.nc2.units.DateRange;

        r0.<ucar.nc2.ft.point.remote.RemoteStationCollection$RemoteStationFeatureImpl: ucar.nc2.ft.point.remote.RemoteStationCollection this$0> = r1;

        $i1 = (int) -1;

        specialinvoke r0.<ucar.nc2.ft.point.StationFeatureImpl: void <init>(ucar.unidata.geoloc.Station,ucar.nc2.units.DateUnit,int)>(r2, null, $i1);

        r0.<ucar.nc2.ft.point.remote.RemoteStationCollection$RemoteStationFeatureImpl: ucar.nc2.units.DateRange dateRange> = r3;

        return;
    }

    public ucar.nc2.ft.StationTimeSeriesFeature subset(ucar.nc2.units.DateRange) throws java.io.IOException
    {
        ucar.nc2.units.DateRange r0;
        ucar.nc2.ft.point.remote.RemoteStationCollection$RemoteStationFeatureImpl $r1, r2;
        ucar.unidata.geoloc.Station $r3;
        ucar.nc2.ft.point.remote.RemoteStationCollection $r4;

        r2 := @this: ucar.nc2.ft.point.remote.RemoteStationCollection$RemoteStationFeatureImpl;

        r0 := @parameter0: ucar.nc2.units.DateRange;

        if r0 != null goto label1;

        return r2;

     label1:
        $r1 = new ucar.nc2.ft.point.remote.RemoteStationCollection$RemoteStationFeatureImpl;

        $r4 = r2.<ucar.nc2.ft.point.remote.RemoteStationCollection$RemoteStationFeatureImpl: ucar.nc2.ft.point.remote.RemoteStationCollection this$0>;

        $r3 = r2.<ucar.nc2.ft.point.remote.RemoteStationCollection$RemoteStationFeatureImpl: ucar.unidata.geoloc.Station s>;

        specialinvoke $r1.<ucar.nc2.ft.point.remote.RemoteStationCollection$RemoteStationFeatureImpl: void <init>(ucar.nc2.ft.point.remote.RemoteStationCollection,ucar.unidata.geoloc.Station,ucar.nc2.units.DateRange)>($r4, $r3, r0);

        return $r1;
    }

    public ucar.nc2.ft.PointFeatureCollection subset(ucar.unidata.geoloc.LatLonRect, ucar.nc2.units.DateRange) throws java.io.IOException
    {
        ucar.unidata.geoloc.LatLonRect r0;
        ucar.unidata.geoloc.LatLonPoint $r5;
        ucar.nc2.units.DateRange r2;
        ucar.nc2.ft.point.remote.RemoteStationCollection$RemoteStationFeatureImpl r1;
        ucar.nc2.ft.StationTimeSeriesFeature $r3;
        ucar.unidata.geoloc.Station $r4;
        boolean $z0;

        r1 := @this: ucar.nc2.ft.point.remote.RemoteStationCollection$RemoteStationFeatureImpl;

        r0 := @parameter0: ucar.unidata.geoloc.LatLonRect;

        r2 := @parameter1: ucar.nc2.units.DateRange;

        if r0 == null goto label2;

        $r4 = r1.<ucar.nc2.ft.point.remote.RemoteStationCollection$RemoteStationFeatureImpl: ucar.unidata.geoloc.Station s>;

        $r5 = interfaceinvoke $r4.<ucar.unidata.geoloc.Station: ucar.unidata.geoloc.LatLonPoint getLatLon()>();

        $z0 = virtualinvoke r0.<ucar.unidata.geoloc.LatLonRect: boolean contains(ucar.unidata.geoloc.LatLonPoint)>($r5);

        if $z0 != 0 goto label1;

        return null;

     label1:
        if r2 != null goto label2;

        return r1;

     label2:
        $r3 = virtualinvoke r1.<ucar.nc2.ft.point.remote.RemoteStationCollection$RemoteStationFeatureImpl: ucar.nc2.ft.StationTimeSeriesFeature subset(ucar.nc2.units.DateRange)>(r2);

        return $r3;
    }

    public ucar.nc2.ft.PointFeatureIterator getPointFeatureIterator(int) throws java.io.IOException
    {
        byte[] r15;
        ucar.nc2.ft.point.remote.RemotePointFeatureIterator $r17, $r19, $r20;
        ucar.nc2.ft.point.remote.PointStream$ProtobufPointFeatureMaker $r18;
        ucar.nc2.units.DateRange $r7;
        java.lang.StringBuilder $r0, $r1, $r5, $r22, $r23, $r24;
        ucar.nc2.ft.point.remote.PointStream$MessageType $r12, $r13, $r14;
        ucar.nc2.ft.point.PointIteratorEmpty $r26;
        java.lang.Throwable $r27;
        ucar.nc2.ft.point.remote.RemoteStationCollection$RemoteStationFeatureImpl r2;
        ucar.unidata.geoloc.Station $r3;
        int $i0, i1;
        java.lang.String $r4, $r6, $r8, $r10, $r25, $r29;
        ucar.nc2.ft.point.remote.RemoteStationCollection $r9;
        java.io.IOException $r28;
        java.lang.RuntimeException $r21;
        ucar.nc2.ft.point.remote.PointStreamProto$PointFeatureCollection $r16;
        java.io.InputStream $r11, r30;

        r2 := @this: ucar.nc2.ft.point.remote.RemoteStationCollection$RemoteStationFeatureImpl;

        i1 := @parameter0: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stn=");

        $r3 = r2.<ucar.nc2.ft.point.remote.RemoteStationCollection$RemoteStationFeatureImpl: ucar.unidata.geoloc.Station s>;

        $r4 = interfaceinvoke $r3.<ucar.unidata.geoloc.Station: java.lang.String getName()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = r2.<ucar.nc2.ft.point.remote.RemoteStationCollection$RemoteStationFeatureImpl: ucar.nc2.units.DateRange dateRange>;

        $r8 = staticinvoke <ucar.nc2.ft.point.remote.PointDatasetRemote: java.lang.String makeQuery(java.lang.String,ucar.unidata.geoloc.LatLonRect,ucar.nc2.units.DateRange)>($r6, null, $r7);

        r30 = null;

     label1:
        $r9 = r2.<ucar.nc2.ft.point.remote.RemoteStationCollection$RemoteStationFeatureImpl: ucar.nc2.ft.point.remote.RemoteStationCollection this$0>;

        $r10 = staticinvoke <ucar.nc2.ft.point.remote.RemoteStationCollection: java.lang.String access$200(ucar.nc2.ft.point.remote.RemoteStationCollection)>($r9);

        $r11 = staticinvoke <ucar.nc2.stream.CdmRemote: java.io.InputStream sendQuery(java.lang.String,java.lang.String)>($r10, $r8);

        r30 = $r11;

        $r12 = staticinvoke <ucar.nc2.ft.point.remote.PointStream: ucar.nc2.ft.point.remote.PointStream$MessageType readMagic(java.io.InputStream)>($r11);

        $r13 = <ucar.nc2.ft.point.remote.PointStream$MessageType: ucar.nc2.ft.point.remote.PointStream$MessageType End>;

        if $r12 != $r13 goto label3;

        virtualinvoke $r11.<java.io.InputStream: void close()>();

        $r26 = new ucar.nc2.ft.point.PointIteratorEmpty;

        specialinvoke $r26.<ucar.nc2.ft.point.PointIteratorEmpty: void <init>()>();

     label2:
        return $r26;

     label3:
        $r14 = <ucar.nc2.ft.point.remote.PointStream$MessageType: ucar.nc2.ft.point.remote.PointStream$MessageType PointFeatureCollection>;

        if $r12 == $r14 goto label4;

        $r21 = new java.lang.RuntimeException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Station Request: bad response = ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.RuntimeException: void <init>(java.lang.String)>($r25);

        throw $r21;

     label4:
        $i0 = staticinvoke <ucar.nc2.stream.NcStream: int readVInt(java.io.InputStream)>($r11);

        r15 = newarray (byte)[$i0];

        staticinvoke <ucar.nc2.stream.NcStream: int readFully(java.io.InputStream,byte[])>($r11, r15);

        $r16 = staticinvoke <ucar.nc2.ft.point.remote.PointStreamProto$PointFeatureCollection: ucar.nc2.ft.point.remote.PointStreamProto$PointFeatureCollection parseFrom(byte[])>(r15);

        $r17 = new ucar.nc2.ft.point.remote.RemotePointFeatureIterator;

        $r18 = new ucar.nc2.ft.point.remote.PointStream$ProtobufPointFeatureMaker;

        specialinvoke $r18.<ucar.nc2.ft.point.remote.PointStream$ProtobufPointFeatureMaker: void <init>(ucar.nc2.ft.point.remote.PointStreamProto$PointFeatureCollection)>($r16);

        specialinvoke $r17.<ucar.nc2.ft.point.remote.RemotePointFeatureIterator: void <init>(java.io.InputStream,ucar.nc2.ft.point.remote.FeatureMaker)>($r11, $r18);

        r2.<ucar.nc2.ft.point.remote.RemoteStationCollection$RemoteStationFeatureImpl: ucar.nc2.ft.point.remote.RemotePointFeatureIterator riter> = $r17;

        $r19 = r2.<ucar.nc2.ft.point.remote.RemoteStationCollection$RemoteStationFeatureImpl: ucar.nc2.ft.point.remote.RemotePointFeatureIterator riter>;

        virtualinvoke $r19.<ucar.nc2.ft.point.remote.RemotePointFeatureIterator: void setCalculateBounds(ucar.nc2.ft.PointFeatureCollection)>(r2);

        $r20 = r2.<ucar.nc2.ft.point.remote.RemoteStationCollection$RemoteStationFeatureImpl: ucar.nc2.ft.point.remote.RemotePointFeatureIterator riter>;

     label5:
        return $r20;

     label6:
        $r27 := @caughtexception;

        if r30 == null goto label7;

        virtualinvoke r30.<java.io.InputStream: void close()>();

     label7:
        $r28 = new java.io.IOException;

        $r29 = virtualinvoke $r27.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r28.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>($r29, $r27);

        throw $r28;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
    }
}
