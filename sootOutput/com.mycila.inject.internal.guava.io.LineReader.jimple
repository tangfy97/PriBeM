public final class com.mycila.inject.internal.guava.io.LineReader extends java.lang.Object
{
    private final java.lang.Readable readable;
    private final java.io.Reader reader;
    private final char[] buf;
    private final java.nio.CharBuffer cbuf;
    private final java.util.Queue lines;
    private final com.mycila.inject.internal.guava.io.LineBuffer lineBuf;

    public void <init>(java.lang.Readable)
    {
        com.mycila.inject.internal.guava.io.LineReader$1 $r5;
        com.mycila.inject.internal.guava.io.LineReader r0;
        java.nio.CharBuffer $r3;
        java.io.Reader $r7;
        java.lang.Readable r6;
        char[] $r1, $r2;
        java.util.LinkedList $r4;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.io.LineReader;

        r6 := @parameter0: java.lang.Readable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (char)[4096];

        r0.<com.mycila.inject.internal.guava.io.LineReader: char[] buf> = $r1;

        $r2 = r0.<com.mycila.inject.internal.guava.io.LineReader: char[] buf>;

        $r3 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(char[])>($r2);

        r0.<com.mycila.inject.internal.guava.io.LineReader: java.nio.CharBuffer cbuf> = $r3;

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        r0.<com.mycila.inject.internal.guava.io.LineReader: java.util.Queue lines> = $r4;

        $r5 = new com.mycila.inject.internal.guava.io.LineReader$1;

        specialinvoke $r5.<com.mycila.inject.internal.guava.io.LineReader$1: void <init>(com.mycila.inject.internal.guava.io.LineReader)>(r0);

        r0.<com.mycila.inject.internal.guava.io.LineReader: com.mycila.inject.internal.guava.io.LineBuffer lineBuf> = $r5;

        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r6);

        r0.<com.mycila.inject.internal.guava.io.LineReader: java.lang.Readable readable> = r6;

        $z0 = r6 instanceof java.io.Reader;

        if $z0 == 0 goto label1;

        $r7 = (java.io.Reader) r6;

        goto label2;

     label1:
        $r7 = null;

     label2:
        r0.<com.mycila.inject.internal.guava.io.LineReader: java.io.Reader reader> = $r7;

        return;
    }

    public java.lang.String readLine() throws java.io.IOException
    {
        com.mycila.inject.internal.guava.io.LineReader r0;
        java.lang.Readable $r9;
        int $i0, $i1, $i3;
        java.lang.String $r5;
        java.nio.CharBuffer $r6, $r8;
        com.mycila.inject.internal.guava.io.LineBuffer $r11, $r12;
        java.io.Reader $r7, $r15;
        char[] $r10, $r13, $r14;
        java.lang.Object $r2, $r4;
        java.util.Queue $r1, $r3;

        r0 := @this: com.mycila.inject.internal.guava.io.LineReader;

     label1:
        $r1 = r0.<com.mycila.inject.internal.guava.io.LineReader: java.util.Queue lines>;

        $r2 = interfaceinvoke $r1.<java.util.Queue: java.lang.Object peek()>();

        if $r2 != null goto label5;

        $r6 = r0.<com.mycila.inject.internal.guava.io.LineReader: java.nio.CharBuffer cbuf>;

        virtualinvoke $r6.<java.nio.CharBuffer: java.nio.Buffer clear()>();

        $r7 = r0.<com.mycila.inject.internal.guava.io.LineReader: java.io.Reader reader>;

        if $r7 == null goto label2;

        $r15 = r0.<com.mycila.inject.internal.guava.io.LineReader: java.io.Reader reader>;

        $r14 = r0.<com.mycila.inject.internal.guava.io.LineReader: char[] buf>;

        $r13 = r0.<com.mycila.inject.internal.guava.io.LineReader: char[] buf>;

        $i0 = lengthof $r13;

        $i1 = virtualinvoke $r15.<java.io.Reader: int read(char[],int,int)>($r14, 0, $i0);

        goto label3;

     label2:
        $r9 = r0.<com.mycila.inject.internal.guava.io.LineReader: java.lang.Readable readable>;

        $r8 = r0.<com.mycila.inject.internal.guava.io.LineReader: java.nio.CharBuffer cbuf>;

        $i1 = interfaceinvoke $r9.<java.lang.Readable: int read(java.nio.CharBuffer)>($r8);

     label3:
        $i3 = (int) -1;

        if $i1 != $i3 goto label4;

        $r12 = r0.<com.mycila.inject.internal.guava.io.LineReader: com.mycila.inject.internal.guava.io.LineBuffer lineBuf>;

        virtualinvoke $r12.<com.mycila.inject.internal.guava.io.LineBuffer: void finish()>();

        goto label5;

     label4:
        $r11 = r0.<com.mycila.inject.internal.guava.io.LineReader: com.mycila.inject.internal.guava.io.LineBuffer lineBuf>;

        $r10 = r0.<com.mycila.inject.internal.guava.io.LineReader: char[] buf>;

        virtualinvoke $r11.<com.mycila.inject.internal.guava.io.LineBuffer: void add(char[],int,int)>($r10, 0, $i1);

        goto label1;

     label5:
        $r3 = r0.<com.mycila.inject.internal.guava.io.LineReader: java.util.Queue lines>;

        $r4 = interfaceinvoke $r3.<java.util.Queue: java.lang.Object poll()>();

        $r5 = (java.lang.String) $r4;

        return $r5;
    }

    static java.util.Queue access$000(com.mycila.inject.internal.guava.io.LineReader)
    {
        java.util.Queue $r1;
        com.mycila.inject.internal.guava.io.LineReader r0;

        r0 := @parameter0: com.mycila.inject.internal.guava.io.LineReader;

        $r1 = r0.<com.mycila.inject.internal.guava.io.LineReader: java.util.Queue lines>;

        return $r1;
    }
}
