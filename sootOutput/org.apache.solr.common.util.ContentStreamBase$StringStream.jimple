public class org.apache.solr.common.util.ContentStreamBase$StringStream extends org.apache.solr.common.util.ContentStreamBase
{
    private final java.lang.String str;

    public void <init>(java.lang.String)
    {
        java.lang.Long $r2;
        org.apache.solr.common.util.ContentStreamBase$StringStream r0;
        int $i0;
        long $l1;
        java.lang.String r1;

        r0 := @this: org.apache.solr.common.util.ContentStreamBase$StringStream;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.solr.common.util.ContentStreamBase: void <init>()>();

        r0.<org.apache.solr.common.util.ContentStreamBase$StringStream: java.lang.String str> = r1;

        r0.<org.apache.solr.common.util.ContentStreamBase$StringStream: java.lang.String contentType> = null;

        r0.<org.apache.solr.common.util.ContentStreamBase$StringStream: java.lang.String name> = null;

        $r2 = new java.lang.Long;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $l1 = (long) $i0;

        specialinvoke $r2.<java.lang.Long: void <init>(long)>($l1);

        r0.<org.apache.solr.common.util.ContentStreamBase$StringStream: java.lang.Long size> = $r2;

        r0.<org.apache.solr.common.util.ContentStreamBase$StringStream: java.lang.String sourceInfo> = "string";

        return;
    }

    public java.lang.String getContentType()
    {
        char $c1;
        org.apache.solr.common.util.ContentStreamBase$StringStream r0;
        int $i0, $i2, $i3;
        java.lang.String $r1, $r2, $r3, $r4;

        r0 := @this: org.apache.solr.common.util.ContentStreamBase$StringStream;

        $r1 = r0.<org.apache.solr.common.util.ContentStreamBase$StringStream: java.lang.String contentType>;

        if $r1 != null goto label2;

        $r2 = r0.<org.apache.solr.common.util.ContentStreamBase$StringStream: java.lang.String str>;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        $r3 = r0.<org.apache.solr.common.util.ContentStreamBase$StringStream: java.lang.String str>;

        $c1 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(0);

        $i2 = (int) $c1;

        if $i2 != 60 goto label1;

        return "application/xml";

     label1:
        $i3 = (int) $c1;

        if $i3 != 123 goto label2;

        return "application/json";

     label2:
        $r4 = r0.<org.apache.solr.common.util.ContentStreamBase$StringStream: java.lang.String contentType>;

        return $r4;
    }

    public java.io.InputStream getStream() throws java.io.IOException
    {
        byte[] $r3;
        java.io.ByteArrayInputStream $r0;
        org.apache.solr.common.util.ContentStreamBase$StringStream r1;
        java.lang.String $r2;

        r1 := @this: org.apache.solr.common.util.ContentStreamBase$StringStream;

        $r0 = new java.io.ByteArrayInputStream;

        $r2 = r1.<org.apache.solr.common.util.ContentStreamBase$StringStream: java.lang.String str>;

        $r3 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>("utf-8");

        specialinvoke $r0.<java.io.ByteArrayInputStream: void <init>(byte[])>($r3);

        return $r0;
    }

    public java.io.Reader getReader() throws java.io.IOException
    {
        java.io.Reader $r5;
        java.io.InputStreamReader $r7;
        java.io.StringReader $r6;
        org.apache.solr.common.util.ContentStreamBase$StringStream r0;
        java.lang.String $r1, $r2, $r4;
        java.io.InputStream $r3;

        r0 := @this: org.apache.solr.common.util.ContentStreamBase$StringStream;

        $r1 = r0.<org.apache.solr.common.util.ContentStreamBase$StringStream: java.lang.String contentType>;

        $r2 = staticinvoke <org.apache.solr.common.util.ContentStreamBase$StringStream: java.lang.String getCharsetFromContentType(java.lang.String)>($r1);

        if $r2 != null goto label1;

        $r6 = new java.io.StringReader;

        $r5 = $r6;

        $r4 = r0.<org.apache.solr.common.util.ContentStreamBase$StringStream: java.lang.String str>;

        specialinvoke $r6.<java.io.StringReader: void <init>(java.lang.String)>($r4);

        goto label2;

     label1:
        $r7 = new java.io.InputStreamReader;

        $r5 = $r7;

        $r3 = virtualinvoke r0.<org.apache.solr.common.util.ContentStreamBase$StringStream: java.io.InputStream getStream()>();

        specialinvoke $r7.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r3, $r2);

     label2:
        return $r5;
    }
}
