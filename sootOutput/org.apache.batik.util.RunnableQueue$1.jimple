class org.apache.batik.util.RunnableQueue$1 extends java.lang.Object implements java.util.Iterator
{
    org.apache.batik.util.RunnableQueue$Link head;
    org.apache.batik.util.RunnableQueue$Link link;
    private final org.apache.batik.util.RunnableQueue this$0;

    void <init>(org.apache.batik.util.RunnableQueue)
    {
        org.apache.batik.util.DoublyLinkedList $r3;
        org.apache.batik.util.RunnableQueue r1, $r2;
        org.apache.batik.util.DoublyLinkedList$Node $r4;
        org.apache.batik.util.RunnableQueue$1 r0;
        org.apache.batik.util.RunnableQueue$Link $r5;

        r0 := @this: org.apache.batik.util.RunnableQueue$1;

        r1 := @parameter0: org.apache.batik.util.RunnableQueue;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.util.RunnableQueue$1: org.apache.batik.util.RunnableQueue this$0> = r1;

        $r2 = r0.<org.apache.batik.util.RunnableQueue$1: org.apache.batik.util.RunnableQueue this$0>;

        $r3 = staticinvoke <org.apache.batik.util.RunnableQueue: org.apache.batik.util.DoublyLinkedList access$200(org.apache.batik.util.RunnableQueue)>($r2);

        $r4 = virtualinvoke $r3.<org.apache.batik.util.DoublyLinkedList: org.apache.batik.util.DoublyLinkedList$Node getHead()>();

        $r5 = (org.apache.batik.util.RunnableQueue$Link) $r4;

        r0.<org.apache.batik.util.RunnableQueue$1: org.apache.batik.util.RunnableQueue$Link head> = $r5;

        return;
    }

    public boolean hasNext()
    {
        org.apache.batik.util.RunnableQueue$1 r0;
        org.apache.batik.util.RunnableQueue$Link $r1, $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.batik.util.RunnableQueue$1;

        $r1 = r0.<org.apache.batik.util.RunnableQueue$1: org.apache.batik.util.RunnableQueue$Link head>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<org.apache.batik.util.RunnableQueue$1: org.apache.batik.util.RunnableQueue$Link link>;

        if $r2 != null goto label2;

        return 1;

     label2:
        $r4 = r0.<org.apache.batik.util.RunnableQueue$1: org.apache.batik.util.RunnableQueue$Link link>;

        $r3 = r0.<org.apache.batik.util.RunnableQueue$1: org.apache.batik.util.RunnableQueue$Link head>;

        if $r4 == $r3 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public java.lang.Object next()
    {
        java.lang.Runnable $r7, $r15;
        org.apache.batik.util.RunnableQueue$Link $r1, $r3, $r4, $r5, $r6, $r8, $r10, $r11, $r13, $r14;
        java.util.NoSuchElementException $r2;
        org.apache.batik.util.RunnableQueue$1 r0;
        org.apache.batik.util.DoublyLinkedList$Node $r9, $r12;

        r0 := @this: org.apache.batik.util.RunnableQueue$1;

        $r1 = r0.<org.apache.batik.util.RunnableQueue$1: org.apache.batik.util.RunnableQueue$Link head>;

        if $r1 == null goto label1;

        $r4 = r0.<org.apache.batik.util.RunnableQueue$1: org.apache.batik.util.RunnableQueue$Link head>;

        $r3 = r0.<org.apache.batik.util.RunnableQueue$1: org.apache.batik.util.RunnableQueue$Link link>;

        if $r4 != $r3 goto label2;

     label1:
        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>()>();

        throw $r2;

     label2:
        $r5 = r0.<org.apache.batik.util.RunnableQueue$1: org.apache.batik.util.RunnableQueue$Link link>;

        if $r5 != null goto label3;

        $r11 = r0.<org.apache.batik.util.RunnableQueue$1: org.apache.batik.util.RunnableQueue$Link head>;

        $r12 = virtualinvoke $r11.<org.apache.batik.util.DoublyLinkedList$Node: org.apache.batik.util.DoublyLinkedList$Node getNext()>();

        $r13 = (org.apache.batik.util.RunnableQueue$Link) $r12;

        r0.<org.apache.batik.util.RunnableQueue$1: org.apache.batik.util.RunnableQueue$Link link> = $r13;

        $r14 = r0.<org.apache.batik.util.RunnableQueue$1: org.apache.batik.util.RunnableQueue$Link head>;

        $r15 = staticinvoke <org.apache.batik.util.RunnableQueue$Link: java.lang.Runnable access$100(org.apache.batik.util.RunnableQueue$Link)>($r14);

        return $r15;

     label3:
        $r6 = r0.<org.apache.batik.util.RunnableQueue$1: org.apache.batik.util.RunnableQueue$Link link>;

        $r7 = staticinvoke <org.apache.batik.util.RunnableQueue$Link: java.lang.Runnable access$100(org.apache.batik.util.RunnableQueue$Link)>($r6);

        $r8 = r0.<org.apache.batik.util.RunnableQueue$1: org.apache.batik.util.RunnableQueue$Link link>;

        $r9 = virtualinvoke $r8.<org.apache.batik.util.DoublyLinkedList$Node: org.apache.batik.util.DoublyLinkedList$Node getNext()>();

        $r10 = (org.apache.batik.util.RunnableQueue$Link) $r9;

        r0.<org.apache.batik.util.RunnableQueue$1: org.apache.batik.util.RunnableQueue$Link link> = $r10;

        return $r7;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.batik.util.RunnableQueue$1 r1;

        r1 := @this: org.apache.batik.util.RunnableQueue$1;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }
}
