class org.joda.time.chrono.LimitChronology$LimitDurationField extends org.joda.time.field.DecoratedDurationField
{
    private static final long serialVersionUID;
    private final org.joda.time.chrono.LimitChronology this$0;

    void <init>(org.joda.time.chrono.LimitChronology, org.joda.time.DurationField)
    {
        org.joda.time.DurationField r1;
        org.joda.time.chrono.LimitChronology r3;
        org.joda.time.DurationFieldType $r2;
        org.joda.time.chrono.LimitChronology$LimitDurationField r0;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitDurationField;

        r3 := @parameter0: org.joda.time.chrono.LimitChronology;

        r1 := @parameter1: org.joda.time.DurationField;

        $r2 = virtualinvoke r1.<org.joda.time.DurationField: org.joda.time.DurationFieldType getType()>();

        specialinvoke r0.<org.joda.time.field.DecoratedDurationField: void <init>(org.joda.time.DurationField,org.joda.time.DurationFieldType)>(r1, $r2);

        r0.<org.joda.time.chrono.LimitChronology$LimitDurationField: org.joda.time.chrono.LimitChronology this$0> = r3;

        return;
    }

    public int getValue(long, long)
    {
        org.joda.time.DurationField $r2;
        org.joda.time.chrono.LimitChronology $r1;
        org.joda.time.chrono.LimitChronology$LimitDurationField r0;
        int $i2;
        long l0, l1;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitDurationField;

        l1 := @parameter0: long;

        l0 := @parameter1: long;

        $r1 = r0.<org.joda.time.chrono.LimitChronology$LimitDurationField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r1.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l0, null);

        $r2 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitDurationField: org.joda.time.DurationField getWrappedField()>();

        $i2 = virtualinvoke $r2.<org.joda.time.DurationField: int getValue(long,long)>(l1, l0);

        return $i2;
    }

    public long getValueAsLong(long, long)
    {
        org.joda.time.DurationField $r2;
        org.joda.time.chrono.LimitChronology $r1;
        org.joda.time.chrono.LimitChronology$LimitDurationField r0;
        long l0, l1, $l2;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitDurationField;

        l1 := @parameter0: long;

        l0 := @parameter1: long;

        $r1 = r0.<org.joda.time.chrono.LimitChronology$LimitDurationField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r1.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l0, null);

        $r2 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitDurationField: org.joda.time.DurationField getWrappedField()>();

        $l2 = virtualinvoke $r2.<org.joda.time.DurationField: long getValueAsLong(long,long)>(l1, l0);

        return $l2;
    }

    public long getMillis(int, long)
    {
        org.joda.time.DurationField $r2;
        org.joda.time.chrono.LimitChronology $r1;
        org.joda.time.chrono.LimitChronology$LimitDurationField r0;
        int i1;
        long l0, $l2;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitDurationField;

        i1 := @parameter0: int;

        l0 := @parameter1: long;

        $r1 = r0.<org.joda.time.chrono.LimitChronology$LimitDurationField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r1.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l0, null);

        $r2 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitDurationField: org.joda.time.DurationField getWrappedField()>();

        $l2 = virtualinvoke $r2.<org.joda.time.DurationField: long getMillis(int,long)>(i1, l0);

        return $l2;
    }

    public long getMillis(long, long)
    {
        org.joda.time.DurationField $r2;
        org.joda.time.chrono.LimitChronology $r1;
        org.joda.time.chrono.LimitChronology$LimitDurationField r0;
        long l0, l1, $l2;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitDurationField;

        l1 := @parameter0: long;

        l0 := @parameter1: long;

        $r1 = r0.<org.joda.time.chrono.LimitChronology$LimitDurationField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r1.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l0, null);

        $r2 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitDurationField: org.joda.time.DurationField getWrappedField()>();

        $l2 = virtualinvoke $r2.<org.joda.time.DurationField: long getMillis(long,long)>(l1, l0);

        return $l2;
    }

    public long add(long, int)
    {
        org.joda.time.DurationField $r2;
        org.joda.time.chrono.LimitChronology $r1, $r3;
        org.joda.time.chrono.LimitChronology$LimitDurationField r0;
        int i1;
        long l0, $l2;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitDurationField;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<org.joda.time.chrono.LimitChronology$LimitDurationField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r1.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l0, null);

        $r2 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitDurationField: org.joda.time.DurationField getWrappedField()>();

        $l2 = virtualinvoke $r2.<org.joda.time.DurationField: long add(long,int)>(l0, i1);

        $r3 = r0.<org.joda.time.chrono.LimitChronology$LimitDurationField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r3.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>($l2, "resulting");

        return $l2;
    }

    public long add(long, long)
    {
        org.joda.time.DurationField $r2;
        org.joda.time.chrono.LimitChronology $r1, $r3;
        org.joda.time.chrono.LimitChronology$LimitDurationField r0;
        long l0, l1, $l2;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitDurationField;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = r0.<org.joda.time.chrono.LimitChronology$LimitDurationField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r1.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l0, null);

        $r2 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitDurationField: org.joda.time.DurationField getWrappedField()>();

        $l2 = virtualinvoke $r2.<org.joda.time.DurationField: long add(long,long)>(l0, l1);

        $r3 = r0.<org.joda.time.chrono.LimitChronology$LimitDurationField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r3.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>($l2, "resulting");

        return $l2;
    }

    public int getDifference(long, long)
    {
        org.joda.time.DurationField $r3;
        org.joda.time.chrono.LimitChronology $r1, $r2;
        org.joda.time.chrono.LimitChronology$LimitDurationField r0;
        int $i2;
        long l0, l1;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitDurationField;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = r0.<org.joda.time.chrono.LimitChronology$LimitDurationField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r1.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l0, "minuend");

        $r2 = r0.<org.joda.time.chrono.LimitChronology$LimitDurationField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r2.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l1, "subtrahend");

        $r3 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitDurationField: org.joda.time.DurationField getWrappedField()>();

        $i2 = virtualinvoke $r3.<org.joda.time.DurationField: int getDifference(long,long)>(l0, l1);

        return $i2;
    }

    public long getDifferenceAsLong(long, long)
    {
        org.joda.time.DurationField $r3;
        org.joda.time.chrono.LimitChronology $r1, $r2;
        org.joda.time.chrono.LimitChronology$LimitDurationField r0;
        long l0, l1, $l2;

        r0 := @this: org.joda.time.chrono.LimitChronology$LimitDurationField;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = r0.<org.joda.time.chrono.LimitChronology$LimitDurationField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r1.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l0, "minuend");

        $r2 = r0.<org.joda.time.chrono.LimitChronology$LimitDurationField: org.joda.time.chrono.LimitChronology this$0>;

        virtualinvoke $r2.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l1, "subtrahend");

        $r3 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitDurationField: org.joda.time.DurationField getWrappedField()>();

        $l2 = virtualinvoke $r3.<org.joda.time.DurationField: long getDifferenceAsLong(long,long)>(l0, l1);

        return $l2;
    }

    public static void <clinit>()
    {
        <org.joda.time.chrono.LimitChronology$LimitDurationField: long serialVersionUID> = 8049297699408782284L;

        return;
    }
}
