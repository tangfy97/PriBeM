public class com.jidesoft.swing.JideButton extends javax.swing.JButton implements com.jidesoft.swing.Alignable, com.jidesoft.swing.ButtonStyle, com.jidesoft.swing.ComponentStateSupport, com.jidesoft.swing.AlignmentSupport
{
    private static final java.lang.String uiClassID;
    public static final java.lang.String PROPERTY_ALWAYS_SHOW_HYPERLINK;
    private boolean _alwaysShowHyperlink;
    private int _buttonStyle;
    private java.awt.Cursor _savedCursor;
    public static final java.lang.String CLIENT_PROPERTY_HIDE_POPUPMENU;
    private int _orientation;
    private java.awt.Color _defaultForeground;
    private java.awt.Color _rolloverBackground;
    private java.awt.Color _selectedBackground;
    private java.awt.Color _pressedBackground;
    private java.awt.Color _rolloverForeground;
    private java.awt.Color _selectedForeground;
    private java.awt.Color _pressedForeground;

    public void <init>()
    {
        com.jidesoft.swing.JideButton r0;

        r0 := @this: com.jidesoft.swing.JideButton;

        specialinvoke r0.<com.jidesoft.swing.JideButton: void <init>(java.lang.String,javax.swing.Icon)>(null, null);

        return;
    }

    public void <init>(javax.swing.Icon)
    {
        javax.swing.Icon r1;
        com.jidesoft.swing.JideButton r0;

        r0 := @this: com.jidesoft.swing.JideButton;

        r1 := @parameter0: javax.swing.Icon;

        specialinvoke r0.<com.jidesoft.swing.JideButton: void <init>(java.lang.String,javax.swing.Icon)>(null, r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        com.jidesoft.swing.JideButton r0;

        r0 := @this: com.jidesoft.swing.JideButton;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.jidesoft.swing.JideButton: void <init>(java.lang.String,javax.swing.Icon)>(r1, null);

        return;
    }

    public void <init>(javax.swing.Action)
    {
        javax.swing.Action r1;
        com.jidesoft.swing.JideButton r0;

        r0 := @this: com.jidesoft.swing.JideButton;

        r1 := @parameter0: javax.swing.Action;

        specialinvoke r0.<com.jidesoft.swing.JideButton: void <init>()>();

        virtualinvoke r0.<com.jidesoft.swing.JideButton: void setAction(javax.swing.Action)>(r1);

        return;
    }

    public void <init>(java.lang.String, javax.swing.Icon)
    {
        com.jidesoft.swing.JideButton r0;
        javax.swing.Icon r3;
        javax.swing.DefaultButtonModel $r1;
        java.lang.String r2;

        r0 := @this: com.jidesoft.swing.JideButton;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: javax.swing.Icon;

        specialinvoke r0.<javax.swing.JButton: void <init>()>();

        r0.<com.jidesoft.swing.JideButton: boolean _alwaysShowHyperlink> = 0;

        r0.<com.jidesoft.swing.JideButton: int _buttonStyle> = 0;

        $r1 = new javax.swing.DefaultButtonModel;

        specialinvoke $r1.<javax.swing.DefaultButtonModel: void <init>()>();

        virtualinvoke r0.<com.jidesoft.swing.JideButton: void setModel(javax.swing.ButtonModel)>($r1);

        virtualinvoke r0.<com.jidesoft.swing.JideButton: void init(java.lang.String,javax.swing.Icon)>(r2, r3);

        virtualinvoke r0.<com.jidesoft.swing.JideButton: void setRolloverEnabled(boolean)>(1);

        virtualinvoke r0.<com.jidesoft.swing.JideButton: void setFocusable(boolean)>(1);

        virtualinvoke r0.<com.jidesoft.swing.JideButton: void setRequestFocusEnabled(boolean)>(0);

        return;
    }

    public void updateUI()
    {
        java.lang.Object $r0;
        javax.swing.plaf.ComponentUI $r2;
        com.jidesoft.swing.JideButton r1;

        r1 := @this: com.jidesoft.swing.JideButton;

        $r0 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("JideButtonUI");

        if $r0 != null goto label1;

        staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: void installJideExtension()>();

     label1:
        $r2 = staticinvoke <javax.swing.UIManager: javax.swing.plaf.ComponentUI getUI(javax.swing.JComponent)>(r1);

        virtualinvoke r1.<com.jidesoft.swing.JideButton: void setUI(javax.swing.plaf.ComponentUI)>($r2);

        return;
    }

    public java.lang.String getUIClassID()
    {
        com.jidesoft.swing.JideButton r0;

        r0 := @this: com.jidesoft.swing.JideButton;

        return "JideButtonUI";
    }

    public int getOrientation()
    {
        int $i0;
        com.jidesoft.swing.JideButton r0;

        r0 := @this: com.jidesoft.swing.JideButton;

        $i0 = r0.<com.jidesoft.swing.JideButton: int _orientation>;

        return $i0;
    }

    public void setOrientation(int)
    {
        com.jidesoft.swing.JideButton r0;
        int i0, $i1, i2;

        r0 := @this: com.jidesoft.swing.JideButton;

        i0 := @parameter0: int;

        $i1 = r0.<com.jidesoft.swing.JideButton: int _orientation>;

        if $i1 == i0 goto label1;

        i2 = r0.<com.jidesoft.swing.JideButton: int _orientation>;

        r0.<com.jidesoft.swing.JideButton: int _orientation> = i0;

        virtualinvoke r0.<com.jidesoft.swing.JideButton: void firePropertyChange(java.lang.String,int,int)>("orientation", i2, i0);

     label1:
        return;
    }

    public boolean supportVerticalOrientation()
    {
        com.jidesoft.swing.JideButton r0;

        r0 := @this: com.jidesoft.swing.JideButton;

        return 1;
    }

    public boolean supportHorizontalOrientation()
    {
        com.jidesoft.swing.JideButton r0;

        r0 := @this: com.jidesoft.swing.JideButton;

        return 1;
    }

    public int getButtonStyle()
    {
        int $i0;
        com.jidesoft.swing.JideButton r0;

        r0 := @this: com.jidesoft.swing.JideButton;

        $i0 = r0.<com.jidesoft.swing.JideButton: int _buttonStyle>;

        return $i0;
    }

    public void setButtonStyle(int)
    {
        com.jidesoft.swing.JideButton r1;
        int i0, $i1, i2, $i3;
        java.lang.IllegalArgumentException $r0;

        r1 := @this: com.jidesoft.swing.JideButton;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 3 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Only TOOLBAR_STYLE, TOOLBOX_STYLE, FLAT_STYLE and HYPERLINK_STYLE are supported");

        throw $r0;

     label2:
        $i1 = r1.<com.jidesoft.swing.JideButton: int _buttonStyle>;

        if i0 != $i1 goto label3;

        return;

     label3:
        i2 = r1.<com.jidesoft.swing.JideButton: int _buttonStyle>;

        r1.<com.jidesoft.swing.JideButton: int _buttonStyle> = i0;

        specialinvoke r1.<com.jidesoft.swing.JideButton: void configureCursor()>();

        $i3 = r1.<com.jidesoft.swing.JideButton: int _buttonStyle>;

        virtualinvoke r1.<com.jidesoft.swing.JideButton: void firePropertyChange(java.lang.String,int,int)>("buttonStyle", i2, $i3);

        return;
    }

    private void configureCursor()
    {
        com.jidesoft.swing.JideButton r0;
        java.awt.Cursor $r1, $r4, $r5, $r7;
        javax.swing.Icon $r3;
        int $i0, $i1;
        java.lang.String $r2, $r6;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.JideButton;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.JideButton: int getButtonStyle()>();

        if $i0 != 3 goto label3;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.JideButton: boolean isRolloverEnabled()>();

        if $z0 == 0 goto label3;

        $r2 = virtualinvoke r0.<com.jidesoft.swing.JideButton: java.lang.String getText()>();

        if $r2 == null goto label1;

        $r6 = virtualinvoke r0.<com.jidesoft.swing.JideButton: java.lang.String getText()>();

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i1 > 0 goto label2;

     label1:
        $r3 = virtualinvoke r0.<com.jidesoft.swing.JideButton: javax.swing.Icon getIcon()>();

        if $r3 == null goto label3;

     label2:
        $r4 = virtualinvoke r0.<com.jidesoft.swing.JideButton: java.awt.Cursor getCursor()>();

        r0.<com.jidesoft.swing.JideButton: java.awt.Cursor _savedCursor> = $r4;

        $r5 = staticinvoke <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>(12);

        virtualinvoke r0.<com.jidesoft.swing.JideButton: void setCursor(java.awt.Cursor)>($r5);

        goto label4;

     label3:
        $r7 = r0.<com.jidesoft.swing.JideButton: java.awt.Cursor _savedCursor>;

        if $r7 == null goto label4;

        $r1 = r0.<com.jidesoft.swing.JideButton: java.awt.Cursor _savedCursor>;

        virtualinvoke r0.<com.jidesoft.swing.JideButton: void setCursor(java.awt.Cursor)>($r1);

        r0.<com.jidesoft.swing.JideButton: java.awt.Cursor _savedCursor> = null;

     label4:
        return;
    }

    public void setRolloverEnabled(boolean)
    {
        com.jidesoft.swing.JideButton r0;
        boolean z0;

        r0 := @this: com.jidesoft.swing.JideButton;

        z0 := @parameter0: boolean;

        specialinvoke r0.<javax.swing.JButton: void setRolloverEnabled(boolean)>(z0);

        specialinvoke r0.<com.jidesoft.swing.JideButton: void configureCursor()>();

        return;
    }

    public void setText(java.lang.String)
    {
        java.lang.String r1;
        com.jidesoft.swing.JideButton r0;

        r0 := @this: com.jidesoft.swing.JideButton;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<javax.swing.JButton: void setText(java.lang.String)>(r1);

        specialinvoke r0.<com.jidesoft.swing.JideButton: void configureCursor()>();

        return;
    }

    public void setIcon(javax.swing.Icon)
    {
        javax.swing.Icon r1;
        com.jidesoft.swing.JideButton r0;

        r0 := @this: com.jidesoft.swing.JideButton;

        r1 := @parameter0: javax.swing.Icon;

        specialinvoke r0.<javax.swing.JButton: void setIcon(javax.swing.Icon)>(r1);

        specialinvoke r0.<com.jidesoft.swing.JideButton: void configureCursor()>();

        return;
    }

    public boolean isAlwaysShowHyperlink()
    {
        com.jidesoft.swing.JideButton r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.JideButton;

        $z0 = r0.<com.jidesoft.swing.JideButton: boolean _alwaysShowHyperlink>;

        return $z0;
    }

    public void setAlwaysShowHyperlink(boolean)
    {
        com.jidesoft.swing.JideButton r0;
        boolean z0, $z1, z2;

        r0 := @this: com.jidesoft.swing.JideButton;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.jidesoft.swing.JideButton: boolean _alwaysShowHyperlink>;

        if $z1 == z0 goto label1;

        z2 = r0.<com.jidesoft.swing.JideButton: boolean _alwaysShowHyperlink>;

        r0.<com.jidesoft.swing.JideButton: boolean _alwaysShowHyperlink> = z0;

        virtualinvoke r0.<com.jidesoft.swing.JideButton: void firePropertyChange(java.lang.String,boolean,boolean)>("alwaysShowHyperlink", z2, z0);

     label1:
        return;
    }

    public java.awt.Color getDefaultForeground()
    {
        java.awt.Color $r1;
        com.jidesoft.swing.JideButton r0;

        r0 := @this: com.jidesoft.swing.JideButton;

        $r1 = r0.<com.jidesoft.swing.JideButton: java.awt.Color _defaultForeground>;

        return $r1;
    }

    public void setDefaultForeground(java.awt.Color)
    {
        java.awt.Color r1;
        com.jidesoft.swing.JideButton r0;

        r0 := @this: com.jidesoft.swing.JideButton;

        r1 := @parameter0: java.awt.Color;

        r0.<com.jidesoft.swing.JideButton: java.awt.Color _defaultForeground> = r1;

        return;
    }

    private java.awt.Color getRolloverBackground()
    {
        java.awt.Color $r1;
        com.jidesoft.swing.JideButton r0;

        r0 := @this: com.jidesoft.swing.JideButton;

        $r1 = r0.<com.jidesoft.swing.JideButton: java.awt.Color _rolloverBackground>;

        return $r1;
    }

    private void setRolloverBackground(java.awt.Color)
    {
        java.awt.Color r1;
        com.jidesoft.swing.JideButton r0;

        r0 := @this: com.jidesoft.swing.JideButton;

        r1 := @parameter0: java.awt.Color;

        r0.<com.jidesoft.swing.JideButton: java.awt.Color _rolloverBackground> = r1;

        return;
    }

    private java.awt.Color getSelectedBackground()
    {
        java.awt.Color $r1;
        com.jidesoft.swing.JideButton r0;

        r0 := @this: com.jidesoft.swing.JideButton;

        $r1 = r0.<com.jidesoft.swing.JideButton: java.awt.Color _selectedBackground>;

        return $r1;
    }

    private void setSelectedBackground(java.awt.Color)
    {
        java.awt.Color r1;
        com.jidesoft.swing.JideButton r0;

        r0 := @this: com.jidesoft.swing.JideButton;

        r1 := @parameter0: java.awt.Color;

        r0.<com.jidesoft.swing.JideButton: java.awt.Color _selectedBackground> = r1;

        return;
    }

    private java.awt.Color getPressedBackground()
    {
        java.awt.Color $r1;
        com.jidesoft.swing.JideButton r0;

        r0 := @this: com.jidesoft.swing.JideButton;

        $r1 = r0.<com.jidesoft.swing.JideButton: java.awt.Color _pressedBackground>;

        return $r1;
    }

    private void setPressedBackground(java.awt.Color)
    {
        java.awt.Color r1;
        com.jidesoft.swing.JideButton r0;

        r0 := @this: com.jidesoft.swing.JideButton;

        r1 := @parameter0: java.awt.Color;

        r0.<com.jidesoft.swing.JideButton: java.awt.Color _pressedBackground> = r1;

        return;
    }

    private java.awt.Color getRolloverForeground()
    {
        java.awt.Color $r1;
        com.jidesoft.swing.JideButton r0;

        r0 := @this: com.jidesoft.swing.JideButton;

        $r1 = r0.<com.jidesoft.swing.JideButton: java.awt.Color _rolloverForeground>;

        return $r1;
    }

    private void setRolloverForeground(java.awt.Color)
    {
        java.awt.Color r1;
        com.jidesoft.swing.JideButton r0;

        r0 := @this: com.jidesoft.swing.JideButton;

        r1 := @parameter0: java.awt.Color;

        r0.<com.jidesoft.swing.JideButton: java.awt.Color _rolloverForeground> = r1;

        return;
    }

    private java.awt.Color getSelectedForeground()
    {
        java.awt.Color $r1;
        com.jidesoft.swing.JideButton r0;

        r0 := @this: com.jidesoft.swing.JideButton;

        $r1 = r0.<com.jidesoft.swing.JideButton: java.awt.Color _selectedForeground>;

        return $r1;
    }

    private void setSelectedForeground(java.awt.Color)
    {
        java.awt.Color r1;
        com.jidesoft.swing.JideButton r0;

        r0 := @this: com.jidesoft.swing.JideButton;

        r1 := @parameter0: java.awt.Color;

        r0.<com.jidesoft.swing.JideButton: java.awt.Color _selectedForeground> = r1;

        return;
    }

    private java.awt.Color getPressedForeground()
    {
        java.awt.Color $r1;
        com.jidesoft.swing.JideButton r0;

        r0 := @this: com.jidesoft.swing.JideButton;

        $r1 = r0.<com.jidesoft.swing.JideButton: java.awt.Color _pressedForeground>;

        return $r1;
    }

    private void setPressedForeground(java.awt.Color)
    {
        java.awt.Color r1;
        com.jidesoft.swing.JideButton r0;

        r0 := @this: com.jidesoft.swing.JideButton;

        r1 := @parameter0: java.awt.Color;

        r0.<com.jidesoft.swing.JideButton: java.awt.Color _pressedForeground> = r1;

        return;
    }

    public java.awt.Color getBackgroundOfState(int)
    {
        java.awt.Color $r1, $r2, $r3, $r4, $r5, $r6;
        com.jidesoft.swing.JideButton r0;
        int i0;

        r0 := @this: com.jidesoft.swing.JideButton;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label7;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label8;
            case 5: goto label4;
            default: goto label8;
        };

     label1:
        $r5 = virtualinvoke r0.<com.jidesoft.swing.JideButton: java.awt.Color getBackground()>();

        return $r5;

     label2:
        $r3 = specialinvoke r0.<com.jidesoft.swing.JideButton: java.awt.Color getRolloverBackground()>();

        return $r3;

     label3:
        $r2 = specialinvoke r0.<com.jidesoft.swing.JideButton: java.awt.Color getSelectedBackground()>();

        return $r2;

     label4:
        $r1 = specialinvoke r0.<com.jidesoft.swing.JideButton: java.awt.Color getSelectedBackground()>();

        if $r1 == null goto label5;

        $r6 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color toGrayscale(java.awt.Color)>($r1);

        goto label6;

     label5:
        $r6 = $r1;

     label6:
        return $r6;

     label7:
        $r4 = specialinvoke r0.<com.jidesoft.swing.JideButton: java.awt.Color getPressedBackground()>();

        return $r4;

     label8:
        return null;
    }

    public void setBackgroundOfState(int, java.awt.Color)
    {
        int i0;
        java.awt.Color r1;
        com.jidesoft.swing.JideButton r0;

        r0 := @this: com.jidesoft.swing.JideButton;

        i0 := @parameter0: int;

        r1 := @parameter1: java.awt.Color;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label4;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label5;
        };

     label1:
        virtualinvoke r0.<com.jidesoft.swing.JideButton: void setBackground(java.awt.Color)>(r1);

        goto label5;

     label2:
        specialinvoke r0.<com.jidesoft.swing.JideButton: void setRolloverBackground(java.awt.Color)>(r1);

        goto label5;

     label3:
        specialinvoke r0.<com.jidesoft.swing.JideButton: void setSelectedBackground(java.awt.Color)>(r1);

        goto label5;

     label4:
        specialinvoke r0.<com.jidesoft.swing.JideButton: void setPressedBackground(java.awt.Color)>(r1);

     label5:
        return;
    }

    public java.awt.Color getForegroundOfState(int)
    {
        java.awt.Color $r1, $r2, $r3, $r4;
        com.jidesoft.swing.JideButton r0;
        int i0;

        r0 := @this: com.jidesoft.swing.JideButton;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label4;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label5;
        };

     label1:
        $r4 = virtualinvoke r0.<com.jidesoft.swing.JideButton: java.awt.Color getDefaultForeground()>();

        return $r4;

     label2:
        $r2 = specialinvoke r0.<com.jidesoft.swing.JideButton: java.awt.Color getRolloverForeground()>();

        return $r2;

     label3:
        $r1 = specialinvoke r0.<com.jidesoft.swing.JideButton: java.awt.Color getSelectedForeground()>();

        return $r1;

     label4:
        $r3 = specialinvoke r0.<com.jidesoft.swing.JideButton: java.awt.Color getPressedForeground()>();

        return $r3;

     label5:
        return null;
    }

    public void setForegroundOfState(int, java.awt.Color)
    {
        int i0;
        java.awt.Color r1;
        com.jidesoft.swing.JideButton r0;

        r0 := @this: com.jidesoft.swing.JideButton;

        i0 := @parameter0: int;

        r1 := @parameter1: java.awt.Color;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label4;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label5;
        };

     label1:
        virtualinvoke r0.<com.jidesoft.swing.JideButton: void setDefaultForeground(java.awt.Color)>(r1);

        goto label5;

     label2:
        specialinvoke r0.<com.jidesoft.swing.JideButton: void setRolloverForeground(java.awt.Color)>(r1);

        goto label5;

     label3:
        specialinvoke r0.<com.jidesoft.swing.JideButton: void setSelectedForeground(java.awt.Color)>(r1);

        goto label5;

     label4:
        specialinvoke r0.<com.jidesoft.swing.JideButton: void setPressedForeground(java.awt.Color)>(r1);

     label5:
        return;
    }

    public static void <clinit>()
    {
        <com.jidesoft.swing.JideButton: java.lang.String CLIENT_PROPERTY_HIDE_POPUPMENU> = "JideButton.hidePopupMenu";

        <com.jidesoft.swing.JideButton: java.lang.String PROPERTY_ALWAYS_SHOW_HYPERLINK> = "alwaysShowHyperlink";

        <com.jidesoft.swing.JideButton: java.lang.String uiClassID> = "JideButtonUI";

        return;
    }
}
