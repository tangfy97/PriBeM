public class org.apache.xmlbeans.impl.tool.Diff extends java.lang.Object
{
    static final boolean $assertionsDisabled;
    static java.lang.Class class$org$apache$xmlbeans$impl$tool$Diff;

    public void <init>()
    {
        org.apache.xmlbeans.impl.tool.Diff r0;

        r0 := @this: org.apache.xmlbeans.impl.tool.Diff;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.util.jar.JarFile $r6, $r7;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String[] r0;
        java.util.ArrayList $r5;
        java.lang.StringBuffer $r15, $r17, $r19, $r20, $r22, $r24, $r26, $r27;
        int $i0, $i1, $i2, i3;
        java.lang.String $r2, $r4, $r11, $r18, $r21, $r25, $r28;
        java.io.PrintStream $r8, $r9, $r12, $r13, $r14, $r16, $r23, $r29, $r30;
        java.io.IOException $r31;
        java.io.File $r1, $r3;
        java.lang.Object $r10;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 == 2 goto label01;

        $r29 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>("Usage: diff <jarname1> <jarname2> to compare two jars");

        $r30 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>("  or   diff <dirname1> <dirname2> to compare two dirs");

        return;

     label01:
        $r1 = new java.io.File;

        $r2 = r0[0];

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r2);

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label02;

        $r23 = <java.lang.System: java.io.PrintStream out>;

        $r22 = new java.lang.StringBuffer;

        specialinvoke $r22.<java.lang.StringBuffer: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("File \"");

        $r25 = r0[0];

        $r26 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" not found.");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r28);

        return;

     label02:
        $r3 = new java.io.File;

        $r4 = r0[1];

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r4);

        $z1 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label03;

        $r16 = <java.lang.System: java.io.PrintStream out>;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("File \"");

        $r18 = r0[1];

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" not found.");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r21);

        return;

     label03:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $z2 = virtualinvoke $r1.<java.io.File: boolean isDirectory()>();

        if $z2 == 0 goto label05;

        $z4 = virtualinvoke $r3.<java.io.File: boolean isDirectory()>();

        if $z4 != 0 goto label04;

        $r14 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>("Both parameters have to be directories if the first parameter is a directory.");

        return;

     label04:
        staticinvoke <org.apache.xmlbeans.impl.tool.Diff: void dirsAsTypeSystems(java.io.File,java.io.File,java.util.List)>($r1, $r3, $r5);

        goto label09;

     label05:
        $z3 = virtualinvoke $r3.<java.io.File: boolean isDirectory()>();

        if $z3 == 0 goto label06;

        $r13 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("Both parameters have to be jar files if the first parameter is a jar file.");

        return;

     label06:
        $r6 = new java.util.jar.JarFile;

        specialinvoke $r6.<java.util.jar.JarFile: void <init>(java.io.File)>($r1);

        $r7 = new java.util.jar.JarFile;

        specialinvoke $r7.<java.util.jar.JarFile: void <init>(java.io.File)>($r3);

        staticinvoke <org.apache.xmlbeans.impl.tool.Diff: void jarsAsTypeSystems(java.util.jar.JarFile,java.util.jar.JarFile,java.util.List)>($r6, $r7, $r5);

     label07:
        goto label09;

     label08:
        $r31 := @caughtexception;

        virtualinvoke $r31.<java.io.IOException: void printStackTrace()>();

     label09:
        $i2 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i2 >= 1 goto label10;

        $r12 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("No differences encountered.");

        goto label12;

     label10:
        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("Differences:");

        i3 = 0;

     label11:
        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if i3 >= $i1 goto label12;

        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r10 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i3);

        $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r11);

        i3 = i3 + 1;

        goto label11;

     label12:
        return;

        catch java.io.IOException from label06 to label07 with label08;
    }

    public static void jarsAsTypeSystems(java.util.jar.JarFile, java.util.jar.JarFile, java.util.List)
    {
        java.util.Enumeration $r1, $r3;
        org.apache.xmlbeans.impl.tool.Diff$ZipEntryNameComparator $r12;
        java.lang.Object[] $r7, $r10;
        java.util.ArrayList $r4, $r5;
        java.lang.StringBuffer $r14, $r15, $r17, $r18, $r21, $r22, $r24, $r25, $r27, $r28, $r31, $r32, $r38, $r39, $r41, $r42, $r43, $r44, $r46, $r47, $r49, $r50, $r51, $r52, $r58, $r59, $r61, $r62, $r66, $r67, $r69, $r70;
        java.lang.String $r16, $r20, $r23, $r26, $r30, $r33, $r35, $r37, $r40, $r45, $r48, $r53, $r57, $r60, $r63, $r65, $r68, $r71;
        java.util.jar.JarFile r0, r2;
        java.util.zip.ZipEntry $r19, $r29, $r34, $r36, $r54, $r55, r72, r73;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.zip.ZipEntry[] $r6, $r8, $r9, $r11, r74, r75;
        java.util.List r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, $i8;
        java.lang.Object $r56, $r64;

        r0 := @parameter0: java.util.jar.JarFile;

        r2 := @parameter1: java.util.jar.JarFile;

        r13 := @parameter2: java.util.List;

        $r1 = virtualinvoke r0.<java.util.jar.JarFile: java.util.Enumeration entries()>();

        $r3 = virtualinvoke r2.<java.util.jar.JarFile: java.util.Enumeration entries()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

     label01:
        $z0 = interfaceinvoke $r1.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label03;

        $r64 = interfaceinvoke $r1.<java.util.Enumeration: java.lang.Object nextElement()>();

        r72 = (java.util.zip.ZipEntry) $r64;

        $r65 = virtualinvoke r72.<java.util.zip.ZipEntry: java.lang.String getName()>();

        $r66 = new java.lang.StringBuffer;

        specialinvoke $r66.<java.lang.StringBuffer: void <init>()>();

        $r67 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("schema");

        $r68 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String METADATA_PACKAGE_GEN>;

        $r69 = virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r68);

        $r70 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/system/s");

        $r71 = virtualinvoke $r70.<java.lang.StringBuffer: java.lang.String toString()>();

        $z4 = virtualinvoke $r65.<java.lang.String: boolean startsWith(java.lang.String)>($r71);

        if $z4 == 0 goto label02;

        $z5 = virtualinvoke $r65.<java.lang.String: boolean endsWith(java.lang.String)>(".xsb");

        if $z5 == 0 goto label02;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r72);

     label02:
        goto label01;

     label03:
        $z1 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label05;

        $r56 = interfaceinvoke $r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        r73 = (java.util.zip.ZipEntry) $r56;

        $r57 = virtualinvoke r73.<java.util.zip.ZipEntry: java.lang.String getName()>();

        $r58 = new java.lang.StringBuffer;

        specialinvoke $r58.<java.lang.StringBuffer: void <init>()>();

        $r59 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("schema");

        $r60 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String METADATA_PACKAGE_GEN>;

        $r61 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r60);

        $r62 = virtualinvoke $r61.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/system/s");

        $r63 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.String toString()>();

        $z2 = virtualinvoke $r57.<java.lang.String: boolean startsWith(java.lang.String)>($r63);

        if $z2 == 0 goto label04;

        $z3 = virtualinvoke $r57.<java.lang.String: boolean endsWith(java.lang.String)>(".xsb");

        if $z3 == 0 goto label04;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r73);

     label04:
        goto label03;

     label05:
        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $r6 = newarray (java.util.zip.ZipEntry)[$i0];

        $r7 = interfaceinvoke $r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r8 = (java.util.zip.ZipEntry[]) $r7;

        r74 = (java.util.zip.ZipEntry[]) $r8;

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        $r9 = newarray (java.util.zip.ZipEntry)[$i1];

        $r10 = interfaceinvoke $r5.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r9);

        $r11 = (java.util.zip.ZipEntry[]) $r10;

        r75 = (java.util.zip.ZipEntry[]) $r11;

        $r12 = new org.apache.xmlbeans.impl.tool.Diff$ZipEntryNameComparator;

        specialinvoke $r12.<org.apache.xmlbeans.impl.tool.Diff$ZipEntryNameComparator: void <init>(org.apache.xmlbeans.impl.tool.Diff$1)>(null);

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r74, $r12);

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r75, $r12);

        i6 = 0;

        i7 = 0;

     label06:
        $i2 = lengthof r74;

        if i6 >= $i2 goto label10;

        $i4 = lengthof r75;

        if i7 >= $i4 goto label10;

        $r34 = r74[i6];

        $r35 = virtualinvoke $r34.<java.util.zip.ZipEntry: java.lang.String getName()>();

        $r36 = r75[i7];

        $r37 = virtualinvoke $r36.<java.util.zip.ZipEntry: java.lang.String getName()>();

        $i5 = virtualinvoke $r35.<java.lang.String: int compareTo(java.lang.String)>($r37);

        if $i5 != 0 goto label07;

        $r55 = r74[i6];

        $r54 = r75[i7];

        staticinvoke <org.apache.xmlbeans.impl.tool.Diff: void zipEntriesAsXsb(java.util.zip.ZipEntry,java.util.jar.JarFile,java.util.zip.ZipEntry,java.util.jar.JarFile,java.util.List)>($r55, r0, $r54, r2, r13);

        i6 = i6 + 1;

        i7 = i7 + 1;

        goto label09;

     label07:
        if $i5 >= 0 goto label08;

        $r46 = new java.lang.StringBuffer;

        specialinvoke $r46.<java.lang.StringBuffer: void <init>()>();

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Jar \"");

        $r48 = virtualinvoke r0.<java.util.jar.JarFile: java.lang.String getName()>();

        $r49 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" contains an extra file: \"");

        $r51 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r35);

        $r52 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r53 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke r13.<java.util.List: boolean add(java.lang.Object)>($r53);

        i6 = i6 + 1;

        goto label09;

     label08:
        if $i5 <= 0 goto label09;

        $r38 = new java.lang.StringBuffer;

        specialinvoke $r38.<java.lang.StringBuffer: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Jar \"");

        $r40 = virtualinvoke r2.<java.util.jar.JarFile: java.lang.String getName()>();

        $r41 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" contains an extra file: \"");

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r37);

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke r13.<java.util.List: boolean add(java.lang.Object)>($r45);

        i7 = i7 + 1;

     label09:
        goto label06;

     label10:
        $i8 = lengthof r74;

        if i6 >= $i8 goto label11;

        $r24 = new java.lang.StringBuffer;

        specialinvoke $r24.<java.lang.StringBuffer: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Jar \"");

        $r26 = virtualinvoke r0.<java.util.jar.JarFile: java.lang.String getName()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" contains an extra file: \"");

        $r29 = r74[i6];

        $r30 = virtualinvoke $r29.<java.util.zip.ZipEntry: java.lang.String getName()>();

        $r31 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke r13.<java.util.List: boolean add(java.lang.Object)>($r33);

        i6 = i6 + 1;

        goto label10;

     label11:
        $i3 = lengthof r75;

        if i7 >= $i3 goto label12;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Jar \"");

        $r16 = virtualinvoke r2.<java.util.jar.JarFile: java.lang.String getName()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" contains an extra file: \"");

        $r19 = r75[i7];

        $r20 = virtualinvoke $r19.<java.util.zip.ZipEntry: java.lang.String getName()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke r13.<java.util.List: boolean add(java.lang.Object)>($r23);

        i7 = i7 + 1;

        goto label11;

     label12:
        return;
    }

    public static void dirsAsTypeSystems(java.io.File, java.io.File, java.util.List)
    {
        org.apache.xmlbeans.impl.tool.Diff$XsbFilenameFilter $r25;
        org.apache.xmlbeans.impl.tool.Diff$FileNameComparator $r28;
        java.lang.AssertionError $r87, $r88;
        java.lang.StringBuffer $r1, $r2, $r4, $r5, $r8, $r9, $r11, $r12, $r15, $r16, $r17, $r18, $r20, $r21, $r22, $r23, $r29, $r30, $r32, $r33, $r36, $r37, $r39, $r40, $r42, $r43, $r46, $r47, $r53, $r54, $r56, $r57, $r58, $r59, $r61, $r62, $r64, $r65, $r66, $r67, $r75, $r76, $r78, $r79, $r81, $r82, $r84, $r85;
        java.lang.String $r3, $r6, $r10, $r13, $r19, $r24, $r31, $r35, $r38, $r41, $r45, $r48, $r50, $r52, $r55, $r60, $r63, $r68, $r72, $r77, $r80, $r83, $r86;
        java.io.File $r0, $r7, $r34, $r44, $r49, $r51, $r69, $r70, $r71, r89, r90, r91, r92, r93, r94;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.util.List r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, $i12;
        java.io.File[] $r26, $r27, $r73, $r74;

        r89 := @parameter0: java.io.File;

        r90 := @parameter1: java.io.File;

        r14 := @parameter2: java.util.List;

        $z0 = <org.apache.xmlbeans.impl.tool.Diff: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $z9 = virtualinvoke r89.<java.io.File: boolean isDirectory()>();

        if $z9 != 0 goto label01;

        $r88 = new java.lang.AssertionError;

        specialinvoke $r88.<java.lang.AssertionError: void <init>(java.lang.Object)>("Parameters must be directories");

        throw $r88;

     label01:
        $z1 = <org.apache.xmlbeans.impl.tool.Diff: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        $z8 = virtualinvoke r90.<java.io.File: boolean isDirectory()>();

        if $z8 != 0 goto label02;

        $r87 = new java.lang.AssertionError;

        specialinvoke $r87.<java.lang.AssertionError: void <init>(java.lang.Object)>("Parameters must be directories");

        throw $r87;

     label02:
        $r0 = new java.io.File;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("schema");

        $r3 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String METADATA_PACKAGE_GEN>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/system");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>(r89, $r6);

        r91 = $r0;

        $r7 = new java.io.File;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("schema");

        $r10 = <org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.lang.String METADATA_PACKAGE_GEN>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/system");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>(r90, $r13);

        r92 = $r7;

        $z2 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z2 == 0 goto label08;

        $z7 = virtualinvoke $r7.<java.io.File: boolean exists()>();

        if $z7 == 0 goto label08;

        $r73 = virtualinvoke $r0.<java.io.File: java.io.File[] listFiles()>();

        $r74 = virtualinvoke $r7.<java.io.File: java.io.File[] listFiles()>();

        $i4 = lengthof $r73;

        if $i4 != 1 goto label03;

        $i9 = lengthof $r74;

        if $i9 != 1 goto label03;

        r91 = $r73[0];

        r92 = $r74[0];

        goto label07;

     label03:
        $i5 = lengthof $r73;

        if $i5 != 0 goto label04;

        r91 = null;

     label04:
        $i6 = lengthof $r74;

        if $i6 != 0 goto label05;

        r92 = null;

     label05:
        $i7 = lengthof $r73;

        if $i7 <= 1 goto label06;

        $r81 = new java.lang.StringBuffer;

        specialinvoke $r81.<java.lang.StringBuffer: void <init>()>();

        $r82 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("More than one typesystem found in dir \"");

        $r83 = virtualinvoke r89.<java.io.File: java.lang.String getName()>();

        $r84 = virtualinvoke $r82.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r83);

        $r85 = virtualinvoke $r84.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r86 = virtualinvoke $r85.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke r14.<java.util.List: boolean add(java.lang.Object)>($r86);

        return;

     label06:
        $i8 = lengthof $r74;

        if $i8 <= 1 goto label07;

        $r75 = new java.lang.StringBuffer;

        specialinvoke $r75.<java.lang.StringBuffer: void <init>()>();

        $r76 = virtualinvoke $r75.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("More than one typesystem found in dir \"");

        $r77 = virtualinvoke r90.<java.io.File: java.lang.String getName()>();

        $r78 = virtualinvoke $r76.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r77);

        $r79 = virtualinvoke $r78.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r80 = virtualinvoke $r79.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke r14.<java.util.List: boolean add(java.lang.Object)>($r80);

        return;

     label07:
        goto label10;

     label08:
        $z3 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z3 != 0 goto label09;

        r91 = null;

     label09:
        $z4 = virtualinvoke $r7.<java.io.File: boolean exists()>();

        if $z4 != 0 goto label10;

        r92 = null;

     label10:
        if r91 != null goto label11;

        if r92 != null goto label11;

        return;

     label11:
        if r91 == null goto label12;

        if r92 != null goto label15;

     label12:
        if r91 != null goto label13;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("No typesystems found in dir \"");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r89);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke r14.<java.util.List: boolean add(java.lang.Object)>($r24);

     label13:
        if r92 != null goto label14;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("No typesystems found in dir \"");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r90);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke r14.<java.util.List: boolean add(java.lang.Object)>($r19);

     label14:
        return;

     label15:
        r93 = r91;

        r94 = r92;

        $z5 = staticinvoke <org.apache.xmlbeans.impl.tool.Diff: boolean isDiffIndex()>();

        $r25 = new org.apache.xmlbeans.impl.tool.Diff$XsbFilenameFilter;

        specialinvoke $r25.<org.apache.xmlbeans.impl.tool.Diff$XsbFilenameFilter: void <init>(org.apache.xmlbeans.impl.tool.Diff$1)>(null);

        $r26 = virtualinvoke r91.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>($r25);

        $r27 = virtualinvoke r92.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>($r25);

        $r28 = new org.apache.xmlbeans.impl.tool.Diff$FileNameComparator;

        specialinvoke $r28.<org.apache.xmlbeans.impl.tool.Diff$FileNameComparator: void <init>(org.apache.xmlbeans.impl.tool.Diff$1)>(null);

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>($r26, $r28);

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>($r27, $r28);

        i10 = 0;

        i11 = 0;

     label16:
        $i0 = lengthof $r26;

        if i10 >= $i0 goto label22;

        $i2 = lengthof $r27;

        if i11 >= $i2 goto label22;

        $r49 = $r26[i10];

        $r50 = virtualinvoke $r49.<java.io.File: java.lang.String getName()>();

        $r51 = $r27[i11];

        $r52 = virtualinvoke $r51.<java.io.File: java.lang.String getName()>();

        $i3 = virtualinvoke $r50.<java.lang.String: int compareTo(java.lang.String)>($r52);

        if $i3 != 0 goto label19;

        if $z5 != 0 goto label17;

        $r71 = $r26[i10];

        $r72 = virtualinvoke $r71.<java.io.File: java.lang.String getName()>();

        $z6 = virtualinvoke $r72.<java.lang.String: boolean equals(java.lang.Object)>("index.xsb");

        if $z6 != 0 goto label18;

     label17:
        $r70 = $r26[i10];

        $r69 = $r27[i11];

        staticinvoke <org.apache.xmlbeans.impl.tool.Diff: void filesAsXsb(java.io.File,java.io.File,java.util.List)>($r70, $r69, r14);

     label18:
        i10 = i10 + 1;

        i11 = i11 + 1;

        goto label21;

     label19:
        if $i3 >= 0 goto label20;

        $r61 = new java.lang.StringBuffer;

        specialinvoke $r61.<java.lang.StringBuffer: void <init>()>();

        $r62 = virtualinvoke $r61.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Dir \"");

        $r63 = virtualinvoke r93.<java.io.File: java.lang.String getName()>();

        $r64 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r63);

        $r65 = virtualinvoke $r64.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" contains an extra file: \"");

        $r66 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r50);

        $r67 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r68 = virtualinvoke $r67.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke r14.<java.util.List: boolean add(java.lang.Object)>($r68);

        i10 = i10 + 1;

        goto label21;

     label20:
        if $i3 <= 0 goto label21;

        $r53 = new java.lang.StringBuffer;

        specialinvoke $r53.<java.lang.StringBuffer: void <init>()>();

        $r54 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Dir \"");

        $r55 = virtualinvoke r94.<java.io.File: java.lang.String getName()>();

        $r56 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r55);

        $r57 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" contains an extra file: \"");

        $r58 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r52);

        $r59 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r60 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke r14.<java.util.List: boolean add(java.lang.Object)>($r60);

        i11 = i11 + 1;

     label21:
        goto label16;

     label22:
        $i12 = lengthof $r26;

        if i10 >= $i12 goto label23;

        $r39 = new java.lang.StringBuffer;

        specialinvoke $r39.<java.lang.StringBuffer: void <init>()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Dir \"");

        $r41 = virtualinvoke r93.<java.io.File: java.lang.String getName()>();

        $r42 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" contains an extra file: \"");

        $r44 = $r26[i10];

        $r45 = virtualinvoke $r44.<java.io.File: java.lang.String getName()>();

        $r46 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke r14.<java.util.List: boolean add(java.lang.Object)>($r48);

        i10 = i10 + 1;

        goto label22;

     label23:
        $i1 = lengthof $r27;

        if i11 >= $i1 goto label24;

        $r29 = new java.lang.StringBuffer;

        specialinvoke $r29.<java.lang.StringBuffer: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Dir \"");

        $r31 = virtualinvoke r94.<java.io.File: java.lang.String getName()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" contains an extra file: \"");

        $r34 = $r27[i11];

        $r35 = virtualinvoke $r34.<java.io.File: java.lang.String getName()>();

        $r36 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke r14.<java.util.List: boolean add(java.lang.Object)>($r38);

        i11 = i11 + 1;

        goto label23;

     label24:
        return;
    }

    private static boolean isDiffIndex()
    {
        java.lang.String $r0, $r1, $r2;
        boolean $z0, $z1;

        $r0 = staticinvoke <org.apache.xmlbeans.SystemProperties: java.lang.String getProperty(java.lang.String)>("xmlbeans.diff.diffIndex");

        if $r0 != null goto label1;

        return 1;

     label1:
        $r1 = "0";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 != 0 goto label2;

        $r2 = "false";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r0);

        if $z1 == 0 goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }

    public static void filesAsXsb(java.io.File, java.io.File, java.util.List)
    {
        java.lang.AssertionError $r7, $r14;
        java.lang.StringBuffer $r8, $r9, $r11, $r12, $r15, $r16, $r18, $r19;
        java.lang.String $r4, $r5, $r10, $r13, $r17, $r20;
        boolean $z0, $z1, $z2, $z3;
        java.io.IOException $r21;
        java.io.FileInputStream $r0, $r2;
        java.io.File r1, r3;
        java.io.FileNotFoundException $r22;
        java.util.List r6;

        r1 := @parameter0: java.io.File;

        r3 := @parameter1: java.io.File;

        r6 := @parameter2: java.util.List;

        $z0 = <org.apache.xmlbeans.impl.tool.Diff: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z3 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z3 != 0 goto label1;

        $r14 = new java.lang.AssertionError;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("File \"");

        $r17 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" does not exist.");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.AssertionError: void <init>(java.lang.Object)>($r20);

        throw $r14;

     label1:
        $z1 = <org.apache.xmlbeans.impl.tool.Diff: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r3.<java.io.File: boolean exists()>();

        if $z2 != 0 goto label2;

        $r7 = new java.lang.AssertionError;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("File \"");

        $r10 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" does not exist.");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>($r13);

        throw $r7;

     label2:
        $r0 = new java.io.FileInputStream;

        specialinvoke $r0.<java.io.FileInputStream: void <init>(java.io.File)>(r1);

        $r2 = new java.io.FileInputStream;

        specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>(r3);

        $r4 = virtualinvoke r1.<java.io.File: java.lang.String getName()>();

        $r5 = virtualinvoke r3.<java.io.File: java.lang.String getName()>();

        staticinvoke <org.apache.xmlbeans.impl.tool.Diff: void streamsAsXsb(java.io.InputStream,java.lang.String,java.io.InputStream,java.lang.String,java.util.List)>($r0, $r4, $r2, $r5, r6);

     label3:
        goto label6;

     label4:
        $r22 := @caughtexception;

        goto label6;

     label5:
        $r21 := @caughtexception;

     label6:
        return;

        catch java.io.FileNotFoundException from label2 to label3 with label4;
        catch java.io.IOException from label2 to label3 with label5;
    }

    public static void zipEntriesAsXsb(java.util.zip.ZipEntry, java.util.jar.JarFile, java.util.zip.ZipEntry, java.util.jar.JarFile, java.util.List)
    {
        java.util.jar.JarFile r0, r3;
        java.io.IOException $r9;
        java.util.List r8;
        java.lang.String $r6, $r7;
        java.util.zip.ZipEntry r1, r4;
        java.io.InputStream $r2, $r5;

        r1 := @parameter0: java.util.zip.ZipEntry;

        r0 := @parameter1: java.util.jar.JarFile;

        r4 := @parameter2: java.util.zip.ZipEntry;

        r3 := @parameter3: java.util.jar.JarFile;

        r8 := @parameter4: java.util.List;

     label1:
        $r2 = virtualinvoke r0.<java.util.jar.JarFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>(r1);

        $r5 = virtualinvoke r3.<java.util.jar.JarFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>(r4);

        $r6 = virtualinvoke r1.<java.util.zip.ZipEntry: java.lang.String getName()>();

        $r7 = virtualinvoke r4.<java.util.zip.ZipEntry: java.lang.String getName()>();

        staticinvoke <org.apache.xmlbeans.impl.tool.Diff: void streamsAsXsb(java.io.InputStream,java.lang.String,java.io.InputStream,java.lang.String,java.util.List)>($r2, $r6, $r5, $r7, r8);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void streamsAsXsb(java.io.InputStream, java.lang.String, java.io.InputStream, java.lang.String, java.util.List) throws java.io.IOException
    {
        java.io.PrintStream $r3, $r5;
        java.io.ByteArrayOutputStream $r0, $r1;
        java.util.List r12;
        java.io.StringReader $r6, $r9;
        java.lang.String $r7, r8, $r10, r11;
        java.io.InputStream r2, r4;

        r2 := @parameter0: java.io.InputStream;

        r8 := @parameter1: java.lang.String;

        r4 := @parameter2: java.io.InputStream;

        r11 := @parameter3: java.lang.String;

        r12 := @parameter4: java.util.List;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

        $r3 = new java.io.PrintStream;

        specialinvoke $r3.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r0);

        staticinvoke <org.apache.xmlbeans.impl.tool.XsbDumper: void dump(java.io.InputStream,java.lang.String,java.io.PrintStream)>(r2, "", $r3);

        $r5 = new java.io.PrintStream;

        specialinvoke $r5.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r1);

        staticinvoke <org.apache.xmlbeans.impl.tool.XsbDumper: void dump(java.io.InputStream,java.lang.String,java.io.PrintStream)>(r4, "", $r5);

        virtualinvoke r2.<java.io.InputStream: void close()>();

        virtualinvoke r4.<java.io.InputStream: void close()>();

        $r6 = new java.io.StringReader;

        $r7 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        specialinvoke $r6.<java.io.StringReader: void <init>(java.lang.String)>($r7);

        $r9 = new java.io.StringReader;

        $r10 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        specialinvoke $r9.<java.io.StringReader: void <init>(java.lang.String)>($r10);

        staticinvoke <org.apache.xmlbeans.impl.tool.Diff: void readersAsText(java.io.Reader,java.lang.String,java.io.Reader,java.lang.String,java.util.List)>($r6, r8, $r9, r11, r12);

        return;
    }

    public static void readersAsText(java.io.Reader, java.lang.String, java.io.Reader, java.lang.String, java.util.List) throws java.io.IOException
    {
        java.util.List r4;
        java.io.Reader r0, r2;
        java.lang.String r1, r3;

        r0 := @parameter0: java.io.Reader;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.io.Reader;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.util.List;

        staticinvoke <org.apache.xmlbeans.impl.util.Diff: void readersAsText(java.io.Reader,java.lang.String,java.io.Reader,java.lang.String,java.util.List)>(r0, r1, r2, r3, r4);

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        boolean $z0, $z1;

        $r0 = <org.apache.xmlbeans.impl.tool.Diff: java.lang.Class class$org$apache$xmlbeans$impl$tool$Diff>;

        if $r0 != null goto label1;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.tool.Diff: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.tool.Diff");

        <org.apache.xmlbeans.impl.tool.Diff: java.lang.Class class$org$apache$xmlbeans$impl$tool$Diff> = $r1;

        goto label2;

     label1:
        $r1 = <org.apache.xmlbeans.impl.tool.Diff: java.lang.Class class$org$apache$xmlbeans$impl$tool$Diff>;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.apache.xmlbeans.impl.tool.Diff: boolean $assertionsDisabled> = $z1;

        return;
    }
}
