public final class edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall extends edu.mit.csail.sdg.alloy4compiler.ast.Expr
{
    public final edu.mit.csail.sdg.alloy4compiler.ast.Func fun;
    public final edu.mit.csail.sdg.alloy4.ConstList args;
    public final long extraWeight;
    private edu.mit.csail.sdg.alloy4.Pos span;

    public edu.mit.csail.sdg.alloy4.Pos span()
    {
        edu.mit.csail.sdg.alloy4.ConstList $r3;
        java.util.Iterator $r4;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall r0;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r6;
        edu.mit.csail.sdg.alloy4.Pos $r1, $r2, $r7, r8;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall;

        r8 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall: edu.mit.csail.sdg.alloy4.Pos span>;

        if r8 != null goto label3;

        $r2 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall: edu.mit.csail.sdg.alloy4.Pos pos>;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall: edu.mit.csail.sdg.alloy4.Pos closingBracket>;

        r8 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r1);

        $r3 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall: edu.mit.csail.sdg.alloy4.ConstList args>;

        $r4 = virtualinvoke $r3.<edu.mit.csail.sdg.alloy4.ConstList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r5;

        $r7 = virtualinvoke r6.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        r8 = virtualinvoke r8.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r7);

        goto label1;

     label2:
        r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall: edu.mit.csail.sdg.alloy4.Pos span> = r8;

     label3:
        return r8;
    }

    public void toString(java.lang.StringBuilder, int)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall r2;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r11, $r18;
        edu.mit.csail.sdg.alloy4compiler.ast.Func $r3, $r5, $r12;
        int i0, $i1, $i2, i3, i4, $i6;
        java.lang.String $r6, $r13, $r19;
        boolean $z0, $z1;
        edu.mit.csail.sdg.alloy4.ConstList $r8, $r15, $r16;
        java.util.Iterator $r9;
        java.lang.StringBuilder r0, $r1, $r4, $r7, $r14;
        java.lang.Object $r10, $r17;

        r2 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall;

        r0 := @parameter0: java.lang.StringBuilder;

        i0 := @parameter1: int;

        if i0 >= 0 goto label04;

        $r12 = r2.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall: edu.mit.csail.sdg.alloy4compiler.ast.Func fun>;

        $r13 = $r12.<edu.mit.csail.sdg.alloy4compiler.ast.Func: java.lang.String label>;

        $r14 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        i3 = 0;

     label01:
        $r15 = r2.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall: edu.mit.csail.sdg.alloy4.ConstList args>;

        $i2 = virtualinvoke $r15.<edu.mit.csail.sdg.alloy4.ConstList: int size()>();

        if i3 >= $i2 goto label03;

        if i3 <= 0 goto label02;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label02:
        $r16 = r2.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall: edu.mit.csail.sdg.alloy4.ConstList args>;

        $r17 = virtualinvoke $r16.<edu.mit.csail.sdg.alloy4.ConstList: java.lang.Object get(int)>(i3);

        $r18 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r17;

        $i6 = (int) -1;

        virtualinvoke $r18.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: void toString(java.lang.StringBuilder,int)>(r0, $i6);

        i3 = i3 + 1;

        goto label01;

     label03:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        goto label10;

     label04:
        i4 = 0;

     label05:
        if i4 >= i0 goto label06;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        i4 = i4 + 1;

        goto label05;

     label06:
        $r1 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ExprBadCall: ");

        $r3 = r2.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall: edu.mit.csail.sdg.alloy4compiler.ast.Func fun>;

        $z0 = $r3.<edu.mit.csail.sdg.alloy4compiler.ast.Func: boolean isPred>;

        if $z0 == 0 goto label07;

        $r19 = "pred ";

        goto label08;

     label07:
        $r19 = "fun ";

     label08:
        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r5 = r2.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall: edu.mit.csail.sdg.alloy4compiler.ast.Func fun>;

        $r6 = $r5.<edu.mit.csail.sdg.alloy4compiler.ast.Func: java.lang.String label>;

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r8 = r2.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall: edu.mit.csail.sdg.alloy4.ConstList args>;

        $r9 = virtualinvoke $r8.<edu.mit.csail.sdg.alloy4.ConstList: java.util.Iterator iterator()>();

     label09:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r10;

        $i1 = i0 + 2;

        virtualinvoke r11.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: void toString(java.lang.StringBuilder,int)>(r0, $i1);

        goto label09;

     label10:
        return;
    }

    private void <init>(edu.mit.csail.sdg.alloy4.Pos, edu.mit.csail.sdg.alloy4.Pos, boolean, edu.mit.csail.sdg.alloy4compiler.ast.Func, edu.mit.csail.sdg.alloy4.ConstList, edu.mit.csail.sdg.alloy4.JoinableList, long, long)
    {
        edu.mit.csail.sdg.alloy4.ConstList r6;
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r4;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall r0;
        long l0, l1;
        edu.mit.csail.sdg.alloy4.JoinableList r3;
        edu.mit.csail.sdg.alloy4compiler.ast.Func r5;
        edu.mit.csail.sdg.alloy4.Pos r1, r2;
        boolean z0;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4.Pos;

        r2 := @parameter1: edu.mit.csail.sdg.alloy4.Pos;

        z0 := @parameter2: boolean;

        r5 := @parameter3: edu.mit.csail.sdg.alloy4compiler.ast.Func;

        r6 := @parameter4: edu.mit.csail.sdg.alloy4.ConstList;

        r3 := @parameter5: edu.mit.csail.sdg.alloy4.JoinableList;

        l1 := @parameter6: long;

        l0 := @parameter7: long;

        $r4 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

        specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: void <init>(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,boolean,edu.mit.csail.sdg.alloy4compiler.ast.Type,int,long,edu.mit.csail.sdg.alloy4.JoinableList)>(r1, r2, z0, $r4, 0, l0, r3);

        r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall: edu.mit.csail.sdg.alloy4.Pos span> = null;

        r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall: edu.mit.csail.sdg.alloy4compiler.ast.Func fun> = r5;

        r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall: edu.mit.csail.sdg.alloy4.ConstList args> = r6;

        r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall: long extraWeight> = l1;

        return;
    }

    public static edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos, edu.mit.csail.sdg.alloy4.Pos, edu.mit.csail.sdg.alloy4compiler.ast.Func, edu.mit.csail.sdg.alloy4.ConstList, long)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r12, r27;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall $r35;
        byte $b0;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprVar r30;
        boolean $z0, $z1, $z2, z3, $z4, $z5, $z6, $z7;
        java.util.List $r6;
        edu.mit.csail.sdg.alloy4.Pos r1, r2;
        java.lang.StringBuilder $r13, $r15, $r17, $r19, $r20, $r22, $r33;
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r14, $r21;
        edu.mit.csail.sdg.alloy4.ErrorType $r34;
        long $l4, l5, l6;
        edu.mit.csail.sdg.alloy4.JoinableList $r24, r26;
        edu.mit.csail.sdg.alloy4compiler.ast.Func r3;
        int $i1, $i2, $i3, i7, $i8, $i10, $i12;
        java.lang.String $r5, $r10, $r18, $r28, $r29, $r31;
        edu.mit.csail.sdg.alloy4.ConstList r25;
        java.util.Iterator $r0, $r7, $r8;
        java.lang.Object $r11, $r16, $r23;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4.Pos;

        r2 := @parameter1: edu.mit.csail.sdg.alloy4.Pos;

        r3 := @parameter2: edu.mit.csail.sdg.alloy4compiler.ast.Func;

        r25 := @parameter3: edu.mit.csail.sdg.alloy4.ConstList;

        l5 := @parameter4: long;

        $b0 = l5 cmp 0L;

        $i8 = (int) $b0;

        if $i8 >= 0 goto label01;

        l5 = 0L;

     label01:
        if r25 != null goto label02;

        r25 = staticinvoke <edu.mit.csail.sdg.alloy4.ConstList: edu.mit.csail.sdg.alloy4.ConstList make()>();

     label02:
        l6 = l5;

        z3 = 0;

        r26 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall: edu.mit.csail.sdg.alloy4.JoinableList emptyListOfErrors>;

        $r0 = virtualinvoke r25.<edu.mit.csail.sdg.alloy4.ConstList: java.util.Iterator iterator()>();

     label03:
        $z4 = interfaceinvoke $r0.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label07;

        $r23 = interfaceinvoke $r0.<java.util.Iterator: java.lang.Object next()>();

        r27 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r23;

        $l4 = r27.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: long weight>;

        l6 = l6 + $l4;

        if z3 != 0 goto label04;

        $z2 = r27.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean ambiguous>;

        if $z2 == 0 goto label05;

     label04:
        $z5 = 1;

        goto label06;

     label05:
        $z5 = 0;

     label06:
        z3 = $z5;

        $r24 = r27.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.JoinableList errors>;

        r26 = virtualinvoke r26.<edu.mit.csail.sdg.alloy4.JoinableList: edu.mit.csail.sdg.alloy4.JoinableList make(edu.mit.csail.sdg.alloy4.JoinableList)>($r24);

        goto label03;

     label07:
        $z0 = virtualinvoke r26.<edu.mit.csail.sdg.alloy4.JoinableList: boolean isEmpty()>();

        if $z0 == 0 goto label20;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>(java.lang.String)>("This cannot be a correct call to ");

        $z1 = r3.<edu.mit.csail.sdg.alloy4compiler.ast.Func: boolean isPred>;

        if $z1 == 0 goto label08;

        $r28 = "pred ";

        goto label09;

     label08:
        $r28 = "fun ";

     label09:
        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r5 = r3.<edu.mit.csail.sdg.alloy4compiler.ast.Func: java.lang.String label>;

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $i1 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Func: int count()>();

        if $i1 != 0 goto label10;

        $r29 = ".\nIt has no parameters,\n";

        goto label11;

     label10:
        $r29 = ".\nThe parameters are\n";

     label11:
        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r6 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Func: java.util.List params()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $z6 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label13;

        $r16 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r30 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprVar) $r16;

        $r17 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r18 = r30.<edu.mit.csail.sdg.alloy4compiler.ast.ExprVar: java.lang.String label>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r21 = r30.<edu.mit.csail.sdg.alloy4compiler.ast.ExprVar: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        goto label12;

     label13:
        $i2 = virtualinvoke r25.<edu.mit.csail.sdg.alloy4.ConstList: int size()>();

        if $i2 == 0 goto label14;

        $i3 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Func: int count()>();

        if $i3 != 0 goto label15;

     label14:
        $r31 = "so the arguments cannot be empty.\n";

        goto label16;

     label15:
        $r31 = "so the arguments cannot be\n";

     label16:
        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        i7 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.ast.Func: int count()>();

        $r8 = virtualinvoke r25.<edu.mit.csail.sdg.alloy4.ConstList: java.util.Iterator iterator()>();

     label17:
        $z7 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label19;

        $r11 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r12 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r11;

        if i7 != 0 goto label18;

        goto label19;

     label18:
        $i10 = (int) -1;

        i7 = i7 + $i10;

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $i12 = (int) -1;

        virtualinvoke r12.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: void toString(java.lang.StringBuilder,int)>($r33, $i12);

        $r13 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (type = ");

        $r14 = r12.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")\n");

        goto label17;

     label19:
        $r34 = new edu.mit.csail.sdg.alloy4.ErrorType;

        $r10 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r34.<edu.mit.csail.sdg.alloy4.ErrorType: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>(r1, $r10);

        r26 = virtualinvoke r26.<edu.mit.csail.sdg.alloy4.JoinableList: edu.mit.csail.sdg.alloy4.JoinableList make(java.lang.Object)>($r34);

     label20:
        $r35 = new edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall;

        specialinvoke $r35.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall: void <init>(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,boolean,edu.mit.csail.sdg.alloy4compiler.ast.Func,edu.mit.csail.sdg.alloy4.ConstList,edu.mit.csail.sdg.alloy4.JoinableList,long,long)>(r1, r2, z3, r3, r25, r26, l5, l6);

        return $r35;
    }

    public int getDepth()
    {
        edu.mit.csail.sdg.alloy4.ConstList $r1;
        java.util.Iterator $r2;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall r0;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r4;
        int $i0, $i1, i2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall;

        i2 = 1;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall: edu.mit.csail.sdg.alloy4.ConstList args>;

        $r2 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4.ConstList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r3;

        $i1 = virtualinvoke r4.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: int getDepth()>();

        if i2 >= $i1 goto label2;

        i2 = $i1;

     label2:
        goto label1;

     label3:
        $i0 = 1 + i2;

        return $i0;
    }

    public edu.mit.csail.sdg.alloy4compiler.ast.Expr resolve(edu.mit.csail.sdg.alloy4compiler.ast.Type, java.util.Collection)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Type r1;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall r0;
        java.util.Collection r2;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Type;

        r2 := @parameter1: java.util.Collection;

        return r0;
    }

    final java.lang.Object accept(edu.mit.csail.sdg.alloy4compiler.ast.VisitReturn) throws edu.mit.csail.sdg.alloy4.Err
    {
        java.lang.Object $r2;
        edu.mit.csail.sdg.alloy4compiler.ast.VisitReturn r0;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall r1;

        r1 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.VisitReturn;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.VisitReturn: java.lang.Object visit(edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall)>(r1);

        return $r2;
    }

    public java.lang.String getDescription()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall r0;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall;

        return "<b>error</b> (parser or typechecker failed)";
    }

    public java.util.List getSubnodes()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall r1;
        java.util.ArrayList $r0;

        r1 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprBadCall;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>(0);

        return $r0;
    }
}
