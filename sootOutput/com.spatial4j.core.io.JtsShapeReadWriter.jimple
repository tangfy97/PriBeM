public class com.spatial4j.core.io.JtsShapeReadWriter extends com.spatial4j.core.io.ShapeReadWriter
{
    private static final byte TYPE_POINT;
    private static final byte TYPE_BBOX;
    private static final byte TYPE_GEOM;
    private boolean normalizeGeomCoords;

    public void <init>(com.spatial4j.core.context.jts.JtsSpatialContext)
    {
        com.spatial4j.core.io.JtsShapeReadWriter r0;
        com.spatial4j.core.context.jts.JtsSpatialContext r1;

        r0 := @this: com.spatial4j.core.io.JtsShapeReadWriter;

        r1 := @parameter0: com.spatial4j.core.context.jts.JtsSpatialContext;

        specialinvoke r0.<com.spatial4j.core.io.ShapeReadWriter: void <init>(com.spatial4j.core.context.SpatialContext)>(r1);

        r0.<com.spatial4j.core.io.JtsShapeReadWriter: boolean normalizeGeomCoords> = 1;

        return;
    }

    private void checkCoordinates(com.vividsolutions.jts.geom.Geometry)
    {
        com.vividsolutions.jts.geom.Geometry r0;
        com.spatial4j.core.io.JtsShapeReadWriter r2;
        com.spatial4j.core.io.JtsShapeReadWriter$1 $r1;

        r2 := @this: com.spatial4j.core.io.JtsShapeReadWriter;

        r0 := @parameter0: com.vividsolutions.jts.geom.Geometry;

        $r1 = new com.spatial4j.core.io.JtsShapeReadWriter$1;

        specialinvoke $r1.<com.spatial4j.core.io.JtsShapeReadWriter$1: void <init>(com.spatial4j.core.io.JtsShapeReadWriter)>(r2);

        virtualinvoke r0.<com.vividsolutions.jts.geom.Geometry: void apply(com.vividsolutions.jts.geom.CoordinateSequenceFilter)>($r1);

        return;
    }

    public com.spatial4j.core.shape.Shape readShape(java.lang.String) throws com.spatial4j.core.exception.InvalidShapeException
    {
        com.spatial4j.core.shape.Shape $r2;
        com.spatial4j.core.shape.jts.JtsPoint $r18;
        com.vividsolutions.jts.geom.Geometry $r7;
        boolean $z0, $z1, $z2, $z3, z4, $z5;
        com.spatial4j.core.context.SpatialContext $r4, $r9, $r11, $r14, $r16, $r19;
        com.spatial4j.core.exception.InvalidShapeException $r22;
        com.vividsolutions.jts.io.WKTReader $r3;
        com.vividsolutions.jts.geom.GeometryFactory $r6;
        java.lang.Throwable $r21;
        com.vividsolutions.jts.geom.Coordinate[] $r17;
        com.vividsolutions.jts.geom.Point $r20;
        com.spatial4j.core.shape.impl.RectangleImpl $r13, $r15;
        com.spatial4j.core.io.JtsShapeReadWriter r0;
        java.lang.String r1;
        com.spatial4j.core.context.jts.JtsSpatialContext $r5, $r10, $r12;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        com.vividsolutions.jts.geom.Envelope $r23;
        com.spatial4j.core.shape.jts.JtsGeometry $r8;

        r0 := @this: com.spatial4j.core.io.JtsShapeReadWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<com.spatial4j.core.io.ShapeReadWriter: com.spatial4j.core.shape.Shape readStandardShape(java.lang.String)>(r1);

        if $r2 != null goto label13;

     label01:
        $r3 = new com.vividsolutions.jts.io.WKTReader;

        $r4 = r0.<com.spatial4j.core.io.JtsShapeReadWriter: com.spatial4j.core.context.SpatialContext ctx>;

        $r5 = (com.spatial4j.core.context.jts.JtsSpatialContext) $r4;

        $r6 = virtualinvoke $r5.<com.spatial4j.core.context.jts.JtsSpatialContext: com.vividsolutions.jts.geom.GeometryFactory getGeometryFactory()>();

        specialinvoke $r3.<com.vividsolutions.jts.io.WKTReader: void <init>(com.vividsolutions.jts.geom.GeometryFactory)>($r6);

        $r7 = virtualinvoke $r3.<com.vividsolutions.jts.io.WKTReader: com.vividsolutions.jts.geom.Geometry read(java.lang.String)>(r1);

        specialinvoke r0.<com.spatial4j.core.io.JtsShapeReadWriter: void checkCoordinates(com.vividsolutions.jts.geom.Geometry)>($r7);

        $z0 = $r7 instanceof com.vividsolutions.jts.geom.Point;

        if $z0 == 0 goto label03;

        $r18 = new com.spatial4j.core.shape.jts.JtsPoint;

        $r20 = (com.vividsolutions.jts.geom.Point) $r7;

        $r19 = r0.<com.spatial4j.core.io.JtsShapeReadWriter: com.spatial4j.core.context.SpatialContext ctx>;

        specialinvoke $r18.<com.spatial4j.core.shape.jts.JtsPoint: void <init>(com.vividsolutions.jts.geom.Point,com.spatial4j.core.context.SpatialContext)>($r20, $r19);

     label02:
        return $r18;

     label03:
        $z1 = virtualinvoke $r7.<com.vividsolutions.jts.geom.Geometry: boolean isRectangle()>();

        if $z1 == 0 goto label10;

        z4 = 0;

        $r11 = r0.<com.spatial4j.core.io.JtsShapeReadWriter: com.spatial4j.core.context.SpatialContext ctx>;

        $r12 = (com.spatial4j.core.context.jts.JtsSpatialContext) $r11;

        $z2 = virtualinvoke $r12.<com.spatial4j.core.context.jts.JtsSpatialContext: boolean isGeo()>();

        if $z2 == 0 goto label06;

        $r17 = virtualinvoke $r7.<com.vividsolutions.jts.geom.Geometry: com.vividsolutions.jts.geom.Coordinate[] getCoordinates()>();

        $z3 = staticinvoke <com.vividsolutions.jts.algorithm.CGAlgorithms: boolean isCCW(com.vividsolutions.jts.geom.Coordinate[])>($r17);

        if $z3 != 0 goto label04;

        $z5 = 1;

        goto label05;

     label04:
        $z5 = 0;

     label05:
        z4 = $z5;

     label06:
        $r23 = virtualinvoke $r7.<com.vividsolutions.jts.geom.Geometry: com.vividsolutions.jts.geom.Envelope getEnvelopeInternal()>();

        if z4 == 0 goto label08;

        $r15 = new com.spatial4j.core.shape.impl.RectangleImpl;

        $d4 = virtualinvoke $r23.<com.vividsolutions.jts.geom.Envelope: double getMaxX()>();

        $d5 = virtualinvoke $r23.<com.vividsolutions.jts.geom.Envelope: double getMinX()>();

        $d6 = virtualinvoke $r23.<com.vividsolutions.jts.geom.Envelope: double getMinY()>();

        $d7 = virtualinvoke $r23.<com.vividsolutions.jts.geom.Envelope: double getMaxY()>();

        $r16 = r0.<com.spatial4j.core.io.JtsShapeReadWriter: com.spatial4j.core.context.SpatialContext ctx>;

        specialinvoke $r15.<com.spatial4j.core.shape.impl.RectangleImpl: void <init>(double,double,double,double,com.spatial4j.core.context.SpatialContext)>($d4, $d5, $d6, $d7, $r16);

     label07:
        return $r15;

     label08:
        $r13 = new com.spatial4j.core.shape.impl.RectangleImpl;

        $d0 = virtualinvoke $r23.<com.vividsolutions.jts.geom.Envelope: double getMinX()>();

        $d1 = virtualinvoke $r23.<com.vividsolutions.jts.geom.Envelope: double getMaxX()>();

        $d2 = virtualinvoke $r23.<com.vividsolutions.jts.geom.Envelope: double getMinY()>();

        $d3 = virtualinvoke $r23.<com.vividsolutions.jts.geom.Envelope: double getMaxY()>();

        $r14 = r0.<com.spatial4j.core.io.JtsShapeReadWriter: com.spatial4j.core.context.SpatialContext ctx>;

        specialinvoke $r13.<com.spatial4j.core.shape.impl.RectangleImpl: void <init>(double,double,double,double,com.spatial4j.core.context.SpatialContext)>($d0, $d1, $d2, $d3, $r14);

     label09:
        return $r13;

     label10:
        $r8 = new com.spatial4j.core.shape.jts.JtsGeometry;

        $r9 = r0.<com.spatial4j.core.io.JtsShapeReadWriter: com.spatial4j.core.context.SpatialContext ctx>;

        $r10 = (com.spatial4j.core.context.jts.JtsSpatialContext) $r9;

        specialinvoke $r8.<com.spatial4j.core.shape.jts.JtsGeometry: void <init>(com.vividsolutions.jts.geom.Geometry,com.spatial4j.core.context.jts.JtsSpatialContext,boolean)>($r7, $r10, 1);

     label11:
        return $r8;

     label12:
        $r21 := @caughtexception;

        $r22 = new com.spatial4j.core.exception.InvalidShapeException;

        specialinvoke $r22.<com.spatial4j.core.exception.InvalidShapeException: void <init>(java.lang.String,java.lang.Throwable)>("error reading WKT", $r21);

        throw $r22;

     label13:
        return $r2;

        catch com.vividsolutions.jts.io.ParseException from label01 to label02 with label12;
        catch com.vividsolutions.jts.io.ParseException from label03 to label07 with label12;
        catch com.vividsolutions.jts.io.ParseException from label08 to label09 with label12;
        catch com.vividsolutions.jts.io.ParseException from label10 to label11 with label12;
    }

    public java.lang.String writeShape(com.spatial4j.core.shape.Shape)
    {
        com.spatial4j.core.io.JtsShapeReadWriter r1;
        com.spatial4j.core.shape.Shape r0;
        com.vividsolutions.jts.geom.Geometry $r4;
        java.lang.String $r2, $r5;
        boolean $z0;
        com.spatial4j.core.shape.jts.JtsGeometry r3;

        r1 := @this: com.spatial4j.core.io.JtsShapeReadWriter;

        r0 := @parameter0: com.spatial4j.core.shape.Shape;

        $z0 = r0 instanceof com.spatial4j.core.shape.jts.JtsGeometry;

        if $z0 == 0 goto label1;

        r3 = (com.spatial4j.core.shape.jts.JtsGeometry) r0;

        $r4 = virtualinvoke r3.<com.spatial4j.core.shape.jts.JtsGeometry: com.vividsolutions.jts.geom.Geometry getGeom()>();

        $r5 = virtualinvoke $r4.<com.vividsolutions.jts.geom.Geometry: java.lang.String toText()>();

        return $r5;

     label1:
        $r2 = specialinvoke r1.<com.spatial4j.core.io.ShapeReadWriter: java.lang.String writeShape(com.spatial4j.core.shape.Shape)>(r0);

        return $r2;
    }

    public com.spatial4j.core.shape.Shape readShapeFromBytes(byte[], int, int) throws com.spatial4j.core.exception.InvalidShapeException
    {
        byte[] r0;
        java.nio.ByteBuffer $r1;
        byte $b2;
        com.spatial4j.core.shape.jts.JtsPoint $r31;
        com.vividsolutions.jts.geom.Geometry $r13;
        com.spatial4j.core.context.SpatialContext $r9, $r15, $r18, $r20, $r25;
        com.spatial4j.core.exception.InvalidShapeException $r36, $r37, $r39;
        java.lang.StringBuilder $r4, $r5, $r38;
        com.vividsolutions.jts.geom.GeometryFactory $r11, $r22;
        com.spatial4j.core.io.JtsShapeReadWriter$2 $r34;
        java.lang.Throwable $r28;
        com.vividsolutions.jts.io.WKBReader $r33;
        com.vividsolutions.jts.geom.Point $r24;
        com.spatial4j.core.shape.impl.RectangleImpl $r32;
        com.spatial4j.core.io.JtsShapeReadWriter r8;
        int i0, i1, $i3, $i4;
        java.lang.String $r6;
        com.spatial4j.core.context.jts.JtsSpatialContext $r10, $r16, $r21;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        com.vividsolutions.jts.geom.Coordinate $r30;
        java.io.IOException $r26;
        com.spatial4j.core.shape.jts.JtsGeometry $r35;

        r8 := @this: com.spatial4j.core.io.JtsShapeReadWriter;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>(r0, i0, i1);

        $b2 = virtualinvoke $r1.<java.nio.ByteBuffer: byte get()>();

        if $b2 != 0 goto label1;

        $r31 = new com.spatial4j.core.shape.jts.JtsPoint;

        $r20 = r8.<com.spatial4j.core.io.JtsShapeReadWriter: com.spatial4j.core.context.SpatialContext ctx>;

        $r21 = (com.spatial4j.core.context.jts.JtsSpatialContext) $r20;

        $r22 = virtualinvoke $r21.<com.spatial4j.core.context.jts.JtsSpatialContext: com.vividsolutions.jts.geom.GeometryFactory getGeometryFactory()>();

        $r30 = new com.vividsolutions.jts.geom.Coordinate;

        $d4 = virtualinvoke $r1.<java.nio.ByteBuffer: double getDouble()>();

        $d5 = virtualinvoke $r1.<java.nio.ByteBuffer: double getDouble()>();

        specialinvoke $r30.<com.vividsolutions.jts.geom.Coordinate: void <init>(double,double)>($d4, $d5);

        $r24 = virtualinvoke $r22.<com.vividsolutions.jts.geom.GeometryFactory: com.vividsolutions.jts.geom.Point createPoint(com.vividsolutions.jts.geom.Coordinate)>($r30);

        $r25 = r8.<com.spatial4j.core.io.JtsShapeReadWriter: com.spatial4j.core.context.SpatialContext ctx>;

        specialinvoke $r31.<com.spatial4j.core.shape.jts.JtsPoint: void <init>(com.vividsolutions.jts.geom.Point,com.spatial4j.core.context.SpatialContext)>($r24, $r25);

        return $r31;

     label1:
        if $b2 != 1 goto label2;

        $r32 = new com.spatial4j.core.shape.impl.RectangleImpl;

        $d0 = virtualinvoke $r1.<java.nio.ByteBuffer: double getDouble()>();

        $d1 = virtualinvoke $r1.<java.nio.ByteBuffer: double getDouble()>();

        $d2 = virtualinvoke $r1.<java.nio.ByteBuffer: double getDouble()>();

        $d3 = virtualinvoke $r1.<java.nio.ByteBuffer: double getDouble()>();

        $r18 = r8.<com.spatial4j.core.io.JtsShapeReadWriter: com.spatial4j.core.context.SpatialContext ctx>;

        specialinvoke $r32.<com.spatial4j.core.shape.impl.RectangleImpl: void <init>(double,double,double,double,com.spatial4j.core.context.SpatialContext)>($d0, $d1, $d2, $d3, $r18);

        return $r32;

     label2:
        $i3 = (int) $b2;

        if $i3 != 2 goto label7;

        $r33 = new com.vividsolutions.jts.io.WKBReader;

        $r9 = r8.<com.spatial4j.core.io.JtsShapeReadWriter: com.spatial4j.core.context.SpatialContext ctx>;

        $r10 = (com.spatial4j.core.context.jts.JtsSpatialContext) $r9;

        $r11 = virtualinvoke $r10.<com.spatial4j.core.context.jts.JtsSpatialContext: com.vividsolutions.jts.geom.GeometryFactory getGeometryFactory()>();

        specialinvoke $r33.<com.vividsolutions.jts.io.WKBReader: void <init>(com.vividsolutions.jts.geom.GeometryFactory)>($r11);

     label3:
        $r34 = new com.spatial4j.core.io.JtsShapeReadWriter$2;

        specialinvoke $r34.<com.spatial4j.core.io.JtsShapeReadWriter$2: void <init>(com.spatial4j.core.io.JtsShapeReadWriter,int,int,byte[])>(r8, i0, i1, r0);

        $r13 = virtualinvoke $r33.<com.vividsolutions.jts.io.WKBReader: com.vividsolutions.jts.geom.Geometry read(com.vividsolutions.jts.io.InStream)>($r34);

        specialinvoke r8.<com.spatial4j.core.io.JtsShapeReadWriter: void checkCoordinates(com.vividsolutions.jts.geom.Geometry)>($r13);

        $r35 = new com.spatial4j.core.shape.jts.JtsGeometry;

        $r15 = r8.<com.spatial4j.core.io.JtsShapeReadWriter: com.spatial4j.core.context.SpatialContext ctx>;

        $r16 = (com.spatial4j.core.context.jts.JtsSpatialContext) $r15;

        specialinvoke $r35.<com.spatial4j.core.shape.jts.JtsGeometry: void <init>(com.vividsolutions.jts.geom.Geometry,com.spatial4j.core.context.jts.JtsSpatialContext,boolean)>($r13, $r16, 1);

     label4:
        return $r35;

     label5:
        $r28 := @caughtexception;

        $r36 = new com.spatial4j.core.exception.InvalidShapeException;

        specialinvoke $r36.<com.spatial4j.core.exception.InvalidShapeException: void <init>(java.lang.String,java.lang.Throwable)>("error reading WKT", $r28);

        throw $r36;

     label6:
        $r26 := @caughtexception;

        $r37 = new com.spatial4j.core.exception.InvalidShapeException;

        specialinvoke $r37.<com.spatial4j.core.exception.InvalidShapeException: void <init>(java.lang.String,java.lang.Throwable)>("error reading WKT", $r26);

        throw $r37;

     label7:
        $r39 = new com.spatial4j.core.exception.InvalidShapeException;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("shape not handled: ");

        $i4 = (int) $b2;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r39.<com.spatial4j.core.exception.InvalidShapeException: void <init>(java.lang.String)>($r6);

        throw $r39;

        catch com.vividsolutions.jts.io.ParseException from label3 to label4 with label5;
        catch java.io.IOException from label3 to label4 with label6;
    }

    public byte[] writeShapeToBytes(com.spatial4j.core.shape.Shape) throws java.io.IOException
    {
        byte[] $r12, $r13, $r15, $r16, $r18, $r19, $r21;
        java.nio.ByteBuffer $r14, $r17, $r20;
        com.spatial4j.core.shape.Shape r0;
        com.spatial4j.core.shape.Point r23;
        com.vividsolutions.jts.geom.Geometry $r11;
        boolean $z0, $z1, $z2;
        com.spatial4j.core.shape.Rectangle r24;
        java.lang.StringBuilder $r5, $r6, $r7;
        com.spatial4j.core.io.JtsShapeReadWriter r22;
        int $i0, $i1;
        java.lang.String $r8;
        com.vividsolutions.jts.io.WKBWriter $r9;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        java.lang.IllegalArgumentException $r4;
        java.lang.Class $r1, $r2, $r3;
        com.spatial4j.core.shape.jts.JtsGeometry $r10;

        r22 := @this: com.spatial4j.core.io.JtsShapeReadWriter;

        r0 := @parameter0: com.spatial4j.core.shape.Shape;

        $r1 = class "Lcom/spatial4j/core/shape/Point;";

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isInstance(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r19 = newarray (byte)[17];

        $r20 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r19);

        r23 = (com.spatial4j.core.shape.Point) r0;

        virtualinvoke $r20.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(0);

        $d4 = interfaceinvoke r23.<com.spatial4j.core.shape.Point: double getX()>();

        virtualinvoke $r20.<java.nio.ByteBuffer: java.nio.ByteBuffer putDouble(double)>($d4);

        $d5 = interfaceinvoke r23.<com.spatial4j.core.shape.Point: double getY()>();

        virtualinvoke $r20.<java.nio.ByteBuffer: java.nio.ByteBuffer putDouble(double)>($d5);

        $r21 = virtualinvoke $r20.<java.nio.ByteBuffer: byte[] array()>();

        return $r21;

     label1:
        $r2 = class "Lcom/spatial4j/core/shape/Rectangle;";

        $z1 = virtualinvoke $r2.<java.lang.Class: boolean isInstance(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

        r24 = (com.spatial4j.core.shape.Rectangle) r0;

        $r16 = newarray (byte)[33];

        $r17 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r16);

        virtualinvoke $r17.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(1);

        $d0 = interfaceinvoke r24.<com.spatial4j.core.shape.Rectangle: double getMinX()>();

        virtualinvoke $r17.<java.nio.ByteBuffer: java.nio.ByteBuffer putDouble(double)>($d0);

        $d1 = interfaceinvoke r24.<com.spatial4j.core.shape.Rectangle: double getMaxX()>();

        virtualinvoke $r17.<java.nio.ByteBuffer: java.nio.ByteBuffer putDouble(double)>($d1);

        $d2 = interfaceinvoke r24.<com.spatial4j.core.shape.Rectangle: double getMinY()>();

        virtualinvoke $r17.<java.nio.ByteBuffer: java.nio.ByteBuffer putDouble(double)>($d2);

        $d3 = interfaceinvoke r24.<com.spatial4j.core.shape.Rectangle: double getMaxY()>();

        virtualinvoke $r17.<java.nio.ByteBuffer: java.nio.ByteBuffer putDouble(double)>($d3);

        $r18 = virtualinvoke $r17.<java.nio.ByteBuffer: byte[] array()>();

        return $r18;

     label2:
        $r3 = class "Lcom/spatial4j/core/shape/jts/JtsGeometry;";

        $z2 = virtualinvoke $r3.<java.lang.Class: boolean isInstance(java.lang.Object)>(r0);

        if $z2 == 0 goto label3;

        $r9 = new com.vividsolutions.jts.io.WKBWriter;

        specialinvoke $r9.<com.vividsolutions.jts.io.WKBWriter: void <init>()>();

        $r10 = (com.spatial4j.core.shape.jts.JtsGeometry) r0;

        $r11 = virtualinvoke $r10.<com.spatial4j.core.shape.jts.JtsGeometry: com.vividsolutions.jts.geom.Geometry getGeom()>();

        $r12 = virtualinvoke $r9.<com.vividsolutions.jts.io.WKBWriter: byte[] write(com.vividsolutions.jts.geom.Geometry)>($r11);

        $i0 = lengthof $r12;

        $i1 = 1 + $i0;

        $r13 = newarray (byte)[$i1];

        $r14 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r13);

        virtualinvoke $r14.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(2);

        virtualinvoke $r14.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r12);

        $r15 = virtualinvoke $r14.<java.nio.ByteBuffer: byte[] array()>();

        return $r15;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unsuported shape:");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;
    }

    static boolean access$000(com.spatial4j.core.io.JtsShapeReadWriter)
    {
        com.spatial4j.core.io.JtsShapeReadWriter r0;
        boolean $z0;

        r0 := @parameter0: com.spatial4j.core.io.JtsShapeReadWriter;

        $z0 = r0.<com.spatial4j.core.io.JtsShapeReadWriter: boolean normalizeGeomCoords>;

        return $z0;
    }

    public static void <clinit>()
    {
        <com.spatial4j.core.io.JtsShapeReadWriter: byte TYPE_GEOM> = 2;

        <com.spatial4j.core.io.JtsShapeReadWriter: byte TYPE_BBOX> = 1;

        <com.spatial4j.core.io.JtsShapeReadWriter: byte TYPE_POINT> = 0;

        return;
    }
}
