public class javax.ws.rs.ValidationException extends javax.ws.rs.WebApplicationException
{
    private static final long serialVersionUID;
    private java.util.List violations;

    public void <init>()
    {
        javax.ws.rs.ValidationException r0;
        javax.ws.rs.core.Response$Status $r1;
        java.util.List $r2;

        r0 := @this: javax.ws.rs.ValidationException;

        $r1 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status INTERNAL_SERVER_ERROR>;

        $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        specialinvoke r0.<javax.ws.rs.ValidationException: void <init>(javax.ws.rs.core.Response$Status,java.util.List)>($r1, $r2);

        return;
    }

    public void <init>(int)
    {
        int i0;
        javax.ws.rs.ValidationException r0;
        java.util.List $r1;

        r0 := @this: javax.ws.rs.ValidationException;

        i0 := @parameter0: int;

        $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        specialinvoke r0.<javax.ws.rs.ValidationException: void <init>(int,java.util.List)>(i0, $r1);

        return;
    }

    public void <init>(javax.ws.rs.core.Response$Status) throws java.lang.IllegalArgumentException
    {
        javax.ws.rs.ValidationException r0;
        javax.ws.rs.core.Response$Status r1;
        java.util.List $r2;

        r0 := @this: javax.ws.rs.ValidationException;

        r1 := @parameter0: javax.ws.rs.core.Response$Status;

        $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        specialinvoke r0.<javax.ws.rs.ValidationException: void <init>(javax.ws.rs.core.Response$Status,java.util.List)>(r1, $r2);

        return;
    }

    public void <init>(int, java.util.List) throws java.lang.IllegalArgumentException
    {
        javax.ws.rs.ValidationException r0;
        java.util.List r1;
        int i0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: javax.ws.rs.ValidationException;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        specialinvoke r0.<javax.ws.rs.WebApplicationException: void <init>(int)>(i0);

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("List of violations must not be null");

        throw $r2;

     label1:
        r0.<javax.ws.rs.ValidationException: java.util.List violations> = r1;

        return;
    }

    public void <init>(javax.ws.rs.core.Response$Status, java.util.List) throws java.lang.IllegalArgumentException
    {
        javax.ws.rs.ValidationException r0;
        java.util.List r2;
        javax.ws.rs.core.Response$Status r1;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: javax.ws.rs.ValidationException;

        r1 := @parameter0: javax.ws.rs.core.Response$Status;

        r2 := @parameter1: java.util.List;

        specialinvoke r0.<javax.ws.rs.WebApplicationException: void <init>(javax.ws.rs.core.Response$Status)>(r1);

        if r2 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("List of violations must not be null");

        throw $r3;

     label1:
        r0.<javax.ws.rs.ValidationException: java.util.List violations> = r2;

        return;
    }

    public java.util.List getViolations()
    {
        javax.ws.rs.ValidationException r0;
        java.util.List $r1;

        r0 := @this: javax.ws.rs.ValidationException;

        $r1 = r0.<javax.ws.rs.ValidationException: java.util.List violations>;

        return $r1;
    }

    public static void <clinit>()
    {
        <javax.ws.rs.ValidationException: long serialVersionUID> = 11660103L;

        return;
    }
}
