public class org.springframework.beans.propertyeditors.URIEditor extends java.beans.PropertyEditorSupport
{
    private final java.lang.ClassLoader classLoader;
    private final boolean encode;

    public void <init>()
    {
        org.springframework.beans.propertyeditors.URIEditor r0;

        r0 := @this: org.springframework.beans.propertyeditors.URIEditor;

        specialinvoke r0.<java.beans.PropertyEditorSupport: void <init>()>();

        r0.<org.springframework.beans.propertyeditors.URIEditor: java.lang.ClassLoader classLoader> = null;

        r0.<org.springframework.beans.propertyeditors.URIEditor: boolean encode> = 1;

        return;
    }

    public void <init>(boolean)
    {
        org.springframework.beans.propertyeditors.URIEditor r0;
        boolean z0;

        r0 := @this: org.springframework.beans.propertyeditors.URIEditor;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.beans.PropertyEditorSupport: void <init>()>();

        r0.<org.springframework.beans.propertyeditors.URIEditor: java.lang.ClassLoader classLoader> = null;

        r0.<org.springframework.beans.propertyeditors.URIEditor: boolean encode> = z0;

        return;
    }

    public void <init>(java.lang.ClassLoader)
    {
        org.springframework.beans.propertyeditors.URIEditor r0;
        java.lang.ClassLoader r1, $r2;

        r0 := @this: org.springframework.beans.propertyeditors.URIEditor;

        r1 := @parameter0: java.lang.ClassLoader;

        specialinvoke r0.<java.beans.PropertyEditorSupport: void <init>()>();

        if r1 == null goto label1;

        $r2 = r1;

        goto label2;

     label1:
        $r2 = staticinvoke <org.springframework.util.ClassUtils: java.lang.ClassLoader getDefaultClassLoader()>();

     label2:
        r0.<org.springframework.beans.propertyeditors.URIEditor: java.lang.ClassLoader classLoader> = $r2;

        r0.<org.springframework.beans.propertyeditors.URIEditor: boolean encode> = 1;

        return;
    }

    public void <init>(java.lang.ClassLoader, boolean)
    {
        org.springframework.beans.propertyeditors.URIEditor r0;
        java.lang.ClassLoader r1, $r2;
        boolean z0;

        r0 := @this: org.springframework.beans.propertyeditors.URIEditor;

        r1 := @parameter0: java.lang.ClassLoader;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.beans.PropertyEditorSupport: void <init>()>();

        if r1 == null goto label1;

        $r2 = r1;

        goto label2;

     label1:
        $r2 = staticinvoke <org.springframework.util.ClassUtils: java.lang.ClassLoader getDefaultClassLoader()>();

     label2:
        r0.<org.springframework.beans.propertyeditors.URIEditor: java.lang.ClassLoader classLoader> = $r2;

        r0.<org.springframework.beans.propertyeditors.URIEditor: boolean encode> = z0;

        return;
    }

    public void setAsText(java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.net.URL $r9;
        java.net.URISyntaxException $r12, $r17;
        java.net.URI $r4, $r11;
        boolean $z0, $z1;
        java.lang.StringBuilder $r14, $r15, $r19, $r20, $r24, $r25, $r26, $r28;
        java.lang.ClassLoader $r3, $r8;
        org.springframework.core.io.ClassPathResource $r5;
        int $i0;
        java.lang.String r0, $r2, $r6, $r7, $r10, $r16, $r21, $r27, $r29;
        java.io.IOException $r22;
        java.lang.IllegalArgumentException $r13, $r18, $r23;
        org.springframework.beans.propertyeditors.URIEditor r1;

        r1 := @this: org.springframework.beans.propertyeditors.URIEditor;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r0);

        if $z0 == 0 goto label8;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $r3 = r1.<org.springframework.beans.propertyeditors.URIEditor: java.lang.ClassLoader classLoader>;

        if $r3 == null goto label5;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("classpath:");

        if $z1 == 0 goto label5;

        $r5 = new org.springframework.core.io.ClassPathResource;

        $r6 = "classpath:";

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        $r7 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

        $r8 = r1.<org.springframework.beans.propertyeditors.URIEditor: java.lang.ClassLoader classLoader>;

        specialinvoke $r5.<org.springframework.core.io.ClassPathResource: void <init>(java.lang.String,java.lang.ClassLoader)>($r7, $r8);

     label1:
        $r9 = virtualinvoke $r5.<org.springframework.core.io.ClassPathResource: java.net.URL getURL()>();

        $r10 = virtualinvoke $r9.<java.net.URL: java.lang.String toString()>();

        $r11 = virtualinvoke r1.<org.springframework.beans.propertyeditors.URIEditor: java.net.URI createURI(java.lang.String)>($r10);

        virtualinvoke r1.<org.springframework.beans.propertyeditors.URIEditor: void setValue(java.lang.Object)>($r11);

     label2:
        goto label9;

     label3:
        $r22 := @caughtexception;

        $r23 = new java.lang.IllegalArgumentException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not retrieve URI for ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r27 = virtualinvoke $r22.<java.io.IOException: java.lang.String getMessage()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r29);

        throw $r23;

     label4:
        $r17 := @caughtexception;

        $r18 = new java.lang.IllegalArgumentException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid URI syntax: ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw $r18;

     label5:
        $r4 = virtualinvoke r1.<org.springframework.beans.propertyeditors.URIEditor: java.net.URI createURI(java.lang.String)>($r2);

        virtualinvoke r1.<org.springframework.beans.propertyeditors.URIEditor: void setValue(java.lang.Object)>($r4);

     label6:
        goto label9;

     label7:
        $r12 := @caughtexception;

        $r13 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid URI syntax: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r13;

     label8:
        virtualinvoke r1.<org.springframework.beans.propertyeditors.URIEditor: void setValue(java.lang.Object)>(null);

     label9:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.net.URISyntaxException from label1 to label2 with label4;
        catch java.net.URISyntaxException from label5 to label6 with label7;
    }

    protected java.net.URI createURI(java.lang.String) throws java.net.URISyntaxException
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;
        org.springframework.beans.propertyeditors.URIEditor r1;
        java.lang.String r0, $r3, $r4, $r6;
        java.net.URI $r7, $r8;
        boolean $z0;

        r1 := @this: org.springframework.beans.propertyeditors.URIEditor;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(58);

        $z0 = r1.<org.springframework.beans.propertyeditors.URIEditor: boolean encode>;

        if $z0 == 0 goto label5;

        $i7 = (int) -1;

        if $i0 == $i7 goto label5;

        $i1 = $i0 + 1;

        $i2 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(35, $i1);

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i3 = $i0 + 1;

        if $i2 <= 0 goto label1;

        $i5 = $i2;

        goto label2;

     label1:
        $i5 = virtualinvoke r0.<java.lang.String: int length()>();

     label2:
        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i3, $i5);

        if $i2 <= 0 goto label3;

        $i4 = $i2 + 1;

        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i4);

        goto label4;

     label3:
        $r6 = null;

     label4:
        $r7 = new java.net.URI;

        specialinvoke $r7.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r3, $r4, $r6);

        return $r7;

     label5:
        $r8 = new java.net.URI;

        specialinvoke $r8.<java.net.URI: void <init>(java.lang.String)>(r0);

        return $r8;
    }

    public java.lang.String getAsText()
    {
        org.springframework.beans.propertyeditors.URIEditor r0;
        java.lang.Object $r1;
        java.net.URI r2;
        java.lang.String $r3;

        r0 := @this: org.springframework.beans.propertyeditors.URIEditor;

        $r1 = virtualinvoke r0.<org.springframework.beans.propertyeditors.URIEditor: java.lang.Object getValue()>();

        r2 = (java.net.URI) $r1;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<java.net.URI: java.lang.String toString()>();

        goto label2;

     label1:
        $r3 = "";

     label2:
        return $r3;
    }
}
