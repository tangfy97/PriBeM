public abstract class org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator extends org.springframework.aop.framework.ProxyConfig implements org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor, org.springframework.beans.factory.BeanClassLoaderAware, org.springframework.beans.factory.BeanFactoryAware, org.springframework.core.Ordered, org.springframework.aop.framework.AopInfrastructureBean
{
    protected static final java.lang.Object[] DO_NOT_PROXY;
    protected static final java.lang.Object[] PROXY_WITHOUT_ADDITIONAL_INTERCEPTORS;
    protected final org.apache.commons.logging.Log logger;
    private int order;
    private org.springframework.aop.framework.adapter.AdvisorAdapterRegistry advisorAdapterRegistry;
    private boolean freezeProxy;
    private java.lang.String[] interceptorNames;
    private boolean applyCommonInterceptorsFirst;
    private org.springframework.aop.framework.autoproxy.TargetSourceCreator[] customTargetSourceCreators;
    private java.lang.ClassLoader proxyClassLoader;
    private boolean classLoaderConfigured;
    private org.springframework.beans.factory.BeanFactory beanFactory;
    private final java.util.Set targetSourcedBeans;
    private final java.util.Set earlyProxyReferences;
    private final java.util.Set advisedBeans;
    private final java.util.Set nonAdvisedBeans;
    private final java.util.Map proxyTypes;

    static void <clinit>()
    {
        java.lang.Object[] $r0;

        <org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.lang.Object[] DO_NOT_PROXY> = null;

        $r0 = newarray (java.lang.Object)[0];

        <org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.lang.Object[] PROXY_WITHOUT_ADDITIONAL_INTERCEPTORS> = $r0;

        return;
    }

    public void <init>()
    {
        java.util.concurrent.ConcurrentHashMap $r14;
        java.util.Set $r7, $r9, $r11, $r13;
        java.lang.String[] $r4;
        org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator r0;
        org.springframework.aop.framework.adapter.AdvisorAdapterRegistry $r3;
        java.util.HashSet $r6, $r8, $r10, $r12;
        java.lang.Class $r1;
        org.apache.commons.logging.Log $r2;
        java.lang.ClassLoader $r5;

        r0 := @this: org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator;

        specialinvoke r0.<org.springframework.aop.framework.ProxyConfig: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: org.apache.commons.logging.Log logger> = $r2;

        r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: int order> = 2147483647;

        $r3 = staticinvoke <org.springframework.aop.framework.adapter.GlobalAdvisorAdapterRegistry: org.springframework.aop.framework.adapter.AdvisorAdapterRegistry getInstance()>();

        r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: org.springframework.aop.framework.adapter.AdvisorAdapterRegistry advisorAdapterRegistry> = $r3;

        r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: boolean freezeProxy> = 0;

        $r4 = newarray (java.lang.String)[0];

        r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.lang.String[] interceptorNames> = $r4;

        r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: boolean applyCommonInterceptorsFirst> = 1;

        $r5 = staticinvoke <org.springframework.util.ClassUtils: java.lang.ClassLoader getDefaultClassLoader()>();

        r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.lang.ClassLoader proxyClassLoader> = $r5;

        r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: boolean classLoaderConfigured> = 0;

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        $r7 = staticinvoke <java.util.Collections: java.util.Set synchronizedSet(java.util.Set)>($r6);

        r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.util.Set targetSourcedBeans> = $r7;

        $r8 = new java.util.HashSet;

        specialinvoke $r8.<java.util.HashSet: void <init>()>();

        $r9 = staticinvoke <java.util.Collections: java.util.Set synchronizedSet(java.util.Set)>($r8);

        r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.util.Set earlyProxyReferences> = $r9;

        $r10 = new java.util.HashSet;

        specialinvoke $r10.<java.util.HashSet: void <init>()>();

        $r11 = staticinvoke <java.util.Collections: java.util.Set synchronizedSet(java.util.Set)>($r10);

        r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.util.Set advisedBeans> = $r11;

        $r12 = new java.util.HashSet;

        specialinvoke $r12.<java.util.HashSet: void <init>()>();

        $r13 = staticinvoke <java.util.Collections: java.util.Set synchronizedSet(java.util.Set)>($r12);

        r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.util.Set nonAdvisedBeans> = $r13;

        $r14 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r14.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.util.Map proxyTypes> = $r14;

        return;
    }

    public final void setOrder(int)
    {
        int i0;
        org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator r0;

        r0 := @this: org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator;

        i0 := @parameter0: int;

        r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: int order> = i0;

        return;
    }

    public final int getOrder()
    {
        int $i0;
        org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator r0;

        r0 := @this: org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator;

        $i0 = r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: int order>;

        return $i0;
    }

    public void setFrozen(boolean)
    {
        org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator r0;
        boolean z0;

        r0 := @this: org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator;

        z0 := @parameter0: boolean;

        r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: boolean freezeProxy> = z0;

        return;
    }

    public boolean isFrozen()
    {
        org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator r0;
        boolean $z0;

        r0 := @this: org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator;

        $z0 = r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: boolean freezeProxy>;

        return $z0;
    }

    public void setAdvisorAdapterRegistry(org.springframework.aop.framework.adapter.AdvisorAdapterRegistry)
    {
        org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator r0;
        org.springframework.aop.framework.adapter.AdvisorAdapterRegistry r1;

        r0 := @this: org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator;

        r1 := @parameter0: org.springframework.aop.framework.adapter.AdvisorAdapterRegistry;

        r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: org.springframework.aop.framework.adapter.AdvisorAdapterRegistry advisorAdapterRegistry> = r1;

        return;
    }

    public void setCustomTargetSourceCreators(org.springframework.aop.framework.autoproxy.TargetSourceCreator[])
    {
        org.springframework.aop.framework.autoproxy.TargetSourceCreator[] r1;
        org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator r0;

        r0 := @this: org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator;

        r1 := @parameter0: org.springframework.aop.framework.autoproxy.TargetSourceCreator[];

        r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: org.springframework.aop.framework.autoproxy.TargetSourceCreator[] customTargetSourceCreators> = r1;

        return;
    }

    public void setInterceptorNames(java.lang.String[])
    {
        java.lang.String[] r1;
        org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator r0;

        r0 := @this: org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator;

        r1 := @parameter0: java.lang.String[];

        r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.lang.String[] interceptorNames> = r1;

        return;
    }

    public void setApplyCommonInterceptorsFirst(boolean)
    {
        org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator r0;
        boolean z0;

        r0 := @this: org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator;

        z0 := @parameter0: boolean;

        r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: boolean applyCommonInterceptorsFirst> = z0;

        return;
    }

    public void setProxyClassLoader(java.lang.ClassLoader)
    {
        java.lang.ClassLoader r1;
        org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator r0;
        boolean $z0;

        r0 := @this: org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator;

        r1 := @parameter0: java.lang.ClassLoader;

        r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.lang.ClassLoader proxyClassLoader> = r1;

        if r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: boolean classLoaderConfigured> = $z0;

        return;
    }

    public void setBeanClassLoader(java.lang.ClassLoader)
    {
        java.lang.ClassLoader r1;
        org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator r0;
        boolean $z0;

        r0 := @this: org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator;

        r1 := @parameter0: java.lang.ClassLoader;

        $z0 = r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: boolean classLoaderConfigured>;

        if $z0 != 0 goto label1;

        r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.lang.ClassLoader proxyClassLoader> = r1;

     label1:
        return;
    }

    public void setBeanFactory(org.springframework.beans.factory.BeanFactory)
    {
        org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator r0;
        org.springframework.beans.factory.BeanFactory r1;

        r0 := @this: org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator;

        r1 := @parameter0: org.springframework.beans.factory.BeanFactory;

        r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: org.springframework.beans.factory.BeanFactory beanFactory> = r1;

        return;
    }

    protected org.springframework.beans.factory.BeanFactory getBeanFactory()
    {
        org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator r0;
        org.springframework.beans.factory.BeanFactory $r1;

        r0 := @this: org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator;

        $r1 = r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: org.springframework.beans.factory.BeanFactory beanFactory>;

        return $r1;
    }

    public java.lang.Class predictBeanType(java.lang.Class, java.lang.String)
    {
        java.util.Map $r4;
        java.lang.Class r1, $r6;
        java.lang.Object $r3, $r5;
        java.lang.String r2;
        org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator r0;

        r0 := @this: org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.lang.Object getCacheKey(java.lang.Class,java.lang.String)>(r1, r2);

        $r4 = r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.util.Map proxyTypes>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r6 = (java.lang.Class) $r5;

        return $r6;
    }

    public java.lang.reflect.Constructor[] determineCandidateConstructors(java.lang.Class, java.lang.String) throws org.springframework.beans.BeansException
    {
        java.lang.Class r1;
        java.lang.String r2;
        org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator r0;

        r0 := @this: org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        return null;
    }

    public java.lang.Object getEarlyBeanReference(java.lang.Object, java.lang.String) throws org.springframework.beans.BeansException
    {
        java.util.Set $r5;
        java.lang.Object r1, $r4, $r6;
        java.lang.Class $r2;
        java.lang.String r3;
        org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator r0;

        r0 := @this: org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.lang.Object getCacheKey(java.lang.Class,java.lang.String)>($r2, r3);

        $r5 = r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.util.Set earlyProxyReferences>;

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r4);

        $r6 = virtualinvoke r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.lang.Object wrapIfNecessary(java.lang.Object,java.lang.String,java.lang.Object)>(r1, r3, $r4);

        return $r6;
    }

    public java.lang.Object postProcessBeforeInstantiation(java.lang.Class, java.lang.String) throws org.springframework.beans.BeansException
    {
        java.lang.Object[] $r7;
        org.springframework.aop.TargetSource $r5;
        java.util.Map $r9;
        java.lang.String r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Set $r4, $r6, $r11, $r12, $r13;
        org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator r0;
        java.lang.Class r1, $r10;
        java.lang.Object $r3, $r8;

        r0 := @this: org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.lang.Object getCacheKey(java.lang.Class,java.lang.String)>(r1, r2);

        $r4 = r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.util.Set targetSourcedBeans>;

        $z0 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        if $z0 != 0 goto label4;

        $r11 = r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.util.Set advisedBeans>;

        $z1 = interfaceinvoke $r11.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        if $z1 != 0 goto label1;

        $r12 = r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.util.Set nonAdvisedBeans>;

        $z2 = interfaceinvoke $r12.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        if $z2 == 0 goto label2;

     label1:
        return null;

     label2:
        $z3 = virtualinvoke r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: boolean isInfrastructureClass(java.lang.Class)>(r1);

        if $z3 != 0 goto label3;

        $z4 = virtualinvoke r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: boolean shouldSkip(java.lang.Class,java.lang.String)>(r1, r2);

        if $z4 == 0 goto label4;

     label3:
        $r13 = r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.util.Set nonAdvisedBeans>;

        interfaceinvoke $r13.<java.util.Set: boolean add(java.lang.Object)>($r3);

        return null;

     label4:
        $r5 = virtualinvoke r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: org.springframework.aop.TargetSource getCustomTargetSource(java.lang.Class,java.lang.String)>(r1, r2);

        if $r5 == null goto label5;

        $r6 = r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.util.Set targetSourcedBeans>;

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>(r2);

        $r7 = virtualinvoke r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.lang.Object[] getAdvicesAndAdvisorsForBean(java.lang.Class,java.lang.String,org.springframework.aop.TargetSource)>(r1, r2, $r5);

        $r8 = virtualinvoke r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.lang.Object createProxy(java.lang.Class,java.lang.String,java.lang.Object[],org.springframework.aop.TargetSource)>(r1, r2, $r7, $r5);

        $r9 = r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.util.Map proxyTypes>;

        $r10 = virtualinvoke $r8.<java.lang.Object: java.lang.Class getClass()>();

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r10);

        return $r8;

     label5:
        return null;
    }

    public boolean postProcessAfterInstantiation(java.lang.Object, java.lang.String)
    {
        java.lang.Object r1;
        java.lang.String r2;
        org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator r0;

        r0 := @this: org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        return 1;
    }

    public org.springframework.beans.PropertyValues postProcessPropertyValues(org.springframework.beans.PropertyValues, java.beans.PropertyDescriptor[], java.lang.Object, java.lang.String)
    {
        java.beans.PropertyDescriptor[] r2;
        java.lang.Object r3;
        java.lang.String r4;
        org.springframework.beans.PropertyValues r0;
        org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator r1;

        r1 := @this: org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator;

        r0 := @parameter0: org.springframework.beans.PropertyValues;

        r2 := @parameter1: java.beans.PropertyDescriptor[];

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.String;

        return r0;
    }

    public java.lang.Object postProcessBeforeInitialization(java.lang.Object, java.lang.String)
    {
        java.lang.Object r0;
        java.lang.String r2;
        org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator r1;

        r1 := @this: org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        return r0;
    }

    public java.lang.Object postProcessAfterInitialization(java.lang.Object, java.lang.String) throws org.springframework.beans.BeansException
    {
        java.util.Set $r5;
        org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator r1;
        java.lang.Object r0, $r4, $r6;
        java.lang.Class $r2;
        java.lang.String r3;
        boolean $z0;

        r1 := @this: org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator;

        r0 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.lang.Object getCacheKey(java.lang.Class,java.lang.String)>($r2, r3);

        $r5 = r1.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.util.Set earlyProxyReferences>;

        $z0 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        $r6 = virtualinvoke r1.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.lang.Object wrapIfNecessary(java.lang.Object,java.lang.String,java.lang.Object)>(r0, r3, $r4);

        return $r6;

     label1:
        return r0;
    }

    protected java.lang.Object getCacheKey(java.lang.Class, java.lang.String)
    {
        org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator r8;
        java.lang.StringBuilder $r0, $r4, $r6;
        java.lang.Class r1;
        java.lang.String $r2, $r3, r5, $r7;

        r8 := @this: org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator;

        r1 := @parameter0: java.lang.Class;

        r5 := @parameter1: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        $r2 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    protected java.lang.Object wrapIfNecessary(java.lang.Object, java.lang.String, java.lang.Object)
    {
        java.lang.Object[] $r10, $r11;
        java.util.Map $r17;
        java.lang.String r1;
        boolean $z0, $z1, $z2, $z3;
        org.springframework.aop.target.SingletonTargetSource $r15;
        java.util.Set $r2, $r4, $r7, $r12, $r13;
        org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator r0;
        java.lang.Object r3, r5, $r16;
        java.lang.Class $r6, $r8, $r9, $r14, $r18;

        r0 := @this: org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator;

        r5 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        $r2 = r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.util.Set targetSourcedBeans>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return r5;

     label1:
        $r4 = r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.util.Set nonAdvisedBeans>;

        $z1 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>(r3);

        if $z1 == 0 goto label2;

        return r5;

     label2:
        $r6 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        $z2 = virtualinvoke r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: boolean isInfrastructureClass(java.lang.Class)>($r6);

        if $z2 != 0 goto label3;

        $r8 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        $z3 = virtualinvoke r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: boolean shouldSkip(java.lang.Class,java.lang.String)>($r8, r1);

        if $z3 == 0 goto label4;

     label3:
        $r7 = r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.util.Set nonAdvisedBeans>;

        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>(r3);

        return r5;

     label4:
        $r9 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.lang.Object[] getAdvicesAndAdvisorsForBean(java.lang.Class,java.lang.String,org.springframework.aop.TargetSource)>($r9, r1, null);

        $r11 = <org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.lang.Object[] DO_NOT_PROXY>;

        if $r10 == $r11 goto label5;

        $r13 = r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.util.Set advisedBeans>;

        interfaceinvoke $r13.<java.util.Set: boolean add(java.lang.Object)>(r3);

        $r14 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = new org.springframework.aop.target.SingletonTargetSource;

        specialinvoke $r15.<org.springframework.aop.target.SingletonTargetSource: void <init>(java.lang.Object)>(r5);

        $r16 = virtualinvoke r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.lang.Object createProxy(java.lang.Class,java.lang.String,java.lang.Object[],org.springframework.aop.TargetSource)>($r14, r1, $r10, $r15);

        $r17 = r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.util.Map proxyTypes>;

        $r18 = virtualinvoke $r16.<java.lang.Object: java.lang.Class getClass()>();

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r18);

        return $r16;

     label5:
        $r12 = r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.util.Set nonAdvisedBeans>;

        interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>(r3);

        return r5;
    }

    protected boolean isInfrastructureClass(java.lang.Class)
    {
        java.lang.String $r6, $r9;
        boolean $z0, z1, $z2, $z3, $z4, $z6, $z7;
        org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator r2;
        java.lang.Class r0, $r1, $r10, $r11;
        org.apache.commons.logging.Log $r3, $r5;
        java.lang.StringBuilder $r4, $r7, $r8;

        r2 := @this: org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator;

        r0 := @parameter0: java.lang.Class;

        $r1 = class "Lorg/springframework/aop/Advisor;";

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 != 0 goto label1;

        $r10 = class "Lorg/aopalliance/aop/Advice;";

        $z3 = virtualinvoke $r10.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z3 != 0 goto label1;

        $r11 = class "Lorg/springframework/aop/framework/AopInfrastructureBean;";

        $z4 = virtualinvoke $r11.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z4 != 0 goto label1;

        $z7 = 0;

        $z6 = 0;

        goto label2;

     label1:
        $z7 = 1;

        $z6 = 1;

     label2:
        z1 = $z6;

        if $z7 == 0 goto label3;

        $r3 = r2.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: org.apache.commons.logging.Log logger>;

        $z2 = interfaceinvoke $r3.<org.apache.commons.logging.Log: boolean isTraceEnabled()>();

        if $z2 == 0 goto label3;

        $r5 = r2.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: org.apache.commons.logging.Log logger>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Did not attempt to auto-proxy infrastructure class [");

        $r6 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r9);

     label3:
        return z1;
    }

    protected boolean shouldSkip(java.lang.Class, java.lang.String)
    {
        java.lang.Class r1;
        java.lang.String r2;
        org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator r0;

        r0 := @this: org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        return 0;
    }

    protected org.springframework.aop.TargetSource getCustomTargetSource(java.lang.Class, java.lang.String)
    {
        org.springframework.aop.TargetSource $r8;
        org.springframework.aop.framework.autoproxy.TargetSourceCreator[] $r1, $r5;
        int i0, i1;
        java.lang.String r3, $r16;
        org.springframework.aop.framework.autoproxy.TargetSourceCreator r6;
        boolean $z0, $z1;
        org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator r0;
        org.springframework.beans.factory.BeanFactory $r2, $r4;
        java.lang.Class r7;
        org.apache.commons.logging.Log $r9, $r11;
        java.lang.StringBuilder $r10, $r12, $r13, $r14, $r15;

        r0 := @this: org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator;

        r7 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.lang.String;

        $r1 = r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: org.springframework.aop.framework.autoproxy.TargetSourceCreator[] customTargetSourceCreators>;

        if $r1 == null goto label5;

        $r2 = r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: org.springframework.beans.factory.BeanFactory beanFactory>;

        if $r2 == null goto label5;

        $r4 = r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: org.springframework.beans.factory.BeanFactory beanFactory>;

        $z0 = interfaceinvoke $r4.<org.springframework.beans.factory.BeanFactory: boolean containsBean(java.lang.String)>(r3);

        if $z0 == 0 goto label5;

        $r5 = r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: org.springframework.aop.framework.autoproxy.TargetSourceCreator[] customTargetSourceCreators>;

        i0 = lengthof $r5;

        i1 = 0;

        goto label4;

     label1:
        r6 = $r5[i1];

        $r8 = interfaceinvoke r6.<org.springframework.aop.framework.autoproxy.TargetSourceCreator: org.springframework.aop.TargetSource getTargetSource(java.lang.Class,java.lang.String)>(r7, r3);

        if $r8 == null goto label3;

        $r9 = r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: org.apache.commons.logging.Log logger>;

        $z1 = interfaceinvoke $r9.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label2;

        $r11 = r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: org.apache.commons.logging.Log logger>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("TargetSourceCreator [");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" found custom TargetSource for bean with name \'");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r11.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r16);

     label2:
        return $r8;

     label3:
        i1 = i1 + 1;

     label4:
        if i1 < i0 goto label1;

     label5:
        return null;
    }

    protected java.lang.Object createProxy(java.lang.Class, java.lang.String, java.lang.Object[], org.springframework.aop.TargetSource)
    {
        java.lang.Object[] r4;
        org.springframework.aop.TargetSource r6;
        org.springframework.aop.Advisor[] $r5;
        int $i0, i1, i2, i3;
        java.lang.String r3;
        org.springframework.aop.Advisor r12;
        boolean $z0, $z1, $z2;
        java.lang.Class[] $r10;
        org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator r1;
        org.springframework.aop.framework.ProxyFactory $r0;
        java.lang.Class r2, r11;
        java.lang.Object $r8;
        java.lang.ClassLoader $r7, $r9;

        r1 := @this: org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator;

        r2 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.Object[];

        r6 := @parameter3: org.springframework.aop.TargetSource;

        $r0 = new org.springframework.aop.framework.ProxyFactory;

        specialinvoke $r0.<org.springframework.aop.framework.ProxyFactory: void <init>()>();

        virtualinvoke $r0.<org.springframework.aop.framework.ProxyFactory: void copyFrom(org.springframework.aop.framework.ProxyConfig)>(r1);

        $z0 = virtualinvoke r1.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: boolean shouldProxyTargetClass(java.lang.Class,java.lang.String)>(r2, r3);

        if $z0 != 0 goto label3;

        $r9 = r1.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.lang.ClassLoader proxyClassLoader>;

        $r10 = staticinvoke <org.springframework.util.ClassUtils: java.lang.Class[] getAllInterfacesForClass(java.lang.Class,java.lang.ClassLoader)>(r2, $r9);

        i1 = lengthof $r10;

        i2 = 0;

        goto label2;

     label1:
        r11 = $r10[i2];

        virtualinvoke $r0.<org.springframework.aop.framework.ProxyFactory: void addInterface(java.lang.Class)>(r11);

        i2 = i2 + 1;

     label2:
        if i2 < i1 goto label1;

     label3:
        $r5 = virtualinvoke r1.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: org.springframework.aop.Advisor[] buildAdvisors(java.lang.String,java.lang.Object[])>(r3, r4);

        $i0 = lengthof $r5;

        i3 = 0;

        goto label5;

     label4:
        r12 = $r5[i3];

        virtualinvoke $r0.<org.springframework.aop.framework.ProxyFactory: void addAdvisor(org.springframework.aop.Advisor)>(r12);

        i3 = i3 + 1;

     label5:
        if i3 < $i0 goto label4;

        virtualinvoke $r0.<org.springframework.aop.framework.ProxyFactory: void setTargetSource(org.springframework.aop.TargetSource)>(r6);

        virtualinvoke r1.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: void customizeProxyFactory(org.springframework.aop.framework.ProxyFactory)>($r0);

        $z1 = r1.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: boolean freezeProxy>;

        virtualinvoke $r0.<org.springframework.aop.framework.ProxyFactory: void setFrozen(boolean)>($z1);

        $z2 = virtualinvoke r1.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: boolean advisorsPreFiltered()>();

        if $z2 == 0 goto label6;

        virtualinvoke $r0.<org.springframework.aop.framework.ProxyFactory: void setPreFiltered(boolean)>(1);

     label6:
        $r7 = r1.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.lang.ClassLoader proxyClassLoader>;

        $r8 = virtualinvoke $r0.<org.springframework.aop.framework.ProxyFactory: java.lang.Object getProxy(java.lang.ClassLoader)>($r7);

        return $r8;
    }

    protected boolean shouldProxyTargetClass(java.lang.Class, java.lang.String)
    {
        org.springframework.beans.factory.config.ConfigurableListableBeanFactory $r4;
        org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator r0;
        org.springframework.beans.factory.BeanFactory $r1, $r2;
        java.lang.Class r5;
        java.lang.String r3;
        boolean $z0, $z1, $z2;

        r0 := @this: org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator;

        r5 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: boolean isProxyTargetClass()>();

        if $z0 != 0 goto label2;

        $r1 = r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: org.springframework.beans.factory.BeanFactory beanFactory>;

        $z1 = $r1 instanceof org.springframework.beans.factory.config.ConfigurableListableBeanFactory;

        if $z1 == 0 goto label1;

        $r2 = r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: org.springframework.beans.factory.BeanFactory beanFactory>;

        $r4 = (org.springframework.beans.factory.config.ConfigurableListableBeanFactory) $r2;

        $z2 = staticinvoke <org.springframework.aop.framework.autoproxy.AutoProxyUtils: boolean shouldProxyTargetClass(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.lang.String)>($r4, r3);

        if $z2 != 0 goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    protected boolean advisorsPreFiltered()
    {
        org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator r0;

        r0 := @this: org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator;

        return 0;
    }

    protected org.springframework.aop.Advisor[] buildAdvisors(java.lang.String, java.lang.Object[])
    {
        boolean $z0, $z1;
        java.util.Collection $r18, $r20, $r22;
        org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator r0;
        org.springframework.aop.framework.adapter.AdvisorAdapterRegistry $r4;
        java.util.List $r17, $r19, $r21;
        java.lang.StringBuilder $r7, $r10, $r11, $r12, $r13, $r14, $r15;
        java.lang.Object[] r3;
        org.springframework.aop.Advisor[] $r1, $r24;
        java.util.ArrayList $r2;
        int $i0, $i1, i2, $i3, $i4, i5;
        java.lang.String r9, $r16;
        org.springframework.aop.Advisor $r6;
        java.lang.Object $r5;
        org.apache.commons.logging.Log $r8, $r23;

        r0 := @this: org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator;

        r9 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object[];

        $r1 = specialinvoke r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: org.springframework.aop.Advisor[] resolveInterceptorNames()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        if r3 == null goto label2;

        $r17 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r3);

        $r18 = (java.util.Collection) $r17;

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r18);

        if $r1 == null goto label2;

        $z0 = r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: boolean applyCommonInterceptorsFirst>;

        if $z0 == 0 goto label1;

        $r21 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        $r22 = (java.util.Collection) $r21;

        interfaceinvoke $r2.<java.util.List: boolean addAll(int,java.util.Collection)>(0, $r22);

        goto label2;

     label1:
        $r19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        $r20 = (java.util.Collection) $r19;

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r20);

     label2:
        $r23 = r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: org.apache.commons.logging.Log logger>;

        $z1 = interfaceinvoke $r23.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label7;

        if $r1 == null goto label3;

        $i1 = lengthof $r1;

        goto label4;

     label3:
        $i1 = 0;

     label4:
        i2 = $i1;

        if r3 == null goto label5;

        $i3 = lengthof r3;

        goto label6;

     label5:
        $i3 = 0;

     label6:
        $r8 = r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: org.apache.commons.logging.Log logger>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Creating implicit proxy for bean \'");

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' with ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" common interceptors and ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" specific interceptors");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r16);

     label7:
        $i4 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r24 = newarray (org.springframework.aop.Advisor)[$i4];

        i5 = 0;

        goto label9;

     label8:
        $r4 = r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: org.springframework.aop.framework.adapter.AdvisorAdapterRegistry advisorAdapterRegistry>;

        $r5 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i5);

        $r6 = interfaceinvoke $r4.<org.springframework.aop.framework.adapter.AdvisorAdapterRegistry: org.springframework.aop.Advisor wrap(java.lang.Object)>($r5);

        $r24[i5] = $r6;

        i5 = i5 + 1;

     label9:
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i5 < $i0 goto label8;

        return $r24;
    }

    private org.springframework.aop.Advisor[] resolveInterceptorNames()
    {
        java.lang.Object[] $r11;
        java.lang.String[] $r4;
        java.util.ArrayList $r3;
        org.springframework.aop.Advisor[] $r10, $r12;
        int $i0, $i1, i2;
        java.lang.String r5;
        org.springframework.aop.Advisor $r9;
        boolean $z0, $z1;
        org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator r0;
        org.springframework.aop.framework.adapter.AdvisorAdapterRegistry $r8;
        org.springframework.beans.factory.BeanFactory $r1, $r6, $r13;
        java.lang.Object $r7;
        org.springframework.beans.factory.config.ConfigurableBeanFactory r2, $r14;

        r0 := @this: org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator;

        $r1 = r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: org.springframework.beans.factory.BeanFactory beanFactory>;

        $z0 = $r1 instanceof org.springframework.beans.factory.config.ConfigurableBeanFactory;

        if $z0 == 0 goto label1;

        $r13 = r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: org.springframework.beans.factory.BeanFactory beanFactory>;

        $r14 = (org.springframework.beans.factory.config.ConfigurableBeanFactory) $r13;

        goto label2;

     label1:
        $r14 = null;

     label2:
        r2 = $r14;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.lang.String[] interceptorNames>;

        $i1 = lengthof $r4;

        i2 = 0;

        goto label6;

     label3:
        r5 = $r4[i2];

        if r2 == null goto label4;

        $z1 = interfaceinvoke r2.<org.springframework.beans.factory.config.ConfigurableBeanFactory: boolean isCurrentlyInCreation(java.lang.String)>(r5);

        if $z1 != 0 goto label5;

     label4:
        $r6 = r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: org.springframework.beans.factory.BeanFactory beanFactory>;

        $r7 = interfaceinvoke $r6.<org.springframework.beans.factory.BeanFactory: java.lang.Object getBean(java.lang.String)>(r5);

        $r8 = r0.<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: org.springframework.aop.framework.adapter.AdvisorAdapterRegistry advisorAdapterRegistry>;

        $r9 = interfaceinvoke $r8.<org.springframework.aop.framework.adapter.AdvisorAdapterRegistry: org.springframework.aop.Advisor wrap(java.lang.Object)>($r7);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r9);

     label5:
        i2 = i2 + 1;

     label6:
        if i2 < $i1 goto label3;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r10 = newarray (org.springframework.aop.Advisor)[$i0];

        $r11 = interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10);

        $r12 = (org.springframework.aop.Advisor[]) $r11;

        return $r12;
    }

    protected void customizeProxyFactory(org.springframework.aop.framework.ProxyFactory)
    {
        org.springframework.aop.framework.ProxyFactory r1;
        org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator r0;

        r0 := @this: org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator;

        r1 := @parameter0: org.springframework.aop.framework.ProxyFactory;

        return;
    }

    protected abstract java.lang.Object[] getAdvicesAndAdvisorsForBean(java.lang.Class, java.lang.String, org.springframework.aop.TargetSource) throws org.springframework.beans.BeansException;
}
