public class org.apache.commons.httpclient.methods.GetMethod extends org.apache.commons.httpclient.HttpMethodBase
{
    private static final org.apache.commons.logging.Log LOG;
    static java.lang.Class class$org$apache$commons$httpclient$methods$GetMethod;

    public void <init>()
    {
        org.apache.commons.httpclient.methods.GetMethod r0;

        r0 := @this: org.apache.commons.httpclient.methods.GetMethod;

        specialinvoke r0.<org.apache.commons.httpclient.HttpMethodBase: void <init>()>();

        virtualinvoke r0.<org.apache.commons.httpclient.methods.GetMethod: void setFollowRedirects(boolean)>(1);

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.commons.httpclient.methods.GetMethod r0;
        org.apache.commons.logging.Log $r2;
        java.lang.String r1;

        r0 := @this: org.apache.commons.httpclient.methods.GetMethod;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.HttpMethodBase: void <init>(java.lang.String)>(r1);

        $r2 = <org.apache.commons.httpclient.methods.GetMethod: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r2.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter GetMethod(String)");

        virtualinvoke r0.<org.apache.commons.httpclient.methods.GetMethod: void setFollowRedirects(boolean)>(1);

        return;
    }

    public java.lang.String getName()
    {
        org.apache.commons.httpclient.methods.GetMethod r0;

        r0 := @this: org.apache.commons.httpclient.methods.GetMethod;

        return "GET";
    }

    public void recycle()
    {
        org.apache.commons.httpclient.methods.GetMethod r1;
        org.apache.commons.logging.Log $r0;

        r1 := @this: org.apache.commons.httpclient.methods.GetMethod;

        $r0 = <org.apache.commons.httpclient.methods.GetMethod: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter GetMethod.recycle()");

        specialinvoke r1.<org.apache.commons.httpclient.HttpMethodBase: void recycle()>();

        virtualinvoke r1.<org.apache.commons.httpclient.methods.GetMethod: void setFollowRedirects(boolean)>(1);

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r2;
        org.apache.commons.logging.Log $r1;

        $r0 = <org.apache.commons.httpclient.methods.GetMethod: java.lang.Class class$org$apache$commons$httpclient$methods$GetMethod>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <org.apache.commons.httpclient.methods.GetMethod: java.lang.Class class$(java.lang.String)>("org.apache.commons.httpclient.methods.GetMethod");

        <org.apache.commons.httpclient.methods.GetMethod: java.lang.Class class$org$apache$commons$httpclient$methods$GetMethod> = $r2;

        goto label2;

     label1:
        $r2 = <org.apache.commons.httpclient.methods.GetMethod: java.lang.Class class$org$apache$commons$httpclient$methods$GetMethod>;

     label2:
        $r1 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r2);

        <org.apache.commons.httpclient.methods.GetMethod: org.apache.commons.logging.Log LOG> = $r1;

        return;
    }
}
