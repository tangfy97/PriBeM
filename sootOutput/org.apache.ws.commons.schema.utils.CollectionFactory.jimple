public final class org.apache.ws.commons.schema.utils.CollectionFactory extends java.lang.Object
{
    private static final java.lang.String PROTECT_READ_ONLY_COLLECTIONS_PROP;
    private static final boolean DEFAULT_PROTECT_READ_ONLY_COLLECTIONS;
    private static final java.lang.ThreadLocal PROTECT_READ_ONLY_COLLECTIONS;

    private void <init>()
    {
        org.apache.ws.commons.schema.utils.CollectionFactory r0;

        r0 := @this: org.apache.ws.commons.schema.utils.CollectionFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.List getList(java.lang.Class)
    {
        java.util.List $r1;
        java.lang.Class r2;
        java.util.ArrayList $r0;

        r2 := @parameter0: java.lang.Class;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1 = staticinvoke <java.util.Collections: java.util.List synchronizedList(java.util.List)>($r0);

        return $r1;
    }

    public static java.util.Set getSet(java.lang.Class)
    {
        java.util.HashSet $r0;
        java.util.Set $r1;
        java.lang.Class r2;

        r2 := @parameter0: java.lang.Class;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r1 = staticinvoke <java.util.Collections: java.util.Set synchronizedSet(java.util.Set)>($r0);

        return $r1;
    }

    private static boolean isProtected()
    {
        java.lang.ThreadLocal $r0;
        java.lang.Boolean r2;
        java.lang.Object $r1;
        boolean $z0, $z1;

        $r0 = <org.apache.ws.commons.schema.utils.CollectionFactory: java.lang.ThreadLocal PROTECT_READ_ONLY_COLLECTIONS>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        r2 = (java.lang.Boolean) $r1;

        if r2 != null goto label1;

        $z1 = <org.apache.ws.commons.schema.utils.CollectionFactory: boolean DEFAULT_PROTECT_READ_ONLY_COLLECTIONS>;

        return $z1;

     label1:
        $z0 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public static void setProtected(boolean)
    {
        java.lang.Boolean $r1;
        java.lang.ThreadLocal $r0;
        boolean z0;

        z0 := @parameter0: boolean;

        $r0 = <org.apache.ws.commons.schema.utils.CollectionFactory: java.lang.ThreadLocal PROTECT_READ_ONLY_COLLECTIONS>;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        virtualinvoke $r0.<java.lang.ThreadLocal: void set(java.lang.Object)>($r1);

        return;
    }

    public static void clearProtection()
    {
        java.lang.ThreadLocal $r0;

        $r0 = <org.apache.ws.commons.schema.utils.CollectionFactory: java.lang.ThreadLocal PROTECT_READ_ONLY_COLLECTIONS>;

        virtualinvoke $r0.<java.lang.ThreadLocal: void remove()>();

        return;
    }

    public static java.util.List getProtectedList(java.util.List)
    {
        java.util.List r0, $r1;
        boolean $z0;

        r0 := @parameter0: java.util.List;

        $z0 = staticinvoke <org.apache.ws.commons.schema.utils.CollectionFactory: boolean isProtected()>();

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r0);

        return $r1;

     label1:
        return r0;
    }

    public static java.util.Map getProtectedMap(java.util.Map)
    {
        boolean $z0;
        java.util.Map r0, $r1;

        r0 := @parameter0: java.util.Map;

        $z0 = staticinvoke <org.apache.ws.commons.schema.utils.CollectionFactory: boolean isProtected()>();

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(r0);

        return $r1;

     label1:
        return r0;
    }

    public static void withSchemaModifiable(java.lang.Runnable)
    {
        java.lang.Throwable $r8;
        java.lang.ThreadLocal $r0, $r4, $r6, $r7, $r9, $r10;
        java.lang.Runnable r5;
        java.lang.Boolean r2, $r3;
        java.lang.Object $r1;

        r5 := @parameter0: java.lang.Runnable;

        $r0 = <org.apache.ws.commons.schema.utils.CollectionFactory: java.lang.ThreadLocal PROTECT_READ_ONLY_COLLECTIONS>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        r2 = (java.lang.Boolean) $r1;

     label1:
        $r4 = <org.apache.ws.commons.schema.utils.CollectionFactory: java.lang.ThreadLocal PROTECT_READ_ONLY_COLLECTIONS>;

        $r3 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r4.<java.lang.ThreadLocal: void set(java.lang.Object)>($r3);

        interfaceinvoke r5.<java.lang.Runnable: void run()>();

     label2:
        if r2 != null goto label3;

        $r7 = <org.apache.ws.commons.schema.utils.CollectionFactory: java.lang.ThreadLocal PROTECT_READ_ONLY_COLLECTIONS>;

        virtualinvoke $r7.<java.lang.ThreadLocal: void remove()>();

        goto label8;

     label3:
        $r6 = <org.apache.ws.commons.schema.utils.CollectionFactory: java.lang.ThreadLocal PROTECT_READ_ONLY_COLLECTIONS>;

        virtualinvoke $r6.<java.lang.ThreadLocal: void set(java.lang.Object)>(r2);

        goto label8;

     label4:
        $r8 := @caughtexception;

     label5:
        if r2 != null goto label6;

        $r10 = <org.apache.ws.commons.schema.utils.CollectionFactory: java.lang.ThreadLocal PROTECT_READ_ONLY_COLLECTIONS>;

        virtualinvoke $r10.<java.lang.ThreadLocal: void remove()>();

        goto label7;

     label6:
        $r9 = <org.apache.ws.commons.schema.utils.CollectionFactory: java.lang.ThreadLocal PROTECT_READ_ONLY_COLLECTIONS>;

        virtualinvoke $r9.<java.lang.ThreadLocal: void set(java.lang.Object)>(r2);

     label7:
        throw $r8;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    static void <clinit>()
    {
        java.lang.ThreadLocal $r0;
        java.lang.Boolean $r3;
        java.lang.Object $r2;
        org.apache.ws.commons.schema.utils.CollectionFactory$1 $r1;
        boolean $z0;

        <org.apache.ws.commons.schema.utils.CollectionFactory: java.lang.String PROTECT_READ_ONLY_COLLECTIONS_PROP> = "org.apache.ws.commons.schema.protectReadOnlyCollections";

        $r0 = new java.lang.ThreadLocal;

        specialinvoke $r0.<java.lang.ThreadLocal: void <init>()>();

        <org.apache.ws.commons.schema.utils.CollectionFactory: java.lang.ThreadLocal PROTECT_READ_ONLY_COLLECTIONS> = $r0;

        $r1 = new org.apache.ws.commons.schema.utils.CollectionFactory$1;

        specialinvoke $r1.<org.apache.ws.commons.schema.utils.CollectionFactory$1: void <init>()>();

        $r2 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r1);

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        <org.apache.ws.commons.schema.utils.CollectionFactory: boolean DEFAULT_PROTECT_READ_ONLY_COLLECTIONS> = $z0;

        return;
    }
}
