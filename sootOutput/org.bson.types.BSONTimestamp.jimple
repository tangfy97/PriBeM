public class org.bson.types.BSONTimestamp extends java.lang.Object
{
    static final boolean D;
    final int _inc;
    final java.util.Date _time;

    public void <init>()
    {
        org.bson.types.BSONTimestamp r0;

        r0 := @this: org.bson.types.BSONTimestamp;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bson.types.BSONTimestamp: int _inc> = 0;

        r0.<org.bson.types.BSONTimestamp: java.util.Date _time> = null;

        return;
    }

    public void <init>(int, int)
    {
        java.util.Date $r1;
        int i0, i3;
        org.bson.types.BSONTimestamp r0;
        long $l1, $l2;

        r0 := @this: org.bson.types.BSONTimestamp;

        i0 := @parameter0: int;

        i3 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Date;

        $l1 = (long) i0;

        $l2 = $l1 * 1000L;

        specialinvoke $r1.<java.util.Date: void <init>(long)>($l2);

        r0.<org.bson.types.BSONTimestamp: java.util.Date _time> = $r1;

        r0.<org.bson.types.BSONTimestamp: int _inc> = i3;

        return;
    }

    public int getTime()
    {
        java.util.Date $r1, $r2;
        int $i2;
        org.bson.types.BSONTimestamp r0;
        long $l0, $l1;

        r0 := @this: org.bson.types.BSONTimestamp;

        $r1 = r0.<org.bson.types.BSONTimestamp: java.util.Date _time>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<org.bson.types.BSONTimestamp: java.util.Date _time>;

        $l0 = virtualinvoke $r2.<java.util.Date: long getTime()>();

        $l1 = $l0 / 1000L;

        $i2 = (int) $l1;

        return $i2;
    }

    public int getInc()
    {
        int $i0;
        org.bson.types.BSONTimestamp r0;

        r0 := @this: org.bson.types.BSONTimestamp;

        $i0 = r0.<org.bson.types.BSONTimestamp: int _inc>;

        return $i0;
    }

    public java.lang.String toString()
    {
        java.util.Date $r3;
        int $i0;
        org.bson.types.BSONTimestamp r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r6;
        java.lang.String $r7;

        r2 := @this: org.bson.types.BSONTimestamp;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TS time:");

        $r3 = r2.<org.bson.types.BSONTimestamp: java.util.Date _time>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" inc:");

        $i0 = r2.<org.bson.types.BSONTimestamp: int _inc>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    static void <clinit>()
    {
        boolean $z0;

        $z0 = staticinvoke <java.lang.Boolean: boolean getBoolean(java.lang.String)>("DEBUG.DBTIMESTAMP");

        <org.bson.types.BSONTimestamp: boolean D> = $z0;

        return;
    }
}
