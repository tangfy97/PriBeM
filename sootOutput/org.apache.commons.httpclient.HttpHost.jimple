public class org.apache.commons.httpclient.HttpHost extends java.lang.Object implements java.lang.Cloneable
{
    private java.lang.String hostname;
    private int port;
    private org.apache.commons.httpclient.protocol.Protocol protocol;

    public void <init>(java.lang.String, int, org.apache.commons.httpclient.protocol.Protocol)
    {
        org.apache.commons.httpclient.HttpHost r0;
        java.lang.IllegalArgumentException $r6, $r7;
        int i0, $i1, $i3;
        org.apache.commons.httpclient.protocol.Protocol r2, $r3;
        java.lang.String r1;

        r0 := @this: org.apache.commons.httpclient.HttpHost;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.commons.httpclient.protocol.Protocol;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.HttpHost: java.lang.String hostname> = null;

        $i3 = (int) -1;

        r0.<org.apache.commons.httpclient.HttpHost: int port> = $i3;

        r0.<org.apache.commons.httpclient.HttpHost: org.apache.commons.httpclient.protocol.Protocol protocol> = null;

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Host name may not be null");

        throw $r6;

     label1:
        if r2 != null goto label2;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Protocol may not be null");

        throw $r7;

     label2:
        r0.<org.apache.commons.httpclient.HttpHost: java.lang.String hostname> = r1;

        r0.<org.apache.commons.httpclient.HttpHost: org.apache.commons.httpclient.protocol.Protocol protocol> = r2;

        if i0 < 0 goto label3;

        r0.<org.apache.commons.httpclient.HttpHost: int port> = i0;

        goto label4;

     label3:
        $r3 = r0.<org.apache.commons.httpclient.HttpHost: org.apache.commons.httpclient.protocol.Protocol protocol>;

        $i1 = virtualinvoke $r3.<org.apache.commons.httpclient.protocol.Protocol: int getDefaultPort()>();

        r0.<org.apache.commons.httpclient.HttpHost: int port> = $i1;

     label4:
        return;
    }

    public void <init>(java.lang.String, int)
    {
        org.apache.commons.httpclient.HttpHost r0;
        int i0;
        org.apache.commons.httpclient.protocol.Protocol $r2;
        java.lang.String r1;

        r0 := @this: org.apache.commons.httpclient.HttpHost;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = staticinvoke <org.apache.commons.httpclient.protocol.Protocol: org.apache.commons.httpclient.protocol.Protocol getProtocol(java.lang.String)>("http");

        specialinvoke r0.<org.apache.commons.httpclient.HttpHost: void <init>(java.lang.String,int,org.apache.commons.httpclient.protocol.Protocol)>(r1, i0, $r2);

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.commons.httpclient.HttpHost r0;
        int $i1;
        org.apache.commons.httpclient.protocol.Protocol $r2;
        java.lang.String r1;

        r0 := @this: org.apache.commons.httpclient.HttpHost;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.apache.commons.httpclient.protocol.Protocol: org.apache.commons.httpclient.protocol.Protocol getProtocol(java.lang.String)>("http");

        $i1 = (int) -1;

        specialinvoke r0.<org.apache.commons.httpclient.HttpHost: void <init>(java.lang.String,int,org.apache.commons.httpclient.protocol.Protocol)>(r1, $i1, $r2);

        return;
    }

    public void <init>(org.apache.commons.httpclient.URI) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.HttpHost r0;
        int $i0;
        org.apache.commons.httpclient.protocol.Protocol $r4;
        java.lang.String $r2, $r3;
        org.apache.commons.httpclient.URI r1;

        r0 := @this: org.apache.commons.httpclient.HttpHost;

        r1 := @parameter0: org.apache.commons.httpclient.URI;

        $r2 = virtualinvoke r1.<org.apache.commons.httpclient.URI: java.lang.String getHost()>();

        $i0 = virtualinvoke r1.<org.apache.commons.httpclient.URI: int getPort()>();

        $r3 = virtualinvoke r1.<org.apache.commons.httpclient.URI: java.lang.String getScheme()>();

        $r4 = staticinvoke <org.apache.commons.httpclient.protocol.Protocol: org.apache.commons.httpclient.protocol.Protocol getProtocol(java.lang.String)>($r3);

        specialinvoke r0.<org.apache.commons.httpclient.HttpHost: void <init>(java.lang.String,int,org.apache.commons.httpclient.protocol.Protocol)>($r2, $i0, $r4);

        return;
    }

    public void <init>(org.apache.commons.httpclient.HttpHost)
    {
        int $i1;
        org.apache.commons.httpclient.HttpHost r0, r1;

        r0 := @this: org.apache.commons.httpclient.HttpHost;

        r1 := @parameter0: org.apache.commons.httpclient.HttpHost;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.HttpHost: java.lang.String hostname> = null;

        $i1 = (int) -1;

        r0.<org.apache.commons.httpclient.HttpHost: int port> = $i1;

        r0.<org.apache.commons.httpclient.HttpHost: org.apache.commons.httpclient.protocol.Protocol protocol> = null;

        specialinvoke r0.<org.apache.commons.httpclient.HttpHost: void init(org.apache.commons.httpclient.HttpHost)>(r1);

        return;
    }

    private void init(org.apache.commons.httpclient.HttpHost)
    {
        org.apache.commons.httpclient.HttpHost r0, r1;
        int $i0;
        org.apache.commons.httpclient.protocol.Protocol $r3;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.HttpHost;

        r1 := @parameter0: org.apache.commons.httpclient.HttpHost;

        $r2 = r1.<org.apache.commons.httpclient.HttpHost: java.lang.String hostname>;

        r0.<org.apache.commons.httpclient.HttpHost: java.lang.String hostname> = $r2;

        $i0 = r1.<org.apache.commons.httpclient.HttpHost: int port>;

        r0.<org.apache.commons.httpclient.HttpHost: int port> = $i0;

        $r3 = r1.<org.apache.commons.httpclient.HttpHost: org.apache.commons.httpclient.protocol.Protocol protocol>;

        r0.<org.apache.commons.httpclient.HttpHost: org.apache.commons.httpclient.protocol.Protocol protocol> = $r3;

        return;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.commons.httpclient.HttpHost r0, r2;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.httpclient.HttpHost;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r2 = (org.apache.commons.httpclient.HttpHost) $r1;

        specialinvoke r2.<org.apache.commons.httpclient.HttpHost: void init(org.apache.commons.httpclient.HttpHost)>(r0);

        return r2;
    }

    public java.lang.String getHostName()
    {
        org.apache.commons.httpclient.HttpHost r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.httpclient.HttpHost;

        $r1 = r0.<org.apache.commons.httpclient.HttpHost: java.lang.String hostname>;

        return $r1;
    }

    public int getPort()
    {
        int $i0;
        org.apache.commons.httpclient.HttpHost r0;

        r0 := @this: org.apache.commons.httpclient.HttpHost;

        $i0 = r0.<org.apache.commons.httpclient.HttpHost: int port>;

        return $i0;
    }

    public org.apache.commons.httpclient.protocol.Protocol getProtocol()
    {
        org.apache.commons.httpclient.HttpHost r0;
        org.apache.commons.httpclient.protocol.Protocol $r1;

        r0 := @this: org.apache.commons.httpclient.HttpHost;

        $r1 = r0.<org.apache.commons.httpclient.HttpHost: org.apache.commons.httpclient.protocol.Protocol protocol>;

        return $r1;
    }

    public java.lang.String toURI()
    {
        org.apache.commons.httpclient.HttpHost r1;
        java.lang.StringBuffer $r0;
        int $i0, $i1, $i2;
        org.apache.commons.httpclient.protocol.Protocol $r2, $r5;
        java.lang.String $r3, $r4, $r6;

        r1 := @this: org.apache.commons.httpclient.HttpHost;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(50);

        $r2 = r1.<org.apache.commons.httpclient.HttpHost: org.apache.commons.httpclient.protocol.Protocol protocol>;

        $r3 = virtualinvoke $r2.<org.apache.commons.httpclient.protocol.Protocol: java.lang.String getScheme()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("://");

        $r4 = r1.<org.apache.commons.httpclient.HttpHost: java.lang.String hostname>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $i0 = r1.<org.apache.commons.httpclient.HttpHost: int port>;

        $r5 = r1.<org.apache.commons.httpclient.HttpHost: org.apache.commons.httpclient.protocol.Protocol protocol>;

        $i1 = virtualinvoke $r5.<org.apache.commons.httpclient.protocol.Protocol: int getDefaultPort()>();

        if $i0 == $i1 goto label1;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        $i2 = r1.<org.apache.commons.httpclient.HttpHost: int port>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

     label1:
        $r6 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    public java.lang.String toString()
    {
        org.apache.commons.httpclient.HttpHost r1;
        java.lang.StringBuffer $r0;
        java.lang.String $r2, $r3;

        r1 := @this: org.apache.commons.httpclient.HttpHost;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(50);

        $r2 = virtualinvoke r1.<org.apache.commons.httpclient.HttpHost: java.lang.String toURI()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.httpclient.HttpHost r1, r2;
        int $i0, $i1;
        org.apache.commons.httpclient.protocol.Protocol $r5, $r6;
        java.lang.Object r0;
        java.lang.String $r3, $r4;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.commons.httpclient.HttpHost;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.commons.httpclient.HttpHost;

        if $z0 == 0 goto label5;

        if r0 != r1 goto label1;

        return 1;

     label1:
        r2 = (org.apache.commons.httpclient.HttpHost) r0;

        $r4 = r1.<org.apache.commons.httpclient.HttpHost: java.lang.String hostname>;

        $r3 = r2.<org.apache.commons.httpclient.HttpHost: java.lang.String hostname>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $i1 = r1.<org.apache.commons.httpclient.HttpHost: int port>;

        $i0 = r2.<org.apache.commons.httpclient.HttpHost: int port>;

        if $i1 == $i0 goto label3;

        return 0;

     label3:
        $r6 = r1.<org.apache.commons.httpclient.HttpHost: org.apache.commons.httpclient.protocol.Protocol protocol>;

        $r5 = r2.<org.apache.commons.httpclient.HttpHost: org.apache.commons.httpclient.protocol.Protocol protocol>;

        $z2 = virtualinvoke $r6.<org.apache.commons.httpclient.protocol.Protocol: boolean equals(java.lang.Object)>($r5);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        return 1;

     label5:
        return 0;
    }

    public int hashCode()
    {
        org.apache.commons.httpclient.HttpHost r0;
        int $i0, $i1, $i2, $i3;
        org.apache.commons.httpclient.protocol.Protocol $r2;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.httpclient.HttpHost;

        $r1 = r0.<org.apache.commons.httpclient.HttpHost: java.lang.String hostname>;

        $i0 = staticinvoke <org.apache.commons.httpclient.util.LangUtils: int hashCode(int,java.lang.Object)>(17, $r1);

        $i1 = r0.<org.apache.commons.httpclient.HttpHost: int port>;

        $i2 = staticinvoke <org.apache.commons.httpclient.util.LangUtils: int hashCode(int,int)>($i0, $i1);

        $r2 = r0.<org.apache.commons.httpclient.HttpHost: org.apache.commons.httpclient.protocol.Protocol protocol>;

        $i3 = staticinvoke <org.apache.commons.httpclient.util.LangUtils: int hashCode(int,java.lang.Object)>($i2, $r2);

        return $i3;
    }
}
