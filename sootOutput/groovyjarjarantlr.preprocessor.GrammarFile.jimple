public class groovyjarjarantlr.preprocessor.GrammarFile extends java.lang.Object
{
    protected java.lang.String fileName;
    protected java.lang.String headerAction;
    protected groovyjarjarantlr.collections.impl.IndexedVector options;
    protected groovyjarjarantlr.collections.impl.IndexedVector grammars;
    protected boolean expanded;
    protected groovyjarjarantlr.Tool tool;

    public void <init>(groovyjarjarantlr.Tool, java.lang.String)
    {
        groovyjarjarantlr.preprocessor.GrammarFile r0;
        groovyjarjarantlr.Tool r3;
        groovyjarjarantlr.collections.impl.IndexedVector $r2;
        java.lang.String r1;

        r0 := @this: groovyjarjarantlr.preprocessor.GrammarFile;

        r3 := @parameter0: groovyjarjarantlr.Tool;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<groovyjarjarantlr.preprocessor.GrammarFile: java.lang.String headerAction> = "";

        r0.<groovyjarjarantlr.preprocessor.GrammarFile: boolean expanded> = 0;

        r0.<groovyjarjarantlr.preprocessor.GrammarFile: java.lang.String fileName> = r1;

        $r2 = new groovyjarjarantlr.collections.impl.IndexedVector;

        specialinvoke $r2.<groovyjarjarantlr.collections.impl.IndexedVector: void <init>()>();

        r0.<groovyjarjarantlr.preprocessor.GrammarFile: groovyjarjarantlr.collections.impl.IndexedVector grammars> = $r2;

        r0.<groovyjarjarantlr.preprocessor.GrammarFile: groovyjarjarantlr.Tool tool> = r3;

        return;
    }

    public void addGrammar(groovyjarjarantlr.preprocessor.Grammar)
    {
        groovyjarjarantlr.preprocessor.GrammarFile r0;
        groovyjarjarantlr.collections.impl.IndexedVector $r2;
        groovyjarjarantlr.preprocessor.Grammar r1;
        java.lang.String $r3;

        r0 := @this: groovyjarjarantlr.preprocessor.GrammarFile;

        r1 := @parameter0: groovyjarjarantlr.preprocessor.Grammar;

        $r2 = r0.<groovyjarjarantlr.preprocessor.GrammarFile: groovyjarjarantlr.collections.impl.IndexedVector grammars>;

        $r3 = virtualinvoke r1.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String getName()>();

        virtualinvoke $r2.<groovyjarjarantlr.collections.impl.IndexedVector: void appendElement(java.lang.Object,java.lang.Object)>($r3, r1);

        return;
    }

    public void generateExpandedFile() throws java.io.IOException
    {
        java.io.PrintWriter $r4;
        groovyjarjarantlr.preprocessor.GrammarFile r0;
        groovyjarjarantlr.Tool $r3;
        java.lang.String $r1, $r2, $r5;
        boolean $z0;

        r0 := @this: groovyjarjarantlr.preprocessor.GrammarFile;

        $z0 = r0.<groovyjarjarantlr.preprocessor.GrammarFile: boolean expanded>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.GrammarFile: java.lang.String getName()>();

        $r2 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.GrammarFile: java.lang.String nameForExpandedGrammarFile(java.lang.String)>($r1);

        $r3 = r0.<groovyjarjarantlr.preprocessor.GrammarFile: groovyjarjarantlr.Tool tool>;

        $r4 = virtualinvoke $r3.<groovyjarjarantlr.Tool: java.io.PrintWriter openOutputFile(java.lang.String)>($r2);

        $r5 = virtualinvoke r0.<groovyjarjarantlr.preprocessor.GrammarFile: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        virtualinvoke $r4.<java.io.PrintWriter: void close()>();

        return;
    }

    public groovyjarjarantlr.collections.impl.IndexedVector getGrammars()
    {
        groovyjarjarantlr.preprocessor.GrammarFile r0;
        groovyjarjarantlr.collections.impl.IndexedVector $r1;

        r0 := @this: groovyjarjarantlr.preprocessor.GrammarFile;

        $r1 = r0.<groovyjarjarantlr.preprocessor.GrammarFile: groovyjarjarantlr.collections.impl.IndexedVector grammars>;

        return $r1;
    }

    public java.lang.String getName()
    {
        groovyjarjarantlr.preprocessor.GrammarFile r0;
        java.lang.String $r1;

        r0 := @this: groovyjarjarantlr.preprocessor.GrammarFile;

        $r1 = r0.<groovyjarjarantlr.preprocessor.GrammarFile: java.lang.String fileName>;

        return $r1;
    }

    public java.lang.String nameForExpandedGrammarFile(java.lang.String)
    {
        groovyjarjarantlr.preprocessor.GrammarFile r0;
        groovyjarjarantlr.Tool $r4;
        java.lang.StringBuffer $r2, $r3, $r6;
        java.lang.String r1, $r5, $r7;
        boolean $z0;

        r0 := @this: groovyjarjarantlr.preprocessor.GrammarFile;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<groovyjarjarantlr.preprocessor.GrammarFile: boolean expanded>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("expanded");

        $r4 = r0.<groovyjarjarantlr.preprocessor.GrammarFile: groovyjarjarantlr.Tool tool>;

        $r5 = virtualinvoke $r4.<groovyjarjarantlr.Tool: java.lang.String fileMinusPath(java.lang.String)>(r1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;

     label1:
        return r1;
    }

    public void setExpanded(boolean)
    {
        groovyjarjarantlr.preprocessor.GrammarFile r0;
        boolean z0;

        r0 := @this: groovyjarjarantlr.preprocessor.GrammarFile;

        z0 := @parameter0: boolean;

        r0.<groovyjarjarantlr.preprocessor.GrammarFile: boolean expanded> = z0;

        return;
    }

    public void addHeaderAction(java.lang.String)
    {
        groovyjarjarantlr.preprocessor.GrammarFile r1;
        java.lang.StringBuffer $r0, $r3, $r5, $r7;
        java.lang.String $r2, r4, $r6, $r8;

        r1 := @this: groovyjarjarantlr.preprocessor.GrammarFile;

        r4 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<groovyjarjarantlr.preprocessor.GrammarFile: java.lang.String headerAction>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r6 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        r1.<groovyjarjarantlr.preprocessor.GrammarFile: java.lang.String headerAction> = $r8;

        return;
    }

    public void setOptions(groovyjarjarantlr.collections.impl.IndexedVector)
    {
        groovyjarjarantlr.preprocessor.GrammarFile r0;
        groovyjarjarantlr.collections.impl.IndexedVector r1;

        r0 := @this: groovyjarjarantlr.preprocessor.GrammarFile;

        r1 := @parameter0: groovyjarjarantlr.collections.impl.IndexedVector;

        r0.<groovyjarjarantlr.preprocessor.GrammarFile: groovyjarjarantlr.collections.impl.IndexedVector options> = r1;

        return;
    }

    public java.lang.String toString()
    {
        groovyjarjarantlr.preprocessor.GrammarFile r0;
        java.util.Enumeration $r7;
        java.lang.StringBuffer $r5;
        groovyjarjarantlr.collections.impl.IndexedVector $r3, $r4, $r6;
        java.lang.Object $r9;
        java.lang.String $r1, r2, $r8, $r11, $r12, $r13;
        groovyjarjarantlr.preprocessor.Grammar r10;
        boolean $z0;

        r0 := @this: groovyjarjarantlr.preprocessor.GrammarFile;

        $r1 = r0.<groovyjarjarantlr.preprocessor.GrammarFile: java.lang.String headerAction>;

        if $r1 != null goto label1;

        $r12 = "";

        goto label2;

     label1:
        $r12 = r0.<groovyjarjarantlr.preprocessor.GrammarFile: java.lang.String headerAction>;

     label2:
        r2 = $r12;

        $r3 = r0.<groovyjarjarantlr.preprocessor.GrammarFile: groovyjarjarantlr.collections.impl.IndexedVector options>;

        if $r3 != null goto label3;

        $r13 = "";

        goto label4;

     label3:
        $r4 = r0.<groovyjarjarantlr.preprocessor.GrammarFile: groovyjarjarantlr.collections.impl.IndexedVector options>;

        $r13 = staticinvoke <groovyjarjarantlr.preprocessor.Hierarchy: java.lang.String optionsToString(groovyjarjarantlr.collections.impl.IndexedVector)>($r4);

     label4:
        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>(int)>(10000);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r6 = r0.<groovyjarjarantlr.preprocessor.GrammarFile: groovyjarjarantlr.collections.impl.IndexedVector grammars>;

        $r7 = virtualinvoke $r6.<groovyjarjarantlr.collections.impl.IndexedVector: java.util.Enumeration elements()>();

     label5:
        $z0 = interfaceinvoke $r7.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label6;

        $r9 = interfaceinvoke $r7.<java.util.Enumeration: java.lang.Object nextElement()>();

        r10 = (groovyjarjarantlr.preprocessor.Grammar) $r9;

        $r11 = virtualinvoke r10.<groovyjarjarantlr.preprocessor.Grammar: java.lang.String toString()>();

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        goto label5;

     label6:
        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;
    }
}
