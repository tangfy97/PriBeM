public class org.apache.batik.bridge.SVGAnimateElementBridge extends org.apache.batik.bridge.SVGAnimationElementBridge
{

    public void <init>()
    {
        org.apache.batik.bridge.SVGAnimateElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGAnimateElementBridge;

        specialinvoke r0.<org.apache.batik.bridge.SVGAnimationElementBridge: void <init>()>();

        return;
    }

    public java.lang.String getLocalName()
    {
        org.apache.batik.bridge.SVGAnimateElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGAnimateElementBridge;

        return "animate";
    }

    public org.apache.batik.bridge.Bridge getInstance()
    {
        org.apache.batik.bridge.SVGAnimateElementBridge $r0, r1;

        r1 := @this: org.apache.batik.bridge.SVGAnimateElementBridge;

        $r0 = new org.apache.batik.bridge.SVGAnimateElementBridge;

        specialinvoke $r0.<org.apache.batik.bridge.SVGAnimateElementBridge: void <init>()>();

        return $r0;
    }

    protected org.apache.batik.anim.AbstractAnimation createAnimation(org.apache.batik.dom.anim.AnimationTarget)
    {
        org.apache.batik.dom.anim.AnimationTarget r9;
        org.apache.batik.anim.SimpleAnimation $r4;
        float[] $r6, $r7;
        org.apache.batik.anim.values.AnimatableValue[] $r8;
        org.apache.batik.anim.timing.TimedElement $r5;
        int $i0;
        org.apache.batik.bridge.SVGAnimateElementBridge r0;
        org.apache.batik.anim.values.AnimatableValue $r1, $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.bridge.SVGAnimateElementBridge;

        r9 := @parameter0: org.apache.batik.dom.anim.AnimationTarget;

        $r1 = virtualinvoke r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.anim.values.AnimatableValue parseAnimatableValue(java.lang.String)>("from");

        $r2 = virtualinvoke r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.anim.values.AnimatableValue parseAnimatableValue(java.lang.String)>("to");

        $r3 = virtualinvoke r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.anim.values.AnimatableValue parseAnimatableValue(java.lang.String)>("by");

        $r4 = new org.apache.batik.anim.SimpleAnimation;

        $r5 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.anim.timing.TimedElement timedElement>;

        $i0 = virtualinvoke r0.<org.apache.batik.bridge.SVGAnimateElementBridge: int parseCalcMode()>();

        $r6 = virtualinvoke r0.<org.apache.batik.bridge.SVGAnimateElementBridge: float[] parseKeyTimes()>();

        $r7 = virtualinvoke r0.<org.apache.batik.bridge.SVGAnimateElementBridge: float[] parseKeySplines()>();

        $z0 = virtualinvoke r0.<org.apache.batik.bridge.SVGAnimateElementBridge: boolean parseAdditive()>();

        $z1 = virtualinvoke r0.<org.apache.batik.bridge.SVGAnimateElementBridge: boolean parseAccumulate()>();

        $r8 = virtualinvoke r0.<org.apache.batik.bridge.SVGAnimateElementBridge: org.apache.batik.anim.values.AnimatableValue[] parseValues()>();

        specialinvoke $r4.<org.apache.batik.anim.SimpleAnimation: void <init>(org.apache.batik.anim.timing.TimedElement,org.apache.batik.dom.anim.AnimatableElement,int,float[],float[],boolean,boolean,org.apache.batik.anim.values.AnimatableValue[],org.apache.batik.anim.values.AnimatableValue,org.apache.batik.anim.values.AnimatableValue,org.apache.batik.anim.values.AnimatableValue)>($r5, r0, $i0, $r6, $r7, $z0, $z1, $r8, $r1, $r2, $r3);

        return $r4;
    }

    protected int parseCalcMode()
    {
        java.lang.Object[] $r4;
        short $s0, $s1;
        int $i2, $i3;
        org.apache.batik.bridge.SVGAnimateElementBridge r0;
        java.lang.String $r2, $r7, $r8, $r10;
        org.apache.batik.dom.svg.SVGOMElement $r1, $r5, $r9, $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.batik.bridge.BridgeException $r3;
        org.apache.batik.bridge.BridgeContext $r6;

        r0 := @this: org.apache.batik.bridge.SVGAnimateElementBridge;

        $s0 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: short animationType>;

        if $s0 != 1 goto label1;

        $r11 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement targetElement>;

        $r10 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: java.lang.String attributeLocalName>;

        $z5 = virtualinvoke $r11.<org.apache.batik.dom.svg.SVGOMElement: boolean isPropertyAdditive(java.lang.String)>($r10);

        if $z5 == 0 goto label2;

     label1:
        $s1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: short animationType>;

        if $s1 != 0 goto label3;

        $r9 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement targetElement>;

        $r8 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: java.lang.String attributeNamespaceURI>;

        $r7 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: java.lang.String attributeLocalName>;

        $z4 = virtualinvoke $r9.<org.apache.batik.dom.svg.SVGOMElement: boolean isAttributeAdditive(java.lang.String,java.lang.String)>($r8, $r7);

        if $z4 != 0 goto label3;

     label2:
        return 0;

     label3:
        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r2 = virtualinvoke $r1.<org.apache.batik.dom.AbstractElement: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "calcMode");

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i2 != 0 goto label4;

        $i3 = virtualinvoke r0.<org.apache.batik.bridge.SVGAnimateElementBridge: int getDefaultCalcMode()>();

        return $i3;

     label4:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("linear");

        if $z0 == 0 goto label5;

        return 1;

     label5:
        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("discrete");

        if $z1 == 0 goto label6;

        return 0;

     label6:
        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("paced");

        if $z2 == 0 goto label7;

        return 2;

     label7:
        $z3 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("spline");

        if $z3 == 0 goto label8;

        return 3;

     label8:
        $r3 = new org.apache.batik.bridge.BridgeException;

        $r6 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r5 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = "calcMode";

        $r4[1] = $r2;

        specialinvoke $r3.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>($r6, $r5, "attribute.malformed", $r4);

        throw $r3;
    }

    protected boolean parseAdditive()
    {
        java.lang.Object[] $r4;
        org.apache.batik.bridge.BridgeException $r3;
        org.apache.batik.bridge.BridgeContext $r6;
        int $i0;
        org.apache.batik.bridge.SVGAnimateElementBridge r0;
        java.lang.String $r2;
        org.apache.batik.dom.svg.SVGOMElement $r1, $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.bridge.SVGAnimateElementBridge;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r2 = virtualinvoke $r1.<org.apache.batik.dom.AbstractElement: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "additive");

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("replace");

        if $z0 == 0 goto label2;

     label1:
        return 0;

     label2:
        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("sum");

        if $z1 == 0 goto label3;

        return 1;

     label3:
        $r3 = new org.apache.batik.bridge.BridgeException;

        $r6 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r5 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = "additive";

        $r4[1] = $r2;

        specialinvoke $r3.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>($r6, $r5, "attribute.malformed", $r4);

        throw $r3;
    }

    protected boolean parseAccumulate()
    {
        java.lang.Object[] $r4;
        org.apache.batik.bridge.BridgeException $r3;
        org.apache.batik.bridge.BridgeContext $r6;
        int $i0;
        org.apache.batik.bridge.SVGAnimateElementBridge r0;
        java.lang.String $r2;
        org.apache.batik.dom.svg.SVGOMElement $r1, $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.bridge.SVGAnimateElementBridge;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r2 = virtualinvoke $r1.<org.apache.batik.dom.AbstractElement: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "accumulate");

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("none");

        if $z0 == 0 goto label2;

     label1:
        return 0;

     label2:
        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("sum");

        if $z1 == 0 goto label3;

        return 1;

     label3:
        $r3 = new org.apache.batik.bridge.BridgeException;

        $r6 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r5 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = "accumulate";

        $r4[1] = $r2;

        specialinvoke $r3.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>($r6, $r5, "attribute.malformed", $r4);

        throw $r3;
    }

    protected org.apache.batik.anim.values.AnimatableValue[] parseValues()
    {
        org.apache.batik.dom.anim.AnimationTarget $r13;
        java.lang.Object[] $r4, $r7;
        org.apache.batik.anim.values.AnimatableValue[] $r5, $r10;
        java.util.ArrayList $r18;
        short $s0;
        int $i1, $i3, i4, i5, i6, $i8, $i9;
        org.apache.batik.bridge.SVGAnimateElementBridge r0;
        java.lang.String $r2, $r14, $r15, $r16;
        org.apache.batik.dom.svg.SVGOMElement $r1, $r8, $r12;
        boolean z0, $z1, $z2;
        org.apache.batik.bridge.BridgeException $r19;
        char $c2, c7;
        org.apache.batik.bridge.BridgeContext $r9;
        org.apache.batik.bridge.SVGAnimationEngine $r11;
        org.apache.batik.anim.values.AnimatableValue $r17;

        r0 := @this: org.apache.batik.bridge.SVGAnimateElementBridge;

        $s0 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: short animationType>;

        if $s0 != 1 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        z0 = $z1;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r2 = virtualinvoke $r1.<org.apache.batik.dom.AbstractElement: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "values");

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i1 != 0 goto label03;

        return null;

     label03:
        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>(int)>(7);

        i4 = 0;

        goto label11;

     label04:
        i4 = i4 + 1;

        if i4 != $i1 goto label05;

        goto label12;

     label05:
        $c2 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i4);

        $i8 = (int) $c2;

        if $i8 == 32 goto label04;

        i5 = i4 + 1;

        i6 = i4;

        if i5 == $i1 goto label09;

        c7 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i5);

        goto label08;

     label06:
        i5 = i5 + 1;

        if i5 != $i1 goto label07;

        goto label09;

     label07:
        c7 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i5);

     label08:
        $i9 = (int) c7;

        if $i9 != 59 goto label06;

     label09:
        i4 = i5 + 1;

        $r11 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.bridge.SVGAnimationEngine eng>;

        $r12 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r13 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.anim.AnimationTarget animationTarget>;

        $r14 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: java.lang.String attributeNamespaceURI>;

        $r15 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: java.lang.String attributeLocalName>;

        $r16 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(i6, i5);

        $r17 = virtualinvoke $r11.<org.apache.batik.bridge.SVGAnimationEngine: org.apache.batik.anim.values.AnimatableValue parseAnimatableValue(org.w3c.dom.Element,org.apache.batik.dom.anim.AnimationTarget,java.lang.String,java.lang.String,boolean,java.lang.String)>($r12, $r13, $r14, $r15, z0, $r16);

        $z2 = virtualinvoke r0.<org.apache.batik.bridge.SVGAnimationElementBridge: boolean checkValueType(org.apache.batik.anim.values.AnimatableValue)>($r17);

        if $z2 != 0 goto label10;

        $r19 = new org.apache.batik.bridge.BridgeException;

        $r9 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r8 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = "values";

        $r7[1] = $r2;

        specialinvoke $r19.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>($r9, $r8, "attribute.malformed", $r7);

        throw $r19;

     label10:
        virtualinvoke $r18.<java.util.ArrayList: boolean add(java.lang.Object)>($r17);

     label11:
        if i4 < $i1 goto label05;

     label12:
        $i3 = virtualinvoke $r18.<java.util.ArrayList: int size()>();

        $r10 = newarray (org.apache.batik.anim.values.AnimatableValue)[$i3];

        $r4 = virtualinvoke $r18.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r10);

        $r5 = (org.apache.batik.anim.values.AnimatableValue[]) $r4;

        return $r5;
    }

    protected float[] parseKeyTimes()
    {
        java.lang.Float $r5, $r15;
        java.lang.Object[] $r9;
        float[] $r6;
        java.util.ArrayList $r14;
        int $i0, $i2, i3, i4, i5, i7, $i8, $i9, $i10;
        org.apache.batik.bridge.SVGAnimateElementBridge r0;
        java.lang.String $r2, $r12;
        org.apache.batik.dom.svg.SVGOMElement $r1, $r10;
        org.apache.batik.bridge.BridgeException $r16;
        char $c1, c6;
        java.lang.NumberFormatException $r7;
        org.apache.batik.bridge.BridgeContext $r11;
        float $f0, $f1;
        java.lang.Object $r4;

        r0 := @this: org.apache.batik.bridge.SVGAnimateElementBridge;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r2 = virtualinvoke $r1.<org.apache.batik.dom.AbstractElement: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "keyTimes");

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label01;

        return null;

     label01:
        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>(int)>(7);

        i3 = 0;

        goto label11;

     label02:
        i3 = i3 + 1;

        if i3 != $i0 goto label03;

        goto label12;

     label03:
        $c1 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i3);

        $i8 = (int) $c1;

        if $i8 == 32 goto label02;

        i4 = i3 + 1;

        i5 = i3;

        if i4 == $i0 goto label07;

        c6 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i4);

        goto label06;

     label04:
        i4 = i4 + 1;

        if i4 != $i0 goto label05;

        goto label07;

     label05:
        c6 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i4);

     label06:
        $i9 = (int) c6;

        if $i9 == 32 goto label07;

        $i10 = (int) c6;

        if $i10 != 59 goto label04;

     label07:
        i3 = i4 + 1;

     label08:
        $r12 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(i5, i4);

        $f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r12);

        $r15 = new java.lang.Float;

        specialinvoke $r15.<java.lang.Float: void <init>(float)>($f1);

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

     label09:
        goto label11;

     label10:
        $r7 := @caughtexception;

        $r16 = new org.apache.batik.bridge.BridgeException;

        $r11 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r10 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = "keyTimes";

        $r9[1] = $r2;

        specialinvoke $r16.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.Exception,java.lang.String,java.lang.Object[])>($r11, $r10, $r7, "attribute.malformed", $r9);

        throw $r16;

     label11:
        if i3 < $i0 goto label03;

     label12:
        $i2 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

        $r6 = newarray (float)[$i2];

        i7 = 0;

        goto label14;

     label13:
        $r4 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        $r5 = (java.lang.Float) $r4;

        $f0 = virtualinvoke $r5.<java.lang.Float: float floatValue()>();

        $r6[i7] = $f0;

        i7 = i7 + 1;

     label14:
        if i7 < $i2 goto label13;

        return $r6;

        catch java.lang.NumberFormatException from label08 to label09 with label10;
    }

    protected float[] parseKeySplines()
    {
        java.lang.Float $r5, $r20;
        org.apache.batik.dom.svg.SVGOMElement $r1, $r8, $r14;
        org.apache.batik.bridge.BridgeException $r19, $r21;
        org.apache.batik.bridge.BridgeContext $r9, $r15;
        float $f0, $f1;
        java.lang.Object[] $r7, $r13;
        float[] $r10;
        java.util.ArrayList $r18;
        int $i0, $i2, $i3, i5, i6, i7, i8, i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i21, $i22;
        org.apache.batik.bridge.SVGAnimateElementBridge r0;
        java.lang.String $r2, $r16;
        char $c1, $c4, c9;
        java.lang.NumberFormatException $r11;
        java.lang.Object $r4;

        r0 := @this: org.apache.batik.bridge.SVGAnimateElementBridge;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r2 = virtualinvoke $r1.<org.apache.batik.dom.AbstractElement: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "keySplines");

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label01;

        return null;

     label01:
        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>(int)>(7);

        i5 = 0;

        i6 = 0;

        goto label18;

     label02:
        i6 = i6 + 1;

        if i6 != $i0 goto label03;

        goto label19;

     label03:
        $c1 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i6);

        $i12 = (int) $c1;

        if $i12 == 32 goto label02;

        i7 = i6 + 1;

        i8 = i6;

        if i7 == $i0 goto label14;

        c9 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i7);

        goto label06;

     label04:
        i7 = i7 + 1;

        if i7 != $i0 goto label05;

        goto label07;

     label05:
        c9 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i7);

     label06:
        $i13 = (int) c9;

        if $i13 == 32 goto label07;

        $i14 = (int) c9;

        if $i14 == 44 goto label07;

        $i15 = (int) c9;

        if $i15 != 59 goto label04;

     label07:
        i6 = i7 + 1;

        i10 = i7;

        $i16 = (int) c9;

        if $i16 != 32 goto label11;

     label08:
        if i6 != $i0 goto label09;

        goto label10;

     label09:
        $i3 = i6;

        i6 = i6 + 1;

        $c4 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i3);

        c9 = $c4;

        $i17 = (int) $c4;

        if $i17 == 32 goto label08;

     label10:
        $i18 = (int) c9;

        if $i18 == 59 goto label11;

        $i19 = (int) c9;

        if $i19 == 44 goto label11;

        $i21 = (int) -1;

        i6 = i6 + $i21;

     label11:
        $i22 = (int) c9;

        if $i22 != 59 goto label13;

        if i5 != 3 goto label12;

        i5 = 0;

        goto label15;

     label12:
        $r19 = new org.apache.batik.bridge.BridgeException;

        $r9 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r8 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = "keySplines";

        $r7[1] = $r2;

        specialinvoke $r19.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>($r9, $r8, "attribute.malformed", $r7);

        throw $r19;

     label13:
        i5 = i5 + 1;

        goto label15;

     label14:
        i6 = i7 + 1;

        i10 = i7;

     label15:
        $r16 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(i8, i10);

        $f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r16);

        $r20 = new java.lang.Float;

        specialinvoke $r20.<java.lang.Float: void <init>(float)>($f1);

        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>($r20);

     label16:
        goto label18;

     label17:
        $r11 := @caughtexception;

        $r21 = new org.apache.batik.bridge.BridgeException;

        $r15 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r14 = r0.<org.apache.batik.bridge.SVGAnimationElementBridge: org.apache.batik.dom.svg.SVGOMElement element>;

        $r13 = newarray (java.lang.Object)[2];

        $r13[0] = "keySplines";

        $r13[1] = $r2;

        specialinvoke $r21.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.Exception,java.lang.String,java.lang.Object[])>($r15, $r14, $r11, "attribute.malformed", $r13);

        throw $r21;

     label18:
        if i6 < $i0 goto label03;

     label19:
        $i2 = interfaceinvoke $r18.<java.util.List: int size()>();

        $r10 = newarray (float)[$i2];

        i11 = 0;

        goto label21;

     label20:
        $r4 = interfaceinvoke $r18.<java.util.List: java.lang.Object get(int)>(i11);

        $r5 = (java.lang.Float) $r4;

        $f0 = virtualinvoke $r5.<java.lang.Float: float floatValue()>();

        $r10[i11] = $f0;

        i11 = i11 + 1;

     label21:
        if i11 < $i2 goto label20;

        return $r10;

        catch java.lang.NumberFormatException from label15 to label16 with label17;
    }

    protected int getDefaultCalcMode()
    {
        org.apache.batik.bridge.SVGAnimateElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGAnimateElementBridge;

        return 1;
    }

    protected boolean canAnimateType(int)
    {
        int i0;
        org.apache.batik.bridge.SVGAnimateElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGAnimateElementBridge;

        i0 := @parameter0: int;

        return 1;
    }
}
