public class com.jidesoft.comparator.NumberComparator extends java.lang.Object implements java.util.Comparator
{
    public static final com.jidesoft.comparator.ComparatorContext CONTEXT_ABSOLUTE;
    private static com.jidesoft.comparator.NumberComparator singleton;
    private boolean _absolute;

    protected void <init>()
    {
        com.jidesoft.comparator.NumberComparator r0;

        r0 := @this: com.jidesoft.comparator.NumberComparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.jidesoft.comparator.NumberComparator: boolean _absolute> = 0;

        return;
    }

    public static com.jidesoft.comparator.NumberComparator getInstance()
    {
        com.jidesoft.comparator.NumberComparator $r0, $r1, $r2;

        $r0 = <com.jidesoft.comparator.NumberComparator: com.jidesoft.comparator.NumberComparator singleton>;

        if $r0 != null goto label1;

        $r2 = new com.jidesoft.comparator.NumberComparator;

        specialinvoke $r2.<com.jidesoft.comparator.NumberComparator: void <init>()>();

        <com.jidesoft.comparator.NumberComparator: com.jidesoft.comparator.NumberComparator singleton> = $r2;

     label1:
        $r1 = <com.jidesoft.comparator.NumberComparator: com.jidesoft.comparator.NumberComparator singleton>;

        return $r1;
    }

    public int compare(java.lang.Object, java.lang.Object)
    {
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11;
        java.lang.StringBuilder $r4, $r7, $r8, $r11, $r15, $r18, $r22, $r25, $r32, $r34, $r36;
        long l12, l13;
        java.lang.ClassCastException $r33, $r35, $r37;
        java.lang.String $r6, $r10, $r12, $r17, $r19, $r24, $r26;
        java.lang.Number $r27, $r28, $r30, $r31;
        com.jidesoft.comparator.NumberComparator r29;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        int $i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23, $i24, $i26, $i27, $i28, $i30, $i31, $i32, $i34, $i35;
        double $d0, $d1, $d2, $d3, d4, d5;
        java.lang.Object r0, r1;
        java.lang.Class $r5, $r9, $r16, $r23;

        r29 := @this: com.jidesoft.comparator.NumberComparator;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 != null goto label01;

        if r1 != null goto label01;

        return 0;

     label01:
        if r0 != null goto label02;

        $i15 = (int) -1;

        return $i15;

     label02:
        if r1 != null goto label03;

        return 1;

     label03:
        $z0 = r0 instanceof java.lang.Number;

        if $z0 == 0 goto label24;

        $z2 = r1 instanceof java.lang.Number;

        if $z2 == 0 goto label23;

        l12 = 0L;

        l13 = 0L;

        d4 = 0.0;

        d5 = 0.0;

        $z3 = r0 instanceof java.lang.Long;

        if $z3 == 0 goto label04;

        $r31 = (java.lang.Number) r0;

        l12 = virtualinvoke $r31.<java.lang.Number: long longValue()>();

        goto label05;

     label04:
        $r27 = (java.lang.Number) r0;

        d4 = virtualinvoke $r27.<java.lang.Number: double doubleValue()>();

     label05:
        $z4 = r1 instanceof java.lang.Long;

        if $z4 == 0 goto label06;

        $r30 = (java.lang.Number) r1;

        l13 = virtualinvoke $r30.<java.lang.Number: long longValue()>();

        goto label07;

     label06:
        $r28 = (java.lang.Number) r1;

        d5 = virtualinvoke $r28.<java.lang.Number: double doubleValue()>();

     label07:
        $z5 = virtualinvoke r29.<com.jidesoft.comparator.NumberComparator: boolean isAbsolute()>();

        if $z5 == 0 goto label11;

        $b8 = d4 cmpg 0.0;

        $i16 = (int) $b8;

        if $i16 >= 0 goto label08;

        d4 = neg d4;

     label08:
        $b9 = d5 cmpg 0.0;

        $i17 = (int) $b9;

        if $i17 >= 0 goto label09;

        d5 = neg d5;

     label09:
        $b10 = l12 cmp 0L;

        $i18 = (int) $b10;

        if $i18 >= 0 goto label10;

        l12 = neg l12;

     label10:
        $b11 = l13 cmp 0L;

        $i19 = (int) $b11;

        if $i19 >= 0 goto label11;

        l13 = neg l13;

     label11:
        $z9 = r0 instanceof java.lang.Long;

        if $z9 == 0 goto label14;

        $z8 = r1 instanceof java.lang.Long;

        if $z8 == 0 goto label14;

        $b6 = l12 cmp l13;

        $i20 = (int) $b6;

        if $i20 >= 0 goto label12;

        $i22 = (int) -1;

        return $i22;

     label12:
        $b7 = l12 cmp l13;

        $i23 = (int) $b7;

        if $i23 <= 0 goto label13;

        return 1;

     label13:
        return 0;

     label14:
        $z6 = r0 instanceof java.lang.Long;

        if $z6 == 0 goto label17;

        $d2 = (double) l12;

        $b4 = $d2 cmpg d5;

        $i24 = (int) $b4;

        if $i24 >= 0 goto label15;

        $i26 = (int) -1;

        return $i26;

     label15:
        $d3 = (double) l12;

        $b5 = $d3 cmpl d5;

        $i27 = (int) $b5;

        if $i27 <= 0 goto label16;

        return 1;

     label16:
        return 0;

     label17:
        $z7 = r1 instanceof java.lang.Long;

        if $z7 == 0 goto label20;

        $d0 = (double) l13;

        $b2 = d4 cmpg $d0;

        $i28 = (int) $b2;

        if $i28 >= 0 goto label18;

        $i30 = (int) -1;

        return $i30;

     label18:
        $d1 = (double) l13;

        $b3 = d4 cmpl $d1;

        $i31 = (int) $b3;

        if $i31 <= 0 goto label19;

        return 1;

     label19:
        return 0;

     label20:
        $b0 = d4 cmpg d5;

        $i32 = (int) $b0;

        if $i32 >= 0 goto label21;

        $i34 = (int) -1;

        return $i34;

     label21:
        $b1 = d4 cmpl d5;

        $i35 = (int) $b1;

        if $i35 <= 0 goto label22;

        return 1;

     label22:
        return 0;

     label23:
        $r33 = new java.lang.ClassCastException;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The first argument of this method was not a Number but ");

        $r23 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r24 = virtualinvoke $r23.<java.lang.Class: java.lang.String getName()>();

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<java.lang.ClassCastException: void <init>(java.lang.String)>($r26);

        throw $r33;

     label24:
        $z1 = r1 instanceof java.lang.Number;

        if $z1 == 0 goto label25;

        $r35 = new java.lang.ClassCastException;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The second argument of this method was not a Number but ");

        $r16 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.String getName()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r35.<java.lang.ClassCastException: void <init>(java.lang.String)>($r19);

        throw $r35;

     label25:
        $r37 = new java.lang.ClassCastException;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Both arguments of this method were not Numbers. They are ");

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        $r9 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r37.<java.lang.ClassCastException: void <init>(java.lang.String)>($r12);

        throw $r37;
    }

    public boolean isAbsolute()
    {
        com.jidesoft.comparator.NumberComparator r0;
        boolean $z0;

        r0 := @this: com.jidesoft.comparator.NumberComparator;

        $z0 = r0.<com.jidesoft.comparator.NumberComparator: boolean _absolute>;

        return $z0;
    }

    public void setAbsolute(boolean)
    {
        com.jidesoft.comparator.NumberComparator r0;
        boolean z0;

        r0 := @this: com.jidesoft.comparator.NumberComparator;

        z0 := @parameter0: boolean;

        r0.<com.jidesoft.comparator.NumberComparator: boolean _absolute> = z0;

        return;
    }

    static void <clinit>()
    {
        com.jidesoft.comparator.ComparatorContext $r0;

        $r0 = new com.jidesoft.comparator.ComparatorContext;

        specialinvoke $r0.<com.jidesoft.comparator.ComparatorContext: void <init>(java.lang.String)>("AbsoluteValue");

        <com.jidesoft.comparator.NumberComparator: com.jidesoft.comparator.ComparatorContext CONTEXT_ABSOLUTE> = $r0;

        <com.jidesoft.comparator.NumberComparator: com.jidesoft.comparator.NumberComparator singleton> = null;

        return;
    }
}
