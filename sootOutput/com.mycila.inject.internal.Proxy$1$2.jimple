class com.mycila.inject.internal.Proxy$1$2 extends java.lang.Object implements com.mycila.inject.internal.MethodInvoker
{
    final java.lang.reflect.Method val$method;
    final com.mycila.inject.internal.Proxy$1 this$0;

    void <init>(com.mycila.inject.internal.Proxy$1, java.lang.reflect.Method)
    {
        com.mycila.inject.internal.Proxy$1$2 r0;
        java.lang.reflect.Method r2;
        com.mycila.inject.internal.Proxy$1 r1;

        r0 := @this: com.mycila.inject.internal.Proxy$1$2;

        r1 := @parameter0: com.mycila.inject.internal.Proxy$1;

        r2 := @parameter1: java.lang.reflect.Method;

        r0.<com.mycila.inject.internal.Proxy$1$2: com.mycila.inject.internal.Proxy$1 this$0> = r1;

        r0.<com.mycila.inject.internal.Proxy$1$2: java.lang.reflect.Method val$method> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public transient java.lang.Object invoke(java.lang.Object, java.lang.Object[]) throws java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException
    {
        java.lang.Object[] r2;
        com.mycila.inject.internal.Proxy$1$2 r0;
        java.lang.Object r1, $r4;
        java.lang.reflect.Method $r3;

        r0 := @this: com.mycila.inject.internal.Proxy$1$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object[];

        $r3 = r0.<com.mycila.inject.internal.Proxy$1$2: java.lang.reflect.Method val$method>;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, r2);

        return $r4;
    }
}
