class com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer extends javax.swing.JPanel implements javax.swing.plaf.UIResource
{
    private boolean notifyTabbedPane;
    final com.jidesoft.plaf.basic.BasicJideTabbedPaneUI this$0;

    public void <init>(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI r1;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer r0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer;

        r1 := @parameter0: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI this$0> = r1;

        specialinvoke r0.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>(null);

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer: boolean notifyTabbedPane> = 1;

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer: void setOpaque(boolean)>(0);

        return;
    }

    public void remove(java.awt.Component)
    {
        com.jidesoft.swing.JideTabbedPane $r3, $r5;
        java.awt.Component r2;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI $r1, $r4;
        int $i0, $i2;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer r0;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer;

        r2 := @parameter0: java.awt.Component;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI this$0>;

        $r3 = $r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i0 = virtualinvoke $r3.<com.jidesoft.swing.JideTabbedPane: int indexOfTabComponent(java.awt.Component)>(r2);

        specialinvoke r0.<javax.swing.JPanel: void remove(java.awt.Component)>(r2);

        $z0 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer: boolean notifyTabbedPane>;

        if $z0 == 0 goto label1;

        $i2 = (int) -1;

        if $i0 == $i2 goto label1;

        $r4 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI this$0>;

        $r5 = $r4.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        virtualinvoke $r5.<com.jidesoft.swing.JideTabbedPane: void setTabComponentAt(int,java.awt.Component)>($i0, null);

     label1:
        return;
    }

    private void removeUnusedTabComponents()
    {
        com.jidesoft.swing.JideTabbedPane $r4;
        java.awt.Component r2;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI $r3;
        java.awt.Component[] $r1;
        int i0, $i1, i2, $i4;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer r0;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer: java.awt.Component[] getComponents()>();

        i0 = lengthof $r1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        r2 = $r1[i2];

        $z0 = r2 instanceof javax.swing.plaf.UIResource;

        if $z0 != 0 goto label2;

        $r3 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI this$0>;

        $r4 = $r3.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $i1 = virtualinvoke $r4.<com.jidesoft.swing.JideTabbedPane: int indexOfTabComponent(java.awt.Component)>(r2);

        $i4 = (int) -1;

        if $i1 != $i4 goto label2;

        specialinvoke r0.<javax.swing.JPanel: void remove(java.awt.Component)>(r2);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    public boolean isOptimizedDrawingEnabled()
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI $r1;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport $r2;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer r0;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI this$0>;

        $r2 = $r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void doLayout()
    {
        com.jidesoft.swing.JideTabbedPane $r3;
        java.awt.Rectangle $r4;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabPanel $r7;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI $r1, $r2, $r5;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport $r6;
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer r0;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI this$0>;

        $z0 = virtualinvoke $r1.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: boolean scrollableTabLayoutEnabled()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI this$0>;

        $r6 = $r5.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport _tabScroller>;

        $r7 = $r6.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabSupport: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabPanel tabPanel>;

        virtualinvoke $r7.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$ScrollableTabPanel: void repaint()>();

        goto label2;

     label1:
        $r2 = r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI this$0>;

        $r3 = $r2.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI: com.jidesoft.swing.JideTabbedPane _tabPane>;

        $r4 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer: java.awt.Rectangle getBounds()>();

        virtualinvoke $r3.<com.jidesoft.swing.JideTabbedPane: void repaint(java.awt.Rectangle)>($r4);

     label2:
        return;
    }

    static boolean access$002(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer, boolean)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer r0;
        boolean z0;

        r0 := @parameter0: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer;

        z0 := @parameter1: boolean;

        r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer: boolean notifyTabbedPane> = z0;

        return z0;
    }

    static void access$2500(com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer)
    {
        com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer r0;

        r0 := @parameter0: com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer;

        specialinvoke r0.<com.jidesoft.plaf.basic.BasicJideTabbedPaneUI$TabContainer: void removeUnusedTabComponents()>();

        return;
    }
}
