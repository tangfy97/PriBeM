public class org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter extends java.lang.Object
{
    java.awt.image.WritableRaster wr;
    int bands;
    static int[] zeros;

    public void <init>(java.awt.image.WritableRaster)
    {
        org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter r0;
        int $i0;
        java.awt.image.WritableRaster r1;
        java.awt.image.SampleModel $r2;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter;

        r1 := @parameter0: java.awt.image.WritableRaster;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter: java.awt.image.WritableRaster wr> = r1;

        $r2 = virtualinvoke r1.<java.awt.image.Raster: java.awt.image.SampleModel getSampleModel()>();

        $i0 = virtualinvoke $r2.<java.awt.image.SampleModel: int getNumBands()>();

        r0.<org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter: int bands> = $i0;

        return;
    }

    public void zeroRect(java.awt.Rectangle)
    {
        java.lang.Throwable $r7;
        java.awt.Rectangle r2;
        int[] $r1, $r3, $r4, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12;
        org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter r0;
        java.awt.image.WritableRaster $r5;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter;

        r2 := @parameter0: java.awt.Rectangle;

        entermonitor r0;

     label1:
        $r1 = <org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter: int[] zeros>;

        if $r1 == null goto label2;

        $r6 = <org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter: int[] zeros>;

        $i11 = lengthof $r6;

        $i9 = r2.<java.awt.Rectangle: int width>;

        $i8 = r0.<org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter: int bands>;

        $i10 = $i9 * $i8;

        if $i11 >= $i10 goto label3;

     label2:
        $i1 = r2.<java.awt.Rectangle: int width>;

        $i0 = r0.<org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter: int bands>;

        $i2 = $i1 * $i0;

        $r3 = newarray (int)[$i2];

        <org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter: int[] zeros> = $r3;

     label3:
        exitmonitor r0;

        goto label5;

     label4:
        $r7 := @caughtexception;

        exitmonitor r0;

        throw $r7;

     label5:
        i12 = 0;

        goto label7;

     label6:
        $r5 = r0.<org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter: java.awt.image.WritableRaster wr>;

        $i7 = r2.<java.awt.Rectangle: int x>;

        $i4 = r2.<java.awt.Rectangle: int y>;

        $i6 = $i4 + i12;

        $i5 = r2.<java.awt.Rectangle: int width>;

        $r4 = <org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter: int[] zeros>;

        virtualinvoke $r5.<java.awt.image.WritableRaster: void setPixels(int,int,int,int,int[])>($i7, $i6, $i5, 1, $r4);

        i12 = i12 + 1;

     label7:
        $i3 = r2.<java.awt.Rectangle: int height>;

        if i12 < $i3 goto label6;

        return;

        catch java.lang.Throwable from label1 to label4 with label4;
    }

    public static org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter getZeroRecter(java.awt.image.WritableRaster)
    {
        org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter $r2;
        java.awt.image.WritableRaster r0;
        org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter_INT_PACK $r3;
        java.awt.image.SampleModel $r1;
        boolean $z0;

        r0 := @parameter0: java.awt.image.WritableRaster;

        $r1 = virtualinvoke r0.<java.awt.image.Raster: java.awt.image.SampleModel getSampleModel()>();

        $z0 = staticinvoke <org.apache.batik.ext.awt.image.GraphicsUtil: boolean is_INT_PACK_Data(java.awt.image.SampleModel,boolean)>($r1, 0);

        if $z0 == 0 goto label1;

        $r3 = new org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter_INT_PACK;

        specialinvoke $r3.<org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter_INT_PACK: void <init>(java.awt.image.WritableRaster)>(r0);

        return $r3;

     label1:
        $r2 = new org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter;

        specialinvoke $r2.<org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter: void <init>(java.awt.image.WritableRaster)>(r0);

        return $r2;
    }

    public static void zeroRect(java.awt.image.WritableRaster)
    {
        java.awt.Rectangle $r2;
        java.awt.image.WritableRaster r0;
        org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter $r1;

        r0 := @parameter0: java.awt.image.WritableRaster;

        $r1 = staticinvoke <org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter: org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter getZeroRecter(java.awt.image.WritableRaster)>(r0);

        $r2 = virtualinvoke r0.<java.awt.image.Raster: java.awt.Rectangle getBounds()>();

        virtualinvoke $r1.<org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter: void zeroRect(java.awt.Rectangle)>($r2);

        return;
    }

    static void <clinit>()
    {
        <org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter: int[] zeros> = null;

        return;
    }
}
