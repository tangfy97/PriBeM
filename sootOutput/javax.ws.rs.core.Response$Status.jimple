public final enum class javax.ws.rs.core.Response$Status extends java.lang.Enum implements javax.ws.rs.core.Response$StatusType
{
    public static final enum javax.ws.rs.core.Response$Status OK;
    public static final enum javax.ws.rs.core.Response$Status CREATED;
    public static final enum javax.ws.rs.core.Response$Status ACCEPTED;
    public static final enum javax.ws.rs.core.Response$Status NO_CONTENT;
    public static final enum javax.ws.rs.core.Response$Status RESET_CONTENT;
    public static final enum javax.ws.rs.core.Response$Status PARTIAL_CONTENT;
    public static final enum javax.ws.rs.core.Response$Status MOVED_PERMANENTLY;
    public static final enum javax.ws.rs.core.Response$Status FOUND;
    public static final enum javax.ws.rs.core.Response$Status SEE_OTHER;
    public static final enum javax.ws.rs.core.Response$Status NOT_MODIFIED;
    public static final enum javax.ws.rs.core.Response$Status USE_PROXY;
    public static final enum javax.ws.rs.core.Response$Status TEMPORARY_REDIRECT;
    public static final enum javax.ws.rs.core.Response$Status BAD_REQUEST;
    public static final enum javax.ws.rs.core.Response$Status UNAUTHORIZED;
    public static final enum javax.ws.rs.core.Response$Status PAYMENT_REQUIRED;
    public static final enum javax.ws.rs.core.Response$Status FORBIDDEN;
    public static final enum javax.ws.rs.core.Response$Status NOT_FOUND;
    public static final enum javax.ws.rs.core.Response$Status METHOD_NOT_ALLOWED;
    public static final enum javax.ws.rs.core.Response$Status NOT_ACCEPTABLE;
    public static final enum javax.ws.rs.core.Response$Status PROXY_AUTHENTICATION_REQUIRED;
    public static final enum javax.ws.rs.core.Response$Status REQUEST_TIMEOUT;
    public static final enum javax.ws.rs.core.Response$Status CONFLICT;
    public static final enum javax.ws.rs.core.Response$Status GONE;
    public static final enum javax.ws.rs.core.Response$Status LENGTH_REQUIRED;
    public static final enum javax.ws.rs.core.Response$Status PRECONDITION_FAILED;
    public static final enum javax.ws.rs.core.Response$Status REQUEST_ENTITY_TOO_LARGE;
    public static final enum javax.ws.rs.core.Response$Status REQUEST_URI_TOO_LONG;
    public static final enum javax.ws.rs.core.Response$Status UNSUPPORTED_MEDIA_TYPE;
    public static final enum javax.ws.rs.core.Response$Status REQUESTED_RANGE_NOT_SATISFIABLE;
    public static final enum javax.ws.rs.core.Response$Status EXPECTATION_FAILED;
    public static final enum javax.ws.rs.core.Response$Status INTERNAL_SERVER_ERROR;
    public static final enum javax.ws.rs.core.Response$Status NOT_IMPLEMENTED;
    public static final enum javax.ws.rs.core.Response$Status BAD_GATEWAY;
    public static final enum javax.ws.rs.core.Response$Status SERVICE_UNAVAILABLE;
    public static final enum javax.ws.rs.core.Response$Status GATEWAY_TIMEOUT;
    public static final enum javax.ws.rs.core.Response$Status HTTP_VERSION_NOT_SUPPORTED;
    private final int code;
    private final java.lang.String reason;
    private final javax.ws.rs.core.Response$Status$Family family;
    private static final javax.ws.rs.core.Response$Status[] $VALUES;

    public static javax.ws.rs.core.Response$Status[] values()
    {
        java.lang.Object $r1;
        javax.ws.rs.core.Response$Status[] $r0, $r2;

        $r0 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (javax.ws.rs.core.Response$Status[]) $r1;

        return $r2;
    }

    public static javax.ws.rs.core.Response$Status valueOf(java.lang.String)
    {
        javax.ws.rs.core.Response$Status $r2;
        java.lang.String r0;
        java.lang.Enum $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Ljavax/ws/rs/core/Response$Status;", r0);

        $r2 = (javax.ws.rs.core.Response$Status) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, int, java.lang.String)
    {
        javax.ws.rs.core.Response$Status$Family $r3;
        int i0, i1;
        javax.ws.rs.core.Response$Status r0;
        java.lang.String r1, r2;

        r0 := @this: javax.ws.rs.core.Response$Status;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<javax.ws.rs.core.Response$Status: int code> = i1;

        r0.<javax.ws.rs.core.Response$Status: java.lang.String reason> = r2;

        $r3 = staticinvoke <javax.ws.rs.core.Response$Status$Family: javax.ws.rs.core.Response$Status$Family familyOf(int)>(i1);

        r0.<javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status$Family family> = $r3;

        return;
    }

    public javax.ws.rs.core.Response$Status$Family getFamily()
    {
        javax.ws.rs.core.Response$Status r0;
        javax.ws.rs.core.Response$Status$Family $r1;

        r0 := @this: javax.ws.rs.core.Response$Status;

        $r1 = r0.<javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status$Family family>;

        return $r1;
    }

    public int getStatusCode()
    {
        int $i0;
        javax.ws.rs.core.Response$Status r0;

        r0 := @this: javax.ws.rs.core.Response$Status;

        $i0 = r0.<javax.ws.rs.core.Response$Status: int code>;

        return $i0;
    }

    public java.lang.String getReasonPhrase()
    {
        javax.ws.rs.core.Response$Status r0;
        java.lang.String $r1;

        r0 := @this: javax.ws.rs.core.Response$Status;

        $r1 = virtualinvoke r0.<javax.ws.rs.core.Response$Status: java.lang.String toString()>();

        return $r1;
    }

    public java.lang.String toString()
    {
        javax.ws.rs.core.Response$Status r0;
        java.lang.String $r1;

        r0 := @this: javax.ws.rs.core.Response$Status;

        $r1 = r0.<javax.ws.rs.core.Response$Status: java.lang.String reason>;

        return $r1;
    }

    public static javax.ws.rs.core.Response$Status fromStatusCode(int)
    {
        javax.ws.rs.core.Response$Status[] $r0;
        int i0, i1, $i2, i3;
        javax.ws.rs.core.Response$Status r1;

        i1 := @parameter0: int;

        $r0 = staticinvoke <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status[] values()>();

        i0 = lengthof $r0;

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        r1 = $r0[i3];

        $i2 = r1.<javax.ws.rs.core.Response$Status: int code>;

        if $i2 != i1 goto label2;

        return r1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return null;
    }

    static void <clinit>()
    {
        javax.ws.rs.core.Response$Status $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72;
        javax.ws.rs.core.Response$Status[] $r36;

        $r0 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r0.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("OK", 0, 200, "OK");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status OK> = $r0;

        $r1 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r1.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("CREATED", 1, 201, "Created");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status CREATED> = $r1;

        $r2 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r2.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("ACCEPTED", 2, 202, "Accepted");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status ACCEPTED> = $r2;

        $r3 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r3.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("NO_CONTENT", 3, 204, "No Content");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status NO_CONTENT> = $r3;

        $r4 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r4.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("RESET_CONTENT", 4, 205, "Reset Content");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status RESET_CONTENT> = $r4;

        $r5 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r5.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("PARTIAL_CONTENT", 5, 206, "Partial Content");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status PARTIAL_CONTENT> = $r5;

        $r6 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r6.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("MOVED_PERMANENTLY", 6, 301, "Moved Permanently");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status MOVED_PERMANENTLY> = $r6;

        $r7 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r7.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("FOUND", 7, 302, "Found");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status FOUND> = $r7;

        $r8 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r8.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("SEE_OTHER", 8, 303, "See Other");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status SEE_OTHER> = $r8;

        $r9 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r9.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("NOT_MODIFIED", 9, 304, "Not Modified");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status NOT_MODIFIED> = $r9;

        $r10 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r10.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("USE_PROXY", 10, 305, "Use Proxy");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status USE_PROXY> = $r10;

        $r11 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r11.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("TEMPORARY_REDIRECT", 11, 307, "Temporary Redirect");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status TEMPORARY_REDIRECT> = $r11;

        $r12 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r12.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("BAD_REQUEST", 12, 400, "Bad Request");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status BAD_REQUEST> = $r12;

        $r13 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r13.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("UNAUTHORIZED", 13, 401, "Unauthorized");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status UNAUTHORIZED> = $r13;

        $r14 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r14.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("PAYMENT_REQUIRED", 14, 402, "Payment Required");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status PAYMENT_REQUIRED> = $r14;

        $r15 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r15.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("FORBIDDEN", 15, 403, "Forbidden");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status FORBIDDEN> = $r15;

        $r16 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r16.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("NOT_FOUND", 16, 404, "Not Found");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status NOT_FOUND> = $r16;

        $r17 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r17.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("METHOD_NOT_ALLOWED", 17, 405, "Method Not Allowed");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status METHOD_NOT_ALLOWED> = $r17;

        $r18 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r18.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("NOT_ACCEPTABLE", 18, 406, "Not Acceptable");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status NOT_ACCEPTABLE> = $r18;

        $r19 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r19.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("PROXY_AUTHENTICATION_REQUIRED", 19, 407, "Proxy Authentication Required");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status PROXY_AUTHENTICATION_REQUIRED> = $r19;

        $r20 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r20.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("REQUEST_TIMEOUT", 20, 408, "Request Timeout");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status REQUEST_TIMEOUT> = $r20;

        $r21 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r21.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("CONFLICT", 21, 409, "Conflict");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status CONFLICT> = $r21;

        $r22 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r22.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("GONE", 22, 410, "Gone");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status GONE> = $r22;

        $r23 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r23.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("LENGTH_REQUIRED", 23, 411, "Length Required");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status LENGTH_REQUIRED> = $r23;

        $r24 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r24.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("PRECONDITION_FAILED", 24, 412, "Precondition Failed");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status PRECONDITION_FAILED> = $r24;

        $r25 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r25.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("REQUEST_ENTITY_TOO_LARGE", 25, 413, "Request Entity Too Large");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status REQUEST_ENTITY_TOO_LARGE> = $r25;

        $r26 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r26.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("REQUEST_URI_TOO_LONG", 26, 414, "Request-URI Too Long");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status REQUEST_URI_TOO_LONG> = $r26;

        $r27 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r27.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("UNSUPPORTED_MEDIA_TYPE", 27, 415, "Unsupported Media Type");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status UNSUPPORTED_MEDIA_TYPE> = $r27;

        $r28 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r28.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("REQUESTED_RANGE_NOT_SATISFIABLE", 28, 416, "Requested Range Not Satisfiable");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status REQUESTED_RANGE_NOT_SATISFIABLE> = $r28;

        $r29 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r29.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("EXPECTATION_FAILED", 29, 417, "Expectation Failed");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status EXPECTATION_FAILED> = $r29;

        $r30 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r30.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("INTERNAL_SERVER_ERROR", 30, 500, "Internal Server Error");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status INTERNAL_SERVER_ERROR> = $r30;

        $r31 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r31.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("NOT_IMPLEMENTED", 31, 501, "Not Implemented");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status NOT_IMPLEMENTED> = $r31;

        $r32 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r32.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("BAD_GATEWAY", 32, 502, "Bad Gateway");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status BAD_GATEWAY> = $r32;

        $r33 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r33.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("SERVICE_UNAVAILABLE", 33, 503, "Service Unavailable");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status SERVICE_UNAVAILABLE> = $r33;

        $r34 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r34.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("GATEWAY_TIMEOUT", 34, 504, "Gateway Timeout");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status GATEWAY_TIMEOUT> = $r34;

        $r35 = new javax.ws.rs.core.Response$Status;

        specialinvoke $r35.<javax.ws.rs.core.Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("HTTP_VERSION_NOT_SUPPORTED", 35, 505, "HTTP Version Not Supported");

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status HTTP_VERSION_NOT_SUPPORTED> = $r35;

        $r36 = newarray (javax.ws.rs.core.Response$Status)[36];

        $r37 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status OK>;

        $r36[0] = $r37;

        $r38 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status CREATED>;

        $r36[1] = $r38;

        $r39 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status ACCEPTED>;

        $r36[2] = $r39;

        $r40 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status NO_CONTENT>;

        $r36[3] = $r40;

        $r41 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status RESET_CONTENT>;

        $r36[4] = $r41;

        $r42 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status PARTIAL_CONTENT>;

        $r36[5] = $r42;

        $r43 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status MOVED_PERMANENTLY>;

        $r36[6] = $r43;

        $r44 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status FOUND>;

        $r36[7] = $r44;

        $r45 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status SEE_OTHER>;

        $r36[8] = $r45;

        $r46 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status NOT_MODIFIED>;

        $r36[9] = $r46;

        $r47 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status USE_PROXY>;

        $r36[10] = $r47;

        $r48 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status TEMPORARY_REDIRECT>;

        $r36[11] = $r48;

        $r49 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status BAD_REQUEST>;

        $r36[12] = $r49;

        $r50 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status UNAUTHORIZED>;

        $r36[13] = $r50;

        $r51 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status PAYMENT_REQUIRED>;

        $r36[14] = $r51;

        $r52 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status FORBIDDEN>;

        $r36[15] = $r52;

        $r53 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status NOT_FOUND>;

        $r36[16] = $r53;

        $r54 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status METHOD_NOT_ALLOWED>;

        $r36[17] = $r54;

        $r55 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status NOT_ACCEPTABLE>;

        $r36[18] = $r55;

        $r56 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status PROXY_AUTHENTICATION_REQUIRED>;

        $r36[19] = $r56;

        $r57 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status REQUEST_TIMEOUT>;

        $r36[20] = $r57;

        $r58 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status CONFLICT>;

        $r36[21] = $r58;

        $r59 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status GONE>;

        $r36[22] = $r59;

        $r60 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status LENGTH_REQUIRED>;

        $r36[23] = $r60;

        $r61 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status PRECONDITION_FAILED>;

        $r36[24] = $r61;

        $r62 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status REQUEST_ENTITY_TOO_LARGE>;

        $r36[25] = $r62;

        $r63 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status REQUEST_URI_TOO_LONG>;

        $r36[26] = $r63;

        $r64 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status UNSUPPORTED_MEDIA_TYPE>;

        $r36[27] = $r64;

        $r65 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status REQUESTED_RANGE_NOT_SATISFIABLE>;

        $r36[28] = $r65;

        $r66 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status EXPECTATION_FAILED>;

        $r36[29] = $r66;

        $r67 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status INTERNAL_SERVER_ERROR>;

        $r36[30] = $r67;

        $r68 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status NOT_IMPLEMENTED>;

        $r36[31] = $r68;

        $r69 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status BAD_GATEWAY>;

        $r36[32] = $r69;

        $r70 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status SERVICE_UNAVAILABLE>;

        $r36[33] = $r70;

        $r71 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status GATEWAY_TIMEOUT>;

        $r36[34] = $r71;

        $r72 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status HTTP_VERSION_NOT_SUPPORTED>;

        $r36[35] = $r72;

        <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status[] $VALUES> = $r36;

        return;
    }
}
