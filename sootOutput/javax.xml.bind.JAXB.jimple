public final class javax.xml.bind.JAXB extends java.lang.Object
{
    private static volatile java.lang.ref.WeakReference cache;

    private void <init>()
    {
        javax.xml.bind.JAXB r0;

        r0 := @this: javax.xml.bind.JAXB;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static javax.xml.bind.JAXBContext getContext(java.lang.Class) throws javax.xml.bind.JAXBException
    {
        javax.xml.bind.JAXB$Cache r5, $r6;
        java.lang.Class r1, $r3;
        java.lang.Object $r2;
        java.lang.ref.WeakReference r0, $r7;
        javax.xml.bind.JAXBContext $r4, $r8;

        r1 := @parameter0: java.lang.Class;

        r0 = <javax.xml.bind.JAXB: java.lang.ref.WeakReference cache>;

        if r0 == null goto label1;

        $r2 = virtualinvoke r0.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r5 = (javax.xml.bind.JAXB$Cache) $r2;

        if r5 == null goto label1;

        $r3 = r5.<javax.xml.bind.JAXB$Cache: java.lang.Class type>;

        if $r3 != r1 goto label1;

        $r4 = r5.<javax.xml.bind.JAXB$Cache: javax.xml.bind.JAXBContext context>;

        return $r4;

     label1:
        $r6 = new javax.xml.bind.JAXB$Cache;

        specialinvoke $r6.<javax.xml.bind.JAXB$Cache: void <init>(java.lang.Class)>(r1);

        $r7 = new java.lang.ref.WeakReference;

        specialinvoke $r7.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r6);

        <javax.xml.bind.JAXB: java.lang.ref.WeakReference cache> = $r7;

        $r8 = $r6.<javax.xml.bind.JAXB$Cache: javax.xml.bind.JAXBContext context>;

        return $r8;
    }

    public static java.lang.Object unmarshal(java.io.File, java.lang.Class)
    {
        javax.xml.bind.Unmarshaller $r2;
        javax.xml.transform.stream.StreamSource $r3;
        javax.xml.bind.JAXBElement $r5;
        javax.xml.bind.JAXBException $r7;
        java.io.File r4;
        java.lang.Class r0;
        java.lang.Object $r6;
        javax.xml.bind.DataBindingException $r8;
        javax.xml.bind.JAXBContext $r1;

        r4 := @parameter0: java.io.File;

        r0 := @parameter1: java.lang.Class;

     label1:
        $r1 = staticinvoke <javax.xml.bind.JAXB: javax.xml.bind.JAXBContext getContext(java.lang.Class)>(r0);

        $r2 = virtualinvoke $r1.<javax.xml.bind.JAXBContext: javax.xml.bind.Unmarshaller createUnmarshaller()>();

        $r3 = new javax.xml.transform.stream.StreamSource;

        specialinvoke $r3.<javax.xml.transform.stream.StreamSource: void <init>(java.io.File)>(r4);

        $r5 = interfaceinvoke $r2.<javax.xml.bind.Unmarshaller: javax.xml.bind.JAXBElement unmarshal(javax.xml.transform.Source,java.lang.Class)>($r3, r0);

        $r6 = virtualinvoke $r5.<javax.xml.bind.JAXBElement: java.lang.Object getValue()>();

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        $r8 = new javax.xml.bind.DataBindingException;

        specialinvoke $r8.<javax.xml.bind.DataBindingException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

        catch javax.xml.bind.JAXBException from label1 to label2 with label3;
    }

    public static java.lang.Object unmarshal(java.net.URL, java.lang.Class)
    {
        javax.xml.bind.Unmarshaller $r2;
        java.net.URL r3;
        javax.xml.bind.JAXBElement $r5;
        java.io.IOException $r7;
        javax.xml.transform.Source $r4;
        javax.xml.bind.JAXBException $r9;
        java.lang.Class r0;
        java.lang.Object $r6;
        javax.xml.bind.DataBindingException $r8, $r10;
        javax.xml.bind.JAXBContext $r1;

        r3 := @parameter0: java.net.URL;

        r0 := @parameter1: java.lang.Class;

     label1:
        $r1 = staticinvoke <javax.xml.bind.JAXB: javax.xml.bind.JAXBContext getContext(java.lang.Class)>(r0);

        $r2 = virtualinvoke $r1.<javax.xml.bind.JAXBContext: javax.xml.bind.Unmarshaller createUnmarshaller()>();

        $r4 = staticinvoke <javax.xml.bind.JAXB: javax.xml.transform.Source toSource(java.lang.Object)>(r3);

        $r5 = interfaceinvoke $r2.<javax.xml.bind.Unmarshaller: javax.xml.bind.JAXBElement unmarshal(javax.xml.transform.Source,java.lang.Class)>($r4, r0);

        $r6 = virtualinvoke $r5.<javax.xml.bind.JAXBElement: java.lang.Object getValue()>();

     label2:
        return $r6;

     label3:
        $r9 := @caughtexception;

        $r10 = new javax.xml.bind.DataBindingException;

        specialinvoke $r10.<javax.xml.bind.DataBindingException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

     label4:
        $r7 := @caughtexception;

        $r8 = new javax.xml.bind.DataBindingException;

        specialinvoke $r8.<javax.xml.bind.DataBindingException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

        catch javax.xml.bind.JAXBException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
    }

    public static java.lang.Object unmarshal(java.net.URI, java.lang.Class)
    {
        javax.xml.bind.Unmarshaller $r2;
        javax.xml.bind.JAXBElement $r5;
        java.io.IOException $r7;
        javax.xml.transform.Source $r4;
        javax.xml.bind.JAXBException $r9;
        java.lang.Class r0;
        java.lang.Object $r6;
        javax.xml.bind.DataBindingException $r8, $r10;
        java.net.URI r3;
        javax.xml.bind.JAXBContext $r1;

        r3 := @parameter0: java.net.URI;

        r0 := @parameter1: java.lang.Class;

     label1:
        $r1 = staticinvoke <javax.xml.bind.JAXB: javax.xml.bind.JAXBContext getContext(java.lang.Class)>(r0);

        $r2 = virtualinvoke $r1.<javax.xml.bind.JAXBContext: javax.xml.bind.Unmarshaller createUnmarshaller()>();

        $r4 = staticinvoke <javax.xml.bind.JAXB: javax.xml.transform.Source toSource(java.lang.Object)>(r3);

        $r5 = interfaceinvoke $r2.<javax.xml.bind.Unmarshaller: javax.xml.bind.JAXBElement unmarshal(javax.xml.transform.Source,java.lang.Class)>($r4, r0);

        $r6 = virtualinvoke $r5.<javax.xml.bind.JAXBElement: java.lang.Object getValue()>();

     label2:
        return $r6;

     label3:
        $r9 := @caughtexception;

        $r10 = new javax.xml.bind.DataBindingException;

        specialinvoke $r10.<javax.xml.bind.DataBindingException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

     label4:
        $r7 := @caughtexception;

        $r8 = new javax.xml.bind.DataBindingException;

        specialinvoke $r8.<javax.xml.bind.DataBindingException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

        catch javax.xml.bind.JAXBException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
    }

    public static java.lang.Object unmarshal(java.lang.String, java.lang.Class)
    {
        javax.xml.bind.Unmarshaller $r2;
        javax.xml.bind.JAXBElement $r5;
        java.io.IOException $r7;
        javax.xml.transform.Source $r4;
        javax.xml.bind.JAXBException $r9;
        java.lang.Class r0;
        java.lang.Object $r6;
        javax.xml.bind.DataBindingException $r8, $r10;
        java.lang.String r3;
        javax.xml.bind.JAXBContext $r1;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Class;

     label1:
        $r1 = staticinvoke <javax.xml.bind.JAXB: javax.xml.bind.JAXBContext getContext(java.lang.Class)>(r0);

        $r2 = virtualinvoke $r1.<javax.xml.bind.JAXBContext: javax.xml.bind.Unmarshaller createUnmarshaller()>();

        $r4 = staticinvoke <javax.xml.bind.JAXB: javax.xml.transform.Source toSource(java.lang.Object)>(r3);

        $r5 = interfaceinvoke $r2.<javax.xml.bind.Unmarshaller: javax.xml.bind.JAXBElement unmarshal(javax.xml.transform.Source,java.lang.Class)>($r4, r0);

        $r6 = virtualinvoke $r5.<javax.xml.bind.JAXBElement: java.lang.Object getValue()>();

     label2:
        return $r6;

     label3:
        $r9 := @caughtexception;

        $r10 = new javax.xml.bind.DataBindingException;

        specialinvoke $r10.<javax.xml.bind.DataBindingException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

     label4:
        $r7 := @caughtexception;

        $r8 = new javax.xml.bind.DataBindingException;

        specialinvoke $r8.<javax.xml.bind.DataBindingException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

        catch javax.xml.bind.JAXBException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
    }

    public static java.lang.Object unmarshal(java.io.InputStream, java.lang.Class)
    {
        javax.xml.bind.Unmarshaller $r2;
        javax.xml.bind.JAXBElement $r5;
        java.io.IOException $r7;
        javax.xml.transform.Source $r4;
        javax.xml.bind.JAXBException $r9;
        java.lang.Class r0;
        java.lang.Object $r6;
        javax.xml.bind.DataBindingException $r8, $r10;
        javax.xml.bind.JAXBContext $r1;
        java.io.InputStream r3;

        r3 := @parameter0: java.io.InputStream;

        r0 := @parameter1: java.lang.Class;

     label1:
        $r1 = staticinvoke <javax.xml.bind.JAXB: javax.xml.bind.JAXBContext getContext(java.lang.Class)>(r0);

        $r2 = virtualinvoke $r1.<javax.xml.bind.JAXBContext: javax.xml.bind.Unmarshaller createUnmarshaller()>();

        $r4 = staticinvoke <javax.xml.bind.JAXB: javax.xml.transform.Source toSource(java.lang.Object)>(r3);

        $r5 = interfaceinvoke $r2.<javax.xml.bind.Unmarshaller: javax.xml.bind.JAXBElement unmarshal(javax.xml.transform.Source,java.lang.Class)>($r4, r0);

        $r6 = virtualinvoke $r5.<javax.xml.bind.JAXBElement: java.lang.Object getValue()>();

     label2:
        return $r6;

     label3:
        $r9 := @caughtexception;

        $r10 = new javax.xml.bind.DataBindingException;

        specialinvoke $r10.<javax.xml.bind.DataBindingException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

     label4:
        $r7 := @caughtexception;

        $r8 = new javax.xml.bind.DataBindingException;

        specialinvoke $r8.<javax.xml.bind.DataBindingException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

        catch javax.xml.bind.JAXBException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
    }

    public static java.lang.Object unmarshal(java.io.Reader, java.lang.Class)
    {
        javax.xml.bind.Unmarshaller $r2;
        javax.xml.bind.JAXBElement $r5;
        java.io.IOException $r7;
        java.io.Reader r3;
        javax.xml.transform.Source $r4;
        javax.xml.bind.JAXBException $r9;
        java.lang.Class r0;
        java.lang.Object $r6;
        javax.xml.bind.DataBindingException $r8, $r10;
        javax.xml.bind.JAXBContext $r1;

        r3 := @parameter0: java.io.Reader;

        r0 := @parameter1: java.lang.Class;

     label1:
        $r1 = staticinvoke <javax.xml.bind.JAXB: javax.xml.bind.JAXBContext getContext(java.lang.Class)>(r0);

        $r2 = virtualinvoke $r1.<javax.xml.bind.JAXBContext: javax.xml.bind.Unmarshaller createUnmarshaller()>();

        $r4 = staticinvoke <javax.xml.bind.JAXB: javax.xml.transform.Source toSource(java.lang.Object)>(r3);

        $r5 = interfaceinvoke $r2.<javax.xml.bind.Unmarshaller: javax.xml.bind.JAXBElement unmarshal(javax.xml.transform.Source,java.lang.Class)>($r4, r0);

        $r6 = virtualinvoke $r5.<javax.xml.bind.JAXBElement: java.lang.Object getValue()>();

     label2:
        return $r6;

     label3:
        $r9 := @caughtexception;

        $r10 = new javax.xml.bind.DataBindingException;

        specialinvoke $r10.<javax.xml.bind.DataBindingException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

     label4:
        $r7 := @caughtexception;

        $r8 = new javax.xml.bind.DataBindingException;

        specialinvoke $r8.<javax.xml.bind.DataBindingException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

        catch javax.xml.bind.JAXBException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
    }

    public static java.lang.Object unmarshal(javax.xml.transform.Source, java.lang.Class)
    {
        javax.xml.bind.Unmarshaller $r2;
        javax.xml.bind.JAXBElement $r5;
        java.io.IOException $r7;
        javax.xml.transform.Source r3, $r4;
        javax.xml.bind.JAXBException $r9;
        java.lang.Class r0;
        java.lang.Object $r6;
        javax.xml.bind.DataBindingException $r8, $r10;
        javax.xml.bind.JAXBContext $r1;

        r3 := @parameter0: javax.xml.transform.Source;

        r0 := @parameter1: java.lang.Class;

     label1:
        $r1 = staticinvoke <javax.xml.bind.JAXB: javax.xml.bind.JAXBContext getContext(java.lang.Class)>(r0);

        $r2 = virtualinvoke $r1.<javax.xml.bind.JAXBContext: javax.xml.bind.Unmarshaller createUnmarshaller()>();

        $r4 = staticinvoke <javax.xml.bind.JAXB: javax.xml.transform.Source toSource(java.lang.Object)>(r3);

        $r5 = interfaceinvoke $r2.<javax.xml.bind.Unmarshaller: javax.xml.bind.JAXBElement unmarshal(javax.xml.transform.Source,java.lang.Class)>($r4, r0);

        $r6 = virtualinvoke $r5.<javax.xml.bind.JAXBElement: java.lang.Object getValue()>();

     label2:
        return $r6;

     label3:
        $r9 := @caughtexception;

        $r10 = new javax.xml.bind.DataBindingException;

        specialinvoke $r10.<javax.xml.bind.DataBindingException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

     label4:
        $r7 := @caughtexception;

        $r8 = new javax.xml.bind.DataBindingException;

        specialinvoke $r8.<javax.xml.bind.DataBindingException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

        catch javax.xml.bind.JAXBException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
    }

    private static javax.xml.transform.Source toSource(java.lang.Object) throws java.io.IOException
    {
        java.net.URL r21;
        javax.xml.transform.stream.StreamSource $r7, $r8, $r9, $r11;
        java.net.URISyntaxException $r15;
        javax.xml.transform.Source $r6;
        java.lang.String $r5, $r10, $r13, $r17;
        java.net.URI $r12, r20;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.io.Reader r23;
        java.lang.IllegalArgumentException $r0, $r14;
        java.io.File $r16, r19;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.Class $r3;
        java.lang.Object r18;
        java.io.InputStream r22;

        r18 := @parameter0: java.lang.Object;

        if r18 != null goto label01;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("no XML is given");

        throw $r14;

     label01:
        $z0 = r18 instanceof java.lang.String;

        if $z0 == 0 goto label05;

     label02:
        $r12 = new java.net.URI;

        $r13 = (java.lang.String) r18;

        specialinvoke $r12.<java.net.URI: void <init>(java.lang.String)>($r13);

        r18 = $r12;

     label03:
        goto label05;

     label04:
        $r15 := @caughtexception;

        $r16 = new java.io.File;

        $r17 = (java.lang.String) r18;

        specialinvoke $r16.<java.io.File: void <init>(java.lang.String)>($r17);

        r18 = $r16;

     label05:
        $z6 = r18 instanceof java.io.File;

        if $z6 == 0 goto label06;

        r19 = (java.io.File) r18;

        $r11 = new javax.xml.transform.stream.StreamSource;

        specialinvoke $r11.<javax.xml.transform.stream.StreamSource: void <init>(java.io.File)>(r19);

        return $r11;

     label06:
        $z1 = r18 instanceof java.net.URI;

        if $z1 == 0 goto label07;

        r20 = (java.net.URI) r18;

        r18 = virtualinvoke r20.<java.net.URI: java.net.URL toURL()>();

     label07:
        $z2 = r18 instanceof java.net.URL;

        if $z2 == 0 goto label08;

        r21 = (java.net.URL) r18;

        $r9 = new javax.xml.transform.stream.StreamSource;

        $r10 = virtualinvoke r21.<java.net.URL: java.lang.String toExternalForm()>();

        specialinvoke $r9.<javax.xml.transform.stream.StreamSource: void <init>(java.lang.String)>($r10);

        return $r9;

     label08:
        $z3 = r18 instanceof java.io.InputStream;

        if $z3 == 0 goto label09;

        r22 = (java.io.InputStream) r18;

        $r8 = new javax.xml.transform.stream.StreamSource;

        specialinvoke $r8.<javax.xml.transform.stream.StreamSource: void <init>(java.io.InputStream)>(r22);

        return $r8;

     label09:
        $z4 = r18 instanceof java.io.Reader;

        if $z4 == 0 goto label10;

        r23 = (java.io.Reader) r18;

        $r7 = new javax.xml.transform.stream.StreamSource;

        specialinvoke $r7.<javax.xml.transform.stream.StreamSource: void <init>(java.io.Reader)>(r23);

        return $r7;

     label10:
        $z5 = r18 instanceof javax.xml.transform.Source;

        if $z5 == 0 goto label11;

        $r6 = (javax.xml.transform.Source) r18;

        return $r6;

     label11:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("I don\'t understand how to handle ");

        $r3 = virtualinvoke r18.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r0;

        catch java.net.URISyntaxException from label02 to label03 with label04;
    }

    public static void marshal(java.lang.Object, java.io.File)
    {
        java.lang.Object r0;
        java.io.File r1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.io.File;

        staticinvoke <javax.xml.bind.JAXB: void _marshal(java.lang.Object,java.lang.Object)>(r0, r1);

        return;
    }

    public static void marshal(java.lang.Object, java.net.URL)
    {
        java.lang.Object r0;
        java.net.URL r1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.net.URL;

        staticinvoke <javax.xml.bind.JAXB: void _marshal(java.lang.Object,java.lang.Object)>(r0, r1);

        return;
    }

    public static void marshal(java.lang.Object, java.net.URI)
    {
        java.lang.Object r0;
        java.net.URI r1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.net.URI;

        staticinvoke <javax.xml.bind.JAXB: void _marshal(java.lang.Object,java.lang.Object)>(r0, r1);

        return;
    }

    public static void marshal(java.lang.Object, java.lang.String)
    {
        java.lang.Object r0;
        java.lang.String r1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        staticinvoke <javax.xml.bind.JAXB: void _marshal(java.lang.Object,java.lang.Object)>(r0, r1);

        return;
    }

    public static void marshal(java.lang.Object, java.io.OutputStream)
    {
        java.io.OutputStream r1;
        java.lang.Object r0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.io.OutputStream;

        staticinvoke <javax.xml.bind.JAXB: void _marshal(java.lang.Object,java.lang.Object)>(r0, r1);

        return;
    }

    public static void marshal(java.lang.Object, java.io.Writer)
    {
        java.io.Writer r1;
        java.lang.Object r0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.io.Writer;

        staticinvoke <javax.xml.bind.JAXB: void _marshal(java.lang.Object,java.lang.Object)>(r0, r1);

        return;
    }

    public static void marshal(java.lang.Object, javax.xml.transform.Result)
    {
        java.lang.Object r0;
        javax.xml.transform.Result r1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: javax.xml.transform.Result;

        staticinvoke <javax.xml.bind.JAXB: void _marshal(java.lang.Object,java.lang.Object)>(r0, r1);

        return;
    }

    private static void _marshal(java.lang.Object, java.lang.Object)
    {
        javax.xml.bind.Marshaller $r15;
        javax.xml.transform.Result $r17;
        java.lang.Boolean $r16;
        javax.xml.bind.DataBindingException $r10, $r12;
        java.lang.String $r6;
        javax.xml.bind.JAXBContext r14;
        boolean $z0;
        javax.xml.bind.JAXBElement $r4, $r7;
        java.io.IOException $r9;
        javax.xml.bind.'annotation'.XmlRootElement r2;
        javax.xml.bind.JAXBException $r11;
        java.lang.'annotation'.Annotation $r1;
        java.lang.Class $r0, $r8;
        java.lang.Object r3, r13;
        javax.xml.namespace.QName $r5;

        r13 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

     label1:
        $z0 = r13 instanceof javax.xml.bind.JAXBElement;

        if $z0 == 0 goto label2;

        $r7 = (javax.xml.bind.JAXBElement) r13;

        $r8 = virtualinvoke $r7.<javax.xml.bind.JAXBElement: java.lang.Class getDeclaredType()>();

        r14 = staticinvoke <javax.xml.bind.JAXB: javax.xml.bind.JAXBContext getContext(java.lang.Class)>($r8);

        goto label3;

     label2:
        $r0 = virtualinvoke r13.<java.lang.Object: java.lang.Class getClass()>();

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Ljavax/xml/bind/annotation/XmlRootElement;");

        r2 = (javax.xml.bind.'annotation'.XmlRootElement) $r1;

        r14 = staticinvoke <javax.xml.bind.JAXB: javax.xml.bind.JAXBContext getContext(java.lang.Class)>($r0);

        if r2 != null goto label3;

        $r4 = new javax.xml.bind.JAXBElement;

        $r5 = new javax.xml.namespace.QName;

        $r6 = staticinvoke <javax.xml.bind.JAXB: java.lang.String inferName(java.lang.Class)>($r0);

        specialinvoke $r5.<javax.xml.namespace.QName: void <init>(java.lang.String)>($r6);

        specialinvoke $r4.<javax.xml.bind.JAXBElement: void <init>(javax.xml.namespace.QName,java.lang.Class,java.lang.Object)>($r5, $r0, r13);

        r13 = $r4;

     label3:
        $r15 = virtualinvoke r14.<javax.xml.bind.JAXBContext: javax.xml.bind.Marshaller createMarshaller()>();

        $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke $r15.<javax.xml.bind.Marshaller: void setProperty(java.lang.String,java.lang.Object)>("jaxb.formatted.output", $r16);

        $r17 = staticinvoke <javax.xml.bind.JAXB: javax.xml.transform.Result toResult(java.lang.Object)>(r3);

        interfaceinvoke $r15.<javax.xml.bind.Marshaller: void marshal(java.lang.Object,javax.xml.transform.Result)>(r13, $r17);

     label4:
        goto label7;

     label5:
        $r11 := @caughtexception;

        $r12 = new javax.xml.bind.DataBindingException;

        specialinvoke $r12.<javax.xml.bind.DataBindingException: void <init>(java.lang.Throwable)>($r11);

        throw $r12;

     label6:
        $r9 := @caughtexception;

        $r10 = new javax.xml.bind.DataBindingException;

        specialinvoke $r10.<javax.xml.bind.DataBindingException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

     label7:
        return;

        catch javax.xml.bind.JAXBException from label1 to label4 with label5;
        catch java.io.IOException from label1 to label4 with label6;
    }

    private static java.lang.String inferName(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.String $r1, $r2;

        r0 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.String getSimpleName()>();

        $r2 = staticinvoke <java.beans.Introspector: java.lang.String decapitalize(java.lang.String)>($r1);

        return $r2;
    }

    private static javax.xml.transform.Result toResult(java.lang.Object) throws java.io.IOException
    {
        java.net.URL r22;
        javax.xml.transform.stream.StreamResult $r7, $r8, $r10, $r12;
        java.net.URISyntaxException $r16;
        javax.xml.transform.Result $r6;
        java.net.URI $r13, r21;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.io.Writer r24;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.net.URLConnection $r9;
        java.lang.String $r5, $r14, $r18;
        java.io.OutputStream $r11, r23;
        java.lang.IllegalArgumentException $r0, $r15;
        java.io.File $r17, r20;
        java.lang.Class $r3;
        java.lang.Object r19;

        r19 := @parameter0: java.lang.Object;

        if r19 != null goto label01;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("no XML is given");

        throw $r15;

     label01:
        $z0 = r19 instanceof java.lang.String;

        if $z0 == 0 goto label05;

     label02:
        $r13 = new java.net.URI;

        $r14 = (java.lang.String) r19;

        specialinvoke $r13.<java.net.URI: void <init>(java.lang.String)>($r14);

        r19 = $r13;

     label03:
        goto label05;

     label04:
        $r16 := @caughtexception;

        $r17 = new java.io.File;

        $r18 = (java.lang.String) r19;

        specialinvoke $r17.<java.io.File: void <init>(java.lang.String)>($r18);

        r19 = $r17;

     label05:
        $z6 = r19 instanceof java.io.File;

        if $z6 == 0 goto label06;

        r20 = (java.io.File) r19;

        $r12 = new javax.xml.transform.stream.StreamResult;

        specialinvoke $r12.<javax.xml.transform.stream.StreamResult: void <init>(java.io.File)>(r20);

        return $r12;

     label06:
        $z1 = r19 instanceof java.net.URI;

        if $z1 == 0 goto label07;

        r21 = (java.net.URI) r19;

        r19 = virtualinvoke r21.<java.net.URI: java.net.URL toURL()>();

     label07:
        $z2 = r19 instanceof java.net.URL;

        if $z2 == 0 goto label08;

        r22 = (java.net.URL) r19;

        $r9 = virtualinvoke r22.<java.net.URL: java.net.URLConnection openConnection()>();

        virtualinvoke $r9.<java.net.URLConnection: void setDoOutput(boolean)>(1);

        virtualinvoke $r9.<java.net.URLConnection: void setDoInput(boolean)>(0);

        virtualinvoke $r9.<java.net.URLConnection: void connect()>();

        $r10 = new javax.xml.transform.stream.StreamResult;

        $r11 = virtualinvoke $r9.<java.net.URLConnection: java.io.OutputStream getOutputStream()>();

        specialinvoke $r10.<javax.xml.transform.stream.StreamResult: void <init>(java.io.OutputStream)>($r11);

        return $r10;

     label08:
        $z3 = r19 instanceof java.io.OutputStream;

        if $z3 == 0 goto label09;

        r23 = (java.io.OutputStream) r19;

        $r8 = new javax.xml.transform.stream.StreamResult;

        specialinvoke $r8.<javax.xml.transform.stream.StreamResult: void <init>(java.io.OutputStream)>(r23);

        return $r8;

     label09:
        $z4 = r19 instanceof java.io.Writer;

        if $z4 == 0 goto label10;

        r24 = (java.io.Writer) r19;

        $r7 = new javax.xml.transform.stream.StreamResult;

        specialinvoke $r7.<javax.xml.transform.stream.StreamResult: void <init>(java.io.Writer)>(r24);

        return $r7;

     label10:
        $z5 = r19 instanceof javax.xml.transform.Result;

        if $z5 == 0 goto label11;

        $r6 = (javax.xml.transform.Result) r19;

        return $r6;

     label11:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("I don\'t understand how to handle ");

        $r3 = virtualinvoke r19.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r0;

        catch java.net.URISyntaxException from label02 to label03 with label04;
    }
}
