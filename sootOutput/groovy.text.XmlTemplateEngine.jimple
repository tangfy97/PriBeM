public class groovy.text.XmlTemplateEngine extends groovy.text.TemplateEngine
{
    private static int counter;
    public static final java.lang.String DEFAULT_INDENTATION;
    private final groovy.lang.GroovyShell groovyShell;
    private final groovy.util.XmlParser xmlParser;
    private java.lang.String indentation;

    public void <init>() throws org.xml.sax.SAXException, javax.xml.parsers.ParserConfigurationException
    {
        groovy.text.XmlTemplateEngine r0;

        r0 := @this: groovy.text.XmlTemplateEngine;

        specialinvoke r0.<groovy.text.XmlTemplateEngine: void <init>(java.lang.String,boolean)>("  ", 0);

        return;
    }

    public void <init>(java.lang.String, boolean) throws org.xml.sax.SAXException, javax.xml.parsers.ParserConfigurationException
    {
        java.lang.String r3;
        groovy.util.XmlParser $r1;
        groovy.text.XmlTemplateEngine r0;
        groovy.lang.GroovyShell $r2;
        boolean z0;

        r0 := @this: groovy.text.XmlTemplateEngine;

        r3 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r1 = new groovy.util.XmlParser;

        specialinvoke $r1.<groovy.util.XmlParser: void <init>(boolean,boolean)>(z0, 1);

        $r2 = new groovy.lang.GroovyShell;

        specialinvoke $r2.<groovy.lang.GroovyShell: void <init>()>();

        specialinvoke r0.<groovy.text.XmlTemplateEngine: void <init>(groovy.util.XmlParser,groovy.lang.GroovyShell)>($r1, $r2);

        virtualinvoke r0.<groovy.text.XmlTemplateEngine: void setIndentation(java.lang.String)>(r3);

        return;
    }

    public void <init>(groovy.util.XmlParser, java.lang.ClassLoader)
    {
        java.lang.ClassLoader r3;
        groovy.util.XmlParser r1;
        groovy.text.XmlTemplateEngine r0;
        groovy.lang.GroovyShell $r2;

        r0 := @this: groovy.text.XmlTemplateEngine;

        r1 := @parameter0: groovy.util.XmlParser;

        r3 := @parameter1: java.lang.ClassLoader;

        $r2 = new groovy.lang.GroovyShell;

        specialinvoke $r2.<groovy.lang.GroovyShell: void <init>(java.lang.ClassLoader)>(r3);

        specialinvoke r0.<groovy.text.XmlTemplateEngine: void <init>(groovy.util.XmlParser,groovy.lang.GroovyShell)>(r1, $r2);

        return;
    }

    public void <init>(groovy.util.XmlParser, groovy.lang.GroovyShell)
    {
        groovy.util.XmlParser r2;
        groovy.text.XmlTemplateEngine r0;
        groovy.lang.GroovyShell r1;

        r0 := @this: groovy.text.XmlTemplateEngine;

        r2 := @parameter0: groovy.util.XmlParser;

        r1 := @parameter1: groovy.lang.GroovyShell;

        specialinvoke r0.<groovy.text.TemplateEngine: void <init>()>();

        r0.<groovy.text.XmlTemplateEngine: groovy.lang.GroovyShell groovyShell> = r1;

        r0.<groovy.text.XmlTemplateEngine: groovy.util.XmlParser xmlParser> = r2;

        virtualinvoke r0.<groovy.text.XmlTemplateEngine: void setIndentation(java.lang.String)>("  ");

        return;
    }

    public groovy.text.Template createTemplate(java.io.Reader) throws org.codehaus.groovy.control.CompilationFailedException, java.lang.ClassNotFoundException, java.io.IOException
    {
        groovy.text.XmlTemplateEngine$XmlTemplate $r16;
        groovy.lang.Script $r15;
        java.lang.StringBuffer $r10, $r11, $r12, $r13, $r20, $r21, $r23;
        int $i0, $i1;
        java.lang.String $r7, $r9, $r14, $r22, $r24;
        groovy.text.XmlTemplateEngine$GspPrinter $r5;
        java.io.PrintWriter $r6;
        groovy.lang.GroovyRuntimeException $r19;
        java.io.StringWriter $r4;
        java.io.IOException $r17;
        java.io.Reader r1;
        java.lang.RuntimeException $r26;
        groovy.util.Node $r3;
        groovy.util.XmlParser $r2;
        groovy.text.XmlTemplateEngine r0;
        groovy.lang.GroovyShell $r8;
        java.lang.Exception $r18;
        org.xml.sax.SAXException $r25;

        r0 := @this: groovy.text.XmlTemplateEngine;

        r1 := @parameter0: java.io.Reader;

     label1:
        $r2 = r0.<groovy.text.XmlTemplateEngine: groovy.util.XmlParser xmlParser>;

        $r3 = virtualinvoke $r2.<groovy.util.XmlParser: groovy.util.Node parse(java.io.Reader)>(r1);

     label2:
        goto label4;

     label3:
        $r25 := @caughtexception;

        $r26 = new java.lang.RuntimeException;

        specialinvoke $r26.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Parsing XML source failed.", $r25);

        throw $r26;

     label4:
        if $r3 != null goto label5;

        $r17 = new java.io.IOException;

        specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>("Parsing XML source failed: root node is null.");

        throw $r17;

     label5:
        $r4 = new java.io.StringWriter;

        specialinvoke $r4.<java.io.StringWriter: void <init>(int)>(1024);

        virtualinvoke $r4.<java.io.StringWriter: void write(java.lang.String)>("/* Generated by XmlTemplateEngine */\n");

        $r5 = new groovy.text.XmlTemplateEngine$GspPrinter;

        $r6 = new java.io.PrintWriter;

        specialinvoke $r6.<java.io.PrintWriter: void <init>(java.io.Writer)>($r4);

        $r7 = r0.<groovy.text.XmlTemplateEngine: java.lang.String indentation>;

        specialinvoke $r5.<groovy.text.XmlTemplateEngine$GspPrinter: void <init>(java.io.PrintWriter,java.lang.String)>($r6, $r7);

        virtualinvoke $r5.<groovy.text.XmlTemplateEngine$GspPrinter: void print(groovy.util.Node)>($r3);

     label6:
        $r8 = r0.<groovy.text.XmlTemplateEngine: groovy.lang.GroovyShell groovyShell>;

        $r9 = virtualinvoke $r4.<java.io.StringWriter: java.lang.String toString()>();

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("XmlTemplateScript");

        $i0 = <groovy.text.XmlTemplateEngine: int counter>;

        $i1 = $i0 + 1;

        <groovy.text.XmlTemplateEngine: int counter> = $i1;

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".groovy");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        $r15 = virtualinvoke $r8.<groovy.lang.GroovyShell: groovy.lang.Script parse(java.lang.String,java.lang.String)>($r9, $r14);

     label7:
        goto label9;

     label8:
        $r18 := @caughtexception;

        $r19 = new groovy.lang.GroovyRuntimeException;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Failed to parse template script (your template may contain an error or be trying to use expressions not currently supported): ");

        $r22 = virtualinvoke $r18.<java.lang.Exception: java.lang.String getMessage()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r19.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String)>($r24);

        throw $r19;

     label9:
        $r16 = new groovy.text.XmlTemplateEngine$XmlTemplate;

        specialinvoke $r16.<groovy.text.XmlTemplateEngine$XmlTemplate: void <init>(groovy.lang.Script)>($r15);

        return $r16;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    public java.lang.String getIndentation()
    {
        java.lang.String $r1;
        groovy.text.XmlTemplateEngine r0;

        r0 := @this: groovy.text.XmlTemplateEngine;

        $r1 = r0.<groovy.text.XmlTemplateEngine: java.lang.String indentation>;

        return $r1;
    }

    public void setIndentation(java.lang.String)
    {
        java.lang.String r1;
        groovy.text.XmlTemplateEngine r0;

        r0 := @this: groovy.text.XmlTemplateEngine;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        r1 = "  ";

     label1:
        r0.<groovy.text.XmlTemplateEngine: java.lang.String indentation> = r1;

        return;
    }

    public java.lang.String toString()
    {
        groovy.text.XmlTemplateEngine r0;

        r0 := @this: groovy.text.XmlTemplateEngine;

        return "XmlTemplateEngine";
    }

    static void <clinit>()
    {
        <groovy.text.XmlTemplateEngine: java.lang.String DEFAULT_INDENTATION> = "  ";

        <groovy.text.XmlTemplateEngine: int counter> = 1;

        return;
    }
}
