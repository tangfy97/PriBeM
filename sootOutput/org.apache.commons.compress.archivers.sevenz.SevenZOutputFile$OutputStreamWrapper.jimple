class org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$OutputStreamWrapper extends java.io.OutputStream
{
    final org.apache.commons.compress.archivers.sevenz.SevenZOutputFile this$0;

    private void <init>(org.apache.commons.compress.archivers.sevenz.SevenZOutputFile)
    {
        org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$OutputStreamWrapper r0;
        org.apache.commons.compress.archivers.sevenz.SevenZOutputFile r1;

        r0 := @this: org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$OutputStreamWrapper;

        r1 := @parameter0: org.apache.commons.compress.archivers.sevenz.SevenZOutputFile;

        r0.<org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$OutputStreamWrapper: org.apache.commons.compress.archivers.sevenz.SevenZOutputFile this$0> = r1;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        return;
    }

    public void write(int) throws java.io.IOException
    {
        java.io.RandomAccessFile $r2;
        org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$OutputStreamWrapper r0;
        org.apache.commons.compress.archivers.sevenz.SevenZOutputFile $r1, $r3, $r5;
        int i0;
        java.util.zip.CRC32 $r4;

        r0 := @this: org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$OutputStreamWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$OutputStreamWrapper: org.apache.commons.compress.archivers.sevenz.SevenZOutputFile this$0>;

        $r2 = staticinvoke <org.apache.commons.compress.archivers.sevenz.SevenZOutputFile: java.io.RandomAccessFile access$200(org.apache.commons.compress.archivers.sevenz.SevenZOutputFile)>($r1);

        virtualinvoke $r2.<java.io.RandomAccessFile: void write(int)>(i0);

        $r3 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$OutputStreamWrapper: org.apache.commons.compress.archivers.sevenz.SevenZOutputFile this$0>;

        $r4 = staticinvoke <org.apache.commons.compress.archivers.sevenz.SevenZOutputFile: java.util.zip.CRC32 access$300(org.apache.commons.compress.archivers.sevenz.SevenZOutputFile)>($r3);

        virtualinvoke $r4.<java.util.zip.CRC32: void update(int)>(i0);

        $r5 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$OutputStreamWrapper: org.apache.commons.compress.archivers.sevenz.SevenZOutputFile this$0>;

        staticinvoke <org.apache.commons.compress.archivers.sevenz.SevenZOutputFile: long access$408(org.apache.commons.compress.archivers.sevenz.SevenZOutputFile)>($r5);

        return;
    }

    public void write(byte[]) throws java.io.IOException
    {
        int $i0;
        byte[] r1;
        org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$OutputStreamWrapper r0;

        r0 := @this: org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$OutputStreamWrapper;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$OutputStreamWrapper: void write(byte[],int,int)>(r1, 0, $i0);

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        java.io.RandomAccessFile $r2;
        byte[] r3;
        org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$OutputStreamWrapper r0;
        long $l2;
        org.apache.commons.compress.archivers.sevenz.SevenZOutputFile $r1, $r4, $r6;
        int i0, i1;
        java.util.zip.CRC32 $r5;

        r0 := @this: org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$OutputStreamWrapper;

        r3 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$OutputStreamWrapper: org.apache.commons.compress.archivers.sevenz.SevenZOutputFile this$0>;

        $r2 = staticinvoke <org.apache.commons.compress.archivers.sevenz.SevenZOutputFile: java.io.RandomAccessFile access$200(org.apache.commons.compress.archivers.sevenz.SevenZOutputFile)>($r1);

        virtualinvoke $r2.<java.io.RandomAccessFile: void write(byte[],int,int)>(r3, i0, i1);

        $r4 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$OutputStreamWrapper: org.apache.commons.compress.archivers.sevenz.SevenZOutputFile this$0>;

        $r5 = staticinvoke <org.apache.commons.compress.archivers.sevenz.SevenZOutputFile: java.util.zip.CRC32 access$300(org.apache.commons.compress.archivers.sevenz.SevenZOutputFile)>($r4);

        virtualinvoke $r5.<java.util.zip.CRC32: void update(byte[],int,int)>(r3, i0, i1);

        $r6 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$OutputStreamWrapper: org.apache.commons.compress.archivers.sevenz.SevenZOutputFile this$0>;

        $l2 = (long) i1;

        staticinvoke <org.apache.commons.compress.archivers.sevenz.SevenZOutputFile: long access$414(org.apache.commons.compress.archivers.sevenz.SevenZOutputFile,long)>($r6, $l2);

        return;
    }

    public void flush() throws java.io.IOException
    {
        org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$OutputStreamWrapper r0;

        r0 := @this: org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$OutputStreamWrapper;

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$OutputStreamWrapper r0;

        r0 := @this: org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$OutputStreamWrapper;

        return;
    }

    void <init>(org.apache.commons.compress.archivers.sevenz.SevenZOutputFile, org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$1)
    {
        org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$1 r2;
        org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$OutputStreamWrapper r0;
        org.apache.commons.compress.archivers.sevenz.SevenZOutputFile r1;

        r0 := @this: org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$OutputStreamWrapper;

        r1 := @parameter0: org.apache.commons.compress.archivers.sevenz.SevenZOutputFile;

        r2 := @parameter1: org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$1;

        specialinvoke r0.<org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$OutputStreamWrapper: void <init>(org.apache.commons.compress.archivers.sevenz.SevenZOutputFile)>(r1);

        return;
    }
}
