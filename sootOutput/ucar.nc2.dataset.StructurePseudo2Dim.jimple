public class ucar.nc2.dataset.StructurePseudo2Dim extends ucar.nc2.dataset.StructurePseudoDS
{
    private static org.slf4j.Logger log;
    private java.util.List orgVariables;
    private boolean debugRecord;

    public void <init>(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.Group, java.lang.String, java.util.List, ucar.nc2.Dimension, ucar.nc2.Dimension)
    {
        java.util.Set $r25;
        ucar.nc2.Group r55;
        java.lang.StringBuilder $r28, $r29, $r31, $r32, $r33, $r36, $r37, $r39, $r40, $r41, $r43, $r45, $r46;
        java.util.ArrayList $r3, $r5, $r22, $r49;
        java.lang.String r2, $r14, $r16, $r17, $r30, $r34, $r38, $r42, $r47, $r54, r58;
        ucar.nc2.Dimension r6, r7, $r11, $r12, $r52, $r53;
        ucar.nc2.dataset.NetcdfDataset r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        ucar.nc2.dataset.VariableDS $r13;
        ucar.ma2.DataType $r4, $r15, $r18;
        java.util.List $r20, $r21, $r23, $r24, $r26, $r48, r56;
        ucar.nc2.dataset.StructurePseudo2Dim r0;
        int $i0, $i1, $i2;
        ucar.nc2.Variable $r10, r57;
        org.slf4j.Logger $r44;
        java.util.Iterator $r8, $r50;
        java.lang.IllegalArgumentException $r27, $r35;
        java.lang.Object $r9, $r19, $r51;

        r0 := @this: ucar.nc2.dataset.StructurePseudo2Dim;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r55 := @parameter1: ucar.nc2.Group;

        r2 := @parameter2: java.lang.String;

        r56 := @parameter3: java.util.List;

        r6 := @parameter4: ucar.nc2.Dimension;

        r7 := @parameter5: ucar.nc2.Dimension;

        specialinvoke r0.<ucar.nc2.dataset.StructurePseudoDS: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String)>(r1, r55, r2);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.dataset.StructurePseudo2Dim: java.util.List orgVariables> = $r3;

        r0.<ucar.nc2.dataset.StructurePseudo2Dim: boolean debugRecord> = 0;

        $r4 = <ucar.ma2.DataType: ucar.ma2.DataType STRUCTURE>;

        r0.<ucar.nc2.dataset.StructurePseudo2Dim: ucar.ma2.DataType dataType> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>(2);

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);

        virtualinvoke r0.<ucar.nc2.dataset.StructurePseudo2Dim: void setDimensions(java.util.List)>($r5);

        if r55 != null goto label01;

        r55 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

     label01:
        if r56 != null goto label05;

        $r48 = virtualinvoke r55.<ucar.nc2.Group: java.util.List getVariables()>();

        $r49 = new java.util.ArrayList;

        $i1 = interfaceinvoke $r48.<java.util.List: int size()>();

        specialinvoke $r49.<java.util.ArrayList: void <init>(int)>($i1);

        r56 = $r49;

        $r50 = interfaceinvoke $r48.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z4 = interfaceinvoke $r50.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label05;

        $r51 = interfaceinvoke $r50.<java.util.Iterator: java.lang.Object next()>();

        r57 = (ucar.nc2.Variable) $r51;

        $i2 = virtualinvoke r57.<ucar.nc2.Variable: int getRank()>();

        if $i2 >= 2 goto label03;

        goto label02;

     label03:
        $r52 = virtualinvoke r57.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $z2 = virtualinvoke r6.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r52);

        if $z2 == 0 goto label04;

        $r53 = virtualinvoke r57.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(1);

        $z3 = virtualinvoke r7.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r53);

        if $z3 == 0 goto label04;

        $r54 = virtualinvoke r57.<ucar.nc2.Variable: java.lang.String getShortName()>();

        interfaceinvoke $r49.<java.util.List: boolean add(java.lang.Object)>($r54);

     label04:
        goto label02;

     label05:
        $r8 = interfaceinvoke r56.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z5 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label10;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r58 = (java.lang.String) $r9;

        $r10 = virtualinvoke r55.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>(r58);

        if $r10 != null goto label07;

        $r44 = <ucar.nc2.dataset.StructurePseudo2Dim: org.slf4j.Logger log>;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("StructurePseudo2Dim cannot find variable ");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r58);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r44.<org.slf4j.Logger: void warn(java.lang.String)>($r47);

        goto label06;

     label07:
        $r11 = virtualinvoke $r10.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $z0 = virtualinvoke r6.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r11);

        if $z0 != 0 goto label08;

        $r35 = new java.lang.IllegalArgumentException;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Variable ");

        $r38 = virtualinvoke $r10.<ucar.nc2.Variable: java.lang.String getNameAndDimensions()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must have outermost dimension=");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r35.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r42);

        throw $r35;

     label08:
        $r12 = virtualinvoke $r10.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(1);

        $z1 = virtualinvoke r7.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r12);

        if $z1 != 0 goto label09;

        $r27 = new java.lang.IllegalArgumentException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Variable ");

        $r30 = virtualinvoke $r10.<ucar.nc2.Variable: java.lang.String getNameAndDimensions()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must have 2nd dimension=");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r34);

        throw $r27;

     label09:
        $r13 = new ucar.nc2.dataset.VariableDS;

        $r14 = virtualinvoke $r10.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r15 = virtualinvoke $r10.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r16 = virtualinvoke $r10.<ucar.nc2.Variable: java.lang.String getUnitsString()>();

        $r17 = virtualinvoke $r10.<ucar.nc2.Variable: java.lang.String getDescription()>();

        specialinvoke $r13.<ucar.nc2.dataset.VariableDS: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r1, r55, r0, $r14, $r15, null, $r16, $r17);

        $r18 = virtualinvoke $r10.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        virtualinvoke $r13.<ucar.nc2.dataset.VariableDS: void setDataType(ucar.ma2.DataType)>($r18);

        $r19 = virtualinvoke $r10.<ucar.nc2.Variable: java.lang.Object getSPobject()>();

        virtualinvoke $r13.<ucar.nc2.dataset.VariableDS: void setSPobject(java.lang.Object)>($r19);

        $r20 = virtualinvoke $r13.<ucar.nc2.dataset.VariableDS: java.util.List getAttributes()>();

        $r21 = virtualinvoke $r10.<ucar.nc2.Variable: java.util.List getAttributes()>();

        interfaceinvoke $r20.<java.util.List: boolean addAll(java.util.Collection)>($r21);

        $r22 = new java.util.ArrayList;

        $r23 = virtualinvoke $r10.<ucar.nc2.Variable: java.util.List getDimensions()>();

        specialinvoke $r22.<java.util.ArrayList: void <init>(java.util.Collection)>($r23);

        $i0 = interfaceinvoke $r22.<java.util.List: int size()>();

        $r24 = interfaceinvoke $r22.<java.util.List: java.util.List subList(int,int)>(2, $i0);

        virtualinvoke $r13.<ucar.nc2.dataset.VariableDS: void setDimensions(java.util.List)>($r24);

        $r25 = <ucar.nc2.dataset.StructurePseudo2Dim: java.util.Set enhanceScaleMissing>;

        virtualinvoke $r13.<ucar.nc2.dataset.VariableDS: void enhance(java.util.Set)>($r25);

        virtualinvoke r0.<ucar.nc2.dataset.StructurePseudo2Dim: ucar.nc2.Variable addMemberVariable(ucar.nc2.Variable)>($r13);

        $r26 = r0.<ucar.nc2.dataset.StructurePseudo2Dim: java.util.List orgVariables>;

        interfaceinvoke $r26.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label06;

     label10:
        virtualinvoke r0.<ucar.nc2.dataset.StructurePseudo2Dim: void calcElementSize()>();

        return;
    }

    public ucar.nc2.Structure select(java.util.List)
    {
        ucar.nc2.dataset.StructurePseudo2Dim $r0, r1;
        ucar.nc2.Group $r4;
        java.util.List r6;
        ucar.nc2.Dimension $r7, $r8;
        ucar.nc2.NetcdfFile $r2;
        java.lang.String $r5;
        ucar.nc2.dataset.NetcdfDataset $r3;

        r1 := @this: ucar.nc2.dataset.StructurePseudo2Dim;

        r6 := @parameter0: java.util.List;

        $r0 = new ucar.nc2.dataset.StructurePseudo2Dim;

        $r2 = r1.<ucar.nc2.dataset.StructurePseudo2Dim: ucar.nc2.NetcdfFile ncfile>;

        $r3 = (ucar.nc2.dataset.NetcdfDataset) $r2;

        $r4 = r1.<ucar.nc2.dataset.StructurePseudo2Dim: ucar.nc2.Group group>;

        $r5 = virtualinvoke r1.<ucar.nc2.dataset.StructurePseudo2Dim: java.lang.String getShortName()>();

        $r7 = virtualinvoke r1.<ucar.nc2.dataset.StructurePseudo2Dim: ucar.nc2.Dimension getDimension(int)>(0);

        $r8 = virtualinvoke r1.<ucar.nc2.dataset.StructurePseudo2Dim: ucar.nc2.Dimension getDimension(int)>(1);

        specialinvoke $r0.<ucar.nc2.dataset.StructurePseudo2Dim: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,java.util.List,ucar.nc2.Dimension,ucar.nc2.Dimension)>($r3, $r4, $r5, r6, $r7, $r8);

        $r0.<ucar.nc2.dataset.StructurePseudo2Dim: boolean isSubset> = 1;

        return $r0;
    }

    protected ucar.ma2.Array _read(ucar.ma2.Section) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.nc2.dataset.StructurePseudo2Dim r1;
        ucar.ma2.Section r0;
        ucar.ma2.StructureMembers$Member $r17;
        java.util.ArrayList $r13;
        int[] $r2, $r8;
        ucar.nc2.Variable r12;
        java.lang.String $r3, $r16, $r24;
        boolean $z0, $z1;
        ucar.ma2.ArrayStructureMA $r7;
        java.io.PrintStream $r20;
        ucar.ma2.Range $r4, $r5, $r22;
        java.util.Iterator $r10;
        ucar.ma2.Array $r15, $r25;
        java.util.List $r9, $r14;
        ucar.ma2.InvalidRangeException $r18;
        ucar.ma2.StructureMembers $r6;
        java.lang.Object $r11;
        java.lang.StringBuilder $r19, $r21, $r23;

        r1 := @this: ucar.nc2.dataset.StructurePseudo2Dim;

        r0 := @parameter0: ucar.ma2.Section;

        if null != r0 goto label1;

        $r25 = virtualinvoke r1.<ucar.nc2.dataset.StructurePseudo2Dim: ucar.ma2.Array _read()>();

        return $r25;

     label1:
        $z0 = r1.<ucar.nc2.dataset.StructurePseudo2Dim: boolean debugRecord>;

        if $z0 == 0 goto label2;

        $r20 = <java.lang.System: java.io.PrintStream out>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" read psuedo records ");

        $r22 = virtualinvoke r0.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(0);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r24);

     label2:
        $r2 = virtualinvoke r1.<ucar.nc2.dataset.StructurePseudo2Dim: int[] getShape()>();

        $r3 = virtualinvoke r0.<ucar.ma2.Section: java.lang.String checkInRange(int[])>($r2);

        if $r3 == null goto label3;

        $r18 = new ucar.ma2.InvalidRangeException;

        specialinvoke $r18.<ucar.ma2.InvalidRangeException: void <init>(java.lang.String)>($r3);

        throw $r18;

     label3:
        $r4 = virtualinvoke r0.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(0);

        $r5 = virtualinvoke r0.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(1);

        $r6 = virtualinvoke r1.<ucar.nc2.dataset.StructurePseudo2Dim: ucar.ma2.StructureMembers makeStructureMembers()>();

        $r7 = new ucar.ma2.ArrayStructureMA;

        $r8 = virtualinvoke r0.<ucar.ma2.Section: int[] getShape()>();

        specialinvoke $r7.<ucar.ma2.ArrayStructureMA: void <init>(ucar.ma2.StructureMembers,int[])>($r6, $r8);

        $r9 = r1.<ucar.nc2.dataset.StructurePseudo2Dim: java.util.List orgVariables>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (ucar.nc2.Variable) $r11;

        $r13 = new java.util.ArrayList;

        $r14 = virtualinvoke r12.<ucar.nc2.Variable: java.util.List getRanges()>();

        specialinvoke $r13.<java.util.ArrayList: void <init>(java.util.Collection)>($r14);

        interfaceinvoke $r13.<java.util.List: java.lang.Object set(int,java.lang.Object)>(0, $r4);

        interfaceinvoke $r13.<java.util.List: java.lang.Object set(int,java.lang.Object)>(1, $r5);

        $r15 = virtualinvoke r12.<ucar.nc2.Variable: ucar.ma2.Array read(java.util.List)>($r13);

        $r16 = virtualinvoke r12.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r17 = virtualinvoke $r6.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r16);

        virtualinvoke $r17.<ucar.ma2.StructureMembers$Member: void setDataArray(ucar.ma2.Array)>($r15);

        goto label4;

     label5:
        return $r7;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lucar/nc2/dataset/StructurePseudo2Dim;");

        <ucar.nc2.dataset.StructurePseudo2Dim: org.slf4j.Logger log> = $r0;

        return;
    }
}
