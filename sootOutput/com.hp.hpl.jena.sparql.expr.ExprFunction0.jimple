public abstract class com.hp.hpl.jena.sparql.expr.ExprFunction0 extends com.hp.hpl.jena.sparql.expr.ExprFunction
{

    protected void <init>(java.lang.String)
    {
        com.hp.hpl.jena.sparql.expr.ExprFunction0 r0;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprFunction0;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprFunction0: void <init>(java.lang.String,java.lang.String)>(r1, null);

        return;
    }

    protected void <init>(java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.sparql.expr.ExprFunction0 r0;
        java.lang.String r1, r2;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprFunction0;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprFunction: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public com.hp.hpl.jena.sparql.expr.Expr getArg(int)
    {
        int i0;
        com.hp.hpl.jena.sparql.expr.ExprFunction0 r0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprFunction0;

        i0 := @parameter0: int;

        return null;
    }

    public int hashCode()
    {
        int $i0;
        com.hp.hpl.jena.sparql.expr.ExprFunction0 r0;
        com.hp.hpl.jena.sparql.expr.FunctionLabel $r1;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprFunction0;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprFunction0: com.hp.hpl.jena.sparql.expr.FunctionLabel getFunctionSymbol()>();

        $i0 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.expr.FunctionLabel: int hashCode()>();

        return $i0;
    }

    public int numArgs()
    {
        com.hp.hpl.jena.sparql.expr.ExprFunction0 r0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprFunction0;

        return 0;
    }

    public final com.hp.hpl.jena.sparql.expr.NodeValue eval(com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.sparql.function.FunctionEnv)
    {
        com.hp.hpl.jena.sparql.expr.ExprFunction0 r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding r3;
        com.hp.hpl.jena.sparql.expr.NodeValue $r2;
        com.hp.hpl.jena.sparql.function.FunctionEnv r1;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprFunction0;

        r3 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r1 := @parameter1: com.hp.hpl.jena.sparql.function.FunctionEnv;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprFunction0: com.hp.hpl.jena.sparql.expr.NodeValue eval(com.hp.hpl.jena.sparql.function.FunctionEnv)>(r1);

        return $r2;
    }

    public abstract com.hp.hpl.jena.sparql.expr.NodeValue eval(com.hp.hpl.jena.sparql.function.FunctionEnv);

    public final com.hp.hpl.jena.sparql.expr.Expr applyNodeTransform(com.hp.hpl.jena.sparql.graph.NodeTransform)
    {
        com.hp.hpl.jena.sparql.expr.ExprFunction0 r0;
        com.hp.hpl.jena.sparql.expr.Expr $r1;
        com.hp.hpl.jena.sparql.graph.NodeTransform r2;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprFunction0;

        r2 := @parameter0: com.hp.hpl.jena.sparql.graph.NodeTransform;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprFunction0: com.hp.hpl.jena.sparql.expr.Expr copy()>();

        return $r1;
    }

    public abstract com.hp.hpl.jena.sparql.expr.Expr copy();

    public final com.hp.hpl.jena.sparql.expr.Expr copySubstitute(com.hp.hpl.jena.sparql.engine.binding.Binding, boolean)
    {
        com.hp.hpl.jena.sparql.expr.ExprFunction0 r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding r2;
        com.hp.hpl.jena.sparql.expr.Expr $r1;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprFunction0;

        r2 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprFunction0: com.hp.hpl.jena.sparql.expr.Expr copy()>();

        return $r1;
    }

    public void visit(com.hp.hpl.jena.sparql.expr.ExprVisitor)
    {
        com.hp.hpl.jena.sparql.expr.ExprFunction0 r1;
        com.hp.hpl.jena.sparql.expr.ExprVisitor r0;

        r1 := @this: com.hp.hpl.jena.sparql.expr.ExprFunction0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.expr.ExprVisitor;

        interfaceinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprVisitor: void visit(com.hp.hpl.jena.sparql.expr.ExprFunction0)>(r1);

        return;
    }

    public com.hp.hpl.jena.sparql.expr.Expr apply(com.hp.hpl.jena.sparql.expr.ExprTransform)
    {
        com.hp.hpl.jena.sparql.expr.ExprFunction0 r1;
        com.hp.hpl.jena.sparql.expr.ExprTransform r0;
        com.hp.hpl.jena.sparql.expr.Expr $r2;

        r1 := @this: com.hp.hpl.jena.sparql.expr.ExprFunction0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.expr.ExprTransform;

        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprTransform: com.hp.hpl.jena.sparql.expr.Expr transform(com.hp.hpl.jena.sparql.expr.ExprFunction0)>(r1);

        return $r2;
    }
}
