public abstract class org.apache.commons.httpclient.methods.EntityEnclosingMethod extends org.apache.commons.httpclient.methods.ExpectContinueMethod
{
    public static final long CONTENT_LENGTH_AUTO;
    public static final long CONTENT_LENGTH_CHUNKED;
    private static final org.apache.commons.logging.Log LOG;
    private java.io.InputStream requestStream;
    private java.lang.String requestString;
    private org.apache.commons.httpclient.methods.RequestEntity requestEntity;
    private int repeatCount;
    private long requestContentLength;
    private boolean chunked;
    static java.lang.Class class$org$apache$commons$httpclient$methods$EntityEnclosingMethod;

    public void <init>()
    {
        org.apache.commons.httpclient.methods.EntityEnclosingMethod r0;

        r0 := @this: org.apache.commons.httpclient.methods.EntityEnclosingMethod;

        specialinvoke r0.<org.apache.commons.httpclient.methods.ExpectContinueMethod: void <init>()>();

        r0.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: java.io.InputStream requestStream> = null;

        r0.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: java.lang.String requestString> = null;

        r0.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: int repeatCount> = 0;

        r0.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: long requestContentLength> = -2L;

        r0.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: boolean chunked> = 0;

        virtualinvoke r0.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: void setFollowRedirects(boolean)>(0);

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.commons.httpclient.methods.EntityEnclosingMethod r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.httpclient.methods.EntityEnclosingMethod;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.methods.ExpectContinueMethod: void <init>(java.lang.String)>(r1);

        r0.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: java.io.InputStream requestStream> = null;

        r0.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: java.lang.String requestString> = null;

        r0.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: int repeatCount> = 0;

        r0.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: long requestContentLength> = -2L;

        r0.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: boolean chunked> = 0;

        virtualinvoke r0.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: void setFollowRedirects(boolean)>(0);

        return;
    }

    protected boolean hasRequestContent()
    {
        org.apache.commons.logging.Log $r0;
        org.apache.commons.httpclient.methods.EntityEnclosingMethod r1;
        org.apache.commons.httpclient.methods.RequestEntity $r2;
        java.lang.String $r4;
        java.io.InputStream $r3;
        boolean $z0;

        r1 := @this: org.apache.commons.httpclient.methods.EntityEnclosingMethod;

        $r0 = <org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter EntityEnclosingMethod.hasRequestContent()");

        $r2 = r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.httpclient.methods.RequestEntity requestEntity>;

        if $r2 != null goto label1;

        $r3 = r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: java.io.InputStream requestStream>;

        if $r3 != null goto label1;

        $r4 = r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: java.lang.String requestString>;

        if $r4 == null goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    protected void clearRequestBody()
    {
        org.apache.commons.logging.Log $r0;
        org.apache.commons.httpclient.methods.EntityEnclosingMethod r1;

        r1 := @this: org.apache.commons.httpclient.methods.EntityEnclosingMethod;

        $r0 = <org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter EntityEnclosingMethod.clearRequestBody()");

        r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: java.io.InputStream requestStream> = null;

        r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: java.lang.String requestString> = null;

        r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.httpclient.methods.RequestEntity requestEntity> = null;

        return;
    }

    protected byte[] generateRequestBody()
    {
        org.apache.commons.logging.Log $r0;
        org.apache.commons.httpclient.methods.EntityEnclosingMethod r1;

        r1 := @this: org.apache.commons.httpclient.methods.EntityEnclosingMethod;

        $r0 = <org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter EntityEnclosingMethod.renerateRequestBody()");

        return null;
    }

    protected org.apache.commons.httpclient.methods.RequestEntity generateRequestEntity()
    {
        byte[] $r1;
        long $l0;
        java.lang.StringBuffer $r15, $r17, $r18;
        java.lang.String $r3, $r4, $r6, $r14, $r19;
        boolean $z0;
        org.apache.commons.httpclient.methods.ByteArrayRequestEntity $r9;
        org.apache.commons.httpclient.methods.StringRequestEntity $r5, $r13;
        org.apache.commons.httpclient.methods.InputStreamRequestEntity $r7;
        org.apache.commons.logging.Log $r12, $r16;
        org.apache.commons.httpclient.methods.EntityEnclosingMethod r0;
        org.apache.commons.httpclient.methods.RequestEntity $r20;
        java.io.UnsupportedEncodingException $r10, $r11;
        java.io.InputStream $r2, $r8;

        r0 := @this: org.apache.commons.httpclient.methods.EntityEnclosingMethod;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: byte[] generateRequestBody()>();

        if $r1 == null goto label1;

        $r9 = new org.apache.commons.httpclient.methods.ByteArrayRequestEntity;

        specialinvoke $r9.<org.apache.commons.httpclient.methods.ByteArrayRequestEntity: void <init>(byte[])>($r1);

        r0.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.httpclient.methods.RequestEntity requestEntity> = $r9;

        goto label9;

     label1:
        $r2 = r0.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: java.io.InputStream requestStream>;

        if $r2 == null goto label2;

        $r7 = new org.apache.commons.httpclient.methods.InputStreamRequestEntity;

        $r8 = r0.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: java.io.InputStream requestStream>;

        $l0 = r0.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: long requestContentLength>;

        specialinvoke $r7.<org.apache.commons.httpclient.methods.InputStreamRequestEntity: void <init>(java.io.InputStream,long)>($r8, $l0);

        r0.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.httpclient.methods.RequestEntity requestEntity> = $r7;

        r0.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: java.io.InputStream requestStream> = null;

        goto label9;

     label2:
        $r3 = r0.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: java.lang.String requestString>;

        if $r3 == null goto label9;

        $r4 = virtualinvoke r0.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: java.lang.String getRequestCharSet()>();

     label3:
        $r5 = new org.apache.commons.httpclient.methods.StringRequestEntity;

        $r6 = r0.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: java.lang.String requestString>;

        specialinvoke $r5.<org.apache.commons.httpclient.methods.StringRequestEntity: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r6, null, $r4);

        r0.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.httpclient.methods.RequestEntity requestEntity> = $r5;

     label4:
        goto label9;

     label5:
        $r11 := @caughtexception;

        $r12 = <org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.logging.Log LOG>;

        $z0 = interfaceinvoke $r12.<org.apache.commons.logging.Log: boolean isWarnEnabled()>();

        if $z0 == 0 goto label6;

        $r16 = <org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.logging.Log LOG>;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" not supported");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r16.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r19);

     label6:
        $r13 = new org.apache.commons.httpclient.methods.StringRequestEntity;

        $r14 = r0.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: java.lang.String requestString>;

        specialinvoke $r13.<org.apache.commons.httpclient.methods.StringRequestEntity: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r14, null, null);

        r0.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.httpclient.methods.RequestEntity requestEntity> = $r13;

     label7:
        goto label9;

     label8:
        $r10 := @caughtexception;

     label9:
        $r20 = r0.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.httpclient.methods.RequestEntity requestEntity>;

        return $r20;

        catch java.io.UnsupportedEncodingException from label3 to label4 with label5;
        catch java.io.UnsupportedEncodingException from label6 to label7 with label8;
    }

    public boolean getFollowRedirects()
    {
        org.apache.commons.httpclient.methods.EntityEnclosingMethod r0;

        r0 := @this: org.apache.commons.httpclient.methods.EntityEnclosingMethod;

        return 0;
    }

    public void setFollowRedirects(boolean)
    {
        org.apache.commons.httpclient.methods.EntityEnclosingMethod r0;
        java.lang.IllegalArgumentException $r1;
        boolean z0;

        r0 := @this: org.apache.commons.httpclient.methods.EntityEnclosingMethod;

        z0 := @parameter0: boolean;

        if z0 != 1 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Entity enclosing requests cannot be redirected without user intervention");

        throw $r1;

     label1:
        specialinvoke r0.<org.apache.commons.httpclient.methods.ExpectContinueMethod: void setFollowRedirects(boolean)>(0);

        return;
    }

    public void setRequestContentLength(int)
    {
        int i0;
        org.apache.commons.logging.Log $r0;
        long $l1;
        org.apache.commons.httpclient.methods.EntityEnclosingMethod r1;

        r1 := @this: org.apache.commons.httpclient.methods.EntityEnclosingMethod;

        i0 := @parameter0: int;

        $r0 = <org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter EntityEnclosingMethod.setRequestContentLength(int)");

        $l1 = (long) i0;

        r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: long requestContentLength> = $l1;

        return;
    }

    public java.lang.String getRequestCharSet()
    {
        org.apache.commons.httpclient.Header $r1, $r5;
        org.apache.commons.httpclient.methods.EntityEnclosingMethod r0;
        java.lang.String $r2, $r4, $r7, $r8;
        org.apache.commons.httpclient.methods.RequestEntity $r3, $r6;

        r0 := @this: org.apache.commons.httpclient.methods.EntityEnclosingMethod;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.httpclient.Header getRequestHeader(java.lang.String)>("Content-Type");

        if $r1 != null goto label2;

        $r3 = r0.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.httpclient.methods.RequestEntity requestEntity>;

        if $r3 == null goto label1;

        $r5 = new org.apache.commons.httpclient.Header;

        $r6 = r0.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.httpclient.methods.RequestEntity requestEntity>;

        $r7 = interfaceinvoke $r6.<org.apache.commons.httpclient.methods.RequestEntity: java.lang.String getContentType()>();

        specialinvoke $r5.<org.apache.commons.httpclient.Header: void <init>(java.lang.String,java.lang.String)>("Content-Type", $r7);

        $r8 = virtualinvoke r0.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: java.lang.String getContentCharSet(org.apache.commons.httpclient.Header)>($r5);

        return $r8;

     label1:
        $r4 = specialinvoke r0.<org.apache.commons.httpclient.methods.ExpectContinueMethod: java.lang.String getRequestCharSet()>();

        return $r4;

     label2:
        $r2 = specialinvoke r0.<org.apache.commons.httpclient.methods.ExpectContinueMethod: java.lang.String getRequestCharSet()>();

        return $r2;
    }

    public void setRequestContentLength(long)
    {
        org.apache.commons.logging.Log $r0;
        long l0;
        org.apache.commons.httpclient.methods.EntityEnclosingMethod r1;

        r1 := @this: org.apache.commons.httpclient.methods.EntityEnclosingMethod;

        l0 := @parameter0: long;

        $r0 = <org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter EntityEnclosingMethod.setRequestContentLength(int)");

        r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: long requestContentLength> = l0;

        return;
    }

    public void setContentChunked(boolean)
    {
        org.apache.commons.httpclient.methods.EntityEnclosingMethod r0;
        boolean z0;

        r0 := @this: org.apache.commons.httpclient.methods.EntityEnclosingMethod;

        z0 := @parameter0: boolean;

        r0.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: boolean chunked> = z0;

        return;
    }

    protected long getRequestContentLength()
    {
        long $l0;
        org.apache.commons.logging.Log $r0;
        org.apache.commons.httpclient.methods.EntityEnclosingMethod r1;
        org.apache.commons.httpclient.methods.RequestEntity $r2, $r3, $r4, $r5;
        boolean $z0, $z1;

        r1 := @this: org.apache.commons.httpclient.methods.EntityEnclosingMethod;

        $r0 = <org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter EntityEnclosingMethod.getRequestContentLength()");

        $z0 = virtualinvoke r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: boolean hasRequestContent()>();

        if $z0 != 0 goto label1;

        return 0L;

     label1:
        $z1 = r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: boolean chunked>;

        if $z1 == 0 goto label2;

        return -1L;

     label2:
        $r2 = r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.httpclient.methods.RequestEntity requestEntity>;

        if $r2 != null goto label3;

        $r5 = virtualinvoke r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.httpclient.methods.RequestEntity generateRequestEntity()>();

        r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.httpclient.methods.RequestEntity requestEntity> = $r5;

     label3:
        $r3 = r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.httpclient.methods.RequestEntity requestEntity>;

        if $r3 != null goto label4;

        $l0 = 0L;

        goto label5;

     label4:
        $r4 = r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.httpclient.methods.RequestEntity requestEntity>;

        $l0 = interfaceinvoke $r4.<org.apache.commons.httpclient.methods.RequestEntity: long getContentLength()>();

     label5:
        return $l0;
    }

    protected void addRequestHeaders(org.apache.commons.httpclient.HttpState, org.apache.commons.httpclient.HttpConnection) throws java.io.IOException, org.apache.commons.httpclient.HttpException
    {
        org.apache.commons.httpclient.HttpConnection r3;
        org.apache.commons.httpclient.Header $r4;
        org.apache.commons.httpclient.HttpState r2;
        org.apache.commons.logging.Log $r0;
        org.apache.commons.httpclient.methods.EntityEnclosingMethod r1;
        org.apache.commons.httpclient.methods.RequestEntity $r5;
        java.lang.String $r6, $r7;

        r1 := @this: org.apache.commons.httpclient.methods.EntityEnclosingMethod;

        r2 := @parameter0: org.apache.commons.httpclient.HttpState;

        r3 := @parameter1: org.apache.commons.httpclient.HttpConnection;

        $r0 = <org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter EntityEnclosingMethod.addRequestHeaders(HttpState, HttpConnection)");

        specialinvoke r1.<org.apache.commons.httpclient.methods.ExpectContinueMethod: void addRequestHeaders(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection)>(r2, r3);

        virtualinvoke r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: void addContentLengthRequestHeader(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection)>(r2, r3);

        $r4 = virtualinvoke r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.httpclient.Header getRequestHeader(java.lang.String)>("Content-Type");

        if $r4 != null goto label1;

        $r5 = virtualinvoke r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.httpclient.methods.RequestEntity getRequestEntity()>();

        if $r5 == null goto label1;

        $r6 = interfaceinvoke $r5.<org.apache.commons.httpclient.methods.RequestEntity: java.lang.String getContentType()>();

        if $r6 == null goto label1;

        $r7 = interfaceinvoke $r5.<org.apache.commons.httpclient.methods.RequestEntity: java.lang.String getContentType()>();

        virtualinvoke r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: void setRequestHeader(java.lang.String,java.lang.String)>("Content-Type", $r7);

     label1:
        return;
    }

    protected void addContentLengthRequestHeader(org.apache.commons.httpclient.HttpState, org.apache.commons.httpclient.HttpConnection) throws java.io.IOException, org.apache.commons.httpclient.HttpException
    {
        org.apache.commons.httpclient.HttpConnection r14;
        org.apache.commons.httpclient.HttpVersion $r5, $r6, $r9;
        long $l0;
        org.apache.commons.httpclient.Header $r2, $r3;
        byte $b1;
        java.lang.StringBuffer $r10, $r11, $r15;
        org.apache.commons.httpclient.HttpState r13;
        int $i2;
        java.lang.String $r4, $r12;
        boolean $z0;
        org.apache.commons.httpclient.ProtocolException $r16;
        org.apache.commons.logging.Log $r0;
        org.apache.commons.httpclient.methods.EntityEnclosingMethod r1;

        r1 := @this: org.apache.commons.httpclient.methods.EntityEnclosingMethod;

        r13 := @parameter0: org.apache.commons.httpclient.HttpState;

        r14 := @parameter1: org.apache.commons.httpclient.HttpConnection;

        $r0 = <org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter EntityEnclosingMethod.addContentLengthRequestHeader(HttpState, HttpConnection)");

        $r2 = virtualinvoke r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.httpclient.Header getRequestHeader(java.lang.String)>("content-length");

        if $r2 != null goto label3;

        $r3 = virtualinvoke r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.httpclient.Header getRequestHeader(java.lang.String)>("Transfer-Encoding");

        if $r3 != null goto label3;

        $l0 = virtualinvoke r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: long getRequestContentLength()>();

        $b1 = $l0 cmp 0L;

        $i2 = (int) $b1;

        if $i2 >= 0 goto label2;

        $r5 = virtualinvoke r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.httpclient.HttpVersion getEffectiveVersion()>();

        $r6 = <org.apache.commons.httpclient.HttpVersion: org.apache.commons.httpclient.HttpVersion HTTP_1_1>;

        $z0 = virtualinvoke $r5.<org.apache.commons.httpclient.HttpVersion: boolean greaterEquals(org.apache.commons.httpclient.HttpVersion)>($r6);

        if $z0 == 0 goto label1;

        virtualinvoke r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: void addRequestHeader(java.lang.String,java.lang.String)>("Transfer-Encoding", "chunked");

        goto label3;

     label1:
        $r16 = new org.apache.commons.httpclient.ProtocolException;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.httpclient.HttpVersion getEffectiveVersion()>();

        $r10 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" does not support chunk encoding");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r16.<org.apache.commons.httpclient.ProtocolException: void <init>(java.lang.String)>($r12);

        throw $r16;

     label2:
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        virtualinvoke r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: void addRequestHeader(java.lang.String,java.lang.String)>("Content-Length", $r4);

     label3:
        return;
    }

    public void setRequestBody(java.io.InputStream)
    {
        org.apache.commons.logging.Log $r0;
        org.apache.commons.httpclient.methods.EntityEnclosingMethod r1;
        java.io.InputStream r2;

        r1 := @this: org.apache.commons.httpclient.methods.EntityEnclosingMethod;

        r2 := @parameter0: java.io.InputStream;

        $r0 = <org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter EntityEnclosingMethod.setRequestBody(InputStream)");

        virtualinvoke r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: void clearRequestBody()>();

        r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: java.io.InputStream requestStream> = r2;

        return;
    }

    public void setRequestBody(java.lang.String)
    {
        org.apache.commons.logging.Log $r0;
        org.apache.commons.httpclient.methods.EntityEnclosingMethod r1;
        java.lang.String r2;

        r1 := @this: org.apache.commons.httpclient.methods.EntityEnclosingMethod;

        r2 := @parameter0: java.lang.String;

        $r0 = <org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter EntityEnclosingMethod.setRequestBody(String)");

        virtualinvoke r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: void clearRequestBody()>();

        r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: java.lang.String requestString> = r2;

        return;
    }

    protected boolean writeRequestBody(org.apache.commons.httpclient.HttpState, org.apache.commons.httpclient.HttpConnection) throws java.io.IOException, org.apache.commons.httpclient.HttpException
    {
        org.apache.commons.httpclient.HttpConnection r4;
        long $l0;
        byte $b4;
        org.apache.commons.httpclient.HttpState r15;
        int $i1, $i2, $i3, $i5;
        boolean $z0, $z1, $z2;
        java.io.OutputStream $r5, r16;
        org.apache.commons.httpclient.ProtocolException $r17;
        org.apache.commons.httpclient.ChunkedOutputStream $r8, $r18;
        org.apache.commons.logging.Log $r0, $r7, $r12, $r14;
        org.apache.commons.httpclient.methods.EntityEnclosingMethod r1;
        org.apache.commons.httpclient.methods.RequestEntity $r2, $r3, $r6, $r10, $r13;

        r1 := @this: org.apache.commons.httpclient.methods.EntityEnclosingMethod;

        r15 := @parameter0: org.apache.commons.httpclient.HttpState;

        r4 := @parameter1: org.apache.commons.httpclient.HttpConnection;

        $r0 = <org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter EntityEnclosingMethod.writeRequestBody(HttpState, HttpConnection)");

        $z0 = virtualinvoke r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: boolean hasRequestContent()>();

        if $z0 != 0 goto label1;

        $r14 = <org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r14.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Request body has not been specified");

        return 1;

     label1:
        $r2 = r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.httpclient.methods.RequestEntity requestEntity>;

        if $r2 != null goto label2;

        $r13 = virtualinvoke r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.httpclient.methods.RequestEntity generateRequestEntity()>();

        r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.httpclient.methods.RequestEntity requestEntity> = $r13;

     label2:
        $r3 = r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.httpclient.methods.RequestEntity requestEntity>;

        if $r3 != null goto label3;

        $r12 = <org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r12.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Request body is empty");

        return 1;

     label3:
        $l0 = virtualinvoke r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: long getRequestContentLength()>();

        $i1 = r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: int repeatCount>;

        if $i1 <= 0 goto label4;

        $r10 = r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.httpclient.methods.RequestEntity requestEntity>;

        $z2 = interfaceinvoke $r10.<org.apache.commons.httpclient.methods.RequestEntity: boolean isRepeatable()>();

        if $z2 != 0 goto label4;

        $r17 = new org.apache.commons.httpclient.ProtocolException;

        specialinvoke $r17.<org.apache.commons.httpclient.ProtocolException: void <init>(java.lang.String)>("Unbuffered entity enclosing request can not be repeated.");

        throw $r17;

     label4:
        $i2 = r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: int repeatCount>;

        $i3 = $i2 + 1;

        r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: int repeatCount> = $i3;

        $r5 = virtualinvoke r4.<org.apache.commons.httpclient.HttpConnection: java.io.OutputStream getRequestOutputStream()>();

        r16 = $r5;

        $b4 = $l0 cmp 0L;

        $i5 = (int) $b4;

        if $i5 >= 0 goto label5;

        $r18 = new org.apache.commons.httpclient.ChunkedOutputStream;

        specialinvoke $r18.<org.apache.commons.httpclient.ChunkedOutputStream: void <init>(java.io.OutputStream)>($r5);

        r16 = $r18;

     label5:
        $r6 = r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.httpclient.methods.RequestEntity requestEntity>;

        interfaceinvoke $r6.<org.apache.commons.httpclient.methods.RequestEntity: void writeRequest(java.io.OutputStream)>(r16);

        $z1 = r16 instanceof org.apache.commons.httpclient.ChunkedOutputStream;

        if $z1 == 0 goto label6;

        $r8 = (org.apache.commons.httpclient.ChunkedOutputStream) r16;

        virtualinvoke $r8.<org.apache.commons.httpclient.ChunkedOutputStream: void finish()>();

     label6:
        virtualinvoke r16.<java.io.OutputStream: void flush()>();

        $r7 = <org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r7.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Request body sent");

        return 1;
    }

    public void recycle()
    {
        org.apache.commons.logging.Log $r0;
        org.apache.commons.httpclient.methods.EntityEnclosingMethod r1;

        r1 := @this: org.apache.commons.httpclient.methods.EntityEnclosingMethod;

        $r0 = <org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter EntityEnclosingMethod.recycle()");

        virtualinvoke r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: void clearRequestBody()>();

        r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: long requestContentLength> = -2L;

        r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: int repeatCount> = 0;

        r1.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: boolean chunked> = 0;

        specialinvoke r1.<org.apache.commons.httpclient.methods.ExpectContinueMethod: void recycle()>();

        return;
    }

    public org.apache.commons.httpclient.methods.RequestEntity getRequestEntity()
    {
        org.apache.commons.httpclient.methods.EntityEnclosingMethod r0;
        org.apache.commons.httpclient.methods.RequestEntity $r1;

        r0 := @this: org.apache.commons.httpclient.methods.EntityEnclosingMethod;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.httpclient.methods.RequestEntity generateRequestEntity()>();

        return $r1;
    }

    public void setRequestEntity(org.apache.commons.httpclient.methods.RequestEntity)
    {
        org.apache.commons.httpclient.methods.EntityEnclosingMethod r0;
        org.apache.commons.httpclient.methods.RequestEntity r1;

        r0 := @this: org.apache.commons.httpclient.methods.EntityEnclosingMethod;

        r1 := @parameter0: org.apache.commons.httpclient.methods.RequestEntity;

        virtualinvoke r0.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: void clearRequestBody()>();

        r0.<org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.httpclient.methods.RequestEntity requestEntity> = r1;

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r2;
        org.apache.commons.logging.Log $r1;

        <org.apache.commons.httpclient.methods.EntityEnclosingMethod: long CONTENT_LENGTH_CHUNKED> = -1L;

        <org.apache.commons.httpclient.methods.EntityEnclosingMethod: long CONTENT_LENGTH_AUTO> = -2L;

        $r0 = <org.apache.commons.httpclient.methods.EntityEnclosingMethod: java.lang.Class class$org$apache$commons$httpclient$methods$EntityEnclosingMethod>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <org.apache.commons.httpclient.methods.EntityEnclosingMethod: java.lang.Class class$(java.lang.String)>("org.apache.commons.httpclient.methods.EntityEnclosingMethod");

        <org.apache.commons.httpclient.methods.EntityEnclosingMethod: java.lang.Class class$org$apache$commons$httpclient$methods$EntityEnclosingMethod> = $r2;

        goto label2;

     label1:
        $r2 = <org.apache.commons.httpclient.methods.EntityEnclosingMethod: java.lang.Class class$org$apache$commons$httpclient$methods$EntityEnclosingMethod>;

     label2:
        $r1 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r2);

        <org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.logging.Log LOG> = $r1;

        return;
    }
}
