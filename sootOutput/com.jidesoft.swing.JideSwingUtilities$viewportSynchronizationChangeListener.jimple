class com.jidesoft.swing.JideSwingUtilities$viewportSynchronizationChangeListener extends java.lang.Object implements javax.swing.event.ChangeListener
{

    private void <init>()
    {
        com.jidesoft.swing.JideSwingUtilities$viewportSynchronizationChangeListener r0;

        r0 := @this: com.jidesoft.swing.JideSwingUtilities$viewportSynchronizationChangeListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void stateChanged(javax.swing.event.ChangeEvent)
    {
        java.awt.Point $r17, $r18, $r19, $r20, $r21, $r22;
        java.lang.Integer $r16, $r26, $r33;
        java.util.Map r6, r27;
        javax.swing.event.ChangeListener $r14, $r38;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        javax.swing.event.ChangeEvent r0;
        java.util.Set $r9, $r11, $r28;
        java.awt.Dimension $r5;
        java.util.HashMap $r7, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.util.Iterator $r10, $r12, $r29;
        com.jidesoft.swing.JideSwingUtilities$viewportSynchronizationChangeListener r35;
        java.lang.Object $r1, $r2, $r4, $r13, $r15, $r23, $r24, $r25, $r30, $r32, $r34;
        javax.swing.JViewport r3, r31, r36, r37;

        r35 := @this: com.jidesoft.swing.JideSwingUtilities$viewportSynchronizationChangeListener;

        r0 := @parameter0: javax.swing.event.ChangeEvent;

        $r1 = virtualinvoke r0.<javax.swing.event.ChangeEvent: java.lang.Object getSource()>();

        $z0 = $r1 instanceof javax.swing.JViewport;

        if $z0 != 0 goto label01;

        return;

     label01:
        $r2 = virtualinvoke r0.<javax.swing.event.ChangeEvent: java.lang.Object getSource()>();

        r3 = (javax.swing.JViewport) $r2;

        $r4 = virtualinvoke r3.<javax.swing.JViewport: java.lang.Object getClientProperty(java.lang.Object)>("synchronizeViewSlaveViewport");

        $z1 = $r4 instanceof java.util.Map;

        if $z1 != 0 goto label02;

        return;

     label02:
        $r5 = virtualinvoke r3.<javax.swing.JViewport: java.awt.Dimension getSize()>();

        $i0 = $r5.<java.awt.Dimension: int width>;

        if $i0 == 0 goto label03;

        $i1 = $r5.<java.awt.Dimension: int height>;

        if $i1 != 0 goto label04;

     label03:
        return;

     label04:
        r6 = (java.util.Map) $r4;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r7.<java.util.Map: void putAll(java.util.Map)>(r6);

     label05:
        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        $r9 = interfaceinvoke $r7.<java.util.Map: java.util.Set keySet()>();

        $r10 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z7 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label11;

        $r23 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r36 = (javax.swing.JViewport) $r23;

        $r24 = virtualinvoke r36.<javax.swing.JViewport: java.lang.Object getClientProperty(java.lang.Object)>("synchronizeViewSlaveViewport");

        $z4 = $r24 instanceof java.util.Map;

        if $z4 != 0 goto label07;

        goto label06;

     label07:
        $r25 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r36);

        $r26 = (java.lang.Integer) $r25;

        $i11 = virtualinvoke $r26.<java.lang.Integer: int intValue()>();

        r27 = (java.util.Map) $r24;

        $r28 = interfaceinvoke r27.<java.util.Map: java.util.Set keySet()>();

        $r29 = interfaceinvoke $r28.<java.util.Set: java.util.Iterator iterator()>();

     label08:
        $z5 = interfaceinvoke $r29.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label10;

        $r30 = interfaceinvoke $r29.<java.util.Iterator: java.lang.Object next()>();

        r31 = (javax.swing.JViewport) $r30;

        if r31 == r3 goto label09;

        $z6 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>(r31);

        if $z6 != 0 goto label09;

        $r32 = interfaceinvoke r27.<java.util.Map: java.lang.Object get(java.lang.Object)>(r31);

        $r33 = (java.lang.Integer) $r32;

        $i12 = virtualinvoke $r33.<java.lang.Integer: int intValue()>();

        if $i12 != $i11 goto label09;

        $r34 = interfaceinvoke r27.<java.util.Map: java.lang.Object get(java.lang.Object)>(r31);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r31, $r34);

     label09:
        goto label08;

     label10:
        goto label06;

     label11:
        $z2 = interfaceinvoke $r8.<java.util.Map: boolean isEmpty()>();

        if $z2 == 0 goto label12;

        goto label13;

     label12:
        interfaceinvoke $r7.<java.util.Map: void putAll(java.util.Map)>($r8);

        goto label05;

     label13:
        $r11 = interfaceinvoke $r7.<java.util.Map: java.util.Set keySet()>();

        $r12 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label14:
        $z3 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label18;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r37 = (javax.swing.JViewport) $r13;

        $r14 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: javax.swing.event.ChangeListener getViewportSynchronizationChangeListener()>();

        virtualinvoke r37.<javax.swing.JViewport: void removeChangeListener(javax.swing.event.ChangeListener)>($r14);

        $r15 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r37);

        $r16 = (java.lang.Integer) $r15;

        $i2 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();

        if $i2 != 0 goto label16;

        $r20 = virtualinvoke r3.<javax.swing.JViewport: java.awt.Point getViewPosition()>();

        $r21 = virtualinvoke r37.<javax.swing.JViewport: java.awt.Point getViewPosition()>();

        $i8 = $r20.<java.awt.Point: int x>;

        $i7 = $r21.<java.awt.Point: int x>;

        if $i8 == $i7 goto label15;

        $r22 = new java.awt.Point;

        $i10 = $r20.<java.awt.Point: int x>;

        $i9 = $r21.<java.awt.Point: int y>;

        specialinvoke $r22.<java.awt.Point: void <init>(int,int)>($i10, $i9);

        virtualinvoke r37.<javax.swing.JViewport: void setViewPosition(java.awt.Point)>($r22);

     label15:
        goto label17;

     label16:
        if $i2 != 1 goto label17;

        $r17 = virtualinvoke r3.<javax.swing.JViewport: java.awt.Point getViewPosition()>();

        $r18 = virtualinvoke r37.<javax.swing.JViewport: java.awt.Point getViewPosition()>();

        $i4 = $r17.<java.awt.Point: int y>;

        $i3 = $r18.<java.awt.Point: int y>;

        if $i4 == $i3 goto label17;

        $r19 = new java.awt.Point;

        $i6 = $r18.<java.awt.Point: int x>;

        $i5 = $r17.<java.awt.Point: int y>;

        specialinvoke $r19.<java.awt.Point: void <init>(int,int)>($i6, $i5);

        virtualinvoke r37.<javax.swing.JViewport: void setViewPosition(java.awt.Point)>($r19);

     label17:
        $r38 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: javax.swing.event.ChangeListener getViewportSynchronizationChangeListener()>();

        virtualinvoke r37.<javax.swing.JViewport: void addChangeListener(javax.swing.event.ChangeListener)>($r38);

        goto label14;

     label18:
        return;
    }

    void <init>(com.jidesoft.swing.JideSwingUtilities$1)
    {
        com.jidesoft.swing.JideSwingUtilities$viewportSynchronizationChangeListener r0;
        com.jidesoft.swing.JideSwingUtilities$1 r1;

        r0 := @this: com.jidesoft.swing.JideSwingUtilities$viewportSynchronizationChangeListener;

        r1 := @parameter0: com.jidesoft.swing.JideSwingUtilities$1;

        specialinvoke r0.<com.jidesoft.swing.JideSwingUtilities$viewportSynchronizationChangeListener: void <init>()>();

        return;
    }
}
