public class org.sat4j.tools.Minimal4InclusionModel extends org.sat4j.tools.SolverDecorator
{
    private static final long serialVersionUID;

    public void <init>(org.sat4j.specs.ISolver)
    {
        org.sat4j.tools.Minimal4InclusionModel r0;
        org.sat4j.specs.ISolver r1;

        r0 := @this: org.sat4j.tools.Minimal4InclusionModel;

        r1 := @parameter0: org.sat4j.specs.ISolver;

        specialinvoke r0.<org.sat4j.tools.SolverDecorator: void <init>(org.sat4j.specs.ISolver)>(r1);

        return;
    }

    public int[] model()
    {
        java.lang.IllegalStateException $r7;
        int[] $r3, $r5, r8;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, i7, i8, i9, $i10;
        boolean $z0;
        org.sat4j.specs.ContradictionException $r4;
        org.sat4j.tools.Minimal4InclusionModel r2;
        org.sat4j.core.VecInt $r0, $r1;
        org.sat4j.specs.TimeoutException $r6;

        r2 := @this: org.sat4j.tools.Minimal4InclusionModel;

        r8 = null;

        $r0 = new org.sat4j.core.VecInt;

        specialinvoke $r0.<org.sat4j.core.VecInt: void <init>()>();

        $r1 = new org.sat4j.core.VecInt;

        specialinvoke $r1.<org.sat4j.core.VecInt: void <init>()>();

     label01:
        $r3 = specialinvoke r2.<org.sat4j.tools.SolverDecorator: int[] model()>();

        r8 = $r3;

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: void clear()>();

        interfaceinvoke $r1.<org.sat4j.specs.IVecInt: void clear()>();

        $i0 = lengthof $r3;

        i7 = 0;

     label02:
        if i7 >= $i0 goto label05;

        i5 = $r3[i7];

        if i5 >= 0 goto label03;

        $i6 = neg i5;

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i6);

        goto label04;

     label03:
        interfaceinvoke $r1.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i5);

     label04:
        i7 = i7 + 1;

        goto label02;

     label05:
        virtualinvoke r2.<org.sat4j.tools.Minimal4InclusionModel: org.sat4j.specs.IConstr addClause(org.sat4j.specs.IVecInt)>($r0);

        $z0 = virtualinvoke r2.<org.sat4j.tools.Minimal4InclusionModel: boolean isSatisfiable(org.sat4j.specs.IVecInt)>($r1);

        if $z0 != 0 goto label01;

     label06:
        goto label09;

     label07:
        $r6 := @caughtexception;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Solver timed out");

        throw $r7;

     label08:
        $r4 := @caughtexception;

     label09:
        $i1 = interfaceinvoke $r0.<org.sat4j.specs.IVecInt: int size()>();

        $r5 = newarray (int)[$i1];

        i8 = 0;

        i9 = 0;

     label10:
        $i10 = lengthof r8;

        if i8 >= $i10 goto label12;

        $i2 = r8[i8];

        if $i2 >= 0 goto label11;

        $i3 = i9;

        i9 = i9 + 1;

        $i4 = r8[i8];

        $r5[$i3] = $i4;

     label11:
        i8 = i8 + 1;

        goto label10;

     label12:
        return $r5;

        catch org.sat4j.specs.TimeoutException from label01 to label06 with label07;
        catch org.sat4j.specs.ContradictionException from label01 to label06 with label08;
    }

    public static void <clinit>()
    {
        <org.sat4j.tools.Minimal4InclusionModel: long serialVersionUID> = 1L;

        return;
    }
}
