public class org.apache.http.cookie.CookieIdentityComparator extends java.lang.Object implements java.io.Serializable, java.util.Comparator
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.apache.http.cookie.CookieIdentityComparator r0;

        r0 := @this: org.apache.http.cookie.CookieIdentityComparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(org.apache.http.cookie.Cookie, org.apache.http.cookie.Cookie)
    {
        org.apache.http.cookie.CookieIdentityComparator r13;
        int $i0, $i1, $i2, i3, $i5, $i7;
        org.apache.http.cookie.Cookie r0, r2;
        java.lang.String $r1, $r3, $r4, $r5, $r6, r14, $r15, r16, r17, r18;
        java.lang.StringBuilder $r8, $r9, $r11, $r12, $r19, $r20;

        r13 := @this: org.apache.http.cookie.CookieIdentityComparator;

        r0 := @parameter0: org.apache.http.cookie.Cookie;

        r2 := @parameter1: org.apache.http.cookie.Cookie;

        $r1 = interfaceinvoke r0.<org.apache.http.cookie.Cookie: java.lang.String getName()>();

        $r3 = interfaceinvoke r2.<org.apache.http.cookie.Cookie: java.lang.String getName()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int compareTo(java.lang.String)>($r3);

        i3 = $i0;

        if $i0 != 0 goto label5;

        $r6 = interfaceinvoke r0.<org.apache.http.cookie.Cookie: java.lang.String getDomain()>();

        r14 = $r6;

        if $r6 != null goto label1;

        r14 = "";

        goto label2;

     label1:
        $i1 = virtualinvoke $r6.<java.lang.String: int indexOf(int)>(46);

        $i5 = (int) -1;

        if $i1 != $i5 goto label2;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".local");

        r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r15 = interfaceinvoke r2.<org.apache.http.cookie.Cookie: java.lang.String getDomain()>();

        r16 = $r15;

        if $r15 != null goto label3;

        r16 = "";

        goto label4;

     label3:
        $i2 = virtualinvoke $r15.<java.lang.String: int indexOf(int)>(46);

        $i7 = (int) -1;

        if $i2 != $i7 goto label4;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".local");

        r16 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        i3 = virtualinvoke r14.<java.lang.String: int compareToIgnoreCase(java.lang.String)>(r16);

     label5:
        if i3 != 0 goto label8;

        $r4 = interfaceinvoke r0.<org.apache.http.cookie.Cookie: java.lang.String getPath()>();

        r17 = $r4;

        if $r4 != null goto label6;

        r17 = "/";

     label6:
        $r5 = interfaceinvoke r2.<org.apache.http.cookie.Cookie: java.lang.String getPath()>();

        r18 = $r5;

        if $r5 != null goto label7;

        r18 = "/";

     label7:
        i3 = virtualinvoke r17.<java.lang.String: int compareTo(java.lang.String)>(r18);

     label8:
        return i3;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.apache.http.cookie.CookieIdentityComparator r0;
        int $i0;
        java.lang.Object r1, r2;
        org.apache.http.cookie.Cookie $r3, $r4;

        r0 := @this: org.apache.http.cookie.CookieIdentityComparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.apache.http.cookie.Cookie) r1;

        $r3 = (org.apache.http.cookie.Cookie) r2;

        $i0 = virtualinvoke r0.<org.apache.http.cookie.CookieIdentityComparator: int compare(org.apache.http.cookie.Cookie,org.apache.http.cookie.Cookie)>($r4, $r3);

        return $i0;
    }

    public static void <clinit>()
    {
        <org.apache.http.cookie.CookieIdentityComparator: long serialVersionUID> = 4466565437490631532L;

        return;
    }
}
