public final class org.apache.cxf.helpers.ServiceUtils extends java.lang.Object
{

    private void <init>()
    {
        org.apache.cxf.helpers.ServiceUtils r0;

        r0 := @this: org.apache.cxf.helpers.ServiceUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isSchemaValidationEnabled(org.apache.cxf.annotations.SchemaValidation$SchemaValidationType, org.apache.cxf.message.Message)
    {
        org.apache.cxf.message.Message r0;
        org.apache.cxf.annotations.SchemaValidation$SchemaValidationType $r1, r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2, $z3, $z4;

        r2 := @parameter0: org.apache.cxf.annotations.SchemaValidation$SchemaValidationType;

        r0 := @parameter1: org.apache.cxf.message.Message;

        $r1 = staticinvoke <org.apache.cxf.helpers.ServiceUtils: org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationType(org.apache.cxf.message.Message)>(r0);

        $z0 = virtualinvoke $r1.<org.apache.cxf.annotations.SchemaValidation$SchemaValidationType: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label2;

        $r3 = <org.apache.cxf.annotations.SchemaValidation$SchemaValidationType: org.apache.cxf.annotations.SchemaValidation$SchemaValidationType IN>;

        $z1 = virtualinvoke $r3.<org.apache.cxf.annotations.SchemaValidation$SchemaValidationType: boolean equals(java.lang.Object)>(r2);

        if $z1 != 0 goto label1;

        $r5 = <org.apache.cxf.annotations.SchemaValidation$SchemaValidationType: org.apache.cxf.annotations.SchemaValidation$SchemaValidationType OUT>;

        $z3 = virtualinvoke $r5.<org.apache.cxf.annotations.SchemaValidation$SchemaValidationType: boolean equals(java.lang.Object)>(r2);

        if $z3 == 0 goto label3;

     label1:
        $r4 = <org.apache.cxf.annotations.SchemaValidation$SchemaValidationType: org.apache.cxf.annotations.SchemaValidation$SchemaValidationType BOTH>;

        $z2 = virtualinvoke $r4.<org.apache.cxf.annotations.SchemaValidation$SchemaValidationType: boolean equals(java.lang.Object)>($r1);

        if $z2 == 0 goto label3;

     label2:
        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        return $z4;
    }

    static org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationType(org.apache.cxf.message.Message)
    {
        org.apache.cxf.message.Message r0;
        org.apache.cxf.annotations.SchemaValidation$SchemaValidationType $r2, $r7, $r8, $r9, $r10;
        int $i0;
        java.lang.Object $r1;
        java.lang.String $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>("schema-validation-enabled");

        $z0 = $r1 instanceof org.apache.cxf.annotations.SchemaValidation$SchemaValidationType;

        if $z0 == 0 goto label1;

        $r10 = (org.apache.cxf.annotations.SchemaValidation$SchemaValidationType) $r1;

        return $r10;

     label1:
        if $r1 == null goto label4;

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toUpperCase()>();

        $r5 = "TRUE";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label2;

        $r9 = <org.apache.cxf.annotations.SchemaValidation$SchemaValidationType: org.apache.cxf.annotations.SchemaValidation$SchemaValidationType BOTH>;

        return $r9;

     label2:
        $r6 = "FALSE";

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z2 == 0 goto label3;

        $r8 = <org.apache.cxf.annotations.SchemaValidation$SchemaValidationType: org.apache.cxf.annotations.SchemaValidation$SchemaValidationType NONE>;

        return $r8;

     label3:
        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 <= 0 goto label4;

        $r7 = staticinvoke <org.apache.cxf.annotations.SchemaValidation$SchemaValidationType: org.apache.cxf.annotations.SchemaValidation$SchemaValidationType valueOf(java.lang.String)>($r4);

        return $r7;

     label4:
        $r2 = <org.apache.cxf.annotations.SchemaValidation$SchemaValidationType: org.apache.cxf.annotations.SchemaValidation$SchemaValidationType NONE>;

        return $r2;
    }

    public static java.lang.String makeServiceNameFromClassName(java.lang.Class)
    {
        int $i0, $i1, $i2, $i3, $i5, $i7;
        java.lang.Class r0;
        java.lang.String $r1, r2;

        r0 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        r2 = $r1;

        $i0 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

        $i5 = (int) -1;

        if $i0 == $i5 goto label1;

        $i3 = $i0 + 1;

        r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i3);

     label1:
        $i1 = virtualinvoke r2.<java.lang.String: int lastIndexOf(java.lang.String)>("$");

        $i7 = (int) -1;

        if $i1 == $i7 goto label2;

        $i2 = $i1 + 1;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i2);

     label2:
        return r2;
    }

    public static javax.xml.namespace.QName makeQualifiedNameFromClass(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.String $r1, $r2, $r3;
        javax.xml.namespace.QName $r4;

        r0 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <org.apache.cxf.helpers.ServiceUtils: java.lang.String makeNamespaceFromClassName(java.lang.String,java.lang.String)>($r1, "http");

        $r3 = staticinvoke <org.apache.cxf.helpers.ServiceUtils: java.lang.String makeServiceNameFromClassName(java.lang.Class)>(r0);

        $r4 = new javax.xml.namespace.QName;

        specialinvoke $r4.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r2, $r3);

        return $r4;
    }

    public static java.lang.String getMethodName(java.lang.reflect.Method)
    {
        java.lang.Class[] $r5;
        int $i0, $i1, $i2, i3;
        java.lang.StringBuilder $r0;
        java.lang.Class $r2, r7;
        java.lang.String $r3, $r4, $r6, $r8;
        java.lang.reflect.Method r1;

        r1 := @parameter0: java.lang.reflect.Method;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r4 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.String getName()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $r5 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        i3 = 0;

     label1:
        $i0 = lengthof $r5;

        if i3 >= $i0 goto label3;

        r7 = $r5[i3];

        $r8 = virtualinvoke r7.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $i1 = lengthof $r5;

        $i2 = $i1 - 1;

        if i3 >= $i2 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public static java.lang.String makeNamespaceFromClassName(java.lang.String, java.lang.String)
    {
        java.lang.String[] r3;
        java.util.StringTokenizer $r21;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, $i9, $i11;
        java.lang.String r0, $r1, r6, $r9, $r12, r13, $r14, $r19;
        java.lang.StringBuilder $r7, $r8, $r10, $r11, $r16, $r17, $r18, $r20, $r22, $r23;

        r0 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

        $i9 = (int) -1;

        if $i0 != $i9 goto label1;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("://");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DefaultNamespace");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r19;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r21 = new java.util.StringTokenizer;

        specialinvoke $r21.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r1, ".");

        $i1 = virtualinvoke $r21.<java.util.StringTokenizer: int countTokens()>();

        r3 = newarray (java.lang.String)[$i1];

        i6 = 0;

     label2:
        $i2 = lengthof r3;

        if i6 >= $i2 goto label3;

        $r14 = virtualinvoke $r21.<java.util.StringTokenizer: java.lang.String nextToken()>();

        r3[i6] = $r14;

        i6 = i6 + 1;

        goto label2;

     label3:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>(int)>(80);

        $i3 = lengthof r3;

        i7 = $i3 - 1;

     label4:
        if i7 < 0 goto label6;

        r13 = r3[i7];

        $i4 = lengthof r3;

        $i5 = $i4 - 1;

        if i7 == $i5 goto label5;

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

     label5:
        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $i11 = (int) -1;

        i7 = i7 + $i11;

        goto label4;

     label6:
        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("://");

        $r9 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public static java.lang.String makePackageName(java.lang.String)
    {
        java.net.URL $r17;
        boolean $z0, $z1;
        java.lang.StringBuilder $r19;
        java.lang.String[] $r16;
        java.util.StringTokenizer $r18, $r20;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, $i17, i18, $i20, $i22, $i23, $i25;
        java.lang.String r1, $r2, $r3, $r6, $r7, $r8, $r9, $r11, r12, r13, r14;
        java.net.MalformedURLException $r10;
        char $c7;

        r1 := @parameter0: java.lang.String;

        r12 = "";

     label01:
        $r17 = new java.net.URL;

        specialinvoke $r17.<java.net.URL: void <init>(java.lang.String)>(r1);

        r13 = virtualinvoke $r17.<java.net.URL: java.lang.String getHost()>();

        r12 = virtualinvoke $r17.<java.net.URL: java.lang.String getPath()>();

     label02:
        goto label05;

     label03:
        $r10 := @caughtexception;

        $i10 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>(":");

        $i20 = (int) -1;

        if $i10 <= $i20 goto label04;

        $i11 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>(":");

        $i12 = $i11 + 1;

        $r11 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i12);

        r13 = $r11;

        $i13 = virtualinvoke $r11.<java.lang.String: int indexOf(java.lang.String)>("/");

        $i22 = (int) -1;

        if $i13 <= $i22 goto label05;

        $i14 = virtualinvoke $r11.<java.lang.String: int indexOf(java.lang.String)>("/");

        r13 = virtualinvoke $r11.<java.lang.String: java.lang.String substring(int,int)>(0, $i14);

        goto label05;

     label04:
        r13 = r1;

     label05:
        if r13 != null goto label06;

        return null;

     label06:
        $r2 = virtualinvoke r13.<java.lang.String: java.lang.String replace(char,char)>(45, 95);

        $r3 = virtualinvoke r12.<java.lang.String: java.lang.String replace(char,char)>(45, 95);

        r14 = $r3;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label07;

        $i5 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i6 = $i5 - 1;

        $c7 = virtualinvoke $r3.<java.lang.String: char charAt(int)>($i6);

        $i23 = (int) $c7;

        if $i23 != 47 goto label07;

        $i8 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i9 = $i8 - 1;

        r14 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i9);

     label07:
        $r18 = new java.util.StringTokenizer;

        specialinvoke $r18.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r2, ".:");

        $i15 = virtualinvoke $r18.<java.util.StringTokenizer: int countTokens()>();

        $r16 = newarray (java.lang.String)[$i15];

        i16 = 0;

     label08:
        $i17 = lengthof $r16;

        if i16 >= $i17 goto label09;

        $r9 = virtualinvoke $r18.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r16[i16] = $r9;

        i16 = i16 + 1;

        goto label08;

     label09:
        $r19 = new java.lang.StringBuilder;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        specialinvoke $r19.<java.lang.StringBuilder: void <init>(int)>($i1);

        $i2 = lengthof $r16;

        i18 = $i2 - 1;

     label10:
        if i18 < 0 goto label13;

        $r8 = $r16[i18];

        $i3 = lengthof $r16;

        $i4 = $i3 - 1;

        if i18 != $i4 goto label11;

        $z1 = 1;

        goto label12;

     label11:
        $z1 = 0;

     label12:
        staticinvoke <org.apache.cxf.helpers.ServiceUtils: void addWordToPackageBuffer(java.lang.StringBuilder,java.lang.String,boolean)>($r19, $r8, $z1);

        $i25 = (int) -1;

        i18 = i18 + $i25;

        goto label10;

     label13:
        $r20 = new java.util.StringTokenizer;

        specialinvoke $r20.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r14, "/");

     label14:
        $z0 = virtualinvoke $r20.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label15;

        $r7 = virtualinvoke $r20.<java.util.StringTokenizer: java.lang.String nextToken()>();

        staticinvoke <org.apache.cxf.helpers.ServiceUtils: void addWordToPackageBuffer(java.lang.StringBuilder,java.lang.String,boolean)>($r19, $r7, 0);

        goto label14;

     label15:
        $r6 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;

        catch java.net.MalformedURLException from label01 to label02 with label03;
    }

    private static void addWordToPackageBuffer(java.lang.StringBuilder, java.lang.String, boolean)
    {
        char $c0, $c3;
        int $i1, $i2, i4, $i6, $i7;
        char[] $r1;
        java.lang.StringBuilder r0;
        java.lang.String r3, $r4;
        boolean $z0, z1, $z2;

        r0 := @parameter0: java.lang.StringBuilder;

        r3 := @parameter1: java.lang.String;

        z1 := @parameter2: boolean;

        $z0 = staticinvoke <org.apache.cxf.helpers.JavaUtils: boolean isJavaKeyword(java.lang.String)>(r3);

        if $z0 == 0 goto label1;

        r3 = staticinvoke <org.apache.cxf.helpers.JavaUtils: java.lang.String makeNonJavaKeyword(java.lang.String)>(r3);

     label1:
        if z1 != 0 goto label2;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

     label2:
        $c0 = virtualinvoke r3.<java.lang.String: char charAt(int)>(0);

        $z2 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c0);

        if $z2 == 0 goto label3;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(95);

     label3:
        $i1 = virtualinvoke r3.<java.lang.String: int indexOf(int)>(46);

        $i6 = (int) -1;

        if $i1 == $i6 goto label7;

        $r1 = virtualinvoke r3.<java.lang.String: char[] toCharArray()>();

        i4 = 0;

     label4:
        $i2 = virtualinvoke r3.<java.lang.String: int length()>();

        if i4 >= $i2 goto label6;

        $c3 = $r1[i4];

        $i7 = (int) $c3;

        if $i7 != 46 goto label5;

        $r1[i4] = 95;

     label5:
        i4 = i4 + 1;

        goto label4;

     label6:
        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(char[])>($r1);

        r3 = $r4;

     label7:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        return;
    }
}
