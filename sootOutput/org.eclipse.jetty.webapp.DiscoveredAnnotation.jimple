public abstract class org.eclipse.jetty.webapp.DiscoveredAnnotation extends java.lang.Object
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    protected org.eclipse.jetty.webapp.WebAppContext _context;
    protected java.lang.String _className;
    protected java.lang.Class _clazz;

    public abstract void apply();

    public void <init>(org.eclipse.jetty.webapp.WebAppContext, java.lang.String)
    {
        org.eclipse.jetty.webapp.WebAppContext r1;
        org.eclipse.jetty.webapp.DiscoveredAnnotation r0;
        java.lang.String r2;

        r0 := @this: org.eclipse.jetty.webapp.DiscoveredAnnotation;

        r1 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.eclipse.jetty.webapp.DiscoveredAnnotation: org.eclipse.jetty.webapp.WebAppContext _context> = r1;

        r0.<org.eclipse.jetty.webapp.DiscoveredAnnotation: java.lang.String _className> = r2;

        return;
    }

    public java.lang.Class getTargetClass()
    {
        org.eclipse.jetty.webapp.DiscoveredAnnotation r0;
        java.lang.Class $r1, $r2, $r3;

        r0 := @this: org.eclipse.jetty.webapp.DiscoveredAnnotation;

        $r1 = r0.<org.eclipse.jetty.webapp.DiscoveredAnnotation: java.lang.Class _clazz>;

        if $r1 == null goto label1;

        $r3 = r0.<org.eclipse.jetty.webapp.DiscoveredAnnotation: java.lang.Class _clazz>;

        return $r3;

     label1:
        specialinvoke r0.<org.eclipse.jetty.webapp.DiscoveredAnnotation: void loadClass()>();

        $r2 = r0.<org.eclipse.jetty.webapp.DiscoveredAnnotation: java.lang.Class _clazz>;

        return $r2;
    }

    private void loadClass()
    {
        org.eclipse.jetty.webapp.DiscoveredAnnotation r0;
        java.lang.Class $r1, $r4;
        java.lang.String $r2, $r3;
        org.eclipse.jetty.util.log.Logger $r6;
        java.lang.Exception $r5;

        r0 := @this: org.eclipse.jetty.webapp.DiscoveredAnnotation;

        $r1 = r0.<org.eclipse.jetty.webapp.DiscoveredAnnotation: java.lang.Class _clazz>;

        if $r1 == null goto label1;

        return;

     label1:
        $r2 = r0.<org.eclipse.jetty.webapp.DiscoveredAnnotation: java.lang.String _className>;

        if $r2 != null goto label2;

        return;

     label2:
        $r3 = r0.<org.eclipse.jetty.webapp.DiscoveredAnnotation: java.lang.String _className>;

        $r4 = staticinvoke <org.eclipse.jetty.util.Loader: java.lang.Class loadClass(java.lang.Class,java.lang.String)>(null, $r3);

        r0.<org.eclipse.jetty.webapp.DiscoveredAnnotation: java.lang.Class _clazz> = $r4;

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        $r6 = <org.eclipse.jetty.webapp.DiscoveredAnnotation: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r6.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.Throwable)>($r5);

     label5:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/webapp/DiscoveredAnnotation;");

        <org.eclipse.jetty.webapp.DiscoveredAnnotation: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
