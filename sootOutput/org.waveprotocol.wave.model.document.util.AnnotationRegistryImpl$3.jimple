class org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$3 extends java.lang.Object implements java.util.Iterator
{
    int fromIndex;
    org.waveprotocol.wave.model.document.AnnotationBehaviour next;
    final java.lang.String val$parts;
    final org.waveprotocol.wave.model.util.StringMap val$behaviours;
    final org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl this$0;

    void <init>(org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl, java.lang.String, org.waveprotocol.wave.model.util.StringMap)
    {
        int $i1;
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$3 r0;
        java.lang.String r2;
        org.waveprotocol.wave.model.util.StringMap r3;
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$3;

        r1 := @parameter0: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.waveprotocol.wave.model.util.StringMap;

        r0.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$3: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl this$0> = r1;

        r0.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$3: java.lang.String val$parts> = r2;

        r0.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$3: org.waveprotocol.wave.model.util.StringMap val$behaviours> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = (int) -1;

        r0.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$3: int fromIndex> = $i1;

        specialinvoke r0.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$3: void getNext()>();

        return;
    }

    public boolean hasNext()
    {
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$3 r0;
        org.waveprotocol.wave.model.document.AnnotationBehaviour $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$3;

        $r1 = r0.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$3: org.waveprotocol.wave.model.document.AnnotationBehaviour next>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.waveprotocol.wave.model.document.AnnotationBehaviour next()
    {
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$3 r0;
        org.waveprotocol.wave.model.document.AnnotationBehaviour r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$3;

        r1 = r0.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$3: org.waveprotocol.wave.model.document.AnnotationBehaviour next>;

        specialinvoke r0.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$3: void getNext()>();

        return r1;
    }

    private void getNext()
    {
        org.waveprotocol.wave.model.util.StringMap $r3;
        int $i0, $i1, $i2, $i3, $i5;
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$3 r0;
        java.lang.Object $r5;
        java.lang.String $r1, $r2, $r4;
        org.waveprotocol.wave.model.document.AnnotationBehaviour r6;

        r0 := @this: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$3;

     label1:
        $r1 = r0.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$3: java.lang.String val$parts>;

        $i0 = r0.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$3: int fromIndex>;

        $i1 = $i0 + 1;

        $i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int,int)>(47, $i1);

        r0.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$3: int fromIndex> = $i2;

        $i5 = (int) -1;

        if $i2 == $i5 goto label3;

        $r3 = r0.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$3: org.waveprotocol.wave.model.util.StringMap val$behaviours>;

        $r2 = r0.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$3: java.lang.String val$parts>;

        $i3 = r0.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$3: int fromIndex>;

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        $r5 = interfaceinvoke $r3.<org.waveprotocol.wave.model.util.StringMap: java.lang.Object get(java.lang.String)>($r4);

        r6 = (org.waveprotocol.wave.model.document.AnnotationBehaviour) $r5;

        if r6 == null goto label2;

        r0.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$3: org.waveprotocol.wave.model.document.AnnotationBehaviour next> = r6;

        return;

     label2:
        goto label1;

     label3:
        r0.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$3: org.waveprotocol.wave.model.document.AnnotationBehaviour next> = null;

        return;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$3 r1;

        r1 := @this: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$3;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("getBehaviours iterator: remove");

        throw $r0;
    }

    public volatile java.lang.Object next()
    {
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$3 r0;
        org.waveprotocol.wave.model.document.AnnotationBehaviour $r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$3;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$3: org.waveprotocol.wave.model.document.AnnotationBehaviour next()>();

        return $r1;
    }
}
