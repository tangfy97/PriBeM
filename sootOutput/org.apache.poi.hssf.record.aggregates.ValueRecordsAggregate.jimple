public final class org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate extends java.lang.Object implements java.lang.Iterable
{
    private static final int MAX_ROW_INDEX;
    private static final int INDEX_NOT_SET;
    private int firstcell;
    private int lastcell;
    private org.apache.poi.hssf.record.CellValueRecordInterface[][] records;

    public void <init>()
    {
        org.apache.poi.hssf.record.CellValueRecordInterface[][] $r1;
        int $i1, $i3;
        org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate r0;

        r0 := @this: org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate;

        $r1 = newarray (org.apache.poi.hssf.record.CellValueRecordInterface[])[30];

        $i1 = (int) -1;

        $i3 = (int) -1;

        specialinvoke r0.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: void <init>(int,int,org.apache.poi.hssf.record.CellValueRecordInterface[][])>($i1, $i3, $r1);

        return;
    }

    private void <init>(int, int, org.apache.poi.hssf.record.CellValueRecordInterface[][])
    {
        org.apache.poi.hssf.record.CellValueRecordInterface[][] r1;
        int i0, i1, $i3, $i5;
        org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate r0;

        r0 := @this: org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: org.apache.poi.hssf.record.CellValueRecordInterface[][];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i3 = (int) -1;

        r0.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: int firstcell> = $i3;

        $i5 = (int) -1;

        r0.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: int lastcell> = $i5;

        r0.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: int firstcell> = i0;

        r0.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: int lastcell> = i1;

        r0.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: org.apache.poi.hssf.record.CellValueRecordInterface[][] records> = r1;

        return;
    }

    public void insertCell(org.apache.poi.hssf.record.CellValueRecordInterface)
    {
        org.apache.poi.hssf.record.CellValueRecordInterface[] $r4, $r6, $r11, r12, r13;
        org.apache.poi.hssf.record.CellValueRecordInterface r0;
        short $s0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, $i13, i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i24, $i25, $i26, $i28, $i29;
        org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate r1;
        org.apache.poi.hssf.record.CellValueRecordInterface[][] $r2, $r3, $r5, $r7, $r8, r9, $r10;

        r1 := @this: org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate;

        r0 := @parameter0: org.apache.poi.hssf.record.CellValueRecordInterface;

        $s0 = interfaceinvoke r0.<org.apache.poi.hssf.record.CellValueRecordInterface: short getColumn()>();

        $i1 = interfaceinvoke r0.<org.apache.poi.hssf.record.CellValueRecordInterface: int getRow()>();

        $r2 = r1.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: org.apache.poi.hssf.record.CellValueRecordInterface[][] records>;

        $i2 = lengthof $r2;

        if $i1 < $i2 goto label02;

        r9 = r1.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: org.apache.poi.hssf.record.CellValueRecordInterface[][] records>;

        $i8 = lengthof r9;

        i11 = $i8 * 2;

        $i9 = $i1 + 1;

        if i11 >= $i9 goto label01;

        i11 = $i1 + 1;

     label01:
        $r7 = newarray (org.apache.poi.hssf.record.CellValueRecordInterface[])[i11];

        r1.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: org.apache.poi.hssf.record.CellValueRecordInterface[][] records> = $r7;

        $r8 = r1.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: org.apache.poi.hssf.record.CellValueRecordInterface[][] records>;

        $i10 = lengthof r9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r9, 0, $r8, 0, $i10);

     label02:
        $r10 = r1.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: org.apache.poi.hssf.record.CellValueRecordInterface[][] records>;

        $r11 = $r10[$i1];

        r12 = $r11;

        if $r11 != null goto label04;

        $i17 = (int) $s0;

        i12 = $i17 + 1;

        if i12 >= 10 goto label03;

        i12 = 10;

     label03:
        $r6 = newarray (org.apache.poi.hssf.record.CellValueRecordInterface)[i12];

        r12 = $r6;

        $r5 = r1.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: org.apache.poi.hssf.record.CellValueRecordInterface[][] records>;

        $r5[$i1] = $r6;

     label04:
        $i13 = lengthof r12;

        $i18 = (int) $s0;

        if $i18 < $i13 goto label06;

        r13 = r12;

        $i5 = lengthof r12;

        i14 = $i5 * 2;

        $i19 = (int) $s0;

        $i6 = $i19 + 1;

        if i14 >= $i6 goto label05;

        $i20 = (int) $s0;

        i14 = $i20 + 1;

     label05:
        $r4 = newarray (org.apache.poi.hssf.record.CellValueRecordInterface)[i14];

        r12 = $r4;

        $i7 = lengthof r13;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r13, 0, $r4, 0, $i7);

        $r3 = r1.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: org.apache.poi.hssf.record.CellValueRecordInterface[][] records>;

        $r3[$i1] = $r4;

     label06:
        $i21 = (int) $s0;

        r12[$i21] = r0;

        $i15 = r1.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: int firstcell>;

        $i22 = (int) $s0;

        if $i22 < $i15 goto label07;

        $i4 = r1.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: int firstcell>;

        $i24 = (int) -1;

        if $i4 != $i24 goto label08;

     label07:
        $i25 = (int) $s0;

        r1.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: int firstcell> = $i25;

     label08:
        $i16 = r1.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: int lastcell>;

        $i26 = (int) $s0;

        if $i26 > $i16 goto label09;

        $i3 = r1.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: int lastcell>;

        $i28 = (int) -1;

        if $i3 != $i28 goto label10;

     label09:
        $i29 = (int) $s0;

        r1.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: int lastcell> = $i29;

     label10:
        return;
    }

    public void removeCell(org.apache.poi.hssf.record.CellValueRecordInterface)
    {
        org.apache.poi.hssf.record.CellValueRecordInterface[] r4;
        java.lang.RuntimeException $r10, $r11, $r12;
        java.lang.IllegalArgumentException $r9;
        org.apache.poi.hssf.record.CellValueRecordInterface[][] $r2, $r3;
        short $s2;
        org.apache.poi.hssf.record.CellValueRecordInterface r0;
        int $i0, $i1, $i3, $i4, $i5;
        org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate r1;

        r1 := @this: org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate;

        r0 := @parameter0: org.apache.poi.hssf.record.CellValueRecordInterface;

        if r0 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("cell must not be null");

        throw $r9;

     label1:
        $i0 = interfaceinvoke r0.<org.apache.poi.hssf.record.CellValueRecordInterface: int getRow()>();

        $r2 = r1.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: org.apache.poi.hssf.record.CellValueRecordInterface[][] records>;

        $i1 = lengthof $r2;

        if $i0 < $i1 goto label2;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>("cell row is out of range");

        throw $r10;

     label2:
        $r3 = r1.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: org.apache.poi.hssf.record.CellValueRecordInterface[][] records>;

        r4 = $r3[$i0];

        if r4 != null goto label3;

        $r11 = new java.lang.RuntimeException;

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>("cell row is already empty");

        throw $r11;

     label3:
        $s2 = interfaceinvoke r0.<org.apache.poi.hssf.record.CellValueRecordInterface: short getColumn()>();

        $i3 = lengthof r4;

        $i4 = (int) $s2;

        if $i4 < $i3 goto label4;

        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>("cell column is out of range");

        throw $r12;

     label4:
        $i5 = (int) $s2;

        r4[$i5] = null;

        return;
    }

    public void removeAllCellsValuesForRow(int)
    {
        java.lang.IllegalArgumentException $r12;
        org.apache.poi.hssf.record.CellValueRecordInterface[][] $r9, $r10;
        int i0, $i1, $i3, $i5;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r11;
        org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate r8;
        java.lang.String $r7;

        r8 := @this: org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i3 = (int) 65535;

        if i0 <= $i3 goto label2;

     label1:
        $r12 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Specified rowIndex ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is outside the allowable range (0..");

        $i5 = (int) 65535;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r12;

     label2:
        $r9 = r8.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: org.apache.poi.hssf.record.CellValueRecordInterface[][] records>;

        $i1 = lengthof $r9;

        if i0 < $i1 goto label3;

        return;

     label3:
        $r10 = r8.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: org.apache.poi.hssf.record.CellValueRecordInterface[][] records>;

        $r10[i0] = null;

        return;
    }

    public int getPhysicalNumberOfCells()
    {
        org.apache.poi.hssf.record.CellValueRecordInterface[] r3;
        org.apache.poi.hssf.record.CellValueRecordInterface[][] $r1, $r2;
        org.apache.poi.hssf.record.CellValueRecordInterface $r4;
        int $i0, $i1, i2, i3, i4;
        org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate r0;

        r0 := @this: org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate;

        i2 = 0;

        i3 = 0;

     label1:
        $r1 = r0.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: org.apache.poi.hssf.record.CellValueRecordInterface[][] records>;

        $i0 = lengthof $r1;

        if i3 >= $i0 goto label5;

        $r2 = r0.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: org.apache.poi.hssf.record.CellValueRecordInterface[][] records>;

        r3 = $r2[i3];

        if r3 == null goto label4;

        i4 = 0;

     label2:
        $i1 = lengthof r3;

        if i4 >= $i1 goto label4;

        $r4 = r3[i4];

        if $r4 == null goto label3;

        i2 = i2 + 1;

     label3:
        i4 = i4 + 1;

        goto label2;

     label4:
        i3 = i3 + 1;

        goto label1;

     label5:
        return i2;
    }

    public int getFirstCellNum()
    {
        int $i0;
        org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate r0;

        r0 := @this: org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate;

        $i0 = r0.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: int firstcell>;

        return $i0;
    }

    public int getLastCellNum()
    {
        int $i0;
        org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate r0;

        r0 := @this: org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate;

        $i0 = r0.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: int lastcell>;

        return $i0;
    }

    public void addMultipleBlanks(org.apache.poi.hssf.record.MulBlankRecord)
    {
        short $s3, $s5;
        org.apache.poi.hssf.record.MulBlankRecord r0;
        int $i0, $i1, $i2, $i4, i6;
        org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate r2;
        org.apache.poi.hssf.record.BlankRecord $r1;

        r2 := @this: org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate;

        r0 := @parameter0: org.apache.poi.hssf.record.MulBlankRecord;

        i6 = 0;

     label1:
        $i0 = virtualinvoke r0.<org.apache.poi.hssf.record.MulBlankRecord: int getNumColumns()>();

        if i6 >= $i0 goto label2;

        $r1 = new org.apache.poi.hssf.record.BlankRecord;

        specialinvoke $r1.<org.apache.poi.hssf.record.BlankRecord: void <init>()>();

        $i1 = virtualinvoke r0.<org.apache.poi.hssf.record.MulBlankRecord: int getFirstColumn()>();

        $i2 = i6 + $i1;

        $s3 = (short) $i2;

        virtualinvoke $r1.<org.apache.poi.hssf.record.BlankRecord: void setColumn(short)>($s3);

        $i4 = virtualinvoke r0.<org.apache.poi.hssf.record.MulBlankRecord: int getRow()>();

        virtualinvoke $r1.<org.apache.poi.hssf.record.BlankRecord: void setRow(int)>($i4);

        $s5 = virtualinvoke r0.<org.apache.poi.hssf.record.MulBlankRecord: short getXFAt(int)>(i6);

        virtualinvoke $r1.<org.apache.poi.hssf.record.BlankRecord: void setXFIndex(short)>($s5);

        virtualinvoke r2.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: void insertCell(org.apache.poi.hssf.record.CellValueRecordInterface)>($r1);

        i6 = i6 + 1;

        goto label1;

     label2:
        return;
    }

    public void construct(org.apache.poi.hssf.record.CellValueRecordInterface, org.apache.poi.hssf.model.RecordStream, org.apache.poi.hssf.record.aggregates.SharedValueManager)
    {
        org.apache.poi.hssf.record.aggregates.FormulaRecordAggregate $r5;
        org.apache.poi.hssf.record.Record $r7;
        org.apache.poi.hssf.record.StringRecord r8;
        org.apache.poi.hssf.model.RecordStream r3;
        org.apache.poi.hssf.record.aggregates.SharedValueManager r6;
        org.apache.poi.hssf.record.CellValueRecordInterface r0;
        org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate r1;
        java.lang.Class $r4;
        org.apache.poi.hssf.record.FormulaRecord r2;
        boolean $z0;

        r1 := @this: org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate;

        r0 := @parameter0: org.apache.poi.hssf.record.CellValueRecordInterface;

        r3 := @parameter1: org.apache.poi.hssf.model.RecordStream;

        r6 := @parameter2: org.apache.poi.hssf.record.aggregates.SharedValueManager;

        $z0 = r0 instanceof org.apache.poi.hssf.record.FormulaRecord;

        if $z0 == 0 goto label3;

        r2 = (org.apache.poi.hssf.record.FormulaRecord) r0;

        $r4 = virtualinvoke r3.<org.apache.poi.hssf.model.RecordStream: java.lang.Class peekNextClass()>();

        if $r4 != class "Lorg/apache/poi/hssf/record/StringRecord;" goto label1;

        $r7 = virtualinvoke r3.<org.apache.poi.hssf.model.RecordStream: org.apache.poi.hssf.record.Record getNext()>();

        r8 = (org.apache.poi.hssf.record.StringRecord) $r7;

        goto label2;

     label1:
        r8 = null;

     label2:
        $r5 = new org.apache.poi.hssf.record.aggregates.FormulaRecordAggregate;

        specialinvoke $r5.<org.apache.poi.hssf.record.aggregates.FormulaRecordAggregate: void <init>(org.apache.poi.hssf.record.FormulaRecord,org.apache.poi.hssf.record.StringRecord,org.apache.poi.hssf.record.aggregates.SharedValueManager)>(r2, r8, r6);

        virtualinvoke r1.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: void insertCell(org.apache.poi.hssf.record.CellValueRecordInterface)>($r5);

        goto label4;

     label3:
        virtualinvoke r1.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: void insertCell(org.apache.poi.hssf.record.CellValueRecordInterface)>(r0);

     label4:
        return;
    }

    public int getRowCellBlockSize(int, int)
    {
        org.apache.poi.hssf.record.CellValueRecordInterface[] $r3;
        org.apache.poi.hssf.record.CellValueRecordInterface[][] $r1, $r2;
        int i0, i1, $i2, $i3, i4, i5;
        org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate r0;

        r0 := @this: org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i4 = 0;

        i5 = i0;

     label1:
        if i5 > i1 goto label2;

        $r1 = r0.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: org.apache.poi.hssf.record.CellValueRecordInterface[][] records>;

        $i2 = lengthof $r1;

        if i5 >= $i2 goto label2;

        $r2 = r0.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: org.apache.poi.hssf.record.CellValueRecordInterface[][] records>;

        $r3 = $r2[i5];

        $i3 = staticinvoke <org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: int getRowSerializedSize(org.apache.poi.hssf.record.CellValueRecordInterface[])>($r3);

        i4 = i4 + $i3;

        i5 = i5 + 1;

        goto label1;

     label2:
        return i4;
    }

    public boolean rowHasCells(int)
    {
        org.apache.poi.hssf.record.CellValueRecordInterface[] r3;
        org.apache.poi.hssf.record.CellValueRecordInterface[][] $r1, $r2;
        org.apache.poi.hssf.record.CellValueRecordInterface $r4;
        int i0, $i1, $i2, i3;
        org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate r0;

        r0 := @this: org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: org.apache.poi.hssf.record.CellValueRecordInterface[][] records>;

        $i1 = lengthof $r1;

        if i0 < $i1 goto label1;

        return 0;

     label1:
        $r2 = r0.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: org.apache.poi.hssf.record.CellValueRecordInterface[][] records>;

        r3 = $r2[i0];

        if r3 != null goto label2;

        return 0;

     label2:
        i3 = 0;

     label3:
        $i2 = lengthof r3;

        if i3 >= $i2 goto label5;

        $r4 = r3[i3];

        if $r4 == null goto label4;

        return 1;

     label4:
        i3 = i3 + 1;

        goto label3;

     label5:
        return 0;
    }

    private static int getRowSerializedSize(org.apache.poi.hssf.record.CellValueRecordInterface[])
    {
        org.apache.poi.hssf.record.CellValueRecordInterface[] r0;
        org.apache.poi.hssf.record.CellValueRecordInterface $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        org.apache.poi.hssf.record.RecordBase r2;

        r0 := @parameter0: org.apache.poi.hssf.record.CellValueRecordInterface[];

        if r0 != null goto label1;

        return 0;

     label1:
        i6 = 0;

        i7 = 0;

     label2:
        $i0 = lengthof r0;

        if i7 >= $i0 goto label6;

        $r1 = r0[i7];

        r2 = (org.apache.poi.hssf.record.RecordBase) $r1;

        if r2 != null goto label3;

        goto label5;

     label3:
        $i1 = staticinvoke <org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: int countBlanks(org.apache.poi.hssf.record.CellValueRecordInterface[],int)>(r0, i7);

        if $i1 <= 1 goto label4;

        $i3 = 2 * $i1;

        $i4 = 10 + $i3;

        i6 = i6 + $i4;

        $i5 = $i1 - 1;

        i7 = i7 + $i5;

        goto label5;

     label4:
        $i2 = virtualinvoke r2.<org.apache.poi.hssf.record.RecordBase: int getRecordSize()>();

        i6 = i6 + $i2;

     label5:
        i7 = i7 + 1;

        goto label2;

     label6:
        return i6;
    }

    public void visitCellsForRow(int, org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor)
    {
        org.apache.poi.hssf.record.CellValueRecordInterface[] r2;
        org.apache.poi.hssf.record.CellValueRecordInterface $r3;
        int i0, $i1, $i2, $i3, i4;
        org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate r0;
        java.lang.String $r14;
        boolean $z0;
        org.apache.poi.hssf.record.Record $r6;
        org.apache.poi.hssf.record.aggregates.RecordAggregate r7;
        java.lang.IllegalArgumentException $r9;
        org.apache.poi.hssf.record.CellValueRecordInterface[][] $r1;
        org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor r5;
        org.apache.poi.hssf.record.MulBlankRecord $r8;
        java.lang.StringBuilder $r10, $r11, $r12, $r13;
        org.apache.poi.hssf.record.RecordBase r4;

        r0 := @this: org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate;

        i0 := @parameter0: int;

        r5 := @parameter1: org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor;

        $r1 = r0.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: org.apache.poi.hssf.record.CellValueRecordInterface[][] records>;

        r2 = $r1[i0];

        if r2 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Row [");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] is empty");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r9;

     label1:
        i4 = 0;

     label2:
        $i1 = lengthof r2;

        if i4 >= $i1 goto label7;

        $r3 = r2[i4];

        r4 = (org.apache.poi.hssf.record.RecordBase) $r3;

        if r4 != null goto label3;

        goto label6;

     label3:
        $i2 = staticinvoke <org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: int countBlanks(org.apache.poi.hssf.record.CellValueRecordInterface[],int)>(r2, i4);

        if $i2 <= 1 goto label4;

        $r8 = specialinvoke r0.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: org.apache.poi.hssf.record.MulBlankRecord createMBR(org.apache.poi.hssf.record.CellValueRecordInterface[],int,int)>(r2, i4, $i2);

        interfaceinvoke r5.<org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor: void visitRecord(org.apache.poi.hssf.record.Record)>($r8);

        $i3 = $i2 - 1;

        i4 = i4 + $i3;

        goto label6;

     label4:
        $z0 = r4 instanceof org.apache.poi.hssf.record.aggregates.RecordAggregate;

        if $z0 == 0 goto label5;

        r7 = (org.apache.poi.hssf.record.aggregates.RecordAggregate) r4;

        virtualinvoke r7.<org.apache.poi.hssf.record.aggregates.RecordAggregate: void visitContainedRecords(org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor)>(r5);

        goto label6;

     label5:
        $r6 = (org.apache.poi.hssf.record.Record) r4;

        interfaceinvoke r5.<org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor: void visitRecord(org.apache.poi.hssf.record.Record)>($r6);

     label6:
        i4 = i4 + 1;

        goto label2;

     label7:
        return;
    }

    private static int countBlanks(org.apache.poi.hssf.record.CellValueRecordInterface[], int)
    {
        org.apache.poi.hssf.record.CellValueRecordInterface[] r0;
        org.apache.poi.hssf.record.CellValueRecordInterface r1;
        int i0, $i1, $i2, i3;
        boolean $z0;

        r0 := @parameter0: org.apache.poi.hssf.record.CellValueRecordInterface[];

        i0 := @parameter1: int;

        i3 = i0;

     label1:
        $i1 = lengthof r0;

        if i3 >= $i1 goto label3;

        r1 = r0[i3];

        $z0 = r1 instanceof org.apache.poi.hssf.record.BlankRecord;

        if $z0 != 0 goto label2;

        goto label3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $i2 = i3 - i0;

        return $i2;
    }

    private org.apache.poi.hssf.record.MulBlankRecord createMBR(org.apache.poi.hssf.record.CellValueRecordInterface[], int, int)
    {
        org.apache.poi.hssf.record.CellValueRecordInterface[] r1;
        short $s5;
        org.apache.poi.hssf.record.MulBlankRecord $r3;
        org.apache.poi.hssf.record.CellValueRecordInterface $r2, $r4;
        int i0, $i1, i2, $i3, $i4, i6;
        org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate r6;
        short[] r0;
        org.apache.poi.hssf.record.BlankRecord $r5;

        r6 := @this: org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate;

        r1 := @parameter0: org.apache.poi.hssf.record.CellValueRecordInterface[];

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        r0 = newarray (short)[i0];

        i6 = 0;

     label1:
        $i1 = lengthof r0;

        if i6 >= $i1 goto label2;

        $i4 = i2 + i6;

        $r4 = r1[$i4];

        $r5 = (org.apache.poi.hssf.record.BlankRecord) $r4;

        $s5 = virtualinvoke $r5.<org.apache.poi.hssf.record.BlankRecord: short getXFIndex()>();

        r0[i6] = $s5;

        i6 = i6 + 1;

        goto label1;

     label2:
        $r2 = r1[i2];

        $i3 = interfaceinvoke $r2.<org.apache.poi.hssf.record.CellValueRecordInterface: int getRow()>();

        $r3 = new org.apache.poi.hssf.record.MulBlankRecord;

        specialinvoke $r3.<org.apache.poi.hssf.record.MulBlankRecord: void <init>(int,int,short[])>($i3, i2, r0);

        return $r3;
    }

    public void updateFormulasAfterRowShift(org.apache.poi.ss.formula.FormulaShifter, int)
    {
        org.apache.poi.hssf.record.aggregates.FormulaRecordAggregate r5, $r7;
        org.apache.poi.hssf.record.CellValueRecordInterface[] r3;
        org.apache.poi.hssf.record.CellValueRecordInterface r4;
        org.apache.poi.ss.formula.ptg.Ptg[] $r6;
        int $i0, $i1, i2, i3, i4;
        org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate r0;
        org.apache.poi.ss.formula.FormulaShifter r9;
        boolean $z0, $z1;
        org.apache.poi.hssf.record.CellValueRecordInterface[][] $r1, $r2;
        org.apache.poi.hssf.record.FormulaRecord $r8;

        r0 := @this: org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate;

        r9 := @parameter0: org.apache.poi.ss.formula.FormulaShifter;

        i2 := @parameter1: int;

        i3 = 0;

     label1:
        $r1 = r0.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: org.apache.poi.hssf.record.CellValueRecordInterface[][] records>;

        $i0 = lengthof $r1;

        if i3 >= $i0 goto label6;

        $r2 = r0.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: org.apache.poi.hssf.record.CellValueRecordInterface[][] records>;

        r3 = $r2[i3];

        if r3 != null goto label2;

        goto label5;

     label2:
        i4 = 0;

     label3:
        $i1 = lengthof r3;

        if i4 >= $i1 goto label5;

        r4 = r3[i4];

        $z0 = r4 instanceof org.apache.poi.hssf.record.aggregates.FormulaRecordAggregate;

        if $z0 == 0 goto label4;

        r5 = (org.apache.poi.hssf.record.aggregates.FormulaRecordAggregate) r4;

        $r6 = virtualinvoke r5.<org.apache.poi.hssf.record.aggregates.FormulaRecordAggregate: org.apache.poi.ss.formula.ptg.Ptg[] getFormulaTokens()>();

        $r7 = (org.apache.poi.hssf.record.aggregates.FormulaRecordAggregate) r4;

        $r8 = virtualinvoke $r7.<org.apache.poi.hssf.record.aggregates.FormulaRecordAggregate: org.apache.poi.hssf.record.FormulaRecord getFormulaRecord()>();

        virtualinvoke $r8.<org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.ss.formula.ptg.Ptg[] getParsedExpression()>();

        $z1 = virtualinvoke r9.<org.apache.poi.ss.formula.FormulaShifter: boolean adjustFormula(org.apache.poi.ss.formula.ptg.Ptg[],int)>($r6, i2);

        if $z1 == 0 goto label4;

        virtualinvoke r5.<org.apache.poi.hssf.record.aggregates.FormulaRecordAggregate: void setParsedExpression(org.apache.poi.ss.formula.ptg.Ptg[])>($r6);

     label4:
        i4 = i4 + 1;

        goto label3;

     label5:
        i3 = i3 + 1;

        goto label1;

     label6:
        return;
    }

    public java.util.Iterator iterator()
    {
        org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate$ValueIterator $r0;
        org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate r1;

        r1 := @this: org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate;

        $r0 = new org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate$ValueIterator;

        specialinvoke $r0.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate$ValueIterator: void <init>(org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate)>(r1);

        return $r0;
    }

    public org.apache.poi.hssf.record.CellValueRecordInterface[] getValueRecords()
    {
        org.apache.poi.hssf.record.CellValueRecordInterface[] r4, r6;
        java.util.ArrayList $r0;
        org.apache.poi.hssf.record.CellValueRecordInterface[][] $r2, $r3;
        org.apache.poi.hssf.record.CellValueRecordInterface r5;
        int $i0, $i1, $i2, i3, i4;
        org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate r1;

        r1 := @this: org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        i3 = 0;

     label1:
        $r2 = r1.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: org.apache.poi.hssf.record.CellValueRecordInterface[][] records>;

        $i0 = lengthof $r2;

        if i3 >= $i0 goto label6;

        $r3 = r1.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: org.apache.poi.hssf.record.CellValueRecordInterface[][] records>;

        r4 = $r3[i3];

        if r4 != null goto label2;

        goto label5;

     label2:
        i4 = 0;

     label3:
        $i2 = lengthof r4;

        if i4 >= $i2 goto label5;

        r5 = r4[i4];

        if r5 == null goto label4;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r5);

     label4:
        i4 = i4 + 1;

        goto label3;

     label5:
        i3 = i3 + 1;

        goto label1;

     label6:
        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        r6 = newarray (org.apache.poi.hssf.record.CellValueRecordInterface)[$i1];

        interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r6);

        return r6;
    }

    public java.lang.Object clone()
    {
        org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate r1;
        java.lang.RuntimeException $r0;

        r1 := @this: org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("clone() should not be called.  ValueRecordsAggregate should be copied via Sheet.cloneSheet()");

        throw $r0;
    }

    static org.apache.poi.hssf.record.CellValueRecordInterface[][] access$000(org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate)
    {
        org.apache.poi.hssf.record.CellValueRecordInterface[][] $r1;
        org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate r0;

        r0 := @parameter0: org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate;

        $r1 = r0.<org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: org.apache.poi.hssf.record.CellValueRecordInterface[][] records>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: int INDEX_NOT_SET> = -1;

        <org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate: int MAX_ROW_INDEX> = 65535;

        return;
    }
}
