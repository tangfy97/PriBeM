public final class com.mycila.inject.internal.guava.base.Objects$ToStringHelper extends java.lang.Object
{
    private final java.lang.StringBuilder builder;
    private boolean needsSeparator;

    private void <init>(java.lang.String)
    {
        java.lang.StringBuilder $r2, $r3, $r4;
        com.mycila.inject.internal.guava.base.Objects$ToStringHelper r0;
        java.lang.String r1;

        r0 := @this: com.mycila.inject.internal.guava.base.Objects$ToStringHelper;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mycila.inject.internal.guava.base.Objects$ToStringHelper: boolean needsSeparator> = 0;

        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(32);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        r0.<com.mycila.inject.internal.guava.base.Objects$ToStringHelper: java.lang.StringBuilder builder> = $r4;

        return;
    }

    public com.mycila.inject.internal.guava.base.Objects$ToStringHelper add(java.lang.String, java.lang.Object)
    {
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.Object r5;
        java.lang.String r0;
        com.mycila.inject.internal.guava.base.Objects$ToStringHelper r1;

        r1 := @this: com.mycila.inject.internal.guava.base.Objects$ToStringHelper;

        r0 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Object;

        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r2 = specialinvoke r1.<com.mycila.inject.internal.guava.base.Objects$ToStringHelper: java.lang.StringBuilder maybeAppendSeparator()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        return r1;
    }

    public com.mycila.inject.internal.guava.base.Objects$ToStringHelper addValue(java.lang.Object)
    {
        java.lang.StringBuilder $r1;
        java.lang.Object r2;
        com.mycila.inject.internal.guava.base.Objects$ToStringHelper r0;

        r0 := @this: com.mycila.inject.internal.guava.base.Objects$ToStringHelper;

        r2 := @parameter0: java.lang.Object;

        $r1 = specialinvoke r0.<com.mycila.inject.internal.guava.base.Objects$ToStringHelper: java.lang.StringBuilder maybeAppendSeparator()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        return r0;
    }

    public java.lang.String toString()
    {
        java.lang.Throwable $r6;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8;
        com.mycila.inject.internal.guava.base.Objects$ToStringHelper r0;
        java.lang.String $r3;

        r0 := @this: com.mycila.inject.internal.guava.base.Objects$ToStringHelper;

     label1:
        $r1 = r0.<com.mycila.inject.internal.guava.base.Objects$ToStringHelper: java.lang.StringBuilder builder>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r5 = r0.<com.mycila.inject.internal.guava.base.Objects$ToStringHelper: java.lang.StringBuilder builder>;

        $r4 = r0.<com.mycila.inject.internal.guava.base.Objects$ToStringHelper: java.lang.StringBuilder builder>;

        $i0 = virtualinvoke $r4.<java.lang.StringBuilder: int length()>();

        $i1 = $i0 - 1;

        virtualinvoke $r5.<java.lang.StringBuilder: void setLength(int)>($i1);

        return $r3;

     label3:
        $r6 := @caughtexception;

     label4:
        $r8 = r0.<com.mycila.inject.internal.guava.base.Objects$ToStringHelper: java.lang.StringBuilder builder>;

        $r7 = r0.<com.mycila.inject.internal.guava.base.Objects$ToStringHelper: java.lang.StringBuilder builder>;

        $i2 = virtualinvoke $r7.<java.lang.StringBuilder: int length()>();

        $i3 = $i2 - 1;

        virtualinvoke $r8.<java.lang.StringBuilder: void setLength(int)>($i3);

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private java.lang.StringBuilder maybeAppendSeparator()
    {
        java.lang.StringBuilder $r1, $r2, $r3;
        com.mycila.inject.internal.guava.base.Objects$ToStringHelper r0;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.base.Objects$ToStringHelper;

        $z0 = r0.<com.mycila.inject.internal.guava.base.Objects$ToStringHelper: boolean needsSeparator>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.mycila.inject.internal.guava.base.Objects$ToStringHelper: java.lang.StringBuilder builder>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        return $r3;

     label1:
        r0.<com.mycila.inject.internal.guava.base.Objects$ToStringHelper: boolean needsSeparator> = 1;

        $r1 = r0.<com.mycila.inject.internal.guava.base.Objects$ToStringHelper: java.lang.StringBuilder builder>;

        return $r1;
    }

    void <init>(java.lang.String, com.mycila.inject.internal.guava.base.Objects$1)
    {
        com.mycila.inject.internal.guava.base.Objects$1 r2;
        com.mycila.inject.internal.guava.base.Objects$ToStringHelper r0;
        java.lang.String r1;

        r0 := @this: com.mycila.inject.internal.guava.base.Objects$ToStringHelper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.mycila.inject.internal.guava.base.Objects$1;

        specialinvoke r0.<com.mycila.inject.internal.guava.base.Objects$ToStringHelper: void <init>(java.lang.String)>(r1);

        return;
    }
}
