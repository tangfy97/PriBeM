public class org.apache.velocity.runtime.RuntimeInstance extends java.lang.Object implements org.apache.velocity.runtime.RuntimeConstants, org.apache.velocity.runtime.RuntimeServices
{
    private org.apache.velocity.runtime.VelocimacroFactory vmFactory;
    private org.apache.velocity.runtime.log.Log log;
    private org.apache.velocity.runtime.ParserPool parserPool;
    private boolean initializing;
    private volatile boolean initialized;
    private org.apache.commons.collections.ExtendedProperties overridingProperties;
    private java.util.Map runtimeDirectives;
    private java.util.Map runtimeDirectivesShared;
    private org.apache.commons.collections.ExtendedProperties configuration;
    private org.apache.velocity.runtime.resource.ResourceManager resourceManager;
    private org.apache.velocity.app.event.EventCartridge eventCartridge;
    private org.apache.velocity.util.introspection.Introspector introspector;
    private java.lang.String evaluateScopeName;
    private boolean provideEvaluateScope;
    private java.util.Map applicationAttributes;
    private org.apache.velocity.util.introspection.Uberspect uberSpect;
    private java.lang.String encoding;
    static java.lang.Class class$org$apache$velocity$util$introspection$Uberspect;
    static java.lang.Class class$org$apache$velocity$runtime$resource$ResourceManager;
    static java.lang.Class class$org$apache$velocity$app$event$ReferenceInsertionEventHandler;
    static java.lang.Class class$org$apache$velocity$app$event$NullSetEventHandler;
    static java.lang.Class class$org$apache$velocity$app$event$MethodExceptionEventHandler;
    static java.lang.Class class$org$apache$velocity$app$event$IncludeEventHandler;
    static java.lang.Class class$org$apache$velocity$app$event$InvalidReferenceEventHandler;
    static java.lang.Class class$org$apache$velocity$runtime$directive$Directive;
    static java.lang.Class class$org$apache$velocity$runtime$ParserPool;

    public void <init>()
    {
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.util.HashMap $r7;
        org.apache.commons.collections.ExtendedProperties $r3;
        org.apache.velocity.runtime.log.Log $r1, $r6;
        org.apache.velocity.runtime.VelocimacroFactory $r4;
        org.apache.velocity.util.introspection.Introspector $r5;
        java.util.Hashtable $r2;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.VelocimacroFactory vmFactory> = null;

        $r1 = new org.apache.velocity.runtime.log.Log;

        specialinvoke $r1.<org.apache.velocity.runtime.log.Log: void <init>()>();

        r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log log> = $r1;

        r0.<org.apache.velocity.runtime.RuntimeInstance: boolean initializing> = 0;

        r0.<org.apache.velocity.runtime.RuntimeInstance: boolean initialized> = 0;

        r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties overridingProperties> = null;

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        r0.<org.apache.velocity.runtime.RuntimeInstance: java.util.Map runtimeDirectives> = $r2;

        $r3 = new org.apache.commons.collections.ExtendedProperties;

        specialinvoke $r3.<org.apache.commons.collections.ExtendedProperties: void <init>()>();

        r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties configuration> = $r3;

        r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.resource.ResourceManager resourceManager> = null;

        r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.app.event.EventCartridge eventCartridge> = null;

        r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.util.introspection.Introspector introspector> = null;

        r0.<org.apache.velocity.runtime.RuntimeInstance: java.lang.String evaluateScopeName> = "evaluate";

        r0.<org.apache.velocity.runtime.RuntimeInstance: boolean provideEvaluateScope> = 0;

        r0.<org.apache.velocity.runtime.RuntimeInstance: java.util.Map applicationAttributes> = null;

        $r4 = new org.apache.velocity.runtime.VelocimacroFactory;

        specialinvoke $r4.<org.apache.velocity.runtime.VelocimacroFactory: void <init>(org.apache.velocity.runtime.RuntimeServices)>(r0);

        r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.VelocimacroFactory vmFactory> = $r4;

        $r5 = new org.apache.velocity.util.introspection.Introspector;

        $r6 = virtualinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log getLog()>();

        specialinvoke $r5.<org.apache.velocity.util.introspection.Introspector: void <init>(org.apache.velocity.runtime.log.Log)>($r6);

        r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.util.introspection.Introspector introspector> = $r5;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r0.<org.apache.velocity.runtime.RuntimeInstance: java.util.Map applicationAttributes> = $r7;

        return;
    }

    public synchronized void init()
    {
        org.apache.velocity.runtime.RuntimeInstance r0;
        org.apache.velocity.runtime.log.Log $r1, $r2, $r3, $r4, $r6;
        org.apache.velocity.runtime.VelocimacroFactory $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        $z0 = r0.<org.apache.velocity.runtime.RuntimeInstance: boolean initialized>;

        if $z0 != 0 goto label1;

        $z1 = r0.<org.apache.velocity.runtime.RuntimeInstance: boolean initializing>;

        if $z1 != 0 goto label1;

        $r1 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r1.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>("Initializing Velocity, Calling init()...");

        r0.<org.apache.velocity.runtime.RuntimeInstance: boolean initializing> = 1;

        $r2 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r2.<org.apache.velocity.runtime.log.Log: void trace(java.lang.Object)>("*******************************************************************");

        $r3 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r3.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>("Starting Apache Velocity v1.7 (compiled: 2010-11-19 12:14:37)");

        $r4 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r4.<org.apache.velocity.runtime.log.Log: void trace(java.lang.Object)>("RuntimeInstance initializing.");

        specialinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: void initializeProperties()>();

        specialinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: void initializeLog()>();

        specialinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: void initializeResourceManager()>();

        specialinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: void initializeDirectives()>();

        specialinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: void initializeEventHandlers()>();

        specialinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: void initializeParserPool()>();

        specialinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: void initializeIntrospection()>();

        specialinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: void initializeEvaluateScopeSettings()>();

        $r5 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.VelocimacroFactory vmFactory>;

        virtualinvoke $r5.<org.apache.velocity.runtime.VelocimacroFactory: void initVelocimacro()>();

        $r6 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r6.<org.apache.velocity.runtime.log.Log: void trace(java.lang.Object)>("RuntimeInstance successfully initialized.");

        r0.<org.apache.velocity.runtime.RuntimeInstance: boolean initialized> = 1;

        r0.<org.apache.velocity.runtime.RuntimeInstance: boolean initializing> = 0;

     label1:
        return;
    }

    public boolean isInitialized()
    {
        org.apache.velocity.runtime.RuntimeInstance r0;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        $z0 = r0.<org.apache.velocity.runtime.RuntimeInstance: boolean initialized>;

        return $z0;
    }

    private void requireInitialization()
    {
        org.apache.velocity.runtime.log.Log $r2;
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.RuntimeException $r3;
        java.lang.Exception $r1;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        $z0 = r0.<org.apache.velocity.runtime.RuntimeInstance: boolean initialized>;

        if $z0 != 0 goto label4;

     label1:
        virtualinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: void init()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log getLog()>();

        virtualinvoke $r2.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>("Could not auto-initialize Velocity", $r1);

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Velocity could not be initialized!", $r1);

        throw $r3;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void initializeIntrospection()
    {
        org.apache.velocity.runtime.RuntimeInstance r0;
        org.apache.velocity.util.introspection.LinkingUberspector $r10;
        java.lang.InstantiationException $r35;
        org.apache.velocity.exception.VelocityException $r5, $r27, $r29, $r36, $r49;
        boolean $z0, $z1, $z2, $z3;
        org.apache.velocity.util.introspection.ChainableUberspector $r13;
        java.lang.IllegalAccessException $r28;
        org.apache.velocity.util.RuntimeServicesAware $r14;
        org.apache.velocity.util.introspection.UberspectLoggable $r15;
        org.apache.velocity.util.introspection.Uberspect $r3, $r6, $r9, $r11, $r12, r51;
        java.lang.String[] $r2;
        java.lang.StringBuffer $r17, $r18, $r19, $r20, $r23, $r24, $r30, $r31, $r32, $r33, $r37, $r38, $r39, $r40, $r43, $r44, $r45, $r46;
        int $i0, i1;
        java.lang.String r7, $r22, $r25, $r34, $r41, $r47;
        org.apache.commons.collections.ExtendedProperties $r1;
        org.apache.velocity.runtime.log.Log $r4, $r16, $r26, $r48;
        java.lang.Object $r8;
        java.lang.Class $r21, $r50;
        java.lang.ClassNotFoundException $r42;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        $r1 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties configuration>;

        $r2 = virtualinvoke $r1.<org.apache.commons.collections.ExtendedProperties: java.lang.String[] getStringArray(java.lang.String)>("runtime.introspector.uberspect");

        i1 = 0;

     label01:
        $i0 = lengthof $r2;

        if i1 >= $i0 goto label16;

        r7 = $r2[i1];

     label02:
        $r8 = staticinvoke <org.apache.velocity.util.ClassUtils: java.lang.Object getNewInstance(java.lang.String)>(r7);

     label03:
        goto label07;

     label04:
        $r42 := @caughtexception;

        $r43 = new java.lang.StringBuffer;

        specialinvoke $r43.<java.lang.StringBuffer: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The specified class for Uberspect (");

        $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") does not exist or is not accessible to the current classloader.");

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.String toString()>();

        $r48 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r48.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>($r47);

        $r49 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r49.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r47, $r42);

        throw $r49;

     label05:
        $r35 := @caughtexception;

        $r36 = new org.apache.velocity.exception.VelocityException;

        $r37 = new java.lang.StringBuffer;

        specialinvoke $r37.<java.lang.StringBuffer: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not instantiate class \'");

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r36.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r41, $r35);

        throw $r36;

     label06:
        $r28 := @caughtexception;

        $r29 = new org.apache.velocity.exception.VelocityException;

        $r30 = new java.lang.StringBuffer;

        specialinvoke $r30.<java.lang.StringBuffer: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot access class \'");

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r29.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r34, $r28);

        throw $r29;

     label07:
        $z0 = $r8 instanceof org.apache.velocity.util.introspection.Uberspect;

        if $z0 != 0 goto label10;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The specified class for Uberspect (");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") does not implement ");

        $r21 = <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$org$apache$velocity$util$introspection$Uberspect>;

        if $r21 != null goto label08;

        $r50 = staticinvoke <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$(java.lang.String)>("org.apache.velocity.util.introspection.Uberspect");

        <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$org$apache$velocity$util$introspection$Uberspect> = $r50;

        goto label09;

     label08:
        $r50 = <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$org$apache$velocity$util$introspection$Uberspect>;

     label09:
        $r22 = virtualinvoke $r50.<java.lang.Class: java.lang.String getName()>();

        $r23 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; Velocity is not initialized correctly.");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        $r26 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r26.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>($r25);

        $r27 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r27.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String)>($r25);

        throw $r27;

     label10:
        r51 = (org.apache.velocity.util.introspection.Uberspect) $r8;

        $z1 = r51 instanceof org.apache.velocity.util.introspection.UberspectLoggable;

        if $z1 == 0 goto label11;

        $r15 = (org.apache.velocity.util.introspection.UberspectLoggable) r51;

        $r16 = virtualinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log getLog()>();

        interfaceinvoke $r15.<org.apache.velocity.util.introspection.UberspectLoggable: void setLog(org.apache.velocity.runtime.log.Log)>($r16);

     label11:
        $z2 = r51 instanceof org.apache.velocity.util.RuntimeServicesAware;

        if $z2 == 0 goto label12;

        $r14 = (org.apache.velocity.util.RuntimeServicesAware) r51;

        interfaceinvoke $r14.<org.apache.velocity.util.RuntimeServicesAware: void setRuntimeServices(org.apache.velocity.runtime.RuntimeServices)>(r0);

     label12:
        $r9 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.util.introspection.Uberspect uberSpect>;

        if $r9 != null goto label13;

        r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.util.introspection.Uberspect uberSpect> = r51;

        goto label15;

     label13:
        $z3 = r51 instanceof org.apache.velocity.util.introspection.ChainableUberspector;

        if $z3 == 0 goto label14;

        $r13 = (org.apache.velocity.util.introspection.ChainableUberspector) r51;

        $r12 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.util.introspection.Uberspect uberSpect>;

        interfaceinvoke $r13.<org.apache.velocity.util.introspection.ChainableUberspector: void wrap(org.apache.velocity.util.introspection.Uberspect)>($r12);

        r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.util.introspection.Uberspect uberSpect> = r51;

        goto label15;

     label14:
        $r10 = new org.apache.velocity.util.introspection.LinkingUberspector;

        $r11 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.util.introspection.Uberspect uberSpect>;

        specialinvoke $r10.<org.apache.velocity.util.introspection.LinkingUberspector: void <init>(org.apache.velocity.util.introspection.Uberspect,org.apache.velocity.util.introspection.Uberspect)>($r11, r51);

        r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.util.introspection.Uberspect uberSpect> = $r10;

     label15:
        i1 = i1 + 1;

        goto label01;

     label16:
        $r3 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.util.introspection.Uberspect uberSpect>;

        if $r3 == null goto label17;

        $r6 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.util.introspection.Uberspect uberSpect>;

        interfaceinvoke $r6.<org.apache.velocity.util.introspection.Uberspect: void init()>();

        goto label18;

     label17:
        $r4 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r4.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>("It appears that no class was specified as the Uberspect.  Please ensure that all configuration information is correct.");

        $r5 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r5.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String)>("It appears that no class was specified as the Uberspect.  Please ensure that all configuration information is correct.");

        throw $r5;

     label18:
        return;

        catch java.lang.ClassNotFoundException from label02 to label03 with label04;
        catch java.lang.InstantiationException from label02 to label03 with label05;
        catch java.lang.IllegalAccessException from label02 to label03 with label06;
    }

    private void setDefaultProperties()
    {
        java.lang.Throwable $r18;
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.StringBuffer $r5, $r7, $r10;
        java.lang.String $r9, $r11;
        boolean $z0;
        java.io.IOException $r12, $r15, $r19;
        java.lang.RuntimeException $r14, $r17, $r21;
        org.apache.commons.collections.ExtendedProperties $r3;
        java.io.File $r8;
        org.apache.velocity.runtime.log.Log $r4, $r6, $r13, $r16, $r20;
        java.lang.Class $r1;
        java.io.InputStream $r2, r22;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r22 = null;

     label01:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("/org/apache/velocity/runtime/defaults/velocity.properties");

        r22 = $r2;

        $r3 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties configuration>;

        virtualinvoke $r3.<org.apache.commons.collections.ExtendedProperties: void load(java.io.InputStream)>($r2);

        $r4 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log log>;

        $z0 = virtualinvoke $r4.<org.apache.velocity.runtime.log.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label02;

        $r6 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log log>;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Default Properties File: ");

        $r8 = new java.io.File;

        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>("org/apache/velocity/runtime/defaults/velocity.properties");

        $r9 = virtualinvoke $r8.<java.io.File: java.lang.String getPath()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r6.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>($r11);

     label02:
        goto label08;

     label03:
        goto label07;

     label04:
        $r19 := @caughtexception;

        $r20 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r20.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>("Cannot get Velocity Runtime default properties!", $r19);

        $r21 = new java.lang.RuntimeException;

        specialinvoke $r21.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Cannot get Velocity Runtime default properties!", $r19);

        throw $r21;

     label05:
        $r18 := @caughtexception;

        goto label12;

     label06:
        throw $r18;

     label07:
        return;

     label08:
        if $r2 == null goto label09;

        virtualinvoke $r2.<java.io.InputStream: void close()>();

     label09:
        goto label11;

     label10:
        $r15 := @caughtexception;

        $r16 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r16.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>("Cannot close Velocity Runtime default properties!", $r15);

        $r17 = new java.lang.RuntimeException;

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Cannot close Velocity Runtime default properties!", $r15);

        throw $r17;

     label11:
        goto label03;

     label12:
        if r22 == null goto label13;

        virtualinvoke r22.<java.io.InputStream: void close()>();

     label13:
        goto label15;

     label14:
        $r12 := @caughtexception;

        $r13 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r13.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>("Cannot close Velocity Runtime default properties!", $r12);

        $r14 = new java.lang.RuntimeException;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Cannot close Velocity Runtime default properties!", $r12);

        throw $r14;

     label15:
        goto label06;

        catch java.io.IOException from label01 to label02 with label04;
        catch java.lang.Throwable from label01 to label03 with label05;
        catch java.lang.Throwable from label04 to label06 with label05;
        catch java.io.IOException from label08 to label09 with label10;
        catch java.io.IOException from label12 to label13 with label14;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.Object r3;
        java.lang.String r2;
        org.apache.commons.collections.ExtendedProperties $r1, $r4, $r5;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        $r1 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties overridingProperties>;

        if $r1 != null goto label1;

        $r5 = new org.apache.commons.collections.ExtendedProperties;

        specialinvoke $r5.<org.apache.commons.collections.ExtendedProperties: void <init>()>();

        r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties overridingProperties> = $r5;

     label1:
        $r4 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties overridingProperties>;

        virtualinvoke $r4.<org.apache.commons.collections.ExtendedProperties: void setProperty(java.lang.String,java.lang.Object)>(r2, r3);

        return;
    }

    public void setProperties(java.lang.String)
    {
        java.util.Enumeration $r2;
        org.apache.velocity.runtime.RuntimeInstance r5;
        java.io.IOException $r7;
        org.apache.commons.collections.ExtendedProperties $r0;
        java.lang.StringBuffer $r9, $r10, $r11, $r12;
        java.lang.Object $r3, $r6;
        java.lang.String r1, $r4, $r13;
        org.apache.velocity.exception.VelocityException $r8;
        boolean $z0;

        r5 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r1 := @parameter0: java.lang.String;

     label1:
        $r0 = new org.apache.commons.collections.ExtendedProperties;

        specialinvoke $r0.<org.apache.commons.collections.ExtendedProperties: void <init>(java.lang.String)>(r1);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = new org.apache.velocity.exception.VelocityException;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error reading properties from \'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r8.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r13, $r7);

        throw $r8;

     label4:
        $r2 = virtualinvoke $r0.<org.apache.commons.collections.ExtendedProperties: java.util.Enumeration keys()>();

     label5:
        $z0 = interfaceinvoke $r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label6;

        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r6 = virtualinvoke $r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Object get(java.lang.Object)>($r4);

        virtualinvoke r5.<org.apache.velocity.runtime.RuntimeInstance: void setProperty(java.lang.String,java.lang.Object)>($r4, $r6);

        goto label5;

     label6:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void setProperties(java.util.Properties)
    {
        java.util.Properties r0;
        java.util.Enumeration $r1;
        java.lang.Object $r2, $r5;
        org.apache.velocity.runtime.RuntimeInstance r4;
        java.lang.String $r3;
        boolean $z0;

        r4 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r0 := @parameter0: java.util.Properties;

        $r1 = virtualinvoke r0.<java.util.Properties: java.util.Enumeration keys()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $r5 = virtualinvoke r0.<java.util.Properties: java.lang.Object get(java.lang.Object)>($r3);

        virtualinvoke r4.<org.apache.velocity.runtime.RuntimeInstance: void setProperty(java.lang.String,java.lang.Object)>($r3, $r5);

        goto label1;

     label2:
        return;
    }

    public void setConfiguration(org.apache.commons.collections.ExtendedProperties)
    {
        org.apache.velocity.runtime.RuntimeInstance r0;
        org.apache.commons.collections.ExtendedProperties $r1, r2, $r3, $r4;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r2 := @parameter0: org.apache.commons.collections.ExtendedProperties;

        $r1 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties overridingProperties>;

        if $r1 != null goto label1;

        r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties overridingProperties> = r2;

        goto label2;

     label1:
        $r3 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties overridingProperties>;

        if $r3 == r2 goto label2;

        $r4 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties overridingProperties>;

        virtualinvoke $r4.<org.apache.commons.collections.ExtendedProperties: void combine(org.apache.commons.collections.ExtendedProperties)>(r2);

     label2:
        return;
    }

    public void addProperty(java.lang.String, java.lang.Object)
    {
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.Object r3;
        java.lang.String r2;
        org.apache.commons.collections.ExtendedProperties $r1, $r4, $r5;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        $r1 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties overridingProperties>;

        if $r1 != null goto label1;

        $r5 = new org.apache.commons.collections.ExtendedProperties;

        specialinvoke $r5.<org.apache.commons.collections.ExtendedProperties: void <init>()>();

        r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties overridingProperties> = $r5;

     label1:
        $r4 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties overridingProperties>;

        virtualinvoke $r4.<org.apache.commons.collections.ExtendedProperties: void addProperty(java.lang.String,java.lang.Object)>(r2, r3);

        return;
    }

    public void clearProperty(java.lang.String)
    {
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.String r2;
        org.apache.commons.collections.ExtendedProperties $r1, $r3;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties overridingProperties>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties overridingProperties>;

        virtualinvoke $r3.<org.apache.commons.collections.ExtendedProperties: void clearProperty(java.lang.String)>(r2);

     label1:
        return;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        org.apache.velocity.runtime.RuntimeInstance r0;
        org.apache.commons.collections.ExtendedProperties $r4, $r5, $r6;
        java.lang.Object r7;
        java.lang.String $r1, $r2, r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r3 := @parameter0: java.lang.String;

        r7 = null;

        $z0 = r0.<org.apache.velocity.runtime.RuntimeInstance: boolean initialized>;

        if $z0 != 0 goto label1;

        $r5 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties overridingProperties>;

        if $r5 == null goto label1;

        $r6 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties overridingProperties>;

        r7 = virtualinvoke $r6.<org.apache.commons.collections.ExtendedProperties: java.lang.Object get(java.lang.Object)>(r3);

     label1:
        if r7 != null goto label2;

        $r4 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties configuration>;

        r7 = virtualinvoke $r4.<org.apache.commons.collections.ExtendedProperties: java.lang.Object getProperty(java.lang.String)>(r3);

     label2:
        $z1 = r7 instanceof java.lang.String;

        if $z1 == 0 goto label3;

        $r1 = (java.lang.String) r7;

        $r2 = staticinvoke <org.apache.velocity.util.StringUtils: java.lang.String nullTrim(java.lang.String)>($r1);

        return $r2;

     label3:
        return r7;
    }

    private void initializeProperties()
    {
        org.apache.velocity.runtime.RuntimeInstance r0;
        org.apache.commons.collections.ExtendedProperties $r1, $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        $r1 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties configuration>;

        $z0 = virtualinvoke $r1.<org.apache.commons.collections.ExtendedProperties: boolean isInitialized()>();

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: void setDefaultProperties()>();

     label1:
        $r2 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties overridingProperties>;

        if $r2 == null goto label2;

        $r4 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties configuration>;

        $r3 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties overridingProperties>;

        virtualinvoke $r4.<org.apache.commons.collections.ExtendedProperties: void combine(org.apache.commons.collections.ExtendedProperties)>($r3);

     label2:
        return;
    }

    public void init(java.util.Properties)
    {
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.util.Properties r1;
        org.apache.commons.collections.ExtendedProperties $r2;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r1 := @parameter0: java.util.Properties;

        $r2 = staticinvoke <org.apache.commons.collections.ExtendedProperties: org.apache.commons.collections.ExtendedProperties convertProperties(java.util.Properties)>(r1);

        specialinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: void setProperties(org.apache.commons.collections.ExtendedProperties)>($r2);

        virtualinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: void init()>();

        return;
    }

    private void setProperties(org.apache.commons.collections.ExtendedProperties)
    {
        org.apache.velocity.runtime.RuntimeInstance r0;
        org.apache.commons.collections.ExtendedProperties $r1, r2, $r3;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r2 := @parameter0: org.apache.commons.collections.ExtendedProperties;

        $r1 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties overridingProperties>;

        if $r1 != null goto label1;

        r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties overridingProperties> = r2;

        goto label2;

     label1:
        $r3 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties overridingProperties>;

        virtualinvoke $r3.<org.apache.commons.collections.ExtendedProperties: void combine(org.apache.commons.collections.ExtendedProperties)>(r2);

     label2:
        return;
    }

    public void init(java.lang.String)
    {
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.io.IOException $r3;
        org.apache.commons.collections.ExtendedProperties $r1;
        java.lang.StringBuffer $r5, $r6, $r7, $r8;
        java.lang.String r2, $r9;
        org.apache.velocity.exception.VelocityException $r4;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r2 := @parameter0: java.lang.String;

     label1:
        $r1 = new org.apache.commons.collections.ExtendedProperties;

        specialinvoke $r1.<org.apache.commons.collections.ExtendedProperties: void <init>(java.lang.String)>(r2);

        specialinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: void setProperties(org.apache.commons.collections.ExtendedProperties)>($r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.apache.velocity.exception.VelocityException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error reading properties from \'");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r9, $r3);

        throw $r4;

     label4:
        virtualinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: void init()>();

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private void initializeResourceManager()
    {
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.InstantiationException $r25;
        org.apache.velocity.exception.VelocityException $r3, $r17, $r19, $r26, $r39;
        boolean $z0;
        java.lang.IllegalAccessException $r18;
        org.apache.velocity.runtime.resource.ResourceManager $r5, $r6;
        java.lang.StringBuffer $r7, $r8, $r9, $r10, $r13, $r14, $r20, $r21, $r22, $r23, $r27, $r28, $r29, $r30, $r33, $r34, $r35, $r36;
        int $i0;
        java.lang.String $r1, $r12, $r15, $r24, $r31, $r37;
        org.apache.velocity.runtime.log.Log $r2, $r16, $r38;
        java.lang.Object $r4;
        java.lang.Class $r11, $r40;
        java.lang.ClassNotFoundException $r32;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        $r1 = virtualinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: java.lang.String getString(java.lang.String)>("resource.manager.class");

        if $r1 == null goto label10;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label10;

     label01:
        $r4 = staticinvoke <org.apache.velocity.util.ClassUtils: java.lang.Object getNewInstance(java.lang.String)>($r1);

     label02:
        goto label06;

     label03:
        $r32 := @caughtexception;

        $r33 = new java.lang.StringBuffer;

        specialinvoke $r33.<java.lang.StringBuffer: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The specified class for ResourceManager (");

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") does not exist or is not accessible to the current classloader.");

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.String toString()>();

        $r38 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r38.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>($r37);

        $r39 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r39.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r37, $r32);

        throw $r39;

     label04:
        $r25 := @caughtexception;

        $r26 = new org.apache.velocity.exception.VelocityException;

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not instantiate class \'");

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r26.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r31, $r25);

        throw $r26;

     label05:
        $r18 := @caughtexception;

        $r19 = new org.apache.velocity.exception.VelocityException;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot access class \'");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r19.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r24, $r18);

        throw $r19;

     label06:
        $z0 = $r4 instanceof org.apache.velocity.runtime.resource.ResourceManager;

        if $z0 != 0 goto label09;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The specified class for ResourceManager (");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") does not implement ");

        $r11 = <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$org$apache$velocity$runtime$resource$ResourceManager>;

        if $r11 != null goto label07;

        $r40 = staticinvoke <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$(java.lang.String)>("org.apache.velocity.runtime.resource.ResourceManager");

        <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$org$apache$velocity$runtime$resource$ResourceManager> = $r40;

        goto label08;

     label07:
        $r40 = <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$org$apache$velocity$runtime$resource$ResourceManager>;

     label08:
        $r12 = virtualinvoke $r40.<java.lang.Class: java.lang.String getName()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; Velocity is not initialized correctly.");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        $r16 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r16.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>($r15);

        $r17 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r17.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String)>($r15);

        throw $r17;

     label09:
        $r5 = (org.apache.velocity.runtime.resource.ResourceManager) $r4;

        r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.resource.ResourceManager resourceManager> = $r5;

        $r6 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.resource.ResourceManager resourceManager>;

        interfaceinvoke $r6.<org.apache.velocity.runtime.resource.ResourceManager: void initialize(org.apache.velocity.runtime.RuntimeServices)>(r0);

        goto label11;

     label10:
        $r2 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r2.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>("It appears that no class was specified as the ResourceManager.  Please ensure that all configuration information is correct.");

        $r3 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r3.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String)>("It appears that no class was specified as the ResourceManager.  Please ensure that all configuration information is correct.");

        throw $r3;

     label11:
        return;

        catch java.lang.ClassNotFoundException from label01 to label02 with label03;
        catch java.lang.InstantiationException from label01 to label02 with label04;
        catch java.lang.IllegalAccessException from label01 to label02 with label05;
    }

    private void initializeEventHandlers()
    {
        org.apache.velocity.runtime.RuntimeInstance r0;
        org.apache.velocity.app.event.MethodExceptionEventHandler $r25;
        org.apache.velocity.app.event.InvalidReferenceEventHandler $r15;
        org.apache.velocity.app.event.EventCartridge $r1, $r16, $r21, $r26, $r31, $r36;
        java.lang.String[] $r3, $r5, $r7, $r9, $r11;
        org.apache.velocity.app.event.EventHandler $r14, $r19, $r24, $r29, $r34;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8, i9;
        java.lang.String $r13, $r18, $r23, $r28, $r33;
        org.apache.velocity.app.event.IncludeEventHandler $r20;
        org.apache.commons.collections.ExtendedProperties $r2, $r4, $r6, $r8, $r10;
        org.apache.velocity.app.event.ReferenceInsertionEventHandler $r35;
        java.lang.Class $r12, $r17, $r22, $r27, $r32, $r37, $r38, $r39, $r40, $r41;
        org.apache.velocity.app.event.NullSetEventHandler $r30;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        $r1 = new org.apache.velocity.app.event.EventCartridge;

        specialinvoke $r1.<org.apache.velocity.app.event.EventCartridge: void <init>()>();

        r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.app.event.EventCartridge eventCartridge> = $r1;

        $r2 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties configuration>;

        $r3 = virtualinvoke $r2.<org.apache.commons.collections.ExtendedProperties: java.lang.String[] getStringArray(java.lang.String)>("eventhandler.referenceinsertion.class");

        if $r3 == null goto label05;

        i5 = 0;

     label01:
        $i4 = lengthof $r3;

        if i5 >= $i4 goto label05;

        $r33 = $r3[i5];

        $r32 = <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$org$apache$velocity$app$event$ReferenceInsertionEventHandler>;

        if $r32 != null goto label02;

        $r37 = staticinvoke <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$(java.lang.String)>("org.apache.velocity.app.event.ReferenceInsertionEventHandler");

        <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$org$apache$velocity$app$event$ReferenceInsertionEventHandler> = $r37;

        goto label03;

     label02:
        $r37 = <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$org$apache$velocity$app$event$ReferenceInsertionEventHandler>;

     label03:
        $r34 = specialinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.app.event.EventHandler initializeSpecificEventHandler(java.lang.String,java.lang.String,java.lang.Class)>($r33, "eventhandler.referenceinsertion.class", $r37);

        if $r34 == null goto label04;

        $r36 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.app.event.EventCartridge eventCartridge>;

        $r35 = (org.apache.velocity.app.event.ReferenceInsertionEventHandler) $r34;

        virtualinvoke $r36.<org.apache.velocity.app.event.EventCartridge: void addReferenceInsertionEventHandler(org.apache.velocity.app.event.ReferenceInsertionEventHandler)>($r35);

     label04:
        i5 = i5 + 1;

        goto label01;

     label05:
        $r4 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties configuration>;

        $r5 = virtualinvoke $r4.<org.apache.commons.collections.ExtendedProperties: java.lang.String[] getStringArray(java.lang.String)>("eventhandler.nullset.class");

        if $r5 == null goto label10;

        i6 = 0;

     label06:
        $i3 = lengthof $r5;

        if i6 >= $i3 goto label10;

        $r28 = $r5[i6];

        $r27 = <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$org$apache$velocity$app$event$NullSetEventHandler>;

        if $r27 != null goto label07;

        $r38 = staticinvoke <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$(java.lang.String)>("org.apache.velocity.app.event.NullSetEventHandler");

        <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$org$apache$velocity$app$event$NullSetEventHandler> = $r38;

        goto label08;

     label07:
        $r38 = <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$org$apache$velocity$app$event$NullSetEventHandler>;

     label08:
        $r29 = specialinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.app.event.EventHandler initializeSpecificEventHandler(java.lang.String,java.lang.String,java.lang.Class)>($r28, "eventhandler.nullset.class", $r38);

        if $r29 == null goto label09;

        $r31 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.app.event.EventCartridge eventCartridge>;

        $r30 = (org.apache.velocity.app.event.NullSetEventHandler) $r29;

        virtualinvoke $r31.<org.apache.velocity.app.event.EventCartridge: void addNullSetEventHandler(org.apache.velocity.app.event.NullSetEventHandler)>($r30);

     label09:
        i6 = i6 + 1;

        goto label06;

     label10:
        $r6 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties configuration>;

        $r7 = virtualinvoke $r6.<org.apache.commons.collections.ExtendedProperties: java.lang.String[] getStringArray(java.lang.String)>("eventhandler.methodexception.class");

        if $r7 == null goto label15;

        i7 = 0;

     label11:
        $i2 = lengthof $r7;

        if i7 >= $i2 goto label15;

        $r23 = $r7[i7];

        $r22 = <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$org$apache$velocity$app$event$MethodExceptionEventHandler>;

        if $r22 != null goto label12;

        $r39 = staticinvoke <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$(java.lang.String)>("org.apache.velocity.app.event.MethodExceptionEventHandler");

        <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$org$apache$velocity$app$event$MethodExceptionEventHandler> = $r39;

        goto label13;

     label12:
        $r39 = <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$org$apache$velocity$app$event$MethodExceptionEventHandler>;

     label13:
        $r24 = specialinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.app.event.EventHandler initializeSpecificEventHandler(java.lang.String,java.lang.String,java.lang.Class)>($r23, "eventhandler.methodexception.class", $r39);

        if $r24 == null goto label14;

        $r26 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.app.event.EventCartridge eventCartridge>;

        $r25 = (org.apache.velocity.app.event.MethodExceptionEventHandler) $r24;

        virtualinvoke $r26.<org.apache.velocity.app.event.EventCartridge: void addMethodExceptionHandler(org.apache.velocity.app.event.MethodExceptionEventHandler)>($r25);

     label14:
        i7 = i7 + 1;

        goto label11;

     label15:
        $r8 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties configuration>;

        $r9 = virtualinvoke $r8.<org.apache.commons.collections.ExtendedProperties: java.lang.String[] getStringArray(java.lang.String)>("eventhandler.include.class");

        if $r9 == null goto label20;

        i8 = 0;

     label16:
        $i1 = lengthof $r9;

        if i8 >= $i1 goto label20;

        $r18 = $r9[i8];

        $r17 = <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$org$apache$velocity$app$event$IncludeEventHandler>;

        if $r17 != null goto label17;

        $r40 = staticinvoke <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$(java.lang.String)>("org.apache.velocity.app.event.IncludeEventHandler");

        <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$org$apache$velocity$app$event$IncludeEventHandler> = $r40;

        goto label18;

     label17:
        $r40 = <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$org$apache$velocity$app$event$IncludeEventHandler>;

     label18:
        $r19 = specialinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.app.event.EventHandler initializeSpecificEventHandler(java.lang.String,java.lang.String,java.lang.Class)>($r18, "eventhandler.include.class", $r40);

        if $r19 == null goto label19;

        $r21 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.app.event.EventCartridge eventCartridge>;

        $r20 = (org.apache.velocity.app.event.IncludeEventHandler) $r19;

        virtualinvoke $r21.<org.apache.velocity.app.event.EventCartridge: void addIncludeEventHandler(org.apache.velocity.app.event.IncludeEventHandler)>($r20);

     label19:
        i8 = i8 + 1;

        goto label16;

     label20:
        $r10 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties configuration>;

        $r11 = virtualinvoke $r10.<org.apache.commons.collections.ExtendedProperties: java.lang.String[] getStringArray(java.lang.String)>("eventhandler.invalidreferences.class");

        if $r11 == null goto label25;

        i9 = 0;

     label21:
        $i0 = lengthof $r11;

        if i9 >= $i0 goto label25;

        $r13 = $r11[i9];

        $r12 = <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$org$apache$velocity$app$event$InvalidReferenceEventHandler>;

        if $r12 != null goto label22;

        $r41 = staticinvoke <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$(java.lang.String)>("org.apache.velocity.app.event.InvalidReferenceEventHandler");

        <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$org$apache$velocity$app$event$InvalidReferenceEventHandler> = $r41;

        goto label23;

     label22:
        $r41 = <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$org$apache$velocity$app$event$InvalidReferenceEventHandler>;

     label23:
        $r14 = specialinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.app.event.EventHandler initializeSpecificEventHandler(java.lang.String,java.lang.String,java.lang.Class)>($r13, "eventhandler.invalidreferences.class", $r41);

        if $r14 == null goto label24;

        $r16 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.app.event.EventCartridge eventCartridge>;

        $r15 = (org.apache.velocity.app.event.InvalidReferenceEventHandler) $r14;

        virtualinvoke $r16.<org.apache.velocity.app.event.EventCartridge: void addInvalidReferenceEventHandler(org.apache.velocity.app.event.InvalidReferenceEventHandler)>($r15);

     label24:
        i9 = i9 + 1;

        goto label21;

     label25:
        return;
    }

    private org.apache.velocity.app.event.EventHandler initializeSpecificEventHandler(java.lang.String, java.lang.String, java.lang.Class)
    {
        org.apache.velocity.runtime.RuntimeInstance r3;
        java.lang.InstantiationException $r25;
        org.apache.velocity.exception.VelocityException $r17, $r19, $r26, $r41;
        boolean $z0, $z1;
        java.lang.IllegalAccessException $r18;
        org.apache.velocity.util.RuntimeServicesAware $r4;
        java.lang.StringBuffer $r5, $r6, $r8, $r9, $r10, $r11, $r13, $r14, $r20, $r21, $r22, $r23, $r27, $r28, $r29, $r30, $r33, $r34, $r35, $r36, $r37, $r38;
        org.apache.velocity.app.event.EventHandler r42;
        int $i0;
        java.lang.String r0, r7, $r12, $r15, $r24, $r31, $r39;
        org.apache.velocity.runtime.log.Log $r16, $r40;
        java.lang.Object $r1;
        java.lang.Class r2;
        java.lang.ClassNotFoundException $r32;

        r3 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r0 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Class;

        if r0 == null goto label9;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label9;

     label1:
        $r1 = staticinvoke <org.apache.velocity.util.ClassUtils: java.lang.Object getNewInstance(java.lang.String)>(r0);

     label2:
        goto label6;

     label3:
        $r32 := @caughtexception;

        $r33 = new java.lang.StringBuffer;

        specialinvoke $r33.<java.lang.StringBuffer: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The specified class for ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") does not exist or is not accessible to the current classloader.");

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.String toString()>();

        $r40 = r3.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r40.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>($r39);

        $r41 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r41.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r39, $r32);

        throw $r41;

     label4:
        $r25 := @caughtexception;

        $r26 = new org.apache.velocity.exception.VelocityException;

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not instantiate class \'");

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r26.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r31, $r25);

        throw $r26;

     label5:
        $r18 := @caughtexception;

        $r19 = new org.apache.velocity.exception.VelocityException;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot access class \'");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r19.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r24, $r18);

        throw $r19;

     label6:
        $z0 = virtualinvoke r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z0 != 0 goto label7;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The specified class for ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") does not implement ");

        $r12 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; Velocity is not initialized correctly.");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        $r16 = r3.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r16.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>($r15);

        $r17 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r17.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String)>($r15);

        throw $r17;

     label7:
        r42 = (org.apache.velocity.app.event.EventHandler) $r1;

        $z1 = r42 instanceof org.apache.velocity.util.RuntimeServicesAware;

        if $z1 == 0 goto label8;

        $r4 = (org.apache.velocity.util.RuntimeServicesAware) r42;

        interfaceinvoke $r4.<org.apache.velocity.util.RuntimeServicesAware: void setRuntimeServices(org.apache.velocity.runtime.RuntimeServices)>(r3);

     label8:
        return r42;

     label9:
        return null;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.InstantiationException from label1 to label2 with label4;
        catch java.lang.IllegalAccessException from label1 to label2 with label5;
    }

    private void initializeLog()
    {
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.Exception $r2;
        org.apache.velocity.runtime.log.Log $r1;
        java.lang.StringBuffer $r4, $r5, $r7;
        java.lang.String $r6, $r8;
        org.apache.velocity.exception.VelocityException $r3;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

     label1:
        $r1 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log log>;

        staticinvoke <org.apache.velocity.runtime.log.LogManager: void updateLog(org.apache.velocity.runtime.log.Log,org.apache.velocity.runtime.RuntimeServices)>($r1, r0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new org.apache.velocity.exception.VelocityException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error initializing log: ");

        $r6 = virtualinvoke $r2.<java.lang.Exception: java.lang.String getMessage()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r8, $r2);

        throw $r3;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void initializeDirectives()
    {
        java.util.Enumeration $r4;
        org.apache.velocity.runtime.RuntimeInstance r1;
        org.apache.velocity.exception.VelocityException $r21;
        boolean $z0, $z1;
        java.lang.Throwable $r28;
        java.lang.String[] $r6;
        java.lang.StringBuffer $r9, $r11, $r13, $r16, $r18, $r19;
        int $i0, i1;
        java.lang.String $r7, $r12, $r14, $r20, r33;
        java.util.Properties $r0;
        java.io.IOException $r22, $r25, $r29;
        java.lang.RuntimeException $r24, $r27, $r31;
        org.apache.commons.collections.ExtendedProperties $r5;
        org.apache.velocity.runtime.log.Log $r8, $r10, $r17, $r23, $r26, $r30;
        java.lang.Class $r2;
        java.lang.Object $r15;
        java.io.InputStream $r3, r32;

        r1 := @this: org.apache.velocity.runtime.RuntimeInstance;

        $r0 = new java.util.Properties;

        specialinvoke $r0.<java.util.Properties: void <init>()>();

        r32 = null;

     label01:
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("/org/apache/velocity/runtime/defaults/directive.properties");

        r32 = $r3;

        if $r3 != null goto label02;

        $r21 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r21.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String)>("Error loading directive.properties! Something is very wrong if these properties aren\'t being located. Either your Velocity distribution is incomplete or your Velocity jar file is corrupted!");

        throw $r21;

     label02:
        virtualinvoke $r0.<java.util.Properties: void load(java.io.InputStream)>($r3);

     label03:
        goto label14;

     label04:
        goto label08;

     label05:
        $r29 := @caughtexception;

        $r30 = r1.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r30.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>("Error while loading directive properties!", $r29);

        $r31 = new java.lang.RuntimeException;

        specialinvoke $r31.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error while loading directive properties!", $r29);

        throw $r31;

     label06:
        $r28 := @caughtexception;

        goto label18;

     label07:
        throw $r28;

     label08:
        $r4 = virtualinvoke $r0.<java.util.Properties: java.util.Enumeration elements()>();

     label09:
        $z0 = interfaceinvoke $r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label10;

        $r15 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        r33 = (java.lang.String) $r15;

        virtualinvoke r1.<org.apache.velocity.runtime.RuntimeInstance: void loadDirective(java.lang.String)>(r33);

        $r17 = r1.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log log>;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Loaded System Directive: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r33);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r17.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>($r20);

        goto label09;

     label10:
        $r5 = r1.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties configuration>;

        $r6 = virtualinvoke $r5.<org.apache.commons.collections.ExtendedProperties: java.lang.String[] getStringArray(java.lang.String)>("userdirective");

        i1 = 0;

     label11:
        $i0 = lengthof $r6;

        if i1 >= $i0 goto label13;

        $r7 = $r6[i1];

        virtualinvoke r1.<org.apache.velocity.runtime.RuntimeInstance: void loadDirective(java.lang.String)>($r7);

        $r8 = r1.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log log>;

        $z1 = virtualinvoke $r8.<org.apache.velocity.runtime.log.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label12;

        $r10 = r1.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log log>;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Loaded User Directive: ");

        $r12 = $r6[i1];

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r10.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>($r14);

     label12:
        i1 = i1 + 1;

        goto label11;

     label13:
        return;

     label14:
        if $r3 == null goto label15;

        virtualinvoke $r3.<java.io.InputStream: void close()>();

     label15:
        goto label17;

     label16:
        $r25 := @caughtexception;

        $r26 = r1.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r26.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>("Cannot close directive properties!", $r25);

        $r27 = new java.lang.RuntimeException;

        specialinvoke $r27.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Cannot close directive properties!", $r25);

        throw $r27;

     label17:
        goto label04;

     label18:
        if r32 == null goto label19;

        virtualinvoke r32.<java.io.InputStream: void close()>();

     label19:
        goto label21;

     label20:
        $r22 := @caughtexception;

        $r23 = r1.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r23.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>("Cannot close directive properties!", $r22);

        $r24 = new java.lang.RuntimeException;

        specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Cannot close directive properties!", $r22);

        throw $r24;

     label21:
        goto label07;

        catch java.io.IOException from label01 to label03 with label05;
        catch java.lang.Throwable from label01 to label04 with label06;
        catch java.lang.Throwable from label05 to label07 with label06;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.io.IOException from label18 to label19 with label20;
    }

    public synchronized void addDirective(org.apache.velocity.runtime.directive.Directive)
    {
        org.apache.velocity.runtime.directive.Directive r1;
        java.util.Map $r2;
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.String $r3;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r1 := @parameter0: org.apache.velocity.runtime.directive.Directive;

        $r2 = r0.<org.apache.velocity.runtime.RuntimeInstance: java.util.Map runtimeDirectives>;

        $r3 = virtualinvoke r1.<org.apache.velocity.runtime.directive.Directive: java.lang.String getName()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1);

        specialinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: void updateSharedDirectivesMap()>();

        return;
    }

    public org.apache.velocity.runtime.directive.Directive getDirective(java.lang.String)
    {
        org.apache.velocity.runtime.directive.Directive $r4;
        java.util.Map $r2;
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.velocity.runtime.RuntimeInstance: java.util.Map runtimeDirectivesShared>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.apache.velocity.runtime.directive.Directive) $r3;

        return $r4;
    }

    public synchronized void removeDirective(java.lang.String)
    {
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.String r1;
        java.util.Map $r2;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.velocity.runtime.RuntimeInstance: java.util.Map runtimeDirectives>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        specialinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: void updateSharedDirectivesMap()>();

        return;
    }

    private void updateSharedDirectivesMap()
    {
        java.util.HashMap $r0;
        org.apache.velocity.runtime.RuntimeInstance r1;
        java.util.Map $r2;

        r1 := @this: org.apache.velocity.runtime.RuntimeInstance;

        $r0 = new java.util.HashMap;

        $r2 = r1.<org.apache.velocity.runtime.RuntimeInstance: java.util.Map runtimeDirectives>;

        specialinvoke $r0.<java.util.HashMap: void <init>(java.util.Map)>($r2);

        r1.<org.apache.velocity.runtime.RuntimeInstance: java.util.Map runtimeDirectivesShared> = $r0;

        return;
    }

    public void loadDirective(java.lang.String)
    {
        org.apache.velocity.runtime.RuntimeInstance r10;
        java.lang.StringBuffer $r2, $r3, $r4, $r7, $r8, $r14, $r15, $r16;
        java.lang.String r0, $r6, $r9, $r17;
        org.apache.velocity.exception.VelocityException $r12, $r19;
        boolean $z0;
        java.lang.Exception $r13;
        org.apache.velocity.runtime.log.Log $r11, $r18;
        org.apache.velocity.runtime.directive.Directive r20;
        java.lang.Object $r1;
        java.lang.Class $r5, $r21;

        r10 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <org.apache.velocity.util.ClassUtils: java.lang.Object getNewInstance(java.lang.String)>(r0);

        $z0 = $r1 instanceof org.apache.velocity.runtime.directive.Directive;

        if $z0 == 0 goto label2;

        r20 = (org.apache.velocity.runtime.directive.Directive) $r1;

        virtualinvoke r10.<org.apache.velocity.runtime.RuntimeInstance: void addDirective(org.apache.velocity.runtime.directive.Directive)>(r20);

        goto label5;

     label2:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" does not implement ");

        $r5 = <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$org$apache$velocity$runtime$directive$Directive>;

        if $r5 != null goto label3;

        $r21 = staticinvoke <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$(java.lang.String)>("org.apache.velocity.runtime.directive.Directive");

        <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$org$apache$velocity$runtime$directive$Directive> = $r21;

        goto label4;

     label3:
        $r21 = <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$org$apache$velocity$runtime$directive$Directive>;

     label4:
        $r6 = virtualinvoke $r21.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; it cannot be loaded.");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        $r11 = r10.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r11.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>($r9);

        $r12 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r12.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String)>($r9);

        throw $r12;

     label5:
        goto label7;

     label6:
        $r13 := @caughtexception;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Failed to load Directive: ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        $r18 = r10.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r18.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>($r17, $r13);

        $r19 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r19.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r17, $r13);

        throw $r19;

     label7:
        return;

        catch java.lang.Exception from label1 to label5 with label6;
    }

    private void initializeParserPool()
    {
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.InstantiationException $r24;
        org.apache.velocity.exception.VelocityException $r3, $r16, $r18, $r25, $r38;
        boolean $z0;
        java.lang.IllegalAccessException $r17;
        java.lang.StringBuffer $r7, $r8, $r9, $r10, $r12, $r13, $r19, $r20, $r21, $r22, $r26, $r27, $r28, $r29, $r32, $r33, $r34, $r35;
        org.apache.velocity.runtime.ParserPool $r5, $r6;
        int $i0;
        java.lang.String $r1, $r14, $r23, $r30, $r36;
        org.apache.velocity.runtime.log.Log $r2, $r15, $r37;
        java.lang.Object $r4;
        java.lang.Class $r11, $r39;
        java.lang.ClassNotFoundException $r31;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        $r1 = virtualinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: java.lang.String getString(java.lang.String)>("parser.pool.class");

        if $r1 == null goto label10;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label10;

     label01:
        $r4 = staticinvoke <org.apache.velocity.util.ClassUtils: java.lang.Object getNewInstance(java.lang.String)>($r1);

     label02:
        goto label06;

     label03:
        $r31 := @caughtexception;

        $r32 = new java.lang.StringBuffer;

        specialinvoke $r32.<java.lang.StringBuffer: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The specified class for ParserPool (");

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") does not exist (or is not accessible to the current classloader.");

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.String toString()>();

        $r37 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r37.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>($r36);

        $r38 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r38.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r36, $r31);

        throw $r38;

     label04:
        $r24 := @caughtexception;

        $r25 = new org.apache.velocity.exception.VelocityException;

        $r26 = new java.lang.StringBuffer;

        specialinvoke $r26.<java.lang.StringBuffer: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not instantiate class \'");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r25.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r30, $r24);

        throw $r25;

     label05:
        $r17 := @caughtexception;

        $r18 = new org.apache.velocity.exception.VelocityException;

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot access class \'");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r18.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r23, $r17);

        throw $r18;

     label06:
        $z0 = $r4 instanceof org.apache.velocity.runtime.ParserPool;

        if $z0 != 0 goto label09;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The specified class for ParserPool (");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") does not implement ");

        $r11 = <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$org$apache$velocity$runtime$ParserPool>;

        if $r11 != null goto label07;

        $r39 = staticinvoke <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$(java.lang.String)>("org.apache.velocity.runtime.ParserPool");

        <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$org$apache$velocity$runtime$ParserPool> = $r39;

        goto label08;

     label07:
        $r39 = <org.apache.velocity.runtime.RuntimeInstance: java.lang.Class class$org$apache$velocity$runtime$ParserPool>;

     label08:
        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r39);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" Velocity not initialized correctly.");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        $r15 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r15.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>($r14);

        $r16 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r16.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String)>($r14);

        throw $r16;

     label09:
        $r5 = (org.apache.velocity.runtime.ParserPool) $r4;

        r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.ParserPool parserPool> = $r5;

        $r6 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.ParserPool parserPool>;

        interfaceinvoke $r6.<org.apache.velocity.runtime.ParserPool: void initialize(org.apache.velocity.runtime.RuntimeServices)>(r0);

        goto label11;

     label10:
        $r2 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r2.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>("It appears that no class was specified as the ParserPool.  Please ensure that all configuration information is correct.");

        $r3 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r3.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String)>("It appears that no class was specified as the ParserPool.  Please ensure that all configuration information is correct.");

        throw $r3;

     label11:
        return;

        catch java.lang.ClassNotFoundException from label01 to label02 with label03;
        catch java.lang.InstantiationException from label01 to label02 with label04;
        catch java.lang.IllegalAccessException from label01 to label02 with label05;
    }

    public org.apache.velocity.runtime.parser.Parser createNewParser()
    {
        org.apache.velocity.runtime.parser.Parser $r1;
        org.apache.velocity.runtime.RuntimeInstance r0;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        specialinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: void requireInitialization()>();

        $r1 = new org.apache.velocity.runtime.parser.Parser;

        specialinvoke $r1.<org.apache.velocity.runtime.parser.Parser: void <init>(org.apache.velocity.runtime.RuntimeServices)>(r0);

        return $r1;
    }

    public org.apache.velocity.runtime.parser.node.SimpleNode parse(java.lang.String, java.lang.String) throws org.apache.velocity.runtime.parser.ParseException
    {
        java.io.StringReader $r1;
        org.apache.velocity.runtime.parser.node.SimpleNode $r4;
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.String r2, r3;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = new java.io.StringReader;

        specialinvoke $r1.<java.io.StringReader: void <init>(java.lang.String)>(r2);

        $r4 = virtualinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.parser.node.SimpleNode parse(java.io.Reader,java.lang.String)>($r1, r3);

        return $r4;
    }

    public org.apache.velocity.runtime.parser.node.SimpleNode parse(java.io.Reader, java.lang.String) throws org.apache.velocity.runtime.parser.ParseException
    {
        org.apache.velocity.runtime.parser.node.SimpleNode $r3;
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.io.Reader r1;
        java.lang.String r2;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r1 := @parameter0: java.io.Reader;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.parser.node.SimpleNode parse(java.io.Reader,java.lang.String,boolean)>(r1, r2, 1);

        return $r3;
    }

    public org.apache.velocity.runtime.parser.node.SimpleNode parse(java.io.Reader, java.lang.String, boolean) throws org.apache.velocity.runtime.parser.ParseException
    {
        java.lang.Throwable $r9;
        org.apache.velocity.runtime.RuntimeInstance r0;
        org.apache.velocity.runtime.ParserPool $r1, $r6, $r10;
        java.lang.String r4;
        boolean z0, $z1, z2, z3, z4;
        java.io.Reader r3;
        org.apache.velocity.runtime.log.Log $r7, $r8;
        org.apache.velocity.runtime.parser.Parser $r2, r11;
        org.apache.velocity.runtime.parser.node.SimpleNode $r5;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r3 := @parameter0: java.io.Reader;

        r4 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        specialinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: void requireInitialization()>();

        $r1 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.ParserPool parserPool>;

        $r2 = interfaceinvoke $r1.<org.apache.velocity.runtime.ParserPool: org.apache.velocity.runtime.parser.Parser get()>();

        r11 = $r2;

        z2 = 1;

        z4 = 1;

        z3 = 1;

        if $r2 != null goto label2;

        $r7 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log log>;

        $z1 = virtualinvoke $r7.<org.apache.velocity.runtime.log.Log: boolean isInfoEnabled()>();

        if $z1 == 0 goto label1;

        $r8 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r8.<org.apache.velocity.runtime.log.Log: void info(java.lang.Object)>("Runtime : ran out of parsers. Creating a new one.  Please increment the parser.pool.size property. The current value is too small.");

     label1:
        r11 = virtualinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.parser.Parser createNewParser()>();

        z2 = 0;

        z4 = 0;

        z3 = 0;

     label2:
        if z0 == 0 goto label3;

        virtualinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: boolean dumpVMNamespace(java.lang.String)>(r4);

     label3:
        $r5 = virtualinvoke r11.<org.apache.velocity.runtime.parser.Parser: org.apache.velocity.runtime.parser.node.SimpleNode parse(java.io.Reader,java.lang.String)>(r3, r4);

     label4:
        if z4 == 0 goto label5;

        $r6 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.ParserPool parserPool>;

        interfaceinvoke $r6.<org.apache.velocity.runtime.ParserPool: void put(org.apache.velocity.runtime.parser.Parser)>(r11);

     label5:
        return $r5;

     label6:
        $r9 := @caughtexception;

     label7:
        if z3 == 0 goto label8;

        $r10 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.ParserPool parserPool>;

        interfaceinvoke $r10.<org.apache.velocity.runtime.ParserPool: void put(org.apache.velocity.runtime.parser.Parser)>(r11);

     label8:
        throw $r9;

        catch java.lang.Throwable from label2 to label4 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private void initializeEvaluateScopeSettings()
    {
        org.apache.velocity.runtime.RuntimeInstance r1;
        java.lang.StringBuffer $r0, $r3, $r4, $r5;
        java.lang.String $r2, $r6;
        boolean $z0, $z1;

        r1 := @this: org.apache.velocity.runtime.RuntimeInstance;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<org.apache.velocity.runtime.RuntimeInstance: java.lang.String evaluateScopeName>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("provide.scope.control");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $z0 = r1.<org.apache.velocity.runtime.RuntimeInstance: boolean provideEvaluateScope>;

        $z1 = virtualinvoke r1.<org.apache.velocity.runtime.RuntimeInstance: boolean getBoolean(java.lang.String,boolean)>($r6, $z0);

        r1.<org.apache.velocity.runtime.RuntimeInstance: boolean provideEvaluateScope> = $z1;

        return;
    }

    public boolean evaluate(org.apache.velocity.context.Context, java.io.Writer, java.lang.String, java.lang.String)
    {
        org.apache.velocity.context.Context r1;
        java.io.StringReader $r4;
        java.io.Writer r2;
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.String r3, r5;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r1 := @parameter0: org.apache.velocity.context.Context;

        r2 := @parameter1: java.io.Writer;

        r3 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.String;

        $r4 = new java.io.StringReader;

        specialinvoke $r4.<java.io.StringReader: void <init>(java.lang.String)>(r5);

        $z0 = virtualinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: boolean evaluate(org.apache.velocity.context.Context,java.io.Writer,java.lang.String,java.io.Reader)>(r1, r2, r3, $r4);

        return $z0;
    }

    public boolean evaluate(org.apache.velocity.context.Context, java.io.Writer, java.lang.String, java.io.Reader)
    {
        org.apache.velocity.exception.ParseErrorException $r8, $r10;
        org.apache.velocity.runtime.RuntimeInstance r1;
        java.io.Reader r2;
        org.apache.velocity.exception.TemplateInitException $r7;
        java.lang.NullPointerException $r6;
        org.apache.velocity.context.Context r4;
        org.apache.velocity.runtime.parser.node.SimpleNode $r3;
        org.apache.velocity.runtime.parser.ParseException $r9;
        java.io.Writer r5;
        java.lang.String r0;
        boolean $z0;

        r1 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r4 := @parameter0: org.apache.velocity.context.Context;

        r5 := @parameter1: java.io.Writer;

        r0 := @parameter2: java.lang.String;

        r2 := @parameter3: java.io.Reader;

        if r0 != null goto label1;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("logTag (i.e. template name) cannot be null, you must provide an identifier for the content being evaluated");

        throw $r6;

     label1:
        $r3 = virtualinvoke r1.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.parser.node.SimpleNode parse(java.io.Reader,java.lang.String)>(r2, r0);

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        $r10 = new org.apache.velocity.exception.ParseErrorException;

        specialinvoke $r10.<org.apache.velocity.exception.ParseErrorException: void <init>(org.apache.velocity.runtime.parser.ParseException,java.lang.String)>($r9, null);

        throw $r10;

     label4:
        $r7 := @caughtexception;

        $r8 = new org.apache.velocity.exception.ParseErrorException;

        specialinvoke $r8.<org.apache.velocity.exception.ParseErrorException: void <init>(org.apache.velocity.exception.VelocityException,java.lang.String)>($r7, null);

        throw $r8;

     label5:
        if $r3 != null goto label6;

        return 0;

     label6:
        $z0 = virtualinvoke r1.<org.apache.velocity.runtime.RuntimeInstance: boolean render(org.apache.velocity.context.Context,java.io.Writer,java.lang.String,org.apache.velocity.runtime.parser.node.SimpleNode)>(r4, r5, r0, $r3);

        return $z0;

        catch org.apache.velocity.runtime.parser.ParseException from label1 to label2 with label3;
        catch org.apache.velocity.exception.TemplateInitException from label1 to label2 with label4;
    }

    public boolean render(org.apache.velocity.context.Context, java.io.Writer, java.lang.String, org.apache.velocity.runtime.parser.node.SimpleNode)
    {
        org.apache.velocity.runtime.RuntimeInstance r4;
        org.apache.velocity.exception.TemplateInitException $r48;
        org.apache.velocity.context.Context r1;
        org.apache.velocity.exception.VelocityException $r30, $r46;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Exception $r40;
        org.apache.velocity.runtime.parser.node.SimpleNode r3;
        java.io.Writer r5;
        java.lang.Throwable $r19;
        java.lang.StringBuffer $r31, $r32, $r34, $r41, $r42, $r43;
        java.lang.String r2, $r6, $r10, $r11, $r13, $r15, $r18, $r20, $r24, $r25, $r27, $r33, $r35, $r39, $r44;
        org.apache.velocity.context.InternalContextAdapterImpl $r0;
        org.apache.velocity.exception.ParseErrorException $r49;
        java.io.IOException $r29;
        java.lang.RuntimeException $r47;
        org.apache.velocity.runtime.directive.Scope $r8, $r14, $r17, $r22, $r28, r50, r51;
        org.apache.velocity.runtime.log.Log $r37, $r38, $r45;
        java.lang.Object $r7, $r9, $r12, $r16, $r21, $r23, $r26;
        org.apache.velocity.runtime.directive.StopCommand $r36;

        r4 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r1 := @parameter0: org.apache.velocity.context.Context;

        r5 := @parameter1: java.io.Writer;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: org.apache.velocity.runtime.parser.node.SimpleNode;

        $r0 = new org.apache.velocity.context.InternalContextAdapterImpl;

        specialinvoke $r0.<org.apache.velocity.context.InternalContextAdapterImpl: void <init>(org.apache.velocity.context.Context)>(r1);

        virtualinvoke $r0.<org.apache.velocity.context.InternalContextAdapterImpl: void pushCurrentTemplateName(java.lang.String)>(r2);

     label01:
        virtualinvoke r3.<org.apache.velocity.runtime.parser.node.SimpleNode: java.lang.Object init(org.apache.velocity.context.InternalContextAdapter,java.lang.Object)>($r0, r4);

     label02:
        goto label06;

     label03:
        $r48 := @caughtexception;

        $r49 = new org.apache.velocity.exception.ParseErrorException;

        specialinvoke $r49.<org.apache.velocity.exception.ParseErrorException: void <init>(org.apache.velocity.exception.VelocityException,java.lang.String)>($r48, null);

        throw $r49;

     label04:
        $r47 := @caughtexception;

        throw $r47;

     label05:
        $r40 := @caughtexception;

        $r41 = new java.lang.StringBuffer;

        specialinvoke $r41.<java.lang.StringBuffer: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RuntimeInstance.render(): init exception for tag = ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.String toString()>();

        $r45 = virtualinvoke r4.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log getLog()>();

        virtualinvoke $r45.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>($r44, $r40);

        $r46 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r46.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r44, $r40);

        throw $r46;

     label06:
        $z0 = r4.<org.apache.velocity.runtime.RuntimeInstance: boolean provideEvaluateScope>;

        if $z0 == 0 goto label07;

        $r15 = r4.<org.apache.velocity.runtime.RuntimeInstance: java.lang.String evaluateScopeName>;

        $r16 = virtualinvoke $r0.<org.apache.velocity.context.InternalContextAdapterImpl: java.lang.Object get(java.lang.String)>($r15);

        $r18 = r4.<org.apache.velocity.runtime.RuntimeInstance: java.lang.String evaluateScopeName>;

        $r17 = new org.apache.velocity.runtime.directive.Scope;

        specialinvoke $r17.<org.apache.velocity.runtime.directive.Scope: void <init>(java.lang.Object,java.lang.Object)>(r4, $r16);

        interfaceinvoke r1.<org.apache.velocity.context.Context: java.lang.Object put(java.lang.String,java.lang.Object)>($r18, $r17);

     label07:
        virtualinvoke r3.<org.apache.velocity.runtime.parser.node.SimpleNode: boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer)>($r0, r5);

     label08:
        goto label13;

     label09:
        $r36 := @caughtexception;

        $z5 = virtualinvoke $r36.<org.apache.velocity.runtime.directive.StopCommand: boolean isFor(java.lang.Object)>(r4);

        if $z5 != 0 goto label10;

        throw $r36;

     label10:
        $r37 = virtualinvoke r4.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log getLog()>();

        $z6 = virtualinvoke $r37.<org.apache.velocity.runtime.log.Log: boolean isDebugEnabled()>();

        if $z6 == 0 goto label11;

        $r38 = virtualinvoke r4.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log getLog()>();

        $r39 = virtualinvoke $r36.<org.apache.velocity.runtime.directive.StopCommand: java.lang.String getMessage()>();

        virtualinvoke $r38.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>($r39);

     label11:
        goto label13;

     label12:
        $r29 := @caughtexception;

        $r30 = new org.apache.velocity.exception.VelocityException;

        $r31 = new java.lang.StringBuffer;

        specialinvoke $r31.<java.lang.StringBuffer: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("IO Error in writer: ");

        $r33 = virtualinvoke $r29.<java.io.IOException: java.lang.String getMessage()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r30.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r35, $r29);

        throw $r30;

     label13:
        goto label18;

     label14:
        goto label17;

     label15:
        $r19 := @caughtexception;

        goto label22;

     label16:
        throw $r19;

     label17:
        return 1;

     label18:
        virtualinvoke $r0.<org.apache.velocity.context.InternalContextAdapterImpl: void popCurrentTemplateName()>();

        $z1 = r4.<org.apache.velocity.runtime.RuntimeInstance: boolean provideEvaluateScope>;

        if $z1 == 0 goto label21;

        $r6 = r4.<org.apache.velocity.runtime.RuntimeInstance: java.lang.String evaluateScopeName>;

        $r7 = virtualinvoke $r0.<org.apache.velocity.context.InternalContextAdapterImpl: java.lang.Object get(java.lang.String)>($r6);

        $z2 = $r7 instanceof org.apache.velocity.runtime.directive.Scope;

        if $z2 == 0 goto label21;

        r50 = (org.apache.velocity.runtime.directive.Scope) $r7;

        $r8 = virtualinvoke r50.<org.apache.velocity.runtime.directive.Scope: org.apache.velocity.runtime.directive.Scope getParent()>();

        if $r8 == null goto label19;

        $r13 = r4.<org.apache.velocity.runtime.RuntimeInstance: java.lang.String evaluateScopeName>;

        $r14 = virtualinvoke r50.<org.apache.velocity.runtime.directive.Scope: org.apache.velocity.runtime.directive.Scope getParent()>();

        virtualinvoke $r0.<org.apache.velocity.context.InternalContextAdapterImpl: java.lang.Object put(java.lang.String,java.lang.Object)>($r13, $r14);

        goto label21;

     label19:
        $r9 = virtualinvoke r50.<org.apache.velocity.runtime.directive.Scope: java.lang.Object getReplaced()>();

        if $r9 == null goto label20;

        $r11 = r4.<org.apache.velocity.runtime.RuntimeInstance: java.lang.String evaluateScopeName>;

        $r12 = virtualinvoke r50.<org.apache.velocity.runtime.directive.Scope: java.lang.Object getReplaced()>();

        virtualinvoke $r0.<org.apache.velocity.context.InternalContextAdapterImpl: java.lang.Object put(java.lang.String,java.lang.Object)>($r11, $r12);

        goto label21;

     label20:
        $r10 = r4.<org.apache.velocity.runtime.RuntimeInstance: java.lang.String evaluateScopeName>;

        virtualinvoke $r0.<org.apache.velocity.context.InternalContextAdapterImpl: java.lang.Object remove(java.lang.Object)>($r10);

     label21:
        goto label14;

     label22:
        virtualinvoke $r0.<org.apache.velocity.context.InternalContextAdapterImpl: void popCurrentTemplateName()>();

        $z3 = r4.<org.apache.velocity.runtime.RuntimeInstance: boolean provideEvaluateScope>;

        if $z3 == 0 goto label25;

        $r20 = r4.<org.apache.velocity.runtime.RuntimeInstance: java.lang.String evaluateScopeName>;

        $r21 = virtualinvoke $r0.<org.apache.velocity.context.InternalContextAdapterImpl: java.lang.Object get(java.lang.String)>($r20);

        $z4 = $r21 instanceof org.apache.velocity.runtime.directive.Scope;

        if $z4 == 0 goto label25;

        r51 = (org.apache.velocity.runtime.directive.Scope) $r21;

        $r22 = virtualinvoke r51.<org.apache.velocity.runtime.directive.Scope: org.apache.velocity.runtime.directive.Scope getParent()>();

        if $r22 == null goto label23;

        $r27 = r4.<org.apache.velocity.runtime.RuntimeInstance: java.lang.String evaluateScopeName>;

        $r28 = virtualinvoke r51.<org.apache.velocity.runtime.directive.Scope: org.apache.velocity.runtime.directive.Scope getParent()>();

        virtualinvoke $r0.<org.apache.velocity.context.InternalContextAdapterImpl: java.lang.Object put(java.lang.String,java.lang.Object)>($r27, $r28);

        goto label25;

     label23:
        $r23 = virtualinvoke r51.<org.apache.velocity.runtime.directive.Scope: java.lang.Object getReplaced()>();

        if $r23 == null goto label24;

        $r25 = r4.<org.apache.velocity.runtime.RuntimeInstance: java.lang.String evaluateScopeName>;

        $r26 = virtualinvoke r51.<org.apache.velocity.runtime.directive.Scope: java.lang.Object getReplaced()>();

        virtualinvoke $r0.<org.apache.velocity.context.InternalContextAdapterImpl: java.lang.Object put(java.lang.String,java.lang.Object)>($r25, $r26);

        goto label25;

     label24:
        $r24 = r4.<org.apache.velocity.runtime.RuntimeInstance: java.lang.String evaluateScopeName>;

        virtualinvoke $r0.<org.apache.velocity.context.InternalContextAdapterImpl: java.lang.Object remove(java.lang.Object)>($r24);

     label25:
        goto label16;

        catch org.apache.velocity.exception.TemplateInitException from label01 to label02 with label03;
        catch java.lang.RuntimeException from label01 to label02 with label04;
        catch java.lang.Exception from label01 to label02 with label05;
        catch org.apache.velocity.runtime.directive.StopCommand from label06 to label08 with label09;
        catch java.io.IOException from label06 to label08 with label12;
        catch java.lang.Throwable from label01 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    public boolean invokeVelocimacro(java.lang.String, java.lang.String, java.lang.String[], org.apache.velocity.context.Context, java.io.Writer)
    {
        org.apache.commons.lang.text.StrBuilder $r4;
        org.apache.velocity.runtime.RuntimeInstance r1;
        java.lang.String[] r15;
        java.lang.NullPointerException $r17;
        org.apache.velocity.context.Context r2;
        java.lang.StringBuffer $r7, $r8, $r9, $r10;
        int $i0, i1;
        java.lang.String r0, $r5, $r6, $r11, r14;
        org.apache.velocity.exception.VelocityException $r13;
        boolean $z0, $z1;
        org.apache.velocity.runtime.log.Log $r12, $r16;
        java.io.Writer r3;

        r1 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r0 := @parameter0: java.lang.String;

        r14 := @parameter1: java.lang.String;

        r15 := @parameter2: java.lang.String[];

        r2 := @parameter3: org.apache.velocity.context.Context;

        r3 := @parameter4: java.io.Writer;

        if r0 == null goto label1;

        if r2 == null goto label1;

        if r3 != null goto label2;

     label1:
        $r16 = virtualinvoke r1.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log getLog()>();

        virtualinvoke $r16.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>("RuntimeInstance.invokeVelocimacro() : invalid call : vmName, context, and writer must not be null");

        $r17 = new java.lang.NullPointerException;

        specialinvoke $r17.<java.lang.NullPointerException: void <init>(java.lang.String)>("RuntimeInstance.invokeVelocimacro() : invalid call : vmName, context, and writer must not be null");

        throw $r17;

     label2:
        if r14 != null goto label3;

        r14 = r0;

     label3:
        if r15 != null goto label4;

        r15 = newarray (java.lang.String)[0];

     label4:
        $z0 = virtualinvoke r1.<org.apache.velocity.runtime.RuntimeInstance: boolean isVelocimacro(java.lang.String,java.lang.String)>(r0, r14);

        if $z0 != 0 goto label5;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RuntimeInstance.invokeVelocimacro() : VM \'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' is not registered.");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        $r12 = virtualinvoke r1.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log getLog()>();

        virtualinvoke $r12.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>($r11);

        $r13 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r13.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String)>($r11);

        throw $r13;

     label5:
        $r4 = new org.apache.commons.lang.text.StrBuilder;

        specialinvoke $r4.<org.apache.commons.lang.text.StrBuilder: void <init>(java.lang.String)>("#");

        virtualinvoke $r4.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.String)>(r0);

        virtualinvoke $r4.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.String)>("(");

        i1 = 0;

     label6:
        $i0 = lengthof r15;

        if i1 >= $i0 goto label7;

        virtualinvoke $r4.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.String)>(" $");

        $r6 = r15[i1];

        virtualinvoke $r4.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.String)>($r6);

        i1 = i1 + 1;

        goto label6;

     label7:
        virtualinvoke $r4.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.String)>(" )");

        $r5 = virtualinvoke $r4.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

        $z1 = virtualinvoke r1.<org.apache.velocity.runtime.RuntimeInstance: boolean evaluate(org.apache.velocity.context.Context,java.io.Writer,java.lang.String,java.lang.String)>(r2, r3, r14, $r5);

        return $z1;
    }

    private java.lang.String getDefaultEncoding()
    {
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.String $r1, $r2, $r3;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        $r1 = r0.<org.apache.velocity.runtime.RuntimeInstance: java.lang.String encoding>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: java.lang.String getString(java.lang.String,java.lang.String)>("input.encoding", "ISO-8859-1");

        r0.<org.apache.velocity.runtime.RuntimeInstance: java.lang.String encoding> = $r3;

     label1:
        $r2 = r0.<org.apache.velocity.runtime.RuntimeInstance: java.lang.String encoding>;

        return $r2;
    }

    public org.apache.velocity.Template getTemplate(java.lang.String) throws org.apache.velocity.exception.ResourceNotFoundException, org.apache.velocity.exception.ParseErrorException
    {
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.String r1, $r2;
        org.apache.velocity.Template $r3;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: java.lang.String getDefaultEncoding()>();

        $r3 = virtualinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.Template getTemplate(java.lang.String,java.lang.String)>(r1, $r2);

        return $r3;
    }

    public org.apache.velocity.Template getTemplate(java.lang.String, java.lang.String) throws org.apache.velocity.exception.ResourceNotFoundException, org.apache.velocity.exception.ParseErrorException
    {
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.String r1, r2;
        org.apache.velocity.runtime.resource.Resource $r4;
        org.apache.velocity.runtime.resource.ResourceManager $r3;
        org.apache.velocity.Template $r5;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: void requireInitialization()>();

        $r3 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.resource.ResourceManager resourceManager>;

        $r4 = interfaceinvoke $r3.<org.apache.velocity.runtime.resource.ResourceManager: org.apache.velocity.runtime.resource.Resource getResource(java.lang.String,int,java.lang.String)>(r1, 1, r2);

        $r5 = (org.apache.velocity.Template) $r4;

        return $r5;
    }

    public org.apache.velocity.runtime.resource.ContentResource getContent(java.lang.String) throws org.apache.velocity.exception.ResourceNotFoundException, org.apache.velocity.exception.ParseErrorException
    {
        org.apache.velocity.runtime.resource.ContentResource $r3;
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: java.lang.String getDefaultEncoding()>();

        $r3 = virtualinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.resource.ContentResource getContent(java.lang.String,java.lang.String)>(r1, $r2);

        return $r3;
    }

    public org.apache.velocity.runtime.resource.ContentResource getContent(java.lang.String, java.lang.String) throws org.apache.velocity.exception.ResourceNotFoundException, org.apache.velocity.exception.ParseErrorException
    {
        org.apache.velocity.runtime.resource.ContentResource $r5;
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.String r1, r2;
        org.apache.velocity.runtime.resource.Resource $r4;
        org.apache.velocity.runtime.resource.ResourceManager $r3;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: void requireInitialization()>();

        $r3 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.resource.ResourceManager resourceManager>;

        $r4 = interfaceinvoke $r3.<org.apache.velocity.runtime.resource.ResourceManager: org.apache.velocity.runtime.resource.Resource getResource(java.lang.String,int,java.lang.String)>(r1, 2, r2);

        $r5 = (org.apache.velocity.runtime.resource.ContentResource) $r4;

        return $r5;
    }

    public java.lang.String getLoaderNameForResource(java.lang.String)
    {
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.String r1, $r3;
        org.apache.velocity.runtime.resource.ResourceManager $r2;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: void requireInitialization()>();

        $r2 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.resource.ResourceManager resourceManager>;

        $r3 = interfaceinvoke $r2.<org.apache.velocity.runtime.resource.ResourceManager: java.lang.String getLoaderNameForResource(java.lang.String)>(r1);

        return $r3;
    }

    public org.apache.velocity.runtime.log.Log getLog()
    {
        org.apache.velocity.runtime.log.Log $r1;
        org.apache.velocity.runtime.RuntimeInstance r0;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        $r1 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log log>;

        return $r1;
    }

    public void warn(java.lang.Object)
    {
        org.apache.velocity.runtime.log.Log $r1;
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.Object r2;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log getLog()>();

        virtualinvoke $r1.<org.apache.velocity.runtime.log.Log: void warn(java.lang.Object)>(r2);

        return;
    }

    public void info(java.lang.Object)
    {
        org.apache.velocity.runtime.log.Log $r1;
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.Object r2;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log getLog()>();

        virtualinvoke $r1.<org.apache.velocity.runtime.log.Log: void info(java.lang.Object)>(r2);

        return;
    }

    public void error(java.lang.Object)
    {
        org.apache.velocity.runtime.log.Log $r1;
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.Object r2;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log getLog()>();

        virtualinvoke $r1.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>(r2);

        return;
    }

    public void debug(java.lang.Object)
    {
        org.apache.velocity.runtime.log.Log $r1;
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.Object r2;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log getLog()>();

        virtualinvoke $r1.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>(r2);

        return;
    }

    public java.lang.String getString(java.lang.String, java.lang.String)
    {
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.String r1, r2, $r4;
        org.apache.commons.collections.ExtendedProperties $r3;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties configuration>;

        $r4 = virtualinvoke $r3.<org.apache.commons.collections.ExtendedProperties: java.lang.String getString(java.lang.String,java.lang.String)>(r1, r2);

        return $r4;
    }

    public org.apache.velocity.runtime.directive.Directive getVelocimacro(java.lang.String, java.lang.String)
    {
        org.apache.velocity.runtime.VelocimacroFactory $r3;
        org.apache.velocity.runtime.directive.Directive $r4;
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.VelocimacroFactory vmFactory>;

        $r4 = virtualinvoke $r3.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.directive.Directive getVelocimacro(java.lang.String,java.lang.String)>(r1, r2);

        return $r4;
    }

    public org.apache.velocity.runtime.directive.Directive getVelocimacro(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.velocity.runtime.VelocimacroFactory $r4;
        org.apache.velocity.runtime.directive.Directive $r5;
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.String r1, r2, r3;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.VelocimacroFactory vmFactory>;

        $r5 = virtualinvoke $r4.<org.apache.velocity.runtime.VelocimacroFactory: org.apache.velocity.runtime.directive.Directive getVelocimacro(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        return $r5;
    }

    public boolean addVelocimacro(java.lang.String, java.lang.String, java.lang.String[], java.lang.String)
    {
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.String[] r5;
        org.apache.velocity.runtime.VelocimacroFactory $r2;
        java.lang.String r1, $r3, r4, r6;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String[];

        r6 := @parameter3: java.lang.String;

        $r2 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.VelocimacroFactory vmFactory>;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String intern()>();

        $z0 = virtualinvoke $r2.<org.apache.velocity.runtime.VelocimacroFactory: boolean addVelocimacro(java.lang.String,java.lang.String,java.lang.String[],java.lang.String)>($r3, r4, r5, r6);

        return $z0;
    }

    public boolean addVelocimacro(java.lang.String, org.apache.velocity.runtime.parser.node.Node, java.lang.String[], java.lang.String)
    {
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.String[] r5;
        org.apache.velocity.runtime.VelocimacroFactory $r2;
        java.lang.String r1, $r3, r6;
        org.apache.velocity.runtime.parser.node.Node r4;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: org.apache.velocity.runtime.parser.node.Node;

        r5 := @parameter2: java.lang.String[];

        r6 := @parameter3: java.lang.String;

        $r2 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.VelocimacroFactory vmFactory>;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String intern()>();

        $z0 = virtualinvoke $r2.<org.apache.velocity.runtime.VelocimacroFactory: boolean addVelocimacro(java.lang.String,org.apache.velocity.runtime.parser.node.Node,java.lang.String[],java.lang.String)>($r3, r4, r5, r6);

        return $z0;
    }

    public boolean isVelocimacro(java.lang.String, java.lang.String)
    {
        org.apache.velocity.runtime.VelocimacroFactory $r2;
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.String r1, $r3, r4;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r2 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.VelocimacroFactory vmFactory>;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String intern()>();

        $z0 = virtualinvoke $r2.<org.apache.velocity.runtime.VelocimacroFactory: boolean isVelocimacro(java.lang.String,java.lang.String)>($r3, r4);

        return $z0;
    }

    public boolean dumpVMNamespace(java.lang.String)
    {
        org.apache.velocity.runtime.VelocimacroFactory $r2;
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.VelocimacroFactory vmFactory>;

        $z0 = virtualinvoke $r2.<org.apache.velocity.runtime.VelocimacroFactory: boolean dumpVMNamespace(java.lang.String)>(r1);

        return $z0;
    }

    public java.lang.String getString(java.lang.String)
    {
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.String r1, $r3, $r4;
        org.apache.commons.collections.ExtendedProperties $r2;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties configuration>;

        $r3 = virtualinvoke $r2.<org.apache.commons.collections.ExtendedProperties: java.lang.String getString(java.lang.String)>(r1);

        $r4 = staticinvoke <org.apache.velocity.util.StringUtils: java.lang.String nullTrim(java.lang.String)>($r3);

        return $r4;
    }

    public int getInt(java.lang.String)
    {
        int $i0;
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.String r1;
        org.apache.commons.collections.ExtendedProperties $r2;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties configuration>;

        $i0 = virtualinvoke $r2.<org.apache.commons.collections.ExtendedProperties: int getInt(java.lang.String)>(r1);

        return $i0;
    }

    public int getInt(java.lang.String, int)
    {
        int i0, $i1;
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.String r1;
        org.apache.commons.collections.ExtendedProperties $r2;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties configuration>;

        $i1 = virtualinvoke $r2.<org.apache.commons.collections.ExtendedProperties: int getInt(java.lang.String,int)>(r1, i0);

        return $i1;
    }

    public boolean getBoolean(java.lang.String, boolean)
    {
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.String r1;
        org.apache.commons.collections.ExtendedProperties $r2;
        boolean z0, $z1;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties configuration>;

        $z1 = virtualinvoke $r2.<org.apache.commons.collections.ExtendedProperties: boolean getBoolean(java.lang.String,boolean)>(r1, z0);

        return $z1;
    }

    public org.apache.commons.collections.ExtendedProperties getConfiguration()
    {
        org.apache.velocity.runtime.RuntimeInstance r0;
        org.apache.commons.collections.ExtendedProperties $r1;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        $r1 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties configuration>;

        return $r1;
    }

    public org.apache.velocity.util.introspection.Introspector getIntrospector()
    {
        org.apache.velocity.runtime.RuntimeInstance r0;
        org.apache.velocity.util.introspection.Introspector $r1;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        $r1 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.util.introspection.Introspector introspector>;

        return $r1;
    }

    public org.apache.velocity.app.event.EventCartridge getApplicationEventCartridge()
    {
        org.apache.velocity.runtime.RuntimeInstance r0;
        org.apache.velocity.app.event.EventCartridge $r1;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        $r1 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.app.event.EventCartridge eventCartridge>;

        return $r1;
    }

    public java.lang.Object getApplicationAttribute(java.lang.Object)
    {
        java.util.Map $r2;
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.Object r1, $r3;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.velocity.runtime.RuntimeInstance: java.util.Map applicationAttributes>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        return $r3;
    }

    public java.lang.Object setApplicationAttribute(java.lang.Object, java.lang.Object)
    {
        java.util.Map $r3;
        org.apache.velocity.runtime.RuntimeInstance r0;
        java.lang.Object r1, r2, $r4;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.velocity.runtime.RuntimeInstance: java.util.Map applicationAttributes>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return $r4;
    }

    public org.apache.velocity.util.introspection.Uberspect getUberspect()
    {
        org.apache.velocity.util.introspection.Uberspect $r1;
        org.apache.velocity.runtime.RuntimeInstance r0;

        r0 := @this: org.apache.velocity.runtime.RuntimeInstance;

        $r1 = r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.util.introspection.Uberspect uberSpect>;

        return $r1;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
