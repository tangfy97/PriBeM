final class com.google.inject.internal.State$1 extends java.lang.Object implements com.google.inject.internal.State
{

    void <init>()
    {
        com.google.inject.internal.State$1 r0;

        r0 := @this: com.google.inject.internal.State$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.google.inject.internal.State parent()
    {
        java.lang.UnsupportedOperationException $r0;
        com.google.inject.internal.State$1 r1;

        r1 := @this: com.google.inject.internal.State$1;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public com.google.inject.internal.BindingImpl getExplicitBinding(com.google.inject.Key)
    {
        com.google.inject.Key r1;
        com.google.inject.internal.State$1 r0;

        r0 := @this: com.google.inject.internal.State$1;

        r1 := @parameter0: com.google.inject.Key;

        return null;
    }

    public java.util.Map getExplicitBindingsThisLevel()
    {
        java.lang.UnsupportedOperationException $r0;
        com.google.inject.internal.State$1 r1;

        r1 := @this: com.google.inject.internal.State$1;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void putBinding(com.google.inject.Key, com.google.inject.internal.BindingImpl)
    {
        java.lang.UnsupportedOperationException $r0;
        com.google.inject.internal.State$1 r1;
        com.google.inject.internal.BindingImpl r3;
        com.google.inject.Key r2;

        r1 := @this: com.google.inject.internal.State$1;

        r2 := @parameter0: com.google.inject.Key;

        r3 := @parameter1: com.google.inject.internal.BindingImpl;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public com.google.inject.Scope getScope(java.lang.Class)
    {
        com.google.inject.internal.State$1 r0;
        java.lang.Class r1;

        r0 := @this: com.google.inject.internal.State$1;

        r1 := @parameter0: java.lang.Class;

        return null;
    }

    public void putAnnotation(java.lang.Class, com.google.inject.Scope)
    {
        java.lang.UnsupportedOperationException $r0;
        com.google.inject.internal.State$1 r1;
        java.lang.Class r2;
        com.google.inject.Scope r3;

        r1 := @this: com.google.inject.internal.State$1;

        r2 := @parameter0: java.lang.Class;

        r3 := @parameter1: com.google.inject.Scope;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void addConverter(com.google.inject.spi.TypeConverterBinding)
    {
        java.lang.UnsupportedOperationException $r0;
        com.google.inject.internal.State$1 r1;
        com.google.inject.spi.TypeConverterBinding r2;

        r1 := @this: com.google.inject.internal.State$1;

        r2 := @parameter0: com.google.inject.spi.TypeConverterBinding;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public com.google.inject.spi.TypeConverterBinding getConverter(java.lang.String, com.google.inject.TypeLiteral, com.google.inject.internal.Errors, java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        com.google.inject.internal.Errors r4;
        com.google.inject.internal.State$1 r1;
        java.lang.Object r5;
        java.lang.String r2;
        com.google.inject.TypeLiteral r3;

        r1 := @this: com.google.inject.internal.State$1;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: com.google.inject.TypeLiteral;

        r4 := @parameter2: com.google.inject.internal.Errors;

        r5 := @parameter3: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.lang.Iterable getConvertersThisLevel()
    {
        com.google.inject.internal.State$1 r1;
        com.google.inject.internal.util.$ImmutableSet $r0;

        r1 := @this: com.google.inject.internal.State$1;

        $r0 = staticinvoke <com.google.inject.internal.util.$ImmutableSet: com.google.inject.internal.util.$ImmutableSet of()>();

        return $r0;
    }

    public void addMethodAspect(com.google.inject.internal.MethodAspect)
    {
        java.lang.UnsupportedOperationException $r0;
        com.google.inject.internal.State$1 r1;
        com.google.inject.internal.MethodAspect r2;

        r1 := @this: com.google.inject.internal.State$1;

        r2 := @parameter0: com.google.inject.internal.MethodAspect;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public com.google.inject.internal.util.$ImmutableList getMethodAspects()
    {
        com.google.inject.internal.State$1 r1;
        com.google.inject.internal.util.$ImmutableList $r0;

        r1 := @this: com.google.inject.internal.State$1;

        $r0 = staticinvoke <com.google.inject.internal.util.$ImmutableList: com.google.inject.internal.util.$ImmutableList of()>();

        return $r0;
    }

    public void addTypeListener(com.google.inject.spi.TypeListenerBinding)
    {
        java.lang.UnsupportedOperationException $r0;
        com.google.inject.internal.State$1 r1;
        com.google.inject.spi.TypeListenerBinding r2;

        r1 := @this: com.google.inject.internal.State$1;

        r2 := @parameter0: com.google.inject.spi.TypeListenerBinding;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.util.List getTypeListenerBindings()
    {
        com.google.inject.internal.State$1 r1;
        com.google.inject.internal.util.$ImmutableList $r0;

        r1 := @this: com.google.inject.internal.State$1;

        $r0 = staticinvoke <com.google.inject.internal.util.$ImmutableList: com.google.inject.internal.util.$ImmutableList of()>();

        return $r0;
    }

    public void blacklist(com.google.inject.Key, java.lang.Object)
    {
        com.google.inject.Key r1;
        com.google.inject.internal.State$1 r0;
        java.lang.Object r2;

        r0 := @this: com.google.inject.internal.State$1;

        r1 := @parameter0: com.google.inject.Key;

        r2 := @parameter1: java.lang.Object;

        return;
    }

    public boolean isBlacklisted(com.google.inject.Key)
    {
        com.google.inject.Key r1;
        com.google.inject.internal.State$1 r0;

        r0 := @this: com.google.inject.internal.State$1;

        r1 := @parameter0: com.google.inject.Key;

        return 1;
    }

    public java.util.Set getSourcesForBlacklistedKey(com.google.inject.Key)
    {
        com.google.inject.Key r2;
        java.lang.UnsupportedOperationException $r0;
        com.google.inject.internal.State$1 r1;

        r1 := @this: com.google.inject.internal.State$1;

        r2 := @parameter0: com.google.inject.Key;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.lang.Object lock()
    {
        java.lang.UnsupportedOperationException $r0;
        com.google.inject.internal.State$1 r1;

        r1 := @this: com.google.inject.internal.State$1;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.util.Map getScopes()
    {
        com.google.inject.internal.State$1 r1;
        com.google.inject.internal.util.$ImmutableMap $r0;

        r1 := @this: com.google.inject.internal.State$1;

        $r0 = staticinvoke <com.google.inject.internal.util.$ImmutableMap: com.google.inject.internal.util.$ImmutableMap of()>();

        return $r0;
    }
}
