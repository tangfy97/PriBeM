public class com.hp.hpl.jena.sparql.engine.iterator.QueryIterSlice extends com.hp.hpl.jena.sparql.engine.iterator.QueryIter1
{
    long count;
    long limit;
    long offset;

    public void <init>(com.hp.hpl.jena.sparql.engine.QueryIterator, long, long, com.hp.hpl.jena.sparql.engine.ExecutionContext)
    {
        byte $b2, $b5, $b7, $b9, $b12;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIterSlice r0;
        com.hp.hpl.jena.sparql.engine.ExecutionContext r2;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r10, $r11, $r13, $r15;
        com.hp.hpl.jena.sparql.engine.QueryIterator r1;
        long l0, $l1, l3, $l4, $l6, $l8, $l10, $l11, $l13, $l14;
        int i15, $i16, $i17, $i18;
        com.hp.hpl.jena.query.QueryExecException $r14, $r16;
        java.lang.String $r7, $r12;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIterSlice;

        r1 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryIterator;

        l0 := @parameter1: long;

        l3 := @parameter2: long;

        r2 := @parameter3: com.hp.hpl.jena.sparql.engine.ExecutionContext;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIter1: void <init>(com.hp.hpl.jena.sparql.engine.QueryIterator,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r1, r2);

        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterSlice: long count> = 0L;

        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterSlice: long offset> = l0;

        $l1 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterSlice: long offset>;

        $b2 = $l1 cmp -9223372036854775808L;

        if $b2 != 0 goto label1;

        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterSlice: long offset> = 0L;

     label1:
        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterSlice: long limit> = l3;

        $l4 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterSlice: long limit>;

        $b5 = $l4 cmp -9223372036854775808L;

        if $b5 != 0 goto label2;

        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterSlice: long limit> = 9223372036854775807L;

     label2:
        $l6 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterSlice: long limit>;

        $b7 = $l6 cmp 0L;

        $i16 = (int) $b7;

        if $i16 >= 0 goto label3;

        $r14 = new com.hp.hpl.jena.query.QueryExecException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Negative LIMIT: ");

        $l14 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterSlice: long limit>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l14);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<com.hp.hpl.jena.query.QueryExecException: void <init>(java.lang.String)>($r12);

        throw $r14;

     label3:
        $l8 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterSlice: long offset>;

        $b9 = $l8 cmp 0L;

        $i17 = (int) $b9;

        if $i17 >= 0 goto label4;

        $r16 = new com.hp.hpl.jena.query.QueryExecException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Negative OFFSET: ");

        $l13 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterSlice: long offset>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l13);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<com.hp.hpl.jena.query.QueryExecException: void <init>(java.lang.String)>($r7);

        throw $r16;

     label4:
        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterSlice: long count> = 0L;

        i15 = 0;

     label5:
        $l11 = (long) i15;

        $l10 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterSlice: long offset>;

        $b12 = $l11 cmp $l10;

        $i18 = (int) $b12;

        if $i18 >= 0 goto label7;

        $z0 = interfaceinvoke r1.<com.hp.hpl.jena.sparql.engine.QueryIterator: boolean hasNext()>();

        if $z0 != 0 goto label6;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterSlice: void close()>();

        goto label7;

     label6:
        interfaceinvoke r1.<com.hp.hpl.jena.sparql.engine.QueryIterator: java.lang.Object next()>();

        i15 = i15 + 1;

        goto label5;

     label7:
        return;
    }

    protected boolean hasNextBinding()
    {
        long $l0, $l1;
        byte $b2;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIterSlice r0;
        int $i3;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIterSlice;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterSlice: boolean isFinished()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterSlice: com.hp.hpl.jena.sparql.engine.QueryIterator getInput()>();

        $z1 = interfaceinvoke $r1.<com.hp.hpl.jena.sparql.engine.QueryIterator: boolean hasNext()>();

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $l1 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterSlice: long count>;

        $l0 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterSlice: long limit>;

        $b2 = $l1 cmp $l0;

        $i3 = (int) $b2;

        if $i3 < 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    protected com.hp.hpl.jena.sparql.engine.binding.Binding moveToNextBinding()
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding $r2;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIterSlice r0;
        long $l0, $l1;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIterSlice;

        $l0 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterSlice: long count>;

        $l1 = $l0 + 1L;

        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterSlice: long count> = $l1;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterSlice: com.hp.hpl.jena.sparql.engine.QueryIterator getInput()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.sparql.engine.QueryIterator: com.hp.hpl.jena.sparql.engine.binding.Binding nextBinding()>();

        return $r2;
    }

    protected void closeSubIterator()
    {
        com.hp.hpl.jena.sparql.engine.iterator.QueryIterSlice r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIterSlice;

        return;
    }

    protected void requestSubCancel()
    {
        com.hp.hpl.jena.sparql.engine.iterator.QueryIterSlice r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIterSlice;

        return;
    }
}
