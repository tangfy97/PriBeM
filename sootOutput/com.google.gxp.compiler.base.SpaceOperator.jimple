public abstract enum class com.google.gxp.compiler.base.SpaceOperator extends java.lang.Enum implements com.google.gxp.com.google.common.base.Function
{
    public static final enum com.google.gxp.compiler.base.SpaceOperator PRESERVE;
    public static final enum com.google.gxp.compiler.base.SpaceOperator REMOVE;
    public static final enum com.google.gxp.compiler.base.SpaceOperator NORMALIZE;
    public static final enum com.google.gxp.compiler.base.SpaceOperator COLLAPSE;
    private static final java.util.regex.Pattern WHITESPACE_ONLY;
    private static final com.google.gxp.compiler.base.SpaceOperator[] $VALUES;

    public static com.google.gxp.compiler.base.SpaceOperator[] values()
    {
        java.lang.Object $r1;
        com.google.gxp.compiler.base.SpaceOperator[] $r0, $r2;

        $r0 = <com.google.gxp.compiler.base.SpaceOperator: com.google.gxp.compiler.base.SpaceOperator[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (com.google.gxp.compiler.base.SpaceOperator[]) $r1;

        return $r2;
    }

    public static com.google.gxp.compiler.base.SpaceOperator valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        com.google.gxp.compiler.base.SpaceOperator $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/google/gxp/compiler/base/SpaceOperator;", r0);

        $r2 = (com.google.gxp.compiler.base.SpaceOperator) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        int i0;
        java.lang.String r1;
        com.google.gxp.compiler.base.SpaceOperator r0;

        r0 := @this: com.google.gxp.compiler.base.SpaceOperator;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    protected abstract java.lang.String impl(java.lang.String);

    public java.lang.String apply(java.lang.String)
    {
        java.util.regex.Matcher $r2;
        java.lang.String r0, $r5;
        java.util.regex.Pattern $r1;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;
        com.google.gxp.compiler.base.SpaceOperator r4;

        r4 := @this: com.google.gxp.compiler.base.SpaceOperator;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.google.gxp.compiler.base.SpaceOperator: java.util.regex.Pattern WHITESPACE_ONLY>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r4.<com.google.gxp.compiler.base.SpaceOperator: java.lang.String impl(java.lang.String)>(r0);

        return $r5;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot apply SpaceOperator to non-spaces!");

        throw $r3;
    }

    public volatile java.lang.Object apply(java.lang.Object)
    {
        java.lang.Object r1;
        java.lang.String $r2, $r3;
        com.google.gxp.compiler.base.SpaceOperator r0;

        r0 := @this: com.google.gxp.compiler.base.SpaceOperator;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.String) r1;

        $r3 = virtualinvoke r0.<com.google.gxp.compiler.base.SpaceOperator: java.lang.String apply(java.lang.String)>($r2);

        return $r3;
    }

    void <init>(java.lang.String, int, com.google.gxp.compiler.base.SpaceOperator$1)
    {
        com.google.gxp.compiler.base.SpaceOperator$1 r2;
        int i0;
        java.lang.String r1;
        com.google.gxp.compiler.base.SpaceOperator r0;

        r0 := @this: com.google.gxp.compiler.base.SpaceOperator;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: com.google.gxp.compiler.base.SpaceOperator$1;

        specialinvoke r0.<com.google.gxp.compiler.base.SpaceOperator: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        com.google.gxp.compiler.base.SpaceOperator$2 $r1;
        com.google.gxp.compiler.base.SpaceOperator$1 $r0;
        com.google.gxp.compiler.base.SpaceOperator$4 $r3;
        com.google.gxp.compiler.base.SpaceOperator$3 $r2;
        com.google.gxp.compiler.base.SpaceOperator[] $r4;
        java.util.regex.Pattern $r9;
        com.google.gxp.compiler.base.SpaceOperator $r5, $r6, $r7, $r8;

        $r0 = new com.google.gxp.compiler.base.SpaceOperator$1;

        specialinvoke $r0.<com.google.gxp.compiler.base.SpaceOperator$1: void <init>(java.lang.String,int)>("PRESERVE", 0);

        <com.google.gxp.compiler.base.SpaceOperator: com.google.gxp.compiler.base.SpaceOperator PRESERVE> = $r0;

        $r1 = new com.google.gxp.compiler.base.SpaceOperator$2;

        specialinvoke $r1.<com.google.gxp.compiler.base.SpaceOperator$2: void <init>(java.lang.String,int)>("REMOVE", 1);

        <com.google.gxp.compiler.base.SpaceOperator: com.google.gxp.compiler.base.SpaceOperator REMOVE> = $r1;

        $r2 = new com.google.gxp.compiler.base.SpaceOperator$3;

        specialinvoke $r2.<com.google.gxp.compiler.base.SpaceOperator$3: void <init>(java.lang.String,int)>("NORMALIZE", 2);

        <com.google.gxp.compiler.base.SpaceOperator: com.google.gxp.compiler.base.SpaceOperator NORMALIZE> = $r2;

        $r3 = new com.google.gxp.compiler.base.SpaceOperator$4;

        specialinvoke $r3.<com.google.gxp.compiler.base.SpaceOperator$4: void <init>(java.lang.String,int)>("COLLAPSE", 3);

        <com.google.gxp.compiler.base.SpaceOperator: com.google.gxp.compiler.base.SpaceOperator COLLAPSE> = $r3;

        $r4 = newarray (com.google.gxp.compiler.base.SpaceOperator)[4];

        $r5 = <com.google.gxp.compiler.base.SpaceOperator: com.google.gxp.compiler.base.SpaceOperator PRESERVE>;

        $r4[0] = $r5;

        $r6 = <com.google.gxp.compiler.base.SpaceOperator: com.google.gxp.compiler.base.SpaceOperator REMOVE>;

        $r4[1] = $r6;

        $r7 = <com.google.gxp.compiler.base.SpaceOperator: com.google.gxp.compiler.base.SpaceOperator NORMALIZE>;

        $r4[2] = $r7;

        $r8 = <com.google.gxp.compiler.base.SpaceOperator: com.google.gxp.compiler.base.SpaceOperator COLLAPSE>;

        $r4[3] = $r8;

        <com.google.gxp.compiler.base.SpaceOperator: com.google.gxp.compiler.base.SpaceOperator[] $VALUES> = $r4;

        $r9 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^\\s*$");

        <com.google.gxp.compiler.base.SpaceOperator: java.util.regex.Pattern WHITESPACE_ONLY> = $r9;

        return;
    }
}
