public class org.apache.batik.ext.awt.image.spi.DefaultBrokenLinkProvider extends org.apache.batik.ext.awt.image.spi.BrokenLinkProvider
{
    static org.apache.batik.ext.awt.image.renderable.Filter brokenLinkImg;
    static final java.lang.String MESSAGE_RSRC;
    static final java.awt.Color BROKEN_LINK_COLOR;
    static java.lang.Class class$org$apache$batik$ext$awt$image$spi$DefaultBrokenLinkProvider;

    public void <init>()
    {
        org.apache.batik.ext.awt.image.spi.DefaultBrokenLinkProvider r0;

        r0 := @this: org.apache.batik.ext.awt.image.spi.DefaultBrokenLinkProvider;

        specialinvoke r0.<org.apache.batik.ext.awt.image.spi.BrokenLinkProvider: void <init>()>();

        return;
    }

    public static java.lang.String formatMessage(java.lang.Object, java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r6;
        org.apache.batik.i18n.LocalizableSupport $r3;
        java.lang.Class $r0, $r2, $r4, $r10;
        java.lang.Object r1;
        java.lang.SecurityException $r8;
        java.lang.String r5, $r7;
        java.lang.ClassLoader r9;

        r1 := @parameter0: java.lang.Object;

        r5 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.Object[];

        r9 = null;

     label1:
        $r0 = <org.apache.batik.ext.awt.image.spi.DefaultBrokenLinkProvider: java.lang.Class class$org$apache$batik$ext$awt$image$spi$DefaultBrokenLinkProvider>;

        if $r0 != null goto label2;

        $r10 = staticinvoke <org.apache.batik.ext.awt.image.spi.DefaultBrokenLinkProvider: java.lang.Class class$(java.lang.String)>("org.apache.batik.ext.awt.image.spi.DefaultBrokenLinkProvider");

        <org.apache.batik.ext.awt.image.spi.DefaultBrokenLinkProvider: java.lang.Class class$org$apache$batik$ext$awt$image$spi$DefaultBrokenLinkProvider> = $r10;

        goto label3;

     label2:
        $r10 = <org.apache.batik.ext.awt.image.spi.DefaultBrokenLinkProvider: java.lang.Class class$org$apache$batik$ext$awt$image$spi$DefaultBrokenLinkProvider>;

     label3:
        r9 = virtualinvoke $r10.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        r9 = virtualinvoke $r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;

     label6:
        $r3 = new org.apache.batik.i18n.LocalizableSupport;

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke $r3.<org.apache.batik.i18n.LocalizableSupport: void <init>(java.lang.String,java.lang.Class,java.lang.ClassLoader)>("resources.Messages", $r4, r9);

        $r7 = virtualinvoke $r3.<org.apache.batik.i18n.LocalizableSupport: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>(r5, r6);

        return $r7;

        catch java.lang.SecurityException from label1 to label4 with label5;
    }

    public org.apache.batik.ext.awt.image.renderable.Filter getBrokenLinkImage(java.lang.Object, java.lang.String, java.lang.Object[])
    {
        java.awt.Color $r13, $r14;
        java.lang.Throwable $r19;
        java.lang.Object[] r7;
        java.awt.Graphics2D $r12;
        java.lang.String r6, $r8;
        java.util.Hashtable $r4;
        boolean $z0;
        org.apache.batik.ext.awt.image.spi.DefaultBrokenLinkProvider r20;
        java.awt.image.BufferedImage $r3, $r9;
        org.apache.batik.ext.awt.image.renderable.RedRable $r15;
        org.apache.batik.ext.awt.image.renderable.Filter $r2, r17, r18;
        java.awt.image.ColorModel $r10;
        org.apache.batik.ext.awt.image.rendered.CachableRed $r16;
        java.lang.Class $r0, r1, $r21;
        java.lang.Object r5;
        java.awt.image.WritableRaster $r11;

        r20 := @this: org.apache.batik.ext.awt.image.spi.DefaultBrokenLinkProvider;

        r5 := @parameter0: java.lang.Object;

        r6 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.Object[];

        $r0 = <org.apache.batik.ext.awt.image.spi.DefaultBrokenLinkProvider: java.lang.Class class$org$apache$batik$ext$awt$image$spi$DefaultBrokenLinkProvider>;

        if $r0 != null goto label1;

        $r21 = staticinvoke <org.apache.batik.ext.awt.image.spi.DefaultBrokenLinkProvider: java.lang.Class class$(java.lang.String)>("org.apache.batik.ext.awt.image.spi.DefaultBrokenLinkProvider");

        <org.apache.batik.ext.awt.image.spi.DefaultBrokenLinkProvider: java.lang.Class class$org$apache$batik$ext$awt$image$spi$DefaultBrokenLinkProvider> = $r21;

        goto label2;

     label1:
        $r21 = <org.apache.batik.ext.awt.image.spi.DefaultBrokenLinkProvider: java.lang.Class class$org$apache$batik$ext$awt$image$spi$DefaultBrokenLinkProvider>;

     label2:
        r1 = $r21;

        entermonitor $r21;

     label3:
        $r2 = <org.apache.batik.ext.awt.image.spi.DefaultBrokenLinkProvider: org.apache.batik.ext.awt.image.renderable.Filter brokenLinkImg>;

        if $r2 == null goto label4;

        r18 = <org.apache.batik.ext.awt.image.spi.DefaultBrokenLinkProvider: org.apache.batik.ext.awt.image.renderable.Filter brokenLinkImg>;

        exitmonitor $r21;

        return r18;

     label4:
        $r3 = new java.awt.image.BufferedImage;

        specialinvoke $r3.<java.awt.image.BufferedImage: void <init>(int,int,int)>(100, 100, 2);

        $r4 = new java.util.Hashtable;

        specialinvoke $r4.<java.util.Hashtable: void <init>()>();

        $r8 = staticinvoke <org.apache.batik.ext.awt.image.spi.DefaultBrokenLinkProvider: java.lang.String formatMessage(java.lang.Object,java.lang.String,java.lang.Object[])>(r5, r6, r7);

        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.batik.BrokenLinkImage", $r8);

        $r9 = new java.awt.image.BufferedImage;

        $r10 = virtualinvoke $r3.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();

        $r11 = virtualinvoke $r3.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>();

        $z0 = virtualinvoke $r3.<java.awt.image.BufferedImage: boolean isAlphaPremultiplied()>();

        specialinvoke $r9.<java.awt.image.BufferedImage: void <init>(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)>($r10, $r11, $z0, $r4);

        $r12 = virtualinvoke $r9.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();

        $r13 = <org.apache.batik.ext.awt.image.spi.DefaultBrokenLinkProvider: java.awt.Color BROKEN_LINK_COLOR>;

        virtualinvoke $r12.<java.awt.Graphics: void setColor(java.awt.Color)>($r13);

        virtualinvoke $r12.<java.awt.Graphics: void fillRect(int,int,int,int)>(0, 0, 100, 100);

        $r14 = <java.awt.Color: java.awt.Color black>;

        virtualinvoke $r12.<java.awt.Graphics: void setColor(java.awt.Color)>($r14);

        virtualinvoke $r12.<java.awt.Graphics: void drawRect(int,int,int,int)>(2, 2, 96, 96);

        virtualinvoke $r12.<java.awt.Graphics2D: void drawString(java.lang.String,int,int)>("Broken Image", 6, 50);

        virtualinvoke $r12.<java.awt.Graphics: void dispose()>();

        $r15 = new org.apache.batik.ext.awt.image.renderable.RedRable;

        $r16 = staticinvoke <org.apache.batik.ext.awt.image.GraphicsUtil: org.apache.batik.ext.awt.image.rendered.CachableRed wrap(java.awt.image.RenderedImage)>($r9);

        specialinvoke $r15.<org.apache.batik.ext.awt.image.renderable.RedRable: void <init>(org.apache.batik.ext.awt.image.rendered.CachableRed)>($r16);

        <org.apache.batik.ext.awt.image.spi.DefaultBrokenLinkProvider: org.apache.batik.ext.awt.image.renderable.Filter brokenLinkImg> = $r15;

        r17 = <org.apache.batik.ext.awt.image.spi.DefaultBrokenLinkProvider: org.apache.batik.ext.awt.image.renderable.Filter brokenLinkImg>;

        exitmonitor $r21;

        return r17;

     label5:
        $r19 := @caughtexception;

        exitmonitor r1;

        throw $r19;

        catch java.lang.Throwable from label3 to label5 with label5;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }

    static void <clinit>()
    {
        java.awt.Color $r0;

        <org.apache.batik.ext.awt.image.spi.DefaultBrokenLinkProvider: java.lang.String MESSAGE_RSRC> = "resources.Messages";

        <org.apache.batik.ext.awt.image.spi.DefaultBrokenLinkProvider: org.apache.batik.ext.awt.image.renderable.Filter brokenLinkImg> = null;

        $r0 = new java.awt.Color;

        specialinvoke $r0.<java.awt.Color: void <init>(int,int,int,int)>(255, 255, 255, 190);

        <org.apache.batik.ext.awt.image.spi.DefaultBrokenLinkProvider: java.awt.Color BROKEN_LINK_COLOR> = $r0;

        return;
    }
}
