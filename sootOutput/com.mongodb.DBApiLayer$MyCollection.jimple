class com.mongodb.DBApiLayer$MyCollection extends com.mongodb.DBCollection
{
    final java.lang.String _fullNameSpace;
    final com.mongodb.DBApiLayer this$0;

    void <init>(com.mongodb.DBApiLayer, java.lang.String)
    {
        com.mongodb.DBApiLayer$MyCollection r0;
        com.mongodb.DBApiLayer r1;
        java.lang.StringBuilder $r3, $r5, $r6, $r7;
        java.lang.String r2, $r4, $r8;

        r0 := @this: com.mongodb.DBApiLayer$MyCollection;

        r1 := @parameter0: com.mongodb.DBApiLayer;

        r2 := @parameter1: java.lang.String;

        r0.<com.mongodb.DBApiLayer$MyCollection: com.mongodb.DBApiLayer this$0> = r1;

        specialinvoke r0.<com.mongodb.DBCollection: void <init>(com.mongodb.DB,java.lang.String)>(r1, r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r1.<com.mongodb.DBApiLayer: java.lang.String _root>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.mongodb.DBApiLayer$MyCollection: java.lang.String _fullNameSpace> = $r8;

        return;
    }

    public void doapply(com.mongodb.DBObject)
    {
        com.mongodb.DBApiLayer$MyCollection r0;
        com.mongodb.DBObject r1;

        r0 := @this: com.mongodb.DBApiLayer$MyCollection;

        r1 := @parameter0: com.mongodb.DBObject;

        return;
    }

    public com.mongodb.WriteResult insert(com.mongodb.DBObject[], com.mongodb.WriteConcern) throws com.mongodb.MongoException
    {
        com.mongodb.WriteResult $r3;
        com.mongodb.DBApiLayer$MyCollection r0;
        com.mongodb.DBObject[] r1;
        com.mongodb.WriteConcern r2;

        r0 := @this: com.mongodb.DBApiLayer$MyCollection;

        r1 := @parameter0: com.mongodb.DBObject[];

        r2 := @parameter1: com.mongodb.WriteConcern;

        $r3 = virtualinvoke r0.<com.mongodb.DBApiLayer$MyCollection: com.mongodb.WriteResult insert(com.mongodb.DBObject[],boolean,com.mongodb.WriteConcern)>(r1, 1, r2);

        return $r3;
    }

    protected com.mongodb.WriteResult insert(com.mongodb.DBObject[], boolean, com.mongodb.WriteConcern) throws com.mongodb.MongoException
    {
        com.mongodb.DBApiLayer$MyCollection r2;
        com.mongodb.DBObject[] r0;
        com.mongodb.WriteResult r26;
        com.mongodb.DBObject r24, r25, r27;
        boolean $z0, z1, $z2;
        com.mongodb.DBApiLayer $r4;
        com.mongodb.DB $r6;
        java.lang.StringBuilder $r9, $r10, $r11, $r15, $r17, $r19, $r20, $r22;
        com.mongodb.DBConnector $r7;
        int $i0, $i1, $i2, $i3, i4, i5, i6, i7, $i8;
        com.mongodb.OutMessage $r1;
        java.lang.String $r3, $r12, $r18, $r21, $r23;
        java.io.PrintStream $r16;
        java.lang.IllegalArgumentException $r8;
        org.bson.types.ObjectId $r14;
        java.lang.Object $r13;
        com.mongodb.WriteConcern r5;

        r2 := @this: com.mongodb.DBApiLayer$MyCollection;

        r0 := @parameter0: com.mongodb.DBObject[];

        z1 := @parameter1: boolean;

        r5 := @parameter2: com.mongodb.WriteConcern;

        $z0 = <com.mongodb.DBApiLayer: boolean SHOW>;

        if $z0 == 0 goto label02;

        i4 = lengthof r0;

        i5 = 0;

     label01:
        if i5 >= i4 goto label02;

        r24 = r0[i5];

        $r16 = <java.lang.System: java.io.PrintStream out>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("save:  ");

        $r18 = r2.<com.mongodb.DBApiLayer$MyCollection: java.lang.String _fullNameSpace>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r21 = staticinvoke <com.mongodb.util.JSON: java.lang.String serialize(java.lang.Object)>(r24);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r23);

        i5 = i5 + 1;

        goto label01;

     label02:
        if z1 == 0 goto label05;

        i6 = 0;

     label03:
        $i3 = lengthof r0;

        if i6 >= $i3 goto label05;

        r25 = r0[i6];

        virtualinvoke r2.<com.mongodb.DBApiLayer$MyCollection: java.lang.Object apply(com.mongodb.DBObject)>(r25);

        $r13 = interfaceinvoke r25.<com.mongodb.DBObject: java.lang.Object get(java.lang.String)>("_id");

        $z2 = $r13 instanceof org.bson.types.ObjectId;

        if $z2 == 0 goto label04;

        $r14 = (org.bson.types.ObjectId) $r13;

        virtualinvoke $r14.<org.bson.types.ObjectId: void notNew()>();

     label04:
        i6 = i6 + 1;

        goto label03;

     label05:
        r26 = null;

        i7 = 0;

     label06:
        $i8 = lengthof r0;

        if i7 >= $i8 goto label11;

        $r1 = staticinvoke <com.mongodb.OutMessage: com.mongodb.OutMessage get(int)>(2002);

        virtualinvoke $r1.<com.mongodb.OutMessage: void writeInt(int)>(0);

        $r3 = r2.<com.mongodb.DBApiLayer$MyCollection: java.lang.String _fullNameSpace>;

        virtualinvoke $r1.<com.mongodb.OutMessage: void writeCString(java.lang.String)>($r3);

     label07:
        $i0 = lengthof r0;

        if i7 >= $i0 goto label10;

        r27 = r0[i7];

        $i1 = virtualinvoke $r1.<com.mongodb.OutMessage: int putObject(org.bson.BSONObject)>(r27);

        if $i1 <= 4194304 goto label08;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("object too big: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label08:
        $i2 = virtualinvoke $r1.<com.mongodb.OutMessage: int size()>();

        if $i2 <= 4194304 goto label09;

        i7 = i7 + 1;

        goto label10;

     label09:
        i7 = i7 + 1;

        goto label07;

     label10:
        $r4 = r2.<com.mongodb.DBApiLayer$MyCollection: com.mongodb.DBApiLayer this$0>;

        $r7 = $r4.<com.mongodb.DBApiLayer: com.mongodb.DBConnector _connector>;

        $r6 = r2.<com.mongodb.DBApiLayer$MyCollection: com.mongodb.DB _db>;

        r26 = interfaceinvoke $r7.<com.mongodb.DBConnector: com.mongodb.WriteResult say(com.mongodb.DB,com.mongodb.OutMessage,com.mongodb.WriteConcern)>($r6, $r1, r5);

        goto label06;

     label11:
        return r26;
    }

    public com.mongodb.WriteResult remove(com.mongodb.DBObject, com.mongodb.WriteConcern) throws com.mongodb.MongoException
    {
        com.mongodb.DBApiLayer$MyCollection r1;
        com.mongodb.DBConnector $r23;
        com.mongodb.WriteResult $r25;
        com.mongodb.DBObject r3;
        int $i0;
        com.mongodb.OutMessage $r0;
        java.lang.String $r2, $r8, $r11, $r16, $r19, $r21;
        boolean $z0, $z1, $z2;
        java.io.PrintStream $r14;
        java.util.Iterator $r6, $r9;
        java.util.Set $r4;
        com.mongodb.DBApiLayer $r22;
        java.lang.Object $r7, $r10, $r12;
        java.lang.StringBuilder $r13, $r15, $r17, $r18, $r20;
        com.mongodb.DB $r24;
        com.mongodb.WriteConcern r5;

        r1 := @this: com.mongodb.DBApiLayer$MyCollection;

        r3 := @parameter0: com.mongodb.DBObject;

        r5 := @parameter1: com.mongodb.WriteConcern;

        $z0 = <com.mongodb.DBApiLayer: boolean SHOW>;

        if $z0 == 0 goto label1;

        $r14 = <java.lang.System: java.io.PrintStream out>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("remove: ");

        $r16 = r1.<com.mongodb.DBApiLayer$MyCollection: java.lang.String _fullNameSpace>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r19 = staticinvoke <com.mongodb.util.JSON: java.lang.String serialize(java.lang.Object)>(r3);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r21);

     label1:
        $r0 = staticinvoke <com.mongodb.OutMessage: com.mongodb.OutMessage get(int)>(2006);

        virtualinvoke $r0.<com.mongodb.OutMessage: void writeInt(int)>(0);

        $r2 = r1.<com.mongodb.DBApiLayer$MyCollection: java.lang.String _fullNameSpace>;

        virtualinvoke $r0.<com.mongodb.OutMessage: void writeCString(java.lang.String)>($r2);

        $r4 = interfaceinvoke r3.<com.mongodb.DBObject: java.util.Set keySet()>();

        $i0 = interfaceinvoke $r4.<java.util.Collection: int size()>();

        if $i0 != 1 goto label2;

        $r6 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.lang.String) $r7;

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("_id");

        if $z1 == 0 goto label2;

        $r9 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (java.lang.String) $r10;

        $r12 = interfaceinvoke r3.<com.mongodb.DBObject: java.lang.Object get(java.lang.String)>($r11);

        $z2 = $r12 instanceof org.bson.types.ObjectId;

        if $z2 == 0 goto label2;

        virtualinvoke $r0.<com.mongodb.OutMessage: void writeInt(int)>(1);

        goto label3;

     label2:
        virtualinvoke $r0.<com.mongodb.OutMessage: void writeInt(int)>(0);

     label3:
        virtualinvoke $r0.<com.mongodb.OutMessage: int putObject(org.bson.BSONObject)>(r3);

        $r22 = r1.<com.mongodb.DBApiLayer$MyCollection: com.mongodb.DBApiLayer this$0>;

        $r23 = $r22.<com.mongodb.DBApiLayer: com.mongodb.DBConnector _connector>;

        $r24 = r1.<com.mongodb.DBApiLayer$MyCollection: com.mongodb.DB _db>;

        $r25 = interfaceinvoke $r23.<com.mongodb.DBConnector: com.mongodb.WriteResult say(com.mongodb.DB,com.mongodb.OutMessage,com.mongodb.WriteConcern)>($r24, $r0, r5);

        return $r25;
    }

    void _cleanCursors() throws com.mongodb.MongoException
    {
        java.lang.Throwable $r16;
        com.mongodb.DBApiLayer$MyCollection r0;
        java.util.logging.Level $r17;
        java.util.Vector $r6;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r12;
        com.mongodb.DBApiLayer $r1, $r3, $r5, $r7, $r13, $r19;
        java.util.logging.Logger $r9, $r18;
        java.util.List $r2, $r4, $r14, $r15, $r20;
        java.lang.StringBuilder $r8, $r10, $r11;

        r0 := @this: com.mongodb.DBApiLayer$MyCollection;

        $r1 = r0.<com.mongodb.DBApiLayer$MyCollection: com.mongodb.DBApiLayer this$0>;

        $r2 = $r1.<com.mongodb.DBApiLayer: java.util.List _deadCursorIds>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.mongodb.DBApiLayer$MyCollection: com.mongodb.DBApiLayer this$0>;

        $r4 = $r3.<com.mongodb.DBApiLayer: java.util.List _deadCursorIds>;

        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i2 = $i1 % 20;

        if $i2 == 0 goto label2;

        $r13 = r0.<com.mongodb.DBApiLayer$MyCollection: com.mongodb.DBApiLayer this$0>;

        $r14 = $r13.<com.mongodb.DBApiLayer: java.util.List _deadCursorIds>;

        $i4 = interfaceinvoke $r14.<java.util.List: int size()>();

        if $i4 >= 100 goto label2;

        return;

     label2:
        $r5 = r0.<com.mongodb.DBApiLayer$MyCollection: com.mongodb.DBApiLayer this$0>;

        $r15 = $r5.<com.mongodb.DBApiLayer: java.util.List _deadCursorIds>;

        $r7 = r0.<com.mongodb.DBApiLayer$MyCollection: com.mongodb.DBApiLayer this$0>;

        $r6 = new java.util.Vector;

        specialinvoke $r6.<java.util.Vector: void <init>()>();

        $r7.<com.mongodb.DBApiLayer: java.util.List _deadCursorIds> = $r6;

        $r9 = <com.mongodb.Bytes: java.util.logging.Logger LOGGER>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("trying to kill cursors : ");

        $i3 = interfaceinvoke $r15.<java.util.List: int size()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.util.logging.Logger: void info(java.lang.String)>($r12);

     label3:
        virtualinvoke r0.<com.mongodb.DBApiLayer$MyCollection: void killCursors(java.util.List)>($r15);

     label4:
        goto label6;

     label5:
        $r16 := @caughtexception;

        $r18 = <com.mongodb.Bytes: java.util.logging.Logger LOGGER>;

        $r17 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        virtualinvoke $r18.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r17, "can\'t clean cursors", $r16);

        $r19 = r0.<com.mongodb.DBApiLayer$MyCollection: com.mongodb.DBApiLayer this$0>;

        $r20 = $r19.<com.mongodb.DBApiLayer: java.util.List _deadCursorIds>;

        interfaceinvoke $r20.<java.util.List: boolean addAll(java.util.Collection)>($r15);

     label6:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    void killCursors(java.util.List) throws com.mongodb.MongoException
    {
        com.mongodb.DBApiLayer$MyCollection r3;
        java.util.Iterator $r2;
        com.mongodb.DBConnector $r7;
        long $l2;
        com.mongodb.DBApiLayer $r4;
        java.util.List r0;
        java.lang.Long r9;
        int $i0, $i1;
        com.mongodb.OutMessage $r1;
        com.mongodb.DB $r6;
        java.lang.Object $r8;
        com.mongodb.WriteConcern $r5;
        boolean $z0;

        r3 := @this: com.mongodb.DBApiLayer$MyCollection;

        r0 := @parameter0: java.util.List;

        if r0 == null goto label1;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 != 0 goto label2;

     label1:
        return;

     label2:
        $r1 = staticinvoke <com.mongodb.OutMessage: com.mongodb.OutMessage get(int)>(2007);

        virtualinvoke $r1.<com.mongodb.OutMessage: void writeInt(int)>(0);

        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        virtualinvoke $r1.<com.mongodb.OutMessage: void writeInt(int)>($i1);

        $r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.Long) $r8;

        $l2 = virtualinvoke r9.<java.lang.Long: long longValue()>();

        virtualinvoke $r1.<com.mongodb.OutMessage: void writeLong(long)>($l2);

        goto label3;

     label4:
        $r4 = r3.<com.mongodb.DBApiLayer$MyCollection: com.mongodb.DBApiLayer this$0>;

        $r7 = $r4.<com.mongodb.DBApiLayer: com.mongodb.DBConnector _connector>;

        $r6 = r3.<com.mongodb.DBApiLayer$MyCollection: com.mongodb.DB _db>;

        $r5 = <com.mongodb.WriteConcern: com.mongodb.WriteConcern NONE>;

        interfaceinvoke $r7.<com.mongodb.DBConnector: com.mongodb.WriteResult say(com.mongodb.DB,com.mongodb.OutMessage,com.mongodb.WriteConcern)>($r6, $r1, $r5);

        return;
    }

    java.util.Iterator __find(com.mongodb.DBObject, com.mongodb.DBObject, int, int, int) throws com.mongodb.MongoException
    {
        com.mongodb.DBApiLayer$MyCollection r0;
        com.mongodb.DBConnector $r6;
        com.mongodb.DBObject r1, $r8, r21;
        int i0, i1, i2, $i3, $i4;
        com.mongodb.Response $r7;
        com.mongodb.OutMessage $r3;
        java.lang.String $r2, $r10, $r14, $r17, $r19;
        boolean $z0, $z1;
        java.io.PrintStream $r12;
        com.mongodb.MongoException $r9;
        com.mongodb.BasicDBObject $r20;
        com.mongodb.DBApiLayer $r4, $r23;
        com.mongodb.DB $r5;
        java.lang.StringBuilder $r11, $r13, $r15, $r16, $r18;
        com.mongodb.DBApiLayer$Result $r22;

        r0 := @this: com.mongodb.DBApiLayer$MyCollection;

        r21 := @parameter0: com.mongodb.DBObject;

        r1 := @parameter1: com.mongodb.DBObject;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i0 := @parameter4: int;

        if r21 != null goto label1;

        $r20 = new com.mongodb.BasicDBObject;

        specialinvoke $r20.<com.mongodb.BasicDBObject: void <init>()>();

        r21 = $r20;

     label1:
        $z0 = <com.mongodb.DBApiLayer: boolean SHOW>;

        if $z0 == 0 goto label2;

        $r12 = <java.lang.System: java.io.PrintStream out>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("find: ");

        $r14 = r0.<com.mongodb.DBApiLayer$MyCollection: java.lang.String _fullNameSpace>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r17 = staticinvoke <com.mongodb.util.JSON: java.lang.String serialize(java.lang.Object)>(r21);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r19);

     label2:
        virtualinvoke r0.<com.mongodb.DBApiLayer$MyCollection: void _cleanCursors()>();

        $r2 = r0.<com.mongodb.DBApiLayer$MyCollection: java.lang.String _fullNameSpace>;

        $r3 = staticinvoke <com.mongodb.OutMessage: com.mongodb.OutMessage query(int,java.lang.String,int,int,com.mongodb.DBObject,com.mongodb.DBObject)>(i0, $r2, i1, i2, r21, r1);

        $r4 = r0.<com.mongodb.DBApiLayer$MyCollection: com.mongodb.DBApiLayer this$0>;

        $r6 = $r4.<com.mongodb.DBApiLayer: com.mongodb.DBConnector _connector>;

        $r5 = r0.<com.mongodb.DBApiLayer$MyCollection: com.mongodb.DB _db>;

        $r7 = interfaceinvoke $r6.<com.mongodb.DBConnector: com.mongodb.Response call(com.mongodb.DB,com.mongodb.DBCollection,com.mongodb.OutMessage,int)>($r5, r0, $r3, 2);

        $i3 = virtualinvoke $r7.<com.mongodb.Response: int size()>();

        if $i3 != 0 goto label3;

        return null;

     label3:
        $i4 = virtualinvoke $r7.<com.mongodb.Response: int size()>();

        if $i4 != 1 goto label4;

        $r8 = virtualinvoke $r7.<com.mongodb.Response: com.mongodb.DBObject get(int)>(0);

        $r9 = staticinvoke <com.mongodb.MongoException: com.mongodb.MongoException parse(org.bson.BSONObject)>($r8);

        if $r9 == null goto label4;

        $r10 = r0.<com.mongodb.DBApiLayer$MyCollection: java.lang.String _name>;

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("$cmd");

        if $z1 != 0 goto label4;

        throw $r9;

     label4:
        $r22 = new com.mongodb.DBApiLayer$Result;

        $r23 = r0.<com.mongodb.DBApiLayer$MyCollection: com.mongodb.DBApiLayer this$0>;

        specialinvoke $r22.<com.mongodb.DBApiLayer$Result: void <init>(com.mongodb.DBApiLayer,com.mongodb.DBApiLayer$MyCollection,com.mongodb.Response,int,int)>($r23, r0, $r7, i2, i0);

        return $r22;
    }

    public com.mongodb.WriteResult update(com.mongodb.DBObject, com.mongodb.DBObject, boolean, boolean, com.mongodb.WriteConcern) throws com.mongodb.MongoException
    {
        com.mongodb.DBApiLayer$MyCollection r1;
        com.mongodb.DBConnector $r8;
        com.mongodb.WriteResult $r9;
        com.mongodb.DBObject r3, r4;
        byte b0;
        com.mongodb.OutMessage $r0;
        java.lang.String $r2, $r13, $r16, $r18;
        boolean $z0, z1, z2;
        java.io.PrintStream $r11;
        com.mongodb.DBApiLayer $r5;
        com.mongodb.DB $r7;
        java.lang.StringBuilder $r10, $r12, $r14, $r15, $r17;
        com.mongodb.WriteConcern r6;

        r1 := @this: com.mongodb.DBApiLayer$MyCollection;

        r3 := @parameter0: com.mongodb.DBObject;

        r4 := @parameter1: com.mongodb.DBObject;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        r6 := @parameter4: com.mongodb.WriteConcern;

        $z0 = <com.mongodb.DBApiLayer: boolean SHOW>;

        if $z0 == 0 goto label1;

        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("update: ");

        $r13 = r1.<com.mongodb.DBApiLayer$MyCollection: java.lang.String _fullNameSpace>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r16 = staticinvoke <com.mongodb.util.JSON: java.lang.String serialize(java.lang.Object)>(r3);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r18);

     label1:
        $r0 = staticinvoke <com.mongodb.OutMessage: com.mongodb.OutMessage get(int)>(2001);

        virtualinvoke $r0.<com.mongodb.OutMessage: void writeInt(int)>(0);

        $r2 = r1.<com.mongodb.DBApiLayer$MyCollection: java.lang.String _fullNameSpace>;

        virtualinvoke $r0.<com.mongodb.OutMessage: void writeCString(java.lang.String)>($r2);

        b0 = 0;

        if z1 == 0 goto label2;

        b0 = 1;

     label2:
        if z2 == 0 goto label3;

        b0 = b0 | 2;

     label3:
        virtualinvoke $r0.<com.mongodb.OutMessage: void writeInt(int)>(b0);

        virtualinvoke $r0.<com.mongodb.OutMessage: int putObject(org.bson.BSONObject)>(r3);

        virtualinvoke $r0.<com.mongodb.OutMessage: int putObject(org.bson.BSONObject)>(r4);

        $r5 = r1.<com.mongodb.DBApiLayer$MyCollection: com.mongodb.DBApiLayer this$0>;

        $r8 = $r5.<com.mongodb.DBApiLayer: com.mongodb.DBConnector _connector>;

        $r7 = r1.<com.mongodb.DBApiLayer$MyCollection: com.mongodb.DB _db>;

        $r9 = interfaceinvoke $r8.<com.mongodb.DBConnector: com.mongodb.WriteResult say(com.mongodb.DB,com.mongodb.OutMessage,com.mongodb.WriteConcern)>($r7, $r0, r6);

        return $r9;
    }

    protected void createIndex(com.mongodb.DBObject, com.mongodb.DBObject) throws com.mongodb.MongoException
    {
        com.mongodb.DBApiLayer$MyCollection r5, $r7;
        java.util.Iterator $r3;
        com.mongodb.DBObject[] $r8;
        com.mongodb.BasicDBObject $r0;
        java.util.Set $r2;
        com.mongodb.DBApiLayer $r6;
        com.mongodb.DBObject r1, r4;
        java.lang.Object $r10, $r12;
        java.lang.String r11;
        com.mongodb.WriteConcern $r9;
        boolean $z0;

        r5 := @this: com.mongodb.DBApiLayer$MyCollection;

        r4 := @parameter0: com.mongodb.DBObject;

        r1 := @parameter1: com.mongodb.DBObject;

        $r0 = new com.mongodb.BasicDBObject;

        specialinvoke $r0.<com.mongodb.BasicDBObject: void <init>()>();

        $r2 = interfaceinvoke r1.<com.mongodb.DBObject: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.lang.String) $r10;

        $r12 = interfaceinvoke r1.<com.mongodb.DBObject: java.lang.Object get(java.lang.String)>(r11);

        interfaceinvoke $r0.<com.mongodb.DBObject: java.lang.Object put(java.lang.String,java.lang.Object)>(r11, $r12);

        goto label1;

     label2:
        interfaceinvoke $r0.<com.mongodb.DBObject: java.lang.Object put(java.lang.String,java.lang.Object)>("key", r4);

        $r6 = r5.<com.mongodb.DBApiLayer$MyCollection: com.mongodb.DBApiLayer this$0>;

        $r7 = virtualinvoke $r6.<com.mongodb.DBApiLayer: com.mongodb.DBApiLayer$MyCollection doGetCollection(java.lang.String)>("system.indexes");

        $r8 = newarray (com.mongodb.DBObject)[1];

        $r8[0] = $r0;

        $r9 = virtualinvoke r5.<com.mongodb.DBApiLayer$MyCollection: com.mongodb.WriteConcern getWriteConcern()>();

        virtualinvoke $r7.<com.mongodb.DBApiLayer$MyCollection: com.mongodb.WriteResult insert(com.mongodb.DBObject[],boolean,com.mongodb.WriteConcern)>($r8, 0, $r9);

        return;
    }
}
