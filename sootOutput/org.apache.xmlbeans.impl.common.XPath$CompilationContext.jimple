class org.apache.xmlbeans.impl.common.XPath$CompilationContext extends java.lang.Object
{
    private java.lang.String _expr;
    private boolean _sawDeepDot;
    private boolean _lastDeepDot;
    private java.lang.String _currentNodeVar;
    protected java.util.Map _namespaces;
    private java.util.Map _externalNamespaces;
    private int _offset;
    private int _line;
    private int _column;
    static final boolean $assertionsDisabled;

    void <init>(java.util.Map, java.lang.String)
    {
        org.apache.xmlbeans.impl.common.XPath$CompilationContext r0;
        java.util.HashMap $r9, $r10;
        java.lang.AssertionError $r8;
        java.util.Map r3, $r7;
        java.lang.String r1, $r4, $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.common.XPath$CompilationContext;

        r3 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = <org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r4 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.lang.String _currentNodeVar>;

        if $r4 == null goto label1;

        $r5 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.lang.String _currentNodeVar>;

        $z1 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("$");

        if $z1 != 0 goto label1;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label1:
        if r1 != null goto label2;

        r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.lang.String _currentNodeVar> = "$this";

        goto label3;

     label2:
        r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.lang.String _currentNodeVar> = r1;

     label3:
        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.util.Map _namespaces> = $r9;

        if r3 != null goto label4;

        $r10 = new java.util.HashMap;

        $r7 = $r10;

        specialinvoke $r10.<java.util.HashMap: void <init>()>();

        goto label5;

     label4:
        $r7 = r3;

     label5:
        r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.util.Map _externalNamespaces> = $r7;

        return;
    }

    org.apache.xmlbeans.impl.common.XPath compile(java.lang.String) throws org.apache.xmlbeans.impl.common.XPath$XPathCompileException
    {
        org.apache.xmlbeans.impl.common.XPath$CompilationContext r0;
        java.lang.String r1;
        org.apache.xmlbeans.impl.common.XPath $r2;

        r0 := @this: org.apache.xmlbeans.impl.common.XPath$CompilationContext;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int _offset> = 0;

        r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int _line> = 1;

        r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int _column> = 1;

        r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.lang.String _expr> = r1;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: org.apache.xmlbeans.impl.common.XPath tokenizeXPath()>();

        return $r2;
    }

    int currChar()
    {
        int $i0;
        org.apache.xmlbeans.impl.common.XPath$CompilationContext r0;

        r0 := @this: org.apache.xmlbeans.impl.common.XPath$CompilationContext;

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int currChar(int)>(0);

        return $i0;
    }

    int currChar(int)
    {
        org.apache.xmlbeans.impl.common.XPath$CompilationContext r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r1, $r2;

        r0 := @this: org.apache.xmlbeans.impl.common.XPath$CompilationContext;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int _offset>;

        $i2 = $i1 + i0;

        $r1 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.lang.String _expr>;

        $i3 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i2 < $i3 goto label1;

        $i6 = -1;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.lang.String _expr>;

        $i4 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int _offset>;

        $i5 = $i4 + i0;

        $i6 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i5);

     label2:
        return $i6;
    }

    void advance()
    {
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        java.lang.String $r1, $r2, $r3, $r4;
        org.apache.xmlbeans.impl.common.XPath$CompilationContext r0;
        char $c3, $c15;

        r0 := @this: org.apache.xmlbeans.impl.common.XPath$CompilationContext;

        $i0 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int _offset>;

        $r1 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.lang.String _expr>;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label3;

        $r2 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.lang.String _expr>;

        $i2 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int _offset>;

        $c3 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i2);

        $i4 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int _offset>;

        $i5 = $i4 + 1;

        r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int _offset> = $i5;

        $i6 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int _column>;

        $i7 = $i6 + 1;

        r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int _column> = $i7;

        $i18 = (int) $c3;

        if $i18 == 13 goto label1;

        $i19 = (int) $c3;

        if $i19 != 10 goto label3;

     label1:
        $i8 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int _line>;

        $i9 = $i8 + 1;

        r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int _line> = $i9;

        r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int _column> = 1;

        $i10 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int _offset>;

        $i11 = $i10 + 1;

        $r3 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.lang.String _expr>;

        $i12 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i11 >= $i12 goto label3;

        $r4 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.lang.String _expr>;

        $i13 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int _offset>;

        $i14 = $i13 + 1;

        $c15 = virtualinvoke $r4.<java.lang.String: char charAt(int)>($i14);

        $i20 = (int) $c15;

        if $i20 == 13 goto label2;

        $i21 = (int) $c15;

        if $i21 != 10 goto label3;

     label2:
        $i22 = (int) $c3;

        $i23 = (int) $c15;

        if $i22 == $i23 goto label3;

        $i16 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int _offset>;

        $i17 = $i16 + 1;

        r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int _offset> = $i17;

     label3:
        return;
    }

    void advance(int)
    {
        org.apache.xmlbeans.impl.common.XPath$CompilationContext r0;
        int i0, $i1, $i3;
        java.lang.AssertionError $r2;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.common.XPath$CompilationContext;

        i0 := @parameter0: int;

        $z0 = <org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if i0 >= 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $i1 = i0;

        $i3 = (int) -1;

        i0 = i0 + $i3;

        if $i1 <= 0 goto label2;

        virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: void advance()>();

        goto label1;

     label2:
        return;
    }

    boolean isWhitespace()
    {
        org.apache.xmlbeans.impl.common.XPath$CompilationContext r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.common.XPath$CompilationContext;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean isWhitespace(int)>(0);

        return $z0;
    }

    boolean isWhitespace(int)
    {
        org.apache.xmlbeans.impl.common.XPath$CompilationContext r0;
        int i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.common.XPath$CompilationContext;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int currChar(int)>(i0);

        if $i1 == 32 goto label1;

        if $i1 == 9 goto label1;

        if $i1 == 10 goto label1;

        if $i1 != 13 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    boolean isNCNameStart()
    {
        org.apache.xmlbeans.impl.common.XPath$CompilationContext r0;
        int $i0, $i1, $i3;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.common.XPath$CompilationContext;

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int currChar()>();

        $i3 = (int) -1;

        if $i0 != $i3 goto label1;

        $z0 = 0;

        goto label2;

     label1:
        $i1 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int currChar()>();

        $z0 = staticinvoke <org.apache.xmlbeans.impl.common.XMLChar: boolean isNCNameStart(int)>($i1);

     label2:
        return $z0;
    }

    boolean isNCName()
    {
        org.apache.xmlbeans.impl.common.XPath$CompilationContext r0;
        int $i0, $i1, $i3;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.common.XPath$CompilationContext;

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int currChar()>();

        $i3 = (int) -1;

        if $i0 != $i3 goto label1;

        $z0 = 0;

        goto label2;

     label1:
        $i1 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int currChar()>();

        $z0 = staticinvoke <org.apache.xmlbeans.impl.common.XMLChar: boolean isNCName(int)>($i1);

     label2:
        return $z0;
    }

    boolean startsWith(java.lang.String)
    {
        org.apache.xmlbeans.impl.common.XPath$CompilationContext r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.common.XPath$CompilationContext;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean startsWith(java.lang.String,int)>(r1, 0);

        return $z0;
    }

    boolean startsWith(java.lang.String, int)
    {
        org.apache.xmlbeans.impl.common.XPath$CompilationContext r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r1, r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.common.XPath$CompilationContext;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int _offset>;

        $i2 = $i1 + i0;

        $r1 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.lang.String _expr>;

        $i3 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i2 < $i3 goto label1;

        return 0;

     label1:
        $r3 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.lang.String _expr>;

        $i4 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int _offset>;

        $i5 = $i4 + i0;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String,int)>(r2, $i5);

        return $z0;
    }

    private org.apache.xmlbeans.impl.common.XPath$XPathCompileException newError(java.lang.String)
    {
        org.apache.xmlbeans.impl.common.XPath$CompilationContext r1;
        int $i0, $i1, $i2;
        org.apache.xmlbeans.XmlError $r2;
        java.lang.String r0;
        org.apache.xmlbeans.impl.common.XPath$XPathCompileException $r3;

        r1 := @this: org.apache.xmlbeans.impl.common.XPath$CompilationContext;

        r0 := @parameter0: java.lang.String;

        $i2 = r1.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int _line>;

        $i1 = r1.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int _column>;

        $i0 = r1.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int _offset>;

        $r2 = staticinvoke <org.apache.xmlbeans.XmlError: org.apache.xmlbeans.XmlError forLocation(java.lang.String,int,java.lang.String,int,int,int)>(r0, 0, null, $i2, $i1, $i0);

        $r3 = new org.apache.xmlbeans.impl.common.XPath$XPathCompileException;

        specialinvoke $r3.<org.apache.xmlbeans.impl.common.XPath$XPathCompileException: void <init>(org.apache.xmlbeans.XmlError)>($r2);

        return $r3;
    }

    java.lang.String lookupPrefix(java.lang.String) throws org.apache.xmlbeans.impl.common.XPath$XPathCompileException
    {
        java.lang.StringBuffer $r4, $r5, $r6;
        java.util.Map $r2, $r3, $r9, $r12;
        java.lang.String r1, $r7, $r11, $r14;
        org.apache.xmlbeans.impl.common.XPath$XPathCompileException $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.apache.xmlbeans.impl.common.XPath$CompilationContext r0;
        java.lang.Object $r10, $r13;

        r0 := @this: org.apache.xmlbeans.impl.common.XPath$CompilationContext;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.util.Map _namespaces>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r12 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.util.Map _namespaces>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r14 = (java.lang.String) $r13;

        return $r14;

     label1:
        $r3 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.util.Map _externalNamespaces>;

        $z1 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        $r9 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.util.Map _externalNamespaces>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r11 = (java.lang.String) $r10;

        return $r11;

     label2:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("xml");

        if $z2 == 0 goto label3;

        return "http://www.w3.org/XML/1998/namespace";

     label3:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("xs");

        if $z3 == 0 goto label4;

        return "http://www.w3.org/2001/XMLSchema";

     label4:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("xsi");

        if $z4 == 0 goto label5;

        return "http://www.w3.org/2001/XMLSchema-instance";

     label5:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("fn");

        if $z5 == 0 goto label6;

        return "http://www.w3.org/2002/11/xquery-functions";

     label6:
        $z6 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("xdt");

        if $z6 == 0 goto label7;

        return "http://www.w3.org/2003/11/xpath-datatypes";

     label7:
        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("local");

        if $z7 == 0 goto label8;

        return "http://www.w3.org/2003/11/xquery-local-functions";

     label8:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Undefined prefix: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        $r8 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: org.apache.xmlbeans.impl.common.XPath$XPathCompileException newError(java.lang.String)>($r7);

        throw $r8;
    }

    private boolean parseWhitespace() throws org.apache.xmlbeans.impl.common.XPath$XPathCompileException
    {
        org.apache.xmlbeans.impl.common.XPath$CompilationContext r0;
        boolean $z0, z1;

        r0 := @this: org.apache.xmlbeans.impl.common.XPath$CompilationContext;

        z1 = 0;

     label1:
        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean isWhitespace()>();

        if $z0 == 0 goto label2;

        virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: void advance()>();

        z1 = 1;

        goto label1;

     label2:
        return z1;
    }

    private boolean tokenize(java.lang.String)
    {
        org.apache.xmlbeans.impl.common.XPath$CompilationContext r0;
        java.lang.AssertionError $r2;
        int $i0, $i1, i2, i3;
        java.lang.String r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.xmlbeans.impl.common.XPath$CompilationContext;

        r1 := @parameter0: java.lang.String;

        $z0 = <org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 > 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        i2 = 0;

     label2:
        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean isWhitespace(int)>(i2);

        if $z2 == 0 goto label3;

        i2 = i2 + 1;

        goto label2;

     label3:
        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean startsWith(java.lang.String,int)>(r1, i2);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        i3 = i2 + $i0;

        virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: void advance(int)>(i3);

        return 1;
    }

    private boolean tokenize(java.lang.String, java.lang.String)
    {
        java.lang.AssertionError $r3, $r4;
        int $i0, $i1, $i2, $i3, i4, i5, i6;
        java.lang.String r1, r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.xmlbeans.impl.common.XPath$CompilationContext r0;

        r0 := @this: org.apache.xmlbeans.impl.common.XPath$CompilationContext;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = <org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i3 > 0 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $z1 = <org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i2 > 0 goto label2;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label2:
        i4 = 0;

     label3:
        $z5 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean isWhitespace(int)>(i4);

        if $z5 == 0 goto label4;

        i4 = i4 + 1;

        goto label3;

     label4:
        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean startsWith(java.lang.String,int)>(r1, i4);

        if $z2 != 0 goto label5;

        return 0;

     label5:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        i5 = i4 + $i0;

     label6:
        $z3 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean isWhitespace(int)>(i5);

        if $z3 == 0 goto label7;

        i5 = i5 + 1;

        goto label6;

     label7:
        $z4 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean startsWith(java.lang.String,int)>(r2, i5);

        if $z4 != 0 goto label8;

        return 0;

     label8:
        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        i6 = i5 + $i1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: void advance(int)>(i6);

        return 1;
    }

    private boolean tokenize(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.AssertionError $r4, $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9;
        java.lang.String r1, r2, r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        org.apache.xmlbeans.impl.common.XPath$CompilationContext r0;

        r0 := @this: org.apache.xmlbeans.impl.common.XPath$CompilationContext;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $z0 = <org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $i5 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i5 > 0 goto label01;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label01:
        $z1 = <org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        $i4 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i4 > 0 goto label02;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label02:
        $z2 = <org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean $assertionsDisabled>;

        if $z2 != 0 goto label03;

        $i3 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i3 > 0 goto label03;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label03:
        i6 = 0;

     label04:
        $z9 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean isWhitespace(int)>(i6);

        if $z9 == 0 goto label05;

        i6 = i6 + 1;

        goto label04;

     label05:
        $z3 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean startsWith(java.lang.String,int)>(r1, i6);

        if $z3 != 0 goto label06;

        return 0;

     label06:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        i7 = i6 + $i0;

     label07:
        $z4 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean isWhitespace(int)>(i7);

        if $z4 == 0 goto label08;

        i7 = i7 + 1;

        goto label07;

     label08:
        $z5 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean startsWith(java.lang.String,int)>(r2, i7);

        if $z5 != 0 goto label09;

        return 0;

     label09:
        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        i8 = i7 + $i1;

     label10:
        $z6 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean isWhitespace(int)>(i8);

        if $z6 == 0 goto label11;

        i8 = i8 + 1;

        goto label10;

     label11:
        $z7 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean startsWith(java.lang.String,int)>(r3, i8);

        if $z7 != 0 goto label12;

        return 0;

     label12:
        $i2 = virtualinvoke r3.<java.lang.String: int length()>();

        i9 = i8 + $i2;

     label13:
        $z8 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean isWhitespace(int)>(i9);

        if $z8 == 0 goto label14;

        i9 = i9 + 1;

        goto label13;

     label14:
        virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: void advance(int)>(i9);

        return 1;
    }

    private boolean tokenize(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.lang.AssertionError $r5, $r6, $r7, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, i12;
        java.lang.String r1, r2, r3, r4;
        org.apache.xmlbeans.impl.common.XPath$CompilationContext r0;

        r0 := @this: org.apache.xmlbeans.impl.common.XPath$CompilationContext;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $z0 = <org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $i7 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i7 > 0 goto label01;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label01:
        $z1 = <org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        $i6 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i6 > 0 goto label02;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label02:
        $z2 = <org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean $assertionsDisabled>;

        if $z2 != 0 goto label03;

        $i5 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i5 > 0 goto label03;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label03:
        $z3 = <org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean $assertionsDisabled>;

        if $z3 != 0 goto label04;

        $i4 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i4 > 0 goto label04;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label04:
        i8 = 0;

     label05:
        $z11 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean isWhitespace(int)>(i8);

        if $z11 == 0 goto label06;

        i8 = i8 + 1;

        goto label05;

     label06:
        $z4 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean startsWith(java.lang.String,int)>(r1, i8);

        if $z4 != 0 goto label07;

        return 0;

     label07:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        i9 = i8 + $i0;

     label08:
        $z5 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean isWhitespace(int)>(i9);

        if $z5 == 0 goto label09;

        i9 = i9 + 1;

        goto label08;

     label09:
        $z6 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean startsWith(java.lang.String,int)>(r2, i9);

        if $z6 != 0 goto label10;

        return 0;

     label10:
        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        i10 = i9 + $i1;

     label11:
        $z7 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean isWhitespace(int)>(i10);

        if $z7 == 0 goto label12;

        i10 = i10 + 1;

        goto label11;

     label12:
        $z8 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean startsWith(java.lang.String,int)>(r3, i10);

        if $z8 != 0 goto label13;

        return 0;

     label13:
        $i2 = virtualinvoke r3.<java.lang.String: int length()>();

        i11 = i10 + $i2;

     label14:
        $z9 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean isWhitespace(int)>(i11);

        if $z9 == 0 goto label15;

        i11 = i11 + 1;

        goto label14;

     label15:
        $z10 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean startsWith(java.lang.String,int)>(r4, i11);

        if $z10 != 0 goto label16;

        return 0;

     label16:
        $i3 = virtualinvoke r4.<java.lang.String: int length()>();

        i12 = i11 + $i3;

        virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: void advance(int)>(i12);

        return 1;
    }

    private java.lang.String tokenizeNCName() throws org.apache.xmlbeans.impl.common.XPath$XPathCompileException
    {
        org.apache.xmlbeans.impl.common.XPath$CompilationContext r0;
        char $c1, $c3;
        java.lang.StringBuffer $r1;
        int $i0, $i2;
        java.lang.String $r2;
        org.apache.xmlbeans.impl.common.XPath$XPathCompileException $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.common.XPath$CompilationContext;

        specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean parseWhitespace()>();

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean isNCNameStart()>();

        if $z0 != 0 goto label1;

        $r3 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: org.apache.xmlbeans.impl.common.XPath$XPathCompileException newError(java.lang.String)>("Expected non-colonized name");

        throw $r3;

     label1:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int currChar()>();

        $c1 = (char) $i0;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: void advance()>();

     label2:
        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean isNCName()>();

        if $z1 == 0 goto label3;

        $i2 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int currChar()>();

        $c3 = (char) $i2;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: void advance()>();

        goto label2;

     label3:
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    private javax.xml.namespace.QName getAnyQName()
    {
        javax.xml.namespace.QName $r0;
        org.apache.xmlbeans.impl.common.XPath$CompilationContext r1;

        r1 := @this: org.apache.xmlbeans.impl.common.XPath$CompilationContext;

        $r0 = new javax.xml.namespace.QName;

        specialinvoke $r0.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", "");

        return $r0;
    }

    private javax.xml.namespace.QName tokenizeQName() throws org.apache.xmlbeans.impl.common.XPath$XPathCompileException
    {
        org.apache.xmlbeans.impl.common.XPath$CompilationContext r0;
        java.lang.String $r1, $r3, $r5, $r7;
        javax.xml.namespace.QName $r2, $r4, $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.xmlbeans.impl.common.XPath$CompilationContext;

        $z0 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean tokenize(java.lang.String)>("*");

        if $z0 == 0 goto label1;

        $r6 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: javax.xml.namespace.QName getAnyQName()>();

        return $r6;

     label1:
        $r1 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.lang.String tokenizeNCName()>();

        $z1 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean tokenize(java.lang.String)>(":");

        if $z1 != 0 goto label2;

        $r4 = new javax.xml.namespace.QName;

        $r5 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.lang.String lookupPrefix(java.lang.String)>("");

        specialinvoke $r4.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r5, $r1);

        return $r4;

     label2:
        $r2 = new javax.xml.namespace.QName;

        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.lang.String lookupPrefix(java.lang.String)>($r1);

        $z2 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean tokenize(java.lang.String)>("*");

        if $z2 == 0 goto label3;

        $r7 = "";

        goto label4;

     label3:
        $r7 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.lang.String tokenizeNCName()>();

     label4:
        specialinvoke $r2.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r3, $r7);

        return $r2;
    }

    private java.lang.String tokenizeQuotedUri() throws org.apache.xmlbeans.impl.common.XPath$XPathCompileException
    {
        byte b4, b6, b7;
        java.lang.StringBuffer $r5;
        int $i0, $i1, $i3, $i5, $i9;
        java.lang.String $r3;
        org.apache.xmlbeans.impl.common.XPath$XPathCompileException $r1, $r4;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.common.XPath$CompilationContext r0;
        char $c2;

        r0 := @this: org.apache.xmlbeans.impl.common.XPath$CompilationContext;

        $z0 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean tokenize(java.lang.String)>("\"");

        if $z0 == 0 goto label1;

        b4 = 34;

        b7 = 34;

        b6 = 34;

        goto label3;

     label1:
        $z1 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean tokenize(java.lang.String)>("\'");

        if $z1 == 0 goto label2;

        b4 = 39;

        b7 = 39;

        b6 = 39;

        goto label3;

     label2:
        $r1 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: org.apache.xmlbeans.impl.common.XPath$XPathCompileException newError(java.lang.String)>("Expected quote (\" or \')");

        throw $r1;

     label3:
        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

     label4:
        $i5 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int currChar()>();

        $i9 = (int) -1;

        if $i5 != $i9 goto label5;

        $r4 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: org.apache.xmlbeans.impl.common.XPath$XPathCompileException newError(java.lang.String)>("Path terminated in URI literal");

        throw $r4;

     label5:
        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int currChar()>();

        if $i0 != b6 goto label6;

        virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: void advance()>();

        $i3 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int currChar()>();

        if $i3 == b7 goto label6;

        goto label7;

     label6:
        $i1 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int currChar()>();

        $c2 = (char) $i1;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: void advance()>();

        goto label4;

     label7:
        $r3 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    private org.apache.xmlbeans.impl.common.XPath$Step addStep(boolean, boolean, javax.xml.namespace.QName, org.apache.xmlbeans.impl.common.XPath$Step)
    {
        org.apache.xmlbeans.impl.common.XPath$Step $r0, r2, $r3, r5;
        org.apache.xmlbeans.impl.common.XPath$CompilationContext r4;
        javax.xml.namespace.QName r1;
        boolean z0, z1;

        r4 := @this: org.apache.xmlbeans.impl.common.XPath$CompilationContext;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r1 := @parameter2: javax.xml.namespace.QName;

        r5 := @parameter3: org.apache.xmlbeans.impl.common.XPath$Step;

        $r0 = new org.apache.xmlbeans.impl.common.XPath$Step;

        specialinvoke $r0.<org.apache.xmlbeans.impl.common.XPath$Step: void <init>(boolean,boolean,javax.xml.namespace.QName)>(z0, z1, r1);

        if r5 != null goto label1;

        return $r0;

     label1:
        r2 = r5;

     label2:
        $r3 = r5.<org.apache.xmlbeans.impl.common.XPath$Step: org.apache.xmlbeans.impl.common.XPath$Step _next>;

        if $r3 == null goto label3;

        r5 = r5.<org.apache.xmlbeans.impl.common.XPath$Step: org.apache.xmlbeans.impl.common.XPath$Step _next>;

        goto label2;

     label3:
        r5.<org.apache.xmlbeans.impl.common.XPath$Step: org.apache.xmlbeans.impl.common.XPath$Step _next> = $r0;

        $r0.<org.apache.xmlbeans.impl.common.XPath$Step: org.apache.xmlbeans.impl.common.XPath$Step _prev> = r5;

        return r2;
    }

    private org.apache.xmlbeans.impl.common.XPath$Step tokenizeSteps() throws org.apache.xmlbeans.impl.common.XPath$XPathCompileException
    {
        org.apache.xmlbeans.impl.common.XPath$Step $r3, $r8, r10;
        java.lang.String $r1, $r6, $r7;
        org.apache.xmlbeans.impl.common.XPath$XPathCompileException $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, z11, $z12, $z13, $z14, z15, z16, z17;
        org.apache.xmlbeans.impl.common.XPath$CompilationContext r0;
        javax.xml.namespace.QName $r2, $r4, $r5;

        r0 := @this: org.apache.xmlbeans.impl.common.XPath$CompilationContext;

        $z0 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean tokenize(java.lang.String)>("/");

        if $z0 == 0 goto label01;

        $r9 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: org.apache.xmlbeans.impl.common.XPath$XPathCompileException newError(java.lang.String)>("Absolute paths unsupported");

        throw $r9;

     label01:
        $r1 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.lang.String _currentNodeVar>;

        $z1 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean tokenize(java.lang.String,java.lang.String,java.lang.String)>("$", $r1, "//");

        if $z1 != 0 goto label02;

        $z5 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean tokenize(java.lang.String,java.lang.String)>(".", "//");

        if $z5 == 0 goto label03;

     label02:
        z10 = 1;

        z17 = 1;

        z16 = 1;

        z15 = 1;

        goto label08;

     label03:
        $r6 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.lang.String _currentNodeVar>;

        $z6 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean tokenize(java.lang.String,java.lang.String,java.lang.String)>("$", $r6, "/");

        if $z6 != 0 goto label04;

        $z7 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean tokenize(java.lang.String,java.lang.String)>(".", "/");

        if $z7 == 0 goto label05;

     label04:
        z10 = 0;

        z17 = 0;

        z16 = 0;

        z15 = 0;

        goto label08;

     label05:
        $r7 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.lang.String _currentNodeVar>;

        $z8 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean tokenize(java.lang.String,java.lang.String)>("$", $r7);

        if $z8 != 0 goto label06;

        $z9 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean tokenize(java.lang.String)>(".");

        if $z9 == 0 goto label07;

     label06:
        $r8 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: org.apache.xmlbeans.impl.common.XPath$Step addStep(boolean,boolean,javax.xml.namespace.QName,org.apache.xmlbeans.impl.common.XPath$Step)>(0, 0, null, null);

        return $r8;

     label07:
        z10 = 0;

        z17 = 0;

        z16 = 0;

        z15 = 0;

     label08:
        r10 = null;

        z11 = 0;

     label09:
        $z12 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean tokenize(java.lang.String,java.lang.String)>("attribute", "::");

        if $z12 != 0 goto label10;

        $z2 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean tokenize(java.lang.String)>("@");

        if $z2 == 0 goto label11;

     label10:
        $r2 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: javax.xml.namespace.QName tokenizeQName()>();

        r10 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: org.apache.xmlbeans.impl.common.XPath$Step addStep(boolean,boolean,javax.xml.namespace.QName,org.apache.xmlbeans.impl.common.XPath$Step)>(z16, 1, $r2, r10);

        goto label18;

     label11:
        $z3 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean tokenize(java.lang.String)>(".");

        if $z3 == 0 goto label15;

        if z11 != 0 goto label12;

        if z15 == 0 goto label13;

     label12:
        $z13 = 1;

        goto label14;

     label13:
        $z13 = 0;

     label14:
        z11 = $z13;

        goto label16;

     label15:
        specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean tokenize(java.lang.String,java.lang.String)>("child", "::");

        $r5 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: javax.xml.namespace.QName tokenizeQName()>();

        if $r5 == null goto label16;

        r10 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: org.apache.xmlbeans.impl.common.XPath$Step addStep(boolean,boolean,javax.xml.namespace.QName,org.apache.xmlbeans.impl.common.XPath$Step)>(z17, 0, $r5, r10);

        z10 = 0;

        z17 = 0;

        z16 = 0;

        z15 = 0;

     label16:
        $z14 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean tokenize(java.lang.String)>("//");

        if $z14 == 0 goto label17;

        z10 = 1;

        z17 = 1;

        z16 = 1;

        z15 = 1;

        z11 = 0;

        goto label09;

     label17:
        $z4 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean tokenize(java.lang.String)>("/");

        if $z4 == 0 goto label18;

        if z11 == 0 goto label09;

        z10 = 1;

        z17 = 1;

        z16 = 1;

        z15 = 1;

        goto label09;

     label18:
        r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean _lastDeepDot> = z11;

        if z11 == 0 goto label19;

        r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean _lastDeepDot> = 1;

        $r4 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: javax.xml.namespace.QName getAnyQName()>();

        r10 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: org.apache.xmlbeans.impl.common.XPath$Step addStep(boolean,boolean,javax.xml.namespace.QName,org.apache.xmlbeans.impl.common.XPath$Step)>(1, 0, $r4, r10);

     label19:
        $r3 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: org.apache.xmlbeans.impl.common.XPath$Step addStep(boolean,boolean,javax.xml.namespace.QName,org.apache.xmlbeans.impl.common.XPath$Step)>(0, 0, null, r10);

        return $r3;
    }

    private void computeBacktrack(org.apache.xmlbeans.impl.common.XPath$Step) throws org.apache.xmlbeans.impl.common.XPath$XPathCompileException
    {
        org.apache.xmlbeans.impl.common.XPath$Step r0, $r5, $r6, r13, r14, r15, r16, r19, r20, r21;
        int[] $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        javax.xml.namespace.QName $r2, $r4, $r7, $r8, $r9, $r10, $r11, $r12;
        java.lang.AssertionError $r22;
        javax.xml.namespace.QName[] $r17;
        int $i0, $i1, i2, $i3, $i4, i5, i6, i7, i8, i9, i10, $i12, $i14, $i16, $i18, $i20;
        org.apache.xmlbeans.impl.common.XPath$CompilationContext r1;

        r1 := @this: org.apache.xmlbeans.impl.common.XPath$CompilationContext;

        r0 := @parameter0: org.apache.xmlbeans.impl.common.XPath$Step;

        r13 = r0;

     label01:
        if r13 == null goto label26;

        r14 = r13.<org.apache.xmlbeans.impl.common.XPath$Step: org.apache.xmlbeans.impl.common.XPath$Step _next>;

     label02:
        if r14 == null goto label03;

        $z7 = r14.<org.apache.xmlbeans.impl.common.XPath$Step: boolean _deep>;

        if $z7 != 0 goto label03;

        r14 = r14.<org.apache.xmlbeans.impl.common.XPath$Step: org.apache.xmlbeans.impl.common.XPath$Step _next>;

        goto label02;

     label03:
        $z0 = r13.<org.apache.xmlbeans.impl.common.XPath$Step: boolean _deep>;

        if $z0 != 0 goto label06;

        r15 = r13;

     label04:
        if r15 == r14 goto label05;

        r15.<org.apache.xmlbeans.impl.common.XPath$Step: boolean _hasBacktrack> = 1;

        r15 = r15.<org.apache.xmlbeans.impl.common.XPath$Step: org.apache.xmlbeans.impl.common.XPath$Step _next>;

        goto label04;

     label05:
        goto label25;

     label06:
        i2 = 0;

        r16 = r13;

     label07:
        if r16 == r14 goto label08;

        $r12 = r16.<org.apache.xmlbeans.impl.common.XPath$Step: javax.xml.namespace.QName _name>;

        if $r12 == null goto label08;

        $z5 = virtualinvoke r16.<org.apache.xmlbeans.impl.common.XPath$Step: boolean isWild()>();

        if $z5 != 0 goto label08;

        $z6 = r16.<org.apache.xmlbeans.impl.common.XPath$Step: boolean _attr>;

        if $z6 != 0 goto label08;

        i2 = i2 + 1;

        r16 = r16.<org.apache.xmlbeans.impl.common.XPath$Step: org.apache.xmlbeans.impl.common.XPath$Step _next>;

        goto label07;

     label08:
        $i3 = i2 + 1;

        $r17 = newarray (javax.xml.namespace.QName)[$i3];

        $i4 = i2 + 1;

        $r18 = newarray (int)[$i4];

        r19 = r13;

        i5 = 0;

     label09:
        if i5 >= i2 goto label10;

        $r11 = r19.<org.apache.xmlbeans.impl.common.XPath$Step: javax.xml.namespace.QName _name>;

        $r17[i5] = $r11;

        r19 = r19.<org.apache.xmlbeans.impl.common.XPath$Step: org.apache.xmlbeans.impl.common.XPath$Step _next>;

        i5 = i5 + 1;

        goto label09;

     label10:
        $r2 = specialinvoke r1.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: javax.xml.namespace.QName getAnyQName()>();

        $r17[i2] = $r2;

        i6 = 0;

        $i12 = (int) -1;

        $r18[0] = $i12;

        $i14 = (int) -1;

        i7 = $i14;

     label11:
        if i6 >= i2 goto label15;

     label12:
        $i16 = (int) -1;

        if i7 <= $i16 goto label13;

        $r10 = $r17[i6];

        $r9 = $r17[i7];

        $z4 = virtualinvoke $r10.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r9);

        if $z4 != 0 goto label13;

        i7 = $r18[i7];

        goto label12;

     label13:
        i6 = i6 + 1;

        $r8 = $r17[i6];

        i7 = i7 + 1;

        $r7 = $r17[i7];

        $z3 = virtualinvoke $r8.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r7);

        if $z3 == 0 goto label14;

        $i1 = $r18[i7];

        $r18[i6] = $i1;

        goto label11;

     label14:
        $r18[i6] = i7;

        goto label11;

     label15:
        i8 = 0;

        r20 = r13;

     label16:
        if r20 == r16 goto label19;

        r20.<org.apache.xmlbeans.impl.common.XPath$Step: boolean _hasBacktrack> = 1;

        r20.<org.apache.xmlbeans.impl.common.XPath$Step: org.apache.xmlbeans.impl.common.XPath$Step _backtrack> = r13;

        i9 = $r18[i8];

     label17:
        if i9 <= 0 goto label18;

        $r5 = r20.<org.apache.xmlbeans.impl.common.XPath$Step: org.apache.xmlbeans.impl.common.XPath$Step _backtrack>;

        $r6 = $r5.<org.apache.xmlbeans.impl.common.XPath$Step: org.apache.xmlbeans.impl.common.XPath$Step _next>;

        r20.<org.apache.xmlbeans.impl.common.XPath$Step: org.apache.xmlbeans.impl.common.XPath$Step _backtrack> = $r6;

        $i18 = (int) -1;

        i9 = i9 + $i18;

        goto label17;

     label18:
        i8 = i8 + 1;

        r20 = r20.<org.apache.xmlbeans.impl.common.XPath$Step: org.apache.xmlbeans.impl.common.XPath$Step _next>;

        goto label16;

     label19:
        r21 = r13;

        if i2 <= 1 goto label21;

        $i0 = i2 - 1;

        i10 = $r18[$i0];

     label20:
        if i10 <= 0 goto label21;

        r21 = r21.<org.apache.xmlbeans.impl.common.XPath$Step: org.apache.xmlbeans.impl.common.XPath$Step _next>;

        $i20 = (int) -1;

        i10 = i10 + $i20;

        goto label20;

     label21:
        if r16 == r14 goto label22;

        $z2 = r16.<org.apache.xmlbeans.impl.common.XPath$Step: boolean _attr>;

        if $z2 == 0 goto label22;

        r16.<org.apache.xmlbeans.impl.common.XPath$Step: boolean _hasBacktrack> = 1;

        r16.<org.apache.xmlbeans.impl.common.XPath$Step: org.apache.xmlbeans.impl.common.XPath$Step _backtrack> = r21;

        r16 = r16.<org.apache.xmlbeans.impl.common.XPath$Step: org.apache.xmlbeans.impl.common.XPath$Step _next>;

     label22:
        if r16 == r14 goto label23;

        $r4 = r16.<org.apache.xmlbeans.impl.common.XPath$Step: javax.xml.namespace.QName _name>;

        if $r4 != null goto label23;

        r16.<org.apache.xmlbeans.impl.common.XPath$Step: boolean _hasBacktrack> = 1;

        r16.<org.apache.xmlbeans.impl.common.XPath$Step: org.apache.xmlbeans.impl.common.XPath$Step _backtrack> = r21;

     label23:
        $z8 = <org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean $assertionsDisabled>;

        if $z8 != 0 goto label24;

        $z1 = r13.<org.apache.xmlbeans.impl.common.XPath$Step: boolean _deep>;

        if $z1 != 0 goto label24;

        $r22 = new java.lang.AssertionError;

        specialinvoke $r22.<java.lang.AssertionError: void <init>()>();

        throw $r22;

     label24:
        r13.<org.apache.xmlbeans.impl.common.XPath$Step: boolean _hasBacktrack> = 1;

        r13.<org.apache.xmlbeans.impl.common.XPath$Step: org.apache.xmlbeans.impl.common.XPath$Step _backtrack> = r13;

     label25:
        r13 = r14;

        goto label01;

     label26:
        return;
    }

    private void tokenizePath(java.util.ArrayList) throws org.apache.xmlbeans.impl.common.XPath$XPathCompileException
    {
        org.apache.xmlbeans.impl.common.XPath$Step $r1, $r3, $r5, $r6, r8, r9;
        org.apache.xmlbeans.impl.common.XPath$CompilationContext r0;
        java.util.ArrayList r2;
        javax.xml.namespace.QName $r4, $r7;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.xmlbeans.impl.common.XPath$CompilationContext;

        r2 := @parameter0: java.util.ArrayList;

        r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean _lastDeepDot> = 0;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: org.apache.xmlbeans.impl.common.XPath$Step tokenizeSteps()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: void computeBacktrack(org.apache.xmlbeans.impl.common.XPath$Step)>($r1);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $z0 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean _lastDeepDot>;

        if $z0 == 0 goto label5;

        r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean _sawDeepDot> = 1;

        r8 = null;

        r9 = $r1;

     label1:
        if r9 == null goto label4;

        $r3 = r9.<org.apache.xmlbeans.impl.common.XPath$Step: org.apache.xmlbeans.impl.common.XPath$Step _next>;

        if $r3 == null goto label2;

        $r5 = r9.<org.apache.xmlbeans.impl.common.XPath$Step: org.apache.xmlbeans.impl.common.XPath$Step _next>;

        $r6 = $r5.<org.apache.xmlbeans.impl.common.XPath$Step: org.apache.xmlbeans.impl.common.XPath$Step _next>;

        if $r6 != null goto label2;

        $z3 = r9.<org.apache.xmlbeans.impl.common.XPath$Step: boolean _deep>;

        $r7 = r9.<org.apache.xmlbeans.impl.common.XPath$Step: javax.xml.namespace.QName _name>;

        r8 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: org.apache.xmlbeans.impl.common.XPath$Step addStep(boolean,boolean,javax.xml.namespace.QName,org.apache.xmlbeans.impl.common.XPath$Step)>($z3, 1, $r7, r8);

        goto label3;

     label2:
        $z2 = r9.<org.apache.xmlbeans.impl.common.XPath$Step: boolean _deep>;

        $z1 = r9.<org.apache.xmlbeans.impl.common.XPath$Step: boolean _attr>;

        $r4 = r9.<org.apache.xmlbeans.impl.common.XPath$Step: javax.xml.namespace.QName _name>;

        r8 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: org.apache.xmlbeans.impl.common.XPath$Step addStep(boolean,boolean,javax.xml.namespace.QName,org.apache.xmlbeans.impl.common.XPath$Step)>($z2, $z1, $r4, r8);

     label3:
        r9 = r9.<org.apache.xmlbeans.impl.common.XPath$Step: org.apache.xmlbeans.impl.common.XPath$Step _next>;

        goto label1;

     label4:
        specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: void computeBacktrack(org.apache.xmlbeans.impl.common.XPath$Step)>(r8);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

     label5:
        return;
    }

    private org.apache.xmlbeans.impl.common.XPath$Selector tokenizeSelector() throws org.apache.xmlbeans.impl.common.XPath$XPathCompileException
    {
        org.apache.xmlbeans.impl.common.XPath$CompilationContext r1;
        java.lang.Object[] $r4;
        org.apache.xmlbeans.impl.common.XPath$Selector $r2;
        java.util.ArrayList $r0;
        org.apache.xmlbeans.impl.common.XPath$Step[] $r3, $r5, $r6;
        boolean $z0;

        r1 := @this: org.apache.xmlbeans.impl.common.XPath$CompilationContext;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        specialinvoke r1.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: void tokenizePath(java.util.ArrayList)>($r0);

     label1:
        $z0 = specialinvoke r1.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean tokenize(java.lang.String)>("|");

        if $z0 == 0 goto label2;

        specialinvoke r1.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: void tokenizePath(java.util.ArrayList)>($r0);

        goto label1;

     label2:
        $r2 = new org.apache.xmlbeans.impl.common.XPath$Selector;

        $r3 = newarray (org.apache.xmlbeans.impl.common.XPath$Step)[0];

        $r4 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (org.apache.xmlbeans.impl.common.XPath$Step[]) $r4;

        $r6 = (org.apache.xmlbeans.impl.common.XPath$Step[]) $r5;

        specialinvoke $r2.<org.apache.xmlbeans.impl.common.XPath$Selector: void <init>(org.apache.xmlbeans.impl.common.XPath$Step[])>($r6);

        return $r2;
    }

    private org.apache.xmlbeans.impl.common.XPath tokenizeXPath() throws org.apache.xmlbeans.impl.common.XPath$XPathCompileException
    {
        java.lang.Integer $r43, $r44;
        java.util.Map $r1, $r10, $r12, $r13, $r14, $r15, $r17, $r23, $r24, $r25, $r26, $r28;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        org.apache.xmlbeans.impl.common.XPath$Selector $r2;
        java.lang.StringBuffer $r5, $r6, $r7, $r30, $r31, $r35, $r36, $r41, $r42, $r45;
        int $i0, $i1, $i3, $i4, $i6;
        java.lang.String $r8, $r11, $r21, $r22, $r32, $r37;
        org.apache.xmlbeans.impl.common.XPath$XPathCompileException $r9, $r18, $r19, $r20, $r33, $r38, $r39, $r40;
        org.apache.xmlbeans.impl.common.XPath$CompilationContext r0;
        char $c2;
        org.apache.xmlbeans.impl.common.XPath $r46;

        r0 := @this: org.apache.xmlbeans.impl.common.XPath$CompilationContext;

     label01:
        $z11 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean tokenize(java.lang.String,java.lang.String)>("declare", "namespace");

        if $z11 == 0 goto label07;

        $z6 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean parseWhitespace()>();

        if $z6 != 0 goto label02;

        $r40 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: org.apache.xmlbeans.impl.common.XPath$XPathCompileException newError(java.lang.String)>("Expected prefix after \'declare namespace\'");

        throw $r40;

     label02:
        $r21 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.lang.String tokenizeNCName()>();

        $z7 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean tokenize(java.lang.String)>("=");

        if $z7 != 0 goto label03;

        $r39 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: org.apache.xmlbeans.impl.common.XPath$XPathCompileException newError(java.lang.String)>("Expected \'=\'");

        throw $r39;

     label03:
        $r22 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.lang.String tokenizeQuotedUri()>();

        $r23 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.util.Map _namespaces>;

        $z8 = interfaceinvoke $r23.<java.util.Map: boolean containsKey(java.lang.Object)>($r21);

        if $z8 == 0 goto label04;

        $r41 = new java.lang.StringBuffer;

        specialinvoke $r41.<java.lang.StringBuffer: void <init>()>();

        $r35 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Redefinition of namespace prefix: ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.String toString()>();

        $r38 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: org.apache.xmlbeans.impl.common.XPath$XPathCompileException newError(java.lang.String)>($r37);

        throw $r38;

     label04:
        $r24 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.util.Map _namespaces>;

        interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r22);

        $r25 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.util.Map _externalNamespaces>;

        $z9 = interfaceinvoke $r25.<java.util.Map: boolean containsKey(java.lang.Object)>($r21);

        if $z9 == 0 goto label05;

        $r42 = new java.lang.StringBuffer;

        specialinvoke $r42.<java.lang.StringBuffer: void <init>()>();

        $r30 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Redefinition of namespace prefix: ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.String toString()>();

        $r33 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: org.apache.xmlbeans.impl.common.XPath$XPathCompileException newError(java.lang.String)>($r32);

        throw $r33;

     label05:
        $r26 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.util.Map _externalNamespaces>;

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r22);

        $z10 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean tokenize(java.lang.String)>(";");

        if $z10 != 0 goto label06;

     label06:
        $r28 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.util.Map _externalNamespaces>;

        $r43 = new java.lang.Integer;

        $i4 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int _offset>;

        specialinvoke $r43.<java.lang.Integer: void <init>(int)>($i4);

        interfaceinvoke $r28.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("$xmlbeans!ns_boundary", $r43);

        goto label01;

     label07:
        $z0 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean tokenize(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("declare", "default", "element", "namespace");

        if $z0 == 0 goto label11;

        $r11 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.lang.String tokenizeQuotedUri()>();

        $r12 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.util.Map _namespaces>;

        $z3 = interfaceinvoke $r12.<java.util.Map: boolean containsKey(java.lang.Object)>("");

        if $z3 == 0 goto label08;

        $r20 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: org.apache.xmlbeans.impl.common.XPath$XPathCompileException newError(java.lang.String)>("Redefinition of default element namespace");

        throw $r20;

     label08:
        $r13 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.util.Map _namespaces>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("", $r11);

        $r14 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.util.Map _externalNamespaces>;

        $z4 = interfaceinvoke $r14.<java.util.Map: boolean containsKey(java.lang.Object)>("$xmlbeans!default_uri");

        if $z4 == 0 goto label09;

        $r19 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: org.apache.xmlbeans.impl.common.XPath$XPathCompileException newError(java.lang.String)>("Redefinition of default element namespace : ");

        throw $r19;

     label09:
        $r15 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.util.Map _externalNamespaces>;

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("$xmlbeans!default_uri", $r11);

        $z5 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean tokenize(java.lang.String)>(";");

        if $z5 != 0 goto label10;

        $r18 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: org.apache.xmlbeans.impl.common.XPath$XPathCompileException newError(java.lang.String)>("Default Namespace declaration must end with ;");

        throw $r18;

     label10:
        $r17 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.util.Map _externalNamespaces>;

        $r44 = new java.lang.Integer;

        $i3 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int _offset>;

        specialinvoke $r44.<java.lang.Integer: void <init>(int)>($i3);

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("$xmlbeans!ns_boundary", $r44);

        goto label01;

     label11:
        $r1 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.util.Map _namespaces>;

        $z1 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>("");

        if $z1 != 0 goto label12;

        $r10 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: java.util.Map _namespaces>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("", "");

     label12:
        $r2 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: org.apache.xmlbeans.impl.common.XPath$Selector tokenizeSelector()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean parseWhitespace()>();

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int currChar()>();

        $i6 = (int) -1;

        if $i0 == $i6 goto label13;

        $r45 = new java.lang.StringBuffer;

        specialinvoke $r45.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unexpected char \'");

        $i1 = virtualinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: int currChar()>();

        $c2 = (char) $i1;

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        $r9 = specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: org.apache.xmlbeans.impl.common.XPath$XPathCompileException newError(java.lang.String)>($r8);

        throw $r9;

     label13:
        $r46 = new org.apache.xmlbeans.impl.common.XPath;

        $z2 = r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean _sawDeepDot>;

        specialinvoke $r46.<org.apache.xmlbeans.impl.common.XPath: void <init>(org.apache.xmlbeans.impl.common.XPath$Selector,boolean,org.apache.xmlbeans.impl.common.XPath$1)>($r2, $z2, null);

        return $r46;
    }

    private void processNonXpathDecls()
    {
        org.apache.xmlbeans.impl.common.XPath$CompilationContext r0;

        r0 := @this: org.apache.xmlbeans.impl.common.XPath$CompilationContext;

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        boolean $z0, $z1;

        $r0 = <org.apache.xmlbeans.impl.common.XPath: java.lang.Class class$org$apache$xmlbeans$impl$common$XPath>;

        if $r0 != null goto label1;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.common.XPath: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.common.XPath");

        <org.apache.xmlbeans.impl.common.XPath: java.lang.Class class$org$apache$xmlbeans$impl$common$XPath> = $r1;

        goto label2;

     label1:
        $r1 = <org.apache.xmlbeans.impl.common.XPath: java.lang.Class class$org$apache$xmlbeans$impl$common$XPath>;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.apache.xmlbeans.impl.common.XPath$CompilationContext: boolean $assertionsDisabled> = $z1;

        return;
    }
}
