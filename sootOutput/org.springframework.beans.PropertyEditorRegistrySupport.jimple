public class org.springframework.beans.PropertyEditorRegistrySupport extends java.lang.Object implements org.springframework.beans.PropertyEditorRegistry
{
    private org.springframework.core.convert.ConversionService conversionService;
    private boolean defaultEditorsActive;
    private boolean configValueEditorsActive;
    private java.util.Map defaultEditors;
    private java.util.Map overriddenDefaultEditors;
    private java.util.Map customEditors;
    private java.util.Map customEditorsForPath;
    private java.util.Set sharedEditors;
    private java.util.Map customEditorCache;

    public void <init>()
    {
        org.springframework.beans.PropertyEditorRegistrySupport r0;

        r0 := @this: org.springframework.beans.PropertyEditorRegistrySupport;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.beans.PropertyEditorRegistrySupport: boolean defaultEditorsActive> = 0;

        r0.<org.springframework.beans.PropertyEditorRegistrySupport: boolean configValueEditorsActive> = 0;

        return;
    }

    public void setConversionService(org.springframework.core.convert.ConversionService)
    {
        org.springframework.beans.PropertyEditorRegistrySupport r0;
        org.springframework.core.convert.ConversionService r1;

        r0 := @this: org.springframework.beans.PropertyEditorRegistrySupport;

        r1 := @parameter0: org.springframework.core.convert.ConversionService;

        r0.<org.springframework.beans.PropertyEditorRegistrySupport: org.springframework.core.convert.ConversionService conversionService> = r1;

        return;
    }

    public org.springframework.core.convert.ConversionService getConversionService()
    {
        org.springframework.beans.PropertyEditorRegistrySupport r0;
        org.springframework.core.convert.ConversionService $r1;

        r0 := @this: org.springframework.beans.PropertyEditorRegistrySupport;

        $r1 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: org.springframework.core.convert.ConversionService conversionService>;

        return $r1;
    }

    protected void registerDefaultEditors()
    {
        org.springframework.beans.PropertyEditorRegistrySupport r0;

        r0 := @this: org.springframework.beans.PropertyEditorRegistrySupport;

        r0.<org.springframework.beans.PropertyEditorRegistrySupport: boolean defaultEditorsActive> = 1;

        return;
    }

    public void useConfigValueEditors()
    {
        org.springframework.beans.PropertyEditorRegistrySupport r0;

        r0 := @this: org.springframework.beans.PropertyEditorRegistrySupport;

        r0.<org.springframework.beans.PropertyEditorRegistrySupport: boolean configValueEditorsActive> = 1;

        return;
    }

    public void overrideDefaultEditor(java.lang.Class, java.beans.PropertyEditor)
    {
        java.beans.PropertyEditor r3;
        org.springframework.beans.PropertyEditorRegistrySupport r0;
        java.util.Map $r1, $r4;
        java.lang.Class r2;
        java.util.HashMap $r5;

        r0 := @this: org.springframework.beans.PropertyEditorRegistrySupport;

        r2 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.beans.PropertyEditor;

        $r1 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map overriddenDefaultEditors>;

        if $r1 != null goto label1;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map overriddenDefaultEditors> = $r5;

     label1:
        $r4 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map overriddenDefaultEditors>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

        return;
    }

    public java.beans.PropertyEditor getDefaultEditor(java.lang.Class)
    {
        java.beans.PropertyEditor $r6, r9;
        org.springframework.beans.PropertyEditorRegistrySupport r0;
        java.util.Map $r1, $r2, $r4, $r7;
        java.lang.Class r3;
        java.lang.Object $r5, $r8;
        boolean $z0;

        r0 := @this: org.springframework.beans.PropertyEditorRegistrySupport;

        r3 := @parameter0: java.lang.Class;

        $z0 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: boolean defaultEditorsActive>;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map overriddenDefaultEditors>;

        if $r1 == null goto label2;

        $r7 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map overriddenDefaultEditors>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r9 = (java.beans.PropertyEditor) $r8;

        if r9 == null goto label2;

        return r9;

     label2:
        $r2 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        if $r2 != null goto label3;

        specialinvoke r0.<org.springframework.beans.PropertyEditorRegistrySupport: void createDefaultEditors()>();

     label3:
        $r4 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        $r6 = (java.beans.PropertyEditor) $r5;

        return $r6;
    }

    private void createDefaultEditors()
    {
        org.springframework.core.io.support.ResourceArrayPropertyEditor $r22;
        org.springframework.beans.propertyeditors.FileEditor $r10;
        org.springframework.beans.propertyeditors.InputSourceEditor $r14;
        java.util.Map $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r41, $r43, $r45, $r47, $r50, $r52, $r55, $r57, $r60, $r62, $r65, $r67, $r70, $r72, $r75, $r77, $r80, $r82, $r85, $r87, $r89, $r91, $r92, $r93, $r94;
        org.springframework.beans.propertyeditors.ClassArrayEditor $r6;
        org.springframework.beans.propertyeditors.StringArrayPropertyEditor $r90;
        org.springframework.beans.propertyeditors.ByteArrayPropertyEditor $r42;
        org.springframework.beans.propertyeditors.TimeZoneEditor $r24;
        org.springframework.beans.propertyeditors.UUIDEditor $r30;
        org.springframework.beans.propertyeditors.URIEditor $r26;
        org.springframework.beans.propertyeditors.CharArrayPropertyEditor $r44;
        org.springframework.beans.PropertyEditorRegistrySupport r0;
        org.springframework.beans.propertyeditors.PatternEditor $r18;
        boolean $z0;
        org.springframework.beans.propertyeditors.PropertiesEditor $r20;
        org.springframework.beans.propertyeditors.CurrencyEditor $r8;
        java.util.HashMap $r1;
        org.springframework.beans.propertyeditors.CharacterEditor $r46, $r49;
        org.springframework.beans.propertyeditors.CustomNumberEditor $r56, $r59, $r61, $r64, $r66, $r69, $r71, $r74, $r76, $r79, $r81, $r84, $r86, $r88;
        org.springframework.beans.propertyeditors.CustomMapEditor $r40;
        org.springframework.beans.propertyeditors.LocaleEditor $r16;
        org.springframework.beans.propertyeditors.CustomBooleanEditor $r51, $r54;
        org.springframework.beans.propertyeditors.URLEditor $r28;
        org.springframework.beans.propertyeditors.ClassEditor $r4;
        org.springframework.beans.propertyeditors.InputStreamEditor $r12;
        org.springframework.beans.propertyeditors.CustomCollectionEditor $r32, $r34, $r36, $r38;
        java.lang.Class $r48, $r53, $r58, $r63, $r68, $r73, $r78, $r83;
        org.springframework.beans.propertyeditors.CharsetEditor $r2;

        r0 := @this: org.springframework.beans.PropertyEditorRegistrySupport;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>(int)>(64);

        r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors> = $r1;

        $r3 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r2 = new org.springframework.beans.propertyeditors.CharsetEditor;

        specialinvoke $r2.<org.springframework.beans.propertyeditors.CharsetEditor: void <init>()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/nio/charset/Charset;", $r2);

        $r5 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r4 = new org.springframework.beans.propertyeditors.ClassEditor;

        specialinvoke $r4.<org.springframework.beans.propertyeditors.ClassEditor: void <init>()>();

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Class;", $r4);

        $r7 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r6 = new org.springframework.beans.propertyeditors.ClassArrayEditor;

        specialinvoke $r6.<org.springframework.beans.propertyeditors.ClassArrayEditor: void <init>()>();

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "[Ljava/lang/Class;", $r6);

        $r9 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r8 = new org.springframework.beans.propertyeditors.CurrencyEditor;

        specialinvoke $r8.<org.springframework.beans.propertyeditors.CurrencyEditor: void <init>()>();

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/Currency;", $r8);

        $r11 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r10 = new org.springframework.beans.propertyeditors.FileEditor;

        specialinvoke $r10.<org.springframework.beans.propertyeditors.FileEditor: void <init>()>();

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/io/File;", $r10);

        $r13 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r12 = new org.springframework.beans.propertyeditors.InputStreamEditor;

        specialinvoke $r12.<org.springframework.beans.propertyeditors.InputStreamEditor: void <init>()>();

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/io/InputStream;", $r12);

        $r15 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r14 = new org.springframework.beans.propertyeditors.InputSourceEditor;

        specialinvoke $r14.<org.springframework.beans.propertyeditors.InputSourceEditor: void <init>()>();

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Lorg/xml/sax/InputSource;", $r14);

        $r17 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r16 = new org.springframework.beans.propertyeditors.LocaleEditor;

        specialinvoke $r16.<org.springframework.beans.propertyeditors.LocaleEditor: void <init>()>();

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/Locale;", $r16);

        $r19 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r18 = new org.springframework.beans.propertyeditors.PatternEditor;

        specialinvoke $r18.<org.springframework.beans.propertyeditors.PatternEditor: void <init>()>();

        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/regex/Pattern;", $r18);

        $r21 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r20 = new org.springframework.beans.propertyeditors.PropertiesEditor;

        specialinvoke $r20.<org.springframework.beans.propertyeditors.PropertiesEditor: void <init>()>();

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/Properties;", $r20);

        $r23 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r22 = new org.springframework.core.io.support.ResourceArrayPropertyEditor;

        specialinvoke $r22.<org.springframework.core.io.support.ResourceArrayPropertyEditor: void <init>()>();

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "[Lorg/springframework/core/io/Resource;", $r22);

        $r25 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r24 = new org.springframework.beans.propertyeditors.TimeZoneEditor;

        specialinvoke $r24.<org.springframework.beans.propertyeditors.TimeZoneEditor: void <init>()>();

        interfaceinvoke $r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/TimeZone;", $r24);

        $r27 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r26 = new org.springframework.beans.propertyeditors.URIEditor;

        specialinvoke $r26.<org.springframework.beans.propertyeditors.URIEditor: void <init>()>();

        interfaceinvoke $r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/net/URI;", $r26);

        $r29 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r28 = new org.springframework.beans.propertyeditors.URLEditor;

        specialinvoke $r28.<org.springframework.beans.propertyeditors.URLEditor: void <init>()>();

        interfaceinvoke $r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/net/URL;", $r28);

        $r31 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r30 = new org.springframework.beans.propertyeditors.UUIDEditor;

        specialinvoke $r30.<org.springframework.beans.propertyeditors.UUIDEditor: void <init>()>();

        interfaceinvoke $r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/UUID;", $r30);

        $r33 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r32 = new org.springframework.beans.propertyeditors.CustomCollectionEditor;

        specialinvoke $r32.<org.springframework.beans.propertyeditors.CustomCollectionEditor: void <init>(java.lang.Class)>(class "Ljava/util/Collection;");

        interfaceinvoke $r33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/Collection;", $r32);

        $r35 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r34 = new org.springframework.beans.propertyeditors.CustomCollectionEditor;

        specialinvoke $r34.<org.springframework.beans.propertyeditors.CustomCollectionEditor: void <init>(java.lang.Class)>(class "Ljava/util/Set;");

        interfaceinvoke $r35.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/Set;", $r34);

        $r37 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r36 = new org.springframework.beans.propertyeditors.CustomCollectionEditor;

        specialinvoke $r36.<org.springframework.beans.propertyeditors.CustomCollectionEditor: void <init>(java.lang.Class)>(class "Ljava/util/SortedSet;");

        interfaceinvoke $r37.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/SortedSet;", $r36);

        $r39 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r38 = new org.springframework.beans.propertyeditors.CustomCollectionEditor;

        specialinvoke $r38.<org.springframework.beans.propertyeditors.CustomCollectionEditor: void <init>(java.lang.Class)>(class "Ljava/util/List;");

        interfaceinvoke $r39.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/List;", $r38);

        $r41 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r40 = new org.springframework.beans.propertyeditors.CustomMapEditor;

        specialinvoke $r40.<org.springframework.beans.propertyeditors.CustomMapEditor: void <init>(java.lang.Class)>(class "Ljava/util/SortedMap;");

        interfaceinvoke $r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/SortedMap;", $r40);

        $r43 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r42 = new org.springframework.beans.propertyeditors.ByteArrayPropertyEditor;

        specialinvoke $r42.<org.springframework.beans.propertyeditors.ByteArrayPropertyEditor: void <init>()>();

        interfaceinvoke $r43.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "[B", $r42);

        $r45 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r44 = new org.springframework.beans.propertyeditors.CharArrayPropertyEditor;

        specialinvoke $r44.<org.springframework.beans.propertyeditors.CharArrayPropertyEditor: void <init>()>();

        interfaceinvoke $r45.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "[C", $r44);

        $r47 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r48 = <java.lang.Character: java.lang.Class TYPE>;

        $r46 = new org.springframework.beans.propertyeditors.CharacterEditor;

        specialinvoke $r46.<org.springframework.beans.propertyeditors.CharacterEditor: void <init>(boolean)>(0);

        interfaceinvoke $r47.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r48, $r46);

        $r50 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r49 = new org.springframework.beans.propertyeditors.CharacterEditor;

        specialinvoke $r49.<org.springframework.beans.propertyeditors.CharacterEditor: void <init>(boolean)>(1);

        interfaceinvoke $r50.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Character;", $r49);

        $r52 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r53 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r51 = new org.springframework.beans.propertyeditors.CustomBooleanEditor;

        specialinvoke $r51.<org.springframework.beans.propertyeditors.CustomBooleanEditor: void <init>(boolean)>(0);

        interfaceinvoke $r52.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r53, $r51);

        $r55 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r54 = new org.springframework.beans.propertyeditors.CustomBooleanEditor;

        specialinvoke $r54.<org.springframework.beans.propertyeditors.CustomBooleanEditor: void <init>(boolean)>(1);

        interfaceinvoke $r55.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Boolean;", $r54);

        $r57 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r58 = <java.lang.Byte: java.lang.Class TYPE>;

        $r56 = new org.springframework.beans.propertyeditors.CustomNumberEditor;

        specialinvoke $r56.<org.springframework.beans.propertyeditors.CustomNumberEditor: void <init>(java.lang.Class,boolean)>(class "Ljava/lang/Byte;", 0);

        interfaceinvoke $r57.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r58, $r56);

        $r60 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r59 = new org.springframework.beans.propertyeditors.CustomNumberEditor;

        specialinvoke $r59.<org.springframework.beans.propertyeditors.CustomNumberEditor: void <init>(java.lang.Class,boolean)>(class "Ljava/lang/Byte;", 1);

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Byte;", $r59);

        $r62 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r63 = <java.lang.Short: java.lang.Class TYPE>;

        $r61 = new org.springframework.beans.propertyeditors.CustomNumberEditor;

        specialinvoke $r61.<org.springframework.beans.propertyeditors.CustomNumberEditor: void <init>(java.lang.Class,boolean)>(class "Ljava/lang/Short;", 0);

        interfaceinvoke $r62.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r63, $r61);

        $r65 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r64 = new org.springframework.beans.propertyeditors.CustomNumberEditor;

        specialinvoke $r64.<org.springframework.beans.propertyeditors.CustomNumberEditor: void <init>(java.lang.Class,boolean)>(class "Ljava/lang/Short;", 1);

        interfaceinvoke $r65.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Short;", $r64);

        $r67 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r68 = <java.lang.Integer: java.lang.Class TYPE>;

        $r66 = new org.springframework.beans.propertyeditors.CustomNumberEditor;

        specialinvoke $r66.<org.springframework.beans.propertyeditors.CustomNumberEditor: void <init>(java.lang.Class,boolean)>(class "Ljava/lang/Integer;", 0);

        interfaceinvoke $r67.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r68, $r66);

        $r70 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r69 = new org.springframework.beans.propertyeditors.CustomNumberEditor;

        specialinvoke $r69.<org.springframework.beans.propertyeditors.CustomNumberEditor: void <init>(java.lang.Class,boolean)>(class "Ljava/lang/Integer;", 1);

        interfaceinvoke $r70.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Integer;", $r69);

        $r72 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r73 = <java.lang.Long: java.lang.Class TYPE>;

        $r71 = new org.springframework.beans.propertyeditors.CustomNumberEditor;

        specialinvoke $r71.<org.springframework.beans.propertyeditors.CustomNumberEditor: void <init>(java.lang.Class,boolean)>(class "Ljava/lang/Long;", 0);

        interfaceinvoke $r72.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r73, $r71);

        $r75 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r74 = new org.springframework.beans.propertyeditors.CustomNumberEditor;

        specialinvoke $r74.<org.springframework.beans.propertyeditors.CustomNumberEditor: void <init>(java.lang.Class,boolean)>(class "Ljava/lang/Long;", 1);

        interfaceinvoke $r75.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Long;", $r74);

        $r77 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r78 = <java.lang.Float: java.lang.Class TYPE>;

        $r76 = new org.springframework.beans.propertyeditors.CustomNumberEditor;

        specialinvoke $r76.<org.springframework.beans.propertyeditors.CustomNumberEditor: void <init>(java.lang.Class,boolean)>(class "Ljava/lang/Float;", 0);

        interfaceinvoke $r77.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r78, $r76);

        $r80 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r79 = new org.springframework.beans.propertyeditors.CustomNumberEditor;

        specialinvoke $r79.<org.springframework.beans.propertyeditors.CustomNumberEditor: void <init>(java.lang.Class,boolean)>(class "Ljava/lang/Float;", 1);

        interfaceinvoke $r80.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Float;", $r79);

        $r82 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r83 = <java.lang.Double: java.lang.Class TYPE>;

        $r81 = new org.springframework.beans.propertyeditors.CustomNumberEditor;

        specialinvoke $r81.<org.springframework.beans.propertyeditors.CustomNumberEditor: void <init>(java.lang.Class,boolean)>(class "Ljava/lang/Double;", 0);

        interfaceinvoke $r82.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r83, $r81);

        $r85 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r84 = new org.springframework.beans.propertyeditors.CustomNumberEditor;

        specialinvoke $r84.<org.springframework.beans.propertyeditors.CustomNumberEditor: void <init>(java.lang.Class,boolean)>(class "Ljava/lang/Double;", 1);

        interfaceinvoke $r85.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Double;", $r84);

        $r87 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r86 = new org.springframework.beans.propertyeditors.CustomNumberEditor;

        specialinvoke $r86.<org.springframework.beans.propertyeditors.CustomNumberEditor: void <init>(java.lang.Class,boolean)>(class "Ljava/math/BigDecimal;", 1);

        interfaceinvoke $r87.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/math/BigDecimal;", $r86);

        $r89 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        $r88 = new org.springframework.beans.propertyeditors.CustomNumberEditor;

        specialinvoke $r88.<org.springframework.beans.propertyeditors.CustomNumberEditor: void <init>(java.lang.Class,boolean)>(class "Ljava/math/BigInteger;", 1);

        interfaceinvoke $r89.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/math/BigInteger;", $r88);

        $z0 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: boolean configValueEditorsActive>;

        if $z0 == 0 goto label1;

        $r90 = new org.springframework.beans.propertyeditors.StringArrayPropertyEditor;

        specialinvoke $r90.<org.springframework.beans.propertyeditors.StringArrayPropertyEditor: void <init>()>();

        $r91 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        interfaceinvoke $r91.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "[Ljava/lang/String;", $r90);

        $r92 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        interfaceinvoke $r92.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "[S", $r90);

        $r93 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        interfaceinvoke $r93.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "[I", $r90);

        $r94 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        interfaceinvoke $r94.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "[J", $r90);

     label1:
        return;
    }

    protected void copyDefaultEditorsTo(org.springframework.beans.PropertyEditorRegistrySupport)
    {
        org.springframework.beans.PropertyEditorRegistrySupport r0, r1;
        java.util.Map $r2, $r3;
        boolean $z0, $z1;

        r1 := @this: org.springframework.beans.PropertyEditorRegistrySupport;

        r0 := @parameter0: org.springframework.beans.PropertyEditorRegistrySupport;

        $z0 = r1.<org.springframework.beans.PropertyEditorRegistrySupport: boolean defaultEditorsActive>;

        r0.<org.springframework.beans.PropertyEditorRegistrySupport: boolean defaultEditorsActive> = $z0;

        $z1 = r1.<org.springframework.beans.PropertyEditorRegistrySupport: boolean configValueEditorsActive>;

        r0.<org.springframework.beans.PropertyEditorRegistrySupport: boolean configValueEditorsActive> = $z1;

        $r2 = r1.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors>;

        r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map defaultEditors> = $r2;

        $r3 = r1.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map overriddenDefaultEditors>;

        r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map overriddenDefaultEditors> = $r3;

        return;
    }

    public void registerCustomEditor(java.lang.Class, java.beans.PropertyEditor)
    {
        java.lang.Class r1;
        java.beans.PropertyEditor r2;
        org.springframework.beans.PropertyEditorRegistrySupport r0;

        r0 := @this: org.springframework.beans.PropertyEditorRegistrySupport;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.beans.PropertyEditor;

        virtualinvoke r0.<org.springframework.beans.PropertyEditorRegistrySupport: void registerCustomEditor(java.lang.Class,java.lang.String,java.beans.PropertyEditor)>(r1, null, r2);

        return;
    }

    public void registerCustomEditor(java.lang.Class, java.lang.String, java.beans.PropertyEditor)
    {
        java.beans.PropertyEditor r4;
        org.springframework.beans.PropertyEditorRegistrySupport r2;
        java.lang.IllegalArgumentException $r11;
        java.util.LinkedHashMap $r6, $r10;
        java.util.Map $r3, $r5, $r7, $r9;
        java.lang.Class r0;
        java.lang.String r1;
        org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder $r8;

        r2 := @this: org.springframework.beans.PropertyEditorRegistrySupport;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        r4 := @parameter2: java.beans.PropertyEditor;

        if r0 != null goto label1;

        if r1 != null goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Either requiredType or propertyPath is required");

        throw $r11;

     label1:
        if r1 == null goto label3;

        $r7 = r2.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map customEditorsForPath>;

        if $r7 != null goto label2;

        $r10 = new java.util.LinkedHashMap;

        specialinvoke $r10.<java.util.LinkedHashMap: void <init>(int)>(16);

        r2.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map customEditorsForPath> = $r10;

     label2:
        $r9 = r2.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map customEditorsForPath>;

        $r8 = new org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder;

        specialinvoke $r8.<org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder: void <init>(java.beans.PropertyEditor,java.lang.Class,org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder)>(r4, r0, null);

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r8);

        goto label5;

     label3:
        $r3 = r2.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map customEditors>;

        if $r3 != null goto label4;

        $r6 = new java.util.LinkedHashMap;

        specialinvoke $r6.<java.util.LinkedHashMap: void <init>(int)>(16);

        r2.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map customEditors> = $r6;

     label4:
        $r5 = r2.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map customEditors>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r4);

        r2.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map customEditorCache> = null;

     label5:
        return;
    }

    public void registerSharedEditor(java.lang.Class, java.beans.PropertyEditor)
    {
        java.util.HashSet $r5;
        java.beans.PropertyEditor r2;
        org.springframework.beans.PropertyEditorRegistrySupport r0;
        java.util.Set $r3, $r4;
        java.lang.Class r1;

        r0 := @this: org.springframework.beans.PropertyEditorRegistrySupport;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.beans.PropertyEditor;

        virtualinvoke r0.<org.springframework.beans.PropertyEditorRegistrySupport: void registerCustomEditor(java.lang.Class,java.lang.String,java.beans.PropertyEditor)>(r1, null, r2);

        $r3 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Set sharedEditors>;

        if $r3 != null goto label1;

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Set sharedEditors> = $r5;

     label1:
        $r4 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Set sharedEditors>;

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>(r2);

        return;
    }

    public boolean isSharedEditor(java.beans.PropertyEditor)
    {
        java.beans.PropertyEditor r2;
        org.springframework.beans.PropertyEditorRegistrySupport r0;
        java.util.Set $r1, $r3;
        boolean $z0;

        r0 := @this: org.springframework.beans.PropertyEditorRegistrySupport;

        r2 := @parameter0: java.beans.PropertyEditor;

        $r1 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Set sharedEditors>;

        if $r1 == null goto label1;

        $r3 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Set sharedEditors>;

        $z0 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.beans.PropertyEditor findCustomEditor(java.lang.Class, java.lang.String)
    {
        java.beans.PropertyEditor $r4, r10, $r11;
        org.springframework.beans.PropertyEditorRegistrySupport r2;
        java.util.Iterator $r6;
        java.util.Map $r3;
        java.lang.Class r0, r9;
        java.lang.Object $r7;
        java.lang.String r1, r8;
        java.util.LinkedList $r5;
        boolean $z0;

        r2 := @this: org.springframework.beans.PropertyEditorRegistrySupport;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        r9 = r0;

        if r1 == null goto label5;

        $r3 = r2.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map customEditorsForPath>;

        if $r3 == null goto label4;

        $r4 = specialinvoke r2.<org.springframework.beans.PropertyEditorRegistrySupport: java.beans.PropertyEditor getCustomEditor(java.lang.String,java.lang.Class)>(r1, r0);

        r10 = $r4;

        if $r4 != null goto label3;

        $r5 = new java.util.LinkedList;

        specialinvoke $r5.<java.util.LinkedList: void <init>()>();

        specialinvoke r2.<org.springframework.beans.PropertyEditorRegistrySupport: void addStrippedPropertyPaths(java.util.List,java.lang.String,java.lang.String)>($r5, "", r1);

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r7;

        r10 = specialinvoke r2.<org.springframework.beans.PropertyEditorRegistrySupport: java.beans.PropertyEditor getCustomEditor(java.lang.String,java.lang.Class)>(r8, r0);

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        if r10 == null goto label1;

     label3:
        if r10 == null goto label4;

        return r10;

     label4:
        if r0 != null goto label5;

        r9 = virtualinvoke r2.<org.springframework.beans.PropertyEditorRegistrySupport: java.lang.Class getPropertyType(java.lang.String)>(r1);

     label5:
        $r11 = specialinvoke r2.<org.springframework.beans.PropertyEditorRegistrySupport: java.beans.PropertyEditor getCustomEditor(java.lang.Class)>(r9);

        return $r11;
    }

    public boolean hasCustomEditorForElement(java.lang.Class, java.lang.String)
    {
        org.springframework.beans.PropertyEditorRegistrySupport r2;
        java.util.Map $r3, $r4, $r5, $r6;
        java.lang.String r0, $r12;
        boolean $z0, $z1, $z2;
        java.util.Map$Entry r10;
        java.beans.PropertyEditor $r15;
        java.util.Iterator $r8;
        java.util.Set $r7;
        java.lang.Class r1;
        java.lang.Object $r9, $r11, $r13;
        org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder $r14;

        r2 := @this: org.springframework.beans.PropertyEditorRegistrySupport;

        r1 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.String;

        if r0 == null goto label3;

        $r5 = r2.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map customEditorsForPath>;

        if $r5 == null goto label3;

        $r6 = r2.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map customEditorsForPath>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.util.Map$Entry) $r9;

        $r11 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = (java.lang.String) $r11;

        $z1 = staticinvoke <org.springframework.beans.PropertyAccessorUtils: boolean matchesProperty(java.lang.String,java.lang.String)>($r12, r0);

        if $z1 == 0 goto label2;

        $r13 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r14 = (org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder) $r13;

        $r15 = staticinvoke <org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder: java.beans.PropertyEditor access$1(org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder,java.lang.Class)>($r14, r1);

        if $r15 == null goto label2;

        return 1;

     label2:
        $z2 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label1;

     label3:
        if r1 == null goto label4;

        $r3 = r2.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map customEditors>;

        if $r3 == null goto label4;

        $r4 = r2.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map customEditors>;

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label4;

        return 1;

     label4:
        return 0;
    }

    protected java.lang.Class getPropertyType(java.lang.String)
    {
        java.lang.String r1;
        org.springframework.beans.PropertyEditorRegistrySupport r0;

        r0 := @this: org.springframework.beans.PropertyEditorRegistrySupport;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    private java.beans.PropertyEditor getCustomEditor(java.lang.String, java.lang.Class)
    {
        java.beans.PropertyEditor $r6;
        org.springframework.beans.PropertyEditorRegistrySupport r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.Class r5;
        java.lang.String r1;
        org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder r4;

        r0 := @this: org.springframework.beans.PropertyEditorRegistrySupport;

        r1 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Class;

        $r2 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map customEditorsForPath>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder) $r3;

        if r4 == null goto label1;

        $r6 = staticinvoke <org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder: java.beans.PropertyEditor access$1(org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder,java.lang.Class)>(r4, r5);

        goto label2;

     label1:
        $r6 = null;

     label2:
        return $r6;
    }

    private java.beans.PropertyEditor getCustomEditor(java.lang.Class)
    {
        org.springframework.beans.PropertyEditorRegistrySupport r1;
        java.util.HashMap $r15;
        java.util.Map $r2, $r3, $r5, $r6, $r11, $r13, $r14, $r16;
        boolean $z0, $z1;
        java.beans.PropertyEditor r18;
        java.util.Iterator $r8;
        java.util.Set $r7;
        java.lang.Class r0, r10;
        java.lang.Object $r4, $r9, $r12, $r17;

        r1 := @this: org.springframework.beans.PropertyEditorRegistrySupport;

        r0 := @parameter0: java.lang.Class;

        if r0 == null goto label1;

        $r2 = r1.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map customEditors>;

        if $r2 != null goto label2;

     label1:
        return null;

     label2:
        $r3 = r1.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map customEditors>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r18 = (java.beans.PropertyEditor) $r4;

        if r18 != null goto label7;

        $r5 = r1.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map customEditorCache>;

        if $r5 == null goto label3;

        $r16 = r1.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map customEditorCache>;

        $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r18 = (java.beans.PropertyEditor) $r17;

     label3:
        if r18 != null goto label7;

        $r6 = r1.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map customEditors>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set keySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

        goto label6;

     label4:
        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.Class) $r9;

        $z0 = virtualinvoke r10.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 == 0 goto label6;

        $r11 = r1.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map customEditors>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10);

        r18 = (java.beans.PropertyEditor) $r12;

        $r13 = r1.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map customEditorCache>;

        if $r13 != null goto label5;

        $r15 = new java.util.HashMap;

        specialinvoke $r15.<java.util.HashMap: void <init>()>();

        r1.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map customEditorCache> = $r15;

     label5:
        $r14 = r1.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map customEditorCache>;

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r18);

     label6:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        if r18 == null goto label4;

     label7:
        return r18;
    }

    protected java.lang.Class guessPropertyTypeFromEditors(java.lang.String)
    {
        org.springframework.beans.PropertyEditorRegistrySupport r0;
        java.util.Iterator $r7;
        java.util.Map $r1, $r3, $r10;
        java.lang.Object $r4, $r8, $r11;
        java.lang.Class $r5;
        java.lang.String r2, r9;
        java.util.LinkedList $r6;
        org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder r12;
        boolean $z0;

        r0 := @this: org.springframework.beans.PropertyEditorRegistrySupport;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map customEditorsForPath>;

        if $r1 == null goto label4;

        $r3 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map customEditorsForPath>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r12 = (org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder) $r4;

        if r12 != null goto label3;

        $r6 = new java.util.LinkedList;

        specialinvoke $r6.<java.util.LinkedList: void <init>()>();

        specialinvoke r0.<org.springframework.beans.PropertyEditorRegistrySupport: void addStrippedPropertyPaths(java.util.List,java.lang.String,java.lang.String)>($r6, "", r2);

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.String) $r8;

        $r10 = r0.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map customEditorsForPath>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9);

        r12 = (org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder) $r11;

     label2:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        if r12 == null goto label1;

     label3:
        if r12 == null goto label4;

        $r5 = staticinvoke <org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder: java.lang.Class access$2(org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder)>(r12);

        return $r5;

     label4:
        return null;
    }

    protected void copyCustomEditorsTo(org.springframework.beans.PropertyEditorRegistry, java.lang.String)
    {
        org.springframework.beans.PropertyEditorRegistrySupport r2;
        org.springframework.beans.PropertyEditorRegistry r13;
        java.util.Map $r3, $r4, $r5, $r20;
        boolean $z0, $z1, $z2, $z3;
        java.util.Set $r6, $r21;
        org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder r12;
        int $i0, $i1, $i3;
        java.lang.String r0, r1, r10, $r16, $r17, $r28;
        java.beans.PropertyEditor $r15, $r19, $r27;
        java.util.Map$Entry r29, r30;
        java.util.Iterator $r7, $r22;
        java.lang.Object $r8, $r9, $r11, $r23, $r24, $r26;
        java.lang.Class $r14, $r18, $r25;

        r2 := @this: org.springframework.beans.PropertyEditorRegistrySupport;

        r13 := @parameter0: org.springframework.beans.PropertyEditorRegistry;

        r0 := @parameter1: java.lang.String;

        if r0 == null goto label01;

        $r28 = staticinvoke <org.springframework.beans.PropertyAccessorUtils: java.lang.String getPropertyName(java.lang.String)>(r0);

        goto label02;

     label01:
        $r28 = null;

     label02:
        r1 = $r28;

        $r3 = r2.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map customEditors>;

        if $r3 == null goto label05;

        $r20 = r2.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map customEditors>;

        $r21 = interfaceinvoke $r20.<java.util.Map: java.util.Set entrySet()>();

        $r22 = interfaceinvoke $r21.<java.util.Set: java.util.Iterator iterator()>();

        goto label04;

     label03:
        $r23 = interfaceinvoke $r22.<java.util.Iterator: java.lang.Object next()>();

        r29 = (java.util.Map$Entry) $r23;

        $r24 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r25 = (java.lang.Class) $r24;

        $r26 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r27 = (java.beans.PropertyEditor) $r26;

        interfaceinvoke r13.<org.springframework.beans.PropertyEditorRegistry: void registerCustomEditor(java.lang.Class,java.beans.PropertyEditor)>($r25, $r27);

     label04:
        $z2 = interfaceinvoke $r22.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label03;

     label05:
        $r4 = r2.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map customEditorsForPath>;

        if $r4 == null goto label10;

        $r5 = r2.<org.springframework.beans.PropertyEditorRegistrySupport: java.util.Map customEditorsForPath>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

        goto label09;

     label06:
        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r30 = (java.util.Map$Entry) $r8;

        $r9 = interfaceinvoke r30.<java.util.Map$Entry: java.lang.Object getKey()>();

        r10 = (java.lang.String) $r9;

        $r11 = interfaceinvoke r30.<java.util.Map$Entry: java.lang.Object getValue()>();

        r12 = (org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder) $r11;

        if r0 == null goto label08;

        $i0 = staticinvoke <org.springframework.beans.PropertyAccessorUtils: int getFirstNestedPropertySeparatorIndex(java.lang.String)>(r10);

        $i3 = (int) -1;

        if $i0 == $i3 goto label09;

        $r16 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i1 = $i0 + 1;

        $r17 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int)>($i1);

        $z0 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label07;

        $z1 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label09;

     label07:
        $r18 = staticinvoke <org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder: java.lang.Class access$2(org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder)>(r12);

        $r19 = staticinvoke <org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder: java.beans.PropertyEditor access$3(org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder)>(r12);

        interfaceinvoke r13.<org.springframework.beans.PropertyEditorRegistry: void registerCustomEditor(java.lang.Class,java.lang.String,java.beans.PropertyEditor)>($r18, $r17, $r19);

        goto label09;

     label08:
        $r14 = staticinvoke <org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder: java.lang.Class access$2(org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder)>(r12);

        $r15 = staticinvoke <org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder: java.beans.PropertyEditor access$3(org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder)>(r12);

        interfaceinvoke r13.<org.springframework.beans.PropertyEditorRegistry: void registerCustomEditor(java.lang.Class,java.lang.String,java.beans.PropertyEditor)>($r14, r10, $r15);

     label09:
        $z3 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label06;

     label10:
        return;
    }

    private void addStrippedPropertyPaths(java.util.List, java.lang.String, java.lang.String)
    {
        org.springframework.beans.PropertyEditorRegistrySupport r11;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i8;
        java.lang.String r0, $r1, $r2, $r3, r6, $r7, $r10, $r13, $r15, $r17, $r20;
        java.util.List r4;
        java.lang.StringBuilder $r8, $r9, $r14, $r18, $r19, $r21, $r22, $r23;

        r11 := @this: org.springframework.beans.PropertyEditorRegistrySupport;

        r4 := @parameter0: java.util.List;

        r6 := @parameter1: java.lang.String;

        r0 := @parameter2: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(91);

        $i6 = (int) -1;

        if $i0 == $i6 goto label1;

        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(93);

        $i8 = (int) -1;

        if $i1 == $i8 goto label1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i2 = $i1 + 1;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i0, $i2);

        $i3 = $i1 + 1;

        $i4 = virtualinvoke r0.<java.lang.String: int length()>();

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i3, $i4);

        $r21 = new java.lang.StringBuilder;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r6);

        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        $r8 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r10);

        $r22 = new java.lang.StringBuilder;

        $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r6);

        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>($r13);

        $r14 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r11.<org.springframework.beans.PropertyEditorRegistrySupport: void addStrippedPropertyPaths(java.util.List,java.lang.String,java.lang.String)>(r4, $r15, $r3);

        $r23 = new java.lang.StringBuilder;

        $r17 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r6);

        specialinvoke $r23.<java.lang.StringBuilder: void <init>(java.lang.String)>($r17);

        $r18 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r11.<org.springframework.beans.PropertyEditorRegistrySupport: void addStrippedPropertyPaths(java.util.List,java.lang.String,java.lang.String)>(r4, $r20, $r3);

     label1:
        return;
    }
}
