public class org.apache.xpath.objects.XNumber extends org.apache.xpath.objects.XObject
{
    double m_val;

    public void <init>(double)
    {
        org.apache.xpath.objects.XNumber r0;
        double d0;

        r0 := @this: org.apache.xpath.objects.XNumber;

        d0 := @parameter0: double;

        specialinvoke r0.<org.apache.xpath.objects.XObject: void <init>()>();

        r0.<org.apache.xpath.objects.XNumber: double m_val> = d0;

        return;
    }

    public void <init>(java.lang.Number)
    {
        java.lang.Number r1;
        org.apache.xpath.objects.XNumber r0;
        double $d0;

        r0 := @this: org.apache.xpath.objects.XNumber;

        r1 := @parameter0: java.lang.Number;

        specialinvoke r0.<org.apache.xpath.objects.XObject: void <init>()>();

        $d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>();

        r0.<org.apache.xpath.objects.XNumber: double m_val> = $d0;

        r0.<org.apache.xpath.objects.XObject: java.lang.Object m_obj> = r1;

        return;
    }

    public int getType()
    {
        org.apache.xpath.objects.XNumber r0;

        r0 := @this: org.apache.xpath.objects.XNumber;

        return 2;
    }

    public java.lang.String getTypeString()
    {
        org.apache.xpath.objects.XNumber r0;

        r0 := @this: org.apache.xpath.objects.XNumber;

        return "#NUMBER";
    }

    public double num()
    {
        org.apache.xpath.objects.XNumber r0;
        double $d0;

        r0 := @this: org.apache.xpath.objects.XNumber;

        $d0 = r0.<org.apache.xpath.objects.XNumber: double m_val>;

        return $d0;
    }

    public double num(org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.XPathContext r1;
        org.apache.xpath.objects.XNumber r0;
        double $d0;

        r0 := @this: org.apache.xpath.objects.XNumber;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        $d0 = r0.<org.apache.xpath.objects.XNumber: double m_val>;

        return $d0;
    }

    public boolean bool()
    {
        byte $b0;
        org.apache.xpath.objects.XNumber r0;
        double $d0, $d1;
        boolean $z0, $z1;

        r0 := @this: org.apache.xpath.objects.XNumber;

        $d0 = r0.<org.apache.xpath.objects.XNumber: double m_val>;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 != 0 goto label1;

        $d1 = r0.<org.apache.xpath.objects.XNumber: double m_val>;

        $b0 = $d1 cmpl 0.0;

        if $b0 != 0 goto label2;

     label1:
        $z1 = 0;

        goto label3;

     label2:
        $z1 = 1;

     label3:
        return $z1;
    }

    public java.lang.String str()
    {
        byte $b20;
        org.apache.xpath.objects.XNumber r0;
        java.lang.StringBuffer $r4, $r5, $r7, $r9, $r11, $r14, $r16, $r18, $r19, $r21, $r24, $r26, $r28, $r30, $r39, $r40, $r41;
        java.lang.String $r1, $r2, $r6, $r8, $r10, $r12, $r15, $r17, $r20, $r22, $r25, $r27, $r29, $r31, $r32, $r33, r34, r35, r36, r37, r38;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i3, $i4, $i5, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i19, i21, $i22, $i23, $i24, $i25, $i26, $i28, $i30, $i31, $i33;
        double $d0, $d1, d2, $d3;
        char $c2, $c6, $c8, $c15, $c18;

        r0 := @this: org.apache.xpath.objects.XNumber;

        $d0 = r0.<org.apache.xpath.objects.XNumber: double m_val>;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 == 0 goto label01;

        return "NaN";

     label01:
        $d1 = r0.<org.apache.xpath.objects.XNumber: double m_val>;

        $z1 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d1);

        if $z1 == 0 goto label03;

        $d3 = r0.<org.apache.xpath.objects.XNumber: double m_val>;

        $b20 = $d3 cmpl 0.0;

        $i22 = (int) $b20;

        if $i22 <= 0 goto label02;

        return "Infinity";

     label02:
        return "-Infinity";

     label03:
        d2 = r0.<org.apache.xpath.objects.XNumber: double m_val>;

        $r1 = staticinvoke <java.lang.Double: java.lang.String toString(double)>(d2);

        r34 = $r1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = $i0 - 2;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        $i23 = (int) $c2;

        if $i23 != 46 goto label05;

        $i17 = $i0 - 1;

        $c18 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i17);

        $i24 = (int) $c18;

        if $i24 != 48 goto label05;

        $i19 = $i0 - 2;

        $r33 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i19);

        $z2 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>("-0");

        if $z2 == 0 goto label04;

        return "0";

     label04:
        return $r33;

     label05:
        $i3 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(69);

        i21 = $i3;

        if $i3 >= 0 goto label07;

        $i14 = $i0 - 1;

        $c15 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i14);

        $i25 = (int) $c15;

        if $i25 != 48 goto label06;

        $i16 = $i0 - 1;

        $r32 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i16);

        return $r32;

     label06:
        return $r1;

     label07:
        $i4 = $i3 + 1;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i4);

        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        $c6 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        $i26 = (int) $c6;

        if $i26 != 45 goto label08;

        r35 = "-";

        r38 = "-";

        r37 = "-";

        r36 = "-";

        r34 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(1);

        $i28 = (int) -1;

        i21 = $i3 + $i28;

        goto label09;

     label08:
        r35 = "";

        r38 = "";

        r37 = "";

        r36 = "";

     label09:
        $i13 = i21 - 2;

        if $i5 < $i13 goto label11;

        $r39 = new java.lang.StringBuffer;

        specialinvoke $r39.<java.lang.StringBuffer: void <init>()>();

        $r24 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r37);

        $r25 = virtualinvoke r34.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        $r26 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        $r27 = virtualinvoke r34.<java.lang.String: java.lang.String substring(int,int)>(2, i21);

        $r28 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

        $i12 = $i5 - $i13;

        $r29 = staticinvoke <org.apache.xpath.objects.XNumber: java.lang.String zeros(int)>($i12);

        $r30 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r31;

     label10:
        $i30 = (int) -1;

        i21 = i21 + $i30;

     label11:
        $i7 = i21 - 1;

        $c8 = virtualinvoke r34.<java.lang.String: char charAt(int)>($i7);

        $i31 = (int) $c8;

        if $i31 == 48 goto label10;

        if $i5 <= 0 goto label12;

        $r40 = new java.lang.StringBuffer;

        specialinvoke $r40.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r38);

        $r15 = virtualinvoke r34.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $i10 = 2 + $i5;

        $r17 = virtualinvoke r34.<java.lang.String: java.lang.String substring(int,int)>(2, $i10);

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $i11 = 2 + $i5;

        $r20 = virtualinvoke r34.<java.lang.String: java.lang.String substring(int,int)>($i11, i21);

        $r21 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r22;

     label12:
        $r41 = new java.lang.StringBuffer;

        specialinvoke $r41.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r36);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0.");

        $i33 = (int) -1;

        $i9 = $i33 - $i5;

        $r6 = staticinvoke <org.apache.xpath.objects.XNumber: java.lang.String zeros(int)>($i9);

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke r34.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke r34.<java.lang.String: java.lang.String substring(int,int)>(2, i21);

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r12;
    }

    private static java.lang.String zeros(int)
    {
        int i0, i1;
        char[] r0;
        java.lang.String $r1;

        i0 := @parameter0: int;

        if i0 >= 1 goto label1;

        return "";

     label1:
        r0 = newarray (char)[i0];

        i1 = 0;

        goto label3;

     label2:
        r0[i1] = 48;

        i1 = i1 + 1;

     label3:
        if i1 < i0 goto label2;

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>(r0);

        return $r1;
    }

    public java.lang.Object object()
    {
        java.lang.Double $r3;
        org.apache.xpath.objects.XNumber r0;
        java.lang.Object $r1, $r2;
        double $d0;

        r0 := @this: org.apache.xpath.objects.XNumber;

        $r1 = r0.<org.apache.xpath.objects.XObject: java.lang.Object m_obj>;

        if null != $r1 goto label1;

        $r3 = new java.lang.Double;

        $d0 = r0.<org.apache.xpath.objects.XNumber: double m_val>;

        specialinvoke $r3.<java.lang.Double: void <init>(double)>($d0);

        r0.<org.apache.xpath.objects.XObject: java.lang.Object m_obj> = $r3;

     label1:
        $r2 = r0.<org.apache.xpath.objects.XObject: java.lang.Object m_obj>;

        return $r2;
    }

    public boolean equals(org.apache.xpath.objects.XObject)
    {
        org.apache.xml.utils.WrappedRuntimeException $r3;
        javax.xml.transform.TransformerException $r2;
        org.apache.xpath.objects.XNumber r1;
        byte $b1;
        int $i0;
        org.apache.xpath.objects.XObject r0;
        double $d0, $d1;
        boolean $z0, $z1, $z2, $z3, $z4;

        r1 := @this: org.apache.xpath.objects.XNumber;

        r0 := @parameter0: org.apache.xpath.objects.XObject;

        $i0 = virtualinvoke r0.<org.apache.xpath.objects.XObject: int getType()>();

     label1:
        if $i0 != 4 goto label2;

        $z2 = virtualinvoke r0.<org.apache.xpath.objects.XObject: boolean equals(org.apache.xpath.objects.XObject)>(r1);

        return $z2;

     label2:
        if $i0 != 1 goto label5;

        $z0 = virtualinvoke r0.<org.apache.xpath.objects.XObject: boolean bool()>();

        $z1 = virtualinvoke r1.<org.apache.xpath.objects.XNumber: boolean bool()>();

        if $z0 != $z1 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;

     label5:
        $d0 = r1.<org.apache.xpath.objects.XNumber: double m_val>;

        $d1 = virtualinvoke r0.<org.apache.xpath.objects.XObject: double num()>();

        $b1 = $d0 cmpl $d1;

        if $b1 != 0 goto label6;

        $z4 = 1;

        goto label7;

     label6:
        $z4 = 0;

     label7:
        return $z4;

     label8:
        $r2 := @caughtexception;

        $r3 = new org.apache.xml.utils.WrappedRuntimeException;

        specialinvoke $r3.<org.apache.xml.utils.WrappedRuntimeException: void <init>(java.lang.Exception)>($r2);

        throw $r3;

        catch javax.xml.transform.TransformerException from label1 to label8 with label8;
    }

    public boolean isStableNumber()
    {
        org.apache.xpath.objects.XNumber r0;

        r0 := @this: org.apache.xpath.objects.XNumber;

        return 1;
    }

    public void callVisitors(org.apache.xpath.ExpressionOwner, org.apache.xpath.XPathVisitor)
    {
        org.apache.xpath.XPathVisitor r0;
        org.apache.xpath.ExpressionOwner r1;
        org.apache.xpath.objects.XNumber r2;

        r2 := @this: org.apache.xpath.objects.XNumber;

        r1 := @parameter0: org.apache.xpath.ExpressionOwner;

        r0 := @parameter1: org.apache.xpath.XPathVisitor;

        virtualinvoke r0.<org.apache.xpath.XPathVisitor: boolean visitNumberLiteral(org.apache.xpath.ExpressionOwner,org.apache.xpath.objects.XNumber)>(r1, r2);

        return;
    }
}
