class org.waveprotocol.wave.client.editor.testing.MockTypingSink$Del extends org.waveprotocol.wave.client.editor.testing.MockTypingSink$Op
{
    org.waveprotocol.wave.model.document.util.Point start;
    int deleteSize;

    private void <init>(org.waveprotocol.wave.model.document.util.Point, int)
    {
        int i0;
        org.waveprotocol.wave.client.editor.testing.MockTypingSink$Del r0;
        org.waveprotocol.wave.model.document.util.Point r1;

        r0 := @this: org.waveprotocol.wave.client.editor.testing.MockTypingSink$Del;

        r1 := @parameter0: org.waveprotocol.wave.model.document.util.Point;

        i0 := @parameter1: int;

        specialinvoke r0.<org.waveprotocol.wave.client.editor.testing.MockTypingSink$Op: void <init>()>();

        r0.<org.waveprotocol.wave.client.editor.testing.MockTypingSink$Del: org.waveprotocol.wave.model.document.util.Point start> = r1;

        r0.<org.waveprotocol.wave.client.editor.testing.MockTypingSink$Del: int deleteSize> = i0;

        return;
    }

    void <init>(org.waveprotocol.wave.model.document.util.Point, int, org.waveprotocol.wave.client.editor.testing.MockTypingSink$1)
    {
        org.waveprotocol.wave.client.editor.testing.MockTypingSink$Del r0;
        int i0;
        org.waveprotocol.wave.model.document.util.Point r1;
        org.waveprotocol.wave.client.editor.testing.MockTypingSink$1 r2;

        r0 := @this: org.waveprotocol.wave.client.editor.testing.MockTypingSink$Del;

        r1 := @parameter0: org.waveprotocol.wave.model.document.util.Point;

        i0 := @parameter1: int;

        r2 := @parameter2: org.waveprotocol.wave.client.editor.testing.MockTypingSink$1;

        specialinvoke r0.<org.waveprotocol.wave.client.editor.testing.MockTypingSink$Del: void <init>(org.waveprotocol.wave.model.document.util.Point,int)>(r1, i0);

        return;
    }
}
