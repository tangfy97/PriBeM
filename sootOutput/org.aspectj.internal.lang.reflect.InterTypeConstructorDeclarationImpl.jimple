public class org.aspectj.internal.lang.reflect.InterTypeConstructorDeclarationImpl extends org.aspectj.internal.lang.reflect.InterTypeDeclarationImpl implements org.aspectj.lang.reflect.InterTypeConstructorDeclaration
{
    private java.lang.reflect.Method baseMethod;

    public void <init>(org.aspectj.lang.reflect.AjType, java.lang.String, int, java.lang.reflect.Method)
    {
        org.aspectj.internal.lang.reflect.InterTypeConstructorDeclarationImpl r0;
        org.aspectj.lang.reflect.AjType r1;
        int i0;
        java.lang.String r2;
        java.lang.reflect.Method r3;

        r0 := @this: org.aspectj.internal.lang.reflect.InterTypeConstructorDeclarationImpl;

        r1 := @parameter0: org.aspectj.lang.reflect.AjType;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.reflect.Method;

        specialinvoke r0.<org.aspectj.internal.lang.reflect.InterTypeDeclarationImpl: void <init>(org.aspectj.lang.reflect.AjType,java.lang.String,int)>(r1, r2, i0);

        r0.<org.aspectj.internal.lang.reflect.InterTypeConstructorDeclarationImpl: java.lang.reflect.Method baseMethod> = r3;

        return;
    }

    public org.aspectj.lang.reflect.AjType[] getParameterTypes()
    {
        org.aspectj.internal.lang.reflect.InterTypeConstructorDeclarationImpl r0;
        org.aspectj.lang.reflect.AjType $r5;
        java.lang.Class[] $r2;
        org.aspectj.lang.reflect.AjType[] r3;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.Class $r4;
        java.lang.reflect.Method $r1;

        r0 := @this: org.aspectj.internal.lang.reflect.InterTypeConstructorDeclarationImpl;

        $r1 = r0.<org.aspectj.internal.lang.reflect.InterTypeConstructorDeclarationImpl: java.lang.reflect.Method baseMethod>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i0 = lengthof $r2;

        $i1 = $i0 - 1;

        r3 = newarray (org.aspectj.lang.reflect.AjType)[$i1];

        i4 = 1;

     label1:
        $i2 = lengthof $r2;

        if i4 >= $i2 goto label2;

        $i3 = i4 - 1;

        $r4 = $r2[i4];

        $r5 = staticinvoke <org.aspectj.lang.reflect.AjTypeSystem: org.aspectj.lang.reflect.AjType getAjType(java.lang.Class)>($r4);

        r3[$i3] = $r5;

        i4 = i4 + 1;

        goto label1;

     label2:
        return r3;
    }

    public java.lang.reflect.Type[] getGenericParameterTypes()
    {
        org.aspectj.internal.lang.reflect.InterTypeConstructorDeclarationImpl r0;
        org.aspectj.lang.reflect.AjType $r8;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.reflect.Method $r1;
        boolean $z0;
        java.lang.reflect.Type $r4, $r5, $r6;
        java.lang.reflect.Type[] $r2, r3;
        java.lang.Class $r7;

        r0 := @this: org.aspectj.internal.lang.reflect.InterTypeConstructorDeclarationImpl;

        $r1 = r0.<org.aspectj.internal.lang.reflect.InterTypeConstructorDeclarationImpl: java.lang.reflect.Method baseMethod>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();

        $i0 = lengthof $r2;

        $i1 = $i0 - 1;

        r3 = newarray (org.aspectj.lang.reflect.AjType)[$i1];

        i5 = 1;

     label1:
        $i2 = lengthof $r2;

        if i5 >= $i2 goto label4;

        $r4 = $r2[i5];

        $z0 = $r4 instanceof java.lang.Class;

        if $z0 == 0 goto label2;

        $i4 = i5 - 1;

        $r6 = $r2[i5];

        $r7 = (java.lang.Class) $r6;

        $r8 = staticinvoke <org.aspectj.lang.reflect.AjTypeSystem: org.aspectj.lang.reflect.AjType getAjType(java.lang.Class)>($r7);

        r3[$i4] = $r8;

        goto label3;

     label2:
        $i3 = i5 - 1;

        $r5 = $r2[i5];

        r3[$i3] = $r5;

     label3:
        i5 = i5 + 1;

        goto label1;

     label4:
        return r3;
    }

    public org.aspectj.lang.reflect.AjType[] getExceptionTypes()
    {
        org.aspectj.internal.lang.reflect.InterTypeConstructorDeclarationImpl r0;
        org.aspectj.lang.reflect.AjType $r5;
        java.lang.Class[] $r2;
        org.aspectj.lang.reflect.AjType[] r3;
        int $i0, $i1, i2;
        java.lang.Class $r4;
        java.lang.reflect.Method $r1;

        r0 := @this: org.aspectj.internal.lang.reflect.InterTypeConstructorDeclarationImpl;

        $r1 = r0.<org.aspectj.internal.lang.reflect.InterTypeConstructorDeclarationImpl: java.lang.reflect.Method baseMethod>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()>();

        $i0 = lengthof $r2;

        r3 = newarray (org.aspectj.lang.reflect.AjType)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof $r2;

        if i2 >= $i1 goto label2;

        $r4 = $r2[i2];

        $r5 = staticinvoke <org.aspectj.lang.reflect.AjTypeSystem: org.aspectj.lang.reflect.AjType getAjType(java.lang.Class)>($r4);

        r3[i2] = $r5;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r3;
    }

    public java.lang.String toString()
    {
        org.aspectj.internal.lang.reflect.InterTypeConstructorDeclarationImpl r1;
        org.aspectj.lang.reflect.AjType $r6, $r8;
        java.lang.StringBuffer $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.String $r2, $r3, $r5, $r7, $r9;
        org.aspectj.lang.reflect.AjType[] $r4;

        r1 := @this: org.aspectj.internal.lang.reflect.InterTypeConstructorDeclarationImpl;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $i0 = virtualinvoke r1.<org.aspectj.internal.lang.reflect.InterTypeConstructorDeclarationImpl: int getModifiers()>();

        $r2 = staticinvoke <java.lang.reflect.Modifier: java.lang.String toString(int)>($i0);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r3 = r1.<org.aspectj.internal.lang.reflect.InterTypeConstructorDeclarationImpl: java.lang.String targetTypeName>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".new");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r4 = virtualinvoke r1.<org.aspectj.internal.lang.reflect.InterTypeConstructorDeclarationImpl: org.aspectj.lang.reflect.AjType[] getParameterTypes()>();

        i6 = 0;

     label1:
        $i1 = lengthof $r4;

        $i2 = $i1 - 1;

        if i6 >= $i2 goto label2;

        $r8 = $r4[i6];

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        i6 = i6 + 1;

        goto label1;

     label2:
        $i3 = lengthof $r4;

        if $i3 <= 0 goto label3;

        $i4 = lengthof $r4;

        $i5 = $i4 - 1;

        $r6 = $r4[$i5];

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

     label3:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r5 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }
}
