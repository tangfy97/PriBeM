class javax.xml.xpath.XPathFactoryFinder$1 extends javax.xml.xpath.XPathFactoryFinder$SingleIterator
{
    static java.lang.Class class$javax$xml$xpath$XPathFactoryFinder;
    private final javax.xml.xpath.XPathFactoryFinder this$0;

    void <init>(javax.xml.xpath.XPathFactoryFinder)
    {
        javax.xml.xpath.XPathFactoryFinder$1 r0;
        javax.xml.xpath.XPathFactoryFinder r1;

        r0 := @this: javax.xml.xpath.XPathFactoryFinder$1;

        r1 := @parameter0: javax.xml.xpath.XPathFactoryFinder;

        specialinvoke r0.<javax.xml.xpath.XPathFactoryFinder$SingleIterator: void <init>(javax.xml.xpath.XPathFactoryFinder$1)>(null);

        r0.<javax.xml.xpath.XPathFactoryFinder$1: javax.xml.xpath.XPathFactoryFinder this$0> = r1;

        return;
    }

    protected java.lang.Object value()
    {
        java.net.URL $r3;
        javax.xml.xpath.XPathFactoryFinder$1 r4;
        java.lang.Class $r0, $r5;
        java.lang.ClassLoader $r1;
        java.lang.String $r2;

        r4 := @this: javax.xml.xpath.XPathFactoryFinder$1;

        $r0 = <javax.xml.xpath.XPathFactoryFinder$1: java.lang.Class class$javax$xml$xpath$XPathFactoryFinder>;

        if $r0 != null goto label1;

        $r5 = staticinvoke <javax.xml.xpath.XPathFactoryFinder$1: java.lang.Class class$(java.lang.String)>("javax.xml.xpath.XPathFactoryFinder");

        <javax.xml.xpath.XPathFactoryFinder$1: java.lang.Class class$javax$xml$xpath$XPathFactoryFinder> = $r5;

        goto label2;

     label1:
        $r5 = <javax.xml.xpath.XPathFactoryFinder$1: java.lang.Class class$javax$xml$xpath$XPathFactoryFinder>;

     label2:
        $r1 = virtualinvoke $r5.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r2 = staticinvoke <javax.xml.xpath.XPathFactoryFinder: java.lang.String access$100()>();

        $r3 = staticinvoke <javax.xml.xpath.SecuritySupport: java.net.URL getResourceAsURL(java.lang.ClassLoader,java.lang.String)>($r1, $r2);

        return $r3;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
