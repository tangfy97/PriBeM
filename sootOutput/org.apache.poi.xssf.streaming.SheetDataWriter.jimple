public class org.apache.poi.xssf.streaming.SheetDataWriter extends java.lang.Object
{
    private final java.io.File _fd;
    private final java.io.Writer _out;
    private int _rownum;
    private int _numberOfFlushedRows;
    private int _lowestIndexOfFlushedRows;
    private int _numberOfCellsOfLastFlushedRow;
    private int _numberLastFlushedRow;
    private org.apache.poi.xssf.model.SharedStringsTable _sharedStringSource;

    public void <init>() throws java.io.IOException
    {
        org.apache.poi.xssf.streaming.SheetDataWriter r0;
        java.io.Writer $r3;
        int $i1;
        java.io.File $r1, $r2;

        r0 := @this: org.apache.poi.xssf.streaming.SheetDataWriter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = (int) -1;

        r0.<org.apache.poi.xssf.streaming.SheetDataWriter: int _numberLastFlushedRow> = $i1;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.File createTempFile()>();

        r0.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.File _fd> = $r1;

        $r2 = r0.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.File _fd>;

        $r3 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer createWriter(java.io.File)>($r2);

        r0.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out> = $r3;

        return;
    }

    public void <init>(org.apache.poi.xssf.model.SharedStringsTable) throws java.io.IOException
    {
        org.apache.poi.xssf.streaming.SheetDataWriter r0;
        org.apache.poi.xssf.model.SharedStringsTable r1;

        r0 := @this: org.apache.poi.xssf.streaming.SheetDataWriter;

        r1 := @parameter0: org.apache.poi.xssf.model.SharedStringsTable;

        specialinvoke r0.<org.apache.poi.xssf.streaming.SheetDataWriter: void <init>()>();

        r0.<org.apache.poi.xssf.streaming.SheetDataWriter: org.apache.poi.xssf.model.SharedStringsTable _sharedStringSource> = r1;

        return;
    }

    public java.io.File createTempFile() throws java.io.IOException
    {
        org.apache.poi.xssf.streaming.SheetDataWriter r1;
        java.io.File $r0;

        r1 := @this: org.apache.poi.xssf.streaming.SheetDataWriter;

        $r0 = staticinvoke <org.apache.poi.util.TempFile: java.io.File createTempFile(java.lang.String,java.lang.String)>("poi-sxssf-sheet", ".xml");

        return $r0;
    }

    public java.io.Writer createWriter(java.io.File) throws java.io.IOException
    {
        java.io.BufferedWriter $r0;
        org.apache.poi.xssf.streaming.SheetDataWriter r4;
        java.io.OutputStreamWriter $r1;
        java.io.FileOutputStream $r2;
        java.io.File r3;

        r4 := @this: org.apache.poi.xssf.streaming.SheetDataWriter;

        r3 := @parameter0: java.io.File;

        $r0 = new java.io.BufferedWriter;

        $r1 = new java.io.OutputStreamWriter;

        $r2 = new java.io.FileOutputStream;

        specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>(r3);

        specialinvoke $r1.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r2, "UTF-8");

        specialinvoke $r0.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r1);

        return $r0;
    }

    public void close() throws java.io.IOException
    {
        org.apache.poi.xssf.streaming.SheetDataWriter r0;
        java.io.Writer $r1, $r2;

        r0 := @this: org.apache.poi.xssf.streaming.SheetDataWriter;

        $r1 = r0.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        virtualinvoke $r1.<java.io.Writer: void flush()>();

        $r2 = r0.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        virtualinvoke $r2.<java.io.Writer: void close()>();

        return;
    }

    java.io.File getTempFile()
    {
        org.apache.poi.xssf.streaming.SheetDataWriter r0;
        java.io.File $r1;

        r0 := @this: org.apache.poi.xssf.streaming.SheetDataWriter;

        $r1 = r0.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.File _fd>;

        return $r1;
    }

    public java.io.InputStream getWorksheetXMLInputStream() throws java.io.IOException
    {
        org.apache.poi.xssf.streaming.SheetDataWriter r0;
        java.io.FileInputStream $r2;
        java.io.File $r1;

        r0 := @this: org.apache.poi.xssf.streaming.SheetDataWriter;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.File getTempFile()>();

        $r2 = new java.io.FileInputStream;

        specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

        return $r2;
    }

    public int getNumberOfFlushedRows()
    {
        org.apache.poi.xssf.streaming.SheetDataWriter r0;
        int $i0;

        r0 := @this: org.apache.poi.xssf.streaming.SheetDataWriter;

        $i0 = r0.<org.apache.poi.xssf.streaming.SheetDataWriter: int _numberOfFlushedRows>;

        return $i0;
    }

    public int getNumberOfCellsOfLastFlushedRow()
    {
        org.apache.poi.xssf.streaming.SheetDataWriter r0;
        int $i0;

        r0 := @this: org.apache.poi.xssf.streaming.SheetDataWriter;

        $i0 = r0.<org.apache.poi.xssf.streaming.SheetDataWriter: int _numberOfCellsOfLastFlushedRow>;

        return $i0;
    }

    public int getLowestIndexOfFlushedRows()
    {
        org.apache.poi.xssf.streaming.SheetDataWriter r0;
        int $i0;

        r0 := @this: org.apache.poi.xssf.streaming.SheetDataWriter;

        $i0 = r0.<org.apache.poi.xssf.streaming.SheetDataWriter: int _lowestIndexOfFlushedRows>;

        return $i0;
    }

    public int getLastFlushedRow()
    {
        org.apache.poi.xssf.streaming.SheetDataWriter r0;
        int $i0;

        r0 := @this: org.apache.poi.xssf.streaming.SheetDataWriter;

        $i0 = r0.<org.apache.poi.xssf.streaming.SheetDataWriter: int _numberLastFlushedRow>;

        return $i0;
    }

    protected void finalize() throws java.lang.Throwable
    {
        org.apache.poi.xssf.streaming.SheetDataWriter r0;
        java.io.File $r1;

        r0 := @this: org.apache.poi.xssf.streaming.SheetDataWriter;

        $r1 = r0.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.File _fd>;

        virtualinvoke $r1.<java.io.File: boolean delete()>();

        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }

    public void writeRow(int, org.apache.poi.xssf.streaming.SXSSFRow) throws java.io.IOException
    {
        short $s4;
        int $i0, i1, $i2, $i3, $i5, $i6, $i7, i8, $i9;
        org.apache.poi.ss.usermodel.Cell $r4;
        boolean $z0;
        java.util.Iterator $r2;
        org.apache.poi.xssf.streaming.SXSSFRow r1;
        org.apache.poi.xssf.streaming.SheetDataWriter r0;
        java.lang.Object $r3;

        r0 := @this: org.apache.poi.xssf.streaming.SheetDataWriter;

        i1 := @parameter0: int;

        r1 := @parameter1: org.apache.poi.xssf.streaming.SXSSFRow;

        $i0 = r0.<org.apache.poi.xssf.streaming.SheetDataWriter: int _numberOfFlushedRows>;

        if $i0 != 0 goto label1;

        r0.<org.apache.poi.xssf.streaming.SheetDataWriter: int _lowestIndexOfFlushedRows> = i1;

     label1:
        $i2 = r0.<org.apache.poi.xssf.streaming.SheetDataWriter: int _numberLastFlushedRow>;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(i1, $i2);

        r0.<org.apache.poi.xssf.streaming.SheetDataWriter: int _numberLastFlushedRow> = $i3;

        $s4 = virtualinvoke r1.<org.apache.poi.xssf.streaming.SXSSFRow: short getLastCellNum()>();

        $i9 = (int) $s4;

        r0.<org.apache.poi.xssf.streaming.SheetDataWriter: int _numberOfCellsOfLastFlushedRow> = $i9;

        $i5 = r0.<org.apache.poi.xssf.streaming.SheetDataWriter: int _numberOfFlushedRows>;

        $i6 = $i5 + 1;

        r0.<org.apache.poi.xssf.streaming.SheetDataWriter: int _numberOfFlushedRows> = $i6;

        virtualinvoke r0.<org.apache.poi.xssf.streaming.SheetDataWriter: void beginRow(int,org.apache.poi.xssf.streaming.SXSSFRow)>(i1, r1);

        $r2 = virtualinvoke r1.<org.apache.poi.xssf.streaming.SXSSFRow: java.util.Iterator allCellsIterator()>();

        i8 = 0;

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $i7 = i8;

        i8 = i8 + 1;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (org.apache.poi.ss.usermodel.Cell) $r3;

        virtualinvoke r0.<org.apache.poi.xssf.streaming.SheetDataWriter: void writeCell(int,org.apache.poi.ss.usermodel.Cell)>($i7, $r4);

        goto label2;

     label3:
        virtualinvoke r0.<org.apache.poi.xssf.streaming.SheetDataWriter: void endRow()>();

        return;
    }

    void beginRow(int, org.apache.poi.xssf.streaming.SXSSFRow) throws java.io.IOException
    {
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.poi.xssf.streaming.SXSSFRow r7;
        java.io.Writer $r2, $r10, $r17, $r24, $r30, $r35, $r36, $r38, $r46;
        float $f0;
        java.lang.StringBuilder $r3, $r4, $r5, $r11, $r13, $r14, $r18, $r20, $r21, $r25, $r26, $r27, $r31, $r32, $r33, $r39, $r40, $r41, $r47, $r48, $r49, $r50, $r51, $r52;
        short $s4;
        int i0, $i1, $i2, $i3, $i5;
        java.lang.Boolean $r8, $r12, $r19, $r44;
        java.lang.String $r6, $r15, $r22, $r28, $r34, $r42, $r43, $r45;
        org.apache.poi.xssf.streaming.SheetDataWriter r0;

        r0 := @this: org.apache.poi.xssf.streaming.SheetDataWriter;

        i0 := @parameter0: int;

        r7 := @parameter1: org.apache.poi.xssf.streaming.SXSSFRow;

        $r2 = r0.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<row r=\"");

        $i1 = i0 + 1;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>($r6);

        $z0 = virtualinvoke r7.<org.apache.poi.xssf.streaming.SXSSFRow: boolean hasCustomHeight()>();

        if $z0 == 0 goto label01;

        $r38 = r0.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" customHeight=\"true\"  ht=\"");

        $f0 = virtualinvoke r7.<org.apache.poi.xssf.streaming.SXSSFRow: float getHeightInPoints()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r38.<java.io.Writer: void write(java.lang.String)>($r42);

     label01:
        $z1 = virtualinvoke r7.<org.apache.poi.xssf.streaming.SXSSFRow: boolean getZeroHeight()>();

        if $z1 == 0 goto label02;

        $r36 = r0.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        virtualinvoke $r36.<java.io.Writer: void write(java.lang.String)>(" hidden=\"true\"");

     label02:
        $z2 = virtualinvoke r7.<org.apache.poi.xssf.streaming.SXSSFRow: boolean isFormatted()>();

        if $z2 == 0 goto label03;

        $r30 = r0.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" s=\"");

        $s4 = r7.<org.apache.poi.xssf.streaming.SXSSFRow: short _style>;

        $i5 = (int) $s4;

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r30.<java.io.Writer: void write(java.lang.String)>($r34);

        $r35 = r0.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        virtualinvoke $r35.<java.io.Writer: void write(java.lang.String)>(" customFormat=\"1\"");

     label03:
        $i2 = virtualinvoke r7.<org.apache.poi.xssf.streaming.SXSSFRow: int getOutlineLevel()>();

        if $i2 == 0 goto label04;

        $r24 = r0.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" outlineLevel=\"");

        $i3 = virtualinvoke r7.<org.apache.poi.xssf.streaming.SXSSFRow: int getOutlineLevel()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.io.Writer: void write(java.lang.String)>($r28);

     label04:
        $r8 = virtualinvoke r7.<org.apache.poi.xssf.streaming.SXSSFRow: java.lang.Boolean getHidden()>();

        if $r8 == null goto label07;

        $r17 = r0.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hidden=\"");

        $r19 = virtualinvoke r7.<org.apache.poi.xssf.streaming.SXSSFRow: java.lang.Boolean getHidden()>();

        $z4 = virtualinvoke $r19.<java.lang.Boolean: boolean booleanValue()>();

        if $z4 == 0 goto label05;

        $r43 = "1";

        goto label06;

     label05:
        $r43 = "0";

     label06:
        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<java.io.Writer: void write(java.lang.String)>($r22);

     label07:
        $r44 = virtualinvoke r7.<org.apache.poi.xssf.streaming.SXSSFRow: java.lang.Boolean getCollapsed()>();

        if $r44 == null goto label10;

        $r10 = r0.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" collapsed=\"");

        $r12 = virtualinvoke r7.<org.apache.poi.xssf.streaming.SXSSFRow: java.lang.Boolean getCollapsed()>();

        $z3 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>();

        if $z3 == 0 goto label08;

        $r45 = "1";

        goto label09;

     label08:
        $r45 = "0";

     label09:
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.io.Writer: void write(java.lang.String)>($r15);

     label10:
        $r46 = r0.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        virtualinvoke $r46.<java.io.Writer: void write(java.lang.String)>(">\n");

        r0.<org.apache.poi.xssf.streaming.SheetDataWriter: int _rownum> = i0;

        return;
    }

    void endRow() throws java.io.IOException
    {
        org.apache.poi.xssf.streaming.SheetDataWriter r0;
        java.io.Writer $r1;

        r0 := @this: org.apache.poi.xssf.streaming.SheetDataWriter;

        $r1 = r0.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>("</row>\n");

        return;
    }

    public void writeCell(int, org.apache.poi.ss.usermodel.Cell) throws java.io.IOException
    {
        byte $b4;
        java.lang.StringBuilder $r6, $r7, $r8, $r15, $r17, $r18, $r23, $r24, $r25, $r34, $r35, $r36, $r52, $r55, $r56, $r65, $r66, $r67, $r72, $r73, $r74, $r79, $r80, $r81, $r83, $r84, $r85, $r86;
        org.apache.poi.ss.usermodel.CellStyle $r10;
        org.apache.poi.ss.usermodel.FormulaError $r11;
        short $s2, $s7;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst $r49;
        org.apache.poi.xssf.usermodel.XSSFRichTextString $r82;
        java.lang.String $r3, $r9, $r16, $r19, $r26, $r30, $r37, $r41, $r43, $r47, $r54, $r57, $r60, $r68, $r75, $r76;
        java.lang.RuntimeException $r87;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum $r53;
        org.apache.poi.ss.usermodel.Cell r0;
        boolean $z0, $z1, $z2;
        java.io.Writer $r5, $r12, $r14, $r20, $r22, $r27, $r28, $r29, $r31, $r33, $r39, $r40, $r42, $r44, $r45, $r51, $r58, $r59, $r61, $r62, $r64, $r71, $r77;
        org.apache.poi.xssf.model.SharedStringsTable $r38, $r48;
        org.apache.poi.ss.util.CellReference $r78;
        int i0, $i1, $i3, $i5, $i6, $i8;
        double $d0, $d1;
        org.apache.poi.xssf.streaming.SheetDataWriter r2;

        r2 := @this: org.apache.poi.xssf.streaming.SheetDataWriter;

        i0 := @parameter0: int;

        r0 := @parameter1: org.apache.poi.ss.usermodel.Cell;

        if r0 != null goto label01;

        return;

     label01:
        $r78 = new org.apache.poi.ss.util.CellReference;

        $i1 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: int _rownum>;

        specialinvoke $r78.<org.apache.poi.ss.util.CellReference: void <init>(int,int)>($i1, i0);

        $r3 = virtualinvoke $r78.<org.apache.poi.ss.util.CellReference: java.lang.String formatAsString()>();

        $r5 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<c r=\"");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.Writer: void write(java.lang.String)>($r9);

        $r10 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Cell: org.apache.poi.ss.usermodel.CellStyle getCellStyle()>();

        $s2 = interfaceinvoke $r10.<org.apache.poi.ss.usermodel.CellStyle: short getIndex()>();

        if $s2 == 0 goto label02;

        $r71 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        $r80 = new java.lang.StringBuilder;

        specialinvoke $r80.<java.lang.StringBuilder: void <init>()>();

        $r72 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" s=\"");

        $s7 = interfaceinvoke $r10.<org.apache.poi.ss.usermodel.CellStyle: short getIndex()>();

        $i8 = (int) $s7;

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r71.<java.io.Writer: void write(java.lang.String)>($r75);

     label02:
        $i3 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Cell: int getCellType()>();

        tableswitch($i3)
        {
            case 0: goto label10;
            case 1: goto label07;
            case 2: goto label04;
            case 3: goto label03;
            case 4: goto label11;
            case 5: goto label14;
            default: goto label15;
        };

     label03:
        $r27 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        virtualinvoke $r27.<java.io.Writer: void write(java.lang.String)>(">");

        goto label16;

     label04:
        $r28 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        virtualinvoke $r28.<java.io.Writer: void write(java.lang.String)>(">");

        $r29 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        virtualinvoke $r29.<java.io.Writer: void write(java.lang.String)>("<f>");

        $r30 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Cell: java.lang.String getCellFormula()>();

        virtualinvoke r2.<org.apache.poi.xssf.streaming.SheetDataWriter: void outputQuotedString(java.lang.String)>($r30);

        $r31 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        virtualinvoke $r31.<java.io.Writer: void write(java.lang.String)>("</f>");

        $i5 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Cell: int getCachedFormulaResultType()>();

        lookupswitch($i5)
        {
            case 0: goto label05;
            default: goto label06;
        };

     label05:
        $d0 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Cell: double getNumericCellValue()>();

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z1 != 0 goto label06;

        $r33 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        $r81 = new java.lang.StringBuilder;

        specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<v>");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</v>");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r33.<java.io.Writer: void write(java.lang.String)>($r37);

     label06:
        goto label16;

     label07:
        $r38 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: org.apache.poi.xssf.model.SharedStringsTable _sharedStringSource>;

        if $r38 == null goto label08;

        $r82 = new org.apache.poi.xssf.usermodel.XSSFRichTextString;

        $r47 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Cell: java.lang.String getStringCellValue()>();

        specialinvoke $r82.<org.apache.poi.xssf.usermodel.XSSFRichTextString: void <init>(java.lang.String)>($r47);

        $r48 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: org.apache.poi.xssf.model.SharedStringsTable _sharedStringSource>;

        $r49 = virtualinvoke $r82.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst getCTRst()>();

        $i6 = virtualinvoke $r48.<org.apache.poi.xssf.model.SharedStringsTable: int addEntry(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst)>($r49);

        $r51 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        $r83 = new java.lang.StringBuilder;

        specialinvoke $r83.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" t=\"");

        $r53 = <org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType: org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum S>;

        $r54 = virtualinvoke $r53.<org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum: java.lang.String toString()>();

        $r55 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\">");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r51.<java.io.Writer: void write(java.lang.String)>($r57);

        $r58 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        virtualinvoke $r58.<java.io.Writer: void write(java.lang.String)>("<v>");

        $r59 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        $r60 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i6);

        virtualinvoke $r59.<java.io.Writer: void write(java.lang.String)>($r60);

        $r61 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        virtualinvoke $r61.<java.io.Writer: void write(java.lang.String)>("</v>");

        goto label16;

     label08:
        $r39 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        virtualinvoke $r39.<java.io.Writer: void write(java.lang.String)>(" t=\"inlineStr\">");

        $r40 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        virtualinvoke $r40.<java.io.Writer: void write(java.lang.String)>("<is><t");

        $r41 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Cell: java.lang.String getStringCellValue()>();

        $z2 = virtualinvoke r2.<org.apache.poi.xssf.streaming.SheetDataWriter: boolean hasLeadingTrailingSpaces(java.lang.String)>($r41);

        if $z2 == 0 goto label09;

        $r45 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        virtualinvoke $r45.<java.io.Writer: void write(java.lang.String)>(" xml:space=\"preserve\"");

     label09:
        $r42 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        virtualinvoke $r42.<java.io.Writer: void write(java.lang.String)>(">");

        $r43 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Cell: java.lang.String getStringCellValue()>();

        virtualinvoke r2.<org.apache.poi.xssf.streaming.SheetDataWriter: void outputQuotedString(java.lang.String)>($r43);

        $r44 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        virtualinvoke $r44.<java.io.Writer: void write(java.lang.String)>("</t></is>");

        goto label16;

     label10:
        $r62 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        virtualinvoke $r62.<java.io.Writer: void write(java.lang.String)>(" t=\"n\">");

        $r64 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        $r84 = new java.lang.StringBuilder;

        specialinvoke $r84.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<v>");

        $d1 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Cell: double getNumericCellValue()>();

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</v>");

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r64.<java.io.Writer: void write(java.lang.String)>($r68);

        goto label16;

     label11:
        $r20 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        virtualinvoke $r20.<java.io.Writer: void write(java.lang.String)>(" t=\"b\">");

        $r22 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        $r85 = new java.lang.StringBuilder;

        specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<v>");

        $z0 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Cell: boolean getBooleanCellValue()>();

        if $z0 == 0 goto label12;

        $r76 = "1";

        goto label13;

     label12:
        $r76 = "0";

     label13:
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r76);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</v>");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r22.<java.io.Writer: void write(java.lang.String)>($r26);

        goto label16;

     label14:
        $b4 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Cell: byte getErrorCellValue()>();

        $r11 = staticinvoke <org.apache.poi.ss.usermodel.FormulaError: org.apache.poi.ss.usermodel.FormulaError forInt(byte)>($b4);

        $r12 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        virtualinvoke $r12.<java.io.Writer: void write(java.lang.String)>(" t=\"e\">");

        $r14 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        $r86 = new java.lang.StringBuilder;

        specialinvoke $r86.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<v>");

        $r16 = virtualinvoke $r11.<org.apache.poi.ss.usermodel.FormulaError: java.lang.String getString()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</v>");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.Writer: void write(java.lang.String)>($r19);

        goto label16;

     label15:
        $r87 = new java.lang.RuntimeException;

        specialinvoke $r87.<java.lang.RuntimeException: void <init>(java.lang.String)>("Huh?");

        throw $r87;

     label16:
        $r77 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        virtualinvoke $r77.<java.io.Writer: void write(java.lang.String)>("</c>");

        return;
    }

    boolean hasLeadingTrailingSpaces(java.lang.String)
    {
        char $c1, $c4;
        int $i0, $i2, $i3;
        org.apache.poi.xssf.streaming.SheetDataWriter r1;
        java.lang.String r0;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.poi.xssf.streaming.SheetDataWriter;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label4;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label4;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        $i3 = $i2 - 1;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c1);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c4);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;

     label4:
        return 0;
    }

    protected void outputQuotedString(java.lang.String) throws java.io.IOException
    {
        boolean $z0, $z1;
        java.io.Writer $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r23, $r24;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, $i15, $i16, $i18, $i19, $i20, $i22, $i23, $i24;
        java.lang.String r0, $r22;
        char c3;
        org.apache.poi.xssf.streaming.SheetDataWriter r2;
        char[] $r1;

        r2 := @this: org.apache.poi.xssf.streaming.SheetDataWriter;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label01;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label02;

     label01:
        return;

     label02:
        $r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        i13 = 0;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        i14 = 0;

     label03:
        if i14 >= $i1 goto label24;

        c3 = $r1[i14];

        $i15 = (int) c3;

        lookupswitch($i15)
        {
            case 9: goto label14;
            case 10: goto label12;
            case 13: goto label12;
            case 34: goto label10;
            case 38: goto label08;
            case 60: goto label04;
            case 62: goto label06;
            case 160: goto label16;
            default: goto label18;
        };

     label04:
        if i14 <= i13 goto label05;

        $r9 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        $i6 = i14 - i13;

        virtualinvoke $r9.<java.io.Writer: void write(char[],int,int)>($r1, i13, $i6);

     label05:
        i13 = i14 + 1;

        $r8 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        virtualinvoke $r8.<java.io.Writer: void write(java.lang.String)>("&lt;");

        goto label23;

     label06:
        if i14 <= i13 goto label07;

        $r7 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        $i5 = i14 - i13;

        virtualinvoke $r7.<java.io.Writer: void write(char[],int,int)>($r1, i13, $i5);

     label07:
        i13 = i14 + 1;

        $r6 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        virtualinvoke $r6.<java.io.Writer: void write(java.lang.String)>("&gt;");

        goto label23;

     label08:
        if i14 <= i13 goto label09;

        $r11 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        $i7 = i14 - i13;

        virtualinvoke $r11.<java.io.Writer: void write(char[],int,int)>($r1, i13, $i7);

     label09:
        i13 = i14 + 1;

        $r10 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        virtualinvoke $r10.<java.io.Writer: void write(java.lang.String)>("&amp;");

        goto label23;

     label10:
        if i14 <= i13 goto label11;

        $r13 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        $i8 = i14 - i13;

        virtualinvoke $r13.<java.io.Writer: void write(char[],int,int)>($r1, i13, $i8);

     label11:
        i13 = i14 + 1;

        $r12 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        virtualinvoke $r12.<java.io.Writer: void write(java.lang.String)>("&quot;");

        goto label23;

     label12:
        if i14 <= i13 goto label13;

        $r15 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        $i9 = i14 - i13;

        virtualinvoke $r15.<java.io.Writer: void write(char[],int,int)>($r1, i13, $i9);

     label13:
        $r14 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        virtualinvoke $r14.<java.io.Writer: void write(java.lang.String)>("&#xa;");

        i13 = i14 + 1;

        goto label23;

     label14:
        if i14 <= i13 goto label15;

        $r17 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        $i10 = i14 - i13;

        virtualinvoke $r17.<java.io.Writer: void write(char[],int,int)>($r1, i13, $i10);

     label15:
        $r16 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        virtualinvoke $r16.<java.io.Writer: void write(java.lang.String)>("&#x9;");

        i13 = i14 + 1;

        goto label23;

     label16:
        if i14 <= i13 goto label17;

        $r5 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        $i4 = i14 - i13;

        virtualinvoke $r5.<java.io.Writer: void write(char[],int,int)>($r1, i13, $i4);

     label17:
        $r4 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        virtualinvoke $r4.<java.io.Writer: void write(java.lang.String)>("&#xa0;");

        i13 = i14 + 1;

        goto label23;

     label18:
        $i16 = (int) c3;

        if $i16 < 32 goto label19;

        $z0 = staticinvoke <java.lang.Character: boolean isLowSurrogate(char)>(c3);

        if $z0 != 0 goto label19;

        $z1 = staticinvoke <java.lang.Character: boolean isHighSurrogate(char)>(c3);

        if $z1 != 0 goto label19;

        $i18 = (int) 65534;

        $i19 = (int) c3;

        if $i18 > $i19 goto label21;

        $i20 = (int) c3;

        $i22 = (int) 65535;

        if $i20 > $i22 goto label21;

     label19:
        if i14 <= i13 goto label20;

        $r19 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        $i11 = i14 - i13;

        virtualinvoke $r19.<java.io.Writer: void write(char[],int,int)>($r1, i13, $i11);

     label20:
        $r18 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        virtualinvoke $r18.<java.io.Writer: void write(int)>(63);

        i13 = i14 + 1;

        goto label23;

     label21:
        $i23 = (int) c3;

        if $i23 <= 127 goto label23;

        if i14 <= i13 goto label22;

        $r24 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        $i12 = i14 - i13;

        virtualinvoke $r24.<java.io.Writer: void write(char[],int,int)>($r1, i13, $i12);

     label22:
        i13 = i14 + 1;

        $r20 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        virtualinvoke $r20.<java.io.Writer: void write(java.lang.String)>("&#");

        $r21 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        $i24 = (int) c3;

        $r22 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i24);

        virtualinvoke $r21.<java.io.Writer: void write(java.lang.String)>($r22);

        $r23 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        virtualinvoke $r23.<java.io.Writer: void write(java.lang.String)>(";");

     label23:
        i14 = i14 + 1;

        goto label03;

     label24:
        if i13 >= $i1 goto label25;

        $r3 = r2.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        $i2 = $i1 - i13;

        virtualinvoke $r3.<java.io.Writer: void write(char[],int,int)>($r1, i13, $i2);

     label25:
        return;
    }

    boolean dispose()
    {
        org.apache.poi.xssf.streaming.SheetDataWriter r0;
        java.io.Writer $r1;
        java.io.IOException $r3;
        java.io.File $r2;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.streaming.SheetDataWriter;

     label1:
        $r1 = r0.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.Writer _out>;

        virtualinvoke $r1.<java.io.Writer: void close()>();

        $r2 = r0.<org.apache.poi.xssf.streaming.SheetDataWriter: java.io.File _fd>;

        $z0 = virtualinvoke $r2.<java.io.File: boolean delete()>();

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
