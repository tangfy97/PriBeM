class org.waveprotocol.wave.client.editor.content.ContentNode$1 extends java.lang.Object implements org.waveprotocol.wave.client.scheduler.Scheduler$Task
{
    final org.waveprotocol.wave.client.editor.content.ContentNode this$0;

    void <init>(org.waveprotocol.wave.client.editor.content.ContentNode)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode r1;
        org.waveprotocol.wave.client.editor.content.ContentNode$1 r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentNode$1;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentNode;

        r0.<org.waveprotocol.wave.client.editor.content.ContentNode$1: org.waveprotocol.wave.client.editor.content.ContentNode this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void execute()
    {
        org.waveprotocol.wave.client.editor.content.ContentNode $r1, $r3, $r5;
        org.waveprotocol.wave.client.editor.content.ContentNode$1 r0;
        org.waveprotocol.wave.client.editor.content.ContentElement $r4;
        org.waveprotocol.wave.client.editor.extract.Repairer $r2;
        org.waveprotocol.wave.model.document.util.Point$El $r6;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentNode$1;

        $r1 = r0.<org.waveprotocol.wave.client.editor.content.ContentNode$1: org.waveprotocol.wave.client.editor.content.ContentNode this$0>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.client.editor.content.ContentNode: org.waveprotocol.wave.client.editor.extract.Repairer getRepairer()>();

        $r3 = r0.<org.waveprotocol.wave.client.editor.content.ContentNode$1: org.waveprotocol.wave.client.editor.content.ContentNode this$0>;

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.client.editor.content.ContentNode: org.waveprotocol.wave.client.editor.content.ContentElement getParentElement()>();

        $r5 = r0.<org.waveprotocol.wave.client.editor.content.ContentNode$1: org.waveprotocol.wave.client.editor.content.ContentNode this$0>;

        $r6 = staticinvoke <org.waveprotocol.wave.model.document.util.Point: org.waveprotocol.wave.model.document.util.Point$El inElement(java.lang.Object,java.lang.Object)>($r4, $r5);

        virtualinvoke $r2.<org.waveprotocol.wave.client.editor.extract.Repairer: void revert(org.waveprotocol.wave.model.document.util.Point$El,org.waveprotocol.wave.model.document.util.Point$El)>($r6, null);

        return;
    }
}
