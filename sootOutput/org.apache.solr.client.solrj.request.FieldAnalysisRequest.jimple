public class org.apache.solr.client.solrj.request.FieldAnalysisRequest extends org.apache.solr.client.solrj.SolrRequest
{
    private java.lang.String fieldValue;
    private java.lang.String query;
    private boolean showMatch;
    private java.util.List fieldNames;
    private java.util.List fieldTypes;

    public void <init>()
    {
        org.apache.solr.client.solrj.request.FieldAnalysisRequest r0;
        org.apache.solr.client.solrj.SolrRequest$METHOD $r1;

        r0 := @this: org.apache.solr.client.solrj.request.FieldAnalysisRequest;

        $r1 = <org.apache.solr.client.solrj.SolrRequest$METHOD: org.apache.solr.client.solrj.SolrRequest$METHOD GET>;

        specialinvoke r0.<org.apache.solr.client.solrj.SolrRequest: void <init>(org.apache.solr.client.solrj.SolrRequest$METHOD,java.lang.String)>($r1, "/analysis/field");

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.solr.client.solrj.request.FieldAnalysisRequest r0;
        java.lang.String r1;
        org.apache.solr.client.solrj.SolrRequest$METHOD $r2;

        r0 := @this: org.apache.solr.client.solrj.request.FieldAnalysisRequest;

        r1 := @parameter0: java.lang.String;

        $r2 = <org.apache.solr.client.solrj.SolrRequest$METHOD: org.apache.solr.client.solrj.SolrRequest$METHOD GET>;

        specialinvoke r0.<org.apache.solr.client.solrj.SolrRequest: void <init>(org.apache.solr.client.solrj.SolrRequest$METHOD,java.lang.String)>($r2, r1);

        return;
    }

    public java.util.Collection getContentStreams() throws java.io.IOException
    {
        org.apache.solr.client.solrj.request.FieldAnalysisRequest r0;

        r0 := @this: org.apache.solr.client.solrj.request.FieldAnalysisRequest;

        return null;
    }

    public org.apache.solr.common.params.SolrParams getParams()
    {
        java.lang.String[] $r1, $r9, $r12, $r13, $r15;
        org.apache.solr.client.solrj.request.FieldAnalysisRequest r2;
        java.lang.String $r3, $r4, $r8, $r11, $r14, $r16;
        boolean $z0;
        org.apache.solr.common.params.ModifiableSolrParams $r0;
        java.util.List $r5, $r6, $r7, $r10;

        r2 := @this: org.apache.solr.client.solrj.request.FieldAnalysisRequest;

        $r0 = new org.apache.solr.common.params.ModifiableSolrParams;

        specialinvoke $r0.<org.apache.solr.common.params.ModifiableSolrParams: void <init>()>();

        $r1 = newarray (java.lang.String)[1];

        $r3 = r2.<org.apache.solr.client.solrj.request.FieldAnalysisRequest: java.lang.String fieldValue>;

        $r1[0] = $r3;

        virtualinvoke $r0.<org.apache.solr.common.params.ModifiableSolrParams: org.apache.solr.common.params.ModifiableSolrParams set(java.lang.String,java.lang.String[])>("analysis.fieldvalue", $r1);

        $r4 = r2.<org.apache.solr.client.solrj.request.FieldAnalysisRequest: java.lang.String query>;

        if $r4 == null goto label1;

        $r13 = newarray (java.lang.String)[1];

        $r14 = r2.<org.apache.solr.client.solrj.request.FieldAnalysisRequest: java.lang.String query>;

        $r13[0] = $r14;

        virtualinvoke $r0.<org.apache.solr.common.params.ModifiableSolrParams: org.apache.solr.common.params.ModifiableSolrParams add(java.lang.String,java.lang.String[])>("analysis.query", $r13);

        $r15 = newarray (java.lang.String)[1];

        $z0 = r2.<org.apache.solr.client.solrj.request.FieldAnalysisRequest: boolean showMatch>;

        $r16 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z0);

        $r15[0] = $r16;

        virtualinvoke $r0.<org.apache.solr.common.params.ModifiableSolrParams: org.apache.solr.common.params.ModifiableSolrParams add(java.lang.String,java.lang.String[])>("analysis.showmatch", $r15);

     label1:
        $r5 = r2.<org.apache.solr.client.solrj.request.FieldAnalysisRequest: java.util.List fieldNames>;

        if $r5 == null goto label2;

        $r10 = r2.<org.apache.solr.client.solrj.request.FieldAnalysisRequest: java.util.List fieldNames>;

        $r11 = staticinvoke <org.apache.solr.client.solrj.request.FieldAnalysisRequest: java.lang.String listToCommaDelimitedString(java.util.List)>($r10);

        $r12 = newarray (java.lang.String)[1];

        $r12[0] = $r11;

        virtualinvoke $r0.<org.apache.solr.common.params.ModifiableSolrParams: org.apache.solr.common.params.ModifiableSolrParams add(java.lang.String,java.lang.String[])>("analysis.fieldname", $r12);

     label2:
        $r6 = r2.<org.apache.solr.client.solrj.request.FieldAnalysisRequest: java.util.List fieldTypes>;

        if $r6 == null goto label3;

        $r7 = r2.<org.apache.solr.client.solrj.request.FieldAnalysisRequest: java.util.List fieldTypes>;

        $r8 = staticinvoke <org.apache.solr.client.solrj.request.FieldAnalysisRequest: java.lang.String listToCommaDelimitedString(java.util.List)>($r7);

        $r9 = newarray (java.lang.String)[1];

        $r9[0] = $r8;

        virtualinvoke $r0.<org.apache.solr.common.params.ModifiableSolrParams: org.apache.solr.common.params.ModifiableSolrParams add(java.lang.String,java.lang.String[])>("analysis.fieldtype", $r9);

     label3:
        return $r0;
    }

    public org.apache.solr.client.solrj.response.FieldAnalysisResponse process(org.apache.solr.client.solrj.SolrServer) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException
    {
        java.lang.IllegalStateException $r6, $r8;
        org.apache.solr.client.solrj.SolrServer r4;
        long $l0, $l1, $l2;
        org.apache.solr.client.solrj.response.FieldAnalysisResponse $r3;
        org.apache.solr.common.util.NamedList $r5;
        org.apache.solr.client.solrj.request.FieldAnalysisRequest r0;
        java.util.List $r1, $r7;
        java.lang.String $r2;

        r0 := @this: org.apache.solr.client.solrj.request.FieldAnalysisRequest;

        r4 := @parameter0: org.apache.solr.client.solrj.SolrServer;

        $r1 = r0.<org.apache.solr.client.solrj.request.FieldAnalysisRequest: java.util.List fieldTypes>;

        if $r1 != null goto label1;

        $r7 = r0.<org.apache.solr.client.solrj.request.FieldAnalysisRequest: java.util.List fieldNames>;

        if $r7 != null goto label1;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("At least one field type or field name need to be specified");

        throw $r8;

     label1:
        $r2 = r0.<org.apache.solr.client.solrj.request.FieldAnalysisRequest: java.lang.String fieldValue>;

        if $r2 != null goto label2;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The field value must be set");

        throw $r6;

     label2:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r3 = new org.apache.solr.client.solrj.response.FieldAnalysisResponse;

        specialinvoke $r3.<org.apache.solr.client.solrj.response.FieldAnalysisResponse: void <init>()>();

        $r5 = virtualinvoke r4.<org.apache.solr.client.solrj.SolrServer: org.apache.solr.common.util.NamedList request(org.apache.solr.client.solrj.SolrRequest)>(r0);

        virtualinvoke $r3.<org.apache.solr.client.solrj.response.FieldAnalysisResponse: void setResponse(org.apache.solr.common.util.NamedList)>($r5);

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = $l1 - $l0;

        virtualinvoke $r3.<org.apache.solr.client.solrj.response.FieldAnalysisResponse: void setElapsedTime(long)>($l2);

        return $r3;
    }

    static java.lang.String listToCommaDelimitedString(java.util.List)
    {
        java.util.Iterator $r2;
        java.util.List r1;
        int $i0;
        java.lang.StringBuilder $r0;
        java.lang.Object $r4;
        java.lang.String $r3, r5;
        boolean $z0;

        r1 := @parameter0: java.util.List;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $i0 = virtualinvoke $r0.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        goto label1;

     label3:
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public org.apache.solr.client.solrj.request.FieldAnalysisRequest setFieldValue(java.lang.String)
    {
        org.apache.solr.client.solrj.request.FieldAnalysisRequest r0;
        java.lang.String r1;

        r0 := @this: org.apache.solr.client.solrj.request.FieldAnalysisRequest;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.solr.client.solrj.request.FieldAnalysisRequest: java.lang.String fieldValue> = r1;

        return r0;
    }

    public java.lang.String getFieldValue()
    {
        org.apache.solr.client.solrj.request.FieldAnalysisRequest r0;
        java.lang.String $r1;

        r0 := @this: org.apache.solr.client.solrj.request.FieldAnalysisRequest;

        $r1 = r0.<org.apache.solr.client.solrj.request.FieldAnalysisRequest: java.lang.String fieldValue>;

        return $r1;
    }

    public org.apache.solr.client.solrj.request.FieldAnalysisRequest setQuery(java.lang.String)
    {
        org.apache.solr.client.solrj.request.FieldAnalysisRequest r0;
        java.lang.String r1;

        r0 := @this: org.apache.solr.client.solrj.request.FieldAnalysisRequest;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.solr.client.solrj.request.FieldAnalysisRequest: java.lang.String query> = r1;

        return r0;
    }

    public java.lang.String getQuery()
    {
        org.apache.solr.client.solrj.request.FieldAnalysisRequest r0;
        java.lang.String $r1;

        r0 := @this: org.apache.solr.client.solrj.request.FieldAnalysisRequest;

        $r1 = r0.<org.apache.solr.client.solrj.request.FieldAnalysisRequest: java.lang.String query>;

        return $r1;
    }

    public org.apache.solr.client.solrj.request.FieldAnalysisRequest setShowMatch(boolean)
    {
        org.apache.solr.client.solrj.request.FieldAnalysisRequest r0;
        boolean z0;

        r0 := @this: org.apache.solr.client.solrj.request.FieldAnalysisRequest;

        z0 := @parameter0: boolean;

        r0.<org.apache.solr.client.solrj.request.FieldAnalysisRequest: boolean showMatch> = z0;

        return r0;
    }

    public boolean isShowMatch()
    {
        org.apache.solr.client.solrj.request.FieldAnalysisRequest r0;
        boolean $z0;

        r0 := @this: org.apache.solr.client.solrj.request.FieldAnalysisRequest;

        $z0 = r0.<org.apache.solr.client.solrj.request.FieldAnalysisRequest: boolean showMatch>;

        return $z0;
    }

    public org.apache.solr.client.solrj.request.FieldAnalysisRequest addFieldName(java.lang.String)
    {
        org.apache.solr.client.solrj.request.FieldAnalysisRequest r0;
        java.util.List $r1, $r3;
        java.lang.String r2;
        java.util.LinkedList $r4;

        r0 := @this: org.apache.solr.client.solrj.request.FieldAnalysisRequest;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.solr.client.solrj.request.FieldAnalysisRequest: java.util.List fieldNames>;

        if $r1 != null goto label1;

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.solr.client.solrj.request.FieldAnalysisRequest: java.util.List fieldNames> = $r4;

     label1:
        $r3 = r0.<org.apache.solr.client.solrj.request.FieldAnalysisRequest: java.util.List fieldNames>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        return r0;
    }

    public org.apache.solr.client.solrj.request.FieldAnalysisRequest setFieldNames(java.util.List)
    {
        org.apache.solr.client.solrj.request.FieldAnalysisRequest r0;
        java.util.List r1;

        r0 := @this: org.apache.solr.client.solrj.request.FieldAnalysisRequest;

        r1 := @parameter0: java.util.List;

        r0.<org.apache.solr.client.solrj.request.FieldAnalysisRequest: java.util.List fieldNames> = r1;

        return r0;
    }

    public java.util.List getFieldNames()
    {
        org.apache.solr.client.solrj.request.FieldAnalysisRequest r0;
        java.util.List $r1;

        r0 := @this: org.apache.solr.client.solrj.request.FieldAnalysisRequest;

        $r1 = r0.<org.apache.solr.client.solrj.request.FieldAnalysisRequest: java.util.List fieldNames>;

        return $r1;
    }

    public org.apache.solr.client.solrj.request.FieldAnalysisRequest addFieldType(java.lang.String)
    {
        org.apache.solr.client.solrj.request.FieldAnalysisRequest r0;
        java.util.List $r1, $r3;
        java.lang.String r2;
        java.util.LinkedList $r4;

        r0 := @this: org.apache.solr.client.solrj.request.FieldAnalysisRequest;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.solr.client.solrj.request.FieldAnalysisRequest: java.util.List fieldTypes>;

        if $r1 != null goto label1;

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.solr.client.solrj.request.FieldAnalysisRequest: java.util.List fieldTypes> = $r4;

     label1:
        $r3 = r0.<org.apache.solr.client.solrj.request.FieldAnalysisRequest: java.util.List fieldTypes>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        return r0;
    }

    public org.apache.solr.client.solrj.request.FieldAnalysisRequest setFieldTypes(java.util.List)
    {
        org.apache.solr.client.solrj.request.FieldAnalysisRequest r0;
        java.util.List r1;

        r0 := @this: org.apache.solr.client.solrj.request.FieldAnalysisRequest;

        r1 := @parameter0: java.util.List;

        r0.<org.apache.solr.client.solrj.request.FieldAnalysisRequest: java.util.List fieldTypes> = r1;

        return r0;
    }

    public java.util.List getFieldTypes()
    {
        org.apache.solr.client.solrj.request.FieldAnalysisRequest r0;
        java.util.List $r1;

        r0 := @this: org.apache.solr.client.solrj.request.FieldAnalysisRequest;

        $r1 = r0.<org.apache.solr.client.solrj.request.FieldAnalysisRequest: java.util.List fieldTypes>;

        return $r1;
    }

    public volatile org.apache.solr.client.solrj.SolrResponse process(org.apache.solr.client.solrj.SolrServer) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException
    {
        org.apache.solr.client.solrj.request.FieldAnalysisRequest r0;
        org.apache.solr.client.solrj.SolrServer r1;
        org.apache.solr.client.solrj.response.FieldAnalysisResponse $r2;

        r0 := @this: org.apache.solr.client.solrj.request.FieldAnalysisRequest;

        r1 := @parameter0: org.apache.solr.client.solrj.SolrServer;

        $r2 = virtualinvoke r0.<org.apache.solr.client.solrj.request.FieldAnalysisRequest: org.apache.solr.client.solrj.response.FieldAnalysisResponse process(org.apache.solr.client.solrj.SolrServer)>(r1);

        return $r2;
    }
}
