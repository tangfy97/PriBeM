abstract class org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultRelationalExpr extends org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultTruthExpr
{

    public void <init>(org.xmlpull.v1.builder.xpath.jaxen.expr.Expr, org.xmlpull.v1.builder.xpath.jaxen.expr.Expr)
    {
        org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultRelationalExpr r0;
        org.xmlpull.v1.builder.xpath.jaxen.expr.Expr r1, r2;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultRelationalExpr;

        r1 := @parameter0: org.xmlpull.v1.builder.xpath.jaxen.expr.Expr;

        r2 := @parameter1: org.xmlpull.v1.builder.xpath.jaxen.expr.Expr;

        specialinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultTruthExpr: void <init>(org.xmlpull.v1.builder.xpath.jaxen.expr.Expr,org.xmlpull.v1.builder.xpath.jaxen.expr.Expr)>(r1, r2);

        return;
    }

    public java.lang.String toString()
    {
        org.xmlpull.v1.builder.xpath.jaxen.expr.Expr $r3, $r6;
        org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultRelationalExpr r2;
        java.lang.StringBuffer $r0, $r1, $r4, $r5, $r7, $r8;
        java.lang.String $r9;

        r2 := @this: org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultRelationalExpr;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[(DefaultRelationalExpr): ");

        $r3 = virtualinvoke r2.<org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultBinaryExpr: org.xmlpull.v1.builder.xpath.jaxen.expr.Expr getLHS()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r6 = virtualinvoke r2.<org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultBinaryExpr: org.xmlpull.v1.builder.xpath.jaxen.expr.Expr getRHS()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }

    public java.lang.Object evaluate(org.xmlpull.v1.builder.xpath.jaxen.Context) throws org.xmlpull.v1.builder.xpath.jaxen.JaxenException
    {
        org.xmlpull.v1.builder.xpath.jaxen.expr.Expr $r1, $r4;
        java.lang.Boolean $r16;
        boolean $z0, $z1, $z2, $z3;
        org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultRelationalExpr r0;
        org.xmlpull.v1.builder.xpath.jaxen.Context r2;
        java.util.List $r7, $r8, $r10, $r11, $r13, $r14;
        java.lang.Object $r3, $r5, $r9, $r12, $r15;
        org.xmlpull.v1.builder.xpath.jaxen.Navigator $r6;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultRelationalExpr;

        r2 := @parameter0: org.xmlpull.v1.builder.xpath.jaxen.Context;

        $r1 = virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultBinaryExpr: org.xmlpull.v1.builder.xpath.jaxen.expr.Expr getLHS()>();

        $r3 = interfaceinvoke $r1.<org.xmlpull.v1.builder.xpath.jaxen.expr.Expr: java.lang.Object evaluate(org.xmlpull.v1.builder.xpath.jaxen.Context)>(r2);

        $r4 = virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultBinaryExpr: org.xmlpull.v1.builder.xpath.jaxen.expr.Expr getRHS()>();

        $r5 = interfaceinvoke $r4.<org.xmlpull.v1.builder.xpath.jaxen.expr.Expr: java.lang.Object evaluate(org.xmlpull.v1.builder.xpath.jaxen.Context)>(r2);

        $r6 = virtualinvoke r2.<org.xmlpull.v1.builder.xpath.jaxen.Context: org.xmlpull.v1.builder.xpath.jaxen.Navigator getNavigator()>();

        $z0 = virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultTruthExpr: boolean bothAreSets(java.lang.Object,java.lang.Object)>($r3, $r5);

        if $z0 == 0 goto label1;

        $r14 = (java.util.List) $r3;

        $r13 = (java.util.List) $r5;

        $r15 = specialinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultRelationalExpr: java.lang.Object evaluateSetSet(java.util.List,java.util.List,org.xmlpull.v1.builder.xpath.jaxen.Navigator)>($r14, $r13, $r6);

        return $r15;

     label1:
        $z1 = virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultTruthExpr: boolean eitherIsSet(java.lang.Object,java.lang.Object)>($r3, $r5);

        if $z1 == 0 goto label3;

        $z3 = virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultTruthExpr: boolean isSet(java.lang.Object)>($r3);

        if $z3 == 0 goto label2;

        $r10 = (java.util.List) $r3;

        $r11 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultExpr: java.util.List convertToList(java.lang.Object)>($r5);

        $r12 = specialinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultRelationalExpr: java.lang.Object evaluateSetSet(java.util.List,java.util.List,org.xmlpull.v1.builder.xpath.jaxen.Navigator)>($r10, $r11, $r6);

        return $r12;

     label2:
        $r7 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultExpr: java.util.List convertToList(java.lang.Object)>($r3);

        $r8 = (java.util.List) $r5;

        $r9 = specialinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultRelationalExpr: java.lang.Object evaluateSetSet(java.util.List,java.util.List,org.xmlpull.v1.builder.xpath.jaxen.Navigator)>($r7, $r8, $r6);

        return $r9;

     label3:
        $z2 = specialinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultRelationalExpr: boolean evaluateObjectObject(java.lang.Object,java.lang.Object,org.xmlpull.v1.builder.xpath.jaxen.Navigator)>($r3, $r5, $r6);

        if $z2 == 0 goto label4;

        $r16 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label5;

     label4:
        $r16 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label5:
        return $r16;
    }

    private java.lang.Object evaluateSetSet(java.util.List, java.util.List, org.xmlpull.v1.builder.xpath.jaxen.Navigator)
    {
        java.lang.Boolean $r2, $r5, $r10;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Iterator $r4, $r7;
        org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultRelationalExpr r0;
        java.util.List r1, r3;
        java.lang.Object $r6, $r8;
        org.xmlpull.v1.builder.xpath.jaxen.Navigator r9;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultRelationalExpr;

        r1 := @parameter0: java.util.List;

        r3 := @parameter1: java.util.List;

        r9 := @parameter2: org.xmlpull.v1.builder.xpath.jaxen.Navigator;

        $z0 = virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultTruthExpr: boolean setIsEmpty(java.util.List)>(r1);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultTruthExpr: boolean setIsEmpty(java.util.List)>(r3);

        if $z1 == 0 goto label2;

     label1:
        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r2;

     label2:
        $r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r7 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z3 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label6;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $z4 = specialinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultRelationalExpr: boolean evaluateObjectObject(java.lang.Object,java.lang.Object,org.xmlpull.v1.builder.xpath.jaxen.Navigator)>($r6, $r8, r9);

        if $z4 == 0 goto label5;

        $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r10;

     label5:
        goto label4;

     label6:
        goto label3;

     label7:
        $r5 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r5;
    }

    private boolean evaluateObjectObject(java.lang.Object, java.lang.Object, org.xmlpull.v1.builder.xpath.jaxen.Navigator)
    {
        java.lang.Double $r3, $r4;
        org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultRelationalExpr r5;
        java.lang.Object r0, r1;
        org.xmlpull.v1.builder.xpath.jaxen.Navigator r2;
        boolean $z0, $z1, $z2;

        r5 := @this: org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultRelationalExpr;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: org.xmlpull.v1.builder.xpath.jaxen.Navigator;

        if r0 == null goto label1;

        if r1 != null goto label2;

     label1:
        return 0;

     label2:
        $r3 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.function.NumberFunction: java.lang.Double evaluate(java.lang.Object,org.xmlpull.v1.builder.xpath.jaxen.Navigator)>(r0, r2);

        $r4 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.function.NumberFunction: java.lang.Double evaluate(java.lang.Object,org.xmlpull.v1.builder.xpath.jaxen.Navigator)>(r1, r2);

        $z0 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.function.NumberFunction: boolean isNaN(java.lang.Double)>($r3);

        if $z0 != 0 goto label3;

        $z1 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.function.NumberFunction: boolean isNaN(java.lang.Double)>($r4);

        if $z1 == 0 goto label4;

     label3:
        return 0;

     label4:
        $z2 = virtualinvoke r5.<org.xmlpull.v1.builder.xpath.jaxen.expr.DefaultRelationalExpr: boolean evaluateDoubleDouble(java.lang.Double,java.lang.Double)>($r3, $r4);

        return $z2;
    }

    protected abstract boolean evaluateDoubleDouble(java.lang.Double, java.lang.Double);
}
