public class org.apache.log4j.lf5.viewer.LogTableColumn extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    public static final org.apache.log4j.lf5.viewer.LogTableColumn DATE;
    public static final org.apache.log4j.lf5.viewer.LogTableColumn THREAD;
    public static final org.apache.log4j.lf5.viewer.LogTableColumn MESSAGE_NUM;
    public static final org.apache.log4j.lf5.viewer.LogTableColumn LEVEL;
    public static final org.apache.log4j.lf5.viewer.LogTableColumn NDC;
    public static final org.apache.log4j.lf5.viewer.LogTableColumn CATEGORY;
    public static final org.apache.log4j.lf5.viewer.LogTableColumn MESSAGE;
    public static final org.apache.log4j.lf5.viewer.LogTableColumn LOCATION;
    public static final org.apache.log4j.lf5.viewer.LogTableColumn THROWN;
    protected java.lang.String _label;
    private static org.apache.log4j.lf5.viewer.LogTableColumn[] _log4JColumns;
    private static java.util.Map _logTableColumnMap;

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.apache.log4j.lf5.viewer.LogTableColumn r0;

        r0 := @this: org.apache.log4j.lf5.viewer.LogTableColumn;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.log4j.lf5.viewer.LogTableColumn: java.lang.String _label> = r1;

        return;
    }

    public java.lang.String getLabel()
    {
        java.lang.String $r1;
        org.apache.log4j.lf5.viewer.LogTableColumn r0;

        r0 := @this: org.apache.log4j.lf5.viewer.LogTableColumn;

        $r1 = r0.<org.apache.log4j.lf5.viewer.LogTableColumn: java.lang.String _label>;

        return $r1;
    }

    public static org.apache.log4j.lf5.viewer.LogTableColumn valueOf(java.lang.String) throws org.apache.log4j.lf5.viewer.LogTableColumnFormatException
    {
        org.apache.log4j.lf5.viewer.LogTableColumn r12;
        org.apache.log4j.lf5.viewer.LogTableColumnFormatException $r6;
        java.lang.StringBuffer $r0, $r1, $r2, $r3, $r4;
        java.util.Map $r9;
        java.lang.Object $r10;
        java.lang.String $r5, $r7, $r8, r11;

        r11 := @parameter0: java.lang.String;

        r12 = null;

        if r11 == null goto label1;

        $r8 = virtualinvoke r11.<java.lang.String: java.lang.String trim()>();

        r11 = $r8;

        $r9 = <org.apache.log4j.lf5.viewer.LogTableColumn: java.util.Map _logTableColumnMap>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        r12 = (org.apache.log4j.lf5.viewer.LogTableColumn) $r10;

     label1:
        if r12 != null goto label2;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error while trying to parse (");

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r11);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") into");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" a LogTableColumn.");

        $r6 = new org.apache.log4j.lf5.viewer.LogTableColumnFormatException;

        $r7 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r6.<org.apache.log4j.lf5.viewer.LogTableColumnFormatException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label2:
        return r12;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.String $r2, $r4;
        boolean $z0, z1;
        org.apache.log4j.lf5.viewer.LogTableColumn r1, $r3;

        r1 := @this: org.apache.log4j.lf5.viewer.LogTableColumn;

        r0 := @parameter0: java.lang.Object;

        z1 = 0;

        $z0 = r0 instanceof org.apache.log4j.lf5.viewer.LogTableColumn;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.LogTableColumn: java.lang.String getLabel()>();

        $r3 = (org.apache.log4j.lf5.viewer.LogTableColumn) r0;

        $r4 = virtualinvoke $r3.<org.apache.log4j.lf5.viewer.LogTableColumn: java.lang.String getLabel()>();

        if $r2 != $r4 goto label1;

        z1 = 1;

     label1:
        return z1;
    }

    public int hashCode()
    {
        int $i0;
        java.lang.String $r1;
        org.apache.log4j.lf5.viewer.LogTableColumn r0;

        r0 := @this: org.apache.log4j.lf5.viewer.LogTableColumn;

        $r1 = r0.<org.apache.log4j.lf5.viewer.LogTableColumn: java.lang.String _label>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        org.apache.log4j.lf5.viewer.LogTableColumn r0;

        r0 := @this: org.apache.log4j.lf5.viewer.LogTableColumn;

        $r1 = r0.<org.apache.log4j.lf5.viewer.LogTableColumn: java.lang.String _label>;

        return $r1;
    }

    public static java.util.List getLogTableColumns()
    {
        java.util.List $r1;
        org.apache.log4j.lf5.viewer.LogTableColumn[] $r0;

        $r0 = <org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn[] _log4JColumns>;

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        return $r1;
    }

    public static org.apache.log4j.lf5.viewer.LogTableColumn[] getLogTableColumnArray()
    {
        org.apache.log4j.lf5.viewer.LogTableColumn[] $r0;

        $r0 = <org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn[] _log4JColumns>;

        return $r0;
    }

    static void <clinit>()
    {
        java.util.HashMap $r19;
        java.util.Map $r23;
        int $i0, i1;
        java.lang.String $r24;
        org.apache.log4j.lf5.viewer.LogTableColumn $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r22, $r26;
        org.apache.log4j.lf5.viewer.LogTableColumn[] $r9, $r20, $r21, $r25;

        <org.apache.log4j.lf5.viewer.LogTableColumn: long serialVersionUID> = -4275827753626456547L;

        $r0 = new org.apache.log4j.lf5.viewer.LogTableColumn;

        specialinvoke $r0.<org.apache.log4j.lf5.viewer.LogTableColumn: void <init>(java.lang.String)>("Date");

        <org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn DATE> = $r0;

        $r1 = new org.apache.log4j.lf5.viewer.LogTableColumn;

        specialinvoke $r1.<org.apache.log4j.lf5.viewer.LogTableColumn: void <init>(java.lang.String)>("Thread");

        <org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn THREAD> = $r1;

        $r2 = new org.apache.log4j.lf5.viewer.LogTableColumn;

        specialinvoke $r2.<org.apache.log4j.lf5.viewer.LogTableColumn: void <init>(java.lang.String)>("Message #");

        <org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn MESSAGE_NUM> = $r2;

        $r3 = new org.apache.log4j.lf5.viewer.LogTableColumn;

        specialinvoke $r3.<org.apache.log4j.lf5.viewer.LogTableColumn: void <init>(java.lang.String)>("Level");

        <org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn LEVEL> = $r3;

        $r4 = new org.apache.log4j.lf5.viewer.LogTableColumn;

        specialinvoke $r4.<org.apache.log4j.lf5.viewer.LogTableColumn: void <init>(java.lang.String)>("NDC");

        <org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn NDC> = $r4;

        $r5 = new org.apache.log4j.lf5.viewer.LogTableColumn;

        specialinvoke $r5.<org.apache.log4j.lf5.viewer.LogTableColumn: void <init>(java.lang.String)>("Category");

        <org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn CATEGORY> = $r5;

        $r6 = new org.apache.log4j.lf5.viewer.LogTableColumn;

        specialinvoke $r6.<org.apache.log4j.lf5.viewer.LogTableColumn: void <init>(java.lang.String)>("Message");

        <org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn MESSAGE> = $r6;

        $r7 = new org.apache.log4j.lf5.viewer.LogTableColumn;

        specialinvoke $r7.<org.apache.log4j.lf5.viewer.LogTableColumn: void <init>(java.lang.String)>("Location");

        <org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn LOCATION> = $r7;

        $r8 = new org.apache.log4j.lf5.viewer.LogTableColumn;

        specialinvoke $r8.<org.apache.log4j.lf5.viewer.LogTableColumn: void <init>(java.lang.String)>("Thrown");

        <org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn THROWN> = $r8;

        $r9 = newarray (org.apache.log4j.lf5.viewer.LogTableColumn)[9];

        $r10 = <org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn DATE>;

        $r9[0] = $r10;

        $r11 = <org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn THREAD>;

        $r9[1] = $r11;

        $r12 = <org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn MESSAGE_NUM>;

        $r9[2] = $r12;

        $r13 = <org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn LEVEL>;

        $r9[3] = $r13;

        $r14 = <org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn NDC>;

        $r9[4] = $r14;

        $r15 = <org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn CATEGORY>;

        $r9[5] = $r15;

        $r16 = <org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn MESSAGE>;

        $r9[6] = $r16;

        $r17 = <org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn LOCATION>;

        $r9[7] = $r17;

        $r18 = <org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn THROWN>;

        $r9[8] = $r18;

        <org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn[] _log4JColumns> = $r9;

        $r19 = new java.util.HashMap;

        specialinvoke $r19.<java.util.HashMap: void <init>()>();

        <org.apache.log4j.lf5.viewer.LogTableColumn: java.util.Map _logTableColumnMap> = $r19;

        i1 = 0;

     label1:
        $r20 = <org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn[] _log4JColumns>;

        $i0 = lengthof $r20;

        if i1 >= $i0 goto label2;

        $r23 = <org.apache.log4j.lf5.viewer.LogTableColumn: java.util.Map _logTableColumnMap>;

        $r21 = <org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn[] _log4JColumns>;

        $r22 = $r21[i1];

        $r24 = virtualinvoke $r22.<org.apache.log4j.lf5.viewer.LogTableColumn: java.lang.String getLabel()>();

        $r25 = <org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn[] _log4JColumns>;

        $r26 = $r25[i1];

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, $r26);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
}
