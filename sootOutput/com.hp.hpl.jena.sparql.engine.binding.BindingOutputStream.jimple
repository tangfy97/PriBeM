public class com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream extends java.lang.Object implements org.apache.jena.atlas.lib.Sink
{
    private final org.apache.jena.atlas.io.AWriter bw;
    private com.hp.hpl.jena.sparql.engine.binding.Binding lastBinding;
    private java.util.List vars;
    private org.apache.jena.riot.system.PrefixMap pmap;
    private org.apache.jena.riot.out.NodeFormatter nodeFormatter;
    private boolean needOutputPMap;
    private boolean needOutputVars;

    public void <init>(java.io.OutputStream)
    {
        java.io.OutputStream r1;
        com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream;

        r1 := @parameter0: java.io.OutputStream;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: void <init>(java.io.OutputStream,java.util.List,org.apache.jena.riot.system.PrefixMap)>(r1, null, null);

        return;
    }

    public void <init>(java.io.OutputStream, org.apache.jena.riot.system.PrefixMap)
    {
        java.io.OutputStream r1;
        com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream r0;
        org.apache.jena.riot.system.PrefixMap r2;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: org.apache.jena.riot.system.PrefixMap;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: void <init>(java.io.OutputStream,java.util.List,org.apache.jena.riot.system.PrefixMap)>(r1, null, r2);

        return;
    }

    public void <init>(java.io.OutputStream, java.util.List)
    {
        java.io.OutputStream r1;
        java.util.List r2;
        com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: java.util.List;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: void <init>(java.io.OutputStream,java.util.List,org.apache.jena.riot.system.PrefixMap)>(r1, r2, null);

        return;
    }

    public void <init>(java.io.OutputStream, java.util.List, org.apache.jena.riot.system.PrefixMap)
    {
        java.io.OutputStream r1;
        java.util.List r3;
        org.apache.jena.riot.system.PrefixMap r4;
        java.io.Writer $r2;
        com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream;

        r1 := @parameter0: java.io.OutputStream;

        r3 := @parameter1: java.util.List;

        r4 := @parameter2: org.apache.jena.riot.system.PrefixMap;

        $r2 = staticinvoke <org.apache.jena.atlas.io.IO: java.io.Writer asBufferedUTF8(java.io.OutputStream)>(r1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: void <init>(java.io.Writer,java.util.List,org.apache.jena.riot.system.PrefixMap)>($r2, r3, r4);

        return;
    }

    private void <init>(java.io.Writer, java.util.List, org.apache.jena.riot.system.PrefixMap)
    {
        org.apache.jena.atlas.io.AWriter $r2;
        com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream r0;
        org.apache.jena.riot.out.NodeFormatterTTL $r5;
        java.util.List r3, $r7, $r8;
        org.apache.jena.riot.system.PrefixMap r4, $r6;
        java.io.Writer r1;
        int $i0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream;

        r1 := @parameter0: java.io.Writer;

        r3 := @parameter1: java.util.List;

        r4 := @parameter2: org.apache.jena.riot.system.PrefixMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: com.hp.hpl.jena.sparql.engine.binding.Binding lastBinding> = null;

        r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: java.util.List vars> = null;

        r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: boolean needOutputPMap> = 1;

        r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: boolean needOutputVars> = 1;

        $r2 = staticinvoke <org.apache.jena.atlas.io.IO: org.apache.jena.atlas.io.AWriter wrap(java.io.Writer)>(r1);

        r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: org.apache.jena.atlas.io.AWriter bw> = $r2;

        r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: java.util.List vars> = r3;

        r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: org.apache.jena.riot.system.PrefixMap pmap> = r4;

        $r5 = new org.apache.jena.riot.out.NodeFormatterTTL;

        $r6 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: org.apache.jena.riot.system.PrefixMap pmap>;

        specialinvoke $r5.<org.apache.jena.riot.out.NodeFormatterTTL: void <init>(java.lang.String,org.apache.jena.riot.system.PrefixMap)>(null, $r6);

        r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: org.apache.jena.riot.out.NodeFormatter nodeFormatter> = $r5;

        $r7 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: java.util.List vars>;

        if $r7 == null goto label1;

        $r8 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: java.util.List vars>;

        $i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: boolean needOutputVars> = $z0;

        return;
    }

    public final void write(com.hp.hpl.jena.sparql.engine.binding.Binding)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding r1;
        com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream;

        r1 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: void send(com.hp.hpl.jena.sparql.engine.binding.Binding)>(r1);

        return;
    }

    public void send(com.hp.hpl.jena.sparql.engine.binding.Binding)
    {
        org.apache.jena.atlas.io.AWriter $r4, $r7, $r9, $r10, $r11, $r14, $r16, $r17, $r20, $r29, $r30, $r33, $r34, $r38;
        com.hp.hpl.jena.graph.Node $r6;
        java.util.Map $r25;
        org.apache.jena.riot.out.NodeFormatter $r8;
        org.apache.jena.iri.IRI $r36;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Set $r26;
        com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding r1;
        java.util.List $r2, $r12, $r19, $r22, $r42;
        org.apache.jena.riot.RiotException $r40;
        org.apache.jena.riot.system.PrefixMap $r23, $r24;
        int $i0, $i1;
        java.lang.String $r18, $r32, $r37;
        java.util.Map$Entry r41;
        java.util.Iterator $r3, $r13, $r21, $r27;
        java.io.IOException $r39;
        com.hp.hpl.jena.sparql.core.Var r43, r44;
        java.lang.Object $r5, $r15, $r28, $r31, $r35;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream;

        r1 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

     label01:
        $z0 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: boolean needOutputPMap>;

        if $z0 == 0 goto label04;

        $r23 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: org.apache.jena.riot.system.PrefixMap pmap>;

        if $r23 == null goto label03;

        $r24 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: org.apache.jena.riot.system.PrefixMap pmap>;

        $r25 = interfaceinvoke $r24.<org.apache.jena.riot.system.PrefixMap: java.util.Map getMapping()>();

        $r26 = interfaceinvoke $r25.<java.util.Map: java.util.Set entrySet()>();

        $r27 = interfaceinvoke $r26.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z2 = interfaceinvoke $r27.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label03;

        $r28 = interfaceinvoke $r27.<java.util.Iterator: java.lang.Object next()>();

        r41 = (java.util.Map$Entry) $r28;

        $r29 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: org.apache.jena.atlas.io.AWriter bw>;

        interfaceinvoke $r29.<org.apache.jena.atlas.io.AWriter: void write(java.lang.String)>("PREFIX ");

        $r30 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: org.apache.jena.atlas.io.AWriter bw>;

        $r31 = interfaceinvoke r41.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r32 = (java.lang.String) $r31;

        interfaceinvoke $r30.<org.apache.jena.atlas.io.AWriter: void write(java.lang.String)>($r32);

        $r33 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: org.apache.jena.atlas.io.AWriter bw>;

        interfaceinvoke $r33.<org.apache.jena.atlas.io.AWriter: void write(java.lang.String)>(": <");

        $r34 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: org.apache.jena.atlas.io.AWriter bw>;

        $r35 = interfaceinvoke r41.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r36 = (org.apache.jena.iri.IRI) $r35;

        $r37 = virtualinvoke $r36.<org.apache.jena.iri.IRI: java.lang.String toASCIIString()>();

        interfaceinvoke $r34.<org.apache.jena.atlas.io.AWriter: void write(java.lang.String)>($r37);

        $r38 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: org.apache.jena.atlas.io.AWriter bw>;

        interfaceinvoke $r38.<org.apache.jena.atlas.io.AWriter: void write(java.lang.String)>("> .\n");

        goto label02;

     label03:
        r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: boolean needOutputPMap> = 0;

     label04:
        $r42 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: java.util.List vars>;

        $z3 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: boolean needVars(java.util.List,com.hp.hpl.jena.sparql.engine.binding.Binding)>($r42, r1);

        if $z3 == 0 goto label05;

        $r21 = interfaceinvoke r1.<com.hp.hpl.jena.sparql.engine.binding.Binding: java.util.Iterator vars()>();

        $r22 = staticinvoke <org.apache.jena.atlas.iterator.Iter: java.util.List toList(java.util.Iterator)>($r21);

        r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: java.util.List vars> = $r22;

        r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: boolean needOutputVars> = 1;

     label05:
        $z1 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: boolean needOutputVars>;

        if $z1 == 0 goto label10;

        $i0 = interfaceinvoke r1.<com.hp.hpl.jena.sparql.engine.binding.Binding: int size()>();

        if $i0 != 0 goto label07;

        $r19 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: java.util.List vars>;

        $i1 = interfaceinvoke $r19.<java.util.List: int size()>();

        if $i1 != 0 goto label07;

        $r20 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: org.apache.jena.atlas.io.AWriter bw>;

        interfaceinvoke $r20.<org.apache.jena.atlas.io.AWriter: void write(java.lang.String)>(".\n");

        r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: boolean needOutputVars> = 0;

     label06:
        return;

     label07:
        $r11 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: org.apache.jena.atlas.io.AWriter bw>;

        interfaceinvoke $r11.<org.apache.jena.atlas.io.AWriter: void write(java.lang.String)>("VARS");

        $r12 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: java.util.List vars>;

        $r13 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z4 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label09;

        $r15 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r43 = (com.hp.hpl.jena.sparql.core.Var) $r15;

        $r16 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: org.apache.jena.atlas.io.AWriter bw>;

        interfaceinvoke $r16.<org.apache.jena.atlas.io.AWriter: void write(java.lang.String)>(" ?");

        $r17 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: org.apache.jena.atlas.io.AWriter bw>;

        $r18 = virtualinvoke r43.<com.hp.hpl.jena.sparql.core.Var: java.lang.String getVarName()>();

        interfaceinvoke $r17.<org.apache.jena.atlas.io.AWriter: void write(java.lang.String)>($r18);

        goto label08;

     label09:
        $r14 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: org.apache.jena.atlas.io.AWriter bw>;

        interfaceinvoke $r14.<org.apache.jena.atlas.io.AWriter: void write(java.lang.String)>(" .\n");

        r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: boolean needOutputVars> = 0;

     label10:
        $r2 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: java.util.List vars>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z5 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label13;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r44 = (com.hp.hpl.jena.sparql.core.Var) $r5;

        $r6 = interfaceinvoke r1.<com.hp.hpl.jena.sparql.engine.binding.Binding: com.hp.hpl.jena.graph.Node get(com.hp.hpl.jena.sparql.core.Var)>(r44);

        if $r6 != null goto label12;

        $r10 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: org.apache.jena.atlas.io.AWriter bw>;

        interfaceinvoke $r10.<org.apache.jena.atlas.io.AWriter: void write(java.lang.String)>("- ");

        goto label11;

     label12:
        $r8 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: org.apache.jena.riot.out.NodeFormatter nodeFormatter>;

        $r7 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: org.apache.jena.atlas.io.AWriter bw>;

        interfaceinvoke $r8.<org.apache.jena.riot.out.NodeFormatter: void format(org.apache.jena.atlas.io.AWriter,com.hp.hpl.jena.graph.Node)>($r7, $r6);

        $r9 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: org.apache.jena.atlas.io.AWriter bw>;

        interfaceinvoke $r9.<org.apache.jena.atlas.io.AWriter: void write(java.lang.String)>(" ");

        goto label11;

     label13:
        $r4 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: org.apache.jena.atlas.io.AWriter bw>;

        interfaceinvoke $r4.<org.apache.jena.atlas.io.AWriter: void write(java.lang.String)>(".\n");

     label14:
        goto label16;

     label15:
        $r39 := @caughtexception;

        $r40 = new org.apache.jena.riot.RiotException;

        specialinvoke $r40.<org.apache.jena.riot.RiotException: void <init>(java.lang.Throwable)>($r39);

        throw $r40;

     label16:
        return;

        catch java.io.IOException from label01 to label06 with label15;
        catch java.io.IOException from label07 to label14 with label15;
    }

    private static boolean needVars(java.util.List, com.hp.hpl.jena.sparql.engine.binding.Binding)
    {
        java.util.List r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding r4;
        java.util.Iterator $r1;
        java.lang.Object $r2;
        com.hp.hpl.jena.sparql.core.Var r3;
        boolean $z0, $z1;

        r0 := @parameter0: java.util.List;

        r4 := @parameter1: com.hp.hpl.jena.sparql.engine.binding.Binding;

        if r0 != null goto label1;

        return 1;

     label1:
        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.hp.hpl.jena.sparql.core.Var) $r2;

        $z1 = interfaceinvoke r4.<com.hp.hpl.jena.sparql.engine.binding.Binding: boolean contains(com.hp.hpl.jena.sparql.core.Var)>(r3);

        if $z1 != 0 goto label3;

        return 1;

     label3:
        goto label2;

     label4:
        return 0;
    }

    public void flush()
    {
        org.apache.jena.atlas.io.AWriter $r1;
        com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: org.apache.jena.atlas.io.AWriter bw>;

        staticinvoke <org.apache.jena.atlas.io.IO: void flush(org.apache.jena.atlas.io.AWriter)>($r1);

        return;
    }

    public void close()
    {
        org.apache.jena.atlas.io.AWriter $r1;
        com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: org.apache.jena.atlas.io.AWriter bw>;

        staticinvoke <org.apache.jena.atlas.io.IO: void close(org.apache.jena.atlas.io.AWriter)>($r1);

        return;
    }

    public java.util.List getVars()
    {
        java.util.List $r1;
        com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: java.util.List vars>;

        return $r1;
    }

    public void setVars(java.util.List)
    {
        java.util.List r1;
        com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream;

        r1 := @parameter0: java.util.List;

        r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: java.util.List vars> = r1;

        return;
    }

    public org.apache.jena.riot.system.PrefixMap getPrefixMap()
    {
        com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream r0;
        org.apache.jena.riot.system.PrefixMap $r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: org.apache.jena.riot.system.PrefixMap pmap>;

        return $r1;
    }

    public void setPrefixMap(org.apache.jena.riot.system.PrefixMap)
    {
        com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream r0;
        org.apache.jena.riot.system.PrefixMap r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream;

        r1 := @parameter0: org.apache.jena.riot.system.PrefixMap;

        r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: org.apache.jena.riot.system.PrefixMap pmap> = r1;

        r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: boolean needOutputPMap> = 1;

        return;
    }

    public volatile void send(java.lang.Object)
    {
        java.lang.Object r1;
        com.hp.hpl.jena.sparql.engine.binding.Binding $r2;
        com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.hp.hpl.jena.sparql.engine.binding.Binding) r1;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: void send(com.hp.hpl.jena.sparql.engine.binding.Binding)>($r2);

        return;
    }
}
