class nu.xom.JaxenNavigator extends nu.xom.jaxen.DefaultNavigator implements nu.xom.jaxen.NamedAccessNavigator
{
    private static final long serialVersionUID;

    void <init>()
    {
        nu.xom.JaxenNavigator r0;

        r0 := @this: nu.xom.JaxenNavigator;

        specialinvoke r0.<nu.xom.jaxen.DefaultNavigator: void <init>()>();

        return;
    }

    public java.util.Iterator getSelfAxisIterator(java.lang.Object)
    {
        java.util.ArrayList $r9;
        int $i0, $i1, $i2, i3, i4, $i5, $i6, i7, $i9;
        nu.xom.ParentNode $r3;
        nu.xom.Text r1;
        boolean $z0, $z1, $z2;
        nu.xom.jaxen.util.SingleObjectIterator $r10;
        nu.xom.JaxenNavigator r7;
        nu.xom.Node $r4, $r5, $r6;
        java.lang.Object r8;

        r7 := @this: nu.xom.JaxenNavigator;

        r8 := @parameter0: java.lang.Object;

        $z0 = r8 instanceof nu.xom.Text;

        if $z0 == 0 goto label6;

        r1 = (nu.xom.Text) r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r1.<nu.xom.Text: nu.xom.ParentNode getParent()>();

        $i0 = virtualinvoke $r3.<nu.xom.ParentNode: int indexOf(nu.xom.Node)>(r1);

        i3 = $i0;

        i4 = $i0;

     label1:
        if i3 <= 0 goto label2;

        $i2 = i3 - 1;

        $r6 = virtualinvoke $r3.<nu.xom.ParentNode: nu.xom.Node getChild(int)>($i2);

        $z2 = virtualinvoke $r6.<nu.xom.Node: boolean isText()>();

        if $z2 == 0 goto label2;

        $i9 = (int) -1;

        i3 = i3 + $i9;

        goto label1;

     label2:
        $i5 = virtualinvoke $r3.<nu.xom.ParentNode: int getChildCount()>();

        $i6 = $i5 - 1;

        if i4 >= $i6 goto label3;

        $i1 = i4 + 1;

        $r5 = virtualinvoke $r3.<nu.xom.ParentNode: nu.xom.Node getChild(int)>($i1);

        $z1 = virtualinvoke $r5.<nu.xom.Node: boolean isText()>();

        if $z1 == 0 goto label3;

        i4 = i4 + 1;

        goto label2;

     label3:
        i7 = i3;

     label4:
        if i7 > i4 goto label5;

        $r4 = virtualinvoke $r3.<nu.xom.ParentNode: nu.xom.Node getChild(int)>(i7);

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        i7 = i7 + 1;

        goto label4;

     label5:
        r8 = $r9;

     label6:
        $r10 = new nu.xom.jaxen.util.SingleObjectIterator;

        specialinvoke $r10.<nu.xom.jaxen.util.SingleObjectIterator: void <init>(java.lang.Object)>(r8);

        return $r10;
    }

    public java.lang.Object getElementById(java.lang.Object, java.lang.String)
    {
        nu.xom.Element $r4, r12;
        java.lang.String r3;
        nu.xom.ParentNode r10, r11;
        boolean $z0, $z1, $z2, $z3, $z4;
        nu.xom.JaxenNavigator r8;
        nu.xom.Node $r1, $r2, r9;
        java.util.List $r6;
        java.lang.Object r0, $r7;
        nu.xom.Document $r5;

        r8 := @this: nu.xom.JaxenNavigator;

        r0 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.String;

        $z0 = r0 instanceof java.util.ArrayList;

        if $z0 == 0 goto label01;

        $r6 = (java.util.List) r0;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(0);

        r9 = (nu.xom.Node) $r7;

        goto label02;

     label01:
        r9 = (nu.xom.Node) r0;

     label02:
        $z1 = virtualinvoke r9.<nu.xom.Node: boolean isElement()>();

        if $z1 != 0 goto label03;

        $z4 = virtualinvoke r9.<nu.xom.Node: boolean isDocument()>();

        if $z4 == 0 goto label04;

     label03:
        r10 = (nu.xom.ParentNode) r9;

        goto label05;

     label04:
        r10 = virtualinvoke r9.<nu.xom.Node: nu.xom.ParentNode getParent()>();

     label05:
        r11 = r10;

     label06:
        if r10 == null goto label07;

        r11 = r10;

        r10 = virtualinvoke r10.<nu.xom.ParentNode: nu.xom.ParentNode getParent()>();

        goto label06;

     label07:
        $z2 = virtualinvoke r11.<nu.xom.ParentNode: boolean isDocument()>();

        if $z2 == 0 goto label08;

        $r5 = (nu.xom.Document) r11;

        r12 = virtualinvoke $r5.<nu.xom.Document: nu.xom.Element getRootElement()>();

        goto label10;

     label08:
        $r1 = virtualinvoke r11.<nu.xom.ParentNode: nu.xom.Node getChild(int)>(0);

        $z3 = virtualinvoke $r1.<nu.xom.Node: boolean isElement()>();

        if $z3 == 0 goto label09;

        $r2 = virtualinvoke r11.<nu.xom.ParentNode: nu.xom.Node getChild(int)>(0);

        r12 = (nu.xom.Element) $r2;

        goto label10;

     label09:
        return null;

     label10:
        $r4 = staticinvoke <nu.xom.JaxenNavigator: nu.xom.Element findByID(nu.xom.Element,java.lang.String)>(r12, r3);

        return $r4;
    }

    public static nu.xom.Element findByID(nu.xom.Element, java.lang.String)
    {
        nu.xom.Element r0, $r3, $r4;
        int $i0, i1;
        java.lang.String r1;
        nu.xom.Elements $r2;
        boolean $z0;

        r0 := @parameter0: nu.xom.Element;

        r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <nu.xom.JaxenNavigator: boolean hasID(nu.xom.Element,java.lang.String)>(r0, r1);

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r2 = virtualinvoke r0.<nu.xom.Element: nu.xom.Elements getChildElements()>();

        i1 = 0;

     label2:
        $i0 = virtualinvoke $r2.<nu.xom.Elements: int size()>();

        if i1 >= $i0 goto label4;

        $r3 = virtualinvoke $r2.<nu.xom.Elements: nu.xom.Element get(int)>(i1);

        $r4 = staticinvoke <nu.xom.JaxenNavigator: nu.xom.Element findByID(nu.xom.Element,java.lang.String)>($r3, r1);

        if $r4 == null goto label3;

        return $r4;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return null;
    }

    private static boolean hasID(nu.xom.Element, java.lang.String)
    {
        nu.xom.Element r0;
        nu.xom.Attribute $r1;
        nu.xom.Attribute$Type $r2, $r3;
        int $i0, i1;
        java.lang.String $r4, $r5, r6;
        boolean $z0;

        r0 := @parameter0: nu.xom.Element;

        r6 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<nu.xom.Element: int getAttributeCount()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label3;

        $r1 = virtualinvoke r0.<nu.xom.Element: nu.xom.Attribute getAttribute(int)>(i1);

        $r2 = <nu.xom.Attribute$Type: nu.xom.Attribute$Type ID>;

        $r3 = virtualinvoke $r1.<nu.xom.Attribute: nu.xom.Attribute$Type getType()>();

        if $r2 != $r3 goto label2;

        $r4 = virtualinvoke $r1.<nu.xom.Attribute: java.lang.String getValue()>();

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        return $z0;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public java.lang.String getNamespacePrefix(java.lang.Object)
    {
        nu.xom.Namespace r1;
        java.lang.Object r0;
        java.lang.String $r2;
        nu.xom.JaxenNavigator r3;

        r3 := @this: nu.xom.JaxenNavigator;

        r0 := @parameter0: java.lang.Object;

        r1 = (nu.xom.Namespace) r0;

        $r2 = virtualinvoke r1.<nu.xom.Namespace: java.lang.String getPrefix()>();

        return $r2;
    }

    public java.lang.String getNamespaceStringValue(java.lang.Object)
    {
        nu.xom.Namespace r1;
        java.lang.Object r0;
        java.lang.String $r2;
        nu.xom.JaxenNavigator r3;

        r3 := @this: nu.xom.JaxenNavigator;

        r0 := @parameter0: java.lang.Object;

        r1 = (nu.xom.Namespace) r0;

        $r2 = virtualinvoke r1.<nu.xom.Namespace: java.lang.String getValue()>();

        return $r2;
    }

    public java.util.Iterator getNamespaceAxisIterator(java.lang.Object)
    {
        nu.xom.Element r19;
        java.lang.ClassCastException $r16;
        java.util.ArrayList $r4;
        nu.xom.Namespace $r5, $r14;
        java.util.Map $r1;
        int $i0, $i1;
        java.lang.String r10, r12, $r13, $r15;
        boolean $z0, $z1, $z2;
        java.util.Map$Entry r8;
        java.util.Iterator $r3, $r6, $r17;
        java.util.Set $r2;
        nu.xom.JaxenNavigator r18;
        java.lang.Object r0, $r7, $r9, $r11;

        r18 := @this: nu.xom.JaxenNavigator;

        r0 := @parameter0: java.lang.Object;

     label1:
        r19 = (nu.xom.Element) r0;

        $r1 = virtualinvoke r19.<nu.xom.Element: java.util.Map getNamespacePrefixesInScope()>();

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        $r4 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        $i1 = $i0 + 1;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i1);

        $r5 = new nu.xom.Namespace;

        specialinvoke $r5.<nu.xom.Namespace: void <init>(java.lang.String,java.lang.String,nu.xom.Element)>("xml", "http://www.w3.org/XML/1998/namespace", r19);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map$Entry) $r7;

        $r9 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        r10 = (java.lang.String) $r9;

        $r11 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        r12 = (java.lang.String) $r11;

        $r13 = "";

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z1 == 0 goto label3;

        $r15 = "";

        $z2 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r12);

        if $z2 != 0 goto label4;

     label3:
        $r14 = new nu.xom.Namespace;

        specialinvoke $r14.<nu.xom.Namespace: void <init>(java.lang.String,java.lang.String,nu.xom.Element)>(r10, r12, r19);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r14);

     label4:
        goto label2;

     label5:
        $r6 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label6:
        return $r6;

     label7:
        $r16 := @caughtexception;

        $r17 = <nu.xom.jaxen.JaxenConstants: java.util.Iterator EMPTY_ITERATOR>;

        return $r17;

        catch java.lang.ClassCastException from label1 to label6 with label7;
    }

    public java.util.Iterator getParentAxisIterator(java.lang.Object)
    {
        java.util.Iterator $r5;
        nu.xom.jaxen.util.SingleObjectIterator $r4;
        java.lang.Object r1, $r2;
        nu.xom.JaxenNavigator r0;
        nu.xom.Node r3;

        r0 := @this: nu.xom.JaxenNavigator;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<nu.xom.JaxenNavigator: java.lang.Object getParentNode(java.lang.Object)>(r1);

        r3 = (nu.xom.Node) $r2;

        if r3 != null goto label1;

        $r5 = <nu.xom.jaxen.JaxenConstants: java.util.Iterator EMPTY_ITERATOR>;

        return $r5;

     label1:
        $r4 = new nu.xom.jaxen.util.SingleObjectIterator;

        specialinvoke $r4.<nu.xom.jaxen.util.SingleObjectIterator: void <init>(java.lang.Object)>(r3);

        return $r4;
    }

    public java.lang.Object getDocumentNode(java.lang.Object)
    {
        java.lang.Object r0;
        nu.xom.JaxenNavigator r3;
        nu.xom.Node r1, $r2;

        r3 := @this: nu.xom.JaxenNavigator;

        r0 := @parameter0: java.lang.Object;

        r1 = (nu.xom.Node) r0;

        $r2 = virtualinvoke r1.<nu.xom.Node: nu.xom.Node getRoot()>();

        return $r2;
    }

    public java.lang.Object getDocument(java.lang.String) throws nu.xom.jaxen.FunctionCallException
    {
        nu.xom.jaxen.FunctionCallException $r0;
        java.lang.String r2;
        nu.xom.JaxenNavigator r1;

        r1 := @this: nu.xom.JaxenNavigator;

        r2 := @parameter0: java.lang.String;

        $r0 = new nu.xom.jaxen.FunctionCallException;

        specialinvoke $r0.<nu.xom.jaxen.FunctionCallException: void <init>(java.lang.String)>("document() function not supported");

        throw $r0;
    }

    public java.util.Iterator getAttributeAxisIterator(java.lang.Object)
    {
        java.util.Iterator $r1, $r3;
        nu.xom.Element r5;
        java.lang.Object r0;
        java.lang.ClassCastException $r2;
        nu.xom.JaxenNavigator r4;

        r4 := @this: nu.xom.JaxenNavigator;

        r0 := @parameter0: java.lang.Object;

     label1:
        r5 = (nu.xom.Element) r0;

        $r1 = virtualinvoke r5.<nu.xom.Element: java.util.Iterator attributeIterator()>();

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = <nu.xom.jaxen.JaxenConstants: java.util.Iterator EMPTY_ITERATOR>;

        return $r3;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public java.util.Iterator getChildAxisIterator(java.lang.Object)
    {
        nu.xom.JaxenNavigator$ChildIterator $r2;
        java.util.Iterator $r1;
        java.lang.Object r0;
        nu.xom.ParentNode $r3;
        nu.xom.JaxenNavigator r4;
        boolean $z0;

        r4 := @this: nu.xom.JaxenNavigator;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof nu.xom.ParentNode;

        if $z0 == 0 goto label1;

        $r2 = new nu.xom.JaxenNavigator$ChildIterator;

        $r3 = (nu.xom.ParentNode) r0;

        specialinvoke $r2.<nu.xom.JaxenNavigator$ChildIterator: void <init>(nu.xom.ParentNode)>($r3);

        return $r2;

     label1:
        $r1 = <nu.xom.jaxen.JaxenConstants: java.util.Iterator EMPTY_ITERATOR>;

        return $r1;
    }

    public java.util.Iterator getFollowingSiblingAxisIterator(java.lang.Object)
    {
        java.util.Iterator $r3;
        nu.xom.JaxenNavigator r5;
        nu.xom.Node r7;
        java.util.ArrayList r6;
        nu.xom.JaxenNavigator$ChildIterator $r2;
        int $i0, i1, $i2, $i3;
        java.lang.Object r0, $r4;
        nu.xom.ParentNode $r1;
        boolean $z0;

        r5 := @this: nu.xom.JaxenNavigator;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.util.ArrayList;

        if $z0 == 0 goto label1;

        r6 = (java.util.ArrayList) r0;

        $i2 = interfaceinvoke r6.<java.util.List: int size()>();

        $i3 = $i2 - 1;

        $r4 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>($i3);

        r7 = (nu.xom.Node) $r4;

        goto label2;

     label1:
        r7 = (nu.xom.Node) r0;

     label2:
        $r1 = virtualinvoke r7.<nu.xom.Node: nu.xom.ParentNode getParent()>();

        if $r1 != null goto label3;

        $r3 = <nu.xom.jaxen.JaxenConstants: java.util.Iterator EMPTY_ITERATOR>;

        return $r3;

     label3:
        $i0 = virtualinvoke $r1.<nu.xom.ParentNode: int indexOf(nu.xom.Node)>(r7);

        i1 = $i0 + 1;

        $r2 = new nu.xom.JaxenNavigator$ChildIterator;

        specialinvoke $r2.<nu.xom.JaxenNavigator$ChildIterator: void <init>(nu.xom.ParentNode,int)>($r1, i1);

        return $r2;
    }

    public java.lang.Object getParentNode(java.lang.Object)
    {
        java.util.List $r2;
        java.lang.Object r0, $r3;
        nu.xom.ParentNode $r1;
        nu.xom.JaxenNavigator r4;
        nu.xom.Node r5;
        boolean $z0;

        r4 := @this: nu.xom.JaxenNavigator;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.util.ArrayList;

        if $z0 == 0 goto label1;

        $r2 = (java.util.List) r0;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        r5 = (nu.xom.Node) $r3;

        goto label2;

     label1:
        r5 = (nu.xom.Node) r0;

     label2:
        $r1 = virtualinvoke r5.<nu.xom.Node: nu.xom.ParentNode getParent()>();

        return $r1;
    }

    public java.lang.String getTextStringValue(java.lang.Object)
    {
        java.util.Iterator $r3;
        nu.xom.JaxenNavigator r11;
        java.util.List r1;
        java.lang.StringBuffer $r2;
        int $i0;
        java.lang.Object r0, $r5, $r8;
        java.lang.String $r4, $r7, $r10;
        nu.xom.Text r6, $r9;
        boolean $z0;

        r11 := @this: nu.xom.JaxenNavigator;

        r0 := @parameter0: java.lang.Object;

        r1 = (java.util.List) r0;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 != 1 goto label1;

        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r9 = (nu.xom.Text) $r8;

        $r10 = virtualinvoke $r9.<nu.xom.Text: java.lang.String getValue()>();

        return $r10;

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (nu.xom.Text) $r5;

        $r7 = virtualinvoke r6.<nu.xom.Text: java.lang.String getValue()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        goto label2;

     label3:
        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.String getElementNamespaceUri(java.lang.Object)
    {
        nu.xom.Element $r1;
        java.lang.Object r0;
        java.lang.String $r2;
        nu.xom.JaxenNavigator r3;

        r3 := @this: nu.xom.JaxenNavigator;

        r0 := @parameter0: java.lang.Object;

        $r1 = (nu.xom.Element) r0;

        $r2 = virtualinvoke $r1.<nu.xom.Element: java.lang.String getNamespaceURI()>();

        return $r2;
    }

    public java.lang.String getElementName(java.lang.Object)
    {
        nu.xom.Element $r1;
        java.lang.Object r0;
        java.lang.String $r2;
        nu.xom.JaxenNavigator r3;

        r3 := @this: nu.xom.JaxenNavigator;

        r0 := @parameter0: java.lang.Object;

        $r1 = (nu.xom.Element) r0;

        $r2 = virtualinvoke $r1.<nu.xom.Element: java.lang.String getLocalName()>();

        return $r2;
    }

    public java.lang.String getElementQName(java.lang.Object)
    {
        nu.xom.Element $r1;
        java.lang.Object r0;
        java.lang.String $r2;
        nu.xom.JaxenNavigator r3;

        r3 := @this: nu.xom.JaxenNavigator;

        r0 := @parameter0: java.lang.Object;

        $r1 = (nu.xom.Element) r0;

        $r2 = virtualinvoke $r1.<nu.xom.Element: java.lang.String getQualifiedName()>();

        return $r2;
    }

    public java.lang.String getAttributeNamespaceUri(java.lang.Object)
    {
        nu.xom.Attribute r1;
        java.lang.Object r0;
        java.lang.String $r2;
        nu.xom.JaxenNavigator r3;

        r3 := @this: nu.xom.JaxenNavigator;

        r0 := @parameter0: java.lang.Object;

        r1 = (nu.xom.Attribute) r0;

        $r2 = virtualinvoke r1.<nu.xom.Attribute: java.lang.String getNamespaceURI()>();

        return $r2;
    }

    public java.lang.String getAttributeName(java.lang.Object)
    {
        nu.xom.Attribute r1;
        java.lang.Object r0;
        java.lang.String $r2;
        nu.xom.JaxenNavigator r3;

        r3 := @this: nu.xom.JaxenNavigator;

        r0 := @parameter0: java.lang.Object;

        r1 = (nu.xom.Attribute) r0;

        $r2 = virtualinvoke r1.<nu.xom.Attribute: java.lang.String getLocalName()>();

        return $r2;
    }

    public java.lang.String getAttributeQName(java.lang.Object)
    {
        nu.xom.Attribute r1;
        java.lang.Object r0;
        java.lang.String $r2;
        nu.xom.JaxenNavigator r3;

        r3 := @this: nu.xom.JaxenNavigator;

        r0 := @parameter0: java.lang.Object;

        r1 = (nu.xom.Attribute) r0;

        $r2 = virtualinvoke r1.<nu.xom.Attribute: java.lang.String getQualifiedName()>();

        return $r2;
    }

    public java.lang.String getProcessingInstructionData(java.lang.Object)
    {
        java.lang.Object r0;
        nu.xom.ProcessingInstruction r1;
        java.lang.String $r2;
        nu.xom.JaxenNavigator r3;

        r3 := @this: nu.xom.JaxenNavigator;

        r0 := @parameter0: java.lang.Object;

        r1 = (nu.xom.ProcessingInstruction) r0;

        $r2 = virtualinvoke r1.<nu.xom.ProcessingInstruction: java.lang.String getValue()>();

        return $r2;
    }

    public java.lang.String getProcessingInstructionTarget(java.lang.Object)
    {
        java.lang.Object r0;
        nu.xom.ProcessingInstruction r1;
        java.lang.String $r2;
        nu.xom.JaxenNavigator r3;

        r3 := @this: nu.xom.JaxenNavigator;

        r0 := @parameter0: java.lang.Object;

        r1 = (nu.xom.ProcessingInstruction) r0;

        $r2 = virtualinvoke r1.<nu.xom.ProcessingInstruction: java.lang.String getTarget()>();

        return $r2;
    }

    public boolean isDocument(java.lang.Object)
    {
        java.lang.Object r0;
        nu.xom.JaxenNavigator r1;
        boolean $z0, $z1, $z2;

        r1 := @this: nu.xom.JaxenNavigator;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof nu.xom.Document;

        if $z0 != 0 goto label1;

        $z1 = r0 instanceof nu.xom.DocumentFragment;

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean isElement(java.lang.Object)
    {
        java.lang.Object r0;
        nu.xom.JaxenNavigator r1;
        boolean $z0;

        r1 := @this: nu.xom.JaxenNavigator;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof nu.xom.Element;

        return $z0;
    }

    public boolean isAttribute(java.lang.Object)
    {
        java.lang.Object r0;
        nu.xom.JaxenNavigator r1;
        boolean $z0;

        r1 := @this: nu.xom.JaxenNavigator;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof nu.xom.Attribute;

        return $z0;
    }

    public boolean isNamespace(java.lang.Object)
    {
        java.lang.Object r0;
        nu.xom.JaxenNavigator r1;
        boolean $z0;

        r1 := @this: nu.xom.JaxenNavigator;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof nu.xom.Namespace;

        return $z0;
    }

    public boolean isComment(java.lang.Object)
    {
        java.lang.Object r0;
        nu.xom.JaxenNavigator r1;
        boolean $z0;

        r1 := @this: nu.xom.JaxenNavigator;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof nu.xom.Comment;

        return $z0;
    }

    public boolean isText(java.lang.Object)
    {
        java.util.Iterator $r2;
        nu.xom.JaxenNavigator r4;
        java.util.List $r1;
        java.lang.Object r0, $r3;
        boolean $z0, $z1, $z2;

        r4 := @this: nu.xom.JaxenNavigator;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.util.ArrayList;

        if $z0 == 0 goto label3;

        $r1 = (java.util.List) r0;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $z2 = $r3 instanceof nu.xom.Text;

        if $z2 != 0 goto label1;

        return 0;

     label2:
        return 1;

     label3:
        return 0;
    }

    public boolean isProcessingInstruction(java.lang.Object)
    {
        java.lang.Object r0;
        nu.xom.JaxenNavigator r1;
        boolean $z0;

        r1 := @this: nu.xom.JaxenNavigator;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof nu.xom.ProcessingInstruction;

        return $z0;
    }

    public java.lang.String getCommentStringValue(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.String $r2;
        nu.xom.JaxenNavigator r3;
        nu.xom.Comment $r1;

        r3 := @this: nu.xom.JaxenNavigator;

        r0 := @parameter0: java.lang.Object;

        $r1 = (nu.xom.Comment) r0;

        $r2 = virtualinvoke $r1.<nu.xom.Comment: java.lang.String getValue()>();

        return $r2;
    }

    public java.lang.String getElementStringValue(java.lang.Object)
    {
        nu.xom.Element $r1;
        java.lang.Object r0;
        java.lang.String $r2;
        nu.xom.JaxenNavigator r3;

        r3 := @this: nu.xom.JaxenNavigator;

        r0 := @parameter0: java.lang.Object;

        $r1 = (nu.xom.Element) r0;

        $r2 = virtualinvoke $r1.<nu.xom.Element: java.lang.String getValue()>();

        return $r2;
    }

    public java.lang.String getAttributeStringValue(java.lang.Object)
    {
        nu.xom.Attribute $r1;
        java.lang.Object r0;
        java.lang.String $r2;
        nu.xom.JaxenNavigator r3;

        r3 := @this: nu.xom.JaxenNavigator;

        r0 := @parameter0: java.lang.Object;

        $r1 = (nu.xom.Attribute) r0;

        $r2 = virtualinvoke $r1.<nu.xom.Attribute: java.lang.String getValue()>();

        return $r2;
    }

    public nu.xom.jaxen.XPath parseXPath(java.lang.String) throws nu.xom.jaxen.JaxenException
    {
        java.lang.String r1;
        nu.xom.JaxenNavigator r2;
        nu.xom.JaxenConnector $r0;

        r2 := @this: nu.xom.JaxenNavigator;

        r1 := @parameter0: java.lang.String;

        $r0 = new nu.xom.JaxenConnector;

        specialinvoke $r0.<nu.xom.JaxenConnector: void <init>(java.lang.String)>(r1);

        return $r0;
    }

    public java.util.Iterator getChildAxisIterator(java.lang.Object, java.lang.String, java.lang.String, java.lang.String) throws nu.xom.jaxen.UnsupportedAxisException
    {
        java.util.Iterator $r1;
        nu.xom.JaxenNavigator$NamedChildIterator $r2;
        nu.xom.JaxenNavigator r7;
        java.lang.Object r0;
        java.lang.String r3, r4, r5;
        nu.xom.ParentNode $r6;
        boolean $z0;

        r7 := @this: nu.xom.JaxenNavigator;

        r0 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.String;

        $z0 = r0 instanceof nu.xom.ParentNode;

        if $z0 == 0 goto label1;

        $r2 = new nu.xom.JaxenNavigator$NamedChildIterator;

        $r6 = (nu.xom.ParentNode) r0;

        specialinvoke $r2.<nu.xom.JaxenNavigator$NamedChildIterator: void <init>(nu.xom.ParentNode,java.lang.String,java.lang.String,java.lang.String)>($r6, r3, r4, r5);

        return $r2;

     label1:
        $r1 = <nu.xom.jaxen.JaxenConstants: java.util.Iterator EMPTY_ITERATOR>;

        return $r1;
    }

    public java.util.Iterator getAttributeAxisIterator(java.lang.Object, java.lang.String, java.lang.String, java.lang.String) throws nu.xom.jaxen.UnsupportedAxisException
    {
        java.util.Iterator $r4, $r6;
        nu.xom.jaxen.util.SingleObjectIterator $r3;
        nu.xom.Element r9;
        java.lang.ClassCastException $r5;
        nu.xom.JaxenNavigator r7;
        nu.xom.Attribute r10;
        java.lang.Object r0;
        java.lang.String r1, r2, r8;

        r7 := @this: nu.xom.JaxenNavigator;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        r8 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

     label1:
        r9 = (nu.xom.Element) r0;

        if r1 != null goto label2;

        r10 = virtualinvoke r9.<nu.xom.Element: nu.xom.Attribute getAttribute(java.lang.String)>(r2);

        goto label3;

     label2:
        r10 = virtualinvoke r9.<nu.xom.Element: nu.xom.Attribute getAttribute(java.lang.String,java.lang.String)>(r2, r1);

     label3:
        if r10 != null goto label5;

        $r4 = <nu.xom.jaxen.JaxenConstants: java.util.Iterator EMPTY_ITERATOR>;

     label4:
        return $r4;

     label5:
        $r3 = new nu.xom.jaxen.util.SingleObjectIterator;

        specialinvoke $r3.<nu.xom.jaxen.util.SingleObjectIterator: void <init>(java.lang.Object)>(r10);

     label6:
        return $r3;

     label7:
        $r5 := @caughtexception;

        $r6 = <nu.xom.jaxen.JaxenConstants: java.util.Iterator EMPTY_ITERATOR>;

        return $r6;

        catch java.lang.ClassCastException from label1 to label4 with label7;
        catch java.lang.ClassCastException from label5 to label6 with label7;
    }

    public static void <clinit>()
    {
        <nu.xom.JaxenNavigator: long serialVersionUID> = 7008740797833836742L;

        return;
    }
}
