public class com.jidesoft.utils.SecurityUtils extends java.lang.Object
{
    public static final java.lang.String BOLD;
    public static final java.lang.String ITALIC;
    public static final java.lang.String BOLD_ITALIC;
    private static boolean _AWTEventListenerDisabled;
    private static boolean _translucentWindowFeatureDisabled;

    public void <init>()
    {
        com.jidesoft.utils.SecurityUtils r0;

        r0 := @this: com.jidesoft.utils.SecurityUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static javax.swing.plaf.FontUIResource createFontUIResource(java.lang.String, int, int)
    {
        javax.swing.plaf.FontUIResource $r2;
        java.awt.Font $r1;
        int i0, i1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = staticinvoke <com.jidesoft.utils.SecurityUtils: java.awt.Font createFont(java.lang.String,int,int)>(r0, i0, i1);

        if $r1 == null goto label1;

        $r2 = new javax.swing.plaf.FontUIResource;

        specialinvoke $r2.<javax.swing.plaf.FontUIResource: void <init>(java.awt.Font)>($r1);

        return $r2;

     label1:
        return null;
    }

    private static java.lang.String createFontStrings(java.lang.String, int)
    {
        int i0;
        java.lang.String r1, r13, $r14;
        java.lang.StringBuilder $r0, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        tableswitch(i0)
        {
            case 0: goto label4;
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bold");

        r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label5;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Italic");

        r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label5;

     label3:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bold Italic");

        r13 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label5;

     label4:
        r13 = r1;

     label5:
        $r14 = virtualinvoke r13.<java.lang.String: java.lang.String replace(char,char)>(32, 95);

        return $r14;
    }

    public static java.awt.Font createFont(java.lang.String, int, int)
    {
        java.awt.FontFormatException $r3;
        java.util.ResourceBundle $r10, $r15;
        java.util.Locale $r9, $r14;
        int i0, i1;
        java.lang.String r1, $r16, r17;
        java.awt.Font $r0, $r6, $r7;
        java.util.MissingResourceException $r4, $r8;
        java.io.IOException $r2;
        java.security.AccessControlException $r11;
        float $f0;
        java.lang.Class $r12;
        java.lang.ClassLoader $r13;
        java.io.InputStream $r5;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label01:
        $r0 = new java.awt.Font;

        specialinvoke $r0.<java.awt.Font: void <init>(java.lang.String,int,int)>(r1, i0, i1);

     label02:
        return $r0;

     label03:
        $r11 := @caughtexception;

        $r12 = class "Lcom/jidesoft/utils/SecurityUtils;";

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label04:
        r17 = null;

     label05:
        $r14 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r15 = staticinvoke <com.jidesoft.utils.FontFilesResource: java.util.ResourceBundle getResourceBundle(java.util.Locale)>($r14);

        $r16 = staticinvoke <com.jidesoft.utils.SecurityUtils: java.lang.String createFontStrings(java.lang.String,int)>(r1, i0);

        r17 = virtualinvoke $r15.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>($r16);

     label06:
        goto label11;

     label07:
        $r8 := @caughtexception;

     label08:
        $r9 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r10 = staticinvoke <com.jidesoft.utils.FontFilesResource: java.util.ResourceBundle getResourceBundle(java.util.Locale)>($r9);

        r17 = virtualinvoke $r10.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(r1);

     label09:
        goto label11;

     label10:
        $r4 := @caughtexception;

     label11:
        if r17 != null goto label13;

     label12:
        return null;

     label13:
        $r5 = virtualinvoke $r13.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r17);

        $r6 = staticinvoke <java.awt.Font: java.awt.Font createFont(int,java.io.InputStream)>(0, $r5);

        if $r6 == null goto label15;

        $f0 = (float) i1;

        $r7 = virtualinvoke $r6.<java.awt.Font: java.awt.Font deriveFont(int,float)>(i0, $f0);

     label14:
        return $r7;

     label15:
        goto label18;

     label16:
        $r3 := @caughtexception;

        virtualinvoke $r3.<java.awt.FontFormatException: void printStackTrace()>();

        throw $r11;

     label17:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.io.IOException: void printStackTrace()>();

        throw $r11;

     label18:
        return null;

        catch java.security.AccessControlException from label01 to label02 with label03;
        catch java.util.MissingResourceException from label05 to label06 with label07;
        catch java.util.MissingResourceException from label08 to label09 with label10;
        catch java.awt.FontFormatException from label04 to label12 with label16;
        catch java.awt.FontFormatException from label13 to label14 with label16;
        catch java.io.IOException from label04 to label12 with label17;
        catch java.io.IOException from label13 to label14 with label17;
    }

    public static java.lang.String getProperty(java.lang.String, java.lang.String)
    {
        java.security.AccessControlException $r3;
        java.lang.String r0, r1, $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

     label1:
        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>(r0, r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        return r1;

        catch java.security.AccessControlException from label1 to label2 with label3;
    }

    public static boolean isAWTEventListenerDisabled()
    {
        boolean $z0;

        $z0 = <com.jidesoft.utils.SecurityUtils: boolean _AWTEventListenerDisabled>;

        return $z0;
    }

    public static void setAWTEventListenerDisabled(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <com.jidesoft.utils.SecurityUtils: boolean _AWTEventListenerDisabled> = z0;

        return;
    }

    public static boolean isTranslucentWindowFeatureDisabled()
    {
        boolean $z0;

        $z0 = <com.jidesoft.utils.SecurityUtils: boolean _translucentWindowFeatureDisabled>;

        return $z0;
    }

    public static void setTranslucentWindowFeatureDisabled(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <com.jidesoft.utils.SecurityUtils: boolean _translucentWindowFeatureDisabled> = z0;

        return;
    }

    static void <clinit>()
    {
        boolean $z0, $z1, $z2;

        <com.jidesoft.utils.SecurityUtils: java.lang.String BOLD_ITALIC> = "Bold Italic";

        <com.jidesoft.utils.SecurityUtils: java.lang.String ITALIC> = "Italic";

        <com.jidesoft.utils.SecurityUtils: java.lang.String BOLD> = "Bold";

        <com.jidesoft.utils.SecurityUtils: boolean _AWTEventListenerDisabled> = 0;

        $z0 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isJdk6u10Above()>();

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isWindows()>();

        if $z1 != 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        <com.jidesoft.utils.SecurityUtils: boolean _translucentWindowFeatureDisabled> = $z2;

        return;
    }
}
