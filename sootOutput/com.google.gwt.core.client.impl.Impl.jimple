public final class com.google.gwt.core.client.impl.Impl extends java.lang.Object
{
    private static int entryDepth;
    private static int sNextHashId;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        com.google.gwt.core.client.impl.Impl r0;

        r0 := @this: com.google.gwt.core.client.impl.Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static native com.google.gwt.core.client.JavaScriptObject entry(com.google.gwt.core.client.JavaScriptObject);

    public static native int getHashCode(java.lang.Object);

    public static native java.lang.String getHostPageBaseURL();

    public static native java.lang.String getModuleBaseURL();

    public static native java.lang.String getModuleName();

    public static java.lang.String getNameOf(java.lang.String)
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.AssertionError $r1;
        java.lang.String r2;
        boolean $z0, $z1;

        r2 := @parameter0: java.lang.String;

        $z0 = <com.google.gwt.core.client.impl.Impl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <com.google.gwt.core.client.GWT: boolean isScript()>();

        if $z1 == 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>(java.lang.Object)>("ReplaceRebinds failed to replace this method");

        throw $r1;

     label1:
        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Impl.getNameOf() is unimplemented in hosted mode");

        throw $r0;
    }

    public static native java.lang.String getPermutationStrongName();

    public static boolean isEntryOnStack()
    {
        int $i0;
        boolean $z0;

        $i0 = <com.google.gwt.core.client.impl.Impl: int entryDepth>;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isNestedEntry()
    {
        int $i0;
        boolean $z0;

        $i0 = <com.google.gwt.core.client.impl.Impl: int entryDepth>;

        if $i0 <= 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static native com.google.gwt.core.client.JavaScriptObject registerEntry();

    private static native java.lang.Object apply(java.lang.Object, java.lang.Object, java.lang.Object);

    private static boolean enter()
    {
        java.lang.AssertionError $r1;
        com.google.gwt.core.client.impl.SchedulerImpl $r0;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        boolean $z0;

        $z0 = <com.google.gwt.core.client.impl.Impl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i2 = <com.google.gwt.core.client.impl.Impl: int entryDepth>;

        if $i2 >= 0 goto label1;

        $r1 = new java.lang.AssertionError;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Negative entryDepth value at entry ");

        $i3 = <com.google.gwt.core.client.impl.Impl: int entryDepth>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.AssertionError: void <init>(java.lang.Object)>($r5);

        throw $r1;

     label1:
        $i0 = <com.google.gwt.core.client.impl.Impl: int entryDepth>;

        $i1 = $i0 + 1;

        <com.google.gwt.core.client.impl.Impl: int entryDepth> = $i1;

        if $i0 != 0 goto label2;

        $r0 = <com.google.gwt.core.client.impl.SchedulerImpl: com.google.gwt.core.client.impl.SchedulerImpl INSTANCE>;

        virtualinvoke $r0.<com.google.gwt.core.client.impl.SchedulerImpl: void flushEntryCommands()>();

        return 1;

     label2:
        return 0;
    }

    private static java.lang.Object entry0(java.lang.Object, java.lang.Object, java.lang.Object) throws java.lang.Throwable
    {
        java.lang.Throwable $r6, $r7;
        com.google.gwt.core.client.GWT$UncaughtExceptionHandler $r0, $r8;
        java.lang.Object r1, r2, r3, $r4, $r5, $r9;
        boolean $z0;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $z0 = staticinvoke <com.google.gwt.core.client.impl.Impl: boolean enter()>();

     label1:
        $r0 = staticinvoke <com.google.gwt.core.client.GWT: com.google.gwt.core.client.GWT$UncaughtExceptionHandler getUncaughtExceptionHandler()>();

        if $r0 == null goto label6;

     label2:
        $r5 = staticinvoke <com.google.gwt.core.client.impl.Impl: java.lang.Object apply(java.lang.Object,java.lang.Object,java.lang.Object)>(r1, r2, r3);

     label3:
        staticinvoke <com.google.gwt.core.client.impl.Impl: void exit(boolean)>($z0);

        return $r5;

     label4:
        $r7 := @caughtexception;

        $r8 = staticinvoke <com.google.gwt.core.client.GWT: com.google.gwt.core.client.GWT$UncaughtExceptionHandler getUncaughtExceptionHandler()>();

        interfaceinvoke $r8.<com.google.gwt.core.client.GWT$UncaughtExceptionHandler: void onUncaughtException(java.lang.Throwable)>($r7);

        $r9 = staticinvoke <com.google.gwt.core.client.impl.Impl: java.lang.Object undefined()>();

     label5:
        staticinvoke <com.google.gwt.core.client.impl.Impl: void exit(boolean)>($z0);

        return $r9;

     label6:
        $r4 = staticinvoke <com.google.gwt.core.client.impl.Impl: java.lang.Object apply(java.lang.Object,java.lang.Object,java.lang.Object)>(r1, r2, r3);

     label7:
        staticinvoke <com.google.gwt.core.client.impl.Impl: void exit(boolean)>($z0);

        return $r4;

     label8:
        $r6 := @caughtexception;

     label9:
        staticinvoke <com.google.gwt.core.client.impl.Impl: void exit(boolean)>($z0);

        throw $r6;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label3 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    private static void exit(boolean)
    {
        java.lang.AssertionError $r0, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r4, $r9;
        boolean z0, $z1, $z2;
        com.google.gwt.core.client.impl.SchedulerImpl $r10;
        java.lang.StringBuilder $r1, $r2, $r3, $r6, $r7, $r8;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r10 = <com.google.gwt.core.client.impl.SchedulerImpl: com.google.gwt.core.client.impl.SchedulerImpl INSTANCE>;

        virtualinvoke $r10.<com.google.gwt.core.client.impl.SchedulerImpl: void flushFinallyCommands()>();

     label1:
        $i0 = <com.google.gwt.core.client.impl.Impl: int entryDepth>;

        $i1 = $i0 - 1;

        <com.google.gwt.core.client.impl.Impl: int entryDepth> = $i1;

        $z1 = <com.google.gwt.core.client.impl.Impl: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $i4 = <com.google.gwt.core.client.impl.Impl: int entryDepth>;

        if $i4 >= 0 goto label2;

        $r5 = new java.lang.AssertionError;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Negative entryDepth value at exit ");

        $i5 = <com.google.gwt.core.client.impl.Impl: int entryDepth>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.AssertionError: void <init>(java.lang.Object)>($r9);

        throw $r5;

     label2:
        if z0 == 0 goto label3;

        $z2 = <com.google.gwt.core.client.impl.Impl: boolean $assertionsDisabled>;

        if $z2 != 0 goto label3;

        $i2 = <com.google.gwt.core.client.impl.Impl: int entryDepth>;

        if $i2 == 0 goto label3;

        $r0 = new java.lang.AssertionError;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Depth not 0");

        $i3 = <com.google.gwt.core.client.impl.Impl: int entryDepth>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.AssertionError: void <init>(java.lang.Object)>($r4);

        throw $r0;

     label3:
        return;
    }

    private static int getNextHashId()
    {
        int $i0, $i1;

        $i0 = <com.google.gwt.core.client.impl.Impl: int sNextHashId>;

        $i1 = $i0 + 1;

        <com.google.gwt.core.client.impl.Impl: int sNextHashId> = $i1;

        return $i1;
    }

    private static native java.lang.Object undefined();

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lcom/google/gwt/core/client/impl/Impl;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.google.gwt.core.client.impl.Impl: boolean $assertionsDisabled> = $z1;

        <com.google.gwt.core.client.impl.Impl: int entryDepth> = 0;

        <com.google.gwt.core.client.impl.Impl: int sNextHashId> = 0;

        return;
    }
}
