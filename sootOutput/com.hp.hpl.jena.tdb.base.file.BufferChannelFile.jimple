public class com.hp.hpl.jena.tdb.base.file.BufferChannelFile extends java.lang.Object implements com.hp.hpl.jena.tdb.base.file.BufferChannel
{
    private com.hp.hpl.jena.tdb.base.file.FileBase file;

    public static com.hp.hpl.jena.tdb.base.file.BufferChannelFile create(java.lang.String)
    {
        com.hp.hpl.jena.tdb.base.file.FileBase $r1;
        java.lang.String r0;
        com.hp.hpl.jena.tdb.base.file.BufferChannelFile $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.hp.hpl.jena.tdb.base.file.FileBase: com.hp.hpl.jena.tdb.base.file.FileBase create(java.lang.String)>(r0);

        $r2 = new com.hp.hpl.jena.tdb.base.file.BufferChannelFile;

        specialinvoke $r2.<com.hp.hpl.jena.tdb.base.file.BufferChannelFile: void <init>(com.hp.hpl.jena.tdb.base.file.FileBase)>($r1);

        return $r2;
    }

    public static com.hp.hpl.jena.tdb.base.file.BufferChannelFile createUnmanaged(java.lang.String, java.lang.String)
    {
        java.io.RandomAccessFile $r0;
        com.hp.hpl.jena.tdb.base.file.FileBase $r4;
        java.lang.String r1, r2;
        com.hp.hpl.jena.tdb.base.file.BufferChannelFile $r5;
        java.nio.channels.FileChannel $r3;
        java.io.FileNotFoundException $r6;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

     label1:
        $r0 = new java.io.RandomAccessFile;

        specialinvoke $r0.<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        $r3 = virtualinvoke $r0.<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>();

        $r4 = staticinvoke <com.hp.hpl.jena.tdb.base.file.FileBase: com.hp.hpl.jena.tdb.base.file.FileBase createUnmanged(java.lang.String,java.nio.channels.FileChannel)>(r1, $r3);

        $r5 = new com.hp.hpl.jena.tdb.base.file.BufferChannelFile;

        specialinvoke $r5.<com.hp.hpl.jena.tdb.base.file.BufferChannelFile: void <init>(com.hp.hpl.jena.tdb.base.file.FileBase)>($r4);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        staticinvoke <org.apache.jena.atlas.io.IO: void exception(java.io.IOException)>($r6);

        return null;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
    }

    private void <init>(com.hp.hpl.jena.tdb.base.file.FileBase)
    {
        com.hp.hpl.jena.tdb.base.file.FileBase r1;
        com.hp.hpl.jena.tdb.base.file.BufferChannelFile r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BufferChannelFile;

        r1 := @parameter0: com.hp.hpl.jena.tdb.base.file.FileBase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelFile: com.hp.hpl.jena.tdb.base.file.FileBase file> = r1;

        return;
    }

    private void <init>(java.lang.String)
    {
        com.hp.hpl.jena.tdb.base.file.FileBase $r2;
        java.lang.String r1;
        com.hp.hpl.jena.tdb.base.file.BufferChannelFile r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BufferChannelFile;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.hp.hpl.jena.tdb.base.file.FileBase: com.hp.hpl.jena.tdb.base.file.FileBase create(java.lang.String)>(r1);

        r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelFile: com.hp.hpl.jena.tdb.base.file.FileBase file> = $r2;

        return;
    }

    public com.hp.hpl.jena.tdb.base.file.BufferChannel duplicate()
    {
        com.hp.hpl.jena.tdb.base.file.FileBase $r2;
        java.lang.String $r3;
        com.hp.hpl.jena.tdb.base.file.BufferChannelFile $r0, r1;

        r1 := @this: com.hp.hpl.jena.tdb.base.file.BufferChannelFile;

        $r0 = new com.hp.hpl.jena.tdb.base.file.BufferChannelFile;

        $r2 = r1.<com.hp.hpl.jena.tdb.base.file.BufferChannelFile: com.hp.hpl.jena.tdb.base.file.FileBase file>;

        $r3 = $r2.<com.hp.hpl.jena.tdb.base.file.FileBase: java.lang.String filename>;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelFile: void <init>(java.lang.String)>($r3);

        return $r0;
    }

    public long position()
    {
        com.hp.hpl.jena.tdb.base.file.FileBase $r1;
        long $l0;
        java.io.IOException $r3;
        com.hp.hpl.jena.tdb.base.file.BufferChannelFile r0;
        java.nio.channels.FileChannel $r2;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BufferChannelFile;

     label1:
        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelFile: com.hp.hpl.jena.tdb.base.file.FileBase file>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.tdb.base.file.FileBase: java.nio.channels.FileChannel channel()>();

        $l0 = virtualinvoke $r2.<java.nio.channels.FileChannel: long position()>();

     label2:
        return $l0;

     label3:
        $r3 := @caughtexception;

        staticinvoke <org.apache.jena.atlas.io.IO: void exception(java.io.IOException)>($r3);

        return -1L;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void position(long)
    {
        com.hp.hpl.jena.tdb.base.file.FileBase $r1;
        long l0;
        java.io.IOException $r3;
        com.hp.hpl.jena.tdb.base.file.BufferChannelFile r0;
        java.nio.channels.FileChannel $r2;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BufferChannelFile;

        l0 := @parameter0: long;

     label1:
        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelFile: com.hp.hpl.jena.tdb.base.file.FileBase file>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.tdb.base.file.FileBase: java.nio.channels.FileChannel channel()>();

        virtualinvoke $r2.<java.nio.channels.FileChannel: java.nio.channels.FileChannel position(long)>(l0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        staticinvoke <org.apache.jena.atlas.io.IO: void exception(java.io.IOException)>($r3);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void truncate(long)
    {
        com.hp.hpl.jena.tdb.base.file.FileBase $r1, $r3, $r5;
        long l0, $l1;
        java.io.IOException $r7;
        byte $b2;
        int $i3;
        com.hp.hpl.jena.tdb.base.file.BufferChannelFile r0;
        java.nio.channels.FileChannel $r2, $r4, $r6;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BufferChannelFile;

        l0 := @parameter0: long;

     label1:
        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelFile: com.hp.hpl.jena.tdb.base.file.FileBase file>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.tdb.base.file.FileBase: java.nio.channels.FileChannel channel()>();

        $l1 = virtualinvoke $r2.<java.nio.channels.FileChannel: long position()>();

        $b2 = l0 cmp $l1;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label2;

        $r5 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelFile: com.hp.hpl.jena.tdb.base.file.FileBase file>;

        $r6 = virtualinvoke $r5.<com.hp.hpl.jena.tdb.base.file.FileBase: java.nio.channels.FileChannel channel()>();

        virtualinvoke $r6.<java.nio.channels.FileChannel: java.nio.channels.FileChannel position(long)>(l0);

     label2:
        $r3 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelFile: com.hp.hpl.jena.tdb.base.file.FileBase file>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.tdb.base.file.FileBase: java.nio.channels.FileChannel channel()>();

        virtualinvoke $r4.<java.nio.channels.FileChannel: java.nio.channels.FileChannel truncate(long)>(l0);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        staticinvoke <org.apache.jena.atlas.io.IO: void exception(java.io.IOException)>($r7);

     label5:
        return;

        catch java.io.IOException from label1 to label3 with label4;
    }

    public int read(java.nio.ByteBuffer)
    {
        com.hp.hpl.jena.tdb.base.file.FileBase $r1;
        int $i0, $i2;
        java.io.IOException $r4;
        com.hp.hpl.jena.tdb.base.file.BufferChannelFile r0;
        java.nio.channels.FileChannel $r2;
        java.nio.ByteBuffer r3;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BufferChannelFile;

        r3 := @parameter0: java.nio.ByteBuffer;

     label1:
        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelFile: com.hp.hpl.jena.tdb.base.file.FileBase file>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.tdb.base.file.FileBase: java.nio.channels.FileChannel channel()>();

        $i0 = virtualinvoke $r2.<java.nio.channels.FileChannel: int read(java.nio.ByteBuffer)>(r3);

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        staticinvoke <org.apache.jena.atlas.io.IO: void exception(java.io.IOException)>($r4);

        $i2 = (int) -1;

        return $i2;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public int read(java.nio.ByteBuffer, long)
    {
        com.hp.hpl.jena.tdb.base.file.FileBase $r1;
        long l0;
        java.io.IOException $r4;
        java.nio.ByteBuffer r3;
        int $i1, $i3;
        com.hp.hpl.jena.tdb.base.file.BufferChannelFile r0;
        java.nio.channels.FileChannel $r2;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BufferChannelFile;

        r3 := @parameter0: java.nio.ByteBuffer;

        l0 := @parameter1: long;

     label1:
        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelFile: com.hp.hpl.jena.tdb.base.file.FileBase file>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.tdb.base.file.FileBase: java.nio.channels.FileChannel channel()>();

        $i1 = virtualinvoke $r2.<java.nio.channels.FileChannel: int read(java.nio.ByteBuffer,long)>(r3, l0);

     label2:
        return $i1;

     label3:
        $r4 := @caughtexception;

        staticinvoke <org.apache.jena.atlas.io.IO: void exception(java.io.IOException)>($r4);

        $i3 = (int) -1;

        return $i3;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public int write(java.nio.ByteBuffer)
    {
        com.hp.hpl.jena.tdb.base.file.FileBase $r1;
        int $i0, $i2;
        java.io.IOException $r4;
        com.hp.hpl.jena.tdb.base.file.BufferChannelFile r0;
        java.nio.channels.FileChannel $r2;
        java.nio.ByteBuffer r3;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BufferChannelFile;

        r3 := @parameter0: java.nio.ByteBuffer;

     label1:
        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelFile: com.hp.hpl.jena.tdb.base.file.FileBase file>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.tdb.base.file.FileBase: java.nio.channels.FileChannel channel()>();

        $i0 = virtualinvoke $r2.<java.nio.channels.FileChannel: int write(java.nio.ByteBuffer)>(r3);

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        staticinvoke <org.apache.jena.atlas.io.IO: void exception(java.io.IOException)>($r4);

        $i2 = (int) -1;

        return $i2;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public int write(java.nio.ByteBuffer, long)
    {
        com.hp.hpl.jena.tdb.base.file.FileBase $r1;
        long l0;
        java.io.IOException $r4;
        java.nio.ByteBuffer r3;
        int $i1, $i3;
        com.hp.hpl.jena.tdb.base.file.BufferChannelFile r0;
        java.nio.channels.FileChannel $r2;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BufferChannelFile;

        r3 := @parameter0: java.nio.ByteBuffer;

        l0 := @parameter1: long;

     label1:
        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelFile: com.hp.hpl.jena.tdb.base.file.FileBase file>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.tdb.base.file.FileBase: java.nio.channels.FileChannel channel()>();

        $i1 = virtualinvoke $r2.<java.nio.channels.FileChannel: int write(java.nio.ByteBuffer,long)>(r3, l0);

     label2:
        return $i1;

     label3:
        $r4 := @caughtexception;

        staticinvoke <org.apache.jena.atlas.io.IO: void exception(java.io.IOException)>($r4);

        $i3 = (int) -1;

        return $i3;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public long size()
    {
        com.hp.hpl.jena.tdb.base.file.FileBase $r1;
        long $l0;
        java.io.IOException $r3;
        com.hp.hpl.jena.tdb.base.file.BufferChannelFile r0;
        java.nio.channels.FileChannel $r2;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BufferChannelFile;

     label1:
        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelFile: com.hp.hpl.jena.tdb.base.file.FileBase file>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.tdb.base.file.FileBase: java.nio.channels.FileChannel channel()>();

        $l0 = virtualinvoke $r2.<java.nio.channels.FileChannel: long size()>();

     label2:
        return $l0;

     label3:
        $r3 := @caughtexception;

        staticinvoke <org.apache.jena.atlas.io.IO: void exception(java.io.IOException)>($r3);

        return -1L;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public boolean isEmpty()
    {
        com.hp.hpl.jena.tdb.base.file.FileBase $r1;
        byte $b1;
        long $l0;
        java.io.IOException $r3;
        com.hp.hpl.jena.tdb.base.file.BufferChannelFile r0;
        java.nio.channels.FileChannel $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BufferChannelFile;

     label1:
        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelFile: com.hp.hpl.jena.tdb.base.file.FileBase file>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.tdb.base.file.FileBase: java.nio.channels.FileChannel channel()>();

        $l0 = virtualinvoke $r2.<java.nio.channels.FileChannel: long size()>();

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;

     label4:
        $r3 := @caughtexception;

        staticinvoke <org.apache.jena.atlas.io.IO: void exception(java.io.IOException)>($r3);

        return 0;

        catch java.io.IOException from label1 to label3 with label4;
    }

    public void sync()
    {
        com.hp.hpl.jena.tdb.base.file.FileBase $r1;
        com.hp.hpl.jena.tdb.base.file.BufferChannelFile r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BufferChannelFile;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelFile: com.hp.hpl.jena.tdb.base.file.FileBase file>;

        virtualinvoke $r1.<com.hp.hpl.jena.tdb.base.file.FileBase: void sync()>();

        return;
    }

    public void close()
    {
        com.hp.hpl.jena.tdb.base.file.FileBase $r1;
        com.hp.hpl.jena.tdb.base.file.BufferChannelFile r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BufferChannelFile;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelFile: com.hp.hpl.jena.tdb.base.file.FileBase file>;

        virtualinvoke $r1.<com.hp.hpl.jena.tdb.base.file.FileBase: void close()>();

        return;
    }

    public java.lang.String getLabel()
    {
        com.hp.hpl.jena.tdb.base.file.FileBase $r1;
        java.lang.String $r2, $r3;
        com.hp.hpl.jena.tdb.base.file.BufferChannelFile r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BufferChannelFile;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelFile: com.hp.hpl.jena.tdb.base.file.FileBase file>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.tdb.base.file.FileBase: java.lang.String getFilename()>();

        $r3 = staticinvoke <org.apache.jena.atlas.lib.FileOps: java.lang.String basename(java.lang.String)>($r2);

        return $r3;
    }

    public java.lang.String toString()
    {
        com.hp.hpl.jena.tdb.base.file.FileBase $r1;
        java.lang.String $r2;
        com.hp.hpl.jena.tdb.base.file.BufferChannelFile r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BufferChannelFile;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelFile: com.hp.hpl.jena.tdb.base.file.FileBase file>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.tdb.base.file.FileBase: java.lang.String getFilename()>();

        return $r2;
    }

    public java.lang.String getFilename()
    {
        com.hp.hpl.jena.tdb.base.file.FileBase $r1;
        java.lang.String $r2;
        com.hp.hpl.jena.tdb.base.file.BufferChannelFile r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BufferChannelFile;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelFile: com.hp.hpl.jena.tdb.base.file.FileBase file>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.tdb.base.file.FileBase: java.lang.String getFilename()>();

        return $r2;
    }
}
