public class org.apache.batik.bridge.SVGFilterElementBridge extends org.apache.batik.bridge.AnimatableGenericSVGBridge implements org.apache.batik.bridge.FilterBridge, org.apache.batik.bridge.ErrorConstants
{
    protected static final java.awt.Color TRANSPARENT_BLACK;

    public void <init>()
    {
        org.apache.batik.bridge.SVGFilterElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGFilterElementBridge;

        specialinvoke r0.<org.apache.batik.bridge.AnimatableGenericSVGBridge: void <init>()>();

        return;
    }

    public java.lang.String getLocalName()
    {
        org.apache.batik.bridge.SVGFilterElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGFilterElementBridge;

        return "filter";
    }

    public org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element, org.w3c.dom.Element, org.apache.batik.gvt.GraphicsNode)
    {
        java.awt.geom.Rectangle2D $r4;
        float[] $r9;
        java.util.HashMap $r10;
        org.apache.batik.ext.awt.image.PadMode $r7;
        int $i0, $i1;
        org.apache.batik.gvt.GraphicsNode r2;
        org.apache.batik.bridge.BridgeContext r3;
        org.apache.batik.bridge.SVGFilterElementBridge r12;
        org.apache.batik.ext.awt.image.renderable.Filter $r5, $r11, r13;
        org.apache.batik.ext.awt.image.renderable.PadRable8Bit $r6;
        org.w3c.dom.Element r0, r1;
        org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit $r8;
        float $f0, $f1;

        r12 := @this: org.apache.batik.bridge.SVGFilterElementBridge;

        r3 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r0 := @parameter1: org.w3c.dom.Element;

        r1 := @parameter2: org.w3c.dom.Element;

        r2 := @parameter3: org.apache.batik.gvt.GraphicsNode;

        $r4 = staticinvoke <org.apache.batik.bridge.SVGUtilities: java.awt.geom.Rectangle2D convertFilterChainRegion(org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.bridge.BridgeContext)>(r0, r1, r2, r3);

        if $r4 != null goto label1;

        return null;

     label1:
        $r5 = interfaceinvoke r2.<org.apache.batik.gvt.GraphicsNode: org.apache.batik.ext.awt.image.renderable.Filter getGraphicsNodeRable(boolean)>(1);

        $r6 = new org.apache.batik.ext.awt.image.renderable.PadRable8Bit;

        $r7 = <org.apache.batik.ext.awt.image.PadMode: org.apache.batik.ext.awt.image.PadMode ZERO_PAD>;

        specialinvoke $r6.<org.apache.batik.ext.awt.image.renderable.PadRable8Bit: void <init>(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,org.apache.batik.ext.awt.image.PadMode)>($r5, $r4, $r7);

        $r8 = new org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit;

        specialinvoke $r8.<org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit: void <init>(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D)>($r6, $r4);

        $r9 = staticinvoke <org.apache.batik.bridge.SVGUtilities: float[] convertFilterRes(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)>(r0, r3);

        $f0 = $r9[0];

        $i0 = (int) $f0;

        interfaceinvoke $r8.<org.apache.batik.ext.awt.image.renderable.FilterChainRable: void setFilterResolutionX(int)>($i0);

        $f1 = $r9[1];

        $i1 = (int) $f1;

        interfaceinvoke $r8.<org.apache.batik.ext.awt.image.renderable.FilterChainRable: void setFilterResolutionY(int)>($i1);

        $r10 = new java.util.HashMap;

        specialinvoke $r10.<java.util.HashMap: void <init>(int)>(11);

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("SourceGraphic", $r6);

        $r11 = staticinvoke <org.apache.batik.bridge.SVGFilterElementBridge: org.apache.batik.ext.awt.image.renderable.Filter buildFilterPrimitives(org.w3c.dom.Element,java.awt.geom.Rectangle2D,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)>(r0, $r4, r1, r2, $r6, $r10, r3);

        r13 = $r11;

        if $r11 != null goto label2;

        return null;

     label2:
        if $r11 != $r6 goto label3;

        r13 = staticinvoke <org.apache.batik.bridge.SVGFilterElementBridge: org.apache.batik.ext.awt.image.renderable.Filter createEmptyFilter(org.w3c.dom.Element,java.awt.geom.Rectangle2D,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.bridge.BridgeContext)>(r0, $r4, r1, r2, r3);

     label3:
        interfaceinvoke $r8.<org.apache.batik.ext.awt.image.renderable.FilterChainRable: void setSource(org.apache.batik.ext.awt.image.renderable.Filter)>(r13);

        return $r8;
    }

    protected static org.apache.batik.ext.awt.image.renderable.Filter createEmptyFilter(org.w3c.dom.Element, java.awt.geom.Rectangle2D, org.w3c.dom.Element, org.apache.batik.gvt.GraphicsNode, org.apache.batik.bridge.BridgeContext)
    {
        java.awt.Color $r7;
        org.apache.batik.gvt.GraphicsNode r2;
        java.awt.geom.Rectangle2D r3, $r5;
        org.apache.batik.bridge.BridgeContext r4;
        org.w3c.dom.Element r0, r1;
        org.apache.batik.ext.awt.image.renderable.FloodRable8Bit $r6;

        r0 := @parameter0: org.w3c.dom.Element;

        r3 := @parameter1: java.awt.geom.Rectangle2D;

        r1 := @parameter2: org.w3c.dom.Element;

        r2 := @parameter3: org.apache.batik.gvt.GraphicsNode;

        r4 := @parameter4: org.apache.batik.bridge.BridgeContext;

        $r5 = staticinvoke <org.apache.batik.bridge.SVGUtilities: java.awt.geom.Rectangle2D convertFilterPrimitiveRegion(org.w3c.dom.Element,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.apache.batik.bridge.BridgeContext)>(null, r0, r1, r2, r3, r3, r4);

        $r6 = new org.apache.batik.ext.awt.image.renderable.FloodRable8Bit;

        $r7 = <org.apache.batik.bridge.SVGFilterElementBridge: java.awt.Color TRANSPARENT_BLACK>;

        specialinvoke $r6.<org.apache.batik.ext.awt.image.renderable.FloodRable8Bit: void <init>(java.awt.geom.Rectangle2D,java.awt.Paint)>($r5, $r7);

        return $r6;
    }

    protected static org.apache.batik.ext.awt.image.renderable.Filter buildFilterPrimitives(org.w3c.dom.Element, java.awt.geom.Rectangle2D, org.w3c.dom.Element, org.apache.batik.gvt.GraphicsNode, org.apache.batik.ext.awt.image.renderable.Filter, java.util.Map, org.apache.batik.bridge.BridgeContext)
    {
        java.lang.Object[] $r14;
        java.net.URL $r12;
        java.awt.geom.Rectangle2D r1;
        org.w3c.dom.Document $r9;
        java.util.Map r5;
        int $i0;
        java.lang.String $r8;
        java.util.LinkedList $r0;
        boolean $z0;
        org.apache.batik.gvt.GraphicsNode r3;
        org.apache.batik.bridge.BridgeException $r13;
        org.apache.batik.bridge.BridgeContext r6;
        org.apache.batik.ext.awt.image.renderable.Filter r4, $r7;
        org.apache.batik.dom.svg.SVGOMDocument r10;
        org.w3c.dom.Element r2, r15;
        org.apache.batik.util.ParsedURL $r11;

        r15 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.awt.geom.Rectangle2D;

        r2 := @parameter2: org.w3c.dom.Element;

        r3 := @parameter3: org.apache.batik.gvt.GraphicsNode;

        r4 := @parameter4: org.apache.batik.ext.awt.image.renderable.Filter;

        r5 := @parameter5: java.util.Map;

        r6 := @parameter6: org.apache.batik.bridge.BridgeContext;

        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>()>();

        goto label1;

     label1:
        $r7 = staticinvoke <org.apache.batik.bridge.SVGFilterElementBridge: org.apache.batik.ext.awt.image.renderable.Filter buildLocalFilterPrimitives(org.w3c.dom.Element,java.awt.geom.Rectangle2D,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)>(r15, r1, r2, r3, r4, r5, r6);

        if $r7 == r4 goto label2;

        return $r7;

     label2:
        $r8 = staticinvoke <org.apache.batik.dom.util.XLinkSupport: java.lang.String getXLinkHref(org.w3c.dom.Element)>(r15);

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

        return r4;

     label3:
        $r9 = interfaceinvoke r15.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        r10 = (org.apache.batik.dom.svg.SVGOMDocument) $r9;

        $r11 = new org.apache.batik.util.ParsedURL;

        $r12 = virtualinvoke r10.<org.apache.batik.dom.svg.SVGOMDocument: java.net.URL getURLObject()>();

        specialinvoke $r11.<org.apache.batik.util.ParsedURL: void <init>(java.net.URL,java.lang.String)>($r12, $r8);

        $z0 = interfaceinvoke $r0.<java.util.List: boolean contains(java.lang.Object)>($r11);

        if $z0 == 0 goto label4;

        $r13 = new org.apache.batik.bridge.BridgeException;

        $r14 = newarray (java.lang.Object)[1];

        $r14[0] = $r8;

        specialinvoke $r13.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>(r6, r15, "xlink.href.circularDependencies", $r14);

        throw $r13;

     label4:
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r11);

        r15 = virtualinvoke r6.<org.apache.batik.bridge.BridgeContext: org.w3c.dom.Element getReferencedElement(org.w3c.dom.Element,java.lang.String)>(r15, $r8);

        goto label1;
    }

    protected static org.apache.batik.ext.awt.image.renderable.Filter buildLocalFilterPrimitives(org.w3c.dom.Element, java.awt.geom.Rectangle2D, org.w3c.dom.Element, org.apache.batik.gvt.GraphicsNode, org.apache.batik.ext.awt.image.renderable.Filter, java.util.Map, org.apache.batik.bridge.BridgeContext)
    {
        org.apache.batik.bridge.FilterPrimitiveBridge r4;
        org.apache.batik.gvt.GraphicsNode r6;
        java.awt.geom.Rectangle2D r7;
        org.apache.batik.bridge.BridgeContext r2;
        org.apache.batik.ext.awt.image.renderable.Filter $r9, r10;
        org.apache.batik.bridge.Bridge $r3;
        short $s0;
        org.w3c.dom.Element r0, r1, r5;
        java.util.Map r8;
        org.w3c.dom.Node r11;
        boolean $z0;

        r0 := @parameter0: org.w3c.dom.Element;

        r7 := @parameter1: java.awt.geom.Rectangle2D;

        r5 := @parameter2: org.w3c.dom.Element;

        r6 := @parameter3: org.apache.batik.gvt.GraphicsNode;

        r10 := @parameter4: org.apache.batik.ext.awt.image.renderable.Filter;

        r8 := @parameter5: java.util.Map;

        r2 := @parameter6: org.apache.batik.bridge.BridgeContext;

        r11 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        goto label6;

     label1:
        $s0 = interfaceinvoke r11.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 == 1 goto label2;

        goto label5;

     label2:
        r1 = (org.w3c.dom.Element) r11;

        $r3 = virtualinvoke r2.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.Bridge getBridge(org.w3c.dom.Element)>(r1);

        if $r3 == null goto label5;

        $z0 = $r3 instanceof org.apache.batik.bridge.FilterPrimitiveBridge;

        if $z0 != 0 goto label3;

        goto label5;

     label3:
        r4 = (org.apache.batik.bridge.FilterPrimitiveBridge) $r3;

        $r9 = interfaceinvoke r4.<org.apache.batik.bridge.FilterPrimitiveBridge: org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map)>(r2, r1, r5, r6, r10, r7, r8);

        if $r9 != null goto label4;

        return null;

     label4:
        r10 = $r9;

     label5:
        r11 = interfaceinvoke r11.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label6:
        if r11 != null goto label1;

        return r10;
    }

    static void <clinit>()
    {
        java.awt.Color $r0;

        $r0 = new java.awt.Color;

        specialinvoke $r0.<java.awt.Color: void <init>(int,boolean)>(0, 1);

        <org.apache.batik.bridge.SVGFilterElementBridge: java.awt.Color TRANSPARENT_BLACK> = $r0;

        return;
    }
}
