public class org.eclipse.jdt.internal.compiler.ast.LongLiteral extends org.eclipse.jdt.internal.compiler.ast.NumberLiteral
{
    static final org.eclipse.jdt.internal.compiler.impl.Constant FORMAT_ERROR;

    static void <clinit>()
    {
        org.eclipse.jdt.internal.compiler.impl.Constant $r0;

        $r0 = staticinvoke <org.eclipse.jdt.internal.compiler.impl.DoubleConstant: org.eclipse.jdt.internal.compiler.impl.Constant fromValue(double)>(#Infinity);

        <org.eclipse.jdt.internal.compiler.ast.LongLiteral: org.eclipse.jdt.internal.compiler.impl.Constant FORMAT_ERROR> = $r0;

        return;
    }

    public void <init>(char[], int, int)
    {
        int i0, i1;
        org.eclipse.jdt.internal.compiler.ast.LongLiteral r0;
        char[] r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.LongLiteral;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.NumberLiteral: void <init>(char[],int,int)>(r1, i0, i1);

        return;
    }

    public void computeConstant()
    {
        byte $b5, $b8, $b10, b22, b24, b31, b32, b33, b34;
        org.eclipse.jdt.internal.compiler.impl.Constant $r4, $r7, $r10, $r11, $r13;
        org.eclipse.jdt.internal.compiler.ast.LongLiteral r0;
        long $l6, $l7, $l9, $l19, $l20, l27, l29, l30;
        int $i0, i1, $i4, $i14, $i15, $i17, $i18, i23, i25, i26, i28, $i35, $i36, $i37, $i38, $i39, $i40, $i41;
        char $c2, $c3, $c11, $c12, $c13, $c16, $c21;
        char[] $r1, $r2, $r3, $r5, $r6, $r8, $r9, $r12;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.LongLiteral;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: char[] source>;

        $i0 = lengthof $r1;

        i1 = $i0 - 1;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: char[] source>;

        $c2 = $r2[0];

        $i35 = (int) $c2;

        if $i35 != 48 goto label16;

        if i1 != 1 goto label01;

        $r13 = staticinvoke <org.eclipse.jdt.internal.compiler.impl.LongConstant: org.eclipse.jdt.internal.compiler.impl.Constant fromValue(long)>(0L);

        r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r13;

        return;

     label01:
        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: char[] source>;

        $c11 = $r5[1];

        $i36 = (int) $c11;

        if $i36 == 120 goto label02;

        $r12 = r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: char[] source>;

        $c21 = $r12[1];

        $i37 = (int) $c21;

        if $i37 != 88 goto label03;

     label02:
        b22 = 4;

        b34 = 4;

        b33 = 4;

        i23 = 2;

        b24 = 16;

        b32 = 16;

        b31 = 16;

        goto label04;

     label03:
        b22 = 3;

        b34 = 3;

        b33 = 3;

        i23 = 1;

        b24 = 8;

        b32 = 8;

        b31 = 8;

     label04:
        goto label06;

     label05:
        i23 = i23 + 1;

        if i23 != i1 goto label06;

        $r7 = staticinvoke <org.eclipse.jdt.internal.compiler.impl.LongConstant: org.eclipse.jdt.internal.compiler.impl.Constant fromValue(long)>(0L);

        r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r7;

        return;

     label06:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: char[] source>;

        $c12 = $r6[i23];

        $i38 = (int) $c12;

        if $i38 == 48 goto label05;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: char[] source>;

        i25 = i23 + 1;

        $c13 = $r8[i23];

        $i14 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int digit(char,int)>($c13, b31);

        if $i14 >= 0 goto label07;

        $r11 = <org.eclipse.jdt.internal.compiler.ast.LongLiteral: org.eclipse.jdt.internal.compiler.impl.Constant FORMAT_ERROR>;

        r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r11;

        return;

     label07:
        if $i14 < 8 goto label08;

        i26 = 4;

        goto label11;

     label08:
        if $i14 < 4 goto label09;

        i26 = 3;

        goto label11;

     label09:
        if $i14 < 2 goto label10;

        i26 = 2;

        goto label11;

     label10:
        i26 = 1;

     label11:
        l27 = (long) $i14;

        goto label15;

     label12:
        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: char[] source>;

        $i15 = i25;

        i25 = i25 + 1;

        $c16 = $r9[$i15];

        $i17 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int digit(char,int)>($c16, b32);

        if $i17 >= 0 goto label13;

        $r10 = <org.eclipse.jdt.internal.compiler.ast.LongLiteral: org.eclipse.jdt.internal.compiler.impl.Constant FORMAT_ERROR>;

        r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r10;

        return;

     label13:
        $i18 = i26 + b33;

        i26 = $i18;

        if $i18 <= 64 goto label14;

        return;

     label14:
        $l20 = l27 << b34;

        $l19 = (long) $i17;

        l27 = $l20 | $l19;

     label15:
        if i25 < i1 goto label12;

        goto label23;

     label16:
        l27 = 0L;

        i28 = 0;

        goto label22;

     label17:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: char[] source>;

        $c3 = $r3[i28];

        $i4 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int digit(char,int)>($c3, 10);

        if $i4 >= 0 goto label18;

        return;

     label18:
        l29 = l27;

        $b5 = l27 cmp 922337203685477580L;

        $i39 = (int) $b5;

        if $i39 <= 0 goto label19;

        return;

     label19:
        l30 = l27 * 10L;

        $l6 = (long) $i4;

        $l7 = l30 + $l6;

        $b8 = $l7 cmp 9223372036854775807L;

        $i40 = (int) $b8;

        if $i40 <= 0 goto label20;

        return;

     label20:
        $l9 = (long) $i4;

        l27 = l30 + $l9;

        $b10 = l29 cmp l27;

        $i41 = (int) $b10;

        if $i41 <= 0 goto label21;

        return;

     label21:
        i28 = i28 + 1;

     label22:
        if i28 < i1 goto label17;

     label23:
        $r4 = staticinvoke <org.eclipse.jdt.internal.compiler.impl.LongConstant: org.eclipse.jdt.internal.compiler.impl.Constant fromValue(long)>(l27);

        r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r4;

        return;
    }

    public void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.codegen.CodeStream, boolean)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r3;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.ast.LongLiteral r1;
        org.eclipse.jdt.internal.compiler.impl.Constant $r2;
        int i0, $i1, $i2;
        boolean z0;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.LongLiteral;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        z0 := @parameter2: boolean;

        i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        if z0 == 0 goto label1;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $i2 = r1.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: int implicitConversion>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateConstant(org.eclipse.jdt.internal.compiler.impl.Constant,int)>($r2, $i2);

     label1:
        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: int sourceStart>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i0, $i1);

        return;
    }

    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding literalType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r0;
        org.eclipse.jdt.internal.compiler.ast.LongLiteral r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.LongLiteral;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $r0 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding LONG>;

        return $r0;
    }

    public final boolean mayRepresentMIN_VALUE()
    {
        org.eclipse.jdt.internal.compiler.ast.LongLiteral r0;
        int $i0, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41;
        char $c1, $c2, $c3, $c4, $c5, $c6, $c7, $c8, $c9, $c10, $c11, $c12, $c13, $c14, $c15, $c16, $c17, $c18, $c19;
        char[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.LongLiteral;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: char[] source>;

        $i0 = lengthof $r1;

        if $i0 != 20 goto label1;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: char[] source>;

        $c1 = $r2[0];

        $i23 = (int) $c1;

        if $i23 != 57 goto label1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: char[] source>;

        $c2 = $r3[1];

        $i24 = (int) $c2;

        if $i24 != 50 goto label1;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: char[] source>;

        $c3 = $r4[2];

        $i25 = (int) $c3;

        if $i25 != 50 goto label1;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: char[] source>;

        $c4 = $r5[3];

        $i26 = (int) $c4;

        if $i26 != 51 goto label1;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: char[] source>;

        $c5 = $r6[4];

        $i27 = (int) $c5;

        if $i27 != 51 goto label1;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: char[] source>;

        $c6 = $r7[5];

        $i28 = (int) $c6;

        if $i28 != 55 goto label1;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: char[] source>;

        $c7 = $r8[6];

        $i29 = (int) $c7;

        if $i29 != 50 goto label1;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: char[] source>;

        $c8 = $r9[7];

        $i30 = (int) $c8;

        if $i30 != 48 goto label1;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: char[] source>;

        $c9 = $r10[8];

        $i31 = (int) $c9;

        if $i31 != 51 goto label1;

        $r11 = r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: char[] source>;

        $c10 = $r11[9];

        $i32 = (int) $c10;

        if $i32 != 54 goto label1;

        $r12 = r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: char[] source>;

        $c11 = $r12[10];

        $i33 = (int) $c11;

        if $i33 != 56 goto label1;

        $r13 = r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: char[] source>;

        $c12 = $r13[11];

        $i34 = (int) $c12;

        if $i34 != 53 goto label1;

        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: char[] source>;

        $c13 = $r14[12];

        $i35 = (int) $c13;

        if $i35 != 52 goto label1;

        $r15 = r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: char[] source>;

        $c14 = $r15[13];

        $i36 = (int) $c14;

        if $i36 != 55 goto label1;

        $r16 = r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: char[] source>;

        $c15 = $r16[14];

        $i37 = (int) $c15;

        if $i37 != 55 goto label1;

        $r17 = r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: char[] source>;

        $c16 = $r17[15];

        $i38 = (int) $c16;

        if $i38 != 53 goto label1;

        $r18 = r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: char[] source>;

        $c17 = $r18[16];

        $i39 = (int) $c17;

        if $i39 != 56 goto label1;

        $r19 = r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: char[] source>;

        $c18 = $r19[17];

        $i40 = (int) $c18;

        if $i40 != 48 goto label1;

        $r20 = r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: char[] source>;

        $c19 = $r20[18];

        $i41 = (int) $c19;

        if $i41 != 56 goto label1;

        $i20 = r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: int bits>;

        $i21 = $i20 & 534773760;

        $i22 = $i21 >> 21;

        if $i22 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.impl.Constant $r3, $r4, $r5;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r6;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r2;
        org.eclipse.jdt.internal.compiler.ast.LongLiteral r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.LongLiteral;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $r2 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.NumberLiteral: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1);

        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r3 = <org.eclipse.jdt.internal.compiler.ast.LongLiteral: org.eclipse.jdt.internal.compiler.impl.Constant FORMAT_ERROR>;

        if $r4 != $r3 goto label1;

        $r5 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r5;

        $r6 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void constantOutOfFormat(org.eclipse.jdt.internal.compiler.ast.NumberLiteral)>(r0);

        r0.<org.eclipse.jdt.internal.compiler.ast.LongLiteral: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType> = null;

        return null;

     label1:
        return $r2;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.LongLiteral r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.LongLiteral;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.LongLiteral,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.LongLiteral,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        return;
    }
}
