class com.google.inject.internal.InjectorShell$InjectorFactory extends java.lang.Object implements com.google.inject.internal.InternalFactory, com.google.inject.Provider
{
    private final com.google.inject.Injector injector;

    private void <init>(com.google.inject.Injector)
    {
        com.google.inject.Injector r1;
        com.google.inject.internal.InjectorShell$InjectorFactory r0;

        r0 := @this: com.google.inject.internal.InjectorShell$InjectorFactory;

        r1 := @parameter0: com.google.inject.Injector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.inject.internal.InjectorShell$InjectorFactory: com.google.inject.Injector injector> = r1;

        return;
    }

    public com.google.inject.Injector get(com.google.inject.internal.Errors, com.google.inject.internal.InternalContext, com.google.inject.spi.Dependency, boolean) throws com.google.inject.internal.ErrorsException
    {
        com.google.inject.Injector $r1;
        com.google.inject.internal.Errors r2;
        com.google.inject.internal.InjectorShell$InjectorFactory r0;
        com.google.inject.internal.InternalContext r3;
        com.google.inject.spi.Dependency r4;
        boolean z0;

        r0 := @this: com.google.inject.internal.InjectorShell$InjectorFactory;

        r2 := @parameter0: com.google.inject.internal.Errors;

        r3 := @parameter1: com.google.inject.internal.InternalContext;

        r4 := @parameter2: com.google.inject.spi.Dependency;

        z0 := @parameter3: boolean;

        $r1 = r0.<com.google.inject.internal.InjectorShell$InjectorFactory: com.google.inject.Injector injector>;

        return $r1;
    }

    public com.google.inject.Injector get()
    {
        com.google.inject.Injector $r1;
        com.google.inject.internal.InjectorShell$InjectorFactory r0;

        r0 := @this: com.google.inject.internal.InjectorShell$InjectorFactory;

        $r1 = r0.<com.google.inject.internal.InjectorShell$InjectorFactory: com.google.inject.Injector injector>;

        return $r1;
    }

    public java.lang.String toString()
    {
        com.google.inject.internal.InjectorShell$InjectorFactory r0;

        r0 := @this: com.google.inject.internal.InjectorShell$InjectorFactory;

        return "Provider<Injector>";
    }

    public volatile java.lang.Object get(com.google.inject.internal.Errors, com.google.inject.internal.InternalContext, com.google.inject.spi.Dependency, boolean) throws com.google.inject.internal.ErrorsException
    {
        com.google.inject.Injector $r4;
        com.google.inject.internal.Errors r1;
        com.google.inject.internal.InjectorShell$InjectorFactory r0;
        com.google.inject.internal.InternalContext r2;
        com.google.inject.spi.Dependency r3;
        boolean z0;

        r0 := @this: com.google.inject.internal.InjectorShell$InjectorFactory;

        r1 := @parameter0: com.google.inject.internal.Errors;

        r2 := @parameter1: com.google.inject.internal.InternalContext;

        r3 := @parameter2: com.google.inject.spi.Dependency;

        z0 := @parameter3: boolean;

        $r4 = virtualinvoke r0.<com.google.inject.internal.InjectorShell$InjectorFactory: com.google.inject.Injector get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency,boolean)>(r1, r2, r3, z0);

        return $r4;
    }

    public volatile java.lang.Object get()
    {
        com.google.inject.Injector $r1;
        com.google.inject.internal.InjectorShell$InjectorFactory r0;

        r0 := @this: com.google.inject.internal.InjectorShell$InjectorFactory;

        $r1 = virtualinvoke r0.<com.google.inject.internal.InjectorShell$InjectorFactory: com.google.inject.Injector get()>();

        return $r1;
    }

    void <init>(com.google.inject.Injector, com.google.inject.internal.InjectorShell$1)
    {
        com.google.inject.Injector r1;
        com.google.inject.internal.InjectorShell$1 r2;
        com.google.inject.internal.InjectorShell$InjectorFactory r0;

        r0 := @this: com.google.inject.internal.InjectorShell$InjectorFactory;

        r1 := @parameter0: com.google.inject.Injector;

        r2 := @parameter1: com.google.inject.internal.InjectorShell$1;

        specialinvoke r0.<com.google.inject.internal.InjectorShell$InjectorFactory: void <init>(com.google.inject.Injector)>(r1);

        return;
    }
}
