public abstract class org.apache.batik.css.parser.AbstractElementSelector extends java.lang.Object implements org.w3c.css.sac.ElementSelector
{
    protected java.lang.String namespaceURI;
    protected java.lang.String localName;

    protected void <init>(java.lang.String, java.lang.String)
    {
        org.apache.batik.css.parser.AbstractElementSelector r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.batik.css.parser.AbstractElementSelector;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.css.parser.AbstractElementSelector: java.lang.String namespaceURI> = r1;

        r0.<org.apache.batik.css.parser.AbstractElementSelector: java.lang.String localName> = r2;

        return;
    }

    public java.lang.String getNamespaceURI()
    {
        org.apache.batik.css.parser.AbstractElementSelector r0;
        java.lang.String $r1;

        r0 := @this: org.apache.batik.css.parser.AbstractElementSelector;

        $r1 = r0.<org.apache.batik.css.parser.AbstractElementSelector: java.lang.String namespaceURI>;

        return $r1;
    }

    public java.lang.String getLocalName()
    {
        org.apache.batik.css.parser.AbstractElementSelector r0;
        java.lang.String $r1;

        r0 := @this: org.apache.batik.css.parser.AbstractElementSelector;

        $r1 = r0.<org.apache.batik.css.parser.AbstractElementSelector: java.lang.String localName>;

        return $r1;
    }

    public abstract short getSelectorType();
}
