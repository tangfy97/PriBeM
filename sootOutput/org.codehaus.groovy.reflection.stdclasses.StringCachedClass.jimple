public class org.codehaus.groovy.reflection.stdclasses.StringCachedClass extends org.codehaus.groovy.reflection.CachedClass
{
    private static final java.lang.Class STRING_CLASS;
    private static final java.lang.Class GSTRING_CLASS;
    static java.lang.Class class$java$lang$String;
    static java.lang.Class class$groovy$lang$GString;

    public void <init>()
    {
        org.codehaus.groovy.reflection.stdclasses.StringCachedClass r0;
        java.lang.Class $r1;

        r0 := @this: org.codehaus.groovy.reflection.stdclasses.StringCachedClass;

        $r1 = <org.codehaus.groovy.reflection.stdclasses.StringCachedClass: java.lang.Class STRING_CLASS>;

        specialinvoke r0.<org.codehaus.groovy.reflection.CachedClass: void <init>(java.lang.Class)>($r1);

        return;
    }

    public boolean isDirectlyAssignable(java.lang.Object)
    {
        org.codehaus.groovy.reflection.stdclasses.StringCachedClass r1;
        java.lang.Object r0;
        boolean $z0;

        r1 := @this: org.codehaus.groovy.reflection.stdclasses.StringCachedClass;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.String;

        return $z0;
    }

    public boolean isAssignableFrom(java.lang.Class)
    {
        org.codehaus.groovy.reflection.stdclasses.StringCachedClass r3;
        java.lang.Class r0, $r1, $r2;
        boolean $z0, $z1;

        r3 := @this: org.codehaus.groovy.reflection.stdclasses.StringCachedClass;

        r0 := @parameter0: java.lang.Class;

        if r0 == null goto label1;

        $r1 = <org.codehaus.groovy.reflection.stdclasses.StringCachedClass: java.lang.Class STRING_CLASS>;

        if r0 == $r1 goto label1;

        $r2 = <org.codehaus.groovy.reflection.stdclasses.StringCachedClass: java.lang.Class GSTRING_CLASS>;

        $z0 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: boolean isAssignableFrom(java.lang.Class,java.lang.Class)>($r2, r0);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public java.lang.Object coerceArgument(java.lang.Object)
    {
        org.codehaus.groovy.reflection.stdclasses.StringCachedClass r1;
        java.lang.Object r0, $r2;
        boolean $z0;

        r1 := @this: org.codehaus.groovy.reflection.stdclasses.StringCachedClass;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof groovy.lang.GString;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        goto label2;

     label1:
        $r2 = r0;

     label2:
        return $r2;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r1, $r2, $r3;

        $r0 = <org.codehaus.groovy.reflection.stdclasses.StringCachedClass: java.lang.Class class$java$lang$String>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <org.codehaus.groovy.reflection.stdclasses.StringCachedClass: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.codehaus.groovy.reflection.stdclasses.StringCachedClass: java.lang.Class class$java$lang$String> = $r2;

        goto label2;

     label1:
        $r2 = <org.codehaus.groovy.reflection.stdclasses.StringCachedClass: java.lang.Class class$java$lang$String>;

     label2:
        <org.codehaus.groovy.reflection.stdclasses.StringCachedClass: java.lang.Class STRING_CLASS> = $r2;

        $r1 = <org.codehaus.groovy.reflection.stdclasses.StringCachedClass: java.lang.Class class$groovy$lang$GString>;

        if $r1 != null goto label3;

        $r3 = staticinvoke <org.codehaus.groovy.reflection.stdclasses.StringCachedClass: java.lang.Class class$(java.lang.String)>("groovy.lang.GString");

        <org.codehaus.groovy.reflection.stdclasses.StringCachedClass: java.lang.Class class$groovy$lang$GString> = $r3;

        goto label4;

     label3:
        $r3 = <org.codehaus.groovy.reflection.stdclasses.StringCachedClass: java.lang.Class class$groovy$lang$GString>;

     label4:
        <org.codehaus.groovy.reflection.stdclasses.StringCachedClass: java.lang.Class GSTRING_CLASS> = $r3;

        return;
    }
}
