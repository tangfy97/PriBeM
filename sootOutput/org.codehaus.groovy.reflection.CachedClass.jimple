public class org.codehaus.groovy.reflection.CachedClass extends java.lang.Object
{
    private org.codehaus.groovy.reflection.CachedClass cachedSuperClass;
    private static final groovy.lang.MetaMethod[] EMPTY;
    int hashCode;
    private org.codehaus.groovy.runtime.Reflector reflector;
    private volatile java.lang.Object metaClassForClass;
    private org.codehaus.groovy.reflection.CachedField[] fields;
    private org.codehaus.groovy.reflection.CachedConstructor[] constructors;
    private org.codehaus.groovy.reflection.CachedMethod[] methods;
    private final java.lang.Class cachedClass;
    private groovy.lang.MetaMethod[] newMetaMethods;
    public org.codehaus.groovy.reflection.CachedMethod[] mopMethods;
    public static final org.codehaus.groovy.reflection.CachedClass[] EMPTY_ARRAY;
    private java.lang.Object staticMetaClassField;
    private static final java.lang.Object NONE;
    private java.util.Set ownInterfaces;
    private java.util.Set interfaces;
    public final boolean isArray;
    public final boolean isPrimitive;
    public final int modifiers;
    int distance;
    public final boolean isInterface;
    public final boolean isNumber;
    static java.lang.Class class$java$lang$Number;
    static java.lang.Class class$java$lang$Object;
    static java.lang.Class class$groovy$lang$MetaClass;

    public java.util.Set getInterfaces()
    {
        java.util.HashSet $r2;
        int i0, $i1;
        boolean $z0, $z1;
        java.util.Set $r1, $r7, $r8, $r11, $r12, $r13, $r14, $r15;
        java.lang.Class[] $r5;
        org.codehaus.groovy.reflection.CachedClass r0, $r6, $r10;
        java.lang.Class $r3, $r4, $r9;

        r0 := @this: org.codehaus.groovy.reflection.CachedClass;

        $r1 = r0.<org.codehaus.groovy.reflection.CachedClass: java.util.Set interfaces>;

        if $r1 != null goto label5;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>(int)>(0);

        r0.<org.codehaus.groovy.reflection.CachedClass: java.util.Set interfaces> = $r2;

        $r3 = virtualinvoke r0.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isInterface()>();

        if $z0 == 0 goto label1;

        $r14 = r0.<org.codehaus.groovy.reflection.CachedClass: java.util.Set interfaces>;

        interfaceinvoke $r14.<java.util.Set: boolean add(java.lang.Object)>(r0);

     label1:
        $r4 = virtualinvoke r0.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        i0 = 0;

     label2:
        $i1 = lengthof $r5;

        if i0 >= $i1 goto label4;

        $r9 = $r5[i0];

        $r10 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.CachedClass getCachedClass(java.lang.Class)>($r9);

        $r11 = r0.<org.codehaus.groovy.reflection.CachedClass: java.util.Set interfaces>;

        $z1 = interfaceinvoke $r11.<java.util.Set: boolean contains(java.lang.Object)>($r10);

        if $z1 != 0 goto label3;

        $r12 = r0.<org.codehaus.groovy.reflection.CachedClass: java.util.Set interfaces>;

        $r13 = virtualinvoke $r10.<org.codehaus.groovy.reflection.CachedClass: java.util.Set getInterfaces()>();

        interfaceinvoke $r12.<java.util.Set: boolean addAll(java.util.Collection)>($r13);

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        $r6 = virtualinvoke r0.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedClass getCachedSuperClass()>();

        if $r6 == null goto label5;

        $r7 = r0.<org.codehaus.groovy.reflection.CachedClass: java.util.Set interfaces>;

        $r8 = virtualinvoke $r6.<org.codehaus.groovy.reflection.CachedClass: java.util.Set getInterfaces()>();

        interfaceinvoke $r7.<java.util.Set: boolean addAll(java.util.Collection)>($r8);

     label5:
        $r15 = r0.<org.codehaus.groovy.reflection.CachedClass: java.util.Set interfaces>;

        return $r15;
    }

    public java.util.Set getOwnInterfaces()
    {
        java.util.HashSet $r2;
        int i0, $i1;
        boolean $z0, $z1;
        java.util.Set $r1, $r7, $r8, $r11, $r12, $r13, $r14, $r15;
        java.lang.Class[] $r5;
        org.codehaus.groovy.reflection.CachedClass r0, $r6, $r10;
        java.lang.Class $r3, $r4, $r9;

        r0 := @this: org.codehaus.groovy.reflection.CachedClass;

        $r1 = r0.<org.codehaus.groovy.reflection.CachedClass: java.util.Set ownInterfaces>;

        if $r1 != null goto label5;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>(int)>(0);

        r0.<org.codehaus.groovy.reflection.CachedClass: java.util.Set ownInterfaces> = $r2;

        $r3 = virtualinvoke r0.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isInterface()>();

        if $z0 == 0 goto label1;

        $r14 = r0.<org.codehaus.groovy.reflection.CachedClass: java.util.Set ownInterfaces>;

        interfaceinvoke $r14.<java.util.Set: boolean add(java.lang.Object)>(r0);

     label1:
        $r4 = virtualinvoke r0.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        i0 = 0;

     label2:
        $i1 = lengthof $r5;

        if i0 >= $i1 goto label4;

        $r9 = $r5[i0];

        $r10 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.CachedClass getCachedClass(java.lang.Class)>($r9);

        $r11 = r0.<org.codehaus.groovy.reflection.CachedClass: java.util.Set ownInterfaces>;

        $z1 = interfaceinvoke $r11.<java.util.Set: boolean contains(java.lang.Object)>($r10);

        if $z1 != 0 goto label3;

        $r12 = r0.<org.codehaus.groovy.reflection.CachedClass: java.util.Set ownInterfaces>;

        $r13 = virtualinvoke $r10.<org.codehaus.groovy.reflection.CachedClass: java.util.Set getInterfaces()>();

        interfaceinvoke $r12.<java.util.Set: boolean addAll(java.util.Collection)>($r13);

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        $r6 = virtualinvoke r0.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedClass getCachedSuperClass()>();

        if $r6 == null goto label5;

        $r7 = r0.<org.codehaus.groovy.reflection.CachedClass: java.util.Set ownInterfaces>;

        $r8 = virtualinvoke $r6.<org.codehaus.groovy.reflection.CachedClass: java.util.Set getInterfaces()>();

        interfaceinvoke $r7.<java.util.Set: boolean addAll(java.util.Collection)>($r8);

     label5:
        $r15 = r0.<org.codehaus.groovy.reflection.CachedClass: java.util.Set ownInterfaces>;

        return $r15;
    }

    public void <init>(java.lang.Class)
    {
        groovy.lang.MetaMethod[] $r1;
        org.codehaus.groovy.reflection.CachedClass r0;
        int $i0, $i2;
        java.lang.Class r2, $r3, $r4;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.codehaus.groovy.reflection.CachedClass;

        r2 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <org.codehaus.groovy.reflection.CachedClass: groovy.lang.MetaMethod[] EMPTY>;

        r0.<org.codehaus.groovy.reflection.CachedClass: groovy.lang.MetaMethod[] newMetaMethods> = $r1;

        $i2 = (int) -1;

        r0.<org.codehaus.groovy.reflection.CachedClass: int distance> = $i2;

        r0.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class cachedClass> = r2;

        $z0 = virtualinvoke r2.<java.lang.Class: boolean isArray()>();

        r0.<org.codehaus.groovy.reflection.CachedClass: boolean isArray> = $z0;

        $z1 = virtualinvoke r2.<java.lang.Class: boolean isPrimitive()>();

        r0.<org.codehaus.groovy.reflection.CachedClass: boolean isPrimitive> = $z1;

        $i0 = virtualinvoke r2.<java.lang.Class: int getModifiers()>();

        r0.<org.codehaus.groovy.reflection.CachedClass: int modifiers> = $i0;

        $z2 = virtualinvoke r2.<java.lang.Class: boolean isInterface()>();

        r0.<org.codehaus.groovy.reflection.CachedClass: boolean isInterface> = $z2;

        $r3 = <org.codehaus.groovy.reflection.CachedClass: java.lang.Class class$java$lang$Number>;

        if $r3 != null goto label1;

        $r4 = staticinvoke <org.codehaus.groovy.reflection.CachedClass: java.lang.Class class$(java.lang.String)>("java.lang.Number");

        <org.codehaus.groovy.reflection.CachedClass: java.lang.Class class$java$lang$Number> = $r4;

        goto label2;

     label1:
        $r4 = <org.codehaus.groovy.reflection.CachedClass: java.lang.Class class$java$lang$Number>;

     label2:
        $z3 = virtualinvoke $r4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        r0.<org.codehaus.groovy.reflection.CachedClass: boolean isNumber> = $z3;

        return;
    }

    final void initialize()
    {
        java.util.Iterator $r2;
        java.util.Set $r1;
        org.codehaus.groovy.reflection.CachedClass r0, r6, r9;
        java.lang.Class $r3, $r4, $r7, $r8;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.reflection.CachedClass;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.reflection.CachedClass: java.util.Set getInterfaces()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.codehaus.groovy.reflection.CachedClass) $r5;

        $r8 = r0.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class cachedClass>;

        $r7 = r6.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class cachedClass>;

        staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: boolean isAssignableFrom(java.lang.Class,java.lang.Class)>($r8, $r7);

        goto label1;

     label2:
        r9 = r0;

     label3:
        if r9 == null goto label4;

        $r4 = r9.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class cachedClass>;

        $r3 = r0.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class cachedClass>;

        staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: void setAssignableFrom(java.lang.Class,java.lang.Class)>($r4, $r3);

        r9 = virtualinvoke r9.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedClass getCachedSuperClass()>();

        goto label3;

     label4:
        return;
    }

    public org.codehaus.groovy.reflection.CachedClass getCachedSuperClass()
    {
        boolean $z0, $z1;
        org.codehaus.groovy.reflection.CachedClass r0, $r1, $r4, $r8, $r11, $r13;
        java.lang.Class $r2, $r3, $r5, $r6, $r7, $r9, $r10, $r12;

        r0 := @this: org.codehaus.groovy.reflection.CachedClass;

        $r1 = r0.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedClass cachedSuperClass>;

        if $r1 != null goto label6;

        $z0 = r0.<org.codehaus.groovy.reflection.CachedClass: boolean isArray>;

        if $z0 != 0 goto label1;

        $r9 = virtualinvoke r0.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.Class getSuperclass()>();

        $r11 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.CachedClass getCachedClass(java.lang.Class)>($r10);

        r0.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedClass cachedSuperClass> = $r11;

        goto label6;

     label1:
        $r2 = r0.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class cachedClass>;

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Class getComponentType()>();

        $z1 = virtualinvoke $r3.<java.lang.Class: boolean isPrimitive()>();

        if $z1 != 0 goto label4;

        $r5 = r0.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class cachedClass>;

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.Class getComponentType()>();

        $r7 = <org.codehaus.groovy.reflection.CachedClass: java.lang.Class class$java$lang$Object>;

        if $r7 != null goto label2;

        $r12 = staticinvoke <org.codehaus.groovy.reflection.CachedClass: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.codehaus.groovy.reflection.CachedClass: java.lang.Class class$java$lang$Object> = $r12;

        goto label3;

     label2:
        $r12 = <org.codehaus.groovy.reflection.CachedClass: java.lang.Class class$java$lang$Object>;

     label3:
        if $r6 != $r12 goto label5;

     label4:
        $r4 = <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.CachedClass OBJECT_CLASS>;

        r0.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedClass cachedSuperClass> = $r4;

        goto label6;

     label5:
        $r8 = <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.CachedClass OBJECT_ARRAY_CLASS>;

        r0.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedClass cachedSuperClass> = $r8;

     label6:
        $r13 = r0.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedClass cachedSuperClass>;

        return $r13;
    }

    public synchronized org.codehaus.groovy.reflection.CachedMethod[] getMethods()
    {
        java.lang.reflect.Method[] $r4, r5;
        java.lang.reflect.Method $r22;
        boolean $z0, $z1;
        org.codehaus.groovy.reflection.CachedMethod $r20, $r21;
        org.codehaus.groovy.reflection.CachedClass r0, $r13;
        java.lang.Object[] $r9, $r15;
        java.util.ArrayList $r6, $r7;
        org.codehaus.groovy.reflection.CachedMethod[] $r1, $r8, $r10, $r11, $r12, $r14, $r16, $r17, $r19, r24, $r25;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8;
        java.lang.String $r23;
        org.codehaus.groovy.reflection.CachedClass$1 $r2;
        java.lang.Object $r3;
        java.util.Comparator $r18;

        r0 := @this: org.codehaus.groovy.reflection.CachedClass;

        $r1 = r0.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedMethod[] methods>;

        if $r1 != null goto label9;

        $r2 = new org.codehaus.groovy.reflection.CachedClass$1;

        specialinvoke $r2.<org.codehaus.groovy.reflection.CachedClass$1: void <init>(org.codehaus.groovy.reflection.CachedClass)>(r0);

        $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r2);

        $r4 = (java.lang.reflect.Method[]) $r3;

        r5 = (java.lang.reflect.Method[]) $r4;

        $r6 = new java.util.ArrayList;

        $i0 = lengthof r5;

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i0);

        $r7 = new java.util.ArrayList;

        $i1 = lengthof r5;

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>($i1);

        i7 = 0;

     label1:
        $i2 = lengthof r5;

        if i7 == $i2 goto label6;

        $r21 = new org.codehaus.groovy.reflection.CachedMethod;

        $r22 = r5[i7];

        specialinvoke $r21.<org.codehaus.groovy.reflection.CachedMethod: void <init>(org.codehaus.groovy.reflection.CachedClass,java.lang.reflect.Method)>(r0, $r22);

        $r23 = virtualinvoke $r21.<org.codehaus.groovy.reflection.CachedMethod: java.lang.String getName()>();

        $i6 = virtualinvoke $r23.<java.lang.String: int indexOf(int)>(43);

        if $i6 < 0 goto label2;

        goto label5;

     label2:
        $z0 = virtualinvoke $r23.<java.lang.String: boolean startsWith(java.lang.String)>("this$");

        if $z0 != 0 goto label3;

        $z1 = virtualinvoke $r23.<java.lang.String: boolean startsWith(java.lang.String)>("super$");

        if $z1 == 0 goto label4;

     label3:
        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r21);

        goto label5;

     label4:
        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r21);

     label5:
        i7 = i7 + 1;

        goto label1;

     label6:
        $i3 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        $r8 = newarray (org.codehaus.groovy.reflection.CachedMethod)[$i3];

        $r9 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        $r10 = (org.codehaus.groovy.reflection.CachedMethod[]) $r9;

        $r11 = (org.codehaus.groovy.reflection.CachedMethod[]) $r10;

        r0.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedMethod[] methods> = $r11;

        $r12 = r0.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedMethod[] methods>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>($r12);

        $r13 = virtualinvoke r0.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedClass getCachedSuperClass()>();

        if $r13 == null goto label8;

        virtualinvoke $r13.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedMethod[] getMethods()>();

        r24 = $r13.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedMethod[] mopMethods>;

        i8 = 0;

     label7:
        $i5 = lengthof r24;

        if i8 == $i5 goto label8;

        $r20 = r24[i8];

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);

        i8 = i8 + 1;

        goto label7;

     label8:
        $i4 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        $r14 = newarray (org.codehaus.groovy.reflection.CachedMethod)[$i4];

        $r15 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r14);

        $r16 = (org.codehaus.groovy.reflection.CachedMethod[]) $r15;

        $r17 = (org.codehaus.groovy.reflection.CachedMethod[]) $r16;

        r0.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedMethod[] mopMethods> = $r17;

        $r19 = r0.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedMethod[] mopMethods>;

        $r18 = <org.codehaus.groovy.reflection.CachedClass$CachedMethodComparatorByName: java.util.Comparator INSTANCE>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>($r19, $r18);

     label9:
        $r25 = r0.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedMethod[] methods>;

        return $r25;
    }

    public synchronized org.codehaus.groovy.reflection.CachedField[] getFields()
    {
        org.codehaus.groovy.reflection.CachedClass$2 $r3;
        org.codehaus.groovy.reflection.CachedField[] $r1, $r2, $r7, $r8, $r11;
        java.lang.reflect.Field $r10;
        org.codehaus.groovy.reflection.CachedClass r0;
        java.lang.reflect.Field[] $r5, r6;
        int $i0, $i1, i2;
        org.codehaus.groovy.reflection.CachedField $r9;
        java.lang.Object $r4;

        r0 := @this: org.codehaus.groovy.reflection.CachedClass;

        $r1 = r0.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedField[] fields>;

        if $r1 != null goto label2;

        $r3 = new org.codehaus.groovy.reflection.CachedClass$2;

        specialinvoke $r3.<org.codehaus.groovy.reflection.CachedClass$2: void <init>(org.codehaus.groovy.reflection.CachedClass)>(r0);

        $r4 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r3);

        $r5 = (java.lang.reflect.Field[]) $r4;

        r6 = (java.lang.reflect.Field[]) $r5;

        $i0 = lengthof r6;

        $r7 = newarray (org.codehaus.groovy.reflection.CachedField)[$i0];

        r0.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedField[] fields> = $r7;

        i2 = 0;

     label1:
        $r8 = r0.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedField[] fields>;

        $i1 = lengthof $r8;

        if i2 == $i1 goto label2;

        $r11 = r0.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedField[] fields>;

        $r9 = new org.codehaus.groovy.reflection.CachedField;

        $r10 = r6[i2];

        specialinvoke $r9.<org.codehaus.groovy.reflection.CachedField: void <init>(org.codehaus.groovy.reflection.CachedClass,java.lang.reflect.Field)>(r0, $r10);

        $r11[i2] = $r9;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r2 = r0.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedField[] fields>;

        return $r2;
    }

    public synchronized org.codehaus.groovy.reflection.CachedConstructor[] getConstructors()
    {
        org.codehaus.groovy.reflection.CachedConstructor[] $r1, $r2, $r7, $r8, $r11;
        org.codehaus.groovy.reflection.CachedClass$3 $r3;
        java.lang.reflect.Constructor $r10;
        org.codehaus.groovy.reflection.CachedClass r0;
        java.lang.reflect.Constructor[] $r5, r6;
        org.codehaus.groovy.reflection.CachedConstructor $r9;
        int $i0, $i1, i2;
        java.lang.Object $r4;

        r0 := @this: org.codehaus.groovy.reflection.CachedClass;

        $r1 = r0.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedConstructor[] constructors>;

        if $r1 != null goto label2;

        $r3 = new org.codehaus.groovy.reflection.CachedClass$3;

        specialinvoke $r3.<org.codehaus.groovy.reflection.CachedClass$3: void <init>(org.codehaus.groovy.reflection.CachedClass)>(r0);

        $r4 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r3);

        $r5 = (java.lang.reflect.Constructor[]) $r4;

        r6 = (java.lang.reflect.Constructor[]) $r5;

        $i0 = lengthof r6;

        $r7 = newarray (org.codehaus.groovy.reflection.CachedConstructor)[$i0];

        r0.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedConstructor[] constructors> = $r7;

        i2 = 0;

     label1:
        $r8 = r0.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedConstructor[] constructors>;

        $i1 = lengthof $r8;

        if i2 == $i1 goto label2;

        $r11 = r0.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedConstructor[] constructors>;

        $r9 = new org.codehaus.groovy.reflection.CachedConstructor;

        $r10 = r6[i2];

        specialinvoke $r9.<org.codehaus.groovy.reflection.CachedConstructor: void <init>(org.codehaus.groovy.reflection.CachedClass,java.lang.reflect.Constructor)>(r0, $r10);

        $r11[i2] = $r9;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r2 = r0.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedConstructor[] constructors>;

        return $r2;
    }

    public org.codehaus.groovy.reflection.CachedMethod searchMethods(java.lang.String, org.codehaus.groovy.reflection.CachedClass[])
    {
        org.codehaus.groovy.reflection.CachedClass[] r5, $r6;
        org.codehaus.groovy.reflection.CachedMethod r2, r9;
        org.codehaus.groovy.reflection.CachedClass r0;
        org.codehaus.groovy.reflection.CachedMethod[] $r1;
        int $i0, i1;
        java.lang.Class $r7, $r8;
        java.lang.String $r3, r4;
        boolean $z0, $z1, $z2;

        r0 := @this: org.codehaus.groovy.reflection.CachedClass;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: org.codehaus.groovy.reflection.CachedClass[];

        $r1 = virtualinvoke r0.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedMethod[] getMethods()>();

        r9 = null;

        i1 = 0;

     label1:
        $i0 = lengthof $r1;

        if i1 >= $i0 goto label4;

        r2 = $r1[i1];

        $r3 = virtualinvoke r2.<org.codehaus.groovy.reflection.CachedMethod: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label3;

        $r6 = virtualinvoke r2.<org.codehaus.groovy.reflection.CachedMethod: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $z1 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: boolean arrayContentsEq(java.lang.Object[],java.lang.Object[])>(r5, $r6);

        if $z1 == 0 goto label3;

        if r9 == null goto label2;

        $r7 = virtualinvoke r9.<org.codehaus.groovy.reflection.CachedMethod: java.lang.Class getReturnType()>();

        $r8 = virtualinvoke r2.<org.codehaus.groovy.reflection.CachedMethod: java.lang.Class getReturnType()>();

        $z2 = virtualinvoke $r7.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r8);

        if $z2 == 0 goto label3;

     label2:
        r9 = r2;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return r9;
    }

    public final int getModifiers()
    {
        org.codehaus.groovy.reflection.CachedClass r0;
        int $i0;

        r0 := @this: org.codehaus.groovy.reflection.CachedClass;

        $i0 = r0.<org.codehaus.groovy.reflection.CachedClass: int modifiers>;

        return $i0;
    }

    public java.lang.Object coerceArgument(java.lang.Object)
    {
        org.codehaus.groovy.reflection.CachedClass r1;
        java.lang.Object r0;

        r1 := @this: org.codehaus.groovy.reflection.CachedClass;

        r0 := @parameter0: java.lang.Object;

        return r0;
    }

    public int getSuperClassDistance()
    {
        org.codehaus.groovy.reflection.CachedClass r0;
        int $i0, $i1, i2, $i4;
        java.lang.Class r1;

        r0 := @this: org.codehaus.groovy.reflection.CachedClass;

        $i0 = r0.<org.codehaus.groovy.reflection.CachedClass: int distance>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label3;

        i2 = 0;

        r1 = virtualinvoke r0.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

     label1:
        if r1 == null goto label2;

        i2 = i2 + 1;

        r1 = virtualinvoke r1.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label1;

     label2:
        r0.<org.codehaus.groovy.reflection.CachedClass: int distance> = i2;

     label3:
        $i1 = r0.<org.codehaus.groovy.reflection.CachedClass: int distance>;

        return $i1;
    }

    public int hashCode()
    {
        org.codehaus.groovy.reflection.CachedClass r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.codehaus.groovy.reflection.CachedClass;

        $i0 = r0.<org.codehaus.groovy.reflection.CachedClass: int hashCode>;

        if $i0 != 0 goto label1;

        $i1 = specialinvoke r0.<java.lang.Object: int hashCode()>();

        r0.<org.codehaus.groovy.reflection.CachedClass: int hashCode> = $i1;

        $i2 = r0.<org.codehaus.groovy.reflection.CachedClass: int hashCode>;

        if $i2 != 0 goto label1;

        r0.<org.codehaus.groovy.reflection.CachedClass: int hashCode> = -889274690;

     label1:
        $i3 = r0.<org.codehaus.groovy.reflection.CachedClass: int hashCode>;

        return $i3;
    }

    public boolean isPrimitive()
    {
        org.codehaus.groovy.reflection.CachedClass r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.reflection.CachedClass;

        $z0 = r0.<org.codehaus.groovy.reflection.CachedClass: boolean isPrimitive>;

        return $z0;
    }

    public boolean isVoid()
    {
        org.codehaus.groovy.reflection.CachedClass r0;
        java.lang.Class $r1, $r2;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.reflection.CachedClass;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r2 = <java.lang.Void: java.lang.Class TYPE>;

        if $r1 != $r2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void box(org.codehaus.groovy.classgen.BytecodeHelper)
    {
        org.codehaus.groovy.classgen.BytecodeHelper r0;
        org.codehaus.groovy.reflection.CachedClass r1;
        java.lang.Class $r2;

        r1 := @this: org.codehaus.groovy.reflection.CachedClass;

        r0 := @parameter0: org.codehaus.groovy.classgen.BytecodeHelper;

        $r2 = virtualinvoke r1.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        virtualinvoke r0.<org.codehaus.groovy.classgen.BytecodeHelper: void box(java.lang.Class)>($r2);

        return;
    }

    public void unbox(org.codehaus.groovy.classgen.BytecodeHelper)
    {
        org.codehaus.groovy.classgen.BytecodeHelper r0;
        org.codehaus.groovy.reflection.CachedClass r1;
        java.lang.Class $r2;

        r1 := @this: org.codehaus.groovy.reflection.CachedClass;

        r0 := @parameter0: org.codehaus.groovy.classgen.BytecodeHelper;

        $r2 = virtualinvoke r1.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        virtualinvoke r0.<org.codehaus.groovy.classgen.BytecodeHelper: void unbox(java.lang.Class)>($r2);

        return;
    }

    public boolean isInterface()
    {
        org.codehaus.groovy.reflection.CachedClass r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.reflection.CachedClass;

        $z0 = r0.<org.codehaus.groovy.reflection.CachedClass: boolean isInterface>;

        return $z0;
    }

    public void doCast(org.codehaus.groovy.classgen.BytecodeHelper)
    {
        org.codehaus.groovy.classgen.BytecodeHelper r0;
        org.codehaus.groovy.reflection.CachedClass r1;
        java.lang.Class $r2;

        r1 := @this: org.codehaus.groovy.reflection.CachedClass;

        r0 := @parameter0: org.codehaus.groovy.classgen.BytecodeHelper;

        $r2 = virtualinvoke r1.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        virtualinvoke r0.<org.codehaus.groovy.classgen.BytecodeHelper: void doCast(java.lang.Class)>($r2);

        return;
    }

    public java.lang.String getName()
    {
        org.codehaus.groovy.reflection.CachedClass r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: org.codehaus.groovy.reflection.CachedClass;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        return $r2;
    }

    public java.lang.String getTypeDescription()
    {
        org.codehaus.groovy.reflection.CachedClass r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: org.codehaus.groovy.reflection.CachedClass;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r2 = staticinvoke <org.codehaus.groovy.classgen.BytecodeHelper: java.lang.String getTypeDescription(java.lang.Class)>($r1);

        return $r2;
    }

    public org.codehaus.groovy.runtime.Reflector getReflector()
    {
        org.codehaus.groovy.reflection.CachedClass r0;
        org.codehaus.groovy.runtime.Reflector $r1;

        r0 := @this: org.codehaus.groovy.reflection.CachedClass;

        $r1 = r0.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.runtime.Reflector reflector>;

        return $r1;
    }

    public final java.lang.Class getTheClass()
    {
        org.codehaus.groovy.reflection.CachedClass r0;
        java.lang.Class $r1;

        r0 := @this: org.codehaus.groovy.reflection.CachedClass;

        $r1 = r0.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class cachedClass>;

        return $r1;
    }

    public groovy.lang.MetaMethod[] getNewMetaMethods()
    {
        org.codehaus.groovy.reflection.CachedClass r0;
        groovy.lang.MetaMethod[] $r1;

        r0 := @this: org.codehaus.groovy.reflection.CachedClass;

        $r1 = r0.<org.codehaus.groovy.reflection.CachedClass: groovy.lang.MetaMethod[] newMetaMethods>;

        return $r1;
    }

    public void setNewMopMethods(java.util.ArrayList)
    {
        org.codehaus.groovy.reflection.CachedClass r0;
        java.lang.Object[] $r3;
        groovy.lang.MetaMethod[] $r2, $r4, $r5;
        int $i0;
        java.util.ArrayList r1;

        r0 := @this: org.codehaus.groovy.reflection.CachedClass;

        r1 := @parameter0: java.util.ArrayList;

        $i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $r2 = newarray (groovy.lang.MetaMethod)[$i0];

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        $r4 = (groovy.lang.MetaMethod[]) $r3;

        $r5 = (groovy.lang.MetaMethod[]) $r4;

        r0.<org.codehaus.groovy.reflection.CachedClass: groovy.lang.MetaMethod[] newMetaMethods> = $r5;

        return;
    }

    public synchronized void setStaticMetaClassField(groovy.lang.MetaClass)
    {
        int $i0, i1;
        org.codehaus.groovy.reflection.CachedField $r6, r9;
        java.lang.String $r10;
        boolean $z0, $z1;
        groovy.lang.MetaClass r5;
        org.codehaus.groovy.reflection.CachedField[] $r8;
        org.codehaus.groovy.reflection.CachedClass r0;
        java.lang.Object $r1, $r2, $r3, $r4, $r7, $r14;
        java.lang.Class $r11, $r12, $r13;

        r0 := @this: org.codehaus.groovy.reflection.CachedClass;

        r5 := @parameter0: groovy.lang.MetaClass;

        $r2 = r0.<org.codehaus.groovy.reflection.CachedClass: java.lang.Object staticMetaClassField>;

        $r1 = <org.codehaus.groovy.reflection.CachedClass: java.lang.Object NONE>;

        if $r2 != $r1 goto label1;

        return;

     label1:
        $r3 = r0.<org.codehaus.groovy.reflection.CachedClass: java.lang.Object staticMetaClassField>;

        if $r3 != null goto label6;

        $r8 = virtualinvoke r0.<org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedField[] getFields()>();

        i1 = 0;

     label2:
        $i0 = lengthof $r8;

        if i1 >= $i0 goto label6;

        r9 = $r8[i1];

        $r10 = virtualinvoke r9.<org.codehaus.groovy.reflection.CachedField: java.lang.String getName()>();

        $z0 = virtualinvoke $r10.<java.lang.String: boolean startsWith(java.lang.String)>("$staticMetaClass");

        if $z0 == 0 goto label5;

        $r11 = virtualinvoke r9.<org.codehaus.groovy.reflection.CachedField: java.lang.Class getType()>();

        $r12 = <org.codehaus.groovy.reflection.CachedClass: java.lang.Class class$groovy$lang$MetaClass>;

        if $r12 != null goto label3;

        $r13 = staticinvoke <org.codehaus.groovy.reflection.CachedClass: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.reflection.CachedClass: java.lang.Class class$groovy$lang$MetaClass> = $r13;

        goto label4;

     label3:
        $r13 = <org.codehaus.groovy.reflection.CachedClass: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        if $r11 != $r13 goto label5;

        $z1 = virtualinvoke r9.<org.codehaus.groovy.reflection.CachedField: boolean isStatic()>();

        if $z1 == 0 goto label5;

        r0.<org.codehaus.groovy.reflection.CachedClass: java.lang.Object staticMetaClassField> = r9;

        goto label6;

     label5:
        i1 = i1 + 1;

        goto label2;

     label6:
        $r14 = r0.<org.codehaus.groovy.reflection.CachedClass: java.lang.Object staticMetaClassField>;

        if $r14 != null goto label7;

        $r7 = <org.codehaus.groovy.reflection.CachedClass: java.lang.Object NONE>;

        r0.<org.codehaus.groovy.reflection.CachedClass: java.lang.Object staticMetaClassField> = $r7;

        return;

     label7:
        $r4 = r0.<org.codehaus.groovy.reflection.CachedClass: java.lang.Object staticMetaClassField>;

        $r6 = (org.codehaus.groovy.reflection.CachedField) $r4;

        virtualinvoke $r6.<org.codehaus.groovy.reflection.CachedField: void setProperty(java.lang.Object,java.lang.Object)>(null, r5);

        return;
    }

    public groovy.lang.MetaClass getMetaClassForClass()
    {
        groovy.lang.MetaClass $r3, $r6;
        org.codehaus.groovy.reflection.CachedClass r0;
        java.lang.Object r1, $r2, $r5;
        java.lang.ref.SoftReference r4;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.reflection.CachedClass;

        r1 = r0.<org.codehaus.groovy.reflection.CachedClass: java.lang.Object metaClassForClass>;

        if r1 != null goto label1;

        return null;

     label1:
        $z0 = r1 instanceof java.lang.ref.SoftReference;

        if $z0 == 0 goto label2;

        r4 = (java.lang.ref.SoftReference) r1;

        $r5 = virtualinvoke r4.<java.lang.ref.SoftReference: java.lang.Object get()>();

        $r6 = (groovy.lang.MetaClass) $r5;

        return $r6;

     label2:
        $r2 = r0.<org.codehaus.groovy.reflection.CachedClass: java.lang.Object metaClassForClass>;

        $r3 = (groovy.lang.MetaClass) $r2;

        return $r3;
    }

    public void setMetaClassForClass(groovy.lang.MetaClass, boolean)
    {
        org.codehaus.groovy.reflection.CachedClass r0;
        groovy.lang.MetaClass r1;
        java.lang.ref.SoftReference $r2;
        boolean z0;

        r0 := @this: org.codehaus.groovy.reflection.CachedClass;

        r1 := @parameter0: groovy.lang.MetaClass;

        z0 := @parameter1: boolean;

        if z0 != 0 goto label1;

        if r1 != null goto label2;

     label1:
        r0.<org.codehaus.groovy.reflection.CachedClass: java.lang.Object metaClassForClass> = r1;

        goto label3;

     label2:
        $r2 = new java.lang.ref.SoftReference;

        specialinvoke $r2.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>(r1);

        r0.<org.codehaus.groovy.reflection.CachedClass: java.lang.Object metaClassForClass> = $r2;

     label3:
        virtualinvoke r0.<org.codehaus.groovy.reflection.CachedClass: void setStaticMetaClassField(groovy.lang.MetaClass)>(r1);

        return;
    }

    public boolean isAssignableFrom(java.lang.Class)
    {
        org.codehaus.groovy.reflection.CachedClass r1;
        java.lang.Class r0, $r2;
        boolean $z0, $z1;

        r1 := @this: org.codehaus.groovy.reflection.CachedClass;

        r0 := @parameter0: java.lang.Class;

        if r0 == null goto label1;

        $r2 = virtualinvoke r1.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $z0 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: boolean isAssignableFrom(java.lang.Class,java.lang.Class)>($r2, r0);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    boolean isDirectlyAssignable(java.lang.Object)
    {
        org.codehaus.groovy.reflection.CachedClass r0;
        java.lang.Class $r1, $r3;
        java.lang.Object r2;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.reflection.CachedClass;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: boolean isAssignableFrom(java.lang.Class,java.lang.Class)>($r1, $r3);

        return $z0;
    }

    public java.lang.String toString()
    {
        org.codehaus.groovy.reflection.CachedClass r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: org.codehaus.groovy.reflection.CachedClass;

        $r1 = r0.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class cachedClass>;

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String toString()>();

        return $r2;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Object $r2;
        groovy.lang.MetaMethod[] $r0;
        org.codehaus.groovy.reflection.CachedClass[] $r1;

        $r0 = newarray (groovy.lang.MetaMethod)[0];

        <org.codehaus.groovy.reflection.CachedClass: groovy.lang.MetaMethod[] EMPTY> = $r0;

        $r1 = newarray (org.codehaus.groovy.reflection.CachedClass)[0];

        <org.codehaus.groovy.reflection.CachedClass: org.codehaus.groovy.reflection.CachedClass[] EMPTY_ARRAY> = $r1;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        <org.codehaus.groovy.reflection.CachedClass: java.lang.Object NONE> = $r2;

        return;
    }
}
