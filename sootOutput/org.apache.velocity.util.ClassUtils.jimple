public class org.apache.velocity.util.ClassUtils extends java.lang.Object
{

    private void <init>()
    {
        org.apache.velocity.util.ClassUtils r0;

        r0 := @this: org.apache.velocity.util.ClassUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Class getClass(java.lang.String) throws java.lang.ClassNotFoundException
    {
        java.lang.Thread $r0;
        java.lang.Class $r3, $r4;
        java.lang.ClassNotFoundException $r5;
        java.lang.ClassLoader $r1;
        java.lang.String r2;

        r2 := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r1 = virtualinvoke $r0.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        if $r1 == null goto label4;

     label1:
        $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r2, 1, $r1);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

     label4:
        $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r2);

        return $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public static java.lang.Object getNewInstance(java.lang.String) throws java.lang.ClassNotFoundException, java.lang.IllegalAccessException, java.lang.InstantiationException
    {
        java.lang.Class $r1;
        java.lang.Object $r2;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.velocity.util.ClassUtils: java.lang.Class getClass(java.lang.String)>(r0);

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Object newInstance()>();

        return $r2;
    }

    public static java.io.InputStream getResourceAsStream(java.lang.Class, java.lang.String)
    {
        java.lang.Thread $r0;
        java.lang.Class r3;
        java.lang.ClassLoader $r1, $r4, $r5;
        java.lang.String r6;
        boolean $z0;
        java.io.InputStream $r2, r7;

        r3 := @parameter0: java.lang.Class;

        r6 := @parameter1: java.lang.String;

     label1:
        $z0 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 == 0 goto label2;

        r6 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int)>(1);

        goto label1;

     label2:
        $r0 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r1 = virtualinvoke $r0.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        if $r1 != null goto label3;

        $r5 = virtualinvoke r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r7 = virtualinvoke $r5.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r6);

        goto label4;

     label3:
        $r2 = virtualinvoke $r1.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r6);

        r7 = $r2;

        if $r2 != null goto label4;

        $r4 = virtualinvoke r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        if $r4 == null goto label4;

        r7 = virtualinvoke $r4.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r6);

     label4:
        return r7;
    }

    public static org.apache.velocity.util.introspection.VelMethod getMethod(java.lang.String, java.lang.Object[], java.lang.Class[], java.lang.Object, org.apache.velocity.context.InternalContextAdapter, org.apache.velocity.runtime.parser.node.SimpleNode, boolean)
    {
        org.apache.velocity.runtime.parser.node.ASTMethod$MethodCacheKey $r0;
        org.apache.velocity.exception.MethodInvocationException $r9, $r31;
        org.apache.velocity.util.introspection.IntrospectionCacheData $r4, $r23;
        org.apache.velocity.exception.VelocityException $r29;
        boolean z0;
        java.lang.Exception $r28;
        org.apache.velocity.runtime.parser.node.SimpleNode r5;
        org.apache.velocity.util.introspection.Uberspect $r34;
        java.lang.Object[] r7;
        org.apache.velocity.util.introspection.Info $r35;
        org.apache.velocity.runtime.RuntimeServices $r33;
        java.lang.StringBuffer $r8, $r10, $r11, $r14, $r15, $r16, $r17, $r18, $r19;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        java.lang.String r1, $r13, $r20, $r21, $r36, $r38;
        org.apache.velocity.context.InternalContextAdapter r3;
        java.lang.Class[] r2;
        java.lang.RuntimeException $r30;
        java.lang.Object r6, $r27;
        java.lang.Class $r12, r22, $r24, $r25, $r26;
        org.apache.velocity.util.introspection.VelMethod r32, $r37;

        r1 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.Object[];

        r2 := @parameter2: java.lang.Class[];

        r6 := @parameter3: java.lang.Object;

        r3 := @parameter4: org.apache.velocity.context.InternalContextAdapter;

        r5 := @parameter5: org.apache.velocity.runtime.parser.node.SimpleNode;

        z0 := @parameter6: boolean;

     label01:
        $r0 = new org.apache.velocity.runtime.parser.node.ASTMethod$MethodCacheKey;

        specialinvoke $r0.<org.apache.velocity.runtime.parser.node.ASTMethod$MethodCacheKey: void <init>(java.lang.String,java.lang.Class[])>(r1, r2);

        $r4 = interfaceinvoke r3.<org.apache.velocity.context.InternalContextAdapter: org.apache.velocity.util.introspection.IntrospectionCacheData icacheGet(java.lang.Object)>($r0);

        if $r4 == null goto label02;

        if r6 == null goto label02;

        $r25 = $r4.<org.apache.velocity.util.introspection.IntrospectionCacheData: java.lang.Class contextData>;

        $r26 = virtualinvoke r6.<java.lang.Object: java.lang.Class getClass()>();

        if $r25 != $r26 goto label02;

        $r27 = $r4.<org.apache.velocity.util.introspection.IntrospectionCacheData: java.lang.Object thingy>;

        r32 = (org.apache.velocity.util.introspection.VelMethod) $r27;

        goto label03;

     label02:
        $r33 = virtualinvoke r5.<org.apache.velocity.runtime.parser.node.SimpleNode: org.apache.velocity.runtime.RuntimeServices getRuntimeServices()>();

        $r34 = interfaceinvoke $r33.<org.apache.velocity.runtime.RuntimeServices: org.apache.velocity.util.introspection.Uberspect getUberspect()>();

        $r35 = new org.apache.velocity.util.introspection.Info;

        $r36 = virtualinvoke r5.<org.apache.velocity.runtime.parser.node.SimpleNode: java.lang.String getTemplateName()>();

        $i5 = virtualinvoke r5.<org.apache.velocity.runtime.parser.node.SimpleNode: int getLine()>();

        $i6 = virtualinvoke r5.<org.apache.velocity.runtime.parser.node.SimpleNode: int getColumn()>();

        specialinvoke $r35.<org.apache.velocity.util.introspection.Info: void <init>(java.lang.String,int,int)>($r36, $i5, $i6);

        $r37 = interfaceinvoke $r34.<org.apache.velocity.util.introspection.Uberspect: org.apache.velocity.util.introspection.VelMethod getMethod(java.lang.Object,java.lang.String,java.lang.Object[],org.apache.velocity.util.introspection.Info)>(r6, r1, r7, $r35);

        r32 = $r37;

        if $r37 == null goto label03;

        if r6 == null goto label03;

        $r23 = new org.apache.velocity.util.introspection.IntrospectionCacheData;

        specialinvoke $r23.<org.apache.velocity.util.introspection.IntrospectionCacheData: void <init>()>();

        $r24 = virtualinvoke r6.<java.lang.Object: java.lang.Class getClass()>();

        $r23.<org.apache.velocity.util.introspection.IntrospectionCacheData: java.lang.Class contextData> = $r24;

        $r23.<org.apache.velocity.util.introspection.IntrospectionCacheData: java.lang.Object thingy> = $r37;

        interfaceinvoke r3.<org.apache.velocity.context.InternalContextAdapter: void icachePut(java.lang.Object,org.apache.velocity.util.introspection.IntrospectionCacheData)>($r0, $r23);

     label03:
        if r32 != null goto label10;

        if z0 == 0 goto label09;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        i7 = 0;

     label04:
        $i0 = lengthof r7;

        if i7 >= $i0 goto label08;

        r22 = r2[i7];

        if r22 != null goto label05;

        $r38 = "null";

        goto label06;

     label05:
        $r38 = virtualinvoke r22.<java.lang.Class: java.lang.String getName()>();

     label06:
        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r38);

        $i3 = lengthof r7;

        $i4 = $i3 - 1;

        if i7 >= $i4 goto label07;

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label07:
        i7 = i7 + 1;

        goto label04;

     label08:
        $r9 = new org.apache.velocity.exception.MethodInvocationException;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Object \'");

        $r12 = virtualinvoke r6.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' does not contain method ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r8);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        $r21 = virtualinvoke r5.<org.apache.velocity.runtime.parser.node.SimpleNode: java.lang.String getTemplateName()>();

        $i1 = virtualinvoke r5.<org.apache.velocity.runtime.parser.node.SimpleNode: int getLine()>();

        $i2 = virtualinvoke r5.<org.apache.velocity.runtime.parser.node.SimpleNode: int getColumn()>();

        specialinvoke $r9.<org.apache.velocity.exception.MethodInvocationException: void <init>(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.String,int,int)>($r20, null, r1, $r21, $i1, $i2);

        throw $r9;

     label09:
        return null;

     label10:
        goto label14;

     label11:
        $r31 := @caughtexception;

        throw $r31;

     label12:
        $r30 := @caughtexception;

        throw $r30;

     label13:
        $r28 := @caughtexception;

        $r29 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r29.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>("ASTMethod.execute() : exception from introspection", $r28);

        throw $r29;

     label14:
        return r32;

        catch org.apache.velocity.exception.MethodInvocationException from label01 to label09 with label11;
        catch java.lang.RuntimeException from label01 to label09 with label12;
        catch java.lang.Exception from label01 to label09 with label13;
    }
}
