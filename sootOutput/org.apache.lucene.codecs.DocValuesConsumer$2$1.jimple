class org.apache.lucene.codecs.DocValuesConsumer$2$1 extends java.lang.Object implements java.util.Iterator
{
    int readerUpto;
    int docIDUpto;
    org.apache.lucene.util.BytesRef nextValue;
    org.apache.lucene.index.AtomicReader currentReader;
    org.apache.lucene.index.BinaryDocValues currentValues;
    org.apache.lucene.util.Bits currentLiveDocs;
    boolean nextIsSet;
    static final boolean $assertionsDisabled;
    final org.apache.lucene.codecs.DocValuesConsumer$2 this$1;

    void <init>(org.apache.lucene.codecs.DocValuesConsumer$2)
    {
        org.apache.lucene.util.BytesRef $r3;
        int $i1;
        org.apache.lucene.codecs.DocValuesConsumer$2 r1;
        org.apache.lucene.codecs.DocValuesConsumer$2$1 r0;

        r0 := @this: org.apache.lucene.codecs.DocValuesConsumer$2$1;

        r1 := @parameter0: org.apache.lucene.codecs.DocValuesConsumer$2;

        r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: org.apache.lucene.codecs.DocValuesConsumer$2 this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = (int) -1;

        r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: int readerUpto> = $i1;

        $r3 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r3.<org.apache.lucene.util.BytesRef: void <init>()>();

        r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: org.apache.lucene.util.BytesRef nextValue> = $r3;

        return;
    }

    public boolean hasNext()
    {
        org.apache.lucene.codecs.DocValuesConsumer$2$1 r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.lucene.codecs.DocValuesConsumer$2$1;

        $z0 = r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: boolean nextIsSet>;

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: boolean setNext()>();

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.lucene.codecs.DocValuesConsumer$2$1 r1;

        r1 := @this: org.apache.lucene.codecs.DocValuesConsumer$2$1;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public org.apache.lucene.util.BytesRef next()
    {
        org.apache.lucene.util.BytesRef $r1;
        java.lang.AssertionError $r2;
        org.apache.lucene.codecs.DocValuesConsumer$2$1 r0;
        java.util.NoSuchElementException $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.lucene.codecs.DocValuesConsumer$2$1;

        $z0 = virtualinvoke r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        throw $r3;

     label1:
        $z1 = <org.apache.lucene.codecs.DocValuesConsumer$2$1: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $z2 = r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: boolean nextIsSet>;

        if $z2 != 0 goto label2;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label2:
        r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: boolean nextIsSet> = 0;

        $r1 = r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: org.apache.lucene.util.BytesRef nextValue>;

        return $r1;
    }

    private boolean setNext()
    {
        org.apache.lucene.index.MergeState $r5;
        boolean $z0;
        org.apache.lucene.util.BytesRef $r17;
        java.util.List $r3, $r6, $r10, $r21;
        org.apache.lucene.index.BinaryDocValues $r12, $r18;
        org.apache.lucene.index.AtomicReader $r1, $r8, $r13, $r15;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        org.apache.lucene.codecs.DocValuesConsumer$2$1 r0;
        org.apache.lucene.util.Bits $r14, $r16, $r19;
        org.apache.lucene.codecs.DocValuesConsumer$2 $r2, $r4, $r9, $r20;
        java.lang.Object $r7, $r11;

        r0 := @this: org.apache.lucene.codecs.DocValuesConsumer$2$1;

     label1:
        $i14 = r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: int readerUpto>;

        $r20 = r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: org.apache.lucene.codecs.DocValuesConsumer$2 this$1>;

        $r21 = $r20.<org.apache.lucene.codecs.DocValuesConsumer$2: java.util.List val$toMerge>;

        $i15 = interfaceinvoke $r21.<java.util.List: int size()>();

        if $i14 != $i15 goto label2;

        return 0;

     label2:
        $r1 = r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: org.apache.lucene.index.AtomicReader currentReader>;

        if $r1 == null goto label3;

        $i6 = r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: int docIDUpto>;

        $r15 = r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: org.apache.lucene.index.AtomicReader currentReader>;

        $i7 = virtualinvoke $r15.<org.apache.lucene.index.AtomicReader: int maxDoc()>();

        if $i6 != $i7 goto label5;

     label3:
        $i0 = r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: int readerUpto>;

        $i1 = $i0 + 1;

        r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: int readerUpto> = $i1;

        $i2 = r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: int readerUpto>;

        $r2 = r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: org.apache.lucene.codecs.DocValuesConsumer$2 this$1>;

        $r3 = $r2.<org.apache.lucene.codecs.DocValuesConsumer$2: java.util.List val$toMerge>;

        $i3 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i2 >= $i3 goto label4;

        $r4 = r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: org.apache.lucene.codecs.DocValuesConsumer$2 this$1>;

        $r5 = $r4.<org.apache.lucene.codecs.DocValuesConsumer$2: org.apache.lucene.index.MergeState val$mergeState>;

        $r6 = $r5.<org.apache.lucene.index.MergeState: java.util.List readers>;

        $i4 = r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: int readerUpto>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i4);

        $r8 = (org.apache.lucene.index.AtomicReader) $r7;

        r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: org.apache.lucene.index.AtomicReader currentReader> = $r8;

        $r9 = r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: org.apache.lucene.codecs.DocValuesConsumer$2 this$1>;

        $r10 = $r9.<org.apache.lucene.codecs.DocValuesConsumer$2: java.util.List val$toMerge>;

        $i5 = r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: int readerUpto>;

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>($i5);

        $r12 = (org.apache.lucene.index.BinaryDocValues) $r11;

        r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: org.apache.lucene.index.BinaryDocValues currentValues> = $r12;

        $r13 = r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: org.apache.lucene.index.AtomicReader currentReader>;

        $r14 = virtualinvoke $r13.<org.apache.lucene.index.AtomicReader: org.apache.lucene.util.Bits getLiveDocs()>();

        r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: org.apache.lucene.util.Bits currentLiveDocs> = $r14;

     label4:
        r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: int docIDUpto> = 0;

        goto label1;

     label5:
        $r16 = r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: org.apache.lucene.util.Bits currentLiveDocs>;

        if $r16 == null goto label6;

        $r19 = r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: org.apache.lucene.util.Bits currentLiveDocs>;

        $i11 = r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: int docIDUpto>;

        $z0 = interfaceinvoke $r19.<org.apache.lucene.util.Bits: boolean get(int)>($i11);

        if $z0 == 0 goto label7;

     label6:
        r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: boolean nextIsSet> = 1;

        $r18 = r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: org.apache.lucene.index.BinaryDocValues currentValues>;

        $i8 = r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: int docIDUpto>;

        $r17 = r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: org.apache.lucene.util.BytesRef nextValue>;

        virtualinvoke $r18.<org.apache.lucene.index.BinaryDocValues: void get(int,org.apache.lucene.util.BytesRef)>($i8, $r17);

        $i9 = r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: int docIDUpto>;

        $i10 = $i9 + 1;

        r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: int docIDUpto> = $i10;

        return 1;

     label7:
        $i12 = r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: int docIDUpto>;

        $i13 = $i12 + 1;

        r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: int docIDUpto> = $i13;

        goto label1;
    }

    public volatile java.lang.Object next()
    {
        org.apache.lucene.codecs.DocValuesConsumer$2$1 r0;
        org.apache.lucene.util.BytesRef $r1;

        r0 := @this: org.apache.lucene.codecs.DocValuesConsumer$2$1;

        $r1 = virtualinvoke r0.<org.apache.lucene.codecs.DocValuesConsumer$2$1: org.apache.lucene.util.BytesRef next()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/codecs/DocValuesConsumer;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.codecs.DocValuesConsumer$2$1: boolean $assertionsDisabled> = $z1;

        return;
    }
}
