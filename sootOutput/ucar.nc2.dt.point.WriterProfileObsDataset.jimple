public class ucar.nc2.dt.point.WriterProfileObsDataset extends java.lang.Object
{
    private static final java.lang.String recordDimName;
    private static final java.lang.String stationDimName;
    private static final java.lang.String profileDimName;
    private static final java.lang.String latName;
    private static final java.lang.String lonName;
    private static final java.lang.String altName;
    private static final java.lang.String timeName;
    private static final java.lang.String idName;
    private static final java.lang.String descName;
    private static final java.lang.String wmoName;
    private static final java.lang.String firstProfileName;
    private static final java.lang.String nextProfileName;
    private static final java.lang.String numProfilesName;
    private static final java.lang.String numProfilesTotalName;
    private static final java.lang.String firstObsName;
    private static final java.lang.String numObsName;
    private static final java.lang.String nextObsName;
    private static final java.lang.String parentStationIndex;
    private static final java.lang.String parentProfileIndex;
    private ucar.nc2.units.DateFormatter dateFormatter;
    private int name_strlen;
    private int desc_strlen;
    private int wmo_strlen;
    private ucar.nc2.NetcdfFileWriteable ncfile;
    private java.lang.String title;
    private java.util.Set dimSet;
    private java.util.List recordDims;
    private java.util.List stationDims;
    private java.util.List profileDims;
    private java.util.List stnList;
    private java.util.Date minDate;
    private java.util.Date maxDate;
    private int nprofiles;
    private int profileIndex;
    private boolean useAlt;
    private boolean useWmoId;
    private boolean debug;
    private java.util.HashMap stationMap;
    private int recno;
    private ucar.ma2.ArrayObject$D1 timeArray;
    private ucar.ma2.ArrayInt$D1 prevArray;
    private ucar.ma2.ArrayInt$D1 parentArray;
    private int[] origin;
    private int[] originTime;

    public void <init>(java.lang.String, java.lang.String) throws java.io.IOException
    {
        ucar.nc2.NetcdfFileWriteable $r12, $r13;
        ucar.ma2.ArrayObject$D1 $r6;
        java.util.ArrayList $r3, $r4, $r5;
        java.util.HashSet $r2;
        ucar.ma2.ArrayInt$D1 $r7, $r8;
        int[] $r9, $r10;
        ucar.nc2.dt.point.WriterProfileObsDataset r0;
        java.lang.String r11, r14;
        ucar.nc2.units.DateFormatter $r1;

        r0 := @this: ucar.nc2.dt.point.WriterProfileObsDataset;

        r11 := @parameter0: java.lang.String;

        r14 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r1.<ucar.nc2.units.DateFormatter: void <init>()>();

        r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.units.DateFormatter dateFormatter> = $r1;

        r0.<ucar.nc2.dt.point.WriterProfileObsDataset: int name_strlen> = 1;

        r0.<ucar.nc2.dt.point.WriterProfileObsDataset: int desc_strlen> = 1;

        r0.<ucar.nc2.dt.point.WriterProfileObsDataset: int wmo_strlen> = 1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<ucar.nc2.dt.point.WriterProfileObsDataset: java.util.Set dimSet> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.dt.point.WriterProfileObsDataset: java.util.List recordDims> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.dt.point.WriterProfileObsDataset: java.util.List stationDims> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.dt.point.WriterProfileObsDataset: java.util.List profileDims> = $r5;

        r0.<ucar.nc2.dt.point.WriterProfileObsDataset: java.util.Date minDate> = null;

        r0.<ucar.nc2.dt.point.WriterProfileObsDataset: java.util.Date maxDate> = null;

        r0.<ucar.nc2.dt.point.WriterProfileObsDataset: int profileIndex> = 0;

        r0.<ucar.nc2.dt.point.WriterProfileObsDataset: boolean useAlt> = 0;

        r0.<ucar.nc2.dt.point.WriterProfileObsDataset: boolean useWmoId> = 0;

        r0.<ucar.nc2.dt.point.WriterProfileObsDataset: boolean debug> = 0;

        r0.<ucar.nc2.dt.point.WriterProfileObsDataset: int recno> = 0;

        $r6 = new ucar.ma2.ArrayObject$D1;

        specialinvoke $r6.<ucar.ma2.ArrayObject$D1: void <init>(java.lang.Class,int)>(class "Ljava/lang/String;", 1);

        r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.ma2.ArrayObject$D1 timeArray> = $r6;

        $r7 = new ucar.ma2.ArrayInt$D1;

        specialinvoke $r7.<ucar.ma2.ArrayInt$D1: void <init>(int)>(1);

        r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.ma2.ArrayInt$D1 prevArray> = $r7;

        $r8 = new ucar.ma2.ArrayInt$D1;

        specialinvoke $r8.<ucar.ma2.ArrayInt$D1: void <init>(int)>(1);

        r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.ma2.ArrayInt$D1 parentArray> = $r8;

        $r9 = newarray (int)[1];

        r0.<ucar.nc2.dt.point.WriterProfileObsDataset: int[] origin> = $r9;

        $r10 = newarray (int)[2];

        r0.<ucar.nc2.dt.point.WriterProfileObsDataset: int[] originTime> = $r10;

        $r12 = staticinvoke <ucar.nc2.NetcdfFileWriteable: ucar.nc2.NetcdfFileWriteable createNew(java.lang.String,boolean)>(r11, 0);

        r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile> = $r12;

        $r13 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r13.<ucar.nc2.NetcdfFileWriteable: void setFill(boolean)>(0);

        r0.<ucar.nc2.dt.point.WriterProfileObsDataset: java.lang.String title> = r14;

        return;
    }

    public void setLength(long)
    {
        long l0;
        ucar.nc2.NetcdfFileWriteable $r1;
        ucar.nc2.dt.point.WriterProfileObsDataset r0;

        r0 := @this: ucar.nc2.dt.point.WriterProfileObsDataset;

        l0 := @parameter0: long;

        $r1 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r1.<ucar.nc2.NetcdfFileWriteable: void setLength(long)>(l0);

        return;
    }

    public void writeHeader(java.util.List, java.util.List, int, java.lang.String) throws java.io.IOException
    {
        java.lang.IllegalStateException $r17;
        ucar.nc2.NetcdfFileWriteable $r3, $r5, $r9, $r13, $r14;
        java.util.Date $r4, $r8;
        int i0;
        java.lang.Boolean $r16;
        java.lang.String r2, $r7, $r11;
        boolean $z0;
        java.util.List r1, r12;
        java.lang.Object $r15;
        ucar.nc2.dt.point.WriterProfileObsDataset r0;
        ucar.nc2.units.DateFormatter $r6, $r10;

        r0 := @this: ucar.nc2.dt.point.WriterProfileObsDataset;

        r1 := @parameter0: java.util.List;

        r12 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        specialinvoke r0.<ucar.nc2.dt.point.WriterProfileObsDataset: void createGlobalAttributes()>();

        specialinvoke r0.<ucar.nc2.dt.point.WriterProfileObsDataset: void createStations(java.util.List)>(r1);

        specialinvoke r0.<ucar.nc2.dt.point.WriterProfileObsDataset: void createProfiles(int)>(i0);

        $r3 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r3.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addGlobalAttribute(java.lang.String,java.lang.String)>("zaxis_coordinate", r2);

        $r5 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r6 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.units.DateFormatter dateFormatter>;

        $r4 = new java.util.Date;

        specialinvoke $r4.<java.util.Date: void <init>()>();

        $r7 = virtualinvoke $r6.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>($r4);

        virtualinvoke $r5.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addGlobalAttribute(java.lang.String,java.lang.String)>("time_coverage_start", $r7);

        $r9 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r10 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.units.DateFormatter dateFormatter>;

        $r8 = new java.util.Date;

        specialinvoke $r8.<java.util.Date: void <init>()>();

        $r11 = virtualinvoke $r10.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>($r8);

        virtualinvoke $r9.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addGlobalAttribute(java.lang.String,java.lang.String)>("time_coverage_end", $r11);

        specialinvoke r0.<ucar.nc2.dt.point.WriterProfileObsDataset: void createDataVariables(java.util.List)>(r12);

        $r13 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r13.<ucar.nc2.NetcdfFileWriteable: void create()>();

        specialinvoke r0.<ucar.nc2.dt.point.WriterProfileObsDataset: void writeStationData(java.util.List)>(r1);

        $r14 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r15 = virtualinvoke $r14.<ucar.nc2.NetcdfFileWriteable: java.lang.Object sendIospMessage(java.lang.Object)>("AddRecordStructure");

        $r16 = (java.lang.Boolean) $r15;

        $z0 = virtualinvoke $r16.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label1;

        $r17 = new java.lang.IllegalStateException;

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>("can\'t add record variable");

        throw $r17;

     label1:
        return;
    }

    private void createGlobalAttributes()
    {
        ucar.nc2.NetcdfFileWriteable $r1, $r2, $r4, $r5;
        ucar.nc2.dt.point.WriterProfileObsDataset r0;
        java.lang.String $r3;

        r0 := @this: ucar.nc2.dt.point.WriterProfileObsDataset;

        $r1 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r1.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addGlobalAttribute(java.lang.String,java.lang.String)>("Conventions", "Unidata Observation Dataset v1.0");

        $r2 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r2.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addGlobalAttribute(java.lang.String,java.lang.String)>("cdm_datatype", "Profile");

        $r4 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r3 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: java.lang.String title>;

        virtualinvoke $r4.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addGlobalAttribute(java.lang.String,java.lang.String)>("title", $r3);

        $r5 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r5.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addGlobalAttribute(java.lang.String,java.lang.String)>("desc", "Extracted by THREDDS/Netcdf Subset Service");

        return;
    }

    private void createStations(java.util.List) throws java.io.IOException
    {
        ucar.nc2.Attribute $r24, $r26, $r31, $r33, $r38, $r43, $r48, $r53, $r58, $r63, $r65;
        ucar.nc2.NetcdfFileWriteable $r3, $r6, $r9, $r12, $r15, $r18, $r22, $r25, $r27, $r29, $r32, $r34, $r36, $r39, $r41, $r44, $r46, $r49, $r51, $r54, $r56, $r59, $r61, $r64, $r66;
        java.lang.String $r5, $r8, $r11, $r14, $r68, $r69, $r70, $r72, $r73, $r74;
        ucar.unidata.geoloc.LatLonRect $r2;
        ucar.nc2.Dimension $r16, $r19;
        ucar.nc2.dt.point.WriterProfileObsDataset r1;
        ucar.unidata.geoloc.LatLonPointImpl $r4, $r7, $r10, $r13;
        boolean $z0, $z1, $z2;
        ucar.ma2.DataType $r21, $r28, $r45, $r50, $r60;
        java.util.List r0, $r17, $r20, $r35, $r40, $r55;
        ucar.unidata.geoloc.Station r75, r76;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15;
        ucar.nc2.Variable $r23, $r30, $r37, $r42, $r47, $r52, $r57, $r62;
        double $d0, $d1, $d2, $d3;
        java.lang.Object $r67, $r71;

        r1 := @this: ucar.nc2.dt.point.WriterProfileObsDataset;

        r0 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        i14 = 0;

     label1:
        if i14 >= $i0 goto label3;

        $r71 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i14);

        r75 = (ucar.unidata.geoloc.Station) $r71;

        $r72 = interfaceinvoke r75.<ucar.unidata.geoloc.Station: java.lang.String getWmoId()>();

        if $r72 == null goto label2;

        $r73 = interfaceinvoke r75.<ucar.unidata.geoloc.Station: java.lang.String getWmoId()>();

        $r74 = virtualinvoke $r73.<java.lang.String: java.lang.String trim()>();

        $i13 = virtualinvoke $r74.<java.lang.String: int length()>();

        if $i13 <= 0 goto label2;

        r1.<ucar.nc2.dt.point.WriterProfileObsDataset: boolean useWmoId> = 1;

     label2:
        i14 = i14 + 1;

        goto label1;

     label3:
        i15 = 0;

     label4:
        if i15 >= $i0 goto label6;

        $r67 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i15);

        r76 = (ucar.unidata.geoloc.Station) $r67;

        $i4 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: int name_strlen>;

        $r68 = interfaceinvoke r76.<ucar.unidata.geoloc.Station: java.lang.String getName()>();

        $i5 = virtualinvoke $r68.<java.lang.String: int length()>();

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i5);

        r1.<ucar.nc2.dt.point.WriterProfileObsDataset: int name_strlen> = $i6;

        $i7 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: int desc_strlen>;

        $r69 = interfaceinvoke r76.<ucar.unidata.geoloc.Station: java.lang.String getDescription()>();

        $i8 = virtualinvoke $r69.<java.lang.String: int length()>();

        $i9 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i8);

        r1.<ucar.nc2.dt.point.WriterProfileObsDataset: int desc_strlen> = $i9;

        $z2 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: boolean useWmoId>;

        if $z2 == 0 goto label5;

        $i10 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: int wmo_strlen>;

        $r70 = interfaceinvoke r76.<ucar.unidata.geoloc.Station: java.lang.String getName()>();

        $i11 = virtualinvoke $r70.<java.lang.String: int length()>();

        $i12 = staticinvoke <java.lang.Math: int max(int,int)>($i10, $i11);

        r1.<ucar.nc2.dt.point.WriterProfileObsDataset: int wmo_strlen> = $i12;

     label5:
        i15 = i15 + 1;

        goto label4;

     label6:
        $r2 = specialinvoke r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.unidata.geoloc.LatLonRect getBoundingBox(java.util.List)>(r0);

        $r3 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r4 = virtualinvoke $r2.<ucar.unidata.geoloc.LatLonRect: ucar.unidata.geoloc.LatLonPointImpl getLowerLeftPoint()>();

        $d0 = virtualinvoke $r4.<ucar.unidata.geoloc.LatLonPointImpl: double getLatitude()>();

        $r5 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d0);

        virtualinvoke $r3.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addGlobalAttribute(java.lang.String,java.lang.String)>("geospatial_lat_min", $r5);

        $r6 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r7 = virtualinvoke $r2.<ucar.unidata.geoloc.LatLonRect: ucar.unidata.geoloc.LatLonPointImpl getUpperRightPoint()>();

        $d1 = virtualinvoke $r7.<ucar.unidata.geoloc.LatLonPointImpl: double getLatitude()>();

        $r8 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d1);

        virtualinvoke $r6.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addGlobalAttribute(java.lang.String,java.lang.String)>("geospatial_lat_max", $r8);

        $r9 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r10 = virtualinvoke $r2.<ucar.unidata.geoloc.LatLonRect: ucar.unidata.geoloc.LatLonPointImpl getLowerLeftPoint()>();

        $d2 = virtualinvoke $r10.<ucar.unidata.geoloc.LatLonPointImpl: double getLongitude()>();

        $r11 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d2);

        virtualinvoke $r9.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addGlobalAttribute(java.lang.String,java.lang.String)>("geospatial_lon_min", $r11);

        $r12 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r13 = virtualinvoke $r2.<ucar.unidata.geoloc.LatLonRect: ucar.unidata.geoloc.LatLonPointImpl getUpperRightPoint()>();

        $d3 = virtualinvoke $r13.<ucar.unidata.geoloc.LatLonPointImpl: double getLongitude()>();

        $r14 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d3);

        virtualinvoke $r12.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addGlobalAttribute(java.lang.String,java.lang.String)>("geospatial_lon_max", $r14);

        $r15 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r16 = virtualinvoke $r15.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Dimension addUnlimitedDimension(java.lang.String)>("record");

        $r17 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: java.util.List recordDims>;

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r16);

        $r18 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r19 = virtualinvoke $r18.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Dimension addDimension(java.lang.String,int)>("station", $i0);

        $r20 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: java.util.List stationDims>;

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>($r19);

        $r22 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r21 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r23 = virtualinvoke $r22.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Variable addVariable(java.lang.String,ucar.ma2.DataType,java.lang.String)>("latitude", $r21, "station");

        $r25 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r24 = new ucar.nc2.Attribute;

        specialinvoke $r24.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "degrees_north");

        virtualinvoke $r25.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r23, $r24);

        $r27 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r26 = new ucar.nc2.Attribute;

        specialinvoke $r26.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "station latitude");

        virtualinvoke $r27.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r23, $r26);

        $r29 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r28 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r30 = virtualinvoke $r29.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Variable addVariable(java.lang.String,ucar.ma2.DataType,java.lang.String)>("longitude", $r28, "station");

        $r32 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r31 = new ucar.nc2.Attribute;

        specialinvoke $r31.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "degrees_east");

        virtualinvoke $r32.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r30, $r31);

        $r34 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r33 = new ucar.nc2.Attribute;

        specialinvoke $r33.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "station longitude");

        virtualinvoke $r34.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r30, $r33);

        $z0 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: boolean useAlt>;

        if $z0 == 0 goto label7;

        $r61 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r60 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r62 = virtualinvoke $r61.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Variable addVariable(java.lang.String,ucar.ma2.DataType,java.lang.String)>("altitude", $r60, "station");

        $r64 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r63 = new ucar.nc2.Attribute;

        specialinvoke $r63.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "meters");

        virtualinvoke $r64.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r62, $r63);

        $r66 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r65 = new ucar.nc2.Attribute;

        specialinvoke $r65.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "station altitude");

        virtualinvoke $r66.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r62, $r65);

     label7:
        $r36 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r35 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: java.util.List stationDims>;

        $i1 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: int name_strlen>;

        $r37 = virtualinvoke $r36.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Variable addStringVariable(java.lang.String,java.util.List,int)>("station_id", $r35, $i1);

        $r39 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r38 = new ucar.nc2.Attribute;

        specialinvoke $r38.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "station identifier");

        virtualinvoke $r39.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r37, $r38);

        $r41 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r40 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: java.util.List stationDims>;

        $i2 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: int desc_strlen>;

        $r42 = virtualinvoke $r41.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Variable addStringVariable(java.lang.String,java.util.List,int)>("station_description", $r40, $i2);

        $r44 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r43 = new ucar.nc2.Attribute;

        specialinvoke $r43.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "station description");

        virtualinvoke $r44.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r42, $r43);

        $z1 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: boolean useWmoId>;

        if $z1 == 0 goto label8;

        $r56 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r55 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: java.util.List stationDims>;

        $i3 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: int wmo_strlen>;

        $r57 = virtualinvoke $r56.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Variable addStringVariable(java.lang.String,java.util.List,int)>("wmo_id", $r55, $i3);

        $r59 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r58 = new ucar.nc2.Attribute;

        specialinvoke $r58.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "station WMO id");

        virtualinvoke $r59.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r57, $r58);

     label8:
        $r46 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r45 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        $r47 = virtualinvoke $r46.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Variable addVariable(java.lang.String,ucar.ma2.DataType,java.lang.String)>("numProfiles", $r45, "station");

        $r49 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r48 = new ucar.nc2.Attribute;

        specialinvoke $r48.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "number of profiles in linked list for this station");

        virtualinvoke $r49.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r47, $r48);

        $r51 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r50 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        $r52 = virtualinvoke $r51.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Variable addVariable(java.lang.String,ucar.ma2.DataType,java.lang.String)>("firstProfile", $r50, "station");

        $r54 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r53 = new ucar.nc2.Attribute;

        specialinvoke $r53.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "index of first profile in linked list for this station");

        virtualinvoke $r54.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r52, $r53);

        return;
    }

    private void createProfiles(int) throws java.io.IOException
    {
        ucar.ma2.DataType $r4, $r9, $r14, $r24, $r29;
        java.util.List $r3, $r19;
        ucar.nc2.Attribute $r7, $r12, $r17, $r22, $r27, $r32;
        ucar.nc2.NetcdfFileWriteable $r1, $r5, $r8, $r10, $r13, $r15, $r18, $r20, $r23, $r25, $r28, $r30, $r33;
        int i0;
        ucar.nc2.Variable $r6, $r11, $r16, $r21, $r26, $r31;
        ucar.nc2.Dimension $r2;
        ucar.nc2.dt.point.WriterProfileObsDataset r0;

        r0 := @this: ucar.nc2.dt.point.WriterProfileObsDataset;

        i0 := @parameter0: int;

        r0.<ucar.nc2.dt.point.WriterProfileObsDataset: int nprofiles> = i0;

        $r1 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r2 = virtualinvoke $r1.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Dimension addDimension(java.lang.String,int)>("profile", i0);

        $r3 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: java.util.List profileDims>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

        $r5 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r4 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        $r6 = virtualinvoke $r5.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Variable addVariable(java.lang.String,ucar.ma2.DataType,java.lang.String)>("numChildren", $r4, "profile");

        $r8 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r7 = new ucar.nc2.Attribute;

        specialinvoke $r7.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "number of children in linked list for this profile");

        virtualinvoke $r8.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r6, $r7);

        $r10 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r9 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        $r11 = virtualinvoke $r10.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Variable addVariable(java.lang.String,ucar.ma2.DataType,java.lang.String)>("numProfilesTotal", $r9, "");

        $r13 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r12 = new ucar.nc2.Attribute;

        specialinvoke $r12.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "number of valid profiles");

        virtualinvoke $r13.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r11, $r12);

        $r15 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r14 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        $r16 = virtualinvoke $r15.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Variable addVariable(java.lang.String,ucar.ma2.DataType,java.lang.String)>("firstChild", $r14, "profile");

        $r18 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r17 = new ucar.nc2.Attribute;

        specialinvoke $r17.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "record number of first obs in linked list for this profile");

        virtualinvoke $r18.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r16, $r17);

        $r20 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r19 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: java.util.List profileDims>;

        $r21 = virtualinvoke $r20.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Variable addStringVariable(java.lang.String,java.util.List,int)>("time", $r19, 20);

        $r23 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r22 = new ucar.nc2.Attribute;

        specialinvoke $r22.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "ISO-8601 Date - time of observation");

        virtualinvoke $r23.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r21, $r22);

        $r25 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r24 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        $r26 = virtualinvoke $r25.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Variable addVariable(java.lang.String,ucar.ma2.DataType,java.lang.String)>("station_index", $r24, "profile");

        $r28 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r27 = new ucar.nc2.Attribute;

        specialinvoke $r27.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "index of parent station");

        virtualinvoke $r28.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r26, $r27);

        $r30 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r29 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        $r31 = virtualinvoke $r30.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Variable addVariable(java.lang.String,ucar.ma2.DataType,java.lang.String)>("nextProfile", $r29, "profile");

        $r33 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r32 = new ucar.nc2.Attribute;

        specialinvoke $r32.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "index of next profile in linked list for this station");

        virtualinvoke $r33.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r31, $r32);

        return;
    }

    private void createDataVariables(java.util.List) throws java.io.IOException
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        ucar.ma2.DataType $r1, $r6, $r22;
        java.util.Set $r13, $r38;
        java.util.List r11, $r17, $r25, $r37;
        ucar.nc2.Attribute $r4, $r9, r28;
        ucar.nc2.VariableSimpleIF r39, r41;
        java.lang.StringBuilder $r18, $r31;
        ucar.nc2.NetcdfFileWriteable $r2, $r5, $r7, $r10, $r20, $r29, $r34;
        int $i0;
        ucar.nc2.Variable $r3, $r8, $r24;
        java.lang.String $r21, $r23, $r32, $r35;
        java.util.Iterator $r12, $r14, $r15, $r19, $r26;
        java.lang.Object $r16, $r27, $r30, $r33, $r36;
        ucar.nc2.Dimension r40, r42;
        ucar.nc2.dt.point.WriterProfileObsDataset r0;

        r0 := @this: ucar.nc2.dt.point.WriterProfileObsDataset;

        r11 := @parameter0: java.util.List;

        $r2 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r1 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        $r3 = virtualinvoke $r2.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Variable addVariable(java.lang.String,ucar.ma2.DataType,java.lang.String)>("profile_index", $r1, "record");

        $r5 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r4 = new ucar.nc2.Attribute;

        specialinvoke $r4.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "index of parent profile");

        virtualinvoke $r5.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r3, $r4);

        $r7 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r6 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        $r8 = virtualinvoke $r7.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Variable addVariable(java.lang.String,ucar.ma2.DataType,java.lang.String)>("nextChild", $r6, "record");

        $r10 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r9 = new ucar.nc2.Attribute;

        specialinvoke $r9.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "record number of next obs in linked list for this profile");

        virtualinvoke $r10.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r8, $r9);

        $r12 = interfaceinvoke r11.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r36 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r39 = (ucar.nc2.VariableSimpleIF) $r36;

        $r37 = interfaceinvoke r39.<ucar.nc2.VariableSimpleIF: java.util.List getDimensions()>();

        $r38 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: java.util.Set dimSet>;

        interfaceinvoke $r38.<java.util.Set: boolean addAll(java.util.Collection)>($r37);

        goto label01;

     label02:
        $r13 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: java.util.Set dimSet>;

        $r14 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label05;

        $r33 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r40 = (ucar.nc2.Dimension) $r33;

        $z6 = virtualinvoke r40.<ucar.nc2.Dimension: boolean isUnlimited()>();

        if $z6 != 0 goto label04;

        $r34 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r35 = virtualinvoke r40.<ucar.nc2.Dimension: java.lang.String getName()>();

        $i0 = virtualinvoke r40.<ucar.nc2.Dimension: int getLength()>();

        $z7 = virtualinvoke r40.<ucar.nc2.Dimension: boolean isShared()>();

        $z8 = virtualinvoke r40.<ucar.nc2.Dimension: boolean isVariableLength()>();

        virtualinvoke $r34.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Dimension addDimension(java.lang.String,int,boolean,boolean,boolean)>($r35, $i0, $z7, 0, $z8);

     label04:
        goto label03;

     label05:
        $r15 = interfaceinvoke r11.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z2 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label12;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r41 = (ucar.nc2.VariableSimpleIF) $r16;

        $r17 = interfaceinvoke r41.<ucar.nc2.VariableSimpleIF: java.util.List getDimensions()>();

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>("record");

        $r19 = interfaceinvoke $r17.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z3 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label09;

        $r30 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r42 = (ucar.nc2.Dimension) $r30;

        $z5 = virtualinvoke r42.<ucar.nc2.Dimension: boolean isUnlimited()>();

        if $z5 != 0 goto label08;

        $r31 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r32 = virtualinvoke r42.<ucar.nc2.Dimension: java.lang.String getName()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

     label08:
        goto label07;

     label09:
        $r20 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r21 = interfaceinvoke r41.<ucar.nc2.VariableSimpleIF: java.lang.String getName()>();

        $r22 = interfaceinvoke r41.<ucar.nc2.VariableSimpleIF: ucar.ma2.DataType getDataType()>();

        $r23 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r24 = virtualinvoke $r20.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Variable addVariable(java.lang.String,ucar.ma2.DataType,java.lang.String)>($r21, $r22, $r23);

        $r25 = interfaceinvoke r41.<ucar.nc2.VariableSimpleIF: java.util.List getAttributes()>();

        $r26 = interfaceinvoke $r25.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z4 = interfaceinvoke $r26.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label11;

        $r27 = interfaceinvoke $r26.<java.util.Iterator: java.lang.Object next()>();

        r28 = (ucar.nc2.Attribute) $r27;

        $r29 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r29.<ucar.nc2.NetcdfFileWriteable: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r24, r28);

        goto label10;

     label11:
        goto label06;

     label12:
        return;
    }

    private void writeStationData(java.util.List) throws java.io.IOException
    {
        java.lang.IllegalStateException $r25;
        boolean $z0, $z1, $z2, $z3, $z4;
        ucar.ma2.ArrayObject$D1 $r6, $r7, $r8;
        java.util.List r1;
        ucar.ma2.ArrayDouble$D1 $r3, $r4, $r5;
        ucar.nc2.NetcdfFileWriteable $r9, $r10, $r11, $r12, $r13, $r14;
        ucar.unidata.geoloc.Station r16;
        java.util.HashMap $r2, $r17;
        int $i0, $i1, i2, $i3;
        java.lang.String $r18, $r20, $r21, $r22;
        double $d0, $d1, $d2;
        java.io.PrintStream $r23;
        ucar.ma2.InvalidRangeException $r24;
        java.lang.Object $r15;
        ucar.nc2.dt.point.WriterProfileObsDataset r0;
        ucar.nc2.dt.point.WriterProfileObsDataset$StationTracker $r19;

        r0 := @this: ucar.nc2.dt.point.WriterProfileObsDataset;

        r1 := @parameter0: java.util.List;

        r0.<ucar.nc2.dt.point.WriterProfileObsDataset: java.util.List stnList> = r1;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $r2 = new java.util.HashMap;

        $i1 = 2 * $i0;

        specialinvoke $r2.<java.util.HashMap: void <init>(int)>($i1);

        r0.<ucar.nc2.dt.point.WriterProfileObsDataset: java.util.HashMap stationMap> = $r2;

        $z0 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: boolean debug>;

        if $z0 == 0 goto label1;

        $r23 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>("stationMap created");

     label1:
        $r3 = new ucar.ma2.ArrayDouble$D1;

        specialinvoke $r3.<ucar.ma2.ArrayDouble$D1: void <init>(int)>($i0);

        $r4 = new ucar.ma2.ArrayDouble$D1;

        specialinvoke $r4.<ucar.ma2.ArrayDouble$D1: void <init>(int)>($i0);

        $r5 = new ucar.ma2.ArrayDouble$D1;

        specialinvoke $r5.<ucar.ma2.ArrayDouble$D1: void <init>(int)>($i0);

        $r6 = new ucar.ma2.ArrayObject$D1;

        specialinvoke $r6.<ucar.ma2.ArrayObject$D1: void <init>(java.lang.Class,int)>(class "Ljava/lang/String;", $i0);

        $r7 = new ucar.ma2.ArrayObject$D1;

        specialinvoke $r7.<ucar.ma2.ArrayObject$D1: void <init>(java.lang.Class,int)>(class "Ljava/lang/String;", $i0);

        $r8 = new ucar.ma2.ArrayObject$D1;

        specialinvoke $r8.<ucar.ma2.ArrayObject$D1: void <init>(java.lang.Class,int)>(class "Ljava/lang/String;", $i0);

        i2 = 0;

     label2:
        $i3 = interfaceinvoke r1.<java.util.List: int size()>();

        if i2 >= $i3 goto label5;

        $r15 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        r16 = (ucar.unidata.geoloc.Station) $r15;

        $r17 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: java.util.HashMap stationMap>;

        $r18 = interfaceinvoke r16.<ucar.unidata.geoloc.Station: java.lang.String getName()>();

        $r19 = new ucar.nc2.dt.point.WriterProfileObsDataset$StationTracker;

        specialinvoke $r19.<ucar.nc2.dt.point.WriterProfileObsDataset$StationTracker: void <init>(ucar.nc2.dt.point.WriterProfileObsDataset,int)>(r0, i2);

        virtualinvoke $r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r19);

        $d0 = interfaceinvoke r16.<ucar.unidata.geoloc.Station: double getLatitude()>();

        virtualinvoke $r3.<ucar.ma2.ArrayDouble$D1: void set(int,double)>(i2, $d0);

        $d1 = interfaceinvoke r16.<ucar.unidata.geoloc.Station: double getLongitude()>();

        virtualinvoke $r4.<ucar.ma2.ArrayDouble$D1: void set(int,double)>(i2, $d1);

        $z3 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: boolean useAlt>;

        if $z3 == 0 goto label3;

        $d2 = interfaceinvoke r16.<ucar.unidata.geoloc.Station: double getAltitude()>();

        virtualinvoke $r5.<ucar.ma2.ArrayDouble$D1: void set(int,double)>(i2, $d2);

     label3:
        $r20 = interfaceinvoke r16.<ucar.unidata.geoloc.Station: java.lang.String getName()>();

        virtualinvoke $r6.<ucar.ma2.ArrayObject$D1: void set(int,java.lang.Object)>(i2, $r20);

        $r21 = interfaceinvoke r16.<ucar.unidata.geoloc.Station: java.lang.String getDescription()>();

        virtualinvoke $r7.<ucar.ma2.ArrayObject$D1: void set(int,java.lang.Object)>(i2, $r21);

        $z4 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: boolean useWmoId>;

        if $z4 == 0 goto label4;

        $r22 = interfaceinvoke r16.<ucar.unidata.geoloc.Station: java.lang.String getWmoId()>();

        virtualinvoke $r8.<ucar.ma2.ArrayObject$D1: void set(int,java.lang.Object)>(i2, $r22);

     label4:
        i2 = i2 + 1;

        goto label2;

     label5:
        $r9 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r9.<ucar.nc2.NetcdfFileWriteable: void write(java.lang.String,ucar.ma2.Array)>("latitude", $r3);

        $r10 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r10.<ucar.nc2.NetcdfFileWriteable: void write(java.lang.String,ucar.ma2.Array)>("longitude", $r4);

        $z1 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: boolean useAlt>;

        if $z1 == 0 goto label6;

        $r14 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r14.<ucar.nc2.NetcdfFileWriteable: void write(java.lang.String,ucar.ma2.Array)>("altitude", $r5);

     label6:
        $r11 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r11.<ucar.nc2.NetcdfFileWriteable: void writeStringData(java.lang.String,ucar.ma2.Array)>("station_id", $r6);

        $r12 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r12.<ucar.nc2.NetcdfFileWriteable: void writeStringData(java.lang.String,ucar.ma2.Array)>("station_description", $r7);

        $z2 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: boolean useWmoId>;

        if $z2 == 0 goto label7;

        $r13 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r13.<ucar.nc2.NetcdfFileWriteable: void writeStringData(java.lang.String,ucar.ma2.Array)>("wmo_id", $r8);

     label7:
        goto label9;

     label8:
        $r24 := @caughtexception;

        virtualinvoke $r24.<ucar.ma2.InvalidRangeException: void printStackTrace()>();

        $r25 = new java.lang.IllegalStateException;

        specialinvoke $r25.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r24);

        throw $r25;

     label9:
        return;

        catch ucar.ma2.InvalidRangeException from label5 to label7 with label8;
    }

    private void writeDataFinish() throws java.io.IOException
    {
        java.lang.Integer r46, r48, $r51, $r64, r74, r75, r76, r79;
        java.util.Set $r34;
        ucar.nc2.Attribute $r90, $r91;
        ucar.nc2.NetcdfFileWriteable $r2, $r8, $r9, $r10, $r15, $r16, $r17, $r21, $r26;
        java.lang.String $r22, $r27, $r31, $r55;
        ucar.ma2.ArrayInt$D1 $r82, $r83, $r84, $r86, $r87, $r88;
        ucar.ma2.InvalidRangeException $r65, $r67, $r69;
        ucar.ma2.ArrayInt$D0 $r80;
        ucar.nc2.dt.point.WriterProfileObsDataset r1;
        java.lang.IllegalStateException $r81, $r85, $r89;
        java.util.Date $r19, $r24, r37;
        boolean $z0;
        java.util.List $r3, $r7, $r14, $r28, $r41, $r42, r43, $r49, $r52, $r57, $r58, $r62, r73;
        ucar.nc2.units.DateFormatter $r20, $r25;
        ucar.unidata.geoloc.Station r71, r77;
        java.util.HashMap $r30, $r33, $r38, $r54;
        ucar.nc2.dt.point.WriterProfileObsDataset$ProfileTracker r40;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, i31, $i32, i33, i34, $i35, i36, $i38, $i40, $i42, $i44;
        java.util.Iterator $r35;
        java.lang.Object $r29, $r32, $r36, $r39, $r44, $r45, $r47, $r50, $r53, $r56, $r59, $r60, $r61, $r63;
        ucar.nc2.dt.point.WriterProfileObsDataset$StationTracker r72, r78;

        r1 := @this: ucar.nc2.dt.point.WriterProfileObsDataset;

        $r80 = new ucar.ma2.ArrayInt$D0;

        specialinvoke $r80.<ucar.ma2.ArrayInt$D0: void <init>()>();

        $i0 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: int profileIndex>;

        virtualinvoke $r80.<ucar.ma2.ArrayInt$D0: void set(int)>($i0);

     label01:
        $r2 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r2.<ucar.nc2.NetcdfFileWriteable: void write(java.lang.String,ucar.ma2.Array)>("numProfilesTotal", $r80);

     label02:
        goto label04;

     label03:
        $r69 := @caughtexception;

        virtualinvoke $r69.<ucar.ma2.InvalidRangeException: void printStackTrace()>();

        $r81 = new java.lang.IllegalStateException;

        specialinvoke $r81.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r69);

        throw $r81;

     label04:
        $r3 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: java.util.List stnList>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r82 = new ucar.ma2.ArrayInt$D1;

        specialinvoke $r82.<ucar.ma2.ArrayInt$D1: void <init>(int)>($i1);

        $r83 = new ucar.ma2.ArrayInt$D1;

        specialinvoke $r83.<ucar.ma2.ArrayInt$D1: void <init>(int)>($i1);

        $r84 = new ucar.ma2.ArrayInt$D1;

        $i2 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: int nprofiles>;

        specialinvoke $r84.<ucar.ma2.ArrayInt$D1: void <init>(int)>($i2);

        i31 = 0;

     label05:
        $r7 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: java.util.List stnList>;

        $i3 = interfaceinvoke $r7.<java.util.List: int size()>();

        if i31 >= $i3 goto label11;

        $r52 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: java.util.List stnList>;

        $r53 = interfaceinvoke $r52.<java.util.List: java.lang.Object get(int)>(i31);

        r71 = (ucar.unidata.geoloc.Station) $r53;

        $r54 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: java.util.HashMap stationMap>;

        $r55 = interfaceinvoke r71.<ucar.unidata.geoloc.Station: java.lang.String getName()>();

        $r56 = virtualinvoke $r54.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r55);

        r72 = (ucar.nc2.dt.point.WriterProfileObsDataset$StationTracker) $r56;

        $i20 = r72.<ucar.nc2.dt.point.WriterProfileObsDataset$StationTracker: int numChildren>;

        virtualinvoke $r83.<ucar.ma2.ArrayInt$D1: void set(int,int)>(i31, $i20);

        $r57 = r72.<ucar.nc2.dt.point.WriterProfileObsDataset$StationTracker: java.util.List link>;

        $i21 = interfaceinvoke $r57.<java.util.List: int size()>();

        if $i21 <= 0 goto label06;

        $r62 = r72.<ucar.nc2.dt.point.WriterProfileObsDataset$StationTracker: java.util.List link>;

        $r63 = interfaceinvoke $r62.<java.util.List: java.lang.Object get(int)>(0);

        $r64 = (java.lang.Integer) $r63;

        $i32 = virtualinvoke $r64.<java.lang.Integer: int intValue()>();

        goto label07;

     label06:
        $i38 = (int) -1;

        $i32 = $i38;

     label07:
        virtualinvoke $r82.<ucar.ma2.ArrayInt$D1: void set(int,int)>(i31, $i32);

        $r58 = r72.<ucar.nc2.dt.point.WriterProfileObsDataset$StationTracker: java.util.List link>;

        $i22 = interfaceinvoke $r58.<java.util.List: int size()>();

        if $i22 <= 0 goto label10;

        r73 = r72.<ucar.nc2.dt.point.WriterProfileObsDataset$StationTracker: java.util.List link>;

        i33 = 0;

     label08:
        $i23 = interfaceinvoke r73.<java.util.List: int size()>();

        $i24 = $i23 - 1;

        if i33 >= $i24 goto label09;

        $r60 = interfaceinvoke r73.<java.util.List: java.lang.Object get(int)>(i33);

        r74 = (java.lang.Integer) $r60;

        $i28 = i33 + 1;

        $r61 = interfaceinvoke r73.<java.util.List: java.lang.Object get(int)>($i28);

        r75 = (java.lang.Integer) $r61;

        $i29 = virtualinvoke r74.<java.lang.Integer: int intValue()>();

        $i30 = virtualinvoke r75.<java.lang.Integer: int intValue()>();

        virtualinvoke $r84.<ucar.ma2.ArrayInt$D1: void set(int,int)>($i29, $i30);

        i33 = i33 + 1;

        goto label08;

     label09:
        $i25 = interfaceinvoke r73.<java.util.List: int size()>();

        $i26 = $i25 - 1;

        $r59 = interfaceinvoke r73.<java.util.List: java.lang.Object get(int)>($i26);

        r76 = (java.lang.Integer) $r59;

        $i27 = virtualinvoke r76.<java.lang.Integer: int intValue()>();

        $i40 = (int) -1;

        virtualinvoke $r84.<ucar.ma2.ArrayInt$D1: void set(int,int)>($i27, $i40);

     label10:
        i31 = i31 + 1;

        goto label05;

     label11:
        $r8 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r8.<ucar.nc2.NetcdfFileWriteable: void write(java.lang.String,ucar.ma2.Array)>("firstProfile", $r82);

        $r9 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r9.<ucar.nc2.NetcdfFileWriteable: void write(java.lang.String,ucar.ma2.Array)>("numProfiles", $r83);

        $r10 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r10.<ucar.nc2.NetcdfFileWriteable: void write(java.lang.String,ucar.ma2.Array)>("nextProfile", $r84);

     label12:
        goto label14;

     label13:
        $r67 := @caughtexception;

        virtualinvoke $r67.<ucar.ma2.InvalidRangeException: void printStackTrace()>();

        $r85 = new java.lang.IllegalStateException;

        specialinvoke $r85.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r67);

        throw $r85;

     label14:
        $r86 = new ucar.ma2.ArrayInt$D1;

        $i4 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: int recno>;

        specialinvoke $r86.<ucar.ma2.ArrayInt$D1: void <init>(int)>($i4);

        $r87 = new ucar.ma2.ArrayInt$D1;

        $i5 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: int nprofiles>;

        specialinvoke $r87.<ucar.ma2.ArrayInt$D1: void <init>(int)>($i5);

        $r88 = new ucar.ma2.ArrayInt$D1;

        $i6 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: int nprofiles>;

        specialinvoke $r88.<ucar.ma2.ArrayInt$D1: void <init>(int)>($i6);

        i34 = 0;

     label15:
        $r14 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: java.util.List stnList>;

        $i7 = interfaceinvoke $r14.<java.util.List: int size()>();

        if i34 >= $i7 goto label23;

        $r28 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: java.util.List stnList>;

        $r29 = interfaceinvoke $r28.<java.util.List: java.lang.Object get(int)>(i34);

        r77 = (ucar.unidata.geoloc.Station) $r29;

        $r30 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: java.util.HashMap stationMap>;

        $r31 = interfaceinvoke r77.<ucar.unidata.geoloc.Station: java.lang.String getName()>();

        $r32 = virtualinvoke $r30.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r31);

        r78 = (ucar.nc2.dt.point.WriterProfileObsDataset$StationTracker) $r32;

        $r33 = r78.<ucar.nc2.dt.point.WriterProfileObsDataset$StationTracker: java.util.HashMap profileMap>;

        $r34 = virtualinvoke $r33.<java.util.HashMap: java.util.Set keySet()>();

        $r35 = interfaceinvoke $r34.<java.util.Set: java.util.Iterator iterator()>();

     label16:
        $z0 = interfaceinvoke $r35.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label22;

        $r36 = interfaceinvoke $r35.<java.util.Iterator: java.lang.Object next()>();

        r37 = (java.util.Date) $r36;

        $r38 = r78.<ucar.nc2.dt.point.WriterProfileObsDataset$StationTracker: java.util.HashMap profileMap>;

        $r39 = virtualinvoke $r38.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r37);

        r40 = (ucar.nc2.dt.point.WriterProfileObsDataset$ProfileTracker) $r39;

        i8 = r40.<ucar.nc2.dt.point.WriterProfileObsDataset$ProfileTracker: int parent_index>;

        $i9 = r40.<ucar.nc2.dt.point.WriterProfileObsDataset$ProfileTracker: int numChildren>;

        virtualinvoke $r88.<ucar.ma2.ArrayInt$D1: void set(int,int)>(i8, $i9);

        $r41 = r40.<ucar.nc2.dt.point.WriterProfileObsDataset$ProfileTracker: java.util.List link>;

        $i10 = interfaceinvoke $r41.<java.util.List: int size()>();

        if $i10 <= 0 goto label17;

        $r49 = r40.<ucar.nc2.dt.point.WriterProfileObsDataset$ProfileTracker: java.util.List link>;

        $r50 = interfaceinvoke $r49.<java.util.List: java.lang.Object get(int)>(0);

        $r51 = (java.lang.Integer) $r50;

        $i35 = virtualinvoke $r51.<java.lang.Integer: int intValue()>();

        goto label18;

     label17:
        $i42 = (int) -1;

        $i35 = $i42;

     label18:
        virtualinvoke $r87.<ucar.ma2.ArrayInt$D1: void set(int,int)>(i8, $i35);

        $r42 = r40.<ucar.nc2.dt.point.WriterProfileObsDataset$ProfileTracker: java.util.List link>;

        $i11 = interfaceinvoke $r42.<java.util.List: int size()>();

        if $i11 <= 0 goto label21;

        r43 = r40.<ucar.nc2.dt.point.WriterProfileObsDataset$ProfileTracker: java.util.List link>;

        i36 = 0;

     label19:
        $i12 = interfaceinvoke r43.<java.util.List: int size()>();

        $i13 = $i12 - 1;

        if i36 >= $i13 goto label20;

        $r45 = interfaceinvoke r43.<java.util.List: java.lang.Object get(int)>(i36);

        r46 = (java.lang.Integer) $r45;

        $i17 = i36 + 1;

        $r47 = interfaceinvoke r43.<java.util.List: java.lang.Object get(int)>($i17);

        r48 = (java.lang.Integer) $r47;

        $i18 = virtualinvoke r46.<java.lang.Integer: int intValue()>();

        $i19 = virtualinvoke r48.<java.lang.Integer: int intValue()>();

        virtualinvoke $r86.<ucar.ma2.ArrayInt$D1: void set(int,int)>($i18, $i19);

        i36 = i36 + 1;

        goto label19;

     label20:
        $i14 = interfaceinvoke r43.<java.util.List: int size()>();

        $i15 = $i14 - 1;

        $r44 = interfaceinvoke r43.<java.util.List: java.lang.Object get(int)>($i15);

        r79 = (java.lang.Integer) $r44;

        $i16 = virtualinvoke r79.<java.lang.Integer: int intValue()>();

        $i44 = (int) -1;

        virtualinvoke $r86.<ucar.ma2.ArrayInt$D1: void set(int,int)>($i16, $i44);

     label21:
        goto label16;

     label22:
        i34 = i34 + 1;

        goto label15;

     label23:
        $r15 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r15.<ucar.nc2.NetcdfFileWriteable: void write(java.lang.String,ucar.ma2.Array)>("firstChild", $r87);

        $r16 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r16.<ucar.nc2.NetcdfFileWriteable: void write(java.lang.String,ucar.ma2.Array)>("numChildren", $r88);

        $r17 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r17.<ucar.nc2.NetcdfFileWriteable: void write(java.lang.String,ucar.ma2.Array)>("nextChild", $r86);

     label24:
        goto label26;

     label25:
        $r65 := @caughtexception;

        virtualinvoke $r65.<ucar.ma2.InvalidRangeException: void printStackTrace()>();

        $r89 = new java.lang.IllegalStateException;

        specialinvoke $r89.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r65);

        throw $r89;

     label26:
        $r21 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r90 = new ucar.nc2.Attribute;

        $r20 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.units.DateFormatter dateFormatter>;

        $r19 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: java.util.Date minDate>;

        $r22 = virtualinvoke $r20.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>($r19);

        specialinvoke $r90.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("time_coverage_start", $r22);

        virtualinvoke $r21.<ucar.nc2.NetcdfFileWriteable: void updateAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>(null, $r90);

        $r26 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r91 = new ucar.nc2.Attribute;

        $r25 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.units.DateFormatter dateFormatter>;

        $r24 = r1.<ucar.nc2.dt.point.WriterProfileObsDataset: java.util.Date maxDate>;

        $r27 = virtualinvoke $r25.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>($r24);

        specialinvoke $r91.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("time_coverage_end", $r27);

        virtualinvoke $r26.<ucar.nc2.NetcdfFileWriteable: void updateAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>(null, $r91);

        return;

        catch ucar.ma2.InvalidRangeException from label01 to label02 with label03;
        catch ucar.ma2.InvalidRangeException from label11 to label12 with label13;
        catch ucar.ma2.InvalidRangeException from label23 to label24 with label25;
    }

    public void writeRecord(ucar.nc2.dt.StationObsDatatype, ucar.ma2.StructureData) throws java.io.IOException
    {
        java.io.PrintStream $r7;
        java.util.Date $r4;
        ucar.unidata.geoloc.Station $r2, $r11;
        ucar.ma2.StructureData r5;
        ucar.nc2.dt.StationObsDatatype r1;
        java.lang.StringBuilder $r6, $r8, $r9, $r10, $r12;
        ucar.nc2.dt.point.WriterProfileObsDataset r0;
        java.lang.String $r3, $r13;
        boolean $z0;

        r0 := @this: ucar.nc2.dt.point.WriterProfileObsDataset;

        r1 := @parameter0: ucar.nc2.dt.StationObsDatatype;

        r5 := @parameter1: ucar.ma2.StructureData;

        $z0 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: boolean debug>;

        if $z0 == 0 goto label1;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sobs= ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; station = ");

        $r11 = interfaceinvoke r1.<ucar.nc2.dt.StationObsDatatype: ucar.unidata.geoloc.Station getStation()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r13);

     label1:
        $r2 = interfaceinvoke r1.<ucar.nc2.dt.StationObsDatatype: ucar.unidata.geoloc.Station getStation()>();

        $r3 = interfaceinvoke $r2.<ucar.unidata.geoloc.Station: java.lang.String getName()>();

        $r4 = interfaceinvoke r1.<ucar.nc2.dt.StationObsDatatype: java.util.Date getObservationTimeAsDate()>();

        virtualinvoke r0.<ucar.nc2.dt.point.WriterProfileObsDataset: void writeRecord(java.lang.String,java.util.Date,ucar.ma2.StructureData)>($r3, $r4, r5);

        return;
    }

    public void writeRecord(java.lang.String, java.util.Date, ucar.ma2.StructureData) throws java.io.IOException
    {
        java.lang.Integer $r18, $r41;
        ucar.ma2.StructureMembers $r10;
        ucar.nc2.NetcdfFileWriteable $r26, $r29, $r44, $r46;
        ucar.ma2.ArrayStructureW $r8;
        java.lang.String r1, $r22, $r38;
        ucar.ma2.ArrayInt$D1 $r23, $r27, $r39, $r48;
        ucar.ma2.InvalidRangeException $r30, $r32;
        ucar.nc2.dt.point.WriterProfileObsDataset r0;
        java.lang.IllegalStateException $r31, $r33;
        java.util.Date r5, $r12, $r13, $r14, $r35;
        ucar.ma2.StructureData r9;
        int[] $r11, $r19, $r25, $r28, $r42, $r43, $r45, $r47;
        boolean $z0, $z1;
        ucar.ma2.ArrayObject$D1 $r21, $r24, $r36;
        java.util.List $r17, $r40;
        ucar.nc2.units.DateFormatter $r20, $r37;
        java.util.HashMap $r2, $r6, $r16;
        ucar.nc2.dt.point.WriterProfileObsDataset$ProfileTracker $r15, r34;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        java.lang.Object $r3, $r7;
        ucar.nc2.dt.point.WriterProfileObsDataset$StationTracker r4;

        r0 := @this: ucar.nc2.dt.point.WriterProfileObsDataset;

        r1 := @parameter0: java.lang.String;

        r5 := @parameter1: java.util.Date;

        r9 := @parameter2: ucar.ma2.StructureData;

        $r2 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: java.util.HashMap stationMap>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (ucar.nc2.dt.point.WriterProfileObsDataset$StationTracker) $r3;

        $r6 = r4.<ucar.nc2.dt.point.WriterProfileObsDataset$StationTracker: java.util.HashMap profileMap>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5);

        r34 = (ucar.nc2.dt.point.WriterProfileObsDataset$ProfileTracker) $r7;

        if r34 != null goto label05;

        $r15 = new ucar.nc2.dt.point.WriterProfileObsDataset$ProfileTracker;

        $i2 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: int profileIndex>;

        specialinvoke $r15.<ucar.nc2.dt.point.WriterProfileObsDataset$ProfileTracker: void <init>(ucar.nc2.dt.point.WriterProfileObsDataset,int)>(r0, $i2);

        r34 = $r15;

        $r16 = r4.<ucar.nc2.dt.point.WriterProfileObsDataset$StationTracker: java.util.HashMap profileMap>;

        virtualinvoke $r16.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r15);

        $r17 = r4.<ucar.nc2.dt.point.WriterProfileObsDataset$StationTracker: java.util.List link>;

        $i3 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: int profileIndex>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r18);

        $i4 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: int profileIndex>;

        r4.<ucar.nc2.dt.point.WriterProfileObsDataset$StationTracker: int lastChild> = $i4;

        $i5 = r4.<ucar.nc2.dt.point.WriterProfileObsDataset$StationTracker: int numChildren>;

        $i6 = $i5 + 1;

        r4.<ucar.nc2.dt.point.WriterProfileObsDataset$StationTracker: int numChildren> = $i6;

     label01:
        $r19 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: int[] originTime>;

        $i7 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: int profileIndex>;

        $r19[0] = $i7;

        $r21 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.ma2.ArrayObject$D1 timeArray>;

        $r20 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.units.DateFormatter dateFormatter>;

        $r22 = virtualinvoke $r20.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>(r5);

        virtualinvoke $r21.<ucar.ma2.ArrayObject$D1: void set(int,java.lang.Object)>(0, $r22);

        $r23 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.ma2.ArrayInt$D1 parentArray>;

        $i8 = r4.<ucar.nc2.dt.point.WriterProfileObsDataset$StationTracker: int parent_index>;

        virtualinvoke $r23.<ucar.ma2.ArrayInt$D1: void set(int,int)>(0, $i8);

        $r26 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r25 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: int[] originTime>;

        $r24 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.ma2.ArrayObject$D1 timeArray>;

        virtualinvoke $r26.<ucar.nc2.NetcdfFileWriteable: void writeStringData(java.lang.String,int[],ucar.ma2.Array)>("time", $r25, $r24);

        $r29 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r28 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: int[] originTime>;

        $r27 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.ma2.ArrayInt$D1 parentArray>;

        virtualinvoke $r29.<ucar.nc2.NetcdfFileWriteable: void write(java.lang.String,int[],ucar.ma2.Array)>("station_index", $r28, $r27);

     label02:
        goto label04;

     label03:
        $r32 := @caughtexception;

        virtualinvoke $r32.<ucar.ma2.InvalidRangeException: void printStackTrace()>();

        $r33 = new java.lang.IllegalStateException;

        specialinvoke $r33.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r32);

        throw $r33;

     label04:
        $i9 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: int profileIndex>;

        $i10 = $i9 + 1;

        r0.<ucar.nc2.dt.point.WriterProfileObsDataset: int profileIndex> = $i10;

     label05:
        $r8 = new ucar.ma2.ArrayStructureW;

        $r10 = virtualinvoke r9.<ucar.ma2.StructureData: ucar.ma2.StructureMembers getStructureMembers()>();

        $r11 = newarray (int)[1];

        $r11[0] = 1;

        specialinvoke $r8.<ucar.ma2.ArrayStructureW: void <init>(ucar.ma2.StructureMembers,int[])>($r10, $r11);

        virtualinvoke $r8.<ucar.ma2.ArrayStructureW: void setStructureData(ucar.ma2.StructureData,int)>(r9, 0);

        $r12 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: java.util.Date minDate>;

        if $r12 == null goto label06;

        $r14 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: java.util.Date minDate>;

        $z1 = virtualinvoke $r14.<java.util.Date: boolean after(java.util.Date)>(r5);

        if $z1 == 0 goto label07;

     label06:
        r0.<ucar.nc2.dt.point.WriterProfileObsDataset: java.util.Date minDate> = r5;

     label07:
        $r35 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: java.util.Date maxDate>;

        if $r35 == null goto label08;

        $r13 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: java.util.Date maxDate>;

        $z0 = virtualinvoke $r13.<java.util.Date: boolean before(java.util.Date)>(r5);

        if $z0 == 0 goto label09;

     label08:
        r0.<ucar.nc2.dt.point.WriterProfileObsDataset: java.util.Date maxDate> = r5;

     label09:
        $r36 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.ma2.ArrayObject$D1 timeArray>;

        $r37 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.units.DateFormatter dateFormatter>;

        $r38 = virtualinvoke $r37.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>(r5);

        virtualinvoke $r36.<ucar.ma2.ArrayObject$D1: void set(int,java.lang.Object)>(0, $r38);

        $r39 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.ma2.ArrayInt$D1 parentArray>;

        $i11 = r34.<ucar.nc2.dt.point.WriterProfileObsDataset$ProfileTracker: int parent_index>;

        virtualinvoke $r39.<ucar.ma2.ArrayInt$D1: void set(int,int)>(0, $i11);

        $r40 = r34.<ucar.nc2.dt.point.WriterProfileObsDataset$ProfileTracker: java.util.List link>;

        $i12 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: int recno>;

        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        interfaceinvoke $r40.<java.util.List: boolean add(java.lang.Object)>($r41);

        $i13 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: int recno>;

        r34.<ucar.nc2.dt.point.WriterProfileObsDataset$ProfileTracker: int lastChild> = $i13;

        $i14 = r34.<ucar.nc2.dt.point.WriterProfileObsDataset$ProfileTracker: int numChildren>;

        $i15 = $i14 + 1;

        r34.<ucar.nc2.dt.point.WriterProfileObsDataset$ProfileTracker: int numChildren> = $i15;

        $r42 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: int[] origin>;

        $i16 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: int recno>;

        $r42[0] = $i16;

        $r43 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: int[] originTime>;

        $i17 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: int recno>;

        $r43[0] = $i17;

     label10:
        $r44 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r45 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: int[] origin>;

        virtualinvoke $r44.<ucar.nc2.NetcdfFileWriteable: void write(java.lang.String,int[],ucar.ma2.Array)>("record", $r45, $r8);

        $r46 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        $r47 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: int[] originTime>;

        $r48 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.ma2.ArrayInt$D1 parentArray>;

        virtualinvoke $r46.<ucar.nc2.NetcdfFileWriteable: void write(java.lang.String,int[],ucar.ma2.Array)>("profile_index", $r47, $r48);

     label11:
        goto label13;

     label12:
        $r30 := @caughtexception;

        virtualinvoke $r30.<ucar.ma2.InvalidRangeException: void printStackTrace()>();

        $r31 = new java.lang.IllegalStateException;

        specialinvoke $r31.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r30);

        throw $r31;

     label13:
        $i0 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: int recno>;

        $i1 = $i0 + 1;

        r0.<ucar.nc2.dt.point.WriterProfileObsDataset: int recno> = $i1;

        return;

        catch ucar.ma2.InvalidRangeException from label01 to label02 with label03;
        catch ucar.ma2.InvalidRangeException from label10 to label11 with label12;
    }

    public void finish() throws java.io.IOException
    {
        ucar.nc2.NetcdfFileWriteable $r1;
        ucar.nc2.dt.point.WriterProfileObsDataset r0;

        r0 := @this: ucar.nc2.dt.point.WriterProfileObsDataset;

        specialinvoke r0.<ucar.nc2.dt.point.WriterProfileObsDataset: void writeDataFinish()>();

        $r1 = r0.<ucar.nc2.dt.point.WriterProfileObsDataset: ucar.nc2.NetcdfFileWriteable ncfile>;

        virtualinvoke $r1.<ucar.nc2.NetcdfFileWriteable: void close()>();

        return;
    }

    private ucar.unidata.geoloc.LatLonRect getBoundingBox(java.util.List)
    {
        ucar.unidata.geoloc.Station r6, r7;
        ucar.unidata.geoloc.LatLonRect $r3;
        java.util.List r0;
        int $i0, i1;
        java.lang.Object $r1, $r4;
        ucar.unidata.geoloc.LatLonPointImpl $r2;
        ucar.nc2.dt.point.WriterProfileObsDataset r5;
        double $d0, $d1, $d2, $d3;

        r5 := @this: ucar.nc2.dt.point.WriterProfileObsDataset;

        r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        r6 = (ucar.unidata.geoloc.Station) $r1;

        $r2 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r2.<ucar.unidata.geoloc.LatLonPointImpl: void <init>()>();

        $d0 = interfaceinvoke r6.<ucar.unidata.geoloc.Station: double getLatitude()>();

        $d1 = interfaceinvoke r6.<ucar.unidata.geoloc.Station: double getLongitude()>();

        virtualinvoke $r2.<ucar.unidata.geoloc.LatLonPointImpl: void set(double,double)>($d0, $d1);

        $r3 = new ucar.unidata.geoloc.LatLonRect;

        specialinvoke $r3.<ucar.unidata.geoloc.LatLonRect: void <init>(ucar.unidata.geoloc.LatLonPoint,double,double)>($r2, 0.001, 0.001);

        i1 = 1;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        r7 = (ucar.unidata.geoloc.Station) $r4;

        $d2 = interfaceinvoke r7.<ucar.unidata.geoloc.Station: double getLatitude()>();

        $d3 = interfaceinvoke r7.<ucar.unidata.geoloc.Station: double getLongitude()>();

        virtualinvoke $r2.<ucar.unidata.geoloc.LatLonPointImpl: void set(double,double)>($d2, $d3);

        virtualinvoke $r3.<ucar.unidata.geoloc.LatLonRect: void extend(ucar.unidata.geoloc.LatLonPoint)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r3;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        ucar.ma2.StructureDataIterator $r16, $r30;
        ucar.unidata.geoloc.Station[] $r18;
        ucar.ma2.StructureMembers $r2;
        java.lang.StringBuilder $r22, $r23, $r24, $r26, $r27, $r28, $r31, $r33, $r34;
        java.lang.Object[] $r19;
        long $l0, $l3, l9;
        ucar.nc2.Structure r5;
        java.util.ArrayList $r7;
        java.lang.String $r12, $r13, $r14, $r25, $r29, $r35, $r37, $r45, $r51, $r53, $r54, $r55, $r56, $r57, r63;
        ucar.nc2.dt.StationImpl $r47;
        ucar.nc2.units.DateUnit $r15;
        ucar.ma2.Array $r43;
        ucar.nc2.Dimension $r3, $r49;
        ucar.nc2.dt.point.WriterProfileObsDataset $r21;
        ucar.nc2.dataset.NetcdfDataset $r1;
        java.util.Date $r38;
        ucar.ma2.StructureData $r36, $r41, $r44;
        int[] $r10, $r59;
        boolean $z0, $z1, $z2, $z3, $z4;
        ucar.nc2.dataset.VariableDS $r50;
        java.util.Collection $r17;
        ucar.ma2.DataType $r52, $r58;
        java.util.List $r6, $r20, $r39;
        float $f0, $f1, $f2;
        ucar.unidata.geoloc.Station r62;
        java.util.HashMap $r0;
        java.lang.String[] r60;
        int $i1, $i2, $i4, $i5, $i6, i7, i8;
        ucar.nc2.Variable $r4, $r11, r61;
        double $d0, $d1, $d2, $d3;
        ucar.ma2.ArrayStructureMA $r9;
        java.io.PrintStream $r32;
        java.util.Iterator $r8, $r40;
        java.lang.Object $r42, $r46, $r48;

        r60 := @parameter0: java.lang.String[];

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r1 = staticinvoke <ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.NetcdfDataset openDataset(java.lang.String)>("R:/testdata/sounding/netcdf/Upperair_20070401_0000.nc");

        virtualinvoke $r1.<ucar.nc2.dataset.NetcdfDataset: java.lang.Object sendIospMessage(java.lang.Object)>("AddRecordStructure");

        $r2 = new ucar.ma2.StructureMembers;

        specialinvoke $r2.<ucar.ma2.StructureMembers: void <init>(java.lang.String)>("manLevel");

        $r3 = virtualinvoke $r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>("manLevel");

        $r4 = virtualinvoke $r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("record");

        r5 = (ucar.nc2.Structure) $r4;

        $r6 = virtualinvoke r5.<ucar.nc2.Structure: java.util.List getVariables()>();

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $r8 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r48 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r61 = (ucar.nc2.Variable) $r48;

        $i6 = virtualinvoke r61.<ucar.nc2.Variable: int getRank()>();

        if $i6 != 1 goto label02;

        $r49 = virtualinvoke r61.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $z3 = virtualinvoke $r49.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r3);

        if $z3 == 0 goto label02;

        $r50 = new ucar.nc2.dataset.VariableDS;

        $r51 = virtualinvoke r61.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r52 = virtualinvoke r61.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r53 = virtualinvoke r61.<ucar.nc2.Variable: java.lang.String getUnitsString()>();

        $r54 = virtualinvoke r61.<ucar.nc2.Variable: java.lang.String getDescription()>();

        specialinvoke $r50.<ucar.nc2.dataset.VariableDS: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>($r1, null, null, $r51, $r52, "", $r53, $r54);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r50);

        $r55 = virtualinvoke r61.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r56 = virtualinvoke r61.<ucar.nc2.Variable: java.lang.String getDescription()>();

        $r57 = virtualinvoke r61.<ucar.nc2.Variable: java.lang.String getUnitsString()>();

        $r58 = virtualinvoke r61.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r59 = newarray (int)[0];

        virtualinvoke $r2.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member addMember(java.lang.String,java.lang.String,java.lang.String,ucar.ma2.DataType,int[])>($r55, $r56, $r57, $r58, $r59);

     label02:
        goto label01;

     label03:
        $r9 = new ucar.ma2.ArrayStructureMA;

        $r10 = newarray (int)[1];

        $i1 = virtualinvoke $r3.<ucar.nc2.Dimension: int getLength()>();

        $r10[0] = $i1;

        specialinvoke $r9.<ucar.ma2.ArrayStructureMA: void <init>(ucar.ma2.StructureMembers,int[])>($r2, $r10);

        $r11 = virtualinvoke $r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("synTime");

        $r12 = virtualinvoke $r1.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>($r11, "units", null);

        $r13 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String remove(java.lang.String,int)>($r12, 40);

        $r14 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String remove(java.lang.String,int)>($r13, 41);

        $r15 = new ucar.nc2.units.DateUnit;

        specialinvoke $r15.<ucar.nc2.units.DateUnit: void <init>(java.lang.String)>($r14);

        i7 = 0;

        $r16 = virtualinvoke r5.<ucar.nc2.Structure: ucar.ma2.StructureDataIterator getStructureIterator()>();

     label04:
        $z1 = interfaceinvoke $r16.<ucar.ma2.StructureDataIterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        $r44 = interfaceinvoke $r16.<ucar.ma2.StructureDataIterator: ucar.ma2.StructureData next()>();

        $r45 = virtualinvoke $r44.<ucar.ma2.StructureData: java.lang.String getScalarString(java.lang.String)>("staName");

        $r46 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r45);

        r62 = (ucar.unidata.geoloc.Station) $r46;

        if r62 != null goto label05;

        $f0 = virtualinvoke $r44.<ucar.ma2.StructureData: float convertScalarFloat(java.lang.String)>("staLat");

        $f1 = virtualinvoke $r44.<ucar.ma2.StructureData: float convertScalarFloat(java.lang.String)>("staLon");

        $f2 = virtualinvoke $r44.<ucar.ma2.StructureData: float convertScalarFloat(java.lang.String)>("staElev");

        $r47 = new ucar.nc2.dt.StationImpl;

        $d3 = (double) $f0;

        $d2 = (double) $f1;

        $d1 = (double) $f2;

        specialinvoke $r47.<ucar.nc2.dt.StationImpl: void <init>(java.lang.String,java.lang.String,double,double,double)>($r45, "", $d3, $d2, $d1);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r45, $r47);

     label05:
        i7 = i7 + 1;

        goto label04;

     label06:
        $r17 = interfaceinvoke $r0.<java.util.Map: java.util.Collection values()>();

        $i2 = interfaceinvoke $r0.<java.util.Map: int size()>();

        $r18 = newarray (ucar.unidata.geoloc.Station)[$i2];

        $r19 = interfaceinvoke $r17.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r18);

        $r20 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r19);

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r20);

        $r21 = new ucar.nc2.dt.point.WriterProfileObsDataset;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("R:/testdata/sounding/netcdf/Upperair_20070401_0000.nc");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".out");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rewrite ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("R:/testdata/sounding/netcdf/Upperair_20070401_0000.nc");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<ucar.nc2.dt.point.WriterProfileObsDataset: void <init>(java.lang.String,java.lang.String)>($r25, $r29);

        virtualinvoke $r21.<ucar.nc2.dt.point.WriterProfileObsDataset: void writeHeader(java.util.List,java.util.List,int,java.lang.String)>($r20, $r7, i7, "prMan");

        $r30 = virtualinvoke r5.<ucar.nc2.Structure: ucar.ma2.StructureDataIterator getStructureIterator()>();

     label07:
        $z4 = interfaceinvoke $r30.<ucar.ma2.StructureDataIterator: boolean hasNext()>();

        if $z4 == 0 goto label13;

        $r36 = interfaceinvoke $r30.<ucar.ma2.StructureDataIterator: ucar.ma2.StructureData next()>();

        $r37 = virtualinvoke $r36.<ucar.ma2.StructureData: java.lang.String getScalarString(java.lang.String)>("staName");

        $d0 = virtualinvoke $r36.<ucar.ma2.StructureData: double convertScalarDouble(java.lang.String)>("synTime");

        $r38 = virtualinvoke $r15.<ucar.nc2.units.DateUnit: java.util.Date makeDate(double)>($d0);

        $r39 = virtualinvoke $r2.<ucar.ma2.StructureMembers: java.util.List getMemberNames()>();

        $r40 = interfaceinvoke $r39.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z2 = interfaceinvoke $r40.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label09;

        $r42 = interfaceinvoke $r40.<java.util.Iterator: java.lang.Object next()>();

        r63 = (java.lang.String) $r42;

        $r43 = virtualinvoke $r36.<ucar.ma2.StructureData: ucar.ma2.Array getArray(java.lang.String)>(r63);

        virtualinvoke $r9.<ucar.ma2.ArrayStructureMA: void setMemberArray(java.lang.String,ucar.ma2.Array)>(r63, $r43);

        goto label08;

     label09:
        $i4 = virtualinvoke $r36.<ucar.ma2.StructureData: int getScalarInt(java.lang.String)>("numMand");

        $i5 = virtualinvoke $r3.<ucar.nc2.Dimension: int getLength()>();

        if $i4 < $i5 goto label10;

        goto label07;

     label10:
        i8 = 0;

     label11:
        if i8 >= $i4 goto label12;

        $r41 = virtualinvoke $r9.<ucar.ma2.ArrayStructureMA: ucar.ma2.StructureData getStructureData(int)>(i8);

        virtualinvoke $r21.<ucar.nc2.dt.point.WriterProfileObsDataset: void writeRecord(java.lang.String,java.util.Date,ucar.ma2.StructureData)>($r37, $r38, $r41);

        i8 = i8 + 1;

        goto label11;

     label12:
        goto label07;

     label13:
        virtualinvoke $r21.<ucar.nc2.dt.point.WriterProfileObsDataset: void finish()>();

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l9 = $l3 - $l0;

        $r32 = <java.lang.System: java.io.PrintStream out>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("That took = ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l9);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>($r35);

        return;
    }

    public static void <clinit>()
    {
        <ucar.nc2.dt.point.WriterProfileObsDataset: java.lang.String parentProfileIndex> = "profile_index";

        <ucar.nc2.dt.point.WriterProfileObsDataset: java.lang.String parentStationIndex> = "station_index";

        <ucar.nc2.dt.point.WriterProfileObsDataset: java.lang.String nextObsName> = "nextChild";

        <ucar.nc2.dt.point.WriterProfileObsDataset: java.lang.String numObsName> = "numChildren";

        <ucar.nc2.dt.point.WriterProfileObsDataset: java.lang.String firstObsName> = "firstChild";

        <ucar.nc2.dt.point.WriterProfileObsDataset: java.lang.String numProfilesTotalName> = "numProfilesTotal";

        <ucar.nc2.dt.point.WriterProfileObsDataset: java.lang.String numProfilesName> = "numProfiles";

        <ucar.nc2.dt.point.WriterProfileObsDataset: java.lang.String nextProfileName> = "nextProfile";

        <ucar.nc2.dt.point.WriterProfileObsDataset: java.lang.String firstProfileName> = "firstProfile";

        <ucar.nc2.dt.point.WriterProfileObsDataset: java.lang.String wmoName> = "wmo_id";

        <ucar.nc2.dt.point.WriterProfileObsDataset: java.lang.String descName> = "station_description";

        <ucar.nc2.dt.point.WriterProfileObsDataset: java.lang.String idName> = "station_id";

        <ucar.nc2.dt.point.WriterProfileObsDataset: java.lang.String timeName> = "time";

        <ucar.nc2.dt.point.WriterProfileObsDataset: java.lang.String altName> = "altitude";

        <ucar.nc2.dt.point.WriterProfileObsDataset: java.lang.String lonName> = "longitude";

        <ucar.nc2.dt.point.WriterProfileObsDataset: java.lang.String latName> = "latitude";

        <ucar.nc2.dt.point.WriterProfileObsDataset: java.lang.String profileDimName> = "profile";

        <ucar.nc2.dt.point.WriterProfileObsDataset: java.lang.String stationDimName> = "station";

        <ucar.nc2.dt.point.WriterProfileObsDataset: java.lang.String recordDimName> = "record";

        return;
    }
}
