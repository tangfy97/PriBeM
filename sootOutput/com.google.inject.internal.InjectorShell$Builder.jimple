class com.google.inject.internal.InjectorShell$Builder extends java.lang.Object
{
    private final java.util.List elements;
    private final java.util.List modules;
    private com.google.inject.internal.State state;
    private com.google.inject.internal.InjectorImpl parent;
    private com.google.inject.internal.InjectorImpl$InjectorOptions options;
    private com.google.inject.Stage stage;
    private com.google.inject.internal.PrivateElementsImpl privateElements;

    void <init>()
    {
        com.google.inject.internal.InjectorShell$Builder r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: com.google.inject.internal.InjectorShell$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.google.inject.internal.util.$Lists: java.util.ArrayList newArrayList()>();

        r0.<com.google.inject.internal.InjectorShell$Builder: java.util.List elements> = $r1;

        $r2 = staticinvoke <com.google.inject.internal.util.$Lists: java.util.ArrayList newArrayList()>();

        r0.<com.google.inject.internal.InjectorShell$Builder: java.util.List modules> = $r2;

        return;
    }

    com.google.inject.internal.InjectorShell$Builder stage(com.google.inject.Stage)
    {
        com.google.inject.Stage r1;
        com.google.inject.internal.InjectorShell$Builder r0;

        r0 := @this: com.google.inject.internal.InjectorShell$Builder;

        r1 := @parameter0: com.google.inject.Stage;

        r0.<com.google.inject.internal.InjectorShell$Builder: com.google.inject.Stage stage> = r1;

        return r0;
    }

    com.google.inject.internal.InjectorShell$Builder parent(com.google.inject.internal.InjectorImpl)
    {
        com.google.inject.internal.InjectorImpl$InjectorOptions $r4, $r5;
        com.google.inject.Stage $r6;
        com.google.inject.internal.InjectorImpl r1;
        com.google.inject.internal.InjectorShell$Builder r0;
        com.google.inject.internal.InheritingState $r2;
        com.google.inject.internal.State $r3;

        r0 := @this: com.google.inject.internal.InjectorShell$Builder;

        r1 := @parameter0: com.google.inject.internal.InjectorImpl;

        r0.<com.google.inject.internal.InjectorShell$Builder: com.google.inject.internal.InjectorImpl parent> = r1;

        $r2 = new com.google.inject.internal.InheritingState;

        $r3 = r1.<com.google.inject.internal.InjectorImpl: com.google.inject.internal.State state>;

        specialinvoke $r2.<com.google.inject.internal.InheritingState: void <init>(com.google.inject.internal.State)>($r3);

        r0.<com.google.inject.internal.InjectorShell$Builder: com.google.inject.internal.State state> = $r2;

        $r4 = r1.<com.google.inject.internal.InjectorImpl: com.google.inject.internal.InjectorImpl$InjectorOptions options>;

        r0.<com.google.inject.internal.InjectorShell$Builder: com.google.inject.internal.InjectorImpl$InjectorOptions options> = $r4;

        $r5 = r0.<com.google.inject.internal.InjectorShell$Builder: com.google.inject.internal.InjectorImpl$InjectorOptions options>;

        $r6 = $r5.<com.google.inject.internal.InjectorImpl$InjectorOptions: com.google.inject.Stage stage>;

        r0.<com.google.inject.internal.InjectorShell$Builder: com.google.inject.Stage stage> = $r6;

        return r0;
    }

    com.google.inject.internal.InjectorShell$Builder privateElements(com.google.inject.spi.PrivateElements)
    {
        java.util.List $r3, $r4;
        com.google.inject.internal.InjectorShell$Builder r0;
        com.google.inject.internal.PrivateElementsImpl $r2;
        com.google.inject.spi.PrivateElements r1;

        r0 := @this: com.google.inject.internal.InjectorShell$Builder;

        r1 := @parameter0: com.google.inject.spi.PrivateElements;

        $r2 = (com.google.inject.internal.PrivateElementsImpl) r1;

        r0.<com.google.inject.internal.InjectorShell$Builder: com.google.inject.internal.PrivateElementsImpl privateElements> = $r2;

        $r3 = r0.<com.google.inject.internal.InjectorShell$Builder: java.util.List elements>;

        $r4 = interfaceinvoke r1.<com.google.inject.spi.PrivateElements: java.util.List getElements()>();

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>($r4);

        return r0;
    }

    void addModules(java.lang.Iterable)
    {
        com.google.inject.Module r3;
        java.util.List $r5;
        java.util.Iterator $r1;
        com.google.inject.internal.InjectorShell$Builder r4;
        java.lang.Object $r2;
        java.lang.Iterable r0;
        boolean $z0;

        r4 := @this: com.google.inject.internal.InjectorShell$Builder;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.google.inject.Module) $r2;

        $r5 = r4.<com.google.inject.internal.InjectorShell$Builder: java.util.List modules>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r3);

        goto label1;

     label2:
        return;
    }

    com.google.inject.Stage getStage()
    {
        com.google.inject.internal.InjectorImpl$InjectorOptions $r1;
        com.google.inject.Stage $r2;
        com.google.inject.internal.InjectorShell$Builder r0;

        r0 := @this: com.google.inject.internal.InjectorShell$Builder;

        $r1 = r0.<com.google.inject.internal.InjectorShell$Builder: com.google.inject.internal.InjectorImpl$InjectorOptions options>;

        $r2 = $r1.<com.google.inject.internal.InjectorImpl$InjectorOptions: com.google.inject.Stage stage>;

        return $r2;
    }

    java.lang.Object lock()
    {
        java.lang.Object $r2;
        com.google.inject.internal.State $r1;
        com.google.inject.internal.InjectorShell$Builder r0;

        r0 := @this: com.google.inject.internal.InjectorShell$Builder;

        $r1 = specialinvoke r0.<com.google.inject.internal.InjectorShell$Builder: com.google.inject.internal.State getState()>();

        $r2 = interfaceinvoke $r1.<com.google.inject.internal.State: java.lang.Object lock()>();

        return $r2;
    }

    java.util.List build(com.google.inject.internal.Initializer, com.google.inject.internal.ProcessedBindingData, com.google.inject.internal.util.$Stopwatch, com.google.inject.internal.Errors)
    {
        com.google.inject.internal.InjectorImpl$InjectorOptions $r12, $r14, $r16;
        com.google.inject.internal.InjectorOptionsProcessor $r9;
        com.google.inject.internal.InjectorShell$RootModule $r53;
        com.google.inject.internal.InjectorShell$Builder r0, r49;
        com.google.inject.internal.MembersInjectorStore $r30;
        com.google.inject.internal.TypeConverterBindingProcessor $r33, $r51;
        com.google.inject.internal.BindingProcessor $r35;
        com.google.inject.internal.PrivateElementProcessor $r44;
        boolean $z0, $z1, $z2, $z3;
        com.google.inject.internal.Initializer r36;
        com.google.inject.Stage $r1, $r6, $r13, $r54;
        java.util.List $r5, $r7, $r8, $r11, $r23, $r25, $r27, $r29, $r32, $r34, $r38, $r40, $r43, $r45, $r46, $r50, $r55;
        com.google.inject.internal.InjectorImpl $r4, $r15, $r18, $r20, $r56;
        com.google.inject.internal.ScopeBindingProcessor $r31;
        com.google.inject.internal.ProcessedBindingData r37;
        com.google.inject.internal.util.$Stopwatch r21;
        com.google.inject.internal.TypeListenerBindingProcessor $r26;
        com.google.inject.internal.PrivateElementsImpl $r2, $r19, $r52;
        com.google.inject.internal.MessageProcessor $r22;
        java.util.ArrayList $r41;
        com.google.inject.internal.InterceptorBindingProcessor $r24;
        com.google.inject.internal.State $r3, $r17, $r28;
        com.google.inject.internal.InjectorShell $r42;
        java.util.Iterator $r47;
        com.google.inject.internal.Errors r10;
        com.google.inject.internal.UntargettedBindingProcessor $r39;
        java.lang.Object $r48;

        r0 := @this: com.google.inject.internal.InjectorShell$Builder;

        r36 := @parameter0: com.google.inject.internal.Initializer;

        r37 := @parameter1: com.google.inject.internal.ProcessedBindingData;

        r21 := @parameter2: com.google.inject.internal.util.$Stopwatch;

        r10 := @parameter3: com.google.inject.internal.Errors;

        $r1 = r0.<com.google.inject.internal.InjectorShell$Builder: com.google.inject.Stage stage>;

        if $r1 == null goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        staticinvoke <com.google.inject.internal.util.$Preconditions: void checkState(boolean,java.lang.Object)>($z0, "Stage not initialized");

        $r2 = r0.<com.google.inject.internal.InjectorShell$Builder: com.google.inject.internal.PrivateElementsImpl privateElements>;

        if $r2 == null goto label03;

        $r56 = r0.<com.google.inject.internal.InjectorShell$Builder: com.google.inject.internal.InjectorImpl parent>;

        if $r56 == null goto label04;

     label03:
        $z1 = 1;

        goto label05;

     label04:
        $z1 = 0;

     label05:
        staticinvoke <com.google.inject.internal.util.$Preconditions: void checkState(boolean,java.lang.Object)>($z1, "PrivateElements with no parent");

        $r3 = r0.<com.google.inject.internal.InjectorShell$Builder: com.google.inject.internal.State state>;

        if $r3 == null goto label06;

        $z2 = 1;

        goto label07;

     label06:
        $z2 = 0;

     label07:
        staticinvoke <com.google.inject.internal.util.$Preconditions: void checkState(boolean,java.lang.Object)>($z2, "no state. Did you remember to lock() ?");

        $r4 = r0.<com.google.inject.internal.InjectorShell$Builder: com.google.inject.internal.InjectorImpl parent>;

        if $r4 != null goto label08;

        $r55 = r0.<com.google.inject.internal.InjectorShell$Builder: java.util.List modules>;

        $r53 = new com.google.inject.internal.InjectorShell$RootModule;

        $r54 = r0.<com.google.inject.internal.InjectorShell$Builder: com.google.inject.Stage stage>;

        specialinvoke $r53.<com.google.inject.internal.InjectorShell$RootModule: void <init>(com.google.inject.Stage,com.google.inject.internal.InjectorShell$1)>($r54, null);

        interfaceinvoke $r55.<java.util.List: void add(int,java.lang.Object)>(0, $r53);

     label08:
        $r7 = r0.<com.google.inject.internal.InjectorShell$Builder: java.util.List elements>;

        $r6 = r0.<com.google.inject.internal.InjectorShell$Builder: com.google.inject.Stage stage>;

        $r5 = r0.<com.google.inject.internal.InjectorShell$Builder: java.util.List modules>;

        $r8 = staticinvoke <com.google.inject.spi.Elements: java.util.List getElements(com.google.inject.Stage,java.lang.Iterable)>($r6, $r5);

        interfaceinvoke $r7.<java.util.List: boolean addAll(java.util.Collection)>($r8);

        $r9 = new com.google.inject.internal.InjectorOptionsProcessor;

        specialinvoke $r9.<com.google.inject.internal.InjectorOptionsProcessor: void <init>(com.google.inject.internal.Errors)>(r10);

        $r11 = r0.<com.google.inject.internal.InjectorShell$Builder: java.util.List elements>;

        virtualinvoke $r9.<com.google.inject.internal.InjectorOptionsProcessor: void process(com.google.inject.internal.InjectorImpl,java.util.List)>(null, $r11);

        $r13 = r0.<com.google.inject.internal.InjectorShell$Builder: com.google.inject.Stage stage>;

        $r12 = r0.<com.google.inject.internal.InjectorShell$Builder: com.google.inject.internal.InjectorImpl$InjectorOptions options>;

        $r14 = virtualinvoke $r9.<com.google.inject.internal.InjectorOptionsProcessor: com.google.inject.internal.InjectorImpl$InjectorOptions getOptions(com.google.inject.Stage,com.google.inject.internal.InjectorImpl$InjectorOptions)>($r13, $r12);

        r0.<com.google.inject.internal.InjectorShell$Builder: com.google.inject.internal.InjectorImpl$InjectorOptions options> = $r14;

        $r15 = new com.google.inject.internal.InjectorImpl;

        $r18 = r0.<com.google.inject.internal.InjectorShell$Builder: com.google.inject.internal.InjectorImpl parent>;

        $r17 = r0.<com.google.inject.internal.InjectorShell$Builder: com.google.inject.internal.State state>;

        $r16 = r0.<com.google.inject.internal.InjectorShell$Builder: com.google.inject.internal.InjectorImpl$InjectorOptions options>;

        specialinvoke $r15.<com.google.inject.internal.InjectorImpl: void <init>(com.google.inject.internal.InjectorImpl,com.google.inject.internal.State,com.google.inject.internal.InjectorImpl$InjectorOptions)>($r18, $r17, $r16);

        $r19 = r0.<com.google.inject.internal.InjectorShell$Builder: com.google.inject.internal.PrivateElementsImpl privateElements>;

        if $r19 == null goto label09;

        $r52 = r0.<com.google.inject.internal.InjectorShell$Builder: com.google.inject.internal.PrivateElementsImpl privateElements>;

        virtualinvoke $r52.<com.google.inject.internal.PrivateElementsImpl: void initInjector(com.google.inject.Injector)>($r15);

     label09:
        $r20 = r0.<com.google.inject.internal.InjectorShell$Builder: com.google.inject.internal.InjectorImpl parent>;

        if $r20 != null goto label10;

        $r51 = new com.google.inject.internal.TypeConverterBindingProcessor;

        specialinvoke $r51.<com.google.inject.internal.TypeConverterBindingProcessor: void <init>(com.google.inject.internal.Errors)>(r10);

        virtualinvoke $r51.<com.google.inject.internal.TypeConverterBindingProcessor: void prepareBuiltInConverters(com.google.inject.internal.InjectorImpl)>($r15);

     label10:
        virtualinvoke r21.<com.google.inject.internal.util.$Stopwatch: void resetAndLog(java.lang.String)>("Module execution");

        $r22 = new com.google.inject.internal.MessageProcessor;

        specialinvoke $r22.<com.google.inject.internal.MessageProcessor: void <init>(com.google.inject.internal.Errors)>(r10);

        $r23 = r0.<com.google.inject.internal.InjectorShell$Builder: java.util.List elements>;

        virtualinvoke $r22.<com.google.inject.internal.MessageProcessor: void process(com.google.inject.internal.InjectorImpl,java.util.List)>($r15, $r23);

        $r24 = new com.google.inject.internal.InterceptorBindingProcessor;

        specialinvoke $r24.<com.google.inject.internal.InterceptorBindingProcessor: void <init>(com.google.inject.internal.Errors)>(r10);

        $r25 = r0.<com.google.inject.internal.InjectorShell$Builder: java.util.List elements>;

        virtualinvoke $r24.<com.google.inject.internal.InterceptorBindingProcessor: void process(com.google.inject.internal.InjectorImpl,java.util.List)>($r15, $r25);

        virtualinvoke r21.<com.google.inject.internal.util.$Stopwatch: void resetAndLog(java.lang.String)>("Interceptors creation");

        $r26 = new com.google.inject.internal.TypeListenerBindingProcessor;

        specialinvoke $r26.<com.google.inject.internal.TypeListenerBindingProcessor: void <init>(com.google.inject.internal.Errors)>(r10);

        $r27 = r0.<com.google.inject.internal.InjectorShell$Builder: java.util.List elements>;

        virtualinvoke $r26.<com.google.inject.internal.TypeListenerBindingProcessor: void process(com.google.inject.internal.InjectorImpl,java.util.List)>($r15, $r27);

        $r28 = $r15.<com.google.inject.internal.InjectorImpl: com.google.inject.internal.State state>;

        $r29 = interfaceinvoke $r28.<com.google.inject.internal.State: java.util.List getTypeListenerBindings()>();

        $r30 = new com.google.inject.internal.MembersInjectorStore;

        specialinvoke $r30.<com.google.inject.internal.MembersInjectorStore: void <init>(com.google.inject.internal.InjectorImpl,java.util.List)>($r15, $r29);

        $r15.<com.google.inject.internal.InjectorImpl: com.google.inject.internal.MembersInjectorStore membersInjectorStore> = $r30;

        virtualinvoke r21.<com.google.inject.internal.util.$Stopwatch: void resetAndLog(java.lang.String)>("TypeListeners creation");

        $r31 = new com.google.inject.internal.ScopeBindingProcessor;

        specialinvoke $r31.<com.google.inject.internal.ScopeBindingProcessor: void <init>(com.google.inject.internal.Errors)>(r10);

        $r32 = r0.<com.google.inject.internal.InjectorShell$Builder: java.util.List elements>;

        virtualinvoke $r31.<com.google.inject.internal.ScopeBindingProcessor: void process(com.google.inject.internal.InjectorImpl,java.util.List)>($r15, $r32);

        virtualinvoke r21.<com.google.inject.internal.util.$Stopwatch: void resetAndLog(java.lang.String)>("Scopes creation");

        $r33 = new com.google.inject.internal.TypeConverterBindingProcessor;

        specialinvoke $r33.<com.google.inject.internal.TypeConverterBindingProcessor: void <init>(com.google.inject.internal.Errors)>(r10);

        $r34 = r0.<com.google.inject.internal.InjectorShell$Builder: java.util.List elements>;

        virtualinvoke $r33.<com.google.inject.internal.TypeConverterBindingProcessor: void process(com.google.inject.internal.InjectorImpl,java.util.List)>($r15, $r34);

        virtualinvoke r21.<com.google.inject.internal.util.$Stopwatch: void resetAndLog(java.lang.String)>("Converters creation");

        staticinvoke <com.google.inject.internal.InjectorShell: void access$100(com.google.inject.internal.InjectorImpl)>($r15);

        staticinvoke <com.google.inject.internal.InjectorShell: void access$200(com.google.inject.internal.InjectorImpl)>($r15);

        $r35 = new com.google.inject.internal.BindingProcessor;

        specialinvoke $r35.<com.google.inject.internal.BindingProcessor: void <init>(com.google.inject.internal.Errors,com.google.inject.internal.Initializer,com.google.inject.internal.ProcessedBindingData)>(r10, r36, r37);

        $r38 = r0.<com.google.inject.internal.InjectorShell$Builder: java.util.List elements>;

        virtualinvoke $r35.<com.google.inject.internal.BindingProcessor: void process(com.google.inject.internal.InjectorImpl,java.util.List)>($r15, $r38);

        $r39 = new com.google.inject.internal.UntargettedBindingProcessor;

        specialinvoke $r39.<com.google.inject.internal.UntargettedBindingProcessor: void <init>(com.google.inject.internal.Errors,com.google.inject.internal.ProcessedBindingData)>(r10, r37);

        $r40 = r0.<com.google.inject.internal.InjectorShell$Builder: java.util.List elements>;

        virtualinvoke $r39.<com.google.inject.internal.UntargettedBindingProcessor: void process(com.google.inject.internal.InjectorImpl,java.util.List)>($r15, $r40);

        virtualinvoke r21.<com.google.inject.internal.util.$Stopwatch: void resetAndLog(java.lang.String)>("Binding creation");

        $r41 = staticinvoke <com.google.inject.internal.util.$Lists: java.util.ArrayList newArrayList()>();

        $r42 = new com.google.inject.internal.InjectorShell;

        $r43 = r0.<com.google.inject.internal.InjectorShell$Builder: java.util.List elements>;

        specialinvoke $r42.<com.google.inject.internal.InjectorShell: void <init>(com.google.inject.internal.InjectorShell$Builder,java.util.List,com.google.inject.internal.InjectorImpl,com.google.inject.internal.InjectorShell$1)>(r0, $r43, $r15, null);

        interfaceinvoke $r41.<java.util.List: boolean add(java.lang.Object)>($r42);

        $r44 = new com.google.inject.internal.PrivateElementProcessor;

        specialinvoke $r44.<com.google.inject.internal.PrivateElementProcessor: void <init>(com.google.inject.internal.Errors)>(r10);

        $r45 = r0.<com.google.inject.internal.InjectorShell$Builder: java.util.List elements>;

        virtualinvoke $r44.<com.google.inject.internal.PrivateElementProcessor: void process(com.google.inject.internal.InjectorImpl,java.util.List)>($r15, $r45);

        $r46 = virtualinvoke $r44.<com.google.inject.internal.PrivateElementProcessor: java.util.List getInjectorShellBuilders()>();

        $r47 = interfaceinvoke $r46.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z3 = interfaceinvoke $r47.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label12;

        $r48 = interfaceinvoke $r47.<java.util.Iterator: java.lang.Object next()>();

        r49 = (com.google.inject.internal.InjectorShell$Builder) $r48;

        $r50 = virtualinvoke r49.<com.google.inject.internal.InjectorShell$Builder: java.util.List build(com.google.inject.internal.Initializer,com.google.inject.internal.ProcessedBindingData,com.google.inject.internal.util.$Stopwatch,com.google.inject.internal.Errors)>(r36, r37, r21, r10);

        interfaceinvoke $r41.<java.util.List: boolean addAll(java.util.Collection)>($r50);

        goto label11;

     label12:
        virtualinvoke r21.<com.google.inject.internal.util.$Stopwatch: void resetAndLog(java.lang.String)>("Private environment creation");

        return $r41;
    }

    private com.google.inject.internal.State getState()
    {
        com.google.inject.internal.InjectorShell$Builder r0;
        com.google.inject.internal.InheritingState $r3;
        com.google.inject.internal.State $r1, $r2, $r4;

        r0 := @this: com.google.inject.internal.InjectorShell$Builder;

        $r1 = r0.<com.google.inject.internal.InjectorShell$Builder: com.google.inject.internal.State state>;

        if $r1 != null goto label1;

        $r3 = new com.google.inject.internal.InheritingState;

        $r4 = <com.google.inject.internal.State: com.google.inject.internal.State NONE>;

        specialinvoke $r3.<com.google.inject.internal.InheritingState: void <init>(com.google.inject.internal.State)>($r4);

        r0.<com.google.inject.internal.InjectorShell$Builder: com.google.inject.internal.State state> = $r3;

     label1:
        $r2 = r0.<com.google.inject.internal.InjectorShell$Builder: com.google.inject.internal.State state>;

        return $r2;
    }
}
