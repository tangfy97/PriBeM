public final class org.apache.poi.hslf.record.SlideListWithText extends org.apache.poi.hslf.record.RecordContainer
{
    public static final int SLIDES;
    public static final int MASTER;
    public static final int NOTES;
    private byte[] _header;
    private static long _type;
    private org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet[] slideAtomsSets;

    protected void <init>(byte[], int, int)
    {
        byte[] $r1, r2, $r3;
        org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet[] $r7, $r9;
        org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet $r14;
        boolean $z0, $z1;
        org.apache.poi.hslf.record.Record[] $r4, $r6, $r10, $r12, $r13, $r15, $r18, $r19;
        org.apache.poi.hslf.record.SlideListWithText r0;
        org.apache.poi.hslf.record.Record $r11, $r16, $r20;
        java.lang.Object[] $r8;
        java.util.ArrayList $r5;
        org.apache.poi.hslf.record.SlidePersistAtom $r17;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11;

        r0 := @this: org.apache.poi.hslf.record.SlideListWithText;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.apache.poi.hslf.record.RecordContainer: void <init>()>();

        $r1 = newarray (byte)[8];

        r0.<org.apache.poi.hslf.record.SlideListWithText: byte[] _header> = $r1;

        $r3 = r0.<org.apache.poi.hslf.record.SlideListWithText: byte[] _header>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i0, $r3, 0, 8);

        $i3 = i0 + 8;

        $i2 = i1 - 8;

        $r4 = staticinvoke <org.apache.poi.hslf.record.Record: org.apache.poi.hslf.record.Record[] findChildRecords(byte[],int,int)>(r2, $i3, $i2);

        r0.<org.apache.poi.hslf.record.SlideListWithText: org.apache.poi.hslf.record.Record[] _children> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        i10 = 0;

     label1:
        $r6 = r0.<org.apache.poi.hslf.record.SlideListWithText: org.apache.poi.hslf.record.Record[] _children>;

        $i4 = lengthof $r6;

        if i10 >= $i4 goto label6;

        $r10 = r0.<org.apache.poi.hslf.record.SlideListWithText: org.apache.poi.hslf.record.Record[] _children>;

        $r11 = $r10[i10];

        $z0 = $r11 instanceof org.apache.poi.hslf.record.SlidePersistAtom;

        if $z0 == 0 goto label5;

        i11 = i10 + 1;

     label2:
        $r12 = r0.<org.apache.poi.hslf.record.SlideListWithText: org.apache.poi.hslf.record.Record[] _children>;

        $i6 = lengthof $r12;

        if i11 >= $i6 goto label3;

        $r19 = r0.<org.apache.poi.hslf.record.SlideListWithText: org.apache.poi.hslf.record.Record[] _children>;

        $r20 = $r19[i11];

        $z1 = $r20 instanceof org.apache.poi.hslf.record.SlidePersistAtom;

        if $z1 != 0 goto label3;

        i11 = i11 + 1;

        goto label2;

     label3:
        $i7 = i11 - i10;

        $i9 = $i7 - 1;

        if $i9 != 0 goto label4;

     label4:
        $r18 = newarray (org.apache.poi.hslf.record.Record)[$i9];

        $r13 = r0.<org.apache.poi.hslf.record.SlideListWithText: org.apache.poi.hslf.record.Record[] _children>;

        $i8 = i10 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r13, $i8, $r18, 0, $i9);

        $r14 = new org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet;

        $r15 = r0.<org.apache.poi.hslf.record.SlideListWithText: org.apache.poi.hslf.record.Record[] _children>;

        $r16 = $r15[i10];

        $r17 = (org.apache.poi.hslf.record.SlidePersistAtom) $r16;

        specialinvoke $r14.<org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet: void <init>(org.apache.poi.hslf.record.SlidePersistAtom,org.apache.poi.hslf.record.Record[])>($r17, $r18);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r14);

        i10 = i10 + $i9;

     label5:
        i10 = i10 + 1;

        goto label1;

     label6:
        $i5 = interfaceinvoke $r5.<java.util.List: int size()>();

        $r7 = newarray (org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet)[$i5];

        $r8 = interfaceinvoke $r5.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        $r9 = (org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet[]) $r8;

        r0.<org.apache.poi.hslf.record.SlideListWithText: org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet[] slideAtomsSets> = $r9;

        return;
    }

    public void <init>()
    {
        byte[] $r1, $r2, $r3, $r4;
        org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet[] $r6;
        long $l0;
        org.apache.poi.hslf.record.Record[] $r5;
        org.apache.poi.hslf.record.SlideListWithText r0;
        int $i1;

        r0 := @this: org.apache.poi.hslf.record.SlideListWithText;

        specialinvoke r0.<org.apache.poi.hslf.record.RecordContainer: void <init>()>();

        $r1 = newarray (byte)[8];

        r0.<org.apache.poi.hslf.record.SlideListWithText: byte[] _header> = $r1;

        $r2 = r0.<org.apache.poi.hslf.record.SlideListWithText: byte[] _header>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putUShort(byte[],int,int)>($r2, 0, 15);

        $r3 = r0.<org.apache.poi.hslf.record.SlideListWithText: byte[] _header>;

        $l0 = <org.apache.poi.hslf.record.SlideListWithText: long _type>;

        $i1 = (int) $l0;

        staticinvoke <org.apache.poi.util.LittleEndian: void putUShort(byte[],int,int)>($r3, 2, $i1);

        $r4 = r0.<org.apache.poi.hslf.record.SlideListWithText: byte[] _header>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>($r4, 4, 0);

        $r5 = newarray (org.apache.poi.hslf.record.Record)[0];

        r0.<org.apache.poi.hslf.record.SlideListWithText: org.apache.poi.hslf.record.Record[] _children> = $r5;

        $r6 = newarray (org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet)[0];

        r0.<org.apache.poi.hslf.record.SlideListWithText: org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet[] slideAtomsSets> = $r6;

        return;
    }

    public void addSlidePersistAtom(org.apache.poi.hslf.record.SlidePersistAtom)
    {
        org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet[] $r4, r5, $r6, $r7;
        org.apache.poi.hslf.record.Record[] $r3;
        org.apache.poi.hslf.record.SlidePersistAtom r1;
        org.apache.poi.hslf.record.SlideListWithText r0;
        int $i0, $i1, $i2, $i3, $i4;
        org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet $r2;

        r0 := @this: org.apache.poi.hslf.record.SlideListWithText;

        r1 := @parameter0: org.apache.poi.hslf.record.SlidePersistAtom;

        virtualinvoke r0.<org.apache.poi.hslf.record.SlideListWithText: void appendChildRecord(org.apache.poi.hslf.record.Record)>(r1);

        $r2 = new org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet;

        $r3 = newarray (org.apache.poi.hslf.record.Record)[0];

        specialinvoke $r2.<org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet: void <init>(org.apache.poi.hslf.record.SlidePersistAtom,org.apache.poi.hslf.record.Record[])>(r1, $r3);

        $r4 = r0.<org.apache.poi.hslf.record.SlideListWithText: org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet[] slideAtomsSets>;

        $i0 = lengthof $r4;

        $i1 = $i0 + 1;

        r5 = newarray (org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet)[$i1];

        $r7 = r0.<org.apache.poi.hslf.record.SlideListWithText: org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet[] slideAtomsSets>;

        $r6 = r0.<org.apache.poi.hslf.record.SlideListWithText: org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet[] slideAtomsSets>;

        $i2 = lengthof $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, r5, 0, $i2);

        $i3 = lengthof r5;

        $i4 = $i3 - 1;

        r5[$i4] = $r2;

        r0.<org.apache.poi.hslf.record.SlideListWithText: org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet[] slideAtomsSets> = r5;

        return;
    }

    public int getInstance()
    {
        byte[] $r1;
        short $s0;
        org.apache.poi.hslf.record.SlideListWithText r0;
        int $i1, $i2;

        r0 := @this: org.apache.poi.hslf.record.SlideListWithText;

        $r1 = r0.<org.apache.poi.hslf.record.SlideListWithText: byte[] _header>;

        $s0 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r1, 0);

        $i2 = (int) $s0;

        $i1 = $i2 >> 4;

        return $i1;
    }

    public void setInstance(int)
    {
        byte[] $r1;
        short $s3;
        org.apache.poi.hslf.record.SlideListWithText r0;
        int i0, $i1, $i2;

        r0 := @this: org.apache.poi.hslf.record.SlideListWithText;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hslf.record.SlideListWithText: byte[] _header>;

        $i1 = i0 << 4;

        $i2 = $i1 | 15;

        $s3 = (short) $i2;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],short)>($r1, $s3);

        return;
    }

    public org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet[] getSlideAtomsSets()
    {
        org.apache.poi.hslf.record.SlideListWithText r0;
        org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet[] $r1;

        r0 := @this: org.apache.poi.hslf.record.SlideListWithText;

        $r1 = r0.<org.apache.poi.hslf.record.SlideListWithText: org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet[] slideAtomsSets>;

        return $r1;
    }

    public void setSlideAtomsSets(org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet[])
    {
        org.apache.poi.hslf.record.SlideListWithText r0;
        org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet[] r1;

        r0 := @this: org.apache.poi.hslf.record.SlideListWithText;

        r1 := @parameter0: org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet[];

        r0.<org.apache.poi.hslf.record.SlideListWithText: org.apache.poi.hslf.record.SlideListWithText$SlideAtomsSet[] slideAtomsSets> = r1;

        return;
    }

    public long getRecordType()
    {
        org.apache.poi.hslf.record.SlideListWithText r0;
        long $l0;

        r0 := @this: org.apache.poi.hslf.record.SlideListWithText;

        $l0 = <org.apache.poi.hslf.record.SlideListWithText: long _type>;

        return $l0;
    }

    public void writeOut(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r3;
        byte[] $r1, $r2;
        long $l0;
        org.apache.poi.hslf.record.Record[] $r4;
        byte $b1, $b2;
        org.apache.poi.hslf.record.SlideListWithText r0;

        r0 := @this: org.apache.poi.hslf.record.SlideListWithText;

        r3 := @parameter0: java.io.OutputStream;

        $r1 = r0.<org.apache.poi.hslf.record.SlideListWithText: byte[] _header>;

        $b2 = $r1[0];

        $r2 = r0.<org.apache.poi.hslf.record.SlideListWithText: byte[] _header>;

        $b1 = $r2[1];

        $l0 = <org.apache.poi.hslf.record.SlideListWithText: long _type>;

        $r4 = r0.<org.apache.poi.hslf.record.SlideListWithText: org.apache.poi.hslf.record.Record[] _children>;

        virtualinvoke r0.<org.apache.poi.hslf.record.SlideListWithText: void writeOut(byte,byte,long,org.apache.poi.hslf.record.Record[],java.io.OutputStream)>($b2, $b1, $l0, $r4, r3);

        return;
    }

    static void <clinit>()
    {
        <org.apache.poi.hslf.record.SlideListWithText: int NOTES> = 2;

        <org.apache.poi.hslf.record.SlideListWithText: int MASTER> = 1;

        <org.apache.poi.hslf.record.SlideListWithText: int SLIDES> = 0;

        <org.apache.poi.hslf.record.SlideListWithText: long _type> = 4080L;

        return;
    }
}
