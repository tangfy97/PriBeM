final class com.mycila.inject.internal.guava.cache.CacheBuilder$NullCache extends com.mycila.inject.internal.guava.cache.AbstractCache
{
    final com.mycila.inject.internal.guava.cache.CacheBuilder$NullConcurrentMap map;
    final com.mycila.inject.internal.guava.cache.CacheLoader loader;
    final com.mycila.inject.internal.guava.cache.AbstractCache$StatsCounter statsCounter;
    java.util.concurrent.ConcurrentMap asMap;

    void <init>(com.mycila.inject.internal.guava.cache.CacheBuilder, com.mycila.inject.internal.guava.base.Supplier, com.mycila.inject.internal.guava.cache.CacheLoader)
    {
        com.mycila.inject.internal.guava.cache.CacheBuilder$NullConcurrentMap $r1;
        com.mycila.inject.internal.guava.cache.CacheBuilder$NullCache r0;
        com.mycila.inject.internal.guava.base.Supplier r3;
        com.mycila.inject.internal.guava.cache.AbstractCache$StatsCounter $r5;
        com.mycila.inject.internal.guava.cache.CacheLoader r6, $r8;
        com.mycila.inject.internal.guava.cache.CacheBuilder r2;
        java.lang.Object $r4, $r7;

        r0 := @this: com.mycila.inject.internal.guava.cache.CacheBuilder$NullCache;

        r2 := @parameter0: com.mycila.inject.internal.guava.cache.CacheBuilder;

        r3 := @parameter1: com.mycila.inject.internal.guava.base.Supplier;

        r6 := @parameter2: com.mycila.inject.internal.guava.cache.CacheLoader;

        specialinvoke r0.<com.mycila.inject.internal.guava.cache.AbstractCache: void <init>()>();

        $r1 = new com.mycila.inject.internal.guava.cache.CacheBuilder$NullConcurrentMap;

        specialinvoke $r1.<com.mycila.inject.internal.guava.cache.CacheBuilder$NullConcurrentMap: void <init>(com.mycila.inject.internal.guava.cache.CacheBuilder)>(r2);

        r0.<com.mycila.inject.internal.guava.cache.CacheBuilder$NullCache: com.mycila.inject.internal.guava.cache.CacheBuilder$NullConcurrentMap map> = $r1;

        $r4 = interfaceinvoke r3.<com.mycila.inject.internal.guava.base.Supplier: java.lang.Object get()>();

        $r5 = (com.mycila.inject.internal.guava.cache.AbstractCache$StatsCounter) $r4;

        r0.<com.mycila.inject.internal.guava.cache.CacheBuilder$NullCache: com.mycila.inject.internal.guava.cache.AbstractCache$StatsCounter statsCounter> = $r5;

        $r7 = staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r6);

        $r8 = (com.mycila.inject.internal.guava.cache.CacheLoader) $r7;

        r0.<com.mycila.inject.internal.guava.cache.CacheBuilder$NullCache: com.mycila.inject.internal.guava.cache.CacheLoader loader> = $r8;

        return;
    }

    public java.lang.Object get(java.lang.Object) throws java.util.concurrent.ExecutionException
    {
        java.lang.Object r1, $r2;
        com.mycila.inject.internal.guava.cache.CacheBuilder$NullConcurrentMap $r3;
        com.mycila.inject.internal.guava.cache.CacheBuilder$NullCache r0;

        r0 := @this: com.mycila.inject.internal.guava.cache.CacheBuilder$NullCache;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<com.mycila.inject.internal.guava.cache.CacheBuilder$NullCache: java.lang.Object compute(java.lang.Object)>(r1);

        $r3 = r0.<com.mycila.inject.internal.guava.cache.CacheBuilder$NullCache: com.mycila.inject.internal.guava.cache.CacheBuilder$NullConcurrentMap map>;

        virtualinvoke $r3.<com.mycila.inject.internal.guava.cache.CacheBuilder$NullConcurrentMap: void notifyRemoval(java.lang.Object,java.lang.Object)>(r1, $r2);

        return $r2;
    }

    private java.lang.Object compute(java.lang.Object) throws java.util.concurrent.ExecutionException
    {
        java.lang.Throwable $r8;
        java.lang.Error $r12;
        long $l0, $l1, l2, $l3, l4;
        com.mycila.inject.internal.guava.cache.CacheBuilder$NullCache r1;
        java.lang.NullPointerException $r6;
        com.mycila.inject.internal.guava.cache.AbstractCache$StatsCounter $r4, $r5, $r7, $r9, $r10, $r11;
        com.mycila.inject.internal.guava.cache.CacheLoader $r2;
        com.mycila.inject.internal.guava.util.concurrent.UncheckedExecutionException $r17;
        com.mycila.inject.internal.guava.util.concurrent.ExecutionError $r13;
        java.lang.RuntimeException $r16;
        java.lang.Exception $r14;
        java.util.concurrent.ExecutionException $r15;
        java.lang.Object r0, $r3, r18;

        r1 := @this: com.mycila.inject.internal.guava.cache.CacheBuilder$NullCache;

        r0 := @parameter0: java.lang.Object;

        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $l0 = staticinvoke <java.lang.System: long nanoTime()>();

        r18 = null;

     label01:
        $r2 = r1.<com.mycila.inject.internal.guava.cache.CacheBuilder$NullCache: com.mycila.inject.internal.guava.cache.CacheLoader loader>;

        $r3 = virtualinvoke $r2.<com.mycila.inject.internal.guava.cache.CacheLoader: java.lang.Object load(java.lang.Object)>(r0);

        r18 = $r3;

     label02:
        $l1 = staticinvoke <java.lang.System: long nanoTime()>();

        l2 = $l1 - $l0;

        if $r3 != null goto label03;

        $r7 = r1.<com.mycila.inject.internal.guava.cache.CacheBuilder$NullCache: com.mycila.inject.internal.guava.cache.AbstractCache$StatsCounter statsCounter>;

        interfaceinvoke $r7.<com.mycila.inject.internal.guava.cache.AbstractCache$StatsCounter: void recordLoadException(long)>(l2);

        goto label04;

     label03:
        $r4 = r1.<com.mycila.inject.internal.guava.cache.CacheBuilder$NullCache: com.mycila.inject.internal.guava.cache.AbstractCache$StatsCounter statsCounter>;

        interfaceinvoke $r4.<com.mycila.inject.internal.guava.cache.AbstractCache$StatsCounter: void recordLoadSuccess(long)>(l2);

     label04:
        $r5 = r1.<com.mycila.inject.internal.guava.cache.CacheBuilder$NullCache: com.mycila.inject.internal.guava.cache.AbstractCache$StatsCounter statsCounter>;

        interfaceinvoke $r5.<com.mycila.inject.internal.guava.cache.AbstractCache$StatsCounter: void recordEviction()>();

        goto label12;

     label05:
        $r16 := @caughtexception;

        $r17 = new com.mycila.inject.internal.guava.util.concurrent.UncheckedExecutionException;

        specialinvoke $r17.<com.mycila.inject.internal.guava.util.concurrent.UncheckedExecutionException: void <init>(java.lang.Throwable)>($r16);

        throw $r17;

     label06:
        $r14 := @caughtexception;

        $r15 = new java.util.concurrent.ExecutionException;

        specialinvoke $r15.<java.util.concurrent.ExecutionException: void <init>(java.lang.Throwable)>($r14);

        throw $r15;

     label07:
        $r12 := @caughtexception;

        $r13 = new com.mycila.inject.internal.guava.util.concurrent.ExecutionError;

        specialinvoke $r13.<com.mycila.inject.internal.guava.util.concurrent.ExecutionError: void <init>(java.lang.Error)>($r12);

        throw $r13;

     label08:
        $r8 := @caughtexception;

     label09:
        $l3 = staticinvoke <java.lang.System: long nanoTime()>();

        l4 = $l3 - $l0;

        if r18 != null goto label10;

        $r11 = r1.<com.mycila.inject.internal.guava.cache.CacheBuilder$NullCache: com.mycila.inject.internal.guava.cache.AbstractCache$StatsCounter statsCounter>;

        interfaceinvoke $r11.<com.mycila.inject.internal.guava.cache.AbstractCache$StatsCounter: void recordLoadException(long)>(l4);

        goto label11;

     label10:
        $r9 = r1.<com.mycila.inject.internal.guava.cache.CacheBuilder$NullCache: com.mycila.inject.internal.guava.cache.AbstractCache$StatsCounter statsCounter>;

        interfaceinvoke $r9.<com.mycila.inject.internal.guava.cache.AbstractCache$StatsCounter: void recordLoadSuccess(long)>(l4);

     label11:
        $r10 = r1.<com.mycila.inject.internal.guava.cache.CacheBuilder$NullCache: com.mycila.inject.internal.guava.cache.AbstractCache$StatsCounter statsCounter>;

        interfaceinvoke $r10.<com.mycila.inject.internal.guava.cache.AbstractCache$StatsCounter: void recordEviction()>();

        throw $r8;

     label12:
        if $r3 != null goto label13;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>()>();

        throw $r6;

     label13:
        return $r3;

        catch java.lang.RuntimeException from label01 to label02 with label05;
        catch java.lang.Exception from label01 to label02 with label06;
        catch java.lang.Error from label01 to label02 with label07;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label05 to label09 with label08;
    }

    public long size()
    {
        com.mycila.inject.internal.guava.cache.CacheBuilder$NullCache r0;

        r0 := @this: com.mycila.inject.internal.guava.cache.CacheBuilder$NullCache;

        return 0L;
    }

    public void invalidate(java.lang.Object)
    {
        java.lang.Object r1;
        com.mycila.inject.internal.guava.cache.CacheBuilder$NullCache r0;

        r0 := @this: com.mycila.inject.internal.guava.cache.CacheBuilder$NullCache;

        r1 := @parameter0: java.lang.Object;

        return;
    }

    public void invalidateAll()
    {
        com.mycila.inject.internal.guava.cache.CacheBuilder$NullCache r0;

        r0 := @this: com.mycila.inject.internal.guava.cache.CacheBuilder$NullCache;

        return;
    }

    public com.mycila.inject.internal.guava.cache.CacheStats stats()
    {
        com.mycila.inject.internal.guava.cache.CacheStats $r2;
        com.mycila.inject.internal.guava.cache.CacheBuilder$NullCache r0;
        com.mycila.inject.internal.guava.cache.AbstractCache$StatsCounter $r1;

        r0 := @this: com.mycila.inject.internal.guava.cache.CacheBuilder$NullCache;

        $r1 = r0.<com.mycila.inject.internal.guava.cache.CacheBuilder$NullCache: com.mycila.inject.internal.guava.cache.AbstractCache$StatsCounter statsCounter>;

        $r2 = interfaceinvoke $r1.<com.mycila.inject.internal.guava.cache.AbstractCache$StatsCounter: com.mycila.inject.internal.guava.cache.CacheStats snapshot()>();

        return $r2;
    }

    public java.util.concurrent.ConcurrentMap asMap()
    {
        com.mycila.inject.internal.guava.cache.CacheBuilder$CacheAsMap $r4;
        com.mycila.inject.internal.guava.cache.CacheBuilder$NullConcurrentMap $r2;
        com.mycila.inject.internal.guava.cache.CacheBuilder$NullCache r0;
        java.util.concurrent.ConcurrentMap r1, $r3;

        r0 := @this: com.mycila.inject.internal.guava.cache.CacheBuilder$NullCache;

        r1 = r0.<com.mycila.inject.internal.guava.cache.CacheBuilder$NullCache: java.util.concurrent.ConcurrentMap asMap>;

        if r1 == null goto label1;

        $r3 = r1;

        goto label2;

     label1:
        $r4 = new com.mycila.inject.internal.guava.cache.CacheBuilder$CacheAsMap;

        $r3 = $r4;

        $r2 = r0.<com.mycila.inject.internal.guava.cache.CacheBuilder$NullCache: com.mycila.inject.internal.guava.cache.CacheBuilder$NullConcurrentMap map>;

        specialinvoke $r4.<com.mycila.inject.internal.guava.cache.CacheBuilder$CacheAsMap: void <init>(java.util.concurrent.ConcurrentMap)>($r2);

        r0.<com.mycila.inject.internal.guava.cache.CacheBuilder$NullCache: java.util.concurrent.ConcurrentMap asMap> = $r4;

     label2:
        return $r3;
    }
}
