public class org.apache.cxf.jaxrs.model.ClassResourceInfo extends org.apache.cxf.jaxrs.model.BeanResourceInfo
{
    private org.apache.cxf.jaxrs.model.URITemplate uriTemplate;
    private org.apache.cxf.jaxrs.model.MethodDispatcher methodDispatcher;
    private org.apache.cxf.jaxrs.lifecycle.ResourceProvider resourceProvider;
    private java.util.concurrent.ConcurrentHashMap subResources;
    private boolean enableStatic;
    private boolean createdFromModel;
    private java.lang.String consumesTypes;
    private java.lang.String producesTypes;
    private java.util.List nameBindings;
    private org.apache.cxf.jaxrs.model.ClassResourceInfo parent;
    private java.util.Set injectedSubInstances;

    public void <init>(org.apache.cxf.jaxrs.model.ClassResourceInfo)
    {
        org.apache.cxf.Bus $r2;
        org.apache.cxf.jaxrs.model.URITemplate $r9;
        java.util.HashSet $r5;
        boolean $z0, $z1, $z2;
        java.util.concurrent.ConcurrentHashMap $r3, $r12;
        java.lang.IllegalArgumentException $r6;
        java.util.List $r4, $r13, $r14, $r15;
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0, r1, $r16;
        java.lang.Class $r7, $r8;
        org.apache.cxf.jaxrs.model.MethodDispatcher $r10, $r11;

        r0 := @this: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        r1 := @parameter0: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        $r2 = virtualinvoke r1.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.Bus getBus()>();

        specialinvoke r0.<org.apache.cxf.jaxrs.model.BeanResourceInfo: void <init>(org.apache.cxf.Bus)>($r2);

        $r3 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r3.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.util.concurrent.ConcurrentHashMap subResources> = $r3;

        $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.util.List nameBindings> = $r4;

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.util.Set injectedSubInstances> = $r5;

        $z0 = virtualinvoke r1.<org.apache.cxf.jaxrs.model.ClassResourceInfo: boolean isCreatedFromModel()>();

        if $z0 == 0 goto label1;

        $r7 = virtualinvoke r1.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.Class getServiceClass()>();

        $z1 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: boolean isConcreteClass(java.lang.Class)>($r7);

        if $z1 != 0 goto label1;

        $z2 = r1.<org.apache.cxf.jaxrs.model.ClassResourceInfo: boolean root>;

        r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: boolean root> = $z2;

        $r8 = r1.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.Class serviceClass>;

        r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.Class serviceClass> = $r8;

        $r9 = r1.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.URITemplate uriTemplate>;

        r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.URITemplate uriTemplate> = $r9;

        $r10 = new org.apache.cxf.jaxrs.model.MethodDispatcher;

        $r11 = r1.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.MethodDispatcher methodDispatcher>;

        specialinvoke $r10.<org.apache.cxf.jaxrs.model.MethodDispatcher: void <init>(org.apache.cxf.jaxrs.model.MethodDispatcher,org.apache.cxf.jaxrs.model.ClassResourceInfo)>($r11, r0);

        r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.MethodDispatcher methodDispatcher> = $r10;

        $r12 = r1.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.util.concurrent.ConcurrentHashMap subResources>;

        r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.util.concurrent.ConcurrentHashMap subResources> = $r12;

        $r13 = r1.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.util.List paramFields>;

        r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.util.List paramFields> = $r13;

        $r14 = r1.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.util.List paramMethods>;

        r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.util.List paramMethods> = $r14;

        r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: boolean enableStatic> = 1;

        $r15 = r1.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.util.List nameBindings>;

        r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.util.List nameBindings> = $r15;

        $r16 = r1.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.ClassResourceInfo parent>;

        r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.ClassResourceInfo parent> = $r16;

        goto label2;

     label1:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r6;

     label2:
        return;
    }

    public void <init>(java.lang.Class, java.lang.Class, boolean, boolean, org.apache.cxf.Bus)
    {
        org.apache.cxf.Bus r3;
        java.util.concurrent.ConcurrentHashMap $r4;
        java.lang.'annotation'.Annotation[] $r9;
        java.util.HashSet $r6;
        java.util.List $r5, $r10;
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0;
        java.lang.Class r1, r2, $r7, $r8;
        boolean z0, z1, $z2;

        r0 := @this: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r3 := @parameter4: org.apache.cxf.Bus;

        if z0 != 0 goto label1;

        if z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        specialinvoke r0.<org.apache.cxf.jaxrs.model.BeanResourceInfo: void <init>(java.lang.Class,java.lang.Class,boolean,boolean,org.apache.cxf.Bus)>(r1, r2, z0, $z2, r3);

        $r4 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r4.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.util.concurrent.ConcurrentHashMap subResources> = $r4;

        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.util.List nameBindings> = $r5;

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.util.Set injectedSubInstances> = $r6;

        r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: boolean enableStatic> = z1;

        $r7 = r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.Class resourceClass>;

        if $r7 == null goto label4;

        $r8 = r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.Class serviceClass>;

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.'annotation'.Annotation[] getAnnotations()>();

        $r10 = staticinvoke <org.apache.cxf.jaxrs.utils.AnnotationUtils: java.util.List getNameBindings(java.lang.'annotation'.Annotation[])>($r9);

        r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.util.List nameBindings> = $r10;

     label4:
        return;
    }

    public void <init>(java.lang.Class, java.lang.Class, boolean, boolean, boolean, org.apache.cxf.Bus)
    {
        org.apache.cxf.Bus r3;
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0;
        java.lang.Class r1, r2;
        boolean z0, z1, z2;

        r0 := @this: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        r3 := @parameter5: org.apache.cxf.Bus;

        specialinvoke r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: void <init>(java.lang.Class,java.lang.Class,boolean,boolean,org.apache.cxf.Bus)>(r1, r2, z0, z1, r3);

        r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: boolean createdFromModel> = z2;

        return;
    }

    public void <init>(java.lang.Class, java.lang.Class, boolean, boolean, boolean, java.lang.String, java.lang.String, org.apache.cxf.Bus)
    {
        org.apache.cxf.Bus r2;
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0;
        java.lang.Class r1, r5;
        java.lang.String r3, r4;
        boolean z0, z1, z2;

        r0 := @this: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        r1 := @parameter0: java.lang.Class;

        r5 := @parameter1: java.lang.Class;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        r3 := @parameter5: java.lang.String;

        r4 := @parameter6: java.lang.String;

        r2 := @parameter7: org.apache.cxf.Bus;

        specialinvoke r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: void <init>(java.lang.Class,java.lang.Class,boolean,boolean,boolean,org.apache.cxf.Bus)>(r1, r1, z0, z1, z2, r2);

        r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.String consumesTypes> = r3;

        r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.String producesTypes> = r4;

        return;
    }

    public void <init>(java.lang.Class)
    {
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0;
        java.lang.Class r1;

        r0 := @this: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: void <init>(java.lang.Class,boolean)>(r1, 1);

        return;
    }

    public void <init>(java.lang.Class, boolean)
    {
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0;
        java.lang.Class r1;
        boolean z0;

        r0 := @this: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        r1 := @parameter0: java.lang.Class;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: void <init>(java.lang.Class,java.lang.Class,boolean)>(r1, r1, z0);

        return;
    }

    public void <init>(java.lang.Class, java.lang.Class)
    {
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0;
        java.lang.Class r1, r2;

        r0 := @this: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        specialinvoke r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: void <init>(java.lang.Class,java.lang.Class,boolean)>(r1, r2, 0);

        return;
    }

    public void <init>(java.lang.Class, java.lang.Class, boolean)
    {
        org.apache.cxf.Bus $r3;
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0;
        java.lang.Class r1, r2;
        boolean z0;

        r0 := @this: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        z0 := @parameter2: boolean;

        $r3 = staticinvoke <org.apache.cxf.BusFactory: org.apache.cxf.Bus getDefaultBus(boolean)>(1);

        specialinvoke r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: void <init>(java.lang.Class,java.lang.Class,boolean,boolean,org.apache.cxf.Bus)>(r1, r2, z0, 0, $r3);

        return;
    }

    public org.apache.cxf.jaxrs.model.ClassResourceInfo findResource(java.lang.Class, java.lang.Class)
    {
        java.util.concurrent.ConcurrentHashMap $r3;
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0, $r5;
        org.apache.cxf.jaxrs.model.SubresourceKey $r1;
        java.lang.Class r2, r6, $r7;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        r2 := @parameter0: java.lang.Class;

        r6 := @parameter1: java.lang.Class;

        $z0 = r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: boolean enableStatic>;

        if $z0 == 0 goto label1;

        $r7 = r2;

        goto label2;

     label1:
        $r7 = r6;

     label2:
        $r1 = new org.apache.cxf.jaxrs.model.SubresourceKey;

        specialinvoke $r1.<org.apache.cxf.jaxrs.model.SubresourceKey: void <init>(java.lang.Class,java.lang.Class)>(r2, $r7);

        $r3 = r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.util.concurrent.ConcurrentHashMap subResources>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (org.apache.cxf.jaxrs.model.ClassResourceInfo) $r4;

        return $r5;
    }

    public boolean contextsAvailable()
    {
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0, $r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        $z0 = specialinvoke r0.<org.apache.cxf.jaxrs.model.BeanResourceInfo: boolean contextsAvailable()>();

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: boolean isRoot()>();

        if $z1 != 0 goto label1;

        $r1 = r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.ClassResourceInfo parent>;

        if $r1 == null goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public org.apache.cxf.jaxrs.model.ClassResourceInfo getSubResource(java.lang.Class, java.lang.Class)
    {
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0, $r2;
        java.lang.Class r1, r3, $r4;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        r1 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.lang.Class;

        $z0 = r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: boolean enableStatic>;

        if $z0 == 0 goto label1;

        $r4 = r1;

        goto label2;

     label1:
        $r4 = r3;

     label2:
        $z1 = r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: boolean enableStatic>;

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.ClassResourceInfo getSubResource(java.lang.Class,java.lang.Class,java.lang.Object,boolean)>(r1, $r4, null, $z1);

        return $r2;
    }

    public org.apache.cxf.jaxrs.model.ClassResourceInfo getSubResource(java.lang.Class, java.lang.Class, java.lang.Object)
    {
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0, $r3;
        java.lang.Class r1, r4, $r5;
        java.lang.Object r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        r1 := @parameter0: java.lang.Class;

        r4 := @parameter1: java.lang.Class;

        r2 := @parameter2: java.lang.Object;

        $z0 = r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: boolean enableStatic>;

        if $z0 == 0 goto label1;

        $r5 = r1;

        goto label2;

     label1:
        $r5 = r4;

     label2:
        $z1 = r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: boolean enableStatic>;

        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.ClassResourceInfo getSubResource(java.lang.Class,java.lang.Class,java.lang.Object,boolean)>(r1, $r5, r2, $z1);

        return $r3;
    }

    public org.apache.cxf.jaxrs.model.ClassResourceInfo getSubResource(java.lang.Class, java.lang.Class, java.lang.Object, boolean)
    {
        org.apache.cxf.Bus $r11;
        java.lang.Throwable $r14;
        org.apache.cxf.jaxrs.model.SubresourceKey $r0;
        java.lang.String $r8, $r10;
        boolean z0, $z1, $z2, $z3;
        java.util.concurrent.ConcurrentHashMap $r4, $r13;
        java.util.Set $r7, $r9;
        org.apache.cxf.jaxrs.model.ClassResourceInfo r3, $r12, r15;
        java.lang.Class r1, r2;
        java.lang.Object $r5, r6;

        r3 := @this: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        r6 := @parameter2: java.lang.Object;

        z0 := @parameter3: boolean;

        $r0 = new org.apache.cxf.jaxrs.model.SubresourceKey;

        specialinvoke $r0.<org.apache.cxf.jaxrs.model.SubresourceKey: void <init>(java.lang.Class,java.lang.Class)>(r1, r2);

        $r4 = r3.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.util.concurrent.ConcurrentHashMap subResources>;

        $r5 = virtualinvoke $r4.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r0);

        r15 = (org.apache.cxf.jaxrs.model.ClassResourceInfo) $r5;

        if r15 != null goto label1;

        $r11 = virtualinvoke r3.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.Bus getBus()>();

        $r12 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: org.apache.cxf.jaxrs.model.ClassResourceInfo createClassResourceInfo(java.lang.Class,java.lang.Class,org.apache.cxf.jaxrs.model.ClassResourceInfo,boolean,boolean,org.apache.cxf.Bus)>(r1, r2, r3, 0, z0, $r11);

        r15 = $r12;

        if $r12 == null goto label1;

        $r13 = r3.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.util.concurrent.ConcurrentHashMap subResources>;

        virtualinvoke $r13.<java.util.concurrent.ConcurrentHashMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>($r0, $r12);

     label1:
        if z0 == 0 goto label7;

        if r15 == null goto label7;

        $z1 = virtualinvoke r15.<org.apache.cxf.jaxrs.model.ClassResourceInfo: boolean isSingleton()>();

        if $z1 == 0 goto label7;

        if r6 == null goto label7;

        $z2 = virtualinvoke r15.<org.apache.cxf.jaxrs.model.ClassResourceInfo: boolean contextsAvailable()>();

        if $z2 == 0 goto label7;

        entermonitor r3;

     label2:
        $r7 = r3.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.util.Set injectedSubInstances>;

        $r8 = virtualinvoke r6.<java.lang.Object: java.lang.String toString()>();

        $z3 = interfaceinvoke $r7.<java.util.Set: boolean contains(java.lang.Object)>($r8);

        if $z3 != 0 goto label3;

        staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: void injectContextProxies(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object)>(r15, r6);

        $r9 = r3.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.util.Set injectedSubInstances>;

        $r10 = virtualinvoke r6.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke $r9.<java.util.Set: boolean add(java.lang.Object)>($r10);

     label3:
        exitmonitor r3;

     label4:
        goto label7;

     label5:
        $r14 := @caughtexception;

        exitmonitor r3;

     label6:
        throw $r14;

     label7:
        return r15;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void addSubClassResourceInfo(org.apache.cxf.jaxrs.model.ClassResourceInfo)
    {
        java.util.concurrent.ConcurrentHashMap $r3;
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0, r2;
        org.apache.cxf.jaxrs.model.SubresourceKey $r1;
        java.lang.Class $r4, $r5;

        r0 := @this: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        r2 := @parameter0: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        $r3 = r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.util.concurrent.ConcurrentHashMap subResources>;

        $r1 = new org.apache.cxf.jaxrs.model.SubresourceKey;

        $r4 = virtualinvoke r2.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.Class getResourceClass()>();

        $r5 = virtualinvoke r2.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.Class getServiceClass()>();

        specialinvoke $r1.<org.apache.cxf.jaxrs.model.SubresourceKey: void <init>(java.lang.Class,java.lang.Class)>($r4, $r5);

        virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>($r1, r2);

        return;
    }

    public java.util.Collection getSubResources()
    {
        java.util.Collection $r2, $r3;
        java.util.concurrent.ConcurrentHashMap $r1;
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0;

        r0 := @this: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        $r1 = r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.util.concurrent.ConcurrentHashMap subResources>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: java.util.Collection values()>();

        $r3 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r2);

        return $r3;
    }

    public java.util.List getNameBindings()
    {
        java.util.List $r3, $r4;
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0, $r1, $r2;

        r0 := @this: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        $r1 = r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.ClassResourceInfo parent>;

        if $r1 != null goto label1;

        $r4 = r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.util.List nameBindings>;

        return $r4;

     label1:
        $r2 = r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.ClassResourceInfo parent>;

        $r3 = virtualinvoke $r2.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.util.List getNameBindings()>();

        return $r3;
    }

    public void setNameBindings(java.util.List)
    {
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0;
        java.util.List r1;

        r0 := @this: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        r1 := @parameter0: java.util.List;

        r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.util.List nameBindings> = r1;

        return;
    }

    public java.util.Set getAllowedMethods()
    {
        java.util.Iterator $r4;
        java.util.Set $r3;
        org.apache.cxf.jaxrs.model.OperationResourceInfo r6;
        java.util.HashSet $r0;
        org.apache.cxf.jaxrs.model.ClassResourceInfo r1;
        java.lang.Object $r5;
        java.lang.String $r7;
        org.apache.cxf.jaxrs.model.MethodDispatcher $r2;
        boolean $z0;

        r1 := @this: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r2 = r1.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.MethodDispatcher methodDispatcher>;

        $r3 = virtualinvoke $r2.<org.apache.cxf.jaxrs.model.MethodDispatcher: java.util.Set getOperationResourceInfos()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.cxf.jaxrs.model.OperationResourceInfo) $r5;

        $r7 = virtualinvoke r6.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.lang.String getHttpMethod()>();

        if $r7 == null goto label2;

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r7);

     label2:
        goto label1;

     label3:
        return $r0;
    }

    public org.apache.cxf.jaxrs.model.URITemplate getURITemplate()
    {
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0;
        org.apache.cxf.jaxrs.model.URITemplate $r1;

        r0 := @this: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        $r1 = r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.URITemplate uriTemplate>;

        return $r1;
    }

    public void setURITemplate(org.apache.cxf.jaxrs.model.URITemplate)
    {
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0;
        org.apache.cxf.jaxrs.model.URITemplate r1;

        r0 := @this: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        r1 := @parameter0: org.apache.cxf.jaxrs.model.URITemplate;

        r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.URITemplate uriTemplate> = r1;

        return;
    }

    public org.apache.cxf.jaxrs.model.MethodDispatcher getMethodDispatcher()
    {
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0;
        org.apache.cxf.jaxrs.model.MethodDispatcher $r1;

        r0 := @this: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        $r1 = r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.MethodDispatcher methodDispatcher>;

        return $r1;
    }

    public void setMethodDispatcher(org.apache.cxf.jaxrs.model.MethodDispatcher)
    {
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0;
        org.apache.cxf.jaxrs.model.MethodDispatcher r1;

        r0 := @this: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        r1 := @parameter0: org.apache.cxf.jaxrs.model.MethodDispatcher;

        r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.MethodDispatcher methodDispatcher> = r1;

        return;
    }

    public boolean hasSubResources()
    {
        java.util.concurrent.ConcurrentHashMap $r1;
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        $r1 = r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.util.concurrent.ConcurrentHashMap subResources>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean isCreatedFromModel()
    {
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        $z0 = r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: boolean createdFromModel>;

        return $z0;
    }

    public org.apache.cxf.jaxrs.lifecycle.ResourceProvider getResourceProvider()
    {
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0;
        org.apache.cxf.jaxrs.lifecycle.ResourceProvider $r1;

        r0 := @this: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        $r1 = r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.lifecycle.ResourceProvider resourceProvider>;

        return $r1;
    }

    public void setResourceProvider(org.apache.cxf.jaxrs.lifecycle.ResourceProvider)
    {
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0;
        org.apache.cxf.jaxrs.lifecycle.ResourceProvider r1;

        r0 := @this: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        r1 := @parameter0: org.apache.cxf.jaxrs.lifecycle.ResourceProvider;

        r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.lifecycle.ResourceProvider resourceProvider> = r1;

        return;
    }

    public java.util.List getProduceMime()
    {
        javax.ws.rs.Produces r4;
        java.util.List $r5, $r8, $r10;
        java.lang.'annotation'.Annotation $r3;
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0, $r6, $r7;
        java.lang.Class $r2;
        java.lang.String $r1, $r9;

        r0 := @this: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        $r1 = r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.String producesTypes>;

        if $r1 == null goto label1;

        $r9 = r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.String producesTypes>;

        $r10 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List parseMediaTypes(java.lang.String)>($r9);

        return $r10;

     label1:
        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.Class getServiceClass()>();

        $r3 = staticinvoke <org.apache.cxf.jaxrs.utils.AnnotationUtils: java.lang.'annotation'.Annotation getClassAnnotation(java.lang.Class,java.lang.Class)>($r2, class "Ljavax/ws/rs/Produces;");

        r4 = (javax.ws.rs.Produces) $r3;

        if r4 != null goto label2;

        $r6 = r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.ClassResourceInfo parent>;

        if $r6 != null goto label3;

     label2:
        $r5 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List getProduceTypes(javax.ws.rs.Produces)>(r4);

        return $r5;

     label3:
        $r7 = r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.ClassResourceInfo parent>;

        $r8 = virtualinvoke $r7.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.util.List getProduceMime()>();

        return $r8;
    }

    public java.util.List getConsumeMime()
    {
        java.util.List $r5, $r8, $r10;
        javax.ws.rs.Consumes r4;
        java.lang.'annotation'.Annotation $r3;
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0, $r6, $r7;
        java.lang.Class $r2;
        java.lang.String $r1, $r9;

        r0 := @this: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        $r1 = r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.String consumesTypes>;

        if $r1 == null goto label1;

        $r9 = r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.String consumesTypes>;

        $r10 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List parseMediaTypes(java.lang.String)>($r9);

        return $r10;

     label1:
        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.Class getServiceClass()>();

        $r3 = staticinvoke <org.apache.cxf.jaxrs.utils.AnnotationUtils: java.lang.'annotation'.Annotation getClassAnnotation(java.lang.Class,java.lang.Class)>($r2, class "Ljavax/ws/rs/Consumes;");

        r4 = (javax.ws.rs.Consumes) $r3;

        if r4 != null goto label2;

        $r6 = r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.ClassResourceInfo parent>;

        if $r6 != null goto label3;

     label2:
        $r5 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List getConsumeTypes(javax.ws.rs.Consumes)>(r4);

        return $r5;

     label3:
        $r7 = r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.ClassResourceInfo parent>;

        $r8 = virtualinvoke $r7.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.util.List getConsumeMime()>();

        return $r8;
    }

    public javax.ws.rs.Path getPath()
    {
        java.lang.'annotation'.Annotation $r2;
        javax.ws.rs.Path $r3;
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0;
        java.lang.Class $r1;

        r0 := @this: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.Class getServiceClass()>();

        $r2 = staticinvoke <org.apache.cxf.jaxrs.utils.AnnotationUtils: java.lang.'annotation'.Annotation getClassAnnotation(java.lang.Class,java.lang.Class)>($r1, class "Ljavax/ws/rs/Path;");

        $r3 = (javax.ws.rs.Path) $r2;

        return $r3;
    }

    public boolean isSingleton()
    {
        org.apache.cxf.jaxrs.lifecycle.ResourceProvider $r3, $r4;
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0, $r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        $r1 = r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.ClassResourceInfo parent>;

        if $r1 != null goto label3;

        $r3 = r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.lifecycle.ResourceProvider resourceProvider>;

        if $r3 == null goto label1;

        $r4 = r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.lifecycle.ResourceProvider resourceProvider>;

        $z1 = interfaceinvoke $r4.<org.apache.cxf.jaxrs.lifecycle.ResourceProvider: boolean isSingleton()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;

     label3:
        $r2 = r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.ClassResourceInfo parent>;

        $z0 = virtualinvoke $r2.<org.apache.cxf.jaxrs.model.ClassResourceInfo: boolean isSingleton()>();

        return $z0;
    }

    public void setParent(org.apache.cxf.jaxrs.model.ClassResourceInfo)
    {
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0, r1;

        r0 := @this: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        r1 := @parameter0: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.ClassResourceInfo parent> = r1;

        return;
    }

    public org.apache.cxf.jaxrs.model.ClassResourceInfo getParent()
    {
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0, $r1;

        r0 := @this: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        $r1 = r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.ClassResourceInfo parent>;

        return $r1;
    }

    public void initBeanParamInfo(org.apache.cxf.jaxrs.provider.ProviderFactory)
    {
        org.apache.cxf.jaxrs.model.OperationResourceInfo r31;
        org.apache.cxf.jaxrs.model.ParameterType $r24, $r25;
        java.lang.reflect.Method $r26, r33;
        boolean $z0, $z1, $z2, $z3;
        org.apache.cxf.jaxrs.model.BeanParamInfo $r10, $r16, $r29;
        java.util.Set $r2;
        java.util.List $r4, $r6, $r21;
        java.lang.'annotation'.Annotation $r9, $r15;
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0;
        org.apache.cxf.Bus $r12, $r19, $r30;
        org.apache.cxf.jaxrs.provider.ProviderFactory r13;
        org.apache.cxf.jaxrs.model.Parameter r32;
        int $i0;
        java.util.Iterator $r3, $r5, $r7, $r22;
        java.lang.Class[] $r17, $r27;
        java.lang.reflect.Field r34;
        java.lang.Object $r8, $r14, $r20, $r23;
        java.lang.Class $r11, $r18, r28;
        org.apache.cxf.jaxrs.model.MethodDispatcher $r1;

        r0 := @this: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        r13 := @parameter0: org.apache.cxf.jaxrs.provider.ProviderFactory;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.MethodDispatcher getMethodDispatcher()>();

        $r2 = virtualinvoke $r1.<org.apache.cxf.jaxrs.model.MethodDispatcher: java.util.Set getOperationResourceInfos()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r20 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r31 = (org.apache.cxf.jaxrs.model.OperationResourceInfo) $r20;

        $r21 = virtualinvoke r31.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.util.List getParameters()>();

        $r22 = interfaceinvoke $r21.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z3 = interfaceinvoke $r22.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label04;

        $r23 = interfaceinvoke $r22.<java.util.Iterator: java.lang.Object next()>();

        r32 = (org.apache.cxf.jaxrs.model.Parameter) $r23;

        $r24 = virtualinvoke r32.<org.apache.cxf.jaxrs.model.Parameter: org.apache.cxf.jaxrs.model.ParameterType getType()>();

        $r25 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType BEAN>;

        if $r24 != $r25 goto label03;

        $r26 = virtualinvoke r31.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.lang.reflect.Method getMethodToInvoke()>();

        $r27 = virtualinvoke $r26.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i0 = virtualinvoke r32.<org.apache.cxf.jaxrs.model.Parameter: int getIndex()>();

        r28 = $r27[$i0];

        $r29 = new org.apache.cxf.jaxrs.model.BeanParamInfo;

        $r30 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.Bus getBus()>();

        specialinvoke $r29.<org.apache.cxf.jaxrs.model.BeanParamInfo: void <init>(java.lang.Class,org.apache.cxf.Bus)>(r28, $r30);

        virtualinvoke r13.<org.apache.cxf.jaxrs.provider.ProviderFactory: void addBeanParamInfo(org.apache.cxf.jaxrs.model.BeanParamInfo)>($r29);

     label03:
        goto label02;

     label04:
        goto label01;

     label05:
        $r4 = specialinvoke r0.<org.apache.cxf.jaxrs.model.BeanResourceInfo: java.util.List getParameterMethods()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r14 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r33 = (java.lang.reflect.Method) $r14;

        $r15 = virtualinvoke r33.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Ljavax/ws/rs/BeanParam;");

        if $r15 == null goto label07;

        $r16 = new org.apache.cxf.jaxrs.model.BeanParamInfo;

        $r17 = virtualinvoke r33.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r18 = $r17[0];

        $r19 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.Bus getBus()>();

        specialinvoke $r16.<org.apache.cxf.jaxrs.model.BeanParamInfo: void <init>(java.lang.Class,org.apache.cxf.Bus)>($r18, $r19);

        virtualinvoke r13.<org.apache.cxf.jaxrs.provider.ProviderFactory: void addBeanParamInfo(org.apache.cxf.jaxrs.model.BeanParamInfo)>($r16);

     label07:
        goto label06;

     label08:
        $r6 = specialinvoke r0.<org.apache.cxf.jaxrs.model.BeanResourceInfo: java.util.List getParameterFields()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z2 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label11;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r34 = (java.lang.reflect.Field) $r8;

        $r9 = virtualinvoke r34.<java.lang.reflect.Field: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Ljavax/ws/rs/BeanParam;");

        if $r9 == null goto label10;

        $r10 = new org.apache.cxf.jaxrs.model.BeanParamInfo;

        $r11 = virtualinvoke r34.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r12 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.Bus getBus()>();

        specialinvoke $r10.<org.apache.cxf.jaxrs.model.BeanParamInfo: void <init>(java.lang.Class,org.apache.cxf.Bus)>($r11, $r12);

        virtualinvoke r13.<org.apache.cxf.jaxrs.provider.ProviderFactory: void addBeanParamInfo(org.apache.cxf.jaxrs.model.BeanParamInfo)>($r10);

     label10:
        goto label09;

     label11:
        return;
    }
}
