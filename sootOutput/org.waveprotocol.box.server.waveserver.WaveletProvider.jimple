public interface  org.waveprotocol.box.server.waveserver.WaveletProvider extends java.lang.Object
{

    public abstract void initialize() throws org.waveprotocol.box.server.waveserver.WaveServerException;

    public abstract void submitRequest(org.waveprotocol.wave.model.id.WaveletName, org.waveprotocol.wave.federation.Proto$ProtocolWaveletDelta, org.waveprotocol.box.server.waveserver.WaveletProvider$SubmitRequestListener);

    public abstract java.util.Collection getHistory(org.waveprotocol.wave.model.id.WaveletName, org.waveprotocol.wave.model.version.HashedVersion, org.waveprotocol.wave.model.version.HashedVersion) throws org.waveprotocol.box.server.waveserver.WaveServerException;

    public abstract boolean checkAccessPermission(org.waveprotocol.wave.model.id.WaveletName, org.waveprotocol.wave.model.wave.ParticipantId) throws org.waveprotocol.box.server.waveserver.WaveServerException;

    public abstract org.waveprotocol.box.common.ExceptionalIterator getWaveIds() throws org.waveprotocol.box.server.waveserver.WaveServerException;

    public abstract com.google.common.collect.ImmutableSet getWaveletIds(org.waveprotocol.wave.model.id.WaveId) throws org.waveprotocol.box.server.waveserver.WaveServerException;

    public abstract org.waveprotocol.box.server.frontend.CommittedWaveletSnapshot getSnapshot(org.waveprotocol.wave.model.id.WaveletName) throws org.waveprotocol.box.server.waveserver.WaveServerException;
}
