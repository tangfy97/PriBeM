public class org.codehaus.jackson.map.ext.JodaDeserializers$DateTimeDeserializer extends org.codehaus.jackson.map.ext.JodaDeserializers$JodaDeserializer
{

    public void <init>(java.lang.Class)
    {
        org.codehaus.jackson.map.ext.JodaDeserializers$DateTimeDeserializer r0;
        java.lang.Class r1;

        r0 := @this: org.codehaus.jackson.map.ext.JodaDeserializers$DateTimeDeserializer;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.codehaus.jackson.map.ext.JodaDeserializers$JodaDeserializer: void <init>(java.lang.Class)>(r1);

        return;
    }

    public org.joda.time.ReadableInstant deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.joda.time.DateTimeZone $r11, $r13;
        org.codehaus.jackson.JsonToken $r1, $r2, $r3;
        long $l1;
        org.codehaus.jackson.map.DeserializationContext r4;
        org.codehaus.jackson.map.JsonMappingException $r7;
        int $i0;
        java.lang.String $r8, $r9;
        org.codehaus.jackson.JsonParser r0;
        org.joda.time.DateTime $r14, $r15;
        org.joda.time.ReadableInstant $r16, $r17;
        org.codehaus.jackson.map.ext.JodaDeserializers$DateTimeDeserializer r5;
        java.lang.Class $r6;

        r5 := @this: org.codehaus.jackson.map.ext.JodaDeserializers$DateTimeDeserializer;

        r0 := @parameter0: org.codehaus.jackson.JsonParser;

        r4 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r2 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_NUMBER_INT>;

        if $r1 != $r2 goto label1;

        $r14 = new org.joda.time.DateTime;

        $l1 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: long getLongValue()>();

        $r13 = <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone UTC>;

        specialinvoke $r14.<org.joda.time.DateTime: void <init>(long,org.joda.time.DateTimeZone)>($l1, $r13);

        $r16 = (org.joda.time.ReadableInstant) $r14;

        return $r16;

     label1:
        $r3 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_STRING>;

        if $r1 != $r3 goto label3;

        $r8 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: java.lang.String getText()>();

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r9.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        return null;

     label2:
        $r15 = new org.joda.time.DateTime;

        $r11 = <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone UTC>;

        specialinvoke $r15.<org.joda.time.DateTime: void <init>(java.lang.Object,org.joda.time.DateTimeZone)>($r9, $r11);

        $r17 = (org.joda.time.ReadableInstant) $r15;

        return $r17;

     label3:
        $r6 = virtualinvoke r5.<org.codehaus.jackson.map.ext.JodaDeserializers$DateTimeDeserializer: java.lang.Class getValueClass()>();

        $r7 = virtualinvoke r4.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class)>($r6);

        throw $r7;
    }

    public volatile java.lang.Object deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.ext.JodaDeserializers$DateTimeDeserializer r0;
        org.joda.time.ReadableInstant $r3;
        org.codehaus.jackson.JsonParser r1;
        org.codehaus.jackson.map.DeserializationContext r2;

        r0 := @this: org.codehaus.jackson.map.ext.JodaDeserializers$DateTimeDeserializer;

        r1 := @parameter0: org.codehaus.jackson.JsonParser;

        r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.ext.JodaDeserializers$DateTimeDeserializer: org.joda.time.ReadableInstant deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r1, r2);

        return $r3;
    }
}
