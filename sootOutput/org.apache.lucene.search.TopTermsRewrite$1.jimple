class org.apache.lucene.search.TopTermsRewrite$1 extends org.apache.lucene.search.TermCollectingRewrite$TermCollector
{
    private final org.apache.lucene.search.MaxNonCompetitiveBoostAttribute maxBoostAtt;
    private final java.util.Map visitedTerms;
    private org.apache.lucene.index.TermsEnum termsEnum;
    private java.util.Comparator termComp;
    private org.apache.lucene.search.BoostAttribute boostAtt;
    private org.apache.lucene.search.TopTermsRewrite$ScoreTerm st;
    private org.apache.lucene.util.BytesRef lastTerm;
    static final boolean $assertionsDisabled;
    final java.util.PriorityQueue val$stQueue;
    final int val$maxSize;
    final org.apache.lucene.search.TopTermsRewrite this$0;

    void <init>(org.apache.lucene.search.TopTermsRewrite, java.util.PriorityQueue, int)
    {
        java.util.PriorityQueue r2;
        org.apache.lucene.search.MaxNonCompetitiveBoostAttribute $r5;
        java.util.HashMap $r6;
        org.apache.lucene.search.TopTermsRewrite$1 r0;
        org.apache.lucene.search.TopTermsRewrite r1;
        int i0;
        org.apache.lucene.util.AttributeSource $r3;
        org.apache.lucene.util.Attribute $r4;

        r0 := @this: org.apache.lucene.search.TopTermsRewrite$1;

        r1 := @parameter0: org.apache.lucene.search.TopTermsRewrite;

        r2 := @parameter1: java.util.PriorityQueue;

        i0 := @parameter2: int;

        r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.search.TopTermsRewrite this$0> = r1;

        r0.<org.apache.lucene.search.TopTermsRewrite$1: java.util.PriorityQueue val$stQueue> = r2;

        r0.<org.apache.lucene.search.TopTermsRewrite$1: int val$maxSize> = i0;

        specialinvoke r0.<org.apache.lucene.search.TermCollectingRewrite$TermCollector: void <init>()>();

        $r3 = r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.util.AttributeSource attributes>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/search/MaxNonCompetitiveBoostAttribute;");

        $r5 = (org.apache.lucene.search.MaxNonCompetitiveBoostAttribute) $r4;

        r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.search.MaxNonCompetitiveBoostAttribute maxBoostAtt> = $r5;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<org.apache.lucene.search.TopTermsRewrite$1: java.util.Map visitedTerms> = $r6;

        return;
    }

    public void setNextEnum(org.apache.lucene.index.TermsEnum)
    {
        org.apache.lucene.search.BoostAttribute $r6;
        java.lang.AssertionError $r11;
        org.apache.lucene.index.TermContext $r8;
        org.apache.lucene.search.TopTermsRewrite$1 r0;
        org.apache.lucene.index.TermsEnum r1;
        org.apache.lucene.search.TopTermsRewrite$ScoreTerm $r3, $r7;
        org.apache.lucene.util.AttributeSource $r4;
        org.apache.lucene.util.Attribute $r5;
        java.util.Comparator $r2, $r10;
        boolean $z0, $z1;
        org.apache.lucene.index.IndexReaderContext $r9;

        r0 := @this: org.apache.lucene.search.TopTermsRewrite$1;

        r1 := @parameter0: org.apache.lucene.index.TermsEnum;

        r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.index.TermsEnum termsEnum> = r1;

        $r2 = virtualinvoke r1.<org.apache.lucene.index.TermsEnum: java.util.Comparator getComparator()>();

        r0.<org.apache.lucene.search.TopTermsRewrite$1: java.util.Comparator termComp> = $r2;

        $z0 = <org.apache.lucene.search.TopTermsRewrite$1: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<org.apache.lucene.search.TopTermsRewrite$1: boolean compareToLastTerm(org.apache.lucene.util.BytesRef)>(null);

        if $z1 != 0 goto label1;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label1:
        $r3 = r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.search.TopTermsRewrite$ScoreTerm st>;

        if $r3 != null goto label2;

        $r7 = new org.apache.lucene.search.TopTermsRewrite$ScoreTerm;

        $r10 = r0.<org.apache.lucene.search.TopTermsRewrite$1: java.util.Comparator termComp>;

        $r8 = new org.apache.lucene.index.TermContext;

        $r9 = r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.index.IndexReaderContext topReaderContext>;

        specialinvoke $r8.<org.apache.lucene.index.TermContext: void <init>(org.apache.lucene.index.IndexReaderContext)>($r9);

        specialinvoke $r7.<org.apache.lucene.search.TopTermsRewrite$ScoreTerm: void <init>(java.util.Comparator,org.apache.lucene.index.TermContext)>($r10, $r8);

        r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.search.TopTermsRewrite$ScoreTerm st> = $r7;

     label2:
        $r4 = virtualinvoke r1.<org.apache.lucene.index.TermsEnum: org.apache.lucene.util.AttributeSource attributes()>();

        $r5 = virtualinvoke $r4.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/search/BoostAttribute;");

        $r6 = (org.apache.lucene.search.BoostAttribute) $r5;

        r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.search.BoostAttribute boostAtt> = $r6;

        return;
    }

    private boolean compareToLastTerm(org.apache.lucene.util.BytesRef)
    {
        java.lang.AssertionError $r7;
        org.apache.lucene.index.TermsEnum $r4;
        int $i0;
        java.lang.String $r14;
        boolean $z0;
        org.apache.lucene.util.BytesRef $r1, r2, $r3, $r6, $r10, $r15;
        org.apache.lucene.search.TopTermsRewrite$1 r0;
        java.lang.StringBuilder $r8, $r9, $r11, $r12, $r13;
        java.util.Comparator $r5;

        r0 := @this: org.apache.lucene.search.TopTermsRewrite$1;

        r2 := @parameter0: org.apache.lucene.util.BytesRef;

        $r1 = r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.util.BytesRef lastTerm>;

        if $r1 != null goto label1;

        if r2 == null goto label1;

        $r15 = staticinvoke <org.apache.lucene.util.BytesRef: org.apache.lucene.util.BytesRef deepCopyOf(org.apache.lucene.util.BytesRef)>(r2);

        r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.util.BytesRef lastTerm> = $r15;

        goto label4;

     label1:
        if r2 != null goto label2;

        r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.util.BytesRef lastTerm> = null;

        goto label4;

     label2:
        $z0 = <org.apache.lucene.search.TopTermsRewrite$1: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $r4 = r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.index.TermsEnum termsEnum>;

        $r5 = virtualinvoke $r4.<org.apache.lucene.index.TermsEnum: java.util.Comparator getComparator()>();

        $r6 = r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.util.BytesRef lastTerm>;

        $i0 = interfaceinvoke $r5.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r6, r2);

        if $i0 < 0 goto label3;

        $r7 = new java.lang.AssertionError;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lastTerm=");

        $r10 = r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.util.BytesRef lastTerm>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" t=");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>($r14);

        throw $r7;

     label3:
        $r3 = r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.util.BytesRef lastTerm>;

        virtualinvoke $r3.<org.apache.lucene.util.BytesRef: void copyBytes(org.apache.lucene.util.BytesRef)>(r2);

     label4:
        return 1;
    }

    public boolean collect(org.apache.lucene.util.BytesRef) throws java.io.IOException
    {
        byte $b15, $b16, $b17;
        org.apache.lucene.index.TermsEnum $r13, $r15, $r43, $r45, $r57;
        java.util.Map $r10, $r36, $r54;
        org.apache.lucene.search.TopTermsRewrite$1 r0;
        org.apache.lucene.search.BoostAttribute $r1;
        long $l4, $l14;
        java.lang.AssertionError $r60, $r61, $r62, $r63, $r66;
        java.util.PriorityQueue $r2, $r17, $r18, $r23, $r24, $r29, $r31, $r48;
        org.apache.lucene.search.MaxNonCompetitiveBoostAttribute $r26, $r28;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.lucene.util.BytesRef r3, $r5, $r9, $r27, $r35, $r50;
        float $f0, $f1, $f2, $f3, $f4;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i18, $i19;
        org.apache.lucene.search.TopTermsRewrite$ScoreTerm $r4, $r6, $r7, $r8, $r11, $r16, $r33, $r34, $r37, $r39, r53, $r56, r59, $r65;
        org.apache.lucene.index.TermState $r58;
        org.apache.lucene.index.TermContext $r14, $r38, $r40, $r44, $r64;
        java.lang.Object $r25, $r32, $r49, $r55;
        java.util.Comparator $r22, $r51;
        org.apache.lucene.index.AtomicReaderContext $r12, $r42;
        org.apache.lucene.index.IndexReaderContext $r21;

        r0 := @this: org.apache.lucene.search.TopTermsRewrite$1;

        r3 := @parameter0: org.apache.lucene.util.BytesRef;

        $r1 = r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.search.BoostAttribute boostAtt>;

        $f0 = interfaceinvoke $r1.<org.apache.lucene.search.BoostAttribute: float getBoost()>();

        $z0 = <org.apache.lucene.search.TopTermsRewrite$1: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $z4 = specialinvoke r0.<org.apache.lucene.search.TopTermsRewrite$1: boolean compareToLastTerm(org.apache.lucene.util.BytesRef)>(r3);

        if $z4 != 0 goto label01;

        $r60 = new java.lang.AssertionError;

        specialinvoke $r60.<java.lang.AssertionError: void <init>()>();

        throw $r60;

     label01:
        $r2 = r0.<org.apache.lucene.search.TopTermsRewrite$1: java.util.PriorityQueue val$stQueue>;

        $i0 = virtualinvoke $r2.<java.util.PriorityQueue: int size()>();

        $i1 = r0.<org.apache.lucene.search.TopTermsRewrite$1: int val$maxSize>;

        if $i0 != $i1 goto label03;

        $r48 = r0.<org.apache.lucene.search.TopTermsRewrite$1: java.util.PriorityQueue val$stQueue>;

        $r49 = virtualinvoke $r48.<java.util.PriorityQueue: java.lang.Object peek()>();

        r53 = (org.apache.lucene.search.TopTermsRewrite$ScoreTerm) $r49;

        $f3 = r53.<org.apache.lucene.search.TopTermsRewrite$ScoreTerm: float boost>;

        $b16 = $f0 cmpg $f3;

        $i19 = (int) $b16;

        if $i19 >= 0 goto label02;

        return 1;

     label02:
        $f4 = r53.<org.apache.lucene.search.TopTermsRewrite$ScoreTerm: float boost>;

        $b17 = $f0 cmpl $f4;

        if $b17 != 0 goto label03;

        $r51 = r0.<org.apache.lucene.search.TopTermsRewrite$1: java.util.Comparator termComp>;

        $r50 = r53.<org.apache.lucene.search.TopTermsRewrite$ScoreTerm: org.apache.lucene.util.BytesRef bytes>;

        $i18 = interfaceinvoke $r51.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r3, $r50);

        if $i18 <= 0 goto label03;

        return 1;

     label03:
        $r54 = r0.<org.apache.lucene.search.TopTermsRewrite$1: java.util.Map visitedTerms>;

        $r55 = interfaceinvoke $r54.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        $r56 = (org.apache.lucene.search.TopTermsRewrite$ScoreTerm) $r55;

        $r57 = r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.index.TermsEnum termsEnum>;

        $r58 = virtualinvoke $r57.<org.apache.lucene.index.TermsEnum: org.apache.lucene.index.TermState termState()>();

        $z5 = <org.apache.lucene.search.TopTermsRewrite$1: boolean $assertionsDisabled>;

        if $z5 != 0 goto label04;

        if $r58 != null goto label04;

        $r61 = new java.lang.AssertionError;

        specialinvoke $r61.<java.lang.AssertionError: void <init>()>();

        throw $r61;

     label04:
        if $r56 == null goto label06;

        $z3 = <org.apache.lucene.search.TopTermsRewrite$1: boolean $assertionsDisabled>;

        if $z3 != 0 goto label05;

        $f2 = $r56.<org.apache.lucene.search.TopTermsRewrite$ScoreTerm: float boost>;

        $b15 = $f2 cmpl $f0;

        if $b15 == 0 goto label05;

        $r62 = new java.lang.AssertionError;

        specialinvoke $r62.<java.lang.AssertionError: void <init>(java.lang.Object)>("boost should be equal in all segment TermsEnums");

        throw $r62;

     label05:
        $r44 = $r56.<org.apache.lucene.search.TopTermsRewrite$ScoreTerm: org.apache.lucene.index.TermContext termState>;

        $r42 = r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.index.AtomicReaderContext readerContext>;

        $i12 = $r42.<org.apache.lucene.index.AtomicReaderContext: int ord>;

        $r43 = r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.index.TermsEnum termsEnum>;

        $i13 = virtualinvoke $r43.<org.apache.lucene.index.TermsEnum: int docFreq()>();

        $r45 = r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.index.TermsEnum termsEnum>;

        $l14 = virtualinvoke $r45.<org.apache.lucene.index.TermsEnum: long totalTermFreq()>();

        virtualinvoke $r44.<org.apache.lucene.index.TermContext: void register(org.apache.lucene.index.TermState,int,int,long)>($r58, $i12, $i13, $l14);

        goto label11;

     label06:
        $r4 = r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.search.TopTermsRewrite$ScoreTerm st>;

        $r5 = $r4.<org.apache.lucene.search.TopTermsRewrite$ScoreTerm: org.apache.lucene.util.BytesRef bytes>;

        virtualinvoke $r5.<org.apache.lucene.util.BytesRef: void copyBytes(org.apache.lucene.util.BytesRef)>(r3);

        $r6 = r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.search.TopTermsRewrite$ScoreTerm st>;

        $r6.<org.apache.lucene.search.TopTermsRewrite$ScoreTerm: float boost> = $f0;

        $r10 = r0.<org.apache.lucene.search.TopTermsRewrite$1: java.util.Map visitedTerms>;

        $r7 = r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.search.TopTermsRewrite$ScoreTerm st>;

        $r9 = $r7.<org.apache.lucene.search.TopTermsRewrite$ScoreTerm: org.apache.lucene.util.BytesRef bytes>;

        $r8 = r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.search.TopTermsRewrite$ScoreTerm st>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r8);

        $z1 = <org.apache.lucene.search.TopTermsRewrite$1: boolean $assertionsDisabled>;

        if $z1 != 0 goto label07;

        $r39 = r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.search.TopTermsRewrite$ScoreTerm st>;

        $r40 = $r39.<org.apache.lucene.search.TopTermsRewrite$ScoreTerm: org.apache.lucene.index.TermContext termState>;

        $i11 = virtualinvoke $r40.<org.apache.lucene.index.TermContext: int docFreq()>();

        if $i11 == 0 goto label07;

        $r63 = new java.lang.AssertionError;

        specialinvoke $r63.<java.lang.AssertionError: void <init>()>();

        throw $r63;

     label07:
        $r11 = r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.search.TopTermsRewrite$ScoreTerm st>;

        $r14 = $r11.<org.apache.lucene.search.TopTermsRewrite$ScoreTerm: org.apache.lucene.index.TermContext termState>;

        $r12 = r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.index.AtomicReaderContext readerContext>;

        $i2 = $r12.<org.apache.lucene.index.AtomicReaderContext: int ord>;

        $r13 = r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.index.TermsEnum termsEnum>;

        $i3 = virtualinvoke $r13.<org.apache.lucene.index.TermsEnum: int docFreq()>();

        $r15 = r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.index.TermsEnum termsEnum>;

        $l4 = virtualinvoke $r15.<org.apache.lucene.index.TermsEnum: long totalTermFreq()>();

        virtualinvoke $r14.<org.apache.lucene.index.TermContext: void register(org.apache.lucene.index.TermState,int,int,long)>($r58, $i2, $i3, $l4);

        $r17 = r0.<org.apache.lucene.search.TopTermsRewrite$1: java.util.PriorityQueue val$stQueue>;

        $r16 = r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.search.TopTermsRewrite$ScoreTerm st>;

        virtualinvoke $r17.<java.util.PriorityQueue: boolean offer(java.lang.Object)>($r16);

        $r18 = r0.<org.apache.lucene.search.TopTermsRewrite$1: java.util.PriorityQueue val$stQueue>;

        $i5 = virtualinvoke $r18.<java.util.PriorityQueue: int size()>();

        $i6 = r0.<org.apache.lucene.search.TopTermsRewrite$1: int val$maxSize>;

        if $i5 <= $i6 goto label08;

        $r31 = r0.<org.apache.lucene.search.TopTermsRewrite$1: java.util.PriorityQueue val$stQueue>;

        $r32 = virtualinvoke $r31.<java.util.PriorityQueue: java.lang.Object poll()>();

        $r33 = (org.apache.lucene.search.TopTermsRewrite$ScoreTerm) $r32;

        r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.search.TopTermsRewrite$ScoreTerm st> = $r33;

        $r36 = r0.<org.apache.lucene.search.TopTermsRewrite$1: java.util.Map visitedTerms>;

        $r34 = r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.search.TopTermsRewrite$ScoreTerm st>;

        $r35 = $r34.<org.apache.lucene.search.TopTermsRewrite$ScoreTerm: org.apache.lucene.util.BytesRef bytes>;

        interfaceinvoke $r36.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r35);

        $r37 = r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.search.TopTermsRewrite$ScoreTerm st>;

        $r38 = $r37.<org.apache.lucene.search.TopTermsRewrite$ScoreTerm: org.apache.lucene.index.TermContext termState>;

        virtualinvoke $r38.<org.apache.lucene.index.TermContext: void clear()>();

        goto label09;

     label08:
        $r65 = new org.apache.lucene.search.TopTermsRewrite$ScoreTerm;

        $r22 = r0.<org.apache.lucene.search.TopTermsRewrite$1: java.util.Comparator termComp>;

        $r64 = new org.apache.lucene.index.TermContext;

        $r21 = r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.index.IndexReaderContext topReaderContext>;

        specialinvoke $r64.<org.apache.lucene.index.TermContext: void <init>(org.apache.lucene.index.IndexReaderContext)>($r21);

        specialinvoke $r65.<org.apache.lucene.search.TopTermsRewrite$ScoreTerm: void <init>(java.util.Comparator,org.apache.lucene.index.TermContext)>($r22, $r64);

        r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.search.TopTermsRewrite$ScoreTerm st> = $r65;

     label09:
        $z2 = <org.apache.lucene.search.TopTermsRewrite$1: boolean $assertionsDisabled>;

        if $z2 != 0 goto label10;

        $r29 = r0.<org.apache.lucene.search.TopTermsRewrite$1: java.util.PriorityQueue val$stQueue>;

        $i9 = virtualinvoke $r29.<java.util.PriorityQueue: int size()>();

        $i10 = r0.<org.apache.lucene.search.TopTermsRewrite$1: int val$maxSize>;

        if $i9 <= $i10 goto label10;

        $r66 = new java.lang.AssertionError;

        specialinvoke $r66.<java.lang.AssertionError: void <init>(java.lang.Object)>("the PQ size must be limited to maxSize");

        throw $r66;

     label10:
        $r23 = r0.<org.apache.lucene.search.TopTermsRewrite$1: java.util.PriorityQueue val$stQueue>;

        $i7 = virtualinvoke $r23.<java.util.PriorityQueue: int size()>();

        $i8 = r0.<org.apache.lucene.search.TopTermsRewrite$1: int val$maxSize>;

        if $i7 != $i8 goto label11;

        $r24 = r0.<org.apache.lucene.search.TopTermsRewrite$1: java.util.PriorityQueue val$stQueue>;

        $r25 = virtualinvoke $r24.<java.util.PriorityQueue: java.lang.Object peek()>();

        r59 = (org.apache.lucene.search.TopTermsRewrite$ScoreTerm) $r25;

        $r26 = r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.search.MaxNonCompetitiveBoostAttribute maxBoostAtt>;

        $f1 = r59.<org.apache.lucene.search.TopTermsRewrite$ScoreTerm: float boost>;

        interfaceinvoke $r26.<org.apache.lucene.search.MaxNonCompetitiveBoostAttribute: void setMaxNonCompetitiveBoost(float)>($f1);

        $r28 = r0.<org.apache.lucene.search.TopTermsRewrite$1: org.apache.lucene.search.MaxNonCompetitiveBoostAttribute maxBoostAtt>;

        $r27 = r59.<org.apache.lucene.search.TopTermsRewrite$ScoreTerm: org.apache.lucene.util.BytesRef bytes>;

        interfaceinvoke $r28.<org.apache.lucene.search.MaxNonCompetitiveBoostAttribute: void setCompetitiveTerm(org.apache.lucene.util.BytesRef)>($r27);

     label11:
        return 1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/search/TopTermsRewrite;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.search.TopTermsRewrite$1: boolean $assertionsDisabled> = $z1;

        return;
    }
}
