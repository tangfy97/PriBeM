class org.eclipse.jetty.servlet.ErrorPageErrorHandler$ErrorCodeRange extends java.lang.Object
{
    private int _from;
    private int _to;
    private java.lang.String _uri;
    final org.eclipse.jetty.servlet.ErrorPageErrorHandler this$0;

    void <init>(org.eclipse.jetty.servlet.ErrorPageErrorHandler, int, int, java.lang.String) throws java.lang.IllegalArgumentException
    {
        org.eclipse.jetty.servlet.ErrorPageErrorHandler$ErrorCodeRange r0;
        int i0, i1;
        org.eclipse.jetty.servlet.ErrorPageErrorHandler r1;
        java.lang.String r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.eclipse.jetty.servlet.ErrorPageErrorHandler$ErrorCodeRange;

        r1 := @parameter0: org.eclipse.jetty.servlet.ErrorPageErrorHandler;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        r0.<org.eclipse.jetty.servlet.ErrorPageErrorHandler$ErrorCodeRange: org.eclipse.jetty.servlet.ErrorPageErrorHandler this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 <= i1 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("from>to");

        throw $r3;

     label1:
        r0.<org.eclipse.jetty.servlet.ErrorPageErrorHandler$ErrorCodeRange: int _from> = i0;

        r0.<org.eclipse.jetty.servlet.ErrorPageErrorHandler$ErrorCodeRange: int _to> = i1;

        r0.<org.eclipse.jetty.servlet.ErrorPageErrorHandler$ErrorCodeRange: java.lang.String _uri> = r2;

        return;
    }

    boolean isInRange(int)
    {
        org.eclipse.jetty.servlet.ErrorPageErrorHandler$ErrorCodeRange r0;
        int i0, $i1, $i2;

        r0 := @this: org.eclipse.jetty.servlet.ErrorPageErrorHandler$ErrorCodeRange;

        i0 := @parameter0: int;

        $i1 = r0.<org.eclipse.jetty.servlet.ErrorPageErrorHandler$ErrorCodeRange: int _from>;

        if i0 < $i1 goto label1;

        $i2 = r0.<org.eclipse.jetty.servlet.ErrorPageErrorHandler$ErrorCodeRange: int _to>;

        if i0 > $i2 goto label1;

        return 1;

     label1:
        return 0;
    }

    java.lang.String getUri()
    {
        java.lang.String $r1;
        org.eclipse.jetty.servlet.ErrorPageErrorHandler$ErrorCodeRange r0;

        r0 := @this: org.eclipse.jetty.servlet.ErrorPageErrorHandler$ErrorCodeRange;

        $r1 = r0.<org.eclipse.jetty.servlet.ErrorPageErrorHandler$ErrorCodeRange: java.lang.String _uri>;

        return $r1;
    }

    public java.lang.String toString()
    {
        org.eclipse.jetty.servlet.ErrorPageErrorHandler$ErrorCodeRange r2;
        int $i0, $i1;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5, $r6, $r8;
        java.lang.String $r7, $r9;

        r2 := @this: org.eclipse.jetty.servlet.ErrorPageErrorHandler$ErrorCodeRange;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("from: ");

        $i0 = r2.<org.eclipse.jetty.servlet.ErrorPageErrorHandler$ErrorCodeRange: int _from>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",to: ");

        $i1 = r2.<org.eclipse.jetty.servlet.ErrorPageErrorHandler$ErrorCodeRange: int _to>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",uri: ");

        $r7 = r2.<org.eclipse.jetty.servlet.ErrorPageErrorHandler$ErrorCodeRange: java.lang.String _uri>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }
}
