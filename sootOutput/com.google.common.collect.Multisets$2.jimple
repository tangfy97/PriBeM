final class com.google.common.collect.Multisets$2 extends com.google.common.collect.AbstractMultiset
{
    final java.util.Set entrySet;
    final com.google.common.collect.Multiset val$multiset1;
    final com.google.common.collect.Multiset val$multiset2;

    void <init>(com.google.common.collect.Multiset, com.google.common.collect.Multiset)
    {
        com.google.common.collect.Multiset r1, r2;
        com.google.common.collect.Multisets$2$1 $r3;
        com.google.common.collect.Multisets$2 r0;

        r0 := @this: com.google.common.collect.Multisets$2;

        r1 := @parameter0: com.google.common.collect.Multiset;

        r2 := @parameter1: com.google.common.collect.Multiset;

        r0.<com.google.common.collect.Multisets$2: com.google.common.collect.Multiset val$multiset1> = r1;

        r0.<com.google.common.collect.Multisets$2: com.google.common.collect.Multiset val$multiset2> = r2;

        specialinvoke r0.<com.google.common.collect.AbstractMultiset: void <init>()>();

        $r3 = new com.google.common.collect.Multisets$2$1;

        specialinvoke $r3.<com.google.common.collect.Multisets$2$1: void <init>(com.google.common.collect.Multisets$2)>(r0);

        r0.<com.google.common.collect.Multisets$2: java.util.Set entrySet> = $r3;

        return;
    }

    public int count(java.lang.Object)
    {
        com.google.common.collect.Multiset $r2, $r3;
        int $i0, $i1, $i2;
        java.lang.Object r1;
        com.google.common.collect.Multisets$2 r0;

        r0 := @this: com.google.common.collect.Multisets$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.Multisets$2: com.google.common.collect.Multiset val$multiset1>;

        $i0 = interfaceinvoke $r2.<com.google.common.collect.Multiset: int count(java.lang.Object)>(r1);

        if $i0 != 0 goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $r3 = r0.<com.google.common.collect.Multisets$2: com.google.common.collect.Multiset val$multiset2>;

        $i1 = interfaceinvoke $r3.<com.google.common.collect.Multiset: int count(java.lang.Object)>(r1);

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

     label2:
        return $i2;
    }

    java.util.Set createElementSet()
    {
        com.google.common.collect.Multiset $r1, $r3;
        com.google.common.collect.Sets$SetView $r5;
        java.util.Set $r2, $r4;
        com.google.common.collect.Multisets$2 r0;

        r0 := @this: com.google.common.collect.Multisets$2;

        $r1 = r0.<com.google.common.collect.Multisets$2: com.google.common.collect.Multiset val$multiset1>;

        $r2 = interfaceinvoke $r1.<com.google.common.collect.Multiset: java.util.Set elementSet()>();

        $r3 = r0.<com.google.common.collect.Multisets$2: com.google.common.collect.Multiset val$multiset2>;

        $r4 = interfaceinvoke $r3.<com.google.common.collect.Multiset: java.util.Set elementSet()>();

        $r5 = staticinvoke <com.google.common.collect.Sets: com.google.common.collect.Sets$SetView intersection(java.util.Set,java.util.Set)>($r2, $r4);

        return $r5;
    }

    public java.util.Set entrySet()
    {
        java.util.Set $r1;
        com.google.common.collect.Multisets$2 r0;

        r0 := @this: com.google.common.collect.Multisets$2;

        $r1 = r0.<com.google.common.collect.Multisets$2: java.util.Set entrySet>;

        return $r1;
    }
}
