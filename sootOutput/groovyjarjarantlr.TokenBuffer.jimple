public class groovyjarjarantlr.TokenBuffer extends java.lang.Object
{
    protected groovyjarjarantlr.TokenStream input;
    int nMarkers;
    int markerOffset;
    int numToConsume;
    groovyjarjarantlr.TokenQueue queue;

    public void <init>(groovyjarjarantlr.TokenStream)
    {
        groovyjarjarantlr.TokenQueue $r2;
        groovyjarjarantlr.TokenStream r1;
        groovyjarjarantlr.TokenBuffer r0;

        r0 := @this: groovyjarjarantlr.TokenBuffer;

        r1 := @parameter0: groovyjarjarantlr.TokenStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<groovyjarjarantlr.TokenBuffer: int nMarkers> = 0;

        r0.<groovyjarjarantlr.TokenBuffer: int markerOffset> = 0;

        r0.<groovyjarjarantlr.TokenBuffer: int numToConsume> = 0;

        r0.<groovyjarjarantlr.TokenBuffer: groovyjarjarantlr.TokenStream input> = r1;

        $r2 = new groovyjarjarantlr.TokenQueue;

        specialinvoke $r2.<groovyjarjarantlr.TokenQueue: void <init>(int)>(1);

        r0.<groovyjarjarantlr.TokenBuffer: groovyjarjarantlr.TokenQueue queue> = $r2;

        return;
    }

    public final void reset()
    {
        groovyjarjarantlr.TokenQueue $r1;
        groovyjarjarantlr.TokenBuffer r0;

        r0 := @this: groovyjarjarantlr.TokenBuffer;

        r0.<groovyjarjarantlr.TokenBuffer: int nMarkers> = 0;

        r0.<groovyjarjarantlr.TokenBuffer: int markerOffset> = 0;

        r0.<groovyjarjarantlr.TokenBuffer: int numToConsume> = 0;

        $r1 = r0.<groovyjarjarantlr.TokenBuffer: groovyjarjarantlr.TokenQueue queue>;

        virtualinvoke $r1.<groovyjarjarantlr.TokenQueue: void reset()>();

        return;
    }

    public final void consume()
    {
        int $i0, $i1;
        groovyjarjarantlr.TokenBuffer r0;

        r0 := @this: groovyjarjarantlr.TokenBuffer;

        $i0 = r0.<groovyjarjarantlr.TokenBuffer: int numToConsume>;

        $i1 = $i0 + 1;

        r0.<groovyjarjarantlr.TokenBuffer: int numToConsume> = $i1;

        return;
    }

    private final void fill(int) throws groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.TokenQueue $r1, $r3;
        groovyjarjarantlr.TokenBuffer r0;
        groovyjarjarantlr.TokenStream $r2;
        int i0, $i1, $i2, $i3;
        groovyjarjarantlr.Token $r4;

        r0 := @this: groovyjarjarantlr.TokenBuffer;

        i0 := @parameter0: int;

        specialinvoke r0.<groovyjarjarantlr.TokenBuffer: void syncConsume()>();

     label1:
        $r1 = r0.<groovyjarjarantlr.TokenBuffer: groovyjarjarantlr.TokenQueue queue>;

        $i3 = $r1.<groovyjarjarantlr.TokenQueue: int nbrEntries>;

        $i1 = r0.<groovyjarjarantlr.TokenBuffer: int markerOffset>;

        $i2 = i0 + $i1;

        if $i3 >= $i2 goto label2;

        $r3 = r0.<groovyjarjarantlr.TokenBuffer: groovyjarjarantlr.TokenQueue queue>;

        $r2 = r0.<groovyjarjarantlr.TokenBuffer: groovyjarjarantlr.TokenStream input>;

        $r4 = interfaceinvoke $r2.<groovyjarjarantlr.TokenStream: groovyjarjarantlr.Token nextToken()>();

        virtualinvoke $r3.<groovyjarjarantlr.TokenQueue: void append(groovyjarjarantlr.Token)>($r4);

        goto label1;

     label2:
        return;
    }

    public groovyjarjarantlr.TokenStream getInput()
    {
        groovyjarjarantlr.TokenStream $r1;
        groovyjarjarantlr.TokenBuffer r0;

        r0 := @this: groovyjarjarantlr.TokenBuffer;

        $r1 = r0.<groovyjarjarantlr.TokenBuffer: groovyjarjarantlr.TokenStream input>;

        return $r1;
    }

    public final int LA(int) throws groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.TokenQueue $r1;
        groovyjarjarantlr.TokenBuffer r0;
        int i0, $i1, $i2, $i3, $i4;
        groovyjarjarantlr.Token $r2;

        r0 := @this: groovyjarjarantlr.TokenBuffer;

        i0 := @parameter0: int;

        specialinvoke r0.<groovyjarjarantlr.TokenBuffer: void fill(int)>(i0);

        $r1 = r0.<groovyjarjarantlr.TokenBuffer: groovyjarjarantlr.TokenQueue queue>;

        $i1 = r0.<groovyjarjarantlr.TokenBuffer: int markerOffset>;

        $i2 = $i1 + i0;

        $i3 = $i2 - 1;

        $r2 = virtualinvoke $r1.<groovyjarjarantlr.TokenQueue: groovyjarjarantlr.Token elementAt(int)>($i3);

        $i4 = virtualinvoke $r2.<groovyjarjarantlr.Token: int getType()>();

        return $i4;
    }

    public final groovyjarjarantlr.Token LT(int) throws groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.TokenQueue $r1;
        int i0, $i1, $i2, $i3;
        groovyjarjarantlr.TokenBuffer r0;
        groovyjarjarantlr.Token $r2;

        r0 := @this: groovyjarjarantlr.TokenBuffer;

        i0 := @parameter0: int;

        specialinvoke r0.<groovyjarjarantlr.TokenBuffer: void fill(int)>(i0);

        $r1 = r0.<groovyjarjarantlr.TokenBuffer: groovyjarjarantlr.TokenQueue queue>;

        $i1 = r0.<groovyjarjarantlr.TokenBuffer: int markerOffset>;

        $i2 = $i1 + i0;

        $i3 = $i2 - 1;

        $r2 = virtualinvoke $r1.<groovyjarjarantlr.TokenQueue: groovyjarjarantlr.Token elementAt(int)>($i3);

        return $r2;
    }

    public final int mark()
    {
        int $i0, $i1, $i2;
        groovyjarjarantlr.TokenBuffer r0;

        r0 := @this: groovyjarjarantlr.TokenBuffer;

        specialinvoke r0.<groovyjarjarantlr.TokenBuffer: void syncConsume()>();

        $i0 = r0.<groovyjarjarantlr.TokenBuffer: int nMarkers>;

        $i1 = $i0 + 1;

        r0.<groovyjarjarantlr.TokenBuffer: int nMarkers> = $i1;

        $i2 = r0.<groovyjarjarantlr.TokenBuffer: int markerOffset>;

        return $i2;
    }

    public final void rewind(int)
    {
        int i0, $i1, $i2;
        groovyjarjarantlr.TokenBuffer r0;

        r0 := @this: groovyjarjarantlr.TokenBuffer;

        i0 := @parameter0: int;

        specialinvoke r0.<groovyjarjarantlr.TokenBuffer: void syncConsume()>();

        r0.<groovyjarjarantlr.TokenBuffer: int markerOffset> = i0;

        $i1 = r0.<groovyjarjarantlr.TokenBuffer: int nMarkers>;

        $i2 = $i1 - 1;

        r0.<groovyjarjarantlr.TokenBuffer: int nMarkers> = $i2;

        return;
    }

    private final void syncConsume()
    {
        groovyjarjarantlr.TokenQueue $r1;
        groovyjarjarantlr.TokenBuffer r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: groovyjarjarantlr.TokenBuffer;

     label1:
        $i0 = r0.<groovyjarjarantlr.TokenBuffer: int numToConsume>;

        if $i0 <= 0 goto label4;

        $i1 = r0.<groovyjarjarantlr.TokenBuffer: int nMarkers>;

        if $i1 <= 0 goto label2;

        $i4 = r0.<groovyjarjarantlr.TokenBuffer: int markerOffset>;

        $i5 = $i4 + 1;

        r0.<groovyjarjarantlr.TokenBuffer: int markerOffset> = $i5;

        goto label3;

     label2:
        $r1 = r0.<groovyjarjarantlr.TokenBuffer: groovyjarjarantlr.TokenQueue queue>;

        virtualinvoke $r1.<groovyjarjarantlr.TokenQueue: void removeFirst()>();

     label3:
        $i2 = r0.<groovyjarjarantlr.TokenBuffer: int numToConsume>;

        $i3 = $i2 - 1;

        r0.<groovyjarjarantlr.TokenBuffer: int numToConsume> = $i3;

        goto label1;

     label4:
        return;
    }
}
