final class com.sun.lwuit.layouts.GroupLayout$GapSpring extends com.sun.lwuit.layouts.GroupLayout$Spring
{
    private final int min;
    private final int pref;
    private final int max;
    final com.sun.lwuit.layouts.GroupLayout this$0;

    void <init>(com.sun.lwuit.layouts.GroupLayout, int, int, int)
    {
        com.sun.lwuit.layouts.GroupLayout r1;
        int i0, i1, i2;
        com.sun.lwuit.layouts.GroupLayout$GapSpring r0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$GapSpring;

        r1 := @parameter0: com.sun.lwuit.layouts.GroupLayout;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r0.<com.sun.lwuit.layouts.GroupLayout$GapSpring: com.sun.lwuit.layouts.GroupLayout this$0> = r1;

        specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout$Spring: void <init>(com.sun.lwuit.layouts.GroupLayout)>(r1);

        staticinvoke <com.sun.lwuit.layouts.GroupLayout: void access$700(int,int,int,boolean)>(i0, i1, i2, 0);

        r0.<com.sun.lwuit.layouts.GroupLayout$GapSpring: int min> = i0;

        r0.<com.sun.lwuit.layouts.GroupLayout$GapSpring: int pref> = i1;

        r0.<com.sun.lwuit.layouts.GroupLayout$GapSpring: int max> = i2;

        return;
    }

    int calculateMinimumSize(int)
    {
        int $i0, $i1, i2, $i3, $i5;
        com.sun.lwuit.layouts.GroupLayout$GapSpring r0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$GapSpring;

        i2 := @parameter0: int;

        $i0 = r0.<com.sun.lwuit.layouts.GroupLayout$GapSpring: int min>;

        $i5 = (int) -2;

        if $i0 != $i5 goto label1;

        $i3 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$GapSpring: int getPreferredSize(int)>(i2);

        return $i3;

     label1:
        $i1 = r0.<com.sun.lwuit.layouts.GroupLayout$GapSpring: int min>;

        return $i1;
    }

    int calculatePreferredSize(int)
    {
        int $i0, i1;
        com.sun.lwuit.layouts.GroupLayout$GapSpring r0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$GapSpring;

        i1 := @parameter0: int;

        $i0 = r0.<com.sun.lwuit.layouts.GroupLayout$GapSpring: int pref>;

        return $i0;
    }

    int calculateMaximumSize(int)
    {
        int $i0, $i1, i2, $i3, $i5;
        com.sun.lwuit.layouts.GroupLayout$GapSpring r0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$GapSpring;

        i2 := @parameter0: int;

        $i0 = r0.<com.sun.lwuit.layouts.GroupLayout$GapSpring: int max>;

        $i5 = (int) -2;

        if $i0 != $i5 goto label1;

        $i3 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$GapSpring: int getPreferredSize(int)>(i2);

        return $i3;

     label1:
        $i1 = r0.<com.sun.lwuit.layouts.GroupLayout$GapSpring: int max>;

        return $i1;
    }

    boolean willHaveZeroSize(boolean)
    {
        com.sun.lwuit.layouts.GroupLayout$GapSpring r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$GapSpring;

        z0 := @parameter0: boolean;

        return 0;
    }
}
