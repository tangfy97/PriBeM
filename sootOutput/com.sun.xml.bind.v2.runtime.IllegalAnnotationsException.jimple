public class com.sun.xml.bind.v2.runtime.IllegalAnnotationsException extends javax.xml.bind.JAXBException
{
    private final java.util.List errors;
    private static final long serialVersionUID;
    static final boolean $assertionsDisabled;

    public void <init>(java.util.List)
    {
        java.lang.AssertionError $r8;
        java.util.ArrayList $r6;
        java.util.List r2, $r7;
        int $i0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r5;
        com.sun.xml.bind.v2.runtime.IllegalAnnotationsException r0;
        boolean $z0, $z1;

        r0 := @this: com.sun.xml.bind.v2.runtime.IllegalAnnotationsException;

        r2 := @parameter0: java.util.List;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" counts of IllegalAnnotationExceptions");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<javax.xml.bind.JAXBException: void <init>(java.lang.String)>($r5);

        $z0 = <com.sun.xml.bind.v2.runtime.IllegalAnnotationsException: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>("there must be at least one error");

        throw $r8;

     label1:
        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r2);

        $r7 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r6);

        r0.<com.sun.xml.bind.v2.runtime.IllegalAnnotationsException: java.util.List errors> = $r7;

        return;
    }

    public java.lang.String toString()
    {
        java.util.Iterator $r4;
        java.util.List $r3;
        com.sun.xml.bind.v2.runtime.IllegalAnnotationException r7;
        java.lang.StringBuilder $r0, $r9;
        java.lang.Object $r6;
        java.lang.String $r2, $r5, $r8;
        com.sun.xml.bind.v2.runtime.IllegalAnnotationsException r1;
        boolean $z0;

        r1 := @this: com.sun.xml.bind.v2.runtime.IllegalAnnotationsException;

        $r0 = new java.lang.StringBuilder;

        $r2 = specialinvoke r1.<javax.xml.bind.JAXBException: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r3 = r1.<com.sun.xml.bind.v2.runtime.IllegalAnnotationsException: java.util.List errors>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.sun.xml.bind.v2.runtime.IllegalAnnotationException) $r6;

        $r8 = virtualinvoke r7.<com.sun.xml.bind.v2.runtime.IllegalAnnotationException: java.lang.String toString()>();

        $r9 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        goto label1;

     label2:
        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public java.util.List getErrors()
    {
        java.util.List $r1;
        com.sun.xml.bind.v2.runtime.IllegalAnnotationsException r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.IllegalAnnotationsException;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.IllegalAnnotationsException: java.util.List errors>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <com.sun.xml.bind.v2.runtime.IllegalAnnotationsException: long serialVersionUID> = 1L;

        $r0 = class "Lcom/sun/xml/bind/v2/runtime/IllegalAnnotationsException;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.sun.xml.bind.v2.runtime.IllegalAnnotationsException: boolean $assertionsDisabled> = $z1;

        return;
    }
}
