public class org.apache.fontbox.ttf.PostScriptTable extends org.apache.fontbox.ttf.TTFTable
{
    private float formatType;
    private float italicAngle;
    private short underlinePosition;
    private short underlineThickness;
    private long isFixedPitch;
    private long minMemType42;
    private long maxMemType42;
    private long mimMemType1;
    private long maxMemType1;
    private java.lang.String[] glyphNames;
    public static final java.lang.String TAG;

    public void <init>()
    {
        org.apache.fontbox.ttf.PostScriptTable r0;

        r0 := @this: org.apache.fontbox.ttf.PostScriptTable;

        specialinvoke r0.<org.apache.fontbox.ttf.TTFTable: void <init>()>();

        r0.<org.apache.fontbox.ttf.PostScriptTable: java.lang.String[] glyphNames> = null;

        return;
    }

    public void initData(org.apache.fontbox.ttf.TrueTypeFont, org.apache.fontbox.ttf.TTFDataStream) throws java.io.IOException
    {
        byte $b7, $b8, $b9, $b10;
        int[] r18, r20;
        org.apache.fontbox.ttf.TTFDataStream r1;
        org.apache.fontbox.ttf.TrueTypeFont r2;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        long $l2, $l3, $l4, $l5, $l6;
        java.lang.String[] $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r13, $r15, $r16, $r17, r19;
        short $s0, $s1;
        int $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, i27, i28, i29, i30, i31, i32, i33;
        java.lang.String $r9, $r12, $r14, r21;
        org.apache.fontbox.ttf.PostScriptTable r0;

        r0 := @this: org.apache.fontbox.ttf.PostScriptTable;

        r2 := @parameter0: org.apache.fontbox.ttf.TrueTypeFont;

        r1 := @parameter1: org.apache.fontbox.ttf.TTFDataStream;

        $f0 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: float read32Fixed()>();

        r0.<org.apache.fontbox.ttf.PostScriptTable: float formatType> = $f0;

        $f1 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: float read32Fixed()>();

        r0.<org.apache.fontbox.ttf.PostScriptTable: float italicAngle> = $f1;

        $s0 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: short readSignedShort()>();

        r0.<org.apache.fontbox.ttf.PostScriptTable: short underlinePosition> = $s0;

        $s1 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: short readSignedShort()>();

        r0.<org.apache.fontbox.ttf.PostScriptTable: short underlineThickness> = $s1;

        $l2 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: long readUnsignedInt()>();

        r0.<org.apache.fontbox.ttf.PostScriptTable: long isFixedPitch> = $l2;

        $l3 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: long readUnsignedInt()>();

        r0.<org.apache.fontbox.ttf.PostScriptTable: long minMemType42> = $l3;

        $l4 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: long readUnsignedInt()>();

        r0.<org.apache.fontbox.ttf.PostScriptTable: long maxMemType42> = $l4;

        $l5 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: long readUnsignedInt()>();

        r0.<org.apache.fontbox.ttf.PostScriptTable: long mimMemType1> = $l5;

        $l6 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: long readUnsignedInt()>();

        r0.<org.apache.fontbox.ttf.PostScriptTable: long maxMemType1> = $l6;

        $f2 = r0.<org.apache.fontbox.ttf.PostScriptTable: float formatType>;

        $b7 = $f2 cmpl 1.0F;

        if $b7 != 0 goto label01;

        $r15 = newarray (java.lang.String)[258];

        r0.<org.apache.fontbox.ttf.PostScriptTable: java.lang.String[] glyphNames> = $r15;

        $r17 = <org.apache.fontbox.encoding.Encoding: java.lang.String[] MAC_GLYPH_NAMES>;

        $r16 = r0.<org.apache.fontbox.ttf.PostScriptTable: java.lang.String[] glyphNames>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r17, 0, $r16, 0, 258);

        goto label19;

     label01:
        $f3 = r0.<org.apache.fontbox.ttf.PostScriptTable: float formatType>;

        $b8 = $f3 cmpl 2.0F;

        if $b8 != 0 goto label12;

        $i19 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: int readUnsignedShort()>();

        r18 = newarray (int)[$i19];

        $r7 = newarray (java.lang.String)[$i19];

        r0.<org.apache.fontbox.ttf.PostScriptTable: java.lang.String[] glyphNames> = $r7;

        i27 = -2147483648;

        i28 = 0;

     label02:
        if i28 >= $i19 goto label04;

        $i26 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: int readUnsignedShort()>();

        r18[i28] = $i26;

        if $i26 > 32767 goto label03;

        i27 = staticinvoke <java.lang.Math: int max(int,int)>(i27, $i26);

     label03:
        i28 = i28 + 1;

        goto label02;

     label04:
        r19 = null;

        if i27 < 258 goto label06;

        $i21 = i27 - 258;

        $i22 = $i21 + 1;

        r19 = newarray (java.lang.String)[$i22];

        i29 = 0;

     label05:
        $i23 = i27 - 258;

        $i24 = $i23 + 1;

        if i29 >= $i24 goto label06;

        $i25 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: int readUnsignedByte()>();

        $r14 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: java.lang.String readString(int)>($i25);

        r19[i29] = $r14;

        i29 = i29 + 1;

        goto label05;

     label06:
        i30 = 0;

     label07:
        if i30 >= $i19 goto label11;

        i31 = r18[i30];

        if i31 >= 258 goto label08;

        $r13 = r0.<org.apache.fontbox.ttf.PostScriptTable: java.lang.String[] glyphNames>;

        $r11 = <org.apache.fontbox.encoding.Encoding: java.lang.String[] MAC_GLYPH_NAMES>;

        $r12 = $r11[i31];

        $r13[i30] = $r12;

        goto label10;

     label08:
        if i31 < 258 goto label09;

        if i31 > 32767 goto label09;

        $r10 = r0.<org.apache.fontbox.ttf.PostScriptTable: java.lang.String[] glyphNames>;

        $i20 = i31 - 258;

        $r9 = r19[$i20];

        $r10[i30] = $r9;

        goto label10;

     label09:
        $r8 = r0.<org.apache.fontbox.ttf.PostScriptTable: java.lang.String[] glyphNames>;

        $r8[i30] = ".undefined";

     label10:
        i30 = i30 + 1;

        goto label07;

     label11:
        goto label19;

     label12:
        $f4 = r0.<org.apache.fontbox.ttf.PostScriptTable: float formatType>;

        $b9 = $f4 cmpl 2.5F;

        if $b9 != 0 goto label18;

        $i11 = virtualinvoke r2.<org.apache.fontbox.ttf.TrueTypeFont: int getNumberOfGlyphs()>();

        r20 = newarray (int)[$i11];

        i32 = 0;

     label13:
        $i12 = lengthof r20;

        if i32 >= $i12 goto label14;

        $i16 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: int readSignedByte()>();

        $i17 = i32 + 1;

        $i18 = $i17 + $i16;

        r20[i32] = $i18;

        i32 = i32 + 1;

        goto label13;

     label14:
        $i13 = lengthof r20;

        $r3 = newarray (java.lang.String)[$i13];

        r0.<org.apache.fontbox.ttf.PostScriptTable: java.lang.String[] glyphNames> = $r3;

        i33 = 0;

     label15:
        $r4 = r0.<org.apache.fontbox.ttf.PostScriptTable: java.lang.String[] glyphNames>;

        $i14 = lengthof $r4;

        if i33 >= $i14 goto label17;

        $r5 = <org.apache.fontbox.encoding.Encoding: java.lang.String[] MAC_GLYPH_NAMES>;

        $i15 = r20[i33];

        r21 = $r5[$i15];

        if r21 == null goto label16;

        $r6 = r0.<org.apache.fontbox.ttf.PostScriptTable: java.lang.String[] glyphNames>;

        $r6[i33] = r21;

     label16:
        i33 = i33 + 1;

        goto label15;

     label17:
        goto label19;

     label18:
        $f5 = r0.<org.apache.fontbox.ttf.PostScriptTable: float formatType>;

        $b10 = $f5 cmpl 3.0F;

        if $b10 != 0 goto label19;

     label19:
        r0.<org.apache.fontbox.ttf.PostScriptTable: boolean initialized> = 1;

        return;
    }

    public float getFormatType()
    {
        float $f0;
        org.apache.fontbox.ttf.PostScriptTable r0;

        r0 := @this: org.apache.fontbox.ttf.PostScriptTable;

        $f0 = r0.<org.apache.fontbox.ttf.PostScriptTable: float formatType>;

        return $f0;
    }

    public void setFormatType(float)
    {
        float f0;
        org.apache.fontbox.ttf.PostScriptTable r0;

        r0 := @this: org.apache.fontbox.ttf.PostScriptTable;

        f0 := @parameter0: float;

        r0.<org.apache.fontbox.ttf.PostScriptTable: float formatType> = f0;

        return;
    }

    public long getIsFixedPitch()
    {
        long $l0;
        org.apache.fontbox.ttf.PostScriptTable r0;

        r0 := @this: org.apache.fontbox.ttf.PostScriptTable;

        $l0 = r0.<org.apache.fontbox.ttf.PostScriptTable: long isFixedPitch>;

        return $l0;
    }

    public void setIsFixedPitch(long)
    {
        long l0;
        org.apache.fontbox.ttf.PostScriptTable r0;

        r0 := @this: org.apache.fontbox.ttf.PostScriptTable;

        l0 := @parameter0: long;

        r0.<org.apache.fontbox.ttf.PostScriptTable: long isFixedPitch> = l0;

        return;
    }

    public float getItalicAngle()
    {
        float $f0;
        org.apache.fontbox.ttf.PostScriptTable r0;

        r0 := @this: org.apache.fontbox.ttf.PostScriptTable;

        $f0 = r0.<org.apache.fontbox.ttf.PostScriptTable: float italicAngle>;

        return $f0;
    }

    public void setItalicAngle(float)
    {
        float f0;
        org.apache.fontbox.ttf.PostScriptTable r0;

        r0 := @this: org.apache.fontbox.ttf.PostScriptTable;

        f0 := @parameter0: float;

        r0.<org.apache.fontbox.ttf.PostScriptTable: float italicAngle> = f0;

        return;
    }

    public long getMaxMemType1()
    {
        long $l0;
        org.apache.fontbox.ttf.PostScriptTable r0;

        r0 := @this: org.apache.fontbox.ttf.PostScriptTable;

        $l0 = r0.<org.apache.fontbox.ttf.PostScriptTable: long maxMemType1>;

        return $l0;
    }

    public void setMaxMemType1(long)
    {
        long l0;
        org.apache.fontbox.ttf.PostScriptTable r0;

        r0 := @this: org.apache.fontbox.ttf.PostScriptTable;

        l0 := @parameter0: long;

        r0.<org.apache.fontbox.ttf.PostScriptTable: long maxMemType1> = l0;

        return;
    }

    public long getMaxMemType42()
    {
        long $l0;
        org.apache.fontbox.ttf.PostScriptTable r0;

        r0 := @this: org.apache.fontbox.ttf.PostScriptTable;

        $l0 = r0.<org.apache.fontbox.ttf.PostScriptTable: long maxMemType42>;

        return $l0;
    }

    public void setMaxMemType42(long)
    {
        long l0;
        org.apache.fontbox.ttf.PostScriptTable r0;

        r0 := @this: org.apache.fontbox.ttf.PostScriptTable;

        l0 := @parameter0: long;

        r0.<org.apache.fontbox.ttf.PostScriptTable: long maxMemType42> = l0;

        return;
    }

    public long getMimMemType1()
    {
        long $l0;
        org.apache.fontbox.ttf.PostScriptTable r0;

        r0 := @this: org.apache.fontbox.ttf.PostScriptTable;

        $l0 = r0.<org.apache.fontbox.ttf.PostScriptTable: long mimMemType1>;

        return $l0;
    }

    public void setMimMemType1(long)
    {
        long l0;
        org.apache.fontbox.ttf.PostScriptTable r0;

        r0 := @this: org.apache.fontbox.ttf.PostScriptTable;

        l0 := @parameter0: long;

        r0.<org.apache.fontbox.ttf.PostScriptTable: long mimMemType1> = l0;

        return;
    }

    public long getMinMemType42()
    {
        long $l0;
        org.apache.fontbox.ttf.PostScriptTable r0;

        r0 := @this: org.apache.fontbox.ttf.PostScriptTable;

        $l0 = r0.<org.apache.fontbox.ttf.PostScriptTable: long minMemType42>;

        return $l0;
    }

    public void setMinMemType42(long)
    {
        long l0;
        org.apache.fontbox.ttf.PostScriptTable r0;

        r0 := @this: org.apache.fontbox.ttf.PostScriptTable;

        l0 := @parameter0: long;

        r0.<org.apache.fontbox.ttf.PostScriptTable: long minMemType42> = l0;

        return;
    }

    public short getUnderlinePosition()
    {
        short $s0;
        org.apache.fontbox.ttf.PostScriptTable r0;

        r0 := @this: org.apache.fontbox.ttf.PostScriptTable;

        $s0 = r0.<org.apache.fontbox.ttf.PostScriptTable: short underlinePosition>;

        return $s0;
    }

    public void setUnderlinePosition(short)
    {
        short s0;
        org.apache.fontbox.ttf.PostScriptTable r0;

        r0 := @this: org.apache.fontbox.ttf.PostScriptTable;

        s0 := @parameter0: short;

        r0.<org.apache.fontbox.ttf.PostScriptTable: short underlinePosition> = s0;

        return;
    }

    public short getUnderlineThickness()
    {
        short $s0;
        org.apache.fontbox.ttf.PostScriptTable r0;

        r0 := @this: org.apache.fontbox.ttf.PostScriptTable;

        $s0 = r0.<org.apache.fontbox.ttf.PostScriptTable: short underlineThickness>;

        return $s0;
    }

    public void setUnderlineThickness(short)
    {
        short s0;
        org.apache.fontbox.ttf.PostScriptTable r0;

        r0 := @this: org.apache.fontbox.ttf.PostScriptTable;

        s0 := @parameter0: short;

        r0.<org.apache.fontbox.ttf.PostScriptTable: short underlineThickness> = s0;

        return;
    }

    public java.lang.String[] getGlyphNames()
    {
        java.lang.String[] $r1;
        org.apache.fontbox.ttf.PostScriptTable r0;

        r0 := @this: org.apache.fontbox.ttf.PostScriptTable;

        $r1 = r0.<org.apache.fontbox.ttf.PostScriptTable: java.lang.String[] glyphNames>;

        return $r1;
    }

    public void setGlyphNames(java.lang.String[])
    {
        java.lang.String[] r1;
        org.apache.fontbox.ttf.PostScriptTable r0;

        r0 := @this: org.apache.fontbox.ttf.PostScriptTable;

        r1 := @parameter0: java.lang.String[];

        r0.<org.apache.fontbox.ttf.PostScriptTable: java.lang.String[] glyphNames> = r1;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.fontbox.ttf.PostScriptTable: java.lang.String TAG> = "post";

        return;
    }
}
