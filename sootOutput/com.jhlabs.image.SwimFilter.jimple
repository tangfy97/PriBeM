public class com.jhlabs.image.SwimFilter extends com.jhlabs.image.TransformFilter
{
    private float scale;
    private float stretch;
    private float angle;
    private float amount;
    private float turbulence;
    private float time;
    private float m00;
    private float m01;
    private float m10;
    private float m11;

    public void <init>()
    {
        com.jhlabs.image.SwimFilter r0;

        r0 := @this: com.jhlabs.image.SwimFilter;

        specialinvoke r0.<com.jhlabs.image.TransformFilter: void <init>()>();

        r0.<com.jhlabs.image.SwimFilter: float scale> = 32.0F;

        r0.<com.jhlabs.image.SwimFilter: float stretch> = 1.0F;

        r0.<com.jhlabs.image.SwimFilter: float angle> = 0.0F;

        r0.<com.jhlabs.image.SwimFilter: float amount> = 1.0F;

        r0.<com.jhlabs.image.SwimFilter: float turbulence> = 1.0F;

        r0.<com.jhlabs.image.SwimFilter: float time> = 0.0F;

        r0.<com.jhlabs.image.SwimFilter: float m00> = 1.0F;

        r0.<com.jhlabs.image.SwimFilter: float m01> = 0.0F;

        r0.<com.jhlabs.image.SwimFilter: float m10> = 0.0F;

        r0.<com.jhlabs.image.SwimFilter: float m11> = 1.0F;

        return;
    }

    public void setAmount(float)
    {
        float f0;
        com.jhlabs.image.SwimFilter r0;

        r0 := @this: com.jhlabs.image.SwimFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.SwimFilter: float amount> = f0;

        return;
    }

    public float getAmount()
    {
        float $f0;
        com.jhlabs.image.SwimFilter r0;

        r0 := @this: com.jhlabs.image.SwimFilter;

        $f0 = r0.<com.jhlabs.image.SwimFilter: float amount>;

        return $f0;
    }

    public void setScale(float)
    {
        float f0;
        com.jhlabs.image.SwimFilter r0;

        r0 := @this: com.jhlabs.image.SwimFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.SwimFilter: float scale> = f0;

        return;
    }

    public float getScale()
    {
        float $f0;
        com.jhlabs.image.SwimFilter r0;

        r0 := @this: com.jhlabs.image.SwimFilter;

        $f0 = r0.<com.jhlabs.image.SwimFilter: float scale>;

        return $f0;
    }

    public void setStretch(float)
    {
        float f0;
        com.jhlabs.image.SwimFilter r0;

        r0 := @this: com.jhlabs.image.SwimFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.SwimFilter: float stretch> = f0;

        return;
    }

    public float getStretch()
    {
        float $f0;
        com.jhlabs.image.SwimFilter r0;

        r0 := @this: com.jhlabs.image.SwimFilter;

        $f0 = r0.<com.jhlabs.image.SwimFilter: float stretch>;

        return $f0;
    }

    public void setAngle(float)
    {
        float f0, f1, f2, $f3;
        com.jhlabs.image.SwimFilter r0;
        double $d0, $d1, $d2, $d3;

        r0 := @this: com.jhlabs.image.SwimFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.SwimFilter: float angle> = f0;

        $d0 = (double) f0;

        $d1 = staticinvoke <java.lang.Math: double cos(double)>($d0);

        f1 = (float) $d1;

        $d2 = (double) f0;

        $d3 = staticinvoke <java.lang.Math: double sin(double)>($d2);

        f2 = (float) $d3;

        r0.<com.jhlabs.image.SwimFilter: float m00> = f1;

        r0.<com.jhlabs.image.SwimFilter: float m01> = f2;

        $f3 = neg f2;

        r0.<com.jhlabs.image.SwimFilter: float m10> = $f3;

        r0.<com.jhlabs.image.SwimFilter: float m11> = f1;

        return;
    }

    public float getAngle()
    {
        float $f0;
        com.jhlabs.image.SwimFilter r0;

        r0 := @this: com.jhlabs.image.SwimFilter;

        $f0 = r0.<com.jhlabs.image.SwimFilter: float angle>;

        return $f0;
    }

    public void setTurbulence(float)
    {
        float f0;
        com.jhlabs.image.SwimFilter r0;

        r0 := @this: com.jhlabs.image.SwimFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.SwimFilter: float turbulence> = f0;

        return;
    }

    public float getTurbulence()
    {
        float $f0;
        com.jhlabs.image.SwimFilter r0;

        r0 := @this: com.jhlabs.image.SwimFilter;

        $f0 = r0.<com.jhlabs.image.SwimFilter: float turbulence>;

        return $f0;
    }

    public void setTime(float)
    {
        float f0;
        com.jhlabs.image.SwimFilter r0;

        r0 := @this: com.jhlabs.image.SwimFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.SwimFilter: float time> = f0;

        return;
    }

    public float getTime()
    {
        float $f0;
        com.jhlabs.image.SwimFilter r0;

        r0 := @this: com.jhlabs.image.SwimFilter;

        $f0 = r0.<com.jhlabs.image.SwimFilter: float time>;

        return $f0;
    }

    protected void transformInverse(int, int, float[])
    {
        byte $b2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, f47, f48, f49, f50;
        com.jhlabs.image.SwimFilter r0;
        float[] r1;
        int i0, i1;

        r0 := @this: com.jhlabs.image.SwimFilter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: float[];

        $f1 = r0.<com.jhlabs.image.SwimFilter: float m00>;

        $f0 = (float) i0;

        $f5 = $f1 * $f0;

        $f3 = r0.<com.jhlabs.image.SwimFilter: float m01>;

        $f2 = (float) i1;

        $f4 = $f3 * $f2;

        f47 = $f5 + $f4;

        $f7 = r0.<com.jhlabs.image.SwimFilter: float m10>;

        $f6 = (float) i0;

        $f11 = $f7 * $f6;

        $f9 = r0.<com.jhlabs.image.SwimFilter: float m11>;

        $f8 = (float) i1;

        $f10 = $f9 * $f8;

        f48 = $f11 + $f10;

        $f12 = r0.<com.jhlabs.image.SwimFilter: float scale>;

        f49 = f47 / $f12;

        $f14 = r0.<com.jhlabs.image.SwimFilter: float scale>;

        $f13 = r0.<com.jhlabs.image.SwimFilter: float stretch>;

        $f15 = $f14 * $f13;

        f50 = f48 / $f15;

        $f16 = r0.<com.jhlabs.image.SwimFilter: float turbulence>;

        $b2 = $f16 cmpl 1.0F;

        if $b2 != 0 goto label1;

        $f35 = (float) i0;

        $f36 = r0.<com.jhlabs.image.SwimFilter: float amount>;

        $f34 = f49 + 0.5F;

        $f33 = r0.<com.jhlabs.image.SwimFilter: float time>;

        $f37 = staticinvoke <com.jhlabs.math.Noise: float noise3(float,float,float)>($f34, f50, $f33);

        $f38 = $f36 * $f37;

        $f39 = $f35 + $f38;

        r1[0] = $f39;

        $f42 = (float) i1;

        $f43 = r0.<com.jhlabs.image.SwimFilter: float amount>;

        $f41 = f50 + 0.5F;

        $f40 = r0.<com.jhlabs.image.SwimFilter: float time>;

        $f44 = staticinvoke <com.jhlabs.math.Noise: float noise3(float,float,float)>(f49, $f41, $f40);

        $f45 = $f43 * $f44;

        $f46 = $f42 + $f45;

        r1[1] = $f46;

        goto label2;

     label1:
        $f20 = (float) i0;

        $f21 = r0.<com.jhlabs.image.SwimFilter: float amount>;

        $f19 = f49 + 0.5F;

        $f18 = r0.<com.jhlabs.image.SwimFilter: float turbulence>;

        $f17 = r0.<com.jhlabs.image.SwimFilter: float time>;

        $f22 = staticinvoke <com.jhlabs.math.Noise: float turbulence3(float,float,float,float)>($f19, f50, $f18, $f17);

        $f23 = $f21 * $f22;

        $f24 = $f20 + $f23;

        r1[0] = $f24;

        $f28 = (float) i1;

        $f29 = r0.<com.jhlabs.image.SwimFilter: float amount>;

        $f27 = f50 + 0.5F;

        $f26 = r0.<com.jhlabs.image.SwimFilter: float turbulence>;

        $f25 = r0.<com.jhlabs.image.SwimFilter: float time>;

        $f30 = staticinvoke <com.jhlabs.math.Noise: float turbulence3(float,float,float,float)>(f49, $f27, $f26, $f25);

        $f31 = $f29 * $f30;

        $f32 = $f28 + $f31;

        r1[1] = $f32;

     label2:
        return;
    }

    public java.lang.String toString()
    {
        com.jhlabs.image.SwimFilter r0;

        r0 := @this: com.jhlabs.image.SwimFilter;

        return "Distort/Swim...";
    }
}
