final class org.apache.poi.xssf.extractor.XSSFImportFromXML$DefaultNamespaceContext extends java.lang.Object implements javax.xml.namespace.NamespaceContext
{
    private final org.w3c.dom.Element _docElem;

    public void <init>(org.w3c.dom.Document)
    {
        org.apache.poi.xssf.extractor.XSSFImportFromXML$DefaultNamespaceContext r0;
        org.w3c.dom.Element $r2;
        org.w3c.dom.Document r1;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFImportFromXML$DefaultNamespaceContext;

        r1 := @parameter0: org.w3c.dom.Document;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = interfaceinvoke r1.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        r0.<org.apache.poi.xssf.extractor.XSSFImportFromXML$DefaultNamespaceContext: org.w3c.dom.Element _docElem> = $r2;

        return;
    }

    public java.lang.String getNamespaceURI(java.lang.String)
    {
        org.apache.poi.xssf.extractor.XSSFImportFromXML$DefaultNamespaceContext r0;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFImportFromXML$DefaultNamespaceContext;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.poi.xssf.extractor.XSSFImportFromXML$DefaultNamespaceContext: java.lang.String getNamespaceForPrefix(java.lang.String)>(r1);

        return $r2;
    }

    private java.lang.String getNamespaceForPrefix(java.lang.String)
    {
        short $s0;
        org.w3c.dom.Node $r8, r12;
        int $i1, $i2, $i3, i4, $i5;
        org.apache.poi.xssf.extractor.XSSFImportFromXML$DefaultNamespaceContext r1;
        org.w3c.dom.NamedNodeMap $r7;
        java.lang.String r0, $r2, $r6, $r9, $r10, $r11, $r13;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r4, $r5, $r14;

        r1 := @this: org.apache.poi.xssf.extractor.XSSFImportFromXML$DefaultNamespaceContext;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("xml");

        if $z0 == 0 goto label01;

        return "http://www.w3.org/XML/1998/namespace";

     label01:
        r12 = r1.<org.apache.poi.xssf.extractor.XSSFImportFromXML$DefaultNamespaceContext: org.w3c.dom.Element _docElem>;

     label02:
        if r12 == null goto label12;

        $s0 = interfaceinvoke r12.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 != 1 goto label10;

        $r2 = interfaceinvoke r12.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r6);

        if $z1 == 0 goto label03;

        $r11 = interfaceinvoke r12.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        return $r11;

     label03:
        $r7 = interfaceinvoke r12.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>();

        i4 = 0;

     label04:
        $i1 = interfaceinvoke $r7.<org.w3c.dom.NamedNodeMap: int getLength()>();

        if i4 >= $i1 goto label09;

        $r8 = interfaceinvoke $r7.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i4);

        $r9 = interfaceinvoke $r8.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z2 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("xmlns:");

        if $z2 != 0 goto label05;

        $z4 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z4 == 0 goto label08;

     label05:
        $i2 = virtualinvoke $r9.<java.lang.String: int indexOf(int)>(58);

        if $z2 == 0 goto label06;

        $i3 = $i2 + 1;

        $r13 = virtualinvoke $r9.<java.lang.String: java.lang.String substring(int)>($i3);

        goto label07;

     label06:
        $r13 = "";

     label07:
        $z3 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z3 == 0 goto label08;

        $r10 = interfaceinvoke $r8.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        return $r10;

     label08:
        i4 = i4 + 1;

        goto label04;

     label09:
        goto label11;

     label10:
        $i5 = (int) $s0;

        if $i5 != 5 goto label12;

        goto label02;

     label11:
        r12 = interfaceinvoke r12.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        goto label02;

     label12:
        return null;
    }

    public java.util.Iterator getPrefixes(java.lang.String)
    {
        org.apache.poi.xssf.extractor.XSSFImportFromXML$DefaultNamespaceContext r0;
        java.lang.String r1;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFImportFromXML$DefaultNamespaceContext;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public java.lang.String getPrefix(java.lang.String)
    {
        org.apache.poi.xssf.extractor.XSSFImportFromXML$DefaultNamespaceContext r0;
        java.lang.String r1;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFImportFromXML$DefaultNamespaceContext;

        r1 := @parameter0: java.lang.String;

        return null;
    }
}
