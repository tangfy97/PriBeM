class nu.xom.Builder$NamespaceWellformednessRequired extends java.lang.Object implements org.xml.sax.ErrorHandler
{

    private void <init>()
    {
        nu.xom.Builder$NamespaceWellformednessRequired r0;

        r0 := @this: nu.xom.Builder$NamespaceWellformednessRequired;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void warning(org.xml.sax.SAXParseException)
    {
        org.xml.sax.SAXParseException r1;
        nu.xom.Builder$NamespaceWellformednessRequired r0;

        r0 := @this: nu.xom.Builder$NamespaceWellformednessRequired;

        r1 := @parameter0: org.xml.sax.SAXParseException;

        return;
    }

    public void error(org.xml.sax.SAXParseException) throws org.xml.sax.SAXParseException
    {
        org.xml.sax.SAXParseException r0;
        java.lang.String $r1;
        nu.xom.Builder$NamespaceWellformednessRequired r2;
        boolean $z0;

        r2 := @this: nu.xom.Builder$NamespaceWellformednessRequired;

        r0 := @parameter0: org.xml.sax.SAXParseException;

        $r1 = virtualinvoke r0.<org.xml.sax.SAXParseException: java.lang.String getMessage()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Illegal Namespace prefix: \"xml\".");

        if $z0 == 0 goto label1;

        return;

     label1:
        throw r0;
    }

    public void fatalError(org.xml.sax.SAXParseException) throws org.xml.sax.SAXParseException
    {
        org.xml.sax.SAXParseException r0;
        nu.xom.Builder$NamespaceWellformednessRequired r1;

        r1 := @this: nu.xom.Builder$NamespaceWellformednessRequired;

        r0 := @parameter0: org.xml.sax.SAXParseException;

        throw r0;
    }

    void <init>(nu.xom.Builder$1)
    {
        nu.xom.Builder$1 r1;
        nu.xom.Builder$NamespaceWellformednessRequired r0;

        r0 := @this: nu.xom.Builder$NamespaceWellformednessRequired;

        r1 := @parameter0: nu.xom.Builder$1;

        specialinvoke r0.<nu.xom.Builder$NamespaceWellformednessRequired: void <init>()>();

        return;
    }
}
