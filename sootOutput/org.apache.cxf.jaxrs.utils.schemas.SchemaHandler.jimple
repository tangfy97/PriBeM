public class org.apache.cxf.jaxrs.utils.schemas.SchemaHandler extends java.lang.Object
{
    static final java.lang.String DEFAULT_CATALOG_LOCATION;
    private static final java.util.logging.Logger LOG;
    private javax.xml.validation.Schema schema;
    private org.apache.cxf.Bus bus;
    private java.lang.String catalogLocation;

    public void <init>()
    {
        org.apache.cxf.jaxrs.utils.schemas.SchemaHandler r0;

        r0 := @this: org.apache.cxf.jaxrs.utils.schemas.SchemaHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void setBus(org.apache.cxf.Bus)
    {
        org.apache.cxf.Bus r1;
        org.apache.cxf.jaxrs.utils.schemas.SchemaHandler r0;

        r0 := @this: org.apache.cxf.jaxrs.utils.schemas.SchemaHandler;

        r1 := @parameter0: org.apache.cxf.Bus;

        r0.<org.apache.cxf.jaxrs.utils.schemas.SchemaHandler: org.apache.cxf.Bus bus> = r1;

        return;
    }

    public void setSchemas(java.util.List)
    {
        org.apache.cxf.jaxrs.utils.schemas.SchemaHandler r0;
        java.util.List r1;

        r0 := @this: org.apache.cxf.jaxrs.utils.schemas.SchemaHandler;

        r1 := @parameter0: java.util.List;

        virtualinvoke r0.<org.apache.cxf.jaxrs.utils.schemas.SchemaHandler: void setSchemaLocations(java.util.List)>(r1);

        return;
    }

    public void setSchemaLocations(java.util.List)
    {
        org.apache.cxf.Bus $r2, $r5;
        java.util.List r1;
        org.apache.cxf.jaxrs.utils.schemas.SchemaHandler r0;
        java.lang.String $r3;
        javax.xml.validation.Schema $r4;

        r0 := @this: org.apache.cxf.jaxrs.utils.schemas.SchemaHandler;

        r1 := @parameter0: java.util.List;

        $r3 = r0.<org.apache.cxf.jaxrs.utils.schemas.SchemaHandler: java.lang.String catalogLocation>;

        $r2 = r0.<org.apache.cxf.jaxrs.utils.schemas.SchemaHandler: org.apache.cxf.Bus bus>;

        if $r2 != null goto label1;

        $r5 = staticinvoke <org.apache.cxf.BusFactory: org.apache.cxf.Bus getThreadDefaultBus()>();

        goto label2;

     label1:
        $r5 = r0.<org.apache.cxf.jaxrs.utils.schemas.SchemaHandler: org.apache.cxf.Bus bus>;

     label2:
        $r4 = staticinvoke <org.apache.cxf.jaxrs.utils.schemas.SchemaHandler: javax.xml.validation.Schema createSchema(java.util.List,java.lang.String,org.apache.cxf.Bus)>(r1, $r3, $r5);

        r0.<org.apache.cxf.jaxrs.utils.schemas.SchemaHandler: javax.xml.validation.Schema schema> = $r4;

        return;
    }

    public void setCatalogLocation(java.lang.String)
    {
        org.apache.cxf.jaxrs.utils.schemas.SchemaHandler r0;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.jaxrs.utils.schemas.SchemaHandler;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.jaxrs.utils.schemas.SchemaHandler: java.lang.String catalogLocation> = r1;

        return;
    }

    public javax.xml.validation.Schema getSchema()
    {
        org.apache.cxf.jaxrs.utils.schemas.SchemaHandler r0;
        javax.xml.validation.Schema $r1;

        r0 := @this: org.apache.cxf.jaxrs.utils.schemas.SchemaHandler;

        $r1 = r0.<org.apache.cxf.jaxrs.utils.schemas.SchemaHandler: javax.xml.validation.Schema schema>;

        return $r1;
    }

    public static javax.xml.validation.Schema createSchema(java.util.List, java.lang.String, org.apache.cxf.Bus)
    {
        java.net.URL $r6, $r9;
        boolean $z0;
        org.apache.cxf.jaxrs.utils.schemas.SchemaHandler$1 $r7;
        java.util.logging.Logger $r17, $r24;
        java.lang.Exception $r15;
        java.util.List r2;
        javax.xml.transform.Source[] $r34, $r36;
        java.lang.StringBuilder $r16, $r18, $r20, $r23, $r25, $r26, $r27;
        org.apache.cxf.Bus r4;
        java.lang.Object[] $r35;
        javax.xml.transform.stream.StreamSource $r13;
        javax.xml.validation.Schema r30;
        java.util.ArrayList $r1;
        int $i0;
        java.lang.String $r14, $r19, $r21, $r28, r29, r31, $r32, r33;
        javax.xml.validation.SchemaFactory $r0;
        org.apache.cxf.catalog.OASISCatalogManager $r5;
        java.util.Iterator $r3;
        java.io.IOException $r22;
        java.io.InputStreamReader $r11;
        java.lang.Object $r8;
        java.io.BufferedReader $r10;
        java.io.InputStream $r12;

        r2 := @parameter0: java.util.List;

        r29 := @parameter1: java.lang.String;

        r4 := @parameter2: org.apache.cxf.Bus;

        $r0 = staticinvoke <javax.xml.validation.SchemaFactory: javax.xml.validation.SchemaFactory newInstance(java.lang.String)>("http://www.w3.org/2001/XMLSchema");

        r30 = null;

     label01:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r8 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r31 = (java.lang.String) $r8;

        $r9 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: java.net.URL getResourceURL(java.lang.String,org.apache.cxf.Bus)>(r31, r4);

        if $r9 != null goto label04;

     label03:
        return null;

     label04:
        $r10 = new java.io.BufferedReader;

        $r11 = new java.io.InputStreamReader;

        $r12 = virtualinvoke $r9.<java.net.URL: java.io.InputStream openStream()>();

        specialinvoke $r11.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r12, "UTF-8");

        specialinvoke $r10.<java.io.BufferedReader: void <init>(java.io.Reader)>($r11);

        $r13 = new javax.xml.transform.stream.StreamSource;

        specialinvoke $r13.<javax.xml.transform.stream.StreamSource: void <init>(java.io.Reader)>($r10);

        $r14 = virtualinvoke $r9.<java.net.URL: java.lang.String toString()>();

        virtualinvoke $r13.<javax.xml.transform.stream.StreamSource: void setSystemId(java.lang.String)>($r14);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r13);

        goto label02;

     label05:
        $r5 = staticinvoke <org.apache.cxf.catalog.OASISCatalogManager: org.apache.cxf.catalog.OASISCatalogManager getCatalogManager(org.apache.cxf.Bus)>(r4);

        if $r5 == null goto label11;

        if r29 != null goto label06;

        $r32 = "classpath:META-INF/jax-rs-catalog.xml";

        goto label07;

     label06:
        $r32 = r29;

     label07:
        r33 = $r32;

        $r6 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: java.net.URL getResourceURL(java.lang.String,org.apache.cxf.Bus)>($r32, r4);

        if $r6 == null goto label11;

     label08:
        virtualinvoke $r5.<org.apache.cxf.catalog.OASISCatalogManager: void loadCatalog(java.net.URL)>($r6);

        $r7 = new org.apache.cxf.jaxrs.utils.schemas.SchemaHandler$1;

        specialinvoke $r7.<org.apache.cxf.jaxrs.utils.schemas.SchemaHandler$1: void <init>(org.apache.cxf.catalog.OASISCatalogManager,org.apache.cxf.Bus)>($r5, r4);

        virtualinvoke $r0.<javax.xml.validation.SchemaFactory: void setResourceResolver(org.w3c.dom.ls.LSResourceResolver)>($r7);

     label09:
        goto label11;

     label10:
        $r22 := @caughtexception;

        $r24 = <org.apache.cxf.jaxrs.utils.schemas.SchemaHandler: java.util.logging.Logger LOG>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Catalog ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can not be loaded");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.util.logging.Logger: void warning(java.lang.String)>($r28);

     label11:
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r34 = newarray (javax.xml.transform.Source)[$i0];

        $r35 = interfaceinvoke $r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r34);

        $r36 = (javax.xml.transform.Source[]) $r35;

        r30 = virtualinvoke $r0.<javax.xml.validation.SchemaFactory: javax.xml.validation.Schema newSchema(javax.xml.transform.Source[])>($r36);

     label12:
        goto label14;

     label13:
        $r15 := @caughtexception;

        $r17 = <org.apache.cxf.jaxrs.utils.schemas.SchemaHandler: java.util.logging.Logger LOG>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Validation will be disabled, failed to create schema : ");

        $r19 = virtualinvoke $r15.<java.lang.Exception: java.lang.String getMessage()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<java.util.logging.Logger: void warning(java.lang.String)>($r21);

     label14:
        return r30;

        catch java.io.IOException from label08 to label09 with label10;
        catch java.lang.Exception from label01 to label03 with label13;
        catch java.lang.Exception from label04 to label12 with label13;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        <org.apache.cxf.jaxrs.utils.schemas.SchemaHandler: java.lang.String DEFAULT_CATALOG_LOCATION> = "classpath:META-INF/jax-rs-catalog.xml";

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/utils/schemas/SchemaHandler;");

        <org.apache.cxf.jaxrs.utils.schemas.SchemaHandler: java.util.logging.Logger LOG> = $r0;

        return;
    }
}
