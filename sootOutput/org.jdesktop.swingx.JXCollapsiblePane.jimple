public class org.jdesktop.swingx.JXCollapsiblePane extends org.jdesktop.swingx.JXPanel
{
    public static final java.lang.String ANIMATION_STATE_KEY;
    public static final java.lang.String TOGGLE_ACTION;
    public static final java.lang.String COLLAPSE_ICON;
    public static final java.lang.String EXPAND_ICON;
    private boolean collapsed;
    private org.jdesktop.swingx.JXCollapsiblePane$Direction direction;
    private javax.swing.Timer animateTimer;
    private org.jdesktop.swingx.JXCollapsiblePane$AnimationListener animator;
    private int currentDimension;
    private org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer wrapper;
    private boolean useAnimation;
    private org.jdesktop.swingx.JXCollapsiblePane$AnimationParams animationParams;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        org.jdesktop.swingx.JXCollapsiblePane r0;
        java.awt.BorderLayout $r1;
        org.jdesktop.swingx.JXCollapsiblePane$Direction $r2;

        r0 := @this: org.jdesktop.swingx.JXCollapsiblePane;

        $r2 = <org.jdesktop.swingx.JXCollapsiblePane$Direction: org.jdesktop.swingx.JXCollapsiblePane$Direction UP>;

        $r1 = new java.awt.BorderLayout;

        specialinvoke $r1.<java.awt.BorderLayout: void <init>(int,int)>(0, 0);

        specialinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: void <init>(org.jdesktop.swingx.JXCollapsiblePane$Direction,java.awt.LayoutManager)>($r2, $r1);

        return;
    }

    public void <init>(org.jdesktop.swingx.JXCollapsiblePane$Direction)
    {
        org.jdesktop.swingx.JXCollapsiblePane r0;
        java.awt.BorderLayout $r2;
        org.jdesktop.swingx.JXCollapsiblePane$Direction r1;

        r0 := @this: org.jdesktop.swingx.JXCollapsiblePane;

        r1 := @parameter0: org.jdesktop.swingx.JXCollapsiblePane$Direction;

        $r2 = new java.awt.BorderLayout;

        specialinvoke $r2.<java.awt.BorderLayout: void <init>(int,int)>(0, 0);

        specialinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: void <init>(org.jdesktop.swingx.JXCollapsiblePane$Direction,java.awt.LayoutManager)>(r1, $r2);

        return;
    }

    public void <init>(java.awt.LayoutManager)
    {
        org.jdesktop.swingx.JXCollapsiblePane r0;
        java.awt.LayoutManager r1;
        org.jdesktop.swingx.JXCollapsiblePane$Direction $r2;

        r0 := @this: org.jdesktop.swingx.JXCollapsiblePane;

        r1 := @parameter0: java.awt.LayoutManager;

        $r2 = <org.jdesktop.swingx.JXCollapsiblePane$Direction: org.jdesktop.swingx.JXCollapsiblePane$Direction UP>;

        specialinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: void <init>(org.jdesktop.swingx.JXCollapsiblePane$Direction,java.awt.LayoutManager)>($r2, r1);

        return;
    }

    public void <init>(org.jdesktop.swingx.JXCollapsiblePane$Direction, java.awt.LayoutManager)
    {
        org.jdesktop.swingx.JXCollapsiblePane$AnimationListener $r9;
        org.jdesktop.swingx.JXCollapsiblePane r0;
        org.jdesktop.swingx.JXCollapsiblePane$AnimationParams $r10;
        org.jdesktop.swingx.JXPanel $r11;
        org.jdesktop.swingx.JXCollapsiblePane$ToggleAction $r12;
        org.jdesktop.swingx.JXCollapsiblePane$Direction $r1, r3;
        int $i1;
        java.awt.LayoutManager r2;
        javax.swing.ActionMap $r7;

        r0 := @this: org.jdesktop.swingx.JXCollapsiblePane;

        r3 := @parameter0: org.jdesktop.swingx.JXCollapsiblePane$Direction;

        r2 := @parameter1: java.awt.LayoutManager;

        specialinvoke r0.<org.jdesktop.swingx.JXPanel: void <init>()>();

        r0.<org.jdesktop.swingx.JXCollapsiblePane: boolean collapsed> = 0;

        $r1 = <org.jdesktop.swingx.JXCollapsiblePane$Direction: org.jdesktop.swingx.JXCollapsiblePane$Direction UP>;

        r0.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$Direction direction> = $r1;

        $i1 = (int) -1;

        r0.<org.jdesktop.swingx.JXCollapsiblePane: int currentDimension> = $i1;

        r0.<org.jdesktop.swingx.JXCollapsiblePane: boolean useAnimation> = 1;

        specialinvoke r0.<org.jdesktop.swingx.JXPanel: void setLayout(java.awt.LayoutManager)>(r2);

        r0.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$Direction direction> = r3;

        $r9 = new org.jdesktop.swingx.JXCollapsiblePane$AnimationListener;

        specialinvoke $r9.<org.jdesktop.swingx.JXCollapsiblePane$AnimationListener: void <init>(org.jdesktop.swingx.JXCollapsiblePane,org.jdesktop.swingx.JXCollapsiblePane$1)>(r0, null);

        r0.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$AnimationListener animator> = $r9;

        $r10 = new org.jdesktop.swingx.JXCollapsiblePane$AnimationParams;

        specialinvoke $r10.<org.jdesktop.swingx.JXCollapsiblePane$AnimationParams: void <init>(int,int,float,float)>(30, 8, 0.01F, 1.0F);

        specialinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: void setAnimationParams(org.jdesktop.swingx.JXCollapsiblePane$AnimationParams)>($r10);

        $r11 = new org.jdesktop.swingx.JXPanel;

        specialinvoke $r11.<org.jdesktop.swingx.JXPanel: void <init>()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: void setContentPane(java.awt.Container)>($r11);

        virtualinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: void setDirection(org.jdesktop.swingx.JXCollapsiblePane$Direction)>(r3);

        $r7 = virtualinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: javax.swing.ActionMap getActionMap()>();

        $r12 = new org.jdesktop.swingx.JXCollapsiblePane$ToggleAction;

        specialinvoke $r12.<org.jdesktop.swingx.JXCollapsiblePane$ToggleAction: void <init>(org.jdesktop.swingx.JXCollapsiblePane)>(r0);

        virtualinvoke $r7.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("toggle", $r12);

        return;
    }

    public void setContentPane(java.awt.Container)
    {
        org.jdesktop.swingx.JXCollapsiblePane r1;
        java.lang.AssertionError $r11;
        java.lang.IllegalArgumentException $r10;
        java.awt.Component $r3;
        org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer $r2, $r4, $r8, $r9, $r12;
        int $i1;
        java.awt.Container r0;
        boolean $z0, $z1;

        r1 := @this: org.jdesktop.swingx.JXCollapsiblePane;

        r0 := @parameter0: java.awt.Container;

        if r0 != null goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Content pane can\'t be null");

        throw $r10;

     label1:
        $r2 = r1.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer wrapper>;

        if $r2 == null goto label3;

        $z0 = <org.jdesktop.swingx.JXCollapsiblePane: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $r3 = specialinvoke r1.<org.jdesktop.swingx.JXPanel: java.awt.Component getComponent(int)>(0);

        $r4 = r1.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer wrapper>;

        if $r3 == $r4 goto label2;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label2:
        specialinvoke r1.<org.jdesktop.swingx.JXPanel: void remove(int)>(0);

     label3:
        $r12 = new org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer;

        specialinvoke $r12.<org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer: void <init>(org.jdesktop.swingx.JXCollapsiblePane,java.awt.Container)>(r1, r0);

        r1.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer wrapper> = $r12;

        $r8 = r1.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer wrapper>;

        $z1 = virtualinvoke r1.<org.jdesktop.swingx.JXCollapsiblePane: boolean isCollapsed()>();

        $r8.<org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer: boolean collapsedState> = $z1;

        $r9 = r1.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer wrapper>;

        $i1 = (int) -1;

        specialinvoke r1.<org.jdesktop.swingx.JXPanel: void addImpl(java.awt.Component,java.lang.Object,int)>($r9, "Center", $i1);

        return;
    }

    public java.awt.Container getContentPane()
    {
        org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer $r1, $r2;
        org.jdesktop.swingx.JXCollapsiblePane r0;
        java.awt.Container $r4;
        java.awt.Component $r3;

        r0 := @this: org.jdesktop.swingx.JXCollapsiblePane;

        $r1 = r0.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer wrapper>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer wrapper>;

        $r3 = virtualinvoke $r2.<org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer: java.awt.Component getView()>();

        $r4 = (java.awt.Container) $r3;

        return $r4;
    }

    public void setLayout(java.awt.LayoutManager)
    {
        org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer $r1;
        org.jdesktop.swingx.JXCollapsiblePane r0;
        java.awt.Container $r2;
        java.awt.LayoutManager r3;

        r0 := @this: org.jdesktop.swingx.JXCollapsiblePane;

        r3 := @parameter0: java.awt.LayoutManager;

        $r1 = r0.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer wrapper>;

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: java.awt.Container getContentPane()>();

        virtualinvoke $r2.<java.awt.Container: void setLayout(java.awt.LayoutManager)>(r3);

     label1:
        return;
    }

    protected void addImpl(java.awt.Component, java.lang.Object, int)
    {
        int i0;
        java.lang.Object r3;
        org.jdesktop.swingx.JXCollapsiblePane r0;
        java.awt.Container $r1;
        java.awt.Component r2;

        r0 := @this: org.jdesktop.swingx.JXCollapsiblePane;

        r2 := @parameter0: java.awt.Component;

        r3 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: java.awt.Container getContentPane()>();

        virtualinvoke $r1.<java.awt.Container: void add(java.awt.Component,java.lang.Object,int)>(r2, r3, i0);

        return;
    }

    public void remove(java.awt.Component)
    {
        org.jdesktop.swingx.JXCollapsiblePane r0;
        java.awt.Container $r1;
        java.awt.Component r2;

        r0 := @this: org.jdesktop.swingx.JXCollapsiblePane;

        r2 := @parameter0: java.awt.Component;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: java.awt.Container getContentPane()>();

        virtualinvoke $r1.<java.awt.Container: void remove(java.awt.Component)>(r2);

        return;
    }

    public void remove(int)
    {
        int i0;
        org.jdesktop.swingx.JXCollapsiblePane r0;
        java.awt.Container $r1;

        r0 := @this: org.jdesktop.swingx.JXCollapsiblePane;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: java.awt.Container getContentPane()>();

        virtualinvoke $r1.<java.awt.Container: void remove(int)>(i0);

        return;
    }

    public void removeAll()
    {
        org.jdesktop.swingx.JXCollapsiblePane r0;
        java.awt.Container $r1;

        r0 := @this: org.jdesktop.swingx.JXCollapsiblePane;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: java.awt.Container getContentPane()>();

        virtualinvoke $r1.<java.awt.Container: void removeAll()>();

        return;
    }

    public void setAnimated(boolean)
    {
        org.jdesktop.swingx.JXCollapsiblePane r0;
        org.jdesktop.swingx.JXCollapsiblePane$1 $r3;
        int $i1;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        javax.swing.Timer $r1;

        r0 := @this: org.jdesktop.swingx.JXCollapsiblePane;

        z0 := @parameter0: boolean;

        $z1 = r0.<org.jdesktop.swingx.JXCollapsiblePane: boolean useAnimation>;

        if z0 == $z1 goto label5;

        r0.<org.jdesktop.swingx.JXCollapsiblePane: boolean useAnimation> = z0;

        if z0 != 0 goto label2;

        $r1 = r0.<org.jdesktop.swingx.JXCollapsiblePane: javax.swing.Timer animateTimer>;

        $z3 = virtualinvoke $r1.<javax.swing.Timer: boolean isRunning()>();

        if $z3 == 0 goto label1;

        $r3 = new org.jdesktop.swingx.JXCollapsiblePane$1;

        specialinvoke $r3.<org.jdesktop.swingx.JXCollapsiblePane$1: void <init>(org.jdesktop.swingx.JXCollapsiblePane)>(r0);

        staticinvoke <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>($r3);

        goto label2;

     label1:
        $i1 = (int) -1;

        r0.<org.jdesktop.swingx.JXCollapsiblePane: int currentDimension> = $i1;

     label2:
        $z4 = r0.<org.jdesktop.swingx.JXCollapsiblePane: boolean useAnimation>;

        if $z4 != 0 goto label3;

        $z5 = 1;

        goto label4;

     label3:
        $z5 = 0;

     label4:
        $z2 = r0.<org.jdesktop.swingx.JXCollapsiblePane: boolean useAnimation>;

        virtualinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: void firePropertyChange(java.lang.String,boolean,boolean)>("animated", $z5, $z2);

     label5:
        return;
    }

    public boolean isAnimated()
    {
        org.jdesktop.swingx.JXCollapsiblePane r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXCollapsiblePane;

        $z0 = r0.<org.jdesktop.swingx.JXCollapsiblePane: boolean useAnimation>;

        return $z0;
    }

    public void setDirection(org.jdesktop.swingx.JXCollapsiblePane$Direction)
    {
        java.lang.IllegalStateException $r9;
        org.jdesktop.swingx.HorizontalLayout $r5;
        org.jdesktop.swingx.JXCollapsiblePane r0;
        org.jdesktop.swingx.VerticalLayout $r8;
        org.jdesktop.swingx.JXCollapsiblePane$Direction $r2, r3, $r6;
        java.awt.Container $r4, $r7;
        javax.swing.Timer $r1;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.swingx.JXCollapsiblePane;

        r3 := @parameter0: org.jdesktop.swingx.JXCollapsiblePane$Direction;

        $r1 = r0.<org.jdesktop.swingx.JXCollapsiblePane: javax.swing.Timer animateTimer>;

        $z0 = virtualinvoke $r1.<javax.swing.Timer: boolean isRunning()>();

        if $z0 == 0 goto label1;

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("cannot be change direction while collapsing.");

        throw $r9;

     label1:
        $r2 = virtualinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$Direction getDirection()>();

        r0.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$Direction direction> = r3;

        $z1 = virtualinvoke r3.<org.jdesktop.swingx.JXCollapsiblePane$Direction: boolean isVertical()>();

        if $z1 == 0 goto label2;

        $r7 = virtualinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: java.awt.Container getContentPane()>();

        $r8 = new org.jdesktop.swingx.VerticalLayout;

        specialinvoke $r8.<org.jdesktop.swingx.VerticalLayout: void <init>(int)>(2);

        virtualinvoke $r7.<java.awt.Container: void setLayout(java.awt.LayoutManager)>($r8);

        goto label3;

     label2:
        $r4 = virtualinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: java.awt.Container getContentPane()>();

        $r5 = new org.jdesktop.swingx.HorizontalLayout;

        specialinvoke $r5.<org.jdesktop.swingx.HorizontalLayout: void <init>(int)>(2);

        virtualinvoke $r4.<java.awt.Container: void setLayout(java.awt.LayoutManager)>($r5);

     label3:
        $r6 = virtualinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$Direction getDirection()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("direction", $r2, $r6);

        return;
    }

    public org.jdesktop.swingx.JXCollapsiblePane$Direction getDirection()
    {
        org.jdesktop.swingx.JXCollapsiblePane r0;
        org.jdesktop.swingx.JXCollapsiblePane$Direction $r1;

        r0 := @this: org.jdesktop.swingx.JXCollapsiblePane;

        $r1 = r0.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$Direction direction>;

        return $r1;
    }

    public boolean isCollapsed()
    {
        org.jdesktop.swingx.JXCollapsiblePane r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXCollapsiblePane;

        $z0 = r0.<org.jdesktop.swingx.JXCollapsiblePane: boolean collapsed>;

        return $z0;
    }

    public void setCollapsed(boolean)
    {
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        javax.swing.Timer $r13, $r21;
        org.jdesktop.swingx.JXCollapsiblePane$AnimationListener $r10, $r20;
        org.jdesktop.swingx.JXCollapsiblePane r0;
        java.awt.Component $r3, $r12;
        org.jdesktop.swingx.JXCollapsiblePane$AnimationParams $r9, $r19;
        java.awt.Dimension $r8, $r15;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7;
        java.awt.Container $r7, $r14;
        org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer $r1, $r2, $r5, $r11, $r16, $r18, $r22;
        org.jdesktop.swingx.JXCollapsiblePane$Direction $r4, $r6, $r17;

        r0 := @this: org.jdesktop.swingx.JXCollapsiblePane;

        z0 := @parameter0: boolean;

        $z1 = r0.<org.jdesktop.swingx.JXCollapsiblePane: boolean collapsed>;

        if $z1 == z0 goto label14;

        r0.<org.jdesktop.swingx.JXCollapsiblePane: boolean collapsed> = z0;

        $z2 = virtualinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: boolean isAnimated()>();

        if $z2 == 0 goto label08;

        $z6 = r0.<org.jdesktop.swingx.JXCollapsiblePane: boolean collapsed>;

        if $z6 == 0 goto label03;

        $r17 = r0.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$Direction direction>;

        $z9 = virtualinvoke $r17.<org.jdesktop.swingx.JXCollapsiblePane$Direction: boolean isVertical()>();

        if $z9 == 0 goto label01;

        $r22 = r0.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer wrapper>;

        $i4 = virtualinvoke $r22.<org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer: int getHeight()>();

        goto label02;

     label01:
        $r18 = r0.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer wrapper>;

        $i4 = virtualinvoke $r18.<org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer: int getWidth()>();

     label02:
        $r19 = new org.jdesktop.swingx.JXCollapsiblePane$AnimationParams;

        $i2 = $i4 / 10;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(8, $i2);

        specialinvoke $r19.<org.jdesktop.swingx.JXCollapsiblePane$AnimationParams: void <init>(int,int,float,float)>(30, $i3, 1.0F, 0.01F);

        specialinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: void setAnimationParams(org.jdesktop.swingx.JXCollapsiblePane$AnimationParams)>($r19);

        $r20 = r0.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$AnimationListener animator>;

        virtualinvoke $r20.<org.jdesktop.swingx.JXCollapsiblePane$AnimationListener: void reinit(int,int)>($i4, 0);

        $r21 = r0.<org.jdesktop.swingx.JXCollapsiblePane: javax.swing.Timer animateTimer>;

        virtualinvoke $r21.<javax.swing.Timer: void start()>();

        goto label11;

     label03:
        $r4 = r0.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$Direction direction>;

        $z7 = virtualinvoke $r4.<org.jdesktop.swingx.JXCollapsiblePane$Direction: boolean isVertical()>();

        if $z7 == 0 goto label04;

        $r16 = r0.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer wrapper>;

        $i5 = virtualinvoke $r16.<org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer: int getHeight()>();

        goto label05;

     label04:
        $r5 = r0.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer wrapper>;

        $i5 = virtualinvoke $r5.<org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer: int getWidth()>();

     label05:
        i6 = $i5;

        $r6 = r0.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$Direction direction>;

        $z8 = virtualinvoke $r6.<org.jdesktop.swingx.JXCollapsiblePane$Direction: boolean isVertical()>();

        if $z8 == 0 goto label06;

        $r14 = virtualinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: java.awt.Container getContentPane()>();

        $r15 = virtualinvoke $r14.<java.awt.Container: java.awt.Dimension getPreferredSize()>();

        $i7 = $r15.<java.awt.Dimension: int height>;

        goto label07;

     label06:
        $r7 = virtualinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: java.awt.Container getContentPane()>();

        $r8 = virtualinvoke $r7.<java.awt.Container: java.awt.Dimension getPreferredSize()>();

        $i7 = $r8.<java.awt.Dimension: int width>;

     label07:
        $i0 = $i7 / 10;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(8, $i0);

        $r9 = new org.jdesktop.swingx.JXCollapsiblePane$AnimationParams;

        specialinvoke $r9.<org.jdesktop.swingx.JXCollapsiblePane$AnimationParams: void <init>(int,int,float,float)>(30, $i1, 0.01F, 1.0F);

        specialinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: void setAnimationParams(org.jdesktop.swingx.JXCollapsiblePane$AnimationParams)>($r9);

        $r10 = r0.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$AnimationListener animator>;

        virtualinvoke $r10.<org.jdesktop.swingx.JXCollapsiblePane$AnimationListener: void reinit(int,int)>(i6, $i7);

        $r11 = r0.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer wrapper>;

        $r12 = virtualinvoke $r11.<org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer: java.awt.Component getView()>();

        virtualinvoke $r12.<java.awt.Component: void setVisible(boolean)>(1);

        $r13 = r0.<org.jdesktop.swingx.JXCollapsiblePane: javax.swing.Timer animateTimer>;

        virtualinvoke $r13.<javax.swing.Timer: void start()>();

        goto label11;

     label08:
        $r1 = r0.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer wrapper>;

        $z3 = r0.<org.jdesktop.swingx.JXCollapsiblePane: boolean collapsed>;

        $r1.<org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer: boolean collapsedState> = $z3;

        $r2 = r0.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer wrapper>;

        $r3 = virtualinvoke $r2.<org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer: java.awt.Component getView()>();

        $z4 = r0.<org.jdesktop.swingx.JXCollapsiblePane: boolean collapsed>;

        if $z4 != 0 goto label09;

        $z10 = 1;

        goto label10;

     label09:
        $z10 = 0;

     label10:
        virtualinvoke $r3.<java.awt.Component: void setVisible(boolean)>($z10);

        virtualinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: void revalidate()>();

     label11:
        virtualinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: void repaint()>();

        $z11 = r0.<org.jdesktop.swingx.JXCollapsiblePane: boolean collapsed>;

        if $z11 != 0 goto label12;

        $z12 = 1;

        goto label13;

     label12:
        $z12 = 0;

     label13:
        $z5 = r0.<org.jdesktop.swingx.JXCollapsiblePane: boolean collapsed>;

        virtualinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: void firePropertyChange(java.lang.String,boolean,boolean)>("collapsed", $z12, $z5);

     label14:
        return;
    }

    public javax.swing.border.Border getBorder()
    {
        javax.swing.JComponent $r3;
        org.jdesktop.swingx.JXCollapsiblePane r0;
        java.awt.Container $r1, $r2;
        boolean $z0;
        javax.swing.border.Border $r4;

        r0 := @this: org.jdesktop.swingx.JXCollapsiblePane;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: java.awt.Container getContentPane()>();

        $z0 = $r1 instanceof javax.swing.JComponent;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: java.awt.Container getContentPane()>();

        $r3 = (javax.swing.JComponent) $r2;

        $r4 = virtualinvoke $r3.<javax.swing.JComponent: javax.swing.border.Border getBorder()>();

        return $r4;

     label1:
        return null;
    }

    public void setBorder(javax.swing.border.Border)
    {
        javax.swing.JComponent $r4;
        org.jdesktop.swingx.JXCollapsiblePane r0;
        java.awt.Container $r1, $r2;
        boolean $z0;
        javax.swing.border.Border r3;

        r0 := @this: org.jdesktop.swingx.JXCollapsiblePane;

        r3 := @parameter0: javax.swing.border.Border;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: java.awt.Container getContentPane()>();

        $z0 = $r1 instanceof javax.swing.JComponent;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: java.awt.Container getContentPane()>();

        $r4 = (javax.swing.JComponent) $r2;

        virtualinvoke $r4.<javax.swing.JComponent: void setBorder(javax.swing.border.Border)>(r3);

     label1:
        return;
    }

    public java.awt.Dimension getMinimumSize()
    {
        java.awt.Dimension $r1;
        org.jdesktop.swingx.JXCollapsiblePane r0;

        r0 := @this: org.jdesktop.swingx.JXCollapsiblePane;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: java.awt.Dimension getPreferredSize()>();

        return $r1;
    }

    public void setMinimumSize(java.awt.Dimension)
    {
        java.awt.Dimension r2;
        org.jdesktop.swingx.JXCollapsiblePane r0;
        java.awt.Container $r1;

        r0 := @this: org.jdesktop.swingx.JXCollapsiblePane;

        r2 := @parameter0: java.awt.Dimension;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: java.awt.Container getContentPane()>();

        virtualinvoke $r1.<java.awt.Container: void setMinimumSize(java.awt.Dimension)>(r2);

        return;
    }

    public java.awt.Dimension getPreferredSize()
    {
        org.jdesktop.swingx.JXCollapsiblePane r0;
        org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer $r3;
        java.awt.Dimension $r2;
        org.jdesktop.swingx.JXCollapsiblePane$Direction $r4, $r5;
        int $i0, $i1, $i2, $i4;
        java.awt.Container $r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.jdesktop.swingx.JXCollapsiblePane;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: java.awt.Container getContentPane()>();

        $r2 = virtualinvoke $r1.<java.awt.Container: java.awt.Dimension getPreferredSize()>();

        $i0 = r0.<org.jdesktop.swingx.JXCollapsiblePane: int currentDimension>;

        $i4 = (int) -1;

        if $i0 == $i4 goto label2;

        $r5 = r0.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$Direction direction>;

        $z2 = virtualinvoke $r5.<org.jdesktop.swingx.JXCollapsiblePane$Direction: boolean isVertical()>();

        if $z2 == 0 goto label1;

        $i2 = r0.<org.jdesktop.swingx.JXCollapsiblePane: int currentDimension>;

        $r2.<java.awt.Dimension: int height> = $i2;

        goto label4;

     label1:
        $i1 = r0.<org.jdesktop.swingx.JXCollapsiblePane: int currentDimension>;

        $r2.<java.awt.Dimension: int width> = $i1;

        goto label4;

     label2:
        $r3 = r0.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer wrapper>;

        $z0 = $r3.<org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer: boolean collapsedState>;

        if $z0 == 0 goto label4;

        $r4 = r0.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$Direction direction>;

        $z1 = virtualinvoke $r4.<org.jdesktop.swingx.JXCollapsiblePane$Direction: boolean isVertical()>();

        if $z1 == 0 goto label3;

        $r2.<java.awt.Dimension: int height> = 0;

        goto label4;

     label3:
        $r2.<java.awt.Dimension: int width> = 0;

     label4:
        return $r2;
    }

    public void setPreferredSize(java.awt.Dimension)
    {
        java.awt.Dimension r2;
        org.jdesktop.swingx.JXCollapsiblePane r0;
        java.awt.Container $r1;

        r0 := @this: org.jdesktop.swingx.JXCollapsiblePane;

        r2 := @parameter0: java.awt.Dimension;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: java.awt.Container getContentPane()>();

        virtualinvoke $r1.<java.awt.Container: void setPreferredSize(java.awt.Dimension)>(r2);

        return;
    }

    private void setAnimationParams(org.jdesktop.swingx.JXCollapsiblePane$AnimationParams)
    {
        org.jdesktop.swingx.JXCollapsiblePane$AnimationListener $r5;
        org.jdesktop.swingx.JXCollapsiblePane r1;
        java.lang.IllegalArgumentException $r8;
        org.jdesktop.swingx.JXCollapsiblePane$AnimationParams r0, $r4;
        int $i0;
        javax.swing.Timer $r2, $r3, $r6, $r7;

        r1 := @this: org.jdesktop.swingx.JXCollapsiblePane;

        r0 := @parameter0: org.jdesktop.swingx.JXCollapsiblePane$AnimationParams;

        if r0 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("params can\'t be null");

        throw $r8;

     label1:
        $r2 = r1.<org.jdesktop.swingx.JXCollapsiblePane: javax.swing.Timer animateTimer>;

        if $r2 == null goto label2;

        $r7 = r1.<org.jdesktop.swingx.JXCollapsiblePane: javax.swing.Timer animateTimer>;

        virtualinvoke $r7.<javax.swing.Timer: void stop()>();

     label2:
        r1.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$AnimationParams animationParams> = r0;

        $r3 = new javax.swing.Timer;

        $r4 = r1.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$AnimationParams animationParams>;

        $i0 = $r4.<org.jdesktop.swingx.JXCollapsiblePane$AnimationParams: int waitTime>;

        $r5 = r1.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$AnimationListener animator>;

        specialinvoke $r3.<javax.swing.Timer: void <init>(int,java.awt.event.ActionListener)>($i0, $r5);

        r1.<org.jdesktop.swingx.JXCollapsiblePane: javax.swing.Timer animateTimer> = $r3;

        $r6 = r1.<org.jdesktop.swingx.JXCollapsiblePane: javax.swing.Timer animateTimer>;

        virtualinvoke $r6.<javax.swing.Timer: void setInitialDelay(int)>(0);

        return;
    }

    static int access$102(org.jdesktop.swingx.JXCollapsiblePane, int)
    {
        int i0;
        org.jdesktop.swingx.JXCollapsiblePane r0;

        r0 := @parameter0: org.jdesktop.swingx.JXCollapsiblePane;

        i0 := @parameter1: int;

        r0.<org.jdesktop.swingx.JXCollapsiblePane: int currentDimension> = i0;

        return i0;
    }

    static javax.swing.Timer access$200(org.jdesktop.swingx.JXCollapsiblePane)
    {
        org.jdesktop.swingx.JXCollapsiblePane r0;
        javax.swing.Timer $r1;

        r0 := @parameter0: org.jdesktop.swingx.JXCollapsiblePane;

        $r1 = r0.<org.jdesktop.swingx.JXCollapsiblePane: javax.swing.Timer animateTimer>;

        return $r1;
    }

    static org.jdesktop.swingx.JXCollapsiblePane$AnimationParams access$300(org.jdesktop.swingx.JXCollapsiblePane)
    {
        org.jdesktop.swingx.JXCollapsiblePane r0;
        org.jdesktop.swingx.JXCollapsiblePane$AnimationParams $r1;

        r0 := @parameter0: org.jdesktop.swingx.JXCollapsiblePane;

        $r1 = r0.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$AnimationParams animationParams>;

        return $r1;
    }

    static org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer access$400(org.jdesktop.swingx.JXCollapsiblePane)
    {
        org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer $r1;
        org.jdesktop.swingx.JXCollapsiblePane r0;

        r0 := @parameter0: org.jdesktop.swingx.JXCollapsiblePane;

        $r1 = r0.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer wrapper>;

        return $r1;
    }

    static void access$500(org.jdesktop.swingx.JXCollapsiblePane, java.lang.String, java.lang.Object, java.lang.Object)
    {
        java.lang.Object r2, r3;
        org.jdesktop.swingx.JXCollapsiblePane r0;
        java.lang.String r1;

        r0 := @parameter0: org.jdesktop.swingx.JXCollapsiblePane;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        virtualinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return;
    }

    static void access$600(org.jdesktop.swingx.JXCollapsiblePane, java.lang.String, java.lang.Object, java.lang.Object)
    {
        java.lang.Object r2, r3;
        org.jdesktop.swingx.JXCollapsiblePane r0;
        java.lang.String r1;

        r0 := @parameter0: org.jdesktop.swingx.JXCollapsiblePane;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        virtualinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return;
    }

    static org.jdesktop.swingx.JXCollapsiblePane$Direction access$700(org.jdesktop.swingx.JXCollapsiblePane)
    {
        org.jdesktop.swingx.JXCollapsiblePane r0;
        org.jdesktop.swingx.JXCollapsiblePane$Direction $r1;

        r0 := @parameter0: org.jdesktop.swingx.JXCollapsiblePane;

        $r1 = r0.<org.jdesktop.swingx.JXCollapsiblePane: org.jdesktop.swingx.JXCollapsiblePane$Direction direction>;

        return $r1;
    }

    static void access$800(org.jdesktop.swingx.JXCollapsiblePane, java.lang.String, java.lang.Object, java.lang.Object)
    {
        java.lang.Object r2, r3;
        org.jdesktop.swingx.JXCollapsiblePane r0;
        java.lang.String r1;

        r0 := @parameter0: org.jdesktop.swingx.JXCollapsiblePane;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        virtualinvoke r0.<org.jdesktop.swingx.JXCollapsiblePane: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.jdesktop.swingx.JXCollapsiblePane: java.lang.String EXPAND_ICON> = "expandIcon";

        <org.jdesktop.swingx.JXCollapsiblePane: java.lang.String COLLAPSE_ICON> = "collapseIcon";

        <org.jdesktop.swingx.JXCollapsiblePane: java.lang.String TOGGLE_ACTION> = "toggle";

        <org.jdesktop.swingx.JXCollapsiblePane: java.lang.String ANIMATION_STATE_KEY> = "animationState";

        $r0 = class "Lorg/jdesktop/swingx/JXCollapsiblePane;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.jdesktop.swingx.JXCollapsiblePane: boolean $assertionsDisabled> = $z1;

        return;
    }
}
