public abstract class org.apache.poi.hssf.record.StandardRecord extends org.apache.poi.hssf.record.Record
{

    public void <init>()
    {
        org.apache.poi.hssf.record.StandardRecord r0;

        r0 := @this: org.apache.poi.hssf.record.StandardRecord;

        specialinvoke r0.<org.apache.poi.hssf.record.Record: void <init>()>();

        return;
    }

    protected abstract int getDataSize();

    public final int getRecordSize()
    {
        int $i0, $i1;
        org.apache.poi.hssf.record.StandardRecord r0;

        r0 := @this: org.apache.poi.hssf.record.StandardRecord;

        $i0 = virtualinvoke r0.<org.apache.poi.hssf.record.StandardRecord: int getDataSize()>();

        $i1 = 4 + $i0;

        return $i1;
    }

    public final int serialize(int, byte[])
    {
        byte[] r2;
        java.lang.IllegalStateException $r17;
        org.apache.poi.hssf.record.StandardRecord r0;
        short $s3;
        int $i0, i1, i2, $i4, $i5, $i6, $i7, $i8;
        java.lang.String $r7, $r14;
        org.apache.poi.util.LittleEndianByteArrayOutputStream $r15;
        java.lang.StringBuilder $r5, $r8, $r9, $r10, $r11, $r12, $r13, $r16;
        java.lang.Class $r6;

        r0 := @this: org.apache.poi.hssf.record.StandardRecord;

        i2 := @parameter0: int;

        r2 := @parameter1: byte[];

        $i0 = virtualinvoke r0.<org.apache.poi.hssf.record.StandardRecord: int getDataSize()>();

        i1 = 4 + $i0;

        $r15 = new org.apache.poi.util.LittleEndianByteArrayOutputStream;

        specialinvoke $r15.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void <init>(byte[],int,int)>(r2, i2, i1);

        $s3 = virtualinvoke r0.<org.apache.poi.hssf.record.StandardRecord: short getSid()>();

        $i8 = (int) $s3;

        virtualinvoke $r15.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void writeShort(int)>($i8);

        virtualinvoke $r15.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void writeShort(int)>($i0);

        virtualinvoke r0.<org.apache.poi.hssf.record.StandardRecord: void serialize(org.apache.poi.util.LittleEndianOutput)>($r15);

        $i4 = virtualinvoke $r15.<org.apache.poi.util.LittleEndianByteArrayOutputStream: int getWriteIndex()>();

        $i5 = $i4 - i2;

        if $i5 == i1 goto label1;

        $r17 = new java.lang.IllegalStateException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in serialization of (");

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incorrect number of bytes written - expected ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but got ");

        $i6 = virtualinvoke $r15.<org.apache.poi.util.LittleEndianByteArrayOutputStream: int getWriteIndex()>();

        $i7 = $i6 - i2;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r14);

        throw $r17;

     label1:
        return i1;
    }

    protected abstract void serialize(org.apache.poi.util.LittleEndianOutput);
}
