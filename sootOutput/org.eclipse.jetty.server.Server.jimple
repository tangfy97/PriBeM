public class org.eclipse.jetty.server.Server extends org.eclipse.jetty.server.handler.HandlerWrapper implements org.eclipse.jetty.util.Attributes
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    private static final java.lang.String __version;
    private final org.eclipse.jetty.util.component.Container _container;
    private final org.eclipse.jetty.util.AttributesMap _attributes;
    private org.eclipse.jetty.util.thread.ThreadPool _threadPool;
    private org.eclipse.jetty.server.Connector[] _connectors;
    private org.eclipse.jetty.server.SessionIdManager _sessionIdManager;
    private boolean _sendServerVersion;
    private boolean _sendDateHeader;
    private int _graceful;
    private boolean _stopAtShutdown;
    private boolean _dumpAfterStart;
    private boolean _dumpBeforeStop;
    private boolean _uncheckedPrintWriter;

    public void <init>()
    {
        org.eclipse.jetty.util.component.Container $r1;
        org.eclipse.jetty.util.AttributesMap $r2;
        org.eclipse.jetty.server.Server r0;

        r0 := @this: org.eclipse.jetty.server.Server;

        specialinvoke r0.<org.eclipse.jetty.server.handler.HandlerWrapper: void <init>()>();

        $r1 = new org.eclipse.jetty.util.component.Container;

        specialinvoke $r1.<org.eclipse.jetty.util.component.Container: void <init>()>();

        r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.component.Container _container> = $r1;

        $r2 = new org.eclipse.jetty.util.AttributesMap;

        specialinvoke $r2.<org.eclipse.jetty.util.AttributesMap: void <init>()>();

        r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.AttributesMap _attributes> = $r2;

        r0.<org.eclipse.jetty.server.Server: boolean _sendServerVersion> = 1;

        r0.<org.eclipse.jetty.server.Server: boolean _sendDateHeader> = 0;

        r0.<org.eclipse.jetty.server.Server: int _graceful> = 0;

        r0.<org.eclipse.jetty.server.Server: boolean _dumpAfterStart> = 0;

        r0.<org.eclipse.jetty.server.Server: boolean _dumpBeforeStop> = 0;

        r0.<org.eclipse.jetty.server.Server: boolean _uncheckedPrintWriter> = 0;

        virtualinvoke r0.<org.eclipse.jetty.server.Server: void setServer(org.eclipse.jetty.server.Server)>(r0);

        return;
    }

    public void <init>(int)
    {
        org.eclipse.jetty.util.component.Container $r1;
        org.eclipse.jetty.util.AttributesMap $r2;
        int i0;
        org.eclipse.jetty.server.Connector[] $r4;
        org.eclipse.jetty.server.Server r0;
        org.eclipse.jetty.server.nio.SelectChannelConnector $r3;

        r0 := @this: org.eclipse.jetty.server.Server;

        i0 := @parameter0: int;

        specialinvoke r0.<org.eclipse.jetty.server.handler.HandlerWrapper: void <init>()>();

        $r1 = new org.eclipse.jetty.util.component.Container;

        specialinvoke $r1.<org.eclipse.jetty.util.component.Container: void <init>()>();

        r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.component.Container _container> = $r1;

        $r2 = new org.eclipse.jetty.util.AttributesMap;

        specialinvoke $r2.<org.eclipse.jetty.util.AttributesMap: void <init>()>();

        r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.AttributesMap _attributes> = $r2;

        r0.<org.eclipse.jetty.server.Server: boolean _sendServerVersion> = 1;

        r0.<org.eclipse.jetty.server.Server: boolean _sendDateHeader> = 0;

        r0.<org.eclipse.jetty.server.Server: int _graceful> = 0;

        r0.<org.eclipse.jetty.server.Server: boolean _dumpAfterStart> = 0;

        r0.<org.eclipse.jetty.server.Server: boolean _dumpBeforeStop> = 0;

        r0.<org.eclipse.jetty.server.Server: boolean _uncheckedPrintWriter> = 0;

        virtualinvoke r0.<org.eclipse.jetty.server.Server: void setServer(org.eclipse.jetty.server.Server)>(r0);

        $r3 = new org.eclipse.jetty.server.nio.SelectChannelConnector;

        specialinvoke $r3.<org.eclipse.jetty.server.nio.SelectChannelConnector: void <init>()>();

        interfaceinvoke $r3.<org.eclipse.jetty.server.Connector: void setPort(int)>(i0);

        $r4 = newarray (org.eclipse.jetty.server.Connector)[1];

        $r4[0] = $r3;

        virtualinvoke r0.<org.eclipse.jetty.server.Server: void setConnectors(org.eclipse.jetty.server.Connector[])>($r4);

        return;
    }

    public void <init>(java.net.InetSocketAddress)
    {
        org.eclipse.jetty.util.AttributesMap $r2;
        org.eclipse.jetty.server.Connector[] $r6;
        java.net.InetSocketAddress r4;
        org.eclipse.jetty.util.component.Container $r1;
        int $i0;
        java.lang.String $r5;
        org.eclipse.jetty.server.Server r0;
        org.eclipse.jetty.server.nio.SelectChannelConnector $r3;

        r0 := @this: org.eclipse.jetty.server.Server;

        r4 := @parameter0: java.net.InetSocketAddress;

        specialinvoke r0.<org.eclipse.jetty.server.handler.HandlerWrapper: void <init>()>();

        $r1 = new org.eclipse.jetty.util.component.Container;

        specialinvoke $r1.<org.eclipse.jetty.util.component.Container: void <init>()>();

        r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.component.Container _container> = $r1;

        $r2 = new org.eclipse.jetty.util.AttributesMap;

        specialinvoke $r2.<org.eclipse.jetty.util.AttributesMap: void <init>()>();

        r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.AttributesMap _attributes> = $r2;

        r0.<org.eclipse.jetty.server.Server: boolean _sendServerVersion> = 1;

        r0.<org.eclipse.jetty.server.Server: boolean _sendDateHeader> = 0;

        r0.<org.eclipse.jetty.server.Server: int _graceful> = 0;

        r0.<org.eclipse.jetty.server.Server: boolean _dumpAfterStart> = 0;

        r0.<org.eclipse.jetty.server.Server: boolean _dumpBeforeStop> = 0;

        r0.<org.eclipse.jetty.server.Server: boolean _uncheckedPrintWriter> = 0;

        virtualinvoke r0.<org.eclipse.jetty.server.Server: void setServer(org.eclipse.jetty.server.Server)>(r0);

        $r3 = new org.eclipse.jetty.server.nio.SelectChannelConnector;

        specialinvoke $r3.<org.eclipse.jetty.server.nio.SelectChannelConnector: void <init>()>();

        $r5 = virtualinvoke r4.<java.net.InetSocketAddress: java.lang.String getHostName()>();

        interfaceinvoke $r3.<org.eclipse.jetty.server.Connector: void setHost(java.lang.String)>($r5);

        $i0 = virtualinvoke r4.<java.net.InetSocketAddress: int getPort()>();

        interfaceinvoke $r3.<org.eclipse.jetty.server.Connector: void setPort(int)>($i0);

        $r6 = newarray (org.eclipse.jetty.server.Connector)[1];

        $r6[0] = $r3;

        virtualinvoke r0.<org.eclipse.jetty.server.Server: void setConnectors(org.eclipse.jetty.server.Connector[])>($r6);

        return;
    }

    public static java.lang.String getVersion()
    {
        java.lang.String $r0;

        $r0 = <org.eclipse.jetty.server.Server: java.lang.String __version>;

        return $r0;
    }

    public org.eclipse.jetty.util.component.Container getContainer()
    {
        org.eclipse.jetty.util.component.Container $r1;
        org.eclipse.jetty.server.Server r0;

        r0 := @this: org.eclipse.jetty.server.Server;

        $r1 = r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.component.Container _container>;

        return $r1;
    }

    public boolean getStopAtShutdown()
    {
        org.eclipse.jetty.server.Server r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.Server;

        $z0 = r0.<org.eclipse.jetty.server.Server: boolean _stopAtShutdown>;

        return $z0;
    }

    public void setStopAtShutdown(boolean)
    {
        org.eclipse.jetty.util.component.LifeCycle[] $r1;
        org.eclipse.jetty.server.Server r0;
        boolean z0, $z1, $z2;

        r0 := @this: org.eclipse.jetty.server.Server;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $z1 = r0.<org.eclipse.jetty.server.Server: boolean _stopAtShutdown>;

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r0.<org.eclipse.jetty.server.Server: boolean isStarted()>();

        if $z2 == 0 goto label2;

        $r1 = newarray (org.eclipse.jetty.util.component.LifeCycle)[1];

        $r1[0] = r0;

        staticinvoke <org.eclipse.jetty.util.thread.ShutdownThread: void register(org.eclipse.jetty.util.component.LifeCycle[])>($r1);

        goto label2;

     label1:
        staticinvoke <org.eclipse.jetty.util.thread.ShutdownThread: void deregister(org.eclipse.jetty.util.component.LifeCycle)>(r0);

     label2:
        r0.<org.eclipse.jetty.server.Server: boolean _stopAtShutdown> = z0;

        return;
    }

    public org.eclipse.jetty.server.Connector[] getConnectors()
    {
        org.eclipse.jetty.server.Connector[] $r1;
        org.eclipse.jetty.server.Server r0;

        r0 := @this: org.eclipse.jetty.server.Server;

        $r1 = r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.server.Connector[] _connectors>;

        return $r1;
    }

    public void addConnector(org.eclipse.jetty.server.Connector)
    {
        java.lang.Object[] $r3;
        org.eclipse.jetty.server.Connector[] $r1, $r4, $r5;
        org.eclipse.jetty.server.Connector r2;
        org.eclipse.jetty.server.Server r0;

        r0 := @this: org.eclipse.jetty.server.Server;

        r2 := @parameter0: org.eclipse.jetty.server.Connector;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.server.Connector[] getConnectors()>();

        $r3 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object[] addToArray(java.lang.Object[],java.lang.Object,java.lang.Class)>($r1, r2, class "Lorg/eclipse/jetty/server/Connector;");

        $r4 = (org.eclipse.jetty.server.Connector[]) $r3;

        $r5 = (org.eclipse.jetty.server.Connector[]) $r4;

        virtualinvoke r0.<org.eclipse.jetty.server.Server: void setConnectors(org.eclipse.jetty.server.Connector[])>($r5);

        return;
    }

    public void removeConnector(org.eclipse.jetty.server.Connector)
    {
        java.lang.Object[] $r3;
        org.eclipse.jetty.server.Connector[] $r1, $r4, $r5;
        org.eclipse.jetty.server.Connector r2;
        org.eclipse.jetty.server.Server r0;

        r0 := @this: org.eclipse.jetty.server.Server;

        r2 := @parameter0: org.eclipse.jetty.server.Connector;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.server.Connector[] getConnectors()>();

        $r3 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object[] removeFromArray(java.lang.Object[],java.lang.Object)>($r1, r2);

        $r4 = (org.eclipse.jetty.server.Connector[]) $r3;

        $r5 = (org.eclipse.jetty.server.Connector[]) $r4;

        virtualinvoke r0.<org.eclipse.jetty.server.Server: void setConnectors(org.eclipse.jetty.server.Connector[])>($r5);

        return;
    }

    public void setConnectors(org.eclipse.jetty.server.Connector[])
    {
        org.eclipse.jetty.util.component.Container $r3;
        int $i0, i1;
        org.eclipse.jetty.server.Connector[] r0, $r2;
        org.eclipse.jetty.server.Connector $r4;
        org.eclipse.jetty.server.Server r1;

        r1 := @this: org.eclipse.jetty.server.Server;

        r0 := @parameter0: org.eclipse.jetty.server.Connector[];

        if r0 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label2;

        $r4 = r0[i1];

        interfaceinvoke $r4.<org.eclipse.jetty.server.Connector: void setServer(org.eclipse.jetty.server.Server)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r3 = r1.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.component.Container _container>;

        $r2 = r1.<org.eclipse.jetty.server.Server: org.eclipse.jetty.server.Connector[] _connectors>;

        virtualinvoke $r3.<org.eclipse.jetty.util.component.Container: void update(java.lang.Object,java.lang.Object[],java.lang.Object[],java.lang.String)>(r1, $r2, r0, "connector");

        r1.<org.eclipse.jetty.server.Server: org.eclipse.jetty.server.Connector[] _connectors> = r0;

        return;
    }

    public org.eclipse.jetty.util.thread.ThreadPool getThreadPool()
    {
        org.eclipse.jetty.server.Server r0;
        org.eclipse.jetty.util.thread.ThreadPool $r1;

        r0 := @this: org.eclipse.jetty.server.Server;

        $r1 = r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.thread.ThreadPool _threadPool>;

        return $r1;
    }

    public void setThreadPool(org.eclipse.jetty.util.thread.ThreadPool)
    {
        org.eclipse.jetty.util.thread.ThreadPool $r1, r2, $r3, $r5, $r6, $r7;
        org.eclipse.jetty.util.component.Container $r4;
        org.eclipse.jetty.server.Server r0;

        r0 := @this: org.eclipse.jetty.server.Server;

        r2 := @parameter0: org.eclipse.jetty.util.thread.ThreadPool;

        $r1 = r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.thread.ThreadPool _threadPool>;

        if $r1 == null goto label1;

        $r7 = r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.thread.ThreadPool _threadPool>;

        virtualinvoke r0.<org.eclipse.jetty.server.Server: boolean removeBean(java.lang.Object)>($r7);

     label1:
        $r4 = r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.component.Container _container>;

        $r3 = r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.thread.ThreadPool _threadPool>;

        virtualinvoke $r4.<org.eclipse.jetty.util.component.Container: void update(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.String,boolean)>(r0, $r3, r2, "threadpool", 0);

        r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.thread.ThreadPool _threadPool> = r2;

        $r5 = r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.thread.ThreadPool _threadPool>;

        if $r5 == null goto label2;

        $r6 = r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.thread.ThreadPool _threadPool>;

        virtualinvoke r0.<org.eclipse.jetty.server.Server: boolean addBean(java.lang.Object)>($r6);

     label2:
        return;
    }

    public boolean isDumpAfterStart()
    {
        org.eclipse.jetty.server.Server r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.Server;

        $z0 = r0.<org.eclipse.jetty.server.Server: boolean _dumpAfterStart>;

        return $z0;
    }

    public void setDumpAfterStart(boolean)
    {
        org.eclipse.jetty.server.Server r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.server.Server;

        z0 := @parameter0: boolean;

        r0.<org.eclipse.jetty.server.Server: boolean _dumpAfterStart> = z0;

        return;
    }

    public boolean isDumpBeforeStop()
    {
        org.eclipse.jetty.server.Server r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.Server;

        $z0 = r0.<org.eclipse.jetty.server.Server: boolean _dumpBeforeStop>;

        return $z0;
    }

    public void setDumpBeforeStop(boolean)
    {
        org.eclipse.jetty.server.Server r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.server.Server;

        z0 := @parameter0: boolean;

        r0.<org.eclipse.jetty.server.Server: boolean _dumpBeforeStop> = z0;

        return;
    }

    protected void doStart() throws java.lang.Exception
    {
        java.lang.Throwable $r18, $r19;
        java.lang.Object[] $r8;
        org.eclipse.jetty.util.thread.QueuedThreadPool $r16;
        int $i0, $i1, i2;
        java.lang.String $r5, $r7, $r9;
        org.eclipse.jetty.util.MultiException $r10;
        org.eclipse.jetty.server.Server r0;
        boolean $z0, $z1;
        org.eclipse.jetty.server.ShutdownMonitor $r1;
        org.eclipse.jetty.server.Connector[] $r12, $r13, $r14;
        org.eclipse.jetty.util.thread.ThreadPool $r11;
        org.eclipse.jetty.util.component.LifeCycle[] $r17;
        java.lang.StringBuilder $r2, $r4, $r6;
        org.eclipse.jetty.util.log.Logger $r3;
        org.eclipse.jetty.server.Connector $r15;

        r0 := @this: org.eclipse.jetty.server.Server;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.server.Server: boolean getStopAtShutdown()>();

        if $z0 == 0 goto label01;

        $r17 = newarray (org.eclipse.jetty.util.component.LifeCycle)[1];

        $r17[0] = r0;

        staticinvoke <org.eclipse.jetty.util.thread.ShutdownThread: void register(org.eclipse.jetty.util.component.LifeCycle[])>($r17);

     label01:
        $r1 = staticinvoke <org.eclipse.jetty.server.ShutdownMonitor: org.eclipse.jetty.server.ShutdownMonitor getInstance()>();

        virtualinvoke $r1.<org.eclipse.jetty.server.ShutdownMonitor: void start()>();

        $r3 = <org.eclipse.jetty.server.Server: org.eclipse.jetty.util.log.Logger LOG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("jetty-");

        $r5 = <org.eclipse.jetty.server.Server: java.lang.String __version>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = newarray (java.lang.Object)[0];

        interfaceinvoke $r3.<org.eclipse.jetty.util.log.Logger: void info(java.lang.String,java.lang.Object[])>($r7, $r8);

        $r9 = <org.eclipse.jetty.server.Server: java.lang.String __version>;

        staticinvoke <org.eclipse.jetty.http.HttpGenerator: void setServerVersion(java.lang.String)>($r9);

        $r10 = new org.eclipse.jetty.util.MultiException;

        specialinvoke $r10.<org.eclipse.jetty.util.MultiException: void <init>()>();

        $r11 = r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.thread.ThreadPool _threadPool>;

        if $r11 != null goto label02;

        $r16 = new org.eclipse.jetty.util.thread.QueuedThreadPool;

        specialinvoke $r16.<org.eclipse.jetty.util.thread.QueuedThreadPool: void <init>()>();

        virtualinvoke r0.<org.eclipse.jetty.server.Server: void setThreadPool(org.eclipse.jetty.util.thread.ThreadPool)>($r16);

     label02:
        specialinvoke r0.<org.eclipse.jetty.server.handler.HandlerWrapper: void doStart()>();

     label03:
        goto label05;

     label04:
        $r19 := @caughtexception;

        virtualinvoke $r10.<org.eclipse.jetty.util.MultiException: void add(java.lang.Throwable)>($r19);

     label05:
        $r12 = r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.server.Connector[] _connectors>;

        if $r12 == null goto label11;

        $i0 = virtualinvoke $r10.<org.eclipse.jetty.util.MultiException: int size()>();

        if $i0 != 0 goto label11;

        i2 = 0;

     label06:
        $r13 = r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.server.Connector[] _connectors>;

        $i1 = lengthof $r13;

        if i2 >= $i1 goto label11;

     label07:
        $r14 = r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.server.Connector[] _connectors>;

        $r15 = $r14[i2];

        interfaceinvoke $r15.<org.eclipse.jetty.server.Connector: void start()>();

     label08:
        goto label10;

     label09:
        $r18 := @caughtexception;

        virtualinvoke $r10.<org.eclipse.jetty.util.MultiException: void add(java.lang.Throwable)>($r18);

     label10:
        i2 = i2 + 1;

        goto label06;

     label11:
        $z1 = virtualinvoke r0.<org.eclipse.jetty.server.Server: boolean isDumpAfterStart()>();

        if $z1 == 0 goto label12;

        virtualinvoke r0.<org.eclipse.jetty.server.Server: void dumpStdErr()>();

     label12:
        virtualinvoke $r10.<org.eclipse.jetty.util.MultiException: void ifExceptionThrow()>();

        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    protected void doStop() throws java.lang.Exception
    {
        org.eclipse.jetty.util.MultiException $r22;
        org.eclipse.jetty.server.Server r0;
        boolean $z0, $z1;
        java.lang.Throwable $r19, $r20, $r21;
        org.eclipse.jetty.server.Handler $r8;
        java.lang.Object[] $r10, $r13;
        long $l2;
        org.eclipse.jetty.server.Server$Graceful r9;
        int $i0, $i1, i3, $i4, i5, $i6, i7, $i8, $i10, $i12;
        org.eclipse.jetty.server.Connector[] $r2, $r3, $r4, $r6, $r12, $r14, $r17;
        org.eclipse.jetty.server.Handler[] $r7;
        org.eclipse.jetty.util.log.Logger $r11, $r16;
        org.eclipse.jetty.server.Connector $r5, $r15, $r18;

        r0 := @this: org.eclipse.jetty.server.Server;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.server.Server: boolean isDumpBeforeStop()>();

        if $z0 == 0 goto label01;

        virtualinvoke r0.<org.eclipse.jetty.server.Server: void dumpStdErr()>();

     label01:
        $r22 = new org.eclipse.jetty.util.MultiException;

        specialinvoke $r22.<org.eclipse.jetty.util.MultiException: void <init>()>();

        $i0 = r0.<org.eclipse.jetty.server.Server: int _graceful>;

        if $i0 <= 0 goto label09;

        $r6 = r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.server.Connector[] _connectors>;

        if $r6 == null goto label06;

        $r12 = r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.server.Connector[] _connectors>;

        i3 = lengthof $r12;

     label02:
        $i4 = i3;

        $i10 = (int) -1;

        i3 = i3 + $i10;

        if $i4 <= 0 goto label06;

        $r16 = <org.eclipse.jetty.server.Server: org.eclipse.jetty.util.log.Logger LOG>;

        $r13 = newarray (java.lang.Object)[1];

        $r14 = r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.server.Connector[] _connectors>;

        $r15 = $r14[i3];

        $r13[0] = $r15;

        interfaceinvoke $r16.<org.eclipse.jetty.util.log.Logger: void info(java.lang.String,java.lang.Object[])>("Graceful shutdown {}", $r13);

     label03:
        $r17 = r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.server.Connector[] _connectors>;

        $r18 = $r17[i3];

        interfaceinvoke $r18.<org.eclipse.jetty.server.Connector: void close()>();

     label04:
        goto label02;

     label05:
        $r21 := @caughtexception;

        virtualinvoke $r22.<org.eclipse.jetty.util.MultiException: void add(java.lang.Throwable)>($r21);

        goto label02;

     label06:
        $r7 = virtualinvoke r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.server.Handler[] getChildHandlersByClass(java.lang.Class)>(class "Lorg/eclipse/jetty/server/Server$Graceful;");

        i5 = 0;

     label07:
        $i6 = lengthof $r7;

        if i5 >= $i6 goto label08;

        $r8 = $r7[i5];

        r9 = (org.eclipse.jetty.server.Server$Graceful) $r8;

        $r11 = <org.eclipse.jetty.server.Server: org.eclipse.jetty.util.log.Logger LOG>;

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r9;

        interfaceinvoke $r11.<org.eclipse.jetty.util.log.Logger: void info(java.lang.String,java.lang.Object[])>("Graceful shutdown {}", $r10);

        interfaceinvoke r9.<org.eclipse.jetty.server.Server$Graceful: void setShutdown(boolean)>(1);

        i5 = i5 + 1;

        goto label07;

     label08:
        $i1 = r0.<org.eclipse.jetty.server.Server: int _graceful>;

        $l2 = (long) $i1;

        staticinvoke <java.lang.Thread: void sleep(long)>($l2);

     label09:
        $r2 = r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.server.Connector[] _connectors>;

        if $r2 == null goto label14;

        $r3 = r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.server.Connector[] _connectors>;

        i7 = lengthof $r3;

     label10:
        $i8 = i7;

        $i12 = (int) -1;

        i7 = i7 + $i12;

        if $i8 <= 0 goto label14;

     label11:
        $r4 = r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.server.Connector[] _connectors>;

        $r5 = $r4[i7];

        interfaceinvoke $r5.<org.eclipse.jetty.server.Connector: void stop()>();

     label12:
        goto label10;

     label13:
        $r20 := @caughtexception;

        virtualinvoke $r22.<org.eclipse.jetty.util.MultiException: void add(java.lang.Throwable)>($r20);

        goto label10;

     label14:
        specialinvoke r0.<org.eclipse.jetty.server.handler.HandlerWrapper: void doStop()>();

     label15:
        goto label17;

     label16:
        $r19 := @caughtexception;

        virtualinvoke $r22.<org.eclipse.jetty.util.MultiException: void add(java.lang.Throwable)>($r19);

     label17:
        virtualinvoke $r22.<org.eclipse.jetty.util.MultiException: void ifExceptionThrow()>();

        $z1 = virtualinvoke r0.<org.eclipse.jetty.server.Server: boolean getStopAtShutdown()>();

        if $z1 == 0 goto label18;

        staticinvoke <org.eclipse.jetty.util.thread.ShutdownThread: void deregister(org.eclipse.jetty.util.component.LifeCycle)>(r0);

     label18:
        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label16;
    }

    public void handle(org.eclipse.jetty.server.AbstractHttpConnection) throws java.io.IOException, javax.servlet.ServletException
    {
        org.eclipse.jetty.server.Request $r1, $r3;
        org.eclipse.jetty.server.Response $r4, $r20;
        java.lang.Object[] $r14, $r25;
        org.eclipse.jetty.server.AbstractHttpConnection r0;
        int $i0;
        java.lang.String $r2, $r13, $r24;
        org.eclipse.jetty.server.Server r6;
        boolean $z0, $z1;
        java.lang.StringBuilder $r7, $r9, $r10, $r11, $r12, $r15, $r17, $r18, $r19, $r21, $r22, $r23;
        org.eclipse.jetty.util.log.Logger $r5, $r8, $r16;

        r6 := @this: org.eclipse.jetty.server.Server;

        r0 := @parameter0: org.eclipse.jetty.server.AbstractHttpConnection;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.server.Request getRequest()>();

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.server.Request: java.lang.String getPathInfo()>();

        $r3 = virtualinvoke r0.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.server.Request getRequest()>();

        $r4 = virtualinvoke r0.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.server.Response getResponse()>();

        $r5 = <org.eclipse.jetty.server.Server: org.eclipse.jetty.util.log.Logger LOG>;

        $z0 = interfaceinvoke $r5.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r8 = <org.eclipse.jetty.server.Server: org.eclipse.jetty.util.log.Logger LOG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("REQUEST ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = newarray (java.lang.Object)[0];

        interfaceinvoke $r8.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r13, $r14);

        virtualinvoke r6.<org.eclipse.jetty.server.Server: void handle(java.lang.String,org.eclipse.jetty.server.Request,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>($r2, $r3, $r3, $r4);

        $r16 = <org.eclipse.jetty.server.Server: org.eclipse.jetty.util.log.Logger LOG>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RESPONSE ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r20 = virtualinvoke r0.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.server.Response getResponse()>();

        $i0 = virtualinvoke $r20.<org.eclipse.jetty.server.Response: int getStatus()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" handled=");

        $z1 = virtualinvoke $r3.<org.eclipse.jetty.server.Request: boolean isHandled()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = newarray (java.lang.Object)[0];

        interfaceinvoke $r16.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r24, $r25);

        goto label2;

     label1:
        virtualinvoke r6.<org.eclipse.jetty.server.Server: void handle(java.lang.String,org.eclipse.jetty.server.Request,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>($r2, $r3, $r3, $r4);

     label2:
        return;
    }

    public void handleAsync(org.eclipse.jetty.server.AbstractHttpConnection) throws java.io.IOException, javax.servlet.ServletException
    {
        org.eclipse.jetty.server.Request $r1, $r4;
        org.eclipse.jetty.server.Server r6;
        boolean $z0;
        org.eclipse.jetty.server.AsyncContinuation$AsyncEventState $r3;
        javax.servlet.ServletResponse $r34;
        java.lang.StringBuilder $r7, $r9, $r10, $r11, $r12, $r15, $r17, $r18, $r19, $r21;
        org.eclipse.jetty.server.Response $r20;
        java.lang.Object[] $r14, $r23;
        org.eclipse.jetty.server.AbstractHttpConnection r0;
        javax.servlet.http.HttpServletRequest $r33;
        org.eclipse.jetty.http.HttpURI $r26;
        int $i0;
        java.lang.String $r5, $r13, $r22, $r25, $r27, $r28, $r29, $r30, $r31;
        javax.servlet.ServletRequest $r32;
        javax.servlet.http.HttpServletResponse $r35;
        javax.servlet.ServletContext $r24;
        org.eclipse.jetty.util.log.Logger $r8, $r16, $r36;
        org.eclipse.jetty.server.AsyncContinuation $r2;

        r6 := @this: org.eclipse.jetty.server.Server;

        r0 := @parameter0: org.eclipse.jetty.server.AbstractHttpConnection;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.server.Request getRequest()>();

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AsyncContinuation getAsyncContinuation()>();

        $r3 = virtualinvoke $r2.<org.eclipse.jetty.server.AsyncContinuation: org.eclipse.jetty.server.AsyncContinuation$AsyncEventState getAsyncEventState()>();

        $r4 = virtualinvoke r0.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.server.Request getRequest()>();

        $r5 = virtualinvoke $r3.<org.eclipse.jetty.server.AsyncContinuation$AsyncEventState: java.lang.String getPath()>();

        if $r5 == null goto label1;

        $r24 = virtualinvoke $r3.<org.eclipse.jetty.server.AsyncContinuation$AsyncEventState: javax.servlet.ServletContext getServletContext()>();

        $r25 = interfaceinvoke $r24.<javax.servlet.ServletContext: java.lang.String getContextPath()>();

        $r26 = new org.eclipse.jetty.http.HttpURI;

        $r27 = staticinvoke <org.eclipse.jetty.util.URIUtil: java.lang.String addPaths(java.lang.String,java.lang.String)>($r25, $r5);

        specialinvoke $r26.<org.eclipse.jetty.http.HttpURI: void <init>(java.lang.String)>($r27);

        virtualinvoke $r4.<org.eclipse.jetty.server.Request: void setUri(org.eclipse.jetty.http.HttpURI)>($r26);

        virtualinvoke $r4.<org.eclipse.jetty.server.Request: void setRequestURI(java.lang.String)>(null);

        $r28 = virtualinvoke $r4.<org.eclipse.jetty.server.Request: java.lang.String getRequestURI()>();

        virtualinvoke $r4.<org.eclipse.jetty.server.Request: void setPathInfo(java.lang.String)>($r28);

        $r29 = virtualinvoke $r26.<org.eclipse.jetty.http.HttpURI: java.lang.String getQuery()>();

        if $r29 == null goto label1;

        $r30 = virtualinvoke $r26.<org.eclipse.jetty.http.HttpURI: java.lang.String getQuery()>();

        virtualinvoke $r4.<org.eclipse.jetty.server.Request: void mergeQueryString(java.lang.String)>($r30);

     label1:
        $r31 = virtualinvoke $r4.<org.eclipse.jetty.server.Request: java.lang.String getPathInfo()>();

        $r32 = virtualinvoke $r2.<org.eclipse.jetty.server.AsyncContinuation: javax.servlet.ServletRequest getRequest()>();

        $r33 = (javax.servlet.http.HttpServletRequest) $r32;

        $r34 = virtualinvoke $r2.<org.eclipse.jetty.server.AsyncContinuation: javax.servlet.ServletResponse getResponse()>();

        $r35 = (javax.servlet.http.HttpServletResponse) $r34;

        $r36 = <org.eclipse.jetty.server.Server: org.eclipse.jetty.util.log.Logger LOG>;

        $z0 = interfaceinvoke $r36.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label2;

        $r8 = <org.eclipse.jetty.server.Server: org.eclipse.jetty.util.log.Logger LOG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("REQUEST ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = newarray (java.lang.Object)[0];

        interfaceinvoke $r8.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r13, $r14);

        virtualinvoke r6.<org.eclipse.jetty.server.Server: void handle(java.lang.String,org.eclipse.jetty.server.Request,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>($r31, $r4, $r33, $r35);

        $r16 = <org.eclipse.jetty.server.Server: org.eclipse.jetty.util.log.Logger LOG>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RESPONSE ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r20 = virtualinvoke r0.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.server.Response getResponse()>();

        $i0 = virtualinvoke $r20.<org.eclipse.jetty.server.Response: int getStatus()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        $r23 = newarray (java.lang.Object)[0];

        interfaceinvoke $r16.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r22, $r23);

        goto label3;

     label2:
        virtualinvoke r6.<org.eclipse.jetty.server.Server: void handle(java.lang.String,org.eclipse.jetty.server.Request,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>($r31, $r4, $r33, $r35);

     label3:
        return;
    }

    public void join() throws java.lang.InterruptedException
    {
        org.eclipse.jetty.server.Server r0;
        org.eclipse.jetty.util.thread.ThreadPool $r1;

        r0 := @this: org.eclipse.jetty.server.Server;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.thread.ThreadPool getThreadPool()>();

        interfaceinvoke $r1.<org.eclipse.jetty.util.thread.ThreadPool: void join()>();

        return;
    }

    public org.eclipse.jetty.server.SessionIdManager getSessionIdManager()
    {
        org.eclipse.jetty.server.SessionIdManager $r1;
        org.eclipse.jetty.server.Server r0;

        r0 := @this: org.eclipse.jetty.server.Server;

        $r1 = r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.server.SessionIdManager _sessionIdManager>;

        return $r1;
    }

    public void setSessionIdManager(org.eclipse.jetty.server.SessionIdManager)
    {
        org.eclipse.jetty.server.SessionIdManager $r1, r2, $r3, $r5, $r6, $r7;
        org.eclipse.jetty.util.component.Container $r4;
        org.eclipse.jetty.server.Server r0;

        r0 := @this: org.eclipse.jetty.server.Server;

        r2 := @parameter0: org.eclipse.jetty.server.SessionIdManager;

        $r1 = r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.server.SessionIdManager _sessionIdManager>;

        if $r1 == null goto label1;

        $r7 = r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.server.SessionIdManager _sessionIdManager>;

        virtualinvoke r0.<org.eclipse.jetty.server.Server: boolean removeBean(java.lang.Object)>($r7);

     label1:
        $r4 = r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.component.Container _container>;

        $r3 = r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.server.SessionIdManager _sessionIdManager>;

        virtualinvoke $r4.<org.eclipse.jetty.util.component.Container: void update(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.String,boolean)>(r0, $r3, r2, "sessionIdManager", 0);

        r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.server.SessionIdManager _sessionIdManager> = r2;

        $r5 = r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.server.SessionIdManager _sessionIdManager>;

        if $r5 == null goto label2;

        $r6 = r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.server.SessionIdManager _sessionIdManager>;

        virtualinvoke r0.<org.eclipse.jetty.server.Server: boolean addBean(java.lang.Object)>($r6);

     label2:
        return;
    }

    public void setSendServerVersion(boolean)
    {
        org.eclipse.jetty.server.Server r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.server.Server;

        z0 := @parameter0: boolean;

        r0.<org.eclipse.jetty.server.Server: boolean _sendServerVersion> = z0;

        return;
    }

    public boolean getSendServerVersion()
    {
        org.eclipse.jetty.server.Server r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.Server;

        $z0 = r0.<org.eclipse.jetty.server.Server: boolean _sendServerVersion>;

        return $z0;
    }

    public void setSendDateHeader(boolean)
    {
        org.eclipse.jetty.server.Server r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.server.Server;

        z0 := @parameter0: boolean;

        r0.<org.eclipse.jetty.server.Server: boolean _sendDateHeader> = z0;

        return;
    }

    public boolean getSendDateHeader()
    {
        org.eclipse.jetty.server.Server r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.Server;

        $z0 = r0.<org.eclipse.jetty.server.Server: boolean _sendDateHeader>;

        return $z0;
    }

    public int getMaxCookieVersion()
    {
        org.eclipse.jetty.server.Server r0;

        r0 := @this: org.eclipse.jetty.server.Server;

        return 1;
    }

    public void setMaxCookieVersion(int)
    {
        int i0;
        org.eclipse.jetty.server.Server r0;

        r0 := @this: org.eclipse.jetty.server.Server;

        i0 := @parameter0: int;

        return;
    }

    public void addLifeCycle(org.eclipse.jetty.util.component.LifeCycle)
    {
        org.eclipse.jetty.util.component.LifeCycle r1;
        org.eclipse.jetty.server.Server r0;

        r0 := @this: org.eclipse.jetty.server.Server;

        r1 := @parameter0: org.eclipse.jetty.util.component.LifeCycle;

        virtualinvoke r0.<org.eclipse.jetty.server.Server: boolean addBean(java.lang.Object)>(r1);

        return;
    }

    public boolean addBean(java.lang.Object)
    {
        org.eclipse.jetty.util.component.Container $r2;
        java.lang.Object r1;
        org.eclipse.jetty.server.Server r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.Server;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<org.eclipse.jetty.server.handler.HandlerWrapper: boolean addBean(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.component.Container _container>;

        virtualinvoke $r2.<org.eclipse.jetty.util.component.Container: void addBean(java.lang.Object)>(r1);

        return 1;

     label1:
        return 0;
    }

    public void removeLifeCycle(org.eclipse.jetty.util.component.LifeCycle)
    {
        org.eclipse.jetty.util.component.LifeCycle r1;
        org.eclipse.jetty.server.Server r0;

        r0 := @this: org.eclipse.jetty.server.Server;

        r1 := @parameter0: org.eclipse.jetty.util.component.LifeCycle;

        virtualinvoke r0.<org.eclipse.jetty.server.Server: boolean removeBean(java.lang.Object)>(r1);

        return;
    }

    public boolean removeBean(java.lang.Object)
    {
        org.eclipse.jetty.util.component.Container $r2;
        java.lang.Object r1;
        org.eclipse.jetty.server.Server r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.Server;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<org.eclipse.jetty.server.handler.HandlerWrapper: boolean removeBean(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.component.Container _container>;

        virtualinvoke $r2.<org.eclipse.jetty.util.component.Container: void removeBean(java.lang.Object)>(r1);

        return 1;

     label1:
        return 0;
    }

    public void clearAttributes()
    {
        org.eclipse.jetty.util.AttributesMap $r1;
        org.eclipse.jetty.server.Server r0;

        r0 := @this: org.eclipse.jetty.server.Server;

        $r1 = r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.AttributesMap _attributes>;

        virtualinvoke $r1.<org.eclipse.jetty.util.AttributesMap: void clearAttributes()>();

        return;
    }

    public java.lang.Object getAttribute(java.lang.String)
    {
        org.eclipse.jetty.util.AttributesMap $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        org.eclipse.jetty.server.Server r0;

        r0 := @this: org.eclipse.jetty.server.Server;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.AttributesMap _attributes>;

        $r3 = virtualinvoke $r2.<org.eclipse.jetty.util.AttributesMap: java.lang.Object getAttribute(java.lang.String)>(r1);

        return $r3;
    }

    public java.util.Enumeration getAttributeNames()
    {
        org.eclipse.jetty.util.AttributesMap $r1;
        org.eclipse.jetty.server.Server r0;
        java.util.Enumeration $r2;

        r0 := @this: org.eclipse.jetty.server.Server;

        $r1 = r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.AttributesMap _attributes>;

        $r2 = staticinvoke <org.eclipse.jetty.util.AttributesMap: java.util.Enumeration getAttributeNamesCopy(org.eclipse.jetty.util.Attributes)>($r1);

        return $r2;
    }

    public void removeAttribute(java.lang.String)
    {
        org.eclipse.jetty.util.AttributesMap $r2;
        java.lang.String r1;
        org.eclipse.jetty.server.Server r0;

        r0 := @this: org.eclipse.jetty.server.Server;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.AttributesMap _attributes>;

        virtualinvoke $r2.<org.eclipse.jetty.util.AttributesMap: void removeAttribute(java.lang.String)>(r1);

        return;
    }

    public void setAttribute(java.lang.String, java.lang.Object)
    {
        org.eclipse.jetty.util.AttributesMap $r3;
        java.lang.Object r2;
        java.lang.String r1;
        org.eclipse.jetty.server.Server r0;

        r0 := @this: org.eclipse.jetty.server.Server;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.AttributesMap _attributes>;

        virtualinvoke $r3.<org.eclipse.jetty.util.AttributesMap: void setAttribute(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    public int getGracefulShutdown()
    {
        int $i0;
        org.eclipse.jetty.server.Server r0;

        r0 := @this: org.eclipse.jetty.server.Server;

        $i0 = r0.<org.eclipse.jetty.server.Server: int _graceful>;

        return $i0;
    }

    public void setGracefulShutdown(int)
    {
        int i0;
        org.eclipse.jetty.server.Server r0;

        r0 := @this: org.eclipse.jetty.server.Server;

        i0 := @parameter0: int;

        r0.<org.eclipse.jetty.server.Server: int _graceful> = i0;

        return;
    }

    public java.lang.String toString()
    {
        int $i0;
        java.lang.StringBuilder $r0, $r4, $r5, $r7;
        java.lang.Class $r2;
        java.lang.String $r3, $r6, $r8;
        org.eclipse.jetty.server.Server r1;

        r1 := @this: org.eclipse.jetty.server.Server;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public void dump(java.lang.Appendable, java.lang.String) throws java.io.IOException
    {
        java.lang.Appendable r1;
        java.util.Collection $r6;
        org.eclipse.jetty.server.Connector[] $r7;
        org.eclipse.jetty.server.Handler[] $r4;
        java.util.List $r5, $r8;
        java.util.Collection[] $r3;
        java.lang.String r2;
        org.eclipse.jetty.server.Server r0;

        r0 := @this: org.eclipse.jetty.server.Server;

        r1 := @parameter0: java.lang.Appendable;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.eclipse.jetty.server.Server: void dumpThis(java.lang.Appendable)>(r1);

        $r3 = newarray (java.util.Collection)[3];

        $r4 = virtualinvoke r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.server.Handler[] getHandlers()>();

        $r5 = staticinvoke <org.eclipse.jetty.util.TypeUtil: java.util.List asList(java.lang.Object[])>($r4);

        $r3[0] = $r5;

        $r6 = virtualinvoke r0.<org.eclipse.jetty.server.Server: java.util.Collection getBeans()>();

        $r3[1] = $r6;

        $r7 = r0.<org.eclipse.jetty.server.Server: org.eclipse.jetty.server.Connector[] _connectors>;

        $r8 = staticinvoke <org.eclipse.jetty.util.TypeUtil: java.util.List asList(java.lang.Object[])>($r7);

        $r3[2] = $r8;

        staticinvoke <org.eclipse.jetty.server.Server: void dump(java.lang.Appendable,java.lang.String,java.util.Collection[])>(r1, r2, $r3);

        return;
    }

    public boolean isUncheckedPrintWriter()
    {
        org.eclipse.jetty.server.Server r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.Server;

        $z0 = r0.<org.eclipse.jetty.server.Server: boolean _uncheckedPrintWriter>;

        return $z0;
    }

    public void setUncheckedPrintWriter(boolean)
    {
        org.eclipse.jetty.server.Server r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.server.Server;

        z0 := @parameter0: boolean;

        r0.<org.eclipse.jetty.server.Server: boolean _uncheckedPrintWriter> = z0;

        return;
    }

    public static transient void main(java.lang.String[]) throws java.lang.Exception
    {
        java.io.PrintStream $r0;
        java.lang.String[] r2;
        java.lang.String $r1;

        r2 := @parameter0: java.lang.String[];

        $r0 = <java.lang.System: java.io.PrintStream err>;

        $r1 = staticinvoke <org.eclipse.jetty.server.Server: java.lang.String getVersion()>();

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r1);

        return;
    }

    static void <clinit>()
    {
        java.lang.Package $r2, $r5, $r8, $r11;
        java.lang.Class $r1, $r3, $r7, $r10;
        org.eclipse.jetty.util.log.Logger $r0;
        java.lang.String $r4, $r6, $r9, $r12, $r13;
        boolean $z0;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/server/Server;");

        <org.eclipse.jetty.server.Server: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        $r1 = class "Lorg/eclipse/jetty/server/Server;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Package getPackage()>();

        if $r2 == null goto label1;

        $r4 = "Eclipse.org - Jetty";

        $r3 = class "Lorg/eclipse/jetty/server/Server;";

        $r5 = virtualinvoke $r3.<java.lang.Class: java.lang.Package getPackage()>();

        $r6 = virtualinvoke $r5.<java.lang.Package: java.lang.String getImplementationVendor()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label1;

        $r7 = class "Lorg/eclipse/jetty/server/Server;";

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.Package getPackage()>();

        $r9 = virtualinvoke $r8.<java.lang.Package: java.lang.String getImplementationVersion()>();

        if $r9 == null goto label1;

        $r10 = class "Lorg/eclipse/jetty/server/Server;";

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.Package getPackage()>();

        $r12 = virtualinvoke $r11.<java.lang.Package: java.lang.String getImplementationVersion()>();

        <org.eclipse.jetty.server.Server: java.lang.String __version> = $r12;

        goto label2;

     label1:
        $r13 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("jetty.version", "8.y.z-SNAPSHOT");

        <org.eclipse.jetty.server.Server: java.lang.String __version> = $r13;

     label2:
        return;
    }
}
