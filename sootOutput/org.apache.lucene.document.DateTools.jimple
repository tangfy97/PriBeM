public class org.apache.lucene.document.DateTools extends java.lang.Object
{
    static final java.util.TimeZone GMT;
    private static final java.lang.ThreadLocal TL_CAL;
    private static final java.lang.ThreadLocal TL_FORMATS;

    private void <init>()
    {
        org.apache.lucene.document.DateTools r0;

        r0 := @this: org.apache.lucene.document.DateTools;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String dateToString(java.util.Date, org.apache.lucene.document.DateTools$Resolution)
    {
        java.util.Date r0;
        long $l0;
        java.lang.String $r2;
        org.apache.lucene.document.DateTools$Resolution r1;

        r0 := @parameter0: java.util.Date;

        r1 := @parameter1: org.apache.lucene.document.DateTools$Resolution;

        $l0 = virtualinvoke r0.<java.util.Date: long getTime()>();

        $r2 = staticinvoke <org.apache.lucene.document.DateTools: java.lang.String timeToString(long,org.apache.lucene.document.DateTools$Resolution)>($l0, r1);

        return $r2;
    }

    public static java.lang.String timeToString(long, org.apache.lucene.document.DateTools$Resolution)
    {
        java.lang.ThreadLocal $r2;
        java.util.Date $r0;
        java.text.SimpleDateFormat $r5;
        long l0, $l1;
        org.apache.lucene.document.DateTools$Resolution r1;
        int $i2;
        java.lang.Object $r3;
        java.lang.String $r6;
        java.text.SimpleDateFormat[] $r4;

        l0 := @parameter0: long;

        r1 := @parameter1: org.apache.lucene.document.DateTools$Resolution;

        $r0 = new java.util.Date;

        $l1 = staticinvoke <org.apache.lucene.document.DateTools: long round(long,org.apache.lucene.document.DateTools$Resolution)>(l0, r1);

        specialinvoke $r0.<java.util.Date: void <init>(long)>($l1);

        $r2 = <org.apache.lucene.document.DateTools: java.lang.ThreadLocal TL_FORMATS>;

        $r3 = virtualinvoke $r2.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r4 = (java.text.SimpleDateFormat[]) $r3;

        $i2 = r1.<org.apache.lucene.document.DateTools$Resolution: int formatLen>;

        $r5 = $r4[$i2];

        $r6 = virtualinvoke $r5.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r0);

        return $r6;
    }

    public static long stringToTime(java.lang.String) throws java.text.ParseException
    {
        long $l0;
        java.lang.String r0;
        java.util.Date $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.lucene.document.DateTools: java.util.Date stringToDate(java.lang.String)>(r0);

        $l0 = virtualinvoke $r1.<java.util.Date: long getTime()>();

        return $l0;
    }

    public static java.util.Date stringToDate(java.lang.String) throws java.text.ParseException
    {
        java.lang.ThreadLocal $r0;
        java.util.Date $r5;
        java.text.SimpleDateFormat $r4;
        java.lang.Exception $r6;
        int $i0;
        java.lang.Object $r1;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String r2, $r11;
        java.text.ParseException $r7;
        java.text.SimpleDateFormat[] $r3;

        r2 := @parameter0: java.lang.String;

     label1:
        $r0 = <org.apache.lucene.document.DateTools: java.lang.ThreadLocal TL_FORMATS>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r3 = (java.text.SimpleDateFormat[]) $r1;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        $r4 = $r3[$i0];

        $r5 = virtualinvoke $r4.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>(r2);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.text.ParseException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Input is not a valid date string: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.text.ParseException: void <init>(java.lang.String,int)>($r11, 0);

        throw $r7;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.util.Date round(java.util.Date, org.apache.lucene.document.DateTools$Resolution)
    {
        java.util.Date $r0, r1;
        long $l0, $l1;
        org.apache.lucene.document.DateTools$Resolution r2;

        r1 := @parameter0: java.util.Date;

        r2 := @parameter1: org.apache.lucene.document.DateTools$Resolution;

        $r0 = new java.util.Date;

        $l0 = virtualinvoke r1.<java.util.Date: long getTime()>();

        $l1 = staticinvoke <org.apache.lucene.document.DateTools: long round(long,org.apache.lucene.document.DateTools$Resolution)>($l0, r2);

        specialinvoke $r0.<java.util.Date: void <init>(long)>($l1);

        return $r0;
    }

    public static long round(long, org.apache.lucene.document.DateTools$Resolution)
    {
        java.lang.ThreadLocal $r0;
        long l0, $l3;
        java.lang.IllegalArgumentException $r5;
        org.apache.lucene.document.DateTools$Resolution r3;
        java.util.Calendar r2;
        int[] $r4;
        int $i1, $i2;
        java.lang.Object $r1;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;

        l0 := @parameter0: long;

        r3 := @parameter1: org.apache.lucene.document.DateTools$Resolution;

        $r0 = <org.apache.lucene.document.DateTools: java.lang.ThreadLocal TL_CAL>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        r2 = (java.util.Calendar) $r1;

        virtualinvoke r2.<java.util.Calendar: void setTimeInMillis(long)>(l0);

        $r4 = <org.apache.lucene.document.DateTools$3: int[] $SwitchMap$org$apache$lucene$document$DateTools$Resolution>;

        $i1 = virtualinvoke r3.<org.apache.lucene.document.DateTools$Resolution: int ordinal()>();

        $i2 = $r4[$i1];

        tableswitch($i2)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            case 6: goto label6;
            case 7: goto label7;
            default: goto label8;
        };

     label1:
        virtualinvoke r2.<java.util.Calendar: void set(int,int)>(2, 0);

     label2:
        virtualinvoke r2.<java.util.Calendar: void set(int,int)>(5, 1);

     label3:
        virtualinvoke r2.<java.util.Calendar: void set(int,int)>(11, 0);

     label4:
        virtualinvoke r2.<java.util.Calendar: void set(int,int)>(12, 0);

     label5:
        virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, 0);

     label6:
        virtualinvoke r2.<java.util.Calendar: void set(int,int)>(14, 0);

     label7:
        goto label9;

     label8:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown resolution ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label9:
        $l3 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>();

        return $l3;
    }

    static void <clinit>()
    {
        org.apache.lucene.document.DateTools$1 $r1;
        org.apache.lucene.document.DateTools$2 $r2;
        java.util.TimeZone $r0;

        $r0 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        <org.apache.lucene.document.DateTools: java.util.TimeZone GMT> = $r0;

        $r1 = new org.apache.lucene.document.DateTools$1;

        specialinvoke $r1.<org.apache.lucene.document.DateTools$1: void <init>()>();

        <org.apache.lucene.document.DateTools: java.lang.ThreadLocal TL_CAL> = $r1;

        $r2 = new org.apache.lucene.document.DateTools$2;

        specialinvoke $r2.<org.apache.lucene.document.DateTools$2: void <init>()>();

        <org.apache.lucene.document.DateTools: java.lang.ThreadLocal TL_FORMATS> = $r2;

        return;
    }
}
