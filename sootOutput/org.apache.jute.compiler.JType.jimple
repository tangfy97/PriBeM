public abstract class org.apache.jute.compiler.JType extends java.lang.Object
{
    private java.lang.String mCName;
    private java.lang.String mCppName;
    private java.lang.String mCsharpName;
    private java.lang.String mJavaName;
    protected java.lang.String mMethodSuffix;
    private java.lang.String mWrapper;
    private java.lang.String mSharpWrapper;
    private java.lang.String mUnwrapMethod;

    void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.jute.compiler.JType r0;
        java.lang.String r1, r2, r3, $r4, r5, r6, r7, r8, r9, $r10;
        boolean $z0;

        r0 := @this: org.apache.jute.compiler.JType;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.String;

        r6 := @parameter4: java.lang.String;

        r7 := @parameter5: java.lang.String;

        r8 := @parameter6: java.lang.String;

        r9 := @parameter7: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jute.compiler.JType: java.lang.String mCName> = r1;

        r0.<org.apache.jute.compiler.JType: java.lang.String mCppName> = r2;

        $r4 = "Id";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label1;

        $r10 = "ZKId";

        goto label2;

     label1:
        $r10 = r3;

     label2:
        r0.<org.apache.jute.compiler.JType: java.lang.String mCsharpName> = $r10;

        r0.<org.apache.jute.compiler.JType: java.lang.String mJavaName> = r5;

        r0.<org.apache.jute.compiler.JType: java.lang.String mMethodSuffix> = r6;

        r0.<org.apache.jute.compiler.JType: java.lang.String mWrapper> = r7;

        r0.<org.apache.jute.compiler.JType: java.lang.String mSharpWrapper> = r8;

        r0.<org.apache.jute.compiler.JType: java.lang.String mUnwrapMethod> = r9;

        return;
    }

    abstract java.lang.String getSignature();

    java.lang.String genCppDecl(java.lang.String)
    {
        org.apache.jute.compiler.JType r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8;
        java.lang.String $r3, r6, $r9;

        r2 := @this: org.apache.jute.compiler.JType;

        r6 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r3 = r2.<org.apache.jute.compiler.JType: java.lang.String mCppName>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" m");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";\n");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    java.lang.String genCDecl(java.lang.String)
    {
        org.apache.jute.compiler.JType r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8;
        java.lang.String $r3, r6, $r9;

        r2 := @this: org.apache.jute.compiler.JType;

        r6 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r3 = r2.<org.apache.jute.compiler.JType: java.lang.String mCName>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";\n");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public java.lang.String genCsharpDecl(java.lang.String)
    {
        org.apache.jute.compiler.JType r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8;
        java.lang.String $r3, r6, $r9;

        r2 := @this: org.apache.jute.compiler.JType;

        r6 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  private ");

        $r3 = r2.<org.apache.jute.compiler.JType: java.lang.String mCsharpName>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";\n");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    java.lang.String genJavaDecl(java.lang.String)
    {
        org.apache.jute.compiler.JType r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8;
        java.lang.String $r3, r6, $r9;

        r2 := @this: org.apache.jute.compiler.JType;

        r6 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  private ");

        $r3 = r2.<org.apache.jute.compiler.JType: java.lang.String mJavaName>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";\n");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    java.lang.String genJavaConstructorParam(java.lang.String)
    {
        org.apache.jute.compiler.JType r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7;
        java.lang.String $r3, r6, $r8;

        r2 := @this: org.apache.jute.compiler.JType;

        r6 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("        ");

        $r3 = r2.<org.apache.jute.compiler.JType: java.lang.String mJavaName>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    java.lang.String genCppGetSet(java.lang.String, int)
    {
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r16, $r17, $r18, $r20, $r21, $r22, $r23, $r25, $r26, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r36, $r37, $r38, $r40, $r41, $r42;
        org.apache.jute.compiler.JType r2;
        int i0;
        java.lang.String $r3, r6, $r9, $r15, $r19, $r24, $r27, $r35, $r39, $r43;

        r2 := @this: org.apache.jute.compiler.JType;

        r6 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  virtual ");

        $r3 = r2.<org.apache.jute.compiler.JType: java.lang.String mCppName>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" get");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("() const {\n");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    return m");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";\n");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  }\n");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  virtual void set");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r24 = r2.<org.apache.jute.compiler.JType: java.lang.String mCppName>;

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" m_) {\n");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    m");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=m_; bs_.set(");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(");\n");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  }\n");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r43;
    }

    java.lang.String genCsharpGetSet(java.lang.String, int)
    {
        org.apache.jute.compiler.JType r2;
        int i0;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r8, $r9;
        java.lang.String $r3, r6, $r7, $r10;

        r2 := @this: org.apache.jute.compiler.JType;

        r6 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  public ");

        $r3 = virtualinvoke r2.<org.apache.jute.compiler.JType: java.lang.String getCsharpType()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = staticinvoke <org.apache.jute.compiler.JType: java.lang.String capitalize(java.lang.String)>(r6);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" { get; set; } ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    static java.lang.String capitalize(java.lang.String)
    {
        java.lang.StringBuilder $r0, $r4, $r6;
        java.lang.String r1, $r2, $r3, $r5, $r7;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(1);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    java.lang.String genJavaGetSet(java.lang.String, int)
    {
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r17, $r18, $r19, $r21, $r22, $r24, $r25, $r27, $r28, $r30, $r31, $r32, $r33, $r34, $r36, $r37, $r38, $r40, $r41, $r42;
        org.apache.jute.compiler.JType r2;
        int i0;
        java.lang.String $r3, r6, $r7, $r10, $r16, $r20, $r23, $r26, $r29, $r35, $r39, $r43;

        r2 := @this: org.apache.jute.compiler.JType;

        r6 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  public ");

        $r3 = r2.<org.apache.jute.compiler.JType: java.lang.String mJavaName>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" get");

        $r7 = staticinvoke <org.apache.jute.compiler.JType: java.lang.String capitalize(java.lang.String)>(r6);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("() {\n");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    return ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";\n");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  }\n");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  public void set");

        $r23 = staticinvoke <org.apache.jute.compiler.JType: java.lang.String capitalize(java.lang.String)>(r6);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r26 = r2.<org.apache.jute.compiler.JType: java.lang.String mJavaName>;

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" m_) {\n");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=m_;\n");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  }\n");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r43;
    }

    java.lang.String getCType()
    {
        java.lang.String $r1;
        org.apache.jute.compiler.JType r0;

        r0 := @this: org.apache.jute.compiler.JType;

        $r1 = r0.<org.apache.jute.compiler.JType: java.lang.String mCName>;

        return $r1;
    }

    java.lang.String getCppType()
    {
        java.lang.String $r1;
        org.apache.jute.compiler.JType r0;

        r0 := @this: org.apache.jute.compiler.JType;

        $r1 = r0.<org.apache.jute.compiler.JType: java.lang.String mCppName>;

        return $r1;
    }

    java.lang.String getCsharpType()
    {
        java.lang.String $r1;
        org.apache.jute.compiler.JType r0;

        r0 := @this: org.apache.jute.compiler.JType;

        $r1 = r0.<org.apache.jute.compiler.JType: java.lang.String mCsharpName>;

        return $r1;
    }

    java.lang.String getJavaType()
    {
        java.lang.String $r1;
        org.apache.jute.compiler.JType r0;

        r0 := @this: org.apache.jute.compiler.JType;

        $r1 = r0.<org.apache.jute.compiler.JType: java.lang.String mJavaName>;

        return $r1;
    }

    java.lang.String getJavaWrapperType()
    {
        java.lang.String $r1;
        org.apache.jute.compiler.JType r0;

        r0 := @this: org.apache.jute.compiler.JType;

        $r1 = r0.<org.apache.jute.compiler.JType: java.lang.String mWrapper>;

        return $r1;
    }

    java.lang.String getCsharpWrapperType()
    {
        java.lang.String $r1;
        org.apache.jute.compiler.JType r0;

        r0 := @this: org.apache.jute.compiler.JType;

        $r1 = r0.<org.apache.jute.compiler.JType: java.lang.String mSharpWrapper>;

        return $r1;
    }

    java.lang.String getMethodSuffix()
    {
        java.lang.String $r1;
        org.apache.jute.compiler.JType r0;

        r0 := @this: org.apache.jute.compiler.JType;

        $r1 = r0.<org.apache.jute.compiler.JType: java.lang.String mMethodSuffix>;

        return $r1;
    }

    java.lang.String genJavaWriteMethod(java.lang.String, java.lang.String)
    {
        org.apache.jute.compiler.JType r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8, $r10, $r11;
        java.lang.String $r3, r6, r9, $r12;

        r2 := @this: org.apache.jute.compiler.JType;

        r6 := @parameter0: java.lang.String;

        r9 := @parameter1: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    a_.write");

        $r3 = r2.<org.apache.jute.compiler.JType: java.lang.String mMethodSuffix>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\"");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");\n");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    java.lang.String genJavaReadMethod(java.lang.String, java.lang.String)
    {
        org.apache.jute.compiler.JType r5;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r7, $r8, $r10, $r11;
        java.lang.String r2, $r6, r9, $r12;

        r5 := @this: org.apache.jute.compiler.JType;

        r2 := @parameter0: java.lang.String;

        r9 := @parameter1: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=a_.read");

        $r6 = r5.<org.apache.jute.compiler.JType: java.lang.String mMethodSuffix>;

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(\"");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");\n");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    java.lang.String genJavaReadWrapper(java.lang.String, java.lang.String, boolean)
    {
        org.apache.jute.compiler.JType r6;
        java.lang.String r3, $r7, $r10, r13, $r16, $r19, r24;
        boolean z0;
        java.lang.StringBuilder $r0, $r1, $r2, $r4, $r5, $r8, $r9, $r11, $r12, $r14, $r15, $r17, $r18, $r20, $r21, $r22, $r23;

        r6 := @this: org.apache.jute.compiler.JType;

        r3 := @parameter0: java.lang.String;

        r13 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r24 = "";

        if z0 == 0 goto label1;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r19 = r6.<org.apache.jute.compiler.JType: java.lang.String mWrapper>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";\n");

        r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=new ");

        $r7 = r6.<org.apache.jute.compiler.JType: java.lang.String mWrapper>;

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(a_.read");

        $r10 = r6.<org.apache.jute.compiler.JType: java.lang.String mMethodSuffix>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(\"");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"));\n");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;
    }

    java.lang.String genJavaWriteWrapper(java.lang.String, java.lang.String)
    {
        org.apache.jute.compiler.JType r2;
        java.lang.String $r3, r6, $r9, r12, $r15;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14;

        r2 := @this: org.apache.jute.compiler.JType;

        r6 := @parameter0: java.lang.String;

        r12 := @parameter1: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("        a_.write");

        $r3 = r2.<org.apache.jute.compiler.JType: java.lang.String mMethodSuffix>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r9 = r2.<org.apache.jute.compiler.JType: java.lang.String mUnwrapMethod>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(),\"");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");\n");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    java.lang.String genJavaCompareTo(java.lang.String)
    {
        org.apache.jute.compiler.JType r12;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        java.lang.String r2, $r11;

        r12 := @this: org.apache.jute.compiler.JType;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ret = (");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" == peer.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")? 0 :((");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<peer.");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")?-1:1);\n");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    java.lang.String genJavaEquals(java.lang.String, java.lang.String)
    {
        org.apache.jute.compiler.JType r9;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r6, $r7;
        java.lang.String r2, r5, $r8;

        r9 := @this: org.apache.jute.compiler.JType;

        r2 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ret = (");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("==");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(");\n");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    java.lang.String genJavaHashCode(java.lang.String)
    {
        org.apache.jute.compiler.JType r6;
        java.lang.StringBuilder $r0, $r1, $r3, $r4;
        java.lang.String r2, $r5;

        r6 := @this: org.apache.jute.compiler.JType;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ret = (int)");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";\n");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    java.lang.String genJavaConstructorSet(java.lang.String, java.lang.String)
    {
        org.apache.jute.compiler.JType r9;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r6, $r7;
        java.lang.String r2, r5, $r8;

        r9 := @this: org.apache.jute.compiler.JType;

        r2 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    this.");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";\n");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    java.lang.String genCsharpWriteMethod(java.lang.String, java.lang.String)
    {
        org.apache.jute.compiler.JType r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r8, $r9, $r11, $r12;
        java.lang.String $r3, r6, $r7, r10, $r13;

        r2 := @this: org.apache.jute.compiler.JType;

        r6 := @parameter0: java.lang.String;

        r10 := @parameter1: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    a_.Write");

        $r3 = r2.<org.apache.jute.compiler.JType: java.lang.String mMethodSuffix>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r7 = staticinvoke <org.apache.jute.compiler.JType: java.lang.String capitalize(java.lang.String)>(r6);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\"");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");\n");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    java.lang.String genCsharpReadMethod(java.lang.String, java.lang.String)
    {
        org.apache.jute.compiler.JType r6;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r8, $r9, $r11, $r12;
        java.lang.String r2, $r3, $r7, r10, $r13;

        r6 := @this: org.apache.jute.compiler.JType;

        r2 := @parameter0: java.lang.String;

        r10 := @parameter1: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r3 = staticinvoke <org.apache.jute.compiler.JType: java.lang.String capitalize(java.lang.String)>(r2);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=a_.Read");

        $r7 = r6.<org.apache.jute.compiler.JType: java.lang.String mMethodSuffix>;

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(\"");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");\n");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    java.lang.String genCsharpReadWrapper(java.lang.String, java.lang.String, boolean)
    {
        org.apache.jute.compiler.JType r6;
        java.lang.String r3, $r7, r10, $r13, $r16, r21;
        boolean z0;
        java.lang.StringBuilder $r0, $r1, $r2, $r4, $r5, $r8, $r9, $r11, $r12, $r14, $r15, $r17, $r18, $r19, $r20;

        r6 := @this: org.apache.jute.compiler.JType;

        r3 := @parameter0: java.lang.String;

        r10 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r21 = "";

        if z0 == 0 goto label1;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r16 = r6.<org.apache.jute.compiler.JType: java.lang.String mWrapper>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";\n");

        r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=a_.Read");

        $r7 = r6.<org.apache.jute.compiler.JType: java.lang.String mMethodSuffix>;

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(\"");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");\n");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    java.lang.String genCsharpWriteWrapper(java.lang.String, java.lang.String)
    {
        org.apache.jute.compiler.JType r0;
        java.lang.String $r1, $r4, r7, $r10, r13, $r16, $r19, $r26;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r8, $r9, $r11, $r12, $r14, $r15, $r17, $r18, $r20, $r21, $r22, $r23, $r24, $r25;

        r0 := @this: org.apache.jute.compiler.JType;

        r7 := @parameter0: java.lang.String;

        r13 := @parameter1: java.lang.String;

        $r1 = r0.<org.apache.jute.compiler.JType: java.lang.String mUnwrapMethod>;

        if $r1 != null goto label1;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("        a_.Write");

        $r19 = r0.<org.apache.jute.compiler.JType: java.lang.String mMethodSuffix>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(");\n");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r26;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("        a_.Write");

        $r4 = r0.<org.apache.jute.compiler.JType: java.lang.String mMethodSuffix>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r10 = r0.<org.apache.jute.compiler.JType: java.lang.String mUnwrapMethod>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(),\"");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");\n");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;
    }

    java.lang.String genCsharpCompareTo(java.lang.String)
    {
        org.apache.jute.compiler.JType r16;
        java.lang.String r2, $r3, $r6, $r9, $r12, $r15;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14;

        r16 := @this: org.apache.jute.compiler.JType;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ret = (");

        $r3 = staticinvoke <org.apache.jute.compiler.JType: java.lang.String capitalize(java.lang.String)>(r2);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" == peer.");

        $r6 = staticinvoke <org.apache.jute.compiler.JType: java.lang.String capitalize(java.lang.String)>(r2);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")? 0 :((");

        $r9 = staticinvoke <org.apache.jute.compiler.JType: java.lang.String capitalize(java.lang.String)>(r2);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<peer.");

        $r12 = staticinvoke <org.apache.jute.compiler.JType: java.lang.String capitalize(java.lang.String)>(r2);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")?-1:1);\n");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    java.lang.String genCsharpEquals(java.lang.String, java.lang.String)
    {
        java.lang.String[] $r1;
        org.apache.jute.compiler.JType r16;
        java.lang.String r0, r4, $r5, $r8, $r11, $r12, $r15;
        java.lang.StringBuilder $r2, $r3, $r6, $r7, $r9, $r10, $r13, $r14;

        r16 := @this: org.apache.jute.compiler.JType;

        r4 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ret = (");

        $r5 = staticinvoke <org.apache.jute.compiler.JType: java.lang.String capitalize(java.lang.String)>(r4);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("==");

        $r8 = $r1[0];

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r11 = $r1[1];

        $r12 = staticinvoke <org.apache.jute.compiler.JType: java.lang.String capitalize(java.lang.String)>($r11);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(");\n");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    java.lang.String genCsharpHashCode(java.lang.String)
    {
        org.apache.jute.compiler.JType r7;
        java.lang.StringBuilder $r0, $r1, $r4, $r5;
        java.lang.String r2, $r3, $r6;

        r7 := @this: org.apache.jute.compiler.JType;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ret = (int)");

        $r3 = staticinvoke <org.apache.jute.compiler.JType: java.lang.String capitalize(java.lang.String)>(r2);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";\n");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    java.lang.String genCsharpConstructorSet(java.lang.String, java.lang.String)
    {
        org.apache.jute.compiler.JType r9;
        java.lang.StringBuilder $r0, $r3, $r4, $r6, $r7;
        java.lang.String r1, $r2, r5, $r8;

        r9 := @this: org.apache.jute.compiler.JType;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = staticinvoke <org.apache.jute.compiler.JType: java.lang.String capitalize(java.lang.String)>(r1);

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";\n");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public java.lang.String genCsharpConstructorParam(java.lang.String)
    {
        org.apache.jute.compiler.JType r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8;
        java.lang.String $r3, r6, $r9;

        r2 := @this: org.apache.jute.compiler.JType;

        r6 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r3 = r2.<org.apache.jute.compiler.JType: java.lang.String mCsharpName>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }
}
