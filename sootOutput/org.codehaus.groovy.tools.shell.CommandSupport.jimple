public abstract class org.codehaus.groovy.tools.shell.CommandSupport extends java.lang.Object implements org.codehaus.groovy.tools.shell.Command, groovy.lang.GroovyObject
{
    protected static final java.lang.String NEWLINE;
    protected final org.codehaus.groovy.tools.shell.util.Logger log;
    protected final org.codehaus.groovy.tools.shell.util.MessageSource messages;
    private final java.lang.String name;
    private final java.lang.String shortcut;
    protected final org.codehaus.groovy.tools.shell.Shell shell;
    protected final org.codehaus.groovy.tools.shell.IO io;
    protected org.codehaus.groovy.tools.shell.CommandRegistry registry;
    private final java.util.List aliases;
    private boolean hidden;
    transient groovy.lang.MetaClass metaClass;
    public static java.lang.Long __timeStamp;
    public static java.lang.Long __timeStamp__239_neverHappen1239119696875;
    static java.lang.Class class$java$util$List;
    static java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$util$Logger;
    static java.lang.Class class$jline$History;
    static java.lang.Class class$groovy$lang$GroovyClassLoader;
    static java.lang.Class class$java$util$Map;
    static java.lang.Class class$jline$ArgumentCompletor;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$BufferManager;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$IO;
    static java.lang.Class class$jline$Completor;
    static java.lang.Class class$groovy$lang$Binding;
    static java.lang.Class class$0;
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$util$SimpleCompletor;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$CommandException;
    static java.lang.Class class$java$lang$Boolean;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$Shell;
    static java.lang.Class class$java$lang$String;
    static java.lang.Class class$jline$NullCompletor;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$util$MessageSource;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$CommandAlias;
    static java.lang.Class class$java$lang$System;

    protected void <init>(org.codehaus.groovy.tools.shell.Shell, java.lang.String, java.lang.String)
    {
        java.lang.Object[] $r6, $r12, $r19, $r32;
        java.lang.StringBuffer $r26, $r28, $r30;
        java.lang.String r27, r29, $r47, $r50;
        groovy.lang.MetaClass $r22, $r24;
        org.codehaus.groovy.tools.shell.util.MessageSource $r11;
        org.codehaus.groovy.tools.shell.CommandSupport r0;
        boolean $z0, $z1, $z2, $z3;
        java.util.List $r13, $r16;
        org.codehaus.groovy.tools.shell.IO $r44;
        org.codehaus.groovy.tools.shell.util.Logger $r37;
        java.lang.Boolean $r17;
        java.lang.Class $r1, r2, $r3, r4, $r5, $r9, $r14, $r18, $r31, $r35, $r38, $r42, $r45, $r48, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62;
        java.lang.Object $r7, $r8, $r10, $r15, $r20, $r21, $r23, $r33, $r34, $r36, $r39, $r41, $r43, $r46, $r49;
        org.codehaus.groovy.tools.shell.Shell r25, $r40;

        r0 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        r25 := @parameter0: org.codehaus.groovy.tools.shell.Shell;

        r27 := @parameter1: java.lang.String;

        r29 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

        if $r1 != null goto label01;

        $r51 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandSupport");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0> = $r51;

        goto label02;

     label01:
        $r51 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

     label02:
        r2 = $r51;

        $r3 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r3 != null goto label03;

        $r52 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r52;

        goto label04;

     label03:
        $r52 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        r4 = $r52;

        $r5 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$util$MessageSource>;

        if $r5 != null goto label05;

        $r53 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.util.MessageSource");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$util$MessageSource> = $r53;

        goto label06;

     label05:
        $r53 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$util$MessageSource>;

     label06:
        $r6 = newarray (java.lang.Object)[2];

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r2, r0, "class");

        $r6[0] = $r7;

        $r6[1] = r2;

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r2, $r53, $r6);

        $r9 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$util$MessageSource>;

        if $r9 != null goto label07;

        $r54 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.util.MessageSource");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$util$MessageSource> = $r54;

        goto label08;

     label07:
        $r54 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$util$MessageSource>;

     label08:
        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r8, $r54);

        $r11 = (org.codehaus.groovy.tools.shell.util.MessageSource) $r10;

        r0.<org.codehaus.groovy.tools.shell.CommandSupport: org.codehaus.groovy.tools.shell.util.MessageSource messages> = $r11;

        $r12 = newarray (java.lang.Object)[0];

        $r13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.List createList(java.lang.Object[])>($r12);

        $r14 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$util$List>;

        if $r14 != null goto label09;

        $r55 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("java.util.List");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$util$List> = $r55;

        goto label10;

     label09:
        $r55 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$util$List>;

     label10:
        $r15 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r13, $r55);

        $r16 = (java.util.List) $r15;

        r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.util.List aliases> = $r16;

        $r17 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r17);

        r0.<org.codehaus.groovy.tools.shell.CommandSupport: boolean hidden> = $z0;

        $r18 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

        if $r18 != null goto label11;

        $r56 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.runtime.ScriptBytecodeAdapter");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter> = $r56;

        goto label12;

     label11:
        $r56 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

     label12:
        $r19 = newarray (java.lang.Object)[1];

        $r19[0] = r0;

        $r20 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeStaticMethodN(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])>(r2, $r56, "initMetaClass", $r19);

        $r21 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r20, r4);

        $r22 = (groovy.lang.MetaClass) $r21;

        $r23 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r22, r4);

        $r24 = (groovy.lang.MetaClass) $r23;

        r0.<org.codehaus.groovy.tools.shell.CommandSupport: groovy.lang.MetaClass metaClass> = $r24;

        $z1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>(r25);

        if $z1 == 0 goto label13;

        goto label14;

     label13:
        $r26 = new java.lang.StringBuffer;

        specialinvoke $r26.<java.lang.StringBuffer: void <init>(java.lang.String)>("shell. Values: ");

        virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("shell = ");

        virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r25);

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void assertFailed(java.lang.Object,java.lang.Object)>($r26, null);

     label14:
        $z2 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>(r27);

        if $z2 == 0 goto label15;

        goto label16;

     label15:
        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>(java.lang.String)>("name. Values: ");

        virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("name = ");

        virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r27);

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void assertFailed(java.lang.Object,java.lang.Object)>($r28, null);

     label16:
        $z3 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>(r29);

        if $z3 == 0 goto label17;

        goto label18;

     label17:
        $r30 = new java.lang.StringBuffer;

        specialinvoke $r30.<java.lang.StringBuffer: void <init>(java.lang.String)>("shortcut. Values: ");

        virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("shortcut = ");

        virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r29);

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void assertFailed(java.lang.Object,java.lang.Object)>($r30, null);

     label18:
        $r31 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Logger>;

        if $r31 != null goto label19;

        $r57 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.util.Logger");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Logger> = $r57;

        goto label20;

     label19:
        $r57 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Logger>;

     label20:
        $r32 = newarray (java.lang.Object)[2];

        $r33 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r2, r0, "class");

        $r32[0] = $r33;

        $r32[1] = r27;

        $r34 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r2, $r57, "create", $r32);

        $r35 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Logger>;

        if $r35 != null goto label21;

        $r58 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.util.Logger");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Logger> = $r58;

        goto label22;

     label21:
        $r58 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Logger>;

     label22:
        $r36 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r34, $r58);

        $r37 = (org.codehaus.groovy.tools.shell.util.Logger) $r36;

        r0.<org.codehaus.groovy.tools.shell.CommandSupport: org.codehaus.groovy.tools.shell.util.Logger log> = $r37;

        $r38 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$Shell>;

        if $r38 != null goto label23;

        $r59 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Shell");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$Shell> = $r59;

        goto label24;

     label23:
        $r59 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$Shell>;

     label24:
        $r39 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(r25, $r59);

        $r40 = (org.codehaus.groovy.tools.shell.Shell) $r39;

        r0.<org.codehaus.groovy.tools.shell.CommandSupport: org.codehaus.groovy.tools.shell.Shell shell> = $r40;

        $r41 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r2, r25, "io");

        $r42 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$IO>;

        if $r42 != null goto label25;

        $r60 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.IO");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$IO> = $r60;

        goto label26;

     label25:
        $r60 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$IO>;

     label26:
        $r43 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r41, $r60);

        $r44 = (org.codehaus.groovy.tools.shell.IO) $r43;

        r0.<org.codehaus.groovy.tools.shell.CommandSupport: org.codehaus.groovy.tools.shell.IO io> = $r44;

        $r45 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$lang$String>;

        if $r45 != null goto label27;

        $r61 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$lang$String> = $r61;

        goto label28;

     label27:
        $r61 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$lang$String>;

     label28:
        $r46 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(r27, $r61);

        $r47 = (java.lang.String) $r46;

        r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String name> = $r47;

        $r48 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$lang$String>;

        if $r48 != null goto label29;

        $r62 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$lang$String> = $r62;

        goto label30;

     label29:
        $r62 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$lang$String>;

     label30:
        $r49 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(r29, $r62);

        $r50 = (java.lang.String) $r49;

        r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String shortcut> = $r50;

        return;
    }

    public java.lang.String getDescription()
    {
        java.lang.Object[] $r4;
        org.codehaus.groovy.tools.shell.util.MessageSource $r5;
        org.codehaus.groovy.tools.shell.CommandSupport r3;
        java.lang.Class $r0, r1, $r2, $r7, $r10, $r11, $r12;
        java.lang.Object $r6, $r8;
        java.lang.String $r9;

        r3 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        $r0 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r10 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandSupport");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0> = $r10;

        goto label2;

     label1:
        $r10 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

     label2:
        r1 = $r10;

        $r2 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r11 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r11;

        goto label4;

     label3:
        $r11 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r5 = r3.<org.codehaus.groovy.tools.shell.CommandSupport: org.codehaus.groovy.tools.shell.util.MessageSource messages>;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = "command.description";

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r5, "getAt", $r4);

        $r7 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$lang$String>;

        if $r7 != null goto label5;

        $r12 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$lang$String> = $r12;

        goto label6;

     label5:
        $r12 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$lang$String>;

     label6:
        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r6, $r12);

        $r9 = (java.lang.String) $r8;

        return $r9;
    }

    public java.lang.String getUsage()
    {
        java.lang.Object[] $r4;
        org.codehaus.groovy.tools.shell.util.MessageSource $r5;
        org.codehaus.groovy.tools.shell.CommandSupport r3;
        java.lang.Class $r0, r1, $r2, $r7, $r10, $r11, $r12;
        java.lang.Object $r6, $r8;
        java.lang.String $r9;

        r3 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        $r0 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r10 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandSupport");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0> = $r10;

        goto label2;

     label1:
        $r10 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

     label2:
        r1 = $r10;

        $r2 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r11 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r11;

        goto label4;

     label3:
        $r11 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r5 = r3.<org.codehaus.groovy.tools.shell.CommandSupport: org.codehaus.groovy.tools.shell.util.MessageSource messages>;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = "command.usage";

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r5, "getAt", $r4);

        $r7 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$lang$String>;

        if $r7 != null goto label5;

        $r12 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$lang$String> = $r12;

        goto label6;

     label5:
        $r12 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$lang$String>;

     label6:
        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r6, $r12);

        $r9 = (java.lang.String) $r8;

        return $r9;
    }

    public java.lang.String getHelp()
    {
        java.lang.Object[] $r4;
        org.codehaus.groovy.tools.shell.util.MessageSource $r5;
        org.codehaus.groovy.tools.shell.CommandSupport r3;
        java.lang.Class $r0, r1, $r2, $r7, $r10, $r11, $r12;
        java.lang.Object $r6, $r8;
        java.lang.String $r9;

        r3 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        $r0 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r10 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandSupport");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0> = $r10;

        goto label2;

     label1:
        $r10 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

     label2:
        r1 = $r10;

        $r2 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r11 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r11;

        goto label4;

     label3:
        $r11 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r5 = r3.<org.codehaus.groovy.tools.shell.CommandSupport: org.codehaus.groovy.tools.shell.util.MessageSource messages>;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = "command.help";

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r5, "getAt", $r4);

        $r7 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$lang$String>;

        if $r7 != null goto label5;

        $r12 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$lang$String> = $r12;

        goto label6;

     label5:
        $r12 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$lang$String>;

     label6:
        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r6, $r12);

        $r9 = (java.lang.String) $r8;

        return $r9;
    }

    protected java.util.List createCompletors()
    {
        org.codehaus.groovy.tools.shell.CommandSupport r5;
        java.util.List $r4;
        java.lang.Class $r0, $r1, $r2, $r6, $r7, $r8;
        java.lang.Object $r3;

        r5 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        $r0 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandSupport");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r2 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$util$List>;

        if $r2 != null goto label5;

        $r8 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("java.util.List");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$util$List> = $r8;

        goto label6;

     label5:
        $r8 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$util$List>;

     label6:
        $r3 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(null, $r8);

        $r4 = (java.util.List) $r3;

        return $r4;
    }

    public jline.Completor getCompletor()
    {
        org.codehaus.groovy.tools.shell.CommandSupport r3;
        boolean $z0, $z1, $z2;
        java.util.List $r11;
        org.codehaus.groovy.tools.shell.CommandSupport$_getCompletor_closure1 $r25;
        java.lang.Object[] $r5, $r7, $r15, $r18, $r24;
        java.lang.String $r8, $r9;
        jline.Completor $r23, $r28;
        groovy.lang.Reference $r12;
        java.lang.Class $r0, r1, $r2, $r6, $r16, $r21, $r26, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36;
        java.lang.Object $r4, $r10, $r13, $r14, $r17, $r19, $r20, $r22, $r27;

        r3 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        $r0 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r29 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandSupport");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0> = $r29;

        goto label02;

     label01:
        $r29 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

     label02:
        r1 = $r29;

        $r2 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r30 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r30;

        goto label04;

     label03:
        $r30 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $z0 = r3.<org.codehaus.groovy.tools.shell.CommandSupport: boolean hidden>;

        $r4 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object box(boolean)>($z0);

        $z1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r4);

        if $z1 == 0 goto label07;

        $r26 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$jline$Completor>;

        if $r26 != null goto label05;

        $r31 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("jline.Completor");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$jline$Completor> = $r31;

        goto label06;

     label05:
        $r31 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$jline$Completor>;

     label06:
        $r27 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(null, $r31);

        $r28 = (jline.Completor) $r27;

        return $r28;

     label07:
        $r5 = newarray (java.lang.Object)[1];

        $r6 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$util$SimpleCompletor>;

        if $r6 != null goto label08;

        $r32 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.util.SimpleCompletor");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$util$SimpleCompletor> = $r32;

        goto label09;

     label08:
        $r32 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$util$SimpleCompletor>;

     label09:
        $r7 = newarray (java.lang.Object)[2];

        $r8 = r3.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String name>;

        $r7[0] = $r8;

        $r9 = r3.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String shortcut>;

        $r7[1] = $r9;

        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r32, $r7);

        $r5[0] = $r10;

        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.List createList(java.lang.Object[])>($r5);

        $r12 = new groovy.lang.Reference;

        specialinvoke $r12.<groovy.lang.Reference: void <init>(java.lang.Object)>($r11);

        $r13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrent0(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r3, "createCompletors");

        $z2 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r13);

        if $z2 == 0 goto label10;

        $r24 = newarray (java.lang.Object)[1];

        $r25 = new org.codehaus.groovy.tools.shell.CommandSupport$_getCompletor_closure1;

        specialinvoke $r25.<org.codehaus.groovy.tools.shell.CommandSupport$_getCompletor_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>(r3, r3, $r12);

        $r24[0] = $r25;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r13, "each", $r24);

        goto label13;

     label10:
        $r14 = virtualinvoke $r12.<groovy.lang.Reference: java.lang.Object get()>();

        $r15 = newarray (java.lang.Object)[1];

        $r16 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$jline$NullCompletor>;

        if $r16 != null goto label11;

        $r33 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("jline.NullCompletor");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$jline$NullCompletor> = $r33;

        goto label12;

     label11:
        $r33 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$jline$NullCompletor>;

     label12:
        $r17 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r33);

        $r15[0] = $r17;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r14, "leftShift", $r15);

     label13:
        $r34 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$jline$ArgumentCompletor>;

        if $r34 != null goto label14;

        $r35 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("jline.ArgumentCompletor");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$jline$ArgumentCompletor> = $r35;

        goto label15;

     label14:
        $r35 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$jline$ArgumentCompletor>;

     label15:
        $r18 = newarray (java.lang.Object)[1];

        $r19 = virtualinvoke $r12.<groovy.lang.Reference: java.lang.Object get()>();

        $r18[0] = $r19;

        $r20 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r35, $r18);

        $r21 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$jline$Completor>;

        if $r21 != null goto label16;

        $r36 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("jline.Completor");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$jline$Completor> = $r36;

        goto label17;

     label16:
        $r36 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$jline$Completor>;

     label17:
        $r22 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r20, $r36);

        $r23 = (jline.Completor) $r22;

        return $r23;
    }

    protected void alias(java.lang.String, java.lang.String)
    {
        java.lang.Object[] $r4, $r6;
        org.codehaus.groovy.tools.shell.CommandSupport r3;
        java.lang.String r8, r9, $r10;
        java.util.List $r11;
        java.lang.Class $r0, r1, $r2, $r5, $r13, $r14, $r15;
        java.lang.Object $r12;
        org.codehaus.groovy.tools.shell.Shell $r7;

        r3 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        r8 := @parameter0: java.lang.String;

        r9 := @parameter1: java.lang.String;

        $r0 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r13 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandSupport");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0> = $r13;

        goto label2;

     label1:
        $r13 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

     label2:
        r1 = $r13;

        $r2 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r14 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r14;

        goto label4;

     label3:
        $r14 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r11 = r3.<org.codehaus.groovy.tools.shell.CommandSupport: java.util.List aliases>;

        $r4 = newarray (java.lang.Object)[1];

        $r5 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandAlias>;

        if $r5 != null goto label5;

        $r15 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandAlias");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandAlias> = $r15;

        goto label6;

     label5:
        $r15 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandAlias>;

     label6:
        $r6 = newarray (java.lang.Object)[4];

        $r7 = r3.<org.codehaus.groovy.tools.shell.CommandSupport: org.codehaus.groovy.tools.shell.Shell shell>;

        $r6[0] = $r7;

        $r6[1] = r8;

        $r6[2] = r9;

        $r10 = r3.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String name>;

        $r6[3] = $r10;

        $r12 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r15, $r6);

        $r4[0] = $r12;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r11, "leftShift", $r4);

        return;
    }

    protected void fail(java.lang.String)
    {
        java.lang.Throwable $r8;
        java.lang.Object[] $r4;
        org.codehaus.groovy.tools.shell.CommandSupport r5;
        java.lang.Class $r0, r1, $r2, $r3, $r9, $r10, $r11;
        java.lang.Object $r7;
        java.lang.String r6;

        r5 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        r6 := @parameter0: java.lang.String;

        $r0 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r9 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandSupport");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0> = $r9;

        goto label2;

     label1:
        $r9 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

     label2:
        r1 = $r9;

        $r2 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r10 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r10;

        goto label4;

     label3:
        $r10 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandException>;

        if $r3 != null goto label5;

        $r11 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandException");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandException> = $r11;

        goto label6;

     label5:
        $r11 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandException>;

     label6:
        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = r5;

        $r4[1] = r6;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r11, $r4);

        $r8 = (java.lang.Throwable) $r7;

        throw $r8;
    }

    protected void fail(java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r7, $r9;
        java.lang.Object[] $r4;
        org.codehaus.groovy.tools.shell.CommandSupport r5;
        java.lang.Class $r0, r1, $r2, $r3, $r10, $r11, $r12;
        java.lang.Object $r8;
        java.lang.String r6;

        r5 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        r6 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.Throwable;

        $r0 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r10 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandSupport");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0> = $r10;

        goto label2;

     label1:
        $r10 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

     label2:
        r1 = $r10;

        $r2 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r11 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r11;

        goto label4;

     label3:
        $r11 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandException>;

        if $r3 != null goto label5;

        $r12 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandException");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandException> = $r12;

        goto label6;

     label5:
        $r12 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandException>;

     label6:
        $r4 = newarray (java.lang.Object)[3];

        $r4[0] = r5;

        $r4[1] = r6;

        $r4[2] = r7;

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r12, $r4);

        $r9 = (java.lang.Throwable) $r8;

        throw $r9;
    }

    protected void assertNoArguments(java.util.List)
    {
        java.lang.Object[] $r8, $r9, $r10;
        org.codehaus.groovy.tools.shell.util.MessageSource $r11;
        java.lang.Integer $r6;
        org.codehaus.groovy.tools.shell.CommandSupport r7;
        java.lang.StringBuffer $r4;
        boolean $z0, $z1;
        java.util.List r3;
        java.lang.Class $r0, r1, $r2, $r14, $r15;
        java.lang.Object $r5, $r12, $r13;

        r7 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        r3 := @parameter0: java.util.List;

        $r0 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r14 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandSupport");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0> = $r14;

        goto label2;

     label1:
        $r14 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

     label2:
        r1 = $r14;

        $r2 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r15 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r15;

        goto label4;

     label3:
        $r15 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>(r3, null);

        if $z0 == 0 goto label5;

        goto label6;

     label5:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>("(args != null). Values: ");

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("args = ");

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r3);

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void assertFailed(java.lang.Object,java.lang.Object)>($r4, null);

     label6:
        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r3, "size");

        $r6 = new java.lang.Integer;

        specialinvoke $r6.<java.lang.Integer: void <init>(int)>(0);

        $z1 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareGreaterThan(java.lang.Object,java.lang.Object)>($r5, $r6);

        if $z1 == 0 goto label7;

        $r8 = newarray (java.lang.Object)[1];

        $r11 = r7.<org.codehaus.groovy.tools.shell.CommandSupport: org.codehaus.groovy.tools.shell.util.MessageSource messages>;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = "error.unexpected_args";

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = " ";

        $r12 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "join", $r10);

        $r9[1] = $r12;

        $r13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r11, "format", $r9);

        $r8[0] = $r13;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r7, "fail", $r8);

        goto label7;

     label7:
        return;
    }

    protected org.codehaus.groovy.tools.shell.BufferManager getBuffers()
    {
        org.codehaus.groovy.tools.shell.BufferManager $r8;
        org.codehaus.groovy.tools.shell.CommandSupport r3;
        java.lang.Class $r0, r1, $r2, $r6, $r9, $r10, $r11;
        java.lang.Object $r5, $r7;
        org.codehaus.groovy.tools.shell.Shell $r4;

        r3 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        $r0 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r9 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandSupport");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0> = $r9;

        goto label2;

     label1:
        $r9 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

     label2:
        r1 = $r9;

        $r2 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r10 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r10;

        goto label4;

     label3:
        $r10 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = r3.<org.codehaus.groovy.tools.shell.CommandSupport: org.codehaus.groovy.tools.shell.Shell shell>;

        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r4, "buffers");

        $r6 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$BufferManager>;

        if $r6 != null goto label5;

        $r11 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.BufferManager");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$BufferManager> = $r11;

        goto label6;

     label5:
        $r11 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$tools$shell$BufferManager>;

     label6:
        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r5, $r11);

        $r8 = (org.codehaus.groovy.tools.shell.BufferManager) $r7;

        return $r8;
    }

    protected java.util.List getBuffer()
    {
        org.codehaus.groovy.tools.shell.CommandSupport r3;
        java.util.List $r9;
        java.lang.Class $r0, r1, $r2, $r7, $r10, $r11, $r12;
        java.lang.Object $r5, $r6, $r8;
        org.codehaus.groovy.tools.shell.Shell $r4;

        r3 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        $r0 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r10 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandSupport");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0> = $r10;

        goto label2;

     label1:
        $r10 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

     label2:
        r1 = $r10;

        $r2 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r11 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r11;

        goto label4;

     label3:
        $r11 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = r3.<org.codehaus.groovy.tools.shell.CommandSupport: org.codehaus.groovy.tools.shell.Shell shell>;

        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r4, "buffers");

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r5, "current");

        $r7 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$util$List>;

        if $r7 != null goto label5;

        $r12 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("java.util.List");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$util$List> = $r12;

        goto label6;

     label5:
        $r12 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$util$List>;

     label6:
        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r6, $r12);

        $r9 = (java.util.List) $r8;

        return $r9;
    }

    protected java.util.List getImports()
    {
        org.codehaus.groovy.tools.shell.CommandSupport r3;
        java.util.List $r8;
        java.lang.Class $r0, r1, $r2, $r6, $r9, $r10, $r11;
        java.lang.Object $r5, $r7;
        org.codehaus.groovy.tools.shell.Shell $r4;

        r3 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        $r0 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r9 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandSupport");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0> = $r9;

        goto label2;

     label1:
        $r9 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

     label2:
        r1 = $r9;

        $r2 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r10 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r10;

        goto label4;

     label3:
        $r10 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = r3.<org.codehaus.groovy.tools.shell.CommandSupport: org.codehaus.groovy.tools.shell.Shell shell>;

        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r4, "imports");

        $r6 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$util$List>;

        if $r6 != null goto label5;

        $r11 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("java.util.List");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$util$List> = $r11;

        goto label6;

     label5:
        $r11 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$util$List>;

     label6:
        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r5, $r11);

        $r8 = (java.util.List) $r7;

        return $r8;
    }

    protected groovy.lang.Binding getBinding()
    {
        org.codehaus.groovy.tools.shell.CommandSupport r3;
        java.lang.Class $r0, r1, $r2, $r7, $r10, $r11, $r12;
        java.lang.Object $r5, $r6, $r8;
        org.codehaus.groovy.tools.shell.Shell $r4;
        groovy.lang.Binding $r9;

        r3 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        $r0 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r10 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandSupport");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0> = $r10;

        goto label2;

     label1:
        $r10 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

     label2:
        r1 = $r10;

        $r2 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r11 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r11;

        goto label4;

     label3:
        $r11 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = r3.<org.codehaus.groovy.tools.shell.CommandSupport: org.codehaus.groovy.tools.shell.Shell shell>;

        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r4, "interp");

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r5, "context");

        $r7 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$Binding>;

        if $r7 != null goto label5;

        $r12 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.Binding");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$Binding> = $r12;

        goto label6;

     label5:
        $r12 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$Binding>;

     label6:
        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r6, $r12);

        $r9 = (groovy.lang.Binding) $r8;

        return $r9;
    }

    protected java.util.Map getVariables()
    {
        org.codehaus.groovy.tools.shell.CommandSupport r3;
        java.util.Map $r8;
        java.lang.Class $r0, r1, $r2, $r6, $r9, $r10, $r11;
        java.lang.Object $r4, $r5, $r7;

        r3 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        $r0 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r9 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandSupport");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0> = $r9;

        goto label2;

     label1:
        $r9 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

     label2:
        r1 = $r9;

        $r2 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r10 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r10;

        goto label4;

     label3:
        $r10 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r3, "binding");

        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r4, "variables");

        $r6 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$util$Map>;

        if $r6 != null goto label5;

        $r11 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("java.util.Map");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$util$Map> = $r11;

        goto label6;

     label5:
        $r11 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$util$Map>;

     label6:
        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r5, $r11);

        $r8 = (java.util.Map) $r7;

        return $r8;
    }

    protected jline.History getHistory()
    {
        org.codehaus.groovy.tools.shell.CommandSupport r3;
        jline.History $r8;
        java.lang.Class $r0, r1, $r2, $r6, $r9, $r10, $r11;
        java.lang.Object $r5, $r7;
        org.codehaus.groovy.tools.shell.Shell $r4;

        r3 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        $r0 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r9 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandSupport");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0> = $r9;

        goto label2;

     label1:
        $r9 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

     label2:
        r1 = $r9;

        $r2 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r10 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r10;

        goto label4;

     label3:
        $r10 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = r3.<org.codehaus.groovy.tools.shell.CommandSupport: org.codehaus.groovy.tools.shell.Shell shell>;

        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r4, "history");

        $r6 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$jline$History>;

        if $r6 != null goto label5;

        $r11 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("jline.History");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$jline$History> = $r11;

        goto label6;

     label5:
        $r11 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$jline$History>;

     label6:
        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r5, $r11);

        $r8 = (jline.History) $r7;

        return $r8;
    }

    protected groovy.lang.GroovyClassLoader getClassLoader()
    {
        org.codehaus.groovy.tools.shell.CommandSupport r3;
        java.lang.Class $r0, r1, $r2, $r7, $r10, $r11, $r12;
        java.lang.Object $r5, $r6, $r8;
        org.codehaus.groovy.tools.shell.Shell $r4;
        groovy.lang.GroovyClassLoader $r9;

        r3 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        $r0 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r10 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandSupport");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0> = $r10;

        goto label2;

     label1:
        $r10 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

     label2:
        r1 = $r10;

        $r2 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r11 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r11;

        goto label4;

     label3:
        $r11 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = r3.<org.codehaus.groovy.tools.shell.CommandSupport: org.codehaus.groovy.tools.shell.Shell shell>;

        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r4, "interp");

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r5, "classLoader");

        $r7 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$GroovyClassLoader>;

        if $r7 != null goto label5;

        $r12 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.GroovyClassLoader");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$GroovyClassLoader> = $r12;

        goto label6;

     label5:
        $r12 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$GroovyClassLoader>;

     label6:
        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r6, $r12);

        $r9 = (groovy.lang.GroovyClassLoader) $r8;

        return $r9;
    }

    public groovy.lang.MetaClass getMetaClass()
    {
        java.lang.Object[] $r10;
        org.codehaus.groovy.tools.shell.CommandSupport r4;
        boolean $z0;
        groovy.lang.MetaClass $r5, $r6, $r8, $r13, $r15;
        java.lang.Class $r0, r1, $r2, r3, $r9, $r16, $r17, $r18;
        java.lang.Object $r7, $r11, $r12, $r14;

        r4 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        $r0 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r16 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandSupport");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0> = $r16;

        goto label2;

     label1:
        $r16 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

     label2:
        r1 = $r16;

        $r2 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r17 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r17;

        goto label4;

     label3:
        $r17 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        r3 = $r17;

        $r5 = r4.<org.codehaus.groovy.tools.shell.CommandSupport: groovy.lang.MetaClass metaClass>;

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>($r5, null);

        if $z0 == 0 goto label7;

        $r9 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

        if $r9 != null goto label5;

        $r18 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.runtime.ScriptBytecodeAdapter");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter> = $r18;

        goto label6;

     label5:
        $r18 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

     label6:
        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r4;

        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeStaticMethodN(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])>(r1, $r18, "initMetaClass", $r10);

        $r12 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r11, r3);

        $r13 = (groovy.lang.MetaClass) $r12;

        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r13, r3);

        $r15 = (groovy.lang.MetaClass) $r14;

        r4.<org.codehaus.groovy.tools.shell.CommandSupport: groovy.lang.MetaClass metaClass> = $r15;

        goto label7;

     label7:
        $r6 = r4.<org.codehaus.groovy.tools.shell.CommandSupport: groovy.lang.MetaClass metaClass>;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r6, r3);

        $r8 = (groovy.lang.MetaClass) $r7;

        return $r8;
    }

    public void setMetaClass(groovy.lang.MetaClass)
    {
        org.codehaus.groovy.tools.shell.CommandSupport r2;
        groovy.lang.MetaClass r3;
        java.lang.Class $r0, $r1, $r4, $r5;

        r2 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        r3 := @parameter0: groovy.lang.MetaClass;

        $r0 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r4 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandSupport");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0> = $r4;

        goto label2;

     label1:
        $r4 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r5 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r5;

        goto label4;

     label3:
        $r5 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        r2.<org.codehaus.groovy.tools.shell.CommandSupport: groovy.lang.MetaClass metaClass> = r3;

        return;
    }

    public java.lang.Object invokeMethod(java.lang.String, java.lang.Object)
    {
        groovy.lang.MetaClass $r3;
        org.codehaus.groovy.tools.shell.CommandSupport r2;
        java.lang.Class $r0, $r1, $r7, $r8;
        java.lang.Object r5, $r6;
        java.lang.String r4;

        r2 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Object;

        $r0 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandSupport");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = virtualinvoke r2.<org.codehaus.groovy.tools.shell.CommandSupport: groovy.lang.MetaClass getMetaClass()>();

        $r6 = interfaceinvoke $r3.<groovy.lang.MetaClass: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object)>(r2, r4, r5);

        return $r6;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        groovy.lang.MetaClass $r3;
        org.codehaus.groovy.tools.shell.CommandSupport r2;
        java.lang.Class $r0, $r1, $r6, $r7;
        java.lang.Object $r5;
        java.lang.String r4;

        r2 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        r4 := @parameter0: java.lang.String;

        $r0 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandSupport");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = virtualinvoke r2.<org.codehaus.groovy.tools.shell.CommandSupport: groovy.lang.MetaClass getMetaClass()>();

        $r5 = interfaceinvoke $r3.<groovy.lang.MetaClass: java.lang.Object getProperty(java.lang.Object,java.lang.String)>(r2, r4);

        return $r5;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        groovy.lang.MetaClass $r3;
        org.codehaus.groovy.tools.shell.CommandSupport r2;
        java.lang.Class $r0, $r1, $r6, $r7;
        java.lang.Object r5;
        java.lang.String r4;

        r2 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Object;

        $r0 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandSupport");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = virtualinvoke r2.<org.codehaus.groovy.tools.shell.CommandSupport: groovy.lang.MetaClass getMetaClass()>();

        interfaceinvoke $r3.<groovy.lang.MetaClass: void setProperty(java.lang.Object,java.lang.String,java.lang.Object)>(r2, r4, r5);

        return;
    }

    static void <clinit>()
    {
        java.lang.Object[] $r5;
        java.lang.Long $r11, $r12, $r13, $r14;
        java.lang.String $r9, $r10;
        java.lang.Class $r0, r1, $r2, $r3, $r7, $r15, $r16, $r17, $r18;
        java.lang.Object $r4, $r6, $r8;

        $r0 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r15 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandSupport");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0> = $r15;

        goto label2;

     label1:
        $r15 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

     label2:
        r1 = $r15;

        $r2 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r16 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r16;

        goto label4;

     label3:
        $r16 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$lang$System>;

        if $r3 != null goto label5;

        $r17 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("java.lang.System");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$lang$System> = $r17;

        goto label6;

     label5:
        $r17 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$lang$System>;

     label6:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r17, "properties");

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = "line.separator";

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r4, "getAt", $r5);

        $r7 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$lang$String>;

        if $r7 != null goto label7;

        $r18 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$lang$String> = $r18;

        goto label8;

     label7:
        $r18 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$lang$String>;

     label8:
        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r6, $r18);

        $r9 = (java.lang.String) $r8;

        $r10 = (java.lang.String) $r9;

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String NEWLINE> = $r10;

        $r11 = new java.lang.Long;

        specialinvoke $r11.<java.lang.Long: void <init>(long)>(1239119696875L);

        $r12 = (java.lang.Long) $r11;

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Long __timeStamp> = $r12;

        $r13 = new java.lang.Long;

        specialinvoke $r13.<java.lang.Long: void <init>(long)>(0L);

        $r14 = (java.lang.Long) $r13;

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Long __timeStamp__239_neverHappen1239119696875> = $r14;

        return;
    }

    public final java.lang.String getName()
    {
        org.codehaus.groovy.tools.shell.CommandSupport r2;
        java.lang.Class $r0, $r1, $r3, $r7, $r8, $r9;
        java.lang.Object $r5;
        java.lang.String $r4, $r6;

        r2 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        $r0 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandSupport");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = r2.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String name>;

        $r3 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$lang$String>;

        if $r3 != null goto label5;

        $r9 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$lang$String> = $r9;

        goto label6;

     label5:
        $r9 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$lang$String>;

     label6:
        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r4, $r9);

        $r6 = (java.lang.String) $r5;

        return $r6;
    }

    public final java.lang.String getShortcut()
    {
        org.codehaus.groovy.tools.shell.CommandSupport r2;
        java.lang.Class $r0, $r1, $r3, $r7, $r8, $r9;
        java.lang.Object $r5;
        java.lang.String $r4, $r6;

        r2 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        $r0 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandSupport");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = r2.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String shortcut>;

        $r3 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$lang$String>;

        if $r3 != null goto label5;

        $r9 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$lang$String> = $r9;

        goto label6;

     label5:
        $r9 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$lang$String>;

     label6:
        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r4, $r9);

        $r6 = (java.lang.String) $r5;

        return $r6;
    }

    public final java.util.List getAliases()
    {
        org.codehaus.groovy.tools.shell.CommandSupport r2;
        java.util.List $r4, $r6;
        java.lang.Class $r0, $r1, $r3, $r7, $r8, $r9;
        java.lang.Object $r5;

        r2 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        $r0 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandSupport");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = r2.<org.codehaus.groovy.tools.shell.CommandSupport: java.util.List aliases>;

        $r3 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$util$List>;

        if $r3 != null goto label5;

        $r9 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("java.util.List");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$util$List> = $r9;

        goto label6;

     label5:
        $r9 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$util$List>;

     label6:
        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r4, $r9);

        $r6 = (java.util.List) $r5;

        return $r6;
    }

    public boolean getHidden()
    {
        org.codehaus.groovy.tools.shell.CommandSupport r2;
        java.lang.Boolean $r6;
        java.lang.Class $r0, $r1, $r4, $r7, $r8, $r9;
        java.lang.Object $r3, $r5;
        boolean $z0, $z1;

        r2 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        $r0 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandSupport");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $z0 = r2.<org.codehaus.groovy.tools.shell.CommandSupport: boolean hidden>;

        $r3 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object box(boolean)>($z0);

        $r4 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$lang$Boolean>;

        if $r4 != null goto label5;

        $r9 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("java.lang.Boolean");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$lang$Boolean> = $r9;

        goto label6;

     label5:
        $r9 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$lang$Boolean>;

     label6:
        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r3, $r9);

        $r6 = (java.lang.Boolean) $r5;

        $z1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r6);

        return $z1;
    }

    public boolean isHidden()
    {
        org.codehaus.groovy.tools.shell.CommandSupport r2;
        java.lang.Boolean $r6;
        java.lang.Class $r0, $r1, $r4, $r7, $r8, $r9;
        java.lang.Object $r3, $r5;
        boolean $z0, $z1;

        r2 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        $r0 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandSupport");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $z0 = r2.<org.codehaus.groovy.tools.shell.CommandSupport: boolean hidden>;

        $r3 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object box(boolean)>($z0);

        $r4 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$lang$Boolean>;

        if $r4 != null goto label5;

        $r9 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("java.lang.Boolean");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$lang$Boolean> = $r9;

        goto label6;

     label5:
        $r9 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$java$lang$Boolean>;

     label6:
        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r3, $r9);

        $r6 = (java.lang.Boolean) $r5;

        $z1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r6);

        return $z1;
    }

    public void setHidden(boolean)
    {
        org.codehaus.groovy.tools.shell.CommandSupport r3;
        java.lang.Class $r0, $r1, $r4, $r5;
        java.lang.Object $r2;
        boolean z0, $z1;

        r3 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        z0 := @parameter0: boolean;

        $r0 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r4 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandSupport");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0> = $r4;

        goto label2;

     label1:
        $r4 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r5 = staticinvoke <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass> = $r5;

        goto label4;

     label3:
        $r5 = <org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r2 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object box(boolean)>(z0);

        $z1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r2);

        r3.<org.codehaus.groovy.tools.shell.CommandSupport: boolean hidden> = $z1;

        return;
    }

    void super$1$wait()
    {
        org.codehaus.groovy.tools.shell.CommandSupport r0;

        r0 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        specialinvoke r0.<java.lang.Object: void wait()>();

        return;
    }

    java.lang.String super$1$toString()
    {
        org.codehaus.groovy.tools.shell.CommandSupport r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    void super$1$wait(long)
    {
        org.codehaus.groovy.tools.shell.CommandSupport r0;
        long l0;

        r0 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void wait(long)>(l0);

        return;
    }

    void super$1$wait(long, int)
    {
        org.codehaus.groovy.tools.shell.CommandSupport r0;
        int i1;
        long l0;

        r0 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void wait(long,int)>(l0, i1);

        return;
    }

    void super$1$notify()
    {
        org.codehaus.groovy.tools.shell.CommandSupport r0;

        r0 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        specialinvoke r0.<java.lang.Object: void notify()>();

        return;
    }

    void super$1$notifyAll()
    {
        org.codehaus.groovy.tools.shell.CommandSupport r0;

        r0 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        specialinvoke r0.<java.lang.Object: void notifyAll()>();

        return;
    }

    java.lang.Class super$1$getClass()
    {
        org.codehaus.groovy.tools.shell.CommandSupport r0;
        java.lang.Class $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        return $r1;
    }

    boolean super$1$equals(java.lang.Object)
    {
        org.codehaus.groovy.tools.shell.CommandSupport r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    java.lang.Object super$1$clone()
    {
        org.codehaus.groovy.tools.shell.CommandSupport r0;
        java.lang.Object $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        return $r1;
    }

    int super$1$hashCode()
    {
        org.codehaus.groovy.tools.shell.CommandSupport r0;
        int $i0;

        r0 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        $i0 = specialinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    void super$1$finalize()
    {
        org.codehaus.groovy.tools.shell.CommandSupport r0;

        r0 := @this: org.codehaus.groovy.tools.shell.CommandSupport;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
