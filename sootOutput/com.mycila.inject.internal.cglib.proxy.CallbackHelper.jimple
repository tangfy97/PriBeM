public abstract class com.mycila.inject.internal.cglib.proxy.CallbackHelper extends java.lang.Object implements com.mycila.inject.internal.cglib.proxy.CallbackFilter
{
    private java.util.Map methodMap;
    private java.util.List callbacks;

    public void <init>(java.lang.Class, java.lang.Class[])
    {
        java.lang.IllegalStateException $r18, $r19, $r20;
        java.util.HashMap $r1, $r6;
        java.lang.Integer $r13, $r17, r21;
        java.util.ArrayList $r2, $r3;
        com.mycila.inject.internal.cglib.proxy.CallbackHelper r0;
        java.util.Map $r11;
        int $i0, $i1, $i2, i3;
        java.lang.reflect.Method r8;
        boolean z0, $z1, $z2, $z3;
        java.lang.Class[] r5;
        java.util.List $r12, $r14, $r15;
        java.lang.Class r4;
        java.lang.Object $r7, $r9, $r10, $r16;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.CallbackHelper;

        r4 := @parameter0: java.lang.Class;

        r5 := @parameter1: java.lang.Class[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.mycila.inject.internal.cglib.proxy.CallbackHelper: java.util.Map methodMap> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.mycila.inject.internal.cglib.proxy.CallbackHelper: java.util.List callbacks> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        staticinvoke <com.mycila.inject.internal.cglib.proxy.Enhancer: void getMethods(java.lang.Class,java.lang.Class[],java.util.List)>(r4, r5, $r3);

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        i3 = 0;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

     label1:
        if i3 >= $i0 goto label6;

        $r7 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i3);

        r8 = (java.lang.reflect.Method) $r7;

        $r9 = virtualinvoke r0.<com.mycila.inject.internal.cglib.proxy.CallbackHelper: java.lang.Object getCallback(java.lang.reflect.Method)>(r8);

        if $r9 != null goto label2;

        $r20 = new java.lang.IllegalStateException;

        specialinvoke $r20.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getCallback cannot return null");

        throw $r20;

     label2:
        z0 = $r9 instanceof com.mycila.inject.internal.cglib.proxy.Callback;

        if z0 != 0 goto label3;

        $z3 = $r9 instanceof java.lang.Class;

        if $z3 != 0 goto label3;

        $r19 = new java.lang.IllegalStateException;

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getCallback must return a Callback or a Class");

        throw $r19;

     label3:
        if i3 <= 0 goto label4;

        $r15 = r0.<com.mycila.inject.internal.cglib.proxy.CallbackHelper: java.util.List callbacks>;

        $i2 = i3 - 1;

        $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>($i2);

        $z1 = $r16 instanceof com.mycila.inject.internal.cglib.proxy.Callback;

        $z2 = $z1 ^ z0;

        if $z2 == 0 goto label4;

        $r18 = new java.lang.IllegalStateException;

        specialinvoke $r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getCallback must return a Callback or a Class consistently for every Method");

        throw $r18;

     label4:
        $r10 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        $r17 = (java.lang.Integer) $r10;

        r21 = $r17;

        if $r17 != null goto label5;

        $r13 = new java.lang.Integer;

        $r14 = r0.<com.mycila.inject.internal.cglib.proxy.CallbackHelper: java.util.List callbacks>;

        $i1 = interfaceinvoke $r14.<java.util.List: int size()>();

        specialinvoke $r13.<java.lang.Integer: void <init>(int)>($i1);

        r21 = $r13;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r13);

     label5:
        $r11 = r0.<com.mycila.inject.internal.cglib.proxy.CallbackHelper: java.util.Map methodMap>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, r21);

        $r12 = r0.<com.mycila.inject.internal.cglib.proxy.CallbackHelper: java.util.List callbacks>;

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r9);

        i3 = i3 + 1;

        goto label1;

     label6:
        return;
    }

    protected abstract java.lang.Object getCallback(java.lang.reflect.Method);

    public com.mycila.inject.internal.cglib.proxy.Callback[] getCallbacks()
    {
        java.lang.IllegalStateException $r4;
        java.lang.Object[] $r8;
        com.mycila.inject.internal.cglib.proxy.CallbackHelper r0;
        java.util.List $r1, $r2, $r5, $r6;
        int $i0, $i1;
        com.mycila.inject.internal.cglib.proxy.Callback[] $r7, $r9, $r10, $r11;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.CallbackHelper;

        $r1 = r0.<com.mycila.inject.internal.cglib.proxy.CallbackHelper: java.util.List callbacks>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r11 = newarray (com.mycila.inject.internal.cglib.proxy.Callback)[0];

        return $r11;

     label1:
        $r2 = r0.<com.mycila.inject.internal.cglib.proxy.CallbackHelper: java.util.List callbacks>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $z0 = $r3 instanceof com.mycila.inject.internal.cglib.proxy.Callback;

        if $z0 == 0 goto label2;

        $r6 = r0.<com.mycila.inject.internal.cglib.proxy.CallbackHelper: java.util.List callbacks>;

        $r5 = r0.<com.mycila.inject.internal.cglib.proxy.CallbackHelper: java.util.List callbacks>;

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        $r7 = newarray (com.mycila.inject.internal.cglib.proxy.Callback)[$i1];

        $r8 = interfaceinvoke $r6.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        $r9 = (com.mycila.inject.internal.cglib.proxy.Callback[]) $r8;

        $r10 = (com.mycila.inject.internal.cglib.proxy.Callback[]) $r9;

        return $r10;

     label2:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getCallback returned classes, not callbacks; call getCallbackTypes instead");

        throw $r4;
    }

    public java.lang.Class[] getCallbackTypes()
    {
        java.lang.Object[] $r7;
        com.mycila.inject.internal.cglib.proxy.CallbackHelper r0;
        int $i0, $i1;
        com.mycila.inject.internal.cglib.proxy.Callback[] $r10;
        boolean $z0;
        java.lang.Class[] $r6, $r8, $r9, $r11, $r12;
        java.util.List $r1, $r2, $r4, $r5;
        java.lang.Object $r3;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.CallbackHelper;

        $r1 = r0.<com.mycila.inject.internal.cglib.proxy.CallbackHelper: java.util.List callbacks>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r12 = newarray (java.lang.Class)[0];

        return $r12;

     label1:
        $r2 = r0.<com.mycila.inject.internal.cglib.proxy.CallbackHelper: java.util.List callbacks>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $z0 = $r3 instanceof com.mycila.inject.internal.cglib.proxy.Callback;

        if $z0 == 0 goto label2;

        $r10 = virtualinvoke r0.<com.mycila.inject.internal.cglib.proxy.CallbackHelper: com.mycila.inject.internal.cglib.proxy.Callback[] getCallbacks()>();

        $r11 = staticinvoke <com.mycila.inject.internal.cglib.core.ReflectUtils: java.lang.Class[] getClasses(java.lang.Object[])>($r10);

        return $r11;

     label2:
        $r5 = r0.<com.mycila.inject.internal.cglib.proxy.CallbackHelper: java.util.List callbacks>;

        $r4 = r0.<com.mycila.inject.internal.cglib.proxy.CallbackHelper: java.util.List callbacks>;

        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        $r6 = newarray (java.lang.Class)[$i1];

        $r7 = interfaceinvoke $r5.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r8 = (java.lang.Class[]) $r7;

        $r9 = (java.lang.Class[]) $r8;

        return $r9;
    }

    public int accept(java.lang.reflect.Method)
    {
        com.mycila.inject.internal.cglib.proxy.CallbackHelper r0;
        java.util.Map $r2;
        int $i0;
        java.lang.Object $r3;
        java.lang.reflect.Method r1;
        java.lang.Integer $r4;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.CallbackHelper;

        r1 := @parameter0: java.lang.reflect.Method;

        $r2 = r0.<com.mycila.inject.internal.cglib.proxy.CallbackHelper: java.util.Map methodMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.Integer) $r3;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public int hashCode()
    {
        int $i0;
        com.mycila.inject.internal.cglib.proxy.CallbackHelper r0;
        java.util.Map $r1;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.CallbackHelper;

        $r1 = r0.<com.mycila.inject.internal.cglib.proxy.CallbackHelper: java.util.Map methodMap>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        com.mycila.inject.internal.cglib.proxy.CallbackHelper r1, $r2;
        java.util.Map $r3, $r4;
        java.lang.Object r0;
        boolean $z0, $z1;

        r1 := @this: com.mycila.inject.internal.cglib.proxy.CallbackHelper;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return 0;

     label1:
        $z0 = r0 instanceof com.mycila.inject.internal.cglib.proxy.CallbackHelper;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r4 = r1.<com.mycila.inject.internal.cglib.proxy.CallbackHelper: java.util.Map methodMap>;

        $r2 = (com.mycila.inject.internal.cglib.proxy.CallbackHelper) r0;

        $r3 = $r2.<com.mycila.inject.internal.cglib.proxy.CallbackHelper: java.util.Map methodMap>;

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        return $z1;
    }
}
