public class com.sun.lwuit.layouts.GroupLayout$SequentialGroup extends com.sun.lwuit.layouts.GroupLayout$Group
{
    private com.sun.lwuit.layouts.GroupLayout$Spring baselineSpring;
    final com.sun.lwuit.layouts.GroupLayout this$0;

    void <init>(com.sun.lwuit.layouts.GroupLayout)
    {
        com.sun.lwuit.layouts.GroupLayout r1;
        com.sun.lwuit.layouts.GroupLayout$SequentialGroup r0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$SequentialGroup;

        r1 := @parameter0: com.sun.lwuit.layouts.GroupLayout;

        r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout this$0> = r1;

        specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout$Group: void <init>(com.sun.lwuit.layouts.GroupLayout)>(r1);

        return;
    }

    public com.sun.lwuit.layouts.GroupLayout$SequentialGroup add(com.sun.lwuit.layouts.GroupLayout$Group)
    {
        com.sun.lwuit.layouts.GroupLayout$SequentialGroup r0, $r3;
        com.sun.lwuit.layouts.GroupLayout$Group r1, $r2;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$SequentialGroup;

        r1 := @parameter0: com.sun.lwuit.layouts.GroupLayout$Group;

        $r2 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$Group addSpring(com.sun.lwuit.layouts.GroupLayout$Spring)>(r1);

        $r3 = (com.sun.lwuit.layouts.GroupLayout$SequentialGroup) $r2;

        return $r3;
    }

    public com.sun.lwuit.layouts.GroupLayout$SequentialGroup add(boolean, com.sun.lwuit.layouts.GroupLayout$Group)
    {
        com.sun.lwuit.layouts.GroupLayout$Group r1;
        com.sun.lwuit.layouts.GroupLayout$SequentialGroup r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$SequentialGroup;

        z0 := @parameter0: boolean;

        r1 := @parameter1: com.sun.lwuit.layouts.GroupLayout$Group;

        virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$SequentialGroup add(com.sun.lwuit.layouts.GroupLayout$Group)>(r1);

        if z0 == 0 goto label1;

        r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$Spring baselineSpring> = r1;

     label1:
        return r0;
    }

    public com.sun.lwuit.layouts.GroupLayout$SequentialGroup add(com.sun.lwuit.Component)
    {
        com.sun.lwuit.Component r1;
        com.sun.lwuit.layouts.GroupLayout$SequentialGroup r0, $r2;
        int $i1, $i3, $i5;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$SequentialGroup;

        r1 := @parameter0: com.sun.lwuit.Component;

        $i1 = (int) -1;

        $i3 = (int) -1;

        $i5 = (int) -1;

        $r2 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$SequentialGroup add(com.sun.lwuit.Component,int,int,int)>(r1, $i1, $i3, $i5);

        return $r2;
    }

    public com.sun.lwuit.layouts.GroupLayout$SequentialGroup add(boolean, com.sun.lwuit.Component)
    {
        com.sun.lwuit.Component r1;
        com.sun.lwuit.layouts.GroupLayout$Spring $r3;
        java.util.Vector $r2;
        com.sun.lwuit.layouts.GroupLayout$SequentialGroup r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$SequentialGroup;

        z0 := @parameter0: boolean;

        r1 := @parameter1: com.sun.lwuit.Component;

        virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$SequentialGroup add(com.sun.lwuit.Component)>(r1);

        if z0 == 0 goto label1;

        $r2 = r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: java.util.Vector springs>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        $i1 = $i0 - 1;

        $r3 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$Spring getSpring(int)>($i1);

        r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$Spring baselineSpring> = $r3;

     label1:
        return r0;
    }

    public com.sun.lwuit.layouts.GroupLayout$SequentialGroup add(com.sun.lwuit.Component, int, int, int)
    {
        com.sun.lwuit.layouts.GroupLayout $r3;
        com.sun.lwuit.layouts.GroupLayout$Group $r4;
        com.sun.lwuit.Component r2;
        com.sun.lwuit.layouts.GroupLayout$SequentialGroup r0, $r5;
        int i0, i1, i2;
        com.sun.lwuit.layouts.GroupLayout$ComponentSpring $r1;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$SequentialGroup;

        r2 := @parameter0: com.sun.lwuit.Component;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r1 = new com.sun.lwuit.layouts.GroupLayout$ComponentSpring;

        $r3 = r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout this$0>;

        specialinvoke $r1.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: void <init>(com.sun.lwuit.layouts.GroupLayout,com.sun.lwuit.Component,int,int,int,com.sun.lwuit.layouts.GroupLayout$1)>($r3, r2, i0, i1, i2, null);

        $r4 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$Group addSpring(com.sun.lwuit.layouts.GroupLayout$Spring)>($r1);

        $r5 = (com.sun.lwuit.layouts.GroupLayout$SequentialGroup) $r4;

        return $r5;
    }

    public com.sun.lwuit.layouts.GroupLayout$SequentialGroup add(boolean, com.sun.lwuit.Component, int, int, int)
    {
        com.sun.lwuit.layouts.GroupLayout$Spring $r3;
        com.sun.lwuit.Component r1;
        java.util.Vector $r2;
        com.sun.lwuit.layouts.GroupLayout$SequentialGroup r0;
        int i0, i1, i2, $i3, $i4;
        boolean z0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$SequentialGroup;

        z0 := @parameter0: boolean;

        r1 := @parameter1: com.sun.lwuit.Component;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$SequentialGroup add(com.sun.lwuit.Component,int,int,int)>(r1, i0, i1, i2);

        if z0 == 0 goto label1;

        $r2 = r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: java.util.Vector springs>;

        $i3 = virtualinvoke $r2.<java.util.Vector: int size()>();

        $i4 = $i3 - 1;

        $r3 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$Spring getSpring(int)>($i4);

        r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$Spring baselineSpring> = $r3;

     label1:
        return r0;
    }

    public com.sun.lwuit.layouts.GroupLayout$SequentialGroup add(int)
    {
        int i0;
        com.sun.lwuit.layouts.GroupLayout$SequentialGroup r0, $r1;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$SequentialGroup;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$SequentialGroup add(int,int,int)>(i0, i0, i0);

        return $r1;
    }

    public com.sun.lwuit.layouts.GroupLayout$SequentialGroup add(int, int, int)
    {
        com.sun.lwuit.layouts.GroupLayout $r2;
        com.sun.lwuit.layouts.GroupLayout$GapSpring $r1;
        com.sun.lwuit.layouts.GroupLayout$Group $r3;
        com.sun.lwuit.layouts.GroupLayout$SequentialGroup r0, $r4;
        int i0, i1, i2;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$SequentialGroup;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = new com.sun.lwuit.layouts.GroupLayout$GapSpring;

        $r2 = r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout this$0>;

        specialinvoke $r1.<com.sun.lwuit.layouts.GroupLayout$GapSpring: void <init>(com.sun.lwuit.layouts.GroupLayout,int,int,int)>($r2, i0, i1, i2);

        $r3 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$Group addSpring(com.sun.lwuit.layouts.GroupLayout$Spring)>($r1);

        $r4 = (com.sun.lwuit.layouts.GroupLayout$SequentialGroup) $r3;

        return $r4;
    }

    public com.sun.lwuit.layouts.GroupLayout$SequentialGroup addPreferredGap(com.sun.lwuit.Component, com.sun.lwuit.Component, int)
    {
        com.sun.lwuit.Component r1, r2;
        com.sun.lwuit.layouts.GroupLayout$SequentialGroup r0, $r3;
        int i0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$SequentialGroup;

        r1 := @parameter0: com.sun.lwuit.Component;

        r2 := @parameter1: com.sun.lwuit.Component;

        i0 := @parameter2: int;

        $r3 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$SequentialGroup addPreferredGap(com.sun.lwuit.Component,com.sun.lwuit.Component,int,boolean)>(r1, r2, i0, 0);

        return $r3;
    }

    public com.sun.lwuit.layouts.GroupLayout$SequentialGroup addPreferredGap(com.sun.lwuit.Component, com.sun.lwuit.Component, int, boolean)
    {
        com.sun.lwuit.layouts.GroupLayout$PaddingSpring $r4;
        com.sun.lwuit.layouts.GroupLayout $r5;
        java.lang.IllegalArgumentException $r1, $r8;
        com.sun.lwuit.layouts.GroupLayout$Group $r6;
        com.sun.lwuit.Component r0, r2;
        com.sun.lwuit.layouts.GroupLayout$SequentialGroup r3, $r7;
        int i0;
        boolean z0;

        r3 := @this: com.sun.lwuit.layouts.GroupLayout$SequentialGroup;

        r0 := @parameter0: com.sun.lwuit.Component;

        r2 := @parameter1: com.sun.lwuit.Component;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        if i0 == 0 goto label1;

        if i0 == 1 goto label1;

        if i0 == 3 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid type argument");

        throw $r8;

     label1:
        if r0 == null goto label2;

        if r2 != null goto label3;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Components must be non-null");

        throw $r1;

     label3:
        $r4 = new com.sun.lwuit.layouts.GroupLayout$PaddingSpring;

        $r5 = r3.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout this$0>;

        specialinvoke $r4.<com.sun.lwuit.layouts.GroupLayout$PaddingSpring: void <init>(com.sun.lwuit.layouts.GroupLayout,com.sun.lwuit.Component,com.sun.lwuit.Component,int,boolean)>($r5, r0, r2, i0, z0);

        $r6 = virtualinvoke r3.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$Group addSpring(com.sun.lwuit.layouts.GroupLayout$Spring)>($r4);

        $r7 = (com.sun.lwuit.layouts.GroupLayout$SequentialGroup) $r6;

        return $r7;
    }

    public com.sun.lwuit.layouts.GroupLayout$SequentialGroup addPreferredGap(int)
    {
        com.sun.lwuit.layouts.GroupLayout$SequentialGroup r0, $r1;
        int i0, $i2, $i4;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$SequentialGroup;

        i0 := @parameter0: int;

        $i2 = (int) -1;

        $i4 = (int) -1;

        $r1 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$SequentialGroup addPreferredGap(int,int,int)>(i0, $i2, $i4);

        return $r1;
    }

    public com.sun.lwuit.layouts.GroupLayout$SequentialGroup addPreferredGap(int, int, int)
    {
        com.sun.lwuit.layouts.GroupLayout $r3, $r5;
        com.sun.lwuit.layouts.GroupLayout$Group $r6;
        java.lang.IllegalArgumentException $r8, $r9;
        com.sun.lwuit.layouts.GroupLayout$AutopaddingSpring $r10;
        com.sun.lwuit.layouts.GroupLayout$SequentialGroup r0, $r7;
        int i0, i1, i2, $i4, $i6, $i8, $i10;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$SequentialGroup;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 == 0 goto label1;

        if i0 == 1 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Padding type must be one of Padding.RELATED or Padding.UNRELATED");

        throw $r8;

     label1:
        if i1 >= 0 goto label2;

        $i4 = (int) -1;

        if i1 == $i4 goto label2;

        $i6 = (int) -2;

        if i1 != $i6 goto label4;

     label2:
        if i2 >= 0 goto label3;

        $i8 = (int) -1;

        if i2 == $i8 goto label3;

        $i10 = (int) -2;

        if i2 != $i10 goto label4;

     label3:
        if i1 < 0 goto label5;

        if i2 < 0 goto label5;

        if i1 <= i2 goto label5;

     label4:
        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Pref and max must be either DEFAULT_SIZE, PREFERRED_SIZE, or >= 0 and pref <= max");

        throw $r9;

     label5:
        $r3 = r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout this$0>;

        staticinvoke <com.sun.lwuit.layouts.GroupLayout: boolean access$302(com.sun.lwuit.layouts.GroupLayout,boolean)>($r3, 1);

        $r10 = new com.sun.lwuit.layouts.GroupLayout$AutopaddingSpring;

        $r5 = r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout this$0>;

        specialinvoke $r10.<com.sun.lwuit.layouts.GroupLayout$AutopaddingSpring: void <init>(com.sun.lwuit.layouts.GroupLayout,int,int,int)>($r5, i0, i1, i2);

        $r6 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$Group addSpring(com.sun.lwuit.layouts.GroupLayout$Spring)>($r10);

        $r7 = (com.sun.lwuit.layouts.GroupLayout$SequentialGroup) $r6;

        return $r7;
    }

    public com.sun.lwuit.layouts.GroupLayout$SequentialGroup addContainerGap()
    {
        com.sun.lwuit.layouts.GroupLayout$SequentialGroup r0, $r1;
        int $i1, $i3;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$SequentialGroup;

        $i1 = (int) -1;

        $i3 = (int) -1;

        $r1 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$SequentialGroup addContainerGap(int,int)>($i1, $i3);

        return $r1;
    }

    public com.sun.lwuit.layouts.GroupLayout$SequentialGroup addContainerGap(int, int)
    {
        com.sun.lwuit.layouts.GroupLayout $r2, $r4;
        com.sun.lwuit.layouts.GroupLayout$ContainerAutopaddingSpring $r8;
        com.sun.lwuit.layouts.GroupLayout$Group $r5;
        java.lang.IllegalArgumentException $r7;
        com.sun.lwuit.layouts.GroupLayout$SequentialGroup r0, $r6;
        int i0, i1, $i3, $i5, $i7;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$SequentialGroup;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 >= 0 goto label1;

        $i3 = (int) -1;

        if i0 != $i3 goto label3;

     label1:
        if i1 >= 0 goto label2;

        $i5 = (int) -1;

        if i1 == $i5 goto label2;

        $i7 = (int) -2;

        if i1 != $i7 goto label3;

     label2:
        if i0 < 0 goto label4;

        if i1 < 0 goto label4;

        if i0 <= i1 goto label4;

     label3:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Pref and max must be either DEFAULT_VALUE or >= 0 and pref <= max");

        throw $r7;

     label4:
        $r2 = r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout this$0>;

        staticinvoke <com.sun.lwuit.layouts.GroupLayout: boolean access$302(com.sun.lwuit.layouts.GroupLayout,boolean)>($r2, 1);

        $r8 = new com.sun.lwuit.layouts.GroupLayout$ContainerAutopaddingSpring;

        $r4 = r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout this$0>;

        specialinvoke $r8.<com.sun.lwuit.layouts.GroupLayout$ContainerAutopaddingSpring: void <init>(com.sun.lwuit.layouts.GroupLayout,int,int)>($r4, i0, i1);

        $r5 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$Group addSpring(com.sun.lwuit.layouts.GroupLayout$Spring)>($r8);

        $r6 = (com.sun.lwuit.layouts.GroupLayout$SequentialGroup) $r5;

        return $r6;
    }

    int operator(int, int)
    {
        com.sun.lwuit.layouts.GroupLayout$SequentialGroup r0;
        int i0, $i1, i2, $i3, $i4;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$SequentialGroup;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        $i1 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: int constrain(int)>(i0);

        $i3 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: int constrain(int)>(i2);

        $i4 = $i1 + $i3;

        return $i4;
    }

    void setValidSize(int, int, int)
    {
        java.util.Vector $r1, $r2, $r4;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12;
        com.sun.lwuit.layouts.GroupLayout$Spring $r3, $r5;
        com.sun.lwuit.layouts.GroupLayout$SequentialGroup r0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$SequentialGroup;

        i0 := @parameter0: int;

        i11 := @parameter1: int;

        i2 := @parameter2: int;

        $i1 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: int getPreferredSize(int)>(i0);

        if i2 != $i1 goto label3;

        i12 = 0;

        $r4 = r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: java.util.Vector springs>;

        $i9 = virtualinvoke $r4.<java.util.Vector: int size()>();

     label1:
        if i12 >= $i9 goto label2;

        $r5 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$Spring getSpring(int)>(i12);

        $i10 = virtualinvoke $r5.<com.sun.lwuit.layouts.GroupLayout$Spring: int getPreferredSize(int)>(i0);

        virtualinvoke $r5.<com.sun.lwuit.layouts.GroupLayout$Spring: void setSize(int,int,int)>(i0, i11, $i10);

        i11 = i11 + $i10;

        i12 = i12 + 1;

        goto label1;

     label2:
        goto label5;

     label3:
        $r1 = r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: java.util.Vector springs>;

        $i3 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i3 != 1 goto label4;

        $r3 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$Spring getSpring(int)>(0);

        $i5 = virtualinvoke $r3.<com.sun.lwuit.layouts.GroupLayout$Spring: int getMinimumSize(int)>(i0);

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>(i2, $i5);

        $i7 = virtualinvoke $r3.<com.sun.lwuit.layouts.GroupLayout$Spring: int getMaximumSize(int)>(i0);

        $i8 = staticinvoke <java.lang.Math: int min(int,int)>($i6, $i7);

        virtualinvoke $r3.<com.sun.lwuit.layouts.GroupLayout$Spring: void setSize(int,int,int)>(i0, i11, $i8);

        goto label5;

     label4:
        $r2 = r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: java.util.Vector springs>;

        $i4 = virtualinvoke $r2.<java.util.Vector: int size()>();

        if $i4 <= 1 goto label5;

        specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: void setValidSizeNotPreferred(int,int,int)>(i0, i11, i2);

     label5:
        return;
    }

    private void setValidSizeNotPreferred(int, int, int)
    {
        com.sun.lwuit.layouts.GroupLayout$SpringDelta r7;
        java.util.Vector $r1, $r2;
        byte b6, $b26;
        int[] r6;
        boolean z0, $z2, $z3;
        com.sun.lwuit.layouts.GroupLayout$Spring $r3, $r4;
        com.sun.lwuit.layouts.GroupLayout$SequentialGroup r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, $i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, i23, i24, i25, i27, $i28, $i29, $i30, i31, i32, i33, $i35;
        java.lang.Object $r5;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$SequentialGroup;

        i1 := @parameter0: int;

        i22 := @parameter1: int;

        i0 := @parameter2: int;

        $i2 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: int getPreferredSize(int)>(i1);

        i23 = i0 - $i2;

        if i23 >= 0 goto label01;

        $z3 = 1;

        $z2 = 1;

        goto label02;

     label01:
        $z3 = 0;

        $z2 = 0;

     label02:
        z0 = $z3;

        $r1 = r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: java.util.Vector springs>;

        $i3 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $z2 == 0 goto label03;

        $i35 = (int) -1;

        i23 = i23 * $i35;

     label03:
        $r2 = specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: java.util.Vector buildResizableList(int,boolean)>(i1, z0);

        $i4 = virtualinvoke $r2.<java.util.Vector: int size()>();

        if $i4 <= 0 goto label12;

        i24 = i23 / $i4;

        $i5 = i24 * $i4;

        i25 = i23 - $i5;

        r6 = newarray (int)[$i3];

        if z0 == 0 goto label04;

        $b26 = -1;

        goto label05;

     label04:
        $b26 = 1;

     label05:
        b6 = $b26;

        i27 = 0;

     label06:
        if i27 >= $i4 goto label09;

        $r5 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i27);

        r7 = (com.sun.lwuit.layouts.GroupLayout$SpringDelta) $r5;

        $i10 = i27 + 1;

        if $i10 != $i4 goto label07;

        i24 = i24 + i25;

     label07:
        $i11 = r7.<com.sun.lwuit.layouts.GroupLayout$SpringDelta: int delta>;

        $i12 = staticinvoke <java.lang.Math: int min(int,int)>(i24, $i11);

        r7.<com.sun.lwuit.layouts.GroupLayout$SpringDelta: int delta> = $i12;

        $i13 = r7.<com.sun.lwuit.layouts.GroupLayout$SpringDelta: int delta>;

        $i21 = i23 - $i13;

        i23 = $i21;

        $i14 = r7.<com.sun.lwuit.layouts.GroupLayout$SpringDelta: int delta>;

        if $i14 == i24 goto label08;

        $i15 = i27 + 1;

        if $i15 >= $i4 goto label08;

        $i16 = $i4 - i27;

        $i17 = $i16 - 1;

        i24 = $i21 / $i17;

        $i18 = $i4 - i27;

        $i19 = $i18 - 1;

        $i20 = i24 * $i19;

        i25 = $i21 - $i20;

     label08:
        $i28 = r7.<com.sun.lwuit.layouts.GroupLayout$SpringDelta: int index>;

        $i29 = r7.<com.sun.lwuit.layouts.GroupLayout$SpringDelta: int delta>;

        $i30 = b6 * $i29;

        r6[$i28] = $i30;

        i27 = i27 + 1;

        goto label06;

     label09:
        i31 = 0;

     label10:
        if i31 >= $i3 goto label11;

        $r4 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$Spring getSpring(int)>(i31);

        $i7 = virtualinvoke $r4.<com.sun.lwuit.layouts.GroupLayout$Spring: int getPreferredSize(int)>(i1);

        $i8 = r6[i31];

        i9 = $i7 + $i8;

        virtualinvoke $r4.<com.sun.lwuit.layouts.GroupLayout$Spring: void setSize(int,int,int)>(i1, i22, i9);

        i22 = i22 + i9;

        i31 = i31 + 1;

        goto label10;

     label11:
        goto label16;

     label12:
        i32 = 0;

     label13:
        if i32 >= $i3 goto label16;

        $r3 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$Spring getSpring(int)>(i32);

        if z0 == 0 goto label14;

        i33 = virtualinvoke $r3.<com.sun.lwuit.layouts.GroupLayout$Spring: int getMinimumSize(int)>(i1);

        goto label15;

     label14:
        i33 = virtualinvoke $r3.<com.sun.lwuit.layouts.GroupLayout$Spring: int getMaximumSize(int)>(i1);

     label15:
        virtualinvoke $r3.<com.sun.lwuit.layouts.GroupLayout$Spring: void setSize(int,int,int)>(i1, i22, i33);

        i22 = i22 + i33;

        i32 = i32 + 1;

        goto label13;

     label16:
        return;
    }

    private java.util.Vector buildResizableList(int, boolean)
    {
        com.sun.lwuit.layouts.GroupLayout$SpringDelta $r4, $r11;
        java.util.Vector $r1, $r10;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13, $i15;
        boolean z0;
        com.sun.lwuit.layouts.GroupLayout$Spring $r8;
        com.sun.lwuit.layouts.GroupLayout$SequentialGroup r0;
        java.lang.Object $r3, $r5, $r6, $r7;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$SequentialGroup;

        i5 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: java.util.Vector springs>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        $r10 = new java.util.Vector;

        specialinvoke $r10.<java.util.Vector: void <init>(int)>($i0);

        i10 = 0;

     label1:
        if i10 >= $i0 goto label5;

        $r8 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$Spring getSpring(int)>(i10);

        if z0 == 0 goto label2;

        $i8 = virtualinvoke $r8.<com.sun.lwuit.layouts.GroupLayout$Spring: int getPreferredSize(int)>(i5);

        $i9 = virtualinvoke $r8.<com.sun.lwuit.layouts.GroupLayout$Spring: int getMinimumSize(int)>(i5);

        i11 = $i8 - $i9;

        goto label3;

     label2:
        $i6 = virtualinvoke $r8.<com.sun.lwuit.layouts.GroupLayout$Spring: int getMaximumSize(int)>(i5);

        $i7 = virtualinvoke $r8.<com.sun.lwuit.layouts.GroupLayout$Spring: int getPreferredSize(int)>(i5);

        i11 = $i6 - $i7;

     label3:
        if i11 <= 0 goto label4;

        $r11 = new com.sun.lwuit.layouts.GroupLayout$SpringDelta;

        specialinvoke $r11.<com.sun.lwuit.layouts.GroupLayout$SpringDelta: void <init>(int,int)>(i10, i11);

        virtualinvoke $r10.<java.util.Vector: void addElement(java.lang.Object)>($r11);

     label4:
        i10 = i10 + 1;

        goto label1;

     label5:
        i12 = 0;

     label6:
        if i12 >= 0 goto label9;

        i13 = i12;

     label7:
        if i13 <= 0 goto label8;

        $i1 = i13 - 1;

        $r3 = virtualinvoke $r10.<java.util.Vector: java.lang.Object elementAt(int)>($i1);

        $r4 = (com.sun.lwuit.layouts.GroupLayout$SpringDelta) $r3;

        $r5 = virtualinvoke $r10.<java.util.Vector: java.lang.Object elementAt(int)>(i13);

        $i2 = virtualinvoke $r4.<com.sun.lwuit.layouts.GroupLayout$SpringDelta: int compareTo(java.lang.Object)>($r5);

        if $i2 <= 0 goto label8;

        $i3 = i13 - 1;

        $r6 = virtualinvoke $r10.<java.util.Vector: java.lang.Object elementAt(int)>($i3);

        $r7 = virtualinvoke $r10.<java.util.Vector: java.lang.Object elementAt(int)>(i13);

        $i4 = i13 - 1;

        virtualinvoke $r10.<java.util.Vector: void setElementAt(java.lang.Object,int)>($r7, $i4);

        virtualinvoke $r10.<java.util.Vector: void setElementAt(java.lang.Object,int)>($r6, i13);

        $i15 = (int) -1;

        i13 = i13 + $i15;

        goto label7;

     label8:
        i12 = i12 + 1;

        goto label6;

     label9:
        return $r10;
    }

    private int indexOfNextNonZeroSpring(int, boolean)
    {
        com.sun.lwuit.layouts.GroupLayout$Spring r4;
        java.util.Vector $r1, $r2;
        com.sun.lwuit.layouts.GroupLayout$SequentialGroup r0;
        int $i0, i1;
        java.lang.Object $r3;
        boolean z0, $z1;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$SequentialGroup;

        i1 := @parameter0: int;

        z0 := @parameter1: boolean;

     label1:
        $r1 = r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: java.util.Vector springs>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if i1 >= $i0 goto label3;

        $r2 = r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: java.util.Vector springs>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r4 = (com.sun.lwuit.layouts.GroupLayout$Spring) $r3;

        $z1 = virtualinvoke r4.<com.sun.lwuit.layouts.GroupLayout$Spring: boolean willHaveZeroSize(boolean)>(z0);

        if $z1 != 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return i1;
    }

    void insertAutopadding(int, java.util.Vector, java.util.Vector, java.util.Vector, java.util.Vector, boolean)
    {
        com.sun.lwuit.layouts.GroupLayout $r16;
        java.util.Vector r0, $r1, $r2, r3, $r4, $r8, r9, r10, $r11, $r12, $r17, $r18, r19, $r20;
        com.sun.lwuit.layouts.GroupLayout$AutopaddingSpring $r14, $r15, r21;
        com.sun.lwuit.layouts.GroupLayout$ComponentSpring r22;
        boolean $z0, $z1, $z2, z3, $z4, $z5, $z6;
        com.sun.lwuit.layouts.GroupLayout$Spring $r6;
        com.sun.lwuit.layouts.GroupLayout$SequentialGroup r5;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, $i16, i17;
        com.sun.lwuit.layouts.GroupLayout$Group $r7;
        java.lang.Object $r13;

        r5 := @this: com.sun.lwuit.layouts.GroupLayout$SequentialGroup;

        i1 := @parameter0: int;

        r0 := @parameter1: java.util.Vector;

        r10 := @parameter2: java.util.Vector;

        r3 := @parameter3: java.util.Vector;

        r9 := @parameter4: java.util.Vector;

        z3 := @parameter5: boolean;

        $r1 = staticinvoke <com.sun.lwuit.layouts.GroupLayout: java.util.Vector access$400(java.util.Vector)>(r0);

        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>(int)>(1);

        $r4 = staticinvoke <com.sun.lwuit.layouts.GroupLayout: java.util.Vector access$400(java.util.Vector)>(r3);

        r19 = null;

        i15 = 0;

     label01:
        $r20 = r5.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: java.util.Vector springs>;

        $i16 = virtualinvoke $r20.<java.util.Vector: int size()>();

        if i15 >= $i16 goto label21;

        $r6 = virtualinvoke r5.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$Spring getSpring(int)>(i15);

        $z0 = $r6 instanceof com.sun.lwuit.layouts.GroupLayout$AutopaddingSpring;

        if $z0 == 0 goto label05;

        $i10 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i10 != 0 goto label04;

        r21 = (com.sun.lwuit.layouts.GroupLayout$AutopaddingSpring) $r6;

        virtualinvoke r21.<com.sun.lwuit.layouts.GroupLayout$AutopaddingSpring: void setSources(java.util.Vector)>($r4);

        virtualinvoke $r4.<java.util.Vector: void removeAllElements()>();

        $i12 = i15 + 1;

        $i13 = specialinvoke r5.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: int indexOfNextNonZeroSpring(int,boolean)>($i12, 1);

        $r18 = r5.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: java.util.Vector springs>;

        $i14 = virtualinvoke $r18.<java.util.Vector: int size()>();

        if $i13 != $i14 goto label02;

        $z5 = r21 instanceof com.sun.lwuit.layouts.GroupLayout$ContainerAutopaddingSpring;

        if $z5 != 0 goto label03;

        virtualinvoke r10.<java.util.Vector: void addElement(java.lang.Object)>(r21);

        goto label03;

     label02:
        virtualinvoke $r1.<java.util.Vector: void removeAllElements()>();

        virtualinvoke $r1.<java.util.Vector: void addElement(java.lang.Object)>(r21);

     label03:
        i15 = $i13;

        goto label20;

     label04:
        $i11 = i15 + 1;

        i15 = specialinvoke r5.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: int indexOfNextNonZeroSpring(int,boolean)>($i11, 1);

        goto label20;

     label05:
        $i0 = virtualinvoke $r4.<java.util.Vector: int size()>();

        if $i0 <= 0 goto label06;

        if z3 == 0 goto label06;

        $r15 = new com.sun.lwuit.layouts.GroupLayout$AutopaddingSpring;

        $r16 = r5.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout this$0>;

        specialinvoke $r15.<com.sun.lwuit.layouts.GroupLayout$AutopaddingSpring: void <init>(com.sun.lwuit.layouts.GroupLayout,com.sun.lwuit.layouts.GroupLayout$1)>($r16, null);

        $r17 = r5.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: java.util.Vector springs>;

        virtualinvoke $r17.<java.util.Vector: void insertElementAt(java.lang.Object,int)>($r15, i15);

        goto label01;

     label06:
        $z1 = $r6 instanceof com.sun.lwuit.layouts.GroupLayout$ComponentSpring;

        if $z1 == 0 goto label12;

        r22 = (com.sun.lwuit.layouts.GroupLayout$ComponentSpring) $r6;

        $z4 = virtualinvoke r22.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: boolean isVisible()>();

        if $z4 != 0 goto label07;

        i15 = i15 + 1;

        goto label01;

     label07:
        i17 = 0;

     label08:
        $i6 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if i17 >= $i6 goto label09;

        $r13 = virtualinvoke $r1.<java.util.Vector: java.lang.Object elementAt(int)>(i17);

        $r14 = (com.sun.lwuit.layouts.GroupLayout$AutopaddingSpring) $r13;

        virtualinvoke $r14.<com.sun.lwuit.layouts.GroupLayout$AutopaddingSpring: void addTarget(com.sun.lwuit.layouts.GroupLayout$ComponentSpring,int)>(r22, i1);

        i17 = i17 + 1;

        goto label08;

     label09:
        virtualinvoke $r4.<java.util.Vector: void removeAllElements()>();

        virtualinvoke $r1.<java.util.Vector: void removeAllElements()>();

        $i7 = i15 + 1;

        $i8 = specialinvoke r5.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: int indexOfNextNonZeroSpring(int,boolean)>($i7, 0);

        $r12 = r5.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: java.util.Vector springs>;

        $i9 = virtualinvoke $r12.<java.util.Vector: int size()>();

        if $i8 != $i9 goto label10;

        virtualinvoke r9.<java.util.Vector: void addElement(java.lang.Object)>(r22);

        goto label11;

     label10:
        virtualinvoke $r4.<java.util.Vector: void addElement(java.lang.Object)>(r22);

     label11:
        i15 = $i8;

        goto label20;

     label12:
        $z2 = $r6 instanceof com.sun.lwuit.layouts.GroupLayout$Group;

        if $z2 == 0 goto label19;

        if r19 != null goto label13;

        $r11 = new java.util.Vector;

        specialinvoke $r11.<java.util.Vector: void <init>(int)>(1);

        r19 = $r11;

        goto label14;

     label13:
        virtualinvoke r19.<java.util.Vector: void removeAllElements()>();

     label14:
        virtualinvoke $r2.<java.util.Vector: void removeAllElements()>();

        $r7 = (com.sun.lwuit.layouts.GroupLayout$Group) $r6;

        virtualinvoke $r7.<com.sun.lwuit.layouts.GroupLayout$Group: void insertAutopadding(int,java.util.Vector,java.util.Vector,java.util.Vector,java.util.Vector,boolean)>(i1, $r1, $r2, $r4, r19, z3);

        virtualinvoke $r4.<java.util.Vector: void removeAllElements()>();

        virtualinvoke $r1.<java.util.Vector: void removeAllElements()>();

        $i2 = i15 + 1;

        $i3 = virtualinvoke r19.<java.util.Vector: int size()>();

        if $i3 != 0 goto label15;

        $z6 = 1;

        goto label16;

     label15:
        $z6 = 0;

     label16:
        $i4 = specialinvoke r5.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: int indexOfNextNonZeroSpring(int,boolean)>($i2, $z6);

        $r8 = r5.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: java.util.Vector springs>;

        $i5 = virtualinvoke $r8.<java.util.Vector: int size()>();

        if $i4 != $i5 goto label17;

        staticinvoke <com.sun.lwuit.layouts.GroupLayout: void access$600(java.util.Vector,java.util.Vector)>(r9, r19);

        staticinvoke <com.sun.lwuit.layouts.GroupLayout: void access$600(java.util.Vector,java.util.Vector)>(r10, $r2);

        goto label18;

     label17:
        staticinvoke <com.sun.lwuit.layouts.GroupLayout: void access$600(java.util.Vector,java.util.Vector)>($r4, r19);

        staticinvoke <com.sun.lwuit.layouts.GroupLayout: void access$600(java.util.Vector,java.util.Vector)>($r1, $r2);

     label18:
        i15 = $i4;

        goto label20;

     label19:
        virtualinvoke $r1.<java.util.Vector: void removeAllElements()>();

        virtualinvoke $r4.<java.util.Vector: void removeAllElements()>();

        i15 = i15 + 1;

     label20:
        goto label01;

     label21:
        return;
    }

    int getBaseline()
    {
        com.sun.lwuit.layouts.GroupLayout$Spring $r1, $r2, $r4, $r5;
        java.util.Vector $r3;
        com.sun.lwuit.layouts.GroupLayout$SequentialGroup r0;
        int $i0, $i1, $i2, $i3, i4, i5, $i7;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$SequentialGroup;

        $r1 = r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$Spring baselineSpring>;

        if $r1 == null goto label3;

        $r2 = r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$Spring baselineSpring>;

        $i0 = virtualinvoke $r2.<com.sun.lwuit.layouts.GroupLayout$Spring: int getBaseline()>();

        if $i0 < 0 goto label3;

        i4 = 0;

        i5 = 0;

        $r3 = r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: java.util.Vector springs>;

        $i1 = virtualinvoke $r3.<java.util.Vector: int size()>();

     label1:
        if i5 >= $i1 goto label3;

        $r4 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$Spring getSpring(int)>(i5);

        $r5 = r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$Spring baselineSpring>;

        if $r4 != $r5 goto label2;

        $i3 = i4 + $i0;

        return $i3;

     label2:
        $i2 = virtualinvoke $r4.<com.sun.lwuit.layouts.GroupLayout$Spring: int getPreferredSize(int)>(2);

        i4 = i4 + $i2;

        i5 = i5 + 1;

        goto label1;

     label3:
        $i7 = (int) -1;

        return $i7;
    }

    int getBaselineResizeBehavior()
    {
        java.util.Vector $r3, $r6, $r9, $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, z7, z8, z9, z10, z11;
        com.sun.lwuit.layouts.GroupLayout$Spring $r1, $r2, $r4, $r5, $r7, $r8, $r10, $r11, $r12, $r13;
        com.sun.lwuit.layouts.GroupLayout$SequentialGroup r0;
        int $i0, $i1, $i2, $i3, i4, $i5, i6, i7, i8, $i10, $i12;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$SequentialGroup;

        $z0 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: boolean isResizable(int)>(2);

        if $z0 == 0 goto label21;

        $r1 = r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$Spring baselineSpring>;

        $z1 = virtualinvoke $r1.<com.sun.lwuit.layouts.GroupLayout$Spring: boolean isResizable(int)>(2);

        if $z1 != 0 goto label11;

        z6 = 0;

        z11 = 0;

        z10 = 0;

        i4 = 0;

        $r9 = r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: java.util.Vector springs>;

        $i3 = virtualinvoke $r9.<java.util.Vector: int size()>();

     label01:
        if i4 >= $i3 goto label04;

        $r12 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$Spring getSpring(int)>(i4);

        $r13 = r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$Spring baselineSpring>;

        if $r12 != $r13 goto label02;

        goto label04;

     label02:
        $z5 = virtualinvoke $r12.<com.sun.lwuit.layouts.GroupLayout$Spring: boolean isResizable(int)>(2);

        if $z5 == 0 goto label03;

        z6 = 1;

        z11 = 1;

        z10 = 1;

        goto label04;

     label03:
        i4 = i4 + 1;

        goto label01;

     label04:
        z7 = 0;

        z9 = 0;

        z8 = 0;

        $r14 = r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: java.util.Vector springs>;

        $i5 = virtualinvoke $r14.<java.util.Vector: int size()>();

        i6 = $i5 - 1;

     label05:
        if i6 < 0 goto label08;

        $r10 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$Spring getSpring(int)>(i6);

        $r11 = r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$Spring baselineSpring>;

        if $r10 != $r11 goto label06;

        goto label08;

     label06:
        $z4 = virtualinvoke $r10.<com.sun.lwuit.layouts.GroupLayout$Spring: boolean isResizable(int)>(2);

        if $z4 == 0 goto label07;

        z7 = 1;

        z9 = 1;

        z8 = 1;

        goto label08;

     label07:
        $i10 = (int) -1;

        i6 = i6 + $i10;

        goto label05;

     label08:
        if z10 == 0 goto label09;

        if z9 != 0 goto label09;

        return 2;

     label09:
        if z11 != 0 goto label10;

        if z8 == 0 goto label10;

        return 1;

     label10:
        goto label20;

     label11:
        $r2 = r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$Spring baselineSpring>;

        $i0 = virtualinvoke $r2.<com.sun.lwuit.layouts.GroupLayout$Spring: int getBaselineResizeBehavior()>();

        if $i0 != 1 goto label16;

        i7 = 0;

        $r6 = r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: java.util.Vector springs>;

        $i2 = virtualinvoke $r6.<java.util.Vector: int size()>();

     label12:
        if i7 >= $i2 goto label15;

        $r7 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$Spring getSpring(int)>(i7);

        $r8 = r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$Spring baselineSpring>;

        if $r7 != $r8 goto label13;

        return 1;

     label13:
        $z3 = virtualinvoke $r7.<com.sun.lwuit.layouts.GroupLayout$Spring: boolean isResizable(int)>(2);

        if $z3 == 0 goto label14;

        return 4;

     label14:
        i7 = i7 + 1;

        goto label12;

     label15:
        goto label20;

     label16:
        if $i0 != 2 goto label20;

        $r3 = r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: java.util.Vector springs>;

        $i1 = virtualinvoke $r3.<java.util.Vector: int size()>();

        i8 = $i1 - 1;

     label17:
        if i8 < 0 goto label20;

        $r4 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$Spring getSpring(int)>(i8);

        $r5 = r0.<com.sun.lwuit.layouts.GroupLayout$SequentialGroup: com.sun.lwuit.layouts.GroupLayout$Spring baselineSpring>;

        if $r4 != $r5 goto label18;

        return 2;

     label18:
        $z2 = virtualinvoke $r4.<com.sun.lwuit.layouts.GroupLayout$Spring: boolean isResizable(int)>(2);

        if $z2 == 0 goto label19;

        return 4;

     label19:
        $i12 = (int) -1;

        i8 = i8 + $i12;

        goto label17;

     label20:
        return 4;

     label21:
        return 1;
    }
}
