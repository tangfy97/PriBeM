public class org.apache.commons.lang.mutable.MutableFloat extends java.lang.Number implements java.lang.Comparable, org.apache.commons.lang.mutable.Mutable
{
    private static final long serialVersionUID;
    private float value;

    public void <init>()
    {
        org.apache.commons.lang.mutable.MutableFloat r0;

        r0 := @this: org.apache.commons.lang.mutable.MutableFloat;

        specialinvoke r0.<java.lang.Number: void <init>()>();

        return;
    }

    public void <init>(float)
    {
        float f0;
        org.apache.commons.lang.mutable.MutableFloat r0;

        r0 := @this: org.apache.commons.lang.mutable.MutableFloat;

        f0 := @parameter0: float;

        specialinvoke r0.<java.lang.Number: void <init>()>();

        r0.<org.apache.commons.lang.mutable.MutableFloat: float value> = f0;

        return;
    }

    public void <init>(java.lang.Number)
    {
        float $f0;
        org.apache.commons.lang.mutable.MutableFloat r0;
        java.lang.Number r1;

        r0 := @this: org.apache.commons.lang.mutable.MutableFloat;

        r1 := @parameter0: java.lang.Number;

        specialinvoke r0.<java.lang.Number: void <init>()>();

        $f0 = virtualinvoke r1.<java.lang.Number: float floatValue()>();

        r0.<org.apache.commons.lang.mutable.MutableFloat: float value> = $f0;

        return;
    }

    public java.lang.Object getValue()
    {
        java.lang.Float $r0;
        float $f0;
        org.apache.commons.lang.mutable.MutableFloat r1;

        r1 := @this: org.apache.commons.lang.mutable.MutableFloat;

        $r0 = new java.lang.Float;

        $f0 = r1.<org.apache.commons.lang.mutable.MutableFloat: float value>;

        specialinvoke $r0.<java.lang.Float: void <init>(float)>($f0);

        return $r0;
    }

    public void setValue(float)
    {
        float f0;
        org.apache.commons.lang.mutable.MutableFloat r0;

        r0 := @this: org.apache.commons.lang.mutable.MutableFloat;

        f0 := @parameter0: float;

        r0.<org.apache.commons.lang.mutable.MutableFloat: float value> = f0;

        return;
    }

    public void setValue(java.lang.Object)
    {
        org.apache.commons.lang.mutable.MutableFloat r0;
        float $f0;
        java.lang.Object r1;
        java.lang.Number $r2;

        r0 := @this: org.apache.commons.lang.mutable.MutableFloat;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Number) r1;

        $f0 = virtualinvoke $r2.<java.lang.Number: float floatValue()>();

        virtualinvoke r0.<org.apache.commons.lang.mutable.MutableFloat: void setValue(float)>($f0);

        return;
    }

    public void increment()
    {
        float $f0, $f1;
        org.apache.commons.lang.mutable.MutableFloat r0;

        r0 := @this: org.apache.commons.lang.mutable.MutableFloat;

        $f0 = r0.<org.apache.commons.lang.mutable.MutableFloat: float value>;

        $f1 = $f0 + 1.0F;

        r0.<org.apache.commons.lang.mutable.MutableFloat: float value> = $f1;

        return;
    }

    public void decrement()
    {
        float $f0, $f1;
        org.apache.commons.lang.mutable.MutableFloat r0;

        r0 := @this: org.apache.commons.lang.mutable.MutableFloat;

        $f0 = r0.<org.apache.commons.lang.mutable.MutableFloat: float value>;

        $f1 = $f0 - 1.0F;

        r0.<org.apache.commons.lang.mutable.MutableFloat: float value> = $f1;

        return;
    }

    public void add(float)
    {
        org.apache.commons.lang.mutable.MutableFloat r0;
        float f0, $f1, $f2;

        r0 := @this: org.apache.commons.lang.mutable.MutableFloat;

        f0 := @parameter0: float;

        $f1 = r0.<org.apache.commons.lang.mutable.MutableFloat: float value>;

        $f2 = $f1 + f0;

        r0.<org.apache.commons.lang.mutable.MutableFloat: float value> = $f2;

        return;
    }

    public void add(java.lang.Number)
    {
        org.apache.commons.lang.mutable.MutableFloat r0;
        float $f0, $f1, $f2;
        java.lang.Number r1;

        r0 := @this: org.apache.commons.lang.mutable.MutableFloat;

        r1 := @parameter0: java.lang.Number;

        $f0 = r0.<org.apache.commons.lang.mutable.MutableFloat: float value>;

        $f1 = virtualinvoke r1.<java.lang.Number: float floatValue()>();

        $f2 = $f0 + $f1;

        r0.<org.apache.commons.lang.mutable.MutableFloat: float value> = $f2;

        return;
    }

    public void subtract(float)
    {
        org.apache.commons.lang.mutable.MutableFloat r0;
        float f0, $f1, $f2;

        r0 := @this: org.apache.commons.lang.mutable.MutableFloat;

        f0 := @parameter0: float;

        $f1 = r0.<org.apache.commons.lang.mutable.MutableFloat: float value>;

        $f2 = $f1 - f0;

        r0.<org.apache.commons.lang.mutable.MutableFloat: float value> = $f2;

        return;
    }

    public void subtract(java.lang.Number)
    {
        org.apache.commons.lang.mutable.MutableFloat r0;
        float $f0, $f1, $f2;
        java.lang.Number r1;

        r0 := @this: org.apache.commons.lang.mutable.MutableFloat;

        r1 := @parameter0: java.lang.Number;

        $f0 = r0.<org.apache.commons.lang.mutable.MutableFloat: float value>;

        $f1 = virtualinvoke r1.<java.lang.Number: float floatValue()>();

        $f2 = $f0 - $f1;

        r0.<org.apache.commons.lang.mutable.MutableFloat: float value> = $f2;

        return;
    }

    public int intValue()
    {
        int $i0;
        float $f0;
        org.apache.commons.lang.mutable.MutableFloat r0;

        r0 := @this: org.apache.commons.lang.mutable.MutableFloat;

        $f0 = r0.<org.apache.commons.lang.mutable.MutableFloat: float value>;

        $i0 = (int) $f0;

        return $i0;
    }

    public long longValue()
    {
        float $f0;
        long $l0;
        org.apache.commons.lang.mutable.MutableFloat r0;

        r0 := @this: org.apache.commons.lang.mutable.MutableFloat;

        $f0 = r0.<org.apache.commons.lang.mutable.MutableFloat: float value>;

        $l0 = (long) $f0;

        return $l0;
    }

    public float floatValue()
    {
        float $f0;
        org.apache.commons.lang.mutable.MutableFloat r0;

        r0 := @this: org.apache.commons.lang.mutable.MutableFloat;

        $f0 = r0.<org.apache.commons.lang.mutable.MutableFloat: float value>;

        return $f0;
    }

    public double doubleValue()
    {
        float $f0;
        org.apache.commons.lang.mutable.MutableFloat r0;
        double $d0;

        r0 := @this: org.apache.commons.lang.mutable.MutableFloat;

        $f0 = r0.<org.apache.commons.lang.mutable.MutableFloat: float value>;

        $d0 = (double) $f0;

        return $d0;
    }

    public boolean isNaN()
    {
        float $f0;
        org.apache.commons.lang.mutable.MutableFloat r0;
        boolean $z0;

        r0 := @this: org.apache.commons.lang.mutable.MutableFloat;

        $f0 = r0.<org.apache.commons.lang.mutable.MutableFloat: float value>;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f0);

        return $z0;
    }

    public boolean isInfinite()
    {
        float $f0;
        org.apache.commons.lang.mutable.MutableFloat r0;
        boolean $z0;

        r0 := @this: org.apache.commons.lang.mutable.MutableFloat;

        $f0 = r0.<org.apache.commons.lang.mutable.MutableFloat: float value>;

        $z0 = staticinvoke <java.lang.Float: boolean isInfinite(float)>($f0);

        return $z0;
    }

    public java.lang.Float toFloat()
    {
        java.lang.Float $r0;
        float $f0;
        org.apache.commons.lang.mutable.MutableFloat r1;

        r1 := @this: org.apache.commons.lang.mutable.MutableFloat;

        $r0 = new java.lang.Float;

        $f0 = virtualinvoke r1.<org.apache.commons.lang.mutable.MutableFloat: float floatValue()>();

        specialinvoke $r0.<java.lang.Float: void <init>(float)>($f0);

        return $r0;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.lang.mutable.MutableFloat $r1, r2;
        int $i0, $i1;
        float $f0, $f1;
        java.lang.Object r0;
        boolean $z0, $z1;

        r2 := @this: org.apache.commons.lang.mutable.MutableFloat;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.commons.lang.mutable.MutableFloat;

        if $z0 == 0 goto label1;

        $r1 = (org.apache.commons.lang.mutable.MutableFloat) r0;

        $f0 = $r1.<org.apache.commons.lang.mutable.MutableFloat: float value>;

        $i0 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0);

        $f1 = r2.<org.apache.commons.lang.mutable.MutableFloat: float value>;

        $i1 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f1);

        if $i0 != $i1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public int hashCode()
    {
        int $i0;
        float $f0;
        org.apache.commons.lang.mutable.MutableFloat r0;

        r0 := @this: org.apache.commons.lang.mutable.MutableFloat;

        $f0 = r0.<org.apache.commons.lang.mutable.MutableFloat: float value>;

        $i0 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0);

        return $i0;
    }

    public int compareTo(java.lang.Object)
    {
        org.apache.commons.lang.mutable.MutableFloat r1, r2;
        int $i0;
        float f0, $f1;
        java.lang.Object r0;

        r2 := @this: org.apache.commons.lang.mutable.MutableFloat;

        r0 := @parameter0: java.lang.Object;

        r1 = (org.apache.commons.lang.mutable.MutableFloat) r0;

        f0 = r1.<org.apache.commons.lang.mutable.MutableFloat: float value>;

        $f1 = r2.<org.apache.commons.lang.mutable.MutableFloat: float value>;

        $i0 = staticinvoke <org.apache.commons.lang.math.NumberUtils: int compare(float,float)>($f1, f0);

        return $i0;
    }

    public java.lang.String toString()
    {
        float $f0;
        java.lang.String $r1;
        org.apache.commons.lang.mutable.MutableFloat r0;

        r0 := @this: org.apache.commons.lang.mutable.MutableFloat;

        $f0 = r0.<org.apache.commons.lang.mutable.MutableFloat: float value>;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>($f0);

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.lang.mutable.MutableFloat: long serialVersionUID> = 5787169186L;

        return;
    }
}
