public class com.hp.hpl.jena.tdb.store.DateTimeNode extends java.lang.Object
{
    static final int DATE_LEN;
    static final int TIME_LEN;
    static final int MILLI;
    static final int MILLI_LEN;
    static final int MINUTES;
    static final int MINUTES_LEN;
    static final int HOUR;
    static final int HOUR_LEN;
    static final int DAY;
    static final int DAY_LEN;
    static final int MONTH;
    static final int MONTH_LEN;
    static final int YEAR;
    static final int YEAR_LEN;
    static final int TZ;
    static final int TZ_LEN;
    static final int TZ_Z;
    static final int TZ_NONE;
    static javax.xml.datatype.DatatypeFactory datatypeFactory;

    public void <init>()
    {
        com.hp.hpl.jena.tdb.store.DateTimeNode r0;

        r0 := @this: com.hp.hpl.jena.tdb.store.DateTimeNode;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static long time(long, int, int, int)
    {
        long $l1, $l2, $l4, $l5, $l7, $l8, l9;
        int i0, i3, i6;

        l9 := @parameter0: long;

        i0 := @parameter1: int;

        i3 := @parameter2: int;

        i6 := @parameter3: int;

        $l1 = (long) i0;

        $l2 = staticinvoke <org.apache.jena.atlas.lib.BitsLong: long pack(long,long,int,int)>(l9, $l1, 22, 27);

        $l4 = (long) i3;

        $l5 = staticinvoke <org.apache.jena.atlas.lib.BitsLong: long pack(long,long,int,int)>($l2, $l4, 16, 22);

        $l7 = (long) i6;

        $l8 = staticinvoke <org.apache.jena.atlas.lib.BitsLong: long pack(long,long,int,int)>($l5, $l7, 0, 16);

        return $l8;
    }

    static long date(long, int, int, int)
    {
        long $l1, $l2, $l4, $l5, $l7, $l8, l9;
        int i0, i3, i6;

        l9 := @parameter0: long;

        i0 := @parameter1: int;

        i3 := @parameter2: int;

        i6 := @parameter3: int;

        $l1 = (long) i0;

        $l2 = staticinvoke <org.apache.jena.atlas.lib.BitsLong: long pack(long,long,int,int)>(l9, $l1, 36, 49);

        $l4 = (long) i3;

        $l5 = staticinvoke <org.apache.jena.atlas.lib.BitsLong: long pack(long,long,int,int)>($l2, $l4, 32, 36);

        $l7 = (long) i6;

        $l8 = staticinvoke <org.apache.jena.atlas.lib.BitsLong: long pack(long,long,int,int)>($l5, $l7, 27, 32);

        return $l8;
    }

    static long tz(long, int)
    {
        int i0;
        long $l1, $l2, l3;

        l3 := @parameter0: long;

        i0 := @parameter1: int;

        $l1 = (long) i0;

        $l2 = staticinvoke <org.apache.jena.atlas.lib.BitsLong: long pack(long,long,int,int)>(l3, $l1, 49, 56);

        return $l2;
    }

    public static long packDate(java.lang.String)
    {
        long $l0;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $l0 = staticinvoke <com.hp.hpl.jena.tdb.store.DateTimeNode: long packDateTime(java.lang.String)>(r0);

        return $l0;
    }

    public static long packDateTime(java.lang.String)
    {
        long $l0;
        java.lang.String r0;
        java.lang.Exception $r1;

        r0 := @parameter0: java.lang.String;

     label1:
        $l0 = staticinvoke <com.hp.hpl.jena.tdb.store.DateTimeNode: long packDateTime$(java.lang.String)>(r0);

     label2:
        return $l0;

     label3:
        $r1 := @caughtexception;

        return -1L;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static long packDateTime$(java.lang.String)
    {
        javax.xml.datatype.DatatypeFactory $r1;
        java.math.BigDecimal $r3, $r4;
        byte $b19;
        boolean z0, $z1;
        long $l5, $l12, $l15, $l16, $l17;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i18, i20;
        java.lang.String $r0, r5;
        double $d0, $d1, $d2;
        javax.xml.datatype.XMLGregorianCalendar $r2;

        r5 := @parameter0: java.lang.String;

        $r0 = virtualinvoke r5.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(90);

        if $i0 <= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        $r1 = <com.hp.hpl.jena.tdb.store.DateTimeNode: javax.xml.datatype.DatatypeFactory datatypeFactory>;

        $r2 = virtualinvoke $r1.<javax.xml.datatype.DatatypeFactory: javax.xml.datatype.XMLGregorianCalendar newXMLGregorianCalendar(java.lang.String)>($r0);

        $r3 = virtualinvoke $r2.<javax.xml.datatype.XMLGregorianCalendar: java.math.BigDecimal getFractionalSecond()>();

        if $r3 == null goto label3;

        $r4 = virtualinvoke $r2.<javax.xml.datatype.XMLGregorianCalendar: java.math.BigDecimal getFractionalSecond()>();

        $d0 = virtualinvoke $r4.<java.math.BigDecimal: double doubleValue()>();

        $i18 = virtualinvoke $r2.<javax.xml.datatype.XMLGregorianCalendar: int getMillisecond()>();

        $d1 = (double) $i18;

        $d2 = $d1 / 1000.0;

        $b19 = $d0 cmpl $d2;

        if $b19 == 0 goto label3;

        return -1L;

     label3:
        $i1 = virtualinvoke $r2.<javax.xml.datatype.XMLGregorianCalendar: int getYear()>();

        if $i1 < 0 goto label4;

        if $i1 < 8000 goto label5;

     label4:
        return -1L;

     label5:
        $i2 = virtualinvoke $r2.<javax.xml.datatype.XMLGregorianCalendar: int getYear()>();

        $i3 = virtualinvoke $r2.<javax.xml.datatype.XMLGregorianCalendar: int getMonth()>();

        $i4 = virtualinvoke $r2.<javax.xml.datatype.XMLGregorianCalendar: int getDay()>();

        $l5 = staticinvoke <com.hp.hpl.jena.tdb.store.DateTimeNode: long date(long,int,int,int)>(0L, $i2, $i3, $i4);

        $i6 = virtualinvoke $r2.<javax.xml.datatype.XMLGregorianCalendar: int getHour()>();

        $i7 = virtualinvoke $r2.<javax.xml.datatype.XMLGregorianCalendar: int getMinute()>();

        $i8 = virtualinvoke $r2.<javax.xml.datatype.XMLGregorianCalendar: int getSecond()>();

        $i9 = $i8 * 1000;

        $i10 = virtualinvoke $r2.<javax.xml.datatype.XMLGregorianCalendar: int getMillisecond()>();

        $i11 = $i9 + $i10;

        $l12 = staticinvoke <com.hp.hpl.jena.tdb.store.DateTimeNode: long time(long,int,int,int)>($l5, $i6, $i7, $i11);

        if z0 == 0 goto label6;

        $l17 = staticinvoke <com.hp.hpl.jena.tdb.store.DateTimeNode: long tz(long,int)>($l12, 127);

        return $l17;

     label6:
        $i13 = virtualinvoke $r2.<javax.xml.datatype.XMLGregorianCalendar: int getTimezone()>();

        if $i13 != -2147483648 goto label7;

        $l16 = staticinvoke <com.hp.hpl.jena.tdb.store.DateTimeNode: long tz(long,int)>($l12, 126);

        return $l16;

     label7:
        $i14 = $i13 % 15;

        if $i14 == 0 goto label8;

        return -1L;

     label8:
        i20 = $i13 / 15;

        $l15 = staticinvoke <com.hp.hpl.jena.tdb.store.DateTimeNode: long tz(long,int)>($l12, i20);

        return $l15;
    }

    public static java.lang.String unpackDateTime(long)
    {
        long l0;
        java.lang.String $r0;

        l0 := @parameter0: long;

        $r0 = staticinvoke <com.hp.hpl.jena.tdb.store.DateTimeNode: java.lang.String unpack(long,boolean)>(l0, 1);

        return $r0;
    }

    public static java.lang.String unpackDate(long)
    {
        long l0;
        java.lang.String $r0;

        l0 := @parameter0: long;

        $r0 = staticinvoke <com.hp.hpl.jena.tdb.store.DateTimeNode: java.lang.String unpack(long,boolean)>(l0, 0);

        return $r0;
    }

    private static java.lang.String unpack(long, boolean)
    {
        long l0, $l1, $l3, $l5, $l7, $l9, $l11, $l13;
        int i2, i4, i6, i8, i10, i12, i14, i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23;
        java.lang.String $r1, $r2, $r3;
        boolean z0, $z1;
        java.lang.StringBuilder $r0;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        $l1 = staticinvoke <org.apache.jena.atlas.lib.BitsLong: long unpack(long,int,int)>(l0, 36, 49);

        i2 = (int) $l1;

        $l3 = staticinvoke <org.apache.jena.atlas.lib.BitsLong: long unpack(long,int,int)>(l0, 32, 36);

        i4 = (int) $l3;

        $l5 = staticinvoke <org.apache.jena.atlas.lib.BitsLong: long unpack(long,int,int)>(l0, 27, 32);

        i6 = (int) $l5;

        $l7 = staticinvoke <org.apache.jena.atlas.lib.BitsLong: long unpack(long,int,int)>(l0, 22, 27);

        i8 = (int) $l7;

        $l9 = staticinvoke <org.apache.jena.atlas.lib.BitsLong: long unpack(long,int,int)>(l0, 16, 22);

        i10 = (int) $l9;

        $l11 = staticinvoke <org.apache.jena.atlas.lib.BitsLong: long unpack(long,int,int)>(l0, 0, 16);

        i12 = (int) $l11;

        $l13 = staticinvoke <org.apache.jena.atlas.lib.BitsLong: long unpack(long,int,int)>(l0, 49, 56);

        i23 = (int) $l13;

        i14 = i12 / 1000;

        i15 = i12 % 1000;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>(50);

        staticinvoke <org.apache.jena.atlas.lib.NumberUtils: void formatInt(java.lang.StringBuilder,int,int)>($r0, i2, 4);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        staticinvoke <org.apache.jena.atlas.lib.NumberUtils: void formatInt(java.lang.StringBuilder,int,int)>($r0, i4, 2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        staticinvoke <org.apache.jena.atlas.lib.NumberUtils: void formatInt(java.lang.StringBuilder,int,int)>($r0, i6, 2);

        if z0 == 0 goto label3;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(84);

        staticinvoke <org.apache.jena.atlas.lib.NumberUtils: void formatInt(java.lang.StringBuilder,int,int)>($r0, i8, 2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        staticinvoke <org.apache.jena.atlas.lib.NumberUtils: void formatInt(java.lang.StringBuilder,int,int)>($r0, i10, 2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        staticinvoke <org.apache.jena.atlas.lib.NumberUtils: void formatInt(java.lang.StringBuilder,int,int)>($r0, i14, 2);

        if i15 == 0 goto label3;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $i19 = i15 % 100;

        if $i19 != 0 goto label1;

        $i22 = i15 / 100;

        staticinvoke <org.apache.jena.atlas.lib.NumberUtils: void formatInt(java.lang.StringBuilder,int,int)>($r0, $i22, 1);

        goto label3;

     label1:
        $i20 = i15 % 10;

        if $i20 != 0 goto label2;

        $i21 = i15 / 10;

        staticinvoke <org.apache.jena.atlas.lib.NumberUtils: void formatInt(java.lang.StringBuilder,int,int)>($r0, $i21, 2);

        goto label3;

     label2:
        staticinvoke <org.apache.jena.atlas.lib.NumberUtils: void formatInt(java.lang.StringBuilder,int,int)>($r0, i15, 3);

     label3:
        if i23 != 127 goto label4;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Z");

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label4:
        if i23 != 126 goto label5;

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label5:
        $z1 = staticinvoke <org.apache.jena.atlas.lib.BitsLong: boolean isSet(long,int)>(l0, 55);

        if $z1 == 0 goto label6;

        i23 = staticinvoke <org.apache.jena.atlas.lib.BitsInt: int set(int,int,int)>(i23, 7, 32);

     label6:
        if i23 >= 0 goto label7;

        i23 = neg i23;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        goto label8;

     label7:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(43);

     label8:
        $i17 = i23 / 4;

        $i16 = i23 % 4;

        $i18 = $i16 * 15;

        staticinvoke <org.apache.jena.atlas.lib.NumberUtils: void formatUnsignedInt(java.lang.StringBuilder,int,int)>($r0, $i17, 2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        staticinvoke <org.apache.jena.atlas.lib.NumberUtils: void formatUnsignedInt(java.lang.StringBuilder,int,int)>($r0, $i18, 2);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    static void <clinit>()
    {
        javax.xml.datatype.DatatypeFactory $r0;
        com.hp.hpl.jena.tdb.TDBException $r2;
        javax.xml.datatype.DatatypeConfigurationException $r1;

        <com.hp.hpl.jena.tdb.store.DateTimeNode: int TZ_NONE> = 126;

        <com.hp.hpl.jena.tdb.store.DateTimeNode: int TZ_Z> = 127;

        <com.hp.hpl.jena.tdb.store.DateTimeNode: int TZ_LEN> = 7;

        <com.hp.hpl.jena.tdb.store.DateTimeNode: int TZ> = 49;

        <com.hp.hpl.jena.tdb.store.DateTimeNode: int YEAR_LEN> = 13;

        <com.hp.hpl.jena.tdb.store.DateTimeNode: int YEAR> = 36;

        <com.hp.hpl.jena.tdb.store.DateTimeNode: int MONTH_LEN> = 4;

        <com.hp.hpl.jena.tdb.store.DateTimeNode: int MONTH> = 32;

        <com.hp.hpl.jena.tdb.store.DateTimeNode: int DAY_LEN> = 5;

        <com.hp.hpl.jena.tdb.store.DateTimeNode: int DAY> = 27;

        <com.hp.hpl.jena.tdb.store.DateTimeNode: int HOUR_LEN> = 5;

        <com.hp.hpl.jena.tdb.store.DateTimeNode: int HOUR> = 22;

        <com.hp.hpl.jena.tdb.store.DateTimeNode: int MINUTES_LEN> = 6;

        <com.hp.hpl.jena.tdb.store.DateTimeNode: int MINUTES> = 16;

        <com.hp.hpl.jena.tdb.store.DateTimeNode: int MILLI_LEN> = 16;

        <com.hp.hpl.jena.tdb.store.DateTimeNode: int MILLI> = 0;

        <com.hp.hpl.jena.tdb.store.DateTimeNode: int TIME_LEN> = 27;

        <com.hp.hpl.jena.tdb.store.DateTimeNode: int DATE_LEN> = 22;

        <com.hp.hpl.jena.tdb.store.DateTimeNode: javax.xml.datatype.DatatypeFactory datatypeFactory> = null;

     label1:
        $r0 = staticinvoke <javax.xml.datatype.DatatypeFactory: javax.xml.datatype.DatatypeFactory newInstance()>();

        <com.hp.hpl.jena.tdb.store.DateTimeNode: javax.xml.datatype.DatatypeFactory datatypeFactory> = $r0;

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = new com.hp.hpl.jena.tdb.TDBException;

        specialinvoke $r2.<com.hp.hpl.jena.tdb.TDBException: void <init>(java.lang.String,java.lang.Throwable)>("DateTimeNode", $r1);

        throw $r2;

     label4:
        return;

        catch javax.xml.datatype.DatatypeConfigurationException from label1 to label2 with label3;
    }
}
