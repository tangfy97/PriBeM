class org.waveprotocol.wave.client.editor.content.ContentDocument$5 extends java.lang.Object implements org.waveprotocol.wave.client.editor.extract.RepairListener
{
    final org.waveprotocol.wave.client.editor.content.ContentDocument this$0;

    void <init>(org.waveprotocol.wave.client.editor.content.ContentDocument)
    {
        org.waveprotocol.wave.client.editor.content.ContentDocument r1;
        org.waveprotocol.wave.client.editor.content.ContentDocument$5 r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$5;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentDocument;

        r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$5: org.waveprotocol.wave.client.editor.content.ContentDocument this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onFullDocumentRevert(org.waveprotocol.wave.model.document.ReadableDocument)
    {
        org.waveprotocol.wave.model.document.ReadableDocument r6;
        org.waveprotocol.wave.client.editor.extract.RepairListener $r5;
        org.waveprotocol.wave.client.editor.EditorImpl$MiniBundle $r2, $r4;
        org.waveprotocol.wave.client.editor.content.ContentDocument $r1, $r3;
        org.waveprotocol.wave.client.editor.content.ContentDocument$5 r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$5;

        r6 := @parameter0: org.waveprotocol.wave.model.document.ReadableDocument;

        $r1 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$5: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.EditorImpl$MiniBundle access$1600(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r1);

        if $r2 == null goto label1;

        $r3 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$5: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r4 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.EditorImpl$MiniBundle access$1600(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r3);

        $r5 = interfaceinvoke $r4.<org.waveprotocol.wave.client.editor.EditorImpl$MiniBundle: org.waveprotocol.wave.client.editor.extract.RepairListener getRepairListener()>();

        interfaceinvoke $r5.<org.waveprotocol.wave.client.editor.extract.RepairListener: void onFullDocumentRevert(org.waveprotocol.wave.model.document.ReadableDocument)>(r6);

     label1:
        return;
    }

    public void onRangeRevert(org.waveprotocol.wave.model.document.util.Point$El, org.waveprotocol.wave.model.document.util.Point$El)
    {
        org.waveprotocol.wave.client.editor.extract.RepairListener $r5;
        org.waveprotocol.wave.client.editor.content.ContentDocument $r1, $r3;
        org.waveprotocol.wave.model.document.util.Point$El r6, r7;
        org.waveprotocol.wave.client.editor.content.ContentDocument$5 r0;
        org.waveprotocol.wave.client.editor.EditorImpl$MiniBundle $r2, $r4;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$5;

        r6 := @parameter0: org.waveprotocol.wave.model.document.util.Point$El;

        r7 := @parameter1: org.waveprotocol.wave.model.document.util.Point$El;

        $r1 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$5: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.EditorImpl$MiniBundle access$1600(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r1);

        if $r2 == null goto label1;

        $r3 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$5: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r4 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.EditorImpl$MiniBundle access$1600(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r3);

        $r5 = interfaceinvoke $r4.<org.waveprotocol.wave.client.editor.EditorImpl$MiniBundle: org.waveprotocol.wave.client.editor.extract.RepairListener getRepairListener()>();

        interfaceinvoke $r5.<org.waveprotocol.wave.client.editor.extract.RepairListener: void onRangeRevert(org.waveprotocol.wave.model.document.util.Point$El,org.waveprotocol.wave.model.document.util.Point$El)>(r6, r7);

     label1:
        return;
    }
}
