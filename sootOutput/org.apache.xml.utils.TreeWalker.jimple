public class org.apache.xml.utils.TreeWalker extends java.lang.Object
{
    private org.xml.sax.ContentHandler m_contentHandler;
    protected org.apache.xml.utils.DOMHelper m_dh;
    private org.xml.sax.helpers.LocatorImpl m_locator;
    boolean nextIsRaw;

    public org.xml.sax.ContentHandler getContentHandler()
    {
        org.xml.sax.ContentHandler $r1;
        org.apache.xml.utils.TreeWalker r0;

        r0 := @this: org.apache.xml.utils.TreeWalker;

        $r1 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler>;

        return $r1;
    }

    public void setContentHandler(org.xml.sax.ContentHandler)
    {
        org.xml.sax.ContentHandler r1;
        org.apache.xml.utils.TreeWalker r0;

        r0 := @this: org.apache.xml.utils.TreeWalker;

        r1 := @parameter0: org.xml.sax.ContentHandler;

        r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler> = r1;

        return;
    }

    public void <init>(org.xml.sax.ContentHandler, org.apache.xml.utils.DOMHelper, java.lang.String)
    {
        org.xml.sax.helpers.LocatorImpl $r1, $r3, $r7, $r15;
        java.lang.StringBuffer $r6, $r9, $r11, $r12;
        java.lang.SecurityException $r16;
        org.xml.sax.ContentHandler r2, $r4;
        java.lang.String r5, $r8, $r10, $r13;
        org.apache.xml.utils.DOMHelper r14;
        org.apache.xml.utils.TreeWalker r0;

        r0 := @this: org.apache.xml.utils.TreeWalker;

        r2 := @parameter0: org.xml.sax.ContentHandler;

        r14 := @parameter1: org.apache.xml.utils.DOMHelper;

        r5 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler> = null;

        $r1 = new org.xml.sax.helpers.LocatorImpl;

        specialinvoke $r1.<org.xml.sax.helpers.LocatorImpl: void <init>()>();

        r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.helpers.LocatorImpl m_locator> = $r1;

        r0.<org.apache.xml.utils.TreeWalker: boolean nextIsRaw> = 0;

        r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler> = r2;

        $r4 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler>;

        $r3 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.helpers.LocatorImpl m_locator>;

        interfaceinvoke $r4.<org.xml.sax.ContentHandler: void setDocumentLocator(org.xml.sax.Locator)>($r3);

        if r5 == null goto label1;

        $r15 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.helpers.LocatorImpl m_locator>;

        virtualinvoke $r15.<org.xml.sax.helpers.LocatorImpl: void setSystemId(java.lang.String)>(r5);

        goto label4;

     label1:
        $r7 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.helpers.LocatorImpl m_locator>;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r8 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.dir");

        $r9 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = <java.io.File: java.lang.String separator>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("dummy.xsl");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r7.<org.xml.sax.helpers.LocatorImpl: void setSystemId(java.lang.String)>($r13);

     label2:
        goto label4;

     label3:
        $r16 := @caughtexception;

     label4:
        r0.<org.apache.xml.utils.TreeWalker: org.apache.xml.utils.DOMHelper m_dh> = r14;

        return;

        catch java.lang.SecurityException from label1 to label2 with label3;
    }

    public void <init>(org.xml.sax.ContentHandler, org.apache.xml.utils.DOMHelper)
    {
        org.apache.xml.utils.DOMHelper r13;
        org.apache.xml.utils.TreeWalker r0;
        org.xml.sax.helpers.LocatorImpl $r1, $r3, $r6;
        java.lang.StringBuffer $r5, $r8, $r10, $r11;
        java.lang.SecurityException $r14;
        org.xml.sax.ContentHandler r2, $r4;
        java.lang.String $r7, $r9, $r12;

        r0 := @this: org.apache.xml.utils.TreeWalker;

        r2 := @parameter0: org.xml.sax.ContentHandler;

        r13 := @parameter1: org.apache.xml.utils.DOMHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler> = null;

        $r1 = new org.xml.sax.helpers.LocatorImpl;

        specialinvoke $r1.<org.xml.sax.helpers.LocatorImpl: void <init>()>();

        r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.helpers.LocatorImpl m_locator> = $r1;

        r0.<org.apache.xml.utils.TreeWalker: boolean nextIsRaw> = 0;

        r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler> = r2;

        $r4 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler>;

        $r3 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.helpers.LocatorImpl m_locator>;

        interfaceinvoke $r4.<org.xml.sax.ContentHandler: void setDocumentLocator(org.xml.sax.Locator)>($r3);

     label1:
        $r6 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.helpers.LocatorImpl m_locator>;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r7 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.dir");

        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = <java.io.File: java.lang.String separator>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("dummy.xsl");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r6.<org.xml.sax.helpers.LocatorImpl: void setSystemId(java.lang.String)>($r12);

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

     label4:
        r0.<org.apache.xml.utils.TreeWalker: org.apache.xml.utils.DOMHelper m_dh> = r13;

        return;

        catch java.lang.SecurityException from label1 to label2 with label3;
    }

    public void <init>(org.xml.sax.ContentHandler)
    {
        org.apache.xml.utils.DOM2Helper $r12;
        org.xml.sax.helpers.LocatorImpl $r1, $r5, $r13;
        java.lang.StringBuffer $r4, $r7, $r9, $r10;
        java.lang.SecurityException $r15;
        org.xml.sax.ContentHandler r2, $r3, $r14;
        java.lang.String $r6, $r8, $r11;
        org.apache.xml.utils.TreeWalker r0;

        r0 := @this: org.apache.xml.utils.TreeWalker;

        r2 := @parameter0: org.xml.sax.ContentHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler> = null;

        $r1 = new org.xml.sax.helpers.LocatorImpl;

        specialinvoke $r1.<org.xml.sax.helpers.LocatorImpl: void <init>()>();

        r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.helpers.LocatorImpl m_locator> = $r1;

        r0.<org.apache.xml.utils.TreeWalker: boolean nextIsRaw> = 0;

        r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler> = r2;

        $r3 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler>;

        if $r3 == null goto label1;

        $r14 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler>;

        $r13 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.helpers.LocatorImpl m_locator>;

        interfaceinvoke $r14.<org.xml.sax.ContentHandler: void setDocumentLocator(org.xml.sax.Locator)>($r13);

     label1:
        $r5 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.helpers.LocatorImpl m_locator>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r6 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.dir");

        $r7 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = <java.io.File: java.lang.String separator>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("dummy.xsl");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r5.<org.xml.sax.helpers.LocatorImpl: void setSystemId(java.lang.String)>($r11);

     label2:
        goto label4;

     label3:
        $r15 := @caughtexception;

     label4:
        $r12 = new org.apache.xml.utils.DOM2Helper;

        specialinvoke $r12.<org.apache.xml.utils.DOM2Helper: void <init>()>();

        r0.<org.apache.xml.utils.TreeWalker: org.apache.xml.utils.DOMHelper m_dh> = $r12;

        return;

        catch java.lang.SecurityException from label1 to label2 with label3;
    }

    public void traverse(org.w3c.dom.Node) throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.TreeWalker r0;
        org.w3c.dom.Node r2, $r3, $r4, r6, r7;
        org.xml.sax.ContentHandler $r1, $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.xml.utils.TreeWalker;

        r6 := @parameter0: org.w3c.dom.Node;

        $r1 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler>;

        interfaceinvoke $r1.<org.xml.sax.ContentHandler: void startDocument()>();

        r2 = r6;

        goto label8;

     label1:
        virtualinvoke r0.<org.apache.xml.utils.TreeWalker: void startNode(org.w3c.dom.Node)>(r6);

        r7 = interfaceinvoke r6.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        goto label6;

     label2:
        virtualinvoke r0.<org.apache.xml.utils.TreeWalker: void endNode(org.w3c.dom.Node)>(r6);

        $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r6);

        if $z0 == 0 goto label3;

        goto label7;

     label3:
        $r3 = interfaceinvoke r6.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        r7 = $r3;

        if null != $r3 goto label6;

        $r4 = interfaceinvoke r6.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        r6 = $r4;

        if null == $r4 goto label4;

        $z1 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label6;

     label4:
        if null == $r4 goto label5;

        virtualinvoke r0.<org.apache.xml.utils.TreeWalker: void endNode(org.w3c.dom.Node)>($r4);

     label5:
        r7 = null;

        goto label7;

     label6:
        if null == r7 goto label2;

     label7:
        r6 = r7;

     label8:
        if null != r6 goto label1;

        $r5 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler>;

        interfaceinvoke $r5.<org.xml.sax.ContentHandler: void endDocument()>();

        return;
    }

    public void traverse(org.w3c.dom.Node, org.w3c.dom.Node) throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.TreeWalker r0;
        org.w3c.dom.Node r2, $r3, $r4, r6, r7;
        org.xml.sax.ContentHandler $r1, $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.xml.utils.TreeWalker;

        r6 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: org.w3c.dom.Node;

        $r1 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler>;

        interfaceinvoke $r1.<org.xml.sax.ContentHandler: void startDocument()>();

        goto label7;

     label1:
        virtualinvoke r0.<org.apache.xml.utils.TreeWalker: void startNode(org.w3c.dom.Node)>(r6);

        r7 = interfaceinvoke r6.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        goto label5;

     label2:
        virtualinvoke r0.<org.apache.xml.utils.TreeWalker: void endNode(org.w3c.dom.Node)>(r6);

        if null == r2 goto label3;

        $z1 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r6);

        if $z1 == 0 goto label3;

        goto label6;

     label3:
        $r3 = interfaceinvoke r6.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        r7 = $r3;

        if null != $r3 goto label5;

        $r4 = interfaceinvoke r6.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        r6 = $r4;

        if null == $r4 goto label4;

        if null == r2 goto label5;

        $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label5;

     label4:
        r7 = null;

        goto label6;

     label5:
        if null == r7 goto label2;

     label6:
        r6 = r7;

     label7:
        if null != r6 goto label1;

        $r5 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler>;

        interfaceinvoke $r5.<org.xml.sax.ContentHandler: void endDocument()>();

        return;
    }

    private final void dispatachChars(org.w3c.dom.Node) throws org.xml.sax.SAXException
    {
        org.apache.xml.dtm.ref.dom2dtm.DOM2DTM$CharacterNodeHandler $r8;
        org.w3c.dom.Text $r3;
        org.apache.xml.utils.TreeWalker r0;
        org.w3c.dom.Node r2;
        int $i0;
        char[] $r6;
        org.xml.sax.ContentHandler $r1, $r5, $r7;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: org.apache.xml.utils.TreeWalker;

        r2 := @parameter0: org.w3c.dom.Node;

        $r1 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler>;

        $z0 = $r1 instanceof org.apache.xml.dtm.ref.dom2dtm.DOM2DTM$CharacterNodeHandler;

        if $z0 == 0 goto label1;

        $r7 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler>;

        $r8 = (org.apache.xml.dtm.ref.dom2dtm.DOM2DTM$CharacterNodeHandler) $r7;

        interfaceinvoke $r8.<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM$CharacterNodeHandler: void characters(org.w3c.dom.Node)>(r2);

        goto label2;

     label1:
        $r3 = (org.w3c.dom.Text) r2;

        $r4 = interfaceinvoke $r3.<org.w3c.dom.CharacterData: java.lang.String getData()>();

        $r5 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler>;

        $r6 = virtualinvoke $r4.<java.lang.String: char[] toCharArray()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        interfaceinvoke $r5.<org.xml.sax.ContentHandler: void characters(char[],int,int)>($r6, 0, $i0);

     label2:
        return;
    }

    protected void startNode(org.w3c.dom.Node) throws org.xml.sax.SAXException
    {
        org.xml.sax.Locator r44;
        short $s0;
        java.lang.String $r6, $r10, $r12, $r13, $r17, $r25, $r27, $r29, $r32, $r33, $r39, $r41, $r46, r47;
        char[] $r9;
        org.apache.xml.utils.AttList $r52;
        org.xml.sax.ext.LexicalHandler $r16, r45, $r49, r50;
        org.w3c.dom.EntityReference r51;
        org.xml.sax.helpers.LocatorImpl $r3, $r4, $r36, $r37, $r38, $r40;
        org.apache.xml.utils.NodeConsumer $r43;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8;
        org.apache.xml.utils.DOMHelper $r28, $r30, $r35;
        org.w3c.dom.Comment $r5;
        org.w3c.dom.ProcessingInstruction r48;
        org.w3c.dom.Node r2, $r24;
        int $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8;
        org.w3c.dom.NamedNodeMap $r23;
        org.xml.sax.ContentHandler $r1, $r7, $r8, $r11, $r14, $r15, $r18, $r19, $r20, $r21, $r26, $r31, $r42;
        org.apache.xml.utils.TreeWalker r0;
        org.w3c.dom.Element $r22;

        r0 := @this: org.apache.xml.utils.TreeWalker;

        r2 := @parameter0: org.w3c.dom.Node;

        $r1 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler>;

        $z0 = $r1 instanceof org.apache.xml.utils.NodeConsumer;

        if $z0 == 0 goto label01;

        $r42 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler>;

        $r43 = (org.apache.xml.utils.NodeConsumer) $r42;

        interfaceinvoke $r43.<org.apache.xml.utils.NodeConsumer: void setOriginatingNode(org.w3c.dom.Node)>(r2);

     label01:
        $z1 = r2 instanceof org.xml.sax.Locator;

        if $z1 == 0 goto label02;

        r44 = (org.xml.sax.Locator) r2;

        $r36 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.helpers.LocatorImpl m_locator>;

        $i5 = interfaceinvoke r44.<org.xml.sax.Locator: int getColumnNumber()>();

        virtualinvoke $r36.<org.xml.sax.helpers.LocatorImpl: void setColumnNumber(int)>($i5);

        $r37 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.helpers.LocatorImpl m_locator>;

        $i6 = interfaceinvoke r44.<org.xml.sax.Locator: int getLineNumber()>();

        virtualinvoke $r37.<org.xml.sax.helpers.LocatorImpl: void setLineNumber(int)>($i6);

        $r38 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.helpers.LocatorImpl m_locator>;

        $r39 = interfaceinvoke r44.<org.xml.sax.Locator: java.lang.String getPublicId()>();

        virtualinvoke $r38.<org.xml.sax.helpers.LocatorImpl: void setPublicId(java.lang.String)>($r39);

        $r40 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.helpers.LocatorImpl m_locator>;

        $r41 = interfaceinvoke r44.<org.xml.sax.Locator: java.lang.String getSystemId()>();

        virtualinvoke $r40.<org.xml.sax.helpers.LocatorImpl: void setSystemId(java.lang.String)>($r41);

        goto label03;

     label02:
        $r3 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.helpers.LocatorImpl m_locator>;

        virtualinvoke $r3.<org.xml.sax.helpers.LocatorImpl: void setColumnNumber(int)>(0);

        $r4 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.helpers.LocatorImpl m_locator>;

        virtualinvoke $r4.<org.xml.sax.helpers.LocatorImpl: void setLineNumber(int)>(0);

     label03:
        $s0 = interfaceinvoke r2.<org.w3c.dom.Node: short getNodeType()>();

        $i8 = (int) $s0;

        tableswitch($i8)
        {
            case 1: goto label08;
            case 2: goto label28;
            case 3: goto label24;
            case 4: goto label19;
            case 5: goto label26;
            case 6: goto label28;
            case 7: goto label16;
            case 8: goto label04;
            case 9: goto label07;
            case 10: goto label28;
            case 11: goto label06;
            default: goto label28;
        };

     label04:
        $r5 = (org.w3c.dom.Comment) r2;

        $r6 = interfaceinvoke $r5.<org.w3c.dom.CharacterData: java.lang.String getData()>();

        $r7 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler>;

        $z2 = $r7 instanceof org.xml.sax.ext.LexicalHandler;

        if $z2 == 0 goto label05;

        $r8 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler>;

        r45 = (org.xml.sax.ext.LexicalHandler) $r8;

        $r9 = virtualinvoke $r6.<java.lang.String: char[] toCharArray()>();

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        interfaceinvoke r45.<org.xml.sax.ext.LexicalHandler: void comment(char[],int,int)>($r9, 0, $i1);

     label05:
        goto label28;

     label06:
        goto label28;

     label07:
        goto label28;

     label08:
        $r22 = (org.w3c.dom.Element) r2;

        $r23 = interfaceinvoke $r22.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>();

        $i2 = interfaceinvoke $r23.<org.w3c.dom.NamedNodeMap: int getLength()>();

        i7 = 0;

        goto label14;

     label09:
        $r24 = interfaceinvoke $r23.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i7);

        $r25 = interfaceinvoke $r24.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z6 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z6 != 0 goto label10;

        $z7 = virtualinvoke $r25.<java.lang.String: boolean startsWith(java.lang.String)>("xmlns:");

        if $z7 == 0 goto label13;

     label10:
        $i3 = virtualinvoke $r25.<java.lang.String: int indexOf(java.lang.String)>(":");

        if $i3 >= 0 goto label11;

        $r46 = "";

        goto label12;

     label11:
        $i4 = $i3 + 1;

        $r46 = virtualinvoke $r25.<java.lang.String: java.lang.String substring(int)>($i4);

     label12:
        $r26 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler>;

        $r27 = interfaceinvoke $r24.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        interfaceinvoke $r26.<org.xml.sax.ContentHandler: void startPrefixMapping(java.lang.String,java.lang.String)>($r46, $r27);

     label13:
        i7 = i7 + 1;

     label14:
        if i7 < $i2 goto label09;

        $r28 = r0.<org.apache.xml.utils.TreeWalker: org.apache.xml.utils.DOMHelper m_dh>;

        $r29 = virtualinvoke $r28.<org.apache.xml.utils.DOMHelper: java.lang.String getNamespaceOfNode(org.w3c.dom.Node)>(r2);

        r47 = $r29;

        if null != $r29 goto label15;

        r47 = "";

     label15:
        $r31 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler>;

        $r30 = r0.<org.apache.xml.utils.TreeWalker: org.apache.xml.utils.DOMHelper m_dh>;

        $r32 = virtualinvoke $r30.<org.apache.xml.utils.DOMHelper: java.lang.String getLocalNameOfNode(org.w3c.dom.Node)>(r2);

        $r33 = interfaceinvoke r2.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r52 = new org.apache.xml.utils.AttList;

        $r35 = r0.<org.apache.xml.utils.TreeWalker: org.apache.xml.utils.DOMHelper m_dh>;

        specialinvoke $r52.<org.apache.xml.utils.AttList: void <init>(org.w3c.dom.NamedNodeMap,org.apache.xml.utils.DOMHelper)>($r23, $r35);

        interfaceinvoke $r31.<org.xml.sax.ContentHandler: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>(r47, $r32, $r33, $r52);

        goto label28;

     label16:
        r48 = (org.w3c.dom.ProcessingInstruction) r2;

        $r10 = interfaceinvoke r48.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z3 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("xslt-next-is-raw");

        if $z3 == 0 goto label17;

        r0.<org.apache.xml.utils.TreeWalker: boolean nextIsRaw> = 1;

        goto label18;

     label17:
        $r11 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler>;

        $r12 = interfaceinvoke r48.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r13 = interfaceinvoke r48.<org.w3c.dom.ProcessingInstruction: java.lang.String getData()>();

        interfaceinvoke $r11.<org.xml.sax.ContentHandler: void processingInstruction(java.lang.String,java.lang.String)>($r12, $r13);

     label18:
        goto label28;

     label19:
        $r18 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler>;

        z8 = $r18 instanceof org.xml.sax.ext.LexicalHandler;

        if z8 == 0 goto label20;

        $r19 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler>;

        $r49 = (org.xml.sax.ext.LexicalHandler) $r19;

        goto label21;

     label20:
        $r49 = null;

     label21:
        r50 = $r49;

        if z8 == 0 goto label22;

        interfaceinvoke $r49.<org.xml.sax.ext.LexicalHandler: void startCDATA()>();

     label22:
        specialinvoke r0.<org.apache.xml.utils.TreeWalker: void dispatachChars(org.w3c.dom.Node)>(r2);

        if z8 == 0 goto label23;

        interfaceinvoke r50.<org.xml.sax.ext.LexicalHandler: void endCDATA()>();

     label23:
        goto label28;

     label24:
        $z5 = r0.<org.apache.xml.utils.TreeWalker: boolean nextIsRaw>;

        if $z5 == 0 goto label25;

        r0.<org.apache.xml.utils.TreeWalker: boolean nextIsRaw> = 0;

        $r20 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler>;

        interfaceinvoke $r20.<org.xml.sax.ContentHandler: void processingInstruction(java.lang.String,java.lang.String)>("javax.xml.transform.disable-output-escaping", "");

        specialinvoke r0.<org.apache.xml.utils.TreeWalker: void dispatachChars(org.w3c.dom.Node)>(r2);

        $r21 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler>;

        interfaceinvoke $r21.<org.xml.sax.ContentHandler: void processingInstruction(java.lang.String,java.lang.String)>("javax.xml.transform.enable-output-escaping", "");

        goto label28;

     label25:
        specialinvoke r0.<org.apache.xml.utils.TreeWalker: void dispatachChars(org.w3c.dom.Node)>(r2);

        goto label28;

     label26:
        r51 = (org.w3c.dom.EntityReference) r2;

        $r14 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler>;

        $z4 = $r14 instanceof org.xml.sax.ext.LexicalHandler;

        if $z4 == 0 goto label27;

        $r15 = r0.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler>;

        $r16 = (org.xml.sax.ext.LexicalHandler) $r15;

        $r17 = interfaceinvoke r51.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        interfaceinvoke $r16.<org.xml.sax.ext.LexicalHandler: void startEntity(java.lang.String)>($r17);

     label27:
        goto label28;

     label28:
        return;
    }

    protected void endNode(org.w3c.dom.Node) throws org.xml.sax.SAXException
    {
        org.w3c.dom.EntityReference r18;
        org.xml.sax.ext.LexicalHandler r19;
        short $s0;
        org.w3c.dom.Node r0, $r13;
        int $i1, $i2, $i3, i4, $i5;
        org.w3c.dom.NamedNodeMap $r12;
        org.xml.sax.ContentHandler $r2, $r3, $r8, $r15;
        java.lang.String $r4, $r6, $r9, $r10, $r14, r16, $r17;
        boolean $z0, $z1, $z2;
        org.apache.xml.utils.DOMHelper $r5, $r7;
        org.apache.xml.utils.TreeWalker r1;
        org.w3c.dom.Element $r11;

        r1 := @this: org.apache.xml.utils.TreeWalker;

        r0 := @parameter0: org.w3c.dom.Node;

        $s0 = interfaceinvoke r0.<org.w3c.dom.Node: short getNodeType()>();

        $i5 = (int) $s0;

        tableswitch($i5)
        {
            case 1: goto label02;
            case 2: goto label13;
            case 3: goto label13;
            case 4: goto label10;
            case 5: goto label11;
            case 6: goto label13;
            case 7: goto label13;
            case 8: goto label13;
            case 9: goto label01;
            default: goto label13;
        };

     label01:
        goto label13;

     label02:
        $r5 = r1.<org.apache.xml.utils.TreeWalker: org.apache.xml.utils.DOMHelper m_dh>;

        $r6 = virtualinvoke $r5.<org.apache.xml.utils.DOMHelper: java.lang.String getNamespaceOfNode(org.w3c.dom.Node)>(r0);

        r16 = $r6;

        if null != $r6 goto label03;

        r16 = "";

     label03:
        $r8 = r1.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler>;

        $r7 = r1.<org.apache.xml.utils.TreeWalker: org.apache.xml.utils.DOMHelper m_dh>;

        $r9 = virtualinvoke $r7.<org.apache.xml.utils.DOMHelper: java.lang.String getLocalNameOfNode(org.w3c.dom.Node)>(r0);

        $r10 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        interfaceinvoke $r8.<org.xml.sax.ContentHandler: void endElement(java.lang.String,java.lang.String,java.lang.String)>(r16, $r9, $r10);

        $r11 = (org.w3c.dom.Element) r0;

        $r12 = interfaceinvoke $r11.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>();

        $i1 = interfaceinvoke $r12.<org.w3c.dom.NamedNodeMap: int getLength()>();

        i4 = 0;

        goto label09;

     label04:
        $r13 = interfaceinvoke $r12.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i4);

        $r14 = interfaceinvoke $r13.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z1 != 0 goto label05;

        $z2 = virtualinvoke $r14.<java.lang.String: boolean startsWith(java.lang.String)>("xmlns:");

        if $z2 == 0 goto label08;

     label05:
        $i2 = virtualinvoke $r14.<java.lang.String: int indexOf(java.lang.String)>(":");

        if $i2 >= 0 goto label06;

        $r17 = "";

        goto label07;

     label06:
        $i3 = $i2 + 1;

        $r17 = virtualinvoke $r14.<java.lang.String: java.lang.String substring(int)>($i3);

     label07:
        $r15 = r1.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler>;

        interfaceinvoke $r15.<org.xml.sax.ContentHandler: void endPrefixMapping(java.lang.String)>($r17);

     label08:
        i4 = i4 + 1;

     label09:
        if i4 < $i1 goto label04;

        goto label13;

     label10:
        goto label13;

     label11:
        r18 = (org.w3c.dom.EntityReference) r0;

        $r2 = r1.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler>;

        $z0 = $r2 instanceof org.xml.sax.ext.LexicalHandler;

        if $z0 == 0 goto label12;

        $r3 = r1.<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler m_contentHandler>;

        r19 = (org.xml.sax.ext.LexicalHandler) $r3;

        $r4 = interfaceinvoke r18.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        interfaceinvoke r19.<org.xml.sax.ext.LexicalHandler: void endEntity(java.lang.String)>($r4);

     label12:
        goto label13;

     label13:
        return;
    }
}
