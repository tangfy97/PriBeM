public final class org.apache.poi.hdf.extractor.Utils extends java.lang.Object
{

    public void <init>()
    {
        org.apache.poi.hdf.extractor.Utils r0;

        r0 := @this: org.apache.poi.hdf.extractor.Utils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static short convertBytesToShort(byte, byte)
    {
        short $s3;
        byte b0, b1;
        int $i2;

        b0 := @parameter0: byte;

        b1 := @parameter1: byte;

        $i2 = staticinvoke <org.apache.poi.hdf.extractor.Utils: int convertBytesToInt(byte,byte,byte,byte)>(0, 0, b0, b1);

        $s3 = (short) $i2;

        return $s3;
    }

    public static int convertBytesToInt(byte, byte, byte, byte)
    {
        short s1, s3, s5, s7, $s14, $s15, $s16, $s17;
        byte b0, b2, b4, b6;
        int $i8, $i9, $i10, $i11, $i12, $i13, $i18, $i19, $i20, $i21;

        b0 := @parameter0: byte;

        b2 := @parameter1: byte;

        b4 := @parameter2: byte;

        b6 := @parameter3: byte;

        $s14 = (short) b0;

        s1 = 255 & $s14;

        $s15 = (short) b2;

        s3 = 255 & $s15;

        $s16 = (short) b4;

        s5 = 255 & $s16;

        $s17 = (short) b6;

        s7 = 255 & $s17;

        $i18 = (int) s1;

        $i9 = $i18 << 24;

        $i19 = (int) s3;

        $i8 = $i19 << 16;

        $i11 = $i9 | $i8;

        $i20 = (int) s5;

        $i10 = $i20 << 8;

        $i12 = $i11 | $i10;

        $i21 = (int) s7;

        $i13 = $i12 | $i21;

        return $i13;
    }

    public static short convertBytesToShort(byte[], int)
    {
        byte[] r0;
        short $s4;
        byte $b2, $b3;
        int i0, $i1;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = i0 + 1;

        $b3 = r0[$i1];

        $b2 = r0[i0];

        $s4 = staticinvoke <org.apache.poi.hdf.extractor.Utils: short convertBytesToShort(byte,byte)>($b3, $b2);

        return $s4;
    }

    public static int convertBytesToInt(byte[], int)
    {
        byte[] r0;
        byte $b4, $b5, $b6, $b7;
        int i0, $i1, $i2, $i3, $i8;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = i0 + 3;

        $b7 = r0[$i1];

        $i2 = i0 + 2;

        $b6 = r0[$i2];

        $i3 = i0 + 1;

        $b5 = r0[$i3];

        $b4 = r0[i0];

        $i8 = staticinvoke <org.apache.poi.hdf.extractor.Utils: int convertBytesToInt(byte,byte,byte,byte)>($b7, $b6, $b5, $b4);

        return $i8;
    }

    public static int convertUnsignedByteToInt(byte)
    {
        short $s1, $s2;
        byte b0;
        int $i3;

        b0 := @parameter0: byte;

        $s2 = (short) b0;

        $s1 = 255 & $s2;

        $i3 = (int) $s1;

        return $i3;
    }

    public static char getUnicodeCharacter(byte[], int)
    {
        byte[] r0;
        short $s1;
        int i0;
        char $c2;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $s1 = staticinvoke <org.apache.poi.hdf.extractor.Utils: short convertBytesToShort(byte[],int)>(r0, i0);

        $c2 = (char) $s1;

        return $c2;
    }
}
