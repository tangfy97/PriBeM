class org.apache.xml.dtm.ref.SecuritySupport extends java.lang.Object
{
    private static final java.lang.Object securitySupport;

    void <init>()
    {
        org.apache.xml.dtm.ref.SecuritySupport r0;

        r0 := @this: org.apache.xml.dtm.ref.SecuritySupport;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static org.apache.xml.dtm.ref.SecuritySupport getInstance()
    {
        org.apache.xml.dtm.ref.SecuritySupport $r1;
        java.lang.Object $r0;

        $r0 = <org.apache.xml.dtm.ref.SecuritySupport: java.lang.Object securitySupport>;

        $r1 = (org.apache.xml.dtm.ref.SecuritySupport) $r0;

        return $r1;
    }

    java.lang.ClassLoader getContextClassLoader()
    {
        org.apache.xml.dtm.ref.SecuritySupport r0;

        r0 := @this: org.apache.xml.dtm.ref.SecuritySupport;

        return null;
    }

    java.lang.ClassLoader getSystemClassLoader()
    {
        org.apache.xml.dtm.ref.SecuritySupport r0;

        r0 := @this: org.apache.xml.dtm.ref.SecuritySupport;

        return null;
    }

    java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader)
    {
        org.apache.xml.dtm.ref.SecuritySupport r0;
        java.lang.ClassLoader r1;

        r0 := @this: org.apache.xml.dtm.ref.SecuritySupport;

        r1 := @parameter0: java.lang.ClassLoader;

        return null;
    }

    java.lang.String getSystemProperty(java.lang.String)
    {
        org.apache.xml.dtm.ref.SecuritySupport r2;
        java.lang.String r0, $r1;

        r2 := @this: org.apache.xml.dtm.ref.SecuritySupport;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r0);

        return $r1;
    }

    java.io.FileInputStream getFileInputStream(java.io.File) throws java.io.FileNotFoundException
    {
        org.apache.xml.dtm.ref.SecuritySupport r2;
        java.io.FileInputStream $r0;
        java.io.File r1;

        r2 := @this: org.apache.xml.dtm.ref.SecuritySupport;

        r1 := @parameter0: java.io.File;

        $r0 = new java.io.FileInputStream;

        specialinvoke $r0.<java.io.FileInputStream: void <init>(java.io.File)>(r1);

        return $r0;
    }

    java.io.InputStream getResourceAsStream(java.lang.ClassLoader, java.lang.String)
    {
        org.apache.xml.dtm.ref.SecuritySupport r2;
        java.lang.ClassLoader r0;
        java.lang.String r1;
        java.io.InputStream r3;

        r2 := @this: org.apache.xml.dtm.ref.SecuritySupport;

        r0 := @parameter0: java.lang.ClassLoader;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        r3 = staticinvoke <java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>(r1);

        goto label2;

     label1:
        r3 = virtualinvoke r0.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r1);

     label2:
        return r3;
    }

    boolean getFileExists(java.io.File)
    {
        org.apache.xml.dtm.ref.SecuritySupport r1;
        java.io.File r0;
        boolean $z0;

        r1 := @this: org.apache.xml.dtm.ref.SecuritySupport;

        r0 := @parameter0: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean exists()>();

        return $z0;
    }

    long getLastModified(java.io.File)
    {
        org.apache.xml.dtm.ref.SecuritySupport r1;
        long $l0;
        java.io.File r0;

        r1 := @this: org.apache.xml.dtm.ref.SecuritySupport;

        r0 := @parameter0: java.io.File;

        $l0 = virtualinvoke r0.<java.io.File: long lastModified()>();

        return $l0;
    }

    static void <clinit>()
    {
        org.apache.xml.dtm.ref.SecuritySupport $r1, $r3, $r5, r6;
        java.lang.Throwable $r2;
        org.apache.xml.dtm.ref.SecuritySupport12 $r0;
        java.lang.Exception $r4;

        r6 = null;

     label01:
        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.security.AccessController");

        $r0 = new org.apache.xml.dtm.ref.SecuritySupport12;

        specialinvoke $r0.<org.apache.xml.dtm.ref.SecuritySupport12: void <init>()>();

        r6 = $r0;

     label02:
        goto label09;

     label03:
        goto label08;

     label04:
        $r4 := @caughtexception;

        goto label11;

     label05:
        goto label08;

     label06:
        $r2 := @caughtexception;

        goto label13;

     label07:
        throw $r2;

     label08:
        return;

     label09:
        if $r0 != null goto label10;

        $r1 = new org.apache.xml.dtm.ref.SecuritySupport;

        specialinvoke $r1.<org.apache.xml.dtm.ref.SecuritySupport: void <init>()>();

        r6 = $r1;

     label10:
        <org.apache.xml.dtm.ref.SecuritySupport: java.lang.Object securitySupport> = r6;

        goto label03;

     label11:
        if null != null goto label12;

        $r5 = new org.apache.xml.dtm.ref.SecuritySupport;

        specialinvoke $r5.<org.apache.xml.dtm.ref.SecuritySupport: void <init>()>();

        r6 = $r5;

     label12:
        <org.apache.xml.dtm.ref.SecuritySupport: java.lang.Object securitySupport> = r6;

        goto label05;

     label13:
        if r6 != null goto label14;

        $r3 = new org.apache.xml.dtm.ref.SecuritySupport;

        specialinvoke $r3.<org.apache.xml.dtm.ref.SecuritySupport: void <init>()>();

        r6 = $r3;

     label14:
        <org.apache.xml.dtm.ref.SecuritySupport: java.lang.Object securitySupport> = r6;

        goto label07;

        catch java.lang.Exception from label01 to label02 with label04;
        catch java.lang.Throwable from label01 to label06 with label06;
    }
}
