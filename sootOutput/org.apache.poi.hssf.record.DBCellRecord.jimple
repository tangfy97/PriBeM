public final class org.apache.poi.hssf.record.DBCellRecord extends org.apache.poi.hssf.record.StandardRecord
{
    public static final short sid;
    public static final int BLOCK_SIZE;
    private final int field_1_row_offset;
    private final short[] field_2_cell_offsets;

    void <init>(int, short[])
    {
        org.apache.poi.hssf.record.DBCellRecord r0;
        int i0;
        short[] r1;

        r0 := @this: org.apache.poi.hssf.record.DBCellRecord;

        i0 := @parameter0: int;

        r1 := @parameter1: short[];

        specialinvoke r0.<org.apache.poi.hssf.record.StandardRecord: void <init>()>();

        r0.<org.apache.poi.hssf.record.DBCellRecord: int field_1_row_offset> = i0;

        r0.<org.apache.poi.hssf.record.DBCellRecord: short[] field_2_cell_offsets> = r1;

        return;
    }

    public void <init>(org.apache.poi.hssf.record.RecordInputStream)
    {
        org.apache.poi.hssf.record.DBCellRecord r0;
        short $s4;
        org.apache.poi.hssf.record.RecordInputStream r1;
        int $i0, $i1, $i2, $i3, i5;
        short[] $r2, $r3, $r4;

        r0 := @this: org.apache.poi.hssf.record.DBCellRecord;

        r1 := @parameter0: org.apache.poi.hssf.record.RecordInputStream;

        specialinvoke r0.<org.apache.poi.hssf.record.StandardRecord: void <init>()>();

        $i0 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: int readUShort()>();

        r0.<org.apache.poi.hssf.record.DBCellRecord: int field_1_row_offset> = $i0;

        $i1 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: int remaining()>();

        $i2 = $i1 / 2;

        $r2 = newarray (short)[$i2];

        r0.<org.apache.poi.hssf.record.DBCellRecord: short[] field_2_cell_offsets> = $r2;

        i5 = 0;

     label1:
        $r3 = r0.<org.apache.poi.hssf.record.DBCellRecord: short[] field_2_cell_offsets>;

        $i3 = lengthof $r3;

        if i5 >= $i3 goto label2;

        $r4 = r0.<org.apache.poi.hssf.record.DBCellRecord: short[] field_2_cell_offsets>;

        $s4 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: short readShort()>();

        $r4[i5] = $s4;

        i5 = i5 + 1;

        goto label1;

     label2:
        return;
    }

    public java.lang.String toString()
    {
        short $s2;
        java.lang.StringBuffer $r1, $r4, $r7, $r8, $r9, $r12, $r13;
        int $i0, $i1, i3, $i4;
        java.lang.String $r6;
        org.apache.poi.hssf.record.DBCellRecord r2;
        char[] $r3, $r11;
        short[] $r5, $r10;

        r2 := @this: org.apache.poi.hssf.record.DBCellRecord;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[DBCELL]\n");

        $r1 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    .rowoffset = ");

        $i0 = r2.<org.apache.poi.hssf.record.DBCellRecord: int field_1_row_offset>;

        $r3 = staticinvoke <org.apache.poi.util.HexDump: char[] intToHex(int)>($i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r3);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        i3 = 0;

     label1:
        $r5 = r2.<org.apache.poi.hssf.record.DBCellRecord: short[] field_2_cell_offsets>;

        $i1 = lengthof $r5;

        if i3 >= $i1 goto label2;

        $r7 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    .cell_");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = ");

        $r10 = r2.<org.apache.poi.hssf.record.DBCellRecord: short[] field_2_cell_offsets>;

        $s2 = $r10[i3];

        $i4 = (int) $s2;

        $r11 = staticinvoke <org.apache.poi.util.HexDump: char[] shortToHex(int)>($i4);

        $r12 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r11);

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        i3 = i3 + 1;

        goto label1;

     label2:
        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[/DBCELL]\n");

        $r6 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    public void serialize(org.apache.poi.util.LittleEndianOutput)
    {
        org.apache.poi.hssf.record.DBCellRecord r1;
        short $s2;
        org.apache.poi.util.LittleEndianOutput r0;
        int $i0, $i1, i3, $i4;
        short[] $r2, $r3;

        r1 := @this: org.apache.poi.hssf.record.DBCellRecord;

        r0 := @parameter0: org.apache.poi.util.LittleEndianOutput;

        $i0 = r1.<org.apache.poi.hssf.record.DBCellRecord: int field_1_row_offset>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeInt(int)>($i0);

        i3 = 0;

     label1:
        $r2 = r1.<org.apache.poi.hssf.record.DBCellRecord: short[] field_2_cell_offsets>;

        $i1 = lengthof $r2;

        if i3 >= $i1 goto label2;

        $r3 = r1.<org.apache.poi.hssf.record.DBCellRecord: short[] field_2_cell_offsets>;

        $s2 = $r3[i3];

        $i4 = (int) $s2;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i4);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    protected int getDataSize()
    {
        org.apache.poi.hssf.record.DBCellRecord r0;
        int $i0, $i1, $i2;
        short[] $r1;

        r0 := @this: org.apache.poi.hssf.record.DBCellRecord;

        $r1 = r0.<org.apache.poi.hssf.record.DBCellRecord: short[] field_2_cell_offsets>;

        $i0 = lengthof $r1;

        $i1 = $i0 * 2;

        $i2 = 4 + $i1;

        return $i2;
    }

    public static int calculateSizeOfRecords(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i3 = i0 * 8;

        $i2 = i1 * 2;

        $i4 = $i3 + $i2;

        return $i4;
    }

    public short getSid()
    {
        org.apache.poi.hssf.record.DBCellRecord r0;

        r0 := @this: org.apache.poi.hssf.record.DBCellRecord;

        return 215;
    }

    public java.lang.Object clone()
    {
        org.apache.poi.hssf.record.DBCellRecord r0;

        r0 := @this: org.apache.poi.hssf.record.DBCellRecord;

        return r0;
    }

    public static void <clinit>()
    {
        <org.apache.poi.hssf.record.DBCellRecord: int BLOCK_SIZE> = 32;

        <org.apache.poi.hssf.record.DBCellRecord: short sid> = 215;

        return;
    }
}
