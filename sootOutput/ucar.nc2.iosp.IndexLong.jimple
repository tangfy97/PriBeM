public class ucar.nc2.iosp.IndexLong extends java.lang.Object
{
    private int[] shape;
    private long[] stride;
    private int rank;
    private int offset;
    private int[] current;

    public void <init>()
    {
        ucar.nc2.iosp.IndexLong r0;
        long[] $r2, $r5;
        int[] $r1, $r3, $r4;
        int $i0, $i1;

        r0 := @this: ucar.nc2.iosp.IndexLong;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (int)[1];

        $r1[0] = 1;

        r0.<ucar.nc2.iosp.IndexLong: int[] shape> = $r1;

        $r2 = newarray (long)[1];

        $r2[0] = 1L;

        r0.<ucar.nc2.iosp.IndexLong: long[] stride> = $r2;

        $r3 = r0.<ucar.nc2.iosp.IndexLong: int[] shape>;

        $i0 = lengthof $r3;

        r0.<ucar.nc2.iosp.IndexLong: int rank> = $i0;

        $i1 = r0.<ucar.nc2.iosp.IndexLong: int rank>;

        $r4 = newarray (int)[$i1];

        r0.<ucar.nc2.iosp.IndexLong: int[] current> = $r4;

        $r5 = r0.<ucar.nc2.iosp.IndexLong: long[] stride>;

        $r5[0] = 1L;

        r0.<ucar.nc2.iosp.IndexLong: int offset> = 0;

        return;
    }

    public void <init>(int[], long[])
    {
        ucar.nc2.iosp.IndexLong r0;
        long[] r4, $r5, $r6;
        int[] r1, $r2, $r3, $r7, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: ucar.nc2.iosp.IndexLong;

        r1 := @parameter0: int[];

        r4 := @parameter1: long[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = lengthof r1;

        $r2 = newarray (int)[$i0];

        r0.<ucar.nc2.iosp.IndexLong: int[] shape> = $r2;

        $r3 = r0.<ucar.nc2.iosp.IndexLong: int[] shape>;

        $i1 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r3, 0, $i1);

        $i2 = lengthof r4;

        $r5 = newarray (long)[$i2];

        r0.<ucar.nc2.iosp.IndexLong: long[] stride> = $r5;

        $r6 = r0.<ucar.nc2.iosp.IndexLong: long[] stride>;

        $i3 = lengthof r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, $r6, 0, $i3);

        $r7 = r0.<ucar.nc2.iosp.IndexLong: int[] shape>;

        $i4 = lengthof $r7;

        r0.<ucar.nc2.iosp.IndexLong: int rank> = $i4;

        $i5 = r0.<ucar.nc2.iosp.IndexLong: int rank>;

        $r8 = newarray (int)[$i5];

        r0.<ucar.nc2.iosp.IndexLong: int[] current> = $r8;

        r0.<ucar.nc2.iosp.IndexLong: int offset> = 0;

        return;
    }

    public static long computeSize(int[])
    {
        int[] r0;
        int $i0, $i1, i4, $i6;
        long $l2, l3;

        r0 := @parameter0: int[];

        l3 = 1L;

        $i0 = lengthof r0;

        i4 = $i0 - 1;

     label1:
        if i4 < 0 goto label2;

        $i1 = r0[i4];

        $l2 = (long) $i1;

        l3 = l3 * $l2;

        $i6 = (int) -1;

        i4 = i4 + $i6;

        goto label1;

     label2:
        return l3;
    }

    public long incr()
    {
        long $l1;
        ucar.nc2.iosp.IndexLong r0;
        int[] $r1, $r2, $r3, $r4;
        int $i0, $i2, $i3, $i4, $i5, i6, $i8;

        r0 := @this: ucar.nc2.iosp.IndexLong;

        $i0 = r0.<ucar.nc2.iosp.IndexLong: int rank>;

        i6 = $i0 - 1;

     label1:
        if i6 < 0 goto label3;

        $r1 = r0.<ucar.nc2.iosp.IndexLong: int[] current>;

        $i2 = $r1[i6];

        $i3 = $i2 + 1;

        $r1[i6] = $i3;

        $r2 = r0.<ucar.nc2.iosp.IndexLong: int[] current>;

        $i5 = $r2[i6];

        $r3 = r0.<ucar.nc2.iosp.IndexLong: int[] shape>;

        $i4 = $r3[i6];

        if $i5 >= $i4 goto label2;

        goto label3;

     label2:
        $r4 = r0.<ucar.nc2.iosp.IndexLong: int[] current>;

        $r4[i6] = 0;

        $i8 = (int) -1;

        i6 = i6 + $i8;

        goto label1;

     label3:
        $l1 = virtualinvoke r0.<ucar.nc2.iosp.IndexLong: long currentElement()>();

        return $l1;
    }

    public long currentElement()
    {
        long $l3, $l4, $l5, l6;
        ucar.nc2.iosp.IndexLong r0;
        long[] $r2;
        int[] $r1;
        int $i0, $i1, $i2, i7;

        r0 := @this: ucar.nc2.iosp.IndexLong;

        $i0 = r0.<ucar.nc2.iosp.IndexLong: int offset>;

        l6 = (long) $i0;

        i7 = 0;

     label1:
        $i1 = r0.<ucar.nc2.iosp.IndexLong: int rank>;

        if i7 >= $i1 goto label2;

        $r1 = r0.<ucar.nc2.iosp.IndexLong: int[] current>;

        $i2 = $r1[i7];

        $l4 = (long) $i2;

        $r2 = r0.<ucar.nc2.iosp.IndexLong: long[] stride>;

        $l3 = $r2[i7];

        $l5 = $l4 * $l3;

        l6 = l6 + $l5;

        i7 = i7 + 1;

        goto label1;

     label2:
        return l6;
    }
}
