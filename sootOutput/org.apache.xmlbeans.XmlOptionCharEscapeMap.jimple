public class org.apache.xmlbeans.XmlOptionCharEscapeMap extends java.lang.Object
{
    public static final int PREDEF_ENTITY;
    public static final int DECIMAL;
    public static final int HEXADECIMAL;
    private java.util.HashMap _charMap;
    private static final java.util.HashMap _predefEntities;

    public void <init>()
    {
        java.util.HashMap $r1;
        org.apache.xmlbeans.XmlOptionCharEscapeMap r0;

        r0 := @this: org.apache.xmlbeans.XmlOptionCharEscapeMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xmlbeans.XmlOptionCharEscapeMap: java.util.HashMap _charMap> = $r1;

        return;
    }

    public boolean containsChar(char)
    {
        java.lang.Character $r1;
        org.apache.xmlbeans.XmlOptionCharEscapeMap r0;
        char c0;
        java.util.HashMap $r2;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.XmlOptionCharEscapeMap;

        c0 := @parameter0: char;

        $r2 = r0.<org.apache.xmlbeans.XmlOptionCharEscapeMap: java.util.HashMap _charMap>;

        $r1 = new java.lang.Character;

        specialinvoke $r1.<java.lang.Character: void <init>(char)>(c0);

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r1);

        return $z0;
    }

    public void addMapping(char, int) throws org.apache.xmlbeans.XmlException
    {
        org.apache.xmlbeans.XmlOptionCharEscapeMap r2;
        java.util.HashMap $r4, $r10, $r15, $r18;
        java.lang.Character $r21;
        java.lang.StringBuffer $r5, $r6, $r7, $r11, $r12, $r13, $r23, $r24;
        int i1, $i2, $i3;
        java.lang.String $r1, $r8, $r14, r17;
        char c0;
        org.apache.xmlbeans.XmlException $r22, $r25;
        java.lang.Object $r16;

        r2 := @this: org.apache.xmlbeans.XmlOptionCharEscapeMap;

        c0 := @parameter0: char;

        i1 := @parameter1: int;

        $r21 = new java.lang.Character;

        specialinvoke $r21.<java.lang.Character: void <init>(char)>(c0);

        tableswitch(i1)
        {
            case 0: goto label1;
            case 1: goto label3;
            case 2: goto label4;
            default: goto label5;
        };

     label1:
        $r15 = <org.apache.xmlbeans.XmlOptionCharEscapeMap: java.util.HashMap _predefEntities>;

        $r16 = virtualinvoke $r15.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r21);

        r17 = (java.lang.String) $r16;

        if r17 != null goto label2;

        $r22 = new org.apache.xmlbeans.XmlException;

        specialinvoke $r22.<org.apache.xmlbeans.XmlException: void <init>(java.lang.String)>("XmlOptionCharEscapeMap.addMapping(): the PREDEF_ENTITY mode can only be used for the following characters: <, >, &, \" and \'");

        throw $r22;

     label2:
        $r18 = r2.<org.apache.xmlbeans.XmlOptionCharEscapeMap: java.util.HashMap _charMap>;

        virtualinvoke $r18.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, r17);

        goto label6;

     label3:
        $r10 = r2.<org.apache.xmlbeans.XmlOptionCharEscapeMap: java.util.HashMap _charMap>;

        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&#");

        $i2 = (int) c0;

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r14);

        goto label6;

     label4:
        $i3 = (int) c0;

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i3);

        $r4 = r2.<org.apache.xmlbeans.XmlOptionCharEscapeMap: java.util.HashMap _charMap>;

        $r24 = new java.lang.StringBuffer;

        specialinvoke $r24.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&#x");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r8);

        goto label6;

     label5:
        $r25 = new org.apache.xmlbeans.XmlException;

        specialinvoke $r25.<org.apache.xmlbeans.XmlException: void <init>(java.lang.String)>("XmlOptionCharEscapeMap.addMapping(): mode must be PREDEF_ENTITY, DECIMAL or HEXADECIMAL");

        throw $r25;

     label6:
        return;
    }

    public void addMappings(char, char, int) throws org.apache.xmlbeans.XmlException
    {
        org.apache.xmlbeans.XmlOptionCharEscapeMap r0;
        char c0, c1, c4;
        org.apache.xmlbeans.XmlException $r2;
        int i2, $i3, $i5, $i6, $i7, $i8, $i9;

        r0 := @this: org.apache.xmlbeans.XmlOptionCharEscapeMap;

        c0 := @parameter0: char;

        c1 := @parameter1: char;

        i2 := @parameter2: int;

        $i5 = (int) c0;

        $i6 = (int) c1;

        if $i5 <= $i6 goto label1;

        $r2 = new org.apache.xmlbeans.XmlException;

        specialinvoke $r2.<org.apache.xmlbeans.XmlException: void <init>(java.lang.String)>("XmlOptionCharEscapeMap.addMappings(): ch1 must be <= ch2");

        throw $r2;

     label1:
        c4 = c0;

     label2:
        $i7 = (int) c4;

        $i8 = (int) c1;

        if $i7 > $i8 goto label3;

        virtualinvoke r0.<org.apache.xmlbeans.XmlOptionCharEscapeMap: void addMapping(char,int)>(c4, i2);

        $i9 = (int) c4;

        $i3 = $i9 + 1;

        c4 = (char) $i3;

        goto label2;

     label3:
        return;
    }

    public java.lang.String getEscapedString(char)
    {
        java.lang.Character $r1;
        org.apache.xmlbeans.XmlOptionCharEscapeMap r0;
        char c0;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.xmlbeans.XmlOptionCharEscapeMap;

        c0 := @parameter0: char;

        $r2 = r0.<org.apache.xmlbeans.XmlOptionCharEscapeMap: java.util.HashMap _charMap>;

        $r1 = new java.lang.Character;

        specialinvoke $r1.<java.lang.Character: void <init>(char)>(c0);

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0, $r2, $r4, $r6, $r8, $r10;
        java.lang.Character $r1, $r3, $r5, $r7, $r9;

        <org.apache.xmlbeans.XmlOptionCharEscapeMap: int HEXADECIMAL> = 2;

        <org.apache.xmlbeans.XmlOptionCharEscapeMap: int DECIMAL> = 1;

        <org.apache.xmlbeans.XmlOptionCharEscapeMap: int PREDEF_ENTITY> = 0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <org.apache.xmlbeans.XmlOptionCharEscapeMap: java.util.HashMap _predefEntities> = $r0;

        $r2 = <org.apache.xmlbeans.XmlOptionCharEscapeMap: java.util.HashMap _predefEntities>;

        $r1 = new java.lang.Character;

        specialinvoke $r1.<java.lang.Character: void <init>(char)>(60);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, "&lt;");

        $r4 = <org.apache.xmlbeans.XmlOptionCharEscapeMap: java.util.HashMap _predefEntities>;

        $r3 = new java.lang.Character;

        specialinvoke $r3.<java.lang.Character: void <init>(char)>(62);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "&gt;");

        $r6 = <org.apache.xmlbeans.XmlOptionCharEscapeMap: java.util.HashMap _predefEntities>;

        $r5 = new java.lang.Character;

        specialinvoke $r5.<java.lang.Character: void <init>(char)>(38);

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, "&amp;");

        $r8 = <org.apache.xmlbeans.XmlOptionCharEscapeMap: java.util.HashMap _predefEntities>;

        $r7 = new java.lang.Character;

        specialinvoke $r7.<java.lang.Character: void <init>(char)>(39);

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, "&apos;");

        $r10 = <org.apache.xmlbeans.XmlOptionCharEscapeMap: java.util.HashMap _predefEntities>;

        $r9 = new java.lang.Character;

        specialinvoke $r9.<java.lang.Character: void <init>(char)>(34);

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, "&quot;");

        return;
    }
}
