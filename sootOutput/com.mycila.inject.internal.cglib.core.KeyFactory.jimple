public abstract class com.mycila.inject.internal.cglib.core.KeyFactory extends java.lang.Object
{
    private static final com.mycila.inject.internal.cglib.core.Signature GET_NAME;
    private static final com.mycila.inject.internal.cglib.core.Signature GET_CLASS;
    private static final com.mycila.inject.internal.cglib.core.Signature HASH_CODE;
    private static final com.mycila.inject.internal.cglib.core.Signature EQUALS;
    private static final com.mycila.inject.internal.cglib.core.Signature TO_STRING;
    private static final com.mycila.inject.internal.cglib.core.Signature APPEND_STRING;
    private static final com.mycila.inject.internal.asm.Type KEY_FACTORY;
    private static final int[] PRIMES;
    public static final com.mycila.inject.internal.cglib.core.Customizer CLASS_BY_NAME;
    public static final com.mycila.inject.internal.cglib.core.Customizer OBJECT_BY_CLASS;
    static java.lang.Class class$net$sf$cglib$core$KeyFactory;
    static java.lang.Class class$java$lang$Object;

    protected void <init>()
    {
        com.mycila.inject.internal.cglib.core.KeyFactory r0;

        r0 := @this: com.mycila.inject.internal.cglib.core.KeyFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.mycila.inject.internal.cglib.core.KeyFactory create(java.lang.Class)
    {
        java.lang.Class r0;
        com.mycila.inject.internal.cglib.core.KeyFactory $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <com.mycila.inject.internal.cglib.core.KeyFactory: com.mycila.inject.internal.cglib.core.KeyFactory create(java.lang.Class,com.mycila.inject.internal.cglib.core.Customizer)>(r0, null);

        return $r1;
    }

    public static com.mycila.inject.internal.cglib.core.KeyFactory create(java.lang.Class, com.mycila.inject.internal.cglib.core.Customizer)
    {
        com.mycila.inject.internal.cglib.core.KeyFactory $r3;
        java.lang.Class r0;
        java.lang.ClassLoader $r1;
        com.mycila.inject.internal.cglib.core.Customizer r2;

        r0 := @parameter0: java.lang.Class;

        r2 := @parameter1: com.mycila.inject.internal.cglib.core.Customizer;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r3 = staticinvoke <com.mycila.inject.internal.cglib.core.KeyFactory: com.mycila.inject.internal.cglib.core.KeyFactory create(java.lang.ClassLoader,java.lang.Class,com.mycila.inject.internal.cglib.core.Customizer)>($r1, r0, r2);

        return $r3;
    }

    public static com.mycila.inject.internal.cglib.core.KeyFactory create(java.lang.ClassLoader, java.lang.Class, com.mycila.inject.internal.cglib.core.Customizer)
    {
        com.mycila.inject.internal.cglib.core.KeyFactory $r4;
        com.mycila.inject.internal.cglib.core.KeyFactory$Generator $r0;
        java.lang.Class r1;
        java.lang.ClassLoader r3;
        com.mycila.inject.internal.cglib.core.Customizer r2;

        r3 := @parameter0: java.lang.ClassLoader;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: com.mycila.inject.internal.cglib.core.Customizer;

        $r0 = new com.mycila.inject.internal.cglib.core.KeyFactory$Generator;

        specialinvoke $r0.<com.mycila.inject.internal.cglib.core.KeyFactory$Generator: void <init>()>();

        virtualinvoke $r0.<com.mycila.inject.internal.cglib.core.KeyFactory$Generator: void setInterface(java.lang.Class)>(r1);

        virtualinvoke $r0.<com.mycila.inject.internal.cglib.core.KeyFactory$Generator: void setCustomizer(com.mycila.inject.internal.cglib.core.Customizer)>(r2);

        virtualinvoke $r0.<com.mycila.inject.internal.cglib.core.KeyFactory$Generator: void setClassLoader(java.lang.ClassLoader)>(r3);

        $r4 = virtualinvoke $r0.<com.mycila.inject.internal.cglib.core.KeyFactory$Generator: com.mycila.inject.internal.cglib.core.KeyFactory create()>();

        return $r4;
    }

    static com.mycila.inject.internal.cglib.core.Signature access$000()
    {
        com.mycila.inject.internal.cglib.core.Signature $r0;

        $r0 = <com.mycila.inject.internal.cglib.core.KeyFactory: com.mycila.inject.internal.cglib.core.Signature GET_NAME>;

        return $r0;
    }

    static com.mycila.inject.internal.cglib.core.Signature access$100()
    {
        com.mycila.inject.internal.cglib.core.Signature $r0;

        $r0 = <com.mycila.inject.internal.cglib.core.KeyFactory: com.mycila.inject.internal.cglib.core.Signature GET_CLASS>;

        return $r0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static com.mycila.inject.internal.asm.Type access$200()
    {
        com.mycila.inject.internal.asm.Type $r0;

        $r0 = <com.mycila.inject.internal.cglib.core.KeyFactory: com.mycila.inject.internal.asm.Type KEY_FACTORY>;

        return $r0;
    }

    static com.mycila.inject.internal.cglib.core.Signature access$300()
    {
        com.mycila.inject.internal.cglib.core.Signature $r0;

        $r0 = <com.mycila.inject.internal.cglib.core.KeyFactory: com.mycila.inject.internal.cglib.core.Signature HASH_CODE>;

        return $r0;
    }

    static int[] access$400()
    {
        int[] $r0;

        $r0 = <com.mycila.inject.internal.cglib.core.KeyFactory: int[] PRIMES>;

        return $r0;
    }

    static com.mycila.inject.internal.cglib.core.Signature access$500()
    {
        com.mycila.inject.internal.cglib.core.Signature $r0;

        $r0 = <com.mycila.inject.internal.cglib.core.KeyFactory: com.mycila.inject.internal.cglib.core.Signature EQUALS>;

        return $r0;
    }

    static com.mycila.inject.internal.cglib.core.Signature access$600()
    {
        com.mycila.inject.internal.cglib.core.Signature $r0;

        $r0 = <com.mycila.inject.internal.cglib.core.KeyFactory: com.mycila.inject.internal.cglib.core.Signature TO_STRING>;

        return $r0;
    }

    static com.mycila.inject.internal.cglib.core.Signature access$700()
    {
        com.mycila.inject.internal.cglib.core.Signature $r0;

        $r0 = <com.mycila.inject.internal.cglib.core.KeyFactory: com.mycila.inject.internal.cglib.core.Signature APPEND_STRING>;

        return $r0;
    }

    static void <clinit>()
    {
        com.mycila.inject.internal.cglib.core.KeyFactory$2 $r11;
        com.mycila.inject.internal.cglib.core.KeyFactory$1 $r10;
        com.mycila.inject.internal.cglib.core.Signature $r0, $r1, $r2, $r3, $r4, $r5;
        com.mycila.inject.internal.asm.Type $r6;
        int[] $r7;
        int $i1, $i3;

        $r0 = staticinvoke <com.mycila.inject.internal.cglib.core.TypeUtils: com.mycila.inject.internal.cglib.core.Signature parseSignature(java.lang.String)>("String getName()");

        <com.mycila.inject.internal.cglib.core.KeyFactory: com.mycila.inject.internal.cglib.core.Signature GET_NAME> = $r0;

        $r1 = staticinvoke <com.mycila.inject.internal.cglib.core.TypeUtils: com.mycila.inject.internal.cglib.core.Signature parseSignature(java.lang.String)>("Class getClass()");

        <com.mycila.inject.internal.cglib.core.KeyFactory: com.mycila.inject.internal.cglib.core.Signature GET_CLASS> = $r1;

        $r2 = staticinvoke <com.mycila.inject.internal.cglib.core.TypeUtils: com.mycila.inject.internal.cglib.core.Signature parseSignature(java.lang.String)>("int hashCode()");

        <com.mycila.inject.internal.cglib.core.KeyFactory: com.mycila.inject.internal.cglib.core.Signature HASH_CODE> = $r2;

        $r3 = staticinvoke <com.mycila.inject.internal.cglib.core.TypeUtils: com.mycila.inject.internal.cglib.core.Signature parseSignature(java.lang.String)>("boolean equals(Object)");

        <com.mycila.inject.internal.cglib.core.KeyFactory: com.mycila.inject.internal.cglib.core.Signature EQUALS> = $r3;

        $r4 = staticinvoke <com.mycila.inject.internal.cglib.core.TypeUtils: com.mycila.inject.internal.cglib.core.Signature parseSignature(java.lang.String)>("String toString()");

        <com.mycila.inject.internal.cglib.core.KeyFactory: com.mycila.inject.internal.cglib.core.Signature TO_STRING> = $r4;

        $r5 = staticinvoke <com.mycila.inject.internal.cglib.core.TypeUtils: com.mycila.inject.internal.cglib.core.Signature parseSignature(java.lang.String)>("StringBuffer append(String)");

        <com.mycila.inject.internal.cglib.core.KeyFactory: com.mycila.inject.internal.cglib.core.Signature APPEND_STRING> = $r5;

        $r6 = staticinvoke <com.mycila.inject.internal.cglib.core.TypeUtils: com.mycila.inject.internal.asm.Type parseType(java.lang.String)>("com.mycila.inject.internal.cglib.core.KeyFactory");

        <com.mycila.inject.internal.cglib.core.KeyFactory: com.mycila.inject.internal.asm.Type KEY_FACTORY> = $r6;

        $r7 = newarray (int)[51];

        $r7[0] = 11;

        $r7[1] = 73;

        $r7[2] = 179;

        $r7[3] = 331;

        $r7[4] = 521;

        $r7[5] = 787;

        $r7[6] = 1213;

        $r7[7] = 1823;

        $r7[8] = 2609;

        $r7[9] = 3691;

        $r7[10] = 5189;

        $r7[11] = 7247;

        $r7[12] = 10037;

        $r7[13] = 13931;

        $r7[14] = 19289;

        $r7[15] = 26627;

        $i1 = (int) 36683;

        $r7[16] = $i1;

        $i3 = (int) 50441;

        $r7[17] = $i3;

        $r7[18] = 69403;

        $r7[19] = 95401;

        $r7[20] = 131129;

        $r7[21] = 180179;

        $r7[22] = 247501;

        $r7[23] = 340057;

        $r7[24] = 467063;

        $r7[25] = 641371;

        $r7[26] = 880603;

        $r7[27] = 1209107;

        $r7[28] = 1660097;

        $r7[29] = 2279161;

        $r7[30] = 3129011;

        $r7[31] = 4295723;

        $r7[32] = 5897291;

        $r7[33] = 8095873;

        $r7[34] = 11114263;

        $r7[35] = 15257791;

        $r7[36] = 20946017;

        $r7[37] = 28754629;

        $r7[38] = 39474179;

        $r7[39] = 54189869;

        $r7[40] = 74391461;

        $r7[41] = 102123817;

        $r7[42] = 140194277;

        $r7[43] = 192456917;

        $r7[44] = 264202273;

        $r7[45] = 362693231;

        $r7[46] = 497900099;

        $r7[47] = 683510293;

        $r7[48] = 938313161;

        $r7[49] = 1288102441;

        $r7[50] = 1768288259;

        <com.mycila.inject.internal.cglib.core.KeyFactory: int[] PRIMES> = $r7;

        $r10 = new com.mycila.inject.internal.cglib.core.KeyFactory$1;

        specialinvoke $r10.<com.mycila.inject.internal.cglib.core.KeyFactory$1: void <init>()>();

        <com.mycila.inject.internal.cglib.core.KeyFactory: com.mycila.inject.internal.cglib.core.Customizer CLASS_BY_NAME> = $r10;

        $r11 = new com.mycila.inject.internal.cglib.core.KeyFactory$2;

        specialinvoke $r11.<com.mycila.inject.internal.cglib.core.KeyFactory$2: void <init>()>();

        <com.mycila.inject.internal.cglib.core.KeyFactory: com.mycila.inject.internal.cglib.core.Customizer OBJECT_BY_CLASS> = $r11;

        return;
    }
}
