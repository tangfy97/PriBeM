final class org.springframework.format.support.FormattingConversionService$FieldFormatterKey extends java.lang.Object
{
    private final java.lang.'annotation'.Annotation 'annotation';
    private final java.lang.Class fieldType;

    public void <init>(java.lang.'annotation'.Annotation, java.lang.Class)
    {
        java.lang.'annotation'.Annotation r1;
        java.lang.Class r2;
        org.springframework.format.support.FormattingConversionService$FieldFormatterKey r0;

        r0 := @this: org.springframework.format.support.FormattingConversionService$FieldFormatterKey;

        r1 := @parameter0: java.lang.'annotation'.Annotation;

        r2 := @parameter1: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.format.support.FormattingConversionService$FieldFormatterKey: java.lang.'annotation'.Annotation 'annotation'> = r1;

        r0.<org.springframework.format.support.FormattingConversionService$FieldFormatterKey: java.lang.Class fieldType> = r2;

        return;
    }

    public java.lang.'annotation'.Annotation getAnnotation()
    {
        java.lang.'annotation'.Annotation $r1;
        org.springframework.format.support.FormattingConversionService$FieldFormatterKey r0;

        r0 := @this: org.springframework.format.support.FormattingConversionService$FieldFormatterKey;

        $r1 = r0.<org.springframework.format.support.FormattingConversionService$FieldFormatterKey: java.lang.'annotation'.Annotation 'annotation'>;

        return $r1;
    }

    public java.lang.Class getFieldType()
    {
        java.lang.Class $r1;
        org.springframework.format.support.FormattingConversionService$FieldFormatterKey r0;

        r0 := @this: org.springframework.format.support.FormattingConversionService$FieldFormatterKey;

        $r1 = r0.<org.springframework.format.support.FormattingConversionService$FieldFormatterKey: java.lang.Class fieldType>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.springframework.format.support.FormattingConversionService$FieldFormatterKey r1, r2;
        java.lang.'annotation'.Annotation $r3, $r4;
        java.lang.Object r0;
        java.lang.Class $r5, $r6;
        boolean $z0, $z1, $z2;

        r2 := @this: org.springframework.format.support.FormattingConversionService$FieldFormatterKey;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.springframework.format.support.FormattingConversionService$FieldFormatterKey;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (org.springframework.format.support.FormattingConversionService$FieldFormatterKey) r0;

        $r4 = r2.<org.springframework.format.support.FormattingConversionService$FieldFormatterKey: java.lang.'annotation'.Annotation 'annotation'>;

        $r3 = r1.<org.springframework.format.support.FormattingConversionService$FieldFormatterKey: java.lang.'annotation'.Annotation 'annotation'>;

        $z1 = interfaceinvoke $r4.<java.lang.'annotation'.Annotation: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $r6 = r2.<org.springframework.format.support.FormattingConversionService$FieldFormatterKey: java.lang.Class fieldType>;

        $r5 = r1.<org.springframework.format.support.FormattingConversionService$FieldFormatterKey: java.lang.Class fieldType>;

        $z2 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public int hashCode()
    {
        org.springframework.format.support.FormattingConversionService$FieldFormatterKey r0;
        java.lang.'annotation'.Annotation $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Class $r2;

        r0 := @this: org.springframework.format.support.FormattingConversionService$FieldFormatterKey;

        $r1 = r0.<org.springframework.format.support.FormattingConversionService$FieldFormatterKey: java.lang.'annotation'.Annotation 'annotation'>;

        $i0 = interfaceinvoke $r1.<java.lang.'annotation'.Annotation: int hashCode()>();

        $r2 = r0.<org.springframework.format.support.FormattingConversionService$FieldFormatterKey: java.lang.Class fieldType>;

        $i1 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        $i2 = 29 * $i1;

        $i3 = $i0 + $i2;

        return $i3;
    }
}
