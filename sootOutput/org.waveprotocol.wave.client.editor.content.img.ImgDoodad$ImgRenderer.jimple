class org.waveprotocol.wave.client.editor.content.img.ImgDoodad$ImgRenderer extends org.waveprotocol.wave.client.editor.RenderingMutationHandler
{

    private void <init>()
    {
        org.waveprotocol.wave.client.editor.content.img.ImgDoodad$ImgRenderer r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.img.ImgDoodad$ImgRenderer;

        specialinvoke r0.<org.waveprotocol.wave.client.editor.RenderingMutationHandler: void <init>()>();

        return;
    }

    public com.google.gwt.dom.client.Element createDomImpl(org.waveprotocol.wave.client.editor.content.Renderer$Renderable)
    {
        org.waveprotocol.wave.client.editor.content.img.ImgDoodad$ImgRenderer r2;
        org.waveprotocol.wave.client.editor.content.Renderer$Renderable r3;
        com.google.gwt.dom.client.Element $r4, $r5;
        com.google.gwt.dom.client.Document $r0;
        com.google.gwt.dom.client.ImageElement $r1;

        r2 := @this: org.waveprotocol.wave.client.editor.content.img.ImgDoodad$ImgRenderer;

        r3 := @parameter0: org.waveprotocol.wave.client.editor.content.Renderer$Renderable;

        $r0 = staticinvoke <com.google.gwt.dom.client.Document: com.google.gwt.dom.client.Document get()>();

        $r1 = virtualinvoke $r0.<com.google.gwt.dom.client.Document: com.google.gwt.dom.client.ImageElement createImageElement()>();

        $r4 = (com.google.gwt.dom.client.Element) $r1;

        staticinvoke <org.waveprotocol.wave.client.common.util.DomHelper: com.google.gwt.dom.client.Element setContentEditable(com.google.gwt.dom.client.Element,boolean,boolean)>($r4, 0, 0);

        $r5 = (com.google.gwt.dom.client.Element) $r1;

        return $r5;
    }

    public void onActivationStart(org.waveprotocol.wave.client.editor.content.ContentElement)
    {
        org.waveprotocol.wave.client.editor.content.ContentElement r1;
        org.waveprotocol.wave.client.editor.content.img.ImgDoodad$ImgRenderer r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.img.ImgDoodad$ImgRenderer;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.img.ImgDoodad$ImgRenderer: void fanoutAttrs(org.waveprotocol.wave.client.editor.content.ContentElement)>(r1);

        return;
    }

    public void onAttributeModified(org.waveprotocol.wave.client.editor.content.ContentElement, java.lang.String, java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.model.util.ReadableStringSet $r0;
        org.waveprotocol.wave.client.editor.content.img.ImgDoodad$ImgRenderer r6;
        com.google.gwt.dom.client.Element $r4, $r5;
        org.waveprotocol.wave.client.editor.content.ContentElement r3;
        java.lang.String r1, r2, r7;
        boolean $z0;

        r6 := @this: org.waveprotocol.wave.client.editor.content.img.ImgDoodad$ImgRenderer;

        r3 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        r1 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        $r0 = staticinvoke <org.waveprotocol.wave.client.editor.content.img.ImgDoodad: org.waveprotocol.wave.model.util.ReadableStringSet access$100()>();

        $z0 = interfaceinvoke $r0.<org.waveprotocol.wave.model.util.ReadableStringSet: boolean contains(java.lang.String)>(r1);

        if $z0 == 0 goto label2;

        if r2 != null goto label1;

        $r5 = virtualinvoke r3.<org.waveprotocol.wave.client.editor.content.ContentElement: com.google.gwt.dom.client.Element getImplNodelet()>();

        virtualinvoke $r5.<com.google.gwt.dom.client.Element: void removeAttribute(java.lang.String)>(r1);

        goto label2;

     label1:
        $r4 = virtualinvoke r3.<org.waveprotocol.wave.client.editor.content.ContentElement: com.google.gwt.dom.client.Element getImplNodelet()>();

        virtualinvoke $r4.<com.google.gwt.dom.client.Element: void setAttribute(java.lang.String,java.lang.String)>(r1, r2);

     label2:
        return;
    }

    public volatile void onAttributeModified(java.lang.Object, java.lang.String, java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.client.editor.content.img.ImgDoodad$ImgRenderer r0;
        java.lang.Object r1;
        org.waveprotocol.wave.client.editor.content.ContentElement $r5;
        java.lang.String r2, r3, r4;

        r0 := @this: org.waveprotocol.wave.client.editor.content.img.ImgDoodad$ImgRenderer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r5 = (org.waveprotocol.wave.client.editor.content.ContentElement) r1;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.img.ImgDoodad$ImgRenderer: void onAttributeModified(org.waveprotocol.wave.client.editor.content.ContentElement,java.lang.String,java.lang.String,java.lang.String)>($r5, r2, r3, r4);

        return;
    }

    public volatile void onActivationStart(java.lang.Object)
    {
        java.lang.Object r1;
        org.waveprotocol.wave.client.editor.content.ContentElement $r2;
        org.waveprotocol.wave.client.editor.content.img.ImgDoodad$ImgRenderer r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.img.ImgDoodad$ImgRenderer;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.client.editor.content.ContentElement) r1;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.img.ImgDoodad$ImgRenderer: void onActivationStart(org.waveprotocol.wave.client.editor.content.ContentElement)>($r2);

        return;
    }

    void <init>(org.waveprotocol.wave.client.editor.content.img.ImgDoodad$1)
    {
        org.waveprotocol.wave.client.editor.content.img.ImgDoodad$1 r1;
        org.waveprotocol.wave.client.editor.content.img.ImgDoodad$ImgRenderer r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.img.ImgDoodad$ImgRenderer;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.img.ImgDoodad$1;

        specialinvoke r0.<org.waveprotocol.wave.client.editor.content.img.ImgDoodad$ImgRenderer: void <init>()>();

        return;
    }
}
