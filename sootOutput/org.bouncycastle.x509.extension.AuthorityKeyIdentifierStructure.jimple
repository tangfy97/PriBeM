public class org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure extends org.bouncycastle.asn1.x509.AuthorityKeyIdentifier
{

    public void <init>(byte[]) throws java.io.IOException
    {
        byte[] r1;
        org.bouncycastle.asn1.ASN1Sequence $r3;
        org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure r0;
        org.bouncycastle.asn1.ASN1Object $r2;

        r0 := @this: org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure;

        r1 := @parameter0: byte[];

        $r2 = staticinvoke <org.bouncycastle.x509.extension.X509ExtensionUtil: org.bouncycastle.asn1.ASN1Object fromExtensionValue(byte[])>(r1);

        $r3 = (org.bouncycastle.asn1.ASN1Sequence) $r2;

        specialinvoke r0.<org.bouncycastle.asn1.x509.AuthorityKeyIdentifier: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r3);

        return;
    }

    private static org.bouncycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate) throws java.security.cert.CertificateParsingException
    {
        java.security.cert.X509Certificate r0;
        byte[] $r5, $r9, $r19, $r29;
        org.bouncycastle.asn1.ASN1Sequence $r11, $r16, $r23, $r31, $r36;
        org.bouncycastle.asn1.x509.SubjectPublicKeyInfo $r6, $r26;
        org.bouncycastle.asn1.ASN1OctetString r44;
        java.math.BigInteger $r14, $r21, $r34;
        org.bouncycastle.asn1.ASN1Object $r17;
        org.bouncycastle.asn1.DERObjectIdentifier $r3;
        java.lang.Exception $r37;
        org.bouncycastle.asn1.x509.GeneralName $r1, $r24;
        java.lang.StringBuilder $r39, $r40, $r42;
        org.bouncycastle.jce.X509Principal $r2, $r25;
        org.bouncycastle.asn1.x509.AuthorityKeyIdentifier $r12, $r18, $r32;
        org.bouncycastle.asn1.DERObject $r10, $r15, $r22, $r30, $r35;
        java.security.cert.CertificateParsingException $r38;
        org.bouncycastle.asn1.ASN1InputStream $r7, $r27;
        int $i0;
        java.lang.String $r4, $r41, $r43;
        java.security.PublicKey $r8, $r28;
        org.bouncycastle.asn1.x509.GeneralNames $r13, $r20, $r33;

        r0 := @parameter0: java.security.cert.X509Certificate;

     label1:
        $i0 = virtualinvoke r0.<java.security.cert.X509Certificate: int getVersion()>();

        if $i0 == 3 goto label3;

        $r24 = new org.bouncycastle.asn1.x509.GeneralName;

        $r25 = staticinvoke <org.bouncycastle.jce.PrincipalUtil: org.bouncycastle.jce.X509Principal getIssuerX509Principal(java.security.cert.X509Certificate)>(r0);

        specialinvoke $r24.<org.bouncycastle.asn1.x509.GeneralName: void <init>(org.bouncycastle.asn1.x509.X509Name)>($r25);

        $r26 = new org.bouncycastle.asn1.x509.SubjectPublicKeyInfo;

        $r27 = new org.bouncycastle.asn1.ASN1InputStream;

        $r28 = virtualinvoke r0.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        $r29 = interfaceinvoke $r28.<java.security.PublicKey: byte[] getEncoded()>();

        specialinvoke $r27.<org.bouncycastle.asn1.ASN1InputStream: void <init>(byte[])>($r29);

        $r30 = virtualinvoke $r27.<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.DERObject readObject()>();

        $r31 = (org.bouncycastle.asn1.ASN1Sequence) $r30;

        specialinvoke $r26.<org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r31);

        $r32 = new org.bouncycastle.asn1.x509.AuthorityKeyIdentifier;

        $r33 = new org.bouncycastle.asn1.x509.GeneralNames;

        specialinvoke $r33.<org.bouncycastle.asn1.x509.GeneralNames: void <init>(org.bouncycastle.asn1.x509.GeneralName)>($r24);

        $r34 = virtualinvoke r0.<java.security.cert.X509Certificate: java.math.BigInteger getSerialNumber()>();

        specialinvoke $r32.<org.bouncycastle.asn1.x509.AuthorityKeyIdentifier: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo,org.bouncycastle.asn1.x509.GeneralNames,java.math.BigInteger)>($r26, $r33, $r34);

        $r35 = virtualinvoke $r32.<org.bouncycastle.asn1.x509.AuthorityKeyIdentifier: org.bouncycastle.asn1.DERObject toASN1Object()>();

        $r36 = (org.bouncycastle.asn1.ASN1Sequence) $r35;

     label2:
        return $r36;

     label3:
        $r1 = new org.bouncycastle.asn1.x509.GeneralName;

        $r2 = staticinvoke <org.bouncycastle.jce.PrincipalUtil: org.bouncycastle.jce.X509Principal getIssuerX509Principal(java.security.cert.X509Certificate)>(r0);

        specialinvoke $r1.<org.bouncycastle.asn1.x509.GeneralName: void <init>(org.bouncycastle.asn1.x509.X509Name)>($r2);

        $r3 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier SubjectKeyIdentifier>;

        $r4 = virtualinvoke $r3.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $r5 = virtualinvoke r0.<java.security.cert.X509Certificate: byte[] getExtensionValue(java.lang.String)>($r4);

        if $r5 == null goto label5;

        $r17 = staticinvoke <org.bouncycastle.x509.extension.X509ExtensionUtil: org.bouncycastle.asn1.ASN1Object fromExtensionValue(byte[])>($r5);

        r44 = (org.bouncycastle.asn1.ASN1OctetString) $r17;

        $r18 = new org.bouncycastle.asn1.x509.AuthorityKeyIdentifier;

        $r19 = virtualinvoke r44.<org.bouncycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        $r20 = new org.bouncycastle.asn1.x509.GeneralNames;

        specialinvoke $r20.<org.bouncycastle.asn1.x509.GeneralNames: void <init>(org.bouncycastle.asn1.x509.GeneralName)>($r1);

        $r21 = virtualinvoke r0.<java.security.cert.X509Certificate: java.math.BigInteger getSerialNumber()>();

        specialinvoke $r18.<org.bouncycastle.asn1.x509.AuthorityKeyIdentifier: void <init>(byte[],org.bouncycastle.asn1.x509.GeneralNames,java.math.BigInteger)>($r19, $r20, $r21);

        $r22 = virtualinvoke $r18.<org.bouncycastle.asn1.x509.AuthorityKeyIdentifier: org.bouncycastle.asn1.DERObject toASN1Object()>();

        $r23 = (org.bouncycastle.asn1.ASN1Sequence) $r22;

     label4:
        return $r23;

     label5:
        $r6 = new org.bouncycastle.asn1.x509.SubjectPublicKeyInfo;

        $r7 = new org.bouncycastle.asn1.ASN1InputStream;

        $r8 = virtualinvoke r0.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        $r9 = interfaceinvoke $r8.<java.security.PublicKey: byte[] getEncoded()>();

        specialinvoke $r7.<org.bouncycastle.asn1.ASN1InputStream: void <init>(byte[])>($r9);

        $r10 = virtualinvoke $r7.<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.DERObject readObject()>();

        $r11 = (org.bouncycastle.asn1.ASN1Sequence) $r10;

        specialinvoke $r6.<org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r11);

        $r12 = new org.bouncycastle.asn1.x509.AuthorityKeyIdentifier;

        $r13 = new org.bouncycastle.asn1.x509.GeneralNames;

        specialinvoke $r13.<org.bouncycastle.asn1.x509.GeneralNames: void <init>(org.bouncycastle.asn1.x509.GeneralName)>($r1);

        $r14 = virtualinvoke r0.<java.security.cert.X509Certificate: java.math.BigInteger getSerialNumber()>();

        specialinvoke $r12.<org.bouncycastle.asn1.x509.AuthorityKeyIdentifier: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo,org.bouncycastle.asn1.x509.GeneralNames,java.math.BigInteger)>($r6, $r13, $r14);

        $r15 = virtualinvoke $r12.<org.bouncycastle.asn1.x509.AuthorityKeyIdentifier: org.bouncycastle.asn1.DERObject toASN1Object()>();

        $r16 = (org.bouncycastle.asn1.ASN1Sequence) $r15;

     label6:
        return $r16;

     label7:
        $r37 := @caughtexception;

        $r38 = new java.security.cert.CertificateParsingException;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception extracting certificate details: ");

        $r41 = virtualinvoke $r37.<java.lang.Exception: java.lang.String toString()>();

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r38.<java.security.cert.CertificateParsingException: void <init>(java.lang.String)>($r43);

        throw $r38;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    private static org.bouncycastle.asn1.ASN1Sequence fromKey(java.security.PublicKey) throws java.security.InvalidKeyException
    {
        byte[] $r3;
        org.bouncycastle.asn1.ASN1Sequence $r5, $r8;
        org.bouncycastle.asn1.x509.SubjectPublicKeyInfo $r0;
        org.bouncycastle.asn1.x509.AuthorityKeyIdentifier $r6;
        org.bouncycastle.asn1.DERObject $r4, $r7;
        java.security.PublicKey r2;
        org.bouncycastle.asn1.ASN1InputStream $r1;
        java.lang.Exception $r9;
        java.security.InvalidKeyException $r10;
        java.lang.StringBuilder $r11, $r12, $r13;
        java.lang.String $r14;

        r2 := @parameter0: java.security.PublicKey;

     label1:
        $r0 = new org.bouncycastle.asn1.x509.SubjectPublicKeyInfo;

        $r1 = new org.bouncycastle.asn1.ASN1InputStream;

        $r3 = interfaceinvoke r2.<java.security.PublicKey: byte[] getEncoded()>();

        specialinvoke $r1.<org.bouncycastle.asn1.ASN1InputStream: void <init>(byte[])>($r3);

        $r4 = virtualinvoke $r1.<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.DERObject readObject()>();

        $r5 = (org.bouncycastle.asn1.ASN1Sequence) $r4;

        specialinvoke $r0.<org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r5);

        $r6 = new org.bouncycastle.asn1.x509.AuthorityKeyIdentifier;

        specialinvoke $r6.<org.bouncycastle.asn1.x509.AuthorityKeyIdentifier: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>($r0);

        $r7 = virtualinvoke $r6.<org.bouncycastle.asn1.x509.AuthorityKeyIdentifier: org.bouncycastle.asn1.DERObject toASN1Object()>();

        $r8 = (org.bouncycastle.asn1.ASN1Sequence) $r7;

     label2:
        return $r8;

     label3:
        $r9 := @caughtexception;

        $r10 = new java.security.InvalidKeyException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t process key: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r14);

        throw $r10;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void <init>(java.security.cert.X509Certificate) throws java.security.cert.CertificateParsingException
    {
        java.security.cert.X509Certificate r1;
        org.bouncycastle.asn1.ASN1Sequence $r2;
        org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure r0;

        r0 := @this: org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure;

        r1 := @parameter0: java.security.cert.X509Certificate;

        $r2 = staticinvoke <org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure: org.bouncycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate)>(r1);

        specialinvoke r0.<org.bouncycastle.asn1.x509.AuthorityKeyIdentifier: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r2);

        return;
    }

    public void <init>(java.security.PublicKey) throws java.security.InvalidKeyException
    {
        java.security.PublicKey r1;
        org.bouncycastle.asn1.ASN1Sequence $r2;
        org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure r0;

        r0 := @this: org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure;

        r1 := @parameter0: java.security.PublicKey;

        $r2 = staticinvoke <org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure: org.bouncycastle.asn1.ASN1Sequence fromKey(java.security.PublicKey)>(r1);

        specialinvoke r0.<org.bouncycastle.asn1.x509.AuthorityKeyIdentifier: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r2);

        return;
    }
}
